{"files":[{"patch":"@@ -27,1 +27,1 @@\n-import hat.backend.codebuilders.C99HATKernelBuilder;\n+import hat.codebuilders.C99HATKernelBuilder;\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/java\/hat\/backend\/ffi\/CudaHATKernelBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import hat.text.CodeBuilder;\n+import hat.codebuilders.CodeBuilder;\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/java\/hat\/backend\/ffi\/PTXHATKernelBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import hat.backend.codebuilders.C99HATKernelBuilder;\n+import hat.codebuilders.C99HATKernelBuilder;\n","filename":"hat\/backends\/ffi\/opencl\/src\/main\/java\/hat\/backend\/ffi\/OpenCLHATKernelBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import hat.backend.codebuilders.C99HATKernelBuilder;\n+import hat.codebuilders.C99HATKernelBuilder;\n","filename":"hat\/backends\/ffi\/shared\/src\/main\/java\/hat\/backend\/ffi\/C99FFIBackend.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import hat.backend.codebuilders.HATCodeBuilder;\n+import hat.codebuilders.HATCodeBuilder;\n@@ -33,2 +33,0 @@\n-import java.util.concurrent.Callable;\n-import java.util.function.Consumer;\n","filename":"hat\/backends\/ffi\/shared\/src\/main\/java\/hat\/backend\/ffi\/Config.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import hat.backend.codebuilders.C99HATKernelBuilder;\n+import hat.codebuilders.C99HATKernelBuilder;\n@@ -32,2 +32,0 @@\n-import java.lang.invoke.MethodHandles;\n-\n","filename":"hat\/backends\/jextracted\/opencl\/src\/main\/java\/hat\/backend\/jextracted\/OpenCLHatKernelBuilder.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import hat.backend.codebuilders.C99HATKernelBuilder;\n+import hat.codebuilders.C99HATKernelBuilder;\n","filename":"hat\/backends\/jextracted\/shared\/src\/main\/java\/hat\/backend\/jextracted\/C99JExtractedBackend.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-import jdk.incubator.code.extern.ExternalizedTypeElement;\n@@ -46,0 +45,1 @@\n+import jdk.incubator.code.extern.ExternalizedTypeElement;\n@@ -300,1 +300,1 @@\n-    @OpFactory.OpDeclaration(HatPtrOp.NAME)\n+    \/\/@OpFactory.OpDeclaration(HatPtrOp.NAME)\n@@ -394,1 +394,1 @@\n-    @OpFactory.OpDeclaration(HatPtrLoadValue.NAME)\n+    \/\/@OpFactory.OpDeclaration(HatPtrLoadValue.NAME)\n@@ -415,1 +415,1 @@\n-    @OpFactory.OpDeclaration(HatPtrStoreValue.NAME)\n+    \/\/@OpFactory.OpDeclaration(HatPtrStoreValue.NAME)\n","filename":"hat\/core\/src\/main\/java\/hat\/OpsAndTypes.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import hat.text.CodeBuilder;\n+import hat.codebuilders.CodeBuilder;\n","filename":"hat\/core\/src\/main\/java\/hat\/buffer\/SchemaBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-package hat.backend.codebuilders;\n+package hat.codebuilders;\n","filename":"hat\/core\/src\/main\/java\/hat\/codebuilders\/C99HATComputeBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/core\/src\/main\/java\/hat\/backend\/codebuilders\/C99HATComputeBuilder.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package hat.backend.codebuilders;\n+package hat.codebuilders;\n@@ -40,1 +40,0 @@\n-import java.lang.invoke.MethodHandles;\n","filename":"hat\/core\/src\/main\/java\/hat\/codebuilders\/C99HATKernelBuilder.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"hat\/core\/src\/main\/java\/hat\/backend\/codebuilders\/C99HATKernelBuilder.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package hat.text;\n+package hat.codebuilders;\n","filename":"hat\/core\/src\/main\/java\/hat\/codebuilders\/CodeBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/core\/src\/main\/java\/hat\/text\/CodeBuilder.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package hat.backend.codebuilders;\n+package hat.codebuilders;\n@@ -55,1 +55,0 @@\n-import hat.text.CodeBuilder;\n","filename":"hat\/core\/src\/main\/java\/hat\/codebuilders\/HATCodeBuilder.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"hat\/core\/src\/main\/java\/hat\/backend\/codebuilders\/HATCodeBuilder.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package hat.backend.codebuilders;\n+package hat.codebuilders;\n@@ -61,1 +61,0 @@\n-import java.lang.invoke.MethodHandles;\n@@ -100,1 +99,1 @@\n-            case JavaOp.JavaWhileOp o -> 0;\n+            case JavaOp.WhileOp o -> 0;\n@@ -122,3 +121,3 @@\n-            case JavaOp.JavaConditionalAndOp o -> 14;\n-            case JavaOp.JavaConditionalOrOp o -> 15;\n-            case JavaOp.JavaConditionalExpressionOp o -> 18;\n+            case JavaOp.ConditionalAndOp o -> 14;\n+            case JavaOp.ConditionalOrOp o -> 15;\n+            case JavaOp.ConditionalExpressionOp o -> 18;\n@@ -232,2 +231,2 @@\n-            case JavaOp.JavaConditionalAndOp o -> condAnd();\n-            case JavaOp.JavaConditionalOrOp o -> condOr();\n+            case JavaOp.ConditionalAndOp o -> condAnd();\n+            case JavaOp.ConditionalOrOp o -> condOr();\n","filename":"hat\/core\/src\/main\/java\/hat\/codebuilders\/HATCodeBuilderWithContext.java","additions":7,"deletions":8,"binary":false,"changes":15,"previous_filename":"hat\/core\/src\/main\/java\/hat\/backend\/codebuilders\/HATCodeBuilderWithContext.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package hat.text;\n+package hat.codebuilders;\n","filename":"hat\/core\/src\/main\/java\/hat\/codebuilders\/TextBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/core\/src\/main\/java\/hat\/text\/TextBuilder.java","status":"renamed"},{"patch":"@@ -32,2 +32,2 @@\n-public class ForOpWrapper extends LoopOpWrapper<JavaOp.JavaForOp> {\n-    ForOpWrapper( MethodHandles.Lookup lookup,JavaOp.JavaForOp op) {\n+public class ForOpWrapper extends LoopOpWrapper<JavaOp.ForOp> {\n+    ForOpWrapper( MethodHandles.Lookup lookup,JavaOp.ForOp op) {\n","filename":"hat\/core\/src\/main\/java\/hat\/optools\/ForOpWrapper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n-public class IfOpWrapper extends StructuralOpWrapper<JavaOp.JavaIfOp> {\n-    public IfOpWrapper(MethodHandles.Lookup lookup,JavaOp.JavaIfOp op) {\n+public class IfOpWrapper extends StructuralOpWrapper<JavaOp.IfOp> {\n+    public IfOpWrapper(MethodHandles.Lookup lookup,JavaOp.IfOp op) {\n","filename":"hat\/core\/src\/main\/java\/hat\/optools\/IfOpWrapper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,1 @@\n-\n-import jdk.incubator.code.dialect.java.JavaOp;\n+import  jdk.incubator.code.dialect.java.JavaOp.BreakOp;\n@@ -31,2 +30,2 @@\n-public class JavaBreakOpWrapper extends OpWrapper<JavaOp.JavaBreakOp> {\n-    public JavaBreakOpWrapper(MethodHandles.Lookup lookup, JavaOp.JavaBreakOp op) {\n+public class JavaBreakOpWrapper extends OpWrapper<BreakOp> {\n+    public JavaBreakOpWrapper(MethodHandles.Lookup lookup, BreakOp op) {\n","filename":"hat\/core\/src\/main\/java\/hat\/optools\/JavaBreakOpWrapper.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n-public class JavaContinueOpWrapper extends OpWrapper<JavaOp.JavaContinueOp> {\n-    public JavaContinueOpWrapper(MethodHandles.Lookup lookup, JavaOp.JavaContinueOp op) {\n+public class JavaContinueOpWrapper extends OpWrapper<JavaOp.ContinueOp> {\n+    public JavaContinueOpWrapper(MethodHandles.Lookup lookup, JavaOp.ContinueOp op) {\n","filename":"hat\/core\/src\/main\/java\/hat\/optools\/JavaContinueOpWrapper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n-public class JavaLabeledOpWrapper extends StructuralOpWrapper<JavaOp.JavaLabeledOp> {\n-    public JavaLabeledOpWrapper( MethodHandles.Lookup lookup,JavaOp.JavaLabeledOp op) {\n+public class JavaLabeledOpWrapper extends StructuralOpWrapper<JavaOp.LabeledOp> {\n+    public JavaLabeledOpWrapper( MethodHandles.Lookup lookup,JavaOp.LabeledOp op) {\n","filename":"hat\/core\/src\/main\/java\/hat\/optools\/JavaLabeledOpWrapper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,3 +66,3 @@\n-            case JavaOp.JavaForOp $ -> (OW) new ForOpWrapper(lookup, $);\n-            case JavaOp.JavaWhileOp $ -> (OW) new WhileOpWrapper(lookup, $);\n-            case JavaOp.JavaIfOp $ -> (OW) new IfOpWrapper(lookup, $);\n+            case JavaOp.ForOp $ -> (OW) new ForOpWrapper(lookup, $);\n+            case JavaOp.WhileOp $ -> (OW) new WhileOpWrapper(lookup, $);\n+            case JavaOp.IfOp $ -> (OW) new IfOpWrapper(lookup, $);\n@@ -88,4 +88,4 @@\n-            case JavaOp.JavaConditionalExpressionOp $ -> (OW) new TernaryOpWrapper(lookup, $);\n-            case JavaOp.JavaLabeledOp $ -> (OW) new JavaLabeledOpWrapper(lookup, $);\n-            case JavaOp.JavaBreakOp $ -> (OW) new JavaBreakOpWrapper(lookup, $);\n-            case JavaOp.JavaContinueOp $ -> (OW) new JavaContinueOpWrapper(lookup, $);\n+            case JavaOp.ConditionalExpressionOp $ -> (OW) new TernaryOpWrapper(lookup, $);\n+            case JavaOp.LabeledOp $ -> (OW) new JavaLabeledOpWrapper(lookup, $);\n+            case JavaOp.BreakOp $ -> (OW) new JavaBreakOpWrapper(lookup, $);\n+            case JavaOp.ContinueOp $ -> (OW) new JavaContinueOpWrapper(lookup, $);\n","filename":"hat\/core\/src\/main\/java\/hat\/optools\/OpWrapper.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -33,2 +33,2 @@\n-public class TernaryOpWrapper extends OpWrapper<JavaOp.JavaConditionalExpressionOp> {\n-    public TernaryOpWrapper( MethodHandles.Lookup lookup,JavaOp.JavaConditionalExpressionOp op) {\n+public class TernaryOpWrapper extends OpWrapper<JavaOp.ConditionalExpressionOp> {\n+    public TernaryOpWrapper( MethodHandles.Lookup lookup,JavaOp.ConditionalExpressionOp op) {\n","filename":"hat\/core\/src\/main\/java\/hat\/optools\/TernaryOpWrapper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-public class WhileOpWrapper extends LoopOpWrapper<JavaOp.JavaWhileOp> {\n+public class WhileOpWrapper extends LoopOpWrapper<JavaOp.WhileOp> {\n@@ -34,1 +34,1 @@\n-    WhileOpWrapper( MethodHandles.Lookup lookup,JavaOp.JavaWhileOp op) {\n+    WhileOpWrapper( MethodHandles.Lookup lookup,JavaOp.WhileOp op) {\n","filename":"hat\/core\/src\/main\/java\/hat\/optools\/WhileOpWrapper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -270,1 +270,1 @@\n-    @OpFactory.OpDeclaration(PtrToMember.NAME)\n+\n@@ -367,1 +367,0 @@\n-    @OpFactory.OpDeclaration(PtrToMember.NAME)\n@@ -405,1 +404,1 @@\n-    @OpFactory.OpDeclaration(PtrToMember.NAME)\n+\n@@ -443,1 +442,0 @@\n-    @OpFactory.OpDeclaration(PtrToMember.NAME)\n","filename":"hat\/examples\/experiments\/src\/main\/java\/experiments\/LayoutExample.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import hat.backend.codebuilders.C99HATComputeBuilder;\n+import hat.codebuilders.C99HATComputeBuilder;\n@@ -37,2 +37,1 @@\n-\n-import static jdk.incubator.code.dialect.core.CoreOp._return;\n+import static jdk.incubator.code.dialect.core.CoreOp.return_;\n@@ -72,1 +71,1 @@\n-                                cblock.op(_return(cblock.op(add(i, ci))));\n+                                cblock.op(return_(cblock.op(add(i, ci))));\n@@ -77,1 +76,1 @@\n-                    block.op(_return(or));\n+                    block.op(return_(or));\n","filename":"hat\/examples\/experiments\/src\/main\/java\/experiments\/QuotedTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -287,1 +287,1 @@\n-    @OpFactory.OpDeclaration(PtrToMember.NAME)\n+    \/\/@OpFactory.OpDeclaration(PtrToMember.NAME)\n@@ -384,1 +384,1 @@\n-    @OpFactory.OpDeclaration(PtrToMember.NAME)\n+    \/\/@OpFactory.OpDeclaration(PtrToMember.NAME)\n@@ -422,1 +422,1 @@\n-    @OpFactory.OpDeclaration(PtrToMember.NAME)\n+  \/\/  @OpFactory.OpDeclaration(PtrToMember.NAME)\n@@ -460,1 +460,1 @@\n-    @OpFactory.OpDeclaration(PtrToMember.NAME)\n+  \/\/  @OpFactory.OpDeclaration(PtrToMember.NAME)\n","filename":"hat\/examples\/experiments\/src\/main\/java\/experiments\/RawLayout.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -42,0 +42,5 @@\n+        <dependency>\n+            <groupId>oracle.code<\/groupId>\n+            <artifactId>hat-example-shared<\/artifactId>\n+            <version>1.0<\/version>\n+        <\/dependency>\n","filename":"hat\/examples\/heal\/pom.xml","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-            <artifactId>hat-backend-ffi-opencl<\/artifactId>\n+            <artifactId>hat-example-shared<\/artifactId>\n","filename":"hat\/examples\/life\/pom.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,5 @@\n+        <dependency>\n+            <groupId>oracle.code<\/groupId>\n+            <artifactId>hat-example-shared<\/artifactId>\n+            <version>1.0<\/version>\n+        <\/dependency>\n","filename":"hat\/examples\/mandel\/pom.xml","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-            <artifactId>hat-clwrap<\/artifactId>\n+            <artifactId>hat-wrap-opencl<\/artifactId>\n@@ -64,1 +64,1 @@\n-            <artifactId>hat-glwrap<\/artifactId>\n+            <artifactId>hat-wrap-opengl<\/artifactId>\n","filename":"hat\/examples\/nbody\/pom.xml","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import wrap.glwrap.GLTexture;\n+import wrap.opengl.GLTexture;\n","filename":"hat\/examples\/nbody\/src\/main\/java\/nbody\/Main.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-import wrap.glwrap.GLTexture;\n-import wrap.glwrap.GLWindow;\n+import wrap.opengl.GLTexture;\n+import wrap.opengl.GLWindow;\n@@ -31,1 +31,0 @@\n-import java.io.IOException;\n","filename":"hat\/examples\/nbody\/src\/main\/java\/nbody\/NBodyGLWindow.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,3 +36,3 @@\n-import wrap.clwrap.CLPlatform;\n-import wrap.clwrap.CLWrapComputeContext;\n-import wrap.glwrap.GLTexture;\n+import wrap.opencl.CLPlatform;\n+import wrap.opencl.CLWrapComputeContext;\n+import wrap.opengl.GLTexture;\n","filename":"hat\/examples\/nbody\/src\/main\/java\/nbody\/opencl\/OpenCLNBodyGLWindow.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+        <module>shared<\/module>\n","filename":"hat\/examples\/pom.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-    <artifactId>hat-example-heal<\/artifactId>\n+    <artifactId>hat-example-shared<\/artifactId>\n","filename":"hat\/examples\/shared\/pom.xml","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/examples\/heal\/pom.xml","status":"copied"},{"patch":"","filename":"hat\/examples\/shared\/src\/main\/java\/hat\/util\/ui\/SevenSegmentDisplay.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hat\/core\/src\/main\/java\/hat\/util\/ui\/SevenSegmentDisplay.java","status":"renamed"},{"patch":"@@ -42,0 +42,5 @@\n+        <dependency>\n+            <groupId>oracle.code<\/groupId>\n+            <artifactId>hat-example-shared<\/artifactId>\n+            <version>1.0<\/version>\n+        <\/dependency>\n","filename":"hat\/examples\/violajones\/pom.xml","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-           │    ├── hat-*wrap-1.0.jar              \/\/ Wrapper jars around extracted * (clwrap, glwrap, cuwrap)\n+           │    ├── hat-wrap-*-1.0.jar              \/\/ Wrapper jars around extracted * (opencl, glwrap, opencl)\n@@ -56,1 +56,1 @@\n-           │   ├──wrap\/\n+           │   ├──shared\/\n@@ -58,1 +58,1 @@\n-           │   ├──cuwrap\/\n+           │   ├──cuda\/\n@@ -60,1 +60,1 @@\n-           │   ├──clwrap\/\n+           │   ├──opencl\/\n@@ -62,3 +62,2 @@\n-           │   ├──glwrap\/\n-           │   │   └──src\/main\/java\n-           │   └──cuwrap\/\n+           │   └──opengl\/\n+           │       └──src\/main\/java\n@@ -70,0 +69,4 @@\n+           ├──tools  : core\n+           │    ├──src\/main\/java\n+           │    └──src\/main\/test\n+           │\n@@ -73,0 +76,2 @@\n+           │    │    │    ├──src\/main\/java\n+           │    │    │    └──src\/main\/resources\n@@ -74,0 +79,2 @@\n+           │    │         ├──src\/main\/java\n+           │    │         └──src\/main\/resources\n@@ -76,0 +83,3 @@\n+           │    │         ├──src\/main\/java\n+           │    │         ├──src\/main\/native\n+           │    │         └──src\/main\/resources\n@@ -105,0 +115,3 @@\n+                ├──shared\n+                │    ├──src\/main\/java\n+                │    └──src\/main\/resources\n@@ -128,18 +141,20 @@\n-        static Script.MavenStyleProject javaSeqBackend;\n-        static Script.MavenStyleProject javaMTBackend;\n-        static Script.MavenStyleProject exampleNbody;\n-        static Script.MavenStyleProject ffiBackendCuda;\n-        static Script.MavenStyleProject ffiBackendMock;\n-        static Script.MavenStyleProject ffiBackendOpenCL;\n-        static Script.MavenStyleProject jextractedBackendCuda;\n-        static Script.MavenStyleProject jextractedBackendOpenCL;\n-        static Script.MavenStyleProject jextractedBackendShared;\n-        static Script.MavenStyleProject ffiBackendShared;\n-        static Script.MavenStyleProject cuWrap;\n-        static Script.MavenStyleProject glWrap;\n-        static Script.MavenStyleProject clWrap;\n-        static Script.MavenStyleProject jextractedCuda;\n-        static Script.MavenStyleProject jextractedOpenGL;\n-        static Script.MavenStyleProject jextractedOpenCL;\n-        static Script.MavenStyleProject wrap;\n-        static Script.MavenStyleProject hatCore;\n+        static Script.MavenStyleProject core;\n+        static Script.MavenStyleProject tools;\n+        static Script.MavenStyleProject example_shared;\n+        static Script.MavenStyleProject example_nbody;\n+        static Script.MavenStyleProject backend_ffi_shared;\n+        static Script.MavenStyleProject backend_ffi_cuda;\n+        static Script.MavenStyleProject backend_ffi_mock;\n+        static Script.MavenStyleProject backend_ffi_opencl;\n+        static Script.MavenStyleProject backend_java_seq;\n+        static Script.MavenStyleProject backend_java_mt;\n+        static Script.MavenStyleProject jextracted_cuda;\n+        static Script.MavenStyleProject jextracted_opengl;\n+        static Script.MavenStyleProject jextracted_opencl;\n+        static Script.MavenStyleProject backend_jextracted_cuda;\n+        static Script.MavenStyleProject backend_jextracted_opencl;\n+        static Script.MavenStyleProject backend_jextracted_shared;\n+        static Script.MavenStyleProject wrap_shared;\n+        static Script.MavenStyleProject wrap_cuda;\n+        static Script.MavenStyleProject wrap_opengl;\n+        static Script.MavenStyleProject wrap_opencl;\n@@ -150,3 +165,6 @@\n-    Artifacts.hatCore = buildDir.mavenStyleBuild(\n-            dir.existingDir(\"core\"),\n-            \"core-1.0.jar\"\n+    Artifacts.core = buildDir.mavenStyleBuild(\n+          dir.existingDir(\"core\"), \"core-1.0.jar\"\n+    );\n+\n+    Artifacts.tools = buildDir.mavenStyleBuild(\n+          dir.existingDir(\"tools\"), \"tools-1.0.jar\", Artifacts.core\n@@ -160,5 +178,1 @@\n-        Script.cmake($ -> $\n-                .verbose(false)\n-                .source_dir(extractionsDir)\n-                .build_dir(extractionsCmakeBuildDir)\n-        );\n+        Script.cmake($ -> $ .verbose(false) .source_dir(extractionsDir) .build_dir(extractionsCmakeBuildDir));\n@@ -166,4 +180,1 @@\n-    Script.cmake($ -> $\n-            .build(extractionsCmakeBuildDir)\n-            .target(\"extract\")\n-    );\n+    Script.cmake($ -> $ .build(extractionsCmakeBuildDir) .target(\"extract\"));\n@@ -171,5 +182,4 @@\n-    var jextractedOpenCLDir = extractionsDir.dir(\"opencl\");\n-    if (jextractedOpenCLDir.dir(\"src\").exists()) {\n-        Artifacts.jextractedOpenCL = buildDir.mavenStyleBuild(\n-                jextractedOpenCLDir,\n-                \"hat-jextracted-opencl-1.0.jar\"\n+    var jextracted_opencl_dir = extractionsDir.dir(\"opencl\");\n+    if (jextracted_opencl_dir.dir(\"src\").exists()) {\n+        Artifacts.jextracted_opencl = buildDir.mavenStyleBuild(\n+             jextracted_opencl_dir, \"hat-jextracted-opencl-1.0.jar\"\n@@ -178,1 +188,1 @@\n-        print(\"no src for jextractedOpenCL\");\n+        print(\"no src for jextracted_opencl\");\n@@ -181,5 +191,5 @@\n-    var jextractedOpenGLDir = extractionsDir.dir(\"opengl\");\n-    if (jextractedOpenGLDir.dir(\"src\").exists()) {\n-        Artifacts.jextractedOpenGL = buildDir.mavenStyleBuild(\n-                jextractedOpenGLDir,\n-                \"hat-jextracted-opengl-1.0.jar\");\n+    var jextracted_opengl_dir = extractionsDir.dir(\"opengl\");\n+    if (jextracted_opengl_dir.dir(\"src\").exists()) {\n+        Artifacts.jextracted_opengl = buildDir.mavenStyleBuild(\n+            jextracted_opengl_dir, \"hat-jextracted-opengl-1.0.jar\"\n+        );\n@@ -187,1 +197,1 @@\n-        print(\"no src for jextractedOpenGL\");\n+        print(\"no src for jextracted_opengl\");\n@@ -190,5 +200,4 @@\n-    var jextractedCudaDir = extractionsDir.dir(\"cuda\");\n-    if (jextractedCudaDir.dir(\"src\").exists()) {\n-        Artifacts.jextractedCuda = buildDir.mavenStyleBuild(\n-                jextractedCudaDir,\n-                \"hat-jextracted-cuda-1.0.jar\"\n+    var jextracted_cuda_dir = extractionsDir.dir(\"cuda\");\n+    if (jextracted_cuda_dir.dir(\"src\").exists()) {\n+        Artifacts.jextracted_cuda = buildDir.mavenStyleBuild(\n+            jextracted_cuda_dir, \"hat-jextracted-cuda-1.0.jar\"\n@@ -201,4 +210,1 @@\n-    Artifacts.wrap = buildDir.mavenStyleBuild(\n-            wrapsDir.existingDir(\"wrap\"),\n-            \"hat-wrap-1.0.jar\"\n-    );\n+    Artifacts.wrap_shared = buildDir.mavenStyleBuild( wrapsDir.existingDir(\"shared\"), \"hat-wrap-shared-1.0.jar\");\n@@ -206,5 +212,2 @@\n-    if (Artifacts.jextractedOpenCL != null){\n-    Artifacts.clWrap = buildDir.mavenStyleBuild(\n-            wrapsDir.dir(\"clwrap\"), \"hat-clwrap-1.0.jar\",\n-            Artifacts.wrap, Artifacts.hatCore, Artifacts.jextractedOpenCL\n-    );\n+    if (Artifacts.jextracted_opencl != null){\n+    Artifacts.wrap_opencl = buildDir.mavenStyleBuild( wrapsDir.dir(\"opencl\"), \"hat-opencl-1.0.jar\", Artifacts.wrap_shared, Artifacts.core, Artifacts.jextracted_opencl);\n@@ -215,1 +218,1 @@\n-\/\/  so we exclude \"^.*\/wrap\/glwrap\/GLFuncEventHandler\\\\.java$\"\n+\/\/  so we exclude \"^.*\/wrap\/opengl\/GLFuncEventHandler\\\\.java$\"\n@@ -219,1 +222,1 @@\n-\/\/  So we exclude  \"^.*\/wrap\/glwrap\/GLCallbackEventHandler\\\\.java$\"\n+\/\/  So we exclude  \"^.*\/wrap\/opengl\/GLCallbackEventHandler\\\\.java$\"\n@@ -222,2 +225,2 @@\n-if (Artifacts.jextractedOpenGL != null\n-        && Artifacts.jextractedOpenGL.jarFile.exists()) {\n+if (Artifacts.jextracted_opengl != null\n+        && Artifacts.jextracted_opengl.jarFile.exists()) {\n@@ -225,1 +228,1 @@\n-    if (!Artifacts.jextractedOpenGL.jarFile.select(Script.Regex.of(\"^.*glutKeyboardFunc\\\\$func.class$\")).isEmpty()) {\n+    if (!Artifacts.jextracted_opengl.jarFile.select(Script.Regex.of(\"^.*glutKeyboardFunc\\\\$func.class$\")).isEmpty()) {\n@@ -227,1 +230,1 @@\n-    }else if (!Artifacts.jextractedOpenGL.jarFile.select(Script.Regex.of(\"^.*glutKeyboardFunc\\\\$callback.class$\")).isEmpty()) {\n+    }else if (!Artifacts.jextracted_opengl.jarFile.select(Script.Regex.of(\"^.*glutKeyboardFunc\\\\$callback.class$\")).isEmpty()) {\n@@ -230,1 +233,1 @@\n-        println(\"We can't build glwrap unless exclude one of GLFuncEventHandler or GLCallbackEventHandler something\");\n+        println(\"We can't build wrap_opengl unless exclude one of GLFuncEventHandler or GLCallbackEventHandler something\");\n@@ -235,4 +238,2 @@\n-        Artifacts.glWrap = Script.mavenStyleProject(buildDir,\n-                wrapsDir.dir(\"glwrap\"),\n-                buildDir.jarFile(\"hat-glwrap-1.0.jar\"),\n-                Artifacts.wrap, Artifacts.hatCore, Artifacts.jextractedOpenGL\n+        Artifacts.wrap_opengl = Script.mavenStyleProject(\n+              buildDir, wrapsDir.dir(\"opengl\"), buildDir.jarFile(\"hat-wrap-opengl-1.0.jar\"), Artifacts.wrap_shared, Artifacts.core, Artifacts.jextracted_opengl\n@@ -240,1 +241,0 @@\n-\n@@ -244,4 +244,3 @@\n-    if (false && Artifacts.jextractedCuda != null ) {\n-        Artifacts.cuWrap = buildDir.mavenStyleBuild(\n-                wrapsDir.dir(\"cuwrap\"), \"hat-cuwrap-1.0.jar\",\n-                Artifacts.jextractedCuda\n+    if (false && Artifacts.jextracted_cuda != null ) {\n+        Artifacts.wrap_cuda = buildDir.mavenStyleBuild(\n+           wrapsDir.dir(\"cuda\"), \"hat-wrap-cuda-1.0.jar\", Artifacts.jextracted_cuda\n@@ -254,3 +253,2 @@\n-    Artifacts.ffiBackendShared = buildDir.mavenStyleBuild(\n-            ffiBackendsDir.existingDir(\"shared\"), \"hat-backend-ffi-shared-1.0.jar\",\n-            Artifacts.hatCore\n+    Artifacts.backend_ffi_shared = buildDir.mavenStyleBuild(\n+        ffiBackendsDir.existingDir(\"shared\"), \"hat-backend-ffi-shared-1.0.jar\", Artifacts.core\n@@ -260,4 +258,2 @@\n-        Artifacts.ffiBackendOpenCL = buildDir.mavenStyleBuild(\n-                ffiBackendDir,\n-                \"hat-backend-ffi-\"+ffiBackendDir.fileName()+ \"-1.0.jar\",\n-                Artifacts.hatCore, Artifacts.ffiBackendShared\n+        Artifacts.backend_ffi_opencl = buildDir.mavenStyleBuild(\n+                ffiBackendDir, \"hat-backend-ffi-\"+ffiBackendDir.fileName()+ \"-1.0.jar\", Artifacts.core, Artifacts.backend_ffi_shared\n@@ -267,4 +263,2 @@\n-        Artifacts.ffiBackendMock = buildDir.mavenStyleBuild(\n-                ffiBackendDir,\n-                \"hat-backend-ffi-\"+ffiBackendDir.fileName()+ \"-1.0.jar\",\n-                Artifacts.hatCore, Artifacts.ffiBackendShared\n+        Artifacts.backend_ffi_mock = buildDir.mavenStyleBuild(\n+                ffiBackendDir, \"hat-backend-ffi-\"+ffiBackendDir.fileName()+ \"-1.0.jar\", Artifacts.core, Artifacts.backend_ffi_shared\n@@ -275,4 +269,2 @@\n-        Artifacts.ffiBackendCuda = buildDir.mavenStyleBuild(\n-                ffiBackendDir,\n-                \"hat-backend-ffi-\"+ffiBackendDir.fileName()+ \"-1.0.jar\",\n-                Artifacts.hatCore, Artifacts.ffiBackendShared\n+        Artifacts.backend_ffi_cuda = buildDir.mavenStyleBuild(\n+                ffiBackendDir, \"hat-backend-ffi-\"+ffiBackendDir.fileName()+ \"-1.0.jar\", Artifacts.core, Artifacts.backend_ffi_shared\n@@ -284,4 +276,2 @@\n-    Artifacts.jextractedBackendShared = buildDir.mavenStyleBuild(\n-            jextractedBackendsDir.existingDir(\"shared\"),\n-            \"hat-backend-jextracted-shared-1.0.jar\",\n-            Artifacts.hatCore\n+    Artifacts.backend_jextracted_shared = buildDir.mavenStyleBuild(\n+            jextractedBackendsDir.existingDir(\"shared\"), \"hat-backend-jextracted-shared-1.0.jar\", Artifacts.core\n@@ -290,5 +280,4 @@\n-    if (Artifacts.jextractedOpenCL != null && jextractedBackendsDir.optionalDir(\"opencl\") instanceof Script.DirEntry jextractedBackendDir) {\n-        Artifacts.jextractedBackendOpenCL = buildDir.mavenStyleBuild(\n-                jextractedBackendDir,\n-                \"hat-backend-jextracted-\" + jextractedBackendDir.fileName() + \"-1.0.jar\",\n-                Artifacts.hatCore, Artifacts.jextractedOpenCL, Artifacts.jextractedBackendShared\n+    if (Artifacts.jextracted_opencl != null && jextractedBackendsDir.optionalDir(\"opencl\") instanceof Script.DirEntry jextractedBackendDir) {\n+        Artifacts.backend_jextracted_opencl = buildDir.mavenStyleBuild(\n+                jextractedBackendDir, \"hat-backend-jextracted-\" + jextractedBackendDir.fileName() + \"-1.0.jar\",\n+                Artifacts.core, Artifacts.jextracted_opencl, Artifacts.backend_jextracted_shared\n@@ -298,5 +287,4 @@\n-    if (Artifacts.jextractedCuda != null && jextractedBackendsDir.optionalDir(\"cuda\") instanceof Script.DirEntry jextractedBackendDir) {\n-        Artifacts.jextractedBackendCuda = buildDir.mavenStyleBuild(\n-                jextractedBackendDir,\n-                \"hat-backend-jextracted-\" + jextractedBackendDir.fileName() + \"-1.0.jar\",\n-                Artifacts.hatCore, Artifacts.jextractedCuda, Artifacts.jextractedBackendShared\n+    if (Artifacts.jextracted_cuda != null && jextractedBackendsDir.optionalDir(\"cuda\") instanceof Script.DirEntry jextractedBackendDir) {\n+        Artifacts.backend_jextracted_cuda = buildDir.mavenStyleBuild(\n+                jextractedBackendDir, \"hat-backend-jextracted-\" + jextractedBackendDir.fileName() + \"-1.0.jar\",\n+                Artifacts.core, Artifacts.jextracted_cuda, Artifacts.backend_jextracted_shared\n@@ -307,3 +295,2 @@\n-    Artifacts.javaMTBackend =  buildDir.mavenStyleBuild(javaBackendsDir.existingDir(\"mt\"),\n-            \"hat-backend-java-mt-1.0.jar\",\n-            Artifacts.hatCore\n+    Artifacts.backend_java_mt =  buildDir.mavenStyleBuild(javaBackendsDir.existingDir(\"mt\"),\n+            \"hat-backend-java-mt-1.0.jar\", Artifacts.core\n@@ -311,3 +298,2 @@\n-    Artifacts.javaSeqBackend =  buildDir.mavenStyleBuild(javaBackendsDir.existingDir(\"mt\"),\n-            \"hat-backend-java-seq-1.0.jar\",\n-            Artifacts.hatCore\n+    Artifacts.backend_java_seq =  buildDir.mavenStyleBuild(javaBackendsDir.existingDir(\"seq\"),\n+            \"hat-backend-java-seq-1.0.jar\", Artifacts.core\n@@ -317,0 +303,5 @@\n+\n+    Artifacts.example_shared = buildDir.mavenStyleBuild(\n+            examplesDir.existingDir(\"shared\"), \"hat-example-shared-1.0.jar\", Artifacts.core\n+    );\n+\n@@ -319,0 +310,9 @@\n+                    \"squares\"\n+            )\n+            .parallel()\n+            .map(examplesDir::existingDir)\n+            .forEach(exampleDir->buildDir.mavenStyleBuild(\n+                exampleDir, \"hat-example-\"+exampleDir.fileName()+\"-1.0.jar\", Artifacts.core\n+            ));\n+\n+    Stream.of(\n@@ -322,1 +322,0 @@\n-                    \"squares\",\n@@ -327,5 +326,3 @@\n-            .forEach(exampleDir->buildDir.mavenStyleBuild(exampleDir,\n-                    \"hat-example-\"+exampleDir.fileName()+\"-1.0.jar\",\n-                    Artifacts.hatCore\n-                    )\n-            );\n+            .forEach(exampleDir->buildDir.mavenStyleBuild(\n+                 exampleDir, \"hat-example-\"+exampleDir.fileName()+\"-1.0.jar\", Artifacts.core, Artifacts.example_shared\n+            ));\n@@ -334,7 +331,7 @@\n-            Artifacts.hatCore,\n-            Artifacts.wrap,\n-            Artifacts.clWrap,\n-            Artifacts.jextractedOpenCL,\n-            Artifacts.ffiBackendOpenCL,\n-            Artifacts.glWrap,\n-            Artifacts.jextractedOpenGL\n+            Artifacts.core,\n+            Artifacts.wrap_shared,\n+            Artifacts.wrap_opencl,\n+            Artifacts.jextracted_opencl,\n+            Artifacts.backend_ffi_opencl,\n+            Artifacts.wrap_opengl,\n+            Artifacts.jextracted_opengl\n@@ -342,0 +339,1 @@\n+\n@@ -352,3 +350,2 @@\n-        Artifacts.exampleNbody = buildDir.mavenStyleBuild(examplesDir.existingDir(\"nbody\"),\n-                \"hat-example-nbody-1.0.jar\",\n-                nbodyDependencies\n+        Artifacts.example_nbody = buildDir.mavenStyleBuild(\n+            examplesDir.existingDir(\"nbody\"), \"hat-example-nbody-1.0.jar\", nbodyDependencies\n@@ -358,13 +355,5 @@\n-        var cmakeBuildDir = buildDir.buildDir(\"cmake-build-debug\");\n-        if (!cmakeBuildDir.exists()) {\n-            Script.cmake($ -> $\n-                    .verbose(false)\n-                    .source_dir(ffiBackendsDir)\n-                    .build_dir(cmakeBuildDir)\n-                    .copy_to(buildDir)\n-            );\n-        }\n-        Script.cmake($ -> $\n-                .build(cmakeBuildDir)\n-        );\n-\n+    var cmakeBuildDir = buildDir.buildDir(\"cmake-build-debug\");\n+    if (!cmakeBuildDir.exists()) {\n+        Script.cmake($ -> $ .verbose(false) .source_dir(ffiBackendsDir) .build_dir(cmakeBuildDir) .copy_to(buildDir));\n+    }\n+    Script.cmake($ -> $ .build(cmakeBuildDir));\n","filename":"hat\/hat\/bld.java","additions":132,"deletions":143,"binary":false,"changes":275,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ here.buildDir(\"conf\").remove();\n","filename":"hat\/hat\/clean.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+        classpath.add(buildDir.jarFile(\"hat-example-shared-1.0.jar\"));\n@@ -146,5 +147,5 @@\n-          var jextractedOpenCLJar = buildDir.jarFile(\"hat-jextracted-opencl-1.0.jar\");\n-          var jextractedOpenGLJar = buildDir.jarFile(\"hat-jextracted-opengl-1.0.jar\");\n-          var wrapJar = buildDir.jarFile(\"hat-wrap-1.0.jar\");\n-          var clwrapJar = buildDir.jarFile(\"hat-clwrap-1.0.jar\");\n-          var glwrapJar = buildDir.jarFile(\"hat-glwrap-1.0.jar\");\n+          var jextracted_opencl_jar = buildDir.jarFile(\"hat-jextracted-opencl-1.0.jar\");\n+          var jextracted_opengl_jar = buildDir.jarFile(\"hat-jextracted-opengl-1.0.jar\");\n+          var wrap_shared_jar = buildDir.jarFile(\"hat-wrap-shared-1.0.jar\");\n+          var wrap_opencl_jar = buildDir.jarFile(\"hat-wrap-opencl-1.0.jar\");\n+          var wrap_opengl_jar = buildDir.jarFile(\"hat-wrap-opengl-1.0.jar\");\n@@ -154,0 +155,1 @@\n+          println(\"config.exampleName is \"+config.exampleName);\n@@ -161,4 +163,3 @@\n-                          wrapJar,\n-                          clwrapJar, jextractedOpenCLJar,\n-                          glwrapJar, jextractedOpenGLJar,\n-                          clwrapJar, jextractedOpenCLJar)\n+                          wrap_shared_jar,\n+                          wrap_opengl_jar, jextracted_opengl_jar,\n+                          wrap_opencl_jar, jextracted_opencl_jar)\n","filename":"hat\/hat\/run.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n-      <file url=\"file:\/\/$PROJECT_DIR$\/..\/wrap\/glwrap\/src\/main\/java\/wrap\/glwrap\/GLCallbackEventHandler.java\" \/>\n+      <file url=\"file:\/\/$PROJECT_DIR$\/..\/wraps\/opengl\/src\/main\/java\/wrap\/opengl\/GLCallbackEventHandler.java\" \/>\n@@ -12,0 +12,6 @@\n+      <module name=\"core\" options=\"--add-modules=jdk.incubator.code,java.desktop --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n+      <module name=\"example_heal\" options=\"--add-modules=jdk.incubator.code,java.desktop --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n+      <module name=\"example_life\" options=\"--add-modules=jdk.incubator.code,java.desktop --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n+      <module name=\"example_mandel\" options=\"--add-modules=jdk.incubator.code,java.desktop --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n+      <module name=\"example_nbody\" options=\"--add-modules=jdk.incubator.code,java.desktop --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n+      <module name=\"example_violajones\" options=\"--add-modules=jdk.incubator.code,java.desktop,java.xml --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n@@ -14,6 +20,0 @@\n-      <module name=\"core\" options=\"--add-modules=jdk.incubator.code,java.desktop --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n-      <module name=\"heal\" options=\"--add-modules=jdk.incubator.code,java.desktop --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n-      <module name=\"life\" options=\"--add-modules=jdk.incubator.code,java.desktop --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n-      <module name=\"mandel\" options=\"--add-modules=jdk.incubator.code,java.desktop --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n-      <module name=\"nbody\" options=\"--add-modules=jdk.incubator.code,java.desktop --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n-      <module name=\"violajones\" options=\"--add-modules=jdk.incubator.code,java.desktop,java.xml --add-exports=java.base\/jdk.internal.vm.annotation=ALL-UNNAMED --add-exports=java.base\/jdk.internal=ALL-UNNAMED\" \/>\n@@ -22,1 +22,1 @@\n-<\/project>\n+<\/project>\n\\ No newline at end of file\n","filename":"hat\/intellij\/.idea\/compiler.xml","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -5,5 +5,0 @@\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/wrap.iml\" filepath=\"$PROJECT_DIR$\/wrap.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/glwrap.iml\" filepath=\"$PROJECT_DIR$\/glwrap.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/clwrap.iml\" filepath=\"$PROJECT_DIR$\/clwrap.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/cuwrap.iml\" filepath=\"$PROJECT_DIR$\/cuwrap.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/core.iml\" filepath=\"$PROJECT_DIR$\/core.iml\" \/>\n@@ -11,1 +6,2 @@\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/bldr.iml\" filepath=\"$PROJECT_DIR$\/bldr.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/core.iml\" filepath=\"$PROJECT_DIR$\/core.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/tools.iml\" filepath=\"$PROJECT_DIR$\/core.iml\" \/>\n@@ -19,0 +15,8 @@\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/example_shared.iml\" filepath=\"$PROJECT_DIR$\/example_shared.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/example_mandel.iml\" filepath=\"$PROJECT_DIR$\/example_mandel.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/example_heal.iml\" filepath=\"$PROJECT_DIR$\/example_heal.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/example_blackscholes.iml\" filepath=\"$PROJECT_DIR$\/example_blackscholes.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/example_life.iml\" filepath=\"$PROJECT_DIR$\/example_life.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/example_squares.iml\" filepath=\"$PROJECT_DIR$\/example_squares.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/example_experiments.iml\" filepath=\"$PROJECT_DIR$\/example_experiments.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/example_violajones.iml\" filepath=\"$PROJECT_DIR$\/example_violajones.iml\" \/>\n@@ -21,10 +25,5 @@\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/mandel.iml\" filepath=\"$PROJECT_DIR$\/mandel.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/heal.iml\" filepath=\"$PROJECT_DIR$\/heal.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/chess.iml\" filepath=\"$PROJECT_DIR$\/chess.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/blackscholes.iml\" filepath=\"$PROJECT_DIR$\/blackscholes.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/view.iml\" filepath=\"$PROJECT_DIR$\/view.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/life.iml\" filepath=\"$PROJECT_DIR$\/life.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/squares.iml\" filepath=\"$PROJECT_DIR$\/squares.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/experiments.iml\" filepath=\"$PROJECT_DIR$\/experiments.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/nbody.iml\" filepath=\"$PROJECT_DIR$\/nbody.iml\" \/>\n-      <module fileurl=\"file:\/\/$PROJECT_DIR$\/violajones.iml\" filepath=\"$PROJECT_DIR$\/violajones.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/wrap_shared.iml\" filepath=\"$PROJECT_DIR$\/wrap_shared.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/wrap_opengl.iml\" filepath=\"$PROJECT_DIR$\/wrap_opengl.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/wrap_opencl.iml\" filepath=\"$PROJECT_DIR$\/wrap_opencl.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/wrap_cuda.iml\" filepath=\"$PROJECT_DIR$\/wrap_cuda.iml\" \/>\n+      <module fileurl=\"file:\/\/$PROJECT_DIR$\/example_nbody.iml\" filepath=\"$PROJECT_DIR$\/example_nbody.iml\" \/>\n","filename":"hat\/intellij\/.idea\/modules.xml","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1,124 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"Palette2\">\n-    <group name=\"Swing\">\n-      <item class=\"com.intellij.uiDesigner.HSpacer\" tooltip-text=\"Horizontal Spacer\" icon=\"\/com\/intellij\/uiDesigner\/icons\/hspacer.svg\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" \/>\n-      <\/item>\n-      <item class=\"com.intellij.uiDesigner.VSpacer\" tooltip-text=\"Vertical Spacer\" icon=\"\/com\/intellij\/uiDesigner\/icons\/vspacer.svg\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" \/>\n-      <\/item>\n-      <item class=\"javax.swing.JPanel\" icon=\"\/com\/intellij\/uiDesigner\/icons\/panel.svg\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" \/>\n-      <\/item>\n-      <item class=\"javax.swing.JScrollPane\" icon=\"\/com\/intellij\/uiDesigner\/icons\/scrollPane.svg\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" \/>\n-      <\/item>\n-      <item class=\"javax.swing.JButton\" icon=\"\/com\/intellij\/uiDesigner\/icons\/button.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" \/>\n-        <initial-values>\n-          <property name=\"text\" value=\"Button\" \/>\n-        <\/initial-values>\n-      <\/item>\n-      <item class=\"javax.swing.JRadioButton\" icon=\"\/com\/intellij\/uiDesigner\/icons\/radioButton.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" \/>\n-        <initial-values>\n-          <property name=\"text\" value=\"RadioButton\" \/>\n-        <\/initial-values>\n-      <\/item>\n-      <item class=\"javax.swing.JCheckBox\" icon=\"\/com\/intellij\/uiDesigner\/icons\/checkBox.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" \/>\n-        <initial-values>\n-          <property name=\"text\" value=\"CheckBox\" \/>\n-        <\/initial-values>\n-      <\/item>\n-      <item class=\"javax.swing.JLabel\" icon=\"\/com\/intellij\/uiDesigner\/icons\/label.svg\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" \/>\n-        <initial-values>\n-          <property name=\"text\" value=\"Label\" \/>\n-        <\/initial-values>\n-      <\/item>\n-      <item class=\"javax.swing.JTextField\" icon=\"\/com\/intellij\/uiDesigner\/icons\/textField.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n-          <preferred-size width=\"150\" height=\"-1\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JPasswordField\" icon=\"\/com\/intellij\/uiDesigner\/icons\/passwordField.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n-          <preferred-size width=\"150\" height=\"-1\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JFormattedTextField\" icon=\"\/com\/intellij\/uiDesigner\/icons\/formattedTextField.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n-          <preferred-size width=\"150\" height=\"-1\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JTextArea\" icon=\"\/com\/intellij\/uiDesigner\/icons\/textArea.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JTextPane\" icon=\"\/com\/intellij\/uiDesigner\/icons\/textPane.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JEditorPane\" icon=\"\/com\/intellij\/uiDesigner\/icons\/editorPane.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JComboBox\" icon=\"\/com\/intellij\/uiDesigner\/icons\/comboBox.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" \/>\n-      <\/item>\n-      <item class=\"javax.swing.JTable\" icon=\"\/com\/intellij\/uiDesigner\/icons\/table.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JList\" icon=\"\/com\/intellij\/uiDesigner\/icons\/list.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"2\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JTree\" icon=\"\/com\/intellij\/uiDesigner\/icons\/tree.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JTabbedPane\" icon=\"\/com\/intellij\/uiDesigner\/icons\/tabbedPane.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"200\" height=\"200\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JSplitPane\" icon=\"\/com\/intellij\/uiDesigner\/icons\/splitPane.svg\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"200\" height=\"200\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JSpinner\" icon=\"\/com\/intellij\/uiDesigner\/icons\/spinner.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" \/>\n-      <\/item>\n-      <item class=\"javax.swing.JSlider\" icon=\"\/com\/intellij\/uiDesigner\/icons\/slider.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" \/>\n-      <\/item>\n-      <item class=\"javax.swing.JSeparator\" icon=\"\/com\/intellij\/uiDesigner\/icons\/separator.svg\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\" \/>\n-      <\/item>\n-      <item class=\"javax.swing.JProgressBar\" icon=\"\/com\/intellij\/uiDesigner\/icons\/progressbar.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" \/>\n-      <\/item>\n-      <item class=\"javax.swing.JToolBar\" icon=\"\/com\/intellij\/uiDesigner\/icons\/toolbar.svg\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\">\n-          <preferred-size width=\"-1\" height=\"20\" \/>\n-        <\/default-constraints>\n-      <\/item>\n-      <item class=\"javax.swing.JToolBar$Separator\" icon=\"\/com\/intellij\/uiDesigner\/icons\/toolbarSeparator.svg\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"1\" \/>\n-      <\/item>\n-      <item class=\"javax.swing.JScrollBar\" icon=\"\/com\/intellij\/uiDesigner\/icons\/scrollbar.svg\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"0\" anchor=\"0\" fill=\"2\" \/>\n-      <\/item>\n-    <\/group>\n-  <\/component>\n-<\/project>\n\\ No newline at end of file\n","filename":"hat\/intellij\/.idea\/uiDesigner.xml","additions":0,"deletions":124,"binary":false,"changes":124,"status":"deleted"},{"patch":"@@ -5,0 +5,1 @@\n+    <mapping directory=\"$PROJECT_DIR$\/..\/..\/..\/beehive-spirv-toolkit\" vcs=\"Git\" \/>\n","filename":"hat\/intellij\/.idea\/vcs.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -18,0 +18,1 @@\n+          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/extraction-opencl-1.0.jar!\/\" \/>\n","filename":"hat\/intellij\/backend_jextracted_opencl.iml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/blackscholes\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/blackscholes\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/blackscholes\/src\/main\/resources\" type=\"java-resource\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"core\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_opencl\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_cuda\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_spirv\" \/>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/blackscholes.iml","additions":0,"deletions":16,"binary":false,"changes":16,"status":"deleted"},{"patch":"@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/hattricks\/chess\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/hattricks\/chess\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/hattricks\/chess\/src\/main\/resources\" type=\"java-resource\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"core\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_opencl\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_cuda\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_spirv\" \/>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/chess.iml","additions":0,"deletions":16,"binary":false,"changes":16,"status":"deleted"},{"patch":"@@ -1,23 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/clwrap\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/clwrap\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/clwrap\/src\/main\/resources\" type=\"java-resource\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"wrap\" \/>\n-    <orderEntry type=\"module\" module-name=\"core\" \/>\n-    <orderEntry type=\"module-library\">\n-      <library>\n-        <CLASSES>\n-          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/hat-jextracted-opencl-1.0.jar!\/\" \/>\n-        <\/CLASSES>\n-        <JAVADOC \/>\n-        <SOURCES \/>\n-      <\/library>\n-    <\/orderEntry>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/clwrap.iml","additions":0,"deletions":23,"binary":false,"changes":23,"status":"deleted"},{"patch":"@@ -1,13 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/cuwrap\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/cuwrap\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/cuwrap\/src\/main\/resources\" type=\"java-resource\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"wrap\" \/>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/cuwrap.iml","additions":0,"deletions":13,"binary":false,"changes":13,"status":"deleted"},{"patch":"@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/blackscholes\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/blackscholes\/src\/main\/java\" isTestSource=\"false\" \/>\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/blackscholes\/src\/main\/resources\" type=\"java-resource\" \/>\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+    <orderEntry type=\"module\" module-name=\"core\" \/>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/example_blackscholes.iml","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"","filename":"hat\/intellij\/example_experiments.iml","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hat\/intellij\/experiments.iml","status":"renamed"},{"patch":"@@ -12,0 +12,1 @@\n+    <orderEntry type=\"module\" module-name=\"example_shared\" \/>\n","filename":"hat\/intellij\/example_heal.iml","additions":1,"deletions":0,"binary":false,"changes":1,"previous_filename":"hat\/intellij\/heal.iml","status":"renamed"},{"patch":"@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/life\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/life\/src\/main\/java\" isTestSource=\"false\" \/>\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/life\/src\/main\/resources\" type=\"java-resource\" \/>\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+    <orderEntry type=\"module\" module-name=\"core\" \/>\n+    <orderEntry type=\"module\" module-name=\"example_shared\" \/>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/example_life.iml","additions":14,"deletions":0,"binary":false,"changes":14,"status":"added"},{"patch":"@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/mandel\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/mandel\/src\/main\/java\" isTestSource=\"false\" \/>\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+    <orderEntry type=\"module\" module-name=\"core\" \/>\n+    <orderEntry type=\"module\" module-name=\"example_shared\" \/>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/example_mandel.iml","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\/src\/main\/java\" isTestSource=\"false\" \/>\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\/src\/main\/resources\" type=\"java-resource\" \/>\n+      <!--<excludeFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\/src\/main\/java\/nbody\" \/>-->\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+    <orderEntry type=\"module\" module-name=\"core\" \/>\n+    <orderEntry type=\"module\" module-name=\"backend_ffi_opencl\" \/>\n+    <orderEntry type=\"module\" module-name=\"wrap_shared\" \/>\n+    <orderEntry type=\"module\" module-name=\"wrap_opencl\" \/>\n+    <orderEntry type=\"module\" module-name=\"wrap_opengl\" \/>\n+    <orderEntry type=\"module-library\">\n+      <library>\n+        <CLASSES>\n+          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/hat-jextracted-opencl-1.0.jar!\/\" \/>\n+          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/extraction-opencl-1.0.jar!\/\" \/>\n+        <\/CLASSES>\n+        <JAVADOC \/>\n+        <SOURCES \/>\n+      <\/library>\n+    <\/orderEntry>\n+    <orderEntry type=\"module-library\">\n+      <library>\n+        <CLASSES>\n+          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/hat-jextracted-opengl-1.0.jar!\/\" \/>\n+          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/extraction-opengl-1.0.jar!\/\" \/>\n+        <\/CLASSES>\n+        <JAVADOC \/>\n+        <SOURCES \/>\n+      <\/library>\n+    <\/orderEntry>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/example_nbody.iml","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/shared\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/shared\/src\/main\/java\" isTestSource=\"false\" \/>\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+    <orderEntry type=\"module\" module-name=\"core\" \/>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/example_shared.iml","additions":12,"deletions":0,"binary":false,"changes":12,"status":"added"},{"patch":"@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/squares\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/squares\/src\/main\/java\" isTestSource=\"false\" \/>\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/squares\/src\/main\/resources\" type=\"java-resource\" \/>\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+    <orderEntry type=\"module\" module-name=\"core\" \/>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/example_squares.iml","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/violajones\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/violajones\/src\/main\/java\" isTestSource=\"false\" \/>\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/violajones\/src\/main\/resources\" type=\"java-resource\" \/>\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+    <orderEntry type=\"module\" module-name=\"core\" \/>\n+    <orderEntry type=\"module\" module-name=\"example_shared\" \/>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/example_violajones.iml","additions":14,"deletions":0,"binary":false,"changes":14,"status":"added"},{"patch":"@@ -1,23 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/glwrap\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/glwrap\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/glwrap\/src\/main\/resources\" type=\"java-resource\" \/>\n-      <excludeFolder url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/glwrap\/src\/main\/java\/wrap\/glwrap\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"wrap\" \/>\n-    <orderEntry type=\"module-library\">\n-      <library>\n-        <CLASSES>\n-          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/hat-jextracted-opengl-1.0.jar!\/\" \/>\n-        <\/CLASSES>\n-        <JAVADOC \/>\n-        <SOURCES \/>\n-      <\/library>\n-    <\/orderEntry>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/glwrap.iml","additions":0,"deletions":23,"binary":false,"changes":23,"status":"deleted"},{"patch":"@@ -1,19 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/life\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/life\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/life\/src\/main\/resources\" type=\"java-resource\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"core\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_opencl\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_cuda\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_spirv\" \/>\n-    <orderEntry type=\"module\" module-name=\"wrap\" \/>\n-    <orderEntry type=\"module\" module-name=\"clwrap\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_ffi_opencl\" \/>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/life.iml","additions":0,"deletions":19,"binary":false,"changes":19,"status":"deleted"},{"patch":"@@ -1,15 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/mandel\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/mandel\/src\/main\/java\" isTestSource=\"false\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"core\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_opencl\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_spirv\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_cuda\" \/>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/mandel.iml","additions":0,"deletions":15,"binary":false,"changes":15,"status":"deleted"},{"patch":"@@ -1,36 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\/src\/main\/resources\" type=\"java-resource\" \/>\n-      <excludeFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\/src\/main\/java\/nbody\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"core\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_ffi_opencl\" \/>\n-    <orderEntry type=\"module\" module-name=\"wrap\" \/>\n-    <orderEntry type=\"module\" module-name=\"glwrap\" \/>\n-    <orderEntry type=\"module\" module-name=\"clwrap\" \/>\n-    <orderEntry type=\"module-library\">\n-      <library>\n-        <CLASSES>\n-          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/hat-jextracted-opencl-1.0.jar!\/\" \/>\n-        <\/CLASSES>\n-        <JAVADOC \/>\n-        <SOURCES \/>\n-      <\/library>\n-    <\/orderEntry>\n-    <orderEntry type=\"module-library\">\n-      <library>\n-        <CLASSES>\n-          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/hat-jextracted-opengl-1.0.jar!\/\" \/>\n-        <\/CLASSES>\n-        <JAVADOC \/>\n-        <SOURCES \/>\n-      <\/library>\n-    <\/orderEntry>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/nbody.iml","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -0,0 +1,74 @@\n+This is how we exclude in the .iml files\n+For example in example-nbody.iml\n+```xml\n+<module>\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\/src\/main\/java\" isTestSource=\"false\" \/>\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\/src\/main\/resources\" type=\"java-resource\" \/>\n+      <!--<excludeFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/nbody\/src\/main\/java\/nbody\" \/>-->\n+  <\/component>\n+<\/module>\n+```\n+Sadly to exclude a single file we have to go to\n+```\n+    IntelliJ>Settings>Build, Execution, Deployment> Compiler>Excludes\n+\n+    And add to the UI\n+    FULL_PATH_TO_HAT\/hat\/wraps\/opengl\/src\/main\/java\/wrap\/opengl\/GLCallbackEventHandler.java\n+```\n+\n+\n+We need these to be able to run in a run configuration\n+```\n+RunConfiguration\n+   VMOptions\n+     -XstartOnFirstThread  (on mac only for nbody\/opengl)\n+     --enable-native-access=ALL-UNNAMED\n+      -Djava.library.path=FULL_PATH_TO_HAT\/build\n+\n+  WorkingDirectory\n+     FULL_PATH_TO_HAT\/wraps\/opengl\/src\/main\/java\/wrap\/opengl\/GLCallbackEventHandler.java\n+     \/Users\/grfrost\/github\/babylon-grfrost-fork\/hat\/intellij\n+\n+  Assuming Working dir is\n+     FULL_PATH_TO_HAT\/intellij\n+\n+```\n+\n+Note that run configs are held in `intellij\/.idea\/workspace.xml`\n+\n+I tend to add them manually.\n+```xml\n+<project version=\"4\">\n+  \/\/ other components\n+<component name=\"RunManager\">\n+  <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n+      <classpathModifications>\n+        <entry path=\"$PROJECT_DIR$\/..\/build\/hat-backend-ffi-opencl-1.0.jar\" \/>\n+        <entry path=\"$PROJECT_DIR$\/backend_ffi_shared.iml\" \/>\n+      <\/classpathModifications>\n+      <option name=\"MAIN_CLASS_NAME\" value=\"nbody.Main\" \/>\n+      <module name=\"example_nbody\" \/>\n+      <option name=\"VM_PARAMETERS\" value=\"-XstartOnFirstThread --enable-native-access=ALL-UNNAMED -Djava.library.path=..\/build\" \/>\n+      <extension name=\"coverage\">\n+        <pattern>\n+          <option name=\"PATTERN\" value=\"nbody.*\" \/>\n+          <option name=\"ENABLED\" value=\"true\" \/>\n+        <\/pattern>\n+      <\/extension>\n+      <method v=\"2\">\n+        <option name=\"Make\" enabled=\"true\" \/>\n+      <\/method>\n+  <\/configuration>\n+  <recent_temporary>\n+      <list>\n+        <item itemvalue=\"Application.Main\" \/>\n+      <\/list>\n+  <\/recent_temporary>\n+<\/component>\n+<\/project>\n+```\n+\n+\n","filename":"hat\/intellij\/notes.md","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/squares\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/squares\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/squares\/src\/main\/resources\" type=\"java-resource\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"core\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_opencl\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_cuda\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_spirv\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_ptx\" \/>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/squares.iml","additions":0,"deletions":17,"binary":false,"changes":17,"status":"deleted"},{"patch":"@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/tools\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/tools\/src\/main\/java\" isTestSource=\"false\" \/>\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+    <orderEntry type=\"module\" module-name=\"core\" \/>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/tools.iml","additions":12,"deletions":0,"binary":false,"changes":12,"status":"added"},{"patch":"@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/hattricks\/view\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/hattricks\/view\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/hattricks\/view\/src\/main\/resources\" type=\"java-resource\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"core\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_opencl\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_cuda\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_spirv\" \/>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/view.iml","additions":0,"deletions":16,"binary":false,"changes":16,"status":"deleted"},{"patch":"@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/examples\/violajones\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/violajones\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/examples\/violajones\/src\/main\/resources\" type=\"java-resource\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-    <orderEntry type=\"module\" module-name=\"core\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_opencl\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_cuda\" \/>\n-    <orderEntry type=\"module\" module-name=\"backend_spirv\" \/>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/violajones.iml","additions":0,"deletions":16,"binary":false,"changes":16,"status":"deleted"},{"patch":"@@ -1,12 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output \/>\n-    <content url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/wrap\">\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/wrap\/src\/main\/java\" isTestSource=\"false\" \/>\n-      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/wrap\/src\/main\/resources\" type=\"java-resource\" \/>\n-    <\/content>\n-    <orderEntry type=\"inheritedJdk\" \/>\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n-  <\/component>\n-<\/module>\n","filename":"hat\/intellij\/wrap.iml","additions":0,"deletions":12,"binary":false,"changes":12,"status":"deleted"},{"patch":"@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/cuda\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/cuda\/src\/main\/java\" isTestSource=\"false\" \/>\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wrap\/cuda\/src\/main\/resources\" type=\"java-resource\" \/>\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+    <orderEntry type=\"module\" module-name=\"wrap_shared\" \/>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/wrap_cuda.iml","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/opencl\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/opencl\/src\/main\/java\" isTestSource=\"false\" \/>\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/opencl\/src\/main\/resources\" type=\"java-resource\" \/>\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+    <orderEntry type=\"module\" module-name=\"wrap_shared\" \/>\n+    <orderEntry type=\"module\" module-name=\"core\" \/>\n+    <orderEntry type=\"module-library\">\n+      <library>\n+        <CLASSES>\n+          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/hat-jextracted-opencl-1.0.jar!\/\" \/>\n+          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/extraction-opencl-1.0.jar!\/\" \/>\n+        <\/CLASSES>\n+        <JAVADOC \/>\n+        <SOURCES \/>\n+      <\/library>\n+    <\/orderEntry>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/wrap_opencl.iml","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"},{"patch":"@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/opengl\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/opengl\/src\/main\/java\" isTestSource=\"false\" \/>\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/opengl\/src\/main\/resources\" type=\"java-resource\" \/>\n+      <!--<excludeFolder url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/opengl\/src\/main\/java\/wrap\/glwrap\" \/>-->\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+    <orderEntry type=\"module\" module-name=\"wrap_shared\" \/>\n+    <orderEntry type=\"module-library\">\n+      <library>\n+        <CLASSES>\n+          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/hat-jextracted-opengl-1.0.jar!\/\" \/>\n+          <root url=\"jar:\/\/$MODULE_DIR$\/..\/build\/extraction-opengl-1.0.jar!\/\" \/>\n+        <\/CLASSES>\n+        <JAVADOC \/>\n+        <SOURCES \/>\n+      <\/library>\n+    <\/orderEntry>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/wrap_opengl.iml","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"},{"patch":"@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output \/>\n+    <content url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/shared\">\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/shared\/src\/main\/java\" isTestSource=\"false\" \/>\n+      <sourceFolder url=\"file:\/\/$MODULE_DIR$\/..\/wraps\/shared\/src\/main\/resources\" type=\"java-resource\" \/>\n+    <\/content>\n+    <orderEntry type=\"inheritedJdk\" \/>\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" \/>\n+  <\/component>\n+<\/module>\n","filename":"hat\/intellij\/wrap_shared.iml","additions":12,"deletions":0,"binary":false,"changes":12,"status":"added"},{"patch":"@@ -43,0 +43,1 @@\n+        <module>tools<\/module>\n","filename":"hat\/pom.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-    <artifactId>hat-example-heal<\/artifactId>\n+    <artifactId>hat-tools<\/artifactId>\n@@ -33,1 +33,1 @@\n-        <artifactId>hat-examples<\/artifactId>\n+        <artifactId>hat-root<\/artifactId>\n","filename":"hat\/tools\/pom.xml","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"hat\/examples\/heal\/pom.xml","status":"copied"},{"patch":"@@ -28,1 +28,1 @@\n-import hat.text.CodeBuilder;\n+import hat.codebuilders.CodeBuilder;\n","filename":"hat\/tools\/src\/main\/java\/hat\/opcodebuilders\/OpCodeBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/core\/src\/main\/java\/hat\/opcodebuilders\/OpCodeBuilder.java","status":"renamed"},{"patch":"","filename":"hat\/tools\/src\/main\/java\/hat\/opcodebuilders\/StyledOpCodeBuilder.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hat\/core\/src\/main\/java\/hat\/opcodebuilders\/StyledOpCodeBuilder.java","status":"renamed"},{"patch":"@@ -28,0 +28,2 @@\n+import hat.codebuilders.CodeBuilder;\n+\n","filename":"hat\/tools\/src\/main\/java\/hat\/text\/JavaCodeBuilder.java","additions":2,"deletions":0,"binary":false,"changes":2,"previous_filename":"hat\/core\/src\/main\/java\/hat\/text\/JavaCodeBuilder.java","status":"renamed"},{"patch":"","filename":"hat\/tools\/src\/main\/java\/hat\/text\/TerminalColors.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hat\/core\/src\/main\/java\/hat\/text\/TerminalColors.java","status":"renamed"},{"patch":"@@ -0,0 +1,5 @@\n+package hat.tools;\n+\n+public class Tool{\n+     static int foo = 1;\n+}\n","filename":"hat\/tools\/src\/main\/java\/hat\/tools\/Tool.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -28,1 +28,1 @@\n-    <artifactId>hat-clwrap<\/artifactId>\n+    <artifactId>hat-wrap-cuda<\/artifactId>\n@@ -32,1 +32,1 @@\n-        <artifactId>hat-wrap-root<\/artifactId>\n+        <artifactId>hat-wraps<\/artifactId>\n@@ -38,1 +38,1 @@\n-            <artifactId>hat-wrap<\/artifactId>\n+            <artifactId>hat-wrap-shared<\/artifactId>\n","filename":"hat\/wraps\/cuda\/pom.xml","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"hat\/wraps\/clwrap\/pom.xml","status":"copied"},{"patch":"@@ -28,1 +28,1 @@\n-    <artifactId>hat-clwrap<\/artifactId>\n+    <artifactId>hat-wrap-opencl<\/artifactId>\n@@ -32,1 +32,1 @@\n-        <artifactId>hat-wrap-root<\/artifactId>\n+        <artifactId>hat-wraps<\/artifactId>\n@@ -38,1 +38,1 @@\n-            <artifactId>hat-wrap<\/artifactId>\n+            <artifactId>hat-wrap-shared<\/artifactId>\n","filename":"hat\/wraps\/opencl\/pom.xml","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"hat\/wraps\/clwrap\/pom.xml","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package wrap.clwrap;\n+package wrap.opencl;\n","filename":"hat\/wraps\/opencl\/src\/main\/java\/wrap\/opencl\/CLPlatform.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/wraps\/clwrap\/src\/main\/java\/wrap\/clwrap\/CLPlatform.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package wrap.clwrap;\n+package wrap.opencl;\n","filename":"hat\/wraps\/opencl\/src\/main\/java\/wrap\/opencl\/CLStatusPtr.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/wraps\/clwrap\/src\/main\/java\/wrap\/clwrap\/CLStatusPtr.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package wrap.clwrap;\n+package wrap.opencl;\n","filename":"hat\/wraps\/opencl\/src\/main\/java\/wrap\/opencl\/CLWrapComputeContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/wraps\/clwrap\/src\/main\/java\/wrap\/clwrap\/CLWrapComputeContext.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package wrap.clwrap;\n+package wrap.opencl;\n","filename":"hat\/wraps\/opencl\/src\/main\/java\/wrap\/opencl\/Squares.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/wraps\/clwrap\/src\/main\/java\/wrap\/clwrap\/Squares.java","status":"renamed"},{"patch":"@@ -29,1 +29,1 @@\n-    <artifactId>hat-glwrap<\/artifactId>\n+    <artifactId>hat-wrap-opengl<\/artifactId>\n@@ -33,1 +33,1 @@\n-        <artifactId>hat-wrap-root<\/artifactId>\n+        <artifactId>hat-wraps<\/artifactId>\n@@ -39,1 +39,1 @@\n-            <artifactId>hat-wrap<\/artifactId>\n+            <artifactId>hat-wrap-shared<\/artifactId>\n@@ -68,2 +68,2 @@\n-          <!-- uncomment for mac --> <exclude>wrap\/glwrap\/GLCallbackEventHandler.java<\/exclude>\n-          <!-- uncomment for ubuntu --><!-- <exclude>wrap\/glwrap\/GLFuncEventHandler.java<\/exclude> -->\n+          <!-- uncomment for mac --> <exclude>wrap\/opengl\/GLCallbackEventHandler.java<\/exclude>\n+          <!-- uncomment for ubuntu --><!-- <exclude>wrap\/opengl\/GLFuncEventHandler.java<\/exclude> -->\n","filename":"hat\/wraps\/opengl\/pom.xml","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"hat\/wraps\/glwrap\/pom.xml","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package wrap.glwrap;\n+package wrap.opengl;\n","filename":"hat\/wraps\/opengl\/src\/main\/java\/wrap\/opengl\/Fonts.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/wraps\/glwrap\/src\/main\/java\/wrap\/glwrap\/Fonts.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package wrap.glwrap;\n+package wrap.opengl;\n","filename":"hat\/wraps\/opengl\/src\/main\/java\/wrap\/opengl\/GLCallbackEventHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/wraps\/glwrap\/src\/main\/java\/wrap\/glwrap\/GLCallbackEventHandler.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package wrap.glwrap;\n+package wrap.opengl;\n","filename":"hat\/wraps\/opengl\/src\/main\/java\/wrap\/opengl\/GLEventHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/wraps\/glwrap\/src\/main\/java\/wrap\/glwrap\/GLEventHandler.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package wrap.glwrap;\n+package wrap.opengl;\n","filename":"hat\/wraps\/opengl\/src\/main\/java\/wrap\/opengl\/GLFuncEventHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/wraps\/glwrap\/src\/main\/java\/wrap\/glwrap\/GLFuncEventHandler.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package wrap.glwrap;\n+package wrap.opengl;\n","filename":"hat\/wraps\/opengl\/src\/main\/java\/wrap\/opengl\/GLStatusPtr.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/wraps\/glwrap\/src\/main\/java\/wrap\/glwrap\/GLStatusPtr.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package wrap.glwrap;\n+package wrap.opengl;\n","filename":"hat\/wraps\/opengl\/src\/main\/java\/wrap\/opengl\/GLTexture.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/wraps\/glwrap\/src\/main\/java\/wrap\/glwrap\/GLTexture.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package wrap.glwrap;\n+package wrap.opengl;\n","filename":"hat\/wraps\/opengl\/src\/main\/java\/wrap\/opengl\/GLWindow.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"hat\/wraps\/glwrap\/src\/main\/java\/wrap\/glwrap\/GLWindow.java","status":"renamed"},{"patch":"@@ -37,1 +37,4 @@\n-        <module>wrap<\/module>\n+        <module>shared<\/module>\n+        <module>opencl<\/module>\n+        <module>opengl<\/module>\n+        <!--<module>cuda<\/module>-->\n@@ -39,0 +42,1 @@\n+        <!--\n@@ -40,1 +44,1 @@\n-  <!--      <profile>\n+        <profile>\n@@ -45,1 +49,1 @@\n-        <\/profile> -->\n+        <\/profile>\n@@ -59,0 +63,1 @@\n+         -->\n","filename":"hat\/wraps\/pom.xml","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-    <artifactId>hat-wrap<\/artifactId>\n+    <artifactId>hat-wrap-shared<\/artifactId>\n@@ -33,1 +33,1 @@\n-        <artifactId>hat-wrap-root<\/artifactId>\n+        <artifactId>hat-wraps<\/artifactId>\n","filename":"hat\/wraps\/shared\/pom.xml","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"hat\/wraps\/wrap\/pom.xml","status":"renamed"},{"patch":"","filename":"hat\/wraps\/shared\/src\/main\/java\/wrap\/ArenaHolder.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hat\/wraps\/wrap\/src\/main\/java\/wrap\/ArenaHolder.java","status":"renamed"},{"patch":"","filename":"hat\/wraps\/shared\/src\/main\/java\/wrap\/LayoutBuilder.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hat\/wraps\/wrap\/src\/main\/java\/wrap\/LayoutBuilder.java","status":"renamed"},{"patch":"","filename":"hat\/wraps\/shared\/src\/main\/java\/wrap\/Scalar.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hat\/wraps\/wrap\/src\/main\/java\/wrap\/Scalar.java","status":"renamed"},{"patch":"","filename":"hat\/wraps\/shared\/src\/main\/java\/wrap\/Sequence.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hat\/wraps\/wrap\/src\/main\/java\/wrap\/Sequence.java","status":"renamed"},{"patch":"","filename":"hat\/wraps\/shared\/src\/main\/java\/wrap\/Wrap.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"hat\/wraps\/wrap\/src\/main\/java\/wrap\/Wrap.java","status":"renamed"}]}