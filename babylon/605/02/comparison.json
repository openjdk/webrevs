{"files":[{"patch":"@@ -214,1 +214,5 @@\n-                    builder.nl().kernelMethod(buildContext, funcOp).nl();\n+                    if (funcOp.location().equals(kernelCallGraph.entrypoint.funcOp().location())) {\n+                        builder.nl().kernelEntrypoint(buildContext, args).nl();\n+                    } else {\n+                        builder.nl().kernelMethod(buildContext, funcOp).nl();\n+                    }\n","filename":"hat\/backends\/ffi\/shared\/src\/main\/java\/hat\/backend\/ffi\/C99FFIBackend.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -187,6 +187,1 @@\n-                } catch (ReflectiveOperationException _) {\n-                    throw new IllegalStateException(\"Could not resolve invokeWrapper to method\");\n-                }\n-            }\n-            return map;\n-        });\n+                });\n","filename":"hat\/core\/src\/main\/java\/hat\/optools\/OpTk.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"}]}