{"files":[{"patch":"@@ -3110,9 +3110,6 @@\n-                if (pattern instanceof ExtendedOp.PatternOps.RecordPatternOp rp) {\n-                    return lowerRecordPattern(endNoMatchBlock, currentBlock, bindings, rp, target);\n-                } else if (pattern instanceof TypePatternOp bp) {\n-                    return lowerBindingPattern(endNoMatchBlock, currentBlock, bindings, bp, target);\n-                } else if (pattern instanceof MatchAllPatternOp) {\n-                    return lowerMatchAllPattern(currentBlock);\n-                } else {\n-                    throw new UnsupportedOperationException(\"Unknown pattern op: \" + pattern);\n-                }\n+                return switch (pattern) {\n+                    case RecordPatternOp rp -> lowerRecordPattern(endNoMatchBlock, currentBlock, bindings, rp, target);\n+                    case TypePatternOp tp -> lowerBindingPattern(endNoMatchBlock, currentBlock, bindings, tp, target);\n+                    case MatchAllPatternOp map -> lowerMatchAllPattern(currentBlock);\n+                    case null, default -> throw new UnsupportedOperationException(\"Unknown pattern op: \" + pattern);\n+                };\n@@ -3151,2 +3148,2 @@\n-                                                     TypePatternOp bpOp, Value target) {\n-                TypeElement targetType = bpOp.targetType();\n+                                                     TypePatternOp tpOp, Value target) {\n+                TypeElement targetType = tpOp.targetType();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"}]}