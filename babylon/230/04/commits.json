[{"commit":{"message":"Align variable names with its types"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"fe4034365c0c1a6a07f8fed1b893fd2fbb19e743"},{"commit":{"message":"Refactor"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"3dfaf1c6e2db238a7bb7067336d6a4e7358df042"},{"commit":{"message":"Merge branch 'code-reflection' into match-all-pattern\n\n# Conflicts:\n#\ttest\/langtools\/tools\/javac\/reflect\/PatternsTest.java"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"}],"sha":"2f521c0a072885a5cba2ebf0e3a3762cb8fb474e"},{"commit":{"message":"Apply suggestions"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"8313eb596fc17a40854f164d41523be158e28ae0"},{"commit":{"message":"Simplify test of match all pattern"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPatterns.java"}],"sha":"cbe2805982a9dd6062820dac630964df051073e8"},{"commit":{"message":"Update modeling of match all pattern"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPatterns.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PatternsTest.java"}],"sha":"916e265d3422240ccee47c3dc10b4a7da1462aba"},{"commit":{"message":"Support match all pattern for non-generic records"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPatterns.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PatternsTest.java"}],"sha":"f424700154012cb4bd66786810807e9483169ee0"},{"commit":{"message":"Update the result type of TypePatternOp"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PatternsTest.java"}],"sha":"6e240c23336fe653d9b211904a74d5747c794795"},{"commit":{"message":"Keep Var that correspond to unnamed pattern variable"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PatternsTest.java"}],"sha":"fd979437732053007ee2d66e4e53aa9faf10d4f6"},{"commit":{"message":"Rename BindingPatternOp to TypePatternOp"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PatternsTest.java"}],"sha":"616e17e71a8985dd3c566831ac48f405a2c71a03"},{"commit":{"message":"Pass null as binding-name when type pattern variable unnamed"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PatternsTest.java"}],"sha":"fc6aa50760c33a939dde7c8d4f25f95dcf03bf88"},{"commit":{"message":"Update effected tests"},"files":[],"sha":"1754511540e7ef3e138bc0c07b1b80b271df0d11"},{"commit":{"message":"Update the model of pattern matching when pattern variable identifier is \"_\""},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PatternsTest.java"}],"sha":"4c1c4169611fcb40bd5d578b22e52a9415f2ec05"}]