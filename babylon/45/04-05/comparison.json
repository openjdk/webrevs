{"files":[{"patch":"@@ -240,10 +240,0 @@\n-    static BranchTarget getBranchTarget(CopyContext cc, Op op) {\n-        @SuppressWarnings(\"unchecked\")\n-        Map<Op, BranchTarget> m = (Map<Op, BranchTarget>) cc.getProperty(BRANCH_TARGET_MAP_PROPERTY_KEY);\n-        if (m != null) {\n-            return m.get(op);\n-        }\n-\n-        return null;\n-    }\n-\n@@ -259,7 +249,0 @@\n-    static void setBranchTarget(CopyContext cc, Op label, BranchTarget t) {\n-        @SuppressWarnings(\"unchecked\")\n-        Map<Op, BranchTarget> x = (Map<Op, BranchTarget>) cc.computePropertyIfAbsent(\n-                BRANCH_TARGET_MAP_PROPERTY_KEY, k -> new HashMap<>());\n-        x.put(label, t);\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -111,8 +111,1 @@\n-        CoreOp.FuncOp lf = f.transform((block, op) -> {\n-            if (op instanceof Op.Lowerable lop) {\n-                return lop.lower(block);\n-            } else {\n-                block.op(op);\n-                return block;\n-            }\n-        });\n+        CoreOp.FuncOp lf = f.transform(OpTransformer.LOWERING_TRANSFORMER);\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestSwitchExpressionOp.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"}]}