{"files":[{"patch":"@@ -63,1 +63,1 @@\n-   ${CMAKE_BINARY_DIR}\/hat ${CMAKE_BINARY_DIR}\/mandel ${CMAKE_BINARY_DIR}\/violajones ${CMAKE_BINARY_DIR}\/experiments \n+   ${CMAKE_BINARY_DIR}\/hat ${CMAKE_BINARY_DIR}\/mandel ${CMAKE_BINARY_DIR}\/violajones ${CMAKE_BINARY_DIR}\/experiments\n@@ -77,1 +77,1 @@\n-### Compilation dependencies list is \n+### Compilation dependencies list is\n@@ -79,1 +79,1 @@\n-###    examples -> hat \n+###    examples -> hat\n@@ -83,1 +83,1 @@\n-###                     -> libopencl_backend(.so|.dylib)  \n+###                     -> libopencl_backend(.so|.dylib)\n@@ -85,2 +85,2 @@\n-###                                                       \\ \n-###    spirv_info(exe)  -> libspirv_backend(.so|.dylib) ->     backend(.so|.dylib)                  \n+###                                                       \\\n+###    spirv_info(exe)  -> libspirv_backend(.so|.dylib) ->     backend(.so|.dylib)\n@@ -89,1 +89,1 @@\n-###                     -> libcuda_backend(.so|.dylib) \n+###                     -> libcuda_backend(.so|.dylib)\n@@ -92,1 +92,1 @@\n-###    \n+###\n@@ -96,1 +96,1 @@\n-###  mandel (opencl) -> examples        > hat   \n+###  mandel (opencl) -> examples        > hat\n@@ -98,1 +98,1 @@\n-###                     opencl_backend   \n+###                     opencl_backend\n@@ -100,1 +100,1 @@\n-###                                       libopencl_backend(.so|.dylib)  \n+###                                       libopencl_backend(.so|.dylib)\n@@ -105,1 +105,1 @@\n-### build\/hat\/hat.jar \n+### build\/hat\/hat.jar\n@@ -114,1 +114,1 @@\n-add_custom_target(hat.javac \n+add_custom_target(hat.javac\n@@ -120,1 +120,1 @@\n-        -d ${HAT_CLASS_DIR} \n+        -d ${HAT_CLASS_DIR}\n@@ -122,1 +122,1 @@\n-        --add-exports=java.base\/jdk.internal=ALL-UNNAMED \n+        --add-exports=java.base\/jdk.internal=ALL-UNNAMED\n@@ -147,1 +147,1 @@\n-add_custom_target(mandel.javac DEPENDS hat.jar \n+add_custom_target(mandel.javac DEPENDS hat.jar\n@@ -152,1 +152,1 @@\n-       --enable-preview --source=23 -g -Xlint:unchecked  \n+       --enable-preview --source=23 -g -Xlint:unchecked\n@@ -160,1 +160,1 @@\n-     ${JAVA_HOME}\/bin\/jar --create --no-manifest \n+     ${JAVA_HOME}\/bin\/jar --create --no-manifest\n@@ -162,1 +162,1 @@\n-       -C ${MANDEL_CLASS_DIR} . \n+       -C ${MANDEL_CLASS_DIR} .\n@@ -174,1 +174,1 @@\n-add_custom_target(violajones.javac DEPENDS hat.jar \n+add_custom_target(violajones.javac DEPENDS hat.jar\n@@ -179,1 +179,1 @@\n-       --enable-preview --source=23 -g -Xlint:unchecked  \n+       --enable-preview --source=23 -g -Xlint:unchecked\n@@ -187,1 +187,1 @@\n-     ${JAVA_HOME}\/bin\/jar --create --no-manifest \n+     ${JAVA_HOME}\/bin\/jar --create --no-manifest\n@@ -189,2 +189,2 @@\n-       -C ${VIOLAJONES_CLASS_DIR} . \n-       -C ${CMAKE_SOURCE_DIR}\/examples\/violajones\/src\/resources . \n+       -C ${VIOLAJONES_CLASS_DIR} .\n+       -C ${CMAKE_SOURCE_DIR}\/examples\/violajones\/src\/resources .\n@@ -195,2 +195,2 @@\n-#### We can always build the Java artifacts for all of our backends \n-#### we do need to guard the building of native artifacts \n+#### We can always build the Java artifacts for all of our backends\n+#### we do need to guard the building of native artifacts\n@@ -198,1 +198,1 @@\n-#### machine may not have the appropriate headers or libs to link to \n+#### machine may not have the appropriate headers or libs to link to\n@@ -215,1 +215,1 @@\n-       --enable-preview --source=23 -g -Xlint:unchecked  \n+       --enable-preview --source=23 -g -Xlint:unchecked\n@@ -236,2 +236,2 @@\n-     include_directories( \n-        ${CMAKE_SOURCE_DIR}\/backends\/shared\/include \n+     include_directories(\n+        ${CMAKE_SOURCE_DIR}\/backends\/shared\/include\n@@ -250,1 +250,1 @@\n-     target_link_libraries(opencl_backend \n+     target_link_libraries(opencl_backend\n@@ -254,1 +254,1 @@\n-     add_executable(opencl_info \n+     add_executable(opencl_info\n@@ -262,1 +262,1 @@\n-     target_link_libraries(opencl_info \n+     target_link_libraries(opencl_info\n@@ -281,0 +281,43 @@\n+     include_directories(\n+        ${CMAKE_SOURCE_DIR}\/backends\/shared\/include\n+        ${CMAKE_SOURCE_DIR}\/backends\/opencl\/include\n+        ${OPENCL_INCLUDE_DIR}\n+     )\n+     link_directories(\n+        ${CMAKE_BINARY_DIR}\n+     )\n+\n+     add_library(opencl_backend SHARED\n+        ${CMAKE_SOURCE_DIR}\/backends\/shared\/cpp\/shared.cpp\n+        ${CMAKE_SOURCE_DIR}\/backends\/opencl\/cpp\/opencl_backend.cpp\n+     )\n+\n+     target_link_libraries(opencl_backend\n+        \"OpenCL\"\n+     )\n+\n+     add_executable(opencl_info\n+        ${CMAKE_SOURCE_DIR}\/backends\/opencl\/cpp\/info.cpp\n+     )\n+\n+     target_link_libraries(opencl_info\n+        opencl_backend\n+        \"-framework OpenCL\"\n+     )\n+     target_link_libraries(opencl_info\n+          \"-framework OpenCL\"\n+     )\n+\n+     add_custom_target(opencl_info_exec DEPENDS opencl_backend.jar opencl_backend\n+        COMMAND  ${DOIT}\n+          ${JAVA_HOME}\/bin\/java\n+            --enable-preview --enable-native-access=ALL-UNNAMED\n+            --add-exports=java.base\/jdk.internal=ALL-UNNAMED\n+            -classpath ${OPENCL_BACKEND_JAR}:${HAT_JAR}\n+            -Djava.library.path=${CMAKE_BINARY_DIR}\n+            hat.backend.OpenCLDeviceInfo\n+     )\n+     add_dependencies(info_executables opencl_info)\n+     add_dependencies(backend_libs opencl_backend)\n+\n+     set(AVAILABLE_BACKEND_JAR ${OPENCL_BACKEND_JAR})\n@@ -284,1 +327,1 @@\n-   add_custom_target(echo_only DEPENDS opencl_backend\n+     add_custom_target(echo_only DEPENDS opencl_backend add--with-jtreg=${JTREG_HOME}\n@@ -310,1 +353,1 @@\n-        --enable-preview --source=23 -g -Xlint:unchecked  \n+        --enable-preview --source=23 -g -Xlint:unchecked\n@@ -341,1 +384,1 @@\n-  add_library(cuda_backend SHARED \n+  add_library(cuda_backend SHARED\n@@ -355,2 +398,2 @@\n-  target_link_libraries(cuda_info \n-     cuda_backend \n+  target_link_libraries(cuda_info\n+     cuda_backend\n@@ -387,1 +430,1 @@\n-##SPRIV Backend \n+##SPRIV Backend\n@@ -405,1 +448,1 @@\n-        --enable-preview --source=23 -g -Xlint:unchecked  \n+        --enable-preview --source=23 -g -Xlint:unchecked\n@@ -425,1 +468,1 @@\n-## We dont need to guard this yet because we don't need SPIRV headers or libs to link to \n+## We dont need to guard this yet because we don't need SPIRV headers or libs to link to\n@@ -430,2 +473,2 @@\n-include_directories( \n-    ${CMAKE_SOURCE_DIR}\/backends\/shared\/include \n+include_directories(\n+    ${CMAKE_SOURCE_DIR}\/backends\/shared\/include\n@@ -443,1 +486,1 @@\n-  target_link_libraries(spirv_backend \n+  target_link_libraries(spirv_backend\n@@ -446,1 +489,1 @@\n-  add_executable(spirv_info \n+  add_executable(spirv_info\n@@ -450,1 +493,1 @@\n-  target_link_libraries(spirv_info \n+  target_link_libraries(spirv_info\n@@ -472,1 +515,1 @@\n-##PTX Backend \n+##PTX Backend\n@@ -486,1 +529,1 @@\n-        --enable-preview --source=23 -g -Xlint:unchecked  \n+        --enable-preview --source=23 -g -Xlint:unchecked\n@@ -504,1 +547,1 @@\n-## We dont need to guard these during initial development because we don't need CUDA headers or libs to link to \n+## We dont need to guard these during initial development because we don't need CUDA headers or libs to link to\n@@ -508,2 +551,2 @@\n-include_directories( \n-    ${CMAKE_SOURCE_DIR}\/backends\/shared\/include \n+include_directories(\n+    ${CMAKE_SOURCE_DIR}\/backends\/shared\/include\n@@ -521,1 +564,1 @@\n-  target_link_libraries(ptx_backend \n+  target_link_libraries(ptx_backend\n@@ -524,1 +567,1 @@\n-  add_executable(ptx_info \n+  add_executable(ptx_info\n@@ -528,1 +571,1 @@\n-  target_link_libraries(ptx_info \n+  target_link_libraries(ptx_info\n@@ -547,1 +590,1 @@\n-##MOCK Backend \n+##MOCK Backend\n@@ -561,1 +604,1 @@\n-        --enable-preview --source=23 -g -Xlint:unchecked  \n+        --enable-preview --source=23 -g -Xlint:unchecked\n@@ -579,1 +622,1 @@\n-## We dont need to guard these because we don't have headers or libs to link to \n+## We dont need to guard these because we don't have headers or libs to link to\n@@ -582,2 +625,2 @@\n-include_directories( \n-    ${CMAKE_SOURCE_DIR}\/backends\/shared\/include \n+include_directories(\n+    ${CMAKE_SOURCE_DIR}\/backends\/shared\/include\n@@ -595,1 +638,1 @@\n-  target_link_libraries(mock_backend \n+  target_link_libraries(mock_backend\n@@ -598,1 +641,1 @@\n-  add_executable(mock_info \n+  add_executable(mock_info\n@@ -602,1 +645,1 @@\n-  target_link_libraries(mock_info \n+  target_link_libraries(mock_info\n@@ -624,1 +667,1 @@\n-add_custom_target(mandel_java DEPENDS mandel.jar \n+add_custom_target(mandel_java DEPENDS mandel.jar\n@@ -642,1 +685,1 @@\n-) \n+)\n@@ -655,1 +698,1 @@\n-add_custom_target(violajones_java DEPENDS violajones.jar \n+add_custom_target(violajones_java DEPENDS violajones.jar\n@@ -673,1 +716,1 @@\n-) \n+)\n@@ -683,1 +726,1 @@\n-) \n+)\n@@ -688,2 +731,2 @@\n-      --create \n-      --no-manifest \n+      --create\n+      --no-manifest\n@@ -693,1 +736,1 @@\n-      -C ${CMAKE_SOURCE_DIR} backends \n+      -C ${CMAKE_SOURCE_DIR} backends\n","filename":"hat\/CMakeLists.txt","additions":113,"deletions":70,"binary":false,"changes":183,"status":"modified"}]}