{"files":[{"patch":"@@ -44,1 +44,1 @@\n-               \/\/   .hashDefine(\"HAT_CUDA\")\n+                .hashDefine(\"HAT_CUDA\")\n@@ -47,20 +47,20 @@\n-                .hashDefine(\"_GLOBAL_MEM\", _ -> {})\n-                .hashDefine(\"_LOCAL_MEM\", _ -> keyword(\"__shared__\"))\n-                .hashDefine(\"_FUNC\", _->externC().space().keyword(\"__device__\").space().keyword(\"inline\"))\n-                .hashDefine(\"_KERNEL\", _->externC().space().keyword(\"__global__\"))\n-                .hashDefine(\"_gix()\", _ -> paren(_->blockId(0).asterisk().localSize(0).plus().localId(0)))\n-                .hashDefine(\"_giy()\", _ -> paren(_->blockId(1).asterisk().localSize(1).plus().localId(1)))\n-                .hashDefine(\"_giz()\", _ -> paren(_->blockId(2).asterisk().localSize(2).plus().localId(2)))\n-                .hashDefine(\"_lix()\", _ -> keyword(\"threadIdx\").dot().threadDimId(0))\n-                .hashDefine(\"_liy()\", _ -> keyword(\"threadIdx\").dot().threadDimId(1))\n-                .hashDefine(\"_liz()\", _ -> keyword(\"threadIdx\").dot().threadDimId(2))\n-                .hashDefine(\"_gsx()\", _ -> keyword(\"gridDim\").dot().threadDimId(0).asterisk().localSize(0))\n-                .hashDefine(\"_gsy()\", _ -> keyword(\"gridDim\").dot().threadDimId(1).asterisk().localSize(1))\n-                .hashDefine(\"_gsz()\", _ -> keyword(\"gridDim\").dot().threadDimId(2).asterisk().localSize(2))\n-                .hashDefine(\"_lsx()\", _ -> keyword(\"blockDim\").dot().threadDimId(0))\n-                .hashDefine(\"_lsy()\", _ -> keyword(\"blockDim\").dot().threadDimId(1))\n-                .hashDefine(\"_lsz()\", _ -> keyword(\"blockDim\").dot().threadDimId(2))\n-                .hashDefine(\"_bix()\", _ -> keyword(\"blockIdx\").dot().threadDimId(0))\n-                .hashDefine(\"_biy()\", _ -> keyword(\"blockIdx\").dot().threadDimId(1))\n-                .hashDefine(\"_biz()\", _ -> keyword(\"blockIdx\").dot().threadDimId(2))\n-                .hashDefine(\"_barrier()\", _->keyword(\"__syncthreads\").ocparen());\n+                .hashDefine(\"HAT_GLOBAL_MEM\", _ -> {})\n+                .hashDefine(\"HAT_LOCAL_MEM\", _ -> keyword(\"__shared__\"))\n+                .hashDefine(\"HAT_FUNC\", _->externC().space().keyword(\"__device__\").space().keyword(\"inline\"))\n+                .hashDefine(\"HAT_KERNEL\", _->externC().space().keyword(\"__global__\"))\n+                .hashDefine(\"HAT_GIX\", _ -> paren(_->blockId(0).asterisk().localSize(0).plus().localId(0)))\n+                .hashDefine(\"HAT_GIY\", _ -> paren(_->blockId(1).asterisk().localSize(1).plus().localId(1)))\n+                .hashDefine(\"HAT_GIZ\", _ -> paren(_->blockId(2).asterisk().localSize(2).plus().localId(2)))\n+                .hashDefine(\"HAT_LIX\", _ -> keyword(\"threadIdx\").dot().threadDimId(0))\n+                .hashDefine(\"HAT_LIY\", _ -> keyword(\"threadIdx\").dot().threadDimId(1))\n+                .hashDefine(\"HAT_LIZ\", _ -> keyword(\"threadIdx\").dot().threadDimId(2))\n+                .hashDefine(\"HAT_GSX\", _ -> keyword(\"gridDim\").dot().threadDimId(0).asterisk().localSize(0))\n+                .hashDefine(\"HAT_GSY\", _ -> keyword(\"gridDim\").dot().threadDimId(1).asterisk().localSize(1))\n+                .hashDefine(\"HAT_GSZ\", _ -> keyword(\"gridDim\").dot().threadDimId(2).asterisk().localSize(2))\n+                .hashDefine(\"HAT_LSX\", _ -> keyword(\"blockDim\").dot().threadDimId(0))\n+                .hashDefine(\"HAT_LSY\", _ -> keyword(\"blockDim\").dot().threadDimId(1))\n+                .hashDefine(\"HAT_LSZ\", _ -> keyword(\"blockDim\").dot().threadDimId(2))\n+                .hashDefine(\"HAT_BIX\", _ -> keyword(\"blockIdx\").dot().threadDimId(0))\n+                .hashDefine(\"HAT_BIY\", _ -> keyword(\"blockIdx\").dot().threadDimId(1))\n+                .hashDefine(\"HAT_BIZ\", _ -> keyword(\"blockIdx\").dot().threadDimId(2))\n+                .hashDefine(\"HAT_BARRIER\", _->keyword(\"__syncthreads\").ocparen());\n@@ -70,21 +70,0 @@\n-    \/*\n-    @Override\n-   public CudaHATKernelBuilder kernelPrefix() {\n-       return externC().space().keyword(\"__global__\").space();\n-   }\n-\n-    @Override\n-    public CudaHATKernelBuilder functionPrefix() {\n-        return externC().space().keyword(\"__device__\").space().keyword(\"inline\").space();\n-    }\n-\n-    @Override\n-    public CudaHATKernelBuilder globalPtrPrefix() {\n-        return self();\n-    }\n-\n-    @Override\n-    public CudaHATKernelBuilder localPtrPrefix() {\n-        return keyword(\"__shared__\").space();\n-    } *\/\n-\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/java\/hat\/backend\/ffi\/CudaHATKernelBuilder.java","additions":21,"deletions":42,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-                \/\/  .hashDefine(\"HAT_OPENCL\")\n+                .hashDefine(\"HAT_OPENCL\")\n@@ -43,20 +43,20 @@\n-                .hashDefine(\"_FUNC\", _ -> keyword(\"inline\"))\n-                .hashDefine(\"_KERNEL\", _ -> keyword(\"__kernel\"))\n-                .hashDefine(\"_GLOBAL_MEM\", _ -> keyword(\"__global\"))\n-                .hashDefine(\"_LOCAL_MEM\", _ -> keyword(\"__local\"))\n-                .hashDefine(\"_gix()\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstZero())))\n-                .hashDefine(\"_giy()\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstOne())))\n-                .hashDefine(\"_giz()\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstTwo())))\n-                .hashDefine(\"_lix()\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstZero())))\n-                .hashDefine(\"_liy()\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstOne())))\n-                .hashDefine(\"_liz()\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstTwo())))\n-                .hashDefine(\"_gsx()\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstZero())))\n-                .hashDefine(\"_gsy()\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstOne())))\n-                .hashDefine(\"_gsz()\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstTwo())))\n-                .hashDefine(\"_lsx()\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstZero())))\n-                .hashDefine(\"_lsy()\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstOne())))\n-                .hashDefine(\"_lsz()\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstTwo())))\n-                .hashDefine(\"_bix()\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstZero())))\n-                .hashDefine(\"_biy()\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstOne())))\n-                .hashDefine(\"_biz()\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstTwo())))\n-                .hashDefine(\"_barrier()\", _ -> identifier(\"barrier\").oparen().identifier(\"CLK_LOCAL_MEM_FENCE\").cparen());\n+                .hashDefine(\"HAT_FUNC\", _ -> keyword(\"inline\"))\n+                .hashDefine(\"HAT_KERNEL\", _ -> keyword(\"__kernel\"))\n+                .hashDefine(\"HAT_GLOBAL_MEM\", _ -> keyword(\"__global\"))\n+                .hashDefine(\"HAT_LOCAL_MEM\", _ -> keyword(\"__local\"))\n+                .hashDefine(\"HAT_GIX\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstZero())))\n+                .hashDefine(\"HAT_GIY\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstOne())))\n+                .hashDefine(\"HAT_GIZ\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstTwo())))\n+                .hashDefine(\"HAT_LIX\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstZero())))\n+                .hashDefine(\"HAT_LIY\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstOne())))\n+                .hashDefine(\"HAT_LIZ\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstTwo())))\n+                .hashDefine(\"HAT_GSX\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstZero())))\n+                .hashDefine(\"HAT_GSY\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstOne())))\n+                .hashDefine(\"HAT_GSZ\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstTwo())))\n+                .hashDefine(\"HAT_LSX\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstZero())))\n+                .hashDefine(\"HAT_LSY\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstOne())))\n+                .hashDefine(\"HAT_LSZ\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstTwo())))\n+                .hashDefine(\"HAT_BIX\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstZero())))\n+                .hashDefine(\"HAT_BIY\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstOne())))\n+                .hashDefine(\"HAT_BIZ\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstTwo())))\n+                .hashDefine(\"HAT_BARRIER\", _ -> identifier(\"barrier\").oparen().identifier(\"CLK_LOCAL_MEM_FENCE\").cparen());\n","filename":"hat\/backends\/ffi\/opencl\/src\/main\/java\/hat\/backend\/ffi\/OpenCLHATKernelBuilder.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -170,3 +170,3 @@\n-            case 0 -> identifier(\"_gix()\");\n-            case 1 -> identifier(\"_giy()\");\n-            case 2 -> identifier(\"_giz()\");\n+            case 0 -> identifier(\"HAT_GIX\");\n+            case 1 -> identifier(\"HAT_GIY\");\n+            case 2 -> identifier(\"HAT_GIZ\");\n@@ -180,3 +180,3 @@\n-            case 0 -> identifier(\"_lix()\");\n-            case 1 -> identifier(\"_liy()\");\n-            case 2 -> identifier(\"_liz()\");\n+            case 0 -> identifier(\"HAT_LIX\");\n+            case 1 -> identifier(\"HAT_LIY\");\n+            case 2 -> identifier(\"HAT_LIZ\");\n@@ -190,3 +190,3 @@\n-            case 0 -> identifier(\"_gsx()\");\n-            case 1 -> identifier(\"_gsy()\");\n-            case 2 -> identifier(\"_gsz()\");\n+            case 0 -> identifier(\"HAT_GSX\");\n+            case 1 -> identifier(\"HAT_GSY\");\n+            case 2 -> identifier(\"HAT_GSZ\");\n@@ -200,3 +200,3 @@\n-            case 0 -> identifier(\"_lsx()\");\n-            case 1 -> identifier(\"_lsy()\");\n-            case 2 -> identifier(\"_lsz()\");\n+            case 0 -> identifier(\"HAT_LSX\");\n+            case 1 -> identifier(\"HAT_LSY\");\n+            case 2 -> identifier(\"HAT_LSZ\");\n@@ -211,3 +211,3 @@\n-            case 0 -> identifier(\"_bix()\");\n-            case 1 -> identifier(\"_biy()\");\n-            case 2 -> identifier(\"_biz()\");\n+            case 0 -> identifier(\"HAT_BIX\");\n+            case 1 -> identifier(\"HAT_BIY\");\n+            case 2 -> identifier(\"HAT_BIZ\");\n@@ -218,1 +218,0 @@\n- \/\/   public abstract T kernelPrefix();\n@@ -224,1 +223,0 @@\n-   \/\/ public abstract  T functionPrefix();\n@@ -232,1 +230,1 @@\n-        return keyword(\"_KERNEL\").space();\n+        return keyword(\"HAT_KERNEL\").space();\n@@ -236,1 +234,1 @@\n-        return keyword(\"_FUNC\").space();\n+        return keyword(\"HAT_FUNC\").space();\n@@ -240,1 +238,1 @@\n-        return keyword(\"_GLOBAL_MEM\").space();\n+        return keyword(\"HAT_GLOBAL_MEM\").space();\n@@ -244,1 +242,1 @@\n-        return keyword(\"_LOCAL_MEM\").space();\n+        return keyword(\"HAT_LOCAL_MEM\").space();\n@@ -248,1 +246,1 @@\n-        return identifier(\"_barrier\").ocparen();\n+        return identifier(\"HAT_BARRIER\");\n@@ -251,5 +249,0 @@\n-\n-  \/\/  public abstract T globalPtrPrefix();\n-\n-  \/\/  public abstract T localPtrPrefix();\n-\n","filename":"hat\/core\/src\/main\/java\/hat\/codebuilders\/C99HATKernelBuilder.java","additions":20,"deletions":27,"binary":false,"changes":47,"status":"modified"}]}