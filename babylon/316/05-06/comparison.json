{"files":[{"patch":"@@ -357,1 +357,1 @@\n-    private OrtTensor createTensor(MemorySegment flatData, Tensor.ElementType elementType, TensorShape shape) {\n+    OrtTensor createTensor(MemorySegment flatData, Tensor.ElementType elementType, TensorShape shape) {\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxRuntime.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+import java.lang.foreign.MemorySegment;\n@@ -326,1 +327,1 @@\n-    public void test() {\n+    public void test() throws Exception {\n@@ -329,2 +330,1 @@\n-        System.out.println(onnxModel.toText());\n-\n+\/\/        System.out.println(onnxModel.toText());\n@@ -332,2 +332,1 @@\n-        System.out.println(expectedOnnxModel.toText());\n-\n+\/\/        System.out.println(expectedOnnxModel.toText());\n@@ -336,6 +335,21 @@\n-\/\/ @@@ needs some muckup tensors data\n-\/\/        Tensor<Float> conv1Weights, conv1Biases, conv2Weights, conv2Biases, fc1Weights, fc1Biases, fc2Weights, fc2Biases, fc3Weights, fc3Biases, inputImage;\n-\/\/        Assertions.assertEquals(\n-\/\/            cnn(conv1Weights, conv1Biases, conv2Weights, conv2Biases, fc1Weights, fc1Biases, fc2Weights, fc2Biases, fc3Weights, fc3Biases, inputImage),\n-\/\/            OnnxRuntime.getInstance().runFunc(onnxModel, Stream.of(conv1Weights, conv1Biases, conv2Weights, conv2Biases, fc1Weights, fc1Biases, fc2Weights, fc2Biases, fc3Weights, fc3Biases, inputImage)\n-\/\/                    .map(t -> Optional.of(t.rtTensor)).toList()));\n+        \/\/ @@@ need some image to test :)\n+        Tensor inputImage = new Tensor(new float[28*28]);\n+        List<Tensor> w = loadWeights();\n+        SimpleTest.assertEquals(\n+            cnn(w.get(0), w.get(1), w.get(2), w.get(3), w.get(4), w.get(5), w.get(6), w.get(7), w.get(8), w.get(9), inputImage).rtTensor,\n+            OnnxRuntime.getInstance().runFunc(onnxModel, Stream.concat(w.stream(), Stream.of(inputImage)).map(t -> Optional.of(t.rtTensor)).toList()).getFirst());\n+    }\n+\n+    static List<Tensor> loadWeights() throws IOException {\n+        try (var is = CNNTest.class.getResourceAsStream(\"lenet-torchscript.onnx\")) {\n+            return OnnxMl.ModelProto.parseFrom(is).getGraph().getInitializerList().stream()\n+                    .map(init ->  {\n+                        var bb = ByteBuffer.allocateDirect(init.getRawData().size());\n+                        init.getRawData().copyTo(bb);\n+                        return new Tensor(OnnxRuntime.getInstance().createTensor(\n+                                MemorySegment.ofBuffer(bb.rewind()),\n+                                Tensor.ElementType.fromOnnxId(init.getDataType()),\n+                                OnnxRuntime.getInstance().new TensorShape(init.getDimsList().stream().mapToLong(a -> a).toArray())));\n+                    })\n+                    .toList();\n+        }\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/CNNTest.java","additions":25,"deletions":11,"binary":false,"changes":36,"status":"modified"}]}