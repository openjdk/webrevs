{"files":[{"patch":"@@ -93,26 +93,0 @@\n-    public static float[] classify(float[] imageData) {\n-        try (Arena arena = Arena.ofConfined()) {\n-            var conv1Weights = initialize(\"conv1-weight-float-le\", 6, 1, 5, 5);\n-            var conv1Biases = initialize(\"conv1-bias-float-le\", 6);\n-            var conv2Weights = initialize(\"conv2-weight-float-le\", 16, 6, 5, 5);\n-            var conv2Biases = initialize(\"conv2-bias-float-le\", 16);\n-            var fc1Weights = initialize(\"fc1-weight-float-le\", 120, 256);\n-            var fc1Biases = initialize(\"fc1-bias-float-le\", 120);\n-            var fc2Weights = initialize(\"fc2-weight-float-le\", 84, 120);\n-            var fc2Biases = initialize(\"fc2-bias-float-le\", 84);\n-            var fc3Weights = initialize(\"fc3-weight-float-le\", 10, 84);\n-            var fc3Biases = initialize(\"fc3-bias-float-le\", 10);\n-            var imageTensor = Tensor.ofShape(arena, IMAGE_SHAPE, imageData);\n-\n-            var predictionTensor = OnnxRuntime.execute(arena, MethodHandles.lookup(), 10,\n-                    () -> cnn(conv1Weights, conv1Biases,\n-                              conv2Weights, conv2Biases,\n-                              fc1Weights, fc1Biases,\n-                              fc2Weights, fc2Biases,\n-                              fc3Weights, fc3Biases,\n-                              imageTensor));\n-\n-            return predictionTensor.data().toArray(ValueLayout.JAVA_FLOAT);\n-        }\n-    }\n-\n@@ -126,0 +100,50 @@\n+\n+    private final Tensor<Float> conv1Weights, conv1Biases,\n+                                conv2Weights, conv2Biases,\n+                                fc1Weights, fc1Biases,\n+                                fc2Weights, fc2Biases,\n+                                fc3Weights, fc3Biases;\n+\n+    public MNISTDemo() {\n+        conv1Weights = initialize(\"conv1-weight-float-le\", 6, 1, 5, 5);\n+        conv1Biases = initialize(\"conv1-bias-float-le\", 6);\n+        conv2Weights = initialize(\"conv2-weight-float-le\", 16, 6, 5, 5);\n+        conv2Biases = initialize(\"conv2-bias-float-le\", 16);\n+        fc1Weights = initialize(\"fc1-weight-float-le\", 120, 256);\n+        fc1Biases = initialize(\"fc1-bias-float-le\", 120);\n+        fc2Weights = initialize(\"fc2-weight-float-le\", 84, 120);\n+        fc2Biases = initialize(\"fc2-bias-float-le\", 84);\n+        fc3Weights = initialize(\"fc3-weight-float-le\", 10, 84);\n+        fc3Biases = initialize(\"fc3-bias-float-le\", 10);\n+    }\n+\n+    public float[] classify(float[] imageData) {\n+\n+        return classify(conv1Weights, conv1Biases,\n+                        conv2Weights, conv2Biases,\n+                        fc1Weights, fc1Biases,\n+                        fc2Weights, fc2Biases,\n+                        fc3Weights, fc3Biases,\n+                        imageData);\n+    }\n+\n+    float[] classify(Tensor<Float> conv1Weights, Tensor<Float> conv1Biases,\n+                     Tensor<Float> conv2Weights, Tensor<Float> conv2Biases,\n+                     Tensor<Float> fc1Weights, Tensor<Float> fc1Biases,\n+                     Tensor<Float> fc2Weights, Tensor<Float> fc2Biases,\n+                     Tensor<Float> fc3Weights, Tensor<Float> fc3Biases,\n+                     float[] imageData) {\n+\n+        try (var arena = Arena.ofConfined()) {\n+\n+            Tensor<Float> imageTensor = Tensor.ofShape(arena, IMAGE_SHAPE, imageData);\n+\n+            return OnnxRuntime.execute(arena, MethodHandles.lookup(), 10,\n+                    () -> cnn(conv1Weights, conv1Biases,\n+                              conv2Weights, conv2Biases,\n+                              fc1Weights, fc1Biases,\n+                              fc2Weights, fc2Biases,\n+                              fc3Weights, fc3Biases,\n+                              imageTensor)).data().toArray(ValueLayout.JAVA_FLOAT);\n+        }\n+    }\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/mnist\/MNISTDemo.java","additions":50,"deletions":26,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+        var mnist = new MNISTDemo();\n@@ -80,1 +81,1 @@\n-                    var results = MNISTDemo.classify(imageData);\n+                    var results = mnist.classify(imageData);\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/mnist\/MNISTDemoUI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}