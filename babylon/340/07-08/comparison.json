{"files":[{"patch":"@@ -10,1 +10,0 @@\n-import java.util.stream.LongStream;\n@@ -33,2 +32,2 @@\n-        Attribute floats(float floats) {return _f(7, floats);}\n-        Attribute ints(long ints) {return _f(8, ints);}\n+        Attribute floats(float... floats) {return _f(7, floats);}\n+        Attribute ints(long... ints) {return _f(8, ints);}\n@@ -106,1 +105,1 @@\n-        TensorProto dims(long dims) {return _f(1, dims);}\n+        TensorProto dims(long... dims) {return _f(1, dims);}\n@@ -109,2 +108,2 @@\n-        TensorProto float_data(float float_data) {return _f(4, float_data);}\n-        TensorProto int32_data(int int32_data) {return _f(5, int32_data);}\n+        TensorProto float_data(float... float_data) {return _f(4, float_data);}\n+        TensorProto int32_data(int... int32_data) {return _f(5, int32_data);}\n@@ -112,1 +111,1 @@\n-        TensorProto int64_data(long int64_data) {return _f(7, int64_data);}\n+        TensorProto int64_data(long... int64_data) {return _f(7, int64_data);}\n@@ -118,2 +117,2 @@\n-        TensorProto double_data(double double_data) {return _f(10, double_data);}\n-        TensorProto uint64_data(long uint64_data) {return _f(11, uint64_data);}\n+        TensorProto double_data(double... double_data) {return _f(10, double_data);}\n+        TensorProto uint64_data(long... uint64_data) {return _f(11, uint64_data);}\n@@ -131,1 +130,1 @@\n-        SparseTensorProto dims(long dims) {return _f(3, dims);}\n+        SparseTensorProto dims(long... dims) {return _f(3, dims);}\n@@ -206,0 +205,20 @@\n+    void _encode(float value) {\n+        int bits =  Float.floatToRawIntBits(value);\n+        buf.write((byte)bits);\n+        buf.write((byte)(bits >> 8));\n+        buf.write((byte)(bits >> 16));\n+        buf.write((byte)(bits >> 24));\n+    }\n+\n+    void _encode(double value) {\n+        long bits =  Double.doubleToRawLongBits(value);\n+        buf.write((byte)bits);\n+        buf.write((byte)(bits >> 8));\n+        buf.write((byte)(bits >> 16));\n+        buf.write((byte)(bits >> 24));\n+        buf.write((byte)(bits >> 32));\n+        buf.write((byte)(bits >> 40));\n+        buf.write((byte)(bits >> 48));\n+        buf.write((byte)(bits >> 56));\n+    }\n+\n@@ -222,5 +241,12 @@\n-        int bits =  Float.floatToRawIntBits(value);\n-        buf.write((byte)bits);\n-        buf.write((byte)(bits >> 8));\n-        buf.write((byte)(bits >> 16));\n-        buf.write((byte)(bits >> 24));\n+        _encode(value);\n+        return (T)this;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    T _f(int fieldIndex, float... values) {\n+        if (values.length == 1) {\n+            return _f(fieldIndex, values[0]);\n+        }\n+        var b = new OnnxProtoBuilder();\n+        for (var v : values) b._encode(v);\n+        _f(fieldIndex, b);\n@@ -233,9 +259,12 @@\n-        long bits =  Double.doubleToRawLongBits(value);\n-        buf.write((byte)bits);\n-        buf.write((byte)(bits >> 8));\n-        buf.write((byte)(bits >> 16));\n-        buf.write((byte)(bits >> 24));\n-        buf.write((byte)(bits >> 32));\n-        buf.write((byte)(bits >> 40));\n-        buf.write((byte)(bits >> 48));\n-        buf.write((byte)(bits >> 56));\n+        _encode(value);\n+        return (T)this;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    T _f(int fieldIndex, double... values) {\n+        if (values.length == 1) {\n+            return _f(fieldIndex, values[0]);\n+        }\n+        var b = new OnnxProtoBuilder();\n+        for (var v : values) b._encode(v);\n+        _f(fieldIndex, b);\n@@ -253,1 +282,22 @@\n-    T _f(int fieldIndex, OnnxProtoBuilder value) {\n+    T _f(int fieldIndex, long... values) {\n+        if (values.length == 1) {\n+            return _f(fieldIndex, values[0]);\n+        }\n+        var b = new OnnxProtoBuilder();\n+        for (var v : values) b._encode(v);\n+        _f(fieldIndex, b);\n+        return (T)this;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    T _f(int fieldIndex, int... values) {\n+        if (values.length == 1) {\n+            return _f(fieldIndex, values[0]);\n+        }\n+        var b = new OnnxProtoBuilder();\n+        for (var v : values) b._encode(v);\n+        _f(fieldIndex, b);\n+        return (T)this;\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")   T _f(int fieldIndex, OnnxProtoBuilder value) {\n@@ -370,1 +420,1 @@\n-                .forEach(LongStream.of(tensor.shape()).boxed().toList(), (tp, d) -> tp.dims(d))\n+                .dims(tensor.shape())\n@@ -390,1 +440,1 @@\n-                for (float f : floats) attr.floats(f);\n+                attr.floats(floats);\n@@ -394,1 +444,1 @@\n-                for (long l : longs) attr.ints(l);\n+                attr.ints(longs);\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxProtoBuilder.java","additions":78,"deletions":28,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-    BYTE, BYTES, INT, LONG, FLOAT, DOUBLE, STRING,\n+    BYTES, INT, INTS, FLOAT, FLOATS, DOUBLE, DOUBLES, STRING,\n@@ -19,1 +19,1 @@\n-                3, \"i\", LONG,\n+                3, \"i\", INT,\n@@ -23,2 +23,2 @@\n-                7, \"floats\", FLOAT,\n-                8, \"ints\", LONG,\n+                7, \"floats\", FLOATS,\n+                8, \"ints\", INTS,\n@@ -56,1 +56,1 @@\n-                1, \"ir_version\", LONG,\n+                1, \"ir_version\", INT,\n@@ -60,1 +60,1 @@\n-                5, \"model_version\", LONG,\n+                5, \"model_version\", INT,\n@@ -85,1 +85,1 @@\n-                1, \"dims\", LONG,\n+                1, \"dims\", INTS,\n@@ -88,2 +88,2 @@\n-                4, \"float_data\", FLOAT,\n-                5, \"int32_data\", INT,\n+                4, \"float_data\", FLOATS,\n+                5, \"int32_data\", INTS,\n@@ -91,1 +91,1 @@\n-                7, \"int64_data\", LONG,\n+                7, \"int64_data\", INTS,\n@@ -94,2 +94,2 @@\n-                10, \"double_data\", DOUBLE,\n-                11, \"uint64_data\", LONG,\n+                10, \"double_data\", DOUBLES,\n+                11, \"uint64_data\", INTS,\n@@ -101,2 +101,2 @@\n-                1, \"begin\", LONG,\n-                2, \"end\", LONG);\n+                1, \"begin\", INT,\n+                2, \"end\", INT);\n@@ -106,1 +106,1 @@\n-                3, \"dims\", LONG);\n+                3, \"dims\", INTS);\n@@ -110,1 +110,1 @@\n-                1, \"dim_value\", LONG,\n+                1, \"dim_value\", INT,\n@@ -135,1 +135,1 @@\n-                2, \"version\", LONG);\n+                2, \"version\", INT);\n@@ -173,0 +173,1 @@\n+        data = data.order(ByteOrder.nativeOrder());\n@@ -176,0 +177,1 @@\n+            boolean packed = (tag & 7) == 2;\n@@ -178,1 +180,1 @@\n-                case BYTE, INT, LONG ->\n+                case INT ->\n@@ -180,0 +182,12 @@\n+                case INTS -> {\n+                    if (packed) {\n+                        var size = decodeVarint(data);\n+                        var stop = data.position() + size;\n+                        while (data.position() < stop) {\n+                            System.out.print(decodeVarint(data) + \" \");\n+                        }\n+                        System.out.println();\n+                    } else {\n+                        System.out.println(decodeVarint(data));\n+                    }\n+                }\n@@ -182,0 +196,12 @@\n+                case FLOATS -> {\n+                    if (packed) {\n+                        var size = decodeVarint(data);\n+                        var stop = data.position() + size;\n+                        while (data.position() < stop) {\n+                            System.out.print(data.getFloat() + \" \");\n+                        }\n+                        System.out.println();\n+                    } else {\n+                        System.out.println(data.getFloat());\n+                    }\n+                }\n@@ -184,0 +210,12 @@\n+                case DOUBLES -> {\n+                    if (packed) {\n+                        var size = decodeVarint(data);\n+                        var stop = data.position() + size;\n+                        while (data.position() < stop) {\n+                            System.out.print(data.getDouble() + \" \");\n+                        }\n+                        System.out.println();\n+                    } else {\n+                        System.out.println(data.getDouble());\n+                    }\n+                }\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxProtoPrinter.java","additions":56,"deletions":18,"binary":false,"changes":74,"status":"modified"}]}