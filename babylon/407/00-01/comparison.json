{"files":[{"patch":"@@ -70,0 +70,7 @@\n+        public ExternalizedOp(String name,\n+                              List<Value> operands,\n+                              TypeElement resultType,\n+                              Map<String, Object> attributes) {\n+            this(name, operands, List.of(), resultType, attributes, List.of());\n+        }\n+\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/op\/ExternalizableOp.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -119,0 +119,7 @@\n+    static final FunctionType EXTERNALIZED_OP_2_F_TYPE = functionType(\n+            J_C_O_EXTERNALIZED_OP,\n+            J_L_STRING,\n+            J_U_LIST,\n+            type(TypeElement.class),\n+            J_U_MAP);\n+\n@@ -128,0 +135,2 @@\n+    Map<TypeElement, Value> typeElementMap;\n+\n@@ -147,0 +156,1 @@\n+        this.typeElementMap = new HashMap<>();\n@@ -213,8 +223,17 @@\n-        List<Value> args = List.of(\n-                builder.op(constant(J_L_STRING, name)),\n-                buildList(type(Value.class), operands),\n-                buildList(type(Block.Reference.class), successors),\n-                buildType(resultType),\n-                buildAttributeMap(attributes),\n-                buildList(type(Body.Builder.class), bodies));\n-        return builder.op(_new(ConstructorRef.constructor(EXTERNALIZED_OP_F_TYPE), args));\n+        if (successors.isEmpty() && bodies.isEmpty()) {\n+            List<Value> args = List.of(\n+                    builder.op(constant(J_L_STRING, name)),\n+                    buildList(type(Value.class), operands),\n+                    buildType(resultType),\n+                    buildAttributeMap(attributes));\n+            return builder.op(_new(ConstructorRef.constructor(EXTERNALIZED_OP_2_F_TYPE), args));\n+        } else {\n+            List<Value> args = List.of(\n+                    builder.op(constant(J_L_STRING, name)),\n+                    buildList(type(Value.class), operands),\n+                    buildList(type(Block.Reference.class), successors),\n+                    buildType(resultType),\n+                    buildAttributeMap(attributes),\n+                    buildList(type(Body.Builder.class), bodies));\n+            return builder.op(_new(ConstructorRef.constructor(EXTERNALIZED_OP_F_TYPE), args));\n+        }\n@@ -263,4 +282,6 @@\n-    Value buildType(TypeElement t) {\n-        Value typeString = builder.op(constant(J_L_STRING, t.externalize().toString()));\n-        Value exTypeElem = builder.op(invoke(EX_TYPE_ELEMENT_OF_STRING, typeString));\n-        return builder.op(invoke(TYPE_ELEMENT_FACTORY_CONSTRUCT, typeElementFactory, exTypeElem));\n+    Value buildType(TypeElement _t) {\n+        return typeElementMap.computeIfAbsent(_t, t -> {\n+            Value typeString = builder.op(constant(J_L_STRING, t.externalize().toString()));\n+            Value exTypeElem = builder.op(invoke(EX_TYPE_ELEMENT_OF_STRING, typeString));\n+            return builder.op(invoke(TYPE_ELEMENT_FACTORY_CONSTRUCT, typeElementFactory, exTypeElem));\n+        });\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/writer\/OpBuilder.java","additions":33,"deletions":12,"binary":false,"changes":45,"status":"modified"}]}