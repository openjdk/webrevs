{"files":[{"patch":"@@ -648,5 +648,1 @@\n-        public Value toValue(JCTree tree) {\n-            return toValue(tree, Type.noType);\n-        }\n-\n-        public Value toValue(JCTree tree, Type target) {\n+        public Value toValue(JCExpression expression, Type targetType) {\n@@ -656,18 +652,5 @@\n-                pt = target;\n-                scan(tree);\n-                \/\/ there are cases where tree type is null\n-                \/\/ e.g. if tree represent throw statement\n-                \/\/ if that's case, the sourceType passed to coerce method will be null, this will cause a NPE\n-                \/\/ I decided to add a check before calling coerce\n-                \/\/ so far this only occurred when visiting switch\n-                \/\/ @@@ is this more specific to switch ?\n-                if (result != null) {\n-                    if (tree.type != null) {\n-                        return coerce(result, tree.type, target);\n-                    } else if (target == null || target == Type.noType){\n-                        return result;\n-                    } else {\n-                        throw new IllegalStateException(\"tree type is null and target is \" + target);\n-                    }\n-                }\n-                return  null;\n+                pt = targetType;\n+                scan(expression);\n+                return result != null ?\n+                        coerce(result, expression.type, targetType) :\n+                        null;\n@@ -679,0 +662,10 @@\n+        public Value toValue(JCExpression expression) {\n+            return toValue(expression, Type.noType);\n+        }\n+\n+        public Value toValue(JCTree.JCStatement statement) {\n+            result = null; \/\/ reset\n+            scan(statement);\n+            return result;\n+        }\n+\n@@ -1385,1 +1378,1 @@\n-                Value exprVal = toValue(tree.body, tree.getDescriptorType(types).getReturnType());\n+                Value exprVal = toValue(((JCExpression) tree.body), tree.getDescriptorType(types).getReturnType());\n@@ -1395,1 +1388,1 @@\n-                    toValue(tree.body);\n+                    toValue(((JCTree.JCStatement) tree.body));\n@@ -1602,2 +1595,2 @@\n-                        if (c.body instanceof JCExpression) {\n-                            Value bodyVal = toValue(c.body, yieldType);\n+                        if (c.body instanceof JCTree.JCExpression e) {\n+                            Value bodyVal = toValue(e, yieldType);\n@@ -1605,1 +1598,1 @@\n-                        } else {\n+                        } else if (c.body instanceof JCTree.JCStatement s){\n@@ -1610,1 +1603,1 @@\n-                                Value bodyVal = toValue(c.body);\n+                                Value bodyVal = toValue(s);\n@@ -2023,1 +2016,5 @@\n-                    rValues.add(toValue(resource));\n+                    if (resource instanceof JCTree.JCExpression e) {\n+                        rValues.add(toValue(e));\n+                    } else if (resource instanceof JCTree.JCStatement s) {\n+                        rValues.add(toValue(s));\n+                    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java","additions":27,"deletions":30,"binary":false,"changes":57,"status":"modified"}]}