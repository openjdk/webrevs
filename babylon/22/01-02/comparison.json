{"files":[{"patch":"@@ -29,1 +29,0 @@\n-import java.lang.reflect.code.descriptor.MethodTypeDesc;\n@@ -31,0 +30,1 @@\n+import java.lang.reflect.code.type.FunctionType;\n@@ -45,1 +45,1 @@\n-            final MethodTypeDesc loopDescriptor;\n+            final FunctionType loopDescriptor;\n@@ -47,1 +47,1 @@\n-            Builder(Body.Builder ancestorBody, List<Value> range, MethodTypeDesc loopDescriptor) {\n+            Builder(Body.Builder ancestorBody, List<Value> range, FunctionType loopDescriptor) {\n@@ -154,1 +154,1 @@\n-        MethodTypeDesc bodyType = MethodTypeDesc.methodType(yieldType, bodyParameterTypes);\n+        FunctionType bodyType = FunctionType.functionType(yieldType, bodyParameterTypes);\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/SCFOps.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.lang.reflect.code.descriptor.MethodTypeDesc;\n@@ -113,1 +112,1 @@\n-            Body.Builder bodyC = Body.Builder.of(null, MethodTypeDesc.VOID);\n+            Body.Builder bodyC = Body.Builder.of(null, FunctionType.VOID);\n@@ -141,1 +140,1 @@\n-            final MethodTypeDesc funcDescriptor;\n+            final FunctionType funcDescriptor;\n@@ -143,1 +142,1 @@\n-            Builder(Body.Builder ancestorBody, String funcName, MethodTypeDesc funcDescriptor) {\n+            Builder(Body.Builder ancestorBody, String funcName, FunctionType funcDescriptor) {\n@@ -227,2 +226,2 @@\n-        public MethodTypeDesc funcDescriptor() {\n-            return body.descriptor();\n+        public FunctionType invokableType() {\n+            return body.bodyType();\n@@ -310,1 +309,1 @@\n-            final MethodTypeDesc reduceDescriptor;\n+            final FunctionType reduceDescriptor;\n@@ -312,1 +311,1 @@\n-            Builder(Body.Builder ancestorBody, int axis, Value v, MethodTypeDesc reduceDescriptor) {\n+            Builder(Body.Builder ancestorBody, int axis, Value v, FunctionType reduceDescriptor) {\n@@ -362,1 +361,1 @@\n-            super(NAME, reducerBuilder.descriptor().returnType(), List.of(tensor));\n+            super(NAME, reducerBuilder.bodyType().returnType(), List.of(tensor));\n@@ -746,1 +745,1 @@\n-    public static FuncOp.Builder func(String funcName, MethodTypeDesc funcDescriptor) {\n+    public static FuncOp.Builder func(String funcName, FunctionType funcDescriptor) {\n@@ -759,1 +758,1 @@\n-        return new CallOp(func.funcName(), func.funcDescriptor().returnType(), args);\n+        return new CallOp(func.funcName(), func.invokableType().returnType(), args);\n@@ -763,1 +762,1 @@\n-                                          MethodTypeDesc reduceDescriptor) {\n+                                          FunctionType reduceDescriptor) {\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonOps.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.lang.reflect.code.descriptor.MethodTypeDesc;\n@@ -44,1 +43,0 @@\n-import static java.lang.reflect.code.descriptor.MethodTypeDesc.methodType;\n@@ -46,0 +44,1 @@\n+import static java.lang.reflect.code.type.FunctionType.functionType;\n@@ -560,1 +559,1 @@\n-        TritonOps.FuncOp ttKernel = TritonOps.func(signature, MethodTypeDesc.methodType(TritonType.fromType(rType)))\n+        TritonOps.FuncOp ttKernel = TritonOps.func(signature, functionType(TritonType.fromType(rType)))\n@@ -1148,1 +1147,1 @@\n-                            methodType(elementType, tensorType))\n+                            functionType(elementType, tensorType))\n@@ -1152,1 +1151,1 @@\n-                                        methodType(elementType, elementType, elementType))\n+                                        functionType(elementType, elementType, elementType))\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonTransformer.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}