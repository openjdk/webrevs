{"files":[{"patch":"@@ -3,1 +3,1 @@\n-This is a fairly large project with Java and Native artifacts.\n+This is a fairly large project with Java and native (C\/C++) artifacts.\n@@ -5,2 +5,1 @@\n-We rely on the `babylon` (JDK23+Babylon) project, and the project will initially be made available as a subproject\n-called `hat` under [github.com\/openjdk\/babylon](https:\/\/github.com\/openjdk\/babylon)\n+To use HAT you will need to clone and build the  `babylon` (JDK23+Babylon) project or of course your fork of the babylon project (say `babylon-myfork`)\n@@ -8,1 +7,1 @@\n-So this `README.md` should be under a checkout babylon repo which has been built.\n+[github.com\/openjdk\/babylon](https:\/\/github.com\/openjdk\/babylon)\n@@ -10,1 +9,7 @@\n-Here is how I prepare for babylon build babylon on an Ubuntu (x64) machine\n+The HAT project is in the 'hat' subdir of the babylon project.\n+\n+We will walk through the initial steps to clone and build babylon and then focus on the steps for building HAT.\n+\n+If you follow these steps, you should not have to change any of the maven or cmake build files.\n+\n+We suggest starting with a 'github' dir and a dir where we will need to install jdk22\n@@ -13,0 +18,2 @@\n+export GITHUB=${HOME}\/github\n+mkdir -p ${GITHUB}\n@@ -14,0 +21,7 @@\n+```\n+\n+We need an existing jdk22 build to build babylon. These steps are slighly different for Mac OSX and Ubuntu\n+\n+### Ubuntu\n+\n+```\n@@ -19,2 +33,1 @@\n-Here is how I prepare for babylon build on my Mac (aarch64) machine.\n-\n+### Mac OSX Aaarch64\n@@ -22,1 +35,0 @@\n-mkdir -p ${HOME}\/java\n@@ -28,1 +40,3 @@\n-From now on the Mac and Ubuntu steps are the same\n+From now on the Mac and Ubuntu steps are the same.\n+\n+If you have your own fork of the babylon repo use it rather that babylon.git below.\n@@ -31,2 +45,0 @@\n-export GITHUB=${HOME}\/github\n-mkdir -p ${GITHUB}\n@@ -40,0 +52,20 @@\n+If you have never built JDK before you may find that the 'configure' step will suggest packages to install.\n+\n+I usually just take the suggestions and try running `bash configure` again.\n+\n+Eventually you will have a successful babylon build.\n+\n+You now should have\n+\n+```\n+github\n+├── babylon (or babylon-my-fork)\n+│   ├── build\n+│   │   └── XXXX-server-release\n+│   │       ├── jdk\n+│   │       └── ...\n+│   ├── hat\n+│   │   ├── README.md\n+\n+```\n+Where XXXX is either linux-x64 or macosx-aarch64 and contains your build of babylon JDK.\n@@ -41,1 +73,1 @@\n-## Build notes\n+## Building HAT\n@@ -47,1 +79,3 @@\n-Make sure that `JAVA_HOME` is setup to point to your babylon build and the `${JAVA_HOME}\/bin` is in your PATH.\n+To build HAT we need to ensure that `JAVA_HOME` is setup to point to the babylon build (that we just created) and that `${JAVA_HOME}\/bin` is in your PATH.\n+\n+The `env.bash` shell script can be sourced (dot included) in your shell to set up these vars.\n@@ -49,1 +83,1 @@\n-The `env.bash` shell script can be 'dot included' in your build shell. It should detect the arch type and select the correct relative parent dir and inject that dir in your PATH.\n+It should detect the arch type and select the correct relative parent dir and inject that dir in your PATH.\n@@ -55,1 +89,1 @@\n-\/Users\/grfrost\/github\/babylon\/hat\/..\/build\/macosx-aarch64-server-release\/jdk\n+\/Users\/ME\/github\/babylon\/hat\/..\/build\/macosx-aarch64-server-release\/jdk\n@@ -57,1 +91,1 @@\n-Users\/grfrost\/github\/babylon\/hat\/..\/build\/macosx-aarch64-server-release\/jdk\/bin:\/usr\/local\/bin:......\n+\/Users\/ME\/github\/babylon\/hat\/..\/build\/macosx-aarch64-server-release\/jdk\/bin:\/usr\/local\/bin:......\n@@ -59,1 +93,2 @@\n-Now we can just use maven to build, it will do its magic and place all jars and libs in `maven-build` dir\n+\n+Now we should be able to use maven to build, it will do its magic and place all jars and libs in `maven-build` dir\n","filename":"hat\/README.md","additions":52,"deletions":17,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+# SPIR Backend\n+\n+This backend depends on :\n+\n+> A built version of on TornadoVm's SPIRV library being available\n+>   [https:\/\/github.com\/beehive-lab\/beehive-spirv-toolkit.git](https:\/\/github.com\/beehive-lab\/beehive-spirv-toolkit.git)\n+\n+> The source for the spirv example in the babylon project tree\n+> [https:\/\/github.com\/openjdk\/babylon\/tree\/code-reflection\/cr-examples\/spirv](https:\/\/github.com\/openjdk\/babylon\/tree\/code-reflection\/cr-examples\/spirv)\n+\n+So by default it is commented out in the parent `pom.xml`\n+\n+```\n+   <modules>\n+     <module>opencl<\/module>\n+     <module>cuda<\/module>\n+     <module>mock<\/module>\n+     <module>ptx<\/module>\n+     <!--<module>spirv<\/module>-->\n+   <\/modules>\n+```\n+\n+To include SPIRV our maven build assumes you have a project layout matching that described in the projiect roots README.md\n+\n+```\n+\/${HOME}\/github\n+   ├── babylon\n+   ├── babylon-my-fork\n+   └── ...\n+```\n+\n+And you are either working in '~\/github\/babylon\/hat' or your fork '~\/github\/babylon-my-fork\/hat'\n+\n+### Getting and building TornadoVM's SPIRV library\n+```\n+export GITHUB=${HOME}\/github\n+mkdir -p ${GITHUB}\n+cd ${GITHUB}\n+git clone https:\/\/github.com\/beehive-lab\/beehive-spirv-toolkit.git\n+```\n+\n+So now you have\n+\n+```\n+\/${HOME}\/github\n+   ├── babylon\n+   ├── beehive-spirv-toolkit\n+   ├── babylon-my-fork\n+   └── ...\n+```\n+\n+Assuming you have your babylon (or forked babylon) JDK built and you have already set `${JAVA_HOME}` to point to your built jdk and have `${JAVA_HOME}\/bin` in your PATH\n+\n+Then you should be able to build `beehive-spirv-toolkit` using maven.\n+\n+```\n+cd ${GITHUB}\/\n+GITHUB=${HOME}\/github\/beehive-spirv-toolkit\n+mvn clean install\n+```\n+\n+The hat maven build process will assume that it will find\n+> ..\/..\/beehive-spirv-toolkit\n+\n+and\n+> ..\/..\/babylon\/cr-examples\/spirv\n+\n+relative to the `hat` dir\n+\n+If this is correct you should be able to uncomment out the 'spirv' module in the parent's `pom.xml` and the spirv backend will build as part of a normal hat build.\n+\n+\n+\n+\n","filename":"hat\/backends\/spirv\/README.md","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"}]}