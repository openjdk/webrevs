{"files":[{"patch":"@@ -82,43 +82,15 @@\n-            if (t.equals(JavaType.BOOLEAN)) {\n-                if (value instanceof String s) {\n-                    return Boolean.valueOf(s);\n-                } else if (value instanceof Boolean) {\n-                    return value;\n-                }\n-            } else if (t.equals(JavaType.BYTE)) {\n-                if (value instanceof String s) {\n-                    return Byte.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.byteValue();\n-                }\n-            } else if (t.equals(JavaType.SHORT)) {\n-                if (value instanceof String s) {\n-                    return Short.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.shortValue();\n-                }\n-            } else if (t.equals(JavaType.CHAR)) {\n-                if (value instanceof String s) {\n-                    return s.charAt(0);\n-                } else if (value instanceof Character) {\n-                    return value;\n-                }\n-            } else if (t.equals(JavaType.INT)) {\n-                if (value instanceof String s) {\n-                    return Integer.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.intValue();\n-                }\n-            } else if (t.equals(JavaType.LONG)) {\n-                if (value instanceof String s) {\n-                    return Long.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.longValue();\n-                }\n-            } else if (t.equals(JavaType.FLOAT)) {\n-                if (value instanceof String s) {\n-                    return Float.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.floatValue();\n-                }\n-            } else if (t.equals(Float16.FLOAT_16_TYPE)) {\n+            if (t.equals(JavaType.BOOLEAN) && value instanceof Boolean) {\n+                return value;\n+            } else if (t.equals(JavaType.BYTE) && value instanceof Number n) {\n+                return n.byteValue();\n+            } else if (t.equals(JavaType.SHORT) && value instanceof Number n) {\n+                return n.shortValue();\n+            } else if (t.equals(JavaType.CHAR) && value instanceof Character) {\n+                return value;\n+            } else if (t.equals(JavaType.INT) && value instanceof Number n) {\n+                return n.intValue();\n+            } else if (t.equals(JavaType.LONG) && value instanceof Number n) {\n+                return n.longValue();\n+            } else if (t.equals(JavaType.FLOAT) && value instanceof Number n) {\n+                return n.floatValue();\n+            } else if (t.equals(Float16.FLOAT_16_TYPE) && value instanceof Number n) {\n@@ -126,11 +98,3 @@\n-                if (value instanceof String s) {\n-                    return Float.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.floatValue();\n-                }\n-            } else if (t.equals(JavaType.DOUBLE)) {\n-                if (value instanceof String s) {\n-                    return Double.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.doubleValue();\n-                }\n+                return n.floatValue();\n+            } else if (t.equals(JavaType.DOUBLE) && value instanceof Number n) {\n+                return n.doubleValue();\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/ArithMathOps.java","additions":18,"deletions":54,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-                        case String s -> Integer.valueOf(s);\n@@ -419,1 +418,0 @@\n-                        case String s -> Integer.valueOf(s);\n@@ -473,1 +471,0 @@\n-                        case String s -> Integer.valueOf(s);\n@@ -479,1 +476,0 @@\n-                        case String s -> Integer.valueOf(s);\n@@ -535,1 +531,0 @@\n-                        case String s -> Integer.valueOf(s);\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonOps.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1056,1 +1056,1 @@\n-            Object zero = 0.0;\n+            Object zero = 0.0f;\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonTransformer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,2 +41,2 @@\n-                    %4 : java.type:\"int\" = arith.constant @\"64\";\n-                    %5 : java.type:\"int\" = tt.get_program_id @\"0\";\n+                    %4 : java.type:\"int\" = arith.constant @64;\n+                    %5 : java.type:\"int\" = tt.get_program_id @0;\n@@ -44,1 +44,1 @@\n-                    %7 : tensor<x64, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"64\";\n+                    %7 : tensor<x64, java.type:\"int\"> = tt.make_range @start=0 @end=64;\n@@ -110,2 +110,2 @@\n-                    %4 : java.type:\"int\" = arith.constant @\"64\";\n-                    %5 : java.type:\"int\" = tt.get_program_id @\"0\";\n+                    %4 : java.type:\"int\" = arith.constant @64;\n+                    %5 : java.type:\"int\" = tt.get_program_id @0;\n@@ -113,1 +113,1 @@\n-                    %7 : tensor<x64, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"64\";\n+                    %7 : tensor<x64, java.type:\"int\"> = tt.make_range @start=0 @end=64;\n","filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestAddKernel.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-                    %2 : tensor<x64, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"64\";\n+                    %2 : tensor<x64, java.type:\"int\"> = tt.make_range @start=0 @end=64;\n@@ -88,4 +88,4 @@\n-                    %2 : tensor<x64, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"64\";\n-                    %3 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %2 @\"0\";\n-                    %4 : tensor<x32, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"32\";\n-                    %5 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %4 @\"1\";\n+                    %2 : tensor<x64, java.type:\"int\"> = tt.make_range @start=0 @end=64;\n+                    %3 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %2 @0;\n+                    %4 : tensor<x32, java.type:\"int\"> = tt.make_range @start=0 @end=32;\n+                    %5 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %4 @1;\n","filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestBroadcast.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-                    %3 : java.type:\"int\" = arith.constant @\"1\";\n+                    %3 : java.type:\"int\" = arith.constant @1;\n@@ -77,1 +77,1 @@\n-                    %1 : java.type:\"int\" = arith.constant @\"10\";\n+                    %1 : java.type:\"int\" = arith.constant @10;\n@@ -79,1 +79,1 @@\n-                    %3 : java.type:\"int\" = arith.constant @\"1\";\n+                    %3 : java.type:\"int\" = arith.constant @1;\n@@ -112,1 +112,1 @@\n-                    %3 : java.type:\"int\" = arith.constant @\"1\";\n+                    %3 : java.type:\"int\" = arith.constant @1;\n@@ -118,1 +118,1 @@\n-                    %7 : java.type:\"int\" = arith.constant @\"10\";\n+                    %7 : java.type:\"int\" = arith.constant @10;\n@@ -120,1 +120,1 @@\n-                    %9 : java.type:\"int\" = arith.constant @\"1\";\n+                    %9 : java.type:\"int\" = arith.constant @1;\n@@ -126,1 +126,1 @@\n-                    %13 : java.type:\"int\" = arith.constant @\"10\";\n+                    %13 : java.type:\"int\" = arith.constant @10;\n@@ -128,1 +128,1 @@\n-                    %15 : java.type:\"int\" = arith.constant @\"1\";\n+                    %15 : java.type:\"int\" = arith.constant @1;\n","filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestCdiv.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -44,5 +44,5 @@\n-                    %1 : java.type:\"int\" = arith.constant @\"64\";\n-                    %2 : tensor<x64, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"64\";\n-                    %3 : tensor<x64, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"64\";\n-                    %4 : java.type:\"int\" = arith.constant @\"0\";\n-                    %5 : java.type:\"int\" = arith.constant @\"1\";\n+                    %1 : java.type:\"int\" = arith.constant @64;\n+                    %2 : tensor<x64, java.type:\"int\"> = tt.make_range @start=0 @end=64;\n+                    %3 : tensor<x64, java.type:\"int\"> = tt.make_range @start=0 @end=64;\n+                    %4 : java.type:\"int\" = arith.constant @0;\n+                    %5 : java.type:\"int\" = arith.constant @1;\n@@ -56,2 +56,2 @@\n-                    %14 : tensor<x64, java.type:\"int\"> = tuple.load %6 @\"0\";\n-                    %15 : tensor<x64, java.type:\"int\"> = tuple.load %6 @\"1\";\n+                    %14 : tensor<x64, java.type:\"int\"> = tuple.load %6 @0;\n+                    %15 : tensor<x64, java.type:\"int\"> = tuple.load %6 @1;\n","filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestCountedLoop.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-                    %1 : java.type:\"int\" = arith.constant @\"32\";\n+                    %1 : java.type:\"int\" = arith.constant @32;\n@@ -47,1 +47,1 @@\n-                    %3 : java.type:\"int\" = arith.constant @\"1\";\n+                    %3 : java.type:\"int\" = arith.constant @1;\n@@ -53,1 +53,1 @@\n-                    %7 : java.type:\"int\" = arith.constant @\"64\";\n+                    %7 : java.type:\"int\" = arith.constant @64;\n@@ -55,1 +55,1 @@\n-                    %9 : java.type:\"int\" = arith.constant @\"1\";\n+                    %9 : java.type:\"int\" = arith.constant @1;\n@@ -61,5 +61,5 @@\n-                    %24 : java.type:\"int\" = arith.constant @\"32\";\n-                    %25 : java.type:\"int\" = arith.constant @\"64\";\n-                    %26 : java.type:\"int\" = arith.constant @\"32\";\n-                    %27 : java.type:\"int\" = arith.constant @\"8\";\n-                    %28 : java.type:\"int\" = tt.get_program_id @\"0\";\n+                    %24 : java.type:\"int\" = arith.constant @32;\n+                    %25 : java.type:\"int\" = arith.constant @64;\n+                    %26 : java.type:\"int\" = arith.constant @32;\n+                    %27 : java.type:\"int\" = arith.constant @8;\n+                    %28 : java.type:\"int\" = tt.get_program_id @0;\n@@ -77,1 +77,1 @@\n-                    %40 : tensor<x32, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"32\";\n+                    %40 : tensor<x32, java.type:\"int\"> = tt.make_range @start=0 @end=32;\n@@ -83,1 +83,1 @@\n-                    %46 : tensor<x64, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"64\";\n+                    %46 : tensor<x64, java.type:\"int\"> = tt.make_range @start=0 @end=64;\n@@ -89,2 +89,2 @@\n-                    %52 : tensor<x32, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"32\";\n-                    %53 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %45 @\"1\";\n+                    %52 : tensor<x32, java.type:\"int\"> = tt.make_range @start=0 @end=32;\n+                    %53 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %45 @1;\n@@ -93,1 +93,1 @@\n-                    %56 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @\"0\";\n+                    %56 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @0;\n@@ -101,1 +101,1 @@\n-                    %64 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @\"1\";\n+                    %64 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @1;\n@@ -104,1 +104,1 @@\n-                    %67 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %51 @\"0\";\n+                    %67 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %51 @0;\n@@ -112,2 +112,2 @@\n-                    %75 : tensor<x32, x64, java.type:\"float\"> = arith.constant @\"0.0\";\n-                    %76 : java.type:\"int\" = arith.constant @\"0\";\n+                    %75 : tensor<x32, x64, java.type:\"float\"> = arith.constant @0.0f;\n+                    %76 : java.type:\"int\" = arith.constant @0;\n@@ -115,1 +115,1 @@\n-                    %78 : java.type:\"int\" = arith.constant @\"1\";\n+                    %78 : java.type:\"int\" = arith.constant @1;\n@@ -117,1 +117,1 @@\n-                        %84 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @\"0\";\n+                        %84 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @0;\n@@ -124,1 +124,1 @@\n-                        %91 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @\"1\";\n+                        %91 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @1;\n@@ -131,1 +131,1 @@\n-                        %98 : tensor<x32, x64, java.type:\"float\"> = arith.constant @\"0.0\";\n+                        %98 : tensor<x32, x64, java.type:\"float\"> = arith.constant @0.0f;\n@@ -142,3 +142,3 @@\n-                    %107 : tensor<x32, x64, java.type:\"float\"> = tuple.load %79 @\"0\";\n-                    %108 : tensor<x32, x32, ptr<java.type:\"float\">> = tuple.load %79 @\"1\";\n-                    %109 : tensor<x32, x64, ptr<java.type:\"float\">> = tuple.load %79 @\"2\";\n+                    %107 : tensor<x32, x64, java.type:\"float\"> = tuple.load %79 @0;\n+                    %108 : tensor<x32, x32, ptr<java.type:\"float\">> = tuple.load %79 @1;\n+                    %109 : tensor<x32, x64, ptr<java.type:\"float\">> = tuple.load %79 @2;\n@@ -151,1 +151,1 @@\n-                    %116 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %112 @\"1\";\n+                    %116 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %112 @1;\n@@ -154,1 +154,1 @@\n-                    %119 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %115 @\"0\";\n+                    %119 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %115 @0;\n@@ -162,1 +162,1 @@\n-                    %127 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %112 @\"1\";\n+                    %127 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %112 @1;\n@@ -165,1 +165,1 @@\n-                    %130 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %115 @\"0\";\n+                    %130 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %115 @0;\n@@ -323,1 +323,1 @@\n-                    %1 : java.type:\"int\" = arith.constant @\"32\";\n+                    %1 : java.type:\"int\" = arith.constant @32;\n@@ -325,1 +325,1 @@\n-                    %3 : java.type:\"int\" = arith.constant @\"1\";\n+                    %3 : java.type:\"int\" = arith.constant @1;\n@@ -331,1 +331,1 @@\n-                    %7 : java.type:\"int\" = arith.constant @\"64\";\n+                    %7 : java.type:\"int\" = arith.constant @64;\n@@ -333,1 +333,1 @@\n-                    %9 : java.type:\"int\" = arith.constant @\"1\";\n+                    %9 : java.type:\"int\" = arith.constant @1;\n@@ -339,8 +339,8 @@\n-                    %21 : java.type:\"int\" = arith.constant @\"1\";\n-                    %22 : java.type:\"int\" = arith.constant @\"1\";\n-                    %23 : java.type:\"int\" = arith.constant @\"1\";\n-                    %24 : java.type:\"int\" = arith.constant @\"32\";\n-                    %25 : java.type:\"int\" = arith.constant @\"64\";\n-                    %26 : java.type:\"int\" = arith.constant @\"32\";\n-                    %27 : java.type:\"int\" = arith.constant @\"8\";\n-                    %28 : java.type:\"int\" = tt.get_program_id @\"0\";\n+                    %21 : java.type:\"int\" = arith.constant @1;\n+                    %22 : java.type:\"int\" = arith.constant @1;\n+                    %23 : java.type:\"int\" = arith.constant @1;\n+                    %24 : java.type:\"int\" = arith.constant @32;\n+                    %25 : java.type:\"int\" = arith.constant @64;\n+                    %26 : java.type:\"int\" = arith.constant @32;\n+                    %27 : java.type:\"int\" = arith.constant @8;\n+                    %28 : java.type:\"int\" = tt.get_program_id @0;\n@@ -358,1 +358,1 @@\n-                    %40 : tensor<x32, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"32\";\n+                    %40 : tensor<x32, java.type:\"int\"> = tt.make_range @start=0 @end=32;\n@@ -364,1 +364,1 @@\n-                    %46 : tensor<x64, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"64\";\n+                    %46 : tensor<x64, java.type:\"int\"> = tt.make_range @start=0 @end=64;\n@@ -370,2 +370,2 @@\n-                    %52 : tensor<x32, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"32\";\n-                    %53 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %45 @\"1\";\n+                    %52 : tensor<x32, java.type:\"int\"> = tt.make_range @start=0 @end=32;\n+                    %53 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %45 @1;\n@@ -374,1 +374,1 @@\n-                    %56 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @\"0\";\n+                    %56 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @0;\n@@ -382,1 +382,1 @@\n-                    %64 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @\"1\";\n+                    %64 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @1;\n@@ -385,1 +385,1 @@\n-                    %67 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %51 @\"0\";\n+                    %67 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %51 @0;\n@@ -393,2 +393,2 @@\n-                    %75 : tensor<x32, x64, java.type:\"float\"> = arith.constant @\"0.0\";\n-                    %76 : java.type:\"int\" = arith.constant @\"0\";\n+                    %75 : tensor<x32, x64, java.type:\"float\"> = arith.constant @0.0f;\n+                    %76 : java.type:\"int\" = arith.constant @0;\n@@ -396,1 +396,1 @@\n-                    %78 : java.type:\"int\" = arith.constant @\"1\";\n+                    %78 : java.type:\"int\" = arith.constant @1;\n@@ -398,1 +398,1 @@\n-                        %84 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @\"0\";\n+                        %84 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @0;\n@@ -404,1 +404,1 @@\n-                        %90 : tensor<x32, x32, java.type:\"float\"> = arith.constant @\"0.0\";\n+                        %90 : tensor<x32, x32, java.type:\"float\"> = arith.constant @0.0f;\n@@ -406,1 +406,1 @@\n-                        %92 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @\"1\";\n+                        %92 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @1;\n@@ -412,1 +412,1 @@\n-                        %98 : tensor<x32, x64, java.type:\"float\"> = arith.constant @\"0.0\";\n+                        %98 : tensor<x32, x64, java.type:\"float\"> = arith.constant @0.0f;\n@@ -414,1 +414,1 @@\n-                        %100 : tensor<x32, x64, java.type:\"float\"> = arith.constant @\"0.0\";\n+                        %100 : tensor<x32, x64, java.type:\"float\"> = arith.constant @0.0f;\n@@ -425,3 +425,3 @@\n-                    %109 : tensor<x32, x64, java.type:\"float\"> = tuple.load %79 @\"0\";\n-                    %110 : tensor<x32, x32, ptr<java.type:\"float\">> = tuple.load %79 @\"1\";\n-                    %111 : tensor<x32, x64, ptr<java.type:\"float\">> = tuple.load %79 @\"2\";\n+                    %109 : tensor<x32, x64, java.type:\"float\"> = tuple.load %79 @0;\n+                    %110 : tensor<x32, x32, ptr<java.type:\"float\">> = tuple.load %79 @1;\n+                    %111 : tensor<x32, x64, ptr<java.type:\"float\">> = tuple.load %79 @2;\n@@ -434,1 +434,1 @@\n-                    %118 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %114 @\"1\";\n+                    %118 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %114 @1;\n@@ -437,1 +437,1 @@\n-                    %121 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %117 @\"0\";\n+                    %121 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %117 @0;\n@@ -445,1 +445,1 @@\n-                    %129 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %114 @\"1\";\n+                    %129 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %114 @1;\n@@ -448,1 +448,1 @@\n-                    %132 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %117 @\"0\";\n+                    %132 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %117 @0;\n","filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestMatrix.java","additions":63,"deletions":63,"binary":false,"changes":126,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-                    %1 : java.type:\"int\" = arith.constant @\"32\";\n+                    %1 : java.type:\"int\" = arith.constant @32;\n@@ -45,1 +45,1 @@\n-                    %3 : java.type:\"int\" = arith.constant @\"1\";\n+                    %3 : java.type:\"int\" = arith.constant @1;\n@@ -51,1 +51,1 @@\n-                    %7 : java.type:\"int\" = arith.constant @\"64\";\n+                    %7 : java.type:\"int\" = arith.constant @64;\n@@ -53,1 +53,1 @@\n-                    %9 : java.type:\"int\" = arith.constant @\"1\";\n+                    %9 : java.type:\"int\" = arith.constant @1;\n@@ -59,8 +59,8 @@\n-                    %21 : java.type:\"int\" = arith.constant @value=\"1\";\n-                    %22 : java.type:\"int\" = arith.constant @value=\"1\";\n-                    %23 : java.type:\"int\" = arith.constant @value=\"1\";\n-                    %24 : java.type:\"int\" = arith.constant @value=\"32\";\n-                    %25 : java.type:\"int\" = arith.constant @value=\"64\";\n-                    %26 : java.type:\"int\" = arith.constant @value=\"32\";\n-                    %27 : java.type:\"int\" = arith.constant @value=\"8\";\n-                    %28 : java.type:\"int\" = tt.get_program_id @axis=\"0\";\n+                    %21 : java.type:\"int\" = arith.constant @value=1;\n+                    %22 : java.type:\"int\" = arith.constant @value=1;\n+                    %23 : java.type:\"int\" = arith.constant @value=1;\n+                    %24 : java.type:\"int\" = arith.constant @value=32;\n+                    %25 : java.type:\"int\" = arith.constant @value=64;\n+                    %26 : java.type:\"int\" = arith.constant @value=32;\n+                    %27 : java.type:\"int\" = arith.constant @value=8;\n+                    %28 : java.type:\"int\" = tt.get_program_id @axis=0;\n@@ -78,1 +78,1 @@\n-                    %40 : tensor<x32, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"32\";\n+                    %40 : tensor<x32, java.type:\"int\"> = tt.make_range @start=0 @end=32;\n@@ -84,1 +84,1 @@\n-                    %46 : tensor<x64, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"64\";\n+                    %46 : tensor<x64, java.type:\"int\"> = tt.make_range @start=0 @end=64;\n@@ -90,2 +90,2 @@\n-                    %52 : tensor<x32, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"32\";\n-                    %53 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %45 @axis=\"1\";\n+                    %52 : tensor<x32, java.type:\"int\"> = tt.make_range @start=0 @end=32;\n+                    %53 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %45 @axis=1;\n@@ -94,1 +94,1 @@\n-                    %56 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @axis=\"0\";\n+                    %56 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @axis=0;\n@@ -102,1 +102,1 @@\n-                    %64 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @axis=\"1\";\n+                    %64 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @axis=1;\n@@ -105,1 +105,1 @@\n-                    %67 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %51 @axis=\"0\";\n+                    %67 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %51 @axis=0;\n@@ -113,2 +113,2 @@\n-                    %75 : tensor<x32, x64, java.type:\"float\"> = arith.constant @value=\"0.0\";\n-                    %76 : java.type:\"int\" = arith.constant @value=\"0\";\n+                    %75 : tensor<x32, x64, java.type:\"float\"> = arith.constant @value=0.0f;\n+                    %76 : java.type:\"int\" = arith.constant @value=0;\n@@ -116,1 +116,1 @@\n-                    %78 : java.type:\"int\" = arith.constant @value=\"1\";\n+                    %78 : java.type:\"int\" = arith.constant @value=1;\n@@ -118,1 +118,1 @@\n-                        %84 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @axis=\"0\";\n+                        %84 : tensor<x1, x32, java.type:\"int\"> = tt.expand_dims %52 @axis=0;\n@@ -124,1 +124,1 @@\n-                        %90 : tensor<x32, x32, java.type:\"oracle.code.triton.Float16\"> = arith.constant @value=\"0.0\";\n+                        %90 : tensor<x32, x32, java.type:\"oracle.code.triton.Float16\"> = arith.constant @value=0.0f;\n@@ -126,1 +126,1 @@\n-                        %92 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @axis=\"1\";\n+                        %92 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %52 @axis=1;\n@@ -132,1 +132,1 @@\n-                        %98 : tensor<x32, x64, java.type:\"oracle.code.triton.Float16\"> = arith.constant @value=\"0.0\";\n+                        %98 : tensor<x32, x64, java.type:\"oracle.code.triton.Float16\"> = arith.constant @value=0.0f;\n@@ -134,1 +134,1 @@\n-                        %100 : tensor<x32, x64, java.type:\"float\"> = arith.constant @value=\"0.0\";\n+                        %100 : tensor<x32, x64, java.type:\"float\"> = arith.constant @value=0.0f;\n@@ -145,3 +145,3 @@\n-                    %109 : tensor<x32, x64, java.type:\"float\"> = tuple.load %79 @\"0\";\n-                    %110 : tensor<x32, x32, ptr<java.type:\"oracle.code.triton.Float16\">> = tuple.load %79 @\"1\";\n-                    %111 : tensor<x32, x64, ptr<java.type:\"oracle.code.triton.Float16\">> = tuple.load %79 @\"2\";\n+                    %109 : tensor<x32, x64, java.type:\"float\"> = tuple.load %79 @0;\n+                    %110 : tensor<x32, x32, ptr<java.type:\"oracle.code.triton.Float16\">> = tuple.load %79 @1;\n+                    %111 : tensor<x32, x64, ptr<java.type:\"oracle.code.triton.Float16\">> = tuple.load %79 @2;\n@@ -155,1 +155,1 @@\n-                    %119 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %115 @axis=\"1\";\n+                    %119 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %115 @axis=1;\n@@ -158,1 +158,1 @@\n-                    %122 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %118 @axis=\"0\";\n+                    %122 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %118 @axis=0;\n@@ -166,1 +166,1 @@\n-                    %130 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %115 @axis=\"1\";\n+                    %130 : tensor<x32, x1, java.type:\"int\"> = tt.expand_dims %115 @axis=1;\n@@ -169,1 +169,1 @@\n-                    %133 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %118 @axis=\"0\";\n+                    %133 : tensor<x1, x64, java.type:\"int\"> = tt.expand_dims %118 @axis=0;\n","filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestMatrixFp16.java","additions":34,"deletions":34,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-                    %4 : java.type:\"float\" = tt.reduce %3 @axis=\"0\" (%5 : java.type:\"float\", %6 : java.type:\"float\")java.type:\"float\" -> {\n+                    %4 : java.type:\"float\" = tt.reduce %3 @axis=0 (%5 : java.type:\"float\", %6 : java.type:\"float\")java.type:\"float\" -> {\n@@ -57,1 +57,1 @@\n-                    %12 : java.type:\"float\" = tt.reduce %11 @axis=\"0\" (%13 : java.type:\"float\", %14 : java.type:\"float\")java.type:\"float\" -> {\n+                    %12 : java.type:\"float\" = tt.reduce %11 @axis=0 (%13 : java.type:\"float\", %14 : java.type:\"float\")java.type:\"float\" -> {\n@@ -64,1 +64,1 @@\n-                    %21 : java.type:\"int\" = tt.get_program_id @\"0\";\n+                    %21 : java.type:\"int\" = tt.get_program_id @0;\n@@ -67,1 +67,1 @@\n-                    %24 : tensor<x64, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"64\";\n+                    %24 : tensor<x64, java.type:\"int\"> = tt.make_range @start=0 @end=64;\n@@ -142,1 +142,1 @@\n-                    %4 : java.type:\"float\" = tt.reduce %3 @axis=\"0\" (%5 : java.type:\"float\", %6 : java.type:\"float\")java.type:\"float\" -> {\n+                    %4 : java.type:\"float\" = tt.reduce %3 @axis=0 (%5 : java.type:\"float\", %6 : java.type:\"float\")java.type:\"float\" -> {\n@@ -153,1 +153,1 @@\n-                    %12 : java.type:\"float\" = tt.reduce %11 @axis=\"0\" (%13 : java.type:\"float\", %14 : java.type:\"float\")java.type:\"float\" -> {\n+                    %12 : java.type:\"float\" = tt.reduce %11 @axis=0 (%13 : java.type:\"float\", %14 : java.type:\"float\")java.type:\"float\" -> {\n@@ -160,4 +160,4 @@\n-                    %18 : java.type:\"int\" = arith.constant @\"1\";\n-                    %19 : java.type:\"int\" = arith.constant @\"1\";\n-                    %20 : java.type:\"int\" = arith.constant @\"10\";\n-                    %21 : java.type:\"int\" = tt.get_program_id @\"0\";\n+                    %18 : java.type:\"int\" = arith.constant @1;\n+                    %19 : java.type:\"int\" = arith.constant @1;\n+                    %20 : java.type:\"int\" = arith.constant @10;\n+                    %21 : java.type:\"int\" = tt.get_program_id @0;\n@@ -166,1 +166,1 @@\n-                    %24 : tensor<x64, java.type:\"int\"> = tt.make_range @start=\"0\" @end=\"64\";\n+                    %24 : tensor<x64, java.type:\"int\"> = tt.make_range @start=0 @end=64;\n","filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestSoftMax.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-                    %0 : tensor<x32, x64, java.type:\"float\"> = arith.constant @\"0.0\";\n+                    %0 : tensor<x32, x64, java.type:\"float\"> = arith.constant @0.0f;\n","filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestZeros.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1281,48 +1281,16 @@\n-            if (t.equals(JavaType.BOOLEAN)) {\n-                if (value instanceof String s) {\n-                    return Boolean.valueOf(s);\n-                } else if (value instanceof Boolean) {\n-                    return value;\n-                }\n-            } else if (t.equals(JavaType.BYTE)) {\n-                if (value instanceof String s) {\n-                    return Byte.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.byteValue();\n-                }\n-            } else if (t.equals(JavaType.SHORT)) {\n-                if (value instanceof String s) {\n-                    return Short.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.shortValue();\n-                }\n-            } else if (t.equals(JavaType.CHAR)) {\n-                if (value instanceof String s) {\n-                    return s.charAt(0);\n-                } else if (value instanceof Character) {\n-                    return value;\n-                }\n-            } else if (t.equals(JavaType.INT)) {\n-                if (value instanceof String s) {\n-                    return Integer.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.intValue();\n-                }\n-            } else if (t.equals(JavaType.LONG)) {\n-                if (value instanceof String s) {\n-                    return Long.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.longValue();\n-                }\n-            } else if (t.equals(JavaType.FLOAT)) {\n-                if (value instanceof String s) {\n-                    return Float.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.floatValue();\n-                }\n-            } else if (t.equals(JavaType.DOUBLE)) {\n-                if (value instanceof String s) {\n-                    return Double.valueOf(s);\n-                } else if (value instanceof Number n) {\n-                    return n.doubleValue();\n-                }\n+            if (t.equals(JavaType.BOOLEAN) && value instanceof Boolean) {\n+                return value;\n+            } else if (t.equals(JavaType.BYTE) && value instanceof Number n) {\n+                return n.byteValue();\n+            } else if (t.equals(JavaType.SHORT) && value instanceof Number n) {\n+                return n.shortValue();\n+            } else if (t.equals(JavaType.CHAR) && value instanceof Character) {\n+                return value;\n+            } else if (t.equals(JavaType.INT) && value instanceof Number n) {\n+                return n.intValue();\n+            } else if (t.equals(JavaType.LONG) && value instanceof Number n) {\n+                return n.longValue();\n+            } else if (t.equals(JavaType.FLOAT) && value instanceof Number n) {\n+                return n.floatValue();\n+            } else if (t.equals(JavaType.DOUBLE) && value instanceof Number n) {\n+                return n.doubleValue();\n@@ -1330,2 +1298,2 @@\n-                return value == NULL_ATTRIBUTE_VALUE ? null :\n-                        value.toString();\n+                return value == NULL_ATTRIBUTE_VALUE ?\n+                        null : (String)value;\n@@ -1333,1 +1301,2 @@\n-                return value == NULL_ATTRIBUTE_VALUE ? null : (TypeElement)value;\n+                return value == NULL_ATTRIBUTE_VALUE ?\n+                        null : (TypeElement)value;\n@@ -1440,1 +1409,0 @@\n-                        case String s -> Boolean.valueOf(s);\n@@ -1641,1 +1609,0 @@\n-                        case String s -> Boolean.valueOf(s);\n@@ -2470,1 +2437,0 @@\n-                        case String s -> Integer.valueOf(s);\n@@ -2541,1 +2507,0 @@\n-                        case String s -> Integer.valueOf(s);\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/op\/CoreOp.java","additions":20,"deletions":55,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -79,1 +79,4 @@\n- *   Name\n+ *   ExType\n+ *   NumericAttributeValue\n+ *   BooleanLiteral\n+ *   CharacterLiteral\n@@ -83,0 +86,6 @@\n+ * NumericAttributeValue:\n+ *    [ '-' ] IntLiteral\n+ *    [ '-' ] LongLiteral\n+ *    [ '-' ] FloatLiteral\n+ *    [ '-' ] DoubleLiteral\n+ *\n@@ -467,0 +476,19 @@\n+            case CHARLITERAL -> t.stringVal().charAt(0);\n+            case TRUE -> true;\n+            case FALSE -> false;\n+            default -> parseNumericLiteral(t);\n+        };\n+    }\n+\n+    Object parseNumericLiteral(Tokens.Token t) {\n+        String minusOpt = \"\";\n+        if (t.kind == TokenKind.SUB) {\n+            minusOpt = \"-\";\n+            lexer.nextToken();\n+            t = lexer.token();\n+        }\n+        return switch (t.kind) {\n+            case INTLITERAL -> Integer.valueOf(minusOpt + t.stringVal());\n+            case LONGLITERAL -> Long.valueOf(minusOpt + t.stringVal());\n+            case FLOATLITERAL -> Float.valueOf(minusOpt + t.stringVal());\n+            case DOUBLELITERAL -> Double.valueOf(minusOpt + t.stringVal());\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/OpParser.java","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -79,2 +79,0 @@\n-            } else if (value instanceof TypeElement te) {\n-                return JavaTypeUtils.flatten(te.externalize()).toString();\n@@ -84,1 +82,0 @@\n-            sb.append(\"\\\"\");\n@@ -86,1 +83,0 @@\n-            sb.append(\"\\\"\");\n@@ -92,0 +88,2 @@\n+                \/\/ note, while we can't parse back the array representation, this might be useful\n+                \/\/ for non-externalizable ops that want better string representation of array attribute values (e.g. ONNX)\n@@ -94,1 +92,14 @@\n-                quote(o.toString(), sb);\n+                switch (o) {\n+                    case Integer i -> sb.append(i);\n+                    case Long l -> sb.append(l).append('L');\n+                    case Float f -> sb.append(f).append('f');\n+                    case Double d -> sb.append(d).append('d');\n+                    case Character c -> sb.append('\\'').append(c).append('\\'');\n+                    case Boolean b -> sb.append(b);\n+                    case TypeElement te -> sb.append(JavaTypeUtils.flatten(te.externalize()));\n+                    default -> {  \/\/ fallback to a string\n+                        sb.append('\"');\n+                        quote(o.toString(), sb);\n+                        sb.append('\"');\n+                    }\n+                }\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/writer\/OpWriter.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-                %3 : java.type:\"int\" = constant @\"10\";\n+                %3 : java.type:\"int\" = constant @10;\n@@ -74,1 +74,1 @@\n-                %5 : java.type:\"int\" = constant @\"1\";\n+                %5 : java.type:\"int\" = constant @1;\n@@ -79,1 +79,1 @@\n-                %7 : java.type:\"int\" = constant @\"2\";\n+                %7 : java.type:\"int\" = constant @2;\n@@ -105,2 +105,2 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n-                %2 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n+                %2 : java.type:\"int\" = constant @0;\n@@ -118,1 +118,1 @@\n-                %7 : java.type:\"int\" = constant @\"1\";\n+                %7 : java.type:\"int\" = constant @1;\n@@ -144,1 +144,1 @@\n-                %5 : java.type:\"int\" = constant @\"20\";\n+                %5 : java.type:\"int\" = constant @20;\n@@ -149,1 +149,1 @@\n-                %7 : java.type:\"int\" = constant @\"10\";\n+                %7 : java.type:\"int\" = constant @10;\n@@ -154,1 +154,1 @@\n-                %9 : java.type:\"int\" = constant @\"1\";\n+                %9 : java.type:\"int\" = constant @1;\n@@ -159,1 +159,1 @@\n-                %11 : java.type:\"int\" = constant @\"2\";\n+                %11 : java.type:\"int\" = constant @2;\n@@ -164,1 +164,1 @@\n-                %15 : java.type:\"int\" = constant @\"3\";\n+                %15 : java.type:\"int\" = constant @3;\n@@ -169,1 +169,1 @@\n-                %17 : java.type:\"int\" = constant @\"20\";\n+                %17 : java.type:\"int\" = constant @20;\n@@ -174,1 +174,1 @@\n-                %19 : java.type:\"int\" = constant @\"4\";\n+                %19 : java.type:\"int\" = constant @4;\n@@ -179,1 +179,1 @@\n-                %21 : java.type:\"int\" = constant @\"5\";\n+                %21 : java.type:\"int\" = constant @5;\n@@ -184,1 +184,1 @@\n-                %25 : java.type:\"int\" = constant @\"6\";\n+                %25 : java.type:\"int\" = constant @6;\n@@ -218,2 +218,2 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n-                %2 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n+                %2 : java.type:\"int\" = constant @0;\n@@ -227,1 +227,1 @@\n-                %6 : java.type:\"int\" = constant @\"0\";\n+                %6 : java.type:\"int\" = constant @0;\n@@ -240,1 +240,1 @@\n-                %12 : java.type:\"int\" = constant @\"1\";\n+                %12 : java.type:\"int\" = constant @1;\n@@ -248,1 +248,1 @@\n-                %14 : java.type:\"int\" = constant @\"1\";\n+                %14 : java.type:\"int\" = constant @1;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLiveness.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -138,1 +138,1 @@\n-                %3 : java.type:\"int\" = constant @\"1\";\n+                %3 : java.type:\"int\" = constant @1;\n@@ -145,1 +145,1 @@\n-                %4 : java.type:\"int\" = constant @\"-1\";\n+                %4 : java.type:\"int\" = constant @-1;\n@@ -156,1 +156,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -161,1 +161,1 @@\n-                %3 : java.type:\"int\" = constant @\"1\";\n+                %3 : java.type:\"int\" = constant @1;\n@@ -165,1 +165,1 @@\n-                %4 : java.type:\"int\" = constant @\"-1\";\n+                %4 : java.type:\"int\" = constant @-1;\n@@ -175,1 +175,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -180,1 +180,1 @@\n-                %3 : java.type:\"int\" = constant @\"1\";\n+                %3 : java.type:\"int\" = constant @1;\n@@ -187,1 +187,1 @@\n-                %4 : java.type:\"int\" = constant @\"-1\";\n+                %4 : java.type:\"int\" = constant @-1;\n@@ -198,1 +198,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -203,1 +203,1 @@\n-                %3 : java.type:\"int\" = constant @\"1\";\n+                %3 : java.type:\"int\" = constant @1;\n@@ -207,1 +207,1 @@\n-                %4 : java.type:\"int\" = constant @\"-1\";\n+                %4 : java.type:\"int\" = constant @-1;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestNormalizeBlocksTransformer.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-                %2 : java.type:\"int\" = constant @\"0\";\n+                %2 : java.type:\"int\" = constant @0;\n@@ -42,1 +42,1 @@\n-                %4 : java.type:\"int\" = constant @\"0\";\n+                %4 : java.type:\"int\" = constant @0;\n@@ -64,1 +64,1 @@\n-                %16 : java.type:\"int\" = constant @\"1\";\n+                %16 : java.type:\"int\" = constant @1;\n@@ -85,2 +85,2 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n-                %2 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n+                %2 : java.type:\"int\" = constant @0;\n@@ -100,1 +100,1 @@\n-                %9 : java.type:\"int\" = constant @\"1\";\n+                %9 : java.type:\"int\" = constant @1;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/TestLoop.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-                %8 : java.type:\"int\" = constant @\"1\";\n+                %8 : java.type:\"int\" = constant @1;\n@@ -94,1 +94,1 @@\n-                %8 : java.type:\"int\" = constant @\"0\";\n+                %8 : java.type:\"int\" = constant @0;\n@@ -99,1 +99,1 @@\n-                %10 : java.type:\"int\" = constant @\"-1\";\n+                %10 : java.type:\"int\" = constant @-1;\n@@ -111,1 +111,1 @@\n-                %12 : java.type:\"int\" = constant @\"1\";\n+                %12 : java.type:\"int\" = constant @1;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/TestSynchronized.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -89,2 +89,2 @@\n-                %2 : java.type:\"int\" = constant @\"5\";\n-                %3 : java.type:\"int\" = constant @\"2\";\n+                %2 : java.type:\"int\" = constant @5;\n+                %3 : java.type:\"int\" = constant @2;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/parser\/TestParse.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-                %4 : java.type:\"int\" = constant @\"0\";\n+                %4 : java.type:\"int\" = constant @0;\n@@ -57,1 +57,1 @@\n-                %7 : java.type:\"int\" = constant @\"1\";\n+                %7 : java.type:\"int\" = constant @1;\n@@ -72,2 +72,2 @@\n-                %4 : java.type:\"int\" = constant @\"0\";\n-                %5 : java.type:\"int\" = constant @\"1\";\n+                %4 : java.type:\"int\" = constant @0;\n+                %5 : java.type:\"int\" = constant @1;\n@@ -89,1 +89,1 @@\n-                %7 : java.type:\"int\" = constant @\"1\";\n+                %7 : java.type:\"int\" = constant @1;\n@@ -91,1 +91,1 @@\n-                %9 : java.type:\"int\" = constant @\"1\";\n+                %9 : java.type:\"int\" = constant @1;\n@@ -107,1 +107,1 @@\n-                %7 : java.type:\"int\" = constant @\"1\";\n+                %7 : java.type:\"int\" = constant @1;\n@@ -111,1 +111,1 @@\n-                %11 : java.type:\"int\" = constant @\"2\";\n+                %11 : java.type:\"int\" = constant @2;\n@@ -128,1 +128,1 @@\n-                %7 : java.type:\"int\" = constant @\"1\";\n+                %7 : java.type:\"int\" = constant @1;\n@@ -132,1 +132,1 @@\n-                %11 : java.type:\"int\" = constant @\"2\";\n+                %11 : java.type:\"int\" = constant @2;\n@@ -134,1 +134,1 @@\n-                %13 : java.type:\"int\" = constant @\"1\";\n+                %13 : java.type:\"int\" = constant @1;\n@@ -149,1 +149,1 @@\n-                %2 : java.type:\"int\" = constant @\"0\";\n+                %2 : java.type:\"int\" = constant @0;\n@@ -162,1 +162,1 @@\n-                %2 : java.type:\"int\" = constant @\"0\";\n+                %2 : java.type:\"int\" = constant @0;\n@@ -180,1 +180,1 @@\n-                %4 : java.type:\"int\" = constant @\"0\";\n+                %4 : java.type:\"int\" = constant @0;\n@@ -195,1 +195,1 @@\n-                %4 : java.type:\"int\" = constant @\"0\";\n+                %4 : java.type:\"int\" = constant @0;\n@@ -197,1 +197,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -211,1 +211,1 @@\n-                %4 : java.type:\"int\" = constant @\"0\";\n+                %4 : java.type:\"int\" = constant @0;\n@@ -213,1 +213,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -229,1 +229,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -232,1 +232,1 @@\n-                %9 : java.type:\"int\" = constant @\"2\";\n+                %9 : java.type:\"int\" = constant @2;\n@@ -235,1 +235,1 @@\n-                %12 : java.type:\"int\" = constant @\"1\";\n+                %12 : java.type:\"int\" = constant @1;\n@@ -252,1 +252,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -256,1 +256,1 @@\n-                %10 : java.type:\"int\" = constant @\"2\";\n+                %10 : java.type:\"int\" = constant @2;\n@@ -259,1 +259,1 @@\n-                %13 : java.type:\"int\" = constant @\"1\";\n+                %13 : java.type:\"int\" = constant @1;\n@@ -277,1 +277,1 @@\n-                %4 : java.type:\"int\" = constant @\"0\";\n+                %4 : java.type:\"int\" = constant @0;\n@@ -279,1 +279,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -284,1 +284,1 @@\n-                %10 : java.type:\"int\" = constant @\"0\";\n+                %10 : java.type:\"int\" = constant @0;\n@@ -286,1 +286,1 @@\n-                %12 : java.type:\"int\" = constant @\"1\";\n+                %12 : java.type:\"int\" = constant @1;\n@@ -303,1 +303,1 @@\n-                %4 : java.type:\"int\" = constant @\"0\";\n+                %4 : java.type:\"int\" = constant @0;\n@@ -305,1 +305,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -310,1 +310,1 @@\n-                %10 : java.type:\"int\" = constant @\"0\";\n+                %10 : java.type:\"int\" = constant @0;\n@@ -312,1 +312,1 @@\n-                %12 : java.type:\"int\" = constant @\"1\";\n+                %12 : java.type:\"int\" = constant @1;\n@@ -345,1 +345,1 @@\n-                %3 : java.type:\"char\" = constant @\"c\";\n+                %3 : java.type:\"char\" = constant @'c';\n","filename":"test\/langtools\/tools\/javac\/reflect\/ArrayAccessTest.java","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-                        %3 : java.type:\"int\" = constant @\"1\";\n+                        %3 : java.type:\"int\" = constant @1;\n@@ -64,1 +64,1 @@\n-                    %3 : java.type:\"int\" = constant @\"1\";\n+                    %3 : java.type:\"int\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/AssertTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,3 +40,3 @@\n-                %1 : java.type:\"int\" = constant @\"5\";\n-                %2 : java.type:\"int\" = constant @\"2\";\n-                %3 : java.type:\"int\" = constant @\"4\";\n+                %1 : java.type:\"int\" = constant @5;\n+                %2 : java.type:\"int\" = constant @2;\n+                %3 : java.type:\"int\" = constant @4;\n@@ -45,1 +45,1 @@\n-                %6 : java.type:\"int\" = constant @\"3\";\n+                %6 : java.type:\"int\" = constant @3;\n@@ -57,4 +57,4 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n-                %2 : java.type:\"int\" = constant @\"2\";\n-                %3 : java.type:\"int\" = constant @\"3\";\n-                %4 : java.type:\"int\" = constant @\"4\";\n+                %1 : java.type:\"int\" = constant @1;\n+                %2 : java.type:\"int\" = constant @2;\n+                %3 : java.type:\"int\" = constant @3;\n+                %4 : java.type:\"int\" = constant @4;\n@@ -74,2 +74,2 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n-                %2 : java.type:\"int\" = constant @\"2\";\n+                %1 : java.type:\"int\" = constant @1;\n+                %2 : java.type:\"int\" = constant @2;\n@@ -77,1 +77,1 @@\n-                %4 : java.type:\"int\" = constant @\"3\";\n+                %4 : java.type:\"int\" = constant @3;\n@@ -79,1 +79,1 @@\n-                %6 : java.type:\"int\" = constant @\"4\";\n+                %6 : java.type:\"int\" = constant @4;\n@@ -93,1 +93,1 @@\n-                %4 : java.type:\"int\" = constant @\"1\";\n+                %4 : java.type:\"int\" = constant @1;\n@@ -97,1 +97,1 @@\n-                %7 : java.type:\"int\" = constant @\"1\";\n+                %7 : java.type:\"int\" = constant @1;\n@@ -102,1 +102,1 @@\n-                %11 : java.type:\"int\" = constant @\"1\";\n+                %11 : java.type:\"int\" = constant @1;\n@@ -107,1 +107,1 @@\n-                %15 : java.type:\"int\" = constant @\"1\";\n+                %15 : java.type:\"int\" = constant @1;\n@@ -112,1 +112,1 @@\n-                %19 : java.type:\"int\" = constant @\"1\";\n+                %19 : java.type:\"int\" = constant @1;\n@@ -128,1 +128,1 @@\n-                %4 : java.type:\"int\" = constant @\"0\";\n+                %4 : java.type:\"int\" = constant @0;\n@@ -141,2 +141,2 @@\n-                %1 : java.type:\"int\" = constant @\"5\";\n-                %2 : java.type:\"int\" = constant @\"2\";\n+                %1 : java.type:\"int\" = constant @5;\n+                %2 : java.type:\"int\" = constant @2;\n@@ -156,1 +156,1 @@\n-                %4 : java.type:\"int\" = constant @\"1\";\n+                %4 : java.type:\"int\" = constant @1;\n@@ -160,1 +160,1 @@\n-                %7 : java.type:\"long\" = constant @\"1\";\n+                %7 : java.type:\"long\" = constant @1;\n@@ -166,1 +166,1 @@\n-                %12 : java.type:\"long\" = constant @\"1\";\n+                %12 : java.type:\"long\" = constant @1;\n@@ -170,1 +170,1 @@\n-                %15 : java.type:\"int\" = constant @\"1\";\n+                %15 : java.type:\"int\" = constant @1;\n@@ -176,1 +176,1 @@\n-                %20 : java.type:\"int\" = constant @\"1\";\n+                %20 : java.type:\"int\" = constant @1;\n@@ -180,1 +180,1 @@\n-                %23 : java.type:\"long\" = constant @\"1\";\n+                %23 : java.type:\"long\" = constant @1;\n@@ -186,1 +186,1 @@\n-                %28 : java.type:\"long\" = constant @\"1\";\n+                %28 : java.type:\"long\" = constant @1;\n@@ -190,1 +190,1 @@\n-                %31 : java.type:\"int\" = constant @\"1\";\n+                %31 : java.type:\"int\" = constant @1;\n@@ -196,1 +196,1 @@\n-                %36 : java.type:\"int\" = constant @\"1\";\n+                %36 : java.type:\"int\" = constant @1;\n@@ -200,1 +200,1 @@\n-                %39 : java.type:\"long\" = constant @\"1\";\n+                %39 : java.type:\"long\" = constant @1;\n@@ -205,1 +205,1 @@\n-                %43 : java.type:\"int\" = constant @\"-1\";\n+                %43 : java.type:\"int\" = constant @-1;\n@@ -235,1 +235,1 @@\n-                %4 : java.type:\"int\" = constant @\"1\";\n+                %4 : java.type:\"int\" = constant @1;\n@@ -240,1 +240,1 @@\n-                %8 : java.type:\"long\" = constant @\"1\";\n+                %8 : java.type:\"long\" = constant @1;\n@@ -245,1 +245,1 @@\n-                %12 : java.type:\"int\" = constant @\"1\";\n+                %12 : java.type:\"int\" = constant @1;\n@@ -250,1 +250,1 @@\n-                %16 : java.type:\"long\" = constant @\"1\";\n+                %16 : java.type:\"long\" = constant @1;\n@@ -255,1 +255,1 @@\n-                %20 : java.type:\"int\" = constant @\"1\";\n+                %20 : java.type:\"int\" = constant @1;\n@@ -290,1 +290,1 @@\n-                %15 : java.type:\"double\" = constant @\"3.5\";\n+                %15 : java.type:\"double\" = constant @3.5d;\n@@ -299,1 +299,1 @@\n-                %22 : java.type:\"int\" = constant @\"1\";\n+                %22 : java.type:\"int\" = constant @1;\n@@ -304,1 +304,1 @@\n-                %26 : java.type:\"long\" = constant @\"1\";\n+                %26 : java.type:\"long\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/BinopTest.java","additions":39,"deletions":39,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-                    %1 : java.type:\"int\" = constant @\"0\";\n+                    %1 : java.type:\"int\" = constant @0;\n@@ -47,1 +47,1 @@\n-                    %3 : java.type:\"int\" = constant @\"1\";\n+                    %3 : java.type:\"int\" = constant @1;\n@@ -50,1 +50,1 @@\n-                        %5 : java.type:\"int\" = constant @\"2\";\n+                        %5 : java.type:\"int\" = constant @2;\n@@ -80,1 +80,1 @@\n-                        %4 : java.type:\"int\" = constant @\"1\";\n+                        %4 : java.type:\"int\" = constant @1;\n@@ -87,1 +87,1 @@\n-                            %7 : java.type:\"int\" = constant @\"1\";\n+                            %7 : java.type:\"int\" = constant @1;\n@@ -96,1 +96,1 @@\n-                        %10 : java.type:\"int\" = constant @\"2\";\n+                        %10 : java.type:\"int\" = constant @2;\n@@ -103,1 +103,1 @@\n-                            %13 : java.type:\"int\" = constant @\"2\";\n+                            %13 : java.type:\"int\" = constant @2;\n@@ -113,1 +113,1 @@\n-                            %16 : java.type:\"int\" = constant @\"3\";\n+                            %16 : java.type:\"int\" = constant @3;\n@@ -147,1 +147,1 @@\n-                        %1 : java.type:\"boolean\" = constant @\"true\";\n+                        %1 : java.type:\"boolean\" = constant @true;\n@@ -155,1 +155,1 @@\n-                            %2 : java.type:\"int\" = constant @\"0\";\n+                            %2 : java.type:\"int\" = constant @0;\n@@ -188,1 +188,1 @@\n-                            %8 : java.type:\"int\" = constant @\"1\";\n+                            %8 : java.type:\"int\" = constant @1;\n@@ -237,1 +237,1 @@\n-                        %1 : java.type:\"boolean\" = constant @\"true\";\n+                        %1 : java.type:\"boolean\" = constant @true;\n@@ -251,1 +251,1 @@\n-                        %2 : java.type:\"boolean\" = constant @\"true\";\n+                        %2 : java.type:\"boolean\" = constant @true;\n","filename":"test\/langtools\/tools\/javac\/reflect\/BlockTest.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-                %1 : java.type:\"long\" = constant @\"1\";\n+                %1 : java.type:\"long\" = constant @1;\n@@ -67,1 +67,1 @@\n-                %1 : java.type:\"long\" = constant @\"0\";\n+                %1 : java.type:\"long\" = constant @0;\n@@ -97,1 +97,1 @@\n-                %4 : java.type:\"int\" = constant @\"1\";\n+                %4 : java.type:\"int\" = constant @1;\n@@ -114,1 +114,1 @@\n-                %4 : java.type:\"int\" = constant @\"3\";\n+                %4 : java.type:\"int\" = constant @3;\n@@ -135,1 +135,1 @@\n-                %3 : java.type:\"int\" = constant @\"1\";\n+                %3 : java.type:\"int\" = constant @1;\n@@ -152,1 +152,1 @@\n-                %3 : java.type:\"int\" = constant @\"3\";\n+                %3 : java.type:\"int\" = constant @3;\n@@ -170,1 +170,1 @@\n-                %6 : java.type:\"int\" = constant @\"0\";\n+                %6 : java.type:\"int\" = constant @0;\n@@ -199,1 +199,1 @@\n-                        %9 : java.type:\"int\" = constant @\"2\";\n+                        %9 : java.type:\"int\" = constant @2;\n@@ -221,1 +221,1 @@\n-                        %7 : java.type:\"int\" = constant @\"2\";\n+                        %7 : java.type:\"int\" = constant @2;\n@@ -247,1 +247,1 @@\n-                        %5 : java.type:\"int\" = constant @\"1\";\n+                        %5 : java.type:\"int\" = constant @1;\n@@ -251,1 +251,1 @@\n-                        %6 : java.type:\"int\" = constant @\"2\";\n+                        %6 : java.type:\"int\" = constant @2;\n@@ -267,1 +267,1 @@\n-                    %2 : java.type:\"int\" = constant @\"1\";\n+                    %2 : java.type:\"int\" = constant @1;\n@@ -283,1 +283,1 @@\n-                    %2 : java.type:\"int\" = constant @\"1\";\n+                    %2 : java.type:\"int\" = constant @1;\n@@ -303,1 +303,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -313,1 +313,1 @@\n-                        %12 : java.type:\"boolean\" = constant @\"true\";\n+                        %12 : java.type:\"boolean\" = constant @true;\n@@ -317,1 +317,1 @@\n-                        %13 : java.type:\"int\" = constant @\"0\";\n+                        %13 : java.type:\"int\" = constant @0;\n@@ -339,1 +339,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -344,1 +344,1 @@\n-                        %10 : java.type:\"int\" = constant @\"1\";\n+                        %10 : java.type:\"int\" = constant @1;\n@@ -348,1 +348,1 @@\n-                        %11 : java.type:\"boolean\" = constant @\"true\";\n+                        %11 : java.type:\"boolean\" = constant @true;\n@@ -374,1 +374,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -379,1 +379,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -384,1 +384,1 @@\n-                        %10 : java.type:\"boolean\" = constant @\"true\";\n+                        %10 : java.type:\"boolean\" = constant @true;\n@@ -388,1 +388,1 @@\n-                        %11 : java.type:\"int\" = constant @\"0\";\n+                        %11 : java.type:\"int\" = constant @0;\n@@ -411,1 +411,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -421,1 +421,1 @@\n-                        %12 : java.type:\"boolean\" = constant @\"true\";\n+                        %12 : java.type:\"boolean\" = constant @true;\n@@ -425,1 +425,1 @@\n-                        %13 : java.type:\"int\" = constant @\"0\";\n+                        %13 : java.type:\"int\" = constant @0;\n@@ -447,1 +447,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -452,1 +452,1 @@\n-                        %10 : java.type:\"int\" = constant @\"1\";\n+                        %10 : java.type:\"int\" = constant @1;\n@@ -456,1 +456,1 @@\n-                        %11 : java.type:\"boolean\" = constant @\"true\";\n+                        %11 : java.type:\"boolean\" = constant @true;\n@@ -482,1 +482,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -487,1 +487,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -492,1 +492,1 @@\n-                        %10 : java.type:\"boolean\" = constant @\"true\";\n+                        %10 : java.type:\"boolean\" = constant @true;\n@@ -496,1 +496,1 @@\n-                        %11 : java.type:\"int\" = constant @\"0\";\n+                        %11 : java.type:\"int\" = constant @0;\n@@ -552,1 +552,1 @@\n-                invoke %0 %3 %4 @java.ref:\"BoxingConversionTest::m(int, int, java.lang.Integer[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=\"true\";\n+                invoke %0 %3 %4 @java.ref:\"BoxingConversionTest::m(int, int, java.lang.Integer[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=true;\n@@ -568,1 +568,1 @@\n-                invoke %0 %3 %4 %6 @java.ref:\"BoxingConversionTest::m(int, int, java.lang.Integer[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=\"true\";\n+                invoke %0 %3 %4 %6 @java.ref:\"BoxingConversionTest::m(int, int, java.lang.Integer[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=true;\n@@ -586,1 +586,1 @@\n-                invoke %0 %3 %4 %6 %8 @java.ref:\"BoxingConversionTest::m(int, int, java.lang.Integer[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=\"true\";\n+                invoke %0 %3 %4 %6 %8 @java.ref:\"BoxingConversionTest::m(int, int, java.lang.Integer[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=true;\n@@ -619,1 +619,1 @@\n-                %5 : java.type:\"BoxingConversionTest$Box2\" = new %3 %4 @java.ref:\"BoxingConversionTest$Box2::(int, int, java.lang.Integer[])\" @new.varargs=\"true\";\n+                %5 : java.type:\"BoxingConversionTest$Box2\" = new %3 %4 @java.ref:\"BoxingConversionTest$Box2::(int, int, java.lang.Integer[])\" @new.varargs=true;\n@@ -635,1 +635,1 @@\n-                %7 : java.type:\"BoxingConversionTest$Box2\" = new %3 %4 %6 @java.ref:\"BoxingConversionTest$Box2::(int, int, java.lang.Integer[])\" @new.varargs=\"true\";\n+                %7 : java.type:\"BoxingConversionTest$Box2\" = new %3 %4 %6 @java.ref:\"BoxingConversionTest$Box2::(int, int, java.lang.Integer[])\" @new.varargs=true;\n@@ -653,1 +653,1 @@\n-                %9 : java.type:\"BoxingConversionTest$Box2\" = new %3 %4 %6 %8 @java.ref:\"BoxingConversionTest$Box2::(int, int, java.lang.Integer[])\" @new.varargs=\"true\";\n+                %9 : java.type:\"BoxingConversionTest$Box2\" = new %3 %4 %6 %8 @java.ref:\"BoxingConversionTest$Box2::(int, int, java.lang.Integer[])\" @new.varargs=true;\n","filename":"test\/langtools\/tools\/javac\/reflect\/BoxingConversionTest.java","additions":39,"deletions":39,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-                        %1 : java.type:\"int\" = constant @\"0\";\n+                        %1 : java.type:\"int\" = constant @0;\n@@ -49,1 +49,1 @@\n-                        %5 : java.type:\"int\" = constant @\"10\";\n+                        %5 : java.type:\"int\" = constant @10;\n@@ -55,1 +55,1 @@\n-                        %9 : java.type:\"int\" = constant @\"1\";\n+                        %9 : java.type:\"int\" = constant @1;\n@@ -63,1 +63,1 @@\n-                                %12 : java.type:\"boolean\" = constant @\"true\";\n+                                %12 : java.type:\"boolean\" = constant @true;\n@@ -74,1 +74,1 @@\n-                                %13 : java.type:\"boolean\" = constant @\"true\";\n+                                %13 : java.type:\"boolean\" = constant @true;\n@@ -85,1 +85,1 @@\n-                                %14 : java.type:\"int\" = constant @\"0\";\n+                                %14 : java.type:\"int\" = constant @0;\n@@ -91,1 +91,1 @@\n-                                %18 : java.type:\"int\" = constant @\"10\";\n+                                %18 : java.type:\"int\" = constant @10;\n@@ -97,1 +97,1 @@\n-                                %22 : java.type:\"int\" = constant @\"1\";\n+                                %22 : java.type:\"int\" = constant @1;\n@@ -105,1 +105,1 @@\n-                                        %25 : java.type:\"boolean\" = constant @\"true\";\n+                                        %25 : java.type:\"boolean\" = constant @true;\n@@ -116,1 +116,1 @@\n-                                        %26 : java.type:\"boolean\" = constant @\"true\";\n+                                        %26 : java.type:\"boolean\" = constant @true;\n@@ -158,1 +158,1 @@\n-                            %2 : java.type:\"int\" = constant @\"0\";\n+                            %2 : java.type:\"int\" = constant @0;\n@@ -164,1 +164,1 @@\n-                            %6 : java.type:\"int\" = constant @\"10\";\n+                            %6 : java.type:\"int\" = constant @10;\n@@ -170,1 +170,1 @@\n-                            %10 : java.type:\"int\" = constant @\"1\";\n+                            %10 : java.type:\"int\" = constant @1;\n@@ -178,1 +178,1 @@\n-                                    %13 : java.type:\"boolean\" = constant @\"true\";\n+                                    %13 : java.type:\"boolean\" = constant @true;\n@@ -189,1 +189,1 @@\n-                                    %14 : java.type:\"boolean\" = constant @\"true\";\n+                                    %14 : java.type:\"boolean\" = constant @true;\n@@ -202,1 +202,1 @@\n-                                        %16 : java.type:\"int\" = constant @\"0\";\n+                                        %16 : java.type:\"int\" = constant @0;\n@@ -208,1 +208,1 @@\n-                                        %20 : java.type:\"int\" = constant @\"10\";\n+                                        %20 : java.type:\"int\" = constant @10;\n@@ -214,1 +214,1 @@\n-                                        %24 : java.type:\"int\" = constant @\"1\";\n+                                        %24 : java.type:\"int\" = constant @1;\n@@ -222,1 +222,1 @@\n-                                                %27 : java.type:\"boolean\" = constant @\"true\";\n+                                                %27 : java.type:\"boolean\" = constant @true;\n@@ -233,1 +233,1 @@\n-                                                %28 : java.type:\"boolean\" = constant @\"true\";\n+                                                %28 : java.type:\"boolean\" = constant @true;\n@@ -244,1 +244,1 @@\n-                                                %29 : java.type:\"boolean\" = constant @\"true\";\n+                                                %29 : java.type:\"boolean\" = constant @true;\n@@ -255,1 +255,1 @@\n-                                                %30 : java.type:\"boolean\" = constant @\"true\";\n+                                                %30 : java.type:\"boolean\" = constant @true;\n@@ -313,1 +313,1 @@\n-                                        %3 : java.type:\"boolean\" = constant @\"true\";\n+                                        %3 : java.type:\"boolean\" = constant @true;\n@@ -324,1 +324,1 @@\n-                                        %4 : java.type:\"boolean\" = constant @\"true\";\n+                                        %4 : java.type:\"boolean\" = constant @true;\n@@ -366,1 +366,1 @@\n-                %2 : java.type:\"int\" = constant @\"0\";\n+                %2 : java.type:\"int\" = constant @0;\n@@ -371,1 +371,1 @@\n-                    %6 : java.type:\"int\" = constant @\"1\";\n+                    %6 : java.type:\"int\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/BreakContinueTest.java","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-                %4 : java.type:\"int\" = constant @\"0\";\n+                %4 : java.type:\"int\" = constant @0;\n","filename":"test\/langtools\/tools\/javac\/reflect\/CastInstanceOfTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-                        %5 : java.type:\"int\" = constant @\"1\";\n+                        %5 : java.type:\"int\" = constant @1;\n@@ -50,1 +50,1 @@\n-                        %8 : java.type:\"int\" = constant @\"10\";\n+                        %8 : java.type:\"int\" = constant @10;\n@@ -69,1 +69,1 @@\n-                        %5 : java.type:\"int\" = constant @\"1\";\n+                        %5 : java.type:\"int\" = constant @1;\n@@ -75,1 +75,1 @@\n-                        %8 : java.type:\"int\" = constant @\"10\";\n+                        %8 : java.type:\"int\" = constant @10;\n@@ -96,1 +96,1 @@\n-                                %6 : java.type:\"int\" = constant @\"1\";\n+                                %6 : java.type:\"int\" = constant @1;\n@@ -102,1 +102,1 @@\n-                                %9 : java.type:\"int\" = constant @\"10\";\n+                                %9 : java.type:\"int\" = constant @10;\n@@ -110,1 +110,1 @@\n-                        %12 : java.type:\"int\" = constant @\"100\";\n+                        %12 : java.type:\"int\" = constant @100;\n","filename":"test\/langtools\/tools\/javac\/reflect\/ConditionalAndOrTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-                %1 : java.type:\"int\" = constant @\"42\";\n+                %1 : java.type:\"int\" = constant @42;\n@@ -90,1 +90,1 @@\n-                %4 : java.type:\"int\" = constant @\"-42\";\n+                %4 : java.type:\"int\" = constant @-42;\n@@ -104,1 +104,1 @@\n-                %1 : java.type:\"int\" = constant @\"42\";\n+                %1 : java.type:\"int\" = constant @42;\n@@ -107,1 +107,1 @@\n-                %4 : java.type:\"int\" = constant @\"-42\";\n+                %4 : java.type:\"int\" = constant @-42;\n@@ -121,1 +121,1 @@\n-                %1 : java.type:\"int\" = constant @\"42\";\n+                %1 : java.type:\"int\" = constant @42;\n@@ -123,1 +123,1 @@\n-                %3 : java.type:\"int\" = constant @\"-42\";\n+                %3 : java.type:\"int\" = constant @-42;\n@@ -136,1 +136,1 @@\n-                %1 : java.type:\"long\" = constant @\"42\";\n+                %1 : java.type:\"long\" = constant @42;\n@@ -138,1 +138,1 @@\n-                %3 : java.type:\"long\" = constant @\"-42\";\n+                %3 : java.type:\"long\" = constant @-42;\n@@ -151,1 +151,1 @@\n-                %1 : java.type:\"float\" = constant @\"42.0\";\n+                %1 : java.type:\"float\" = constant @42.0f;\n@@ -153,1 +153,1 @@\n-                %3 : java.type:\"float\" = constant @\"42.0\";\n+                %3 : java.type:\"float\" = constant @42.0f;\n@@ -167,1 +167,1 @@\n-                %1 : java.type:\"double\" = constant @\"42.0\";\n+                %1 : java.type:\"double\" = constant @42.0d;\n@@ -169,1 +169,1 @@\n-                %3 : java.type:\"double\" = constant @\"42.0\";\n+                %3 : java.type:\"double\" = constant @42.0d;\n@@ -183,1 +183,1 @@\n-                %1 : java.type:\"char\" = constant @\"a\";\n+                %1 : java.type:\"char\" = constant @'a';\n@@ -195,1 +195,1 @@\n-                %1 : java.type:\"boolean\" = constant @\"true\";\n+                %1 : java.type:\"boolean\" = constant @true;\n@@ -197,1 +197,1 @@\n-                %3 : java.type:\"boolean\" = constant @\"false\";\n+                %3 : java.type:\"boolean\" = constant @false;\n","filename":"test\/langtools\/tools\/javac\/reflect\/ConstantsTest.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-                %0 : java.type:\"int\" = constant @\"1\";\n+                %0 : java.type:\"int\" = constant @1;\n@@ -55,1 +55,1 @@\n-                %2 : java.type:\"double\" = constant @\"3.0\";\n+                %2 : java.type:\"double\" = constant @3.0d;\n@@ -107,1 +107,1 @@\n-                %3 : java.type:\"int\" = constant @\"0\";\n+                %3 : java.type:\"int\" = constant @0;\n@@ -123,1 +123,1 @@\n-                %3 : java.type:\"int\" = constant @\"0\";\n+                %3 : java.type:\"int\" = constant @0;\n@@ -160,1 +160,1 @@\n-                %3 : java.type:\"int\" = constant @\"0\";\n+                %3 : java.type:\"int\" = constant @0;\n@@ -163,1 +163,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -182,1 +182,1 @@\n-                %3 : java.type:\"int\" = constant @\"0\";\n+                %3 : java.type:\"int\" = constant @0;\n","filename":"test\/langtools\/tools\/javac\/reflect\/DenotableTypesTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -50,1 +50,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -64,1 +64,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -68,1 +68,1 @@\n-                %5 : java.type:\"int\" = constant @\"1\";\n+                %5 : java.type:\"int\" = constant @1;\n@@ -82,1 +82,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -95,1 +95,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -118,1 +118,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -170,1 +170,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -198,1 +198,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -212,1 +212,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -216,1 +216,1 @@\n-                %5 : java.type:\"int\" = constant @\"1\";\n+                %5 : java.type:\"int\" = constant @1;\n@@ -231,1 +231,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -235,1 +235,1 @@\n-                %5 : java.type:\"int\" = constant @\"1\";\n+                %5 : java.type:\"int\" = constant @1;\n@@ -250,1 +250,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -264,1 +264,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -283,1 +283,1 @@\n-                %7 : java.type:\"int\" = constant @\"1\";\n+                %7 : java.type:\"int\" = constant @1;\n@@ -297,1 +297,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -302,1 +302,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -318,1 +318,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -323,1 +323,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -339,1 +339,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -344,1 +344,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -362,1 +362,1 @@\n-                %5 : java.type:\"int\" = constant @\"1\";\n+                %5 : java.type:\"int\" = constant @1;\n@@ -368,1 +368,1 @@\n-                %10 : java.type:\"int\" = constant @\"1\";\n+                %10 : java.type:\"int\" = constant @1;\n@@ -387,1 +387,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -392,1 +392,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -408,1 +408,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -413,1 +413,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -429,1 +429,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -434,1 +434,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -452,1 +452,1 @@\n-                %5 : java.type:\"int\" = constant @\"1\";\n+                %5 : java.type:\"int\" = constant @1;\n@@ -458,1 +458,1 @@\n-                %10 : java.type:\"int\" = constant @\"1\";\n+                %10 : java.type:\"int\" = constant @1;\n@@ -492,1 +492,1 @@\n-                    %1 : java.type:\"int\" = constant @\"1\";\n+                    %1 : java.type:\"int\" = constant @1;\n@@ -494,1 +494,1 @@\n-                    %2 : java.type:\"int\" = constant @\"1\";\n+                    %2 : java.type:\"int\" = constant @1;\n@@ -508,1 +508,1 @@\n-                    %2 : java.type:\"int\" = constant @\"1\";\n+                    %2 : java.type:\"int\" = constant @1;\n@@ -512,1 +512,1 @@\n-                    %5 : java.type:\"int\" = constant @\"1\";\n+                    %5 : java.type:\"int\" = constant @1;\n@@ -561,1 +561,1 @@\n-                %4 : java.type:\"int\" = constant @\"1\";\n+                %4 : java.type:\"int\" = constant @1;\n@@ -564,1 +564,1 @@\n-                %6 : java.type:\"int\" = constant @\"1\";\n+                %6 : java.type:\"int\" = constant @1;\n@@ -567,1 +567,1 @@\n-                %8 : java.type:\"int\" = constant @\"1\";\n+                %8 : java.type:\"int\" = constant @1;\n@@ -569,1 +569,1 @@\n-                %9 : java.type:\"int\" = constant @\"1\";\n+                %9 : java.type:\"int\" = constant @1;\n@@ -572,1 +572,1 @@\n-                %11 : java.type:\"int\" = constant @\"1\";\n+                %11 : java.type:\"int\" = constant @1;\n@@ -574,1 +574,1 @@\n-                %12 : java.type:\"int\" = constant @\"1\";\n+                %12 : java.type:\"int\" = constant @1;\n@@ -594,1 +594,1 @@\n-                %5 : java.type:\"int\" = constant @\"1\";\n+                %5 : java.type:\"int\" = constant @1;\n@@ -599,1 +599,1 @@\n-                %9 : java.type:\"int\" = constant @\"1\";\n+                %9 : java.type:\"int\" = constant @1;\n@@ -604,1 +604,1 @@\n-                %13 : java.type:\"int\" = constant @\"1\";\n+                %13 : java.type:\"int\" = constant @1;\n@@ -608,1 +608,1 @@\n-                %16 : java.type:\"int\" = constant @\"1\";\n+                %16 : java.type:\"int\" = constant @1;\n@@ -613,1 +613,1 @@\n-                %20 : java.type:\"int\" = constant @\"1\";\n+                %20 : java.type:\"int\" = constant @1;\n@@ -617,1 +617,1 @@\n-                %23 : java.type:\"int\" = constant @\"1\";\n+                %23 : java.type:\"int\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/FieldAccessTest.java","additions":48,"deletions":48,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-                            %10 : java.type:\"int\" = constant @\"10\";\n+                            %10 : java.type:\"int\" = constant @10;\n@@ -174,1 +174,1 @@\n-                        %1 : java.type:\"int\" = constant @\"0\";\n+                        %1 : java.type:\"int\" = constant @0;\n@@ -180,1 +180,1 @@\n-                        %5 : java.type:\"int\" = constant @\"10\";\n+                        %5 : java.type:\"int\" = constant @10;\n@@ -186,1 +186,1 @@\n-                        %9 : java.type:\"int\" = constant @\"1\";\n+                        %9 : java.type:\"int\" = constant @1;\n@@ -211,1 +211,1 @@\n-                        %1 : java.type:\"int\" = constant @\"0\";\n+                        %1 : java.type:\"int\" = constant @0;\n@@ -217,1 +217,1 @@\n-                        %5 : java.type:\"int\" = constant @\"10\";\n+                        %5 : java.type:\"int\" = constant @10;\n@@ -223,1 +223,1 @@\n-                        %9 : java.type:\"int\" = constant @\"1\";\n+                        %9 : java.type:\"int\" = constant @1;\n@@ -232,1 +232,1 @@\n-                %13 : java.type:\"int\" = constant @\"-1\";\n+                %13 : java.type:\"int\" = constant @-1;\n@@ -248,1 +248,1 @@\n-                        %1 : java.type:\"int\" = constant @\"0\";\n+                        %1 : java.type:\"int\" = constant @0;\n@@ -254,1 +254,1 @@\n-                        %5 : java.type:\"int\" = constant @\"10\";\n+                        %5 : java.type:\"int\" = constant @10;\n@@ -260,1 +260,1 @@\n-                        %9 : java.type:\"int\" = constant @\"1\";\n+                        %9 : java.type:\"int\" = constant @1;\n@@ -284,1 +284,1 @@\n-                        %1 : java.type:\"int\" = constant @\"0\";\n+                        %1 : java.type:\"int\" = constant @0;\n@@ -290,1 +290,1 @@\n-                        %5 : java.type:\"int\" = constant @\"10\";\n+                        %5 : java.type:\"int\" = constant @10;\n@@ -296,1 +296,1 @@\n-                        %9 : java.type:\"int\" = constant @\"1\";\n+                        %9 : java.type:\"int\" = constant @1;\n@@ -314,1 +314,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -322,1 +322,1 @@\n-                        %4 : java.type:\"int\" = constant @\"10\";\n+                        %4 : java.type:\"int\" = constant @10;\n@@ -328,1 +328,1 @@\n-                        %7 : java.type:\"int\" = constant @\"1\";\n+                        %7 : java.type:\"int\" = constant @1;\n@@ -352,1 +352,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -357,1 +357,1 @@\n-                        %4 : java.type:\"int\" = constant @\"1\";\n+                        %4 : java.type:\"int\" = constant @1;\n@@ -364,1 +364,1 @@\n-                        %7 : java.type:\"int\" = constant @\"10\";\n+                        %7 : java.type:\"int\" = constant @10;\n@@ -370,1 +370,1 @@\n-                        %10 : java.type:\"int\" = constant @\"1\";\n+                        %10 : java.type:\"int\" = constant @1;\n@@ -396,1 +396,1 @@\n-                        %1 : java.type:\"int\" = constant @\"0\";\n+                        %1 : java.type:\"int\" = constant @0;\n@@ -401,1 +401,1 @@\n-                        %4 : java.type:\"boolean\" = constant @\"true\";\n+                        %4 : java.type:\"boolean\" = constant @true;\n@@ -406,1 +406,1 @@\n-                        %7 : java.type:\"int\" = constant @\"1\";\n+                        %7 : java.type:\"int\" = constant @1;\n@@ -431,1 +431,1 @@\n-                        %1 : java.type:\"int\" = constant @\"0\";\n+                        %1 : java.type:\"int\" = constant @0;\n@@ -436,1 +436,1 @@\n-                        %4 : java.type:\"boolean\" = constant @\"true\";\n+                        %4 : java.type:\"boolean\" = constant @true;\n@@ -465,1 +465,1 @@\n-                        %1 : java.type:\"boolean\" = constant @\"true\";\n+                        %1 : java.type:\"boolean\" = constant @true;\n@@ -487,1 +487,1 @@\n-                        %1 : java.type:\"int\" = constant @\"0\";\n+                        %1 : java.type:\"int\" = constant @0;\n@@ -489,1 +489,1 @@\n-                        %3 : java.type:\"int\" = constant @\"0\";\n+                        %3 : java.type:\"int\" = constant @0;\n@@ -498,1 +498,1 @@\n-                                %10 : java.type:\"int\" = constant @\"10\";\n+                                %10 : java.type:\"int\" = constant @10;\n@@ -504,1 +504,1 @@\n-                                %13 : java.type:\"int\" = constant @\"20\";\n+                                %13 : java.type:\"int\" = constant @20;\n@@ -512,1 +512,1 @@\n-                        %18 : java.type:\"int\" = constant @\"1\";\n+                        %18 : java.type:\"int\" = constant @1;\n@@ -516,1 +516,1 @@\n-                        %21 : java.type:\"int\" = constant @\"2\";\n+                        %21 : java.type:\"int\" = constant @2;\n@@ -546,1 +546,1 @@\n-                        %3 : java.type:\"int\" = constant @\"0\";\n+                        %3 : java.type:\"int\" = constant @0;\n@@ -552,1 +552,1 @@\n-                        %7 : java.type:\"int\" = constant @\"10\";\n+                        %7 : java.type:\"int\" = constant @10;\n@@ -558,1 +558,1 @@\n-                        %11 : java.type:\"int\" = constant @\"1\";\n+                        %11 : java.type:\"int\" = constant @1;\n@@ -567,1 +567,1 @@\n-                                %15 : java.type:\"int\" = constant @\"0\";\n+                                %15 : java.type:\"int\" = constant @0;\n@@ -576,1 +576,1 @@\n-                                %18 : java.type:\"int\" = constant @\"1\";\n+                                %18 : java.type:\"int\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/ForLoopTest.java","additions":38,"deletions":38,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-                        %4 : java.type:\"int\" = constant @\"1\";\n+                        %4 : java.type:\"int\" = constant @1;\n@@ -48,1 +48,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -71,1 +71,1 @@\n-                        %4 : java.type:\"int\" = constant @\"1\";\n+                        %4 : java.type:\"int\" = constant @1;\n@@ -76,1 +76,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -81,1 +81,1 @@\n-                        %7 : java.type:\"int\" = constant @\"2\";\n+                        %7 : java.type:\"int\" = constant @2;\n@@ -103,1 +103,1 @@\n-                        %4 : java.type:\"int\" = constant @\"1\";\n+                        %4 : java.type:\"int\" = constant @1;\n@@ -108,1 +108,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -114,1 +114,1 @@\n-                        %8 : java.type:\"int\" = constant @\"2\";\n+                        %8 : java.type:\"int\" = constant @2;\n@@ -119,1 +119,1 @@\n-                        %10 : java.type:\"int\" = constant @\"2\";\n+                        %10 : java.type:\"int\" = constant @2;\n@@ -144,1 +144,1 @@\n-                        %4 : java.type:\"int\" = constant @\"1\";\n+                        %4 : java.type:\"int\" = constant @1;\n@@ -149,1 +149,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -155,1 +155,1 @@\n-                        %8 : java.type:\"int\" = constant @\"2\";\n+                        %8 : java.type:\"int\" = constant @2;\n@@ -160,1 +160,1 @@\n-                        %10 : java.type:\"int\" = constant @\"2\";\n+                        %10 : java.type:\"int\" = constant @2;\n@@ -165,1 +165,1 @@\n-                        %11 : java.type:\"int\" = constant @\"3\";\n+                        %11 : java.type:\"int\" = constant @3;\n@@ -188,1 +188,1 @@\n-                        %4 : java.type:\"int\" = constant @\"1\";\n+                        %4 : java.type:\"int\" = constant @1;\n@@ -193,1 +193,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -198,1 +198,1 @@\n-                        %8 : java.type:\"int\" = constant @\"2\";\n+                        %8 : java.type:\"int\" = constant @2;\n@@ -203,1 +203,1 @@\n-                        %10 : java.type:\"int\" = constant @\"2\";\n+                        %10 : java.type:\"int\" = constant @2;\n@@ -207,1 +207,1 @@\n-                        %11 : java.type:\"int\" = constant @\"3\";\n+                        %11 : java.type:\"int\" = constant @3;\n@@ -231,1 +231,1 @@\n-                        %4 : java.type:\"int\" = constant @\"1\";\n+                        %4 : java.type:\"int\" = constant @1;\n@@ -236,1 +236,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -258,1 +258,1 @@\n-                        %4 : java.type:\"int\" = constant @\"1\";\n+                        %4 : java.type:\"int\" = constant @1;\n@@ -263,1 +263,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -268,1 +268,1 @@\n-                        %7 : java.type:\"int\" = constant @\"2\";\n+                        %7 : java.type:\"int\" = constant @2;\n@@ -289,1 +289,1 @@\n-                        %4 : java.type:\"int\" = constant @\"1\";\n+                        %4 : java.type:\"int\" = constant @1;\n@@ -294,1 +294,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -300,1 +300,1 @@\n-                        %8 : java.type:\"int\" = constant @\"2\";\n+                        %8 : java.type:\"int\" = constant @2;\n@@ -305,1 +305,1 @@\n-                        %10 : java.type:\"int\" = constant @\"2\";\n+                        %10 : java.type:\"int\" = constant @2;\n@@ -310,1 +310,1 @@\n-                        %11 : java.type:\"int\" = constant @\"3\";\n+                        %11 : java.type:\"int\" = constant @3;\n@@ -337,1 +337,1 @@\n-                        %5 : java.type:\"int\" = constant @\"1\";\n+                        %5 : java.type:\"int\" = constant @1;\n@@ -342,1 +342,1 @@\n-                        %6 : java.type:\"int\" = constant @\"2\";\n+                        %6 : java.type:\"int\" = constant @2;\n","filename":"test\/langtools\/tools\/javac\/reflect\/IfTest.java","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -56,1 +56,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -70,1 +70,1 @@\n-                %1 : java.type:\"long\" = constant @\"0\";\n+                %1 : java.type:\"long\" = constant @0;\n@@ -73,1 +73,1 @@\n-                %4 : java.type:\"int\" = constant @\"1\";\n+                %4 : java.type:\"int\" = constant @1;\n@@ -96,1 +96,1 @@\n-                        %6 : java.type:\"long\" = constant @\"1\";\n+                        %6 : java.type:\"long\" = constant @1;\n@@ -100,1 +100,1 @@\n-                        %7 : java.type:\"int\" = constant @\"2\";\n+                        %7 : java.type:\"int\" = constant @2;\n@@ -124,1 +124,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -129,1 +129,1 @@\n-                        %8 : java.type:\"long\" = constant @\"2\";\n+                        %8 : java.type:\"long\" = constant @2;\n@@ -152,1 +152,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -156,1 +156,1 @@\n-                        %7 : java.type:\"int\" = constant @\"2\";\n+                        %7 : java.type:\"int\" = constant @2;\n@@ -172,1 +172,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -185,1 +185,1 @@\n-                    %2 : java.type:\"int\" = constant @\"1\";\n+                    %2 : java.type:\"int\" = constant @1;\n@@ -201,1 +201,1 @@\n-                    %2 : java.type:\"int\" = constant @\"1\";\n+                    %2 : java.type:\"int\" = constant @1;\n@@ -220,1 +220,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -225,1 +225,1 @@\n-                        %8 : java.type:\"long\" = constant @\"1\";\n+                        %8 : java.type:\"long\" = constant @1;\n@@ -229,1 +229,1 @@\n-                        %9 : java.type:\"boolean\" = constant @\"true\";\n+                        %9 : java.type:\"boolean\" = constant @true;\n@@ -233,1 +233,1 @@\n-                        %10 : java.type:\"int\" = constant @\"0\";\n+                        %10 : java.type:\"int\" = constant @0;\n@@ -255,1 +255,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -260,1 +260,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -265,1 +265,1 @@\n-                        %10 : java.type:\"boolean\" = constant @\"true\";\n+                        %10 : java.type:\"boolean\" = constant @true;\n@@ -269,1 +269,1 @@\n-                        %11 : java.type:\"long\" = constant @\"0\";\n+                        %11 : java.type:\"long\" = constant @0;\n@@ -290,1 +290,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -295,1 +295,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -300,1 +300,1 @@\n-                        %10 : java.type:\"boolean\" = constant @\"true\";\n+                        %10 : java.type:\"boolean\" = constant @true;\n@@ -304,1 +304,1 @@\n-                        %11 : java.type:\"int\" = constant @\"0\";\n+                        %11 : java.type:\"int\" = constant @0;\n@@ -326,1 +326,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -331,1 +331,1 @@\n-                        %8 : java.type:\"long\" = constant @\"1\";\n+                        %8 : java.type:\"long\" = constant @1;\n@@ -335,1 +335,1 @@\n-                        %9 : java.type:\"boolean\" = constant @\"true\";\n+                        %9 : java.type:\"boolean\" = constant @true;\n@@ -339,1 +339,1 @@\n-                        %10 : java.type:\"int\" = constant @\"0\";\n+                        %10 : java.type:\"int\" = constant @0;\n@@ -361,1 +361,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -366,1 +366,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -371,1 +371,1 @@\n-                        %10 : java.type:\"boolean\" = constant @\"true\";\n+                        %10 : java.type:\"boolean\" = constant @true;\n@@ -375,1 +375,1 @@\n-                        %11 : java.type:\"long\" = constant @\"0\";\n+                        %11 : java.type:\"long\" = constant @0;\n@@ -396,1 +396,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -401,1 +401,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -406,1 +406,1 @@\n-                        %10 : java.type:\"boolean\" = constant @\"true\";\n+                        %10 : java.type:\"boolean\" = constant @true;\n@@ -410,1 +410,1 @@\n-                        %11 : java.type:\"int\" = constant @\"0\";\n+                        %11 : java.type:\"int\" = constant @0;\n@@ -431,1 +431,1 @@\n-                %5 : java.type:\"long\" = constant @\"2\";\n+                %5 : java.type:\"long\" = constant @2;\n@@ -465,1 +465,1 @@\n-                invoke %0 %3 %4 @java.ref:\"ImplicitConversionTest::m(int, int, long[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=\"true\";\n+                invoke %0 %3 %4 @java.ref:\"ImplicitConversionTest::m(int, int, long[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=true;\n@@ -481,1 +481,1 @@\n-                invoke %0 %3 %4 %6 @java.ref:\"ImplicitConversionTest::m(int, int, long[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=\"true\";\n+                invoke %0 %3 %4 %6 @java.ref:\"ImplicitConversionTest::m(int, int, long[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=true;\n@@ -499,1 +499,1 @@\n-                invoke %0 %3 %4 %6 %8 @java.ref:\"ImplicitConversionTest::m(int, int, long[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=\"true\";\n+                invoke %0 %3 %4 %6 %8 @java.ref:\"ImplicitConversionTest::m(int, int, long[]):void\" @invoke.kind=\"INSTANCE\" @invoke.varargs=true;\n@@ -532,1 +532,1 @@\n-                %5 : java.type:\"ImplicitConversionTest$Box\" = new %3 %4 @java.ref:\"ImplicitConversionTest$Box::(int, int, long[])\" @new.varargs=\"true\";\n+                %5 : java.type:\"ImplicitConversionTest$Box\" = new %3 %4 @java.ref:\"ImplicitConversionTest$Box::(int, int, long[])\" @new.varargs=true;\n@@ -548,1 +548,1 @@\n-                %7 : java.type:\"ImplicitConversionTest$Box\" = new %3 %4 %6 @java.ref:\"ImplicitConversionTest$Box::(int, int, long[])\" @new.varargs=\"true\";\n+                %7 : java.type:\"ImplicitConversionTest$Box\" = new %3 %4 %6 @java.ref:\"ImplicitConversionTest$Box::(int, int, long[])\" @new.varargs=true;\n@@ -566,1 +566,1 @@\n-                %9 : java.type:\"ImplicitConversionTest$Box\" = new %3 %4 %6 %8 @java.ref:\"ImplicitConversionTest$Box::(int, int, long[])\" @new.varargs=\"true\";\n+                %9 : java.type:\"ImplicitConversionTest$Box\" = new %3 %4 %6 %8 @java.ref:\"ImplicitConversionTest$Box::(int, int, long[])\" @new.varargs=true;\n","filename":"test\/langtools\/tools\/javac\/reflect\/ImplicitConversionTest.java","additions":44,"deletions":44,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-                %5 : java.type:\"int\" = constant @\"3\";\n+                %5 : java.type:\"int\" = constant @3;\n@@ -126,1 +126,1 @@\n-                    %8 : java.type:\"int\" = constant @\"4\";\n+                    %8 : java.type:\"int\" = constant @4;\n","filename":"test\/langtools\/tools\/javac\/reflect\/LambdaTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -42,1 +42,1 @@\n-                %3 : java.type:\"int\" = constant @\"2\";\n+                %3 : java.type:\"int\" = constant @2;\n@@ -76,1 +76,1 @@\n-                %3 : java.type:\"int\" = constant @\"1\";\n+                %3 : java.type:\"int\" = constant @1;\n@@ -78,1 +78,1 @@\n-                %4 : java.type:\"int\" = constant @\"2\";\n+                %4 : java.type:\"int\" = constant @2;\n@@ -97,1 +97,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -100,1 +100,1 @@\n-                %4 : java.type:\"int\" = constant @\"1\";\n+                %4 : java.type:\"int\" = constant @1;\n@@ -116,1 +116,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -133,1 +133,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -135,1 +135,1 @@\n-                %3 : java.type:\"int\" = constant @\"1\";\n+                %3 : java.type:\"int\" = constant @1;\n@@ -137,1 +137,1 @@\n-                %5 : java.type:\"int\" = constant @\"1\";\n+                %5 : java.type:\"int\" = constant @1;\n@@ -157,1 +157,1 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n+                %1 : java.type:\"int\" = constant @1;\n@@ -160,1 +160,1 @@\n-                %4 : java.type:\"int\" = constant @\"2\";\n+                %4 : java.type:\"int\" = constant @2;\n@@ -165,1 +165,1 @@\n-                %8 : java.type:\"int\" = constant @\"3\";\n+                %8 : java.type:\"int\" = constant @3;\n@@ -169,1 +169,1 @@\n-                %11 : java.type:\"int\" = constant @\"4\";\n+                %11 : java.type:\"int\" = constant @4;\n@@ -187,1 +187,1 @@\n-                %4 : java.type:\"int\" = constant @\"1\";\n+                %4 : java.type:\"int\" = constant @1;\n@@ -192,1 +192,1 @@\n-                %8 : java.type:\"int\" = constant @\"1\";\n+                %8 : java.type:\"int\" = constant @1;\n@@ -209,1 +209,1 @@\n-                %4 : java.type:\"int\" = constant @\"1\";\n+                %4 : java.type:\"int\" = constant @1;\n@@ -214,1 +214,1 @@\n-                %8 : java.type:\"int\" = constant @\"1\";\n+                %8 : java.type:\"int\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/LocalVarTest.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-                %3 : java.type:\"int\" = constant @\"1\";\n+                %3 : java.type:\"int\" = constant @1;\n@@ -279,1 +279,1 @@\n-                %3 : java.type:\"int\" = constant @\"0\";\n+                %3 : java.type:\"int\" = constant @0;\n@@ -285,1 +285,1 @@\n-                %9 : java.type:\"int\" = constant @\"0\";\n+                %9 : java.type:\"int\" = constant @0;\n","filename":"test\/langtools\/tools\/javac\/reflect\/MethodCallTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-                %1 : java.type:\"int\" = constant @\"10\";\n+                %1 : java.type:\"int\" = constant @10;\n@@ -56,1 +56,1 @@\n-                %4 : java.type:\"int\" = constant @\"10\";\n+                %4 : java.type:\"int\" = constant @10;\n@@ -70,1 +70,1 @@\n-                %1 : java.type:\"int\" = constant @\"10\";\n+                %1 : java.type:\"int\" = constant @10;\n@@ -83,1 +83,1 @@\n-                %1 : java.type:\"int\" = constant @\"10\";\n+                %1 : java.type:\"int\" = constant @10;\n@@ -96,2 +96,2 @@\n-                %1 : java.type:\"int\" = constant @\"10\";\n-                %2 : java.type:\"int\" = constant @\"10\";\n+                %1 : java.type:\"int\" = constant @10;\n+                %2 : java.type:\"int\" = constant @10;\n@@ -110,1 +110,1 @@\n-                %1 : java.type:\"int\" = constant @\"3\";\n+                %1 : java.type:\"int\" = constant @3;\n@@ -112,1 +112,1 @@\n-                %3 : java.type:\"int\" = constant @\"2\";\n+                %3 : java.type:\"int\" = constant @2;\n@@ -115,1 +115,1 @@\n-                %6 : java.type:\"int\" = constant @\"0\";\n+                %6 : java.type:\"int\" = constant @0;\n@@ -118,1 +118,1 @@\n-                %8 : java.type:\"int\" = constant @\"1\";\n+                %8 : java.type:\"int\" = constant @1;\n@@ -120,1 +120,1 @@\n-                %9 : java.type:\"int\" = constant @\"0\";\n+                %9 : java.type:\"int\" = constant @0;\n@@ -122,1 +122,1 @@\n-                %10 : java.type:\"int\" = constant @\"1\";\n+                %10 : java.type:\"int\" = constant @1;\n@@ -125,1 +125,1 @@\n-                %13 : java.type:\"int\" = constant @\"0\";\n+                %13 : java.type:\"int\" = constant @0;\n@@ -127,1 +127,1 @@\n-                %14 : java.type:\"int\" = constant @\"1\";\n+                %14 : java.type:\"int\" = constant @1;\n@@ -130,1 +130,1 @@\n-                %16 : java.type:\"int\" = constant @\"2\";\n+                %16 : java.type:\"int\" = constant @2;\n@@ -143,1 +143,1 @@\n-                %1 : java.type:\"int\" = constant @\"3\";\n+                %1 : java.type:\"int\" = constant @3;\n@@ -145,1 +145,1 @@\n-                %3 : java.type:\"int\" = constant @\"2\";\n+                %3 : java.type:\"int\" = constant @2;\n@@ -148,1 +148,1 @@\n-                %6 : java.type:\"int\" = constant @\"0\";\n+                %6 : java.type:\"int\" = constant @0;\n@@ -151,1 +151,1 @@\n-                %8 : java.type:\"int\" = constant @\"1\";\n+                %8 : java.type:\"int\" = constant @1;\n@@ -153,1 +153,1 @@\n-                %9 : java.type:\"int\" = constant @\"0\";\n+                %9 : java.type:\"int\" = constant @0;\n@@ -155,1 +155,1 @@\n-                %10 : java.type:\"int\" = constant @\"1\";\n+                %10 : java.type:\"int\" = constant @1;\n@@ -158,1 +158,1 @@\n-                %13 : java.type:\"int\" = constant @\"0\";\n+                %13 : java.type:\"int\" = constant @0;\n@@ -160,1 +160,1 @@\n-                %14 : java.type:\"int\" = constant @\"1\";\n+                %14 : java.type:\"int\" = constant @1;\n@@ -163,1 +163,1 @@\n-                %16 : java.type:\"int\" = constant @\"2\";\n+                %16 : java.type:\"int\" = constant @2;\n","filename":"test\/langtools\/tools\/javac\/reflect\/NewArrayTest.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -73,2 +73,2 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n-                %2 : java.type:\"int\" = constant @\"2\";\n+                %1 : java.type:\"int\" = constant @1;\n+                %2 : java.type:\"int\" = constant @2;\n@@ -112,2 +112,2 @@\n-                %1 : java.type:\"int\" = constant @\"1\";\n-                %2 : java.type:\"int\" = constant @\"2\";\n+                %1 : java.type:\"int\" = constant @1;\n+                %2 : java.type:\"int\" = constant @2;\n@@ -208,1 +208,1 @@\n-                %1 : java.type:\"int\" = constant @\"10\";\n+                %1 : java.type:\"int\" = constant @10;\n@@ -224,1 +224,1 @@\n-                %5 : java.type:\"int\" = constant @\"1\";\n+                %5 : java.type:\"int\" = constant @1;\n@@ -227,1 +227,1 @@\n-                %8 : java.type:\"int\" = constant @\"2\";\n+                %8 : java.type:\"int\" = constant @2;\n","filename":"test\/langtools\/tools\/javac\/reflect\/NewTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -178,1 +178,1 @@\n-                        %9 : java.type:\"boolean\" = constant @\"true\";\n+                        %9 : java.type:\"boolean\" = constant @true;\n@@ -202,1 +202,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -211,1 +211,1 @@\n-                        %9 : java.type:\"boolean\" = constant @\"true\";\n+                        %9 : java.type:\"boolean\" = constant @true;\n@@ -235,1 +235,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -244,1 +244,1 @@\n-                        %9 : java.type:\"boolean\" = constant @\"true\";\n+                        %9 : java.type:\"boolean\" = constant @true;\n@@ -268,1 +268,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -277,1 +277,1 @@\n-                        %9 : java.type:\"boolean\" = constant @\"true\";\n+                        %9 : java.type:\"boolean\" = constant @true;\n@@ -302,1 +302,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -311,1 +311,1 @@\n-                        %9 : java.type:\"boolean\" = constant @\"true\";\n+                        %9 : java.type:\"boolean\" = constant @true;\n@@ -335,1 +335,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -344,1 +344,1 @@\n-                        %9 : java.type:\"boolean\" = constant @\"true\";\n+                        %9 : java.type:\"boolean\" = constant @true;\n@@ -368,1 +368,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -377,1 +377,1 @@\n-                        %9 : java.type:\"boolean\" = constant @\"true\";\n+                        %9 : java.type:\"boolean\" = constant @true;\n@@ -401,1 +401,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -410,1 +410,1 @@\n-                        %9 : java.type:\"boolean\" = constant @\"true\";\n+                        %9 : java.type:\"boolean\" = constant @true;\n@@ -448,1 +448,1 @@\n-                invoke %1 @java.ref:\"NullTest::m(java.lang.String, java.lang.String[]):void\" @invoke.kind=\"STATIC\" @invoke.varargs=\"true\";\n+                invoke %1 @java.ref:\"NullTest::m(java.lang.String, java.lang.String[]):void\" @invoke.kind=\"STATIC\" @invoke.varargs=true;\n@@ -475,1 +475,1 @@\n-                invoke %1 %2 %3 @java.ref:\"NullTest::m(java.lang.String, java.lang.String[]):void\" @invoke.kind=\"STATIC\" @invoke.varargs=\"true\";\n+                invoke %1 %2 %3 @java.ref:\"NullTest::m(java.lang.String, java.lang.String[]):void\" @invoke.kind=\"STATIC\" @invoke.varargs=true;\n@@ -491,1 +491,1 @@\n-                %2 : java.type:\"NullTest$Box\" = new %1 @java.ref:\"NullTest$Box::(java.lang.String, java.lang.String[])\" @new.varargs=\"true\";\n+                %2 : java.type:\"NullTest$Box\" = new %1 @java.ref:\"NullTest$Box::(java.lang.String, java.lang.String[])\" @new.varargs=true;\n@@ -518,1 +518,1 @@\n-                %4 : java.type:\"NullTest$Box\" = new %1 %2 %3 @java.ref:\"NullTest$Box::(java.lang.String, java.lang.String[])\" @new.varargs=\"true\";\n+                %4 : java.type:\"NullTest$Box\" = new %1 %2 %3 @java.ref:\"NullTest$Box::(java.lang.String, java.lang.String[])\" @new.varargs=true;\n","filename":"test\/langtools\/tools\/javac\/reflect\/NullTest.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-                        %5 : java.type:\"int\" = constant @\"0\";\n+                        %5 : java.type:\"int\" = constant @0;\n@@ -309,1 +309,1 @@\n-                                %10 : java.type:\"int\" = constant @\"10\";\n+                                %10 : java.type:\"int\" = constant @10;\n@@ -404,1 +404,1 @@\n-                %3 : java.type:\"int\" = constant @\"0\";\n+                %3 : java.type:\"int\" = constant @0;\n@@ -428,1 +428,1 @@\n-                %3 : java.type:\"int\" = constant @\"0\";\n+                %3 : java.type:\"int\" = constant @0;\n","filename":"test\/langtools\/tools\/javac\/reflect\/PatternsTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-                    %1 : java.type:\"int\" = constant @\"1\";\n+                    %1 : java.type:\"int\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/QuotableIntersectionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-                    %1 : java.type:\"int\" = constant @\"1\";\n+                    %1 : java.type:\"int\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/QuotableSubtypeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-                    %1 : java.type:\"int\" = constant @\"1\";\n+                    %1 : java.type:\"int\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/QuotedTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-                %3 : java.type:\"int\" = constant @\"1\";\n+                %3 : java.type:\"int\" = constant @1;\n@@ -52,1 +52,1 @@\n-                %5 : java.type:\"int\" = constant @\"1\";\n+                %5 : java.type:\"int\" = constant @1;\n@@ -56,1 +56,1 @@\n-                %7 : java.type:\"int\" = constant @\"1\";\n+                %7 : java.type:\"int\" = constant @1;\n@@ -60,1 +60,1 @@\n-                %9 : java.type:\"int\" = constant @\"1\";\n+                %9 : java.type:\"int\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/SuperTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-                        %16 : java.type:\"boolean\" = constant @\"true\";\n+                        %16 : java.type:\"boolean\" = constant @true;\n@@ -123,1 +123,1 @@\n-                        %13 : java.type:\"boolean\" = constant @\"true\";\n+                        %13 : java.type:\"boolean\" = constant @true;\n@@ -176,1 +176,1 @@\n-                        %16 : java.type:\"boolean\" = constant @\"true\";\n+                        %16 : java.type:\"boolean\" = constant @true;\n@@ -225,1 +225,1 @@\n-                        %13 : java.type:\"boolean\" = constant @\"true\";\n+                        %13 : java.type:\"boolean\" = constant @true;\n@@ -270,1 +270,1 @@\n-                        %10 : java.type:\"boolean\" = constant @\"true\";\n+                        %10 : java.type:\"boolean\" = constant @true;\n@@ -313,1 +313,1 @@\n-                        %9 : java.type:\"boolean\" = constant @\"true\";\n+                        %9 : java.type:\"boolean\" = constant @true;\n@@ -379,1 +379,1 @@\n-                        %19 : java.type:\"boolean\" = constant @\"true\";\n+                        %19 : java.type:\"boolean\" = constant @true;\n@@ -449,1 +449,1 @@\n-                                %23 : java.type:\"int\" = constant @\"5\";\n+                                %23 : java.type:\"int\" = constant @5;\n@@ -476,1 +476,1 @@\n-                                %33 : java.type:\"int\" = constant @\"10\";\n+                                %33 : java.type:\"int\" = constant @10;\n@@ -487,1 +487,1 @@\n-                        %36 : java.type:\"boolean\" = constant @\"true\";\n+                        %36 : java.type:\"boolean\" = constant @true;\n","filename":"test\/langtools\/tools\/javac\/reflect\/SwitchExpressionTest.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-                        %16 : java.type:\"boolean\" = constant @\"true\";\n+                        %16 : java.type:\"boolean\" = constant @true;\n@@ -99,1 +99,1 @@\n-                        %16 : java.type:\"boolean\" = constant @\"true\";\n+                        %16 : java.type:\"boolean\" = constant @true;\n@@ -160,1 +160,1 @@\n-                        %16 : java.type:\"boolean\" = constant @\"true\";\n+                        %16 : java.type:\"boolean\" = constant @true;\n@@ -189,1 +189,1 @@\n-                                %7 : java.type:\"char\" = constant @\"a\";\n+                                %7 : java.type:\"char\" = constant @'a';\n@@ -194,1 +194,1 @@\n-                                %9 : java.type:\"char\" = constant @\"e\";\n+                                %9 : java.type:\"char\" = constant @'e';\n@@ -199,1 +199,1 @@\n-                                %11 : java.type:\"char\" = constant @\"i\";\n+                                %11 : java.type:\"char\" = constant @'i';\n@@ -204,1 +204,1 @@\n-                                %13 : java.type:\"char\" = constant @\"o\";\n+                                %13 : java.type:\"char\" = constant @'o';\n@@ -209,1 +209,1 @@\n-                                %15 : java.type:\"char\" = constant @\"u\";\n+                                %15 : java.type:\"char\" = constant @'u';\n@@ -220,1 +220,1 @@\n-                        %18 : java.type:\"boolean\" = constant @\"true\";\n+                        %18 : java.type:\"boolean\" = constant @true;\n@@ -244,1 +244,1 @@\n-                        %5 : java.type:\"int\" = constant @\"8\";\n+                        %5 : java.type:\"int\" = constant @8;\n@@ -254,1 +254,1 @@\n-                        %10 : java.type:\"int\" = constant @\"9\";\n+                        %10 : java.type:\"int\" = constant @9;\n@@ -264,1 +264,1 @@\n-                        %14 : java.type:\"boolean\" = constant @\"true\";\n+                        %14 : java.type:\"boolean\" = constant @true;\n@@ -298,1 +298,1 @@\n-                        %8 : java.type:\"boolean\" = constant @\"true\";\n+                        %8 : java.type:\"boolean\" = constant @true;\n@@ -332,1 +332,1 @@\n-                        %5 : java.type:\"char\" = constant @\"A\";\n+                        %5 : java.type:\"char\" = constant @'A';\n@@ -340,1 +340,1 @@\n-                        %8 : java.type:\"char\" = constant @\"B\";\n+                        %8 : java.type:\"char\" = constant @'B';\n@@ -349,1 +349,1 @@\n-                        %11 : java.type:\"boolean\" = constant @\"true\";\n+                        %11 : java.type:\"boolean\" = constant @true;\n@@ -398,1 +398,1 @@\n-                        %12 : java.type:\"int\" = constant @\"6\";\n+                        %12 : java.type:\"int\" = constant @6;\n@@ -407,1 +407,1 @@\n-                        %16 : java.type:\"int\" = constant @\"7\";\n+                        %16 : java.type:\"int\" = constant @7;\n@@ -425,1 +425,1 @@\n-                        %23 : java.type:\"int\" = constant @\"8\";\n+                        %23 : java.type:\"int\" = constant @8;\n@@ -434,1 +434,1 @@\n-                        %27 : java.type:\"int\" = constant @\"9\";\n+                        %27 : java.type:\"int\" = constant @9;\n@@ -438,1 +438,1 @@\n-                        %28 : java.type:\"boolean\" = constant @\"true\";\n+                        %28 : java.type:\"boolean\" = constant @true;\n@@ -464,1 +464,1 @@\n-                %2 : java.type:\"int\" = constant @\"11\";\n+                %2 : java.type:\"int\" = constant @11;\n@@ -469,2 +469,2 @@\n-                        %7 : java.type:\"int\" = constant @\"1\";\n-                        %8 : java.type:\"int\" = constant @\"15\";\n+                        %7 : java.type:\"int\" = constant @1;\n+                        %8 : java.type:\"int\" = constant @15;\n@@ -480,2 +480,2 @@\n-                        %13 : java.type:\"int\" = constant @\"4\";\n-                        %14 : java.type:\"int\" = constant @\"1\";\n+                        %13 : java.type:\"int\" = constant @4;\n+                        %14 : java.type:\"int\" = constant @1;\n@@ -491,1 +491,1 @@\n-                        %19 : java.type:\"long\" = constant @\"3\";\n+                        %19 : java.type:\"long\" = constant @3;\n@@ -501,2 +501,2 @@\n-                        %24 : java.type:\"int\" = constant @\"2\";\n-                        %25 : java.type:\"int\" = constant @\"1\";\n+                        %24 : java.type:\"int\" = constant @2;\n+                        %25 : java.type:\"int\" = constant @1;\n@@ -512,2 +512,2 @@\n-                        %30 : java.type:\"int\" = constant @\"10\";\n-                        %31 : java.type:\"int\" = constant @\"2\";\n+                        %30 : java.type:\"int\" = constant @10;\n+                        %31 : java.type:\"int\" = constant @2;\n@@ -523,2 +523,2 @@\n-                        %36 : java.type:\"int\" = constant @\"12\";\n-                        %37 : java.type:\"int\" = constant @\"6\";\n+                        %36 : java.type:\"int\" = constant @12;\n+                        %37 : java.type:\"int\" = constant @6;\n@@ -534,2 +534,2 @@\n-                        %42 : java.type:\"int\" = constant @\"3\";\n-                        %43 : java.type:\"int\" = constant @\"4\";\n+                        %42 : java.type:\"int\" = constant @3;\n+                        %43 : java.type:\"int\" = constant @4;\n@@ -545,2 +545,2 @@\n-                        %48 : java.type:\"int\" = constant @\"2\";\n-                        %49 : java.type:\"int\" = constant @\"2\";\n+                        %48 : java.type:\"int\" = constant @2;\n+                        %49 : java.type:\"int\" = constant @2;\n@@ -548,1 +548,1 @@\n-                        %51 : java.type:\"int\" = constant @\"2\";\n+                        %51 : java.type:\"int\" = constant @2;\n@@ -558,2 +558,2 @@\n-                        %56 : java.type:\"int\" = constant @\"8\";\n-                        %57 : java.type:\"int\" = constant @\"1\";\n+                        %56 : java.type:\"int\" = constant @8;\n+                        %57 : java.type:\"int\" = constant @1;\n@@ -569,1 +569,1 @@\n-                        %62 : java.type:\"int\" = constant @\"10\";\n+                        %62 : java.type:\"int\" = constant @10;\n@@ -599,2 +599,2 @@\n-                                %76 : java.type:\"int\" = constant @\"1\";\n-                                %77 : java.type:\"int\" = constant @\"0\";\n+                                %76 : java.type:\"int\" = constant @1;\n+                                %77 : java.type:\"int\" = constant @0;\n@@ -605,1 +605,1 @@\n-                                %79 : java.type:\"int\" = constant @\"13\";\n+                                %79 : java.type:\"int\" = constant @13;\n@@ -609,1 +609,1 @@\n-                                %80 : java.type:\"int\" = constant @\"133\";\n+                                %80 : java.type:\"int\" = constant @133;\n@@ -620,1 +620,1 @@\n-                        %83 : java.type:\"boolean\" = constant @\"true\";\n+                        %83 : java.type:\"boolean\" = constant @true;\n@@ -656,1 +656,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -659,1 +659,1 @@\n-                %5 : java.type:\"int\" = constant @\"2\";\n+                %5 : java.type:\"int\" = constant @2;\n@@ -684,1 +684,1 @@\n-                        %20 : java.type:\"int\" = constant @\"3\";\n+                        %20 : java.type:\"int\" = constant @3;\n@@ -694,1 +694,1 @@\n-                        %24 : java.type:\"boolean\" = constant @\"true\";\n+                        %24 : java.type:\"boolean\" = constant @true;\n@@ -719,1 +719,1 @@\n-                %2 : java.type:\"int\" = constant @\"2\";\n+                %2 : java.type:\"int\" = constant @2;\n@@ -725,1 +725,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -746,1 +746,1 @@\n-                        %18 : java.type:\"boolean\" = constant @\"true\";\n+                        %18 : java.type:\"boolean\" = constant @true;\n@@ -792,1 +792,1 @@\n-                        %12 : java.type:\"boolean\" = constant @\"true\";\n+                        %12 : java.type:\"boolean\" = constant @true;\n@@ -898,1 +898,1 @@\n-                        %18 : java.type:\"boolean\" = constant @\"true\";\n+                        %18 : java.type:\"boolean\" = constant @true;\n@@ -940,1 +940,1 @@\n-                        %12 : java.type:\"boolean\" = constant @\"true\";\n+                        %12 : java.type:\"boolean\" = constant @true;\n","filename":"test\/langtools\/tools\/javac\/reflect\/SwitchExpressionTest2.java","additions":56,"deletions":56,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-                        %23 : java.type:\"boolean\" = constant @\"true\";\n+                        %23 : java.type:\"boolean\" = constant @true;\n@@ -129,1 +129,1 @@\n-                        %23 : java.type:\"boolean\" = constant @\"true\";\n+                        %23 : java.type:\"boolean\" = constant @true;\n@@ -207,1 +207,1 @@\n-                        %23 : java.type:\"boolean\" = constant @\"true\";\n+                        %23 : java.type:\"boolean\" = constant @true;\n@@ -251,1 +251,1 @@\n-                                %8 : java.type:\"char\" = constant @\"a\";\n+                                %8 : java.type:\"char\" = constant @'a';\n@@ -256,1 +256,1 @@\n-                                %10 : java.type:\"char\" = constant @\"e\";\n+                                %10 : java.type:\"char\" = constant @'e';\n@@ -261,1 +261,1 @@\n-                                %12 : java.type:\"char\" = constant @\"i\";\n+                                %12 : java.type:\"char\" = constant @'i';\n@@ -266,1 +266,1 @@\n-                                %14 : java.type:\"char\" = constant @\"o\";\n+                                %14 : java.type:\"char\" = constant @'o';\n@@ -271,1 +271,1 @@\n-                                %16 : java.type:\"char\" = constant @\"u\";\n+                                %16 : java.type:\"char\" = constant @'u';\n@@ -285,1 +285,1 @@\n-                        %21 : java.type:\"boolean\" = constant @\"true\";\n+                        %21 : java.type:\"boolean\" = constant @true;\n@@ -320,1 +320,1 @@\n-                        %6 : java.type:\"int\" = constant @\"8\";\n+                        %6 : java.type:\"int\" = constant @8;\n@@ -330,1 +330,1 @@\n-                        %11 : java.type:\"int\" = constant @\"9\";\n+                        %11 : java.type:\"int\" = constant @9;\n@@ -343,1 +343,1 @@\n-                        %17 : java.type:\"boolean\" = constant @\"true\";\n+                        %17 : java.type:\"boolean\" = constant @true;\n@@ -388,1 +388,1 @@\n-                        %11 : java.type:\"boolean\" = constant @\"true\";\n+                        %11 : java.type:\"boolean\" = constant @true;\n@@ -431,1 +431,1 @@\n-                        %6 : java.type:\"char\" = constant @\"A\";\n+                        %6 : java.type:\"char\" = constant @'A';\n@@ -439,1 +439,1 @@\n-                        %9 : java.type:\"char\" = constant @\"B\";\n+                        %9 : java.type:\"char\" = constant @'B';\n@@ -451,1 +451,1 @@\n-                        %14 : java.type:\"boolean\" = constant @\"true\";\n+                        %14 : java.type:\"boolean\" = constant @true;\n@@ -510,1 +510,1 @@\n-                        %14 : java.type:\"int\" = constant @\"6\";\n+                        %14 : java.type:\"int\" = constant @6;\n@@ -522,1 +522,1 @@\n-                        %20 : java.type:\"int\" = constant @\"7\";\n+                        %20 : java.type:\"int\" = constant @7;\n@@ -543,1 +543,1 @@\n-                        %29 : java.type:\"int\" = constant @\"8\";\n+                        %29 : java.type:\"int\" = constant @8;\n@@ -555,1 +555,1 @@\n-                        %35 : java.type:\"int\" = constant @\"9\";\n+                        %35 : java.type:\"int\" = constant @9;\n@@ -585,1 +585,1 @@\n-                %4 : java.type:\"int\" = constant @\"11\";\n+                %4 : java.type:\"int\" = constant @11;\n@@ -590,2 +590,2 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n-                        %9 : java.type:\"int\" = constant @\"15\";\n+                        %8 : java.type:\"int\" = constant @1;\n+                        %9 : java.type:\"int\" = constant @15;\n@@ -598,1 +598,1 @@\n-                        %13 : java.type:\"int\" = constant @\"1\";\n+                        %13 : java.type:\"int\" = constant @1;\n@@ -604,2 +604,2 @@\n-                        %16 : java.type:\"int\" = constant @\"4\";\n-                        %17 : java.type:\"int\" = constant @\"1\";\n+                        %16 : java.type:\"int\" = constant @4;\n+                        %17 : java.type:\"int\" = constant @1;\n@@ -618,1 +618,1 @@\n-                        %24 : java.type:\"long\" = constant @\"3\";\n+                        %24 : java.type:\"long\" = constant @3;\n@@ -625,1 +625,1 @@\n-                        %28 : java.type:\"int\" = constant @\"3\";\n+                        %28 : java.type:\"int\" = constant @3;\n@@ -631,2 +631,2 @@\n-                        %31 : java.type:\"int\" = constant @\"2\";\n-                        %32 : java.type:\"int\" = constant @\"1\";\n+                        %31 : java.type:\"int\" = constant @2;\n+                        %32 : java.type:\"int\" = constant @1;\n@@ -639,1 +639,1 @@\n-                        %36 : java.type:\"int\" = constant @\"4\";\n+                        %36 : java.type:\"int\" = constant @4;\n@@ -645,2 +645,2 @@\n-                        %39 : java.type:\"int\" = constant @\"10\";\n-                        %40 : java.type:\"int\" = constant @\"2\";\n+                        %39 : java.type:\"int\" = constant @10;\n+                        %40 : java.type:\"int\" = constant @2;\n@@ -653,1 +653,1 @@\n-                        %44 : java.type:\"int\" = constant @\"5\";\n+                        %44 : java.type:\"int\" = constant @5;\n@@ -659,2 +659,2 @@\n-                        %47 : java.type:\"int\" = constant @\"12\";\n-                        %48 : java.type:\"int\" = constant @\"6\";\n+                        %47 : java.type:\"int\" = constant @12;\n+                        %48 : java.type:\"int\" = constant @6;\n@@ -667,1 +667,1 @@\n-                        %52 : java.type:\"int\" = constant @\"6\";\n+                        %52 : java.type:\"int\" = constant @6;\n@@ -673,2 +673,2 @@\n-                        %55 : java.type:\"int\" = constant @\"3\";\n-                        %56 : java.type:\"int\" = constant @\"4\";\n+                        %55 : java.type:\"int\" = constant @3;\n+                        %56 : java.type:\"int\" = constant @4;\n@@ -681,1 +681,1 @@\n-                        %60 : java.type:\"int\" = constant @\"7\";\n+                        %60 : java.type:\"int\" = constant @7;\n@@ -687,2 +687,2 @@\n-                        %63 : java.type:\"int\" = constant @\"2\";\n-                        %64 : java.type:\"int\" = constant @\"2\";\n+                        %63 : java.type:\"int\" = constant @2;\n+                        %64 : java.type:\"int\" = constant @2;\n@@ -690,1 +690,1 @@\n-                        %66 : java.type:\"int\" = constant @\"2\";\n+                        %66 : java.type:\"int\" = constant @2;\n@@ -697,1 +697,1 @@\n-                        %70 : java.type:\"int\" = constant @\"8\";\n+                        %70 : java.type:\"int\" = constant @8;\n@@ -703,2 +703,2 @@\n-                        %73 : java.type:\"int\" = constant @\"8\";\n-                        %74 : java.type:\"int\" = constant @\"1\";\n+                        %73 : java.type:\"int\" = constant @8;\n+                        %74 : java.type:\"int\" = constant @1;\n@@ -711,1 +711,1 @@\n-                        %78 : java.type:\"int\" = constant @\"9\";\n+                        %78 : java.type:\"int\" = constant @9;\n@@ -717,1 +717,1 @@\n-                        %81 : java.type:\"int\" = constant @\"10\";\n+                        %81 : java.type:\"int\" = constant @10;\n@@ -723,1 +723,1 @@\n-                        %84 : java.type:\"int\" = constant @\"10\";\n+                        %84 : java.type:\"int\" = constant @10;\n@@ -735,1 +735,1 @@\n-                        %90 : java.type:\"int\" = constant @\"11\";\n+                        %90 : java.type:\"int\" = constant @11;\n@@ -755,2 +755,2 @@\n-                                %100 : java.type:\"int\" = constant @\"1\";\n-                                %101 : java.type:\"int\" = constant @\"0\";\n+                                %100 : java.type:\"int\" = constant @1;\n+                                %101 : java.type:\"int\" = constant @0;\n@@ -761,1 +761,1 @@\n-                                %103 : java.type:\"int\" = constant @\"13\";\n+                                %103 : java.type:\"int\" = constant @13;\n@@ -765,1 +765,1 @@\n-                                %104 : java.type:\"int\" = constant @\"133\";\n+                                %104 : java.type:\"int\" = constant @133;\n@@ -773,1 +773,1 @@\n-                        %107 : java.type:\"int\" = constant @\"13\";\n+                        %107 : java.type:\"int\" = constant @13;\n@@ -779,1 +779,1 @@\n-                        %109 : java.type:\"boolean\" = constant @\"true\";\n+                        %109 : java.type:\"boolean\" = constant @true;\n@@ -819,1 +819,1 @@\n-                %2 : java.type:\"int\" = constant @\"1\";\n+                %2 : java.type:\"int\" = constant @1;\n@@ -822,1 +822,1 @@\n-                %5 : java.type:\"int\" = constant @\"2\";\n+                %5 : java.type:\"int\" = constant @2;\n@@ -855,1 +855,1 @@\n-                        %25 : java.type:\"int\" = constant @\"3\";\n+                        %25 : java.type:\"int\" = constant @3;\n@@ -868,1 +868,1 @@\n-                        %31 : java.type:\"boolean\" = constant @\"true\";\n+                        %31 : java.type:\"boolean\" = constant @true;\n@@ -899,1 +899,1 @@\n-                %2 : java.type:\"int\" = constant @\"2\";\n+                %2 : java.type:\"int\" = constant @2;\n@@ -907,1 +907,1 @@\n-                        %9 : java.type:\"int\" = constant @\"1\";\n+                        %9 : java.type:\"int\" = constant @1;\n@@ -934,1 +934,1 @@\n-                        %23 : java.type:\"boolean\" = constant @\"true\";\n+                        %23 : java.type:\"boolean\" = constant @true;\n@@ -968,1 +968,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -980,1 +980,1 @@\n-                        %12 : java.type:\"int\" = constant @\"2\";\n+                        %12 : java.type:\"int\" = constant @2;\n@@ -986,1 +986,1 @@\n-                        %15 : java.type:\"int\" = constant @\"2\";\n+                        %15 : java.type:\"int\" = constant @2;\n@@ -1052,1 +1052,1 @@\n-                        %25 : java.type:\"boolean\" = constant @\"true\";\n+                        %25 : java.type:\"boolean\" = constant @true;\n@@ -1127,1 +1127,1 @@\n-                        %23 : java.type:\"boolean\" = constant @\"true\";\n+                        %23 : java.type:\"boolean\" = constant @true;\n@@ -1252,1 +1252,1 @@\n-                        %23 : java.type:\"boolean\" = constant @\"true\";\n+                        %23 : java.type:\"boolean\" = constant @true;\n@@ -1327,1 +1327,1 @@\n-                        %23 : java.type:\"boolean\" = constant @\"true\";\n+                        %23 : java.type:\"boolean\" = constant @true;\n@@ -1408,1 +1408,1 @@\n-                        %23 : java.type:\"boolean\" = constant @\"true\";\n+                        %23 : java.type:\"boolean\" = constant @true;\n@@ -1485,1 +1485,1 @@\n-                        %21 : java.type:\"boolean\" = constant @\"true\";\n+                        %21 : java.type:\"boolean\" = constant @true;\n@@ -1535,1 +1535,1 @@\n-                        %10 : java.type:\"int\" = constant @\"42\";\n+                        %10 : java.type:\"int\" = constant @42;\n@@ -1564,1 +1564,1 @@\n-                                %23 : java.type:\"int\" = constant @\"0\";\n+                                %23 : java.type:\"int\" = constant @0;\n@@ -1594,1 +1594,1 @@\n-                                %35 : java.type:\"int\" = constant @\"0\";\n+                                %35 : java.type:\"int\" = constant @0;\n@@ -1608,1 +1608,1 @@\n-                        %40 : java.type:\"boolean\" = constant @\"true\";\n+                        %40 : java.type:\"boolean\" = constant @true;\n@@ -1769,1 +1769,1 @@\n-                        %59 : java.type:\"boolean\" = constant @\"true\";\n+                        %59 : java.type:\"boolean\" = constant @true;\n@@ -1829,1 +1829,1 @@\n-                        %15 : java.type:\"boolean\" = constant @\"true\";\n+                        %15 : java.type:\"boolean\" = constant @true;\n@@ -1881,1 +1881,1 @@\n-                                %16 : java.type:\"int\" = constant @\"3\";\n+                                %16 : java.type:\"int\" = constant @3;\n@@ -1893,1 +1893,1 @@\n-                        %23 : java.type:\"java.lang.String\" = invoke %19 %22 @java.ref:\"java.lang.String::formatted(java.lang.Object[]):java.lang.String\" @invoke.kind=\"INSTANCE\" @invoke.varargs=\"true\";\n+                        %23 : java.type:\"java.lang.String\" = invoke %19 %22 @java.ref:\"java.lang.String::formatted(java.lang.Object[]):java.lang.String\" @invoke.kind=\"INSTANCE\" @invoke.varargs=true;\n@@ -1930,1 +1930,1 @@\n-                        %38 : java.type:\"boolean\" = constant @\"true\";\n+                        %38 : java.type:\"boolean\" = constant @true;\n@@ -1987,1 +1987,1 @@\n-                        %17 : java.type:\"boolean\" = constant @\"true\";\n+                        %17 : java.type:\"boolean\" = constant @true;\n","filename":"test\/langtools\/tools\/javac\/reflect\/SwitchStatementTest.java","additions":82,"deletions":82,"binary":false,"changes":164,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-                        %4 : java.type:\"int\" = constant @\"1\";\n+                        %4 : java.type:\"int\" = constant @1;\n@@ -77,1 +77,1 @@\n-                        %5 : java.type:\"int\" = constant @\"1\";\n+                        %5 : java.type:\"int\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/SynchronizedTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -44,1 +44,1 @@\n-                        %3 : java.type:\"int\" = constant @\"1\";\n+                        %3 : java.type:\"int\" = constant @1;\n@@ -50,1 +50,1 @@\n-                        %6 : java.type:\"int\" = constant @\"2\";\n+                        %6 : java.type:\"int\" = constant @2;\n@@ -55,1 +55,1 @@\n-                        %7 : java.type:\"int\" = constant @\"3\";\n+                        %7 : java.type:\"int\" = constant @3;\n@@ -76,1 +76,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -80,1 +80,1 @@\n-                        %3 : java.type:\"int\" = constant @\"1\";\n+                        %3 : java.type:\"int\" = constant @1;\n@@ -85,1 +85,1 @@\n-                        %4 : java.type:\"int\" = constant @\"3\";\n+                        %4 : java.type:\"int\" = constant @3;\n@@ -104,1 +104,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -108,1 +108,1 @@\n-                        %3 : java.type:\"int\" = constant @\"1\";\n+                        %3 : java.type:\"int\" = constant @1;\n@@ -216,1 +216,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -220,1 +220,1 @@\n-                        %3 : java.type:\"int\" = constant @\"1\";\n+                        %3 : java.type:\"int\" = constant @1;\n@@ -226,1 +226,1 @@\n-                        %6 : java.type:\"int\" = constant @\"2\";\n+                        %6 : java.type:\"int\" = constant @2;\n@@ -232,1 +232,1 @@\n-                        %9 : java.type:\"int\" = constant @\"3\";\n+                        %9 : java.type:\"int\" = constant @3;\n@@ -253,1 +253,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n","filename":"test\/langtools\/tools\/javac\/reflect\/TryTest.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-                %3 : java.type:\"int\" = constant @\"1\";\n+                %3 : java.type:\"int\" = constant @1;\n@@ -112,1 +112,1 @@\n-                %7 : java.type:\"int\" = constant @\"1\";\n+                %7 : java.type:\"int\" = constant @1;\n@@ -117,1 +117,1 @@\n-                %11 : java.type:\"int\" = constant @\"1\";\n+                %11 : java.type:\"int\" = constant @1;\n@@ -122,1 +122,1 @@\n-                %15 : java.type:\"int\" = constant @\"1\";\n+                %15 : java.type:\"int\" = constant @1;\n@@ -141,1 +141,1 @@\n-                %3 : java.type:\"int\" = constant @\"1\";\n+                %3 : java.type:\"int\" = constant @1;\n@@ -146,1 +146,1 @@\n-                %7 : java.type:\"int\" = constant @\"1\";\n+                %7 : java.type:\"int\" = constant @1;\n@@ -151,1 +151,1 @@\n-                %11 : java.type:\"int\" = constant @\"1\";\n+                %11 : java.type:\"int\" = constant @1;\n@@ -156,1 +156,1 @@\n-                %15 : java.type:\"int\" = constant @\"1\";\n+                %15 : java.type:\"int\" = constant @1;\n","filename":"test\/langtools\/tools\/javac\/reflect\/UnaryopTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-                        %2 : java.type:\"boolean\" = constant @\"true\";\n+                        %2 : java.type:\"boolean\" = constant @true;\n@@ -109,1 +109,1 @@\n-                            %3 : java.type:\"boolean\" = constant @\"true\";\n+                            %3 : java.type:\"boolean\" = constant @true;\n@@ -143,1 +143,1 @@\n-                        %5 : java.type:\"int\" = constant @\"42\";\n+                        %5 : java.type:\"int\" = constant @42;\n@@ -150,1 +150,1 @@\n-                                %7 : java.type:\"boolean\" = constant @\"true\";\n+                                %7 : java.type:\"boolean\" = constant @true;\n@@ -159,1 +159,1 @@\n-                        %8 : java.type:\"boolean\" = constant @\"true\";\n+                        %8 : java.type:\"boolean\" = constant @true;\n@@ -183,1 +183,1 @@\n-                            %3 : java.type:\"boolean\" = constant @\"true\";\n+                            %3 : java.type:\"boolean\" = constant @true;\n@@ -213,1 +213,1 @@\n-                            %3 : java.type:\"boolean\" = constant @\"true\";\n+                            %3 : java.type:\"boolean\" = constant @true;\n","filename":"test\/langtools\/tools\/javac\/reflect\/UnreachableTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -44,1 +44,1 @@\n-                        %4 : java.type:\"int\" = constant @\"10\";\n+                        %4 : java.type:\"int\" = constant @10;\n@@ -53,1 +53,1 @@\n-                        %9 : java.type:\"int\" = constant @\"1\";\n+                        %9 : java.type:\"int\" = constant @1;\n@@ -72,1 +72,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -77,1 +77,1 @@\n-                        %4 : java.type:\"int\" = constant @\"10\";\n+                        %4 : java.type:\"int\" = constant @10;\n@@ -85,1 +85,1 @@\n-                %7 : java.type:\"int\" = constant @\"-1\";\n+                %7 : java.type:\"int\" = constant @-1;\n@@ -100,1 +100,1 @@\n-                %1 : java.type:\"int\" = constant @\"0\";\n+                %1 : java.type:\"int\" = constant @0;\n@@ -108,1 +108,1 @@\n-                        %6 : java.type:\"int\" = constant @\"1\";\n+                        %6 : java.type:\"int\" = constant @1;\n@@ -115,1 +115,1 @@\n-                        %9 : java.type:\"int\" = constant @\"10\";\n+                        %9 : java.type:\"int\" = constant @10;\n@@ -133,1 +133,1 @@\n-                %0 : java.type:\"boolean\" = constant @\"true\";\n+                %0 : java.type:\"boolean\" = constant @true;\n@@ -136,1 +136,1 @@\n-                %3 : java.type:\"int\" = constant @\"0\";\n+                %3 : java.type:\"int\" = constant @0;\n@@ -146,1 +146,1 @@\n-                        %8 : java.type:\"int\" = constant @\"1\";\n+                        %8 : java.type:\"int\" = constant @1;\n@@ -150,1 +150,1 @@\n-                        %11 : java.type:\"int\" = constant @\"10\";\n+                        %11 : java.type:\"int\" = constant @10;\n@@ -176,1 +176,1 @@\n-                        %4 : java.type:\"int\" = constant @\"10\";\n+                        %4 : java.type:\"int\" = constant @10;\n","filename":"test\/langtools\/tools\/javac\/reflect\/WhileLoopTest.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"}]}