{"files":[{"patch":"@@ -414,0 +414,1 @@\n+            System.out.println(\"Using ModuleOp for CudaBackend\");\n@@ -421,0 +422,1 @@\n+            System.out.println(\"NOT using ModuleOp for CudaBackend\");\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/java\/hat\/backend\/ffi\/CudaBackend.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+            System.out.println(\"Using ModuleOp for MockBackend\");\n@@ -67,0 +68,1 @@\n+            System.out.println(\"NOT using ModuleOp for MockBackend\");\n","filename":"hat\/backends\/ffi\/mock\/src\/main\/java\/hat\/backend\/ffi\/MockBackend.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,0 +104,1 @@\n+            System.out.println(\"Using ModuleOp for C99FFIBackend\");\n@@ -107,0 +108,1 @@\n+            System.out.println(\"NOT using ModuleOp for C99FFIBackend\");\n","filename":"hat\/backends\/ffi\/shared\/src\/main\/java\/hat\/backend\/ffi\/C99FFIBackend.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,3 @@\n-            } catch (ReflectiveOperationException _) {}\n+            } catch (ReflectiveOperationException _) {\n+                throw new IllegalStateException(\"Could not resolve invokeWrapper to method\");\n+            }\n@@ -101,1 +103,3 @@\n-                    } catch (ReflectiveOperationException _) {}\n+                    } catch (ReflectiveOperationException _) {\n+                        throw new IllegalStateException(\"Could not resolve invokeWrapper to method\");\n+                    }\n","filename":"hat\/core\/src\/main\/java\/hat\/optools\/ModuleOpWrapper.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-          if (config.moduleOp) System.out.println(\"Currently using ModuleOp config for CallGraphs\");\n+          if (config.moduleOp) System.out.println(\"Using ModuleOp for CallGraphs\");\n","filename":"hat\/hat\/run.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}