{"files":[{"patch":"@@ -383,1 +383,1 @@\n-                        List.of(implementation, quotableOpGetter, CodeReflectionSupport.HANDLE_MAKE_QUOTED);\n+                        List.of(implementation, quotableOpGetter, CodeReflectionSupport.QUOTED_OP_MH);\n@@ -495,1 +495,1 @@\n-        cob.invokevirtual(CD_MethodHandle, \"invokeExact\", methodDesc(CodeReflectionSupport.HANDLE_MAKE_QUOTED.type()))\n+        cob.invokevirtual(CD_MethodHandle, \"invokeExact\", methodDesc(CodeReflectionSupport.QUOTED_OP_MH.type()))\n@@ -502,1 +502,1 @@\n-        static final MethodHandle HANDLE_MAKE_QUOTED;\n+        static final MethodHandle QUOTED_OP_MH;\n@@ -511,1 +511,0 @@\n-                Class<?> quotedHelper = cl.loadClass(\"jdk.incubator.code.internal.QuotedHelper\");\n@@ -513,1 +512,1 @@\n-                HANDLE_MAKE_QUOTED = Lookup.IMPL_LOOKUP.findStatic(quotedHelper, \"makeQuoted\",\n+                QUOTED_OP_MH = Lookup.IMPL_LOOKUP.findStatic(QUOTED_CLASS, \"quotedOp\",\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1,36 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.incubator.code.internal;\n-\n-import jdk.incubator.code.Quoted;\n-import jdk.incubator.code.dialect.core.CoreOp.FuncOp;\n-\n-public class QuotedHelper {\n-\n-    public static Quoted makeQuoted(FuncOp funcOp, Object[] args) {\n-        return Quoted.quotedOp(funcOp, args);\n-    }\n-}\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/QuotedHelper.java","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -51,2 +51,0 @@\n-    opens jdk.incubator.code.internal to java.base;\n-\n","filename":"src\/jdk.incubator.code\/share\/classes\/module-info.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -304,1 +304,1 @@\n-        Assert.assertThrows(IllegalArgumentException.class, () -> Quoted.quotedOp(fop, args));\n+        Assert.assertThrows(RuntimeException.class, () -> Quoted.quotedOp(fop, args));\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestQuoteOp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}