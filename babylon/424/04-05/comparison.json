{"files":[{"patch":"@@ -4441,1 +4441,1 @@\n-        return func(\"q\", FunctionType.VOID).body(block -> {\n+        return func(\"q\", FunctionType.functionType(JavaType.type(Quoted.class))).body(block -> {\n@@ -4486,1 +4486,1 @@\n-            block.op(quoted(qbody));\n+            Op.Result qopr = block.op(quoted(qbody));\n@@ -4488,1 +4488,1 @@\n-            block.op(_return());\n+            block.op(_return(qopr));\n@@ -4496,0 +4496,1 @@\n+\n@@ -4497,0 +4498,1 @@\n+\n@@ -4498,2 +4500,0 @@\n-        assert fopBlock.ops().get(funcOp.parameters().size()) instanceof QuotedOp;\n-        assert fopBlock.ops().getLast() instanceof ReturnOp;\n@@ -4501,0 +4501,1 @@\n+        assert fopBlock.ops().get(funcOp.parameters().size()) instanceof QuotedOp;\n@@ -4503,0 +4504,2 @@\n+        assert fopBlock.ops().getLast() instanceof ReturnOp returnOp && returnOp.returnValue().equals(qop.result());\n+\n@@ -4513,0 +4516,1 @@\n+            \/\/ @@@ The interpreter map captured value to instance of VarBox, should we do the same ?\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/op\/CoreOp.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -43,0 +43,3 @@\n+        \/\/ q.op() must have the same structure as lop\n+        \/\/ for the moment, we don't have utility to check that\n+\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestQuoteOp.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}