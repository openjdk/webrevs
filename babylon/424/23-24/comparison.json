{"files":[{"patch":"@@ -0,0 +1,1 @@\n+import jdk.incubator.code.Block;\n@@ -5,0 +6,1 @@\n+import jdk.incubator.code.Value;\n@@ -14,0 +16,1 @@\n+import java.util.Map;\n@@ -273,1 +276,1 @@\n-                        \/\/ model must contains at least two operations\n+                        \/\/ model must contain at least two operations\n@@ -279,0 +282,14 @@\n+                },\n+                \/\/ args length must be equal to params size\n+                {\n+                        \"\"\"\n+func @\"q\" (%0 : java.type:\"int\")java.type:\"jdk.incubator.code.Quoted\" -> {\n+    %5 : java.type:\"jdk.incubator.code.Quoted\" = quoted ()java.type:\"void\" -> {\n+      %6 : java.type:\"java.util.function.IntSupplier\" = lambda ()java.type:\"int\" -> {\n+            return %0;\n+      };\n+      yield %6;\n+    };\n+    return %5;\n+};\n+\"\"\", new Object[]{1, 2}\n@@ -398,0 +415,16 @@\n+                {\n+                        \"\"\"\n+func @\"q\" (%0 : java.type:\"int\", %2 : java.type:\"int\")java.type:\"jdk.incubator.code.Quoted\" -> {\n+    %1 : Var<java.type:\"int\"> = var %0;\n+    %5 : java.type:\"jdk.incubator.code.Quoted\" = quoted ()java.type:\"void\" -> {\n+      %6 : java.type:\"java.util.function.IntSupplier\" = lambda ()java.type:\"int\" -> {\n+            %7 : java.type:\"int\" = var.load %1;\n+            %8 : java.type:\"int\" = add %7 %2;\n+            return %8;\n+      };\n+      yield %6;\n+    };\n+    return %5;\n+};\n+\"\"\", new Object[]{8, 9}\n+                }\n@@ -404,1 +437,13 @@\n-        CoreOp.quotedOp(fop, args);\n+        Quoted quoted = CoreOp.quotedOp(fop, args);\n+\n+        for (Map.Entry<Value, Object> e : quoted.capturedValues().entrySet()) {\n+            Value sv = e.getKey();\n+            Object rv = e.getValue();\n+            \/\/ assert only when captured value is block param, or result of VarOp initialized with block param\n+            if (sv instanceof Op.Result opr && opr.op() instanceof CoreOp.VarOp vop\n+                    && vop.initOperand() instanceof Block.Parameter p) {\n+                Assert.assertEquals(((CoreOp.Var) rv).value(), args[p.index()]);\n+            } else if (sv instanceof Block.Parameter p) {\n+                Assert.assertEquals(rv, args[p.index()]);\n+            }\n+        }\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestQuoteOp.java","additions":47,"deletions":2,"binary":false,"changes":49,"status":"modified"}]}