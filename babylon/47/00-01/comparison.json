{"files":[{"patch":"@@ -2371,1 +2371,1 @@\n-            if(def.operands().size() != 2) {\n+            if (def.operands().size() != 2) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-    record Triple(Class<?> first, Class<?> second, String third) {\n+    record TestMethodData(Class<?> first, Class<?> second, String third) {\n@@ -191,2 +191,0 @@\n-\n-\n@@ -194,2 +192,2 @@\n-        Stream<Triple> s1 = types.stream().map(t -> new Triple(t,String.class, testName(t, 1)));\n-        Stream<Triple> s2 = types.stream().map(t -> new Triple(String.class, t, testName(t, 2)));\n+        Stream<TestMethodData> s1 = types.stream().map(t -> new TestMethodData(t, String.class, testName(t, 1)));\n+        Stream<TestMethodData> s2 = types.stream().map(t -> new TestMethodData(String.class, t, testName(t, 2)));\n@@ -198,3 +196,3 @@\n-        Stream<Triple> s3 = Stream.of(new Triple(TestObject.class, String.class, testName(Object.class, 3)),\n-                                      new Triple(String.class, TestObject.class, testName(Object.class, 4)),\n-                                      new Triple(String.class, String.class, \"stringConcat\"));\n+        Stream<TestMethodData> s3 = Stream.of(new TestMethodData(TestObject.class, String.class, testName(Object.class, 3)),\n+                                      new TestMethodData(String.class, TestObject.class, testName(Object.class, 4)),\n+                                      new TestMethodData(String.class, String.class, \"stringConcat\"));\n@@ -211,1 +209,0 @@\n-\n@@ -215,1 +212,1 @@\n-    public static void testRun(Triple t) {\n+    public static void testRun(TestMethodData t) {\n@@ -217,1 +214,0 @@\n-\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestConcat.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"}]}