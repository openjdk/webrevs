{"files":[{"patch":"@@ -70,1 +70,0 @@\n-        BytecodeLift.DUMP = false;\n@@ -82,1 +81,2 @@\n-    private int stable, unstable, originalMaxLocals, maxLocals;\n+    private int stable, unstable;\n+    private Long[] stats = new Long[6];\n@@ -89,2 +89,1 @@\n-        originalMaxLocals = 0;\n-        maxLocals = 0;\n+        Arrays.fill(stats, 0l);\n@@ -97,0 +96,7 @@\n+        System.out.println(\"\"\"\n+        statistics     original  generated\n+        code length: %1$,10d %4$,10d\n+        max locals:  %2$,10d %5$,10d\n+        max stack:   %3$,10d %6$,10d\n+        \"\"\".formatted((Object[])stats));\n+\n@@ -98,1 +104,1 @@\n-        Assert.assertTrue(stable > 65290 && unstable < 100, String.format(\"stable: %d unstable: %d original maxLocals: %d maxLocals: %d\", stable, unstable, originalMaxLocals, maxLocals));\n+        Assert.assertTrue(stable > 65290 && unstable < 100, String.format(\"stable: %d unstable: %d\", stable, unstable));\n@@ -132,2 +138,8 @@\n-                    originalMaxLocals += ((CodeAttribute)originalModel.code().get()).maxLocals();\n-                    maxLocals += ((CodeAttribute)bytecode.code().get()).maxLocals();\n+                    var ca = (CodeAttribute)originalModel.code().get();\n+                    stats[0] += ca.codeLength();\n+                    stats[1] += ca.maxLocals();\n+                    stats[2] += ca.maxStack();\n+                    ca = (CodeAttribute)bytecode.code().get();\n+                    stats[3] += ca.codeLength();\n+                    stats[4] += ca.maxLocals();\n+                    stats[5] += ca.maxStack();\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java","additions":19,"deletions":7,"binary":false,"changes":26,"status":"modified"}]}