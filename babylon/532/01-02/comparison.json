{"files":[{"patch":"@@ -739,0 +739,3 @@\n+            if (targetType.hasTag(TypeTag.VOID)) {\n+                return sourceValue;\n+            }\n@@ -1485,0 +1488,1 @@\n+            Type lambdaReturnType = tree.getDescriptorType(types).getReturnType();\n@@ -1486,2 +1490,2 @@\n-                Value exprVal = toValue(((JCExpression) tree.body), tree.getDescriptorType(types).getReturnType());\n-                if (!tree.body.type.hasTag(TypeTag.VOID)) {\n+                Value exprVal = toValue(((JCExpression) tree.body), lambdaReturnType);\n+                if (!lambdaReturnType.hasTag(TypeTag.VOID)) {\n@@ -1495,1 +1499,1 @@\n-                    bodyTarget = tree.getDescriptorType(types).getReturnType();\n+                    bodyTarget = lambdaReturnType;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}