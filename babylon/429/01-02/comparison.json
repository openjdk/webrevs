{"files":[{"patch":"@@ -336,1 +336,1 @@\n-                shape.length == 0 ? MemorySegment.NULL : autoShape(arena, shape, flatData.byteSize() \/ elementType.size()), (long)shape.length,\n+                shape.length == 0 ? MemorySegment.NULL : autoShape(arena, shape, 8l * flatData.byteSize() \/ elementType.bitSize()), (long)shape.length,\n@@ -386,1 +386,1 @@\n-                * Tensor.ElementType.fromOnnxId(retInt(OrtApi.GetTensorElementType(runtimeAddress, infoAddr, ret))).size();\n+                * Tensor.ElementType.fromOnnxId(retInt(OrtApi.GetTensorElementType(runtimeAddress, infoAddr, ret))).bitSize() \/ 8;\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxRuntime.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -223,1 +223,1 @@\n-        int size() {\n+        public int bitSize() {\n@@ -225,5 +225,7 @@\n-                case UINT8, INT8, BOOL, FLOAT8E4M3FN, FLOAT8E4M3FNUZ, FLOAT8E5M2, FLOAT8E5M2FNUZ -> 1;\n-                case UINT16, INT16, FLOAT16, BFLOAT16 -> 2;\n-                case UINT32, INT32, FLOAT -> 4;\n-                case UINT64, INT64, DOUBLE -> 8;\n-                default -> 0;\n+                case INT4, UINT4, FLOAT4E2M1 -> 4;\n+                case UINT8, INT8, BOOL, FLOAT8E4M3FN, FLOAT8E4M3FNUZ, FLOAT8E5M2, FLOAT8E5M2FNUZ -> 8;\n+                case UINT16, INT16, FLOAT16, BFLOAT16 -> 16;\n+                case UINT32, INT32, FLOAT -> 32;\n+                case UINT64, INT64, DOUBLE, COMPLEX64 -> 64;\n+                case COMPLEX128 -> 128;\n+                case STRING -> -1;\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/Tensor.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"}]}