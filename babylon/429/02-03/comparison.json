{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import java.util.Optional;\n@@ -110,1 +111,1 @@\n-        return buildModel(domain, module, initializers, Map.of());\n+        return buildModel(domain, module, initializers, Map.of(), _ -> null);\n@@ -113,1 +114,4 @@\n-    public static byte[] buildModel(String domain, CoreOp.ModuleOp module, List<Object> initializers, Map<Value, String> explicitValueNames) {\n+    public record ExternalTensorDataInfo(String location, long offset, long length) {\n+    }\n+\n+    public static byte[] buildModel(String domain, CoreOp.ModuleOp module, List<Object> initializers, Map<Value, String> explicitValueNames, Function<Tensor, ExternalTensorDataInfo> tensorDataExternalizer) {\n@@ -134,1 +138,1 @@\n-                graph(domain, mainFunc.funcName(), indexer, mainBlock, initializers, 0),\n+                graph(domain, mainFunc.funcName(), indexer, mainBlock, initializers, 0, tensorDataExternalizer),\n@@ -197,0 +201,4 @@\n+        return graph(domain, graphName, indexer, block, initializers, scalarArgs, _ -> null);\n+    }\n+\n+    static GraphProto graph(String domain, String graphName, Indexer indexer, Block block, List<? extends Object> initializers, int scalarArgs, Function<Tensor, ExternalTensorDataInfo> tensorDataExternalizer) {\n@@ -207,1 +215,1 @@\n-                            tps.accept(tensorProto(indexer.nameOf(params.get(i + firstInitializer), rci), (Tensor)(rcs[rci].getAccessor().invoke(val))));\n+                            tps.accept(tensorProto(indexer.nameOf(params.get(i + firstInitializer), rci), (Tensor)(rcs[rci].getAccessor().invoke(val)), tensorDataExternalizer));\n@@ -212,1 +220,1 @@\n-                        tps.accept(tensorProto(indexer.nameOf(params.get(i + firstInitializer)), (Tensor)val));\n+                        tps.accept(tensorProto(indexer.nameOf(params.get(i + firstInitializer)), (Tensor)val, tensorDataExternalizer));\n@@ -353,2 +361,3 @@\n-    static TensorProto tensorProto(String name, oracle.code.onnx.Tensor tensor) {\n-        return new TensorProto()\n+    static TensorProto tensorProto(String name, oracle.code.onnx.Tensor tensor, Function<Tensor, ExternalTensorDataInfo> tensorDataExternalizer) {\n+        ExternalTensorDataInfo extInfo = tensorDataExternalizer.apply(tensor);\n+        TensorProto tp = new TensorProto()\n@@ -357,2 +366,7 @@\n-                .dims(tensor.shape())\n-                .rawData(tensor.data().toArray(ValueLayout.JAVA_BYTE));\n+                .dims(tensor.shape());\n+        return extInfo == null\n+                ? tp.rawData(tensor.data().toArray(ValueLayout.JAVA_BYTE))\n+                : tp.externalData(new StringStringEntryProto().key(\"location\").value(extInfo.location()))\n+                    .externalData(new StringStringEntryProto().key(\"offset\").value(String.valueOf(extInfo.offset())))\n+                    .externalData(new StringStringEntryProto().key(\"length\").value(String.valueOf(extInfo.length())))\n+                    .dataLocation(DataLocation.EXTERNAL);\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxProtoBuilder.java","additions":23,"deletions":9,"binary":false,"changes":32,"status":"modified"}]}