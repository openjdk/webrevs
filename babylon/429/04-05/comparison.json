{"files":[{"patch":"@@ -89,6 +89,1 @@\n-        return transform(l, inputFunc, false);\n-    }\n-\n-    \/\/ @@@ added forceInline switch to workaround Onnx problem with unused outputs in functions\n-    public static ModuleAndInitializers transform(MethodHandles.Lookup l, CoreOp.FuncOp inputFunc, boolean forceInline) {\n-        CoreOp.ModuleOp m = collectModuleFunctions(l, inputFunc, forceInline);\n+        CoreOp.ModuleOp m = collectModuleFunctions(l, inputFunc);\n@@ -110,1 +105,1 @@\n-    static CoreOp.ModuleOp collectModuleFunctions(MethodHandles.Lookup l, CoreOp.FuncOp inputFunc, boolean forceInline) {\n+    static CoreOp.ModuleOp collectModuleFunctions(MethodHandles.Lookup l, CoreOp.FuncOp inputFunc) {\n@@ -118,5 +113,0 @@\n-        if (forceInline) {\n-            doNotInline.clear();\n-            doNotInline.add(inputFunc);\n-        }\n-\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/compiler\/OnnxTransformer.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        OnnxTransformer.ModuleAndInitializers onnxModel = OnnxTransformer.transform(MethodHandles.lookup(), javaModel, true);\n+        OnnxTransformer.ModuleAndInitializers onnxModel = OnnxTransformer.transform(MethodHandles.lookup(), javaModel);\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/genai\/OnnxGenRuntimeSession.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}