{"files":[{"patch":"@@ -483,83 +483,79 @@\n-                %1 : Var<SwitchStatementTest$Day> = var %0 @\"d\";\n-                %2 : java.lang.String = constant @\"\";\n-                %3 : Var<java.lang.String> = var %2 @\"r\";\n-                %4 : SwitchStatementTest$Day = var.load %1;\n-                java.switch.statement %4\n-                    (%5 : SwitchStatementTest$Day)boolean -> {\n-                        %6 : boolean = java.cor\n-                            ()boolean -> {\n-                                %7 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::MON()SwitchStatementTest$Day\";\n-                                %8 : boolean = invoke %5 %7 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n-                                yield %8;\n-                            }\n-                            ()boolean -> {\n-                                %9 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::FRI()SwitchStatementTest$Day\";\n-                                %10 : boolean = invoke %5 %9 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n-                                yield %10;\n-                            }\n-                            ()boolean -> {\n-                                %11 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::SUN()SwitchStatementTest$Day\";\n-                                %12 : boolean = invoke %5 %11 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n-                                yield %12;\n-                            };\n-                        yield %6;\n-                    }\n-                    ()void -> {\n-                        %13 : java.lang.String = var.load %3;\n-                        %14 : int = constant @\"6\";\n-                        %15 : java.lang.Integer = invoke %14 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %16 : java.lang.String = concat %13 %15;\n-                        var.store %3 %16;\n-                        yield;\n-                    }\n-                    (%17 : SwitchStatementTest$Day)boolean -> {\n-                        %18 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::TUE()SwitchStatementTest$Day\";\n-                        %19 : boolean = invoke %17 %18 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n-                        yield %19;\n-                    }\n-                    ()void -> {\n-                        %20 : java.lang.String = var.load %3;\n-                        %21 : int = constant @\"7\";\n-                        %22 : java.lang.Integer = invoke %21 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %23 : java.lang.String = concat %20 %22;\n-                        var.store %3 %23;\n-                        yield;\n-                    }\n-                    (%24 : SwitchStatementTest$Day)boolean -> {\n-                        %25 : boolean = java.cor\n-                            ()boolean -> {\n-                                %26 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::THU()SwitchStatementTest$Day\";\n-                                %27 : boolean = invoke %24 %26 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n-                                yield %27;\n-                            }\n-                            ()boolean -> {\n-                                %28 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::SAT()SwitchStatementTest$Day\";\n-                                %29 : boolean = invoke %24 %28 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n-                                yield %29;\n-                            };\n-                        yield %25;\n-                    }\n-                    ()void -> {\n-                        %30 : java.lang.String = var.load %3;\n-                        %31 : int = constant @\"8\";\n-                        %32 : java.lang.Integer = invoke %31 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %33 : java.lang.String = concat %30 %32;\n-                        var.store %3 %33;\n-                        yield;\n-                    }\n-                    (%34 : SwitchStatementTest$Day)boolean -> {\n-                        %35 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::WED()SwitchStatementTest$Day\";\n-                        %36 : boolean = invoke %34 %35 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n-                        yield %36;\n-                    }\n-                    ()void -> {\n-                        %37 : java.lang.String = var.load %3;\n-                        %38 : int = constant @\"9\";\n-                        %39 : java.lang.Integer = invoke %38 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %40 : java.lang.String = concat %37 %39;\n-                        var.store %3 %40;\n-                        yield;\n-                    };\n-                %41 : java.lang.String = var.load %3;\n-                return %41;\n-            };\n+                  %1 : Var<SwitchStatementTest$Day> = var %0 @\"d\";\n+                  %2 : java.lang.String = constant @\"\";\n+                  %3 : Var<java.lang.String> = var %2 @\"r\";\n+                  %4 : SwitchStatementTest$Day = var.load %1;\n+                  java.switch.statement %4\n+                      (%5 : SwitchStatementTest$Day)boolean -> {\n+                          %6 : boolean = java.cor\n+                              ()boolean -> {\n+                                  %7 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::MON()SwitchStatementTest$Day\";\n+                                  %8 : boolean = invoke %5 %7 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                                  yield %8;\n+                              }\n+                              ()boolean -> {\n+                                  %9 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::FRI()SwitchStatementTest$Day\";\n+                                  %10 : boolean = invoke %5 %9 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                                  yield %10;\n+                              }\n+                              ()boolean -> {\n+                                  %11 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::SUN()SwitchStatementTest$Day\";\n+                                  %12 : boolean = invoke %5 %11 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                                  yield %12;\n+                              };\n+                          yield %6;\n+                      }\n+                      ()void -> {\n+                          %13 : java.lang.String = var.load %3;\n+                          %14 : int = constant @\"6\";\n+                          %15 : java.lang.String = concat %13 %14;\n+                          var.store %3 %15;\n+                          yield;\n+                      }\n+                      (%16 : SwitchStatementTest$Day)boolean -> {\n+                          %17 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::TUE()SwitchStatementTest$Day\";\n+                          %18 : boolean = invoke %16 %17 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                          yield %18;\n+                      }\n+                      ()void -> {\n+                          %19 : java.lang.String = var.load %3;\n+                          %20 : int = constant @\"7\";\n+                          %21 : java.lang.String = concat %19 %20;\n+                          var.store %3 %21;\n+                          yield;\n+                      }\n+                      (%22 : SwitchStatementTest$Day)boolean -> {\n+                          %23 : boolean = java.cor\n+                              ()boolean -> {\n+                                  %24 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::THU()SwitchStatementTest$Day\";\n+                                  %25 : boolean = invoke %22 %24 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                                  yield %25;\n+                              }\n+                              ()boolean -> {\n+                                  %26 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::SAT()SwitchStatementTest$Day\";\n+                                  %27 : boolean = invoke %22 %26 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                                  yield %27;\n+                              };\n+                          yield %23;\n+                      }\n+                      ()void -> {\n+                          %28 : java.lang.String = var.load %3;\n+                          %29 : int = constant @\"8\";\n+                          %30 : java.lang.String = concat %28 %29;\n+                          var.store %3 %30;\n+                          yield;\n+                      }\n+                      (%31 : SwitchStatementTest$Day)boolean -> {\n+                          %32 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::WED()SwitchStatementTest$Day\";\n+                          %33 : boolean = invoke %31 %32 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                          yield %33;\n+                      }\n+                      ()void -> {\n+                          %34 : java.lang.String = var.load %3;\n+                          %35 : int = constant @\"9\";\n+                          %36 : java.lang.String = concat %34 %35;\n+                          var.store %3 %36;\n+                          yield;\n+                      };\n+                  %37 : java.lang.String = var.load %3;\n+                  return %37;\n+              };\n@@ -585,222 +581,210 @@\n-                %1 : Var<int> = var %0 @\"i\";\n-                %2 : java.lang.String = constant @\"\";\n-                %3 : Var<java.lang.String> = var %2 @\"r\";\n-                %4 : int = constant @\"11\";\n-                %5 : Var<int> = var %4 @\"eleven\";\n-                %6 : int = var.load %1;\n-                java.switch.statement %6\n-                    (%7 : int)boolean -> {\n-                        %8 : int = constant @\"1\";\n-                        %9 : int = constant @\"15\";\n-                        %10 : int = and %8 %9;\n-                        %11 : boolean = eq %7 %10;\n-                        yield %11;\n-                    }\n-                    ()void -> {\n-                        %12 : java.lang.String = var.load %3;\n-                        %13 : int = constant @\"1\";\n-                        %14 : java.lang.Integer = invoke %13 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %15 : java.lang.String = concat %12 %14;\n-                        var.store %3 %15;\n-                        yield;\n-                    }\n-                    (%16 : int)boolean -> {\n-                        %17 : int = constant @\"4\";\n-                        %18 : int = constant @\"1\";\n-                        %19 : int = ashr %17 %18;\n-                        %20 : boolean = eq %16 %19;\n-                        yield %20;\n-                    }\n-                    ()void -> {\n-                        %21 : java.lang.String = var.load %3;\n-                        %22 : java.lang.String = constant @\"2\";\n-                        %23 : java.lang.String = concat %21 %22;\n-                        var.store %3 %23;\n-                        yield;\n-                    }\n-                    (%24 : int)boolean -> {\n-                        %25 : long = constant @\"3\";\n-                        %26 : int = conv %25;\n-                        %27 : boolean = eq %24 %26;\n-                        yield %27;\n-                    }\n-                    ()void -> {\n-                        %28 : java.lang.String = var.load %3;\n-                        %29 : int = constant @\"3\";\n-                        %30 : java.lang.Integer = invoke %29 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %31 : java.lang.String = concat %28 %30;\n-                        var.store %3 %31;\n-                        yield;\n-                    }\n-                    (%32 : int)boolean -> {\n-                        %33 : int = constant @\"2\";\n-                        %34 : int = constant @\"1\";\n-                        %35 : int = lshl %33 %34;\n-                        %36 : boolean = eq %32 %35;\n-                        yield %36;\n-                    }\n-                    ()void -> {\n-                        %37 : java.lang.String = var.load %3;\n-                        %38 : int = constant @\"4\";\n-                        %39 : java.lang.Integer = invoke %38 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %40 : java.lang.String = concat %37 %39;\n-                        var.store %3 %40;\n-                        yield;\n-                    }\n-                    (%41 : int)boolean -> {\n-                        %42 : int = constant @\"10\";\n-                        %43 : int = constant @\"2\";\n-                        %44 : int = div %42 %43;\n-                        %45 : boolean = eq %41 %44;\n-                        yield %45;\n-                    }\n-                    ()void -> {\n-                        %46 : java.lang.String = var.load %3;\n-                        %47 : int = constant @\"5\";\n-                        %48 : java.lang.Integer = invoke %47 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %49 : java.lang.String = concat %46 %48;\n-                        var.store %3 %49;\n-                        yield;\n-                    }\n-                    (%50 : int)boolean -> {\n-                        %51 : int = constant @\"12\";\n-                        %52 : int = constant @\"6\";\n-                        %53 : int = sub %51 %52;\n-                        %54 : boolean = eq %50 %53;\n-                        yield %54;\n-                    }\n-                    ()void -> {\n-                        %55 : java.lang.String = var.load %3;\n-                        %56 : int = constant @\"6\";\n-                        %57 : java.lang.Integer = invoke %56 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %58 : java.lang.String = concat %55 %57;\n-                        var.store %3 %58;\n-                        yield;\n-                    }\n-                    (%59 : int)boolean -> {\n-                        %60 : int = constant @\"3\";\n-                        %61 : int = constant @\"4\";\n-                        %62 : int = add %60 %61;\n-                        %63 : boolean = eq %59 %62;\n-                        yield %63;\n-                    }\n-                    ()void -> {\n-                        %64 : java.lang.String = var.load %3;\n-                        %65 : int = constant @\"7\";\n-                        %66 : java.lang.Integer = invoke %65 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %67 : java.lang.String = concat %64 %66;\n-                        var.store %3 %67;\n-                        yield;\n-                    }\n-                    (%68 : int)boolean -> {\n-                        %69 : int = constant @\"2\";\n-                        %70 : int = constant @\"2\";\n-                        %71 : int = mul %69 %70;\n-                        %72 : int = constant @\"2\";\n-                        %73 : int = mul %71 %72;\n-                        %74 : boolean = eq %68 %73;\n-                        yield %74;\n-                    }\n-                    ()void -> {\n-                        %75 : java.lang.String = var.load %3;\n-                        %76 : int = constant @\"8\";\n-                        %77 : java.lang.Integer = invoke %76 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %78 : java.lang.String = concat %75 %77;\n-                        var.store %3 %78;\n-                        yield;\n-                    }\n-                    (%79 : int)boolean -> {\n-                        %80 : int = constant @\"8\";\n-                        %81 : int = constant @\"1\";\n-                        %82 : int = or %80 %81;\n-                        %83 : boolean = eq %79 %82;\n-                        yield %83;\n-                    }\n-                    ()void -> {\n-                        %84 : java.lang.String = var.load %3;\n-                        %85 : int = constant @\"9\";\n-                        %86 : java.lang.Integer = invoke %85 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %87 : java.lang.String = concat %84 %86;\n-                        var.store %3 %87;\n-                        yield;\n-                    }\n-                    (%88 : int)boolean -> {\n-                        %89 : int = constant @\"10\";\n-                        %90 : boolean = eq %88 %89;\n-                        yield %90;\n-                    }\n-                    ()void -> {\n-                        %91 : java.lang.String = var.load %3;\n-                        %92 : int = constant @\"10\";\n-                        %93 : java.lang.Integer = invoke %92 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %94 : java.lang.String = concat %91 %93;\n-                        var.store %3 %94;\n-                        yield;\n-                    }\n-                    (%95 : int)boolean -> {\n-                        %96 : int = var.load %5;\n-                        %97 : boolean = eq %95 %96;\n-                        yield %97;\n-                    }\n-                    ()void -> {\n-                        %98 : java.lang.String = var.load %3;\n-                        %99 : int = constant @\"11\";\n-                        %100 : java.lang.Integer = invoke %99 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %101 : java.lang.String = concat %98 %100;\n-                        var.store %3 %101;\n-                        yield;\n-                    }\n-                    (%102 : int)boolean -> {\n-                        %103 : int = field.load @\"SwitchStatementTest$Constants::c1()int\";\n-                        %104 : boolean = eq %102 %103;\n-                        yield %104;\n-                    }\n-                    ()void -> {\n-                        %105 : java.lang.String = var.load %3;\n-                        %106 : int = field.load @\"SwitchStatementTest$Constants::c1()int\";\n-                        %107 : java.lang.Integer = invoke %106 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %108 : java.lang.String = concat %105 %107;\n-                        var.store %3 %108;\n-                        yield;\n-                    }\n-                    (%109 : int)boolean -> {\n-                        %110 : int = java.cexpression\n-                            ()boolean -> {\n-                                %111 : int = constant @\"1\";\n-                                %112 : int = constant @\"0\";\n-                                %113 : boolean = gt %111 %112;\n-                                yield %113;\n-                            }\n-                            ()int -> {\n-                                %114 : int = constant @\"13\";\n-                                yield %114;\n-                            }\n-                            ()int -> {\n-                                %115 : int = constant @\"133\";\n-                                yield %115;\n-                            };\n-                        %116 : boolean = eq %109 %110;\n-                        yield %116;\n-                    }\n-                    ()void -> {\n-                        %117 : java.lang.String = var.load %3;\n-                        %118 : int = constant @\"13\";\n-                        %119 : java.lang.Integer = invoke %118 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %120 : java.lang.String = concat %117 %119;\n-                        var.store %3 %120;\n-                        yield;\n-                    }\n-                    ()boolean -> {\n-                        %17 : boolean = constant @\"true\";\n-                        yield %17;\n-                    }\n-                    ()void -> {\n-                        %121 : java.lang.String = var.load %3;\n-                        %122 : java.lang.String = constant @\"an int\";\n-                        %123 : java.lang.String = concat %121 %122;\n-                        var.store %3 %123;\n-                        yield;\n-                    };\n-                %124 : java.lang.String = var.load %3;\n-                return %124;\n-            };\n+                  %1 : Var<int> = var %0 @\"i\";\n+                  %2 : java.lang.String = constant @\"\";\n+                  %3 : Var<java.lang.String> = var %2 @\"r\";\n+                  %4 : int = constant @\"11\";\n+                  %5 : Var<int> = var %4 @\"eleven\";\n+                  %6 : int = var.load %1;\n+                  java.switch.statement %6\n+                      (%7 : int)boolean -> {\n+                          %8 : int = constant @\"1\";\n+                          %9 : int = constant @\"15\";\n+                          %10 : int = and %8 %9;\n+                          %11 : boolean = eq %7 %10;\n+                          yield %11;\n+                      }\n+                      ()void -> {\n+                          %12 : java.lang.String = var.load %3;\n+                          %13 : int = constant @\"1\";\n+                          %14 : java.lang.String = concat %12 %13;\n+                          var.store %3 %14;\n+                          yield;\n+                      }\n+                      (%15 : int)boolean -> {\n+                          %16 : int = constant @\"4\";\n+                          %17 : int = constant @\"1\";\n+                          %18 : int = ashr %16 %17;\n+                          %19 : boolean = eq %15 %18;\n+                          yield %19;\n+                      }\n+                      ()void -> {\n+                          %20 : java.lang.String = var.load %3;\n+                          %21 : java.lang.String = constant @\"2\";\n+                          %22 : java.lang.String = concat %20 %21;\n+                          var.store %3 %22;\n+                          yield;\n+                      }\n+                      (%23 : int)boolean -> {\n+                          %24 : long = constant @\"3\";\n+                          %25 : int = conv %24;\n+                          %26 : boolean = eq %23 %25;\n+                          yield %26;\n+                      }\n+                      ()void -> {\n+                          %27 : java.lang.String = var.load %3;\n+                          %28 : int = constant @\"3\";\n+                          %29 : java.lang.String = concat %27 %28;\n+                          var.store %3 %29;\n+                          yield;\n+                      }\n+                      (%30 : int)boolean -> {\n+                          %31 : int = constant @\"2\";\n+                          %32 : int = constant @\"1\";\n+                          %33 : int = lshl %31 %32;\n+                          %34 : boolean = eq %30 %33;\n+                          yield %34;\n+                      }\n+                      ()void -> {\n+                          %35 : java.lang.String = var.load %3;\n+                          %36 : int = constant @\"4\";\n+                          %37 : java.lang.String = concat %35 %36;\n+                          var.store %3 %37;\n+                          yield;\n+                      }\n+                      (%38 : int)boolean -> {\n+                          %39 : int = constant @\"10\";\n+                          %40 : int = constant @\"2\";\n+                          %41 : int = div %39 %40;\n+                          %42 : boolean = eq %38 %41;\n+                          yield %42;\n+                      }\n+                      ()void -> {\n+                          %43 : java.lang.String = var.load %3;\n+                          %44 : int = constant @\"5\";\n+                          %45 : java.lang.String = concat %43 %44;\n+                          var.store %3 %45;\n+                          yield;\n+                      }\n+                      (%46 : int)boolean -> {\n+                          %47 : int = constant @\"12\";\n+                          %48 : int = constant @\"6\";\n+                          %49 : int = sub %47 %48;\n+                          %50 : boolean = eq %46 %49;\n+                          yield %50;\n+                      }\n+                      ()void -> {\n+                          %51 : java.lang.String = var.load %3;\n+                          %52 : int = constant @\"6\";\n+                          %53 : java.lang.String = concat %51 %52;\n+                          var.store %3 %53;\n+                          yield;\n+                      }\n+                      (%54 : int)boolean -> {\n+                          %55 : int = constant @\"3\";\n+                          %56 : int = constant @\"4\";\n+                          %57 : int = add %55 %56;\n+                          %58 : boolean = eq %54 %57;\n+                          yield %58;\n+                      }\n+                      ()void -> {\n+                          %59 : java.lang.String = var.load %3;\n+                          %60 : int = constant @\"7\";\n+                          %61 : java.lang.String = concat %59 %60;\n+                          var.store %3 %61;\n+                          yield;\n+                      }\n+                      (%62 : int)boolean -> {\n+                          %63 : int = constant @\"2\";\n+                          %64 : int = constant @\"2\";\n+                          %65 : int = mul %63 %64;\n+                          %66 : int = constant @\"2\";\n+                          %67 : int = mul %65 %66;\n+                          %68 : boolean = eq %62 %67;\n+                          yield %68;\n+                      }\n+                      ()void -> {\n+                          %69 : java.lang.String = var.load %3;\n+                          %70 : int = constant @\"8\";\n+                          %71 : java.lang.String = concat %69 %70;\n+                          var.store %3 %71;\n+                          yield;\n+                      }\n+                      (%72 : int)boolean -> {\n+                          %73 : int = constant @\"8\";\n+                          %74 : int = constant @\"1\";\n+                          %75 : int = or %73 %74;\n+                          %76 : boolean = eq %72 %75;\n+                          yield %76;\n+                      }\n+                      ()void -> {\n+                          %77 : java.lang.String = var.load %3;\n+                          %78 : int = constant @\"9\";\n+                          %79 : java.lang.String = concat %77 %78;\n+                          var.store %3 %79;\n+                          yield;\n+                      }\n+                      (%80 : int)boolean -> {\n+                          %81 : int = constant @\"10\";\n+                          %82 : boolean = eq %80 %81;\n+                          yield %82;\n+                      }\n+                      ()void -> {\n+                          %83 : java.lang.String = var.load %3;\n+                          %84 : int = constant @\"10\";\n+                          %85 : java.lang.String = concat %83 %84;\n+                          var.store %3 %85;\n+                          yield;\n+                      }\n+                      (%86 : int)boolean -> {\n+                          %87 : int = var.load %5;\n+                          %88 : boolean = eq %86 %87;\n+                          yield %88;\n+                      }\n+                      ()void -> {\n+                          %89 : java.lang.String = var.load %3;\n+                          %90 : int = constant @\"11\";\n+                          %91 : java.lang.String = concat %89 %90;\n+                          var.store %3 %91;\n+                          yield;\n+                      }\n+                      (%92 : int)boolean -> {\n+                          %93 : int = field.load @\"SwitchStatementTest$Constants::c1()int\";\n+                          %94 : boolean = eq %92 %93;\n+                          yield %94;\n+                      }\n+                      ()void -> {\n+                          %95 : java.lang.String = var.load %3;\n+                          %96 : int = field.load @\"SwitchStatementTest$Constants::c1()int\";\n+                          %97 : java.lang.String = concat %95 %96;\n+                          var.store %3 %97;\n+                          yield;\n+                      }\n+                      (%98 : int)boolean -> {\n+                          %99 : int = java.cexpression\n+                              ()boolean -> {\n+                                  %100 : int = constant @\"1\";\n+                                  %101 : int = constant @\"0\";\n+                                  %102 : boolean = gt %100 %101;\n+                                  yield %102;\n+                              }\n+                              ()int -> {\n+                                  %103 : int = constant @\"13\";\n+                                  yield %103;\n+                              }\n+                              ()int -> {\n+                                  %104 : int = constant @\"133\";\n+                                  yield %104;\n+                              };\n+                          %105 : boolean = eq %98 %99;\n+                          yield %105;\n+                      }\n+                      ()void -> {\n+                          %106 : java.lang.String = var.load %3;\n+                          %107 : int = constant @\"13\";\n+                          %108 : java.lang.String = concat %106 %107;\n+                          var.store %3 %108;\n+                          yield;\n+                      }\n+                      ()boolean -> {\n+                          %109 : boolean = constant @\"true\";\n+                          yield %109;\n+                      }\n+                      ()void -> {\n+                          %110 : java.lang.String = var.load %3;\n+                          %111 : java.lang.String = constant @\"an int\";\n+                          %112 : java.lang.String = concat %110 %111;\n+                          var.store %3 %112;\n+                          yield;\n+                      };\n+                  %113 : java.lang.String = var.load %3;\n+                  return %113;\n+              };\n@@ -977,33 +961,32 @@\n-                %1 : Var<int> = var %0 @\"a\";\n-                %2 : java.lang.String = constant @\"\";\n-                %3 : Var<java.lang.String> = var %2 @\"r\";\n-                %4 : int = var.load %1;\n-                java.switch.statement %4\n-                    (%5 : int)boolean -> {\n-                        %6 : int = constant @\"1\";\n-                        %7 : boolean = eq %5 %6;\n-                        yield %7;\n-                    }\n-                    ()void -> {\n-                        %8 : java.lang.String = var.load %3;\n-                        %9 : java.lang.String = constant @\"1\";\n-                        %10 : java.lang.String = concat %8 %9;\n-                        var.store %3 %10;\n-                        yield;\n-                    }\n-                    (%11 : int)boolean -> {\n-                        %12 : int = constant @\"2\";\n-                        %13 : boolean = eq %11 %12;\n-                        yield %13;\n-                    }\n-                    ()void -> {\n-                        %14 : java.lang.String = var.load %3;\n-                        %15 : int = constant @\"2\";\n-                        %16 : java.lang.Integer = invoke %15 @\"java.lang.Integer::valueOf(int)java.lang.Integer\";\n-                        %17 : java.lang.String = concat %14 %16;\n-                        var.store %3 %17;\n-                        yield;\n-                    };\n-                %18 : java.lang.String = var.load %3;\n-                return %18;\n-            };\n+                  %1 : Var<int> = var %0 @\"a\";\n+                  %2 : java.lang.String = constant @\"\";\n+                  %3 : Var<java.lang.String> = var %2 @\"r\";\n+                  %4 : int = var.load %1;\n+                  java.switch.statement %4\n+                      (%5 : int)boolean -> {\n+                          %6 : int = constant @\"1\";\n+                          %7 : boolean = eq %5 %6;\n+                          yield %7;\n+                      }\n+                      ()void -> {\n+                          %8 : java.lang.String = var.load %3;\n+                          %9 : java.lang.String = constant @\"1\";\n+                          %10 : java.lang.String = concat %8 %9;\n+                          var.store %3 %10;\n+                          yield;\n+                      }\n+                      (%11 : int)boolean -> {\n+                          %12 : int = constant @\"2\";\n+                          %13 : boolean = eq %11 %12;\n+                          yield %13;\n+                      }\n+                      ()void -> {\n+                          %14 : java.lang.String = var.load %3;\n+                          %15 : int = constant @\"2\";\n+                          %16 : java.lang.String = concat %14 %15;\n+                          var.store %3 %16;\n+                          yield;\n+                      };\n+                  %17 : java.lang.String = var.load %3;\n+                  return %17;\n+              };\n","filename":"test\/langtools\/tools\/javac\/reflect\/SwitchStatementTest.java","additions":321,"deletions":338,"binary":false,"changes":659,"status":"modified"}]}