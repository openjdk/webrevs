{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import java.io.BufferedReader;\n@@ -35,0 +36,2 @@\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n@@ -52,0 +55,1 @@\n+import java.util.jar.JarFile;\n@@ -543,0 +547,14 @@\n+\n+        public boolean contains(String entryName) {\n+            java.util.jar.JarFile jarFile = null;\n+            try {\n+             \/\/   println(\"looking for \"+entryName);\n+                jarFile = new java.util.jar.JarFile(path.toFile());\n+\n+                JarEntry entry = jarFile.getJarEntry(entryName);\n+              \/\/  println(\"entry = \"+entry);\n+                return entry != null;\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n","filename":"hat\/hat\/Script.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-         static Script.MavenStyleProject javaSeqBackend;\n+        static Script.MavenStyleProject javaSeqBackend;\n@@ -98,0 +98,1 @@\n+        static Script.MavenStyleProject ffiBackendCuda;\n@@ -100,0 +101,1 @@\n+        static Script.MavenStyleProject jextractedBackendCuda;\n@@ -147,1 +149,2 @@\n-                jextractedOpenGLDir, \"hat-jextracted-opengl-1.0.jar\");\n+                jextractedOpenGLDir,\n+                \"hat-jextracted-opengl-1.0.jar\");\n@@ -166,0 +169,1 @@\n+    if (Artifacts.jextractedOpenCL != null){\n@@ -170,0 +174,10 @@\n+}\n+\/\/ on jetson\n+\/\/ ls extractions\/opengl\/src\/main\/java\/opengl\/glutKeyboardFunc*\n+\/\/  -> extractions\/opengl\/src\/main\/java\/opengl\/glutKeyboardFunc$callback.java\n+\/\/  so we exclude \"^.*\/wrap\/glwrap\/GLFuncEventHandler\\\\.java$\"\n+\/\/ on mac\n+\/\/    ls extractions\/opengl\/src\/main\/java\/opengl\/glutKeyboardFunc*\n+\/\/  -> extractions\/opengl\/src\/main\/java\/opengl\/glutKeyboardFunc$func.java\n+\/\/  So we exclude  \"^.*\/wrap\/glwrap\/GLCallbackEventHandler\\\\.java$\"\n+\/\/\n@@ -171,0 +185,19 @@\n+if (Artifacts.jextractedOpenGL != null\n+        && Artifacts.jextractedOpenGL.jarFile.exists()) {\n+    String exclude = null;\n+    if (Artifacts.jextractedOpenGL.jarFile.contains(\"opengl\/glutKeyboardFunc$func.class\")) {\n+        exclude = \"Callback\";\n+    }else if (Artifacts.jextractedOpenGL.jarFile.contains(\"opengl\/glutKeyboardFunc$callback.class\")) {\n+        exclude = \"Func\";\n+    }else {\n+        println(\"We can't build glwrap because we need to exclude one of GLFuncEventHandler or GLCallbackEventHandler something\");\n+    }\n+    if (exclude != null) {\n+        final var excludeMeSigh = \"^.*\/wrap\/glwrap\/GL\"+exclude+\"EventHandler\\\\.java$\";\n+        Artifacts.glWrap = Script.mavenStyleProject(buildDir,\n+                wrapsDir.dir(\"glwrap\"),\n+                buildDir.jarFile(\"hat-glwrap-1.0.jar\"),\n+                Artifacts.wrap, Artifacts.hatCore, Artifacts.jextractedOpenGL\n+        ).buildExcluding(javaSrc -> javaSrc.matches(excludeMeSigh));\n+    }\n+}\n@@ -172,10 +205,1 @@\n-    Artifacts.glWrap = Script.mavenStyleProject(buildDir,\n-            wrapsDir.dir(\"glwrap\"),\n-            buildDir.jarFile(\"hat-glwrap-1.0.jar\"),\n-            Artifacts.wrap, Artifacts.hatCore, Artifacts.jextractedOpenGL\n-    ).buildExcluding(javaSrc -> javaSrc.matches(\n-            \"^.*\/wrap\/glwrap\/GLCallbackEventHandler\\\\.java$\"\n-           \/\/ \"^.*\/wrap\/glwrap\/GLFuncEventHandler\\\\.java$\"\n-    ));\n-\/\/Objects.nonNull(Artifacts.jextractedOpenCL,Artifacts.jextractedCuda);\n-    if (Artifacts.jextractedCuda != null) {\n+    if (false && Artifacts.jextractedCuda != null ) {\n@@ -200,1 +224,1 @@\n-                Artifacts.hatCore, Artifacts.ffiBackendShared,Artifacts.jextractedOpenCL\n+                Artifacts.hatCore, Artifacts.ffiBackendShared\n@@ -211,0 +235,8 @@\n+    if (ffiBackendsDir.optionalDir(\"cuda\") instanceof Script.DirEntry ffiBackendDir) {\n+        Artifacts.ffiBackendCuda = buildDir.mavenStyleBuild(\n+                ffiBackendDir,\n+                \"hat-backend-ffi-\"+ffiBackendDir.fileName()+ \"-1.0.jar\",\n+                Artifacts.hatCore, Artifacts.ffiBackendShared\n+        );\n+    }\n+\n@@ -219,1 +251,1 @@\n-    if (jextractedBackendsDir.optionalDir(\"opencl\") instanceof Script.DirEntry jextractedBackendDir) {\n+    if (Artifacts.jextractedOpenCL != null && jextractedBackendsDir.optionalDir(\"opencl\") instanceof Script.DirEntry jextractedBackendDir) {\n@@ -227,0 +259,8 @@\n+    if (Artifacts.jextractedCuda != null && jextractedBackendsDir.optionalDir(\"cuda\") instanceof Script.DirEntry jextractedBackendDir) {\n+        Artifacts.jextractedBackendCuda = buildDir.mavenStyleBuild(\n+                jextractedBackendDir,\n+                \"hat-backend-jextracted-\" + jextractedBackendDir.fileName() + \"-1.0.jar\",\n+                Artifacts.hatCore, Artifacts.jextractedCuda, Artifacts.jextractedBackendShared\n+        );\n+    }\n+\n@@ -254,1 +294,1 @@\n-    var nbodyDependencies = List.of(\n+    var nbodyDependencies = new Script.MavenStyleProject[]{\n@@ -262,2 +302,9 @@\n-    );\n-    if (nbodyDependencies.stream().filter(Objects::isNull).count()>1){\n+    };\n+    boolean foundNull = false;\n+\n+    for (var o:nbodyDependencies){\n+       if (o == null){\n+          foundNull = true;\n+       }\n+    }\n+    if (foundNull){\n@@ -268,1 +315,1 @@\n-                nbodyDependencies.toArray(new Script.ClassPathEntryProvider[0])\n+                nbodyDependencies\n","filename":"hat\/hat\/bld.java","additions":65,"deletions":18,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        <profile>\n+  <!--      <profile>\n@@ -45,1 +45,1 @@\n-        <\/profile>\n+        <\/profile> -->\n","filename":"hat\/wrap\/pom.xml","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}