{"files":[{"patch":"@@ -29,0 +29,2 @@\n+import java.util.Collections;\n+import java.util.LinkedHashMap;\n@@ -69,1 +71,1 @@\n-        this.capturedValues = Map.copyOf(capturedValues);\n+        this.capturedValues = Collections.unmodifiableMap(new LinkedHashMap<>(capturedValues));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Quoted.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.util.ArrayList;\n@@ -40,0 +41,2 @@\n+import java.util.Random;\n+import java.util.function.IntSupplier;\n@@ -42,0 +45,1 @@\n+import java.util.random.RandomGenerator;\n@@ -74,0 +78,25 @@\n+    @Test\n+    public void testCaptureMany() {\n+        RandomGenerator rg = RandomGenerator.getDefault();\n+        int[] ia = new int[8];\n+        int i1 = ia[0] = rg.nextInt();\n+        int i2 = ia[1] = rg.nextInt();\n+        int i3 = ia[2] = rg.nextInt();\n+        int i4 = ia[3] = rg.nextInt();\n+        int i5 = ia[4] = rg.nextInt();\n+        int i6 = ia[5] = rg.nextInt();\n+        int i7 = ia[6] = rg.nextInt();\n+        int i8 = ia[7] = rg.nextInt();\n+\n+        Quotable quotable = (Quotable & IntSupplier) () -> i1 + i2 + i3 + i4 + i5 + i6 + i7 + i8;\n+        Quoted quoted = quotable.quoted();\n+        assertEquals(quoted.capturedValues().size(), ia.length);\n+        assertEquals(quoted.op().capturedValues(), new ArrayList<>(quoted.capturedValues().keySet()));\n+        Iterator<Object> it = quoted.capturedValues().values().iterator();\n+        int i = 0;\n+        while (it.hasNext()) {\n+            int actual = (int) ((Var)it.next()).value();\n+            assertEquals(actual, ia[i++]);\n+        }\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuotable.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"}]}