[{"commit":{"message":"Apply suggestions"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"ef931463d1701f078b2969ca55aade671f77f78a"},{"commit":{"message":"Update test cases"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"557b3e8705749734f6c455f34cb9c579e8c9c18f"},{"commit":{"message":"Add test cases"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"9fe2a5a523cec1ebb3e5bb0af7d5676d02570715"},{"commit":{"message":"Add test cases"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"74aed58941884509f37342d78579398ef10c6546"},{"commit":{"message":"Add test cases"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"4aa9975188744b01ade4fbbc77032319939db331"},{"commit":{"message":"Add more test cases"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"86baf4d333112398e4855a10943a27bb215089b7"},{"commit":{"message":"Refactor to have one test method + add more test cases"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"42fad6b022a68558710ebdae74e7c88c11da7f8f"},{"commit":{"message":"Refactor"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"0fc7b89e844b0c74a6dd09fdbb5f6f74beced01b"},{"commit":{"message":"Test int to float + assert the lowered model contains the right conversion method"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"794974be05c3e5cd847267a74311fe7ea6d1e3b1"},{"commit":{"message":"Revert back to building the model explicitly"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"b8500077543be05bfea97b80bbb9e835c1041b69"},{"commit":{"message":"Create JavaType of ExactConversionSupport from its class descriptor (compiler couldn't find the class)"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"622612a0fbe077f7afc60f4152053add195a9d3e"},{"commit":{"message":"Update how we build the model for testing a conversion"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"80126960889ab711744873fb0b2a56d858e63aed"},{"commit":{"message":"Rename test file"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"60c5f55f6801ba8d6d09b9c14c4fda744f81a941"},{"commit":{"message":"Remove unnecessary import"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"faa8dd515d565e6fc07ec8b31879b143883a32d8"},{"commit":{"message":"Test patterns of int"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"962e94ccf9aa5c9046a34797e17cc729ee31cff7"},{"commit":{"message":"Align names with JLS"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"14150aed90bc44586247510f4bda59ecdfd332e4"},{"commit":{"message":"Apply suggestions"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"460c280f472d1afbc774093b837ea322bb0b1fe0"},{"commit":{"message":"Update the lowering of type pattern to support primitives in patterns"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"c31e5e95ae5233d77e6ea4dd0c59da4a9336c6df"}]