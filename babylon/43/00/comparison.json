{"files":[{"patch":"@@ -127,20 +127,16 @@\n-    \/\/ this test will fail for now\n-    \/\/ the reason is wildcard types not modeled\n-    \/\/ the type of the processor X will be java.lang.StringTemplate$Processor\n-    \/\/ but the expected type is java.lang.StringTemplate$Processor<java.lang.Object, java.lang.RuntimeException>\n-\/\/    @CodeReflection\n-\/\/    @IR(\"\"\"\n-\/\/            func @\"f4\" ()void -> {\n-\/\/                  %0 : java.lang.StringTemplate$Processor<java.lang.String, java.lang.RuntimeException> = field.load @\"java.lang.StringTemplate::STR()java.lang.StringTemplate$Processor<java.lang.String, java.lang.RuntimeException>\";\n-\/\/                  %1 : Var<java.lang.StringTemplate$Processor<java.lang.Object, java.lang.RuntimeException>> = var %0 @\"X\";\n-\/\/                  %2 : java.lang.StringTemplate$Processor<java.lang.Object, java.lang.RuntimeException> = var.load %1;\n-\/\/                  %3 : java.lang.String = constant @\"some template\";\n-\/\/                  %4 : java.lang.Object = java.stringTemplate %2 %3;\n-\/\/                  %5 : Var<java.lang.Object> = var %4 @\"o\";\n-\/\/                  return;\n-\/\/            };\n-\/\/            \"\"\")\n-\/\/    static void f4() {\n-\/\/        StringTemplate.Processor<?, RuntimeException> X = STR;\n-\/\/        Object o = X.\"some template\";\n-\/\/    }\n+    @CodeReflection\n+    @IR(\"\"\"\n+            func @\"f4\" ()void -> {\n+                  %0 : java.lang.StringTemplate$Processor<java.lang.String, java.lang.RuntimeException> = field.load @\"java.lang.StringTemplate::STR()java.lang.StringTemplate$Processor<java.lang.String, java.lang.RuntimeException>\";\n+                  %1 : Var<java.lang.StringTemplate$Processor> = var %0 @\"X\";\n+                  %2 : java.lang.StringTemplate$Processor = var.load %1;\n+                  %3 : java.lang.String = constant @\"some template\";\n+                  %4 : java.lang.Object = java.stringTemplate %2 %3;\n+                  %5 : Var<java.lang.Object> = var %4 @\"o\";\n+                  return;\n+            };\n+            \"\"\")\n+    static void f4() {\n+        StringTemplate.Processor<?, RuntimeException> X = STR;\n+        Object o = X.\"some template\";\n+    }\n","filename":"test\/langtools\/tools\/javac\/reflect\/StringTemplateTest.java","additions":16,"deletions":20,"binary":false,"changes":36,"status":"modified"}]}