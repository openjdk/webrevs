{"files":[{"patch":"@@ -85,1 +85,1 @@\n-                    computeContext.computeCallGraph.entrypoint.lowered.op().writeTo(System.out);\n+                    System.out.println(computeContext.computeCallGraph.entrypoint.lowered.op().toText());\n","filename":"hat\/core\/src\/main\/java\/hat\/backend\/DebugBackend.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,4 +28,0 @@\n-import java.io.OutputStream;\n-import java.io.OutputStreamWriter;\n-import java.io.Writer;\n-\n@@ -55,1 +51,0 @@\n-import java.nio.charset.StandardCharsets;\n@@ -467,18 +462,0 @@\n-    \/**\n-     * Writes the textual form of this operation to the given output stream, using the UTF-8 character set.\n-     *\n-     * @param out the stream to write to.\n-     *\/\n-    public void writeTo(OutputStream out) {\n-        writeTo(new OutputStreamWriter(out, StandardCharsets.UTF_8));\n-    }\n-\n-    \/**\n-     * Writes the textual form of this operation to the given writer.\n-     *\n-     * @param w the writer to write to.\n-     *\/\n-    public void writeTo(Writer w) {\n-        OpWriter.writeTo(w, this);\n-    }\n-\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/Op.java","additions":0,"deletions":23,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -28,4 +28,2 @@\n-import java.io.IOException;\n-import java.io.StringWriter;\n-import java.io.UncheckedIOException;\n-import java.io.Writer;\n+import java.io.*;\n+\n@@ -37,0 +35,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -233,3 +232,1 @@\n-     * Writes a code model (an operation) to the character stream.\n-     * <p>\n-     * The character stream will be flushed after the model is writen.\n+     * Writes a code model (an operation) to the output stream, using the UTF-8 character set.\n@@ -237,1 +234,1 @@\n-     * @param w the character stream\n+     * @param out the output stream\n@@ -240,8 +237,2 @@\n-    public static void writeTo(Writer w, Op op) {\n-        OpWriter ow = new OpWriter(w);\n-        ow.writeOp(op);\n-        try {\n-            w.flush();\n-        } catch (IOException e) {\n-            throw new UncheckedIOException(e);\n-        }\n+    public static void writeTo(OutputStream out, Op op, Option... options) {\n+        writeTo(new OutputStreamWriter(out, StandardCharsets.UTF_8), op, options);\n@@ -270,11 +261,0 @@\n-    \/**\n-     * Writes a code model (an operation) to a string.\n-     *\n-     * @param op the code model\n-     *\/\n-    public static String toText(Op op) {\n-        StringWriter w = new StringWriter();\n-        writeTo(w, op);\n-        return w.toString();\n-    }\n-\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/OpWriter.java","additions":7,"deletions":27,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -267,1 +267,1 @@\n-                original.writeTo(System.err);\n+                System.err.println(original.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/CoreBinaryOpsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -66,1 +66,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -80,1 +80,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestArrayCreation.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -68,1 +68,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -82,1 +82,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestArrayTypes.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -69,1 +69,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -83,1 +83,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -97,1 +97,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -111,1 +111,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -125,1 +125,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -139,1 +139,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -153,1 +153,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -167,1 +167,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -181,1 +181,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -195,1 +195,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBinops.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -77,1 +77,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBlockOp.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -71,1 +71,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -111,1 +111,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -115,1 +115,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -159,1 +159,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -163,1 +163,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -209,1 +209,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -213,1 +213,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBreakContinue.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+\n@@ -101,1 +102,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -131,1 +132,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestClosureOps.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -57,1 +57,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestConditionalExpression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+\n@@ -82,1 +83,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -86,1 +87,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestConditionalOp.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-            f.writeTo(System.out);\n+            System.out.println(f.toText());\n@@ -184,1 +184,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -188,1 +188,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestConstants.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+\n@@ -135,1 +136,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -216,1 +217,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -280,1 +281,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestDominate.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -72,1 +72,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -91,1 +91,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -95,1 +95,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestEnhancedForOp.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+\n@@ -119,1 +120,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -212,1 +213,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -326,1 +327,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -451,1 +452,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestExceptionRegionOps.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -62,1 +62,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -81,1 +81,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -85,1 +85,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -106,1 +106,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -110,1 +110,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestForOp.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -79,1 +79,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestIfOp.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+\n@@ -62,1 +63,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -90,1 +91,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -106,1 +107,1 @@\n-        cop.writeTo(System.out);\n+        System.out.println(cop.toText());\n@@ -108,1 +109,1 @@\n-        lcop.writeTo(System.out);\n+        System.out.println(lcop.toText());\n@@ -120,1 +121,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -135,1 +136,1 @@\n-        cop.writeTo(System.out);\n+        System.out.println(cop.toText());\n@@ -137,1 +138,1 @@\n-        lcop.writeTo(System.out);\n+        System.out.println(lcop.toText());\n@@ -155,1 +156,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -170,1 +171,1 @@\n-        cop.writeTo(System.out);\n+        System.out.println(cop.toText());\n@@ -181,1 +182,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -184,1 +185,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -207,1 +208,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestInline.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestInvokeSuper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+\n@@ -103,1 +104,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -138,1 +139,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -178,1 +179,1 @@\n-        g.writeTo(System.out);\n+        System.out.println(g.toText());\n@@ -185,1 +186,1 @@\n-            q.op().writeTo(System.out);\n+            System.out.println(q.op().toText());\n@@ -203,1 +204,1 @@\n-            q.op().writeTo(System.out);\n+            System.out.println(q.op().toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLambdaOps.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+\n@@ -254,1 +255,2 @@\n-        qr.expression().writeTo(System.out);\n+        Op op1 = qr.expression();\n+        System.out.println(op1.toText());\n@@ -259,1 +261,2 @@\n-        qr2.expression().writeTo(System.out);\n+        Op op = qr2.expression();\n+        System.out.println(op.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLinqUsingQuoted.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -99,1 +99,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -115,1 +115,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -140,1 +140,1 @@\n-        fc.writeTo(System.out);\n+        System.out.println(fc.toText());\n@@ -143,1 +143,1 @@\n-        fc.writeTo(System.out);\n+        System.out.println(fc.toText());\n@@ -173,1 +173,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -192,1 +192,1 @@\n-        fc.writeTo(System.out);\n+        System.out.println(fc.toText());\n@@ -195,1 +195,1 @@\n-        fc.writeTo(System.out);\n+        System.out.println(fc.toText());\n@@ -205,1 +205,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -219,1 +219,1 @@\n-        fc.writeTo(System.out);\n+        System.out.println(fc.toText());\n@@ -222,1 +222,1 @@\n-        fc.writeTo(System.out);\n+        System.out.println(fc.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLocalTransformationsAdaption.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+\n@@ -75,1 +76,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -79,1 +80,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -119,1 +120,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -122,1 +123,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPatterns.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -35,1 +35,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPatterns2.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-        model.writeTo(System.out);\n+        System.out.println(model.toText());\n@@ -150,1 +150,1 @@\n-        lmodel.writeTo(System.out);\n+        System.out.println(lmodel.toText());\n@@ -178,1 +178,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -181,1 +181,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -194,1 +194,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -197,1 +197,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -211,1 +211,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -214,1 +214,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -228,1 +228,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -231,1 +231,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -245,1 +245,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -248,1 +248,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -262,1 +262,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -265,1 +265,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -279,1 +279,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -282,1 +282,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -296,1 +296,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -299,1 +299,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -313,1 +313,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -316,1 +316,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -332,1 +332,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -335,1 +335,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -351,1 +351,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -354,1 +354,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -41,1 +41,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -44,1 +44,1 @@\n-        f2.writeTo(System.out);\n+        System.out.println(f2.toText());\n@@ -46,1 +46,1 @@\n-        lf2.writeTo(System.out);\n+        System.out.println(lf2.toText());\n@@ -50,1 +50,2 @@\n-        SSA.transform(lower(f)).writeTo(System.out);\n+        Op op = SSA.transform(lower(f));\n+        System.out.println(op.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestRemoveFinalVars.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -160,1 +160,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -163,1 +163,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestSSA.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -104,2 +104,2 @@\n-        model.writeTo(System.out);\n-        f_transformed.writeTo(System.out);\n+        System.out.println(model.toText());\n+        System.out.println(f_transformed.toText());\n@@ -184,1 +184,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestStringConcatTransform.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+\n@@ -71,1 +72,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -75,1 +76,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -128,1 +129,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -132,1 +133,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -188,1 +189,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -192,1 +193,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestTry.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+\n@@ -69,1 +70,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -73,1 +74,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -105,1 +106,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -109,1 +110,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -141,1 +142,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -145,1 +146,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -175,1 +176,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -179,1 +180,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestTryFinally.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+\n@@ -89,1 +90,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -93,1 +94,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -148,1 +149,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -152,1 +153,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -216,1 +217,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -220,1 +221,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -267,1 +268,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -271,1 +272,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -313,1 +314,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -317,1 +318,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -365,1 +366,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -369,1 +370,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -404,1 +405,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -408,1 +409,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestTryNested.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -85,1 +85,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestUninitializedVariable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+\n@@ -86,1 +87,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestUsesDependsOn.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -62,1 +62,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -80,1 +80,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -84,1 +84,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestWhileOp.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+\n@@ -55,1 +56,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -58,1 +59,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -67,1 +68,1 @@\n-        dff_dx.writeTo(System.out);\n+        System.out.println(dff_dx.toText());\n@@ -73,1 +74,1 @@\n-        dff_dy.writeTo(System.out);\n+        System.out.println(dff_dy.toText());\n@@ -95,1 +96,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -98,1 +99,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -101,1 +102,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -110,1 +111,1 @@\n-        df_dx.writeTo(System.out);\n+        System.out.println(df_dx.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/TestForwardAutoDiff.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+\n@@ -102,1 +103,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -105,1 +106,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestArrayCreation.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -649,1 +649,1 @@\n-            Op.ofMethod(d.testMethod).ifPresent(f -> f.writeTo(System.out));\n+            Op.ofMethod(d.testMethod).ifPresent(f -> System.out.println(f.toText()));\n@@ -665,1 +665,1 @@\n-            Op.ofMethod(d.testMethod).ifPresent(f -> f.writeTo(System.out));\n+            Op.ofMethod(d.testMethod).ifPresent(f -> System.out.println(f.toText()));\n@@ -667,1 +667,1 @@\n-            flift.writeTo(System.out);\n+            System.out.println(flift.toText());\n@@ -720,2 +720,2 @@\n-            func.writeTo(System.out);\n-            lfunc.writeTo(System.out);\n+            System.out.println(func.toText());\n+            System.out.println(lfunc.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -83,1 +83,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestInvokeSuper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-        flift.writeTo(System.out);\n+        System.out.println(flift.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestLiftCustomBytecode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+\n@@ -70,1 +71,1 @@\n-        flift.writeTo(System.out);\n+        System.out.println(flift.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestLiftExample.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -83,1 +83,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestNestedCapturingLambda.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+\n@@ -58,1 +59,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -62,1 +63,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestQuoted.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+\n@@ -143,1 +144,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -146,1 +147,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSlots.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -24,1 +24,0 @@\n-import java.io.StringWriter;\n@@ -178,5 +177,1 @@\n-        StringWriter fw = new StringWriter();\n-        first.writeTo(fw);\n-        StringWriter sw = new StringWriter();\n-        second.writeTo(sw);\n-        printInColumns(fw.toString().lines().toList(), sw.toString().lines().toList());\n+        printInColumns(first.toText().lines().toList(), second.toText().lines().toList());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+\n@@ -261,1 +262,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -264,1 +265,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTry.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+\n@@ -197,1 +198,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -200,1 +201,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinally.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+\n@@ -220,1 +221,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -223,1 +224,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinallyNested.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -34,1 +34,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestVarArg.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -67,1 +67,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -70,1 +70,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -73,1 +73,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/expression\/TestExpressionElimination.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -76,1 +76,1 @@\n-            f.writeTo(System.out);\n+            System.out.println(f.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/CodeReflectionTester.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -58,1 +58,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -74,1 +74,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -78,1 +78,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/TestStream.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -58,1 +58,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n@@ -74,1 +74,1 @@\n-        f.writeTo(System.out);\n+        System.out.println(f.toText());\n@@ -78,1 +78,1 @@\n-        lf.writeTo(System.out);\n+        System.out.println(lf.toText());\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/TestStreamUsingQuotable.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}