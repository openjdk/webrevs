{"files":[{"patch":"@@ -41,3 +41,0 @@\n-    public BranchCompactor() {\n-    }\n-\n@@ -47,0 +44,3 @@\n+    public BranchCompactor() {\n+    }\n+\n@@ -54,1 +54,1 @@\n-                \/\/all other instructions and pseudo instructions are passed\n+                \/\/all other elements are passed\n@@ -57,12 +57,24 @@\n-        } else switch (coe) {\n-            case LabelTarget lt -> {\n-                if (branch.target() == lt.label()) {\n-                    \/\/skip branch to immediate target\n-                    branch = null;\n-                    \/\/flush buffer\n-                    buffer.forEach(cob::with);\n-                    buffer.clear();\n-                    cob.with(coe);\n-                } else {\n-                    \/\/buffer other targets\n-                    buffer.add(lt);\n+        } else {\n+            switch (coe) {\n+                case LabelTarget lt -> {\n+                    if (branch.target() == lt.label()) {\n+                        \/\/skip branch to immediate target\n+                        branch = null;\n+                        \/\/flush the buffer\n+                        atEnd(cob);\n+                        \/\/pass the target\n+                        cob.with(lt);\n+                    } else {\n+                        \/\/buffer other targets\n+                        buffer.add(lt);\n+                    }\n+                }\n+                case PseudoInstruction pi -> {\n+                    \/\/buffer pseudo instructions\n+                    buffer.add(pi);\n+                }\n+                default -> {\n+                    \/\/any other instruction flushes the branch and buffer\n+                    atEnd(cob);\n+                    \/\/replay the code element\n+                    accept(cob, coe);\n@@ -70,10 +82,0 @@\n-            }\n-            case PseudoInstruction pi -> {\n-                \/\/buffer pseudo instructions\n-                buffer.add(pi);\n-            }\n-            default -> {\n-                \/\/any other instruction flushes the branch and buffer\n-                atEnd(cob);\n-                \/\/the code element is replayed\n-                accept(cob, coe);\n@@ -83,0 +85,1 @@\n+\n@@ -85,3 +88,5 @@\n-        \/\/flush the branch\n-        cob.with(branch);\n-        branch = null;\n+        if (branch != null) {\n+            \/\/flush the branch\n+            cob.with(branch);\n+            branch = null;\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BranchCompactor.java","additions":34,"deletions":29,"binary":false,"changes":63,"status":"modified"}]}