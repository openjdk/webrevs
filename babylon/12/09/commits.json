[{"commit":{"message":"simplified block index query after PR#14 fix"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"5b4ca12d4af65056e1a2c3925a711b49dd260551"},{"commit":{"message":"applied suggested pattern matching"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BranchCompactor.java"}],"sha":"b4ef27f72ae44fcd51887e572b13832dd6f139d3"},{"commit":{"message":"BranchCompactor cleanup"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BranchCompactor.java"}],"sha":"a94c0177dfc1a48d9dbe53000779f58a47aa3f03"},{"commit":{"message":"rollback of too ambitious BranchCompactor"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BranchCompactor.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBranchCompactor.java"}],"sha":"38b5c19d717e444fa93a191705ef3cd60a7e7f86"},{"commit":{"message":"Apply suggestions from code review\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BranchCompactor.java"}],"sha":"f40a53a1c5209deece189936b4b026a836cee15b"},{"commit":{"message":"added TestBranchCompactor"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BranchCompactor.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBranchCompactor.java"}],"sha":"8a52169348cf36d71b6d434ca4a133887c2ea8ed"},{"commit":{"message":"BranchCompactor improved to compact nested sequences of one conditional and one unconditional branch in a single pass."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BranchCompactor.java"}],"sha":"39287b699ea9246032ad5d74d0f4ed49603fc8ff"},{"commit":{"message":"initial version of BranchCompactor skipping branches to immediate targets"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BranchCompactor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"779a658cb6fdaa9e46097e719147d79929ccd25a"},{"commit":{"message":"removed obsolete imports"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestNew.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSimple.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTry.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinally.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinallyNested.java"}],"sha":"61254b3019b420a44156a89b56912f74f9ad4c44"},{"commit":{"message":"applied PR recommendations"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"333751d7189cae7e95c09f53a34af896607935ec"},{"commit":{"message":"Update src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"1393a24ffb0c429bbedfe089265ae6e769ecb9a6"},{"commit":{"message":"typo fix"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"294c69ed01171464b9bb5c2ae3f7948dfe68042b"},{"commit":{"message":"fixed exception regions calculation in BytecodeGenerator\n+ re-enabled tests"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinally.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinallyNested.java"}],"sha":"381e4de082578de2e162605e714e4187055c802a"}]