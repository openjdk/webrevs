{"files":[{"patch":"@@ -125,1 +125,1 @@\n-        \/\/ Array\n+        \/\/ Parse array-like syntax []+\n@@ -134,0 +134,1 @@\n+            \/\/ If array-like then type definition becomes a child with identifier [+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/DescParser.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -52,6 +52,1 @@\n-        int dimensions = dimensions(t.identifier);\n-        if (dimensions > 0 && t.arguments.size() == 1) {\n-            t = t.arguments.getFirst();\n-        }\n-\n-        if (dimensions == 0 && t.arguments.isEmpty()) {\n+        if (t.arguments.isEmpty()) {\n@@ -59,9 +54,1 @@\n-        } else {\n-            StringBuilder s = new StringBuilder();\n-            s.append(t.identifier);\n-            if (!t.arguments.isEmpty()) {\n-                String args = t.arguments.stream()\n-                        .map(Object::toString)\n-                        .collect(Collectors.joining(\", \", \"<\", \">\"));\n-                s.append(args);\n-            }\n+        }\n@@ -69,0 +56,4 @@\n+        \/\/ Unpack array-like identifier [+\n+        int dimensions = 0;\n+        if (t.arguments.size() == 1) {\n+            dimensions = dimensions(t.identifier);\n@@ -70,1 +61,1 @@\n-                s.append(\"[]\".repeat(dimensions));\n+                t = t.arguments.getFirst();\n@@ -72,0 +63,10 @@\n+        }\n+\n+        StringBuilder s = new StringBuilder();\n+        s.append(t.identifier);\n+        if (!t.arguments.isEmpty()) {\n+            String args = t.arguments.stream()\n+                    .map(Object::toString)\n+                    .collect(Collectors.joining(\", \", \"<\", \">\"));\n+            s.append(args);\n+        }\n@@ -73,1 +74,3 @@\n-            return s.toString();\n+        \/\/ Write out array-like syntax at end []+\n+        if (dimensions > 0) {\n+            s.append(\"[]\".repeat(dimensions));\n@@ -75,0 +78,2 @@\n+\n+        return s.toString();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/TypeDefinition.java","additions":22,"deletions":17,"binary":false,"changes":39,"status":"modified"}]}