[{"commit":{"message":"Separate transformation from testing"},"files":[{"filename":"ir_text_to_ir_builder\/compiler_tests_stats.sh"},{"filename":"ir_text_to_ir_builder\/hat_examples_stats.sh"},{"filename":"ir_text_to_ir_builder\/transform_compiler_tests.sh"},{"filename":"ir_text_to_ir_builder\/transform_hat_examples.sh"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilderTester.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/OpFieldAndIR.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/Utils.java"}],"sha":"75743ad82480c7d50eabc27d7d78406a65319b01"},{"commit":{"message":"Add script for running text to code builder on hat examples"},"files":[],"sha":"f54adb7d786a1d07b9ab94874d155c4ef69989b2"},{"commit":{"message":"Remove unused method."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"0819eaa6f7ea3ed76c2e478e9e745e6f523780a9"},{"commit":{"message":"Write the columns names after all processing is done"},"files":[],"sha":"c42b2b0edf764c95a9ba511b937cb781dc232736"},{"commit":{"message":"Write data to csv file"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"}],"sha":"b714c13a5b481e1c22df27c693fdd8f1a8ff69e8"},{"commit":{"message":"Modify the script to run on all compiler tests classes one by one"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"}],"sha":"80ee7f84e9e6ba393726611bc7391a145b175f68"},{"commit":{"message":"Box value before invoking Map.put"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/OpBuilder.java"}],"sha":"f661a2dfad8daf49fac5465c7c918ea345979183"},{"commit":{"message":"Move record declaration before use"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"}],"sha":"8e9e79634ba7ae318a8009799a013eb432574555"},{"commit":{"message":"Remove some comments"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"}],"sha":"342a02fc86491ad54b935b19aacf57cfecd17dcb"},{"commit":{"message":"Add main method"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"}],"sha":"f0d7f8ca69e12871027de91e0fe44b3b94c8b866"},{"commit":{"message":"Fix a typo"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"}],"sha":"f8647056c4fd667f8ea1e75c8b4c4bba5a3cebdd"},{"commit":{"message":"Refactor"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"}],"sha":"d871a21a3103893d1c4beb85e4188f2217e88ab5"},{"commit":{"message":"Write transformation as ClassTransform"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"}],"sha":"d476a93b82aa40d67aab9bb79d664eb61e367262"},{"commit":{"message":"Map FieldEntry to textual representation"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"}],"sha":"5191810c1d8d14ee7aa79c31cb123e62b5e8d623"},{"commit":{"message":"Assert on the value of executing builder method"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"}],"sha":"176108a85bb6ab609ad2c7d25f704463d15e4455"},{"commit":{"message":"Change bytecode generation for NewOp to use constructor type as owner"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"3da04425a1a64c4691be92f7a224131547ef26d5"},{"commit":{"message":"Test replacing textual representation with method that builds the code model"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IR.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/IRTextToIRBuilder.java"}],"sha":"d9e5e196c883486ddde4f122db085b34517d5979"},{"commit":{"message":"Add test cases for empty var arg, long and double"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestVarArg.java"}],"sha":"b2a2680f3525af3de0667c2bfa9e61e583f5bd84"},{"commit":{"message":"Move code related to InvokeOp from processOperands(Op)."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"3e3a108c626f27248b3a74f71109e6f3a408e7c4"},{"commit":{"message":"Support bytecode generation for invocation of varArg method"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestVarArg.java"}],"sha":"8aa9c038ddf1177f510be6cf02e23e89f65330db"}]