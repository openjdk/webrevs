{"files":[{"patch":"@@ -1759,0 +1759,1 @@\n+            enhancedSw = enhancedSw && !isEnum(tree.selector.type.tsym);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -316,0 +316,167 @@\n+\n+    @IR(\"\"\"\n+            func @\"caseConstantNullLabel\" (%0 : java.lang.String)void -> {\n+                %1 : Var<java.lang.String> = var %0 @\"s\";\n+                %2 : java.lang.String = var.load %1;\n+                java.switch.statement %2\n+                    (%3 : java.lang.String)boolean -> {\n+                        %4 : java.lang.Object = constant @null;\n+                        %5 : boolean = invoke %3 %4 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                        yield %5;\n+                    }\n+                    ()void -> {\n+                        %6 : java.io.PrintStream = field.load @\"java.lang.System::out()java.io.PrintStream\";\n+                        %7 : java.lang.String = constant @\"null\";\n+                        invoke %6 %7 @\"java.io.PrintStream::println(java.lang.String)void\";\n+                        yield;\n+                    }\n+                    ()void -> {\n+                        yield;\n+                    }\n+                    ()void -> {\n+                        %8 : java.io.PrintStream = field.load @\"java.lang.System::out()java.io.PrintStream\";\n+                        %9 : java.lang.String = constant @\"non null\";\n+                        invoke %8 %9 @\"java.io.PrintStream::println(java.lang.String)void\";\n+                        yield;\n+                    };\n+                return;\n+            };\n+            \"\"\")\n+    @CodeReflection\n+    private static void caseConstantNullLabel(String s) {\n+        switch (s) {\n+            case null -> System.out.println(\"null\");\n+            default -> System.out.println(\"non null\");\n+        };\n+    }\n+\n+    @IR(\"\"\"\n+            func @\"caseConstantFallThrough\" (%0 : char)java.lang.String -> {\n+                %1 : Var<char> = var %0 @\"c\";\n+                %2 : char = var.load %1;\n+                %3 : java.lang.String = java.switch.expression %2\n+                    (%4 : char)boolean -> {\n+                        %5 : char = constant @\"A\";\n+                        %6 : boolean = eq %4 %5;\n+                        yield %6;\n+                    }\n+                    ()java.lang.String -> {\n+                        java.switch.fallthrough;\n+                    }\n+                    (%7 : char)boolean -> {\n+                        %8 : char = constant @\"B\";\n+                        %9 : boolean = eq %7 %8;\n+                        yield %9;\n+                    }\n+                    ()java.lang.String -> {\n+                        %10 : java.lang.String = constant @\"A or B\";\n+                        java.yield %10;\n+                    }\n+                    ()void -> {\n+                        yield;\n+                    }\n+                    ()java.lang.String -> {\n+                        %11 : java.lang.String = constant @\"Neither A nor B\";\n+                        java.yield %11;\n+                    };\n+                return %3;\n+            };\n+            \"\"\")\n+    @CodeReflection\n+    private static String caseConstantFallThrough(char c) {\n+        return switch (c) {\n+            case 'A':\n+            case 'B':\n+                yield \"A or B\";\n+            default:\n+                yield \"Neither A nor B\";\n+        };\n+    }\n+\n+    enum Day {\n+        MON, TUE, WED, THU, FRI, SAT, SUN\n+    }\n+    @IR(\"\"\"\n+            func @\"caseConstantEnum\" (%0 : SwitchStatementTest$Day)void -> {\n+                %1 : Var<SwitchStatementTest$Day> = var %0 @\"d\";\n+                %2 : SwitchStatementTest$Day = var.load %1;\n+                java.switch.statement %2\n+                    (%3 : SwitchStatementTest$Day)boolean -> {\n+                        %4 : boolean = java.cor\n+                            ()boolean -> {\n+                                %5 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::MON()SwitchStatementTest$Day\";\n+                                %6 : boolean = invoke %3 %5 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                                yield %6;\n+                            }\n+                            ()boolean -> {\n+                                %7 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::FRI()SwitchStatementTest$Day\";\n+                                %8 : boolean = invoke %3 %7 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                                yield %8;\n+                            }\n+                            ()boolean -> {\n+                                %9 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::SUN()SwitchStatementTest$Day\";\n+                                %10 : boolean = invoke %3 %9 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                                yield %10;\n+                            };\n+                        yield %4;\n+                    }\n+                    ()void -> {\n+                        %11 : java.io.PrintStream = field.load @\"java.lang.System::out()java.io.PrintStream\";\n+                        %12 : int = constant @\"6\";\n+                        invoke %11 %12 @\"java.io.PrintStream::println(int)void\";\n+                        yield;\n+                    }\n+                    (%13 : SwitchStatementTest$Day)boolean -> {\n+                        %14 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::TUE()SwitchStatementTest$Day\";\n+                        %15 : boolean = invoke %13 %14 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                        yield %15;\n+                    }\n+                    ()void -> {\n+                        %16 : java.io.PrintStream = field.load @\"java.lang.System::out()java.io.PrintStream\";\n+                        %17 : int = constant @\"7\";\n+                        invoke %16 %17 @\"java.io.PrintStream::println(int)void\";\n+                        yield;\n+                    }\n+                    (%18 : SwitchStatementTest$Day)boolean -> {\n+                        %19 : boolean = java.cor\n+                            ()boolean -> {\n+                                %20 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::THU()SwitchStatementTest$Day\";\n+                                %21 : boolean = invoke %18 %20 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                                yield %21;\n+                            }\n+                            ()boolean -> {\n+                                %22 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::SAT()SwitchStatementTest$Day\";\n+                                %23 : boolean = invoke %18 %22 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                                yield %23;\n+                            };\n+                        yield %19;\n+                    }\n+                    ()void -> {\n+                        %24 : java.io.PrintStream = field.load @\"java.lang.System::out()java.io.PrintStream\";\n+                        %25 : int = constant @\"8\";\n+                        invoke %24 %25 @\"java.io.PrintStream::println(int)void\";\n+                        yield;\n+                    }\n+                    (%26 : SwitchStatementTest$Day)boolean -> {\n+                        %27 : SwitchStatementTest$Day = field.load @\"SwitchStatementTest$Day::WED()SwitchStatementTest$Day\";\n+                        %28 : boolean = invoke %26 %27 @\"java.util.Objects::equals(java.lang.Object, java.lang.Object)boolean\";\n+                        yield %28;\n+                    }\n+                    ()void -> {\n+                        %29 : java.io.PrintStream = field.load @\"java.lang.System::out()java.io.PrintStream\";\n+                        %30 : int = constant @\"9\";\n+                        invoke %29 %30 @\"java.io.PrintStream::println(int)void\";\n+                        yield;\n+                    };\n+                return;\n+            };\n+            \"\"\")\n+    @CodeReflection\n+    private static void caseConstantEnum(Day d) {\n+        switch (d) {\n+            case MON, FRI, SUN -> System.out.println(6);\n+            case TUE -> System.out.println(7);\n+            case THU, SAT -> System.out.println(8);\n+            case WED -> System.out.println(9);\n+        }\n+    }\n","filename":"test\/langtools\/tools\/javac\/reflect\/SwitchStatementTest.java","additions":167,"deletions":0,"binary":false,"changes":167,"status":"modified"}]}