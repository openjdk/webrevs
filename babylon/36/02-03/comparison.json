{"files":[{"patch":"@@ -604,1 +604,1 @@\n-            Boolean testResult = (Boolean) invokeBody(l,testBody,oc);\n+            boolean testResult = (boolean) invokeBody(l,testBody,oc);\n@@ -607,2 +607,2 @@\n-                    Body messageBlock = _assert.bodies.get(1);\n-                    String message = String.valueOf(invokeBody(l, messageBlock, oc));\n+                    Body messageBody = _assert.bodies.get(1);\n+                    String message = String.valueOf(invokeBody(l, messageBody, oc));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -134,0 +134,8 @@\n+    @Test\n+    public void testAssertExpr1() {\n+        AssertionError ae = testThrows(\"assertExpr1\");\n+        if (ae.getMessage() == null || !ae.getMessage().equals(String.valueOf(FAILUREINT + FAILURELONG))){\n+            Assert.fail(\"Assertion failure messages do not match.\");\n+        }\n+    }\n+\n@@ -216,0 +224,7 @@\n+    @CodeReflection\n+    public static void assertExpr1() {\n+        int i = FAILUREINT;\n+        long l = FAILURELONG;\n+        assert false : i + l;\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/interpreter\/TestAssert.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}