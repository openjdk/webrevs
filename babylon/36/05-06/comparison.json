{"files":[{"patch":"@@ -152,0 +152,5 @@\n+    @Test\n+    public void testAssertExpr3() {\n+         testRun(\"assertExpr3\", List.of(int.class), 52);\n+    }\n+\n@@ -155,0 +160,21 @@\n+    private static void testRun(String methodName, List<Class<?>> params, Object...args) {\n+        try {\n+            Class<TestAssert> clazz = TestAssert.class;\n+            Method method = clazz.getDeclaredMethod(methodName,params.toArray(new Class[params.size()]));\n+            CoreOps.FuncOp f = method.getCodeModel().orElseThrow();\n+\n+            \/\/Ensure we're fully lowered before testing.\n+            final var fz = f.transform((b, o) -> {\n+                if (o instanceof Op.Lowerable l) {\n+                    b = l.lower(b);\n+                } else {\n+                    b.op(o);\n+                }\n+                return b;\n+            });\n+\n+            Interpreter.invoke(MethodHandles.lookup(), fz ,args);\n+        } catch (NoSuchMethodException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n@@ -266,0 +292,8 @@\n+    @CodeReflection\n+    public static void assertExpr3(int iz) {\n+        int i = FAILUREINT;\n+        long l = FAILURELONG;\n+        assert true : (i > iz) ? i + l : i;\n+        String s = \"\";\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/interpreter\/TestAssert.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"}]}