{"files":[{"patch":"@@ -181,2 +181,4 @@\n-    private static int myIntrinsic(int a, int b) {\n-        return a + b;\n+    \/\/ We replace an invoke node with a specific function name (\"intrinsicFMA\") with another function\n+    \/\/ that performs an FMA.\n+    private static float intrinsicsFMA(float a, float b, float c) {\n+        return Math.fma(a, b, c);\n@@ -186,2 +188,2 @@\n-    public static int myFunction(int a, int b) {\n-        return myIntrinsic(a, b);\n+    public static float myFunction(float a, float b, float c) {\n+        return intrinsicsFMA(a, b, c);\n@@ -221,1 +223,1 @@\n-            return Map.of(\"\", this.typeDescriptor);\n+            return Map.of(\"\", \"dialect.\" + this.opName());\n@@ -239,1 +241,1 @@\n-            if (op instanceof JavaOp.InvokeOp invokeOp) {\n+            if (op instanceof JavaOp.InvokeOp invokeOp && invokeOp.invokeDescriptor().name().equals(\"intrinsicsFMA\")) {\n@@ -245,1 +247,1 @@\n-                MyInvoke myCustomFunction = new MyInvoke(\"myCustomFunction\", JavaType.INT, outputOperands);\n+                MyInvoke myCustomFunction = new MyInvoke(\"intrinsicsFMA\", invokeOp.resultType(), outputOperands);\n@@ -275,0 +277,2 @@\n+        System.out.println(\"Testing Dialects in Code-Reflection\");\n+\n","filename":"cr-examples\/samples\/src\/main\/java\/oracle\/code\/samples\/DialectSample.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"}]}