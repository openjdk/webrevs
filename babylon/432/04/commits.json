[{"commit":{"message":"Fix examples"},"files":[{"filename":"cr-examples\/spirv\/src\/main\/java\/intel\/code\/spirv\/SpirvModuleGenerator.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/MLIRGenerator.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestAddKernel.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestBroadcast.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestCdiv.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestCountedLoop.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestMatrix.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestMatrixFp16.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestSoftMax.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestZeros.java"},{"filename":"hat\/backends\/ffi\/spirv\/src\/main\/java\/intel\/code\/spirv\/SpirvModuleGenerator.java"}],"sha":"c89986c034c0075b960c450a1bffaf1831f3b798"},{"commit":{"message":"Simplify JavaTypeUtils to use ExternalizedTypeElement factories"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/JavaTypeUtils.java"}],"sha":"8cc17354a88f423157f9f4927318798ce75b12cb"},{"commit":{"message":"Enhance type factory to create refs"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/CoreTypeFactory.java"}],"sha":"067d43715bc126f1db2dceee93038187ef393011"},{"commit":{"message":"Merge branch 'code-reflection' into externalized_Java_type_cleanup"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/TypeElement.java"}],"sha":"59e3714c6d12302faca7b40d823684f15c114ee0"},{"commit":{"message":"Simplify parser code to use `Lexer::is`"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/JavaTypeUtils.java"}],"sha":"cf48f74c892ba243f58f39b7d2d7dcbeac93256d"},{"commit":{"message":"Fix JavaType grammar"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/JavaTypeUtils.java"}],"sha":"b76890dc036ab424ff4eaef853ec252d79c3a4e1"},{"commit":{"message":"Drop redundant field"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/ClassType.java"}],"sha":"e4b0d18d6a811a2a2bf05caa5a7d109da45361d6"},{"commit":{"message":"Add Javadoc to `JavaTypeUtils`"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/JavaTypeUtils.java"}],"sha":"f62b557429ec4ed7b6006e228c456ce9d1414db7"},{"commit":{"message":"Cleanup exType parser"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/JavaTypeUtils.java"}],"sha":"6962d67b2b6e7c7437cac6cc9841ed5e7e3eb59f"},{"commit":{"message":"Cleanup and strengthen code that tests for the specific kind of externalized type"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/JavaTypeUtils.java"}],"sha":"b0c74f39c06dd32b9f013e9bc355a1dd8ad3888b"},{"commit":{"message":"Remove parens from method type var external type strings"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/ConstructorRef.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/FieldRef.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/JavaType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/MethodRef.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/RecordTypeRef.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/JavaTypeUtils.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/DenotableTypesTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/IntersectionTypeTest.java"}],"sha":"ac020ab23559288fdd76374914073b1d389a2a7d"},{"commit":{"message":"All tests pass"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/OpParser.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/ArrayType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/ClassType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/ConstructorRef.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/CoreTypeFactory.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/FieldRef.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/JavaRef.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/JavaType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/MethodRef.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/PrimitiveType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/RecordTypeRef.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/TypeVariableType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/WildcardType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/ConstructorRefImpl.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/FieldRefImpl.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/JavaTypeUtils.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/MethodRefImpl.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/RecordTypeRefImpl.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/writer\/OpWriter.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLiveness.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestNormalizeBlocksTransformer.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/TestLoop.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/TestSynchronized.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/type\/TestJavaType.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/type\/TestReferences.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/LocalClassTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/MethodReferenceTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/NewTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/SwitchExpressionTest2.java"}],"sha":"087a5a1e1512fa748b0f76813f8445d2b1688927"},{"commit":{"message":"Drop Java-type specific code in ExternalizedTypeElement"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/TypeElement.java"}],"sha":"dedd27e2e5e84cde9c2da213e885bebd77154d98"},{"commit":{"message":"Fix ClassType::rawType() to take enclosing type into account"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/ClassType.java"}],"sha":"24f2a5b54310029669edfd32df32800070eb7bee"},{"commit":{"message":"Re-enable all the test cases in `TestJavaType`"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/type\/TestJavaType.java"}],"sha":"e963ea8054d668ef3292fd26805e93c9efb0e49f"},{"commit":{"message":"Drop unused field in `RecordTypeRefImpl`"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/RecordTypeRefImpl.java"}],"sha":"e4dc4d6db5210d7a437dd66fee36dbc685e1b7ab"},{"commit":{"message":"Remove tabs from grammar doc in `DescParser`"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/DescParser.java"}],"sha":"141f7efd1e3229f6841dc73cff76e99c4335cd2c"},{"commit":{"message":"Improve documentation of grammar in `DescParser`"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/DescParser.java"}],"sha":"cefd50b0b0c79b25b960b27fba3ff907cd729690"},{"commit":{"message":"All tests pass"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/OpParser.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/TypeVariableType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/MethodRefImpl.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/RecordTypeRefImpl.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLiveness.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestNormalizeBlocksTransformer.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestUsesDependsOn.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/TestLoop.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/TestSynchronized.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/parser\/TestParse.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/type\/TestJavaType.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/type\/TestReferences.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ArrayAccessTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/AssertTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BinopTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BlockTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BoxingConversionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BreakContinueTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/CastInstanceOfTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/CodeReflectionTester.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ConditionalAndOrTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ConditionalExpressionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ConstantsTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/DenotableTypesTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/EnumAccessTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/FieldAccessTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ForLoopTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/IfTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ImplicitConversionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/IntersectionTypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/LambdaTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/LocalClassTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/LocalVarTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/MethodCallTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/MethodReferenceTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/NewArrayTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/NewTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/NullTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PatternTest2.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PatternsTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PrimitiveCastTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/QuotableIntersectionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/QuotableSubtypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/QuotedTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/StringConcatTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/SuperTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/SwitchExpressionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/SwitchExpressionTest2.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/SwitchStatementTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/SynchronizedTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ThrowTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/TryTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/UnaryopTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/UnreachableTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/WhileLoopTest.java"}],"sha":"c46096595ea41efd9f6e8ce31996a06cf55eb578"},{"commit":{"message":"More principled handling of Java type strings"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/OpParser.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/ArrayType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/ClassType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/CoreTypeFactory.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/JavaRef.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/JavaType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/PrimitiveType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/TypeVariableType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/WildcardType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/ConstructorRefImpl.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/FieldRefImpl.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/MethodRefImpl.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/writer\/OpWriter.java"}],"sha":"e81d65699701c725b97e7174c513cdd3722738bc"},{"commit":{"message":"Initial push"},"files":[{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/OpParser.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/JavaType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/TypeVariableType.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/ConstructorRefImpl.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/FieldRefImpl.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/MethodRefImpl.java"},{"filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/writer\/OpWriter.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ConstantsTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/LocalClassTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/MethodReferenceTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/NewTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/SwitchExpressionTest2.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/SwitchStatementTest.java"}],"sha":"2d6a2224cb067c2208ce9615af4b8ec3aa6dda4a"}]