{"files":[{"patch":"@@ -21,0 +21,2 @@\n+    static final boolean DEBUG = Boolean.getBoolean(\"oracle.code.onnx.OnnxRuntime.DEBUG\");\n+\n@@ -54,0 +56,3 @@\n+                if (DEBUG) {\n+                    System.out.println(f.toText());\n+                }\n@@ -62,1 +67,1 @@\n-        OnnxTransformer.OnnxFuncOp onnxFunc = OnnxTransformer.transform(l, evaluatedValues, CoreOp.func(\"onnxCode\", functionType)\n+        CoreOp.FuncOp f = CoreOp.func(\"onnxCode\", functionType)\n@@ -74,1 +79,5 @@\n-                }));\n+                });\n+        if (DEBUG) {\n+            System.out.println(f.toText());\n+        }\n+        OnnxTransformer.OnnxFuncOp onnxFunc = OnnxTransformer.transform(l, evaluatedValues, f);\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/LambdaToFunc.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -23,1 +23,1 @@\n-    static boolean DEBUG = true;\n+    static final boolean DEBUG = Boolean.getBoolean(\"oracle.code.onnx.OnnxRuntime.DEBUG\");\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxRuntime.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,0 +10,1 @@\n+import oracle.code.onnx.OnnxRuntime;\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/compiler\/OnnxTransformer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -69,4 +69,0 @@\n-    static {\n-        OnnxRuntime.DEBUG = false;\n-    }\n-\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/CNNTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -15,4 +15,0 @@\n-    static {\n-        OnnxRuntime.DEBUG = false;\n-    }\n-\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/RuntimeTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -12,4 +12,0 @@\n-    static {\n-        OnnxRuntime.DEBUG = false;\n-    }\n-\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/SimpleTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.io.UncheckedIOException;\n@@ -41,1 +42,0 @@\n-    static final long[] IMAGE_SHAPE = new long[]{1, 1, IMAGE_SIZE, IMAGE_SIZE};\n@@ -43,1 +43,1 @@\n-    private static Tensor<Float> initialize(String resource, long... shape) throws IOException {\n+    private static Tensor<Float> load(String resource, long... shape) {\n@@ -45,0 +45,1 @@\n+            assert in != null;\n@@ -46,0 +47,2 @@\n+        } catch (IOException e) {\n+            throw new UncheckedIOException(e);\n@@ -49,0 +52,1 @@\n+    \/\/ Weights\n@@ -60,11 +64,13 @@\n-    public MNISTModel() throws IOException {\n-        conv1Weights = initialize(\"conv1-weight-float-le\", 6, 1, 5, 5);\n-        conv1Biases = initialize(\"conv1-bias-float-le\", 6);\n-        conv2Weights = initialize(\"conv2-weight-float-le\", 16, 6, 5, 5);\n-        conv2Biases = initialize(\"conv2-bias-float-le\", 16);\n-        fc1Weights = initialize(\"fc1-weight-float-le\", 120, 256);\n-        fc1Biases = initialize(\"fc1-bias-float-le\", 120);\n-        fc2Weights = initialize(\"fc2-weight-float-le\", 84, 120);\n-        fc2Biases = initialize(\"fc2-bias-float-le\", 84);\n-        fc3Weights = initialize(\"fc3-weight-float-le\", 10, 84);\n-        fc3Biases = initialize(\"fc3-bias-float-le\", 10);\n+    public MNISTModel() {\n+        \/\/ Load the weights (constant inputs)\n+        \/\/ The weights were obtained from a trained pytorch model with the MNIST dataset\n+        conv1Weights = load(\"conv1-weight-float-le\", 6, 1, 5, 5);\n+        conv1Biases = load(\"conv1-bias-float-le\", 6);\n+        conv2Weights = load(\"conv2-weight-float-le\", 16, 6, 5, 5);\n+        conv2Biases = load(\"conv2-bias-float-le\", 16);\n+        fc1Weights = load(\"fc1-weight-float-le\", 120, 256);\n+        fc1Biases = load(\"fc1-bias-float-le\", 120);\n+        fc2Weights = load(\"fc2-weight-float-le\", 84, 120);\n+        fc2Biases = load(\"fc2-bias-float-le\", 84);\n+        fc3Weights = load(\"fc3-weight-float-le\", 10, 84);\n+        fc3Biases = load(\"fc3-bias-float-le\", 10);\n@@ -73,0 +79,2 @@\n+    \/\/ The machine learning model, a convolutional neural network\n+    \/\/ Annotated with code @CodeReflection so that the method's code is accessible\n@@ -117,0 +125,1 @@\n+        \/\/ Manage per-execution data in a confined arena\n@@ -118,1 +127,2 @@\n-            var imageTensor = Tensor.ofShape(arena, IMAGE_SHAPE, imageData);\n+            \/\/ Convert the image to an input tensor\n+            var imageTensor = Tensor.ofShape(arena, new long[]{1, 1, IMAGE_SIZE, IMAGE_SIZE}, imageData);\n@@ -120,0 +130,2 @@\n+            \/\/ Execute the machine learning model\n+            \/\/ Translate the Java code to an ONNX model and execute in the ONNX runtime\n@@ -123,0 +135,1 @@\n+            \/\/ Convert the output predication to float[]\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/mnist\/MNISTModel.java","additions":27,"deletions":14,"binary":false,"changes":41,"status":"modified"}]}