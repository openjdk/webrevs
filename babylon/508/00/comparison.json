{"files":[{"patch":"@@ -29,1 +29,0 @@\n-\n@@ -32,1 +31,0 @@\n-\n@@ -79,2 +77,0 @@\n-\n-\n@@ -113,1 +109,0 @@\n-\n@@ -125,1 +120,2 @@\n-    cuDeviceGetName(name, sizeof(name), device);\n+    CUDA_CHECK(cuDeviceGetName(name, sizeof(name), device), \"cuDeviceGetName\");\n+\n@@ -128,1 +124,1 @@\n-    \/\/ get compute capabilities and the devicename\n+    \/\/ get compute capabilities and the device name\n@@ -130,2 +126,2 @@\n-    cuDeviceGetAttribute(&major, CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR, device);\n-    cuDeviceGetAttribute(&minor, CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR, device);\n+    CUDA_CHECK(cuDeviceGetAttribute(&major, CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR, device), \"cuDeviceGetAttribute\");\n+    CUDA_CHECK(cuDeviceGetAttribute(&minor, CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR, device), \"cuDeviceGetAttribute\");\n@@ -135,1 +131,1 @@\n-    cuDeviceGetAttribute(&warpSize, CU_DEVICE_ATTRIBUTE_WARP_SIZE, device);\n+    CUDA_CHECK(cuDeviceGetAttribute(&warpSize, CU_DEVICE_ATTRIBUTE_WARP_SIZE, device), \"cuDeviceGetAttribute\");\n@@ -139,1 +135,1 @@\n-    cuDeviceGetAttribute(&threadsPerBlock, CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK, device);\n+    CUDA_CHECK(cuDeviceGetAttribute(&threadsPerBlock, CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK, device), \"cuDeviceGetAttribute\");\n@@ -143,1 +139,1 @@\n-    cuDeviceGetAttribute(&cores, CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT, device);\n+    CUDA_CHECK(cuDeviceGetAttribute(&cores, CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT, device), \"cuDeviceGetAttribute\");\n@@ -147,1 +143,1 @@\n-    cuDeviceTotalMem(&totalGlobalMem, device);\n+    CUDA_CHECK(cuDeviceTotalMem(&totalGlobalMem, device), \"cuDeviceTotalMem\");\n@@ -153,3 +149,0 @@\n-\n-\n-\n@@ -157,1 +150,0 @@\n-  \/\/std::cout << \"inside nvcc\" << std::endl;\n@@ -165,1 +157,9 @@\n-        const char *argv[]{  \"\/usr\/local\/cuda\/bin\/nvcc\", \"-ptx\", \"-Wno-deprecated-gpu-targets\", cudaPath.c_str(), \"-o\", ptxPath.c_str(), nullptr};\n+        const char *argv[] {\n+            \"\/usr\/local\/cuda\/bin\/nvcc\",\n+            \"-ptx\",\n+            \"-Wno-deprecated-gpu-targets\",\n+            cudaPath.c_str(),\n+            \"-o\",\n+            ptxPath.c_str(),\n+            nullptr\n+        };\n@@ -195,1 +195,0 @@\n-\n@@ -197,2 +196,0 @@\n-     \/\/ std::cout << \"inside compile\" << std::endl;\n-    \/\/ std::cout << \"cuda \" << cudaSource->text << std::endl;\n@@ -200,1 +197,0 @@\n-       \/\/ std::cout << \"ptx \" << ptx->text << std::endl;\n@@ -207,1 +203,0 @@\n-\n@@ -322,1 +317,0 @@\n-\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/native\/cpp\/cuda_backend.cpp","additions":18,"deletions":24,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n-            .e=cuMemAlloc(&devicePtr, static_cast<size_t>(bufferState->length)),\n-            .t=\"cuMemAlloc\"\n+          .e=cuMemAlloc(&devicePtr, static_cast<size_t>(bufferState->length)),\n+          .t=\"cuMemAlloc\"\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/native\/cpp\/cuda_backend_buffer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,4 +65,2 @@\n-    void report() const{\n-        if (e == CUDA_SUCCESS){\n-           \/\/ std::cout << t << \"  OK at \" << f << \" line \" << l << std::endl;\n-        }else {\n+    void report() const {\n+        if (e != CUDA_SUCCESS){\n@@ -77,0 +75,8 @@\n+#define CUDA_CHECK(err, functionName) { \\\n+    WHERE{.f =__FILE__, \\\n+          .l=__LINE__, \\\n+          .e = err, \\\n+          .t = functionName \\\n+         }.report(); \\\n+}\n+\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/native\/include\/cuda_backend.h","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"}]}