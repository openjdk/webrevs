{"files":[{"patch":"@@ -82,5 +82,1 @@\n-        WHERE{\n-            .f = __FILE__, .l = __LINE__,\n-            .e = cuDeviceGetCount(&deviceCount),\n-            .t = \"cuDeviceGetCount\"\n-        }.report();\n+        CUDA_CHECK(cuDeviceGetCount(&deviceCount), \"cuDeviceGetCount\");\n@@ -88,10 +84,2 @@\n-        WHERE{\n-            .f = __FILE__, .l = __LINE__,\n-            .e = cuDeviceGet(&device, 0),\n-            .t = \"cuDeviceGet\"\n-        }.report();\n-        WHERE{\n-            .f = __FILE__, .l = __LINE__,\n-            .e = cuCtxCreate(&context, 0, device),\n-            .t = \"cuCtxCreate\"\n-        }.report();\n+        CUDA_CHECK(cuDeviceGet(&device, 0), \"cuDeviceGet\");\n+        CUDA_CHECK(cuCtxCreate(&context, 0, device), \"cuCtxCreate\");\n@@ -101,5 +89,1 @@\n-        WHERE{\n-            .f = __FILE__, .l = __LINE__,\n-            .e = initStatus,\n-            \"cuInit() failed we seem to have the runtime library but no device\"\n-        }.report();\n+        CUDA_CHECK(initStatus, \"cuInit() failed we seem to have the runtime library but no device\");\n@@ -111,5 +95,1 @@\n-    WHERE{\n-        .f = __FILE__, .l = __LINE__,\n-        .e = cuCtxDestroy(context),\n-        .t = \"cuCtxDestroy\"\n-    }.report();\n+    CUDA_CHECK(cuCtxDestroy(context), \"cuCtxDestroy\");\n@@ -214,5 +194,2 @@\n-        WHERE{\n-            .f = __FILE__, .l = __LINE__,\n-            .e = cuModuleLoadDataEx(&module, ptx->text, optc, jitOptions, (void **) jitOptVals),\n-            .t = \"cuModuleLoadDataEx\"\n-        }.report();\n+        CUDA_CHECK(cuModuleLoadDataEx(&module, ptx->text, optc, jitOptions, (void **) jitOptVals), \"cuModuleLoadDataEx\");\n+\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/native\/cpp\/cuda_backend.cpp","additions":7,"deletions":30,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+    CUDA_CHECK(cuMemAlloc(&devicePtr, static_cast<size_t>(bufferState->length)), \"cuMemAlloc\");\n@@ -42,4 +43,0 @@\n-    WHERE{.f=__FILE__, .l=__LINE__,\n-          .e=cuMemAlloc(&devicePtr, static_cast<size_t>(bufferState->length)),\n-          .t=\"cuMemAlloc\"\n-    }.report();\n@@ -57,1 +54,0 @@\n-\n@@ -62,4 +58,1 @@\n-    WHERE{.f=__FILE__, .l=__LINE__,\n-            .e=cuMemFree(devicePtr),\n-            .t=\"cuMemFree\"\n-    }.report();\n+    CUDA_CHECK(cuMemFree(devicePtr), \"cuMemFree\");\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/native\/cpp\/cuda_backend_buffer.cpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -49,4 +49,1 @@\n-    WHERE{.f=__FILE__, .l=__LINE__,\n-          .e=cuModuleGetFunction(&function, module, name),\n-          .t=\"cuModuleGetFunction\"\n-    }.report();\n+    CUDA_CHECK(cuModuleGetFunction(&function, module, name), \"cuModuleGetFunction\");\n@@ -54,1 +51,0 @@\n-\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/native\/cpp\/cuda_backend_module.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -55,4 +55,1 @@\n-    WHERE{.f=__FILE__, .l=__LINE__,\n-          .e=cuStreamSynchronize(cuStream),\n-          .t= \"cuStreamSynchronize\"\n-    }.report();\n+    CUDA_CHECK(cuStreamSynchronize(cuStream), \"cuStreamSynchronize\");\n@@ -62,1 +59,1 @@\n-void CudaBackend::CudaQueue::computeStart(){\n+void CudaBackend::CudaQueue::computeStart() {\n@@ -67,3 +64,1 @@\n-\n-\n-void CudaBackend::CudaQueue::computeEnd(){\n+void CudaBackend::CudaQueue::computeEnd() {\n@@ -73,4 +68,1 @@\n-\n-\n-\n-void CudaBackend::CudaQueue::release(){\n+void CudaBackend::CudaQueue::release() {\n@@ -80,5 +72,2 @@\n-CudaBackend::CudaQueue::~CudaQueue(){\n-    WHERE{.f=__FILE__, .l=__LINE__,\n-            .e=cuStreamDestroy(cuStream),\n-            .t= \"cuStreamDestroy\"\n-    }.report();\n+CudaBackend::CudaQueue::~CudaQueue() {\n+    CUDA_CHECK(cuStreamDestroy(cuStream), \"cuStreamDestroy\");\n@@ -102,3 +91,2 @@\n-    WHERE{.f=__FILE__, .l=__LINE__,\n-            .e=cuMemcpyHtoDAsync(\n-                    cudaBuffer->devicePtr,\n+\n+    CUDA_CHECK(cuMemcpyHtoDAsync(cudaBuffer->devicePtr,\n@@ -107,4 +95,1 @@\n-                    dynamic_cast<CudaQueue*>(backend->queue)->cuStream),\n-            .t=\"cuMemcpyHtoDAsync\"\n-    }.report();\n-\n+                    dynamic_cast<CudaQueue*>(backend->queue)->cuStream), \"cuMemcpyHtoDAsync\");\n@@ -129,9 +114,5 @@\n-\n-    WHERE{.f=__FILE__, .l=__LINE__,\n-            .e=cuMemcpyDtoHAsync(\n-                    cudaBuffer->bufferState->ptr,\n-                    cudaBuffer->devicePtr,\n-                    cudaBuffer->bufferState->length,\n-                                 dynamic_cast<CudaQueue*>(backend->queue)->cuStream),\n-            .t=\"cuMemcpyDtoHAsync\"\n-    }.report();\n+    CUDA_CHECK(cuMemcpyDtoHAsync(cudaBuffer->bufferState->ptr,\n+                                cudaBuffer->devicePtr,\n+                                cudaBuffer->bufferState->length,\n+                                dynamic_cast<CudaQueue*>(backend->queue)->cuStream),\n+                                \"cuMemcpyDtoHAsync\");\n@@ -168,1 +149,1 @@\n-    WHERE{.f=__FILE__, .l=__LINE__, .e=status, .t=\"cuLaunchKernel\"}.report();\n+    CUDA_CHECK(status, \"cuLaunchKernel\");\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/native\/cpp\/cuda_backend_queue.cpp","additions":15,"deletions":34,"binary":false,"changes":49,"status":"modified"}]}