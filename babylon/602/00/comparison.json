{"files":[{"patch":"@@ -47,0 +47,4 @@\n+                .hashDefine(\"_GLOBAL_MEM\", _ -> {})\n+                .hashDefine(\"_LOCAL_MEM\", _ -> keyword(\"__shared__\"))\n+                .hashDefine(\"_FUNC\", _->externC().space().keyword(\"__device__\").space().keyword(\"inline\"))\n+                .hashDefine(\"_KERNEL\", _->externC().space().keyword(\"__global__\"))\n@@ -66,0 +70,1 @@\n+    \/*\n@@ -84,1 +89,1 @@\n-    }\n+    } *\/\n@@ -89,4 +94,1 @@\n-        return identifier(\"atomicAdd\").paren(_ -> {\n-             ampersand().recurse(buildContext, instanceResult.op());\n-             rarrow().identifier(name).comma().literal(1);\n-        });\n+        return identifier(\"atomicAdd\").paren(_ -> ampersand().recurse(buildContext, instanceResult.op()).rarrow().identifier(name).comma().literal(1));\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/java\/hat\/backend\/ffi\/CudaHATKernelBuilder.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import jdk.incubator.code.dialect.core.CoreOp;\n-import jdk.incubator.code.dialect.java.JavaType;\n@@ -39,2 +37,2 @@\n-              \/\/  .hashDefine(\"HAT_OPENCL\")\n-              \/\/  .hashIfdef(\"HAT_OPENCL\", _ ->\n+                \/\/  .hashDefine(\"HAT_OPENCL\")\n+                \/\/  .hashIfdef(\"HAT_OPENCL\", _ ->\n@@ -42,42 +40,25 @@\n-                                .hashIfndef(\"NULL\", _ -> hashDefine(\"NULL\", \"0\"))\n-                                .pragma(\"OPENCL\", \"EXTENSION\", \"cl_khr_global_int32_base_atomics\", \":\", \"enable\")\n-                                .pragma(\"OPENCL\", \"EXTENSION\", \"cl_khr_local_int32_base_atomics\", \":\", \"enable\")\n-                                .hashDefine(\"_gix()\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstZero())))\n-                                .hashDefine(\"_giy()\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstOne())))\n-                                .hashDefine(\"_giz()\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstTwo())))\n-                                .hashDefine(\"_lix()\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstZero())))\n-                                .hashDefine(\"_liy()\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstOne())))\n-                                .hashDefine(\"_liz()\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstTwo())))\n-                                .hashDefine(\"_gsx()\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstZero())))\n-                                .hashDefine(\"_gsy()\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstOne())))\n-                                .hashDefine(\"_gsz()\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstTwo())))\n-                                .hashDefine(\"_lsx()\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstZero())))\n-                                .hashDefine(\"_lsy()\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstOne())))\n-                                .hashDefine(\"_lsz()\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstTwo())))\n-                                .hashDefine(\"_bix()\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstZero())))\n-                                .hashDefine(\"_biy()\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstOne())))\n-                                .hashDefine(\"_biz()\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstTwo())))\n-                                .hashDefine(\"_barrier()\", _->identifier(\"barrier\").oparen().identifier(\"CLK_LOCAL_MEM_FENCE\").cparen());\n-               \/\/         )\n-               \/\/ );\n-    }\n-\n-    @Override\n-    public OpenCLHATKernelBuilder kernelPrefix() {\n-        return keyword(\"__kernel\").space();\n-    }\n-\n-    @Override\n-    public OpenCLHATKernelBuilder functionPrefix() {\n-        return keyword(\"inline\").space();\n-    }\n-\n-\n-    @Override\n-    public OpenCLHATKernelBuilder globalPtrPrefix() {\n-        return keyword(\"__global\").space();\n-    }\n-\n-    @Override\n-    public OpenCLHATKernelBuilder localPtrPrefix() {\n-        return keyword(\"__local\").space();\n+                .hashIfndef(\"NULL\", _ -> hashDefine(\"NULL\", \"0\"))\n+                .pragma(\"OPENCL\", \"EXTENSION\", \"cl_khr_global_int32_base_atomics\", \":\", \"enable\")\n+                .pragma(\"OPENCL\", \"EXTENSION\", \"cl_khr_local_int32_base_atomics\", \":\", \"enable\")\n+                .hashDefine(\"_FUNC\", _ -> keyword(\"inline\"))\n+                .hashDefine(\"_KERNEL\", _ -> keyword(\"__kernel\"))\n+                .hashDefine(\"_GLOBAL_MEM\", _ -> keyword(\"__global\"))\n+                .hashDefine(\"_LOCAL_MEM\", _ -> keyword(\"__local\"))\n+                .hashDefine(\"_gix()\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstZero())))\n+                .hashDefine(\"_giy()\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstOne())))\n+                .hashDefine(\"_giz()\", _ -> paren(_ -> identifier(\"get_global_id\").paren(_ -> intConstTwo())))\n+                .hashDefine(\"_lix()\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstZero())))\n+                .hashDefine(\"_liy()\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstOne())))\n+                .hashDefine(\"_liz()\", _ -> paren(_ -> identifier(\"get_local_id\").paren(_ -> intConstTwo())))\n+                .hashDefine(\"_gsx()\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstZero())))\n+                .hashDefine(\"_gsy()\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstOne())))\n+                .hashDefine(\"_gsz()\", _ -> paren(_ -> identifier(\"get_global_size\").paren(_ -> intConstTwo())))\n+                .hashDefine(\"_lsx()\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstZero())))\n+                .hashDefine(\"_lsy()\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstOne())))\n+                .hashDefine(\"_lsz()\", _ -> paren(_ -> identifier(\"get_local_size\").paren(_ -> intConstTwo())))\n+                .hashDefine(\"_bix()\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstZero())))\n+                .hashDefine(\"_biy()\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstOne())))\n+                .hashDefine(\"_biz()\", _ -> paren(_ -> identifier(\"get_group_id\").paren(_ -> intConstTwo())))\n+                .hashDefine(\"_barrier()\", _ -> identifier(\"barrier\").oparen().identifier(\"CLK_LOCAL_MEM_FENCE\").cparen());\n+        \/\/         )\n+        \/\/ );\n@@ -88,3 +69,1 @@\n-        return identifier(\"atomic_inc\").paren(_ ->\n-                ampersand().recurse(buildContext, instanceResult.op()).rarrow().identifier(name)\n-        );\n+        return identifier(\"atomic_inc\").paren(_ -> ampersand().recurse(buildContext, instanceResult.op()).rarrow().identifier(name));\n@@ -92,1 +71,0 @@\n-\n","filename":"hat\/backends\/ffi\/opencl\/src\/main\/java\/hat\/backend\/ffi\/OpenCLHATKernelBuilder.java","additions":28,"deletions":50,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-    public abstract T kernelPrefix();\n+ \/\/   public abstract T kernelPrefix();\n@@ -224,1 +224,1 @@\n-    public abstract  T functionPrefix();\n+   \/\/ public abstract  T functionPrefix();\n@@ -231,0 +231,15 @@\n+    public T kernelPrefix() {\n+        return keyword(\"_KERNEL\").space();\n+    }\n+\n+    public T functionPrefix() {\n+        return keyword(\"_FUNC\").space();\n+    }\n+\n+    public T globalPtrPrefix() {\n+        return keyword(\"_GLOBAL_MEM\").space();\n+    }\n+\n+    public T localPtrPrefix() {\n+        return keyword(\"_LOCAL_MEM\").space();\n+    }\n@@ -237,1 +252,1 @@\n-    public abstract T globalPtrPrefix();\n+  \/\/  public abstract T globalPtrPrefix();\n@@ -239,1 +254,1 @@\n-    public abstract T localPtrPrefix();\n+  \/\/  public abstract T localPtrPrefix();\n","filename":"hat\/core\/src\/main\/java\/hat\/codebuilders\/C99HATKernelBuilder.java","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"}]}