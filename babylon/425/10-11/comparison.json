{"files":[{"patch":"@@ -288,1 +288,1 @@\n-     * @throws IllegalStateException if this operation is bound\n+     * @throws IllegalStateException if this operation is bound or sealed\n@@ -292,1 +292,1 @@\n-        if (result != null && result.block.isBound()) {\n+        if (isSealed() || (result != null && result.block.isBound())) {\n@@ -307,1 +307,1 @@\n-     * Returns this operation's parent block, otherwise {@code null} if the operation is not assigned to a block.\n+     * Returns this operation's parent block, otherwise {@code null} if the operation is unbound or sealed.\n@@ -309,1 +309,1 @@\n-     * @return operation's parent block, or {@code null} if the operation is not assigned to a block.\n+     * @return operation's parent block, or {@code null} if the operation is unbound or sealed.\n@@ -547,4 +547,8 @@\n-     * Seals this operation, making it immutable\n-     * and causes the operation to be copied when we append it to a {@link Block.Builder}.\n-     * @throws IllegalStateException If this operation is bound.\n-     * @implSpec This implementation is idempotent.\n+     * Seals this operation. After this operation is sealed its {@link #result result} and {@link #parent parent} are guaranteed to always be {@code null}.\n+     * <p>\n+     * If a sealed operation is {@link Block.Builder#op appended} to a {@link Block.Builder} then it is\n+     * treated as if the operation is bound, and therefore the sealed operation will be transformed.\n+     * <p>\n+     * Sealing is idempotent if the operation is already sealed.\n+     *\n+     * @throws IllegalStateException if this operation is bound.\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/Op.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -75,0 +75,8 @@\n+    @Test\n+    void test6() {\n+        CoreOp.ConstantOp cop = CoreOp.constant(JavaType.LONG, 1L);\n+        cop.setLocation(Location.NO_LOCATION);\n+        cop.seal();\n+        Assert.assertThrows(() -> cop.setLocation(Location.NO_LOCATION));\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestSealOp.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}