{"files":[{"patch":"@@ -615,0 +615,1 @@\n+            {-9999,                              \"enqueueNdRangeKernel Illegal read or write to a buffer\",},\n@@ -626,1 +627,1 @@\n-    SNPRINTF(unknown, sizeof(unknown), \"awaitingName error %d\", status);\n+    SNPRINTF(unknown, sizeof(unknown), \"unmapped string for  error %d\", status);\n","filename":"hat\/backends\/opencl\/cpp\/opencl_backend.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -53,2 +53,2 @@\n-              \"\/images\/highett.jpg\"\n-            \/\/ \"\/images\/Nasa1996.jpg\"\n+             \/\/ \"\/images\/highett.jpg\"\n+             \"\/images\/Nasa1996.jpg\"\n","filename":"hat\/examples\/violajones\/src\/java\/violajones\/ViolaJonesCompute.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import hat.buffer.S32Array;\n@@ -197,1 +198,2 @@\n-            Cascade cascade) {\n+            Cascade cascade\n+        ) {\n@@ -237,1 +239,0 @@\n-\n@@ -251,1 +252,1 @@\n-        if (kc.x < scaleTable.multiScaleAccumulativeRange()) {\n+        if (kc.x < kc.maxX){\/\/;scaleTable.multiScaleAccumulativeRange()) {\n@@ -256,3 +257,5 @@\n-            ScaleTable.Scale scale = scaleTable.scale(scalc++);\n-            while (kc.x >= scale.accumGridSizeMax()) {\n-                scale = scaleTable.scale(scalc++);\n+            ScaleTable.Scale scale = scaleTable.scale(scalc);\n+            scalc++;\n+            while (kc.x >= scale.accumGridSizeMax() && scalc<scaleTable.length()) {\n+                scale = scaleTable.scale(scalc);\n+                scalc++;\n@@ -309,0 +312,3 @@\n+\n+\n+\n@@ -326,0 +332,3 @@\n+        System.out.print(\"range requested=\");\n+        System.out.print(scaleTable.multiScaleAccumulativeRange());\n+        System.out.println();\n","filename":"hat\/examples\/violajones\/src\/java\/violajones\/ViolaJonesCoreCompute.java","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"}]}