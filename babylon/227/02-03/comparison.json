{"files":[{"patch":"@@ -2946,3 +2946,3 @@\n-        @OpFactory.OpDeclaration(BindingPatternOp.NAME)\n-        public static final class BindingPatternOp extends PatternOp {\n-            public static final String NAME = \"pattern.binding\";\n+        @OpFactory.OpDeclaration(TypePatternOp.NAME)\n+        public static final class TypePatternOp extends PatternOp {\n+            public static final String NAME = \"pattern.type\";\n@@ -2955,1 +2955,1 @@\n-            public static BindingPatternOp create(ExternalizedOp def) {\n+            public static TypePatternOp create(ExternalizedOp def) {\n@@ -2962,1 +2962,1 @@\n-                return new BindingPatternOp(def, name);\n+                return new TypePatternOp(def, name);\n@@ -2965,1 +2965,1 @@\n-            BindingPatternOp(ExternalizedOp def, String bindingName) {\n+            TypePatternOp(ExternalizedOp def, String bindingName) {\n@@ -2972,1 +2972,1 @@\n-            BindingPatternOp(BindingPatternOp that, CopyContext cc) {\n+            TypePatternOp(TypePatternOp that, CopyContext cc) {\n@@ -2980,2 +2980,2 @@\n-            public BindingPatternOp transform(CopyContext cc, OpTransformer ot) {\n-                return new BindingPatternOp(this, cc);\n+            public TypePatternOp transform(CopyContext cc, OpTransformer ot) {\n+                return new TypePatternOp(this, cc);\n@@ -2984,1 +2984,1 @@\n-            BindingPatternOp(TypeElement targetType, String bindingName) {\n+            TypePatternOp(TypeElement targetType, String bindingName) {\n@@ -3186,1 +3186,1 @@\n-                } else if (pattern instanceof ExtendedOp.PatternOps.BindingPatternOp bp) {\n+                } else if (pattern instanceof TypePatternOp bp) {\n@@ -3223,1 +3223,1 @@\n-                                                     ExtendedOp.PatternOps.BindingPatternOp bpOp, Value target) {\n+                                                     TypePatternOp bpOp, Value target) {\n@@ -3689,2 +3689,2 @@\n-    public static PatternOps.BindingPatternOp bindingPattern(TypeElement type, String bindingName) {\n-        return new PatternOps.BindingPatternOp(type, bindingName);\n+    public static PatternOps.TypePatternOp typePattern(TypeElement type, String bindingName) {\n+        return new PatternOps.TypePatternOp(type, bindingName);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -1228,4 +1228,2 @@\n-                    \/\/ pass null to signal no binding\n-                    \/\/ align with JLS terminology\n-                    \/\/ bindingPattern -> typePattern\n-                    result = append(ExtendedOp.bindingPattern(typeToTypeElement(var.type), unnamedPatternVariable ? null : var.name.toString()));\n+                    String bindingName = unnamedPatternVariable ? null : var.name.toString();\n+                    result = append(ExtendedOp.typePattern(typeToTypeElement(var.type), bindingName));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-                        %7 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                        %7 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -73,1 +73,1 @@\n-                                %7 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                %7 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -112,1 +112,1 @@\n-                                %7 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                %7 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -170,2 +170,2 @@\n-                                %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<PatternsTest$ConcretePoint> = pattern.binding @\"p\";\n-                                %12 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<PatternsTest$Color> = pattern.binding @\"c\";\n+                                %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<PatternsTest$ConcretePoint> = pattern.type @\"p\";\n+                                %12 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<PatternsTest$Color> = pattern.type @\"c\";\n@@ -173,1 +173,1 @@\n-                                %14 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<PatternsTest$ColoredPoint> = pattern.binding @\"lr\";\n+                                %14 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<PatternsTest$ColoredPoint> = pattern.type @\"lr\";\n@@ -231,1 +231,1 @@\n-                                %7 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                %7 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -269,1 +269,1 @@\n-                                %7 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                %7 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -316,1 +316,1 @@\n-                                        %14 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.binding @\"n\";\n+                                        %14 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.type @\"n\";\n@@ -357,1 +357,1 @@\n-                        %5 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding;\n+                        %5 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type;\n","filename":"test\/langtools\/tools\/javac\/reflect\/PatternsTest.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -347,1 +347,1 @@\n-                                %10 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.binding @\"n\";\n+                                %10 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.type @\"n\";\n@@ -364,1 +364,1 @@\n-                                %16 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                %16 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -417,1 +417,1 @@\n-                                %12 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.binding @\"n\";\n+                                %12 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.type @\"n\";\n@@ -436,1 +436,1 @@\n-                                        %19 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                        %19 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -463,1 +463,1 @@\n-                                        %29 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                        %29 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n","filename":"test\/langtools\/tools\/javac\/reflect\/SwitchExpressionTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -828,1 +828,1 @@\n-                                %12 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Object> = pattern.binding @\"o\";\n+                                %12 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Object> = pattern.type @\"o\";\n@@ -867,1 +867,1 @@\n-                                %10 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<SwitchExpressionTest2$B> = pattern.binding @\"b\";\n+                                %10 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<SwitchExpressionTest2$B> = pattern.type @\"b\";\n@@ -883,1 +883,1 @@\n-                                %15 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<.<SwitchExpressionTest2, SwitchExpressionTest2$C>> = pattern.binding @\"c\";\n+                                %15 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<.<SwitchExpressionTest2, SwitchExpressionTest2$C>> = pattern.type @\"c\";\n","filename":"test\/langtools\/tools\/javac\/reflect\/SwitchExpressionTest2.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1107,1 +1107,1 @@\n-                                %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<SwitchStatementTest$K> = pattern.binding @\"k\";\n+                                %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<SwitchStatementTest$K> = pattern.type @\"k\";\n@@ -1126,1 +1126,1 @@\n-                                %18 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<SwitchStatementTest$J> = pattern.binding @\"j\";\n+                                %18 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<SwitchStatementTest$J> = pattern.type @\"j\";\n@@ -1188,1 +1188,1 @@\n-                                %15 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Object> = pattern.binding @\"o\";\n+                                %15 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Object> = pattern.type @\"o\";\n@@ -1232,1 +1232,1 @@\n-                                  %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Integer> = pattern.binding @\"i\";\n+                                  %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Integer> = pattern.type @\"i\";\n@@ -1251,1 +1251,1 @@\n-                                  %18 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                  %18 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -1307,1 +1307,1 @@\n-                                  %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Integer> = pattern.binding @\"i\";\n+                                  %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Integer> = pattern.type @\"i\";\n@@ -1326,1 +1326,1 @@\n-                                  %18 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                  %18 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -1388,1 +1388,1 @@\n-                                  %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Integer> = pattern.binding @\"i\";\n+                                  %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Integer> = pattern.type @\"i\";\n@@ -1407,1 +1407,1 @@\n-                                  %18 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                  %18 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -1468,1 +1468,1 @@\n-                                %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.binding @\"n\";\n+                                %11 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.type @\"n\";\n@@ -1484,1 +1484,1 @@\n-                                %16 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                %16 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -1568,1 +1568,1 @@\n-                                          %19 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Integer> = pattern.binding @\"i\";\n+                                          %19 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Integer> = pattern.type @\"i\";\n@@ -1598,1 +1598,1 @@\n-                                          %31 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Integer> = pattern.binding @\"i\";\n+                                          %31 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Integer> = pattern.type @\"i\";\n@@ -1663,1 +1663,1 @@\n-                                %9 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding;\n+                                %9 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type;\n@@ -1681,1 +1681,1 @@\n-                                %15 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.util.RandomAccess> = pattern.binding;\n+                                %15 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.util.RandomAccess> = pattern.type;\n@@ -1699,1 +1699,1 @@\n-                                %21 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<int[]> = pattern.binding;\n+                                %21 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<int[]> = pattern.type;\n@@ -1717,1 +1717,1 @@\n-                                %27 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.util.Stack[][]> = pattern.binding;\n+                                %27 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.util.Stack[][]> = pattern.type;\n@@ -1735,1 +1735,1 @@\n-                                %33 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.util.Collection[][][]> = pattern.binding;\n+                                %33 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.util.Collection[][][]> = pattern.type;\n@@ -1753,1 +1753,1 @@\n-                                %39 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.binding @\"n\";\n+                                %39 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.type @\"n\";\n@@ -1812,1 +1812,1 @@\n-                                %9 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.binding @\"n\";\n+                                %9 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.type @\"n\";\n@@ -1870,1 +1870,1 @@\n-                                        %12 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.binding @\"s\";\n+                                        %12 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.String> = pattern.type @\"s\";\n@@ -1904,1 +1904,1 @@\n-                                        %28 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.binding @\"n\";\n+                                        %28 : java.lang.reflect.code.ExtendedOp$Pattern$Binding<java.lang.Number> = pattern.type @\"n\";\n","filename":"test\/langtools\/tools\/javac\/reflect\/SwitchStatementTest.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"}]}