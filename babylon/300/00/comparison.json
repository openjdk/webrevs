{"files":[{"patch":"@@ -1560,1 +1560,1 @@\n-            if (isVarArgs){\n+            if (!isVarArgs){\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/op\/CoreOp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,3 @@\n+import jdk.incubator.code.CodeReflection;\n+import jdk.incubator.code.Op;\n+import jdk.incubator.code.op.CoreOp;\n@@ -5,2 +8,0 @@\n-import java.lang.reflect.code.op.CoreOp;\n-import java.lang.runtime.CodeReflection;\n@@ -13,0 +14,1 @@\n+ * @modules jdk.incubator.code\n@@ -56,1 +58,1 @@\n-        return m.getCodeModel().get();\n+        return Op.ofMethod(m).get();\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestInvokeOp.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,5 @@\n+import jdk.incubator.code.CodeReflection;\n+import jdk.incubator.code.Op;\n+import jdk.incubator.code.OpTransformer;\n+import jdk.incubator.code.bytecode.BytecodeGenerator;\n+import jdk.incubator.code.op.CoreOp;\n@@ -9,4 +14,0 @@\n-import java.lang.reflect.code.OpTransformer;\n-import java.lang.reflect.code.bytecode.BytecodeGenerator;\n-import java.lang.reflect.code.op.CoreOp;\n-import java.lang.runtime.CodeReflection;\n@@ -20,0 +21,1 @@\n+ * @modules jdk.incubator.code\n@@ -95,1 +97,1 @@\n-        return m.getCodeModel().get();\n+        return Op.ofMethod(m).get();\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestVarArg.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}