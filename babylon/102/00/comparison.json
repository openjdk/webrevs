{"files":[{"patch":"@@ -55,2 +55,2 @@\n-    std::cout << \"cuda \" << cudaPath << std::endl;\n-    std::cout << \"ptx \" << ptxPath << std::endl;\n+ \/\/   std::cout << \"cuda \" << cudaPath << std::endl;\n+ \/\/   std::cout << \"ptx \" << ptxPath << std::endl;\n@@ -80,1 +80,1 @@\n-        std::cerr << \"fork suceeded waitikbng for child\" << std::endl;\n+     \/\/   std::cerr << \"fork suceeded waitikbng for child\" << std::endl;\n@@ -82,1 +82,1 @@\n-        std::cerr << \"child finished\" << std::endl;\n+      \/\/  std::cerr << \"child finished\" << std::endl;\n@@ -95,1 +95,1 @@\n-    std::cout << \"returning PTX\" << std::endl;\n+  \/\/  std::cout << \"returning PTX\" << std::endl;\n@@ -108,1 +108,1 @@\n-    std::cout << \"cuMemAlloc()\" << std::endl;\n+  \/\/  std::cout << \"cuMemAlloc()\" << std::endl;\n@@ -110,0 +110,1 @@\n+  \/\/  std::cout << \"devptr \" << std::hex<<  (long)devicePtr <<std::dec <<std::endl;\n@@ -114,1 +115,4 @@\n-    std::cout << \"cuMemFree()\" << std::endl;\n+\n+ \/\/   std::cout << \"cuMemFree()\"\n+  \/\/          << \"devptr \" << std::hex<<  (long)devicePtr <<std::dec\n+   \/\/         << std::endl;\n@@ -116,0 +120,1 @@\n+    arg->value.buffer.vendorPtr = nullptr;\n@@ -119,4 +124,24 @@\n-    std::cout << \"copyToDevice()\" << arg->value.buffer.sizeInBytes\n-              << \"devptr \" << std::hex<<  (long)devicePtr <<std::dec\n-              << std::endl;\n-    checkCudaErrors(cuMemcpyHtoD(devicePtr, arg->value.buffer.memorySegment, arg->value.buffer.sizeInBytes));\n+    CudaKernel * cudaKernel = dynamic_cast<CudaKernel*>(kernel);\n+ \/\/   std::cout << \"copyToDevice() 0x\"   << std::hex<<arg->value.buffer.sizeInBytes<<std::dec << \" \"<< arg->value.buffer.sizeInBytes << \" \"\n+ \/\/             << \"devptr \" << std::hex<<  (long)devicePtr <<std::dec\n+ \/\/             << std::endl;\n+    char *ptr = (char*)arg->value.buffer.memorySegment;\n+\n+    unsigned long ifacefacade1 = *reinterpret_cast<unsigned long*>(ptr+arg->value.buffer.sizeInBytes-16);\n+    unsigned long ifacefacade2 = *reinterpret_cast<unsigned long*>(ptr+arg->value.buffer.sizeInBytes-8);\n+\n+    if (ifacefacade1 != 0x1face00000facadeL && ifacefacade1 != ifacefacade2) {\n+        std::cerr<<\"End of buf marker before HtoD\"<< std::hex << ifacefacade1 << ifacefacade2<< \" buffer corrupt !\" <<std::endl\n+                <<\" \" << __FILE__ << \" line \" << __LINE__ << std::endl;\n+        exit(-1);\n+    }\n+\n+\n+    checkCudaErrors(cuMemcpyHtoDAsync(devicePtr, arg->value.buffer.memorySegment, arg->value.buffer.sizeInBytes,cudaKernel->cudaStream));\n+    cudaError_t t1 = cudaStreamSynchronize(cudaKernel->cudaStream);\n+    if (CUDA_SUCCESS != t1) {\n+        std::cerr << \"CUDA error = \" << t1\n+                  <<\" \" << cudaGetErrorString(static_cast<cudaError_t>(t1))\n+                  <<\" \" << __FILE__ << \" line \" << __LINE__ << std::endl;\n+        exit(-1);\n+    }\n@@ -126,4 +151,5 @@\n-    std::cout << \"copyFromDevice() \" << arg->value.buffer.sizeInBytes\n-              << \"devptr \" << std::hex<<  (long)devicePtr <<std::dec\n-              << std::endl;\n-    checkCudaErrors(cuMemcpyDtoH(arg->value.buffer.memorySegment, devicePtr, arg->value.buffer.sizeInBytes));\n+    CudaKernel * cudaKernel = dynamic_cast<CudaKernel*>(kernel);\n+ \/\/   std::cout << \"copyFromDevice() 0x\" << std::hex<<arg->value.buffer.sizeInBytes<<std::dec << \" \"<< arg->value.buffer.sizeInBytes << \" \"\n+ \/\/             << \"devptr \" << std::hex<<  (long)devicePtr <<std::dec\n+  \/\/            << std::endl;\n+    char *ptr = (char*)arg->value.buffer.memorySegment;\n@@ -131,0 +157,24 @@\n+    unsigned long ifacefacade1 = *reinterpret_cast<unsigned long*>(ptr+arg->value.buffer.sizeInBytes-16);\n+    unsigned long ifacefacade2 = *reinterpret_cast<unsigned long*>(ptr+arg->value.buffer.sizeInBytes-8);\n+\n+    if (ifacefacade1 != 0x1face00000facadeL || ifacefacade1 != ifacefacade2) {\n+        std::cerr<<\"end of buf marker before  DtoH\"<< std::hex << ifacefacade1 << ifacefacade2<< std::dec<< \" buffer corrupt !\"<<std::endl\n+                  <<\" \" << __FILE__ << \" line \" << __LINE__ << std::endl;\n+        exit(-1);\n+    }\n+    checkCudaErrors(cuMemcpyDtoHAsync(arg->value.buffer.memorySegment, devicePtr, arg->value.buffer.sizeInBytes,cudaKernel->cudaStream));\n+    cudaError_t t1 = cudaStreamSynchronize(cudaKernel->cudaStream);\n+    if (CUDA_SUCCESS != t1) {\n+        std::cerr << \"CUDA error = \" << t1\n+                  <<\" \" << cudaGetErrorString(static_cast<cudaError_t>(t1))\n+                  <<\" \" << __FILE__ << \" line \" << __LINE__ << std::endl;\n+        exit(-1);\n+    }\n+    ifacefacade1 = *reinterpret_cast<unsigned long*>(ptr+arg->value.buffer.sizeInBytes-16);\n+    ifacefacade2 = *reinterpret_cast<unsigned long*>(ptr+arg->value.buffer.sizeInBytes-8);\n+\n+    if (ifacefacade1 != 0x1face00000facadeL || ifacefacade1 != ifacefacade2) {\n+        std::cerr<<\"end of buf marker after  DtoH\"<< std::hex << ifacefacade1 << ifacefacade2<< std::dec<< \" buffer corrupt !\"<<std::endl\n+                  <<\" \" << __FILE__ << \" line \" << __LINE__ << std::endl;\n+        exit(-1);\n+    }\n@@ -143,1 +193,2 @@\n-    std::cout << \"ndrange(\" << range << \") \" << name << std::endl;\n+  \/\/  std::cout << \"ndrange(\" << range << \") \" << name << std::endl;\n+    cudaStreamCreate(&cudaStream);\n@@ -145,1 +196,1 @@\n-    Schema::dumpSled(std::cout, argArray);\n+ \/\/   Schema::dumpSled(std::cout, argArray);\n@@ -156,1 +207,0 @@\n-                cudaError_t t = cudaDeviceSynchronize();\n@@ -182,4 +232,4 @@\n-    std::cout << \"Running the kernel...\" << std::endl;\n-    std::cout << \"   Requested range   = \" << range << std::endl;\n-    std::cout << \"   Range mod 1024    = \" << rangemod1024 << std::endl;\n-    std::cout << \"   Actual range 1024 = \" << (rangediv1024 * 1024) << std::endl;\n+   \/\/ std::cout << \"Running the kernel...\" << std::endl;\n+  \/\/  std::cout << \"   Requested range   = \" << range << std::endl;\n+  \/\/  std::cout << \"   Range mod 1024    = \" << rangemod1024 << std::endl;\n+   \/\/ std::cout << \"   Actual range 1024 = \" << (rangediv1024 * 1024) << std::endl;\n@@ -187,0 +237,7 @@\n+    cudaError_t t0 = cudaStreamSynchronize(cudaStream);\n+    if (CUDA_SUCCESS != t0) {\n+        std::cerr << \"CUDA error = \" << t0\n+                  <<\" \" << cudaGetErrorString(static_cast<cudaError_t>(t0))\n+                  <<\" \" << __FILE__ << \" line \" << __LINE__ << std::endl;\n+        exit(-1);\n+    }\n@@ -191,4 +248,2 @@\n-                                   0, 0,\n-                                   argslist, 0));\n-\n-    cudaError_t t = cudaDeviceSynchronize();\n+                                   0, cudaStream,\n+                    argslist, 0));\n@@ -196,0 +251,7 @@\n+    cudaError_t t1 = cudaStreamSynchronize(cudaStream);\n+    if (CUDA_SUCCESS != t1) {\n+        std::cerr << \"CUDA error = \" << t1\n+                  <<\" \" << cudaGetErrorString(static_cast<cudaError_t>(t1))\n+                  <<\" \" << __FILE__ << \" line \" << __LINE__ << std::endl;\n+        exit(-1);\n+    }\n@@ -203,1 +265,1 @@\n-            cudaError_t t = cudaDeviceSynchronize();\n+\n@@ -206,0 +268,7 @@\n+    cudaError_t t2 =   cudaStreamSynchronize(cudaStream);\n+    if (CUDA_SUCCESS != t2) {\n+        std::cerr << \"CUDA error = \" << t2\n+                  <<\" \" << cudaGetErrorString(static_cast<cudaError_t>(t2))\n+                  <<\" \" << __FILE__ << \" line \" << __LINE__ << std::endl;\n+        exit(-1);\n+    }\n@@ -214,0 +283,1 @@\n+    cudaStreamDestroy(cudaStream);\n@@ -227,1 +297,1 @@\n-    std::cout << \"trying to get kernelFunction \" << name << std::endl;\n+  \/\/  std::cout << \"trying to get kernelFunction \" << name << std::endl;\n@@ -242,2 +312,2 @@\n-    std::cout << \"CudaBackend constructor \" << ((cudaConfig == nullptr) ? \"cudaConfig== null\" : \"got cudaConfig\")\n-              << std::endl;\n+  \/\/  std::cout << \"CudaBackend constructor \" << ((cudaConfig == nullptr) ? \"cudaConfig== null\" : \"got cudaConfig\")\n+    \/\/          << std::endl;\n","filename":"hat\/backends\/cuda\/cpp\/cuda_backend.cpp","additions":100,"deletions":30,"binary":false,"changes":130,"status":"modified"},{"patch":"@@ -103,0 +103,1 @@\n+            cudaStream_t cudaStream;\n","filename":"hat\/backends\/cuda\/include\/cuda_backend.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -472,1 +472,1 @@\n-                out << \"F32:\" << arg->value.s32 << std::endl;\n+                out << \"F32:\" << arg->value.f32 << std::endl;\n@@ -499,1 +499,1 @@\n-    std::cout << \"trampolining through backendHandle to backend.getMaxComputeUnits()\" << std::endl;\n+   \/\/ std::cout << \"trampolining through backendHandle to backend.getMaxComputeUnits()\" << std::endl;\n@@ -505,1 +505,1 @@\n-    std::cout << \"trampolining through backendHandle to backend.info()\" << std::endl;\n+  \/\/  std::cout << \"trampolining through backendHandle to backend.info()\" << std::endl;\n@@ -519,1 +519,1 @@\n-    std::cout << \"trampolining through programHandle to program.getKernel()\" << std::endl;\n+  \/\/  std::cout << \"trampolining through programHandle to program.getKernel()\" << std::endl;\n@@ -525,1 +525,1 @@\n-    std::cout << \"trampolining through kernelHandle to kernel.ndrange(...) \" << std::endl;\n+  \/\/  std::cout << \"trampolining through kernelHandle to kernel.ndrange(...) \" << std::endl;\n","filename":"hat\/backends\/shared\/cpp\/shared.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -38,2 +38,4 @@\n-        int value = s32Array.array(kc.x);          \/\/ arr[cc.x]\n-        s32Array.array(kc.x, value * value);  \/\/ arr[cc.x]=value*value\n+        if (kc.x<s32Array.length()){\n+           int value = s32Array.array(kc.x);     \/\/ arr[cc.x]\n+           s32Array.array(kc.x, value * value);  \/\/ arr[cc.x]=value*value\n+        }\n@@ -50,1 +52,1 @@\n-        var arr = S32Array.create(accelerator, 100);\n+        var arr = S32Array.create(accelerator, 32);\n","filename":"hat\/examples\/squares\/src\/java\/squares\/Squares.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -68,4 +68,1 @@\n-    A pure java implementation sp no @CodeReflection\n-\n-      ViolaJonesCompute.rgbToGreyScale(rgbS08x3Image, greyImage);\n-                ViolaJonesCompute.createIntegralImage(greyImage, integralImage, integralSqImage);\n+     * A pure java implementation so no @CodeReflection\n@@ -73,1 +70,1 @@\n-    static long rgbToGreyScale(RgbS08x3Image rgb, F32Array2D grey) {\n+    static long javaRgbToGreyScale(RgbS08x3Image rgb, F32Array2D grey) {\n@@ -86,1 +83,3 @@\n-        rgbToGrey(kc.x, rgbImage, greyImage);\n+        if (kc.x < kc.maxX){\n+           rgbToGrey(kc.x, rgbImage, greyImage);\n+        }\n@@ -100,5 +99,5 @@\n-        int width = greyImage.width();\n-        int height = greyImage.height();\n-        for (int y = 1; y < height; y++) {\n-            integralCol((y * width) + kc.x, width, greyImage, integral, integralSq);\n-        }\n+           int width = greyImage.width();\n+           int height = greyImage.height();\n+           for (int y = 1; y < height; y++) {\n+               integralCol((y * width) + kc.x, width, greyImage, integral, integralSq);\n+           }\n@@ -117,4 +116,4 @@\n-        int width = integral.width();\n-        for (int x = 1; x < width; x++) {\n-            integralRow((kc.x * width) + x, integral, integralSq);\n-        }\n+           int width = integral.width();\n+           for (int x = 1; x < width; x++) {\n+               integralRow((kc.x * width) + x, integral, integralSq);\n+           }\n@@ -125,2 +124,1 @@\n-    A pure java implementation so o @CodeReflection\n-         ViolaJonesCompute.createIntegralImage(greyImage, integralImage, integralSqImage);\n+     * A pure java implementation so no @CodeReflection\n@@ -128,1 +126,1 @@\n-    public static long createIntegralImage(F32Array2D greyFloats, F32Array2D integral, F32Array2D integralSq) {\n+    public static long javaCreateIntegralImage(F32Array2D greyFloats, F32Array2D integral, F32Array2D integralSq) {\n@@ -133,1 +131,1 @@\n-        \/\/ The col pass createw both the integral and integralSq cols and populate the 'square'\n+        \/\/ The col pass creates both the integral and integralSq cols and populate the 'square'\n@@ -178,1 +176,0 @@\n-        \/\/ s.array(gid,stage.id());\n@@ -188,1 +185,1 @@\n-                \/\/ so this is less wave divergent...\n+                \/\/ so this is theoretically less wave divergent...\n@@ -198,1 +195,1 @@\n-                    }\/\/ weight is 0 for unused\n+                    }\/\/ weight is 0 for unused so should not impact featureGradientSum\n@@ -200,0 +197,1 @@\n+\n@@ -215,1 +213,0 @@\n-\n@@ -290,1 +287,3 @@\n-        cc.dispatchKernel(width * height, kc -> rgbToGreyKernel(kc, rgbS08x3Image, greyImage));\n+        javaRgbToGreyScale(rgbS08x3Image, greyImage);\n+\n+        \/\/cc.dispatchKernel(width * height, kc -> rgbToGreyKernel(kc, rgbS08x3Image, greyImage));\n@@ -293,1 +292,1 @@\n-        \/\/ createIntegralImage(greyImage, integralImage, integralSqImage);\n+        javaCreateIntegralImage(greyImage, integralImage, integralSqImage);\n@@ -295,2 +294,2 @@\n-        cc.dispatchKernel(width, kc -> integralColKernel(kc, greyImage, integralImage, integralSqImage));\n-        cc.dispatchKernel(height, kc -> integralRowKernel(kc, integralImage, integralSqImage));\n+        \/\/cc.dispatchKernel(width, kc -> integralColKernel(kc, greyImage, integralImage, integralSqImage));\n+        \/\/cc.dispatchKernel(height, kc -> integralRowKernel(kc, integralImage, integralSqImage));\n@@ -309,1 +308,4 @@\n-        BufferedImage nasa1996 = ImageIO.read(ViolaJones.class.getResourceAsStream(\"\/images\/Nasa1996.jpg\"));\n+        BufferedImage nasa1996 = ImageIO.read(ViolaJones.class.getResourceAsStream(\n+              \/\/ \"\/images\/team.jpg\"\n+               \"\/images\/Nasa1996.jpg\"\n+        ));\n@@ -315,1 +317,1 @@\n-        ResultTable resultTable = ResultTable.create(accelerator, 1000);\n+        ResultTable resultTable = ResultTable.create(accelerator, 10000);\n","filename":"hat\/examples\/violajones\/src\/java\/violajones\/ViolaJonesCompute.java","additions":31,"deletions":29,"binary":false,"changes":60,"status":"modified"},{"filename":"hat\/examples\/violajones\/src\/resources\/images\/eggheads.jpg","binary":true,"status":"added"},{"filename":"hat\/examples\/violajones\/src\/resources\/images\/team.jpg","binary":true,"status":"added"},{"patch":"@@ -72,1 +72,1 @@\n-            System.out.println(\"requesting dispatch range \"+ndRange.kid.maxX);\n+            \/\/System.out.println(\"requesting dispatch range \"+ndRange.kid.maxX);\n","filename":"hat\/hat\/src\/java\/hat\/backend\/C99NativeBackend.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -320,2 +320,15 @@\n-\n-        return get(arena.allocate(layout()), layout());\n+        \/\/ To help debug we add a tail marker\n+        \/\/ We add 16 bytes and then pad to the next 16 bytes\n+        \/\/ and request alignment on 16 byte boundary\n+        long byteSize = layout().byteSize();\n+        long extendedByteSize = byteSize+16;\n+        long byteSizePad = extendedByteSize%16;\n+        if (byteSizePad != 0){\n+            byteSizePad = 16-byteSizePad;\n+        }\n+        long extendedByteSizePaddedTo16Bytes = extendedByteSize+byteSizePad;\n+        \/\/System.out.println(\"Alloc 16 byte aligned layout + 16 bytes padded to next 16 bytes \"+byteSize+\"=>\"+extendedByteSizePaddedTo16Bytes);\n+        var segment = arena.allocate(extendedByteSizePaddedTo16Bytes, 16);\n+        segment.set(ValueLayout.JAVA_LONG, extendedByteSizePaddedTo16Bytes-16,0x1face00000facadeL);\n+        segment.set(ValueLayout.JAVA_LONG, extendedByteSizePaddedTo16Bytes-8, 0x1face00000facadeL);\n+        return get(segment, layout());\n","filename":"hat\/hat\/src\/java\/hat\/ifacemapper\/SegmentMapper.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"}]}