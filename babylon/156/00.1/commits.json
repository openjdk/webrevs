[{"commit":{"message":"Merge master"},"files":[{"filename":".jcheck\/conf"},{"filename":"cr-examples\/spirv\/pom.xml"},{"filename":"cr-examples\/triton\/pom.xml"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TritonTestExtension.java"},{"filename":"hat\/pom.xml"},{"filename":"make\/conf\/module-loader-map.conf"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBranchCompactor.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt"}],"sha":"7166b8647d2631dc18cfcbbe9f14dc1c2619a77c"},{"commit":{"message":"Report no attribute present when extracting attribute value from externalized op"},"files":[],"sha":"260ce26ce3f09213f185d1637cb6f546ddbbd3e7"},{"commit":{"message":"Experiments - considering replacing Layout with Schema"},"files":[],"sha":"739ecc84067e1e13ab598ad1b908de13685834e3"},{"commit":{"message":"Computes the VarOp's result type from its operand type, if not overridden"},"files":[],"sha":"fbe81534cebee2b10011b305b34bc0b2509ade1b"},{"commit":{"message":"Experimenting using Schema to hide layouts and interface with ptrs"},"files":[],"sha":"cefd28f3e04bdfd1e8b097fd0ca762eb1a2dedb2"},{"commit":{"message":"More HatOp.Ptr experiments"},"files":[{"filename":"hat\/pom.xml"}],"sha":"5eee96430653456943d1035a8aa134f1900dc905"},{"commit":{"message":"Hat ptr op and type experiments"},"files":[{"filename":"hat\/pom.xml"}],"sha":"eb6a3210b105b7e815d474bd5c57a3788ba255da"},{"commit":{"message":"Some HAT cleanups"},"files":[],"sha":"151840bf8b8ff34482c4bd8316204bac5f67d676"},{"commit":{"message":"Fixup babylon location property and remove spirv backend from default"},"files":[{"filename":"hat\/pom.xml"}],"sha":"3a33038ff06f37a7c72b6b2e716d0f3b648e0d9e"},{"commit":{"message":"Switching to maven build"},"files":[{"filename":"hat\/pom.xml"}],"sha":"a70d3e942f3109278ef8c4ae5abf19d552e9395a"},{"commit":{"message":"Removed heal and view examples - will return when working"},"files":[{"filename":"hat\/pom.xml"}],"sha":"f21fef0fcefd8f5d78a35ade6c71780bfbf130a1"},{"commit":{"message":"Cloned CUDA backend native code to PTX backend"},"files":[],"sha":"f13945dc5192e617397b3a3b935e8b775494eb26"},{"commit":{"message":"ComputeContext can now implement BufferAllocator"},"files":[],"sha":"8dd9d6389c5b67e23ac5d128df6970a62f11af9e"},{"commit":{"message":"Decouple iface segment mapper allocation from Acclerator"},"files":[],"sha":"9ebc8afcf5ff971b4de215bd64714588a97537d4"},{"commit":{"message":"Allow static access to layouts of iface mapped segments"},"files":[],"sha":"d100b1e674227a7ed262d0ef42eb23c174fd282f"},{"commit":{"message":"Adding intellij test infrastructure and seeding with code from exampl…"},"files":[],"sha":"67f8e13c7448e9e4d836ac35ee6f6c3ba74fc57c"},{"commit":{"message":"Committing a Concatenation transformation to StringBuilder\n\nReviewed-by: psandoz"},"files":[],"sha":"9c68e18a373840faaadbe9360ccf2cf3884b7c03"},{"commit":{"message":"SPIRV backend needs extra dependencies make it optional"},"files":[],"sha":"df0c75660dfdddcb196028792ddfe3f2f4663c40"},{"commit":{"message":"Add relative paths to spirv iml fileso we can build with intellij"},"files":[],"sha":"d8fe2aad2e958ef03ae2e8352e4d48426ddb38d4"},{"commit":{"message":"Documenting SPIRV dependencies"},"files":[],"sha":"060641237cc19d8a6efd7d4bc9d5c7106def9377"},{"commit":{"message":"Remove need for manual initial creation of backends\/cmake-debug-build"},"files":[],"sha":"bcb21cf760cb4e658bec993a25ee40dea82043b1"},{"commit":{"message":"Allow FuncOpWrapper to wrap SSA lowered funcOps"},"files":[],"sha":"e1f4da33be6a37bd1b018a5bc0aa5530f499a085"},{"commit":{"message":"updates README.md to include fix for backend cmake"},"files":[],"sha":"4c82341905c535b7417940a91eb64f61b3396a67"},{"commit":{"message":"Switch to using maven as primary build"},"files":[{"filename":"hat\/pom.xml"}],"sha":"75a7a0bf188ab215315b95a76c2203c04312fc46"},{"commit":{"message":"Example code for article"},"files":[],"sha":"e052f93df840b4b455d4a99ede3346f888b4a6ab"},{"commit":{"message":"Discovered some properties are inherited in maven"},"files":[{"filename":"hat\/pom.xml"}],"sha":"8f666411820c2bef1f5c356e7f1e8dd0165b37ad"},{"commit":{"message":"Experiments with HatPtrOp"},"files":[],"sha":"7c1c89496eea90bf84121bbcf812e3bec6c24768"},{"commit":{"message":"Experiments with HatPtrOp"},"files":[],"sha":"4dd67819b05d7304b51d2f6ffab8b2a1f8f51c1c"},{"commit":{"message":"Allow schema decoding from native code"},"files":[],"sha":"7ac4bff218090ac4cc0d7aec965294baa8ecbf7c"},{"commit":{"message":"Introduced cuda error with last push.  This fixes it"},"files":[],"sha":"1dd9f8b663333b9c5de4090aa373daea0e5640c7"},{"commit":{"message":"Fixed up schema parsing from the backend.  Mostly for debug"},"files":[],"sha":"4bb3facec7492be87f0ef751d12ea01229d47a31"},{"commit":{"message":"Mavenized backend building"},"files":[{"filename":"hat\/pom.xml"}],"sha":"e7ada25d4c01c76461bf5cd73b928138050f11f8"},{"commit":{"message":"Mavenize the repo. Mostly file moves to maven layout form"},"files":[{"filename":"hat\/pom.xml"}],"sha":"5033e60403b81299346bb6763a22881974fbf8e2"},{"commit":{"message":"Found the violajones off by one error"},"files":[],"sha":"b32d7186e285b5a1c5b28ff6d96af007fef49c69"},{"commit":{"message":"Use more generic location for nvcc"},"files":[],"sha":"4cdff2b081032d05ac34c1b4757078a4b2a3bc4f"},{"commit":{"message":"Fix cuda cmake errors"},"files":[],"sha":"142c336ed07b123df9d095a87914642e7d4e04fa"},{"commit":{"message":"Null check only when selector expression of switch expression is of reference type\n\nReviewed-by: psandoz"},"files":[],"sha":"edadd5261cf5a98318d4a8038c7336554faea5bc"},{"commit":{"message":"cmake tidyup and access with maven build"},"files":[{"filename":"hat\/pom.xml"}],"sha":"cbf1b934d8d1bddd81735d880ecdf73bfe0d77e7"},{"commit":{"message":"attempt to mavenize hat starting with opencl targets - ongoing"},"files":[{"filename":"hat\/pom.xml"}],"sha":"f2ca61566b212e2730d4c8e61b0f62a004115197"},{"commit":{"message":"Improve JavaType::toString\n\nReviewed-by: psandoz"},"files":[],"sha":"1ad028fd0f74ec61e54b183902b4dea4af0c36b5"},{"commit":{"message":"Add support for local classes\n\nReviewed-by: psandoz"},"files":[],"sha":"3c76e6c32bff59006830be12e18a73793f371c76"},{"commit":{"message":"Updates to healing brush demo conversion to hat - ongoing"},"files":[],"sha":"d516b37d1460a1f19cdd8a34c21e39b4f9765295"},{"commit":{"message":"Lower SwitchExpressionOp\n\nReviewed-by: psandoz"},"files":[],"sha":"deebe32acf20eaf2679b811b7caafa7b71704d26"},{"commit":{"message":"Bytecode round 6 - lifting lambdas\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"0cafc73c9556e7d6269f85bf43dd3610d99228b5"},{"commit":{"message":"Add support for enclosing class types\n\nReviewed-by: psandoz"},"files":[],"sha":"ba4e9a15de5f598c934d300d6314b999153af888"},{"commit":{"message":"Converting healing brush to use HAT also offered a headless variant f…"},"files":[],"sha":"7c838871c8ceca9dcd1486b5be68cd54856b0bc4"},{"commit":{"message":"fix std::string to char * for kernel names"},"files":[],"sha":"6b6ef00e4bb2bb92df408dfa07f84a3619807308"},{"commit":{"message":"cuda fixes for violajones"},"files":[],"sha":"a3bd91f1c84726df5c024a2976aba3d2a30e3feb"},{"commit":{"message":"Fixed up ptx backend (native) so that PTX work can begin"},"files":[],"sha":"23471fb4b7bc38d161f6f9babf2496ae6bfdf1b7"},{"commit":{"message":"Found CUDA issue.  This is the fix part1"},"files":[],"sha":"a8e16a75e629f2620d05318baa16b9739618575d"},{"commit":{"message":"added 16 byte alignment of buffers and tail markers to help detect ar…"},"files":[],"sha":"75cd5868e7b7b574cc4036991438f18f3de86976"},{"commit":{"message":"Updated code for dumping schema (debugging cuda violajones)"},"files":[],"sha":"e78c408a0765f21fd39c01c7e60f5abfcdbe1cad"},{"commit":{"message":"Clearly mark which AST nodes are unsupported in ReflectMethods\n\nReviewed-by: psandoz"},"files":[],"sha":"331553ef0ee0a218537ed7b96092266586a5f251"},{"commit":{"message":"Test for creating a module of functions from invocations"},"files":[],"sha":"4bdc86cf4a7090fc2cf44bae4cc9e4cc3fb952da"},{"commit":{"message":"At least one element in 'flexible array members' for some OpenCL comp…"},"files":[],"sha":"eea106e1ea9566b14abafa959809f52b6202ad4e"},{"commit":{"message":"create cuda version of new squares demo"},"files":[],"sha":"794db764f0b5f887abeb47511967663060b40b1a"},{"commit":{"message":"initial work dumping schema from native"},"files":[],"sha":"296adf034c4b088c855b64c07355f48ee9bc1886"},{"commit":{"message":"OpWriter block naming align with block indexes\n\nReviewed-by: psandoz"},"files":[],"sha":"0fbbbabff57f667f75db68c1b7a18827e7397b91"},{"commit":{"message":"added some examples to migrate to hat"},"files":[],"sha":"0bee7cb80243a67786fa0d4a1d2c05f1aae39a28"},{"commit":{"message":"Hat sync with cuda changes"},"files":[],"sha":"97bfd7da9dfff0b8deb713b996a3be99be109e74"},{"commit":{"message":"Hat sync with cuda changes"},"files":[],"sha":"9477fa0b630558379ee301a37f24cb94c5dfd359"},{"commit":{"message":"Hat find cuda ill access"},"files":[],"sha":"02aa9965f701e5e51fe897e199ee44c498de154f"},{"commit":{"message":"Hat opencl cuda mergees"},"files":[],"sha":"1491ae304c998114a37788f33b4d64ffd6b314d4"},{"commit":{"message":"Clion CMakeLists.txt updates for ubuntu opencl"},"files":[],"sha":"185bb8cae550a9c3d942f1f47ecca6bd58179e0a"},{"commit":{"message":"Ubuntu opencl cmake fix for opencl shared libs and execs"},"files":[],"sha":"2765d8f0019a9f8ffca054aea0c5d6cfdaecce1c"},{"commit":{"message":"BytecodeLift implementation progress + SlotOp\n\nCo-authored-by: Paul Sandoz <psandoz@openjdk.org>\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"fda73bd58170a75feaccbc0e6ad7a313655e70bb"},{"commit":{"message":"add cmake opencl stanza for non Apple machines"},"files":[],"sha":"9839e4b4f90d79f2134c1a61d245a47296c83d2f"},{"commit":{"message":"fix opencl buffer created by last cuda fix.."},"files":[],"sha":"d49ac72ef3145c95b8be12443fc231dffcada957"},{"commit":{"message":"Fixed Race Condition in PTX nvcc compiler. Also atomicInc->atomicAdd"},"files":[],"sha":"0e2b2deb2dd8b8c5d08c7346d45aabe7f3394d8e"},{"commit":{"message":"Add CUDA Clion artifacts and cleanup cuda backend"},"files":[],"sha":"1cfb2ca06162ca75a206c9877fd65b750303d385"},{"commit":{"message":"Added Clion CMakefile to backends reformated cpp\/h files"},"files":[],"sha":"b55e2964c64b214302cf8f09021ae443ccdd6c0e"},{"commit":{"message":"Hat initial implementation and build infrastructure"},"files":[],"sha":"f9b5a0a0043b6dfe20d682b4ea44400b1cd6aa3c"},{"commit":{"message":"HAT needs public access to TranslateToSpirvModel"},"files":[],"sha":"db004979307b5e1785071496f2144d91168832aa"},{"commit":{"message":"Enhance OpWriter"},"files":[],"sha":"4f01364a50c7bf7a04600e8365bdc7031b2b8172"},{"commit":{"message":"Sealed interfaces marking operations that model a Java language construct\n\nReviewed-by: mcimadamore"},"files":[],"sha":"650e4cfd9c251ed70432b7cd00f91424b8873d5c"},{"commit":{"message":"Implement bitwise\/shift assignment operations\n\nReviewed-by: psandoz"},"files":[],"sha":"dd4adba1afa1cc7845cbf7c85299743b79460d40"},{"commit":{"message":"Fix triton example."},"files":[],"sha":"cf4cf1c2a01bb192f14b64cae7b7f8e56257def9"},{"commit":{"message":"Lowering transformer"},"files":[],"sha":"6174c8fd06e2741c5ba1211ea9ead05d5110f846"},{"commit":{"message":"Fix test"},"files":[],"sha":"2f08574e9d4b72b5a4bc0d3788891ca0acd7c85a"},{"commit":{"message":"CoreOps to CoreOp, ExtendedOps to ExtendedOp\n\nReviewed-by: mcimadamore"},"files":[{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TritonTestExtension.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java"}],"sha":"903d8b6006d4b567b0522e54e9715c047b8d5092"},{"commit":{"message":"Refactor TypeDefinition to ExternalizedTypeElement\n\nReviewed-by: mcimadamore"},"files":[],"sha":"b72a25864e90c90870e90a627f4169cef020e246"},{"commit":{"message":"Cleanup JavaType factories\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"66cf4eaf8d5c41ffb8e5ca9684f0f8968af19bef"},{"commit":{"message":"Externalizable operations\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"9a3a7362aad3d8958c4f027983a32d9fafe77498"},{"commit":{"message":"Fix test"},"files":[],"sha":"9a60b26b678735204971c6955c61359e27415dbb"},{"commit":{"message":"Merge"},"files":[{"filename":".jcheck\/conf"},{"filename":"make\/conf\/module-loader-map.conf"},{"filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"80efbb6b9cda068d21ef34349e9c42a9dbcd8abb"},{"commit":{"message":"Clean up support for boxing\n\nReviewed-by: psandoz"},"files":[],"sha":"ac9bc55a1fabfed9a7133156371b1133dfc42e4d"},{"commit":{"message":"Make jdk.compiler build depend on code model API in java.base\n\nReviewed-by: psandoz"},"files":[],"sha":"b5030b313b8182284e0b9ce90633019bbc4fb7bf"},{"commit":{"message":"Add common supertype for type-variable owners\n\nReviewed-by: psandoz"},"files":[],"sha":"78b961661ac8c7e97565da78e9f330f45f17595b"},{"commit":{"message":"Enable pattern matching for JavaType hierarchy\n\nReviewed-by: psandoz"},"files":[],"sha":"a130820f1842de6b9d9256f5285128e843a77209"},{"commit":{"message":"Fix test failure after PR\/51\n\nReviewed-by: psandoz"},"files":[],"sha":"799abb7f548d6e21d40bda11878b2a9f072f2c2d"},{"commit":{"message":"Add support for more types\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"}],"sha":"6713aca070d5cab3a97c1cc19035a13d875d8641"},{"commit":{"message":"8324789: Add line number information to code models\n\nReviewed-by: mcimadamore"},"files":[],"sha":"9f35792fc834a9c89d3f7a13547e3f0a75178c01"},{"commit":{"message":"Preserve order of captured value"},"files":[],"sha":"628a9319dad7413118ad92f463f58907c476fb79"},{"commit":{"message":"Determine if lambda operation originates from a method reference\n\nReviewed-by: mcimadamore"},"files":[],"sha":"c1a89648a188071102743968998241f042a6a2a0"},{"commit":{"message":"Temporarily disable TestSmallCorpus tests\n\nReviewed-by: asotona"},"files":[],"sha":"455606199e82ac85ae01a9ba5c61315b52835979"},{"commit":{"message":"Refine support for captured values."},"files":[],"sha":"ebf319d0f67b2a9746786bd9221cb853550e4c8e"},{"commit":{"message":"BytecodeGenerator cleanup and and types handling fixes\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"55416a09557446376fb3a2877aed1112db66f84b"},{"commit":{"message":"Missing conversion for some unary operators\n\nReviewed-by: psandoz"},"files":[],"sha":"8408a32d201434408acf15420ff690575cd27c47"},{"commit":{"message":"InnerClassLambdaMetafactory fix of hidden classes handling\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"d02e7c6f9f6f80f028f5eeb82e93eea6d2161287"},{"commit":{"message":"Issues with captures in quotable lambdas\n\nReviewed-by: psandoz"},"files":[],"sha":"0f1e4e1c0c3c44ac7f54814e4ebc81273f946c04"},{"commit":{"message":"Implement shift ops\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"a0e0953b736c2ae0eaa0f859e90801f3954c326b"},{"commit":{"message":"BytecodeGenerator support of lambdas\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"cdf3f9ba0bd3555d2af49e0c7089d63d4348f1b8"},{"commit":{"message":"Erase receiver type before calling Gen::binaryQualifier\n\nReviewed-by: psandoz"},"files":[],"sha":"ff2074f84ab339eee340eeab435a5ae1afc1a7c4"},{"commit":{"message":"Adding String Concatenation to Code Model (#47)\n\n* Initial commit\r\n\r\n* Shortening up tests and minor tweaks\r\n\r\n* Test tweak\r\n\r\n* Test cleanups\r\n\r\n* Updates and cleanup\r\n\r\n* Removing unused var\r\n\r\n* Tweaks"},"files":[],"sha":"a5c4db179e696bbb919a34c7c7b36d97381baec8"},{"commit":{"message":"Refactor JavaType\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"950402e4b55770590c9a5bc3efa9ee7f47d5c509"},{"commit":{"message":"More systematic binary op tests\n\nReviewed-by: psandoz"},"files":[],"sha":"9cc359783867c9567751207efe369cc08655754b"},{"commit":{"message":"BytecodeGenerator, BytecodeLift and TestBytecode improvements\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"8cf98debb1fa405c5f93840db63625accaa3d8ea"},{"commit":{"message":"Uncomment a String Template Test\n\nReviewed-by: psandoz"},"files":[],"sha":"452c99d7b608c40b6c560ce89180415b15bea2c9"},{"commit":{"message":"Test remove final vars\n\nReviewed-by: psandoz"},"files":[],"sha":"6bc5733d0f155c50dfbd12b4a697c1a4eb5fafc3"},{"commit":{"message":"Lower StringTemplateOp\n\nReviewed-by: psandoz"},"files":[],"sha":"3a66a65e443cdcefc75250a514210151ba7e9482"},{"commit":{"message":"Generate bytecode from an invokable op."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"4de0b9f6f662febda804a4e1c96c33ef7b0ddfa1"},{"commit":{"message":"Fix unbox invocation"},"files":[],"sha":"5549b694b691410a354cf0c7a579cdcd9222341b"},{"commit":{"message":"Example use of code reflection in translating Java to SPIR-V\n\nReviewed-by: psandoz"},"files":[{"filename":"cr-examples\/spirv\/pom.xml"}],"sha":"459ba14f646faa03363a3a1c9ebfd3c1cdf5d145"},{"commit":{"message":"A transformer of code models to models that build them."},"files":[],"sha":"638ba1f7958896fb3fc2a0e5c638f4a2317bdd3a"},{"commit":{"message":"Assertion Interpreter Implementation\n\nReviewed-by: psandoz"},"files":[],"sha":"90df3aab5fc5c3bdfcea3afa6d63cc2680ce8820"},{"commit":{"message":"Model String Template\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"dd7330830f3e348389f903285a344913613d9916"},{"commit":{"message":"Obtain parent code element from code element"},"files":[],"sha":"7d6516667fe7aac0d5ef2d12df77d36ee60c4185"},{"commit":{"message":"Code model from method reference\n\nReviewed-by: mcimadamore"},"files":[],"sha":"8fcbeee32fb423d0fb9c006cafb38b0839122504"},{"commit":{"message":"Descriptor to reference\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"}],"sha":"2c33eecc9fc7430c40e69337b66daca050040e05"},{"commit":{"message":"Assert code modeling\n\nReviewed-by: psandoz"},"files":[],"sha":"27acfb68f4ecc40042cadbbc597ce60a6a1b27d1"},{"commit":{"message":"Remove MethodTypeDesc\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"03f40c2a1dd46e6f2fffdc2e5edafbac200d8fbf"},{"commit":{"message":"Separate TypeElement from Type."},"files":[{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TritonTestExtension.java"}],"sha":"ff61eaec5473bee3fb79b078dc33b541141a1da8"},{"commit":{"message":"Fix compilation issue with CodeElement.elements"},"files":[],"sha":"b5cd25da8d7cbbbc39e0c399c48a403c6ff36b9e"},{"commit":{"message":"Stream code elements"},"files":[],"sha":"b9f92bbbbf9c8d4cc33f2768dae95862d701d83a"},{"commit":{"message":"Invokable block parameters"},"files":[],"sha":"d94e0338a5d4800b30aa2492c4f3652c7f046af4"},{"commit":{"message":"Structured type definition\n\nReviewed-by: mcimadamore"},"files":[],"sha":"da4c4fa3c76a7bcc870ea5bbd5042f05b3e86984"},{"commit":{"message":"Testing BytecodeLift and BytecodeGenerator roundtrip stability\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"8c6b5754fd043348ec193d78b5b505111fe7b3b9"},{"commit":{"message":"Replace use of MethodTypeDesc with FunctionType"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"75cc28c1c059c9836f42f42f645976250fc2516e"},{"commit":{"message":"Add and\/or\/xor operations to code model\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"ec239acc07b5178d0e029c9019664326c7bd0d7d"},{"commit":{"message":"Review FieldLoadOp\n\nReviewed-by: psandoz"},"files":[],"sha":"d3ea092a795be6b2436dc6fe2efe7f8ac9efa078"},{"commit":{"message":"Update linq example."},"files":[],"sha":"21dd5bed47ddda6e74bd177f48cdbf28342d9fc4"},{"commit":{"message":"Extensible types in the code model"},"files":[{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TritonTestExtension.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"}],"sha":"b3d45e1af34028a7084f6981d34a2490af0a1eb4"},{"commit":{"message":"Remove bytecode dialect"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"}],"sha":"38480b4f1e711b6266ce7bc214596ae49d99022e"},{"commit":{"message":"PoC of Triton programming in Java"},"files":[{"filename":"cr-examples\/triton\/pom.xml"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TritonTestExtension.java"}],"sha":"aeb64a4196274b59a7486dccf52e1c5cc179d182"},{"commit":{"message":"Hide implementation computing global names"},"files":[{"filename":"src\/java.base\/share\/classes\/module-info.java"}],"sha":"72191af726a846e1e861137c134856e657b7869d"},{"commit":{"message":"More block checks"},"files":[],"sha":"ef1a5b4407d5c923f7cb09534b988da0bad49555"},{"commit":{"message":"Exception regions fix\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBranchCompactor.java"}],"sha":"a2ea58f77b5aee42288d722002fd5131d8e005ee"},{"commit":{"message":"Correct computation of block indexes\n\nReviewed-by: asotona"},"files":[],"sha":"16406cd82bc8c3f4f679e568fcc07681ea5ecf23"},{"commit":{"message":"8324556: Not copy result-type when copying an op (#6)\n\n* Not copy resultType when copying an op.\r\n\r\n* Apply Paul's suggestions\r\n\r\n* Add test\r\n\r\n* Review\r\n\r\n* Remove validation from resultType method\r\n\r\n* Add documentation"},"files":[],"sha":"b6d807e7e932e61b8cda431e791bc7085bff80f3"},{"commit":{"message":"Test break statements within try statements"},"files":[],"sha":"22719c50cd82ea7cc6a443b4c14d81d2dfccf39a"},{"commit":{"message":"Simple model testing when lowering"},"files":[],"sha":"21864db868023ce0492252e2b0f7d421b787833b"},{"commit":{"message":"Skip bytecode dialect part 1 - removed BytecodeLower\n"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"ee2661ebc4f911cf12c0193bcf506be75e15f743"},{"commit":{"message":"Make sure method parameters keep their slots when lowering\n\nReviewed-by: psandoz"},"files":[],"sha":"9835b5a64faf10699b4a8d17baf20caa1d094d9b"},{"commit":{"message":"Clean up some examples"},"files":[],"sha":"af40e7d754bc527797dc5c582750dba7c4c9e3af"},{"commit":{"message":"Update project of jcheck conf"},"files":[{"filename":".jcheck\/conf"}],"sha":"61ce338085d1509d49005dbf3af7fa12fa8752d7"},{"commit":{"message":"Support array type constants in code model\n\nReviewed-by: psandoz, mcimadamore"},"files":[],"sha":"a154e5e96ca1b21f9bf3a9eb7cc77a6cfb40093b"},{"commit":{"message":"throw instead returning when erasing checked to unchecked exception\n\nReviewed-by: psandoz"},"files":[],"sha":"92cbc7fc39f0a346435d36b73707f7a181c67bbe"},{"commit":{"message":"Update readme"},"files":[],"sha":"e7cfc9ee3b35857ae060389912578c3e21f80086"},{"commit":{"message":"Move j.l.r.code.impl.OpWriter to j.l.r.code.writer (#3)\n"},"files":[{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"ce9442fdf391f4de300e74c74c9f8889dce50b0e"},{"commit":{"message":"Initial code reflection prototype\n\nCo-authored-by: Mourad Abbay <mabbay@openjdk.org>\nCo-authored-by: Gary Frost <gfrost@openjdk.org>\nCo-authored-by: Ian Graves <igraves@openjdk.org>\nCo-authored-by: Maurizio Cimadamore <mcimadamore@openjdk.org>\nCo-authored-by: Adam Sotona <asotona@openjdk.org>"},"files":[{"filename":"make\/conf\/module-loader-map.conf"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt"}],"sha":"38abcc97ba1c0e7a49f0965a66acd71913303f82"},{"commit":{"message":"Update conf"},"files":[{"filename":".jcheck\/conf"}],"sha":"411da8ef435ede05641d888e2661cbee5a65e95b"}]