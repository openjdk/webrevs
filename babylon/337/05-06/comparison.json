{"files":[{"patch":"@@ -58,1 +58,1 @@\n-    record CachedModel(byte[] protoModel, int[] operandsMapping) {}\n+    record CachedSession(Session session, int[] operandsMapping) {}\n@@ -60,1 +60,1 @@\n-    static class CachedModelClassValue extends ClassValue<CachedModel> {\n+    static class CachedSessionClassValue extends ClassValue<CachedSession> {\n@@ -65,1 +65,1 @@\n-        CachedModel computeIfAbsent(Class<?> lambdaClass, MethodHandles.Lookup l,  Quoted q) {\n+        CachedSession computeIfAbsent(Class<?> lambdaClass, MethodHandles.Lookup l,  Quoted q) {\n@@ -78,1 +78,1 @@\n-        protected CachedModel computeValue(Class<?> type) {\n+        protected CachedSession computeValue(Class<?> type) {\n@@ -128,1 +128,3 @@\n-            return new CachedModel(OnnxProtoBuilder.build(onnxFunc.body().entryBlock()), operandsMapping);\n+            return new CachedSession(getInstance().createSession(\n+                    Arena.ofAuto(), \/\/ cached session must be created under its own auto arena\n+                    OnnxProtoBuilder.build(onnxFunc.body().entryBlock())), operandsMapping);\n@@ -132,1 +134,1 @@\n-    private static final CachedModelClassValue MODEL_CACHE = new CachedModelClassValue();\n+    private static final CachedSessionClassValue SESSION_CACHE = new CachedSessionClassValue();\n@@ -141,1 +143,1 @@\n-        var model = MODEL_CACHE.computeIfAbsent(codeLambda.getClass(), lookup, q);\n+        var model = SESSION_CACHE.computeIfAbsent(codeLambda.getClass(), lookup, q);\n@@ -150,7 +152,1 @@\n-        try {\n-            var session = getInstance().createSession(arena, model.protoModel());\n-            return session.run(arena, arguments).getFirst();\n-        } catch (RuntimeException e) {\n-            OnnxProtoPrinter.printModel(model.protoModel());\n-            throw e;\n-        }\n+        return model.session.run(arena, arguments).getFirst();\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxRuntime.java","additions":10,"deletions":14,"binary":false,"changes":24,"status":"modified"}]}