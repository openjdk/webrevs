{"files":[{"patch":"@@ -35,1 +35,1 @@\n-            var inputTensor = Tensor.ofFlat(-1f, 2, -3, 4, -5, 6);\n+            var inputTensor = Tensor.ofFlat(arena, -1f, 2, -3, 4, -5, 6);\n@@ -37,1 +37,1 @@\n-            var absExpectedTensor = Tensor.ofFlat(1f, 2, 3, 4, 5, 6);\n+            var absExpectedTensor = Tensor.ofFlat(arena, 1f, 2, 3, 4, 5, 6);\n@@ -53,1 +53,1 @@\n-            var addExpectedTensor = Tensor.ofFlat(0f, 4, 0, 8, 0, 12);\n+            var addExpectedTensor = Tensor.ofFlat(arena, 0f, 4, 0, 8, 0, 12);\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/RuntimeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+    static final long[] IMAGE_SHAPE = new long[]{1, 1, IMAGE_SIZE, IMAGE_SIZE};\n@@ -108,1 +109,1 @@\n-            var imageTensor = Tensor.ofShape(new long[]{1, 1, IMAGE_SIZE, IMAGE_SIZE}, imageData);\n+            var imageTensor = Tensor.ofShape(arena, IMAGE_SHAPE, imageData);\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/mnist\/MNISTDemo.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}