{"files":[{"patch":"@@ -80,1 +80,1 @@\n-    private static final Arena ARENA = Arena.ofAuto();\n+    private Arena arena;\n@@ -333,1 +333,1 @@\n-    private static Tensor<Float> floatTensor(String resource, long... shape) throws IOException {\n+    private Tensor<Float> floatTensor(String resource, long... shape) throws IOException {\n@@ -335,1 +335,1 @@\n-            return new Tensor(ARENA, file.getChannel().map(FileChannel.MapMode.READ_ONLY, 0, file.length(), ARENA), Tensor.ElementType.FLOAT, shape);\n+            return new Tensor(arena, file.getChannel().map(FileChannel.MapMode.READ_ONLY, 0, file.length(), arena), Tensor.ElementType.FLOAT, shape);\n@@ -341,3 +341,4 @@\n-        CoreOp.FuncOp f = getFuncOp(\"cnn\");\n-        CoreOp.FuncOp onnxModel = OnnxTransformer.transform(MethodHandles.lookup(), f);\n-        System.out.println(onnxModel.toText());\n+        try (var _ = this.arena = Arena.ofConfined()) {\n+            CoreOp.FuncOp f = getFuncOp(\"cnn\");\n+            CoreOp.FuncOp onnxModel = OnnxTransformer.transform(MethodHandles.lookup(), f);\n+            System.out.println(onnxModel.toText());\n@@ -345,2 +346,2 @@\n-        CoreOp.FuncOp expectedOnnxModel = cnnModel();\n-        System.out.println(expectedOnnxModel.toText());\n+            CoreOp.FuncOp expectedOnnxModel = cnnModel();\n+            System.out.println(expectedOnnxModel.toText());\n@@ -348,1 +349,2 @@\n-        Assertions.assertEquals(serialize(expectedOnnxModel), serialize(onnxModel));\n+            Assertions.assertEquals(serialize(expectedOnnxModel), serialize(onnxModel));\n+        }\n@@ -353,13 +355,15 @@\n-        var conv1Weight = floatTensor(\"mnist\/conv1-weight-float-le\", 6, 1, 5, 5);\n-        var conv1Bias = floatTensor(\"mnist\/conv1-bias-float-le\", 6);\n-        var conv2Weight = floatTensor(\"mnist\/conv2-weight-float-le\", 16, 6, 5, 5);\n-        var conv2Bias = floatTensor(\"mnist\/conv2-bias-float-le\", 16);\n-        var fc1Weight = floatTensor(\"mnist\/fc1-weight-float-le\", 120, 256);\n-        var fc1Bias = floatTensor(\"mnist\/fc1-bias-float-le\", 120);\n-        var fc2Weight = floatTensor(\"mnist\/fc2-weight-float-le\", 84, 120);\n-        var fc2Bias = floatTensor(\"mnist\/fc2-bias-float-le\", 84);\n-        var fc3Weight = floatTensor(\"mnist\/fc3-weight-float-le\", 10, 84);\n-        var fc3Bias = floatTensor(\"mnist\/fc3-bias-float-le\", 10);\n-        test(inputImage -> cnn(conv1Weight, conv1Bias, conv2Weight, conv2Bias,\n-                               fc1Weight, fc1Bias, fc2Weight, fc2Bias, fc3Weight, fc3Bias,\n-                               inputImage));\n+        try (var _ = this.arena = Arena.ofConfined()) {\n+            var conv1Weight = floatTensor(\"mnist\/conv1-weight-float-le\", 6, 1, 5, 5);\n+            var conv1Bias = floatTensor(\"mnist\/conv1-bias-float-le\", 6);\n+            var conv2Weight = floatTensor(\"mnist\/conv2-weight-float-le\", 16, 6, 5, 5);\n+            var conv2Bias = floatTensor(\"mnist\/conv2-bias-float-le\", 16);\n+            var fc1Weight = floatTensor(\"mnist\/fc1-weight-float-le\", 120, 256);\n+            var fc1Bias = floatTensor(\"mnist\/fc1-bias-float-le\", 120);\n+            var fc2Weight = floatTensor(\"mnist\/fc2-weight-float-le\", 84, 120);\n+            var fc2Bias = floatTensor(\"mnist\/fc2-bias-float-le\", 84);\n+            var fc3Weight = floatTensor(\"mnist\/fc3-weight-float-le\", 10, 84);\n+            var fc3Bias = floatTensor(\"mnist\/fc3-bias-float-le\", 10);\n+            test(inputImage -> cnn(conv1Weight, conv1Bias, conv2Weight, conv2Bias,\n+                                   fc1Weight, fc1Bias, fc2Weight, fc2Bias, fc3Weight, fc3Bias,\n+                                   inputImage));\n+        }\n@@ -370,14 +374,16 @@\n-        var conv1Weight = floatTensor(\"mnist\/conv1-weight-float-le\", 6, 1, 5, 5);\n-        var conv1Bias = floatTensor(\"mnist\/conv1-bias-float-le\", 6);\n-        var conv2Weight = floatTensor(\"mnist\/conv2-weight-float-le\", 16, 6, 5, 5);\n-        var conv2Bias = floatTensor(\"mnist\/conv2-bias-float-le\", 16);\n-        var fc1Weight = floatTensor(\"mnist\/fc1-weight-float-le\", 120, 256);\n-        var fc1Bias = floatTensor(\"mnist\/fc1-bias-float-le\", 120);\n-        var fc2Weight = floatTensor(\"mnist\/fc2-weight-float-le\", 84, 120);\n-        var fc2Bias = floatTensor(\"mnist\/fc2-bias-float-le\", 84);\n-        var fc3Weight = floatTensor(\"mnist\/fc3-weight-float-le\", 10, 84);\n-        var fc3Bias = floatTensor(\"mnist\/fc3-bias-float-le\", 10);\n-        test(inputImage -> OnnxRuntime.execute(MethodHandles.lookup(), () ->\n-                cnn(conv1Weight, conv1Bias, conv2Weight, conv2Bias,\n-                    fc1Weight, fc1Bias, fc2Weight, fc2Bias, fc3Weight, fc3Bias,\n-                    inputImage)));\n+        try (var _ = this.arena = Arena.ofConfined()) {\n+            var conv1Weight = floatTensor(\"mnist\/conv1-weight-float-le\", 6, 1, 5, 5);\n+            var conv1Bias = floatTensor(\"mnist\/conv1-bias-float-le\", 6);\n+            var conv2Weight = floatTensor(\"mnist\/conv2-weight-float-le\", 16, 6, 5, 5);\n+            var conv2Bias = floatTensor(\"mnist\/conv2-bias-float-le\", 16);\n+            var fc1Weight = floatTensor(\"mnist\/fc1-weight-float-le\", 120, 256);\n+            var fc1Bias = floatTensor(\"mnist\/fc1-bias-float-le\", 120);\n+            var fc2Weight = floatTensor(\"mnist\/fc2-weight-float-le\", 84, 120);\n+            var fc2Bias = floatTensor(\"mnist\/fc2-bias-float-le\", 84);\n+            var fc3Weight = floatTensor(\"mnist\/fc3-weight-float-le\", 10, 84);\n+            var fc3Bias = floatTensor(\"mnist\/fc3-bias-float-le\", 10);\n+            test(inputImage -> OnnxRuntime.execute(MethodHandles.lookup(), () ->\n+                    cnn(conv1Weight, conv1Bias, conv2Weight, conv2Bias,\n+                        fc1Weight, fc1Bias, fc2Weight, fc2Bias, fc3Weight, fc3Bias,\n+                        inputImage)));\n+        }\n@@ -390,2 +396,2 @@\n-            MemorySegment imagesIn = imagesF.getChannel().map(FileChannel.MapMode.READ_ONLY, IMAGES_HEADER_SIZE, imagesF.length() - IMAGES_HEADER_SIZE, ARENA);\n-            MemorySegment labelsIn = labelsF.getChannel().map(FileChannel.MapMode.READ_ONLY, LABELS_HEADER_SIZE, labelsF.length() - LABELS_HEADER_SIZE, ARENA);\n+            MemorySegment imagesIn = imagesF.getChannel().map(FileChannel.MapMode.READ_ONLY, IMAGES_HEADER_SIZE, imagesF.length() - IMAGES_HEADER_SIZE, arena);\n+            MemorySegment labelsIn = labelsF.getChannel().map(FileChannel.MapMode.READ_ONLY, LABELS_HEADER_SIZE, labelsF.length() - LABELS_HEADER_SIZE, arena);\n@@ -393,1 +399,1 @@\n-            Tensor<Byte> inputImage = new Tensor(ARENA, imagesIn, Tensor.ElementType.UINT8, new long[]{imagesF.length() - IMAGES_HEADER_SIZE});\n+            Tensor<Byte> inputImage = new Tensor(arena, imagesIn, Tensor.ElementType.UINT8, new long[]{imagesF.length() - IMAGES_HEADER_SIZE});\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/CNNTest.java","additions":45,"deletions":39,"binary":false,"changes":84,"status":"modified"}]}