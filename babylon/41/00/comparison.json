{"files":[{"patch":"@@ -649,0 +649,1 @@\n+            \/\/ Boxing is a static method e.g., java.lang.Integer::valueOf(int)java.lang.Integer\n@@ -658,1 +659,2 @@\n-                valueExpr = append(CoreOps.cast(typeToTypeElement(types.boxedClass(unboxedType).type), valueExpr));\n+                box = types.boxedClass(unboxedType).type;\n+                valueExpr = append(CoreOps.cast(typeToTypeElement(box), valueExpr));\n@@ -660,0 +662,1 @@\n+            \/\/ Unboxing is a virtual method e.g., java.lang.Integer::intValue()int\n@@ -662,1 +665,1 @@\n-                    FunctionType.functionType(typeToTypeElement(unboxedType), typeToTypeElement(box)));\n+                    FunctionType.functionType(typeToTypeElement(unboxedType)));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-                %4 : long = invoke %3 @\"java.lang.Long::longValue(java.lang.Long)long\";\n+                %4 : long = invoke %3 @\"java.lang.Long::longValue()long\";\n@@ -82,1 +82,1 @@\n-                %5 : long = invoke %4 @\"java.lang.Object::longValue(java.lang.Object)long\";\n+                %5 : long = invoke %4 @\"java.lang.Long::longValue()long\";\n@@ -97,1 +97,1 @@\n-                %5 : int = invoke %3 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                %5 : int = invoke %3 @\"java.lang.Integer::intValue()int\";\n@@ -114,1 +114,1 @@\n-                %5 : int = invoke %3 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                %5 : int = invoke %3 @\"java.lang.Integer::intValue()int\";\n@@ -135,1 +135,1 @@\n-                %4 : int = invoke %2 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                %4 : int = invoke %2 @\"java.lang.Integer::intValue()int\";\n@@ -152,1 +152,1 @@\n-                %4 : int = invoke %2 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                %4 : int = invoke %2 @\"java.lang.Integer::intValue()int\";\n@@ -172,1 +172,1 @@\n-                %9 : int = invoke %8 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                %9 : int = invoke %8 @\"java.lang.Integer::intValue()int\";\n@@ -194,1 +194,1 @@\n-                        %8 : int = invoke %7 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                        %8 : int = invoke %7 @\"java.lang.Integer::intValue()int\";\n@@ -225,1 +225,1 @@\n-                        %9 : int = invoke %8 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                        %9 : int = invoke %8 @\"java.lang.Integer::intValue()int\";\n@@ -308,1 +308,1 @@\n-                        %11 : int = invoke %10 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                        %11 : int = invoke %10 @\"java.lang.Integer::intValue()int\";\n@@ -350,1 +350,1 @@\n-                        %12 : int = invoke %11 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                        %12 : int = invoke %11 @\"java.lang.Integer::intValue()int\";\n@@ -413,1 +413,1 @@\n-                        %11 : int = invoke %10 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                        %11 : int = invoke %10 @\"java.lang.Integer::intValue()int\";\n@@ -455,1 +455,1 @@\n-                        %12 : int = invoke %11 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                        %12 : int = invoke %11 @\"java.lang.Integer::intValue()int\";\n@@ -511,1 +511,1 @@\n-                %7 : int = invoke %6 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                %7 : int = invoke %6 @\"java.lang.Integer::intValue()int\";\n","filename":"test\/langtools\/tools\/javac\/reflect\/BoxingConversionTest.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-                    %23 : int = invoke %22 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                    %23 : int = invoke %22 @\"java.lang.Integer::intValue()int\";\n","filename":"test\/langtools\/tools\/javac\/reflect\/LambdaTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-                    %5 : int = invoke %4 @\"java.lang.Integer::intValue(java.lang.Integer)int\";\n+                    %5 : int = invoke %4 @\"java.lang.Integer::intValue()int\";\n","filename":"test\/langtools\/tools\/javac\/reflect\/MethodReferenceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}