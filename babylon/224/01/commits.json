[{"commit":{"message":"added comments"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"}],"sha":"6f71c8eda0a5c0f76a7de2968f975a9fb249cd34"},{"commit":{"message":"LocalsCompactor re-mapping also double slots"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsCompactor.java"}],"sha":"d4c0b594978ca70f8111ea36179acc538ae74fdd"},{"commit":{"message":"LocalsCompactor improvements"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsCompactor.java"}],"sha":"6b83a1bc58b563a65f7d031b8ad63869a3e66640"},{"commit":{"message":"typo"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"0df993cc6a955fd15ab8df68947c5464d753f7da"},{"commit":{"message":"disabled TestSmallCorpus"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"670811cdf153c7e21cdd17126bd1978393b786ee"},{"commit":{"message":"LocalsCompactor improvements"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsCompactor.java"}],"sha":"73ff9a2a006a6c7ff69007032edd593dea218688"},{"commit":{"message":"TestSmallCorpus fixes"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"a487c5abbd5894b053f72e4fe5d8f5d403209211"},{"commit":{"message":"TestSmallCorpus fixes"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"8ea5bb2839769ec4fa001f425e57ea81a5b6ae9e"},{"commit":{"message":"fixed -0 iinc index :)"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"}],"sha":"582101b264ea94172d95165954172fd1d973a798"},{"commit":{"message":"Merge remote-tracking branch 'babylon\/code-reflection' into bytecode-locals-compaction"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"11c8786c67ade429e14e46ba4abd2adc6ca767fb"},{"commit":{"message":"Enabled slots compaction for all generated bytecode"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"118aeedb3ccffed43ba6fa77fb15b44ed2770806"},{"commit":{"message":"BytecodeLift fix"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"1da3d5d442dc0faa2f79f3cc48ccf7d5bcd01217"},{"commit":{"message":"BytecodeLift accepts Lookup for LocalsTypeMapper to test class assignability"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"}],"sha":"82c891f83e507eb16e56cba019aed7775751d04a"},{"commit":{"message":"Added deferCache to BytecodeGenerator"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"788bb832db3f2530d950ee66bef128d7ed106b8c"},{"commit":{"message":"Lifting compacted variables fix - work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"}],"sha":"917796e80ad625d659c6e2cf3ec1b5ff128c2214"},{"commit":{"message":"Lifting compacted variables fix - work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"3c415e425ec1f5d7a61d08d133eade39c084b240"},{"commit":{"message":"Lifting compacted variables fix - work in progress"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"}],"sha":"b36c96eb6845b92d2e31bf2738b56a058f7e8751"},{"commit":{"message":"LocalsCompactor plugged into BytecodeGenerator"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsCompactor.java"}],"sha":"ca591d8531c48883d9d74a9e84912a81020afaa0"},{"commit":{"message":"Implementation of LocalsCompactor"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"c473ea4e5392aabca9fac93e0152cfd43e4b9ff5"},{"commit":{"message":"implemented LocalsCompactor"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsCompactor.java"}],"sha":"eb958c23b9b0b777751f634c7a99179ee43150c9"},{"commit":{"message":"minor adjustments"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"6a730b0293a8953cbd73336552fca191d6e57a38"},{"commit":{"message":"applied the suggested changes"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"58dbaf5a98a5fbd6654d8f715611ff767112ed2d"},{"commit":{"message":"minor corrections"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"60e3d36d6365f3ff3198c1c03887342a6baf9cab"},{"commit":{"message":"minor corrections"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"ae7f0ccf978fa5bb357424577ac3c8acef273edc"},{"commit":{"message":"restored roundtrip stability - fixed LocalsTypeMapper"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"59c2cecd13d635cf51ce49ec7d568f442c7ff251"},{"commit":{"message":"TestSmallCorpus actual numbers"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"191bb20fb40ce0b50125398852187714d11ed0b8"},{"commit":{"message":"Roundtrip stabilization - deferred redundant var initializations with defaults in BytecodeGenerator"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"}],"sha":"014ee755d3271951b5d80ab04e488f0d9bf482e1"},{"commit":{"message":"fixed lifting of variables without dominant initial store"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"}],"sha":"17bb5381c092b23f83c7665a62ba319a8cf8bbf2"},{"commit":{"message":"Added Op operand values declaration dominance verification to TestSmallCorpus"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"50975b3d87be9b33ed274284db361d184319f33a"}]