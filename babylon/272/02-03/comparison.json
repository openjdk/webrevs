{"files":[{"patch":"@@ -864,1 +864,1 @@\n-                            processOperands(op.operands().subList(0, op.operands().size() - op.varArgOperands().size()));\n+                            processOperands(op.argOperands());\n@@ -868,5 +868,3 @@\n-                            var typeKind = TypeKind.fromDescriptor(compType.toNominalDescriptor().descriptorString());\n-                            if (TypeKind.REFERENCE.equals(typeKind)) {\n-                                var cd = ClassDesc.ofDescriptor(compType.toNominalDescriptor().descriptorString());\n-                                cob.anewarray(cd);\n-                            } else {\n+                            var compTypeDesc = compType.toNominalDescriptor();\n+                            var typeKind = TypeKind.from(compTypeDesc);\n+                            if (compTypeDesc.isPrimitive()) {\n@@ -874,0 +872,2 @@\n+                            } else {\n+                                cob.anewarray(compTypeDesc);\n@@ -876,0 +876,2 @@\n+                                \/\/ we duplicate array value on the stack to be consumed by arrayStore\n+                                \/\/ after completion of this loop the array value will be on top of the stack\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        r += w(11L, 12L);\n+        r += l(11L, 12L);\n@@ -60,1 +60,1 @@\n-        r += w(21.0, 22.0);\n+        r += d(21.0, 22.0);\n@@ -81,0 +81,8 @@\n+    static String l(long... a) {\n+        return Arrays.toString(a);\n+    }\n+\n+    static String d(double... a) {\n+        return Arrays.toString(a);\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestVarArg.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"}]}