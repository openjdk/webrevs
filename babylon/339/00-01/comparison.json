{"files":[{"patch":"@@ -302,0 +302,11 @@\n+                    } else if (op instanceof CoreOp.FieldAccessOp.FieldLoadOp co && co.resultType() instanceof JavaType jt\n+                                                                                 && jt.erasure().equals(TENSOR_CLASS)) {\n+                        try {\n+                            opNodes.accept(tensorProto(\n+                                    indexer.getName(op.result()),\n+                                    (oracle.code.onnx.Tensor)co.fieldDescriptor()\n+                                            .resolveToHandle(lookup)\n+                                            .get()));\n+                        } catch (ReflectiveOperationException e) {\n+                            throw new UndeclaredThrowableException(e);\n+                        }\n@@ -313,1 +324,1 @@\n-                        case CoreOp.ReturnOp _, CoreOp.InvokeOp _ -> { \/\/ skip\n+                        case CoreOp.ReturnOp _, CoreOp.InvokeOp _, CoreOp.FieldAccessOp.FieldLoadOp _ -> { \/\/ skip\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxProtoBuilder.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -335,0 +335,5 @@\n+        } else if (o instanceof CoreOp.FieldAccessOp.FieldLoadOp co && co.fieldDescriptor().type() instanceof JavaType jt\n+                                                                    && jt.erasure().equals(TENSOR_CLASS)) {\n+            \/\/ @@@ Tensor fields are passed as initializers\n+            unevaluatedOperations.add(o);\n+            return null;\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/compiler\/OnnxPartialEvaluator.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -54,39 +54,11 @@\n-    static Tensor<Float> conv1Weights() {\n-        return initialize(\"conv1-weight-float-le\", 6, 1, 5, 5);\n-    }\n-\n-    static Tensor<Float> conv1Biases() {\n-        return initialize(\"conv1-bias-float-le\", 6);\n-    }\n-\n-    static Tensor<Float> conv2Weights() {\n-        return initialize(\"conv2-weight-float-le\", 16, 6, 5, 5);\n-    }\n-\n-    static Tensor<Float> conv2Biases() {\n-        return initialize(\"conv2-bias-float-le\", 16);\n-    }\n-\n-    static Tensor<Float> fc1Weights() {\n-        return initialize(\"fc1-weight-float-le\", 120, 256);\n-    }\n-\n-    static Tensor<Float> fc1Biases() {\n-        return initialize(\"fc1-bias-float-le\", 120);\n-    }\n-\n-    static Tensor<Float> fc2Weights() {\n-        return initialize(\"fc2-weight-float-le\", 84, 120);\n-    }\n-\n-    static Tensor<Float> fc2Biases() {\n-        return initialize(\"fc2-bias-float-le\", 84);\n-    }\n-\n-    static Tensor<Float> fc3Weights() {\n-        return initialize(\"fc3-weight-float-le\", 10, 84);\n-    }\n-\n-    static Tensor<Float> fc3Biases() {\n-        return initialize(\"fc3-bias-float-le\", 10);\n-    }\n+    static final Tensor<Float>\n+            conv1Weights = initialize(\"conv1-weight-float-le\", 6, 1, 5, 5),\n+            conv1Biases = initialize(\"conv1-bias-float-le\", 6),\n+            conv2Weights = initialize(\"conv2-weight-float-le\", 16, 6, 5, 5),\n+            conv2Biases = initialize(\"conv2-bias-float-le\", 16),\n+            fc1Weights = initialize(\"fc1-weight-float-le\", 120, 256),\n+            fc1Biases = initialize(\"fc1-bias-float-le\", 120),\n+            fc2Weights = initialize(\"fc2-weight-float-le\", 84, 120),\n+            fc2Biases = initialize(\"fc2-bias-float-le\", 84),\n+            fc3Weights = initialize(\"fc3-weight-float-le\", 10, 84),\n+            fc3Biases = initialize(\"fc3-bias-float-le\", 10);\n@@ -100,1 +72,1 @@\n-        var conv1 = Conv(scaledInput, conv1Weights(), of(conv1Biases()), of(new long[4]),\n+        var conv1 = Conv(scaledInput, conv1Weights, of(conv1Biases), of(new long[4]),\n@@ -110,1 +82,1 @@\n-        var conv2 = Conv(pool1.Y(), conv2Weights(), of(conv2Biases()), of(new long[4]),\n+        var conv2 = Conv(pool1.Y(), conv2Weights, of(conv2Biases), of(new long[4]),\n@@ -123,1 +95,1 @@\n-        var fc1 = Gemm(flatten, fc1Weights(), of(fc1Biases()), of(1f), of(1L), of(1f), empty());\n+        var fc1 = Gemm(flatten, fc1Weights, of(fc1Biases), of(1f), of(1L), of(1f), empty());\n@@ -127,1 +99,1 @@\n-        var fc2 = Gemm(relu3, fc2Weights(), of(fc2Biases()), of(1f), of(1L), of(1f), empty());\n+        var fc2 = Gemm(relu3, fc2Weights, of(fc2Biases), of(1f), of(1L), of(1f), empty());\n@@ -131,1 +103,1 @@\n-        var fc3 = Gemm(relu4, fc3Weights(), of(fc3Biases()), of(1f), of(1L), of(1f), empty());\n+        var fc3 = Gemm(relu4, fc3Weights, of(fc3Biases), of(1f), of(1L), of(1f), empty());\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/mnist\/MNISTDemo.java","additions":16,"deletions":44,"binary":false,"changes":60,"status":"modified"}]}