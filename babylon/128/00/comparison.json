{"files":[{"patch":"@@ -3,0 +3,1 @@\n+maven-build\/\n","filename":"hat\/.gitignore","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,146 @@\n+# HAT Project\n+\n+This is a fairly large project with Java and Native artifacts.\n+\n+We rely on the `babylon` (JDK23+Babylon) project, and the project will initially be made available as a subproject\n+called `hat` under [github.com\/openjdk\/babylon](https:\/\/github.com\/openjdk\/babylon)\n+\n+So this `README.md` should be under a checkout babylon repo which has been built.\n+\n+Here is how I prepare for babylon build babylon on an Ubuntu (x64) machine\n+\n+```\n+mkdir -p ${HOME}\/java\n+cd ${HOME}\/java\n+wget https:\/\/download.java.net\/java\/GA\/jdk22.0.1\/c7ec1332f7bb44aeba2eb341ae18aca4\/8\/GPL\/openjdk-22.0.1_linux-x64_bin.tar.gz\n+export BOOT_JDK=${HOME}\/java\/jdk-22.0.1.jdk\n+```\n+\n+Here is how I prepare for babylon build on my Mac (aarch64) machine.\n+\n+```\n+mkdir -p ${HOME}\/java\n+cd ${HOME}\/java\n+wget https:\/\/download.java.net\/java\/GA\/jdk22.0.1\/c7ec1332f7bb44aeba2eb341ae18aca4\/8\/GPL\/openjdk-22.0.1_linux-x64_bin.tar.gz\n+export BOOT_JDK=${HOME}\/java\/jdk-22.0.1.jdk\/Contents\/Home\n+```\n+\n+From now on the Mac and Ubuntu steps are the same\n+\n+```\n+export GITHUB=${HOME}\/github\n+mkdir -p ${GITHUB}\n+cd ${GITHUB}\n+git clone https:\/\/github.com\/openjdk\/babylon.git\n+cd ${GITHUB}\/babylon\n+bash configure  --with-boot-jdk=${BOOT_JDK}\n+make clean\n+make images\n+```\n+\n+## Build notes\n+\n+HAT uses maven and cmake.\n+\n+Maven controls the build but delegates to cmake to build the native code for the various backends.\n+\n+Make sure that `JAVA_HOME` is setup to point to your babylon build and the `${JAVA_HOME}\/bin` is in your PATH.\n+\n+The `env.bash` shell script can be 'dot included' in your build shell. It should detect the arch type and select the correct relative parent dir and inject that dir in your PATH.\n+\n+```bash\n+cd hat\n+. .\/env.bash\n+echo ${JAVA_HOME}\n+\/Users\/grfrost\/github\/babylon\/hat\/..\/build\/macosx-aarch64-server-release\/jdk\n+echo ${PATH}\n+Users\/grfrost\/github\/babylon\/hat\/..\/build\/macosx-aarch64-server-release\/jdk\/bin:\/usr\/local\/bin:......\n+```\n+\n+Now we can just use maven to build, it will do its magic and place all jars and libs in `maven-build` dir\n+```\n+cd hat\n+. .\/env.bash\n+mvn clean  compile jar:jar install\n+ls maven-build\n+hat-1.0.jar                     hat-example-heal-1.0.jar        libptx_backend.dylib\n+hat-backend-cuda-1.0.jar        hat-example-mandel-1.0.jar      libspirv_backend.dylib\n+hat-backend-mock-1.0.jar        hat-example-squares-1.0.jar     mock_info\n+hat-backend-opencl-1.0.jar      hat-example-view-1.0.jar        opencl_info\n+hat-backend-ptx-1.0.jar         hat-example-violajones-1.0.jar  ptx_info\n+hat-backend-spirv-1.0.jar       libmock_backend.dylib           spirv_info\n+hat-example-experiments-1.0.jar libopencl_backend.dylib\n+```\n+\n+To run an example\n+```\n+${JAVA_HOME}\/bin\/java \\\n+   --enable-preview --enable-native-access=ALL-UNNAMED \\\n+   --class-path maven-build\/hat-1.0.jar:maven-build\/hat-example-mandel-1.0.jar:maven-build\/hat-backend-opencl-1.0.jar \\\n+   --add-exports=java.base\/jdk.internal=ALL-UNNAMED \\\n+   -Djava.library.path=maven-build\\\n+   mandel.MandelCompute\n+```\n+\n+The `hatrun.bash` script simlifies this somewhat\n+\n+```\n+bash hatrun.bash opencl mandel MandelCompute\n+```\n+\n+### Intellij and Clion\n+We can use JetBrains' `intelliJ` and `clion` but care must be taken as these tools\n+do not play well together, specifically we cannot have `Clion` and `Intellij`\n+project artifacts rooted under each other or in the same dir.\n+\n+The `intellij` subdir houses the various `*.iml` module files and the project `.idea` so\n+just open that dir as an intellij project\n+\n+Thankfully `clion` uses cmake. So we can reuse the same `hat\/backends\/CMakeLists.txt` that\n+maven uses to build the backends.\n+\n+### Initial Project Layout\n+\n+```\n+${BABYLON_JDK}\n+   └── hat\n+        ├── maven-build (created by the build)\n+        │\n+        ├── intellij\n+        │    ├── .idea\n+        │    │    ├── compiler.xml\n+        │    │    ├── misc.xml\n+        │    │    ├── modules.xml\n+        │    │    ├── uiDesigner.xml\n+        │    │    ├── vcs.xml\n+        │    │    └── workspace.xml\n+        │    │\n+        │    ├── hat.iml\n+        │    ├── backend_(spirv|mock|cuda|ptx|opencl).iml\n+        │    └── (mandel|violajones|experiments|heal|view).iml\n+        │\n+        ├── hat\n+        │    ├── pom.xml\n+        │    └── src\n+        │         ├── src\/main\/java\n+        │         └── src\/main\/resources\n+        │\n+        ├── backends\n+        │    ├── pom.xml\n+        │    ├── CMakeLists.txt\n+        │    └── (opencl|cuda|ptx|mock|shared)\n+        │          ├── pom.xml\n+        │          ├── CMakeLists.txt\n+        │          ├── cpp\n+        │          ├── include\n+        │          ├── src\/main\/java\n+        │          └── src\/main\/resources\n+        └── examples\n+             ├── pom.xml\n+             └── (mandel|violajones|squares|heal|view|experiments)\n+                    ├── pom.xml\n+                    ├── src\/main\/java\n+                    └── src\/main\/resources\n+```\n+As you will note the `intellij` dir is somewhat self contained.  the various `*.iml`\n+files refer to the source dirs using relative paths.\n","filename":"hat\/README.md","additions":146,"deletions":0,"binary":false,"changes":146,"status":"added"},{"patch":"@@ -4,0 +4,2 @@\n+add_custom_target(copy_libs)\n+\n","filename":"hat\/backends\/CMakeLists.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,0 +51,6 @@\n+    add_custom_target(copy_cuda_libs DEPENDS cuda_info cuda_backend\n+        COMMAND echo cp ${CMAKE_BINARY_DIR}\/cuda\/libcuda_backend.* ${CMAKE_SOURCE_DIR}\/..\/maven-build\n+        COMMAND cp ${CMAKE_BINARY_DIR}\/cuda\/cuda_info ${CMAKE_SOURCE_DIR}\/..\/maven-build\n+   )\n+add_dependencies(copy_libs copy_cuda_libs)\n+\n","filename":"hat\/backends\/cuda\/CMakeLists.txt","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,0 +49,23 @@\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/hat-backend-cuda-1.0.jar\" todir=\"..\/..\/maven-build\"\/>\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n+\n","filename":"hat\/backends\/cuda\/pom.xml","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -42,0 +42,6 @@\n+add_custom_target(copy_mock_libs DEPENDS mock_info mock_backend\n+    COMMAND cp ${CMAKE_BINARY_DIR}\/mock\/libmock_backend.* ${CMAKE_SOURCE_DIR}\/..\/maven-build\n+    COMMAND cp ${CMAKE_BINARY_DIR}\/mock\/mock_info ${CMAKE_SOURCE_DIR}\/..\/maven-build\n+)\n+add_dependencies(copy_libs copy_mock_libs)\n+\n","filename":"hat\/backends\/mock\/CMakeLists.txt","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,0 +49,23 @@\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/hat-backend-mock-1.0.jar\" todir=\"..\/..\/maven-build\"\/>\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n+\n","filename":"hat\/backends\/mock\/pom.xml","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -52,0 +52,5 @@\n+    add_custom_target(copy_opencl_libs DEPENDS opencl_info opencl_backend\n+       COMMAND cp ${CMAKE_BINARY_DIR}\/opencl\/libopencl_backend.* ${CMAKE_SOURCE_DIR}\/..\/maven-build\n+       COMMAND cp ${CMAKE_BINARY_DIR}\/opencl\/opencl_info ${CMAKE_SOURCE_DIR}\/..\/maven-build\n+    )\n+    add_dependencies(copy_libs copy_opencl_libs)\n","filename":"hat\/backends\/opencl\/CMakeLists.txt","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -49,0 +49,27 @@\n+    <build>\n+        <plugins>\n+\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/hat-backend-opencl-1.0.jar\" todir=\"..\/..\/maven-build\"\/>\n+\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n+\n+\n","filename":"hat\/backends\/opencl\/pom.xml","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-     <module>cuda<\/module> \n+     <module>cuda<\/module>\n@@ -40,2 +40,1 @@\n-     <!--<module>shared<\/module>-->\n-     <!--<module>spirv<\/module> -->\n+     <!--<module>spirv<\/module>-->\n@@ -43,0 +42,74 @@\n+   <build>\n+     <plugins>\n+        <plugin>\n+           <groupId>org.codehaus.mojo<\/groupId>\n+           <artifactId>exec-maven-plugin<\/artifactId>\n+           <version>3.1.0<\/version>\n+            <executions>\n+              <execution>\n+                <id>cmake_config<\/id>\n+                <phase>install<\/phase>\n+                <goals>\n+                   <goal>exec<\/goal>\n+                <\/goals>\n+                <configuration>\n+                   <executable>cmake<\/executable>\n+                   <arguments>\n+                      <argument>-B<\/argument>\n+                      <argument>cmake-build-debug<\/argument>\n+                   <\/arguments>\n+                <\/configuration>\n+             <\/execution>\n+              <execution>\n+                <id>cmake_build<\/id>\n+                <phase>install<\/phase>\n+                <goals>\n+                   <goal>exec<\/goal>\n+                <\/goals>\n+                <configuration>\n+                   <executable>cmake<\/executable>\n+                   <arguments>\n+                      <argument>--build<\/argument>\n+                      <argument>cmake-build-debug<\/argument>\n+                   <\/arguments>\n+                <\/configuration>\n+             <\/execution>\n+              <execution>\n+                <id>cmake_copy_libs<\/id>\n+                <phase>install<\/phase>\n+                <goals>\n+                   <goal>exec<\/goal>\n+                <\/goals>\n+                <configuration>\n+                   <executable>cmake<\/executable>\n+                   <arguments>\n+                      <argument>--build<\/argument>\n+                      <argument>cmake-build-debug<\/argument>\n+                      <argument>--target<\/argument>\n+                      <argument>copy_libs<\/argument>\n+                   <\/arguments>\n+                <\/configuration>\n+             <\/execution>\n+\n+              <execution>\n+                <id>cmake_clean<\/id>\n+                <phase>clean<\/phase>\n+                <goals>\n+                   <goal>exec<\/goal>\n+                <\/goals>\n+                <configuration>\n+                   <executable>cmake<\/executable>\n+                   <arguments>\n+                      <argument>--build<\/argument>\n+                      <argument>cmake-build-debug<\/argument>\n+                      <argument>--target<\/argument>\n+                      <argument>clean<\/argument>\n+                   <\/arguments>\n+                <\/configuration>\n+             <\/execution>\n+\n+           <\/executions>\n+        <\/plugin>\n+     <\/plugins>\n+   <\/build>\n+\n","filename":"hat\/backends\/pom.xml","additions":76,"deletions":3,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -43,0 +43,6 @@\n+add_custom_target(copy_ptx_libs DEPENDS ptx_info ptx_backend\n+    COMMAND cp ${CMAKE_BINARY_DIR}\/ptx\/libptx_backend.* ${CMAKE_SOURCE_DIR}\/..\/maven-build\n+    COMMAND cp ${CMAKE_BINARY_DIR}\/ptx\/ptx_info ${CMAKE_SOURCE_DIR}\/..\/maven-build\n+)\n+add_dependencies(copy_libs copy_ptx_libs)\n+\n","filename":"hat\/backends\/ptx\/CMakeLists.txt","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,0 +48,22 @@\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/hat-backend-ptx-1.0.jar\" todir=\"..\/..\/maven-build\"\/>\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n","filename":"hat\/backends\/ptx\/pom.xml","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-project(opencl_backend)\n+project(spirv_backend)\n@@ -43,0 +43,6 @@\n+add_custom_target(copy_spirv_libs DEPENDS spirv_info spirv_backend\n+   COMMAND cp ${CMAKE_BINARY_DIR}\/spirv\/libspirv_backend.* ${CMAKE_SOURCE_DIR}\/..\/maven-build\n+   COMMAND cp ${CMAKE_BINARY_DIR}\/spirv\/spirv_info ${CMAKE_SOURCE_DIR}\/..\/maven-build\n+)\n+add_dependencies(copy_libs copy_spirv_libs)\n+\n","filename":"hat\/backends\/spirv\/CMakeLists.txt","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-    <artifactId>hat-backend-mock<\/artifactId>\n+    <artifactId>hat-backend-spirv<\/artifactId>\n@@ -41,1 +41,1 @@\n-     <dependencies>\n+    <dependencies>\n@@ -43,6 +43,52 @@\n-           <groupId>oracle.code<\/groupId>\n-         <version>1.0<\/version>\n-         <artifactId>hat<\/artifactId>\n-       <\/dependency>\n-     <\/dependencies>\n-    \n+            <groupId>oracle.code<\/groupId>\n+            <version>1.0<\/version>\n+            <artifactId>hat<\/artifactId>\n+        <\/dependency>\n+    <\/dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/hat-backend-spirv-1.0.jar\" todir=\"..\/..\/maven-build\"\/>\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+\n+            <plugin>\n+                <groupId>org.codehaus.mojo<\/groupId>\n+                <artifactId>build-helper-maven-plugin<\/artifactId>\n+                <version>3.0.0<\/version>\n+                <executions>\n+                    <execution>\n+                        <id>add-source1<\/id>\n+                        <phase>generate-sources<\/phase>\n+                        <goals>\n+                            <goal>add-source<\/goal>\n+                        <\/goals>\n+                        <configuration>\n+                            <sources>\n+                                <source>\n+                                    \/Users\/grfrost\/github\/grfrost\/babylon-grfrost-fork\/cr-examples\/spirv\/src\/main\/java\n+                                <\/source>\n+                                <source>\/Users\/grfrost\/github\/beehive-spirv-toolkit\/lib\/src\/main\/java<\/source>\n+                            <\/sources>\n+                        <\/configuration>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n+\n+\n","filename":"hat\/backends\/spirv\/pom.xml","additions":54,"deletions":8,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-cmake -B build \n+cmake -B build\n","filename":"hat\/cmake.bash","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,1 +6,1 @@\n-else \n+else\n@@ -16,1 +16,1 @@\n-else \n+else\n@@ -23,1 +23,1 @@\n-if echo ${PATH} | grep ${JAVA_HOME} >\/dev\/null ;then \n+if echo ${PATH} | grep ${JAVA_HOME} >\/dev\/null ;then\n","filename":"hat\/env.bash","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,0 +49,23 @@\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/hat-example-experiments-1.0.jar\" todir=\"..\/..\/maven-build\"\/>\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n+\n","filename":"hat\/examples\/experiments\/pom.xml","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -48,0 +48,23 @@\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/hat-example-heal-1.0.jar\" todir=\"..\/..\/maven-build\"\/>\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n+\n","filename":"hat\/examples\/heal\/pom.xml","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -48,0 +48,23 @@\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/hat-example-mandel-1.0.jar\" todir=\"..\/..\/maven-build\"\/>\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n+\n","filename":"hat\/examples\/mandel\/pom.xml","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -48,0 +48,23 @@\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/hat-example-squares-1.0.jar\" todir=\"..\/..\/maven-build\"\/>\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n+\n","filename":"hat\/examples\/squares\/pom.xml","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -42,5 +42,5 @@\n-       <dependency>\n-          <groupId>oracle.code<\/groupId>\n-          <version>1.0<\/version>\n-          <artifactId>hat<\/artifactId>\n-       <\/dependency>\n+        <dependency>\n+            <groupId>oracle.code<\/groupId>\n+            <version>1.0<\/version>\n+            <artifactId>hat<\/artifactId>\n+        <\/dependency>\n@@ -48,0 +48,23 @@\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/hat-example-view-1.0.jar\" todir=\"..\/..\/maven-build\"\/>\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n+\n","filename":"hat\/examples\/view\/pom.xml","additions":28,"deletions":5,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-     <dependencies>\n+    <dependencies>\n@@ -43,5 +43,28 @@\n-           <groupId>oracle.code<\/groupId>\n-         <version>1.0<\/version>\n-         <artifactId>hat<\/artifactId>\n-       <\/dependency>\n-     <\/dependencies>\n+            <groupId>oracle.code<\/groupId>\n+            <version>1.0<\/version>\n+            <artifactId>hat<\/artifactId>\n+        <\/dependency>\n+    <\/dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/hat-example-violajones-1.0.jar\" todir=\"..\/..\/maven-build\"\/>\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n+            <\/plugin>\n+        <\/plugins>\n+    <\/build>\n+\n","filename":"hat\/examples\/violajones\/pom.xml","additions":29,"deletions":6,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-    <!--<outputDirectory>..\/build\/hat<\/outputDirectory>-->\n@@ -81,1 +80,0 @@\n-            <!--\n@@ -84,5 +82,15 @@\n-                <artifactId>maven-jar-plugin<\/artifactId>\n-                <version>2.3.1<\/version>\n-                <configuration>\n-                    <outputDirectory>..\/build\/hat<\/outputDirectory>\n-                <\/configuration>\n+                <artifactId>maven-antrun-plugin<\/artifactId>\n+                <version>1.8<\/version>\n+                <executions>\n+                    <execution>\n+                        <phase>install<\/phase>\n+                        <configuration>\n+                            <target>\n+                                <copy file=\"target\/${project.artifactId}-1.0.jar\" todir=\"..\/maven-build\"\/>\n+                            <\/target>\n+                        <\/configuration>\n+                        <goals>\n+                            <goal>run<\/goal>\n+                        <\/goals>\n+                    <\/execution>\n+                <\/executions>\n@@ -90,2 +98,1 @@\n-            -->\n-        <\/plugins> \n+       <\/plugins>\n@@ -93,0 +100,1 @@\n+\n","filename":"hat\/hat\/pom.xml","additions":17,"deletions":9,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-   if test \"${backend}\" =  \"java\"; then \n+   if test \"${backend}\" =  \"java\"; then\n@@ -8,1 +8,1 @@\n-       backend_jar=backends\/${backend}\/target\/hat-backend-${backend}-1.0.jar \n+       backend_jar=maven-build\/hat-backend-${backend}-1.0.jar\n@@ -11,2 +11,2 @@\n-   if test -f ${backend_jar} -o -d ${backend_jar} ;then \n-      example_jar=examples\/${example}\/target\/hat-example-${example}-1.0.jar\n+   if test -f ${backend_jar} -o -d ${backend_jar} ;then\n+      example_jar=maven-build\/hat-example-${example}-1.0.jar\n@@ -14,1 +14,1 @@\n-      if test -f ${example_jar} ; then \n+      if test -f ${example_jar} ; then\n@@ -19,1 +19,1 @@\n-            -Djava.library.path=build\/backends\/${backend}\\\n+            -Djava.library.path=maven-build\\\n@@ -30,1 +30,1 @@\n-example $* \n+example $*\n","filename":"hat\/hatrun.bash","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n-         <dependencies>\n+   <dependencies>\n@@ -16,1 +16,2 @@\n-    <modules>\n+\n+   <modules>\n@@ -21,1 +22,0 @@\n-\n","filename":"hat\/pom.xml","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,35 +1,6 @@\n-function example(){\n-   backend=$1\n-   example=$2\n-   example_class=$3\n-   if test \"${backend}\" =  \"java\"; then \n-       backend_jar=backends\/shared\/src\/main\/resources\n-   else\n-       backend_jar=backends\/${backend}\/target\/hat-backend-${backend}-1.0.jar \n-   fi\n-   echo checking backend_jar = ${backend_jar}\n-   if test -f ${backend_jar} -o -d ${backend_jar} ;then \n-      example_jar=examples\/${example}\/target\/hat-example-${example}-1.0.jar\n-      echo checking example_jar = ${example_jar}\n-      if test -f ${example_jar} ; then \n-         ${JAVA_HOME}\/bin\/java \\\n-            --enable-preview --enable-native-access=ALL-UNNAMED \\\n-            --class-path hat\/target\/hat-1.0.jar:${example_jar}:${backend_jar} \\\n-            --add-exports=java.base\/jdk.internal=ALL-UNNAMED \\\n-            -Djava.library.path=build\/backends\/${backend}\\\n-            -Dheadless=true \\\n-            ${example}.${example_class}\n-      else\n-         echo no such example example_jar = ${example_jar}\n-      fi\n-   else\n-      echo no such backend backend_jar = ${backend_jar}\n-   fi\n-}\n-\n-#example java violajones ViolaJonesCompute \n-#example opencl violajones ViolaJonesCompute \n-example java squares Squares\n-#example opencl squares Squares\n-example java mandel MandelCompute\n-#example opencl mandel MandelCompute\n+bash .\/hatrun.bash java violajones ViolaJonesCompute\n+bash .\/hatrun.bash violajones ViolaJonesCompute\n+bash .\/hatrun.bash java squares Squares\n+bash .\/hatrun.bash opencl squares Squares\n+bash .\/hatrun.bash java mandel MandelCompute\n+bash .\/hatrun.bash opencl mandel MandelCompute\n","filename":"hat\/run.bash","additions":6,"deletions":35,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -0,0 +1,28 @@\n+echo spaces at end of lines\n+find . \\\n+   -name \"*.iml\" \\\n+   -o -name \"*.bash\" \\\n+   -o -name \"*.xml\" \\\n+   -o -name \"*.java\" \\\n+   -o -name \"*.h\" \\\n+   -o -name \"*.md\" \\\n+   -o -name \"*.cpp\" \\\n+   -o -name CMakeFiles.list \\\n+   | xargs grep \"  *$\" \\\n+   | cut -d: -f1 \\\n+   | sort -u\n+\n+echo tabs\n+find . \\\n+   -name \"*.iml\" \\\n+   -o -name \"*.bash\" \\\n+   -o -name \"*.xml\" \\\n+   -o -name \"*.java\" \\\n+   -o -name \"*.h\" \\\n+   -o -name \"*.md\" \\\n+   -o -name \"*.cpp\" \\\n+   -o -name CMakeFiles.list \\\n+   | xargs grep \"\\t\" \\\n+   | cut -d: -f1 \\\n+   | sort -u\n+\n","filename":"hat\/whitespacecheck.bash","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"}]}