{"files":[{"patch":"@@ -348,1 +348,1 @@\n-        OnnxProtoPrinter.printModel(ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN));\n+\/\/        OnnxProtoPrinter.printModel(ByteBuffer.wrap(bytes).order(ByteOrder.LITTLE_ENDIAN));\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxProtoBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -341,1 +341,1 @@\n-    static List<Tensor> loadWeights() throws IOException {\n+    static List<Tensor<Float>> loadWeights() throws IOException {\n@@ -381,1 +381,1 @@\n-        List<Tensor> weights = loadWeights();\n+        var weights = loadWeights();\n@@ -389,1 +389,1 @@\n-        List<Tensor> weights = loadWeights();\n+        var weights = loadWeights();\n@@ -396,1 +396,1 @@\n-    private void test(Function<Tensor, Tensor> executor) throws Exception {\n+    private void test(Function<Tensor<Byte>, Tensor<Float>> executor) throws Exception {\n@@ -403,1 +403,1 @@\n-            Tensor inputImage = new Tensor(MemorySegment.ofBuffer(imagesIn), Tensor.ElementType.UINT8, new long[]{imagesF.length() - IMAGES_HEADER_SIZE});\n+            Tensor<Byte> inputImage = new Tensor(MemorySegment.ofBuffer(imagesIn), Tensor.ElementType.UINT8, new long[]{imagesF.length() - IMAGES_HEADER_SIZE});\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/CNNTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}