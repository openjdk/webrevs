{"files":[{"patch":"@@ -31,1 +31,0 @@\n-import javax.swing.JViewport;\n@@ -34,0 +33,1 @@\n+import java.awt.BasicStroke;\n@@ -38,2 +38,1 @@\n-import java.awt.Point;\n-import java.awt.Shape;\n+import java.awt.Polygon;\n@@ -42,0 +41,1 @@\n+import java.awt.geom.AffineTransform;\n@@ -43,1 +43,1 @@\n-import java.util.ArrayList;\n+import java.awt.geom.Rectangle2D;\n@@ -45,0 +45,1 @@\n+import java.util.LinkedHashSet;\n@@ -47,0 +48,1 @@\n+import java.util.Set;\n@@ -49,0 +51,1 @@\n+\n@@ -50,3 +53,0 @@\n-    Map<ElementSpan, List<ElementSpan>> ssaIdFromToMap = new HashMap<>();\n-    Map<ElementSpan, List<ElementSpan>> ssaIdToFromMap = new HashMap<>();\n-    Map<Integer, ElementSpan> ssaIdToElement = new HashMap<>();\n@@ -54,1 +54,1 @@\n-\n+    int lineNumber=122;\n@@ -56,2 +56,37 @@\n-       private  FuncOpTextModelViewer viewer;\n-        List<Shape> shapes = new ArrayList<>();\n+        private FuncOpTextModelViewer viewer;\n+\n+        static private final Polygon arrowHead = new Polygon();\n+\n+        static {\n+            arrowHead.addPoint(3, 0);\n+            arrowHead.addPoint(-3, -3);\n+            arrowHead.addPoint(-3, 3);\n+        }\n+\n+        void arrow(Graphics2D g2d, Element from, Element to) {\n+            try {\n+                var fromPoint1 = viewer.jtextPane.modelToView2D(from.getStartOffset());\n+                var fromPoint2 = viewer.jtextPane.modelToView2D(from.getEndOffset());\n+                var fromRect = new Rectangle2D.Double(fromPoint1.getBounds().getMinX(), fromPoint1.getMinY()\n+                        , fromPoint2.getBounds().getWidth(), fromPoint2.getBounds().getHeight());\n+                var toPoint1 = viewer.jtextPane.modelToView2D(to.getStartOffset() + 3);\n+                var toPoint2 = viewer.jtextPane.modelToView2D(to.getEndOffset());\n+                var toRect = new Rectangle2D.Double(toPoint1.getBounds().getMinX(), toPoint1.getMinY()\n+                        , toPoint2.getBounds().getWidth(), toPoint2.getBounds().getHeight());\n+                g2d.setColor(Color.GRAY);\n+                var x0 = fromRect.getBounds().getMinX();\n+                var y0 = fromRect.getBounds().getCenterY();\n+                var x1 = toRect.getBounds().getMinX();\n+                var y1 = toRect.getBounds().getCenterY();\n+                final AffineTransform tx = AffineTransform.getTranslateInstance(x1, y1);\n+                tx.rotate(Math.atan2(y1 - y0, x1 - x0));\n+                g2d.fill(tx.createTransformedShape(arrowHead));\n+                var line = new Line2D.Double(x0, y0, x1, y1);\n+                g2d.setStroke(new BasicStroke(2));\n+                g2d.draw(line);\n+            } catch (BadLocationException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+\n+\n@@ -60,3 +95,10 @@\n-                Graphics2D g2d = (Graphics2D) g;\n-                g2d.setColor(Color.BLACK);\n-                shapes.forEach(g2d::fill);\n+            Graphics2D g2d = (Graphics2D) g;\n+            ((BabylonTextModel) viewer.textModel).ssaEdgeList.stream().forEach(edge -> {\n+                var ssaRef = edge.ssaRef();\n+                var ssaDef = edge.ssaDef();\n+                if (ssaRef.pos().line() == viewer.lineNumber || ssaDef.pos().line() == viewer.lineNumber) {\n+                    var ssaDefElement = viewer.getElement(ssaDef.startOffset());\n+                    var ssaRefElement = viewer.getElement(ssaRef.startOffset());\n+                    arrow(g2d, ssaRefElement, ssaDefElement);\n+                }\n+            });\n@@ -72,29 +114,0 @@\n-            viewer.ssaIdFromToMap.forEach((from, toList) -> {\n-                var fromElement = from.element();\n-                try {\n-                    var fromPoint = from.textViewer().jtextPane.modelToView2D(fromElement.getStartOffset());\n-\n-                    if (fromPoint != null) {\n-                        Line2D line = new Line2D.Float(\n-                                fromPoint.getBounds().x, fromPoint.getBounds().y + 100, 0, 0);\n-\n-                        shapes.add(line);\n-                        toList.forEach(to -> {\n-                            var toElement = to.element();\n-                            try {\n-                                var toPoint = to.textViewer().jtextPane.modelToView2D(toElement.getStartOffset());\n-                                Line2D line2D = new Line2D.Float(\n-                                        fromPoint.getBounds().x, fromPoint.getBounds().y + 100, toPoint.getBounds().x, toPoint.getBounds().y);\n-                                shapes.add(line2D);\n-                            } catch (BadLocationException e) {\n-                                throw new RuntimeException(e);\n-                            }\n-                        });\n-                    }\n-                    } catch(BadLocationException e){\n-                        throw new RuntimeException(e);\n-                    }\n-\n-\n-            });\n-\n@@ -103,0 +116,1 @@\n+\n@@ -105,1 +119,1 @@\n-\n+        ((FuncOpTextPane) this.jtextPane).setViewer(this);\n@@ -114,0 +128,6 @@\n+                    var optionalElementSpan = opToJava.keySet().stream()\n+                            .filter(fromElementSpan -> fromElementSpan.includes(clicked.getStartOffset())).findFirst();\n+                    if (optionalElementSpan.isPresent()) {\n+                        ElementSpan elementSpan = optionalElementSpan.get();\n+                        lineNumber = getLine(elementSpan.element().getStartOffset())+1;\n+                    }\n@@ -122,0 +142,1 @@\n+\n@@ -134,16 +155,0 @@\n-        textModel.find(true, t -> t instanceof BabylonTextModel.BabylonSSARef, t -> {\n-            var ssaRef = (BabylonTextModel.BabylonSSARef) t;\n-            ElementSpan babylonSSARefElement = new ElementSpan.Impl(ssaRef, this, this.getElement(ssaRef.startOffset()));\n-            this.ssaIdToElement.put(ssaRef.id, babylonSSARefElement);\n-            this.ssaIdToFromMap.computeIfAbsent(babylonSSARefElement, _ -> new ArrayList<>());\n-            this.ssaIdFromToMap.computeIfAbsent(babylonSSARefElement, _ -> new ArrayList<>());\n-        });\n-\n-        ((BabylonTextModel) textModel).ssaEdgeList.stream().forEach(edge -> {\n-            var ssaRef = edge.ssaRef();\n-            var ssaDef = edge.ssaDef();\n-            var ssaDefElement = this.getElement(ssaDef.startOffset());\n-            var ssaRefElement = this.getElement(ssaRef.endOffset());\n-\n-        });\n-        ((FuncOpTextPane) this.jtextPane).setViewer(this);\n","filename":"hat\/tools\/src\/main\/java\/hat\/tools\/textmodel\/ui\/FuncOpTextModelViewer.java","additions":64,"deletions":59,"binary":false,"changes":123,"status":"modified"},{"patch":"@@ -48,2 +48,0 @@\n-        JSplitPane splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);\n-\n@@ -53,1 +51,0 @@\n-\n@@ -55,3 +52,1 @@\n-       \/\/ add(funcOpTextModelViewer.scrollPane);\n-        \/\/add(gutter);\n-        \/\/add(javaTextModelViewer.scrollPane);\n+        JSplitPane splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);\n@@ -59,4 +54,4 @@\n-        JSplitPane splitPane2 = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);\n-        splitPane2.setLeftComponent(gutter);\n-        splitPane2.setRightComponent(javaTextModelViewer.scrollPane);\n-        splitPane.setRightComponent(splitPane2);\n+        JSplitPane rightSplitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);\n+        rightSplitPane.setLeftComponent(gutter);\n+        rightSplitPane.setRightComponent(javaTextModelViewer.scrollPane);\n+        splitPane.setRightComponent(rightSplitPane);\n@@ -64,0 +59,1 @@\n+\n","filename":"hat\/tools\/src\/main\/java\/hat\/tools\/textmodel\/ui\/FuncOpViewer.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -71,2 +71,0 @@\n-\n-\n@@ -75,2 +73,0 @@\n-\n-\n@@ -93,1 +89,0 @@\n-\n@@ -106,8 +101,1 @@\n-    public void highLight(int from, int to) {\n-        var highlighter =  jtextPane.getHighlighter();\n-        try {\n-            highlighter.addHighlight(from,to, highlightPainter);\n-        } catch (BadLocationException e) {\n-            throw new IllegalStateException();\n-        }\n-    }\n+\n@@ -123,0 +111,9 @@\n+    public int getLine(int offset) {\n+       for (int l= 0; l < lines.size(); l++) {\n+            if (lines.get(l).includes(offset)) {\n+               return l+1;\n+            }\n+        }\n+       return 0;\n+    }\n+\n","filename":"hat\/tools\/src\/main\/java\/hat\/tools\/textmodel\/ui\/TextViewer.java","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"}]}