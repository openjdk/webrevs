{"files":[{"patch":"@@ -56,1 +56,0 @@\n-    \/\/F_p\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/analysis\/AnfTransformer.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @run main TestAnfBasicFuns\n+ *\/\n+\n@@ -10,4 +40,1 @@\n-\/*\n- * @test\n- * @run main TestAnfBasicFuns\n- *\/\n+\n@@ -46,4 +73,0 @@\n-            \/\/var labeled = new Labeler().label(res);\n-            \/\/p.print(res);\n-            \/\/p.print(labeled);\n-\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/anf\/TestAnfBasicFuns.java","additions":31,"deletions":8,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -42,14 +42,0 @@\n-    @CodeReflection\n-    public static int test1(int arg1, int arg2) {\n-       return arg1 + arg2 - 52;\n-    }\n-\n-    @CodeReflection\n-    public static int test2(int arg1, int arg2) {\n-        if (arg1 > arg2) {\n-            return arg1 + 21;\n-        } else {\n-            return arg2 + 42;\n-        }\n-    }\n-\n@@ -82,1 +68,0 @@\n-        \/\/testRun(\"test2\", List.of(int.class, int.class), 20, 1);\n@@ -101,4 +86,0 @@\n-            \/\/var labeled = new Labeler().label(res);\n-            \/\/p.print(res);\n-            \/\/p.print(labeled);\n-\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/anf\/TestAnfTransform.java","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"}]}