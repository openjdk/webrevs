{"files":[{"patch":"@@ -104,1 +104,26 @@\n-    \/\/ Take an op from its original context to a new one where operands and captured values are parameters\n+    \/**\n+     * Copy {@code op} from its original context to a new one,\n+     * where its operands and captured values will be parameters.\n+     * <p>\n+     * The result is a {@link jdk.incubator.code.dialect.core.CoreOp.FuncOp FuncOp}\n+     * that has one body with one block (<i>fblock<\/i>).\n+     * <br>\n+     * For every {@code op}'s operand and capture, <i>fblock<\/i> will have a parameter.\n+     * If the operand or capture is a result of a {@link jdk.incubator.code.dialect.core.CoreOp.VarOp VarOp},\n+     * <i>fblock<\/i> will have a {@link jdk.incubator.code.dialect.core.CoreOp.VarOp VarOp}\n+     * whose initial value is the parameter.\n+     * <br>\n+     * Then <i>fblock<\/i> has a {@link jdk.incubator.code.dialect.core.CoreOp.QuotedOp QuotedOp}\n+     * that has one body with one block (<i>qblock<\/i>).\n+     * Inside <i>qblock<\/i> we find a copy of {@code op}\n+     * and a {@link jdk.incubator.code.dialect.core.CoreOp.YieldOp YieldOp}\n+     * whose yield value is the result of the {@code op}'s copy.\n+     * <br>\n+     * <i>fblock<\/i> terminates with a {@link jdk.incubator.code.dialect.core.CoreOp.ReturnOp ReturnOp},\n+     * the returned value is the result of the {@link jdk.incubator.code.dialect.core.CoreOp.QuotedOp QuotedOp}\n+     * object described previously.\n+     *\n+     * @param op The operation to quote\n+     * @return The model that represent the quoting of {@code op}\n+     * @throws IllegalArgumentException if {@code op} is not bound\n+    * *\/\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/Quoted.java","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"}]}