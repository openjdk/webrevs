{"files":[{"patch":"@@ -20,1 +20,1 @@\n-    \/\/     - resolve to accessor method\n+    \/\/     - resolve to RecordComponent\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/JavaRef.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import java.util.Objects;\n@@ -49,1 +50,0 @@\n-    final TypeElement refType;\n@@ -65,1 +65,0 @@\n-        this.refType = functionType.returnType();\n@@ -73,5 +72,0 @@\n-    @Override\n-    public TypeElement refType() {\n-        return refType;\n-    }\n-\n@@ -86,2 +80,2 @@\n-        Class<?> refC = resolve(l, refType);\n-        if (refType instanceof ArrayType at) {\n+        Class<?> refC = resolve(l, type.returnType());\n+        if (type.returnType() instanceof ArrayType at) {\n@@ -125,1 +119,1 @@\n-        return refType.externalize() + \"::<new>\" +\n+        return type.returnType().externalize() + \"::<new>\" +\n@@ -132,7 +126,2 @@\n-        if (this == o) return true;\n-        if (o == null || getClass() != o.getClass()) return false;\n-\n-        ConstructorRefImpl that = (ConstructorRefImpl) o;\n-\n-        if (!refType.equals(that.refType)) return false;\n-        return type.equals(that.type);\n+        if (!(o instanceof ConstructorRefImpl that)) return false;\n+        return Objects.equals(type, that.type);\n@@ -143,3 +132,1 @@\n-        int result = refType.hashCode();\n-        result = 31 * result + type.hashCode();\n-        return result;\n+        return Objects.hashCode(type);\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/impl\/ConstructorRefImpl.java","additions":7,"deletions":20,"binary":false,"changes":27,"status":"modified"}]}