{"files":[{"patch":"@@ -166,2 +166,0 @@\n-    exports jdk.internal.classfile.impl to\n-        jdk.incubator.code;\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import jdk.internal.classfile.impl.BytecodeHelpers;\n-\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/bytecode\/BranchCompactor.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,16 @@\n+package jdk.incubator.code.bytecode;\n+\n+import java.lang.classfile.Opcode;\n+\n+final class BytecodeHelpers {\n+\n+    \/\/ Copied from java.base\/jdk.internal.classfile.impl.BytecodeHelpers\n+    \/\/ to avoid export of package from java.base to jdk.incubator.code\n+\n+    static boolean isUnconditionalBranch(Opcode opcode) {\n+        return switch (opcode) {\n+            case GOTO, ATHROW, GOTO_W, LOOKUPSWITCH, TABLESWITCH -> true;\n+            default -> opcode.kind() == Opcode.Kind.RETURN;\n+        };\n+    }\n+}\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/bytecode\/BytecodeHelpers.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"added"},{"patch":"@@ -31,1 +31,0 @@\n-import jdk.internal.classfile.impl.BytecodeHelpers;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/bytecode\/BytecodeLift.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}