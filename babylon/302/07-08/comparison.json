{"files":[{"patch":"@@ -1,30 +0,0 @@\n-package jdk.incubator.code.internal;\n-\n-import jdk.incubator.code.Quoted;\n-\n-import java.lang.reflect.InvocationHandler;\n-import java.lang.reflect.Method;\n-import java.util.Objects;\n-\n-public class QuotableLambdaOpInvocationHandler implements InvocationHandler {\n-    private final Object fiInstance;\n-    private final Quoted quoted;\n-\n-    public QuotableLambdaOpInvocationHandler(Object fiInstance, Quoted quoted) {\n-        this.fiInstance = fiInstance;\n-        this.quoted = quoted;\n-    }\n-    @Override\n-    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n-        if (Objects.equals(method.getName(), \"quoted\") && method.getParameterCount() == 0) {\n-            return quoted();\n-        } else {\n-            \/\/ Delegate to FI instance\n-            return method.invoke(fiInstance, args);\n-        }\n-    }\n-\n-    public final Quoted quoted() {\n-        return quoted;\n-    }\n-}\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/QuotableLambdaOpInvocationHandler.java","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -30,0 +30,2 @@\n+import java.lang.reflect.InvocationHandler;\n+import java.lang.reflect.Method;\n@@ -32,1 +34,0 @@\n-import jdk.incubator.code.internal.QuotableLambdaOpInvocationHandler;\n@@ -493,1 +494,0 @@\n-                Quoted quoted = new Quoted(lo, capturedValuesAndArguments);\n@@ -495,1 +495,16 @@\n-                        new QuotableLambdaOpInvocationHandler(fiInstance, quoted));\n+                        new InvocationHandler() {\n+                            private final Quoted quoted = new Quoted(lo, capturedValuesAndArguments);\n+                            @Override\n+                            public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n+                                if (Objects.equals(method.getName(), \"quoted\") && method.getParameterCount() == 0) {\n+                                    return quoted();\n+                                } else {\n+                                    \/\/ Delegate to FI instance\n+                                    return method.invoke(fiInstance, args);\n+                                }\n+                            }\n+\n+                            public Quoted quoted() {\n+                                return quoted;\n+                            }\n+                        });\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/interpreter\/Interpreter.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"}]}