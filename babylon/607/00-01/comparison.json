{"files":[{"patch":"@@ -221,1 +221,0 @@\n-\n@@ -244,2 +243,1 @@\n-                            OpTk.firstOperand(vop) instanceof Op.Result r &&\n-                            !(r.op() instanceof JavaOp.NewOp)) { \/\/ makes sure we don't process a new int[] for example\n+                            OpTk.firstOperand(vop) instanceof Op.Result r) { \/\/ makes sure we don't process a new int[] for example\n@@ -254,7 +252,5 @@\n-                        \/\/ if this is the VarLoadOp after the .arrayView() InvokeOp\n-                        if (r.op() instanceof CoreOp.VarOp) {\n-                            if (OpTk.notGlobalVarOp(l, vlop)) {\n-                                replaced.put(vlop.result(), (Op.Result) OpTk.firstOperand(((Op.Result) OpTk.firstOperand(r.op())).op()));\n-                            } else {\n-                                replaced.put(vlop.result(), bufferVarLoads.get(replaced.get(r).op()).result());\n-                            }\n+                        if (r.op() instanceof CoreOp.VarOp) { \/\/ if this is the VarLoadOp after the .arrayView() InvokeOp\n+                            Op.Result replacement = (OpTk.notGlobalVarOp(l, vlop)) ?\n+                                    (Op.Result) OpTk.firstOperand(((Op.Result) OpTk.firstOperand(r.op())).op()) :\n+                                    bufferVarLoads.get(replaced.get(r).op()).result();\n+                            replaced.put(vlop.result(), replacement);\n@@ -301,8 +297,6 @@\n-                                if (alop.result() != null) {\n-                                    ClassType classType = (ClassType) buffer.type();\n-                                    Class<?> c = (Class<?>) OpTk.classTypeToTypeOrThrow(l, classType);\n-                                    Class<?> storedClass = OpTk.primitiveTypeToClass(alop.result().type());\n-                                    MethodRef m = MethodRef.method(c, \"array\", storedClass, long.class);\n-                                    Op.Result invokeRes = bb.op(JavaOp.invoke(m, OpTk.getValue(bb, buffer), convRes));\n-                                    bb.context().mapValue(alop.result(), invokeRes);\n-                                }\n+\n+                                Class<?> c = (Class<?>) OpTk.classTypeToTypeOrThrow(l, (ClassType) buffer.type());\n+                                Class<?> storedClass = OpTk.primitiveTypeToClass(alop.result().type());\n+                                MethodRef m = MethodRef.method(c, \"array\", storedClass, long.class);\n+                                Op.Result invokeRes = bb.op(JavaOp.invoke(m, OpTk.getValue(bb, buffer), convRes));\n+                                bb.context().mapValue(alop.result(), invokeRes);\n@@ -344,8 +338,4 @@\n-                                ClassType classType;\n-                                boolean noRootVlop = false;\n-                                if (buffer.op() instanceof CoreOp.VarOp vop) {\n-                                    classType = (ClassType) vop.varValueType();\n-                                    noRootVlop = true;\n-                                } else {\n-                                    classType = (ClassType) buffer.type();\n-                                }\n+                                boolean noRootVlop = (buffer.op() instanceof CoreOp.VarOp);\n+                                ClassType classType = (noRootVlop) ?\n+                                        (ClassType) ((CoreOp.VarOp) buffer.op()).varValueType() :\n+                                        (ClassType) buffer.type();\n@@ -366,2 +356,2 @@\n-                    if (OpTk.firstOperand(alen) instanceof Op.Result r &&\n-                            OpTk.isBufferArray(l, alen)) {\n+                    if (OpTk.isBufferArray(l, alen) &&\n+                            OpTk.firstOperand(alen) instanceof Op.Result r) {\n","filename":"hat\/core\/src\/main\/java\/hat\/callgraph\/KernelCallGraph.java","additions":18,"deletions":28,"binary":false,"changes":46,"status":"modified"}]}