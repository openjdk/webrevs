{"files":[{"patch":"@@ -61,29 +61,55 @@\n- *    u2 attribute_name_index;\n- *    u4 attribute_length;\n- *    u2 op_name_index;\n- *    u2 op_operands_length;\n- *    u2 op_operands[op_operands_length];\n- *    u2 op_result_type_index;\n- *    u2 op_attributes_length;\n- *    {   u2 attribute_name_index;\n- *        u2 attribute_value_index;\n- *        u2 line number; \/\/ only for location attribute\n- *        u2 column number; \/\/ only for location attribute\n- *    } op_attributes_table[op_attributes_length];\n- *    u2 nested_bodies_length;\n- *    {   u2 body_func_type_index;\n- *        u2 blocks_length;\n- *        {   u2 block_parameters_length; \/\/ except for entry block\n- *            u2 block_parameter_type_index[block_parameters_length]; \/\/ except for entry block\n- *            u2 ops_length;\n- *            {   u2 op_name_index;\n- *                \/\/  recurent declaration of op \/ nested bodies \/ blocks \/ ops\n- *            } ops_table[ops_length];\n- *            u2 successors_length; \/\/ declared at block level however applied to the block terminal op\n- *            {   u2 successor_block_index;\n- *                u2 block_arguments_length;\n- *                u2 block_arguments[block_arguments_length];\n- *            } successor_table[successors_length]\n- *        } blocks_table[blocks_length];\n- *    } nested_bodies_table[nested_bodies_length];\n- *}\n+ *     u2 attribute_name_index;\n+ *     u4 attribute_length;\n+ *     op_info;\n+ * }\n+ *\n+ * op_info {\n+ *     u2 op_name_index;\n+ *     u2 op_operands_length;\n+ *     u2 op_operands[op_operands_length];\n+ *     u2 op_result_type_index;\n+ *     u2 op_attributes_length;\n+ *     op_attribute_info op_attributes_table[op_attributes_length];\n+ *     u2 nested_bodies_length;\n+ *     {   u2 body_func_type_index;\n+ *         block_content_info; \/\/ entry block\n+ *         u2 blocks_length;\n+ *         {   u2 block_parameters_length;\n+ *             u2 block_parameter_type_index[block_parameters_length];\n+ *             block_content_info;\n+ *         } blocks_table[blocks_length];\n+ *     } nested_bodies_table[nested_bodies_length];\n+ * }\n+ *\n+ * union op_attribute_info {\n+ *     value_attribute_info;\n+ *     location_attribute_info;\n+ * }\n+ *\n+ * value_attribute_info {\n+ *     u2 attribute_name_index;\n+ *     u2 attribute_value_index;\n+ * }\n+ *\n+ * location_attribute_info {\n+ *     u2 location_attribute_name_index;\n+ *     u2 source_index;\n+ *     u2 line_number;\n+ *     u2 column_number;\n+ * }\n+ *\n+ * block_content_info {\n+ *     u2 ops_length;\n+ *     op_info ops_table[ops_length];\n+ *     terminal_op_info;\n+ * } blocks_table[blocks_length];\n+ *\n+ *\n+ * terminal_op_info {\n+ *     op_info;\n+ *     u2 successors_length;\n+ *     {   u2 successor_block_index;\n+ *         u2 block_arguments_length;\n+ *         u2 block_arguments[block_arguments_length];\n+ *     } successor_table[successors_length]\n+ * }\n@@ -174,0 +200,5 @@\n+\n+        \/\/ @@@ assumption terminating op is only the last one in each block\n+        if (op instanceof Op.Terminating) {\n+            writeSuccessors(buf, op.successors(), valueMap);\n+        }\n@@ -259,1 +290,1 @@\n-        var blocks = new Block.Builder[buf.readU2()];\n+        var blocks = new Block.Builder[buf.readU2() + 1]; \/\/ entry block is mandatory\n@@ -275,2 +306,2 @@\n-        \/\/ number of blocks\n-        buf.writeU2(blocks.size());\n+        \/\/ number of blocks - entry block\n+        buf.writeU2(blocks.size() - 1);\n@@ -279,1 +310,1 @@\n-            if (block.isEntryBlock()) {\n+            if (block.isEntryBlock()) { \/\/ @@@ assumption entry block is the first one\n@@ -288,2 +319,0 @@\n-            \/\/ successors\n-            writeSuccessors(buf, block.successors(), valueMap);\n@@ -315,1 +344,1 @@\n-        for (int i = 0; i < opnum; i++) {\n+        for (int i = 0; i <= opnum; i++) { \/\/ +1 terminal op\n@@ -317,1 +346,1 @@\n-            Op op = readOp(buf, i == opnum - 1, bb.parentBody(), allBlocks, allValues);\n+            Op op = readOp(buf, i == opnum, bb.parentBody(), allBlocks, allValues);\n@@ -326,2 +355,2 @@\n-        \/\/ number of ops\n-        buf.writeU2(ops.size());\n+        \/\/ number of ops - mandatory terminal op\n+        buf.writeU2(ops.size() - 1);\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelAttribute.java","additions":68,"deletions":39,"binary":false,"changes":107,"status":"modified"}]}