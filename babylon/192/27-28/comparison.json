{"files":[{"patch":"@@ -81,1 +81,1 @@\n-    private record ExceptionRegionEntry(Op.Result enter, ExceptionRegion region) {}\n+    private record ExceptionRegionEntry(Op.Result enter, Block.Builder startBlock, ExceptionRegion region) {}\n@@ -307,1 +307,1 @@\n-    private Block.Builder insertExceptionRegionExits(Label targetLabel) {\n+    private Block.Builder findTargetBlock(Label targetLabel) {\n@@ -309,0 +309,1 @@\n+        int targetBci = codeAttribtue.labelToBci(targetLabel);\n@@ -310,3 +311,5 @@\n-            int targetBci = codeAttribtue.labelToBci(targetLabel);\n-            if (targetBci < codeAttribtue.labelToBci(ee.region.startLabel) || targetBci >= codeAttribtue.labelToBci(ee.region.endLabel)) {\n-                \/\/ Branching out of the exception region, need to insert a block with ExceptionRegionExit\n+            if (ee.region.startLabel == targetLabel) {\n+                \/\/ Avoid region re-entry\n+                targetBlock = ee.startBlock;\n+            } else if (targetBci < codeAttribtue.labelToBci(ee.region.startLabel) || targetBci >= codeAttribtue.labelToBci(ee.region.endLabel)) {\n+                \/\/ Leaving the exception region, need to insert ExceptionRegionExit\n@@ -316,2 +319,0 @@\n-            } else {\n-                return targetBlock;\n@@ -357,1 +358,1 @@\n-                            Op ere = CoreOp.exceptionRegionEnter(successor(next), insertExceptionRegionExits(reg.handlerLabel()).successor());\n+                            Op ere = CoreOp.exceptionRegionEnter(successor(next), findTargetBlock(reg.handlerLabel()).successor());\n@@ -360,1 +361,1 @@\n-                            exceptionRegionStack.push(new ExceptionRegionEntry(ere.result(), reg));\n+                            exceptionRegionStack.push(new ExceptionRegionEntry(ere.result(), next, reg));\n@@ -366,1 +367,1 @@\n-                    op(CoreOp.branch(successor(insertExceptionRegionExits(inst.target()))));\n+                    op(CoreOp.branch(successor(findTargetBlock(inst.target()))));\n@@ -391,1 +392,1 @@\n-                    Block.Builder branch = insertExceptionRegionExits(inst.target());\n+                    Block.Builder branch = findTargetBlock(inst.target());\n@@ -902,1 +903,1 @@\n-        Block.Builder def = insertExceptionRegionExits(defaultTarget);\n+        Block.Builder def = findTargetBlock(defaultTarget);\n@@ -907,1 +908,1 @@\n-                    successor(insertExceptionRegionExits(sc.target())),\n+                    successor(findTargetBlock(sc.target())),\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-        Assert.assertTrue(passed > 33880, String.format(\"\"\"\n+        Assert.assertTrue(passed > 33890, String.format(\"\"\"\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}