[{"commit":{"message":"fixed lifting and generation of non-void returning MH used in void returning INDY calls"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java"}],"sha":"e2c90bec02383a8d934250389979512632b60ded"},{"commit":{"message":"block parameters constructions from fixed stack maps"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"}],"sha":"8bc8d2fd8bb38a7de1c831d4c09b8ae1e006633e"},{"commit":{"message":"LocalTypeMapper performs iterative correction of int stack map frame entries to support byte, boolean, short and char types"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"edf96390a822051c69ad7f66abfa07afbc801692"},{"commit":{"message":"Merge branch 'code-reflection' into bytecode-round-9"},"files":[],"sha":"24155587cc128cd486aa29e8785505f034b2c15b"},{"commit":{"message":"removed obsolete BytecodeGenerator::conversion"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"44faf0123a5fa7516d5b28dac22934252af6dced"},{"commit":{"message":"removed debug output"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"}],"sha":"0c9f5865da50adb8fa6831f68863ea3fa5d84f81"},{"commit":{"message":"BytecodeLift fixes of code branching with deep stack and unitialized frame objects"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestLiftCustomBytecode.java"}],"sha":"e08395f3bb4839d31cf2e9f20f5f208d08099693"},{"commit":{"message":"fixed LocalsTypeMapper to track uninitialized types"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"}],"sha":"807a5c9337ff8617361db4165d2ab3ef061f9af1"},{"commit":{"message":"fixed LocalsTypeMapper and lambdas lifting"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/LocalsTypeMapper.java"}],"sha":"f5eaa8f3f5ca630ed6243428cc30f8bfc73d07f8"},{"commit":{"message":"fixed generating of non-String concats"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java"}],"sha":"d32912f097e67032869b73432cfd1e083d5e42cb"},{"commit":{"message":"lifting concats"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestLiftCustomBytecode.java"}],"sha":"eea8b31e87cbc47732161fb8f2c97f54b18f3408"}]