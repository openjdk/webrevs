{"files":[{"patch":"@@ -68,2 +68,0 @@\n-                \/\/ @@@ Remove all catch blocks from join points to avoid adding block parameters to them\n-                removeCatchBlocksFromJoinPoints(b, joinPoints);\n@@ -261,0 +259,8 @@\n+\n+        \/\/ @@@ Remove all catch blocks from dominance frontier to avoid adding block parameters to them\n+        for (Block b : body.blocks()) {\n+            if (b.terminatingOp() instanceof CoreOp.ExceptionRegionEnter ere) {\n+                df.values().forEach(dfs -> dfs.removeAll(ere.catchBlocks().stream().map(Block.Reference::targetBlock).toList()));\n+            }\n+        }\n+\n@@ -297,14 +303,0 @@\n-    \/**\n-     * Removes all catch blocks from join points to avoid adding block parameters to them.\n-     *\n-     * @param body the body\n-     * @param joinPoints the join points to clean.\n-     *\/\n-    public static void removeCatchBlocksFromJoinPoints(Body body, Map<Block, Set<Integer>> joinPoints) {\n-        for (Block b : body.blocks()) {\n-            if (b.terminatingOp() instanceof CoreOp.ExceptionRegionEnter ere) {\n-                ere.catchBlocks().forEach(r -> joinPoints.remove(r.targetBlock()));\n-            }\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/SlotSSA.java","additions":8,"deletions":16,"binary":false,"changes":24,"status":"modified"}]}