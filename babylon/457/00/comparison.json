{"files":[{"patch":"@@ -50,1 +50,1 @@\n-    static void m(int i, List<Integer> l) {\n+    static int m(int i, List<Integer> l) {\n@@ -52,1 +52,1 @@\n-            return;\n+            return i;\n@@ -55,1 +55,1 @@\n-        n(i - 1, l);\n+        return n(i - 1, l);\n@@ -59,1 +59,1 @@\n-    static void n(int i, List<Integer> l) {\n+    static int n(int i, List<Integer> l) {\n@@ -61,1 +61,1 @@\n-        m(i - 1, l);\n+        return m(i - 1, l);\n@@ -82,1 +82,1 @@\n-        Interpreter.invoke(MethodHandles.lookup(), module.functionTable().firstEntry().getValue(), 10, r);\n+        Object result = Interpreter.invoke(MethodHandles.lookup(), module.functionTable().firstEntry().getValue(), 10, r);\n@@ -84,0 +84,1 @@\n+        Assert.assertEquals(result, -2);\n@@ -127,1 +128,1 @@\n-                            block.op(CoreOp.funcCall(\n+                            Op.Result result = block.op(CoreOp.funcCall(\n@@ -131,0 +132,2 @@\n+                            \/\/ Map invocation result to function call result\n+                            block.context().mapValue(op.result(), result);\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestTransitiveInvokeModule.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"}]}