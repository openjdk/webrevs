{"files":[{"patch":"@@ -124,5 +124,9 @@\n-            if (ce instanceof Op op && op.result() != null && op.result().uses().size() != 1) {\n-                l.add(op.result());\n-            } else if (ce instanceof CoreOp.InvokeOp invokeOp && (invokeOp.invokeDescriptor().equals(M_BLOCK_BUILDER_OP)\n-                   || invokeOp.invokeDescriptor().equals(M_BLOCK_BUILDER_PARAM))) {\n-               l.add(invokeOp.result());\n+            boolean isRoot = switch (ce) {\n+                case CoreOp.InvokeOp invokeOp when invokeOp.invokeDescriptor().equals(M_BLOCK_BUILDER_OP)\n+                        || invokeOp.invokeDescriptor().equals(M_BLOCK_BUILDER_PARAM) -> true;\n+                case CoreOp.ReturnOp _, CoreOp.ArrayAccessOp.ArrayStoreOp _ -> true;\n+                case Op op when op.result() != null && op.result().uses().size() > 1 -> true;\n+                default -> false;\n+            };\n+            if (isRoot) {\n+                l.add(((Op)ce).result());\n@@ -137,3 +141,7 @@\n-                var vs = new Symbol.VarSymbol(LocalVarFlags | SYNTHETIC, names.fromString(\"_$\" + localVarCount++), tree.type, ms);\n-                tree = treeMaker.VarDef(vs, e);\n-                valueToTree.put(root, tree);\n+                if (!root.uses().isEmpty()) {\n+                    var vs = new Symbol.VarSymbol(LocalVarFlags | SYNTHETIC, names.fromString(\"_$\" + localVarCount++), tree.type, ms);\n+                    tree = treeMaker.VarDef(vs, e);\n+                    valueToTree.put(root, tree);\n+                } else {\n+                    tree = treeMaker.Exec(e);\n+                }\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeModelToAST.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"}]}