[{"commit":{"message":"Refactor"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"e27467e9309eb23752a4721deae57a55ad1eb3d6"},{"commit":{"message":"Refactor to avoid allocation everytime we call isNarrowingPrimitiveConv"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"ee676d3843ab8a4c8cbedbcba0b381528bcf571d"},{"commit":{"message":"Handle the case when type check is true"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"2effced33a32f54422708fc08b970e82e71fbea4"},{"commit":{"message":"Refactor"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"4e249a1c64676884f1673ff97e60c8a3421bc8f2"},{"commit":{"message":"Handle the case of exact widening primitive conversion"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"ad4c58f90d7638dd7d1b5d7b2eb375aeb7decea1"},{"commit":{"message":"Remove unused methods"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"}],"sha":"b55a09d3cc830148fe0cd76e3328e1c0d314172d"},{"commit":{"message":"Support testing context 's conversions for reference values"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"36e7a4ff457c5d2170df314543f9bb246d5aa7f5"},{"commit":{"message":"Support conversions of primitives in testing context"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java"}],"sha":"e0ca4850af514eb2eacd4b859259ed192446cc4b"}]