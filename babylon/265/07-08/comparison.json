{"files":[{"patch":"@@ -49,1 +49,1 @@\n-    public static Object[][] dp() {\n+    public static Object[][] narrowingPrimitiveAndWideningPrimitiveThatNeedCheck() {\n@@ -141,2 +141,2 @@\n-    @Test(dataProvider = \"dp\")\n-    void test(JavaType sourceType, JavaType targetType, Object[] values) throws Throwable {\n+    @Test(dataProvider = \"narrowingPrimitiveAndWideningPrimitiveThatNeedCheck\")\n+    void testNarrowingPrimitiveAndWideningPrimitiveThatNeedCheck(JavaType sourceType, JavaType targetType, Object[] values) throws Throwable {\n@@ -169,1 +169,1 @@\n-    static boolean ip(short s) {\n+    static boolean identityPrimitive(short s) {\n@@ -174,2 +174,2 @@\n-    void test_ip() {\n-        FuncOp f = getFuncOp(\"ip\");\n+    void testIdentityPrimitive() {\n+        FuncOp f = getFuncOp(\"identityPrimitive\");\n@@ -185,1 +185,1 @@\n-    static boolean wnp(byte s) {\n+    static boolean wideningNarrowingPrimitive(byte s) {\n@@ -190,2 +190,2 @@\n-    void test_wnp() {\n-        FuncOp f = getFuncOp(\"wnp\");\n+    void testWideningNarrowingPrimitive() {\n+        FuncOp f = getFuncOp(\"wideningNarrowingPrimitive\");\n@@ -202,1 +202,1 @@\n-    static boolean b(int s) {\n+    static boolean boxing(int s) {\n@@ -207,2 +207,2 @@\n-    void test_b() {\n-        FuncOp f = getFuncOp(\"b\");\n+    void testBoxing() {\n+        FuncOp f = getFuncOp(\"boxing\");\n@@ -219,1 +219,1 @@\n-    static boolean bw(int s) {\n+    static boolean boxingWideningReference(int s) {\n@@ -224,2 +224,2 @@\n-    void test_bw() {\n-        FuncOp f = getFuncOp(\"bw\");\n+    void testBoxingWideningReference() {\n+        FuncOp f = getFuncOp(\"boxingWideningReference\");\n@@ -236,1 +236,1 @@\n-    static boolean nr_unboxing(Number n) {\n+    static boolean narrowingReferenceUnboxing(Number n) {\n@@ -241,2 +241,2 @@\n-    void test_nr_unboxing() {\n-        FuncOp f = getFuncOp(\"nr_unboxing\");\n+    void testNarrowingReferenceUnboxing() {\n+        FuncOp f = getFuncOp(\"narrowingReferenceUnboxing\");\n@@ -258,1 +258,1 @@\n-    void test_unboxing() {\n+    void testUnboxing() {\n@@ -270,1 +270,1 @@\n-    static boolean unboxing_wp(Integer n) {\n+    static boolean unboxingWideningPrimitive(Integer n) {\n@@ -275,2 +275,2 @@\n-    void test_unboxing_wp() {\n-        FuncOp f = getFuncOp(\"unboxing_wp\");\n+    void testUnboxingWideningPrimitive() {\n+        FuncOp f = getFuncOp(\"unboxingWideningPrimitive\");\n@@ -287,1 +287,1 @@\n-    static boolean wr(String s) {\n+    static boolean wideningReference(String s) {\n@@ -292,2 +292,2 @@\n-    void test_wr() {\n-        FuncOp f = getFuncOp(\"wr\");\n+    void testWideningReference() {\n+        FuncOp f = getFuncOp(\"wideningReference\");\n@@ -304,1 +304,1 @@\n-    static boolean ir(Float f) {\n+    static boolean identityReference(Float f) {\n@@ -309,2 +309,2 @@\n-    void test_ir() {\n-        FuncOp f = getFuncOp(\"ir\");\n+    void testIdentityReference() {\n+        FuncOp f = getFuncOp(\"identityReference\");\n@@ -323,1 +323,1 @@\n-    static boolean nr(Number n) {\n+    static boolean narrowingReference(Number n) {\n@@ -328,2 +328,2 @@\n-    void test_nr() {\n-        FuncOp f = getFuncOp(\"nr\");\n+    void testNarrowingReference() {\n+        FuncOp f = getFuncOp(\"narrowingReference\");\n@@ -342,1 +342,1 @@\n-    static boolean wp(int i) {\n+    static boolean wideningPrimitive(int i) {\n@@ -347,2 +347,2 @@\n-    void test_wp() {\n-        FuncOp f = getFuncOp(\"wp\");\n+    void testWideningPrimitive() {\n+        FuncOp f = getFuncOp(\"wideningPrimitive\");\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveTypePatterns.java","additions":34,"deletions":34,"binary":false,"changes":68,"status":"modified"}]}