{"files":[{"patch":"@@ -1398,1 +1398,2 @@\n-                Value init = variablesStack.block.op(defaultValue(jcVar.type));\n+                Value defaultValue = variablesStack.block.op(defaultValue(jcVar.type));\n+                Value init = convert(defaultValue, jcVar.type);\n@@ -2331,1 +2332,2 @@\n-                        Value one = append(numericOneValue(tree.type));\n+                        Type unboxedType = types.unboxedTypeOrType(tree.type);\n+                        Value one = convert(append(numericOneValue(unboxedType)), unboxedType);\n@@ -2655,1 +2657,1 @@\n-                case BYTE -> CoreOp.constant(typeToTypeElement(t), (byte)0);\n+                case BYTE, SHORT, INT -> CoreOp.constant(JavaType.INT, 0);\n@@ -2658,2 +2660,0 @@\n-                case SHORT -> CoreOp.constant(typeToTypeElement(t), (short)0);\n-                case INT -> CoreOp.constant(typeToTypeElement(t), 0);\n@@ -2669,1 +2669,1 @@\n-                case BYTE -> CoreOp.constant(typeToTypeElement(t), (byte)1);\n+                case BYTE, SHORT, INT -> CoreOp.constant(JavaType.INT, 1);\n@@ -2671,2 +2671,0 @@\n-                case SHORT -> CoreOp.constant(typeToTypeElement(t), (short)1);\n-                case INT -> CoreOp.constant(typeToTypeElement(t), 1);\n@@ -2676,1 +2674,0 @@\n-                case CLASS -> numericOneValue(types.unboxedType(t));\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"}]}