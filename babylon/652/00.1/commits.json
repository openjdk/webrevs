[{"commit":{"message":"Merge master"},"files":[{"filename":"make\/conf\/docs-modules.conf"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransTypes.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/file\/BaseFileManager.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/file\/JavacFileManager.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/JavacProcessingEnvironment.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"},{"filename":"src\/jdk.compiler\/share\/classes\/module-info.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"1d7ff73d8f7dbca717b070a80b0b48d1f72a8799"},{"commit":{"message":"Moved job src into hat project"},"files":[],"sha":"b6b09e85cdbe57d2817f6f7e5f4b2ecab2850a5a"},{"commit":{"message":"Hat view more tinkering"},"files":[],"sha":"ceb9524c6bcce6166b736043397599ebd3b99024"},{"commit":{"message":"Replace methods \"create\" in Op subclasses by constructors\n\nReviewed-by: psandoz"},"files":[],"sha":"837bb95fb29152fcd827de623399136c5974d1e2"},{"commit":{"message":"OnnxLift prototype"},"files":[],"sha":"df377fb293c362210b1e7a55f02b064992e0c727"},{"commit":{"message":"Hat refactor view"},"files":[],"sha":"d175d75ae9287e2d858fc73a9dd352514ea37a3c"},{"commit":{"message":"Upgrade ONNX runtime to use API version 1.23.1\n\nReviewed-by: asotona"},"files":[],"sha":"59a20e814588b6efe49cb67284814c20b23f6f7c"},{"commit":{"message":"Fixed BytecodeGenerator INDY calls with invalid interface method type\n\nReviewed-by: psandoz"},"files":[],"sha":"2dd513ad74b2c7a005a019f08739c9777ce719a8"},{"commit":{"message":"Coverted enum base view parser to iface based"},"files":[],"sha":"873d79657c907cdd7993dd226f87e150444c06b3"},{"commit":{"message":"Hat util regex"},"files":[],"sha":"801d7368218e6e17c072c64c31da4a17ae3210dc"},{"commit":{"message":"Update buffer tagging with arrayview support"},"files":[],"sha":"255b62fb74a18c2a79abef31f2051909dee1cbac"},{"commit":{"message":"[hat] config.h in sync with the auto-generator"},"files":[],"sha":"e0fe71a411d7036aea23e97abfb24b28f405d922"},{"commit":{"message":"[hat] Enable PROFILE_CUDA_KERNEL option"},"files":[],"sha":"70545418e164ff9c6acbe95317ff5649c996400f"},{"commit":{"message":"[hat] TestMul 1D thread-block and test f16 improved"},"files":[],"sha":"66109287d4fbb21622b13bc9ba2293d512000e80"},{"commit":{"message":"Update JDK version in opgen project\n\nReviewed-by: asotona"},"files":[],"sha":"cbc0ed446c7eb669b051e2aa4bb9dfc88c612606"},{"commit":{"message":"Simplify parsing of view data"},"files":[],"sha":"ae7306c7426311e9583a366f8467ba5f05a3a384"},{"commit":{"message":"Allow arbritrary text to be injected using annotations"},"files":[],"sha":"5fa15c4c70ba7a17df306b81875dfddc596eaae6"},{"commit":{"message":"Added non-hatified view 3d perspective example"},"files":[],"sha":"adcb1ea06f5a2c0b04e2d944b59e4da1e8226d71"},{"commit":{"message":"Phase tranform refactoring and fixed before\/after CallSite tracking"},"files":[],"sha":"edb3718ae70df775e7bc6edcd146eb7956f68666"},{"commit":{"message":"[hat] CPU Implementation for F16"},"files":[],"sha":"4731bacdbf1779b503fa4f9c31bf092fcfa8517f"},{"commit":{"message":"[hat] F16 object creation within device code via F16.of"},"files":[],"sha":"ae059ba17322b9d615cc932e3a26522ba73aa916"},{"commit":{"message":"Added  opencl-jextracted-backend to bld"},"files":[],"sha":"20e9f4a750113bcdd4236080b2a39660268c62bd"},{"commit":{"message":"more phase transform refctoring and a fix to hat.java for props"},"files":[],"sha":"768bf4c59b60ce6b12cc23ac44c99ee6a42ba749"},{"commit":{"message":"Refactored MemoryPhases to innerclasses"},"files":[],"sha":"9baa108f44555bfa817dfcbac05b3e34f0151bbe"},{"commit":{"message":"[hat] clean-up non-necessary methods for vector types"},"files":[],"sha":"1a3011f07ff182b1d5940c48ed0901aafdaaa5ad"},{"commit":{"message":"[hat] Initial support for 16-bits float types (half)"},"files":[],"sha":"5128c70b87c209d781307cf583826a2f5b8a1a8d"},{"commit":{"message":"BytecodeLift and related tests move under tests bytecode\/lift\n\nReviewed-by: psandoz"},"files":[],"sha":"987eed59b3bf38c19e70410c35c0759e3125d251"},{"commit":{"message":"Add support for other onnx providers (CoreML)\n\nReviewed-by: asotona"},"files":[],"sha":"a43beadb9347f7ce03d3d7f9b27e83fef5b7cf3f"},{"commit":{"message":"Quick hack to allow us to override codegen with annotation"},"files":[],"sha":"d6ec0a5f0a2ff334a58e2d2bfcaff6d658f5f5d4"},{"commit":{"message":"first pass at mapping HATOp phase Transformers to us  OpTk form"},"files":[],"sha":"00e7c5c6ad0417a580df7736d6086f15cf8cea9e"},{"commit":{"message":"Added simple map transformer to OpTk + Config convenience methods"},"files":[],"sha":"d509d3a0f0283680668f6ecb80a229ae6da5f24a"},{"commit":{"message":"OnnxProtoBuilder fixes"},"files":[],"sha":"02d3c681cdc21976cdbe293be8f49aaea352d706"},{"commit":{"message":"Added @hat\/help and @hat\/test-suite"},"files":[],"sha":"b944761feb0000e8b47051cbf16c8e9b207f3fa2"},{"commit":{"message":"[hat] Runner for a single test"},"files":[],"sha":"e02d79f2522c05117ceb7878c65023ef4bd43502"},{"commit":{"message":"[hat] Testing framework moved to hat.test"},"files":[],"sha":"9570005d172674cfd0f5d07509903479d734dd07"},{"commit":{"message":"Moved  dialect and arrayview transforms to KernelCallGraph constructor"},"files":[],"sha":"fc5c47206b7ae71bf203564e8ad1e79e50adbb21"},{"commit":{"message":"Fixed merge issues from last PR"},"files":[],"sha":"bc4faed7aae7b56f68c5420098e4d26f69eaed07"},{"commit":{"message":"Hat add kernel code annotation"},"files":[],"sha":"0ce11a2cc11c3c7a3541043bb5bb418cc8094080"},{"commit":{"message":"[hat] KernelContext from the hat.buffer package renamed to KernelBufferContext"},"files":[],"sha":"eacbfd7760416e06088012400a2565b88124ee90"},{"commit":{"message":"Updated Config"},"files":[],"sha":"31ee3dc417fabdcc9581598b0fe7cd70391732d9"},{"commit":{"message":"Decouple example-experiments from opencl + add example_arrayview to intellij"},"files":[],"sha":"cdb0f4a9d1cccb68c36df0dfcfffa9ef22f39cb9"},{"commit":{"message":"Proposal for Vector Types for GPUs (OpenCL and CUDA backends)"},"files":[],"sha":"26afd5b8e08e01fa126f88467ebdbb3d79f27a51"},{"commit":{"message":"Add private and local arrayView support"},"files":[],"sha":"e5dfd23bac5e313870ca3dabcc02321d74ab59e5"},{"commit":{"message":"[hat][docs] Some useful links added"},"files":[],"sha":"cd9577b0fb12a17a3a672e58225a89c0bb8f23b9"},{"commit":{"message":"CUDA and OpenCL C99 code now identical except for handling of atomics"},"files":[],"sha":"b46f103b7cafa6216ee82fbc2c557a10883b1728"},{"commit":{"message":"converging cuda\/opencl code gen using preprocessor"},"files":[],"sha":"09d27d9b887a7d573855924abd12b9a558e9e201"},{"commit":{"message":"cuda now also leverages c99 preprocessor"},"files":[],"sha":"86a9485a0428af125533e7d2a01ef683d1598c28"},{"commit":{"message":"implemented preprocessor hook for OpenCL code gen"},"files":[],"sha":"d1bd5d57d38573c536ec5c4d48b248c0e4b4a1cb"},{"commit":{"message":"Remove noModuleOp and bufferTagging flags"},"files":[],"sha":"09e34f28441ed95fcc218a0c8b65e3d8e0c9190d"},{"commit":{"message":"hat.java now scans the tests.jar for tests to run"},"files":[],"sha":"4fbdcd4a421cf23dfaf33ee3d9a799d5abc6ccaa"},{"commit":{"message":"config now accessible from all backends"},"files":[],"sha":"469e6ab36eafbcc3badc999c66e59d6ef825a61d"},{"commit":{"message":"[hat] Remote tests script fixed + add ArrayViews"},"files":[],"sha":"5a905ae8e211ab0aff77cd31eaa0f6fe65b2cfa0"},{"commit":{"message":"[hat] testing framework updated to use the new scripts"},"files":[],"sha":"788baa204e68c0099f9856814f38ce45f2e3aa4e"},{"commit":{"message":"[hat] clean-up - removed duplicated sample"},"files":[],"sha":"1cfba3b3a7acb15babae5b55b4b3a1eefd48d8c3"},{"commit":{"message":"[hat] rollback CUDA specific scheduler"},"files":[],"sha":"6aa54542593a463a36d1e8b54b190519ab05e86c"},{"commit":{"message":"initial prototype of prefix sum experiment"},"files":[],"sha":"161d583585ceb2e2ecca2c95649acd59560c1bf9"},{"commit":{"message":"[hat] Fix cuda set context"},"files":[],"sha":"0afb4ad7b6c65c923288299abf3b72e0c324244f"},{"commit":{"message":"[hat] Example of HAT for 2D Matmul with register tiling"},"files":[],"sha":"8e9bc5b2db96aa7b2f0879722237ecbfe98b841d"},{"commit":{"message":"Hat move config to core"},"files":[],"sha":"d288efa194a2eac83061760abd9ae053e2289199"},{"commit":{"message":"Remove the Op copy methods"},"files":[],"sha":"e22361991569a8ececc3bb359b59105eb180e4c9"},{"commit":{"message":"[hat][testing] Remote testing framework to pull all branches"},"files":[],"sha":"69228016e61237a13b5675174579b1bb0e6c8054"},{"commit":{"message":"HAT - New examples for optimizing matmul"},"files":[],"sha":"7d39deec2e23a430e9d285345831da67cc5f81e6"},{"commit":{"message":"Hat move config out from ffi backend so we can use from any hat program"},"files":[],"sha":"8dd8ccc397edf3acdc0db42bd0b7d0446582ac74"},{"commit":{"message":"Fixup maven, hat.java and hat\/bld.java to include arrayview example"},"files":[],"sha":"8a53ea4f39416ba7a309e87900b03690f3378fc5"},{"commit":{"message":"Transform runtime test to JUnit\n\nReviewed-by: psandoz, asotona"},"files":[],"sha":"194078e38f9adc5b063f3ed0c148a204af07195c"},{"commit":{"message":"ArrayView support for HAT kernels"},"files":[],"sha":"eb6a76b6935b7a87367abad0edf3801230949466"},{"commit":{"message":"[hat] Testing framework expanded"},"files":[],"sha":"7332d6b452a08ac5e2b64c80381236e65062045d"},{"commit":{"message":"[hat] Clean-up and formatting for HAT Dialect"},"files":[],"sha":"7be3ffed90b562f46629c7374f0ccb6c68859d92"},{"commit":{"message":"[hat][proposal] Analysis for constants before the codegen (#575)\n"},"files":[],"sha":"4b1b0627fd77c9770b29095ae26a1d3d16fe4f1e"},{"commit":{"message":"Opening Hat Dialect for Handling Barriers and Shared\/Private Memory (#560)\n"},"files":[],"sha":"84d2ea2a3fedc99cccc623b26d9e1db242124dc1"},{"commit":{"message":"[hat] Script for remote testing on GPU servers (#580)\n"},"files":[],"sha":"5ddaa81a4779ebbc68a3e4c4ebd620d73495e83b"},{"commit":{"message":"[hat][codegen] Parenthesis in Expressions for binaryOps fixed (#579)\n"},"files":[],"sha":"15ed8af8557dd8e5dfdf3d5c84093af7575ad5bc"},{"commit":{"message":"Remove op name state from Op\n\nReviewed-by: mcimadamore"},"files":[],"sha":"b5b2a61e3d5b56f2fcfcc377a4515cc88f323df4"},{"commit":{"message":"Update compiler tests to use JUnit instead of TestNG\n\nReviewed-by: psandoz, mcimadamore"},"files":[],"sha":"37ab07b2eddeae724f38ad627594a78d8a6e6876"},{"commit":{"message":"Examples Improved - FMA Dialect refactored (#570)\n\n* Fix examples README and javadoc\n\n* Refactor FMA Op example to use multiFilter and clean-up\n\n* [samples] Clean-up"},"files":[],"sha":"0b9a8387b88e26462aaa93d43ee3e93aebf6ab6c"},{"commit":{"message":"[hat] CUDA backend supported for CUDA < 12 (#576)\n"},"files":[],"sha":"3fc82e5b1fa110f26ec712521156f0a47bf9dbb3"},{"commit":{"message":"Allow hat.java run to pass -DXXXX options when running"},"files":[],"sha":"d3561b7dec7d2b4bdba24fa1bdead26620e66ce1"},{"commit":{"message":"added Emanuel Peter's normal mapping demo - not hatified yet"},"files":[],"sha":"97a023cbbeacd0ca4c5025173dc31bf4c25cbb20"},{"commit":{"message":"ONNX fixes\n\nReviewed-by: psandoz"},"files":[],"sha":"8a8d67d6f87d77082dff363b19c444677031ebf1"},{"commit":{"message":"Add isQuotable attribute to LambdaOp\n\nReviewed-by: psandoz"},"files":[],"sha":"d276cba1b4f99b8959e9177b3951ea393ef7acf2"},{"commit":{"message":"cleaned up test stanza of hat.java test"},"files":[],"sha":"bde6eb45f9e4dec5621e4d397fa902e989ee994c"},{"commit":{"message":"add ability to run tests from job.jar"},"files":[],"sha":"b662089307cb6b3752ce25146f83f1d6f2012ee9"},{"commit":{"message":"Align build artifacts maven, @hat\/bld and  hat\/job.jar"},"files":[],"sha":"c2b67cc6d08218ccd100354ea880b9877f96b96b"},{"commit":{"message":"Add sample annotation processor using code models\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/file\/BaseFileManager.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/file\/JavacFileManager.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"}],"sha":"c1638369da5940a78f57398e87ccd7b4bac5f667"},{"commit":{"message":"New Examples: Dialects and Dynamic Function Builds"},"files":[],"sha":"a9055a8e867abb3b0765c9ba0559f34c51fd342a"},{"commit":{"message":"Fix SSABraun bug and add SSA tests\n\nReviewed-by: psandoz"},"files":[],"sha":"ab94fe70c5fd3522469ff12a74e27d1ad4157002"},{"commit":{"message":"added tests to pom and intellij builds"},"files":[],"sha":"e087fd671d0231747d1df476d526daaa6b85def5"},{"commit":{"message":"more codegen cleanup"},"files":[],"sha":"aec075a4ad0d38606009d672120d23506bb3b40e"},{"commit":{"message":"[hat] MxM example using Loop Tiling as default (#556)\n"},"files":[],"sha":"98c0f3d7a85d31edd2336cb68d3474f80576a6b4"},{"commit":{"message":"[HAT] Testing framework improved with general statistics (#561)\n\n* [hat] scafolding for the testing framework\n\n* [hat] Testing single methods\n\n* [hat] Add utility methods for testing\n\n* Add missing licenses\n\n* Add missing pom file\n\n* [hat] Testing framework improved\n\n* [hat] Testing matrices added\n\n* [hat] Enable test suite\n\n* [hat] Test reductions added\n\n* [hat] Testing - delete old package\n\n* [hat] Testing - including test-report\n\n* [hat] Testing - final report only when running the test-suite"},"files":[],"sha":"8a881040948fc0b8198e161d7dfb5a888ad640cb"},{"commit":{"message":"More codegen tweaks"},"files":[],"sha":"6f6b9546bc1bb2575340369ae30c1b0e24e5c5ee"},{"commit":{"message":"Add local array support to BufferTagger"},"files":[],"sha":"4e621f395b7fd35038397038ddc2bdf9806c461e"},{"commit":{"message":"Initial Testing Framework for HAT"},"files":[],"sha":"0e0082fdf6931f354fd28ec5d83ce1a909470e5d"},{"commit":{"message":"Fixes for cuda codegen issues"},"files":[],"sha":"32003dd5709d340b8890247b1e44ced0a13b33a9"},{"commit":{"message":"Add buffer tagging and opt-out moduleOp backend"},"files":[],"sha":"4cd871eff7c9fd85a78953e3a3b9b4a0e7bde3c5"},{"commit":{"message":"HAT more consistent use of scoped code builder context + removed initialization of KernelContext in kernels"},"files":[],"sha":"4330ec273b9e9c1f1b9c3468fc635c8cd8a69650"},{"commit":{"message":"Hat more codegen cleanup"},"files":[],"sha":"4bee223d5f3d7dd08c863916553174e0612405c4"},{"commit":{"message":"Hat cleanup codegen"},"files":[],"sha":"5e338cc88a01c278308165385c64f74e6146e24b"},{"commit":{"message":"Patch to cleanup code gen issue foo.bar vs foo->bar for nested ifaces"},"files":[],"sha":"9087951d1889fc5744c00955656cda9f06aa5f38"},{"commit":{"message":"The OpWrapper removal caused a regression extracting nested ifaces"},"files":[],"sha":"5f135742f877ca4f8eaeb888291b52b2cdbf2c01"},{"commit":{"message":"Update ReflectMethods.BodyScanner.coerce to handle null targetType\n\nReviewed-by: mcimadamore"},"files":[],"sha":"429eb17462edf9d11d75dd14dc5ffea6a5e5b7c0"},{"commit":{"message":"Post OpWrapper cleanup, removed some experiments and fixed Violajones…"},"files":[],"sha":"25f28534f317aa80241db70f7808a36c809971a3"},{"commit":{"message":"[proposal][hat] Enabling local\/shared memory and local barriers within compute methods"},"files":[],"sha":"a16b8bf6b637cc6bc2c44dc0d733e19d5174512a"},{"commit":{"message":"hat cleanup after removing OpWrappers"},"files":[],"sha":"dbadf0d0d7e74227bc9e55055f651001140f5ca9"},{"commit":{"message":"[hat][fix] create context with v4 function"},"files":[],"sha":"c2757a1cdd68fd8e4d29d4e3e7cbed03b8b9a0e7"},{"commit":{"message":"All OpWrappers now removed."},"files":[],"sha":"59ace843f281fa7756de63487e88930ba18f8b1f"},{"commit":{"message":"Hat remove opwrapper 5"},"files":[],"sha":"71fc371a13ced86a7992d62ff4c73e6be7134921"},{"commit":{"message":"Hat remove opwrapper 4"},"files":[],"sha":"0b28fcbbe33a7da2251b6dcd3b5cec9d224ee2f6"},{"commit":{"message":"HAT remove OpWrapper round 3"},"files":[],"sha":"66f2b514dacb5d680d0a527fc3194729a261fbff"},{"commit":{"message":"hat opwrapper removal round 2"},"files":[],"sha":"a946101d2c01ee196a56409e0d7d4f50fd8151bc"},{"commit":{"message":"Rename quoteOp and quotedOp"},"files":[],"sha":"d82b1346811fe9183924d09fae2a2a93e9b53bb7"},{"commit":{"message":"Fix lambda bugs\n\nReviewed-by: psandoz"},"files":[],"sha":"58083628b0caa0d16fde48af1fa18df7edc8dc59"},{"commit":{"message":"Removing OpWrappers 1 of many"},"files":[],"sha":"92b4f42ab45f12bd7ca029d6b2f8838068eb9529"},{"commit":{"message":"Enable sealing of an operation\n\nReviewed-by: psandoz"},"files":[],"sha":"f37da86219dc51d166e5464023bda50a10c096d0"},{"commit":{"message":"[hat] Enable padding in the codegen as an option for the iFace types and Schemas"},"files":[],"sha":"cad3fdf3d76bee4d6e9f34f66cce5b6524fd6c16"},{"commit":{"message":"Document quoteOp and quotedOp methods\n\nReviewed-by: psandoz"},"files":[],"sha":"028d2bcd3b05407dd81ffaf86c8ef4273a206eb7"},{"commit":{"message":"Rearrange lowering."},"files":[],"sha":"4a88aba6599137f550bfcd13469ca9ebcc2c1ff2"},{"commit":{"message":"Stop intellij red-squiggling lambda parms called value"},"files":[],"sha":"c3b86bbe1ad3c3f0b601ccc770d892e9d22ff34a"},{"commit":{"message":"[samples] Apply type conversion for the int-shift function after the new result op has been built"},"files":[],"sha":"939aeaa815b6b43b5866f330cbf990102f050c30"},{"commit":{"message":"[hat][proposal] Adding notion of local thread ids and local group sizes int HAT"},"files":[],"sha":"cd6cf341929f9a83591a4a4dc780cad87a113af0"},{"commit":{"message":"Use existing code for creating KernelContext_s from its iface buffer schema"},"files":[],"sha":"bb4f7ff8f94590f4e019a9c28c354e461ad91821"},{"commit":{"message":"[hat][proposal] ComputeRange and ThreadMesh API for defining 1D, 2D and 3D Ranges"},"files":[],"sha":"92df1be61c8ef32f3ea2ac64c33b340b19737ec6"},{"commit":{"message":"Expand the example suite with Inlining and Bytecode generation"},"files":[],"sha":"19daae133c6fc99c31a02a276cc11fdf2a8a099a"},{"commit":{"message":"Fix interpreter arg checking"},"files":[],"sha":"c5102d7e1e7e688cb6aa34f5e474d8c0d989c141"},{"commit":{"message":"Added more quoted experiments"},"files":[],"sha":"700e5ee3957a251e926ae29675944fbfe671fda0"},{"commit":{"message":"Added an experiment to investigate Quoted Constant Args"},"files":[],"sha":"6c598848fb15490c0a01368fed6f66845d93c888"},{"commit":{"message":"Minor logging changes for HAT ModuleOp support"},"files":[],"sha":"ae9adb6f1c2be8d54a2d7a4dc3ee6d5e3352dac1"},{"commit":{"message":"New example suite for code reflection\n\nReviewed-by: psandoz"},"files":[],"sha":"72e696ebc33c15044df961c088188f745aeb76b4"},{"commit":{"message":"[fix][hat] Codegen fixed when passing the kernel context to multiple invoke functions"},"files":[],"sha":"b9b8906cdd8f4d53ac8e34331a983d31070c6300"},{"commit":{"message":"HAT remove trailing  eol ws from pom.xml files"},"files":[],"sha":"33437b1f36c7fbaf7d58dc2f0691dde2b4deec04"},{"commit":{"message":"HAT simplify tool text styling"},"files":[],"sha":"32995e46dfed2b2d689c493232f1f9b70e75cf5f"},{"commit":{"message":"Validate arguments types when interpreting an operation\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"4e218910f140ef6d86c2ce35278061b063846431"},{"commit":{"message":"Add SSA id dependency viewer tool + DotViewer infra"},"files":[],"sha":"326717927244f691793cb11ffb2027c0175910a0"},{"commit":{"message":"Transformation API changes"},"files":[],"sha":"20b98973c2d3e453942ff34794c62b3f7027cf95"},{"commit":{"message":"[hat][opencl] Check errors macro added"},"files":[],"sha":"9e465bb60c51e379fa211b1e92dc1d904239a7b2"},{"commit":{"message":"[hat][cuda] Add check errors for all CUDA calls"},"files":[],"sha":"097b2a0709b0de99be297707df6cf2a67cf2484d"},{"commit":{"message":"[docs][hat] Notes for building and running with the CUDA backend"},"files":[],"sha":"77df2387f55f83fb57504af09261e86e27223183"},{"commit":{"message":"[hat][cuda] 2D\/3D NDrange supported for CUDA"},"files":[],"sha":"9a47966d965587e84584dd8f781a11fcad82cc94"},{"commit":{"message":"Mistakenly left some debug code in last PR"},"files":[],"sha":"65cc7aff30b4618b8441772e19c19b78f8f6dc1c"},{"commit":{"message":"Add back code for highlighting SSA id references"},"files":[],"sha":"57786fb980c1a73d9bdf45b053113c1c0a8ca615"},{"commit":{"message":"Added a pair of jsplitpanes to FuncOpViewer"},"files":[],"sha":"3f9d10e24e55ee0b2f753a6bebc5aac177d0d68e"},{"commit":{"message":"[hat] mxm example with loop interchange"},"files":[],"sha":"d899d57d8d23de71d711b2e833d0644759d24bae"},{"commit":{"message":"Hat remove unused tool classes"},"files":[],"sha":"ccb4d2b47ce4268bdb2a4f58f2b884bd1c6f7f95"},{"commit":{"message":"Add line number gutter to op viewer"},"files":[],"sha":"9d8d7c8ebf139f04e73314700c04d5f856229d97"},{"commit":{"message":"Added some hat tooling from my secret stash"},"files":[],"sha":"85fa29bbd3b4be49b9daaea0a8527d17e22a0ea4"},{"commit":{"message":"Some documentation updates"},"files":[],"sha":"ab4ef0a70ea658a96fa405a728d2ba2cdcf6e95c"},{"commit":{"message":"[feature][HAT] 2D and 3D ranges for the NDRange API"},"files":[],"sha":"0159378cbdd9045ac0d8c39f0df4d59e9ee5a14d"},{"commit":{"message":"ONNX LLM example implementation"},"files":[],"sha":"f41b774b78ff20266477cbd022ef125a4b72dac1"},{"commit":{"message":"1D Matrix Multiplication example for HAT"},"files":[],"sha":"3c573e556f02180302c12dd4b9093173748ded1a"},{"commit":{"message":"Move Block.Builder.inline to analysis package"},"files":[],"sha":"97889b818eda66f395b4e2cc00653b2f5426dca3"},{"commit":{"message":"Lowering passes on transformer"},"files":[],"sha":"7f17268d68ad4cde128ed83f71a9af9b03c3b16f"},{"commit":{"message":"Single method to append an operation to a block builder"},"files":[],"sha":"2b9116c466512e8f8bf4aecdf015763289c895d9"},{"commit":{"message":"Remove Op::traverseOperands"},"files":[],"sha":"1935a8e15f6d01e282f51ecccb6b477590ba5d45"},{"commit":{"message":"CodeElement ancestor functionality"},"files":[],"sha":"bf9ceea95246d958fd111fdd869f315ee33dd282"},{"commit":{"message":"Disallow `null` return expressions in quoted lambdas\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"}],"sha":"547623b9d698187a12124bb4cb2cdf6e5ab9ac87"},{"commit":{"message":"Reduce Op writing to text methods.\n\nReviewed-by: mcimadamore"},"files":[],"sha":"8aa678bf2a4429d5a2be797d3102eaf84ac30658"},{"commit":{"message":"Issue errors when quotable constructs are found inside inner classes\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"}],"sha":"815098b04e3960eb9ef5df1343968ce22401beed"},{"commit":{"message":"Added a Java code builder"},"files":[],"sha":"89759a4c16964c0f07e5450f405621c4d6737b1a"},{"commit":{"message":"Onnx Record to tuple types conversion moved to TypeConverter"},"files":[],"sha":"f9b500a4e0d5de0d3c9573ff89a6f564290d1a8f"},{"commit":{"message":"Missed a project rename in hat\/bld.java"},"files":[],"sha":"10754b7094d1f6c4c38251262b4706013719889a"},{"commit":{"message":"We can now build jextracted artifacts from maven"},"files":[],"sha":"0466f705abcfcf30cd503a91cd16b1b15226576d"},{"commit":{"message":"renamed pom artifacts to align with docs and java @hat\/bld"},"files":[],"sha":"d50ac7ea345d6a32935b39711f5bb34561cf415e"},{"commit":{"message":"Sadly opengl wrap had hardcoded package name this is fixed now"},"files":[],"sha":"36cec9f6265f6db155555dc7c6d73b19f9bed63c"},{"commit":{"message":"Added example-experiments to hat\/bld and maven poms\""},"files":[],"sha":"298a09605d065e8408856e12cbb3c202d377ba4e"},{"commit":{"message":"Sync with babylon changes and moved\/renamed dirs for consistency"},"files":[],"sha":"666603190a5d58537a26b97f6f39ebe9f1564a70"},{"commit":{"message":"Block.Reference implements CodeItem"},"files":[],"sha":"03e030d4d80f71f76418e61b2b42017130f1375a"},{"commit":{"message":"Remove Java prefix from Java ops"},"files":[],"sha":"aa6d615d4f54d2e1a3994277ef098e0bc75cffbf"},{"commit":{"message":"Move OpDeclaration to internal package"},"files":[],"sha":"0285a976c2c56360633dbc835c000f6368b57a19"},{"commit":{"message":"Simplify OpFactory"},"files":[],"sha":"32de7710448e7aa85e347c4c29f6ca12d1f19459"},{"commit":{"message":"Cleanup compiler code gen"},"files":[],"sha":"e0a2b677a5e65094246f3e8fdae7ca92d7916344"},{"commit":{"message":"Hat Linux fixes to new build"},"files":[],"sha":"c23eea6e5df93825534f3ad8c12375d54f1b7edf"},{"commit":{"message":"Missed some import issues (experiments) from latest babylon changes"},"files":[],"sha":"47d7b77d3d74268d60f9d49956a870b9b3b8d16c"},{"commit":{"message":"Renamed hat-core -> core and wrap to wraps"},"files":[],"sha":"d75354fb0cdce34d96aef7361d945a80dfdfba49"},{"commit":{"message":"Cleanup and consolidate `ReflectMethods`\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/module-info.java"}],"sha":"cc00bdcb215d74a326d2e74d517196b745ccb9a1"},{"commit":{"message":"Explicit op factory implementations\n\nReviewed-by: mcimadamore"},"files":[],"sha":"6621aa1df06a24eae3fa3c9bc35b7752f1693a79"},{"commit":{"message":"Revert changes to Interpreter following PR 424\n\nReviewed-by: psandoz"},"files":[],"sha":"5c93e188efb5e3dc389899b43484395b89822528"},{"commit":{"message":"Move OpBuilder to internal package."},"files":[],"sha":"b6f0fb10a1a1b34fd34b8748238461fade1c9303"},{"commit":{"message":"Integrated PartialEvaluator into Onnx"},"files":[],"sha":"2ea36ac50acc8cbda16affaad7254b3a5d5b3e2d"},{"commit":{"message":"Remove ExternalizableOp\n\nReviewed-by: mcimadamore"},"files":[],"sha":"410129e8c57cf179599a9c840491b39ea81caea9"},{"commit":{"message":"Replace the use of Interpreter to create Quoted instance with specialized code"},"files":[],"sha":"bcad7e6b29b1a968d5e0e4acb4f3728a86d1ca44"},{"commit":{"message":"Cleanups"},"files":[],"sha":"d74895850e5f440f4062e22eb12707a754cd2870"},{"commit":{"message":"Adjust factory constants"},"files":[],"sha":"20a793511173e3275e747db8b8b20923146456c0"},{"commit":{"message":"Remove packages"},"files":[],"sha":"86feb425b326c820e8c6bbcd1bfe26ba77db6c4d"},{"commit":{"message":"Create extern package\n\nReviewed-by: mcimadamore"},"files":[],"sha":"80d9430922e007d879928cb30c8ab679426e6217"},{"commit":{"message":"Create CoreType"},"files":[],"sha":"865e7f0194a4aa957b12f14412d4f3a852309cc1"},{"commit":{"message":"Update test with return value"},"files":[],"sha":"645f3b98fa1b3f3ea04d660a87da9ce8027318d6"},{"commit":{"message":"Towards a cleaner hat bld run script"},"files":[],"sha":"c4d578e104cf9a8bd5bb0ad71936e6cb3f3fb1ab"},{"commit":{"message":"Fix up experiment module. Also autogen config.h"},"files":[],"sha":"a40d414ee1e5b53589aef00d9d45de61379d4960"},{"commit":{"message":"move ffi cpp and include files under .\/src\/main\/native"},"files":[],"sha":"a83488579e49f2f39c61ea1e31e126df9e3e8e46"},{"commit":{"message":"After previous linux (clang tidy) changes, mac c++ wanted a few tweaks"},"files":[],"sha":"e4b086c95edce53d00740b3d8bc1018756d6a741"},{"commit":{"message":"ffi apply clang tidy hints to ffi cuda\/opencl common code"},"files":[],"sha":"16e78fd37f449aa85001e618104f47f2a771dcc8"},{"commit":{"message":"Regularize dialect factory use"},"files":[],"sha":"47c1459baa9b587a21f060d4aac530d75688d8cd"},{"commit":{"message":"Move certain classes into non-exportable packages"},"files":[],"sha":"711a25570918260334e2b8d85e112585817d4c6e"},{"commit":{"message":"SSA cleanup\n\nReviewed-by: mcimadamore"},"files":[],"sha":"ec51e642ccad91b6981aad33f61bdd74a1cf5987"},{"commit":{"message":"Remove export of package from java.base.\n\nReviewed-by: asotona"},"files":[{"filename":"src\/java.base\/share\/classes\/module-info.java"}],"sha":"6b03113279df4f81f7a6690f4515d6e6f1e202a3"},{"commit":{"message":"Remove tools packages.\n\nReviewed-by: mcimadamore"},"files":[],"sha":"163d5f1abeb288e01d1c6f6da202086ec927c482"},{"commit":{"message":"Move verifier into bytecode tests\n\nReviewed-by: asotona"},"files":[],"sha":"88b2f4ba430d43d7ae3ff1dacba6c05837231db4"},{"commit":{"message":"Move ANF code to test code\n\nReviewed-by: mcimadamore"},"files":[],"sha":"7250e2eabc9d93798ba8250602bd99d85c26df00"},{"commit":{"message":"Enhance JavaType::type to deal with inner classes\n\nReviewed-by: psandoz"},"files":[],"sha":"aefb9f665652caa3387216dab76d2b82dd547451"},{"commit":{"message":"Dialect factory\n\nReviewed-by: mcimadamore"},"files":[],"sha":"51591b2b75d5627c35d0e53e0b540dbed922d8b4"},{"commit":{"message":"Rearrange ops\/types into dialects"},"files":[],"sha":"b5064081cf5822cf00dfa766a25d51de2a9a233a"},{"commit":{"message":"Merge"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransTypes.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"},{"filename":"src\/jdk.compiler\/share\/classes\/module-info.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"1a1aead7b37dddd5cecd1d9c33cbca4413da9f52"},{"commit":{"message":"Juan Fumero reported this issue on Linux\/OpenCL"},"files":[],"sha":"5bdc8fffc3c29f4fb41125375b641dd9670bc468"},{"commit":{"message":"Partial evaluator transform"},"files":[],"sha":"49f0d9bbc035be5b2f25f3ca9b380c7b2ac20812"},{"commit":{"message":"Post dominator functionality"},"files":[],"sha":"12d54e25de06ab56ce3bf4a19a3d66447d8e2aec"},{"commit":{"message":"Onnx fixes to support LLM + Onnx GenAI Runtime"},"files":[],"sha":"89562edce0c517cb067a65a6ee5e66246cbc53a1"},{"commit":{"message":"Enhance grammar of op attributes\n\nReviewed-by: psandoz"},"files":[],"sha":"66fd88ad919193d7cb5d706c1d306d9cae54b781"},{"commit":{"message":"Debug appropriate code element toString\n\nReviewed-by: mcimadamore"},"files":[],"sha":"d376169ffc65d17c83cedae8415a0d8be8f261e0"},{"commit":{"message":"Regularize parsing of refs\/types in op attributes"},"files":[],"sha":"44735d0d39e2c1141332bfa75d6b4ec822d58013"},{"commit":{"message":"add extern C and minize square output"},"files":[],"sha":"288b662861f8141d7e85104f409504ce158a0e7c"},{"commit":{"message":"Regularize support for Java types\/references\n\nReviewed-by: psandoz"},"files":[],"sha":"4278b5b437334a93cb266bee43c9c922e8fb2611"},{"commit":{"message":"Add rocm\/hip cmake rules -  hip backend work in progress"},"files":[],"sha":"75fdb9c3cc92df47ccf5acd36e9d5ecaa718b170"},{"commit":{"message":"Update JSON API"},"files":[],"sha":"2870cdd52f1aab1b0565d4caf48dfe82856a0c38"},{"commit":{"message":"Removed hardcoded nvcc path"},"files":[],"sha":"b958a30173082927d2ed5c7468955340a6fe35a0"},{"commit":{"message":"Lambda model uniqueness\n\nReviewed-by: psandoz"},"files":[],"sha":"6e062d51a7c4a05a4263def900d7fc7d9c9b9e0b"},{"commit":{"message":"Fixes required for maven\/cmake on ubuntu - note cuda ptx working, cud…"},"files":[],"sha":"04277c28eb71a92de0cc68d422ed5a3070ccef8a"},{"commit":{"message":"Onnx model and protobuf model improvements"},"files":[],"sha":"6c7ea6892cf8349de40ced435e3d7cf55850d0b0"},{"commit":{"message":"Method code model uniquness\n\nReviewed-by: psandoz, mcimadamore"},"files":[],"sha":"b6232637eca8a3a5fca317cf0f9c8402e8745146"},{"commit":{"message":"Build extern type element tree\n\nReviewed-by: mcimadamore"},"files":[],"sha":"28ff84b69187d3554f7a09c3b3e53eb2603bf90f"},{"commit":{"message":"Build ref attributes from externalized type elems\n\nReviewed-by: mcimadamore"},"files":[],"sha":"f1a6fa99fbd41c501e57e14746a47e00215cefb8"},{"commit":{"message":"Rename TypeVarRef to TypeVariableType\n\nReviewed-by: mcimadamore"},"files":[],"sha":"2b0d5a2d4f6185ea194a28211ae1520e614423de"},{"commit":{"message":"JavaRef extends TypeElement\n\nReviewed-by: mcimadamore"},"files":[],"sha":"de806577d30f4b792e231a94546d8fac2d4695ef"},{"commit":{"message":"Drop unused local variables from generated op method\n\nReviewed-by: psandoz"},"files":[],"sha":"4f3248ab8d843615190397efd178b4e709877cca"},{"commit":{"message":"Onnx proto model test"},"files":[],"sha":"f4c8a1cbc04dd3f01696239ffde37e466725c538"},{"commit":{"message":"merged changes needed to get opencl + opengl on linux to work"},"files":[],"sha":"9a2c92fa35f29b6cc44cb002bdc0fefbf184a2de"},{"commit":{"message":"Define JavaRef top-type for all Java refs"},"files":[],"sha":"d484e537cb41b737d54837fb23b8157abf2823e7"},{"commit":{"message":"Reduce number of local variables when transforming code model builder to AST\n\nReviewed-by: psandoz"},"files":[],"sha":"f41fa3934e2aa966cbd585777fc44d9bd63f026a"},{"commit":{"message":"OnnxProtoModel implementation"},"files":[],"sha":"93b4b32cb0c7c5288b6b76e0a2c71261a41a58ad"},{"commit":{"message":"Immutble ExternalizedOp.attributes"},"files":[],"sha":"d41b2ba42565b2adb7a02015a396e6f9417a9f57"},{"commit":{"message":"For bld.java added javac diagnostics to JavaResult"},"files":[],"sha":"65b8762b068469637e3c07f91533dabcdbef28c4"},{"commit":{"message":"Automatically detect which event helper to exclude in glwrap"},"files":[],"sha":"fa9fc2ff23ba65085f5ee745e173e50e7e16d483"},{"commit":{"message":"Cleanup bld.java and Script.java Reconstructed - from failed merge"},"files":[],"sha":"8e81823c80510c3e2bb9cb2589be0fe8ed810a18"},{"commit":{"message":"Add ConstructorRef\n\nReviewed-by: psandoz"},"files":[],"sha":"5238a40d11397b9896756a674158378223405388"},{"commit":{"message":"Merge"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransTypes.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/JavacProcessingEnvironment.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"9ca6a4243794b974562c43ed6072dc0575c418ba"},{"commit":{"message":"Hat more maven pom cleanup"},"files":[],"sha":"7807eff2c27b9fc7cba534a291439370566018cf"},{"commit":{"message":"Git use cmake jextract in maven"},"files":[],"sha":"0f39dd1cd1bd4fedeabd4d919beffde6e36f7d00"},{"commit":{"message":"Removal of OnnxType.Initializer type\n\nReviewed-by: psandoz"},"files":[],"sha":"ca5db64727bd2f35c269912e59dcef5a69209b57"},{"commit":{"message":"updated cuda build to use cmake extractions"},"files":[],"sha":"6e5284aa0ad5d192ce030c255a01f2a79ca83a45"},{"commit":{"message":"Hat separate jextract builds"},"files":[],"sha":"d6a24cf10c1ca82722cd6ade2a2db12ccf4c4419"},{"commit":{"message":"Support for Onnx functions"},"files":[],"sha":"ddad895d66529fdd297b7a02219f19c7e79238cf"},{"commit":{"message":"Improve resolution of types in `CodeModelToAST`"},"files":[],"sha":"1a28d3693feff089bb111c89a23d5b073dc95c1e"},{"commit":{"message":"Enabled MINIMIZE_COPIES for ffi-cuda backend"},"files":[],"sha":"6e2d099326d9cd524e94f9b18c1d801ff679462b"},{"commit":{"message":"Remove the code model transformation: addVarsWhenNecessary.\n\nReviewed-by: mcimadamore"},"files":[],"sha":"e093b1f6427aa9a6d23c28aaed7077ee142aa660"},{"commit":{"message":"Add return values to setArg kernel methods"},"files":[],"sha":"2c6582ef9686e015b15d06db8e98b368b16cdae0"},{"commit":{"message":"replaced common ffi-cuda code with ffi-shared"},"files":[],"sha":"314ecacf383c04809a87810929ac9bc038a9bca5"},{"commit":{"message":"Hat merge cuda opencl backend common code 1"},"files":[],"sha":"82ab10f4030406aa44d02eac800c3bd27a96237a"},{"commit":{"message":"Cleanup `CodeModelToAST` to use `Resolve`"},"files":[],"sha":"9cddb871638b7590033c0127f26e5e8ae41294a6"},{"commit":{"message":"Removed ptx backend"},"files":[],"sha":"cb41d87e86e96336b1b50867d825deaf82e4d5dc"},{"commit":{"message":"Moved PTX backend functionality to CUDA backend"},"files":[],"sha":"d8a082365bb65eed025a3c9518918369af454592"},{"commit":{"message":"removed jextracted opencl dependency on life example"},"files":[],"sha":"9dba3048c1ee6f1c107479a83fc8340153b97435"},{"commit":{"message":"switch all uses of runtime API cudaXXX for device API cuXXX - to trac…"},"files":[],"sha":"c96ce3b38593d27d3fe3ffbd116692cb15207b38"},{"commit":{"message":"Support storing the code that builds the code model\n\nReviewed-by: mcimadamore"},"files":[],"sha":"fbc7e37b3036e0e98edf3077227b3adea5ce466f"},{"commit":{"message":"Finally found and fixed cuda side CUstream bug"},"files":[],"sha":"e73510d8a2bf7ef23ef9dfc867088df0f6fad0cc"},{"commit":{"message":"Synchronizing all the ffi backend native code"},"files":[],"sha":"de4cceca27c1ca176064917e2f8f4d9911e9cc90"},{"commit":{"message":"Represents literals of type byte\/short as permitted in the Java language\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"fd9790233138b1a9d622440287fccd56cd7e9f1b"},{"commit":{"message":"Hat merge cuda ptx ffi backends"},"files":[],"sha":"225e2b7532722d51a0cb9ed01c7f2275d08a5260"},{"commit":{"message":"Onnx direct reflection over records as tuples"},"files":[],"sha":"bd0569ee1a32d3394a82bd36a29b67e7c2069b71"},{"commit":{"message":"Ensure this capture is noted for use in argument of JCNewClass"},"files":[],"sha":"db8897ab03367d11a8b220ace5565c11882bc7a9"},{"commit":{"message":"CUDA backend now compiles at least"},"files":[],"sha":"c32e51d143d276df30e5bfcc7bfe48ca40bd3de6"},{"commit":{"message":"Hat sync cuda"},"files":[],"sha":"0ac3b5b69e8b595d77af0a73e49fe446c7960bd7"},{"commit":{"message":"more prep for cuda refactor."},"files":[],"sha":"b9aecfe574551b26135c8f219eec0ab56d76a3f7"},{"commit":{"message":"IAE catch fix for recurrent inlining"},"files":[],"sha":"306fdaf5565ad719671fb3cb0910a6a5f89129cf"},{"commit":{"message":"Hat prep for cuda sync"},"files":[],"sha":"a50c838a89d18b3d6c0d5921896bd478fc83e405"},{"commit":{"message":"Onnx loop op work continuation + WalkTheMazeTest"},"files":[],"sha":"602d7b2a7ff3c049a700e8a5cdcbecc6ec51cd98"},{"commit":{"message":"Sync ONNX code gen"},"files":[],"sha":"d73e8ca5e631b9949b207ac67476dd5797f4ad6f"},{"commit":{"message":"Fixed nbody state init issue. Split out ffi-shared java code as separate module."},"files":[],"sha":"98c2a85de8871e1ab2632648736eaaab7971eaad"},{"commit":{"message":"Shape auto-dimension calculation from data size"},"files":[],"sha":"82e9f90562b8b40e52f0feb766bef3d9f9fcad84"},{"commit":{"message":"ExplicitOnnxOps.If implementation of captured values and initializers"},"files":[],"sha":"15fa02fc338e7746093ea253f513da393cfa3492"},{"commit":{"message":"Hat replace bitfield min bufffer with state machine"},"files":[],"sha":"9c42d66f66baac4b099d3107352daa5e43e2ea5d"},{"commit":{"message":"Rearrange the source for better display."},"files":[],"sha":"88441d85eedd7426829620dfd33587713d10a869"},{"commit":{"message":"updates demos for j1"},"files":[],"sha":"28179a6715279d475a5957a1b56cc6babc4e163f"},{"commit":{"message":"Hat fix min buffer state machine"},"files":[],"sha":"a26f48c6a1d67e48532a2671d7560641efb92432"},{"commit":{"message":"Finalize switch to using hat subdir insteaf of bldr subdir"},"files":[],"sha":"5856c8d39a19ce3e29fa3b8b140f827262b88ac6"},{"commit":{"message":"We are switching to use hat subdir (instead of bldr) for scripts"},"files":[],"sha":"a3bd45c570a94ee4dcd11fbe54d47f60b57a823d"},{"commit":{"message":"Revert ExplicitOnnxOps.If implementation of captured values and initializers"},"files":[],"sha":"150f09cddf365b0a0bef5244c507ebcf49b5a26d"},{"commit":{"message":"ExplicitOnnxOps.If implementation of captured values and initializers"},"files":[],"sha":"e1d4ad8030acdcd1082e059080d979eb7e8ffdb8"},{"commit":{"message":"Fixed bug selecting opencl device - really this time"},"files":[],"sha":"b65b7cebdc660ab7681647f19d4a9bdd2d6509eb"},{"commit":{"message":"Fixed bug selecting opencl device"},"files":[],"sha":"e4ebcbb9f26e09d250444aaf24908a9e5f8b823a"},{"commit":{"message":"We should be able to select platform\/device via env var"},"files":[],"sha":"f93580a0797179a39bc000f9ed56322e09d34185"},{"commit":{"message":"More lookup cleanup"},"files":[],"sha":"226b61b815dd25846a07c9d4a750c9045258993d"},{"commit":{"message":"Removed unneeded MethodHandles.lookup()"},"files":[],"sha":"db60cab9b9f6a58796a0c09c625f73a41e7d45c3"},{"commit":{"message":"Removed annotation references ValueBased and Stable and cleaned bld a…"},"files":[],"sha":"bc191fecebce29df7762f28b9b2b81c054ff6277"},{"commit":{"message":"fixup hatrun for life dependencies, allow nbody to default to HAT"},"files":[],"sha":"001f3573afb3ce423a78cf108f51175b808f0a1e"},{"commit":{"message":"Hat performance minimize buffer copy tweaking"},"files":[],"sha":"73274d571642db29c42e2e4cc97f995b010b8f10"},{"commit":{"message":"Hat UI updates and iml fixes"},"files":[],"sha":"05ae51c33e0f6bf9423ed2e88c0fe64494b80366"},{"commit":{"message":"Use debug system property"},"files":[],"sha":"85fafbcea7de015a057abb9a2091ebddb043b08a"},{"commit":{"message":"Initializers through arguments"},"files":[],"sha":"683c318aa6354670167b6c1ec23def7c5b1897c7"},{"commit":{"message":"synced up maven and bld artifact names"},"files":[],"sha":"2224a53da6ba9a65db4fb268a58f8ba25536aedd"},{"commit":{"message":"Updated UIs for heal and violajones to use seven seg display widget"},"files":[],"sha":"c5ba520f76ef6c8124df80c970b585a7c06b1090"},{"commit":{"message":"Hat implement buffer minimization"},"files":[],"sha":"08c3b3b2b1d5a298eb238a07d83cf1bfad9b4bca"},{"commit":{"message":"Hat cleanup extracted examples"},"files":[],"sha":"15aa7b2dc71b85b39cbb5a32d598a76fc63752bd"},{"commit":{"message":"Explicit Arena passing to Tensor construction and Session execution"},"files":[],"sha":"72a9d699761e524a2bf83551612b6d5e7ed6edbe"},{"commit":{"message":"Hat sync jextract and hat nbody and life demos"},"files":[],"sha":"17b1bcd964959bb7dcf6c3dd1eba2863103adde0"},{"commit":{"message":"Tweak order of arena parameter in OnnxRuntime::execute"},"files":[],"sha":"78a993ca32681cd454370b653a0ae8028478d3ce"},{"commit":{"message":"Model lifetimes of onnx session-related objects more explicitly\n\nReviewed-by: asotona"},"files":[],"sha":"0380011c784d9b40fe9c5de08109cc753f0cad90"},{"commit":{"message":"MNISTDemo split\n\nReviewed-by: psandoz"},"files":[],"sha":"630b8c9585fe8765c188fe163fdf13c3abfe0ac6"},{"commit":{"message":"Adjusted tests to use execution of a method and implementation of the execution model cache\n\nReviewed-by: psandoz"},"files":[],"sha":"74b146592cadeb25ce0b7ea151e405999b2205cf"},{"commit":{"message":"Short cut for single method execution\n\nReviewed-by: asotona, mcimadamore"},"files":[],"sha":"cd265d2704e43faae95b70a03d698d4941792ea2"},{"commit":{"message":"Onnx subgraphs, lambda execution and BB removal"},"files":[],"sha":"80934b2bd934523dd129fda6b38029a8956f8d51"},{"commit":{"message":"MNISTDemo UI tweak\n\nReviewed-by: psandoz"},"files":[],"sha":"5a30fac048d76298c2a5cb5184c960d533fceee0"},{"commit":{"message":"Split OnnxRuntime into high-level and low-level generated code"},"files":[],"sha":"4752b37cb924f18dfe0c8d4b7e5553a06eac44dd"},{"commit":{"message":"OnnxProtoBuilder simplifications"},"files":[],"sha":"22a2404c7900641ea45a147a0ededa5c3cab20e0"},{"commit":{"message":"Hat testing buffer marking 1"},"files":[],"sha":"576b09a901e5d201ef9bdec0518918ee4b16f6ff"},{"commit":{"message":"Make downcall method handles for ORT API functions static\n\nReviewed-by: asotona"},"files":[],"sha":"90be85293126f550c8672adc706ff58d0c6309d3"},{"commit":{"message":"OnnxRuntime and OnnxProtoBuilder continuation"},"files":[],"sha":"416c84bb4053314584252cb6bfa9e30f882a9f75"},{"commit":{"message":"Hat ongoing buffer marking"},"files":[],"sha":"993398392c121aaf278d6d035ebf86532381d6d3"},{"commit":{"message":"MNISTDemo fix"},"files":[],"sha":"6523c4fd137b9b3cde1f6ae4ff612d7e22e6ea73"},{"commit":{"message":"OnnxRuntime and OnnxProtoBuilder continuation"},"files":[],"sha":"8b6b07fbe5bd5874ec4a6ab58026bc697924b75e"},{"commit":{"message":"Hat mark buffers 1"},"files":[],"sha":"14b3744ae151968fef69688f444c6e0fd47542d4"},{"commit":{"message":"Hat mark buffers"},"files":[],"sha":"ca6bbc211795bee5d87b08a514d4f8457c0af714"},{"commit":{"message":"ONNX FFM Runtime initial work"},"files":[],"sha":"1f9416b75e82f69ae3361adb59b72b90a1f5b455"},{"commit":{"message":"Remove redundant type variables"},"files":[],"sha":"7ce041b3ca8e95cbc195bd5c2adc4157a8a932c8"},{"commit":{"message":"Hat jextracted backend infra"},"files":[],"sha":"8cde02f9cea452e750fd783cdd71f9c85e60388b"},{"commit":{"message":"Updating the ONNX CNNTest\n\nReviewed-by: psandoz"},"files":[],"sha":"adbb7a819c52121da58754ba222015422c7a38b5"},{"commit":{"message":"Added inversion of control pattern so capabilities can coordinate with jextract"},"files":[],"sha":"432d13ebb69d7cb4e170caa70b49ac33fddc85a9"},{"commit":{"message":"Hat cleanup jextraction"},"files":[],"sha":"c2fc40f7fab420f1775e9d5b4772ae90e68f4f68"},{"commit":{"message":"Ensure array attributes are serialized correctly"},"files":[],"sha":"8026db04318deda1272431bd47ff333c4af16e5c"},{"commit":{"message":"Cleanup of HAT env.bash, bld and hatrun scripts"},"files":[],"sha":"1a6ea35817fb72cd113c216c10efe2b2e151b7a4"},{"commit":{"message":"Very basic ONNX transformer"},"files":[],"sha":"408e7b56db440349a7d11871a84a91a372b75f8f"},{"commit":{"message":"Onnx"},"files":[],"sha":"3b87457432d4cfb147960c2edb2eabd25e50f6f1"},{"commit":{"message":"Use Op.ofQuoted"},"files":[],"sha":"ee3da0368addc0439d7d2bee8e18ec975a535d6b"},{"commit":{"message":"Make Quotable a marker interface\n\nReviewed-by: psandoz"},"files":[],"sha":"82e0e551b6d8db1ccef7c00f52f7fdc786400962"},{"commit":{"message":"Re organized code builder hierarchy"},"files":[],"sha":"fec8903d84878a5c2683071db5b58b4c97727932"},{"commit":{"message":"Replace opField with opMethod for lambdas.\n\nReviewed-by: mcimadamore, psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaMetafactory.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"}],"sha":"dc56e5678fccf2f33f3013988459e1b6d1e5eb85"},{"commit":{"message":"Replace opField with opMethod for identified methods\n\nReviewed-by: mcimadamore"},"files":[],"sha":"53ac6b50554909b9943b39947f28c36f001b05d4"},{"commit":{"message":"Fix typos\n\nReviewed-by: psandoz"},"files":[],"sha":"da874e855a8e28d3327d13b42ce529a8c662d464"},{"commit":{"message":"Hat bld and dir changes in prep for separating native ffi and jextracted backends"},"files":[],"sha":"490332b12e479d8a0c164cb32dab1def982d8fce"},{"commit":{"message":"Integrate Java Triton example with Intel Triton Backend\n\nReviewed-by: psandoz"},"files":[],"sha":"c0c70a431bd35542bbef8ba94b0c419a4371f441"},{"commit":{"message":"Revert change"},"files":[],"sha":"79cd5cf3388d6ca86f7d3c968b47b19a11e71ebe"},{"commit":{"message":"Support bytecode generation for invocation of varArg method\n\nReviewed-by: psandoz"},"files":[],"sha":"b99e27117419db460ec6831c142d8a1146ca9aec"},{"commit":{"message":"Removed hard coded jextract path"},"files":[],"sha":"2d6b5763e4bdcec7bf12760071198b0322479195"},{"commit":{"message":"Add platform capability checks to bld and mkpoms"},"files":[],"sha":"8abfd95442f999a60dc960fb164c69107ae84644"},{"commit":{"message":"Hat add jextract to maven"},"files":[],"sha":"5deaf0fd58d7ad0975c508e2164c9057817c77d8"},{"commit":{"message":"Added hat nbody opengl example"},"files":[],"sha":"d63c0f764e7b5bb5e6b33e4ed9c9f4ed3e0479e8"},{"commit":{"message":"Added hatless nbody example"},"files":[],"sha":"ee2789e1ed0aabf629ddd75e5424bd5346ce3f4a"},{"commit":{"message":"More jextract prep"},"files":[],"sha":"e40d8a3e1144592ee784136f67cf75f18df30b89"},{"commit":{"message":"More bld simplifications.  Prep for adding jextract"},"files":[],"sha":"ae52afec058d23f115a61d414ae45691d0cc49ee"},{"commit":{"message":"mkpoms cleanup + .gitignore target dirs"},"files":[],"sha":"54f1b9279a326e3344e3fc4f5bff22b7a855312b"},{"commit":{"message":"Added mkpoms script - updated bldr\/XMLNode"},"files":[],"sha":"2f2d7d6c68b8b105a34db02938fea0d0707a1b9f"},{"commit":{"message":"Some build fixups after merging hip backend"},"files":[],"sha":"52eba9dd968e0bc0aa374cfebae393ce34f1c066"},{"commit":{"message":"HIP HAT backend"},"files":[],"sha":"95445c8dae988843aee678fbec358cfe3664caf5"},{"commit":{"message":"using auto generated poms also a fix for CustomOpTest"},"files":[],"sha":"0101fa45570850a5991bf18943ad07b295f28dfb"},{"commit":{"message":"Simplify pom.xml and maven build doc"},"files":[],"sha":"9afe3b74500b44a915687a19dbcea4f86f00b31e"},{"commit":{"message":"bld\/hatrun fixes after PR 278"},"files":[],"sha":"b185abaf7a677dd5e42d1ef531e2d74badf7fed1"},{"commit":{"message":"Regression: compiler SPI does not work with exploded build"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"}],"sha":"f266110ce1394c2a98cfe5aa01bb37a2d21a0bef"},{"commit":{"message":"Fixed race condition in C99HatKernelBuilder.java and cleaned build"},"files":[],"sha":"ec24b9bd771db1bda445b2ce2196d62cadcc591a"},{"commit":{"message":"Turn compiler plugin into simple SPI\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/module-info.java"}],"sha":"152f4678c2ec50d5bbff04d76be7b007676b39e7"},{"commit":{"message":"Move code reflection API into incubating module\n\nReviewed-by: psandoz, asotona"},"files":[{"filename":"make\/conf\/docs-modules.conf"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/JavacProcessingEnvironment.java"},{"filename":"src\/jdk.compiler\/share\/classes\/module-info.java"}],"sha":"18627a637362a70a72d16b5cbe52d07ddb55c6f9"},{"commit":{"message":"Aggregated work on Verifier and BytecodeLift deconstruction\n\nReviewed-by: psandoz"},"files":[],"sha":"86dfc369acd6d140a9a8dc6ba05a3664cf8eb8ea"},{"commit":{"message":"Simplify Interpreter invocation\n\nReviewed-by: mcimadamore"},"files":[],"sha":"a40e0f2aabcc90e34f9a2672adc2a369b4ec4415"},{"commit":{"message":"Support conversions of primitives in testing context\n\nReviewed-by: psandoz"},"files":[],"sha":"1d23cebd9369b0941604c258c5078c00776e8a93"},{"commit":{"message":"Simplified bld script and added stricter file types"},"files":[],"sha":"fa4dd44395e6093c5ca5b5676c9f6381e5d2833d"},{"commit":{"message":"restoring older versions of CoreOp and Interpreter"},"files":[],"sha":"13b180f6b69a19f9452027766542e29a03dd5f2e"},{"commit":{"message":"ANF Experimental Code Model\n\nReviewed-by: psandoz"},"files":[],"sha":"1fb552a7012cc0010bee266b17b3e79c1dfb88ca"},{"commit":{"message":"Experiment: Alternative SSA construction algorithm\n\nReviewed-by: psandoz"},"files":[],"sha":"a9fbdee81066fd5f840afd537005e04e44ceedef"},{"commit":{"message":"Dont use hashbang for launcher scripts"},"files":[],"sha":"f69e732433c903febc2ef647c5459139130b9acc"},{"commit":{"message":"Fixed env.bash issue found on Linux (Mac ok?)"},"files":[],"sha":"cb52322017ca649c25c40b27dd9478419521f8f3"},{"commit":{"message":"bld script and bldr tools cleanup"},"files":[],"sha":"94b5149779bed3715885955a9d9677f9e9d97d21"},{"commit":{"message":"Uninitialized variables\n\nReviewed-by: mcimadamore"},"files":[],"sha":"ef63c12b3672484ede88b817ddd256eb1b075875"},{"commit":{"message":"Unreachable switch expression block\n\nReviewed-by: mcimadamore"},"files":[],"sha":"24149a258ca341f427e9782bf6210581be8a3a6d"},{"commit":{"message":"Bld fixes needed for cuda linux"},"files":[],"sha":"5dc41266fc04fd9ebf084a190d451a5c122f69b4"},{"commit":{"message":"Add env.bash error tracking and update build scripts and docs"},"files":[],"sha":"6d70f2cc564df3a54e6a1b27e4a2780be93b00f6"},{"commit":{"message":"8337162: Support primitives in patterns\n\nReviewed-by: psandoz"},"files":[],"sha":"853cb64b501b64c78e13526182b9b8578f2b077f"},{"commit":{"message":"Simplified maven copy to build dir"},"files":[],"sha":"b5ef3448d0a9847fe47ab84f64e335629ea8a316"},{"commit":{"message":"Exception regions patch\n\nReviewed-by: psandoz"},"files":[],"sha":"f928e7be46d569b2567015002ff1abd2b6fa7f7d"},{"commit":{"message":"Unreachable method or lambda exit\n\nReviewed-by: mcimadamore"},"files":[],"sha":"d04447d4b0aa9cb0eca60a6758f6e38edcaa77a4"},{"commit":{"message":"Added OpWrapper for CoreOp.NegOp (needed for blackscholes)"},"files":[],"sha":"f4a8b2d9e00ea5fe0e598727b142bfd9888430fd"},{"commit":{"message":"Bldr provides access to jextract"},"files":[],"sha":"09bd0bbc38441646d5e74d97669a57e5b4349e3a"},{"commit":{"message":"Ensure exception region exits are generated\n\nReviewed-by: mcimadamore, asotona"},"files":[],"sha":"de2faf947c3bb32ea4417352317e836738055dbc"},{"commit":{"message":"Cleanup cmake handoff from maven and from bldr"},"files":[],"sha":"c750ca89ffc2c96f1202ee9787393890df8be3f2"},{"commit":{"message":"Captured constants in variables\n\nReviewed-by: mcimadamore"},"files":[],"sha":"9343454b24770d13b5a1cbfd7b08fcc2be14c7d5"},{"commit":{"message":"Simplify code generation for quotable lambdas not to require duplicate capture argument lists\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransTypes.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"}],"sha":"8a8e5b2f52810a4b547c334423a441d4227c1855"},{"commit":{"message":"8337161: Support record pattern for generic records\n\nReviewed-by: psandoz, mcimadamore"},"files":[],"sha":"cfffc996fcc25f61f376c3d41a7774e59557bea5"},{"commit":{"message":"Merge"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransTypes.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"d2f88a702f531de6fd950181d2736cf5dba753d0"},{"commit":{"message":"BytecodeLift with NormalizerBlockTransformer + fix + ExceptionTableCompactor\n\nReviewed-by: psandoz"},"files":[],"sha":"9ec0798c43fb8132e815c4fe34069efdce7f8fd9"},{"commit":{"message":"add a pure java (no maven) build option"},"files":[],"sha":"e02b5d423da7596625600dd39d3ab200e26d407d"},{"commit":{"message":"Working on spirv integration, need to exclude from intellij imls temp…"},"files":[],"sha":"2bb9f2adb438c9d159fb3034c31fec408498ae00"},{"commit":{"message":"Fix method resolution on invoke op wrapper"},"files":[],"sha":"fb4592aa8a69d77ef5eadf44ad33083447ccd665"},{"commit":{"message":"Normalize blocks transformer"},"files":[],"sha":"e7b1d158fc2b6279cddf27f88707d556c72bb764"},{"commit":{"message":"Address var name\n\nReviewed-by: psandoz"},"files":[],"sha":"971b90fa70eaa31810d3658f2f689c2b1ea4c4be"},{"commit":{"message":"Fix failing cases in SwitchStatementTest\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"7746e41b9fc35a3765ec2e662e8d87cf68edd5a1"},{"commit":{"message":"Initial prep for swapping callgraphs for Op.Module"},"files":[],"sha":"fd4e17293e37b9624379e2cb2347ddb19722aa2b"},{"commit":{"message":"Invocation to vararg methods"},"files":[],"sha":"bb48552fc3166ff941fdeaa2c4f26a52b2ea81f3"},{"commit":{"message":"Implementation of a HAT Spirv backend\n\nReviewed-by: gfrost"},"files":[],"sha":"85f14e140ef3111f072c8051d9b26734c94c2496"},{"commit":{"message":"Support match all pattern\n\nReviewed-by: psandoz"},"files":[],"sha":"733ebe964db3506caf18d052a5abfaa38dd83304"},{"commit":{"message":"Update the model of pattern matching when pattern variable identifier is underscore\n\nReviewed-by: psandoz"},"files":[],"sha":"a23e320c96052552a201f65dd3e788e00a23db0a"},{"commit":{"message":"Bytecode cleanup, renames and javadoc\n\nReviewed-by: psandoz"},"files":[],"sha":"c6c071adf2053f5b346938d9364cf17caf309bfd"},{"commit":{"message":"Include boolean in primitive type conversions.\n\nReviewed-by: psandoz"},"files":[],"sha":"5b015c89c8995bd349bf0af9c13a165782884dbd"},{"commit":{"message":"Updated babylon and hat build docs"},"files":[],"sha":"cf3e9c9a79ffe4f39bc3ca9d23d912cecad1f803"},{"commit":{"message":"Hat fixes to support chess"},"files":[],"sha":"5265d256c675a6876e3362ea4a316955dba3fa15"},{"commit":{"message":"Bytecode locals compaction\n\nReviewed-by: psandoz"},"files":[],"sha":"15e8b6e48a1c799f420583d69988e822fb047164"},{"commit":{"message":"Avoid boxing when concatenating a string with a primitive\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"5ffaf946c249a74f253b64df77250cad86c66075"},{"commit":{"message":"Unify common code of SwitchStatementOp and SwitchExpressionOp\n\nReviewed-by: psandoz"},"files":[],"sha":"b8657f4c0e408743b749b8e2c2c40e1129f5fc7b"},{"commit":{"message":"Change the model of the default label of switch\n\nReviewed-by: psandoz"},"files":[],"sha":"b836dba369084c7458d8f4fcb37e07982b15c666"},{"commit":{"message":"Super expressions\n\nReviewed-by: mcimadamore"},"files":[],"sha":"4603f6d574edea0999f55bf8d501ff16583721e1"},{"commit":{"message":"Unify code that generates code model of switch statement and expression\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"962d313c85e16d62b1d69a70490e6d7611017a95"},{"commit":{"message":"Bytecode round 12\n\nReviewed-by: psandoz"},"files":[],"sha":"445a57f874c91e342fbc644a36d97861d56a49db"},{"commit":{"message":"BytecodeLift directly calculating local variables + related BytecodeGenerator fixes\n\nReviewed-by: psandoz"},"files":[],"sha":"207ca5e15964aa9dced66cb81c911c59527d6d8b"},{"commit":{"message":"Model synchronized statements\n\nReviewed-by: mcimadamore"},"files":[],"sha":"345cfa0979c382f3e250880e567a5acba285b907"},{"commit":{"message":"8337158: Modeling and lowering of switch statement\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"8042d934b925d3767b746e57944b99b25c92c47e"},{"commit":{"message":"Bytecode round 10\n\nReviewed-by: psandoz"},"files":[],"sha":"15d8b3b3b64d84134c389dae2e1026261688d511"},{"commit":{"message":"Bitwise complement op\n\nReviewed-by: mcimadamore"},"files":[],"sha":"6f5f211932c3b65d988c6213af5dd000ec150833"},{"commit":{"message":"8337156: Generate code model for switch expression that throws when no label applies\n\nReviewed-by: psandoz"},"files":[],"sha":"00d8b6f0c6e2f630887e620061f916a13be1ae73"},{"commit":{"message":"Unary plus\n\nReviewed-by: mcimadamore"},"files":[],"sha":"a566edf2bceb3ffcabbc3232cc9b8a2248c5a4cc"},{"commit":{"message":"Bytecode round 9\n\nReviewed-by: psandoz"},"files":[],"sha":"bf2ee69c0e14d78b207c51cf96aaaf95a7d7aa83"},{"commit":{"message":"Implementing Black Scholes HAT Example"},"files":[],"sha":"3e6e6d455510778d1322bf744e86945a82375e52"},{"commit":{"message":"8337155: Support expressions returning boxed booleans for the condition blocks of if\/do\/while\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"953de8f8c79ba27f445a4895f063480d495f54e3"},{"commit":{"message":"8337157: Second operand to array.load should be an int\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"4321c34217ce479c52facfc47bf67f58af336ba9"},{"commit":{"message":"Heal and Life Viewers were similar, now they are more so."},"files":[],"sha":"d8033778178d01aad38f3b25e61dc4ed7e03a302"},{"commit":{"message":"Changed image to match JVMLS deck"},"files":[],"sha":"b895d8cc263d83fcaac7593b403bc8c51b95f26b"},{"commit":{"message":"Added menu bar to heal.  To report timing"},"files":[],"sha":"df11b23ac6aba76655efb0de62325886294e1fa3"},{"commit":{"message":"Align code with JVMLS slides"},"files":[],"sha":"6f0b81fe8ec42729667062eff16af9734d069541"},{"commit":{"message":"Test Switch Expression lowering when case is pattern"},"files":[],"sha":"69ad1794f391bf84b936c06e430b1510f9929fd1"},{"commit":{"message":"Test Switch Expression lowering when case is constant\n\nReviewed-by: mcimadamore"},"files":[],"sha":"b4e13d5ca5d5936e2add439b0dfbf06d0f44d472"},{"commit":{"message":"Hat cleanup heal example"},"files":[],"sha":"2ebde563390c0bd786da30c693e05a40014ef6ac"},{"commit":{"message":"Pom fixes for life and heal examples"},"files":[],"sha":"0b38abc5e5674d212a0f7c0f767b4bddd35c1765"},{"commit":{"message":"Simplified hatrun.bash. All examples now <package>.Main"},"files":[],"sha":"cd2b955a948ce4e4e167f67bd7817c6cfa4c2a91"},{"commit":{"message":"Simplified injection of Pre\/Post calls Mutate,Access and Escape"},"files":[],"sha":"c5753295c1bd9de3c5c16e6004fc8063655136ef"},{"commit":{"message":"Convey dirty java buffer status to native code"},"files":[],"sha":"82cec67784e004ec326ac45c58cd9102902a8f4f"},{"commit":{"message":"Hat initial attempt minimize copies"},"files":[],"sha":"3365ad3d9ee6e6fb7c5221758ff1cb9a969d6c65"},{"commit":{"message":"Improve sanity checking"},"files":[],"sha":"254e9cbab8a15e53d4e8baf0d243f78c8c5d6de4"},{"commit":{"message":"Now longer allow cmake builds from hat root dir"},"files":[],"sha":"01a60eebf715e844cb7819f4d3fca87ce64b1923"},{"commit":{"message":"Some files had missing license headers"},"files":[],"sha":"f33330e511ebd986b47144d8de105b98a3afa04a"},{"commit":{"message":"Create a new example for BlackScholes. Reintroduce Heal and Life examples"},"files":[],"sha":"982090bfce228b812af1d96839e4ad4699189a87"},{"commit":{"message":"BoundSchema was walking through the tree. Now we just walk the BoundArray fields"},"files":[],"sha":"f49ef18a654ad519fbb50990eb638d7d777f82fa"},{"commit":{"message":"PTX backend implementation for HAT"},"files":[],"sha":"a128f1556017a7d6878e5965a4f856327d8cb504"},{"commit":{"message":"Hat more schema optimizations"},"files":[],"sha":"af2f7e4716edc5e3ac30cf2c4bfdea69ab5a4cb1"},{"commit":{"message":"Only allow allocation via accelerator, and simplify schema binding"},"files":[],"sha":"ea54c78d9f120a80fe9220d4bb63856f1efcded1"},{"commit":{"message":"Bytecode round 8\n\nReviewed-by: psandoz"},"files":[],"sha":"0bc3ed9467e25875ce9d9201ce1e1fd5d499a5bc"},{"commit":{"message":"Immediate dominator map should be unmodifiable"},"files":[],"sha":"1fd7ffa92ea85938ac6720b462030d52a0a72698"},{"commit":{"message":"SSA transform with capturing lambdas"},"files":[],"sha":"e7557a9d2ea5e0d0b8768483e1bf31ed47598c4a"},{"commit":{"message":"Correct bytecode gen for lambda capture"},"files":[],"sha":"fcec59aaa61e4e6c4f860fc01f1a9108b0d884bd"},{"commit":{"message":"Implementing Healing brush demo, highlighted some missing unary(and binary<<,>> operators)"},"files":[],"sha":"c9141a28fb77a31e00f98a8d25caf00f51136ab8"},{"commit":{"message":"We previously disalowed all field accesses. Static final primitives are safe"},"files":[],"sha":"f1d5883363c9c216c5ed14bb565e39ee6a4fb782"},{"commit":{"message":"Hat fix c99 handling of byte"},"files":[],"sha":"88e9692c42a4d9bf32f599da7c5e8cf39fc2fb4b"},{"commit":{"message":"Fix modeling if statements"},"files":[],"sha":"d661d21778297f71401dd4da081f53ad1651c6a1"},{"commit":{"message":"Migrating HatPtr to use schema"},"files":[],"sha":"60c2ead4e416c8eeef61b15a8cd2ca7c370bc607"},{"commit":{"message":"Accidently checked in my local pom.xml"},"files":[],"sha":"484d34558d5dc5139c37290083ebc51b4d552537"},{"commit":{"message":"Hat schema cleanup"},"files":[],"sha":"bf3e16ef9d7cd50d91d9c229121c6b80c41ff610"},{"commit":{"message":"Moved BoundSchema to its own interface"},"files":[],"sha":"b19c90fee07e8ca79e70fd030865df3e2e624693"},{"commit":{"message":"Binding Schame to iface mappinsg an switched C99 codegen to use Schema for Typedefs"},"files":[],"sha":"660272d4e01992fa31e5c15c46ab182f30490853"},{"commit":{"message":"KernelContext now using schema"},"files":[],"sha":"01707825f3b0631595a4caa4373503b17ff7dac1"},{"commit":{"message":"ArgBuffer now using schema"},"files":[],"sha":"3e1dcfcff884c0f7704f2313587787e0e5b20f0b"},{"commit":{"message":"Reuse some iface mapper types in Schema and remove unused methods"},"files":[],"sha":"0fd48c1c2ea58459eacaecfc44c5ff4cd6d15c4e"},{"commit":{"message":"All examples now using schema"},"files":[],"sha":"91d914119ec5ff561b11214ca4ceac5bfa0325d6"},{"commit":{"message":"Hat move schema to ifacemapper and switch ViolaJones  buffers to used schema"},"files":[],"sha":"e662a3979580436131a8847a212168f0e40e6829"},{"commit":{"message":"Rationalised HatPtr and Types.  Moved from experiments to hat"},"files":[],"sha":"34f38e8de15308f0dcd746138b3db63cae1d23a7"},{"commit":{"message":"Bytecode round 7\n\nReviewed-by: psandoz"},"files":[],"sha":"5254500bf4961c23630d42bb2227eb4ab39b6342"},{"commit":{"message":"Another step towards lowering Ptrs through SSA"},"files":[],"sha":"d5720869923658615518856890f5f591fa3dda22"},{"commit":{"message":"Simplifying InvokePtr example"},"files":[],"sha":"9c677be9adb763972854d4aa0a27ce4b5efdaee7"},{"commit":{"message":"Allow mandel example to run without UI"},"files":[],"sha":"031393bb71d56e54c5c69984bb746c12e8bda504"},{"commit":{"message":"Concat Transform Optimizations\n\nReviewed-by: psandoz"},"files":[],"sha":"58da5b1ec2b522895599d10c3059944731e6ab74"},{"commit":{"message":"Conflicting code reflection fields for method overrides\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"6de1fc6187073be4908e6e61e9ac129e27f17091"},{"commit":{"message":"Conversion of java.lang.invoke to Class-File API\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaMetafactory.java"}],"sha":"abc426e9532ef0269cbf83353690730650021daa"},{"commit":{"message":"Simplify creation of BoundSchema from Schema"},"files":[],"sha":"2a2aac757c282f49f533e7a4c1f17d3f981988a8"},{"commit":{"message":"Hat doc markdown cleanup and ptr schema experiments"},"files":[],"sha":"5a333aca45156bf4417b1114cc0e7a55ea467ac4"},{"commit":{"message":"Bump version check in sanity.java to 24"},"files":[],"sha":"ea5c66d2549edfed9641ab81f26c2d90512126ff"},{"commit":{"message":"Allow us to bind arbitary data to iface mapping."},"files":[],"sha":"2a800c81159c9ab1a2ee44cef0efea05fb26073e"},{"commit":{"message":"Fix JavaDoc typos"},"files":[],"sha":"2122b0946a08f5fe96eaf90e278751ecb3504efc"},{"commit":{"message":"Merge"},"files":[{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"76cceb2a1e679d9dea132a01c32ce9f29c03ed59"},{"commit":{"message":"Apologies - I checked in broken Result and Scale tables"},"files":[],"sha":"527687f46a9f50f716773adf8936cadc156d4ef0"},{"commit":{"message":"Hat move schema into hat"},"files":[],"sha":"fe30d6905a548423b2a3e587e70f47548b1d4cfa"},{"commit":{"message":"Schema builder seems to recreate simple layouts, close with Cascade"},"files":[],"sha":"428804fcc1fc5c61a40ccc11583d8096602b2afd"},{"commit":{"message":"HAT more experiments replacing layout with schema"},"files":[],"sha":"80ecea6b4147fccefcc1794751e18ba5dd18fe81"},{"commit":{"message":"Report no attribute present when extracting attribute value from externalized op"},"files":[],"sha":"260ce26ce3f09213f185d1637cb6f546ddbbd3e7"},{"commit":{"message":"Experiments - considering replacing Layout with Schema"},"files":[],"sha":"739ecc84067e1e13ab598ad1b908de13685834e3"},{"commit":{"message":"Computes the VarOp's result type from its operand type, if not overridden"},"files":[],"sha":"fbe81534cebee2b10011b305b34bc0b2509ade1b"},{"commit":{"message":"Experimenting using Schema to hide layouts and interface with ptrs"},"files":[],"sha":"cefd28f3e04bdfd1e8b097fd0ca762eb1a2dedb2"},{"commit":{"message":"More HatOp.Ptr experiments"},"files":[],"sha":"5eee96430653456943d1035a8aa134f1900dc905"},{"commit":{"message":"Hat ptr op and type experiments"},"files":[],"sha":"eb6a3210b105b7e815d474bd5c57a3788ba255da"},{"commit":{"message":"Some HAT cleanups"},"files":[],"sha":"151840bf8b8ff34482c4bd8316204bac5f67d676"},{"commit":{"message":"Fixup babylon location property and remove spirv backend from default"},"files":[],"sha":"3a33038ff06f37a7c72b6b2e716d0f3b648e0d9e"},{"commit":{"message":"Switching to maven build"},"files":[],"sha":"a70d3e942f3109278ef8c4ae5abf19d552e9395a"},{"commit":{"message":"Removed heal and view examples - will return when working"},"files":[],"sha":"f21fef0fcefd8f5d78a35ade6c71780bfbf130a1"},{"commit":{"message":"Cloned CUDA backend native code to PTX backend"},"files":[],"sha":"f13945dc5192e617397b3a3b935e8b775494eb26"},{"commit":{"message":"ComputeContext can now implement BufferAllocator"},"files":[],"sha":"8dd9d6389c5b67e23ac5d128df6970a62f11af9e"},{"commit":{"message":"Decouple iface segment mapper allocation from Acclerator"},"files":[],"sha":"9ebc8afcf5ff971b4de215bd64714588a97537d4"},{"commit":{"message":"Allow static access to layouts of iface mapped segments"},"files":[],"sha":"d100b1e674227a7ed262d0ef42eb23c174fd282f"},{"commit":{"message":"Adding intellij test infrastructure and seeding with code from exampl…"},"files":[],"sha":"67f8e13c7448e9e4d836ac35ee6f6c3ba74fc57c"},{"commit":{"message":"Committing a Concatenation transformation to StringBuilder\n\nReviewed-by: psandoz"},"files":[],"sha":"9c68e18a373840faaadbe9360ccf2cf3884b7c03"},{"commit":{"message":"SPIRV backend needs extra dependencies make it optional"},"files":[],"sha":"df0c75660dfdddcb196028792ddfe3f2f4663c40"},{"commit":{"message":"Add relative paths to spirv iml fileso we can build with intellij"},"files":[],"sha":"d8fe2aad2e958ef03ae2e8352e4d48426ddb38d4"},{"commit":{"message":"Documenting SPIRV dependencies"},"files":[],"sha":"060641237cc19d8a6efd7d4bc9d5c7106def9377"},{"commit":{"message":"Remove need for manual initial creation of backends\/cmake-debug-build"},"files":[],"sha":"bcb21cf760cb4e658bec993a25ee40dea82043b1"},{"commit":{"message":"Allow FuncOpWrapper to wrap SSA lowered funcOps"},"files":[],"sha":"e1f4da33be6a37bd1b018a5bc0aa5530f499a085"},{"commit":{"message":"updates README.md to include fix for backend cmake"},"files":[],"sha":"4c82341905c535b7417940a91eb64f61b3396a67"},{"commit":{"message":"Switch to using maven as primary build"},"files":[],"sha":"75a7a0bf188ab215315b95a76c2203c04312fc46"},{"commit":{"message":"Example code for article"},"files":[],"sha":"e052f93df840b4b455d4a99ede3346f888b4a6ab"},{"commit":{"message":"Discovered some properties are inherited in maven"},"files":[],"sha":"8f666411820c2bef1f5c356e7f1e8dd0165b37ad"},{"commit":{"message":"Experiments with HatPtrOp"},"files":[],"sha":"7c1c89496eea90bf84121bbcf812e3bec6c24768"},{"commit":{"message":"Experiments with HatPtrOp"},"files":[],"sha":"4dd67819b05d7304b51d2f6ffab8b2a1f8f51c1c"},{"commit":{"message":"Allow schema decoding from native code"},"files":[],"sha":"7ac4bff218090ac4cc0d7aec965294baa8ecbf7c"},{"commit":{"message":"Introduced cuda error with last push.  This fixes it"},"files":[],"sha":"1dd9f8b663333b9c5de4090aa373daea0e5640c7"},{"commit":{"message":"Fixed up schema parsing from the backend.  Mostly for debug"},"files":[],"sha":"4bb3facec7492be87f0ef751d12ea01229d47a31"},{"commit":{"message":"Mavenized backend building"},"files":[],"sha":"e7ada25d4c01c76461bf5cd73b928138050f11f8"},{"commit":{"message":"Mavenize the repo. Mostly file moves to maven layout form"},"files":[],"sha":"5033e60403b81299346bb6763a22881974fbf8e2"},{"commit":{"message":"Found the violajones off by one error"},"files":[],"sha":"b32d7186e285b5a1c5b28ff6d96af007fef49c69"},{"commit":{"message":"Use more generic location for nvcc"},"files":[],"sha":"4cdff2b081032d05ac34c1b4757078a4b2a3bc4f"},{"commit":{"message":"Fix cuda cmake errors"},"files":[],"sha":"142c336ed07b123df9d095a87914642e7d4e04fa"},{"commit":{"message":"Null check only when selector expression of switch expression is of reference type\n\nReviewed-by: psandoz"},"files":[],"sha":"edadd5261cf5a98318d4a8038c7336554faea5bc"},{"commit":{"message":"cmake tidyup and access with maven build"},"files":[],"sha":"cbf1b934d8d1bddd81735d880ecdf73bfe0d77e7"},{"commit":{"message":"attempt to mavenize hat starting with opencl targets - ongoing"},"files":[],"sha":"f2ca61566b212e2730d4c8e61b0f62a004115197"},{"commit":{"message":"Improve JavaType::toString\n\nReviewed-by: psandoz"},"files":[],"sha":"1ad028fd0f74ec61e54b183902b4dea4af0c36b5"},{"commit":{"message":"Add support for local classes\n\nReviewed-by: psandoz"},"files":[],"sha":"3c76e6c32bff59006830be12e18a73793f371c76"},{"commit":{"message":"Updates to healing brush demo conversion to hat - ongoing"},"files":[],"sha":"d516b37d1460a1f19cdd8a34c21e39b4f9765295"},{"commit":{"message":"Lower SwitchExpressionOp\n\nReviewed-by: psandoz"},"files":[],"sha":"deebe32acf20eaf2679b811b7caafa7b71704d26"},{"commit":{"message":"Bytecode round 6 - lifting lambdas\n\nReviewed-by: psandoz"},"files":[],"sha":"0cafc73c9556e7d6269f85bf43dd3610d99228b5"},{"commit":{"message":"Add support for enclosing class types\n\nReviewed-by: psandoz"},"files":[],"sha":"ba4e9a15de5f598c934d300d6314b999153af888"},{"commit":{"message":"Converting healing brush to use HAT also offered a headless variant f…"},"files":[],"sha":"7c838871c8ceca9dcd1486b5be68cd54856b0bc4"},{"commit":{"message":"fix std::string to char * for kernel names"},"files":[],"sha":"6b6ef00e4bb2bb92df408dfa07f84a3619807308"},{"commit":{"message":"cuda fixes for violajones"},"files":[],"sha":"a3bd91f1c84726df5c024a2976aba3d2a30e3feb"},{"commit":{"message":"Fixed up ptx backend (native) so that PTX work can begin"},"files":[],"sha":"23471fb4b7bc38d161f6f9babf2496ae6bfdf1b7"},{"commit":{"message":"Found CUDA issue.  This is the fix part1"},"files":[],"sha":"a8e16a75e629f2620d05318baa16b9739618575d"},{"commit":{"message":"added 16 byte alignment of buffers and tail markers to help detect ar…"},"files":[],"sha":"75cd5868e7b7b574cc4036991438f18f3de86976"},{"commit":{"message":"Updated code for dumping schema (debugging cuda violajones)"},"files":[],"sha":"e78c408a0765f21fd39c01c7e60f5abfcdbe1cad"},{"commit":{"message":"Clearly mark which AST nodes are unsupported in ReflectMethods\n\nReviewed-by: psandoz"},"files":[],"sha":"331553ef0ee0a218537ed7b96092266586a5f251"},{"commit":{"message":"Test for creating a module of functions from invocations"},"files":[],"sha":"4bdc86cf4a7090fc2cf44bae4cc9e4cc3fb952da"},{"commit":{"message":"At least one element in 'flexible array members' for some OpenCL comp…"},"files":[],"sha":"eea106e1ea9566b14abafa959809f52b6202ad4e"},{"commit":{"message":"create cuda version of new squares demo"},"files":[],"sha":"794db764f0b5f887abeb47511967663060b40b1a"},{"commit":{"message":"initial work dumping schema from native"},"files":[],"sha":"296adf034c4b088c855b64c07355f48ee9bc1886"},{"commit":{"message":"OpWriter block naming align with block indexes\n\nReviewed-by: psandoz"},"files":[],"sha":"0fbbbabff57f667f75db68c1b7a18827e7397b91"},{"commit":{"message":"added some examples to migrate to hat"},"files":[],"sha":"0bee7cb80243a67786fa0d4a1d2c05f1aae39a28"},{"commit":{"message":"Hat sync with cuda changes"},"files":[],"sha":"97bfd7da9dfff0b8deb713b996a3be99be109e74"},{"commit":{"message":"Hat sync with cuda changes"},"files":[],"sha":"9477fa0b630558379ee301a37f24cb94c5dfd359"},{"commit":{"message":"Hat find cuda ill access"},"files":[],"sha":"02aa9965f701e5e51fe897e199ee44c498de154f"},{"commit":{"message":"Hat opencl cuda mergees"},"files":[],"sha":"1491ae304c998114a37788f33b4d64ffd6b314d4"},{"commit":{"message":"Clion CMakeLists.txt updates for ubuntu opencl"},"files":[],"sha":"185bb8cae550a9c3d942f1f47ecca6bd58179e0a"},{"commit":{"message":"Ubuntu opencl cmake fix for opencl shared libs and execs"},"files":[],"sha":"2765d8f0019a9f8ffca054aea0c5d6cfdaecce1c"},{"commit":{"message":"BytecodeLift implementation progress + SlotOp\n\nCo-authored-by: Paul Sandoz <psandoz@openjdk.org>\nReviewed-by: psandoz"},"files":[],"sha":"fda73bd58170a75feaccbc0e6ad7a313655e70bb"},{"commit":{"message":"add cmake opencl stanza for non Apple machines"},"files":[],"sha":"9839e4b4f90d79f2134c1a61d245a47296c83d2f"},{"commit":{"message":"fix opencl buffer created by last cuda fix.."},"files":[],"sha":"d49ac72ef3145c95b8be12443fc231dffcada957"},{"commit":{"message":"Fixed Race Condition in PTX nvcc compiler. Also atomicInc->atomicAdd"},"files":[],"sha":"0e2b2deb2dd8b8c5d08c7346d45aabe7f3394d8e"},{"commit":{"message":"Add CUDA Clion artifacts and cleanup cuda backend"},"files":[],"sha":"1cfb2ca06162ca75a206c9877fd65b750303d385"},{"commit":{"message":"Added Clion CMakefile to backends reformated cpp\/h files"},"files":[],"sha":"b55e2964c64b214302cf8f09021ae443ccdd6c0e"},{"commit":{"message":"Hat initial implementation and build infrastructure"},"files":[],"sha":"f9b5a0a0043b6dfe20d682b4ea44400b1cd6aa3c"},{"commit":{"message":"HAT needs public access to TranslateToSpirvModel"},"files":[],"sha":"db004979307b5e1785071496f2144d91168832aa"},{"commit":{"message":"Enhance OpWriter"},"files":[],"sha":"4f01364a50c7bf7a04600e8365bdc7031b2b8172"},{"commit":{"message":"Sealed interfaces marking operations that model a Java language construct\n\nReviewed-by: mcimadamore"},"files":[],"sha":"650e4cfd9c251ed70432b7cd00f91424b8873d5c"},{"commit":{"message":"Implement bitwise\/shift assignment operations\n\nReviewed-by: psandoz"},"files":[],"sha":"dd4adba1afa1cc7845cbf7c85299743b79460d40"},{"commit":{"message":"Fix triton example."},"files":[],"sha":"cf4cf1c2a01bb192f14b64cae7b7f8e56257def9"},{"commit":{"message":"Lowering transformer"},"files":[],"sha":"6174c8fd06e2741c5ba1211ea9ead05d5110f846"},{"commit":{"message":"Fix test"},"files":[],"sha":"2f08574e9d4b72b5a4bc0d3788891ca0acd7c85a"},{"commit":{"message":"CoreOps to CoreOp, ExtendedOps to ExtendedOp\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java"}],"sha":"903d8b6006d4b567b0522e54e9715c047b8d5092"},{"commit":{"message":"Refactor TypeDefinition to ExternalizedTypeElement\n\nReviewed-by: mcimadamore"},"files":[],"sha":"b72a25864e90c90870e90a627f4169cef020e246"},{"commit":{"message":"Cleanup JavaType factories\n\nReviewed-by: psandoz"},"files":[],"sha":"66cf4eaf8d5c41ffb8e5ca9684f0f8968af19bef"},{"commit":{"message":"Externalizable operations\n\nReviewed-by: mcimadamore"},"files":[],"sha":"9a3a7362aad3d8958c4f027983a32d9fafe77498"},{"commit":{"message":"Fix test"},"files":[],"sha":"9a60b26b678735204971c6955c61359e27415dbb"},{"commit":{"message":"Merge"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"80efbb6b9cda068d21ef34349e9c42a9dbcd8abb"},{"commit":{"message":"Clean up support for boxing\n\nReviewed-by: psandoz"},"files":[],"sha":"ac9bc55a1fabfed9a7133156371b1133dfc42e4d"},{"commit":{"message":"Make jdk.compiler build depend on code model API in java.base\n\nReviewed-by: psandoz"},"files":[],"sha":"b5030b313b8182284e0b9ce90633019bbc4fb7bf"},{"commit":{"message":"Add common supertype for type-variable owners\n\nReviewed-by: psandoz"},"files":[],"sha":"78b961661ac8c7e97565da78e9f330f45f17595b"},{"commit":{"message":"Enable pattern matching for JavaType hierarchy\n\nReviewed-by: psandoz"},"files":[],"sha":"a130820f1842de6b9d9256f5285128e843a77209"},{"commit":{"message":"Fix test failure after PR\/51\n\nReviewed-by: psandoz"},"files":[],"sha":"799abb7f548d6e21d40bda11878b2a9f072f2c2d"},{"commit":{"message":"Add support for more types\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"}],"sha":"6713aca070d5cab3a97c1cc19035a13d875d8641"},{"commit":{"message":"8324789: Add line number information to code models\n\nReviewed-by: mcimadamore"},"files":[],"sha":"9f35792fc834a9c89d3f7a13547e3f0a75178c01"},{"commit":{"message":"Preserve order of captured value"},"files":[],"sha":"628a9319dad7413118ad92f463f58907c476fb79"},{"commit":{"message":"Determine if lambda operation originates from a method reference\n\nReviewed-by: mcimadamore"},"files":[],"sha":"c1a89648a188071102743968998241f042a6a2a0"},{"commit":{"message":"Temporarily disable TestSmallCorpus tests\n\nReviewed-by: asotona"},"files":[],"sha":"455606199e82ac85ae01a9ba5c61315b52835979"},{"commit":{"message":"Refine support for captured values."},"files":[],"sha":"ebf319d0f67b2a9746786bd9221cb853550e4c8e"},{"commit":{"message":"BytecodeGenerator cleanup and and types handling fixes\n\nReviewed-by: psandoz"},"files":[],"sha":"55416a09557446376fb3a2877aed1112db66f84b"},{"commit":{"message":"Missing conversion for some unary operators\n\nReviewed-by: psandoz"},"files":[],"sha":"8408a32d201434408acf15420ff690575cd27c47"},{"commit":{"message":"InnerClassLambdaMetafactory fix of hidden classes handling\n\nReviewed-by: psandoz"},"files":[],"sha":"d02e7c6f9f6f80f028f5eeb82e93eea6d2161287"},{"commit":{"message":"Issues with captures in quotable lambdas\n\nReviewed-by: psandoz"},"files":[],"sha":"0f1e4e1c0c3c44ac7f54814e4ebc81273f946c04"},{"commit":{"message":"Implement shift ops\n\nReviewed-by: psandoz"},"files":[],"sha":"a0e0953b736c2ae0eaa0f859e90801f3954c326b"},{"commit":{"message":"BytecodeGenerator support of lambdas\n\nReviewed-by: psandoz"},"files":[],"sha":"cdf3f9ba0bd3555d2af49e0c7089d63d4348f1b8"},{"commit":{"message":"Erase receiver type before calling Gen::binaryQualifier\n\nReviewed-by: psandoz"},"files":[],"sha":"ff2074f84ab339eee340eeab435a5ae1afc1a7c4"},{"commit":{"message":"Adding String Concatenation to Code Model (#47)\n\n* Initial commit\r\n\r\n* Shortening up tests and minor tweaks\r\n\r\n* Test tweak\r\n\r\n* Test cleanups\r\n\r\n* Updates and cleanup\r\n\r\n* Removing unused var\r\n\r\n* Tweaks"},"files":[],"sha":"a5c4db179e696bbb919a34c7c7b36d97381baec8"},{"commit":{"message":"Refactor JavaType\n\nReviewed-by: psandoz"},"files":[],"sha":"950402e4b55770590c9a5bc3efa9ee7f47d5c509"},{"commit":{"message":"More systematic binary op tests\n\nReviewed-by: psandoz"},"files":[],"sha":"9cc359783867c9567751207efe369cc08655754b"},{"commit":{"message":"BytecodeGenerator, BytecodeLift and TestBytecode improvements\n\nReviewed-by: psandoz"},"files":[],"sha":"8cf98debb1fa405c5f93840db63625accaa3d8ea"},{"commit":{"message":"Uncomment a String Template Test\n\nReviewed-by: psandoz"},"files":[],"sha":"452c99d7b608c40b6c560ce89180415b15bea2c9"},{"commit":{"message":"Test remove final vars\n\nReviewed-by: psandoz"},"files":[],"sha":"6bc5733d0f155c50dfbd12b4a697c1a4eb5fafc3"},{"commit":{"message":"Lower StringTemplateOp\n\nReviewed-by: psandoz"},"files":[],"sha":"3a66a65e443cdcefc75250a514210151ba7e9482"},{"commit":{"message":"Generate bytecode from an invokable op."},"files":[],"sha":"4de0b9f6f662febda804a4e1c96c33ef7b0ddfa1"},{"commit":{"message":"Fix unbox invocation"},"files":[],"sha":"5549b694b691410a354cf0c7a579cdcd9222341b"},{"commit":{"message":"Example use of code reflection in translating Java to SPIR-V\n\nReviewed-by: psandoz"},"files":[],"sha":"459ba14f646faa03363a3a1c9ebfd3c1cdf5d145"},{"commit":{"message":"A transformer of code models to models that build them."},"files":[],"sha":"638ba1f7958896fb3fc2a0e5c638f4a2317bdd3a"},{"commit":{"message":"Assertion Interpreter Implementation\n\nReviewed-by: psandoz"},"files":[],"sha":"90df3aab5fc5c3bdfcea3afa6d63cc2680ce8820"},{"commit":{"message":"Model String Template\n\nReviewed-by: mcimadamore, psandoz"},"files":[],"sha":"dd7330830f3e348389f903285a344913613d9916"},{"commit":{"message":"Obtain parent code element from code element"},"files":[],"sha":"7d6516667fe7aac0d5ef2d12df77d36ee60c4185"},{"commit":{"message":"Code model from method reference\n\nReviewed-by: mcimadamore"},"files":[],"sha":"8fcbeee32fb423d0fb9c006cafb38b0839122504"},{"commit":{"message":"Descriptor to reference\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/module-info.java"}],"sha":"2c33eecc9fc7430c40e69337b66daca050040e05"},{"commit":{"message":"Assert code modeling\n\nReviewed-by: psandoz"},"files":[],"sha":"27acfb68f4ecc40042cadbbc597ce60a6a1b27d1"},{"commit":{"message":"Remove MethodTypeDesc\n\nReviewed-by: mcimadamore"},"files":[],"sha":"03f40c2a1dd46e6f2fffdc2e5edafbac200d8fbf"},{"commit":{"message":"Separate TypeElement from Type."},"files":[],"sha":"ff61eaec5473bee3fb79b078dc33b541141a1da8"},{"commit":{"message":"Fix compilation issue with CodeElement.elements"},"files":[],"sha":"b5cd25da8d7cbbbc39e0c399c48a403c6ff36b9e"},{"commit":{"message":"Stream code elements"},"files":[],"sha":"b9f92bbbbf9c8d4cc33f2768dae95862d701d83a"},{"commit":{"message":"Invokable block parameters"},"files":[],"sha":"d94e0338a5d4800b30aa2492c4f3652c7f046af4"},{"commit":{"message":"Structured type definition\n\nReviewed-by: mcimadamore"},"files":[],"sha":"da4c4fa3c76a7bcc870ea5bbd5042f05b3e86984"},{"commit":{"message":"Testing BytecodeLift and BytecodeGenerator roundtrip stability\n\nReviewed-by: psandoz"},"files":[],"sha":"8c6b5754fd043348ec193d78b5b505111fe7b3b9"},{"commit":{"message":"Replace use of MethodTypeDesc with FunctionType"},"files":[],"sha":"75cc28c1c059c9836f42f42f645976250fc2516e"},{"commit":{"message":"Add and\/or\/xor operations to code model\n\nReviewed-by: psandoz"},"files":[],"sha":"ec239acc07b5178d0e029c9019664326c7bd0d7d"},{"commit":{"message":"Review FieldLoadOp\n\nReviewed-by: psandoz"},"files":[],"sha":"d3ea092a795be6b2436dc6fe2efe7f8ac9efa078"},{"commit":{"message":"Update linq example."},"files":[],"sha":"21dd5bed47ddda6e74bd177f48cdbf28342d9fc4"},{"commit":{"message":"Extensible types in the code model"},"files":[{"filename":"src\/java.base\/share\/classes\/module-info.java"}],"sha":"b3d45e1af34028a7084f6981d34a2490af0a1eb4"},{"commit":{"message":"Remove bytecode dialect"},"files":[],"sha":"38480b4f1e711b6266ce7bc214596ae49d99022e"},{"commit":{"message":"PoC of Triton programming in Java"},"files":[],"sha":"aeb64a4196274b59a7486dccf52e1c5cc179d182"},{"commit":{"message":"Hide implementation computing global names"},"files":[{"filename":"src\/java.base\/share\/classes\/module-info.java"}],"sha":"72191af726a846e1e861137c134856e657b7869d"},{"commit":{"message":"More block checks"},"files":[],"sha":"ef1a5b4407d5c923f7cb09534b988da0bad49555"},{"commit":{"message":"Exception regions fix\n\nReviewed-by: psandoz"},"files":[],"sha":"a2ea58f77b5aee42288d722002fd5131d8e005ee"},{"commit":{"message":"Correct computation of block indexes\n\nReviewed-by: asotona"},"files":[],"sha":"16406cd82bc8c3f4f679e568fcc07681ea5ecf23"},{"commit":{"message":"8324556: Not copy result-type when copying an op (#6)\n\n* Not copy resultType when copying an op.\r\n\r\n* Apply Paul's suggestions\r\n\r\n* Add test\r\n\r\n* Review\r\n\r\n* Remove validation from resultType method\r\n\r\n* Add documentation"},"files":[],"sha":"b6d807e7e932e61b8cda431e791bc7085bff80f3"},{"commit":{"message":"Test break statements within try statements"},"files":[],"sha":"22719c50cd82ea7cc6a443b4c14d81d2dfccf39a"},{"commit":{"message":"Simple model testing when lowering"},"files":[],"sha":"21864db868023ce0492252e2b0f7d421b787833b"},{"commit":{"message":"Skip bytecode dialect part 1 - removed BytecodeLower\n"},"files":[],"sha":"ee2661ebc4f911cf12c0193bcf506be75e15f743"},{"commit":{"message":"Make sure method parameters keep their slots when lowering\n\nReviewed-by: psandoz"},"files":[],"sha":"9835b5a64faf10699b4a8d17baf20caa1d094d9b"},{"commit":{"message":"Clean up some examples"},"files":[],"sha":"af40e7d754bc527797dc5c582750dba7c4c9e3af"},{"commit":{"message":"Update project of jcheck conf"},"files":[],"sha":"61ce338085d1509d49005dbf3af7fa12fa8752d7"},{"commit":{"message":"Support array type constants in code model\n\nReviewed-by: psandoz, mcimadamore"},"files":[],"sha":"a154e5e96ca1b21f9bf3a9eb7cc77a6cfb40093b"},{"commit":{"message":"throw instead returning when erasing checked to unchecked exception\n\nReviewed-by: psandoz"},"files":[],"sha":"92cbc7fc39f0a346435d36b73707f7a181c67bbe"},{"commit":{"message":"Update readme"},"files":[],"sha":"e7cfc9ee3b35857ae060389912578c3e21f80086"},{"commit":{"message":"Move j.l.r.code.impl.OpWriter to j.l.r.code.writer (#3)\n"},"files":[{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"ce9442fdf391f4de300e74c74c9f8889dce50b0e"},{"commit":{"message":"Initial code reflection prototype\n\nCo-authored-by: Mourad Abbay <mabbay@openjdk.org>\nCo-authored-by: Gary Frost <gfrost@openjdk.org>\nCo-authored-by: Ian Graves <igraves@openjdk.org>\nCo-authored-by: Maurizio Cimadamore <mcimadamore@openjdk.org>\nCo-authored-by: Adam Sotona <asotona@openjdk.org>"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"}],"sha":"38abcc97ba1c0e7a49f0965a66acd71913303f82"},{"commit":{"message":"Update conf"},"files":[],"sha":"411da8ef435ede05641d888e2661cbee5a65e95b"}]