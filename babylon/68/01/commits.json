[{"commit":{"message":"Merge master"},"files":[{"filename":".jcheck\/conf"},{"filename":"make\/conf\/module-loader-map.conf"},{"filename":"make\/modules\/java.base\/Java.gmk"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/analysis\/Liveness.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/OpWithDefinition.java"},{"filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"},{"filename":"test\/jdk\/TEST.groups"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/ForwardDifferentiation.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"9b3453626221b3563392b9976f113d64e1b78c43"},{"commit":{"message":"Clean up support for boxing\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/ClassType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/JavaType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/PrimitiveType.java"}],"sha":"ac9bc55a1fabfed9a7133156371b1133dfc42e4d"},{"commit":{"message":"Make jdk.compiler build depend on code model API in java.base\n\nReviewed-by: psandoz"},"files":[{"filename":"README.md"},{"filename":"make\/modules\/jdk.compiler\/Gensrc.gmk"}],"sha":"b5030b313b8182284e0b9ce90633019bbc4fb7bf"},{"commit":{"message":"Add common supertype for type-variable owners\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/ClassType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/CoreTypeFactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/JavaType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/MethodRef.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/TypeVarRef.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestErasure.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/type\/TestJavaType.java"}],"sha":"78b961661ac8c7e97565da78e9f330f45f17595b"},{"commit":{"message":"Enable pattern matching for JavaType hierarchy\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/ArrayType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/ClassType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/JavaType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/PrimitiveType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/TypeVarRef.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/WildcardType.java"}],"sha":"a130820f1842de6b9d9256f5285128e843a77209"},{"commit":{"message":"Fix test failure after PR\/51\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/CoreTypeFactory.java"}],"sha":"799abb7f548d6e21d40bda11878b2a9f072f2c2d"},{"commit":{"message":"Add support for more types\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/JavaBasedTokenizer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/Lexer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/Tokens.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/ArrayType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/ClassType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/CoreTypeFactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/JavaType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/PrimitiveType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/TypeVarRef.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/WildcardType.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestClosureOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestErasure.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLambdaOps.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ConstantsTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/DenotableTypesTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/FieldAccessTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/IntersectionTypeTest.java"}],"sha":"6713aca070d5cab3a97c1cc19035a13d875d8641"},{"commit":{"message":"8324789: Add line number information to code models\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Location.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Op.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/OpTransformer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/OpWithDefinition.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/OpBuilder.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/OpWriter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/location\/ClassWithReflectedMethod.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/location\/TestLocation.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/CodeReflectionTester.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/TestNaming.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/CodeReflectionTester.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/TestIRFromAnnotation.java"}],"sha":"9f35792fc834a9c89d3f7a13547e3f0a75178c01"},{"commit":{"message":"Preserve order of captured value"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Quoted.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuotable.java"}],"sha":"628a9319dad7413118ad92f463f58907c476fb79"},{"commit":{"message":"Determine if lambda operation originates from a method reference\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLambdaOps.java"}],"sha":"c1a89648a188071102743968998241f042a6a2a0"},{"commit":{"message":"Temporarily disable TestSmallCorpus tests\n\nReviewed-by: asotona"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"}],"sha":"455606199e82ac85ae01a9ba5c61315b52835979"},{"commit":{"message":"Refine support for captured values."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Body.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Op.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Quoted.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"}],"sha":"ebf319d0f67b2a9746786bd9221cb853550e4c8e"},{"commit":{"message":"BytecodeGenerator cleanup and and types handling fixes\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java"}],"sha":"55416a09557446376fb3a2877aed1112db66f84b"},{"commit":{"message":"Missing conversion for some unary operators\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BoxingConversionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuotable.java"}],"sha":"8408a32d201434408acf15420ff690575cd27c47"},{"commit":{"message":"InnerClassLambdaMetafactory fix of hidden classes handling\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"}],"sha":"d02e7c6f9f6f80f028f5eeb82e93eea6d2161287"},{"commit":{"message":"Issues with captures in quotable lambdas\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuotable.java"}],"sha":"0f1e4e1c0c3c44ac7f54814e4ebc81273f946c04"},{"commit":{"message":"Implement shift ops\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/InvokableLeafOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/CoreBinaryOpsTest.java"}],"sha":"a0e0953b736c2ae0eaa0f859e90801f3954c326b"},{"commit":{"message":"BytecodeGenerator support of lambdas\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java"}],"sha":"cdf3f9ba0bd3555d2af49e0c7089d63d4348f1b8"},{"commit":{"message":"Erase receiver type before calling Gen::binaryQualifier\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/DenotableTypesTest.java"}],"sha":"ff2074f84ab339eee340eeab435a5ae1afc1a7c4"},{"commit":{"message":"Adding String Concatenation to Code Model (#47)\n\n* Initial commit\r\n\r\n* Shortening up tests and minor tweaks\r\n\r\n* Test tweak\r\n\r\n* Test cleanups\r\n\r\n* Updates and cleanup\r\n\r\n* Removing unused var\r\n\r\n* Tweaks"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestConcat.java"}],"sha":"a5c4db179e696bbb919a34c7c7b36d97381baec8"},{"commit":{"message":"Refactor JavaType\n\nReviewed-by: psandoz"},"files":[{"filename":"cr-examples\/spirv\/src\/main\/java\/intel\/code\/spirv\/SpirvModuleGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/ArrayType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/ClassType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/CoreTypeFactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/JavaType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/PrimitiveType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/OpBuilder.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/Queryable.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/StreamFuser.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/StreamFuserUsingQuotable.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/type\/TestJavaType.java"}],"sha":"950402e4b55770590c9a5bc3efa9ee7f47d5c509"},{"commit":{"message":"More systematic binary op tests\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/CoreBinaryOpsTest.java"}],"sha":"9cc359783867c9567751207efe369cc08655754b"},{"commit":{"message":"BytecodeGenerator, BytecodeLift and TestBytecode improvements\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestArrayCreation.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBytecode.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestLiftCustomBytecode.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestLiftExample.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestQuoted.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSlots.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSmallCorpus.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTry.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinally.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinallyNested.java"}],"sha":"8cf98debb1fa405c5f93840db63625accaa3d8ea"},{"commit":{"message":"Uncomment a String Template Test\n\nReviewed-by: psandoz"},"files":[],"sha":"452c99d7b608c40b6c560ce89180415b15bea2c9"},{"commit":{"message":"Test remove final vars\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestRemoveFinalVars.java"}],"sha":"6bc5733d0f155c50dfbd12b4a697c1a4eb5fafc3"},{"commit":{"message":"Lower StringTemplateOp\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/JavaType.java"}],"sha":"3a66a65e443cdcefc75250a514210151ba7e9482"},{"commit":{"message":"Generate bytecode from an invokable op."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Op.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"}],"sha":"4de0b9f6f662febda804a4e1c96c33ef7b0ddfa1"},{"commit":{"message":"Fix unbox invocation"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BoxingConversionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/LambdaTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/MethodReferenceTest.java"}],"sha":"5549b694b691410a354cf0c7a579cdcd9222341b"},{"commit":{"message":"Example use of code reflection in translating Java to SPIR-V\n\nReviewed-by: psandoz"},"files":[{"filename":"cr-examples\/spirv\/README.md"},{"filename":"cr-examples\/spirv\/pom.xml"},{"filename":"cr-examples\/spirv\/src\/main\/java\/intel\/code\/spirv\/PointerType.java"},{"filename":"cr-examples\/spirv\/src\/main\/java\/intel\/code\/spirv\/SpirvModuleGenerator.java"},{"filename":"cr-examples\/spirv\/src\/main\/java\/intel\/code\/spirv\/SpirvOp.java"},{"filename":"cr-examples\/spirv\/src\/main\/java\/intel\/code\/spirv\/SpirvOps.java"},{"filename":"cr-examples\/spirv\/src\/main\/java\/intel\/code\/spirv\/SpirvType.java"},{"filename":"cr-examples\/spirv\/src\/main\/java\/intel\/code\/spirv\/StorageType.java"},{"filename":"cr-examples\/spirv\/src\/main\/java\/intel\/code\/spirv\/TranslateToSpirvModel.java"},{"filename":"cr-examples\/spirv\/src\/test\/java\/intel\/code\/spirv\/ExampleUseTest.java"}],"sha":"459ba14f646faa03363a3a1c9ebfd3c1cdf5d145"},{"commit":{"message":"A transformer of code models to models that build them."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/OpBuilder.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/OpWriter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/package-info.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/TestCodeBuilder.java"}],"sha":"638ba1f7958896fb3fc2a0e5c638f4a2317bdd3a"},{"commit":{"message":"Assertion Interpreter Implementation\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/interpreter\/TestAssert.java"}],"sha":"90df3aab5fc5c3bdfcea3afa6d63cc2680ce8820"},{"commit":{"message":"Model String Template\n\nReviewed-by: mcimadamore, psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/JavaType.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"}],"sha":"dd7330830f3e348389f903285a344913613d9916"},{"commit":{"message":"Obtain parent code element from code element"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Block.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Body.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/CodeElement.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Op.java"}],"sha":"7d6516667fe7aac0d5ef2d12df77d36ee60c4185"},{"commit":{"message":"Code model from method reference\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/MethodRef.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/impl\/MethodRefImpl.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/type\/TestReferences.java"}],"sha":"8fcbeee32fb423d0fb9c006cafb38b0839122504"},{"commit":{"message":"Descriptor to reference\n\nReviewed-by: mcimadamore"},"files":[{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/SCFOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonOps.java"},{"filename":"cr-util\/copy-to-compiler.sh"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/OpParser.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/FieldRef.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/JavaType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/MethodRef.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/RecordTypeRef.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/impl\/FieldRefImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/impl\/MethodRefImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/impl\/RecordTypeRefImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestClosureOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestExceptionRegionOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestInline.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLambdaOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLinqUsingQuoted.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLocalTransformationsAdaption.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/ForwardDifferentiation.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/Queryable.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/TestQueryProvider.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/parser\/TestParse.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/type\/TestReferences.java"}],"sha":"2c33eecc9fc7430c40e69337b66daca050040e05"},{"commit":{"message":"Assert code modeling\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/AssertTest.java"}],"sha":"27acfb68f4ecc40042cadbbc597ce60a6a1b27d1"},{"commit":{"message":"Remove MethodTypeDesc\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestExceptionRegionOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestInline.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLinqUsingQuoted.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/ForwardDifferentiation.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/Queryable.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/StreamFuser.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/StreamFuserUsingQuotable.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BlockTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BoxingConversionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/FieldAccessTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ImplicitConversionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/MethodReferenceTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/NewArrayTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/NewTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/NullTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/QuotableIntersectionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/QuotableSubtypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/QuotedTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ThrowTest.java"}],"sha":"03f40c2a1dd46e6f2fffdc2e5edafbac200d8fbf"},{"commit":{"message":"Separate TypeElement from Type."},"files":[{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/ArithMathOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/ConstantType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/PtrType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TensorType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonTransformer.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonType.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestAddKernel.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestBroadcast.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestCdiv.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestCountedLoop.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestMatrix.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestSoftMax.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestVariables.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestZeros.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TritonTestExtension.java"}],"sha":"ff61eaec5473bee3fb79b078dc33b541141a1da8"},{"commit":{"message":"Fix compilation issue with CodeElement.elements"},"files":[{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonTransformer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/CodeElement.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"}],"sha":"b5cd25da8d7cbbbc39e0c399c48a403c6ff36b9e"},{"commit":{"message":"Stream code elements"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/CodeElement.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestTraverse.java"}],"sha":"b9f92bbbbf9c8d4cc33f2768dae95862d701d83a"},{"commit":{"message":"Invokable block parameters"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Block.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Op.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBlockParameters.java"}],"sha":"d94e0338a5d4800b30aa2492c4f3652c7f046af4"},{"commit":{"message":"Structured type definition\n\nReviewed-by: mcimadamore"},"files":[{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/ConstantType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/PtrType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TensorType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/TypeElement.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/OpParser.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/CoreTypeFactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/FunctionType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/JavaType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/TupleType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/TypeDefinition.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/VarType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/OpWriter.java"}],"sha":"da4c4fa3c76a7bcc870ea5bbd5042f05b3e86984"},{"commit":{"message":"Testing BytecodeLift and BytecodeGenerator roundtrip stability\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TEST.properties"}],"sha":"8c6b5754fd043348ec193d78b5b505111fe7b3b9"},{"commit":{"message":"Replace use of MethodTypeDesc with FunctionType"},"files":[{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/SCFOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonTransformer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Block.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Body.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Op.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/OpParser.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/CoreTypeFactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/FunctionType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/OpWriter.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/renderer\/SRRenderer.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBuild.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestClosureOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestDominate.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestExceptionRegionOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestInline.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLambdaOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLinqUsingQuoted.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/Queryable.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/TestQueryProvider.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/parser\/TestParse.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/StreamFuser.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/StreamFuserUsingQuotable.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/CodeReflectionTester.java"}],"sha":"75cc28c1c059c9836f42f42f645976250fc2516e"},{"commit":{"message":"Add and\/or\/xor operations to code model\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/InvokableLeafOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBinops.java"}],"sha":"ec239acc07b5178d0e029c9019664326c7bd0d7d"},{"commit":{"message":"Review FieldLoadOp\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/FieldAccessTest.java"}],"sha":"d3ea092a795be6b2436dc6fe2efe7f8ac9efa078"},{"commit":{"message":"Update linq example."},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/QueryProvider.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/QueryResult.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/Queryable.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/TestQueryProvider.java"}],"sha":"21dd5bed47ddda6e74bd177f48cdbf28342d9fc4"},{"commit":{"message":"Extensible types in the code model"},"files":[{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/ArithMathOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/ConstantType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/Float16.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/PtrType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/SCFOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/SimpleCountedForLoopInfo.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TensorType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonTestOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonTransformer.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonType.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestCountedLoop.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestMatrix.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TritonTestExtension.java"},{"filename":"cr-util\/copy-to-compiler.sh"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Block.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Body.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/CodeItem.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Op.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/TypeElement.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Value.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/analysis\/Liveness.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/OpDefinition.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/OpWithDefinition.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/OpParser.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/CoreTypeFactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/FunctionType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/JavaType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/TupleType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/TypeDefinition.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/TypeElementFactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/VarType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/type\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/OpWriter.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/renderer\/SRRenderer.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBuild.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestClosureOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestDominate.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestExceptionRegionOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestInline.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLambdaOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLinqUsingQuoted.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLiveness.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLocalTransformationsAdaption.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/ExpressionElimination.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/ForwardDifferentiation.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/QueryProvider.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/QueryResult.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/Queryable.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/TestQueryProvider.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/parser\/TestParse.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/StreamFuser.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/StreamFuserUsingQuotable.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/TestStream.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/type\/TestJavaType.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ForLoopTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/TryTest.java"}],"sha":"b3d45e1af34028a7084f6981d34a2490af0a1eb4"},{"commit":{"message":"Remove bytecode dialect"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestLiftExample.java"}],"sha":"38480b4f1e711b6266ce7bc214596ae49d99022e"},{"commit":{"message":"PoC of Triton programming in Java"},"files":[{"filename":"cr-examples\/triton\/.gitignore"},{"filename":"cr-examples\/triton\/README.md"},{"filename":"cr-examples\/triton\/pom.xml"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/ArithMathOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/Constant.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/ConstantType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/Float16.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/Functions.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/Ptr.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/PtrType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/SCFOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/SimpleCountedForLoopInfo.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/Tensor.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TensorType.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/Triton.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonNumber.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonTestOps.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonTransformer.java"},{"filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonType.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestAddKernel.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestBroadcast.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestCdiv.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestCountedLoop.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestMatrix.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestSoftMax.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestVariables.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TestZeros.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TritonCodeModel.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TritonTest.java"},{"filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TritonTestExtension.java"}],"sha":"aeb64a4196274b59a7486dccf52e1c5cc179d182"},{"commit":{"message":"Hide implementation computing global names"},"files":[{"filename":"cr-util\/copy-to-compiler.sh"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/CodeElement.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/CodeItem.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Value.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/analysis\/Liveness.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/OpWriter.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/TestNaming.java"}],"sha":"72191af726a846e1e861137c134856e657b7869d"},{"commit":{"message":"More block checks"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Body.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBuild.java"}],"sha":"ef1a5b4407d5c923f7cb09534b988da0bad49555"},{"commit":{"message":"Exception regions fix\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BranchCompactor.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestBranchCompactor.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTry.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinally.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinallyNested.java"}],"sha":"a2ea58f77b5aee42288d722002fd5131d8e005ee"},{"commit":{"message":"Correct computation of block indexes\n\nReviewed-by: asotona"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Block.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Body.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBlockIndexes.java"}],"sha":"16406cd82bc8c3f4f679e568fcc07681ea5ecf23"},{"commit":{"message":"8324556: Not copy result-type when copying an op (#6)\n\n* Not copy resultType when copying an op.\r\n\r\n* Apply Paul's suggestions\r\n\r\n* Add test\r\n\r\n* Review\r\n\r\n* Remove validation from resultType method\r\n\r\n* Add documentation"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Op.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/OpWithDefinition.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestInline.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BoxingConversionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ConditionalExpressionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ImplicitConversionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/SwitchExpressionTest.java"}],"sha":"b6d807e7e932e61b8cda431e791bc7085bff80f3"},{"commit":{"message":"Test break statements within try statements"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestTryFinallyNested.java"}],"sha":"22719c50cd82ea7cc6a443b4c14d81d2dfccf39a"},{"commit":{"message":"Simple model testing when lowering"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/CodeReflectionTester.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/LoweredModel.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/TestLoop.java"}],"sha":"21864db868023ce0492252e2b0f7d421b787833b"},{"commit":{"message":"Skip bytecode dialect part 1 - removed BytecodeLower\n"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/TestForwardAutoDiff.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestArrayCreation.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSlots.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTry.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinally.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinallyNested.java"}],"sha":"ee2661ebc4f911cf12c0193bcf506be75e15f743"},{"commit":{"message":"Make sure method parameters keep their slots when lowering\n\nReviewed-by: psandoz"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSlots.java"}],"sha":"9835b5a64faf10699b4a8d17baf20caa1d094d9b"},{"commit":{"message":"Clean up some examples"},"files":[{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLinqUsingQuoted.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/ActiveSet.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/ForwardDifferentiation.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/TestForwardAutoDiff.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/QueryProvider.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/QueryResult.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/Queryable.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/QuotableFunction.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/QuotablePredicate.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/TestLinq.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/linq\/TestQueryProvider.java"}],"sha":"af40e7d754bc527797dc5c582750dba7c4c9e3af"},{"commit":{"message":"Update project of jcheck conf"},"files":[{"filename":".jcheck\/conf"}],"sha":"61ce338085d1509d49005dbf3af7fa12fa8752d7"},{"commit":{"message":"Support array type constants in code model\n\nReviewed-by: psandoz, mcimadamore"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestArrayTypes.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ConstantsTest.java"}],"sha":"a154e5e96ca1b21f9bf3a9eb7cc77a6cfb40093b"},{"commit":{"message":"throw instead returning when erasing checked to unchecked exception\n\nReviewed-by: psandoz"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/interpreter\/TestThrowing.java"}],"sha":"92cbc7fc39f0a346435d36b73707f7a181c67bbe"},{"commit":{"message":"Update readme"},"files":[{"filename":"README.md"}],"sha":"e7cfc9ee3b35857ae060389912578c3e21f80086"},{"commit":{"message":"Move j.l.r.code.impl.OpWriter to j.l.r.code.writer (#3)\n"},"files":[{"filename":"cr-util\/copy-to-compiler.sh"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Op.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/analysis\/Liveness.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/OpWriter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/writer\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"test\/jdk\/TEST.groups"}],"sha":"ce9442fdf391f4de300e74c74c9f8889dce50b0e"},{"commit":{"message":"Initial code reflection prototype\n\nCo-authored-by: Mourad Abbay <mabbay@openjdk.org>\nCo-authored-by: Gary Frost <gfrost@openjdk.org>\nCo-authored-by: Ian Graves <igraves@openjdk.org>\nCo-authored-by: Maurizio Cimadamore <mcimadamore@openjdk.org>\nCo-authored-by: Adam Sotona <asotona@openjdk.org>"},"files":[{"filename":"cr-util\/copy-to-compiler.sh"},{"filename":"make\/conf\/module-loader-map.conf"},{"filename":"make\/langtools\/build.xml"},{"filename":"make\/modules\/java.base\/Java.gmk"},{"filename":"make\/modules\/jdk.compiler\/Gensrc.gmk"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/AbstractValidatingLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Block.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Body.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/CodeElement.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/CopyContext.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/CopyContextImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Op.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/OpTransformer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Quotable.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Quoted.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/Value.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/analysis\/Liveness.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/analysis\/Patterns.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/analysis\/SSA.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/analysis\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeLift.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/Interpreter.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/InvokableLeafOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/interpreter\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/OpDeclaration.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/OpDefinition.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/OpFactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/OpWithDefinition.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/OpParser.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/DescParser.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/Errors.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/JavaBasedTokenizer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/Lexer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/Log.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/Position.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/Scanner.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/Tokens.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/impl\/UnicodeReader.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/parser\/package-info.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/CodeReflection.java"},{"filename":"src\/java.base\/share\/classes\/module-info.java"},{"filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/dot\/DotGenerator.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/dot\/DotRenderer.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/dot\/DotViewer.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/renderer\/CStyleRenderer.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/renderer\/CommonRenderer.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/renderer\/Diff.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/renderer\/GlobalValueBlockNaming.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/renderer\/ProcessRunner.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/renderer\/SRRenderer.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/renderer\/TerminalColors.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/jdk\/code\/tools\/renderer\/TextRenderer.java"},{"filename":"src\/jdk.code.tools\/share\/classes\/module-info.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Source.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ArgumentAttr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/DeferredAttr.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/JavaCompiler.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/model\/JavacElements.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/Method\/cr\/TreeAccessTest.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestArrayCreation.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBinops.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBlockOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBreakContinue.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestBuild.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestClosureOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestConditionalExpression.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestConditionalOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestConstants.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestCopy.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestDominate.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestEnhancedForOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestExceptionRegionOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestForOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestIfOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestInline.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLambdaOps.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLiveness.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLocalTransformationsAdaption.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPatterns.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestPrimitiveCast.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestSSA.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestTry.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestTryFinally.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestTryFinallyNested.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestUsesDependsOn.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/TestWhileOp.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/ActiveSet.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/ExpressionElimination.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/ForwardDifferentiation.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/ad\/TestForwardAutoDiff.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestArrayCreation.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestLiftExample.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestSlots.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTry.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinally.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/TestTryFinallyNested.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/expression\/ExpressionElimination.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/expression\/TestExpressionElimination.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/parser\/TestParse.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/parser\/TestScanner.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/StreamFuser.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/StreamFuserUsingQuotable.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/TestStream.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/code\/stream\/TestStreamUsingQuotable.java"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ArrayAccessTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BinopTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BlockTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BoxingConversionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/BreakContinueTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/CastInstanceOfTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/CodeModelSameInstanceTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/CodeReflectionTester.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ConditionalAndOrTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ConditionalExpressionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ConstantsTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/DenotableTypesTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/EnumAccessTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/FieldAccessTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ForLoopTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/IR.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/IfTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ImplicitConversionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/IntersectionTypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/LambdaTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/LocalVarTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/MethodCallTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/MethodReferenceTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/NewArrayTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/NewTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/NullTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PatternsTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/PrimitiveCastTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/QuotableIntersectionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/QuotableSubtypeTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/QuotedSameInstanceTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/QuotedTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/SwitchExpressionTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/TestIRFromAnnotation.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/ThrowTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/TryTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/WhileLoopTest.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestAssignment.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestAssignment.out"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuotable.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuoted.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestGenericMethodCall.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestGenericMethodCall.out"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestMethodCall.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestMethodCall.out"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestRecovery.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestRecovery.out"}],"sha":"38abcc97ba1c0e7a49f0965a66acd71913303f82"},{"commit":{"message":"Update conf"},"files":[{"filename":".jcheck\/conf"}],"sha":"411da8ef435ede05641d888e2661cbee5a65e95b"}]