{"files":[{"patch":"@@ -560,1 +560,1 @@\n-                    case LeftShiftOp op -> {\n+                    case LshlOp op -> {\n@@ -569,1 +569,1 @@\n-                    case RightShiftOp op -> {\n+                    case AshrOp op -> {\n@@ -578,1 +578,1 @@\n-                    case UnsignedRightShiftOp op -> {\n+                    case LshrOp op -> {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2740,1 +2740,1 @@\n-     * The shift left operation, that can model the Java language binary {@code <<} operator for integral types\n+     * The (logical) shift left operation, that can model the Java language binary {@code <<} operator for integral types\n@@ -2742,3 +2742,3 @@\n-    @OpDeclaration(LeftShiftOp.NAME)\n-    public static final class LeftShiftOp extends BinaryOp {\n-        public static final String NAME = \"leftShift\";\n+    @OpDeclaration(LshlOp.NAME)\n+    public static final class LshlOp extends BinaryOp {\n+        public static final String NAME = \"lshl\";\n@@ -2746,1 +2746,1 @@\n-        public LeftShiftOp(OpDefinition opdef) {\n+        public LshlOp(OpDefinition opdef) {\n@@ -2750,1 +2750,1 @@\n-        LeftShiftOp(LeftShiftOp that, CopyContext cc) {\n+        LshlOp(LshlOp that, CopyContext cc) {\n@@ -2755,2 +2755,2 @@\n-        public LeftShiftOp transform(CopyContext cc, OpTransformer ot) {\n-            return new LeftShiftOp(this, cc);\n+        public LshlOp transform(CopyContext cc, OpTransformer ot) {\n+            return new LshlOp(this, cc);\n@@ -2759,1 +2759,1 @@\n-        LeftShiftOp(Value lhs, Value rhs) {\n+        LshlOp(Value lhs, Value rhs) {\n@@ -2765,1 +2765,1 @@\n-     * The shift right operation, that can model the Java language binary {@code >>} operator for integral types\n+     * The (arithmetic) shift right operation, that can model the Java language binary {@code >>} operator for integral types\n@@ -2767,3 +2767,3 @@\n-    @OpDeclaration(RightShiftOp.NAME)\n-    public static final class RightShiftOp extends CoreOps.BinaryOp {\n-        public static final String NAME = \"rightShift\";\n+    @OpDeclaration(AshrOp.NAME)\n+    public static final class AshrOp extends CoreOps.BinaryOp {\n+        public static final String NAME = \"ashr\";\n@@ -2771,1 +2771,1 @@\n-        public RightShiftOp(OpDefinition opdef) {\n+        public AshrOp(OpDefinition opdef) {\n@@ -2775,1 +2775,1 @@\n-        RightShiftOp(RightShiftOp that, CopyContext cc) {\n+        AshrOp(AshrOp that, CopyContext cc) {\n@@ -2780,2 +2780,2 @@\n-        public RightShiftOp transform(CopyContext cc, OpTransformer ot) {\n-            return new RightShiftOp(this, cc);\n+        public AshrOp transform(CopyContext cc, OpTransformer ot) {\n+            return new AshrOp(this, cc);\n@@ -2784,1 +2784,1 @@\n-        RightShiftOp(Value lhs, Value rhs) {\n+        AshrOp(Value lhs, Value rhs) {\n@@ -2790,1 +2790,1 @@\n-     * The unsigned shift right operation, that can model the Java language binary {@code >>>} operator for integral types\n+     * The unsigned (logical) shift right operation, that can model the Java language binary {@code >>>} operator for integral types\n@@ -2792,3 +2792,3 @@\n-    @OpDeclaration(UnsignedRightShiftOp.NAME)\n-    public static final class UnsignedRightShiftOp extends CoreOps.BinaryOp {\n-        public static final String NAME = \"unsignedRightShift\";\n+    @OpDeclaration(LshrOp.NAME)\n+    public static final class LshrOp extends CoreOps.BinaryOp {\n+        public static final String NAME = \"lshr\";\n@@ -2796,1 +2796,1 @@\n-        public UnsignedRightShiftOp(OpDefinition opdef) {\n+        public LshrOp(OpDefinition opdef) {\n@@ -2800,1 +2800,1 @@\n-        UnsignedRightShiftOp(UnsignedRightShiftOp that, CopyContext cc) {\n+        LshrOp(LshrOp that, CopyContext cc) {\n@@ -2805,2 +2805,2 @@\n-        public UnsignedRightShiftOp transform(CopyContext cc, OpTransformer ot) {\n-            return new UnsignedRightShiftOp(this, cc);\n+        public LshrOp transform(CopyContext cc, OpTransformer ot) {\n+            return new LshrOp(this, cc);\n@@ -2809,1 +2809,1 @@\n-        UnsignedRightShiftOp(Value lhs, Value rhs) {\n+        LshrOp(Value lhs, Value rhs) {\n@@ -3763,2 +3763,2 @@\n-    public static BinaryOp leftShift(Value lhs, Value rhs) {\n-        return new LeftShiftOp(lhs, rhs);\n+    public static BinaryOp lshl(Value lhs, Value rhs) {\n+        return new LshlOp(lhs, rhs);\n@@ -3774,2 +3774,2 @@\n-    public static BinaryOp rightShift(Value lhs, Value rhs) {\n-        return new RightShiftOp(lhs, rhs);\n+    public static BinaryOp ashr(Value lhs, Value rhs) {\n+        return new AshrOp(lhs, rhs);\n@@ -3785,2 +3785,2 @@\n-    public static BinaryOp unsignedRightShift(Value lhs, Value rhs) {\n-        return new UnsignedRightShiftOp(lhs, rhs);\n+    public static BinaryOp lshr(Value lhs, Value rhs) {\n+        return new LshrOp(lhs, rhs);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"}]}