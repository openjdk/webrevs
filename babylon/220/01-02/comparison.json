{"files":[{"patch":"@@ -1495,0 +1495,1 @@\n+\n@@ -1498,1 +1499,1 @@\n-            FunctionType actionType = FunctionType.functionType(typeToTypeElement(switchType));\n+            FunctionType caseBodyType = FunctionType.functionType(typeToTypeElement(switchType));\n@@ -1500,1 +1501,2 @@\n-            List<Body.Builder> bodies = visitSwitchStatAndExpr(tree, actionType, !tree.hasUnconditionalPattern);\n+            List<Body.Builder> bodies = visitSwitchStatAndExpr(tree, tree.selector, target, tree.cases, caseBodyType,\n+                    !tree.hasUnconditionalPattern);\n@@ -1502,1 +1504,1 @@\n-            result = append(ExtendedOp.switchExpression(actionType.returnType(), target, bodies));\n+            result = append(ExtendedOp.switchExpression(caseBodyType.returnType(), target, bodies));\n@@ -1507,0 +1509,1 @@\n+\n@@ -1511,1 +1514,1 @@\n-            List<Body.Builder> bodies = visitSwitchStatAndExpr(tree, actionType,\n+            List<Body.Builder> bodies = visitSwitchStatAndExpr(tree, tree.selector, target, tree.cases, actionType,\n@@ -1517,14 +1520,3 @@\n-        private List<Body.Builder> visitSwitchStatAndExpr(JCTree tree, FunctionType caseBodyType, boolean isDefaultCaseNeeded) {\n-            JCExpression selector;\n-            List<JCTree.JCCase> cases;\n-            if (tree instanceof JCTree.JCSwitch sw) {\n-                selector = sw.selector;\n-                cases = sw.cases;\n-            } else if (tree instanceof JCTree.JCSwitchExpression sw) {\n-                selector = sw.selector;\n-                cases = sw.cases;\n-            } else {\n-                throw new IllegalStateException();\n-            }\n-\n-            Value target = toValue(selector);\n+        private List<Body.Builder> visitSwitchStatAndExpr(JCTree tree, JCExpression selector, Value target,\n+                                                          List<JCTree.JCCase> cases, FunctionType caseBodyType,\n+                                                          boolean isDefaultCaseNeeded) {\n@@ -1538,2 +1530,2 @@\n-                Body.Builder caseLabel = visitCaseLabel(tree, target, c);\n-                Body.Builder caseBody = visitCaseBody(tree, c);\n+                Body.Builder caseLabel = visitCaseLabel(tree, selector, target, c);\n+                Body.Builder caseBody = visitCaseBody(c, caseBodyType);\n@@ -1572,11 +1564,1 @@\n-        private Body.Builder visitCaseLabel(JCTree tree, Value target, JCTree.JCCase c) {\n-            Body.Builder body;\n-\n-            JCExpression selector;\n-            if (tree instanceof JCTree.JCSwitch sw) {\n-                selector = sw.selector;\n-            } else if (tree instanceof JCTree.JCSwitchExpression sw) {\n-                selector = sw.selector;\n-            } else {\n-                throw new IllegalStateException();\n-            }\n+        private Body.Builder visitCaseLabel(JCTree tree, JCExpression selector, Value target, JCTree.JCCase c) {\n@@ -1584,0 +1566,1 @@\n+            Body.Builder body;\n@@ -1685,2 +1668,1 @@\n-        private Body.Builder visitCaseBody(JCTree tree, JCTree.JCCase c) {\n-            Body.Builder body = null;\n+        private Body.Builder visitCaseBody(JCTree.JCCase c, FunctionType caseBodyType) {\n@@ -1688,11 +1670,2 @@\n-            FunctionType caseBodyType;\n-            Type yieldType = null;\n-            if (tree instanceof JCTree.JCSwitch) {\n-                caseBodyType = FunctionType.VOID;\n-            } else if (tree instanceof JCTree.JCSwitchExpression) {\n-                Type switchType = adaptBottom(tree.type);\n-                caseBodyType = FunctionType.functionType(typeToTypeElement(switchType));\n-                yieldType = adaptBottom(tree.type);\n-            } else {\n-                throw new IllegalStateException();\n-            }\n+            Body.Builder body = null;\n+            Type yieldType = typeElementToType(caseBodyType.returnType());\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java","additions":17,"deletions":44,"binary":false,"changes":61,"status":"modified"}]}