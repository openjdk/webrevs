{"files":[{"patch":"@@ -1570,0 +1570,2 @@\n+\n+            \/\/ @@@ validate first operand is an array\n@@ -1634,1 +1636,1 @@\n-                return resultType(array, null);\n+                return array.type().componentType();\n@@ -1665,4 +1667,1 @@\n-                \/\/ resultType is void, but we still call resultType method because it has validations in it\n-                Value array = operands().get(0);\n-                Value value = operands().get(2);\n-                return resultType(array, value);\n+                return TypeDesc.VOID;\n@@ -2213,1 +2212,1 @@\n-            return getresultType(tupleValue, index);\n+            return tupleValue.type().typeArguments().get(index);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/CoreOps.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2843,1 +2843,2 @@\n-     *\n+     * <p>\n+     * The result type of the operation will be derived from the yield type of the second body\n@@ -2861,0 +2862,1 @@\n+        Objects.requireNonNull(resultType);\n@@ -3039,0 +3041,1 @@\n+        Objects.requireNonNull(expressionType);\n@@ -3044,0 +3047,2 @@\n+     * <p>\n+     * The result type of the operation will be derived from the yield type of the second body\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/op\/ExtendedOps.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}