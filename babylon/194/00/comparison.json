{"files":[{"patch":"@@ -1036,1 +1036,1 @@\n-            Value index = toValue(tree.index);\n+            Value index = toValue(tree.index, typeElementToType(JavaType.INT));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -339,0 +339,15 @@\n+    @CodeReflection\n+    @IR(\"\"\"\n+            func @\"test17\" (%0 : java.lang.Object[])java.lang.Object -> {\n+                %1 : Var<java.lang.Object[]> = var %0 @\"a\";\n+                %2 : java.lang.Object[] = var.load %1;\n+                %3 : char = constant @\"c\";\n+                %4 : int = conv %3;\n+                %5 : java.lang.Object = array.load %2 %4;\n+                return %5;\n+            };\n+            \"\"\")\n+    static Object test17(Object[] a) {\n+        return a['c'];\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/reflect\/ArrayAccessTest.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}