[{"commit":{"message":"Fix typo"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"}],"sha":"d2d35a3b0fe6c8539a59a5328097c2b8a269af66"},{"commit":{"message":"Update src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java\n\nCo-authored-by: Paul Sandoz <paul.d.sandoz@googlemail.com>"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"}],"sha":"1ae6a58c74c82e8e379476676fef55fb52f26578"},{"commit":{"message":"Address review comments"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuotable.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuoted.java"}],"sha":"fd8a9c2f1f74fd3b6480ba8458080baf47745304"},{"commit":{"message":"Drop spurious reference to `LambdaToMethod`"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"}],"sha":"b0115269f17f4c806e54852734f497f11e3dde8b"},{"commit":{"message":"Disable unsupported quotable lambdas"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"}],"sha":"fdf2cc2c11aaf7e58ed23709c9892049d8cc054e"},{"commit":{"message":"Remove dead code"},"files":[],"sha":"29ab3b740bf4b5489403826baf04035bd14db28c"},{"commit":{"message":"Simplify metafactory not to required duplicate captured args\nFix LambdaToMethod\/BytecodeGenerator not to duplicate captured args"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/AbstractValidatingLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java"}],"sha":"1398731537db6c75d1e3712f1b571d30892f2230"},{"commit":{"message":"Simplify functional expression trees\nremove CodeReflectionInfo\nwe still have duplicated arg lists"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransTypes.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java"}],"sha":"fda0e9a9c4847c35f1b578b32070a3523524e57c"},{"commit":{"message":"Cleanup code\n* create new visitor in ReflectMethods, leave LambdaToMethod unchanged\n* deal with constant captures in a better way, so that their ops are created upfront"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuotable.java"}],"sha":"f7ddd67e25e953b8a04e0bd10126957b25939185"},{"commit":{"message":"Initial push\n* Use visitor to collect capture arguments when creating BodyScanner\n* Captured arg lists are still duplicated"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java"},{"filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuotable.java"}],"sha":"75f85a6ae837fb627e2f6b50a5b2d7ffac856d02"}]