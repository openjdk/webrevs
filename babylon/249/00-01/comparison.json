{"files":[{"patch":"@@ -94,1 +94,0 @@\n-import java.util.stream.Collectors;\n@@ -96,1 +95,0 @@\n-import static com.sun.tools.javac.code.Flags.LOCAL_CAPTURE_FIELD;\n@@ -129,1 +127,0 @@\n-    private final LambdaToMethod lambdaToMethod;\n@@ -154,1 +151,0 @@\n-        lambdaToMethod = LambdaToMethod.instance(context);\n@@ -251,1 +247,1 @@\n-                        ListBuffer<JCExpression> capturedArgs = quotedCapturedArgs(tree, bodyScanner, null);\n+                        ListBuffer<JCExpression> capturedArgs = quotedCapturedArgs(tree, bodyScanner);\n@@ -313,1 +309,1 @@\n-    ListBuffer<JCExpression> quotedCapturedArgs(DiagnosticPosition pos, BodyScanner bodyScanner, JCVariableDecl recvDecl) {\n+    ListBuffer<JCExpression> quotedCapturedArgs(DiagnosticPosition pos, BodyScanner bodyScanner) {\n@@ -316,7 +312,1 @@\n-            if (capturedSym.kind == Kind.TYP) {\n-                \/\/ captured this\n-                capturedArgs.add(make.at(pos).This(capturedSym.type));\n-            } else if (recvDecl != null && capturedSym == recvDecl.sym) {\n-                \/\/ captured method reference receiver\n-                capturedArgs.add(make.at(pos).Ident(recvDecl.sym));\n-            } else if (capturedSym.kind == Kind.VAR) {\n+            if (capturedSym.kind == Kind.VAR) {\n@@ -327,3 +317,0 @@\n-                } else {\n-                    \/\/ skip\n-                    \/\/capturedArgs.add(make.at(pos).Literal(var.getConstValue()));\n@@ -335,0 +322,4 @@\n+        if (capturedArgs.size() < bodyScanner.top.body.entryBlock().parameters().size()) {\n+            \/\/ needs to capture 'this'\n+            capturedArgs.prepend(make.at(pos).This(currentClassSym.type));\n+        }\n@@ -536,1 +527,1 @@\n-            int blockArgOffset = 0;\n+            int blockParamOffset = 0;\n@@ -554,5 +545,0 @@\n-            \/\/ add \"this\" capture (if needed)\n-            if (lambdaCaptureScanner.capturesThis) {\n-                top.localToOp.put(currentClassSym, null); \/\/ @@@ just make translation happy\n-            }\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ReflectMethods.java","additions":8,"deletions":22,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    public void testCaptureRefAndIntConstant() {\n+    public void testCaptureThisRefAndIntConstant() {\n@@ -64,1 +64,1 @@\n-        Quotable quotable = (Quotable & ToIntFunction<Number>)y -> y.intValue() + hello.length() + x;\n+        Quotable quotable = (Quotable & ToIntFunction<Number>)y -> y.intValue() + hashCode() + hello.length() + x;\n@@ -66,1 +66,1 @@\n-        assertEquals(quoted.capturedValues().size(), 2);\n+        assertEquals(quoted.capturedValues().size(), 3);\n@@ -68,0 +68,1 @@\n+        assertEquals(it.next(), this);\n@@ -72,1 +73,1 @@\n-        assertEquals(res, x + 1 + hello.length());\n+        assertEquals(res, x + 1 + hashCode() + hello.length());\n","filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuotable.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.lang.reflect.code.Quotable;\n@@ -35,0 +36,2 @@\n+import java.util.Iterator;\n+import java.util.function.ToIntFunction;\n@@ -74,0 +77,15 @@\n+    @Test\n+    public void testCaptureThisRefAndIntConstant() {\n+        final int x = 100;\n+        String hello = \"hello\";\n+        Quoted quoted = (Integer y) -> y.intValue() + hashCode() + hello.length() + x;\n+        assertEquals(quoted.capturedValues().size(), 3);\n+        Iterator<Object> it = quoted.capturedValues().values().iterator();\n+        assertEquals(it.next(), this);\n+        assertEquals(((Var)it.next()).value(), hello);\n+        assertEquals(it.next(), x);\n+        int res = (int)Interpreter.invoke(MethodHandles.lookup(), (Op & Op.Invokable) quoted.op(),\n+                quoted.capturedValues(), 1);\n+        assertEquals(res, x + 1 + hashCode() + hello.length());\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/reflect\/quoted\/TestCaptureQuoted.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}