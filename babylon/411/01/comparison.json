{"files":[{"patch":"@@ -42,1 +42,2 @@\n-public sealed interface ConstructorRef extends TypeVarRef.Owner permits ConstructorRefImpl {\n+public sealed interface ConstructorRef extends JavaRef, TypeVarRef.Owner\n+        permits ConstructorRefImpl {\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/ConstructorRef.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,1 +37,2 @@\n-public sealed interface FieldRef permits FieldRefImpl {\n+public sealed interface FieldRef extends JavaRef\n+        permits FieldRefImpl {\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/FieldRef.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,28 @@\n+package jdk.incubator.code.type;\n+\n+\/**\n+ * A symbolic reference to a Java class member or type, commonly containing\n+ * symbolic names together with {@link JavaType symbolic descriptions} of Java types.\n+ * <p>\n+ * A symbolic Java reference can be resolved to a corresponding instance of its\n+ * reflected representation, much like the symbolic description of a Java type\n+ * can be resolved to an instance of {@link java.lang.reflect.Type Type}.\n+ *\/\n+public sealed interface JavaRef\n+    permits MethodRef, ConstructorRef, FieldRef, RecordTypeRef {\n+    \/\/ @@@ Extend from TypeElement\n+    \/\/     - Uniform externalization of Java types and Java refs,\n+    \/\/       therefore we don't require specific string representations\n+    \/\/       and parser implementations. (Human readability of Java types\n+    \/\/       and refs is a separate issue.)\n+    \/\/       e.g., the description of a type-variable reference Java type\n+    \/\/       (TypeVarRef) contains an owner, a description of Java class\n+    \/\/       or a symbolic reference to a Java method or constructor.\n+    \/\/ @@@ Enhance TypeElement to traverse children\n+    \/\/     - Uniform tree traversal and transformation independent of\n+    \/\/       externalization.\n+    \/\/ @@@ Make RecordTypeRef.ComponentRef implement JavaRef\n+    \/\/     - resolve to accessor method\n+    \/\/     - (RecordTypeRef resolves to Class.)\n+    \/\/ @@@ AnnotatedElement is the common top type for resolved Java refs and types\n+}\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/JavaRef.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -46,1 +46,2 @@\n-public sealed interface MethodRef extends TypeVarRef.Owner permits MethodRefImpl {\n+public sealed interface MethodRef extends JavaRef, TypeVarRef.Owner\n+        permits MethodRefImpl {\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/MethodRef.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,1 +36,2 @@\n-public sealed interface RecordTypeRef permits RecordTypeRefImpl {\n+public sealed interface RecordTypeRef extends JavaRef\n+        permits RecordTypeRefImpl {\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/type\/RecordTypeRef.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}