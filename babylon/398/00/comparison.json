{"files":[{"patch":"@@ -9,1 +9,0 @@\n-\n@@ -57,1 +56,0 @@\n-            -lcudart\n@@ -71,1 +69,0 @@\n-            -lcudart\n@@ -77,1 +74,0 @@\n-            -lcudart\n","filename":"hat\/backends\/ffi\/cuda\/CMakeLists.txt","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4,3 +4,5 @@\n-set(OSX_SDK ${CMAKE_OSX_SYSROOT})\n-set(OSX_SDK_LIBRARY_FRAMEWORKS ${OSX_SDK}\/System\/Library\/Frameworks)\n-set(OSX_SYS_LIBRARY_FRAMEWORKS \/System\/Library\/Frameworks)\n+if (Apple)\n+   set(OSX_SDK ${CMAKE_OSX_SYSROOT})\n+   set(OSX_SDK_LIBRARY_FRAMEWORKS ${OSX_SDK}\/System\/Library\/Frameworks)\n+   set(OSX_SYS_LIBRARY_FRAMEWORKS \/System\/Library\/Frameworks)\n+else()\n@@ -8,0 +10,5 @@\n+endif()\n+get_cmake_property(_variableNames VARIABLES)\n+foreach (_variableName ${_variableNames})\n+    message(STATUS \"${_variableName}=${${_variableName}}\")\n+endforeach()\n@@ -26,2 +33,2 @@\n-find_package(CUDA)\n-if(CUDA_FOUND)\n+find_package(CUDAToolkit)\n+if(CUDATOOLKIT_FOUND)\n@@ -35,2 +42,0 @@\n-\n-\n","filename":"hat\/extractions\/CMakeLists.txt","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -10,0 +10,3 @@\n+if (Apple)\n+\n+else()\n@@ -12,1 +15,0 @@\n-   #COMMAND echo -F${OSX_SDK_LIBRARY_FRAMEWORKS} > ${CMAKE_BINARY_DIR}\/compile_flags.txt\n@@ -16,1 +18,1 @@\n-       --library :${OSX_SYS_LIBRARY_FRAMEWORKS}\/OpenCL.framework\/OpenCL \n+       --library :${CUDA_cuda_driver_LIBRARY}\n@@ -18,1 +20,1 @@\n-       ${OSX_SDK_LIBRARY_FRAMEWORKS}\/OpenCL.framework\/Headers\/opencl.h\n+       ${CUDAToolkit_INCLUDE_DIR}\/cuda.h\n@@ -22,0 +24,4 @@\n+#CUDAToolkit_INCLUDE_DIR=\/usr\/local\/cuda-12.2\/include\n+#CUDA_cuda_driver_LIBRARY =\/usr\/lib\/aarch64-linux-gnu\/libcuda.so\n+\n+endif()\n@@ -23,1 +29,1 @@\n-add_custom_target(extract_opencl DEPENDS  ${JEXTRACT_HEADER})\n+add_custom_target(extract_cuda DEPENDS  ${JEXTRACT_HEADER})\n","filename":"hat\/extractions\/cuda\/CMakeLists.txt","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -9,1 +9,2 @@\n-    \n+\n+if (APPLE)\n@@ -23,0 +24,22 @@\n+else()\n+add_custom_command(OUTPUT  ${JEXTRACT_HEADER}\n+   COMMAND mkdir -p ${JEXTRACT_SOURCE}\n+   COMMAND jextract \n+       --target-package ${JEXTRACT_PACKAGE} \n+       --output ${JEXTRACT_SOURCE} \n+       --library :\/usr\/lib\/aarch64-linux-gnu\/libOpenGL.so\n+       --library :\/usr\/lib\/aarch64-linux-gnu\/libGLU.so\n+       --header-class-name ${JEXTRACT_PACKAGE}_h\n+       \/usr\/include\/GL\/glut.h\n+   WORKING_DIRECTORY \"${CMAKE_BINARY_DIR}\"\n+   VERBATIM\n+)\n+\n+# --target-package opengl \\\n+#    --output \/home\/gfrost\/github\/grfrost\/babylon-grfrost-fork\/hat\/stage\/jextract \\\n+#    --library :\/usr\/lib\/aarch64-linux-gnu\/libOpenGL.so:\/usr\/lib\/aarch64-linux-gnu\/libGLU.so\\\n+#     \/usr\/include\/GL\/glut.h\n+\n+#    --library :\/usr\/lib\/aarch64-linux-gnu\/libOpenGL.so:\/usr\/lib\/aarch64-linux-gnu\/libGLX.so:\/usr\/lib\/aarch64-linux-gnu\/libGLU.so\/libOpenGL.so \\ \/usr\/include\/GL\/glut.h\n+\n+endif()\n","filename":"hat\/extractions\/opengl\/CMakeLists.txt","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -140,11 +140,13 @@\n-           │   ├── repo\/\n-           │   │   └── *                               \/\/ Maven artifacts (poms and jars)\n-           │   ├── opencl_jextracted\/                  \/\/ All jextracted files (created using java @hat\/extract\n-           │   │   ├── compile_flags.txt\n-           │   │   └── opencl\n-           │   ├── cuda_jextracted\/\n-           │   │   ├── compile_flags.txt\n-           │   │   └── cuda\n-           │   └── opengl_jextracted\/\n-           │       ├── compile_flags.txt\n-           │       └── opengl\n+           │   └── repo\/\n+           │       └── *                               \/\/ Maven artifacts (poms and jars)\n+           ├──extractions\/\n+           │   ├──CMakeFiles.txt\n+           │   ├── opencl\/                             \/\/ Maven style layout\n+           │   │   ├── CMakeFiles.txt\n+           │   │   └── src\/main\/java\/opencl            \/\/ created by cmake\n+           │   ├── cuda\/                               \/\/ Maven style layout\n+           │   │   ├── CMakeFiles.txt\n+           │   │   └── src\/main\/java\/cuda              \/\/ created by cmake\n+           │   └── opengl\/                             \/\/ Maven style layout\n+           │       ├── CMakeFiles.txt\n+           │       └── src\/main\/java\/opengl            \/\/ created by cmake\n@@ -223,1 +225,1 @@\n-    if (jextractedOpenCLDir.exists()) {\n+    if (jextractedOpenCLDir.dir(\"src\").exists()) {\n@@ -226,0 +228,1 @@\n+\n@@ -229,1 +232,1 @@\n-    if (jextractedOpenGLDir.exists()) {\n+    if (jextractedOpenGLDir.dir(\"src\").exists()) {\n@@ -232,0 +235,7 @@\n+\n+    var extractedCudaJar = buildDir.jarFile(\"hat-jextracted-cuda-1.0.jar\");\n+    var jextractedCudaDir = extractionsDir.dir(\"cuda\");\n+    if (jextractedCudaDir.dir(\"src\").exists()) {\n+        MavenStyleProject.of(jextractedCudaDir,extractedCudaJar).build();\n+    }\n+\n@@ -254,4 +264,3 @@\n-    var extractedCudaJar = buildDir.jarFile(\"hat-jextracted-cuda-1.0.jar\");\n-    var cuWrap = MavenStyleProject.of(wrapsDir.dir(\"cuwrap\"), buildDir.jarFile(\"hat-cuwrap-1.0.jar\"),\n-            extractedCudaJar\n-    ).build();\n+    \/\/var cuWrap = MavenStyleProject.of(wrapsDir.dir(\"cuwrap\"), buildDir.jarFile(\"hat-cuwrap-1.0.jar\"),\n+     \/\/       extractedCudaJar\n+    \/\/).build();\n","filename":"hat\/hat\/bld.java","additions":26,"deletions":17,"binary":false,"changes":43,"status":"modified"}]}