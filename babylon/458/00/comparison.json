{"files":[{"patch":"@@ -96,1 +96,1 @@\n-                import jdk.incubator.code.dialect.OpFactory;\n+                import jdk.incubator.code.extern.OpFactory;\n","filename":"cr-examples\/onnx\/opgen\/src\/main\/java\/oracle\/code\/onnx\/opgen\/OpGen.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/OnnxProtoBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.ExternalizableOp;\n+import jdk.incubator.code.extern.OpFactory;\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/ir\/ExplicitOnnxOps.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n+import jdk.incubator.code.extern.ExternalizableOp;\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/ir\/OnnxOp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.OpFactory;\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/ir\/OnnxOps.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n-import jdk.incubator.code.dialect.TypeElementFactory;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.TypeElementFactory;\n","filename":"cr-examples\/onnx\/src\/main\/java\/oracle\/code\/onnx\/ir\/OnnxType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/CNNTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.ExternalizableOp;\n+import jdk.incubator.code.extern.OpFactory;\n@@ -52,1 +52,1 @@\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"cr-examples\/onnx\/src\/test\/java\/oracle\/code\/onnx\/proto\/OnnxModelTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n","filename":"cr-examples\/spirv\/src\/main\/java\/intel\/code\/spirv\/SpirvType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.ExternalizableOp;\n+import jdk.incubator.code.extern.OpFactory;\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/ArithMathOps.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -9,1 +9,1 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n+import jdk.incubator.code.extern.ExternalizableOp;\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/MLIRGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.ExternalizableOp;\n+import jdk.incubator.code.extern.OpFactory;\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/SCFOps.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import jdk.incubator.code.dialect.*;\n+import jdk.incubator.code.extern.*;\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonOps.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.ExternalizableOp;\n+import jdk.incubator.code.extern.OpFactory;\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonTestOps.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n","filename":"cr-examples\/triton\/src\/main\/java\/oracle\/code\/triton\/TritonType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.incubator.code.dialect.DialectFactory;\n+import jdk.incubator.code.extern.DialectFactory;\n@@ -47,1 +47,1 @@\n-import jdk.incubator.code.parser.OpParser;\n+import jdk.incubator.code.extern.OpParser;\n","filename":"cr-examples\/triton\/src\/test\/java\/oracle\/code\/triton\/TritonTestExtension.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n+import jdk.incubator.code.extern.ExternalizableOp;\n","filename":"hat\/backends\/ffi\/cuda\/src\/main\/java\/hat\/backend\/ffi\/PTXHATKernelBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,3 +39,3 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.ExternalizableOp;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.OpFactory;\n","filename":"hat\/examples\/experiments\/src\/main\/java\/experiments\/LayoutExample.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,3 +38,3 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.ExternalizableOp;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.OpFactory;\n","filename":"hat\/examples\/experiments\/src\/main\/java\/experiments\/RawLayout.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,3 +44,3 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.ExternalizableOp;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.OpFactory;\n","filename":"hat\/hat-core\/src\/main\/java\/hat\/OpsAndTypes.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/Op.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/TypeElement.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/analysis\/Liveness.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-import jdk.incubator.code.parser.OpParser;\n+import jdk.incubator.code.extern.OpParser;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/bytecode\/BytecodeGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.ExternalizableOp;\n+import jdk.incubator.code.extern.OpFactory;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/bytecode\/SlotOp.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/bytecode\/UnresolvedType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.ExternalizableOp;\n+import jdk.incubator.code.extern.OpFactory;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/core\/CoreOp.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n@@ -6,1 +6,1 @@\n-import jdk.incubator.code.dialect.TypeElementFactory;\n+import jdk.incubator.code.extern.TypeElementFactory;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/core\/CoreType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n-import jdk.incubator.code.dialect.DialectFactory;\n-import jdk.incubator.code.dialect.TypeElementFactory;\n+import jdk.incubator.code.extern.DialectFactory;\n+import jdk.incubator.code.extern.TypeElementFactory;\n@@ -33,2 +33,2 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.OpFactory;\n+import jdk.incubator.code.extern.ExternalizableOp;\n+import jdk.incubator.code.extern.OpFactory;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/java\/JavaOp.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/java\/JavaRef.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/java\/JavaType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/java\/TypeVariableType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement.ExternalizedTypeElement;\n+import jdk.incubator.code.extern.ExternalizableTypeElement.ExternalizedTypeElement;\n@@ -6,3 +6,3 @@\n-import jdk.incubator.code.parser.impl.Lexer;\n-import jdk.incubator.code.parser.impl.Scanner;\n-import jdk.incubator.code.parser.impl.Tokens;\n+import jdk.incubator.code.extern.impl.Lexer;\n+import jdk.incubator.code.extern.impl.Scanner;\n+import jdk.incubator.code.extern.impl.Tokens;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/java\/impl\/JavaTypeUtils.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,29 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * Functionality for dialects, operations and types, declared in code models that can represent program functionality.\n- *\/\n-package jdk.incubator.code.dialect;\n\\ No newline at end of file\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/package-info.java","additions":0,"deletions":29,"binary":false,"changes":29,"status":"deleted"},{"patch":"@@ -1,1 +1,1 @@\n-package jdk.incubator.code.dialect;\n+package jdk.incubator.code.extern;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/DialectFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/DialectFactory.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.dialect;\n+package jdk.incubator.code.extern;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/ExternalizableOp.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/ExternalizableOp.java","status":"renamed"},{"patch":"@@ -1,1 +1,1 @@\n-package jdk.incubator.code.dialect;\n+package jdk.incubator.code.extern;\n@@ -101,1 +101,1 @@\n-            return jdk.incubator.code.parser.impl.DescParser.parseExTypeElem(s);\n+            return jdk.incubator.code.extern.impl.DescParser.parseExTypeElem(s);\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/ExternalizableTypeElement.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/ExternalizableTypeElement.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.writer;\n+package jdk.incubator.code.extern;\n@@ -29,4 +29,0 @@\n-import jdk.incubator.code.dialect.DialectFactory;\n-import jdk.incubator.code.dialect.OpFactory;\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.TypeElementFactory;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/OpBuilder.java","additions":1,"deletions":5,"binary":false,"changes":6,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/writer\/OpBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.dialect;\n+package jdk.incubator.code.extern;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/OpFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/OpFactory.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.parser;\n+package jdk.incubator.code.extern;\n@@ -31,5 +31,1 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement.*;\n-import jdk.incubator.code.dialect.DialectFactory;\n-import jdk.incubator.code.dialect.ExternalizableOp;\n-import jdk.incubator.code.dialect.OpFactory;\n-import jdk.incubator.code.dialect.TypeElementFactory;\n+import jdk.incubator.code.extern.ExternalizableTypeElement.*;\n@@ -39,5 +35,5 @@\n-import jdk.incubator.code.parser.impl.Tokens.TokenKind;\n-import jdk.incubator.code.parser.impl.DescParser;\n-import jdk.incubator.code.parser.impl.Lexer;\n-import jdk.incubator.code.parser.impl.Scanner;\n-import jdk.incubator.code.parser.impl.Tokens;\n+import jdk.incubator.code.extern.impl.Tokens.TokenKind;\n+import jdk.incubator.code.extern.impl.DescParser;\n+import jdk.incubator.code.extern.impl.Lexer;\n+import jdk.incubator.code.extern.impl.Scanner;\n+import jdk.incubator.code.extern.impl.Tokens;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/OpParser.java","additions":7,"deletions":11,"binary":false,"changes":18,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/OpParser.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.writer;\n+package jdk.incubator.code.extern;\n@@ -33,1 +33,0 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/OpWriter.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/writer\/OpWriter.java","status":"renamed"},{"patch":"@@ -1,1 +1,1 @@\n-package jdk.incubator.code.dialect;\n+package jdk.incubator.code.extern;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/TypeElementFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/dialect\/TypeElementFactory.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.parser.impl;\n+package jdk.incubator.code.extern.impl;\n@@ -28,2 +28,2 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n-import jdk.incubator.code.parser.impl.Tokens.TokenKind;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.impl.Tokens.TokenKind;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/impl\/DescParser.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/DescParser.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.parser.impl;\n+package jdk.incubator.code.extern.impl;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/impl\/Errors.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/Errors.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.parser.impl;\n+package jdk.incubator.code.extern.impl;\n@@ -28,1 +28,1 @@\n-import jdk.incubator.code.parser.impl.Tokens.TokenKind;\n+import jdk.incubator.code.extern.impl.Tokens.TokenKind;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/impl\/JavaBasedTokenizer.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/JavaBasedTokenizer.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.parser.impl;\n+package jdk.incubator.code.extern.impl;\n@@ -28,2 +28,2 @@\n-import jdk.incubator.code.parser.impl.Position.LineMap;\n-import jdk.incubator.code.parser.impl.Tokens.Token;\n+import jdk.incubator.code.extern.impl.Position.LineMap;\n+import jdk.incubator.code.extern.impl.Tokens.Token;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/impl\/Lexer.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/Lexer.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.parser.impl;\n+package jdk.incubator.code.extern.impl;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/impl\/Log.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/Log.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.parser.impl;\n+package jdk.incubator.code.extern.impl;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/impl\/Position.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/Position.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.parser.impl;\n+package jdk.incubator.code.extern.impl;\n@@ -28,1 +28,1 @@\n-import jdk.incubator.code.parser.impl.Position.LineMap;\n+import jdk.incubator.code.extern.impl.Position.LineMap;\n@@ -34,2 +34,2 @@\n-import static jdk.incubator.code.parser.impl.Tokens.DUMMY;\n-import static jdk.incubator.code.parser.impl.Tokens.Token;\n+import static jdk.incubator.code.extern.impl.Tokens.DUMMY;\n+import static jdk.incubator.code.extern.impl.Tokens.Token;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/impl\/Scanner.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/Scanner.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.parser.impl;\n+package jdk.incubator.code.extern.impl;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/impl\/Tokens.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/Tokens.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.code.parser.impl;\n+package jdk.incubator.code.extern.impl;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/impl\/UnicodeReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/parser\/impl\/UnicodeReader.java","status":"renamed"},{"patch":"@@ -0,0 +1,29 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * Functionality externalizing and reconstituting code models.\n+ *\/\n+package jdk.incubator.code.extern;\n\\ No newline at end of file\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/extern\/package-info.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"},{"patch":"@@ -65,1 +65,1 @@\n-        Type opParserType = syms.enterClass(jdk_incubator_code, \"jdk.incubator.code.parser.OpParser\");\n+        Type opParserType = syms.enterClass(jdk_incubator_code, \"jdk.incubator.code.extern.OpParser\");\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/CodeReflectionSymbols.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-import jdk.incubator.code.dialect.DialectFactory;\n+import jdk.incubator.code.extern.DialectFactory;\n@@ -94,1 +94,1 @@\n-import jdk.incubator.code.writer.OpBuilder;\n+import jdk.incubator.code.extern.OpBuilder;\n","filename":"src\/jdk.incubator.code\/share\/classes\/jdk\/incubator\/code\/internal\/ReflectMethods.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,2 +42,1 @@\n-    exports jdk.incubator.code.parser;\n-    exports jdk.incubator.code.dialect;\n+    exports jdk.incubator.code.extern;\n@@ -49,1 +48,0 @@\n-    exports jdk.incubator.code.writer;\n","filename":"src\/jdk.incubator.code\/share\/classes\/module-info.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n+import jdk.incubator.code.extern.ExternalizableOp;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestCopy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.incubator.code.parser.OpParser;\n+import jdk.incubator.code.extern.OpParser;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestDominate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestExpressionGraphs.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import jdk.incubator.code.dialect.core.CoreOp;\n@@ -41,1 +40,1 @@\n-import jdk.incubator.code.parser.OpParser;\n+import jdk.incubator.code.extern.OpParser;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestLiveness.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-import jdk.incubator.code.parser.OpParser;\n+import jdk.incubator.code.extern.OpParser;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestNormalizeBlocksTransformer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestSwitchExpressionOp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestSwitchStatementOp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-import jdk.incubator.code.parser.OpParser;\n+import jdk.incubator.code.extern.OpParser;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestUsesDependsOn.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-import jdk.incubator.code.parser.OpParser;\n+import jdk.incubator.code.extern.OpParser;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/TestVarOp.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n+import jdk.incubator.code.extern.ExternalizableOp;\n@@ -32,1 +32,1 @@\n-import static jdk.incubator.code.dialect.OpFactory.*;\n+import static jdk.incubator.code.extern.OpFactory.*;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/anf\/AnfDialect.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/bytecode\/Verifier.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,2 +40,2 @@\n-import jdk.incubator.code.parser.OpParser;\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpParser;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/location\/TestLocation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n-import jdk.incubator.code.parser.OpParser;\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpParser;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/lower\/CodeReflectionTester.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n- * @modules jdk.incubator.code\/jdk.incubator.code.parser.impl\n@@ -38,1 +37,1 @@\n-import jdk.incubator.code.parser.OpParser;\n+import jdk.incubator.code.extern.OpParser;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/parser\/TestParse.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-import jdk.incubator.code.parser.impl.Scanner;\n-import jdk.incubator.code.parser.impl.Tokens;\n+import jdk.incubator.code.extern.impl.Scanner;\n+import jdk.incubator.code.extern.impl.Tokens;\n@@ -33,1 +33,1 @@\n-import static jdk.incubator.code.parser.impl.Tokens.TokenKind.*;\n+import static jdk.incubator.code.extern.impl.Tokens.TokenKind.*;\n@@ -37,1 +37,1 @@\n- * @modules jdk.incubator.code\/jdk.incubator.code.parser.impl\n+ * @modules jdk.incubator.code\/jdk.incubator.code.extern.impl\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/parser\/TestScanner.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n-import jdk.incubator.code.parser.OpParser;\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpParser;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/pe\/CodeReflectionTester.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-import jdk.incubator.code.dialect.ExternalizableTypeElement;\n+import jdk.incubator.code.extern.ExternalizableTypeElement;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/type\/TestReferences.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-import jdk.incubator.code.dialect.ExternalizableOp;\n+import jdk.incubator.code.extern.ExternalizableOp;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/TestAttributeSerialization.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-import jdk.incubator.code.dialect.DialectFactory;\n+import jdk.incubator.code.extern.DialectFactory;\n@@ -37,1 +37,1 @@\n-import jdk.incubator.code.writer.OpBuilder;\n+import jdk.incubator.code.extern.OpBuilder;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/TestCodeBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/TestNaming.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"test\/jdk\/java\/lang\/reflect\/code\/writer\/TestOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,2 +31,2 @@\n-import jdk.incubator.code.parser.OpParser;\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpParser;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"test\/langtools\/tools\/javac\/reflect\/CodeReflectionTester.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,2 +42,2 @@\n-import jdk.incubator.code.parser.OpParser;\n-import jdk.incubator.code.writer.OpWriter;\n+import jdk.incubator.code.extern.OpParser;\n+import jdk.incubator.code.extern.OpWriter;\n","filename":"test\/langtools\/tools\/javac\/reflect\/TestIRFromAnnotation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}