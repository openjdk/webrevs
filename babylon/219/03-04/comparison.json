{"files":[{"patch":"@@ -373,1 +373,1 @@\n-    \/\/ Combo of ConstantOp and VarOp can be deferred if all its VarLoadOp are dominated by VarStoreOp\n+    \/\/ Combo of ConstantOp and VarOp can be deferred if all its VarLoadOps are dominated by VarStoreOp\n@@ -377,7 +377,5 @@\n-            Set<Op.Result> storeResults = allUses.stream().filter(r -> r.op() instanceof VarAccessOp.VarStoreOp).collect(Collectors.toSet());\n-            \/\/ All VarLoadOp must be dominated by a VarStoreOp\n-            for (Op.Result loadResult : allUses) {\n-                if (loadResult.op() instanceof VarAccessOp.VarLoadOp) {\n-                    if (!isDominatedBy(loadResult, storeResults)) {\n-                        return false;\n-                    }\n+            Set<Op.Result> stores = allUses.stream().filter(r -> r.op() instanceof VarAccessOp.VarStoreOp).collect(Collectors.toSet());\n+            \/\/ All VarLoadOps must be dominated by a VarStoreOp\n+            for (Op.Result load : allUses) {\n+                if (load.op() instanceof VarAccessOp.VarLoadOp && !isDominatedBy(load, stores)) {\n+                    return false;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/code\/bytecode\/BytecodeGenerator.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"}]}