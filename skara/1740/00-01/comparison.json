{"files":[{"patch":"@@ -62,1 +62,1 @@\n-        var files = PullRequestUtils.changedFilesIgnoringMerges(pr, localRepo);\n+        var files = PullRequestUtils.changedFiles(pr, localRepo);\n@@ -147,1 +147,1 @@\n-                    var changedFiles = PullRequestUtils.changedFilesIgnoringMerges(pr, localRepo, new Hash(evaluatedCommitHash));\n+                    var changedFiles = PullRequestUtils.changedFiles(pr, localRepo, new Hash(evaluatedCommitHash));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerWorkItem.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -195,1 +195,0 @@\n-     * This method ignores merge commits and all the commits brought in by merges.\n@@ -197,2 +196,2 @@\n-    public static Set<Path> changedFilesIgnoringMerges(PullRequest pr, Repository localRepo) throws IOException {\n-        return changedFilesIgnoringMergesBetween(localRepo, baseHash(pr, localRepo), pr.headHash());\n+    public static Set<Path> changedFiles(PullRequest pr, Repository localRepo) throws IOException {\n+        return changedFilesBetween(localRepo, baseHash(pr, localRepo), pr.headHash());\n@@ -203,1 +202,0 @@\n-     * This method ignores merge commits and all the commits brought in by merges.\n@@ -205,1 +203,1 @@\n-    public static Set<Path> changedFilesIgnoringMerges(PullRequest pr, Repository localRepo, Hash commitHash) throws IOException {\n+    public static Set<Path> changedFiles(PullRequest pr, Repository localRepo, Hash commitHash) throws IOException {\n@@ -208,1 +206,1 @@\n-            return changedFilesIgnoringMerges(pr, localRepo);\n+            return changedFiles(pr, localRepo);\n@@ -210,1 +208,1 @@\n-        return changedFilesIgnoringMergesBetween(localRepo, commitHash, pr.headHash());\n+        return changedFilesBetween(localRepo, commitHash, pr.headHash());\n@@ -213,16 +211,9 @@\n-    private static Set<Path> changedFilesIgnoringMergesBetween(Repository localRepo, Hash from, Hash to) throws IOException {\n-        Set<Path> changesFiles = new HashSet<>();\n-        Optional<Commit> current = localRepo.lookup(to);\n-        while (current.isPresent() && !current.get().hash().equals(from)) {\n-            List<Hash> parents = current.get().parents();\n-            if (!parents.isEmpty()) {\n-                Hash parent = parents.getFirst();\n-                if (parents.size() == 1) {\n-                    var changes = localRepo.diff(parent, current.get().hash());\n-                    for (var patch : changes.patches()) {\n-                        addPatchFiles(changesFiles, patch);\n-                    }\n-                }\n-                current = localRepo.lookup(parent);\n-            } else {\n-                break;\n+    private static Set<Path> changedFilesBetween(Repository localRepo, Hash from, Hash to) throws IOException {\n+        Set<Path> changedFiles = new HashSet<>();\n+\n+        Set<Path> mergeBaseToFromChangedFiles = getChangedFilesSinceMergeBase(localRepo, from);\n+        Set<Path> mergeBaseToToChangedFiles = getChangedFilesSinceMergeBase(localRepo, to);\n+\n+        for (Path file : mergeBaseToToChangedFiles) {\n+            if (!mergeBaseToFromChangedFiles.contains(file)) {\n+                changedFiles.add(file);\n@@ -231,1 +222,1 @@\n-        return changesFiles;\n+        return changedFiles;\n@@ -234,6 +225,11 @@\n-    private static void addPatchFiles(Set<Path> ret, Patch patch) {\n-        if (patch.status().isDeleted() || patch.status().isRenamed()) {\n-            patch.source().path().ifPresent(ret::add);\n-        }\n-        if (!patch.status().isDeleted()) {\n-            patch.target().path().ifPresent(ret::add);\n+    private static Set<Path> getChangedFilesSinceMergeBase(Repository localRepo, Hash commit) throws IOException {\n+        Set<Path> changedFiles = new HashSet<>();\n+        Hash mergeBase = localRepo.mergeBase(targetHash(localRepo), commit);\n+        var diff = localRepo.diff(mergeBase, commit);\n+        for (var patch : diff.patches()) {\n+            if (patch.status().isDeleted() || patch.status().isRenamed()) {\n+                patch.source().path().ifPresent(changedFiles::add);\n+            }\n+            if (!patch.status().isDeleted()) {\n+                patch.target().path().ifPresent(changedFiles::add);\n+            }\n@@ -241,0 +237,1 @@\n+        return changedFiles;\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequestUtils.java","additions":27,"deletions":30,"binary":false,"changes":57,"status":"modified"}]}