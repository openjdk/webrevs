{"files":[{"patch":"@@ -35,0 +35,1 @@\n+import org.openjdk.skara.jcheck.TooFewReviewersIssue;\n@@ -599,1 +600,1 @@\n-    private Optional<String> getReviewersList() {\n+    private Optional<String> getReviewersList(boolean tooFewReviewers) {\n@@ -601,23 +602,37 @@\n-                               .filter(review -> review.verdict() == Review.Verdict.APPROVED)\n-                               .map(review -> {\n-                                   var entry = \" * \" + formatReviewer(review.reviewer());\n-                                   if (!review.targetRef().equals(pr.targetRef())) {\n-                                       entry += \" üîÑ Re-review required (review was made when pull request targeted the [\" + review.targetRef()\n-                                               + \"](\" + pr.repository().webUrl(new Branch(review.targetRef())) + \") branch)\";\n-                                   } else {\n-                                       var hash = review.hash();\n-                                       if (hash.isPresent()) {\n-                                           if (!reviewCoverage.covers(review)) {\n-                                               entry += \" üîÑ Re-review required (review applies to [\" + hash.get().abbreviate()\n-                                                       + \"](\" + pr.filesUrl(hash.get()) + \"))\";\n-                                           } else {\n-                                               entry += \" ‚ö†Ô∏è Review applies to [\" + hash.get().abbreviate()\n-                                                       + \"](\" + pr.filesUrl(hash.get()) + \")\";\n-                                           }\n-                                       } else {\n-                                           entry += \" üîÑ Re-review required (review applies to a commit that is no longer present)\";\n-                                       }\n-                                   }\n-                                   return entry;\n-                               })\n-                               .collect(Collectors.joining(\"\\n\"));\n+                .filter(review -> review.verdict() == Review.Verdict.APPROVED)\n+                .map(review -> {\n+                    var entry = \" * \" + formatReviewer(review.reviewer());\n+                    if (!review.targetRef().equals(pr.targetRef())) {\n+                        if (useStaleReviews || tooFewReviewers) {\n+                            entry += \" üîÑ Re-review required (review was made when pull request targeted the [\" + review.targetRef()\n+                                    + \"](\" + pr.repository().webUrl(new Branch(review.targetRef())) + \") branch)\";\n+                        } else {\n+                            entry += \" Review was made when pull request targeted the [\" + review.targetRef()\n+                                    + \"](\" + pr.repository().webUrl(new Branch(review.targetRef())) + \") branch\";\n+                        }\n+                    } else {\n+                        var hash = review.hash();\n+                        if (hash.isPresent()) {\n+                            if (!hash.get().equals(pr.headHash())) {\n+                                if (useStaleReviews) {\n+                                    entry += \" ‚ö†Ô∏è Review applies to [\" + hash.get().abbreviate()\n+                                            + \"](\" + pr.filesUrl(hash.get()) + \")\";\n+                                } else if (!reviewCoverage.covers(review) && tooFewReviewers) {\n+                                    entry += \" üîÑ Re-review required (review applies to [\" + hash.get().abbreviate()\n+                                            + \"](\" + pr.filesUrl(hash.get()) + \"))\";\n+                                } else {\n+                                    entry += \" Review applies to [\" + hash.get().abbreviate()\n+                                            + \"](\" + pr.filesUrl(hash.get()) + \")\";\n+                                }\n+                            }\n+                        } else {\n+                            if (useStaleReviews || tooFewReviewers) {\n+                                entry += \" üîÑ Re-review required (review applies to a commit that is no longer present)\";\n+                            } else {\n+                                entry += \" Review applies to a commit that is no longer present\";\n+                            }\n+                        }\n+                    }\n+                    return entry;\n+                })\n+                .collect(Collectors.joining(\"\\n\"));\n@@ -677,1 +692,1 @@\n-            IssueTrackerIssue jepIssue, Collection<IssueTrackerIssue> csrIssues, JdkVersion version) {\n+            IssueTrackerIssue jepIssue, Collection<IssueTrackerIssue> csrIssues, JdkVersion version, boolean tooFewReviewers) {\n@@ -844,1 +859,1 @@\n-        getReviewersList().ifPresent(reviewers -> {\n+        getReviewersList(tooFewReviewers).ifPresent(reviewers -> {\n@@ -1336,0 +1351,1 @@\n+            boolean tooFewReviewers = false;\n@@ -1346,1 +1362,2 @@\n-                checkablePullRequest.executeChecks(localHash, censusInstance, visitor, targetJCheckConf);\n+                var jcheckIssues = checkablePullRequest.executeChecks(localHash, censusInstance, visitor, targetJCheckConf);\n+                tooFewReviewers = jcheckIssues.stream().anyMatch(TooFewReviewersIssue.class::isInstance);\n@@ -1412,1 +1429,1 @@\n-                    reviewNeeded, regularIssuesMap, jepIssue, issueToCsrMap.values(), version);\n+                    reviewNeeded, regularIssuesMap, jepIssue, issueToCsrMap.values(), version, tooFewReviewers);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":45,"deletions":28,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-    void executeChecks(Hash hash, CensusInstance censusInstance, PullRequestCheckIssueVisitor visitor, JCheckConfiguration conf) throws IOException {\n+    List<org.openjdk.skara.jcheck.Issue> executeChecks(Hash hash, CensusInstance censusInstance, PullRequestCheckIssueVisitor visitor, JCheckConfiguration conf) throws IOException {\n@@ -237,1 +237,2 @@\n-            for (var issue : issues) {\n+            var list = issues.asList();\n+            for (var issue : list) {\n@@ -240,0 +241,1 @@\n+            return list;\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckablePullRequest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -208,0 +208,2 @@\n+            assertFalse(authorPr.store().body().contains(\"Re-review required\"));\n+            assertFalse(authorPr.store().body().contains(\"Review applies to\"));\n@@ -1560,0 +1562,1 @@\n+            assertFalse(pr.store().body().contains(\"Review applies to\"));\n@@ -1571,1 +1574,1 @@\n-            assertTrue(pr.store().body().contains(\"Re-review required\"));\n+            assertTrue(pr.store().body().contains(\"üîÑ Re-review required\"));\n@@ -1576,0 +1579,7 @@\n+            \/\/ Check the status again\n+            TestBotRunner.runPeriodicItems(checkBot);\n+\n+            assertFalse(pr.store().body().contains(\"Re-review required\"));\n+            assertFalse(pr.store().body().contains(\"‚ö†Ô∏è Review applies to\"));\n+            assertTrue(pr.store().body().contains(\"Review applies to\"));\n+\n@@ -1586,1 +1596,1 @@\n-            assertTrue(pr.store().body().contains(\"Re-review required\"));\n+            assertTrue(pr.store().body().contains(\"üîÑ Re-review required\"));\n@@ -1597,1 +1607,2 @@\n-            assertTrue(pr.store().body().contains(\"Re-review required\"));\n+            assertFalse(pr.store().body().contains(\"üîÑ Re-review required\"));\n+            assertTrue(pr.store().body().contains(\"Review was made when pull request targeted\"));\n@@ -1607,1 +1618,2 @@\n-            assertTrue(pr.store().body().contains(\"Re-review required\"));\n+            assertTrue(pr.store().body().contains(\"Review applies to\"));\n+            assertTrue(pr.store().body().contains(\"Review was made when pull request targeted\"));\n@@ -1694,0 +1706,2 @@\n+            assertFalse(pr.store().body().contains(\"Re-review required\"));\n+            assertFalse(pr.store().body().contains(\"Review applies to\"));\n@@ -1720,0 +1734,2 @@\n+            assertFalse(pr.store().body().contains(\"Re-review required\"));\n+            assertFalse(pr.store().body().contains(\"Review applies to\"));\n@@ -1730,0 +1746,2 @@\n+            assertFalse(pr.store().body().contains(\" ‚ö†Ô∏è Review applies to\"));\n+            assertTrue(pr.store().body().contains(\"Review applies to\"));\n@@ -1755,0 +1773,2 @@\n+            assertFalse(pr.store().body().contains(\" ‚ö†Ô∏è Review applies to\"));\n+            assertTrue(pr.store().body().contains(\"Review applies to\"));\n@@ -1779,1 +1799,2 @@\n-            assertTrue(pr.store().body().contains(\"Re-review required\"));\n+            assertFalse(pr.store().body().contains(\"Review applies to\"));\n+            assertTrue(pr.store().body().contains(\" üîÑ Re-review required\"));\n@@ -1787,0 +1808,2 @@\n+            assertFalse(pr.store().body().contains(\"Review applies to\"));\n+            assertFalse(pr.store().body().contains(\"Re-review required\"));\n@@ -1796,0 +1819,2 @@\n+            assertFalse(pr.store().body().contains(\" ‚ö†Ô∏è Review applies to\"));\n+            assertTrue(pr.store().body().contains(\"Review applies to\"));\n@@ -1869,1 +1894,1 @@\n-            assertTrue(pr.store().body().contains(\"Re-review required\"));\n+            assertTrue(pr.store().body().contains(\" üîÑ Re-review required\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":31,"deletions":6,"binary":false,"changes":37,"status":"modified"}]}