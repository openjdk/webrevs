{"files":[{"patch":"@@ -263,0 +263,34 @@\n+\n+            var message = CommitMessageParsers.v1.parse(commit);\n+            var formatter = DateTimeFormatter.ofPattern(\"d MMM uuuu\");\n+            var body = new ArrayList<String>();\n+            body.add(\"> Hi all,\");\n+            body.add(\"> \");\n+            body.add(\"> This pull request contains a backport of commit \" +\n+                    \"[\" + hash.abbreviate() + \"](\" + commit.url() + \") from the \" +\n+                    \"[\" + bot.repo().name() + \"](\" + bot.repo().webUrl() + \") repository.\");\n+            body.add(\">\");\n+            var info = \"> The commit being backported was authored by \" + commit.author().name() + \" on \" +\n+                    commit.committed().format(formatter);\n+            if (message.reviewers().isEmpty()) {\n+                info += \" and had no reviewers\";\n+            } else {\n+                var reviewers = message.reviewers()\n+                        .stream()\n+                        .map(r -> censusInstance.census().contributor(r))\n+                        .map(c -> c.fullName().isPresent() ? c.fullName().get() : c.username())\n+                        .collect(Collectors.toList());\n+                var numReviewers = reviewers.size();\n+                var listing = numReviewers == 1 ?\n+                        reviewers.get(0) :\n+                        String.join(\", \", reviewers.subList(0, numReviewers - 1));\n+                if (numReviewers > 1) {\n+                    listing += \" and \" + reviewers.get(numReviewers - 1);\n+                }\n+                info += \" and was reviewed by \" + listing;\n+            }\n+            info += \".\";\n+            body.add(info);\n+            body.add(\"> \");\n+            body.add(\"> Thanks!\");\n+\n@@ -314,1 +348,3 @@\n-\n+                    lines.add(\"\");\n+                    lines.add(\"Below you can find a suggestion for the pull request body:\");\n+                    lines.addAll(body);\n@@ -345,33 +381,0 @@\n-            var message = CommitMessageParsers.v1.parse(commit);\n-            var formatter = DateTimeFormatter.ofPattern(\"d MMM uuuu\");\n-            var body = new ArrayList<String>();\n-            body.add(\"> Hi all,\");\n-            body.add(\"> \");\n-            body.add(\"> This pull request contains a backport of commit \" +\n-                      \"[\" + hash.abbreviate() + \"](\" + commit.url() + \") from the \" +\n-                      \"[\" + bot.repo().name() + \"](\" + bot.repo().webUrl() + \") repository.\");\n-            body.add(\">\");\n-            var info = \"> The commit being backported was authored by \" + commit.author().name() + \" on \" +\n-                        commit.committed().format(formatter);\n-            if (message.reviewers().isEmpty()) {\n-                info += \" and had no reviewers\";\n-            } else {\n-                var reviewers = message.reviewers()\n-                                       .stream()\n-                                       .map(r -> censusInstance.census().contributor(r))\n-                                       .map(c -> c.fullName().isPresent() ? c.fullName().get() : c.username())\n-                                       .collect(Collectors.toList());\n-                var numReviewers = reviewers.size();\n-                var listing = numReviewers == 1 ?\n-                    reviewers.get(0) :\n-                    String.join(\", \", reviewers.subList(0, numReviewers - 1));\n-                if (numReviewers > 1) {\n-                    listing += \" and \" + reviewers.get(numReviewers - 1);\n-                }\n-                info += \" and was reviewed by \" + listing;\n-            }\n-            info += \".\";\n-            body.add(info);\n-            body.add(\"> \");\n-            body.add(\"> Thanks!\");\n-\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/BackportCommand.java","additions":37,"deletions":34,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -255,0 +255,1 @@\n+            assertTrue(botReply.body().contains(\"Below you can find a suggestion for the pull request body:\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/BackportCommitCommandTests.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -123,0 +123,1 @@\n+            assertLastCommentContains(pr, \"Below you can find a suggestion for the pull request body:\");\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/BackportPRCommandTests.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}