{"files":[{"patch":"@@ -33,0 +33,2 @@\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n@@ -35,0 +37,3 @@\n+\n+    private final static Logger log = Logger.getLogger(\"org.openjdk.skara.vcs.git.GitCommits\");\n+\n@@ -136,6 +141,18 @@\n-            try {\n-                var exited = p.waitFor(30L, TimeUnit.SECONDS);\n-                if (!exited) {\n-                    throw new IOException(\"'\" + String.join(\" \", command) + \"' timed out\");\n-                }\n-                var exitCode = p.exitValue();\n+            close(p, command);\n+        }\n+    }\n+\n+    private void close(Process p, List<String> command) throws IOException {\n+        log.finer(\"Waiting for the process to terminate: pid=\" + p.pid()\n+                + \", command=\" + Arrays.toString(command.toArray()));\n+        try {\n+            var exited = p.waitFor(30L, TimeUnit.SECONDS);\n+            if (!exited) {\n+                throw new IOException(\"'\" + String.join(\" \", command) + \"' timed out, pid=\" + p.pid());\n+            }\n+            log.finer(\"Terminated: pid=\" + p.pid());\n+            var exitCode = p.exitValue();\n+            if (exitCode != 0) {\n+                var stderr = new BufferedReader(new InputStreamReader(p.getErrorStream(), StandardCharsets.UTF_8));\n+                var message = stderr.lines().collect(Collectors.joining(\"\\n\"));\n+                log.finer(\"stderr for pid=\" + p.pid() + \": \" + message);\n@@ -143,2 +160,0 @@\n-                    var stderr = new BufferedReader(new InputStreamReader(p.getErrorStream(), StandardCharsets.UTF_8));\n-                    var message = stderr.readLine();\n@@ -151,2 +166,7 @@\n-            } catch (InterruptedException e) {\n-                throw new IOException(\"'\" + String.join(\" \", command) + \"' was interrupted\", e);\n+            }\n+        } catch (InterruptedException e) {\n+            throw new IOException(\"'\" + String.join(\" \", command) + \"' was interrupted\", e);\n+        } finally {\n+            if (p.isAlive()) {\n+                log.finer(\"Destroying the process pid=\" + p.pid());\n+                p.destroy();\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitCommits.java","additions":30,"deletions":10,"binary":false,"changes":40,"status":"modified"}]}