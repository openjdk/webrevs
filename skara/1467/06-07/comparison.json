{"files":[{"patch":"@@ -65,9 +65,0 @@\n-    private URI uri() {\n-        var uri = from.authenticatedUrl().toString();\n-        if (!uri.endsWith(\".git\")) {\n-            uri += \".git\";\n-        }\n-\n-        return URI.create(uri);\n-    }\n-\n@@ -101,1 +92,1 @@\n-                fromRepo = Repository.clone(uri(), fromDir);\n+                fromRepo = Repository.clone(from.authenticatedUrl(), fromDir);\n","filename":"bots\/checkout\/src\/main\/java\/org\/openjdk\/skara\/bots\/checkout\/CheckoutBot.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-                var markerBase = destination.authenticatedUrl().getHost() + \"\/\" + destination.name();\n+                var markerBase = destination.url().getHost() + \"\/\" + destination.name();\n","filename":"bots\/hgbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/hgbridge\/JBridgeBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-        var repoName = censusRepo.authenticatedUrl().getHost() + \"\/\" + censusRepo.name();\n+        var repoName = censusRepo.url().getHost() + \"\/\" + censusRepo.name();\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/CensusInstance.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-        var bridgeIdPattern = Pattern.compile(\"^[^.]+\\\\.[^.]+@\" + pr.repository().authenticatedUrl().getHost() + \"$\");\n+        var bridgeIdPattern = Pattern.compile(\"^[^.]+\\\\.[^.]+@\" + pr.repository().url().getHost() + \"$\");\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListArchiveReaderBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -299,1 +299,1 @@\n-            return EmailAddress.from(encodedCommon + \".\" + UUID.randomUUID() + \"@\" + pr.repository().authenticatedUrl().getHost());\n+            return EmailAddress.from(encodedCommon + \".\" + UUID.randomUUID() + \"@\" + pr.repository().url().getHost());\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ReviewArchive.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1886,2 +1886,2 @@\n-            assertTrue(comment.body().contains(originalRepo.authenticatedUrl().toString()));\n-            assertFalse(comment.body().contains(repo.authenticatedUrl().toString()));\n+            assertTrue(comment.body().contains(originalRepo.url().toString()));\n+            assertFalse(comment.body().contains(repo.url().toString()));\n@@ -1989,1 +1989,1 @@\n-            assertTrue(comment.body().contains(repo.authenticatedUrl().toString()));\n+            assertTrue(comment.body().contains(repo.url().toString()));\n@@ -2037,1 +2037,1 @@\n-            assertTrue(comment.body().contains(repo.authenticatedUrl().toString()));\n+            assertTrue(comment.body().contains(repo.url().toString()));\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifierTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1216,1 +1216,1 @@\n-                if (!pr.repository().authenticatedUrl().equals(pr.sourceRepository().get().authenticatedUrl()) && branchNames.contains(pr.sourceRef())) {\n+                if (!pr.repository().url().equals(pr.sourceRepository().get().url()) && branchNames.contains(pr.sourceRef())) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-        var repoName = censusRepo.authenticatedUrl().getHost() + \"\/\" + censusRepo.name();\n+        var repoName = censusRepo.url().getHost() + \"\/\" + censusRepo.name();\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LimitedCensusInstance.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -239,1 +239,1 @@\n-        return null;\n+        return url;\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryHostedRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -308,1 +308,1 @@\n-        var parentProject = ForgeUtils.projectName(parentRepo.authenticatedUrl());\n+        var parentProject = ForgeUtils.projectName(parentRepo.url());\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/pr\/GitPrCreate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -533,1 +533,1 @@\n-        return \"[\" + path + \" line \" + line + \"](\" + URIBuilder.base(repository.authenticatedUrl())\n+        return \"[\" + path + \" line \" + line + \"](\" + URIBuilder.base(repository.url())\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabMergeRequest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        pullRequestPattern = Pattern.compile(authenticatedUrl().toString() + \"\/pr\/\" + \"(\\\\d+)\");\n+        pullRequestPattern = Pattern.compile(webUrl().toString() + \"\/pr\/\" + \"(\\\\d+)\");\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -217,1 +217,1 @@\n-            return new URI(targetRepository.authenticatedUrl().toString() + \"\/pr\/\" + id());\n+            return new URI(targetRepository.webUrl().toString() + \"\/pr\/\" + id());\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestPullRequest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}