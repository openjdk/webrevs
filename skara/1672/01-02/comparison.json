{"files":[{"patch":"@@ -34,1 +34,0 @@\n-import org.openjdk.skara.vcs.git.GitRepository;\n@@ -63,4 +62,0 @@\n-        if (!(repo instanceof GitRepository gitRepo)) {\n-            log.fine(\"Merge re-review check is unavailable on '\" + repo.getClass() + \"' repo\");\n-            return false;\n-        }\n@@ -69,2 +64,2 @@\n-            var targetHash = PullRequestUtils.targetHash(gitRepo);\n-            try (var commits = gitRepo.commits(List.of(pr.headHash()), List.of(r.get(), targetHash))) {\n+            var targetHash = PullRequestUtils.targetHash(repo);\n+            try (var commits = repo.commits(List.of(pr.headHash()), List.of(r.get(), targetHash))) {\n@@ -80,1 +75,1 @@\n-                    if (!gitRepo.isAncestor(secondParent, targetHash)) {\n+                    if (!repo.isAncestor(secondParent, targetHash)) {\n@@ -83,1 +78,1 @@\n-                    if (!gitRepo.isRemergeDiffEmpty(c.hash())) {\n+                    if (!repo.isRemergeDiffEmpty(c.hash())) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewCoverage.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,0 +128,5 @@\n+    @Override\n+    public Commits commits(List<Hash> reachableFrom, List<Hash> unreachableFrom) throws IOException {\n+        return null;\n+    }\n+\n","filename":"jcheck\/src\/test\/java\/org\/openjdk\/skara\/jcheck\/TestRepository.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+    Commits commits(List<Hash> reachableFrom, List<Hash> unreachableFrom) throws IOException;\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/ReadOnlyRepository.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -239,0 +239,2 @@\n+    boolean isRemergeDiffEmpty(Hash mergeCommitHash) throws IOException;\n+\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/Repository.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -183,0 +183,1 @@\n+    @Override\n@@ -1004,2 +1005,3 @@\n-    public boolean isRemergeDiffEmpty(Hash hash) throws IOException {\n-        try (var p = Process.capture(\"git\", \"show\", \"--remerge-diff\", \"--format=%b\", hash.hex())\n+    @Override\n+    public boolean isRemergeDiffEmpty(Hash mergeCommitHash) throws IOException {\n+        try (var p = Process.capture(\"git\", \"show\", \"--remerge-diff\", \"--format=%b\", mergeCommitHash.hex())\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,5 @@\n+    @Override\n+    public boolean isRemergeDiffEmpty(Hash mergeCommitHash) throws IOException {\n+        throw new UnsupportedOperationException();\n+    }\n+\n@@ -251,0 +256,5 @@\n+    @Override\n+    public Commits commits(List<Hash> reachableFrom, List<Hash> unreachableFrom) throws IOException {\n+        throw new UnsupportedOperationException();\n+    }\n+\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"}]}