{"files":[{"patch":"@@ -25,0 +25,1 @@\n+import org.openjdk.skara.forge.HostedBranch;\n@@ -102,1 +103,1 @@\n-            var remoteBranches = localRepo.remoteBranches(bot.repo().authenticatedUrl().toString());\n+            var remoteBranches = bot.repo().branches();\n@@ -104,1 +105,1 @@\n-                                                  .map(Reference::name)\n+                                                  .map(HostedBranch::name)\n@@ -107,3 +108,8 @@\n-                var ref = remoteBranches.stream().filter(r -> r.name().equals(branchName)).findFirst();\n-                if (ref.isEmpty()) {\n-                    throw new IllegalStateException(\"Cannot find hash for remote branch '\" + branchName + \"'\");\n+                var msg = \"A branch with name `\" + branchName + \"` already exists\";\n+                var remoteBranch = remoteBranches.stream().filter(r -> r.name().equals(branchName)).findFirst();\n+                if (remoteBranch.isPresent()) {\n+                    var hash = remoteBranch.get().hash();\n+                    var hashUrl = bot.repo().webUrl(hash);\n+                    msg += \" that refers to commit [\" + hash.abbreviate() + \"](\" + hashUrl + \").\";\n+                } else {\n+                    msg += \" (could not find the commit it refers to).\";\n@@ -111,3 +117,1 @@\n-                var hash = ref.get().hash();\n-                var hashUrl = bot.repo().webUrl(hash);\n-                reply.println(\"A branch with name `\" + branchName + \"` already exists that refers to commit [\" + hash.abbreviate() + \"](\" + hashUrl + \").\");\n+                reply.println(msg);\n@@ -127,1 +131,0 @@\n-            log.info(String.join(\", \", localRepo.branches().stream().map(Branch::name).collect(Collectors.toList())));\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/BranchCommand.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"}]}