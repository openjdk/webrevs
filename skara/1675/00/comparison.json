{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,4 +71,5 @@\n-            return Files.lines(p)\n-                        .map(line -> line.split(\",\"))\n-                        .map(entry -> new Mark(Integer.parseInt(entry[0]), new Hash(entry[1]), new Hash(entry[2])))\n-                        .collect(Collectors.toList());\n+            try (var lines = Files.lines(p)) {\n+                return lines.map(line -> line.split(\",\"))\n+                            .map(entry -> new Mark(Integer.parseInt(entry[0]), new Hash(entry[1]), new Hash(entry[2])))\n+                            .collect(Collectors.toList());\n+            }\n@@ -88,3 +89,2 @@\n-        try {\n-            Files.walk(directory)\n-                 .map(Path::toFile)\n+        try (var paths = Files.walk(directory)) {\n+            paths.map(Path::toFile)\n","filename":"bots\/hgbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/hgbridge\/Exporter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -229,10 +229,11 @@\n-            Files.walk(storageFolder.path())\n-                 .filter(p -> p.toString().contains(\"\/.hg\/\"))\n-                 .filter(p -> p.toFile().isFile())\n-                 .forEach(p -> {\n-                     try {\n-                         Files.delete(p);\n-                     } catch (IOException e) {\n-                         throw new UncheckedIOException(e);\n-                     }\n-                 });\n+            try (var paths = Files.walk(storageFolder.path())) {\n+                paths.filter(p -> p.toString().contains(\"\/.hg\/\"))\n+                     .filter(p -> p.toFile().isFile())\n+                     .forEach(p -> {\n+                         try {\n+                             Files.delete(p);\n+                         } catch (IOException e) {\n+                             throw new UncheckedIOException(e);\n+                         }\n+                     });\n+            }\n@@ -356,10 +357,11 @@\n-            Files.walk(storageFolder.path())\n-                 .filter(p -> p.toString().contains(\".success.txt\"))\n-                 .filter(p -> p.toFile().isFile())\n-                 .forEach(p -> {\n-                     try {\n-                         Files.delete(p);\n-                     } catch (IOException e) {\n-                         throw new UncheckedIOException(e);\n-                     }\n-                 });\n+            try (var paths = Files.walk(storageFolder.path())) {\n+                paths.filter(p -> p.toString().contains(\".success.txt\"))\n+                     .filter(p -> p.toFile().isFile())\n+                     .forEach(p -> {\n+                         try {\n+                             Files.delete(p);\n+                         } catch (IOException e) {\n+                             throw new UncheckedIOException(e);\n+                         }\n+                     });\n+            }\n","filename":"bots\/hgbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/hgbridge\/BridgeBotTests.java","additions":22,"deletions":20,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -254,4 +254,5 @@\n-        Files.walk(dir)\n-             .map(Path::toFile)\n-             .sorted(Comparator.reverseOrder())\n-             .forEach(File::delete);\n+        try (var paths = Files.walk(dir)) {\n+            paths.map(Path::toFile)\n+                 .sorted(Comparator.reverseOrder())\n+                 .forEach(File::delete);\n+        }\n","filename":"bots\/merge\/src\/main\/java\/org\/openjdk\/skara\/bots\/merge\/MergeBot.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -95,4 +95,5 @@\n-                        Files.walk(dir)\n-                                .map(Path::toFile)\n-                                .sorted(Comparator.reverseOrder())\n-                                .forEach(File::delete);\n+                        try (var paths = Files.walk(dir)) {\n+                            paths.map(Path::toFile)\n+                                 .sorted(Comparator.reverseOrder())\n+                                 .forEach(File::delete);\n+                        }\n","filename":"bots\/mirror\/src\/main\/java\/org\/openjdk\/skara\/bots\/mirror\/MirrorBot.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -50,3 +50,2 @@\n-        try {\n-            var mbox = Files.find(archive, 50, (path, attrs) -> path.toString().endsWith(\".mbox\"))\n-                            .filter(path -> path.getFileName().toString().contains(prId))\n+        try (var paths = Files.find(archive, 50, (path, attrs) -> path.toString().endsWith(\".mbox\"))) {\n+            var mbox = paths.filter(path -> path.getFileName().toString().contains(prId))\n@@ -93,2 +92,2 @@\n-        try {\n-            var index = Files.find(webrev, 5, (path, attrs) -> path.toString().endsWith(\"index.html\")).findAny();\n+        try (var paths = Files.find(webrev, 5, (path, attrs) -> path.toString().endsWith(\"index.html\"))) {\n+            var index = paths.findAny();\n","filename":"bots\/mlbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListBridgeBotTests.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -41,4 +41,5 @@\n-        return Files.walk(folder)\n-                    .filter(path -> path.toString().endsWith(\".json\"))\n-                    .filter(path -> path.toString().contains(partialName))\n-                    .collect(Collectors.toList());\n+        try (var paths = Files.walk(folder)) {\n+            return paths.filter(path -> path.toString().endsWith(\".json\"))\n+                        .filter(path -> path.toString().contains(partialName))\n+                        .collect(Collectors.toList());\n+        }\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/json\/JsonNotifierTests.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,8 +57,8 @@\n-        var r = Files.walk(root)\n-                    .filter(d -> d.getFileName().toString().equals(isMercurial ? \".hg\" : \".git\"))\n-                    .map(d -> d.getParent())\n-                    .filter(d -> !d.equals(root))\n-                    .map(d -> root.relativize(d))\n-                    .sorted()\n-                    .collect(Collectors.toList());\n-        return r;\n+        try (var paths = Files.walk(root)) {\n+            return paths.filter(d -> d.getFileName().toString().equals(isMercurial ? \".hg\" : \".git\"))\n+                        .map(d -> d.getParent())\n+                        .filter(d -> !d.equals(root))\n+                        .map(d -> root.relativize(d))\n+                        .sorted()\n+                        .collect(Collectors.toList());\n+        }\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitTrees.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -47,5 +47,4 @@\n-        try {\n-            Files.walk(directory)\n-                    .map(Path::toFile)\n-                    .sorted(Comparator.reverseOrder())\n-                    .forEach(File::delete);\n+        try (var paths = Files.walk(directory)) {\n+            paths.map(Path::toFile)\n+                 .sorted(Comparator.reverseOrder())\n+                 .forEach(File::delete);\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/GitWebrev.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -681,4 +681,5 @@\n-                    Files.walk(path)\n-                         .filter(p -> p.toFile().isFile())\n-                         .map(p -> repoRoot.relativize(p).toString())\n-                         .forEach(requestedFiles::add);\n+                    try (var paths = Files.walk(path)) {\n+                        paths.filter(p -> p.toFile().isFile())\n+                             .map(p -> repoRoot.relativize(p).toString())\n+                             .forEach(requestedFiles::add);\n+                    }\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/debug\/GitMlRules.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,5 +144,6 @@\n-        Files.walk(hgRoot)\n-             .filter(p -> !Files.isDirectory(p))\n-             .map(hgRoot::relativize)\n-             .filter(p -> !p.startsWith(\".hg\"))\n-             .forEach(f -> hgFiles.add(f));\n+        try (var paths = Files.walk(hgRoot)) {\n+            paths.filter(p -> !Files.isDirectory(p))\n+                 .map(hgRoot::relativize)\n+                 .filter(p -> !p.startsWith(\".hg\"))\n+                 .forEach(f -> hgFiles.add(f));\n+        }\n@@ -152,5 +153,6 @@\n-        Files.walk(gitRoot)\n-             .filter(p -> !Files.isDirectory(p))\n-             .map(gitRoot::relativize)\n-             .filter(p -> !p.startsWith(\".git\"))\n-             .forEach(f -> gitFiles.add(f));\n+        try (var paths = Files.walk(gitRoot)) {\n+            paths.filter(p -> !Files.isDirectory(p))\n+                 .map(gitRoot::relativize)\n+                 .filter(p -> !p.startsWith(\".git\"))\n+                 .forEach(f -> gitFiles.add(f));\n+        }\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/debug\/GitVerifyImport.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -55,3 +55,2 @@\n-            try {\n-                Files.walk(directory)\n-                     .map(Path::toFile)\n+            try (var paths = Files.walk(directory)) {\n+                paths.map(Path::toFile)\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepositoryPool.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,4 +89,5 @@\n-        Files.walk(directory)\n-                .map(Path::toFile)\n-                .sorted(Comparator.reverseOrder())\n-                .forEach(File::delete);\n+        try (var paths = Files.walk(directory)) {\n+            paths.map(Path::toFile)\n+                 .sorted(Comparator.reverseOrder())\n+                 .forEach(File::delete);\n+        }\n","filename":"gradle\/plugins\/skara-images\/src\/main\/java\/org\/openjdk\/skara\/gradle\/images\/DownloadJDKTask.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,4 +72,5 @@\n-        Files.walk(directory)\n-                .map(Path::toFile)\n-                .sorted(Comparator.reverseOrder())\n-                .forEach(File::delete);\n+        try (var paths = Files.walk(directory)) {\n+            paths.map(Path::toFile)\n+                 .sorted(Comparator.reverseOrder())\n+                 .forEach(File::delete);\n+        }\n","filename":"gradle\/plugins\/skara-images\/src\/main\/java\/org\/openjdk\/skara\/gradle\/images\/LaunchersTask.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,5 +98,4 @@\n-        try {\n-            Files.walk(directory)\n-                    .map(Path::toFile)\n-                    .sorted(Comparator.reverseOrder())\n-                    .forEach(File::delete);\n+        try (var paths = Files.walk(directory)) {\n+            paths.map(Path::toFile)\n+                 .sorted(Comparator.reverseOrder())\n+                 .forEach(File::delete);\n@@ -128,2 +127,3 @@\n-        var dirs = Files.walk(jdk)\n-                        .filter(Files::isDirectory)\n+        List<Path> dirs;\n+        try (var paths = Files.walk(jdk)) {\n+            dirs = paths.filter(Files::isDirectory)\n@@ -131,4 +131,5 @@\n-                        .collect(Collectors.toList());\n-        if (dirs.size() != 1) {\n-            var plural = dirs.size() == 0 ? \"no\" : \"multiple\";\n-            throw new GradleException(\"JDK at \" + jdk.toString() + \" contains \" + plural + \" 'jmods' directories\");\n+                        .toList();\n+            if (dirs.size() != 1) {\n+                var plural = dirs.size() == 0 ? \"no\" : \"multiple\";\n+                throw new GradleException(\"JDK at \" + jdk.toString() + \" contains \" + plural + \" 'jmods' directories\");\n+            }\n@@ -174,2 +175,3 @@\n-            var javaLaunchers = Files.walk(dest)\n-                                     .filter(Files::isExecutable)\n+            List<Path> javaLaunchers;\n+            try (var paths = Files.walk(dest)) {\n+                javaLaunchers = paths.filter(Files::isExecutable)\n@@ -177,1 +179,2 @@\n-                                     .collect(Collectors.toList());\n+                                     .toList();\n+            }\n","filename":"gradle\/plugins\/skara-images\/src\/main\/java\/org\/openjdk\/skara\/gradle\/images\/LinkTask.java","additions":18,"deletions":15,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,1 @@\n-\n-import static java.util.stream.Collectors.toList;\n+import java.util.Optional;\n@@ -56,3 +55,6 @@\n-                    var lines = Files.lines(versionTxt).collect(toList());\n-                    if (!lines.isEmpty()) {\n-                        project.setProperty(\"version\", lines.get(0));\n+                    Optional<String> firstLine;\n+                    try (var lines = Files.lines(versionTxt)) {\n+                        firstLine = lines.findFirst();\n+                    }\n+                    if (firstLine.isPresent()) {\n+                        project.setProperty(\"version\", firstLine.get());\n","filename":"gradle\/plugins\/skara-version\/src\/main\/java\/org\/openjdk\/skara\/gradle\/version\/VersionPlugin.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,3 +53,2 @@\n-            try {\n-                Files.walk(p)\n-                     .map(Path::toFile)\n+            try (var paths = Files.walk(p)) {\n+                paths.map(Path::toFile)\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TemporaryDirectory.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -481,4 +481,5 @@\n-        Files.walk(dir)\n-             .map(Path::toFile)\n-             .sorted(Comparator.reverseOrder())\n-             .forEach(File::delete);\n+        try (var paths = Files.walk(dir)) {\n+            paths.map(Path::toFile)\n+                 .sorted(Comparator.reverseOrder())\n+                 .forEach(File::delete);\n+        }\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/git\/GitRepository.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -456,4 +456,5 @@\n-        Files.walk(dir)\n-             .map(Path::toFile)\n-             .sorted(Comparator.reverseOrder())\n-             .forEach(File::delete);\n+        try (var paths = Files.walk(dir)) {\n+            paths.map(Path::toFile)\n+                 .sorted(Comparator.reverseOrder())\n+                 .forEach(File::delete);\n+        }\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/hg\/HgRepository.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -664,3 +664,5 @@\n-            for (var path : Files.walk(gitRoot).collect(Collectors.toList())) {\n-                if (path.getFileName().toString().startsWith(\"fast_import_crash\")) {\n-                    log.warning(Files.readString(path));\n+            try (var paths = Files.walk(gitRoot)) {\n+                for (var path : paths.toList()) {\n+                    if (path.getFileName().toString().startsWith(\"fast_import_crash\")) {\n+                        log.warning(Files.readString(path));\n+                    }\n","filename":"vcs\/src\/main\/java\/org\/openjdk\/skara\/vcs\/openjdk\/convert\/HgToGitConverter.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -2696,3 +2696,5 @@\n-            var paths = Files.list(r.root()).collect(Collectors.toList());\n-            assertTrue(paths.contains(untracked));\n-            assertTrue(paths.contains(readme));\n+            try (var list = Files.list(r.root())) {\n+                var paths = list.toList();\n+                assertTrue(paths.contains(untracked));\n+                assertTrue(paths.contains(readme));\n+            }\n@@ -2701,3 +2703,5 @@\n-            paths = Files.list(r.root()).collect(Collectors.toList());\n-            assertFalse(paths.contains(untracked));\n-            assertTrue(paths.contains(readme));\n+            try (var list = Files.list(r.root())) {\n+                var paths = list.toList();\n+                assertFalse(paths.contains(untracked));\n+                assertTrue(paths.contains(readme));\n+            }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"}]}