{"files":[{"patch":"@@ -330,1 +330,1 @@\n-    public void visit(CopyrightIssue issue) {\n+    public void visit(CopyrightFormatIssue issue) {\n@@ -333,4 +333,3 @@\n-            messages.add(\"Found copyright format issue in [\" + String.join(\", \", issue.filesWithCopyrightFormatIssue()) + \"]\");\n-        }\n-        if (!issue.filesWithCopyrightYearIssue().isEmpty()) {\n-            messages.add(\"Found outdated copyright year in [\" + String.join(\", \", issue.filesWithCopyrightYearIssue()) + \"]\");\n+            for (var entry : issue.filesWithCopyrightFormatIssue().entrySet()) {\n+                messages.add(\"Found copyright format issue for \" + entry.getKey() + \" in [\" + String.join(\", \", entry.getValue()) + \"]\");\n+            }\n@@ -339,1 +338,3 @@\n-            messages.add(\"Can't find copyright header in [\" + String.join(\", \", issue.filesWithCopyrightMissingIssue()) + \"]\");\n+            for (var entry : issue.filesWithCopyrightMissingIssue().entrySet()) {\n+                messages.add(\"Can't find copyright header for \" + entry.getKey() + \" in [\" + String.join(\", \", entry.getValue()) + \"]\");\n+            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestCheckIssueVisitor.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -3270,1 +3270,1 @@\n-            assertEquals(\"line 22: entry must be of form 'key = value'\", check.summary().get());\n+            assertEquals(\"line 27: entry must be of form 'key = value'\", check.summary().get());\n@@ -3804,1 +3804,0 @@\n-\n@@ -3807,0 +3806,1 @@\n+            assertTrue(pr.store().body().contains(\"Found copyright format issue for oracle in [appendable.txt]\"));\n@@ -3808,3 +3808,1 @@\n-            assertTrue(pr.store().body().contains(\"Found copyright format issue in [appendable.txt]\"));\n-\n-            \/\/ Make the year outdated\n+            \/\/ Fix the issue\n@@ -3812,1 +3810,1 @@\n-                    \" * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\\n\" +\n+                    \" * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\\n\" +\n@@ -3816,1 +3814,1 @@\n-\n+            \/\/ Check the status\n@@ -3818,0 +3816,1 @@\n+            assertFalse(pr.store().body().contains(\"Found copyright format issue for oracle in [appendable.txt]\"));\n@@ -3819,3 +3818,1 @@\n-            assertTrue(pr.store().body().contains(\"Found outdated copyright year in [appendable.txt]\"));\n-\n-            \/\/ Fix the issue\n+            \/\/ Replace the oracle copyright with red hat one\n@@ -3823,1 +3820,1 @@\n-                    \" * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\\n\" +\n+                    \" * Copyright (c) 2024,  Red Hat, Inc.\\n\" +\n@@ -3827,1 +3824,1 @@\n-\n+            \/\/ Check the status\n@@ -3829,2 +3826,2 @@\n-\n-            assertFalse(pr.store().body().contains(\"Found copyright format issue in [appendable.txt]\"));\n+            assertTrue(pr.store().body().contains(\"Found copyright format issue for redhat in [appendable.txt]\"));\n+            assertTrue(pr.store().body().contains(\"Can't find copyright header for oracle in [appendable.txt]\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":11,"deletions":14,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -330,1 +330,1 @@\n-    public void visit(CopyrightIssue i) {\n+    public void visit(CopyrightFormatIssue i) {\n@@ -333,4 +333,3 @@\n-                println(i, \"Found copyright format issue in [\" + String.join(\", \", i.filesWithCopyrightFormatIssue()) + \"]\");\n-            }\n-            if (!i.filesWithCopyrightYearIssue().isEmpty()) {\n-                println(i, \"Found outdated copyright year in [\" + String.join(\", \", i.filesWithCopyrightYearIssue()) + \"]\");\n+                for (var entry : i.filesWithCopyrightFormatIssue().entrySet()) {\n+                    println(i, \"Found copyright format issue for \" + entry.getKey() + \" in [\" + String.join(\", \", entry.getValue()) + \"]\");\n+                }\n@@ -339,1 +338,3 @@\n-                println(i, \"Can't find copyright header in [\" + String.join(\", \", i.filesWithCopyrightMissingIssue()) + \"]\");\n+                for (var entry : i.filesWithCopyrightMissingIssue().entrySet()) {\n+                    println(i, \"Can't find copyright header for \" + entry.getKey() + \" in [\" + String.join(\", \", entry.getValue()) + \"]\");\n+                }\n","filename":"cli\/src\/main\/java\/org\/openjdk\/skara\/cli\/JCheckCLIVisitor.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-                                CopyrightConfiguration.DEFAULT);\n+                                null);\n@@ -50,1 +50,1 @@\n-    private final CopyrightConfiguration copyright;\n+    private final CopyrightFormatConfiguration copyright;\n@@ -60,1 +60,1 @@\n-                        CopyrightConfiguration copyright) {\n+                        CopyrightFormatConfiguration copyright) {\n@@ -122,1 +122,1 @@\n-    public CopyrightConfiguration copyright(){\n+    public CopyrightFormatConfiguration copyright(){\n@@ -144,1 +144,1 @@\n-        var copyright = CopyrightConfiguration.parse(s.subsection(CopyrightConfiguration.name()));\n+        var copyright = CopyrightFormatConfiguration.parse(s.subsection(CopyrightFormatConfiguration.name()));\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/ChecksConfiguration.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,108 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.skara.jcheck;\n-\n-import org.openjdk.skara.census.Census;\n-import org.openjdk.skara.vcs.Commit;\n-import org.openjdk.skara.vcs.ReadOnlyRepository;\n-import org.openjdk.skara.vcs.openjdk.CommitMessage;\n-\n-import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.time.Year;\n-import java.util.List;\n-import java.util.regex.Pattern;\n-\n-public class CopyrightCheck extends CommitCheck {\n-\n-    private final ReadOnlyRepository repo;\n-\n-    private final static Pattern COPYRIGHT_PATTERN = Pattern.compile(\".*Copyright \\\\(c\\\\) (\\\\d{4})(?:, (\\\\d{4}))?, Oracle and\/or its affiliates\\\\. All rights reserved\\\\.\");\n-\n-    CopyrightCheck(ReadOnlyRepository repo) {\n-        this.repo = repo;\n-    }\n-\n-    @Override\n-    Iterator<Issue> check(Commit commit, CommitMessage message, JCheckConfiguration conf, Census census) {\n-        var metadata = CommitIssue.metadata(commit, message, conf, this);\n-        var pattern = Pattern.compile(conf.checks().copyright().files());\n-\n-        var filesWithCopyrightFormatIssue = new ArrayList<String>();\n-        var filesWithCopyrightYearIssue = new ArrayList<String>();\n-        var filesWithCopyrightMissingIssue = new ArrayList<String>();\n-\n-        for (var diff : commit.parentDiffs()) {\n-            for (var patch : diff.patches()) {\n-                if (patch.target().path().isEmpty() || patch.isBinary()) {\n-                    continue;\n-                }\n-                var path = patch.target().path().get();\n-                if (pattern.matcher(path.toString()).matches()) {\n-                    try {\n-                        var lines = repo.lines(path, commit.hash()).orElse(List.of());\n-                        var copyrightFound = false;\n-                        for (String line : lines) {\n-                            if (line.contains(\"Copyright (c)\") && line.contains(\"Oracle\")) {\n-                                copyrightFound = true;\n-                                var matcher = COPYRIGHT_PATTERN.matcher(line);\n-                                if (matcher.matches()) {\n-                                    int minYear = Integer.parseInt(matcher.group(1));\n-                                    int maxYear = matcher.group(2) != null ? Integer.parseInt(matcher.group(2)) : minYear;\n-                                    int currentYear = Year.now().getValue();\n-                                    if (currentYear != maxYear) {\n-                                        filesWithCopyrightYearIssue.add(path.toString());\n-                                    }\n-                                } else {\n-                                    filesWithCopyrightFormatIssue.add(path.toString());\n-                                }\n-                            }\n-                        }\n-                        if (!copyrightFound) {\n-                            filesWithCopyrightMissingIssue.add(path.toString());\n-                        }\n-                    } catch (IOException e) {\n-                        throw new RuntimeException(e);\n-                    }\n-                }\n-            }\n-        }\n-\n-        if (!filesWithCopyrightFormatIssue.isEmpty() || !filesWithCopyrightYearIssue.isEmpty() || !filesWithCopyrightMissingIssue.isEmpty()) {\n-            return iterator(new CopyrightIssue(metadata, filesWithCopyrightFormatIssue, filesWithCopyrightYearIssue, filesWithCopyrightMissingIssue));\n-        }\n-\n-        return iterator();\n-    }\n-\n-    @Override\n-    public String name() {\n-        return \"copyright\";\n-    }\n-\n-    @Override\n-    public String description() {\n-        return \"Copyright should be properly formatted\";\n-    }\n-}\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/CopyrightCheck.java","additions":0,"deletions":108,"binary":false,"changes":108,"status":"deleted"},{"patch":"@@ -1,53 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.skara.jcheck;\n-\n-import org.openjdk.skara.ini.Section;\n-\n-public class CopyrightConfiguration {\n-    static final CopyrightConfiguration DEFAULT =\n-            new CopyrightConfiguration(\".*\\\\.cpp|.*\\\\.hpp|.*\\\\.c|.*\\\\.h|.*\\\\.java\");\n-\n-    private final String files;\n-\n-    CopyrightConfiguration(String files) {\n-        this.files = files;\n-    }\n-\n-    public String files() {\n-        return files;\n-    }\n-\n-    static String name() {\n-        return \"copyright\";\n-    }\n-\n-    static CopyrightConfiguration parse(Section s) {\n-        if (s == null) {\n-            return DEFAULT;\n-        }\n-\n-        var files = s.get(\"files\", DEFAULT.files());\n-        return new CopyrightConfiguration(files);\n-    }\n-}\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/CopyrightConfiguration.java","additions":0,"deletions":53,"binary":false,"changes":53,"status":"deleted"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.jcheck;\n+\n+import org.openjdk.skara.census.Census;\n+import org.openjdk.skara.vcs.Commit;\n+import org.openjdk.skara.vcs.ReadOnlyRepository;\n+import org.openjdk.skara.vcs.openjdk.CommitMessage;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+\n+public class CopyrightFormatCheck extends CommitCheck {\n+\n+    private final ReadOnlyRepository repo;\n+\n+    CopyrightFormatCheck(ReadOnlyRepository repo) {\n+        this.repo = repo;\n+    }\n+\n+    @Override\n+    Iterator<Issue> check(Commit commit, CommitMessage message, JCheckConfiguration conf, Census census) {\n+        var metadata = CommitIssue.metadata(commit, message, conf, this);\n+        var copyrightConf = conf.checks().copyright();\n+        if (copyrightConf == null) {\n+            return iterator();\n+        }\n+        var pattern = Pattern.compile(copyrightConf.files());\n+        var copyrightSingleCheckConfigurations = copyrightConf.singleCheckConfigurations();\n+        var filesWithCopyrightFormatIssue = new HashMap<String, List<String>>();\n+        var filesWithCopyrightMissingIssue = new HashMap<String, List<String>>();\n+\n+        for (var diff : commit.parentDiffs()) {\n+            for (var patch : diff.patches()) {\n+                if (patch.target().path().isEmpty() || patch.isBinary()) {\n+                    continue;\n+                }\n+                var path = patch.target().path().get();\n+                \/\/ Check if we need to check copyright in this type of file\n+                if (pattern.matcher(path.toString()).matches()) {\n+                    try {\n+                        var lines = repo.lines(path, commit.hash()).orElse(List.of());\n+                        \/\/ Iterate over every kind of configured copyright\n+                        for (var singleConf : copyrightSingleCheckConfigurations) {\n+                            var copyrightFound = false;\n+                            for (String line : lines) {\n+                                if (singleConf.locator.matcher(line).matches()) {\n+                                    copyrightFound = true;\n+                                    if (!singleConf.validator.matcher(line).matches()) {\n+                                        filesWithCopyrightFormatIssue\n+                                                .computeIfAbsent(singleConf.name, k -> new ArrayList<>())\n+                                                .add(path.toString());\n+                                    }\n+                                    break;\n+                                }\n+                            }\n+                            if (singleConf.required && !copyrightFound) {\n+                                filesWithCopyrightMissingIssue\n+                                        .computeIfAbsent(singleConf.name, k -> new ArrayList<>())\n+                                        .add(path.toString());\n+                            }\n+                        }\n+                    } catch (IOException e) {\n+                        throw new RuntimeException(e);\n+                    }\n+                }\n+            }\n+        }\n+\n+        if (!filesWithCopyrightFormatIssue.isEmpty() || !filesWithCopyrightMissingIssue.isEmpty()) {\n+            return iterator(new CopyrightFormatIssue(metadata, filesWithCopyrightFormatIssue, filesWithCopyrightMissingIssue));\n+        }\n+\n+        return iterator();\n+    }\n+\n+    @Override\n+    public String name() {\n+        return \"copyright\";\n+    }\n+\n+    @Override\n+    public String description() {\n+        return \"Copyright should be properly formatted\";\n+    }\n+}\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/CopyrightFormatCheck.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.jcheck;\n+\n+import org.openjdk.skara.ini.Section;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+\n+public class CopyrightFormatConfiguration {\n+    private final String files;\n+    private final List<CopyrightSingleCheckConfiguration> singleCheckConfigurations;\n+\n+    CopyrightFormatConfiguration(String files, List<CopyrightSingleCheckConfiguration> singleCheckConfigurations) {\n+        this.files = files;\n+        this.singleCheckConfigurations = singleCheckConfigurations;\n+    }\n+\n+    public String files() {\n+        return files;\n+    }\n+\n+    public List<CopyrightSingleCheckConfiguration> singleCheckConfigurations() {\n+        return singleCheckConfigurations;\n+    }\n+\n+    static String name() {\n+        return \"copyright\";\n+    }\n+\n+    static CopyrightFormatConfiguration parse(Section s) {\n+        if (s == null) {\n+            return null;\n+        }\n+\n+        var files = s.get(\"files\").asString();\n+        var configurations = new ArrayList<CopyrightSingleCheckConfiguration>();\n+        for (var entry : s.entries()) {\n+            var key = entry.key();\n+            var value = entry.value();\n+            if (key.contains(\"locator\")) {\n+                var name = key.split(\"_\")[0];\n+                var locator = Pattern.compile(value.asString());\n+                var validator = Pattern.compile(s.get(name + \"_validator\", \"\"));\n+                var required = s.get(name + \"_required\", false);\n+                configurations.add(new CopyrightSingleCheckConfiguration(name, locator, validator, required));\n+            }\n+        }\n+        return new CopyrightFormatConfiguration(files, configurations);\n+    }\n+}\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/CopyrightFormatConfiguration.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.jcheck;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+\n+public class CopyrightFormatIssue extends CommitIssue {\n+\n+    HashMap<String, List<String>> filesWithCopyrightFormatIssue;\n+    HashMap<String, List<String>> filesWithCopyrightMissingIssue;\n+\n+    CopyrightFormatIssue(CommitIssue.Metadata metadata, HashMap<String, List<String>> filesWithCopyrightFormatIssue, HashMap<String, List<String>> filesWithCopyrightMissingIssue) {\n+        super(metadata);\n+        this.filesWithCopyrightFormatIssue = filesWithCopyrightFormatIssue;\n+        this.filesWithCopyrightMissingIssue = filesWithCopyrightMissingIssue;\n+    }\n+\n+    @Override\n+    public void accept(IssueVisitor visitor) {\n+        visitor.visit(this);\n+    }\n+\n+    public HashMap<String, List<String>> filesWithCopyrightFormatIssue() {\n+        return filesWithCopyrightFormatIssue;\n+    }\n+\n+    public HashMap<String, List<String>> filesWithCopyrightMissingIssue() {\n+        return filesWithCopyrightMissingIssue;\n+    }\n+}\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/CopyrightFormatIssue.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -1,57 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.skara.jcheck;\n-\n-import java.util.List;\n-\n-public class CopyrightIssue extends CommitIssue {\n-\n-    List<String> filesWithCopyrightFormatIssue;\n-    List<String> filesWithCopyrightYearIssue;\n-    List<String> filesWithCopyrightMissingIssue;\n-\n-    CopyrightIssue(CommitIssue.Metadata metadata, List<String> filesWithCopyrightFormatIssue, List<String> filesWithCopyrightYearIssue,\n-                   List<String> filesWithCopyrightMissingIssue) {\n-        super(metadata);\n-        this.filesWithCopyrightFormatIssue = filesWithCopyrightFormatIssue;\n-        this.filesWithCopyrightYearIssue = filesWithCopyrightYearIssue;\n-        this.filesWithCopyrightMissingIssue = filesWithCopyrightMissingIssue;\n-    }\n-\n-    @Override\n-    public void accept(IssueVisitor visitor) {\n-        visitor.visit(this);\n-    }\n-\n-    public List<String> filesWithCopyrightFormatIssue() {\n-        return filesWithCopyrightFormatIssue;\n-    }\n-\n-    public List<String> filesWithCopyrightYearIssue() {\n-        return filesWithCopyrightYearIssue;\n-    }\n-\n-    public List<String> filesWithCopyrightMissingIssue() {\n-        return filesWithCopyrightMissingIssue;\n-    }\n-}\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/CopyrightIssue.java","additions":0,"deletions":57,"binary":false,"changes":57,"status":"deleted"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.jcheck;\n+\n+import java.util.regex.Pattern;\n+\n+public class CopyrightSingleCheckConfiguration {\n+    String name;\n+    \/\/ Regex used to locate the copyright line\n+    Pattern locator;\n+    \/\/ Regex used to validate the copyright line\n+    Pattern validator;\n+    \/\/ Indicates whether a copyright is required for each file; if true, the check will fail if the copyright is missing\n+    boolean required;\n+\n+    CopyrightSingleCheckConfiguration(String name, Pattern locator, Pattern validator, boolean required) {\n+        this.name = name;\n+        this.locator = locator;\n+        this.validator = validator;\n+        this.required = required;\n+    }\n+}\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/CopyrightSingleCheckConfiguration.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -48,1 +48,1 @@\n-    void visit(CopyrightIssue copyrightIssue);\n+    void visit(CopyrightFormatIssue copyrightFormatIssue);\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/IssueVisitor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-            new CopyrightCheck(repository)\n+            new CopyrightFormatCheck(repository)\n","filename":"jcheck\/src\/main\/java\/org\/openjdk\/skara\/jcheck\/JCheck.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,117 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.skara.jcheck;\n-\n-import org.junit.jupiter.api.Test;\n-import org.openjdk.skara.test.TemporaryDirectory;\n-import org.openjdk.skara.test.TestableRepository;\n-import org.openjdk.skara.vcs.Commit;\n-import org.openjdk.skara.vcs.VCS;\n-import org.openjdk.skara.vcs.openjdk.CommitMessage;\n-import org.openjdk.skara.vcs.openjdk.CommitMessageParsers;\n-\n-import java.io.IOException;\n-import java.nio.file.Files;\n-import java.util.List;\n-\n-import static org.junit.jupiter.api.Assertions.*;\n-\n-public class CopyrightCheckTests {\n-\n-    private static JCheckConfiguration conf() {\n-        return JCheckConfiguration.parse(List.of(\n-                \"[general]\",\n-                \"project = test\",\n-                \"[checks]\",\n-                \"error = copyright\"\n-        ));\n-    }\n-\n-    private static CommitMessage message(Commit c) {\n-        return CommitMessageParsers.v1.parse(c);\n-    }\n-\n-    @Test\n-    void CopyrightFormatIssueWithTrailingWhiteSpace() throws IOException {\n-        try (var dir = new TemporaryDirectory()) {\n-            var r = TestableRepository.init(dir.path(), VCS.GIT);\n-\n-            var afile = dir.path().resolve(\"a.java\");\n-            Files.write(afile, List.of(\"\/*\\n\" +\n-                    \" * Copyright (c) 2024,  Oracle and\/or its affiliates. All rights reserved.\\n\" +\n-                    \" * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\\n\" +\n-                    \" *\/\\n\"));\n-            r.add(afile);\n-            var first = r.commit(\"1: Added a.java\", \"duke\", \"duke@openjdk.org\");\n-\n-            var check = new CopyrightCheck(r);\n-            var commit = r.lookup(first).orElseThrow();\n-            var issue = (CopyrightIssue) check.check(commit, message(commit), conf(), null).next();\n-            assertTrue(issue.filesWithCopyrightYearIssue.isEmpty());\n-            assertEquals(1, issue.filesWithCopyrightFormatIssue.size());\n-\n-            \/\/ Now, remove the trailing whitespace\n-            Files.write(afile, List.of(\"\/*\\n\" +\n-                    \" * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\\n\" +\n-                    \" * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\\n\" +\n-                    \" *\/\\n\"));\n-            r.add(afile);\n-            var second = r.commit(\"2: Modified a.java\", \"duke\", \"duke@openjdk.org\");\n-            check = new CopyrightCheck(r);\n-            commit = r.lookup(second).orElseThrow();\n-            assertFalse(check.check(commit, message(commit), conf(), null).hasNext());\n-        }\n-    }\n-\n-    @Test\n-    void CopyrightYearIssue() throws IOException {\n-        try (var dir = new TemporaryDirectory()) {\n-            var r = TestableRepository.init(dir.path(), VCS.GIT);\n-\n-            var afile = dir.path().resolve(\"a.java\");\n-            Files.write(afile, List.of(\"\/*\\n\" +\n-                    \" * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\\n\" +\n-                    \" * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\\n\" +\n-                    \" *\/\\n\"));\n-            r.add(afile);\n-            var first = r.commit(\"1: Added a.java\", \"duke\", \"duke@openjdk.org\");\n-\n-            var check = new CopyrightCheck(r);\n-            var commit = r.lookup(first).orElseThrow();\n-            var issue = (CopyrightIssue) check.check(commit, message(commit), conf(), null).next();\n-            assertEquals(1, issue.filesWithCopyrightYearIssue.size());\n-            assertTrue(issue.filesWithCopyrightFormatIssue.isEmpty());\n-\n-            \/\/ Update the copyright year\n-            Files.write(afile, List.of(\"\/*\\n\" +\n-                    \" * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\\n\" +\n-                    \" * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\\n\" +\n-                    \" *\/\\n\"));\n-            r.add(afile);\n-            var second = r.commit(\"2: Modified a.java\", \"duke\", \"duke@openjdk.org\");\n-            check = new CopyrightCheck(r);\n-            commit = r.lookup(second).orElseThrow();\n-            assertFalse(check.check(commit, message(commit), conf(), null).hasNext());\n-        }\n-    }\n-}\n","filename":"jcheck\/src\/test\/java\/org\/openjdk\/skara\/jcheck\/CopyrightCheckTests.java","additions":0,"deletions":117,"binary":false,"changes":117,"status":"deleted"},{"patch":"@@ -0,0 +1,123 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.jcheck;\n+\n+import org.junit.jupiter.api.Test;\n+import org.openjdk.skara.test.TemporaryDirectory;\n+import org.openjdk.skara.test.TestableRepository;\n+import org.openjdk.skara.vcs.Commit;\n+import org.openjdk.skara.vcs.VCS;\n+import org.openjdk.skara.vcs.openjdk.CommitMessage;\n+import org.openjdk.skara.vcs.openjdk.CommitMessageParsers;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.util.List;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+public class CopyrightFormatCheckTests {\n+\n+    private static JCheckConfiguration conf() {\n+        return JCheckConfiguration.parse(List.of(\n+                \"[general]\",\n+                \"project = test\",\n+                \"[checks]\",\n+                \"error = copyright\",\n+                \"[checks \\\"copyright\\\"]\",\n+                \"files=.*\\\\.cpp|.*\\\\.hpp|.*\\\\.c|.*\\\\.h|.*\\\\.java|.*\\\\.cc|.*\\\\.hh\",\n+                \"oracle_locator=.*Copyright \\\\(c\\\\)(.*)Oracle and\/or its affiliates\\\\. All rights reserved\\\\.\",\n+                \"oracle_validator=.*Copyright \\\\(c\\\\) (\\\\d{4})(?:, (\\\\d{4}))?, Oracle and\/or its affiliates\\\\. All rights reserved\\\\.\",\n+                \"oracle_required=true\",\n+                \"redhat_locator=.*Copyright \\\\(c\\\\)(.*)Red Hat, Inc\\\\.\",\n+                \"redhat_validator=.*Copyright \\\\(c\\\\) (\\\\d{4})(?:, (\\\\d{4}))?, Red Hat, Inc\\\\.\"\n+        ));\n+    }\n+\n+    private static CommitMessage message(Commit c) {\n+        return CommitMessageParsers.v1.parse(c);\n+    }\n+\n+    @Test\n+    void CopyrightFormatIssueWithTrailingWhiteSpace() throws IOException {\n+        try (var dir = new TemporaryDirectory()) {\n+            var r = TestableRepository.init(dir.path(), VCS.GIT);\n+\n+            var afile = dir.path().resolve(\"a.java\");\n+            Files.write(afile, List.of(\"\/*\\n\" +\n+                    \" * Copyright (c) 2024,  Oracle and\/or its affiliates. All rights reserved.\\n\" +\n+                    \" * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\\n\" +\n+                    \" *\/\\n\"));\n+            r.add(afile);\n+            var first = r.commit(\"1: Added a.java\", \"duke\", \"duke@openjdk.org\");\n+\n+            var check = new CopyrightFormatCheck(r);\n+            var commit = r.lookup(first).orElseThrow();\n+            var issue = (CopyrightFormatIssue) check.check(commit, message(commit), conf(), null).next();\n+            assertEquals(1, issue.filesWithCopyrightFormatIssue.size());\n+            assertEquals(0, issue.filesWithCopyrightMissingIssue.size());\n+            assertTrue(issue.filesWithCopyrightFormatIssue.containsKey(\"oracle\"));\n+\n+            \/\/ Remove the trailing whitespace\n+            Files.write(afile, List.of(\"\/*\\n\" +\n+                    \" * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\\n\" +\n+                    \" * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\\n\" +\n+                    \" *\/\\n\"));\n+            r.add(afile);\n+            var second = r.commit(\"2: Modified a.java\", \"duke\", \"duke@openjdk.org\");\n+            check = new CopyrightFormatCheck(r);\n+            commit = r.lookup(second).orElseThrow();\n+            \/\/ No issue right now\n+            assertFalse(check.check(commit, message(commit), conf(), null).hasNext());\n+\n+            \/\/ Add a Red Hat copyright with a trailing whitespace issue\n+            Files.write(afile, List.of(\"\/*\\n\" +\n+                    \" * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\\n\" +\n+                    \" * Copyright (c) 2024,  Red Hat, Inc.\\n\" +\n+                    \" * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\\n\" +\n+                    \" *\/\\n\"));\n+            r.add(afile);\n+            var third = r.commit(\"3: Modified a.java\", \"duke\", \"duke@openjdk.org\");\n+            check = new CopyrightFormatCheck(r);\n+            commit = r.lookup(third).orElseThrow();\n+            issue = (CopyrightFormatIssue) check.check(commit, message(commit), conf(), null).next();\n+            assertEquals(1, issue.filesWithCopyrightFormatIssue.size());\n+            assertEquals(0, issue.filesWithCopyrightMissingIssue.size());\n+            assertTrue(issue.filesWithCopyrightFormatIssue.containsKey(\"redhat\"));\n+\n+            \/\/ Remove oracle copyright header and fix redhat copyright\n+            Files.write(afile, List.of(\"\/*\\n\" +\n+                    \" * Copyright (c) 2024, Red Hat, Inc.\\n\" +\n+                    \" * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\\n\" +\n+                    \" *\/\\n\"));\n+            r.add(afile);\n+            var fourth = r.commit(\"4: Modified a.java\", \"duke\", \"duke@openjdk.org\");\n+            check = new CopyrightFormatCheck(r);\n+            commit = r.lookup(fourth).orElseThrow();\n+            issue = (CopyrightFormatIssue) check.check(commit, message(commit), conf(), null).next();\n+            assertEquals(0, issue.filesWithCopyrightFormatIssue.size());\n+            assertEquals(1, issue.filesWithCopyrightMissingIssue.size());\n+            assertTrue(issue.filesWithCopyrightMissingIssue.containsKey(\"oracle\"));\n+        }\n+    }\n+}\n","filename":"jcheck\/src\/test\/java\/org\/openjdk\/skara\/jcheck\/CopyrightFormatCheckTests.java","additions":123,"deletions":0,"binary":false,"changes":123,"status":"added"},{"patch":"@@ -247,1 +247,1 @@\n-        public void visit(CopyrightIssue e) {\n+        public void visit(CopyrightFormatIssue e) {\n","filename":"jcheck\/src\/test\/java\/org\/openjdk\/skara\/jcheck\/JCheckTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,0 +87,5 @@\n+            output.append(\"oracle_locator=.*Copyright \\\\(c\\\\)(.*)Oracle and\/or its affiliates\\\\. All rights reserved\\\\.\\n\");\n+            output.append(\"oracle_validator=.*Copyright \\\\(c\\\\) (\\\\d{4})(?:, (\\\\d{4}))?, Oracle and\/or its affiliates\\\\. All rights reserved\\\\.\\n\");\n+            output.append(\"oracle_required=true\\n\");\n+            output.append(\"redhat_locator=.*Copyright \\\\(c\\\\)(.*)Red Hat, Inc\\\\.\\n\");\n+            output.append(\"redhat_validator=.*Copyright \\\\(c\\\\) (\\\\d{4})(?:, (\\\\d{4}))?, Red Hat, Inc\\\\.\\n\");\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/CheckableRepository.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}