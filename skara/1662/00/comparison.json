{"files":[{"patch":"@@ -37,2 +37,2 @@\n-    private final Map<Class<? extends Check>, String> errorFailedChecks = new HashMap<>();\n-    private final Map<Class<? extends Check>, String> warningFailedChecks = new HashMap<>();\n+    private final Map<Class<? extends Check>, List<String>> errorFailedChecks = new HashMap<>();\n+    private final Map<Class<? extends Check>, List<String>> warningFailedChecks = new HashMap<>();\n@@ -65,1 +65,1 @@\n-            errorFailedChecks.put(check.getClass(), message);\n+            errorFailedChecks.computeIfAbsent(check.getClass(), k -> new ArrayList<>()).add(message);\n@@ -67,1 +67,1 @@\n-            warningFailedChecks.put(check.getClass(), message);\n+            warningFailedChecks.computeIfAbsent(check.getClass(), k -> new ArrayList<>()).add(message);\n@@ -72,1 +72,1 @@\n-        return new ArrayList<>(errorFailedChecks.values());\n+        return errorFailedChecks.values().stream().flatMap(List::stream).toList();\n@@ -76,1 +76,1 @@\n-        return new ArrayList<>(warningFailedChecks.values());\n+        return warningFailedChecks.values().stream().flatMap(List::stream).toList();\n@@ -81,4 +81,5 @@\n-                           .filter(entry -> !displayedChecks.contains(entry.getKey()))\n-                           .map(Map.Entry::getValue)\n-                           .sorted()\n-                           .collect(Collectors.toList());\n+                .filter(entry -> !displayedChecks.contains(entry.getKey()))\n+                .map(Map.Entry::getValue)\n+                .flatMap(List::stream)\n+                .sorted()\n+                .collect(Collectors.toList());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestCheckIssueVisitor.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -625,3 +625,6 @@\n-            Files.writeString(tempFolder.path().resolve(\"executable.exe\"), \"Executable file contents\", StandardCharsets.UTF_8);\n-            Files.setPosixFilePermissions(tempFolder.path().resolve(\"executable.exe\"), Set.of(PosixFilePermission.OWNER_EXECUTE, PosixFilePermission.OWNER_READ));\n-            localRepo.add(Path.of(\"executable.exe\"));\n+            Files.writeString(tempFolder.path().resolve(\"executable1.exe\"), \"Executable file contents\", StandardCharsets.UTF_8);\n+            Files.setPosixFilePermissions(tempFolder.path().resolve(\"executable1.exe\"), Set.of(PosixFilePermission.OWNER_EXECUTE, PosixFilePermission.OWNER_READ));\n+            localRepo.add(Path.of(\"executable1.exe\"));\n+            Files.writeString(tempFolder.path().resolve(\"executable2.exe\"), \"Executable file contents\", StandardCharsets.UTF_8);\n+            Files.setPosixFilePermissions(tempFolder.path().resolve(\"executable2.exe\"), Set.of(PosixFilePermission.OWNER_EXECUTE, PosixFilePermission.OWNER_READ));\n+            localRepo.add(Path.of(\"executable2.exe\"));\n@@ -631,1 +634,1 @@\n-            pr.setBody(\"This should now be ready\");\n+            pr.setBody(\"This should not be ready\");\n@@ -641,1 +644,2 @@\n-            assertTrue(check.summary().orElseThrow().contains(\"Executable files are not allowed (file: executable.exe)\"));\n+            assertTrue(check.summary().orElseThrow().contains(\"Executable files are not allowed (file: executable1.exe)\"));\n+            assertTrue(check.summary().orElseThrow().contains(\"Executable files are not allowed (file: executable2.exe)\"));\n@@ -645,1 +649,2 @@\n-            assertTrue(pr.store().body().contains(\"Executable files are not allowed (file: executable.exe)\"));\n+            assertTrue(pr.store().body().contains(\"Executable files are not allowed (file: executable1.exe)\"));\n+            assertTrue(pr.store().body().contains(\"Executable files are not allowed (file: executable2.exe)\"));\n@@ -652,2 +657,4 @@\n-            Files.setPosixFilePermissions(tempFolder.path().resolve(\"executable.exe\"), Set.of(PosixFilePermission.OWNER_READ));\n-            localRepo.add(Path.of(\"executable.exe\"));\n+            Files.setPosixFilePermissions(tempFolder.path().resolve(\"executable1.exe\"), Set.of(PosixFilePermission.OWNER_READ));\n+            localRepo.add(Path.of(\"executable1.exe\"));\n+            Files.setPosixFilePermissions(tempFolder.path().resolve(\"executable2.exe\"), Set.of(PosixFilePermission.OWNER_READ));\n+            localRepo.add(Path.of(\"executable2.exe\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"}]}