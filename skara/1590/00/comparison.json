{"files":[{"patch":"@@ -1,2 +1,2 @@\n-JDK_LINUX_X64_URL=\"https:\/\/download.java.net\/java\/GA\/jdk17\/0d483333a00540d886896bac774ff48b\/35\/GPL\/openjdk-17_linux-x64_bin.tar.gz\"\n-JDK_LINUX_X64_SHA256=\"aef49cc7aa606de2044302e757fa94c8e144818e93487081c4fd319ca858134b\"\n+JDK_LINUX_X64_URL=\"https:\/\/download.java.net\/java\/GA\/jdk21.0.1\/415e3f918a1f4062a0074a2794853d0d\/12\/GPL\/openjdk-21.0.1_linux-x64_bin.tar.gz\"\n+JDK_LINUX_X64_SHA256=\"7e80146b2c3f719bf7f56992eb268ad466f8854d5d6ae11805784608e458343f\"\n@@ -4,2 +4,2 @@\n-JDK_LINUX_AARCH64_URL=\"https:\/\/download.java.net\/java\/GA\/jdk17\/0d483333a00540d886896bac774ff48b\/35\/GPL\/openjdk-17_linux-aarch64_bin.tar.gz\"\n-JDK_LINUX_AARCH64_SHA256=\"b5bf6377aabdc935bd72b36c494e178b12186b0e1f4be50f35134daa33bda052\"\n+JDK_LINUX_AARCH64_URL=\"https:\/\/download.java.net\/java\/GA\/jdk21.0.1\/415e3f918a1f4062a0074a2794853d0d\/12\/GPL\/openjdk-21.0.1_linux-aarch64_bin.tar.gz\"\n+JDK_LINUX_AARCH64_SHA256=\"f5e4e4622756fafe05ac0105a8efefa1152c8aad085a2bbb9466df0721bf2ba4\"\n@@ -7,2 +7,2 @@\n-JDK_MACOS_X64_URL=\"https:\/\/download.java.net\/java\/GA\/jdk17\/0d483333a00540d886896bac774ff48b\/35\/GPL\/openjdk-17_macos-x64_bin.tar.gz\"\n-JDK_MACOS_X64_SHA256=\"18e11cf9bbc6f584031e801b11ae05a233c32086f8e1b84eb8a1e9bb8e1f5d90\"\n+JDK_MACOS_X64_URL=\"https:\/\/download.java.net\/java\/GA\/jdk21.0.1\/415e3f918a1f4062a0074a2794853d0d\/12\/GPL\/openjdk-21.0.1_macos-x64_bin.tar.gz\"\n+JDK_MACOS_X64_SHA256=\"1ca6db9e6c09752f842eee6b86a2f7e51b76ae38e007e936b9382b4c3134e9ea\"\n@@ -10,2 +10,2 @@\n-JDK_MACOS_AARCH64_URL=\"https:\/\/download.java.net\/java\/GA\/jdk17\/0d483333a00540d886896bac774ff48b\/35\/GPL\/openjdk-17_macos-aarch64_bin.tar.gz\"\n-JDK_MACOS_AARCH64_SHA256=\"b5bf6377aabdc935bd72b36c494e178b12186b0e1f4be50f35134daa33bda052\"\n+JDK_MACOS_AARCH64_URL=\"https:\/\/download.java.net\/java\/GA\/jdk21.0.1\/415e3f918a1f4062a0074a2794853d0d\/12\/GPL\/openjdk-21.0.1_macos-aarch64_bin.tar.gz\"\n+JDK_MACOS_AARCH64_SHA256=\"9760eaa019b6d214a06bd44a304f3700ac057d025000bdfb9739b61080969a96\"\n@@ -13,2 +13,2 @@\n-JDK_WINDOWS_X64_URL=\"https:\/\/download.java.net\/java\/GA\/jdk17\/0d483333a00540d886896bac774ff48b\/35\/GPL\/openjdk-17_windows-x64_bin.zip\"\n-JDK_WINDOWS_X64_SHA256=\"e88b0df00021c9d266bb435c9a95fdc67d1948cce4518daf85c234907bd393c5\"\n+JDK_WINDOWS_X64_URL=\"https:\/\/download.java.net\/java\/GA\/jdk21.0.1\/415e3f918a1f4062a0074a2794853d0d\/12\/GPL\/openjdk-21.0.1_windows-x64_bin.zip\"\n+JDK_WINDOWS_X64_SHA256=\"77ea464f4fa7cbcbffe0124af44707e8e5ad8c1ce2373f1d94a64d9b20ba0c69\"\n@@ -16,2 +16,2 @@\n-GRADLE_URL=\"https:\/\/services.gradle.org\/distributions\/gradle-7.4.2-bin.zip\"\n-GRADLE_SHA256=\"29e49b10984e585d8118b7d0bc452f944e386458df27371b49b4ac1dec4b7fda\"\n+GRADLE_URL=\"https:\/\/services.gradle.org\/distributions\/gradle-8.4-bin.zip\"\n+GRADLE_SHA256=\"3e1af3ae886920c3ac87f7a91f816c0c7c436f276a6eefdb3da152100fef72ae\"\n","filename":"deps.env","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -22,2 +22,2 @@\n-distributionUrl=https\\:\/\/services.gradle.org\/distributions\/gradle-7.4.2-bin.zip\n-distributionSha256Sum=29e49b10984e585d8118b7d0bc452f944e386458df27371b49b4ac1dec4b7fda\n+distributionUrl=https\\:\/\/services.gradle.org\/distributions\/gradle-8.4-bin.zip\n+distributionSha256Sum=3e1af3ae886920c3ac87f7a91f816c0c7c436f276a6eefdb3da152100fef72ae\n","filename":"gradle\/wrapper\/gradle-wrapper.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        var value = parser.parse(\"false\"); \n+        var value = parser.parse(\"false\");\n@@ -49,1 +49,1 @@\n-        var value = parser.parse(\"17\"); \n+        var value = parser.parse(\"17\");\n@@ -61,1 +61,1 @@\n-        var value = parser.parse(\"\\r\\n    \\t    false  \\t\\t\\t\"); \n+        var value = parser.parse(\"\\r\\n    \\t    false  \\t\\t\\t\");\n@@ -494,2 +494,2 @@\n-        var names = json.fields().stream().map(JSONObject.Field::name).collect(Collectors.toList());\n-        assertEquals(List.of(\"id\", \"type\", \"body\"), names);\n+        var names = json.fields().stream().map(JSONObject.Field::name).collect(Collectors.toSet());\n+        assertEquals(Set.of(\"id\", \"type\", \"body\"), names);\n","filename":"json\/src\/test\/java\/org\/openjdk\/skara\/json\/JSONParserTests.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import java.text.Normalizer;\n@@ -1920,1 +1921,15 @@\n-            assertEquals(Path.of(\"REÁDME.md\"), entry.target().path().get());\n+            if (System.getProperty(\"os.name\").toLowerCase().startsWith(\"mac\")) {\n+                \/\/ On macos, the default filesystem APFS is normalization-insensitive yet\n+                \/\/ normalization-preserving. Because of this, Git has a commonly enabled\n+                \/\/ feature 'core.precomposeUnicode' which normalizes unicode to composite\n+                \/\/ form. Because of this, we cannot trust that the path object returned\n+                \/\/ from status is equal to a path object created here with the same\n+                \/\/ original filename. We need to instead compare the NFC normalized\n+                \/\/ strings.\n+                assertEquals(Normalizer.normalize(\"REÁDME.md\", Normalizer.Form.NFC),\n+                        Normalizer.normalize(entry.target().path().orElseThrow().toString(), Normalizer.Form.NFC));\n+                \/\/ Also check that the filesystem resolves the file as returned by Git.\n+                assertTrue(Files.exists(dir.path().resolve(entry.target().path().orElseThrow())));\n+            } else {\n+                assertEquals(Path.of(\"REÁDME.md\"), entry.target().path().orElseThrow());\n+            }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"}]}