{"files":[{"patch":"@@ -1606,1 +1606,0 @@\n-\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -156,2 +156,7 @@\n-                var groupLabel = bot.labelConfiguration().groupLabel(label);\n-                if (groupLabel.isEmpty()) {\n+                var groups = bot.labelConfiguration().groupLabel(label);\n+                \/\/ The group labels already set in this pr\n+                Set<String> commonLabels = currentLabels.stream()\n+                        .filter(groups::contains)\n+                        .collect(Collectors.toSet());\n+                \/\/ No group labels are set\n+                if (commonLabels.isEmpty()) {\n@@ -159,0 +164,1 @@\n+                    currentLabels.add(label);\n@@ -163,1 +169,4 @@\n-                    reply.println(\"The `\" + groupLabel.get() + \"` group label was already applied, so `\" + label + \"` label will not be added.\");\n+                    reply.println(\"The \" + commonLabels.stream()\n+                            .map(l -> \"`\" + l + \"`\")\n+                            .collect(Collectors.joining(\", \"))\n+                            + \" group label\" + (commonLabels.size() > 1 ? \"s were\" : \" was\") + \" already applied, so `\" + label + \"` label will not be added.\");\n@@ -175,0 +184,1 @@\n+                currentLabels.remove(label);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelCommand.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -66,2 +66,1 @@\n-\n-    private void updateLabelMessage(List<Comment> comments, List<String> newLabels, String commitHash) {\n+    private void createInitialLabelMessage(List<Comment> comments, List<String> newLabels, String commitHash) {\n@@ -126,0 +125,5 @@\n+        \/\/ If the pr is already closed, return early\n+        if (pr.isClosed()) {\n+            return List.of();\n+        }\n+\n@@ -136,1 +140,1 @@\n-        \/\/ If the initial label comment can be found,Updating labels when new files are touched\n+        \/\/ If the initial label comment can be found, updating labels when new files are touched\n@@ -157,3 +161,3 @@\n-                    pr.updateComment(initialLabelComment.get().id(), initialLabelComment.get().body().replaceAll(\n-                            \"(<!-- PullRequest Bot label commit ')[^']*(' -->)\",\n-                            \"$1\" + pr.headHash().toString() + \"$2\"));\n+                    Matcher matcher = LABEL_COMMIT_PATTERN.matcher(initialLabelComment.get().body());\n+                    String updatedBody = matcher.replaceAll(String.format(LABEL_COMMIT_MARKER, pr.headHash().toString()));\n+                    pr.updateComment(initialLabelComment.get().id(), updatedBody);\n@@ -170,0 +174,18 @@\n+        } else {\n+            \/\/ Initial auto labeling\n+            try {\n+                var localRepo = IntegrateCommand.materializeLocalRepo(bot, pr, scratchArea);\n+                newLabels.addAll(getLabels(localRepo));\n+                newLabels = bot.labelConfiguration().upgradeLabelsToGroups(newLabels);\n+                syncLabels(pr, oldLabels, newLabels, log);\n+                var labelsAdded = new HashSet<String>();\n+                for (var newLabel : newLabels) {\n+                    if (!oldLabels.contains(newLabel)) {\n+                        labelsAdded.add(newLabel);\n+                    }\n+                }\n+                createInitialLabelMessage(comments, new ArrayList<>(labelsAdded), pr.headHash().toString());\n+            } catch (IOException e) {\n+                throw new UncheckedIOException(e);\n+            }\n+            return needsRfrCheck(newLabels);\n@@ -171,13 +193,0 @@\n-\n-        \/\/ Initial auto labeling\n-        try {\n-            var localRepo = IntegrateCommand.materializeLocalRepo(bot, pr, scratchArea);\n-            var labelsToAdd = getLabels(localRepo);\n-            newLabels.addAll(labelsToAdd);\n-            newLabels = bot.labelConfiguration().upgradeLabelsToGroups(newLabels);\n-            syncLabels(pr, oldLabels, newLabels, log);\n-            updateLabelMessage(comments, new ArrayList<>(labelsToAdd), pr.headHash().toString());\n-        } catch (IOException e) {\n-            throw new UncheckedIOException(e);\n-        }\n-        return needsRfrCheck(newLabels);\n@@ -201,1 +210,1 @@\n-            message.append(\" been added to this pr based on the files touched in your new commit(s).\");\n+            message.append(\" been added to this pull request based on files touched in new commit(s).\");\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerWorkItem.java","additions":29,"deletions":20,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -145,0 +145,1 @@\n+                                                           .addGroup(\"group2\", List.of(\"1\", \"3\"))\n@@ -193,0 +194,10 @@\n+\n+            pr.addComment(\"\/label add group2\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertLastCommentContains(pr, \"The `group2` label was successfully added.\");\n+            assertEquals(Set.of(\"group\", \"group2\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n+\n+            pr.addComment(\"\/label add 1\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertLastCommentContains(pr, \"The `group2`, `group` group labels were already applied, so `1` label will not be added.\");\n+            assertEquals(Set.of(\"group\", \"group2\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -252,1 +263,1 @@\n-            assertLastCommentContains(pr, \"The `2` label was successfully added.\");\n+            assertLastCommentContains(pr, \"The `group` group label was already applied, so `2` label will not be added.\");\n@@ -552,1 +563,1 @@\n-            assertLastCommentContains(pr,\"The `2` label was successfully added.\");\n+            assertLastCommentContains(pr,\"The `group` group label was already applied, so `2` label will not be added.\");\n@@ -554,1 +565,1 @@\n-            assertEquals(Set.of(\"2\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n+            assertEquals(Set.of(), new HashSet<>(pr.store().labelNames()));\n@@ -562,2 +573,2 @@\n-            assertLastCommentContains(pr,\"The `1` label was successfully added.\");\n-            assertLastCommentContains(pr,\"The `2` label was successfully removed.\");\n+            assertLastCommentContains(pr,\"The `group` group label was already applied, so `1` label will not be added.\");\n+            assertLastCommentContains(pr,\"The `2` label was not set.\");\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/LabelTests.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import java.util.Optional;\n@@ -34,1 +33,4 @@\n-    Optional<String> groupLabel(String label);\n+    \/**\n+     * Returns the set of groups that this label belongs to.\n+     *\/\n+    Set<String> groupLabel(String label);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/LabelConfiguration.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.util.Optional;\n@@ -81,1 +80,1 @@\n-    public Optional<String> groupLabel(String label) {\n+    public Set<String> groupLabel(String label) {\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/LabelConfigurationHostedRepository.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -171,1 +171,2 @@\n-    public Optional<String> groupLabel(String label) {\n+    public Set<String> groupLabel(String label) {\n+        var ret = new HashSet<String>();\n@@ -174,1 +175,1 @@\n-                return Optional.of(group.getKey());\n+                ret.add(group.getKey());\n@@ -177,1 +178,1 @@\n-        return Optional.empty();\n+        return ret;\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/LabelConfigurationJson.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}