{"files":[{"patch":"@@ -61,1 +61,1 @@\n-    private Optional<Comment> findComment(List<Comment> comments, String marker) {\n+    static Optional<Comment> findComment(List<Comment> comments, String marker, PullRequest pr) {\n@@ -64,3 +64,3 @@\n-                       .filter(comment -> comment.author().equals(self))\n-                       .filter(comment -> comment.body().contains(marker))\n-                       .findAny();\n+                .filter(comment -> comment.author().equals(self))\n+                .filter(comment -> comment.body().contains(marker))\n+                .findAny();\n@@ -70,1 +70,1 @@\n-        var existing = findComment(comments, INITIAL_LABEL_MESSAGE);\n+        var existing = findComment(comments, INITIAL_LABEL_MESSAGE, pr);\n@@ -139,1 +139,1 @@\n-        if (findComment(prComments(), INITIAL_LABEL_MESSAGE).isPresent()) {\n+        if (findComment(prComments(), INITIAL_LABEL_MESSAGE, pr).isPresent()) {\n@@ -149,1 +149,1 @@\n-                var labelComment = findComment(prComments(), INITIAL_LABEL_MESSAGE);\n+                var labelComment = findComment(prComments(), INITIAL_LABEL_MESSAGE, pr);\n@@ -152,7 +152,3 @@\n-                    var line = labelComment.get().body().lines()\n-                            .map(LABEL_COMMIT_PATTERN::matcher)\n-                            .filter(Matcher::find)\n-                            .findFirst();\n-\n-                    if (line.isPresent()) {\n-                        var evaluatedCommitHash = line.get().group(1);\n+                    var autoLabeledHashOpt = autoLabeledHash(prComments(), pr);\n+                    if (autoLabeledHashOpt.isPresent()) {\n+                        var evaluatedCommitHash = autoLabeledHashOpt.get();\n@@ -166,1 +162,0 @@\n-                    }\n@@ -168,4 +163,5 @@\n-                    for (var newLabel : newLabels) {\n-                        if (!oldLabels.contains(newLabel)) {\n-                            log.info(\"Adding label \" + newLabel);\n-                            pr.addLabel(newLabel);\n+                        for (var newLabel : newLabels) {\n+                            if (!oldLabels.contains(newLabel)) {\n+                                log.info(\"Adding label \" + newLabel);\n+                                pr.addLabel(newLabel);\n+                            }\n@@ -173,1 +169,0 @@\n-                    }\n@@ -175,4 +170,5 @@\n-                    for (var oldLabel : oldLabels) {\n-                        if (!newLabels.contains(oldLabel)) {\n-                            log.info(\"Removing label \" + oldLabel);\n-                            pr.removeLabel(oldLabel);\n+                        for (var oldLabel : oldLabels) {\n+                            if (!newLabels.contains(oldLabel)) {\n+                                log.info(\"Removing label \" + oldLabel);\n+                                pr.removeLabel(oldLabel);\n+                            }\n@@ -180,1 +176,0 @@\n-                    }\n@@ -182,4 +177,8 @@\n-                    pr.updateComment(labelComment.get().id(), labelComment.get().body().replaceAll(\n-                            \"(<!-- PullRequest Bot label commit ')[^']*(' -->)\",\n-                            \"$1\" + pr.headHash().toString() + \"$2\"\n-                    ));\n+                        pr.updateComment(labelComment.get().id(), labelComment.get().body().replaceAll(\n+                                \"(<!-- PullRequest Bot label commit ')[^']*(' -->)\",\n+                                \"$1\" + pr.headHash().toString() + \"$2\"));\n+                    } else {\n+                        \/\/ If auto label comment is present but auto label hash isn't present, mark the headHash as handled.\n+                        pr.updateComment(labelComment.get().id(),\n+                                labelComment.get().body() + \"\\n\" + String.format(LABEL_COMMIT_MARKER, pr.headHash().toString()));\n+                    }\n@@ -247,0 +246,14 @@\n+    static Optional<String> autoLabeledHash(List<Comment> comments, PullRequest pr) {\n+        var labelComment = findComment(comments, INITIAL_LABEL_MESSAGE, pr);\n+        if (labelComment.isPresent()) {\n+            var line = labelComment.get().body().lines()\n+                    .map(LABEL_COMMIT_PATTERN::matcher)\n+                    .filter(Matcher::find)\n+                    .findFirst();\n+            if (line.isPresent()) {\n+                return Optional.of(line.get().group(1));\n+            }\n+        }\n+        return Optional.empty();\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerWorkItem.java","additions":42,"deletions":29,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -197,0 +197,4 @@\n+            if (!bot.isAutoLabelled(pr)) {\n+                return List.of(new LabelerWorkItem(bot, prId, errorHandler, triggerUpdatedAt));\n+            }\n+\n@@ -198,0 +202,5 @@\n+                \/\/ Check if the headHash of the pr has already been processed\n+                var autoLabeledHashOpt = LabelerWorkItem.autoLabeledHash(prComments(), pr);\n+                if (autoLabeledHashOpt.isPresent() && autoLabeledHashOpt.get().equals(pr.headHash().hex())) {\n+                    return List.of();\n+                }\n@@ -252,0 +261,3 @@\n+            if (command.name().equals(\"label\") || command.name().equals(\"cc\")) {\n+                return List.of(CheckWorkItem.fromWorkItem(bot, prId, errorHandler, triggerUpdatedAt), new LabelerWorkItem(bot, prId, errorHandler, triggerUpdatedAt));\n+            }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestCommandWorkItem.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}