{"files":[{"patch":"@@ -439,1 +439,1 @@\n-                    bot.emailAddress().fullName().orElseThrow(), bot.emailAddress().address());\n+                    bot.emailAddress().fullName().orElseThrow(), bot.emailAddress().address(), archiveContents.isEmpty());\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveWorkItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-    public void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail) {\n+    public void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail, boolean createNewFile) {\n","filename":"bots\/tester\/src\/test\/java\/org\/openjdk\/skara\/bots\/tester\/InMemoryHostedRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-    void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail);\n+    void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail, boolean createNewFile);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-    public void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail) {\n+    public void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail, boolean createNewFile) {\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/bitbucket\/BitbucketRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -294,1 +294,1 @@\n-    public void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail) {\n+    public void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail, boolean createNewEmail) {\n@@ -304,6 +304,8 @@\n-        var curentFileData = request.get(\"contents\/\" + filename)\n-                .param(\"ref\", branch.name())\n-                .onError(r -> r.statusCode() == 404 ? Optional.of(JSON.object().put(\"NOT_FOUND\", true)) : Optional.empty())\n-                .execute();\n-        if (curentFileData.contains(\"sha\")) {\n-            body.put(\"sha\", curentFileData.get(\"sha\").asString());\n+        if (!createNewEmail) {\n+            var currentFileData = request.get(\"contents\/\" + filename)\n+                    .param(\"ref\", branch.name())\n+                    .onError(r -> r.statusCode() == 404 ? Optional.of(JSON.object().put(\"NOT_FOUND\", true)) : Optional.empty())\n+                    .execute();\n+            if (currentFileData.contains(\"sha\")) {\n+                body.put(\"sha\", currentFileData.get(\"sha\").asString());\n+            }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -330,1 +330,1 @@\n-    public void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail) {\n+    public void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail, boolean createNewFile) {\n@@ -339,13 +339,12 @@\n-        request.put(\"repository\/files\/\" + encodedFileName)\n-                .body(body)\n-                .onError(response -> {\n-                    \/\/ Gitlab requires POST for creating new files and PUT for updating existing.\n-                    \/\/ Retry with POST if we get 400 response.\n-                    if (response.statusCode() == 400) {\n-                        return Optional.of(request.post(\"repository\/files\/\" + encodedFileName)\n-                                .body(body)\n-                                .execute());\n-                    }\n-                    return Optional.empty();\n-                })\n-                .execute();\n+\n+        if (createNewFile) {\n+            \/\/ Use POST to create a new file\n+            request.post(\"repository\/files\/\" + encodedFileName)\n+                    .body(body)\n+                    .execute();\n+        } else {\n+            \/\/ USE PUT to update the file\n+            request.put(\"repository\/files\/\" + encodedFileName)\n+                    .body(body)\n+                    .execute();\n+        }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-                    \"First commit message\", \"Duke\", \"duke@openjdk.org\");\n+                    \"First commit message\", \"Duke\", \"duke@openjdk.org\", false);\n@@ -207,1 +207,1 @@\n-                    \"Second commit message\", \"Duke\", \"duke@openjdk.org\");\n+                    \"Second commit message\", \"Duke\", \"duke@openjdk.org\", true);\n@@ -216,1 +216,1 @@\n-                    \"Third commit message\", \"Duke\", \"duke@openjdk.org\");\n+                    \"Third commit message\", \"Duke\", \"duke@openjdk.org\", true);\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/github\/GitHubIntegrationTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-                    \"First commit message\", \"Duke\", \"duke@openjdk.org\");\n+                    \"First commit message\", \"Duke\", \"duke@openjdk.org\", true);\n@@ -172,1 +172,1 @@\n-                    \"Second commit message\", \"Duke\", \"duke@openjdk.org\");\n+                    \"Second commit message\", \"Duke\", \"duke@openjdk.org\", false);\n@@ -181,1 +181,1 @@\n-                    \"Third commit message\", \"Duke\", \"duke@openjdk.org\");\n+                    \"Third commit message\", \"Duke\", \"duke@openjdk.org\", false);\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabIntegrationTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -232,1 +232,1 @@\n-    public void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail) {\n+    public void writeFileContents(String filename, String content, Branch branch, String message, String authorName, String authorEmail, boolean createNewFile) {\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestHostedRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}