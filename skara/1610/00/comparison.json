{"files":[{"patch":"@@ -37,0 +37,4 @@\n+    List<IssueTrackerIssue> search(String query, int limit);\n+    default List<IssueTrackerIssue> search(String query) {\n+        return search(query, -1);\n+    }\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/IssueProject.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -450,9 +450,2 @@\n-        var issues = request.post(\"search\")\n-                .body(\"jql\", \"project = \" + projectName + \" AND \\\"JEP Number\\\" ~ \\\"\" + jepId + \"\\\"\")\n-                .execute();\n-        if (issues.get(\"issues\").asArray().size() == 0) {\n-            return Optional.empty();\n-        } else {\n-            var json = issues.get(\"issues\").asArray().get(0);\n-            return Optional.of(new JiraIssue(this, generateIssueRequest(json), json));\n-        }\n+        var issues = search(\"project = \" + projectName + \" AND \\\"JEP Number\\\" ~ \\\"\" + jepId + \"\\\"\");\n+        return issues.isEmpty() ? Optional.empty() : Optional.of(issues.get(0));\n@@ -463,8 +456,1 @@\n-        var ret = new ArrayList<IssueTrackerIssue>();\n-        var issues = request.post(\"search\")\n-                            .body(\"jql\", \"project = \" + projectName + \" AND status in (Open, New)\")\n-                            .execute();\n-        for (var issue : issues.get(\"issues\").asArray()) {\n-            ret.add(new JiraIssue(this, generateIssueRequest(issue), issue));\n-        }\n-        return ret;\n+        return search(\"project = \" + projectName + \" AND status in (Open, New)\");\n@@ -478,1 +464,1 @@\n-        return queryIssues(jql);\n+        return search(jql);\n@@ -487,1 +473,1 @@\n-        return queryIssues(jql);\n+        return search(jql);\n@@ -492,12 +478,2 @@\n-        var jql = \"project = \" + projectName + \" ORDER BY updated DESC\";\n-        var issues = request.get(\"search\")\n-                .param(\"jql\", jql)\n-                .param(\"maxResults\", \"1\")\n-                .execute();\n-        var issuesArray = issues.get(\"issues\").asArray();\n-        if (issuesArray.isEmpty()) {\n-            return Optional.empty();\n-        } else {\n-            var json = issuesArray.get(0);\n-            return Optional.of(new JiraIssue(this, generateIssueRequest(json), json));\n-        }\n+        var issues = search(\"project = \" + projectName + \" ORDER BY updated DESC\", 1);\n+        return issues.isEmpty() ? Optional.empty() : Optional.of(issues.get(0));\n@@ -511,1 +487,6 @@\n-    private List<IssueTrackerIssue> queryIssues(String jql) {\n+    @Override\n+    public List<IssueTrackerIssue> search(String jql, int limit) {\n+        if (limit == 0) {\n+            return List.of();\n+        }\n+\n@@ -514,3 +495,5 @@\n-        var issues = request.get(\"search\")\n-                .param(\"jql\", jql)\n-                .execute();\n+        var req = request.get(\"search\").param(\"jql\", jql);\n+        if (limit > 0) {\n+            req = req.param(\"maxResults\", Integer.toString(limit));\n+        }\n+        var issues = req.execute();\n@@ -526,4 +509,8 @@\n-                issues = request.get(\"search\")\n-                        .param(\"jql\", jql)\n-                        .param(\"startAt\", String.valueOf(startAt))\n-                        .execute();\n+                req = request.get(\"search\")\n+                             .param(\"jql\", jql)\n+                             .param(\"startAt\", String.valueOf(startAt));\n+                if (limit > 0) {\n+                    req = req.param(\"maxResults\", Integer.toString(limit));\n+                }\n+\n+                issues = req.execute();\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraProject.java","additions":26,"deletions":39,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -99,0 +99,5 @@\n+\n+    @Override\n+    public List<IssueTrackerIssue> search(String query, int limit) {\n+        throw new UnsupportedOperationException(\"Not implemented yet\");\n+    }\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/TestIssueProject.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}