{"files":[{"patch":"@@ -451,0 +451,1 @@\n+        \/\/ \/search\/commits can only find commits in default branch of each repository\n@@ -453,2 +454,25 @@\n-        if (items.isEmpty()) {\n-            return Optional.empty();\n+        if (!items.isEmpty()) {\n+            \/\/ When searching for a commit, there may be hits in multiple repositories.\n+            \/\/ There is no good way of knowing for sure which repository we would rather\n+            \/\/ get the commit from, but a reasonable default is to go by the shortest\n+            \/\/ name as that is most likely the main repository of the project.\n+            return items.stream()\n+                    .map(o -> o.get(\"repository\").get(\"full_name\").asString())\n+                    .min(Comparator.comparing(String::length));\n+        }\n+\n+        \/\/ If the commit is not found using \/search\/commits, try to locate it in each repository\n+        for (var org : orgs) {\n+            var repoNames = request.get(\"orgs\/\" + org + \"\/repos\")\n+                    .execute()\n+                    .stream()\n+                    .sorted(Comparator.comparing(o -> o.get(\"full_name\").asString().length()))\n+                    .map(o -> o.get(\"full_name\").asString())\n+                    .toList();\n+\n+            for (var repoName : repoNames) {\n+                var githubRepo = new GitHubRepository(this, repoName);\n+                if (githubRepo.commit(hash).isPresent()) {\n+                    return Optional.of(repoName);\n+                }\n+            }\n@@ -456,7 +480,2 @@\n-        \/\/ When searching for a commit, there may be hits in multiple repositories.\n-        \/\/ There is no good way of knowing for sure which repository we would rather\n-        \/\/ get the commit from, but a reasonable default is to go by the shortest\n-        \/\/ name as that is most likely the main repository of the project.\n-        return items.stream()\n-                .map(o -> o.get(\"repository\").get(\"full_name\").asString())\n-                .min(Comparator.comparing(String::length));\n+\n+        return Optional.empty();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubHost.java","additions":28,"deletions":9,"binary":false,"changes":37,"status":"modified"}]}