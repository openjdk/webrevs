{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import java.util.stream.Collectors;\n@@ -53,1 +52,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n@@ -72,0 +71,7 @@\n+\n+    public static Optional<Comment> getLatestSolvesActionComment(HostUser botUser, List<Comment> comments, Issue issue) {\n+        return comments.stream()\n+                .filter(comment -> comment.author().equals(botUser))\n+                .filter(comment -> comment.body().contains(\"<!-- solves: '\" + issue.shortId() + \"'\"))\n+                .max(Comparator.comparing(Comment::createdAt));\n+    }\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/SolvesTracker.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -769,4 +769,1 @@\n-                        var titleIssue = Issue.fromStringRelaxed(pr.title());\n-                        var isTitleIssue = titleIssue.isPresent() && titleIssue.get().shortId().equals(issue.shortId());\n-                        \/\/ Only check title mismatch for title issue\n-                        if (isTitleIssue && !relaxedEquals(issueTrackerIssue.get().title(), issue.description())) {\n+                        if (!relaxedEquals(issueTrackerIssue.get().title(), issue.description())) {\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -408,0 +408,22 @@\n+    private boolean updateAdditionalIssuesTitle(List<Comment> comments) {\n+        if (bot.issueProject() == null) {\n+            return false;\n+        }\n+        var issueTitleUpdated = false;\n+        var botUser = pr.repository().forge().currentUser();\n+        var issues = SolvesTracker.currentSolved(botUser, comments, pr.title());\n+        for (var issue : issues) {\n+            var solvesComment = SolvesTracker.getLatestSolvesActionComment(botUser, comments, issue);\n+            if (solvesComment.isPresent()) {\n+                var issueTrackerIssue = issueTrackerIssue(issue.shortId());\n+                if (issueTrackerIssue.isPresent() && !issue.description().equals(issueTrackerIssue.get().title())) {\n+                    pr.updateComment(solvesComment.get().id(),\n+                            solvesComment.get().body().replace(SolvesTracker.setSolvesMarker(issue),\n+                                    SolvesTracker.setSolvesMarker(new Issue(issue.shortId(), issueTrackerIssue.get().title()))));\n+                    issueTitleUpdated = true;\n+                }\n+            }\n+        }\n+        return issueTitleUpdated;\n+    }\n+\n@@ -669,0 +691,6 @@\n+            if (updateAdditionalIssuesTitle(comments)) {\n+                var updatedPr = bot.repo().pullRequest(prId);\n+                logLatency(\"Time from PR updated to additional issue's title corrected \", updatedPr.updatedAt(), log);\n+                return List.of(CheckWorkItem.fromWorkItem(bot, prId, errorHandler, triggerUpdatedAt));\n+            }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -3452,0 +3452,8 @@\n+            \/\/ Change the leading letter to upper case\n+            issue2.setTitle(\"This is an issue2 etc.\");\n+            pr.setBody(\"update this pr\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            \/\/ The additional issue marker should be updated, so the warning of leading lowercase letter no longer exists\n+            assertFalse(pr.store().body().contains(\"Found leading lowercase letter in issue title for `2: this is an issue2 etc.`\"));\n+            assertTrue(pr.store().body().contains(\"Found trailing period in issue title for `2: This is an issue2 etc.`\"));\n+\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -226,0 +226,8 @@\n+            \/\/ Update the title of issue2 and issue3\n+            issue2.setTitle(\"Second2\");\n+            issue3.setTitle(\"Third3\");\n+            pr.setBody(\"update this pr\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            \/\/ PR body shouldn't contain title mismatch warning\n+            assertFalse(pr.store().body().contains(\"Title mismatch between PR and JBS for issue\"));\n+\n@@ -245,1 +253,1 @@\n-            assertTrue(preview.contains(issue3Number + \": Third\"));\n+            assertTrue(preview.contains(issue3Number + \": Third3\"));\n@@ -265,1 +273,1 @@\n-                                 issue3Number + \": Third\",\n+                                 issue3Number + \": Third3\",\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IssueTests.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"}]}