{"files":[{"patch":"@@ -121,1 +121,7 @@\n-        CLOSED\n+        CLOSED;\n+\n+        @Override\n+        public String toString() {\n+            String name = name().toLowerCase();\n+            return name.substring(0, 1).toUpperCase() + name.substring(1);\n+        }\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/Issue.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -241,2 +241,2 @@\n-    private void performTransition(String state) {\n-        var id = availableTransitions.get(state);\n+    private void performTransition(State state) {\n+        var id = availableTransitions.get(state.toString());\n@@ -246,1 +246,1 @@\n-        if (state.equals(\"RESOLVED\")) {\n+        if (state == State.RESOLVED) {\n@@ -266,3 +266,3 @@\n-            if (!availableTransitions.containsKey(\"Resolved\")) {\n-                if (availableTransitions.containsKey(\"Open\")) {\n-                    performTransition(\"Open\");\n+            if (!availableTransitions.containsKey(State.RESOLVED.toString())) {\n+                if (availableTransitions.containsKey(State.OPEN.toString())) {\n+                    performTransition(State.OPEN);\n@@ -270,1 +270,1 @@\n-                    if (!availableTransitions.containsKey(\"Resolved\")) {\n+                    if (!availableTransitions.containsKey(State.RESOLVED.toString())) {\n@@ -279,1 +279,1 @@\n-            performTransition(\"Resolved\");\n+            performTransition(State.RESOLVED);\n@@ -281,3 +281,3 @@\n-            if (!availableTransitions.containsKey(\"Closed\")) {\n-                if (availableTransitions.containsKey(\"Resolved\")) {\n-                    performTransition(\"Resolved\");\n+            if (!availableTransitions.containsKey(State.CLOSED.toString())) {\n+                if (availableTransitions.containsKey(State.RESOLVED.toString())) {\n+                    performTransition(State.RESOLVED);\n@@ -285,1 +285,1 @@\n-                    if (!availableTransitions.containsKey(\"Closed\")) {\n+                    if (!availableTransitions.containsKey(State.CLOSED.toString())) {\n@@ -292,1 +292,1 @@\n-            performTransition(\"Closed\");\n+            performTransition(State.CLOSED);\n@@ -294,1 +294,1 @@\n-            if (!availableTransitions.containsKey(\"Open\")) {\n+            if (!availableTransitions.containsKey(State.OPEN.toString())) {\n@@ -297,1 +297,1 @@\n-            performTransition(\"Open\");\n+            performTransition(State.OPEN);\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraIssue.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,0 +120,13 @@\n+\n+    @Test\n+    @EnabledIfTestProperties({\"jira.uri\", \"jira.pat\", \"jira.project\", \"jira.issue\"})\n+    void testResolutionOfResolvedIssue() throws IOException {\n+        var project = tracker.project(props.get(\"jira.project\"));\n+        var issueId = props.get(\"jira.issue\");\n+\n+        var issue = project.issue(issueId).orElseThrow();\n+        issue.setState(Issue.State.RESOLVED);\n+        issue = project.issue(issueId).orElseThrow();\n+        assertTrue(issue.resolution().isPresent());\n+        assertEquals(\"Fixed\", issue.resolution().get());\n+    }\n","filename":"issuetracker\/src\/test\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraIntegrationTests.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"}]}