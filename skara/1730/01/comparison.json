{"files":[{"patch":"@@ -121,1 +121,7 @@\n-        CLOSED\n+        CLOSED;\n+\n+        @Override\n+        public String toString() {\n+            String name = name().toLowerCase();\n+            return name.substring(0, 1).toUpperCase() + name.substring(1);\n+        }\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/Issue.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,1 @@\n+    private Map<String, String> availableTransitions;\n@@ -240,1 +241,2 @@\n-    private void performTransition(String id) {\n+    private void performTransition(State state) {\n+        var id = availableTransitions.get(state.toString());\n@@ -242,2 +244,7 @@\n-                        .put(\"transition\", JSON.object()\n-                                               .put(\"id\", id));\n+                .put(\"transition\", JSON.object()\n+                        .put(\"id\", id));\n+        if (state == State.RESOLVED) {\n+            query.put(\"fields\", JSON.object()\n+                    .put(\"resolution\", JSON.object()\n+                            .put(\"name\", \"Fixed\")));\n+        }\n@@ -245,2 +252,2 @@\n-               .body(query)\n-               .execute();\n+                .body(query)\n+                .execute();\n@@ -251,1 +258,1 @@\n-        var availableTransitions = availableTransitions();\n+        availableTransitions = availableTransitions();\n@@ -259,3 +266,3 @@\n-            if (!availableTransitions.containsKey(\"Resolved\")) {\n-                if (availableTransitions.containsKey(\"Open\")) {\n-                    performTransition(availableTransitions.get(\"Open\"));\n+            if (!availableTransitions.containsKey(State.RESOLVED.toString())) {\n+                if (availableTransitions.containsKey(State.OPEN.toString())) {\n+                    performTransition(State.OPEN);\n@@ -263,1 +270,1 @@\n-                    if (!availableTransitions.containsKey(\"Resolved\")) {\n+                    if (!availableTransitions.containsKey(State.RESOLVED.toString())) {\n@@ -272,1 +279,1 @@\n-            performTransition(availableTransitions.get(\"Resolved\"));\n+            performTransition(State.RESOLVED);\n@@ -274,3 +281,3 @@\n-            if (!availableTransitions.containsKey(\"Closed\")) {\n-                if (availableTransitions.containsKey(\"Resolved\")) {\n-                    performTransition(availableTransitions.get(\"Resolved\"));\n+            if (!availableTransitions.containsKey(State.CLOSED.toString())) {\n+                if (availableTransitions.containsKey(State.RESOLVED.toString())) {\n+                    performTransition(State.RESOLVED);\n@@ -278,1 +285,1 @@\n-                    if (!availableTransitions.containsKey(\"Closed\")) {\n+                    if (!availableTransitions.containsKey(State.CLOSED.toString())) {\n@@ -285,1 +292,1 @@\n-            performTransition(availableTransitions.get(\"Closed\"));\n+            performTransition(State.CLOSED);\n@@ -287,1 +294,1 @@\n-            if (!availableTransitions.containsKey(\"Open\")) {\n+            if (!availableTransitions.containsKey(State.OPEN.toString())) {\n@@ -290,1 +297,1 @@\n-            performTransition(availableTransitions.get(\"Open\"));\n+            performTransition(State.OPEN);\n","filename":"issuetracker\/src\/main\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraIssue.java","additions":26,"deletions":19,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,0 +120,13 @@\n+\n+    @Test\n+    @EnabledIfTestProperties({\"jira.uri\", \"jira.pat\", \"jira.project\", \"jira.issue\"})\n+    void testResolutionOfResolvedIssue() throws IOException {\n+        var project = tracker.project(props.get(\"jira.project\"));\n+        var issueId = props.get(\"jira.issue\");\n+\n+        var issue = project.issue(issueId).orElseThrow();\n+        issue.setState(Issue.State.RESOLVED);\n+        issue = project.issue(issueId).orElseThrow();\n+        assertTrue(issue.resolution().isPresent());\n+        assertEquals(\"Fixed\", issue.resolution().get());\n+    }\n","filename":"issuetracker\/src\/test\/java\/org\/openjdk\/skara\/issuetracker\/jira\/JiraIntegrationTests.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"}]}