{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import org.openjdk.skara.network.UncheckedRestException;\n@@ -193,0 +194,1 @@\n+                targetRefPRMap.values().forEach(s -> s.remove(prId));\n@@ -194,1 +196,0 @@\n-                    targetRefPRMap.values().forEach(s -> s.remove(prId));\n@@ -196,4 +197,0 @@\n-                } else {\n-                    if (targetRefPRMap.containsKey(targetRef)) {\n-                        targetRefPRMap.get(targetRef).remove(prId);\n-                    }\n@@ -203,0 +200,4 @@\n+            var activeBranches = remoteRepo.branches().stream()\n+                    .map(HostedBranch::name)\n+                    .toList();\n+\n@@ -204,1 +205,1 @@\n-                    .filter(key -> targetRefPRMap.get(key).isEmpty())\n+                    .filter(key -> targetRefPRMap.get(key).isEmpty() || !activeBranches.contains(key))\n@@ -227,10 +228,16 @@\n-            var currConfOpt = remoteRepo.fileContents(\".jcheck\/conf\", targetRef);\n-            if (currConfOpt.isEmpty()) {\n-                continue;\n-            }\n-            var currConf = currConfOpt.get();\n-            if (!jCheckConfMap.containsKey(targetRef)) {\n-                jCheckConfMap.put(targetRef, currConf);\n-            } else if (!jCheckConfMap.get(targetRef).equals(currConf)) {\n-                ret.addAll(remoteRepo.openPullRequestsWithTargetRef(targetRef));\n-                jCheckConfMap.put(targetRef, currConf);\n+            try {\n+                var currConfOpt = remoteRepo.fileContents(\".jcheck\/conf\", targetRef);\n+                if (currConfOpt.isEmpty()) {\n+                    continue;\n+                }\n+                var currConf = currConfOpt.get();\n+                if (!jCheckConfMap.containsKey(targetRef)) {\n+                    jCheckConfMap.put(targetRef, currConf);\n+                } else if (!jCheckConfMap.get(targetRef).equals(currConf)) {\n+                    ret.addAll(remoteRepo.openPullRequestsWithTargetRef(targetRef));\n+                    jCheckConfMap.put(targetRef, currConf);\n+                }\n+            } catch (UncheckedRestException e) {\n+                if (e.getStatusCode() != 404) {\n+                    throw e;\n+                }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestBot.java","additions":23,"deletions":16,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -97,1 +97,2 @@\n-     * Returns contents of the file, if the file does not exist, returns Optional.empty().\n+     * Returns contents of the file, if the file does not exist, returns Optional.empty(),\n+     * if the ref does not exist, throws exception.\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/HostedRepository.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -283,1 +283,3 @@\n-            if (e.getStatusCode() == 404) {\n+            \/\/ For GitHub, if ref not found, it returns \"No commit found for the ref \",\n+            \/\/ if file not found, it returns \"Not Found\".\n+            if (e.getStatusCode() == 404 && e.getMessage().contains(\"Not Found\")) {\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -309,0 +309,2 @@\n+                    \/\/ For GitLab, if ref not found, it returns \"404 Commit Not Found\",\n+                    \/\/ if file not found, it returns \"404 File Not Found\"\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -570,1 +570,6 @@\n-            throw new UncheckedRestException(response.statusCode(), response.request());\n+            var responseJSONValue = JSON.parse(response.body());\n+            if (responseJSONValue.contains(\"message\")) {\n+                throw new UncheckedRestException(responseJSONValue.get(\"message\").asString(), response.statusCode(), response.request());\n+            } else {\n+                throw new UncheckedRestException(response.statusCode(), response.request());\n+            }\n","filename":"network\/src\/main\/java\/org\/openjdk\/skara\/network\/RestRequest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}