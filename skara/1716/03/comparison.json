{"files":[{"patch":"@@ -98,1 +98,1 @@\n-                \" passes without any activity. To avoid this, simply add a new comment to the pull request. Feel free \" +\n+                \" passes without any activity. To avoid this, simply issue a `\/touch` or `\/keepalive` command to the pull request. Feel free \" +\n","filename":"bots\/bridgekeeper\/src\/main\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestPrunerBot.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,3 @@\n-    author;\n+    author,\n+    touch,\n+    keepalive;\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/CommandNameEnum.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    public static final String TOUCH_COMMAND_RESPONSE_MARKER = \"<!-- touch command response -->\";\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/PullRequestConstants.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-import static org.openjdk.skara.bots.common.PullRequestConstants.WEBREV_COMMENT_MARKER;\n+import static org.openjdk.skara.bots.common.PullRequestConstants.*;\n@@ -175,0 +175,2 @@\n+\n+            \/\/ Webrev comment should trigger the update\n@@ -181,0 +183,7 @@\n+            \/\/ Touch command should trigger the update\n+            commentString = commentString + comments.stream()\n+                    .filter(comment -> comment.author().equals(pr.repository().forge().currentUser()))\n+                    .flatMap(comment -> comment.body().lines())\n+                    .filter(line -> line.contains(TOUCH_COMMAND_RESPONSE_MARKER))\n+                    .collect(Collectors.joining());\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckWorkItem.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,3 @@\n-            Map.entry(author.name(), new AuthorCommand())\n+            Map.entry(author.name(), new AuthorCommand()),\n+            Map.entry(keepalive.name(), new TouchCommand()),\n+            Map.entry(touch.name(), new TouchCommand())\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommandExtractor.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.skara.bots.pr;\n+\n+import org.openjdk.skara.forge.PullRequest;\n+import org.openjdk.skara.issuetracker.Comment;\n+\n+import java.io.PrintWriter;\n+import java.util.List;\n+\n+import static org.openjdk.skara.bots.common.CommandNameEnum.touch;\n+import static org.openjdk.skara.bots.common.PullRequestConstants.TOUCH_COMMAND_RESPONSE_MARKER;\n+\n+public class TouchCommand implements CommandHandler {\n+    private void showHelp(PrintWriter reply) {\n+        reply.println(\"Usage: `\/touch` or `\/keepalive`\");\n+    }\n+\n+    @Override\n+    public String description() {\n+        return \"Re-evaluates the pull request and resets the inactivity timeout.\";\n+    }\n+\n+    @Override\n+    public String name() {\n+        return touch.name();\n+    }\n+\n+    @Override\n+    public boolean allowedInBody() {\n+        return false;\n+    }\n+\n+    @Override\n+    public void handle(PullRequestBot bot, PullRequest pr, CensusInstance censusInstance, ScratchArea scratchArea, CommandInvocation command, List<Comment> allComments, PrintWriter reply) {\n+        if (!pr.author().equals(command.user()) && censusInstance.contributor(command.user()).isEmpty()) {\n+            printInvalidUserWarning(bot, reply);\n+            return;\n+        }\n+\n+        if (pr.isClosed()) {\n+            reply.println(\"This command can only be used in open pull requests.\");\n+        }\n+\n+        reply.println(\"The pull request is being re-evaluated and the inactivity timeout has been reset.\" + TOUCH_COMMAND_RESPONSE_MARKER);\n+    }\n+}\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/TouchCommand.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,0 +103,1 @@\n+            var checkStartTime1 = check.startedAt();\n@@ -108,0 +109,14 @@\n+\n+            \/\/ Issue \"touch\" command\n+            approvalPr.addComment(\"\/touch\");\n+            TestBotRunner.runPeriodicItems(checkBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var checkStartTime2 = check.startedAt();\n+            assertNotEquals(checkStartTime1, checkStartTime2);\n+\n+            \/\/ Issue \"keepalive\"\n+            approvalPr.addComment(\"\/keepalive\");\n+            TestBotRunner.runPeriodicItems(checkBot);\n+            check = pr.checks(editHash).get(\"jcheck\");\n+            var checkStartTime3 = check.startedAt();\n+            assertNotEquals(checkStartTime2, checkStartTime3);\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"}]}