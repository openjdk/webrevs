{"files":[{"patch":"@@ -80,0 +80,11 @@\n+        \/\/ Check for team\/project special version\n+        if (finalComponents.isEmpty()) {\n+            var projectRepoPattern = Pattern.compile(\"repo-([a-z0-9]*)\");\n+            var matcher = projectRepoPattern.matcher(raw);\n+            if (matcher.matches()) {\n+                var project = matcher.group(1);\n+                finalComponents.add(\"repo\");\n+                finalComponents.add(project);\n+            }\n+        }\n+\n","filename":"jbs\/src\/main\/java\/org\/openjdk\/skara\/jbs\/JdkVersion.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -905,0 +905,14 @@\n+    \/**\n+     * Verify that repo-project versions do not get labeled.\n+     *\/\n+    @Test\n+    void repoProject(TestInfo testInfo) throws IOException {\n+        try (var credentials = new HostCredentials(testInfo)) {\n+            var backports = new BackportManager(credentials, \"17\");\n+            backports.assertLabeled();\n+\n+            backports.addBackports(\"16\", \"16.0.2\", \"repo-foo\");\n+            backports.assertLabeled(\"16.0.2\", \"17\");\n+        }\n+    }\n+\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/BackportsTests.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -153,0 +153,6 @@\n+\n+    @Test\n+    void teamRepo() {\n+        assertEquals(List.of(\"repo\", \"foo\"), from(\"repo-foo\").components());\n+        assertTrue(from(\"20\").compareTo(from(\"repo-foo\")) < 0);\n+    }\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/JdkVersionTests.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}