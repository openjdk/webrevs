{"files":[{"patch":"@@ -114,4 +114,1 @@\n-     * Return true if the issue's fixVersionList matches fixVersion.\n-     *\n-     * fixVersionsList must contain one entry that is an exact match for fixVersions; any\n-     * other entries must be scratch values.\n+     * Return true if issueVersion matches fixVersion.\n@@ -119,6 +116,2 @@\n-    private static boolean matchVersion(IssueTrackerIssue issue, JdkVersion fixVersion) {\n-        var mainVersion = mainFixVersion(issue);\n-        if (mainVersion.isEmpty()) {\n-            return false;\n-        }\n-        return mainVersion.get().equals(fixVersion);\n+    private static boolean matchVersion(JdkVersion issueVersion, JdkVersion fixVersion) {\n+        return issueVersion.equals(fixVersion);\n@@ -128,2 +121,1 @@\n-     * If fixVersion has a major release of <N>, and opt string of <opt> it matches if\n-     * the fixVersionList has an <N>-pool-<opt> entry.\n+     * If fixVersion has a major release of <N>, and opt string of <opt> it matches if the issueVersion equals to <N>-pool-<opt>.\n@@ -131,1 +123,1 @@\n-    private static boolean matchOptPoolVersion(IssueTrackerIssue issue, JdkVersion fixVersion) {\n+    private static boolean matchOptPoolVersion(JdkVersion issueVersion, JdkVersion fixVersion) {\n@@ -139,5 +131,1 @@\n-                var mainVersion = mainFixVersion(issue);\n-                if (mainVersion.isEmpty()) {\n-                    return false;\n-                }\n-                return mainVersion.get().equals(poolVersion.get());\n+                return issueVersion.equals(poolVersion.get());\n@@ -150,2 +138,1 @@\n-     * If fixVersion has a major release of <N>, it matches if the fixVersionList has an\n-     * <N>-pool entry.\n+     * If fixVersion has a major release of <N>, it matches if the issueVersion equals to <N>-pool.\n@@ -153,1 +140,1 @@\n-    private static boolean matchPoolVersion(IssueTrackerIssue issue, JdkVersion fixVersion) {\n+    private static boolean matchPoolVersion(JdkVersion issueVersion, JdkVersion fixVersion) {\n@@ -159,5 +146,1 @@\n-            var mainVersion = mainFixVersion(issue);\n-            if (mainVersion.isEmpty()) {\n-                return false;\n-            }\n-            if (mainVersion.get().equals(poolVersion.get())) {\n+            if (issueVersion.equals(poolVersion.get())) {\n@@ -173,5 +156,1 @@\n-                    var mainVersion = mainFixVersion(issue);\n-                    if (mainVersion.isEmpty()) {\n-                        return false;\n-                    }\n-                    if (mainVersion.get().equals(numericPoolVersion.get())) {\n+                    if (issueVersion.equals(numericPoolVersion.get())) {\n@@ -187,1 +166,1 @@\n-     * Return true if fixVersionList is empty or contains only scratch values.\n+     * Return true if issueVersions is empty or contains only scratch values.\n@@ -189,5 +168,3 @@\n-    private static boolean matchScratchVersion(IssueTrackerIssue issue) {\n-        var nonScratch = fixVersions(issue).stream()\n-                                           .filter(Backports::isNonScratchVersion)\n-                                           .collect(Collectors.toList());\n-        return nonScratch.size() == 0;\n+    private static boolean matchScratchVersion(Set<String> issueVersions) {\n+        return issueVersions.stream()\n+                .noneMatch(Backports::isNonScratchVersion);\n@@ -215,2 +192,2 @@\n-                                             .filter(i -> matchVersion(i, fixVersion))\n-                                             .findFirst();\n+                .filter(i -> mainFixVersion(i).filter(jdkVersion -> matchVersion(jdkVersion, fixVersion)).isPresent())\n+                .findFirst();\n@@ -223,1 +200,1 @@\n-                .filter(i -> matchOptPoolVersion(i, fixVersion))\n+                .filter(i -> mainFixVersion(i).filter(jdkVersion -> matchOptPoolVersion(jdkVersion, fixVersion)).isPresent())\n@@ -231,2 +208,2 @@\n-                                                 .filter(i -> matchPoolVersion(i, fixVersion))\n-                                                 .findFirst();\n+                .filter(i -> mainFixVersion(i).filter(jdkVersion -> matchPoolVersion(jdkVersion, fixVersion)).isPresent())\n+                .findFirst();\n@@ -239,2 +216,2 @@\n-                                                    .filter(Backports::matchScratchVersion)\n-                                                    .findFirst();\n+                .filter(i -> matchScratchVersion(fixVersions(i)))\n+                .findFirst();\n@@ -277,1 +254,2 @@\n-                .filter(issue -> Backports.fixVersions(issue).stream().anyMatch(v -> v.equals(fixVersion.raw())))\n+                .filter(issue -> Backports.fixVersions(issue).stream().anyMatch(\n+                        v -> JdkVersion.parse(v).filter(jdkVersion -> matchVersion(jdkVersion, fixVersion)).isPresent()))\n@@ -283,8 +261,6 @@\n-        if (fixVersion.opt().isPresent()) {\n-            var matchingOptPoolVersionIssue = issueList.stream()\n-                    .filter(issue -> Backports.fixVersions(issue).stream().anyMatch(\n-                            v -> v.equals(fixVersion.feature() + \"-pool-\" + fixVersion.opt().get())))\n-                    .findFirst();\n-            if (matchingOptPoolVersionIssue.isPresent()) {\n-                return matchingOptPoolVersionIssue;\n-            }\n+        var matchingOptPoolVersionIssue = issueList.stream()\n+                .filter(issue -> Backports.fixVersions(issue).stream().anyMatch(\n+                        v -> JdkVersion.parse(v).filter(jdkVersion -> matchOptPoolVersion(jdkVersion, fixVersion)).isPresent()))\n+                .findFirst();\n+        if (matchingOptPoolVersionIssue.isPresent()) {\n+            return matchingOptPoolVersionIssue;\n@@ -294,1 +270,2 @@\n-                .filter(issue -> Backports.fixVersions(issue).stream().anyMatch(v -> v.equals(fixVersion.feature() + \"-pool\")))\n+                .filter(issue -> Backports.fixVersions(issue).stream().anyMatch(\n+                        v -> JdkVersion.parse(v).filter(jdkVersion -> matchPoolVersion(jdkVersion, fixVersion)).isPresent()))\n@@ -301,1 +278,1 @@\n-                .filter(issue -> Backports.fixVersions(issue).stream().noneMatch(v -> !v.startsWith(\"tbd\") && !v.equalsIgnoreCase(\"unknown\")))\n+                .filter(issue -> matchScratchVersion(fixVersions(issue)))\n","filename":"jbs\/src\/main\/java\/org\/openjdk\/skara\/jbs\/Backports.java","additions":32,"deletions":55,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -225,0 +225,3 @@\n+            issue.setProperty(\"fixVersions\", JSON.array().add(\"8-pool\").add(\"11-pool\"));\n+            assertEquals(issue, Backports.findClosestIssue(List.of(issue), JdkVersion.parse(\"openjdk8u432\").orElseThrow()).orElseThrow());\n+\n","filename":"jbs\/src\/test\/java\/org\/openjdk\/skara\/jbs\/BackportsTests.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}