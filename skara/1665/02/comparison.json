{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -218,1 +218,1 @@\n-                    var last = inputs.get(inputs.size() - 1);\n+                    var last = inputs.getLast();\n","filename":"args\/src\/main\/java\/org\/openjdk\/skara\/args\/ArgumentParser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,1 +79,1 @@\n-            var lastComment = comments.get(comments.size() - 1);\n+            var lastComment = comments.getLast();\n","filename":"bots\/bridgekeeper\/src\/main\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestPrunerBot.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1).body();\n+            var comment = pr.comments().getLast().body();\n","filename":"bots\/bridgekeeper\/src\/test\/java\/org\/openjdk\/skara\/bots\/bridgekeeper\/PullRequestPrunerBotTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-            var lastRequest = requests.get(requests.size() - 1).asObject();\n+            var lastRequest = requests.getLast().asObject();\n@@ -104,1 +104,1 @@\n-            lastRequest = requests.get(requests.size() - 1).asObject();\n+            lastRequest = requests.getLast().asObject();\n","filename":"bots\/cli\/src\/test\/java\/org\/openjdk\/skara\/bots\/cli\/BotSlackHandlerTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -421,1 +421,1 @@\n-                return eligible.get(eligible.size() - 1);\n+                return eligible.getLast();\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveItem.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -201,1 +201,1 @@\n-        var lastCommit = commits.get(commits.size() - 1);\n+        var lastCommit = commits.getLast();\n@@ -249,1 +249,1 @@\n-            onNewTagCommit(repository, localRepository, scratchPath, commits.get(commits.size() - 1), tag.tag(), annotation);\n+            onNewTagCommit(repository, localRepository, scratchPath, commits.getLast(), tag.tag(), annotation);\n@@ -255,1 +255,1 @@\n-        var taggedCommit = commits.get(commits.size() - 1);\n+        var taggedCommit = commits.getLast();\n@@ -371,1 +371,1 @@\n-        var finalAuthor = commits.size() > 0 ? commitToAuthor(commits.get(commits.size() - 1)) : sender;\n+        var finalAuthor = commits.size() > 0 ? commitToAuthor(commits.getLast()) : sender;\n","filename":"bots\/notify\/src\/main\/java\/org\/openjdk\/skara\/bots\/notify\/mailinglist\/MailingListNotifier.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1378,1 +1378,1 @@\n-            processed.remove(processed.size() - 1);\n+            processed.removeLast();\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/issue\/IssueNotifierTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -282,1 +282,1 @@\n-            var lastComment = followUpPr.comments().get(followUpPr.comments().size() - 1);\n+            var lastComment = followUpPr.comments().getLast();\n@@ -305,1 +305,1 @@\n-            lastComment = anotherFollowUpPr.comments().get(anotherFollowUpPr.comments().size() - 1);\n+            lastComment = anotherFollowUpPr.comments().getLast();\n","filename":"bots\/notify\/src\/test\/java\/org\/openjdk\/skara\/bots\/notify\/prbranch\/PullRequestBranchNotifierTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-            return Optional.of(ready.get(ready.size() - 1));\n+            return Optional.of(ready.getLast());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReadyForSponsorTracker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -123,1 +123,1 @@\n-        var last = reviewersActions.get(reviewersActions.size() - 1);\n+        var last = reviewersActions.getLast();\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReviewersTracker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n@@ -217,1 +217,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n@@ -321,1 +321,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n@@ -886,1 +886,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n@@ -995,1 +995,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n@@ -1331,1 +1331,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n@@ -1510,1 +1510,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n@@ -1638,1 +1638,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n@@ -1759,1 +1759,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n@@ -1862,1 +1862,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/BackportTests.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -570,1 +570,1 @@\n-            assertTrue(pr.store().comments().get(pr.store().comments().size() - 1).body().contains(\"solves: '2'\"));\n+            assertTrue(pr.store().comments().getLast().body().contains(\"solves: '2'\"));\n@@ -590,1 +590,1 @@\n-            assertTrue(pr.store().comments().get(pr.store().comments().size() - 1).body().contains(\"solves: '4'\"));\n+            assertTrue(pr.store().comments().getLast().body().contains(\"solves: '4'\"));\n@@ -687,1 +687,1 @@\n-            assertTrue(pr.store().comments().get(pr.store().comments().size() - 1).body()\n+            assertTrue(pr.store().comments().getLast().body()\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CSRBotTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2646,1 +2646,1 @@\n-            var lastComment = pr.comments().get(pr.comments().size() - 1);\n+            var lastComment = pr.comments().getLast();\n@@ -2659,1 +2659,1 @@\n-            lastComment = pr.comments().get(pr.comments().size() - 1);\n+            lastComment = pr.comments().getLast();\n@@ -2676,1 +2676,1 @@\n-            lastComment = pr.comments().get(pr.comments().size() - 1);\n+            lastComment = pr.comments().getLast();\n@@ -2692,1 +2692,1 @@\n-            lastComment = pr.comments().get(pr.comments().size() - 1);\n+            lastComment = pr.comments().getLast();\n@@ -2709,1 +2709,1 @@\n-            lastComment = pr.comments().get(pr.comments().size() - 1);\n+            lastComment = pr.comments().getLast();\n@@ -2720,1 +2720,1 @@\n-            lastComment = pr.comments().get(pr.comments().size() - 1);\n+            lastComment = pr.comments().getLast();\n@@ -2737,1 +2737,1 @@\n-            lastComment = pr.comments().get(pr.comments().size() - 1);\n+            lastComment = pr.comments().getLast();\n@@ -3072,1 +3072,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n@@ -3078,1 +3078,1 @@\n-            comment = pr.comments().get(pr.comments().size() - 1);\n+            comment = pr.comments().getLast();\n@@ -3120,1 +3120,1 @@\n-            var comment = pr.comments().get(pr.comments().size() - 1);\n+            var comment = pr.comments().getLast();\n@@ -3126,1 +3126,1 @@\n-            comment = pr.comments().get(pr.comments().size() - 1);\n+            comment = pr.comments().getLast();\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-        var lastComment = comments.get(comments.size() - 1);\n+        var lastComment = comments.getLast();\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CommitCommandAsserts.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -743,1 +743,1 @@\n-            var lastComment = pr.comments().get(pr.comments().size() - 1);\n+            var lastComment = pr.comments().getLast();\n@@ -783,1 +783,1 @@\n-            var lastComment = pr.comments().get(pr.comments().size() - 1);\n+            var lastComment = pr.comments().getLast();\n@@ -1219,1 +1219,1 @@\n-            assertTrue(pr.comments().get(pr.comments().size() - 1).body()\n+            assertTrue(pr.comments().getLast().body()\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IntegrateTests.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -543,1 +543,1 @@\n-        var lastComment = comments.get(comments.size() - 1);\n+        var lastComment = comments.getLast();\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/IssueTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-        var lastComment = comments.get(comments.size() - 1);\n+        var lastComment = comments.getLast();\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestAsserts.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -968,1 +968,1 @@\n-            assertTrue(pr.comments().get(pr.comments().size() - 1).body()\n+            assertTrue(pr.comments().getLast().body()\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/SponsorTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -259,1 +259,1 @@\n-        var lastTargetRef = sortedEvents.get(events.size() - 1).to();\n+        var lastTargetRef = sortedEvents.getLast().to();\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/PullRequest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -200,1 +200,1 @@\n-            return hosts.get(hosts.size() - 1);\n+            return hosts.getLast();\n","filename":"test\/src\/main\/java\/org\/openjdk\/skara\/test\/HostCredentials.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -513,1 +513,1 @@\n-            var lastMark = marks.get(marks.size() - 1);\n+            var lastMark = marks.getLast();\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/openjdk\/converter\/GitToHgConverterTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,1 +148,1 @@\n-            var last = hunksInRange.get(hunksInRange.size() - 1);\n+            var last = hunksInRange.getLast();\n@@ -300,1 +300,1 @@\n-            var last = hunkGroup.get(hunkGroup.size() - 1);\n+            var last = hunkGroup.getLast();\n","filename":"webrev\/src\/main\/java\/org\/openjdk\/skara\/webrev\/HunkCoalescer.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}