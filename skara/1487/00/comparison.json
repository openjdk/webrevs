{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,2 @@\n+\n+    \/\/ Store the response pages of the last two months, the last third month sometimes, and the 404 response.\n@@ -44,0 +46,4 @@\n+\n+    \/\/ Store the email lists of most months, excluding the months mentioned in field `pageCache`.\n+    private final ConcurrentMap<URI, List<Email>> emailCache = new ConcurrentHashMap<>();\n+\n@@ -86,1 +92,1 @@\n-    private Optional<HttpResponse<String>> getPage(URI uri) {\n+    private Optional<HttpResponse<String>> getPage(URI uri, EmailAddress sender, boolean isLastTwoMonth) {\n@@ -102,1 +108,5 @@\n-                pageCache.put(uri, response);\n+                if (isLastTwoMonth) {\n+                    pageCache.put(uri, response);\n+                } else {\n+                    emailCache.put(uri, Mbox.splitMbox(response.body(), sender));\n+                }\n@@ -123,4 +133,2 @@\n-        \/\/ Order pages by most recent first\n-        var potentialPages = getMonthRange(maxAge).stream()\n-                                                  .sorted(Comparator.reverseOrder())\n-                                                  .collect(Collectors.toList());\n+        \/\/ The pages are ordered by oldest first\n+        var potentialPages = getMonthRange(maxAge);\n@@ -130,0 +138,1 @@\n+        var penultimateMonth = potentialPages.size() - 2;\n@@ -137,1 +146,3 @@\n-                if (monthCount > 1 && pageCache.containsKey(mboxUri)) {\n+                if (monthCount < penultimateMonth && emailCache.containsKey(mboxUri)) {\n+                    emails.addAll(emailCache.get(mboxUri));\n+                } else if (monthCount < penultimateMonth && !emailCache.containsKey(mboxUri) && pageCache.containsKey(mboxUri)) {\n@@ -139,2 +150,2 @@\n-                    if (cachedResponse != null && cachedResponse.statusCode() != 404) {\n-                        emails.addAll(0, Mbox.splitMbox(cachedResponse.body(), sender));\n+                    if (cachedResponse.statusCode() == 404) {\n+                        continue;\n@@ -142,2 +153,8 @@\n-                } else {\n-                    var mboxResponse = getPage(mboxUri);\n+                    \/\/ The **new** third month from last when entering a new month.\n+                    var thirdMonthResponse = pageCache.remove(mboxUri);\n+                    var thirdMonthEmails = Mbox.splitMbox(thirdMonthResponse.body(), sender);\n+                    emailCache.put(mboxUri, thirdMonthEmails);\n+                    emails.addAll(thirdMonthEmails);\n+                } else if (monthCount >= penultimateMonth) {\n+                    \/\/ The last two months always get the newest data.\n+                    var mboxResponse = getPage(mboxUri, sender, true);\n@@ -146,1 +163,1 @@\n-                            emails.addAll(0, Mbox.splitMbox(pageCache.get(mboxUri).body(), sender));\n+                            emails.addAll(Mbox.splitMbox(pageCache.get(mboxUri).body(), sender));\n@@ -148,1 +165,1 @@\n-                            emails.addAll(0, Mbox.splitMbox(mboxResponse.get().body(), sender));\n+                            emails.addAll(Mbox.splitMbox(mboxResponse.get().body(), sender));\n@@ -152,0 +169,10 @@\n+                } else {\n+                    \/\/ Not the last two months and the bot is just (re)started.\n+                    var mboxResponse = getPage(mboxUri, sender, false);\n+                    if (mboxResponse.isPresent()) {\n+                        if (mboxResponse.get().statusCode() == 404) {\n+                            continue;\n+                        }\n+                        emails.addAll(emailCache.get(mboxUri));\n+                        newContent = true;\n+                    }\n","filename":"mailinglist\/src\/main\/java\/org\/openjdk\/skara\/mailinglist\/mailman\/MailmanListReader.java","additions":41,"deletions":14,"binary":false,"changes":55,"status":"modified"}]}