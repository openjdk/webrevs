{"files":[{"patch":"@@ -170,1 +170,1 @@\n-    private Map<String, IssueTrackerIssue> issueToCsrMap(Map<Issue, Optional<IssueTrackerIssue>> regularIssuesMap, JdkVersion version) {\n+    private Map<String, IssueTrackerIssue> issueToCsrMap(Map<String, List<Link>> issueToCsrLinksMap, JdkVersion version) {\n@@ -175,5 +175,7 @@\n-        for (var issue : regularIssuesMap.values()) {\n-            if (issue.isPresent()) {\n-                var csrIssue = Backports.findCsr(issue.get(), version);\n-                csrIssue.ifPresent(csr -> csrIssueMap.put(issue.get().id(), csr));\n-            }\n+        for (var entry : issueToCsrLinksMap.entrySet()) {\n+            var csrList = entry.getValue().stream()\n+                    .map(Link::issue)\n+                    .filter(Optional::isPresent)\n+                    .map(Optional::get)\n+                    .toList();\n+            Backports.findClosestIssue(csrList, version).ifPresent(csr -> csrIssueMap.put(entry.getKey(), csr));\n@@ -1352,1 +1354,2 @@\n-            var issueToCsrMap = issueToCsrMap(regularIssuesMap, version);\n+            var issueToCsrLinksMap = issueToCsrLinksMap(regularIssuesMap);\n+            var issueToCsrMap = issueToCsrMap(issueToCsrLinksMap, version);\n@@ -1359,1 +1362,1 @@\n-            updateBackportCSRLabel(regularIssuesMap, issueToCsrMap);\n+            updateBackportCSRLabel(issueToCsrLinksMap, issueToCsrMap);\n@@ -1562,1 +1565,1 @@\n-    private void updateBackportCSRLabel(Map<Issue, Optional<IssueTrackerIssue>> regularIssuesMap, Map<String, IssueTrackerIssue> issueToCsrMap) {\n+    private void updateBackportCSRLabel(Map<String, List<Link>> issueToCsrLinksMap, Map<String, IssueTrackerIssue> issueToCsrMap) {\n@@ -1564,6 +1567,2 @@\n-            boolean hasResolvedCSR = regularIssuesMap.values().stream()\n-                    .filter(Optional::isPresent)\n-                    .map(Optional::get)\n-                    .map(Backports::csrLink)\n-                    .filter(Optional::isPresent)\n-                    .map(Optional::get)\n+            boolean hasResolvedCSR = issueToCsrLinksMap.values().stream()\n+                    .flatMap(List::stream)\n@@ -1577,0 +1576,1 @@\n+                newLabels.add(\"csr\");\n@@ -1581,1 +1581,0 @@\n-                newLabels.add(\"csr\");\n@@ -1646,0 +1645,14 @@\n+    private Map<String, List<Link>> issueToCsrLinksMap(Map<Issue, Optional<IssueTrackerIssue>> regularIssuesMap) {\n+        Map<String, List<Link>> issueToCsrLinksMap = new HashMap<>();\n+        for (var issue : regularIssuesMap.values()) {\n+            if (issue.isPresent()) {\n+                Backports.csrLink(issue.get())\n+                        .ifPresent(link -> issueToCsrLinksMap.computeIfAbsent(issue.get().id(), k -> new ArrayList<>()).add(link));\n+                for (var backportIssue : Backports.findBackports(issue.get(), false)) {\n+                    Backports.csrLink(backportIssue)\n+                            .ifPresent(backportCsrlink -> issueToCsrLinksMap.computeIfAbsent(issue.get().id(), k -> new ArrayList<>()).add(backportCsrlink));\n+                }\n+            }\n+        }\n+        return issueToCsrLinksMap;\n+    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CheckRun.java","additions":29,"deletions":16,"binary":false,"changes":45,"status":"modified"}]}