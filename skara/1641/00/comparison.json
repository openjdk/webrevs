{"files":[{"patch":"@@ -584,7 +584,6 @@\n-                    var prFromFork = fork.createPullRequest(prTarget,\n-                                                            toBranch.name(),\n-                                                            branchDesc,\n-                                                            title,\n-                                                            message);\n-                    var prFromTarget = target.pullRequest(prFromFork.id());\n-                    prFromTarget.addLabel(\"failed-auto-merge\");\n+                    var pr = fork.createPullRequest(prTarget,\n+                            toBranch.name(),\n+                            branchDesc,\n+                            title,\n+                            message);\n+                    pr.addLabel(\"failed-auto-merge\");\n","filename":"bots\/merge\/src\/main\/java\/org\/openjdk\/skara\/bots\/merge\/MergeBot.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -124,2 +124,0 @@\n-        var user = forge().currentUser().username();\n-        var namespace = user.endsWith(\"[bot]\") ? \"\" : user + \":\";\n@@ -128,1 +126,1 @@\n-                         .put(\"head\", namespace + sourceRef)\n+                         .put(\"head\", group() + \":\" + sourceRef)\n@@ -136,1 +134,1 @@\n-        return new GitHubPullRequest(upstream, pr, request);\n+        return new GitHubPullRequest(upstream, pr, upstream.request);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/github\/GitHubRepository.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import org.openjdk.skara.forge.PullRequest;\n@@ -416,0 +417,72 @@\n+\n+    \/**\n+     * Expects:\n+     * github.repository: Github repository where pull requests can be made, e.g. playground\n+     * github.repository.branch: Branch in github.repository to create pull request from\n+     *\/\n+    @Test\n+    @EnabledIfTestProperties({\"github.user\", \"github.pat\", \"github.repository\",\n+            \"github.repository.branch\"})\n+    void createPullRequestSameRepo() {\n+        var gitHubRepo = githubHost.repository((props.get(\"github.repository\"))).orElseThrow();\n+        var sourceBranch = props.get(\"github.repository.branch\");\n+        var pr = gitHubRepo.createPullRequest(gitHubRepo, \"master\", sourceBranch,\n+                \"Skara test PR from same repo\", List.of(\"Skara test PR from same repo\"));\n+        assertEquals(gitHubRepo.name(), pr.repository().name());\n+        assertEquals(gitHubRepo.group(), pr.repository().group());\n+        assertEquals(\"master\", pr.targetRef());\n+        assertEquals(gitHubRepo.name(), pr.sourceRepository().orElseThrow().name());\n+        assertEquals(gitHubRepo.group(), pr.sourceRepository().orElseThrow().group());\n+        pr.setState(PullRequest.State.CLOSED);\n+    }\n+\n+    \/**\n+     * Expects:\n+     * github.repository: Github repository where pull requests can be made, e.g. playground\n+     * github.user: User with a fork of github.repository with permission to create PR in github.respository\n+     * github.user.fork.branch: Name of branch in user fork to create pull request from\n+     *\/\n+    @Test\n+    @EnabledIfTestProperties({\"github.user\", \"github.pat\", \"github.repository\",\n+            \"github.user.fork.branch\"})\n+    void createPullRequestUserFork() {\n+        var gitHubRepo = githubHost.repository((props.get(\"github.repository\"))).orElseThrow();\n+        var sourceBranch = props.get(\"github.user.fork.branch\");\n+        var userName = props.get(\"github.user\");\n+        String name = gitHubRepo.name().split(\"\/\")[1];\n+        var sourceRepo = githubHost.repository(userName + \"\/\" + name).orElseThrow();\n+        var pr = sourceRepo.createPullRequest(gitHubRepo, \"master\", sourceBranch,\n+                \"Skara test PR from user fork\", List.of(\"Skara test PR from user fork\"));\n+        assertEquals(gitHubRepo.name(), pr.repository().name());\n+        assertEquals(gitHubRepo.group(), pr.repository().group());\n+        assertEquals(\"master\", pr.targetRef());\n+        assertEquals(sourceRepo.name(), pr.sourceRepository().orElseThrow().name());\n+        assertEquals(sourceRepo.group(), pr.sourceRepository().orElseThrow().group());\n+        pr.setState(PullRequest.State.CLOSED);\n+    }\n+\n+    \/**\n+     * Expects:\n+     * github.repository: Github repository where pull requests can be made, e.g. playground\n+     * github.user: User with a fork of github.repository with permission to create PR in github.respository\n+     * github.group: Group with fork of github.repository\n+     * github.group.fork.branch: Name of branch in group fork to create pull request from\n+     *\/\n+    @Test\n+    @EnabledIfTestProperties({\"github.user\", \"github.pat\", \"github.repository\",\n+            \"github.group\", \"github.group.fork.branch\"})\n+    void createPullRequestGroupFork() {\n+        var gitHubRepo = githubHost.repository((props.get(\"github.repository\"))).orElseThrow();\n+        var groupName = props.get(\"github.group\");\n+        var sourceBranch = props.get(\"github.group.fork.branch\");\n+        String name = gitHubRepo.name().split(\"\/\")[1];\n+        var sourceRepo = githubHost.repository(groupName + \"\/\" + name).orElseThrow();\n+        var pr = sourceRepo.createPullRequest(gitHubRepo, \"master\", sourceBranch,\n+                \"Skara test PR from group fork\", List.of(\"Skara test PR from group fork\"));\n+        assertEquals(gitHubRepo.name(), pr.repository().name());\n+        assertEquals(gitHubRepo.group(), pr.repository().group());\n+        assertEquals(\"master\", pr.targetRef());\n+        assertEquals(sourceRepo.name(), pr.sourceRepository().orElseThrow().name());\n+        assertEquals(sourceRepo.group(), pr.sourceRepository().orElseThrow().group());\n+        pr.setState(PullRequest.State.CLOSED);\n+    }\n","filename":"forge\/src\/test\/java\/org\/openjdk\/skara\/forge\/github\/GitHubIntegrationTests.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"modified"}]}