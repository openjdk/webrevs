{"files":[{"patch":"@@ -36,0 +36,1 @@\n+    public static final String READY_FOR_SPONSOR_MARKER = \"<!-- integration requested: '%s' -->\";\n@@ -44,0 +45,1 @@\n+    public static final Pattern READY_FOR_SPONSOR_MARKER_PATTERN = Pattern.compile(\"<!-- integration requested: '(.*?)' -->\");\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/PullRequestConstants.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.skara.bots.common.PullRequestConstants;\n@@ -150,1 +151,1 @@\n-            return true;\n+            return !PullRequestConstants.READY_FOR_SPONSOR_MARKER_PATTERN.matcher(body).find();\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveWorkItem.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import org.openjdk.skara.bots.common.PullRequestConstants;\n@@ -361,1 +362,1 @@\n-            \/\/ Mark it as integrated but skip adding the integration comment for now\n+            \/\/ Add sponsor label and comment\n@@ -363,0 +364,8 @@\n+            ignoredPr.addLabel(\"sponsor\");\n+            ignoredPr.addComment(String.format(PullRequestConstants.READY_FOR_SPONSOR_MARKER, editHash.hex()) +\n+                    \"@\" + author.name() + \" Your change (at version \" + editHash.abbreviate() + \") is now ready to be sponsored by a Committer.\");\n+            TestBotRunner.runPeriodicItems(mlBot);\n+            Repository.materialize(archiveFolder.path(), archive.authenticatedUrl(), \"master\");\n+            assertTrue(archiveContains(archiveFolder.path(), \"is now ready to be sponsored by a Committer.\"));\n+\n+            \/\/ Mark it as integrated but skip adding the integration comment for now\n@@ -365,0 +374,3 @@\n+            ignoredPr.removeLabel(\"sponsor\");\n+            ignoredPr.removeLabel(\"rfr\");\n+            ignoredPr.removeLabel(\"ready\");\n","filename":"bots\/mlbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListBridgeBotTests.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+import org.openjdk.skara.bots.common.PullRequestConstants;\n@@ -34,2 +35,0 @@\n-    private static final String MARKER = \"<!-- integration requested: '%s' -->\";\n-    private static final Pattern MARKER_PATTERN = Pattern.compile(\"<!-- integration requested: '(.*?)' -->\");\n@@ -38,1 +37,1 @@\n-        return String.format(MARKER, hash.hex());\n+        return String.format(PullRequestConstants.READY_FOR_SPONSOR_MARKER, hash.hex());\n@@ -43,6 +42,6 @@\n-                                         .filter(comment -> comment.author().equals(botUser))\n-                                         .map(comment -> MARKER_PATTERN.matcher(comment.body()))\n-                                         .filter(Matcher::find)\n-                            .map(matcher -> matcher.group(1))\n-                            .map(Hash::new)\n-                                         .collect(Collectors.toList());\n+                .filter(comment -> comment.author().equals(botUser))\n+                .map(comment -> PullRequestConstants.READY_FOR_SPONSOR_MARKER_PATTERN.matcher(comment.body()))\n+                .filter(Matcher::find)\n+                .map(matcher -> matcher.group(1))\n+                .map(Hash::new)\n+                .collect(Collectors.toList());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/ReadyForSponsorTracker.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"}]}