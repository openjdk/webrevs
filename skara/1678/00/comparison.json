{"files":[{"patch":"@@ -1521,8 +1521,9 @@\n-            var mergeCmd = Process.command(\"git\", \"merge\", \"--no-commit\", \"--allow-unrelated-histories\", \"-s\", \"ours\", otherHash.hex())\n-                                  .workdir(localRepo.root())\n-                                  .environ(\"GIT_AUTHOR_NAME\", \"some\")\n-                                  .environ(\"GIT_AUTHOR_EMAIL\", \"some@one\")\n-                                  .environ(\"GIT_COMMITTER_NAME\", \"another\")\n-                                  .environ(\"GIT_COMMITTER_EMAIL\", \"another@one\")\n-                                  .execute();\n-            mergeCmd.check();\n+            try (var p = Process.command(\"git\", \"merge\", \"--no-commit\", \"--allow-unrelated-histories\", \"-s\", \"ours\", otherHash.hex())\n+                    .workdir(localRepo.root())\n+                    .environ(\"GIT_AUTHOR_NAME\", \"some\")\n+                    .environ(\"GIT_AUTHOR_EMAIL\", \"some@one\")\n+                    .environ(\"GIT_COMMITTER_NAME\", \"another\")\n+                    .environ(\"GIT_COMMITTER_EMAIL\", \"another@one\")\n+                    .execute()) {\n+                p.check();\n+            }\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/MergeTests.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2260,9 +2260,12 @@\n-                    var configResult = GitRepository.capture(dir.path(),\n-                            \"git\", \"config\", \"--list\").await();\n-                    assertEquals(configResult.status(), 0);\n-\n-                    \/\/ We can't get a list of all settings except local, so compare all with local only\n-                    var localConfigResult = GitRepository.capture(dir.path(),\n-                            \"git\", \"config\", \"--list\", \"--local\").await();\n-                    assertEquals(localConfigResult.status(), 0);\n-                    assertEquals(localConfigResult.stdout(), configResult.stdout());\n+                    try (var p = GitRepository.capture(dir.path(),\n+                            \"git\", \"config\", \"--list\")) {\n+                        var configResult = p.await();\n+                        assertEquals(configResult.status(), 0);\n+                        \/\/ We can't get a list of all settings except local, so compare all with local only\n+                        try (var p1 = GitRepository.capture(dir.path(),\n+                                \"git\", \"config\", \"--list\", \"--local\")) {\n+                            var localConfigResult = p1.await();\n+                            assertEquals(localConfigResult.status(), 0);\n+                            assertEquals(localConfigResult.stdout(), configResult.stdout());\n+                        }\n+                    }\n@@ -2273,10 +2276,11 @@\n-                    var settingsResult = HgRepository.capture(dir.path(),\n-                            \"hg\", \"config\").await();\n-                    assertEquals(settingsResult.status(), 0);\n-\n-                    \/\/ There's no way to stop hg from picking up ui.editor or repo settings,\n-                    \/\/ nor to print only them, so hard-code these settings.\n-                    var filteredSettings = settingsResult.stdout().stream().filter(\n-                            s -> !(s.startsWith(\"bundle.mainreporoot=\") || s.startsWith(\"ui.editor=\"))\n-                    ).toArray();\n-                    assertTrue(filteredSettings.length == 0);\n+                    try (var p = HgRepository.capture(dir.path(),\n+                            \"hg\", \"config\")) {\n+                        var settingsResult = p.await();\n+                        assertEquals(settingsResult.status(), 0);\n+                        \/\/ There's no way to stop hg from picking up ui.editor or repo settings,\n+                        \/\/ nor to print only them, so hard-code these settings.\n+                        var filteredSettings = settingsResult.stdout().stream().filter(\n+                                s -> !(s.startsWith(\"bundle.mainreporoot=\") || s.startsWith(\"ui.editor=\"))\n+                        ).toArray();\n+                        assertTrue(filteredSettings.length == 0);\n+                    }\n","filename":"vcs\/src\/test\/java\/org\/openjdk\/skara\/vcs\/RepositoryTests.java","additions":23,"deletions":19,"binary":false,"changes":42,"status":"modified"}]}