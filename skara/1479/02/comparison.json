{"files":[{"patch":"@@ -0,0 +1,32 @@\n+package org.openjdk.skara.bots.common;\n+\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+\/**\n+ * Enum for Skara command names\n+ *\/\n+public enum CommandNameEnum {\n+    help,\n+    integrate,\n+    sponsor,\n+    contributor,\n+    summary,\n+    issue,\n+    solves,\n+    reviewers,\n+    csr,\n+    jep,\n+    reviewer,\n+    label,\n+    cc,\n+    clean,\n+    open,\n+    backport,\n+    tag;\n+\n+    \/* Utility method for returning command names separated by provided deliminator *\/\n+    public static String commandNamesSepByDelim(String deliminator) {\n+        return Stream.of(CommandNameEnum.values()).map(CommandNameEnum::name).collect(Collectors.joining(deliminator));\n+    }\n+}\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/CommandNameEnum.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+package org.openjdk.skara.bots.common;\n+\n+import java.util.regex.Pattern;\n+\n+import static java.util.regex.Pattern.DOTALL;\n+import static java.util.regex.Pattern.MULTILINE;\n+import static java.util.regex.Pattern.compile;\n+\n+\/**\n+ * Enum for commonly used Regex patterns\n+ *\/\n+public enum PatternEnum {\n+\n+    EXECUTION_COMMAND_PATTERN(compile(\"^\\\\s*\/([a-z]+)(?:\\\\s+|$)(.*)?\")),\n+    ARCHIVAL_COMMAND_PATTERN(compile(EXECUTION_COMMAND_PATTERN.pattern.pattern(), Pattern.MULTILINE | Pattern.DOTALL)),\n+    COMMENT_PATTERN(compile(\"<!--.*?-->\", DOTALL | MULTILINE));\n+\n+    private final Pattern pattern;\n+\n+    PatternEnum(Pattern pattern) {\n+        this.pattern = pattern;\n+    }\n+\n+    public Pattern getPattern() {\n+        return this.pattern;\n+    }\n+}\n","filename":"bots\/common\/src\/main\/java\/org\/openjdk\/skara\/bots\/common\/PatternEnum.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -49,0 +49,2 @@\n+    implementation project(':bots:common')\n+    implementation project(':jbs')\n","filename":"bots\/mlbridge\/build.gradle","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+    requires org.openjdk.skara.jbs;\n+    requires org.openjdk.skara.bots.common;\n","filename":"bots\/mlbridge\/src\/main\/java\/module-info.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import java.util.regex.Pattern;\n@@ -40,0 +39,3 @@\n+import static org.openjdk.skara.bots.common.PatternEnum.ARCHIVAL_COMMAND_PATTERN;\n+import static org.openjdk.skara.bots.common.PatternEnum.COMMENT_PATTERN;\n+\n@@ -41,3 +43,1 @@\n-    private static final Pattern COMMENT_PATTERN = Pattern.compile(\"<!--.*?-->\",\n-                                                                  Pattern.DOTALL | Pattern.MULTILINE);\n-    static final Pattern COMMAND_PATTERN = Pattern.compile(\"^\\\\s*\/([A-Za-z]+).*$\", Pattern.MULTILINE | Pattern.DOTALL);\n+\n@@ -48,1 +48,1 @@\n-        var commentMatcher = COMMENT_PATTERN.matcher(body);\n+        var commentMatcher = COMMENT_PATTERN.getPattern().matcher(body);\n@@ -51,1 +51,1 @@\n-        var commandLineMatcher = COMMAND_PATTERN.matcher(body);\n+        var commandLineMatcher = ARCHIVAL_COMMAND_PATTERN.getPattern().matcher(body);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveMessages.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-import static org.openjdk.skara.bots.mlbridge.ArchiveMessages.COMMAND_PATTERN;\n+import static org.openjdk.skara.bots.common.PatternEnum.ARCHIVAL_COMMAND_PATTERN;\n@@ -128,1 +128,1 @@\n-        var commandLineMatcher = COMMAND_PATTERN.matcher(body);\n+        var commandLineMatcher = ARCHIVAL_COMMAND_PATTERN.getPattern().matcher(body);\n","filename":"bots\/mlbridge\/src\/main\/java\/org\/openjdk\/skara\/bots\/mlbridge\/ArchiveWorkItem.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -187,0 +187,20 @@\n+            \/\/skara command prefixed with non-white space - should be archived\n+            pr.addComment(\"do not ignore me \/help\");\n+            \/\/ Run another archive pass\n+            TestBotRunner.runPeriodicItems(mlBot);\n+\n+            \/\/valid skara command - should not be archived\n+            pr.addComment(\"\/help\");\n+            \/\/ Run another archive pass\n+            TestBotRunner.runPeriodicItems(mlBot);\n+\n+            \/\/Invalid skara command but starting with '\/' - should be archived\n+            pr.addComment(\"\/some-text & more text\");\n+            \/\/ Run another archive pass\n+            TestBotRunner.runPeriodicItems(mlBot);\n+\n+            \/\/Not a valid skara command with upper case letter - should be archived\n+            pr.addComment(\"\/Help\");\n+            \/\/ Run another archive pass\n+            TestBotRunner.runPeriodicItems(mlBot);\n+\n@@ -207,0 +227,4 @@\n+            assertTrue(archiveContains(archiveFolder.path(), \"do not ignore me \/help\"));\n+            assertFalse(archiveContains(archiveFolder.path(), \"Available commands\"));\n+            assertTrue(archiveContains(archiveFolder.path(), \"\/some-text & more text\"));\n+            assertTrue(archiveContains(archiveFolder.path(), \"\/Help\"));\n","filename":"bots\/mlbridge\/src\/test\/java\/org\/openjdk\/skara\/bots\/mlbridge\/MailingListBridgeBotTests.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import java.util.regex.Pattern;\n@@ -37,0 +36,3 @@\n+import static org.openjdk.skara.bots.common.CommandNameEnum.*;\n+import static org.openjdk.skara.bots.common.PatternEnum.EXECUTION_COMMAND_PATTERN;\n+\n@@ -38,1 +40,0 @@\n-    private static final Pattern COMMAND_PATTERN = Pattern.compile(\"^\\\\s*\/([A-Za-z]+)(?:\\\\s+(.*))?\");\n@@ -49,17 +50,17 @@\n-            Map.entry(\"help\", new HelpCommand()),\n-            Map.entry(\"integrate\", new IntegrateCommand()),\n-            Map.entry(\"sponsor\", new SponsorCommand()),\n-            Map.entry(\"contributor\", new ContributorCommand()),\n-            Map.entry(\"summary\", new SummaryCommand()),\n-            Map.entry(\"issue\", new IssueCommand()),\n-            Map.entry(\"solves\", new IssueCommand(\"solves\")),\n-            Map.entry(\"reviewers\", new ReviewersCommand()),\n-            Map.entry(\"csr\", new CSRCommand()),\n-            Map.entry(\"jep\", new JEPCommand()),\n-            Map.entry(\"reviewer\", new ReviewerCommand()),\n-            Map.entry(\"label\", new LabelCommand()),\n-            Map.entry(\"cc\", new LabelCommand(\"cc\")),\n-            Map.entry(\"clean\", new CleanCommand()),\n-            Map.entry(\"open\", new OpenCommand()),\n-            Map.entry(\"backport\", new BackportCommand()),\n-            Map.entry(\"tag\", new TagCommand())\n+            Map.entry(help.name(), new HelpCommand()),\n+            Map.entry(integrate.name(), new IntegrateCommand()),\n+            Map.entry(sponsor.name(), new SponsorCommand()),\n+            Map.entry(contributor.name(), new ContributorCommand()),\n+            Map.entry(summary.name(), new SummaryCommand()),\n+            Map.entry(issue.name(), new IssueCommand()),\n+            Map.entry(solves.name(), new IssueCommand(solves.name())),\n+            Map.entry(reviewers.name(), new ReviewersCommand()),\n+            Map.entry(csr.name(), new CSRCommand()),\n+            Map.entry(jep.name(), new JEPCommand()),\n+            Map.entry(reviewer.name(), new ReviewerCommand()),\n+            Map.entry(label.name(), new LabelCommand()),\n+            Map.entry(cc.name(), new LabelCommand(cc.name())),\n+            Map.entry(clean.name(), new CleanCommand()),\n+            Map.entry(open.name(), new OpenCommand()),\n+            Map.entry(backport.name(), new BackportCommand()),\n+            Map.entry(tag.name(), new TagCommand())\n@@ -111,1 +112,1 @@\n-            var commandMatcher = COMMAND_PATTERN.matcher(line);\n+            var commandMatcher = EXECUTION_COMMAND_PATTERN.getPattern().matcher(line);\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/CommandExtractor.java","additions":21,"deletions":20,"binary":false,"changes":41,"status":"modified"}]}