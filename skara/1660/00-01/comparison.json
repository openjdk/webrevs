{"files":[{"patch":"@@ -152,3 +152,4 @@\n-    public void visit(SelfReviewIssue issue)\n-    {\n-        addMessage(issue.check(), \"Self-reviews are not allowed\", issue.severity());\n+    public void visit(SelfReviewIssue issue) {\n+        var message = issue.severity().equals(Severity.ERROR) ? \"Self-reviews are not allowed\" :\n+                \"Self-reviews are not recommended\";\n+        addMessage(issue.check(), message, issue.severity());\n@@ -208,1 +209,3 @@\n-        addMessage(issue.check(), \"Pull request's HEAD commit must contain a full name\", issue.severity());\n+        var message = issue.severity().equals(Severity.ERROR) ? \"Pull request's HEAD commit must contain a full name\" :\n+                \"Pull request's HEAD commit doesn't contain a full name\";\n+        addMessage(issue.check(), message, issue.severity());\n@@ -215,1 +218,3 @@\n-        addMessage(issue.check(), \"Pull request's HEAD commit must contain a valid e-mail\", issue.severity());\n+        var message = issue.severity().equals(Severity.ERROR) ? \"Pull request's HEAD commit must contain a valid e-mail\" :\n+                \"Pull request's HEAD commit doesn't contain a valid e-mail\";\n+        addMessage(issue.check(), message, issue.severity());\n@@ -244,1 +249,1 @@\n-        var annotation = annotationBuilder.title(\"Whitespace error\").build();\n+        var annotation = annotationBuilder.title(\"Whitespace \" + issue.severity().toString()).build();\n@@ -247,1 +252,1 @@\n-        addMessage(issue.check(), \"Whitespace errors\", issue.severity());\n+        addMessage(issue.check(), \"Whitespace \" + issue.severity().toString() + \"s\", issue.severity());\n@@ -283,1 +288,3 @@\n-        addMessage(issue.check(), String.format(\"Patch contains an executable file (file: %s)\", issue.path()), issue.severity());\n+        var message = issue.severity().equals(Severity.ERROR) ? String.format(\"Executable files are not allowed (file: %s)\", issue.path())\n+                : String.format(\"Patch contains an executable file (%s)\", issue.path());\n+        addMessage(issue.check(), message, issue.severity());\n@@ -289,1 +296,3 @@\n-        addMessage(issue.check(), String.format(\"Patch contains a symbolic link (file: %s)\", issue.path()), issue.severity());\n+        var message = issue.severity().equals(Severity.ERROR) ? String.format(\"Symbolic links are not allowed (file: %s)\", issue.path())\n+                : String.format(\"Patch contains a symbolic link (%s)\", issue.path());\n+        addMessage(issue.check(), message, issue.severity());\n@@ -295,1 +304,3 @@\n-        addMessage(issue.check(), String.format(\"Patch contains a binary file (file: %s)\", issue.path()), issue.severity());\n+        var message = issue.severity().equals(Severity.ERROR) ? String.format(\"Binary files are not allowed (file: %s)\", issue.path())\n+                : String.format(\"Patch contains a binary file (%s)\", issue.path());\n+        addMessage(issue.check(), message, issue.severity());\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/PullRequestCheckIssueVisitor.java","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -641,1 +641,1 @@\n-            assertTrue(check.summary().orElseThrow().contains(\"Patch contains an executable file (file: executable.exe)\"));\n+            assertTrue(check.summary().orElseThrow().contains(\"Executable files are not allowed (file: executable.exe)\"));\n@@ -645,1 +645,1 @@\n-            assertTrue(pr.store().body().contains(\"Patch contains an executable file (file: executable.exe)\"));\n+            assertTrue(pr.store().body().contains(\"Executable files are not allowed (file: executable.exe)\"));\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/CheckTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}