{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,0 +88,15 @@\n+\n+    \/\/ Return true if the latest operation on the given label by the botUser was \"removed\"\n+    static boolean isLabelManuallyRemoved(HostUser botUser, List<Comment> comments, String label) {\n+        return comments.stream()\n+                .filter(comment -> comment.author().equals(botUser))\n+                .sorted(Comparator.comparing(Comment::createdAt).reversed())\n+                .flatMap(comment -> comment.body().lines())\n+                .map(LABEL_MARKER_PATTERN::matcher)\n+                .filter(Matcher::find)\n+                .filter(matcher -> matcher.group(2).equals(label))\n+                .map(matcher -> matcher.group(1))\n+                .findFirst()\n+                .map(action -> action.equals(\"removed\"))\n+                .orElse(false);\n+    }\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelTracker.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -150,14 +150,1 @@\n-                    \/\/ Check if there is any associated group label already set, if not, add this label to new labels\n-                    for (var label : newLabelsNeedToBeAdded) {\n-                        var groups = bot.labelConfiguration().groupLabels(label);\n-                        \/\/ The group labels already set in this pr\n-                        Set<String> commonLabels = oldLabels.stream()\n-                                .filter(groups::contains)\n-                                .collect(Collectors.toSet());\n-                        if (commonLabels.isEmpty()) {\n-                            newLabels.add(label);\n-                        }\n-                    }\n-\n-                    syncLabels(pr, oldLabels, newLabels, log);\n-\n+                    processLabelsWithGroups(comments, oldLabels, newLabels, newLabelsNeedToBeAdded);\n@@ -187,9 +174,5 @@\n-                newLabels.addAll(getLabels(localRepo));\n-                syncLabels(pr, oldLabels, newLabels, log);\n-                var labelsAdded = new HashSet<String>();\n-                for (var newLabel : newLabels) {\n-                    if (!oldLabels.contains(newLabel)) {\n-                        labelsAdded.add(newLabel);\n-                    }\n-                }\n-                createInitialLabelMessage(comments, new ArrayList<>(labelsAdded), pr.headHash().toString());\n+                var newLabelsNeedToBeAdded = getLabels(localRepo);\n+                processLabelsWithGroups(comments, oldLabels, newLabels, newLabelsNeedToBeAdded);\n+                \/\/ The labels actually added\n+                newLabels.removeAll(oldLabels);\n+                createInitialLabelMessage(comments, new ArrayList<>(newLabels), pr.headHash().toString());\n@@ -203,0 +186,42 @@\n+\n+    \/**\n+     * For each label needing to be added, check if an associated group label should be set.\n+     * If no group label applies, just add the original label.\n+     *\/\n+    private void processLabelsWithGroups(List<Comment> comments, Set<String> oldLabels, Set<String> newLabels, Set<String> newLabelsNeedToBeAdded) {\n+        for (var label : newLabelsNeedToBeAdded) {\n+            var groupLabels = bot.labelConfiguration().groupLabels(label);\n+            if (groupLabels.isEmpty()) {\n+                \/\/ If the label doesn't belong to any group, just add it.\n+                newLabels.add(label);\n+            } else {\n+                for (var groupLabel : groupLabels) {\n+                    \/\/ If old Labels already have this group label, skip adding this label or group label\n+                    if (oldLabels.contains(groupLabel)) {\n+                        continue;\n+                    }\n+                    \/\/ Check if this group label was manually removed by the user.\n+                    if (LabelTracker.isLabelManuallyRemoved(pr.repository().forge().currentUser(), comments, groupLabel)) {\n+                        \/\/ If the group was manually removed by user, don't upgrade this label to group label\n+                        newLabels.add(label);\n+                    } else {\n+                        \/\/ See if any existing label belongs to the same group (excluding the current label).\n+                        boolean hasOtherLabelInGroup = bot.labelConfiguration()\n+                                .labelsInGroup(groupLabel)\n+                                .stream()\n+                                .filter(l -> !l.equals(label))\n+                                .anyMatch(oldLabels::contains);\n+                        if (hasOtherLabelInGroup) {\n+                            \/\/ Upgrade: since another group label exists, we can add the group label itself.\n+                            newLabels.add(groupLabel);\n+                        } else {\n+                            \/\/ No other group label found, so add the original label.\n+                            newLabels.add(label);\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        syncLabels(pr, oldLabels, newLabels, log);\n+    }\n+\n","filename":"bots\/pr\/src\/main\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerWorkItem.java","additions":48,"deletions":23,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -241,1 +241,2 @@\n-            assertEquals(Set.of(\"1\", \"2\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n+            \/\/ hpp file would let the bot add label \"2\", since the user manually added \"1\", so \"2\" will be upgraded to \"group\"\n+            assertEquals(Set.of(\"1\", \"group\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -246,2 +247,2 @@\n-            Files.writeString(localRepoFolder.resolve(\"test.cpp\"), \"Hello there\");\n-            localRepo.add(Path.of(\"test.cpp\"));\n+            Files.writeString(localRepoFolder.resolve(\"test2.hpp\"), \"Hello there\");\n+            localRepo.add(Path.of(\"test2.hpp\"));\n@@ -252,1 +253,1 @@\n-            assertEquals(Set.of(\"1\", \"2\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n+            assertEquals(Set.of(\"1\", \"group\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n@@ -257,2 +258,2 @@\n-            assertLastCommentContains(pr, \"The `group` label was successfully added.\");\n-            assertLastCommentContains(pr, \"The `2` label was already applied.\");\n+            assertLastCommentContains(pr, \"The `group` label was already applied.\");\n+            assertLastCommentContains(pr, \"The `2` label was successfully added.\");\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/LabelTests.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -475,1 +475,15 @@\n-            \/\/ After adding cpp file, \"1\" should be added\n+            \/\/ After adding cpp file, \"1\" should be added, but \"2\" label already there, so \"1\" will be upgraded to \"group1\"\n+            assertEquals(Set.of(\"group1\", \"2\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n+\n+            \/\/ Remove group1 manually\n+            pr.addComment(\"\/label remove group1\");\n+            TestBotRunner.runPeriodicItems(prBot);\n+            assertEquals(Set.of(\"2\", \"rfr\"), new HashSet<>(pr.store().labelNames()));\n+\n+            \/\/Add another file trigger label \"1\"\n+            var cpp2File = localRepo.root().resolve(\"test2.cpp\");\n+            Files.writeString(cpp2File, \"Hello cpp\");\n+            localRepo.add(cpp2File);\n+            var updated2EditHash = localRepo.commit(\"add test2.cpp file\", \"duke\", \"duke@openjdk.org\");\n+            localRepo.push(updated2EditHash, author.authenticatedUrl(), \"edit\", true);\n+            TestBotRunner.runPeriodicItems(prBot);\n","filename":"bots\/pr\/src\/test\/java\/org\/openjdk\/skara\/bots\/pr\/LabelerTests.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.util.List;\n@@ -37,0 +38,4 @@\n+    \/**\n+     * Returns the set of labels belongs to this group label\n+     *\/\n+    List<String> labelsInGroup(String label);\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/LabelConfiguration.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.util.List;\n@@ -83,0 +84,5 @@\n+\n+    @Override\n+    public List<String> labelsInGroup(String label) {\n+        return labelConfiguration().labelsInGroup(label);\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/LabelConfigurationHostedRepository.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -180,0 +180,9 @@\n+\n+    public List<String> labelsInGroup(String label) {\n+       for(var group : groups.entrySet()) {\n+           if (group.getKey().equals(label)) {\n+               return group.getValue();\n+           }\n+       }\n+       return List.of();\n+    }\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/LabelConfigurationJson.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}