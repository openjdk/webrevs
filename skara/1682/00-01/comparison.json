{"files":[{"patch":"@@ -559,9 +559,4 @@\n-        Optional<CommitComment> found = Optional.empty();\n-        for (var candidate : candidates) {\n-            found = commitComments(candidate).stream()\n-                    .filter(comment -> comment.id().equals(commentId))\n-                    .findFirst();\n-            if (found.isPresent()) {\n-                break;\n-            }\n-        }\n+        Optional<CommitComment> found = candidates.stream()\n+                .flatMap(candidate -> commitComments(candidate).stream())\n+                .filter(comment -> comment.id().equals(commentId))\n+                .findFirst();\n@@ -644,0 +639,3 @@\n+\n+        Map<String, Set<Hash>> tempCommitTitleToCommits = new HashMap<>();\n+\n@@ -647,1 +645,1 @@\n-            commitTitleToCommits.computeIfAbsent(title, t -> new LinkedHashSet<>()).add(hash);\n+            tempCommitTitleToCommits.computeIfAbsent(title, t -> new LinkedHashSet<>()).add(hash);\n@@ -653,0 +651,12 @@\n+\n+        for (var entry : tempCommitTitleToCommits.entrySet()) {\n+            if (commitTitleToCommits.containsKey(entry.getKey())) {\n+                Set<Hash> temp = new LinkedHashSet<>();\n+                temp.addAll(entry.getValue());\n+                temp.addAll(commitTitleToCommits.get(entry.getKey()));\n+                commitTitleToCommits.put(entry.getKey(), temp);\n+            } else {\n+                commitTitleToCommits.put(entry.getKey(), entry.getValue());\n+            }\n+        }\n+\n","filename":"forge\/src\/main\/java\/org\/openjdk\/skara\/forge\/gitlab\/GitLabRepository.java","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"}]}