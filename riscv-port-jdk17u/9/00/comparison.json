{"files":[{"patch":"@@ -872,1 +872,5 @@\n-   *   goto copy_8_bytes;\n+   *   if (count >= 32)\n+   *     goto copy32_loop;\n+   *   if (count >= 8)\n+   *     goto copy8_loop;\n+   *   goto copy_small;\n@@ -890,1 +894,1 @@\n-   *   goto copy8;\n+   *   goto copy_big;\n@@ -893,0 +897,3 @@\n+   * copy_big:\n+   * if the amount to copy is more than (or equal to) 32 bytes goto copy32_loop\n+   *  else goto copy8_loop\n@@ -953,1 +960,1 @@\n-    const Register src = x30, dst = x31, cnt = x15, tmp3 = x16, tmp4 = x17;\n+    const Register src = x30, dst = x31, cnt = x15, tmp3 = x16, tmp4 = x17, tmp5 = x14, tmp6 = x13;\n@@ -956,1 +963,1 @@\n-    Label copy8, copy_small, done;\n+    Label copy_big, copy32_loop, copy8_loop, copy_small, done;\n@@ -991,0 +998,2 @@\n+      __ addi(tmp, cnt, -32);\n+      __ bgez(tmp, copy32_loop);\n@@ -992,1 +1001,1 @@\n-      __ bgez(tmp, copy8);\n+      __ bgez(tmp, copy8_loop);\n@@ -994,8 +1003,24 @@\n-    }\n-\n-    __ mv(tmp, 16);\n-    __ blt(cnt, tmp, copy_small);\n-\n-    __ xorr(tmp, src, dst);\n-    __ andi(tmp, tmp, 0b111);\n-    __ bnez(tmp, copy_small);\n+    } else {\n+      __ mv(tmp, 16);\n+      __ blt(cnt, tmp, copy_small);\n+\n+      __ xorr(tmp, src, dst);\n+      __ andi(tmp, tmp, 0b111);\n+      __ bnez(tmp, copy_small);\n+\n+      __ bind(same_aligned);\n+      __ andi(tmp, src, 0b111);\n+      __ beqz(tmp, copy_big);\n+      if (is_backwards) {\n+        __ addi(src, src, step);\n+        __ addi(dst, dst, step);\n+      }\n+      (_masm->*ld_arr)(tmp3, Address(src), t0);\n+      (_masm->*st_arr)(tmp3, Address(dst), t0);\n+      if (!is_backwards) {\n+        __ addi(src, src, step);\n+        __ addi(dst, dst, step);\n+      }\n+      __ addi(cnt, cnt, -granularity);\n+      __ beqz(cnt, done);\n+      __ j(same_aligned);\n@@ -1003,3 +1028,5 @@\n-    __ bind(same_aligned);\n-    __ andi(tmp, src, 0b111);\n-    __ beqz(tmp, copy8);\n+      __ bind(copy_big);\n+      __ mv(tmp, 32);\n+      __ blt(cnt, tmp, copy8_loop);\n+    }\n+    __ bind(copy32_loop);\n@@ -1007,2 +1034,2 @@\n-      __ addi(src, src, step);\n-      __ addi(dst, dst, step);\n+      __ addi(src, src, -wordSize * 4);\n+      __ addi(dst, dst, -wordSize * 4);\n@@ -1010,2 +1037,10 @@\n-    (_masm->*ld_arr)(tmp3, Address(src), t0);\n-    (_masm->*st_arr)(tmp3, Address(dst), t0);\n+    \/\/ we first load 32 bytes, then write it, so the direction here doesn't matter\n+    __ ld(tmp3, Address(src));\n+    __ ld(tmp4, Address(src, 8));\n+    __ ld(tmp5, Address(src, 16));\n+    __ ld(tmp6, Address(src, 24));\n+    __ sd(tmp3, Address(dst));\n+    __ sd(tmp4, Address(dst, 8));\n+    __ sd(tmp5, Address(dst, 16));\n+    __ sd(tmp6, Address(dst, 24));\n+\n@@ -1013,2 +1048,2 @@\n-      __ addi(src, src, step);\n-      __ addi(dst, dst, step);\n+      __ addi(src, src, wordSize * 4);\n+      __ addi(dst, dst, wordSize * 4);\n@@ -1016,3 +1051,8 @@\n-    __ addi(cnt, cnt, -granularity);\n-    __ beqz(cnt, done);\n-    __ j(same_aligned);\n+    __ addi(tmp, cnt, -(32 + wordSize * 4));\n+    __ addi(cnt, cnt, -wordSize * 4);\n+    __ bgez(tmp, copy32_loop); \/\/ cnt >= 32, do next loop\n+\n+    __ beqz(cnt, done); \/\/ if that's all - done\n+\n+    __ addi(tmp, cnt, -8); \/\/ if not - copy the reminder\n+    __ bltz(tmp, copy_small); \/\/ cnt < 8, go to copy_small, else fall throught to copy8_loop\n@@ -1020,1 +1060,1 @@\n-    __ bind(copy8);\n+    __ bind(copy8_loop);\n@@ -1031,0 +1071,1 @@\n+    __ addi(tmp, cnt, -(8 + wordSize));\n@@ -1032,2 +1073,1 @@\n-    __ addi(tmp4, cnt, -8);\n-    __ bgez(tmp4, copy8); \/\/ cnt >= 8, do next loop\n+    __ bgez(tmp, copy8_loop); \/\/ cnt >= 8, do next loop\n@@ -1035,1 +1075,1 @@\n-    __ beqz(cnt, done);\n+    __ beqz(cnt, done); \/\/ if that's all - done\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":69,"deletions":29,"binary":false,"changes":98,"status":"modified"}]}