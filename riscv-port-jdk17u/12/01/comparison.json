{"files":[{"patch":"@@ -1225,1 +1225,1 @@\n-    __ load_klass(t0, obj);\n+    __ load_klass(t0, obj, t1);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-    encode_klass_not_null(tmp1, klass);\n+    encode_klass_not_null(tmp1, klass, tmp2);\n@@ -319,1 +319,2 @@\n-  cmp_klass(receiver, iCache, t0, L);\n+  assert_different_registers(receiver, iCache, t0, t2);\n+  cmp_klass(receiver, iCache, t0, t2 \/* call-clobbered t2 as a tmp *\/, L);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1657,1 +1657,2 @@\n-void MacroAssembler::cmp_klass(Register oop, Register trial_klass, Register tmp, Label &L) {\n+void MacroAssembler::cmp_klass(Register oop, Register trial_klass, Register tmp1, Register tmp2, Label &L) {\n+  assert_different_registers(oop, trial_klass, tmp1, tmp2);\n@@ -1659,1 +1660,1 @@\n-      lwu(tmp, Address(oop, oopDesc::klass_offset_in_bytes()));\n+    lwu(tmp1, Address(oop, oopDesc::klass_offset_in_bytes()));\n@@ -1661,2 +1662,2 @@\n-      slli(tmp, tmp, CompressedKlassPointers::shift());\n-      beq(trial_klass, tmp, L);\n+      slli(tmp1, tmp1, CompressedKlassPointers::shift());\n+      beq(trial_klass, tmp1, L);\n@@ -1665,1 +1666,1 @@\n-    decode_klass_not_null(tmp);\n+    decode_klass_not_null(tmp1, tmp2);\n@@ -1667,1 +1668,1 @@\n-    ld(tmp, Address(oop, oopDesc::klass_offset_in_bytes()));\n+    ld(tmp1, Address(oop, oopDesc::klass_offset_in_bytes()));\n@@ -1669,1 +1670,1 @@\n-  beq(trial_klass, tmp, L);\n+  beq(trial_klass, tmp1, L);\n@@ -1849,1 +1850,3 @@\n-void MacroAssembler::load_klass(Register dst, Register src) {\n+void MacroAssembler::load_klass(Register dst, Register src, Register tmp) {\n+  assert_different_registers(dst, tmp);\n+  assert_different_registers(src, tmp);\n@@ -1852,1 +1855,1 @@\n-    decode_klass_not_null(dst);\n+    decode_klass_not_null(dst, tmp);\n@@ -1858,1 +1861,1 @@\n-void MacroAssembler::store_klass(Register dst, Register src) {\n+void MacroAssembler::store_klass(Register dst, Register src, Register tmp) {\n@@ -1862,1 +1865,1 @@\n-    encode_klass_not_null(src);\n+    encode_klass_not_null(src, tmp);\n@@ -1876,2 +1879,3 @@\n-void  MacroAssembler::decode_klass_not_null(Register r) {\n-  decode_klass_not_null(r, r);\n+void MacroAssembler::decode_klass_not_null(Register r, Register tmp) {\n+  assert_different_registers(r, tmp);\n+  decode_klass_not_null(r, r, tmp);\n@@ -1908,2 +1912,0 @@\n-\n-  if (xbase == xheapbase) { reinit_heapbase(); }\n@@ -1912,2 +1914,3 @@\n-void MacroAssembler::encode_klass_not_null(Register r) {\n-  encode_klass_not_null(r, r);\n+void MacroAssembler::encode_klass_not_null(Register r, Register tmp) {\n+  assert_different_registers(r, tmp);\n+  encode_klass_not_null(r, r, tmp);\n@@ -1947,3 +1950,0 @@\n-  if (xbase == xheapbase) {\n-    reinit_heapbase();\n-  }\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -192,8 +192,8 @@\n-  void load_klass(Register dst, Register src);\n-  void store_klass(Register dst, Register src);\n-  void cmp_klass(Register oop, Register trial_klass, Register tmp, Label &L);\n-\n-  void encode_klass_not_null(Register r);\n-  void decode_klass_not_null(Register r);\n-  void encode_klass_not_null(Register dst, Register src, Register tmp = xheapbase);\n-  void decode_klass_not_null(Register dst, Register src, Register tmp = xheapbase);\n+  void load_klass(Register dst, Register src, Register tmp = t0);\n+  void store_klass(Register dst, Register src, Register tmp = t0);\n+  void cmp_klass(Register oop, Register trial_klass, Register tmp1, Register tmp2, Label &L);\n+\n+  void encode_klass_not_null(Register r, Register tmp = t0);\n+  void decode_klass_not_null(Register r, Register tmp = t0);\n+  void encode_klass_not_null(Register dst, Register src, Register tmp);\n+  void decode_klass_not_null(Register dst, Register src, Register tmp);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-  Register temp = t1;\n+  Register temp1 = t1;\n@@ -82,3 +82,3 @@\n-  __ push_reg(RegSet::of(temp, temp2), sp);\n-  __ load_klass(temp, obj);\n-  __ cmpptr(temp, ExternalAddress((address) klass_addr), L_ok);\n+  __ push_reg(RegSet::of(temp1, temp2), sp);\n+  __ load_klass(temp1, obj, temp2);\n+  __ cmpptr(temp1, ExternalAddress((address) klass_addr), L_ok);\n@@ -86,3 +86,3 @@\n-  __ ld(temp, Address(temp, super_check_offset));\n-  __ cmpptr(temp, ExternalAddress((address) klass_addr), L_ok);\n-  __ pop_reg(RegSet::of(temp, temp2), sp);\n+  __ ld(temp1, Address(temp1, super_check_offset));\n+  __ cmpptr(temp1, ExternalAddress((address) klass_addr), L_ok);\n+  __ pop_reg(RegSet::of(temp1, temp2), sp);\n@@ -92,1 +92,1 @@\n-  __ pop_reg(RegSet::of(temp, temp2), sp);\n+  __ pop_reg(RegSet::of(temp1, temp2), sp);\n","filename":"src\/hotspot\/cpu\/riscv\/methodHandles_riscv.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1723,1 +1723,1 @@\n-  __ cmp_klass(j_rarg0, t1, t0, skip);\n+  __ cmp_klass(j_rarg0, t1, t0, t2 \/* call-clobbered t2 as a tmp *\/, skip);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -631,1 +631,1 @@\n-    __ load_klass(t0, receiver);\n+    __ load_klass(t0, receiver, tmp);\n@@ -1418,1 +1418,0 @@\n-  assert_different_registers(ic_reg, receiver, t0);\n@@ -1420,1 +1419,2 @@\n-  __ cmp_klass(receiver, ic_reg, t0, hit);\n+  assert_different_registers(ic_reg, receiver, t0, t2);\n+  __ cmp_klass(receiver, ic_reg, t0, t2 \/* call-clobbered t2 as a tmp *\/, hit);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1781,1 +1781,1 @@\n-      __ load_klass(t0, dst);\n+      __ load_klass(t0, dst, t1);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}