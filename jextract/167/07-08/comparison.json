{"files":[{"patch":"@@ -73,0 +73,2 @@\n+        Utils.forEachNested(funcTree, s -> s.accept(this, firstNamedParent));\n+\n@@ -83,0 +85,1 @@\n+            Utils.forEachNested(param, s -> s.accept(this, firstNamedParent));\n@@ -106,1 +109,0 @@\n-        Type type = varTree.type();\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/UnsupportedFilter.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.annotations.Test;\n+import test.jextract.nestedtypes.unsupported.*;\n+\n+import java.lang.foreign.FunctionDescriptor;\n+import java.lang.foreign.MemoryLayout;\n+import java.lang.foreign.MemorySegment;\n+\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.assertTrue;\n+\n+\/*\n+ * @test id=classes\n+ * @library \/lib\n+ * @run main\/othervm JtregJextract -t test.jextract.nestedtypes.unsupported nested_types_unsupported.h\n+ * @build TestNestedTypesUnsupported\n+ * @run testng\/othervm --enable-native-access=ALL-UNNAMED TestNestedTypesUnsupported\n+ *\/\n+\/*\n+ * @test id=sources\n+ * @library \/lib\n+ * @run main\/othervm JtregJextractSources -t test.jextract.nestedtypes.unsupported nested_types_unsupported.h\n+ * @build TestNestedTypesUnsupported\n+ * @run testng\/othervm --enable-native-access=ALL-UNNAMED TestNestedTypesUnsupported\n+ *\/\n+public class TestNestedTypesUnsupported {\n+\n+    static MemoryLayout UNDEFINED_STRUCT = MemoryLayout.structLayout(\n+            MemoryLayout.paddingLayout(nested_types_unsupported_h.C_POINTER.byteSize())\n+    );\n+\n+    @Test\n+    public void testTypeNamesAndLayouts() {\n+        checkLayout(Outer.$LAYOUT(), UNDEFINED_STRUCT);\n+        checkLayout(outer_var.$LAYOUT(), UNDEFINED_STRUCT);\n+        checkLayout(outer_td.$LAYOUT(), UNDEFINED_STRUCT);\n+        checkLayout(outer_td$0.$LAYOUT(), UNDEFINED_STRUCT);\n+        checkLayout(f2$return.$LAYOUT(), UNDEFINED_STRUCT);\n+        checkLayout(f3$x0.$LAYOUT(), UNDEFINED_STRUCT);\n+    }\n+\n+    void checkLayout(MemoryLayout found, MemoryLayout expected) {\n+        assertEquals(found.withoutName(), expected);\n+    }\n+}\n","filename":"test\/jtreg\/generator\/nestedTypes\/TestNestedTypesUnsupported.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -24,0 +24,6 @@\n+#ifdef _WIN64\n+#define EXPORT __declspec(dllexport)\n+#else\n+#define EXPORT\n+#endif\n+\n@@ -25,1 +31,1 @@\n-struct { int x; } f1(struct { int y; } p);\n+EXPORT struct { int x; } f1(struct { int y; } p);\n@@ -27,1 +33,1 @@\n-struct SR_FUN { int x; } f2(struct SA_FUN { int y; } p);\n+EXPORT struct SR_FUN { int x; } f2(struct SA_FUN { int y; } p);\n@@ -31,1 +37,1 @@\n-struct { int x; } (*fp1)(struct { int y; } p);\n+EXPORT struct { int x; } (*fp1)(struct { int y; } p);\n@@ -33,1 +39,1 @@\n-struct SR_VAR { int x; } (*fp2)(struct SA_VAR { int y; } p);\n+EXPORT struct SR_VAR { int x; } (*fp2)(struct SA_VAR { int y; } p);\n@@ -50,1 +56,1 @@\n-struct {\n+EXPORT struct {\n@@ -64,1 +70,1 @@\n-struct {\n+EXPORT struct {\n@@ -70,1 +76,1 @@\n-void f4(struct {\n+EXPORT void f4(struct {\n","filename":"test\/jtreg\/generator\/nestedTypes\/nested_types_names.h","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifdef _WIN64\n+#define EXPORT __declspec(dllexport)\n+#else\n+#define EXPORT\n+#endif\n+\n+\/\/ function declarations\n+EXPORT struct UNSUPPORTED f1(struct UNSUPPORTED p);\n+\n+\/\/ global variable declarations\n+\n+EXPORT struct UNSUPPORTED (*fp)(struct UNSUPPORTED p);\n+\n+\/\/ typedef declarations\n+\n+typedef struct UNSUPPORTED (*td)(struct UNSUPPORTED p);\n+\n+\/\/ field declarations\n+\n+struct Outer {\n+    struct UNSUPPORTED (*fp)(struct UNSUPPORTED p);\n+};\n+\n+\/\/ field and global\n+\n+EXPORT struct {\n+    struct UNSUPPORTED (*fp)(struct UNSUPPORTED p);\n+} outer_var;\n+\n+\/\/ field and typedef\n+\n+typedef struct {\n+    struct UNSUPPORTED (*fp)(struct UNSUPPORTED p);\n+} outer_td;\n+\n+\/\/ field and function return\n+\n+EXPORT struct {\n+    struct UNSUPPORTED (*fp)(struct UNSUPPORTED p);\n+} f2(void);\n+\n+\/\/ field and function arg\n+EXPORT void f3(struct {\n+    struct UNSUPPORTED (*fp)(struct UNSUPPORTED p);\n+} p);\n","filename":"test\/jtreg\/generator\/nestedTypes\/nested_types_unsupported.h","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"}]}