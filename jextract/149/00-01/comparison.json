{"files":[{"patch":"@@ -85,1 +85,1 @@\n-            result[i] = variadicLayout(normalize(varargs[i].getClass()));\n+            result[i] = variadicLayout(varargs[i].getClass());\n@@ -113,45 +113,0 @@\n-    private static Class<?> unboxIfNeeded(Class<?> clazz) {\n-        if (clazz == Boolean.class) {\n-            return boolean.class;\n-        } else if (clazz == Void.class) {\n-            return void.class;\n-        } else if (clazz == Byte.class) {\n-            return byte.class;\n-        } else if (clazz == Character.class) {\n-            return char.class;\n-        } else if (clazz == Short.class) {\n-            return short.class;\n-        } else if (clazz == Integer.class) {\n-            return int.class;\n-        } else if (clazz == Long.class) {\n-            return long.class;\n-        } else if (clazz == Float.class) {\n-            return float.class;\n-        } else if (clazz == Double.class) {\n-            return double.class;\n-        } else {\n-            return clazz;\n-        }\n-    }\n-\n-    private static Class<?> promote(Class<?> c) {\n-        if (c == byte.class || c == char.class || c == short.class || c == int.class) {\n-            return long.class;\n-        } else if (c == float.class) {\n-            return double.class;\n-        } else {\n-            return c;\n-        }\n-    }\n-\n-    private static Class<?> normalize(Class<?> c) {\n-        c = unboxIfNeeded(c);\n-        if (c.isPrimitive()) {\n-            return promote(c);\n-        }\n-        if (MemorySegment.class.isAssignableFrom(c)) {\n-            return MemorySegment.class;\n-        }\n-        throw new IllegalArgumentException(\"Invalid type for ABI: \" + c.getTypeName());\n-    }\n-\n@@ -159,1 +114,5 @@\n-        if (c == long.class) {\n+        \/\/ apply default argument promotions per C spec\n+        \/\/ note that all primitives are boxed, since they are passed through an Object[]\n+        if (c == Boolean.class || c == Byte.class || c == Character.class || c == Short.class || c == Integer.class) {\n+            return JAVA_INT;\n+        } else if (c == Long.class) {\n@@ -161,1 +120,1 @@\n-        } else if (c == double.class) {\n+        } else if (c == Float.class || c == Double.class) {\n@@ -163,1 +122,1 @@\n-        } else if (c == MemorySegment.class) {\n+        } else if (MemorySegment.class.isAssignableFrom(c)) {\n@@ -165,2 +124,0 @@\n-        } else {\n-            throw new IllegalArgumentException(\"Unhandled variadic argument class: \" + c);\n@@ -168,0 +125,1 @@\n+        throw new IllegalArgumentException(\"Invalid type for ABI: \" + c.getTypeName());\n","filename":"src\/main\/resources\/org\/openjdk\/jextract\/impl\/resources\/RuntimeHelper.java.template","additions":9,"deletions":51,"binary":false,"changes":60,"status":"modified"}]}