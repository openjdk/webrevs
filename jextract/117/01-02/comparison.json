{"files":[{"patch":"@@ -302,5 +302,2 @@\n-        private Constant emitVarHandleField(String nativeName, ValueLayout valueLayout,\n-                                            Constant rootLayout, List<String> prefixElementNames) {\n-            String layoutAccess = rootLayout != null ?\n-                    rootLayout.accessExpression() :\n-                    addLayout(valueLayout).accessExpression();\n+        private Constant emitVarHandle(ValueLayout valueLayout) {\n+            Constant layoutConstant = addLayout(valueLayout);\n@@ -311,1 +308,13 @@\n-            append(layoutAccess);\n+            append(layoutConstant.accessExpression());\n+            append(\".varHandle();\\n\");\n+            decrAlign();\n+            return vhConst;\n+        }\n+\n+        private Constant emitFieldVarHandle(String nativeName, GroupLayout parentLayout, List<String> prefixElementNames) {\n+            Constant layoutConstant = addLayout(parentLayout);\n+            incrAlign();\n+            indent();\n+            NamedConstant vhConst = new NamedConstant(VarHandle.class);\n+            append(memberMods() + \"VarHandle \" + vhConst.constantName + \" = \");\n+            append(layoutConstant.accessExpression());\n@@ -314,6 +323,3 @@\n-            if (rootLayout != null) {\n-                for (String prefixElementName : prefixElementNames) {\n-                    append(prefix + \"MemoryLayout.PathElement.groupElement(\\\"\" + prefixElementName + \"\\\")\");\n-                    prefix = \", \";\n-                }\n-                append(prefix + \"MemoryLayout.PathElement.groupElement(\\\"\" + nativeName + \"\\\")\");\n+            for (String prefixElementName : prefixElementNames) {\n+                append(prefix + \"MemoryLayout.PathElement.groupElement(\\\"\" + prefixElementName + \"\\\")\");\n+                prefix = \", \";\n@@ -321,0 +327,1 @@\n+            append(prefix + \"MemoryLayout.PathElement.groupElement(\\\"\" + nativeName + \"\\\")\");\n@@ -477,3 +484,2 @@\n-    public Constant addFieldVarHandle(String nativeName, ValueLayout valueLayout,\n-                                      Constant rootLayout, List<String> prefixElementNames) {\n-        return addVarHandle(nativeName, valueLayout, rootLayout, prefixElementNames);\n+    public Constant addFieldVarHandle(String nativeName, GroupLayout parentLayout, List<String> prefixElementNames) {\n+        return builder().emitFieldVarHandle(nativeName, parentLayout, prefixElementNames);\n@@ -482,2 +488,9 @@\n-    public Constant addGlobalVarHandle(String nativeName, ValueLayout valueLayout) {\n-        return addVarHandle(nativeName, valueLayout, null, List.of());\n+    public Constant addGlobalVarHandle(ValueLayout valueLayout) {\n+        record VarHandleKey(ValueLayout valueLayout) { }\n+        VarHandleKey key = new VarHandleKey(valueLayout.withoutName());\n+        Constant constant = cache.get(key);\n+        if (constant == null) {\n+            constant = builder().emitVarHandle(valueLayout);\n+            cache.put(key, constant);\n+        }\n+        return constant;\n@@ -486,3 +499,2 @@\n-    private Constant addVarHandle(String nativeName, ValueLayout valueLayout,\n-                                  Constant rootLayout, List<String> prefixElementNames) {\n-        return builder().emitVarHandleField(nativeName, valueLayout, rootLayout, prefixElementNames);\n+    public Constant addDowncallMethodHandle(String nativeName, FunctionDescriptor descriptor, boolean isVarargs) {\n+        return builder().emitDowncallMethodHandleField(nativeName, descriptor, isVarargs, false);\n@@ -491,2 +503,9 @@\n-    public Constant addDowncallMethodHandle(String nativeName, FunctionDescriptor descriptor, boolean isVarargs, boolean virtual) {\n-        return builder().emitDowncallMethodHandleField(nativeName, descriptor, isVarargs, virtual);\n+    public Constant addVirtualDowncallMethodHandle(FunctionDescriptor descriptor) {\n+        record DowncallKey(FunctionDescriptor desc) { }\n+        DowncallKey downcallKey = new DowncallKey(descriptor);\n+        Constant constant = cache.get(downcallKey);\n+        if (constant == null) {\n+            constant = builder().emitDowncallMethodHandleField(null, descriptor, false, true);\n+            cache.put(downcallKey, constant);\n+        }\n+        return constant;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/Constants.java","additions":41,"deletions":22,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -113,2 +113,1 @@\n-        Constant mhConstant = constants().addDowncallMethodHandle(fullName(),\n-                 fiDesc, false, true);\n+        Constant mhConstant = constants().addVirtualDowncallMethodHandle(fiDesc);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/FunctionalInterfaceBuilder.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-            Constant vhConstant = constants().addGlobalVarHandle(nativeName, valueLayout)\n+            Constant vhConstant = constants().addGlobalVarHandle(valueLayout)\n@@ -106,1 +106,1 @@\n-        Constant mhConstant = constants().addDowncallMethodHandle(nativeName, descriptor, isVarargs, false)\n+        Constant mhConstant = constants().addDowncallMethodHandle(nativeName, descriptor, isVarargs)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/HeaderFileBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-            Constant vhConstant = constants().addFieldVarHandle(nativeName, valueLayout, layoutConstant, prefixNamesList())\n+            Constant vhConstant = constants().addFieldVarHandle(nativeName, structLayout, prefixNamesList())\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/StructBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}