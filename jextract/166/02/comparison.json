{"files":[{"patch":"@@ -106,1 +106,0 @@\n-\n@@ -111,1 +110,1 @@\n-        appendIndentedLines(\"\"\"\n+        appendLines(\"\"\"\n@@ -113,1 +112,0 @@\n-\n@@ -132,0 +130,4 @@\n+    void appendBlankLine() {\n+        appendLines(\"\\n\");\n+    }\n+\n@@ -140,0 +142,1 @@\n+\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/ClassSourceBuilder.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+        fib.appendBlankLine();\n@@ -57,1 +58,0 @@\n-        fib.emitDescriptorDecl();\n@@ -59,0 +59,1 @@\n+        fib.emitDescriptorDecl();\n@@ -66,0 +67,1 @@\n+\n@@ -72,1 +74,2 @@\n-            MethodHandle UP$MH = \\{runtimeHelperName()}.upcallHandle(\\{className()}.class, \\\"apply\\\", $DESC);\n+\n+            MethodHandle UP$MH = \\{runtimeHelperName()}.upcallHandle(\\{className()}.class, \"apply\", $DESC);\n@@ -84,0 +87,1 @@\n+\n@@ -140,0 +144,1 @@\n+\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/FunctionalInterfaceBuilder.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import java.lang.foreign.FunctionDescriptor;\n+import java.lang.foreign.Linker;\n@@ -31,0 +33,1 @@\n+import java.lang.foreign.SymbolLookup;\n@@ -37,0 +40,1 @@\n+import java.lang.invoke.MethodHandles;\n@@ -225,0 +229,6 @@\n+        appendIndentedLines(\"\"\"\n+\n+            static final SymbolLookup SYMBOL_LOOKUP;\n+\n+            static {\n+            \"\"\");\n@@ -226,2 +236,0 @@\n-        appendLines(\"static final SymbolLookup SYMBOL_LOOKUP;\");\n-        appendLines(\"static {\");\n@@ -233,7 +241,0 @@\n-        appendLines(\"\"\"\n-\n-            SymbolLookup loaderLookup = SymbolLookup.loaderLookup();\n-            Linker linker = Linker.nativeLinker();\n-            SYMBOL_LOOKUP = name -> loaderLookup.find(name).or(() -> linker.defaultLookup().find(name));\n-            \"\"\");\n-        appendLines(\"}\");\n@@ -241,0 +242,4 @@\n+        appendIndentedLines(\"\"\"\n+                SYMBOL_LOOKUP = SymbolLookup.loaderLookup().or(Linker.nativeLinker().defaultLookup());\n+            }\n+            \"\"\");\n@@ -245,0 +250,1 @@\n+\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/HeaderFileBuilder.java","additions":15,"deletions":9,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -107,1 +107,3 @@\n-        sb.append(s.indent(align * 4));\n+        \/\/ we don't just simply use indent here, since that will also indent empty lines which adds trailing whitespace\n+        String indent = \"    \".repeat(align);\n+        s.lines().map(l -> l.isEmpty() ? \"\\n\" : indent + l + \"\\n\").forEach(sb::append);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/SourceFileBuilder.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+            appendBlankLine();\n@@ -82,0 +83,1 @@\n+            emitDefaultConstructor();\n@@ -88,0 +90,1 @@\n+            appendBlankLine();\n@@ -117,1 +120,0 @@\n-            builder.emitDefaultConstructor();\n@@ -134,0 +136,1 @@\n+        appendBlankLine();\n@@ -139,4 +142,1 @@\n-            emitFieldDocComment(varTree, \"Getter for field:\");\n-            emitFieldGetter(javaName, varTree.type(), offsetField);\n-            emitFieldDocComment(varTree, \"Setter for field:\");\n-            emitFieldSetter(javaName, varTree.type(), offsetField);\n+            emitFieldGetter(javaName, varTree, offsetField);\n@@ -144,0 +144,1 @@\n+            emitFieldSetter(javaName, varTree, offsetField);\n@@ -145,3 +146,3 @@\n-            if (fiName.isPresent()) {\n-                emitFunctionalInterfaceGetter(fiName.get(), javaName);\n-            }\n+            fiName.ifPresent(s -> emitFunctionalInterfaceGetter(s, javaName));\n+        } else {\n+            throw new IllegalArgumentException(STR.\"Type not supported: \\{varTree.type()}\");\n@@ -159,0 +160,1 @@\n+\n@@ -165,1 +167,1 @@\n-    private void emitFieldGetter(String javaName, Type varType, String offsetField) {\n+    private void emitFieldGetter(String javaName, Declaration.Variable varTree, String offsetField) {\n@@ -167,1 +169,3 @@\n-        Class<?> type = Utils.carrierFor(varType);\n+        Class<?> type = Utils.carrierFor(varTree.type());\n+        appendBlankLine();\n+        emitFieldDocComment(varTree, \"Getter for field:\");\n@@ -170,1 +174,1 @@\n-                return \\{seg}.get(\\{layoutString(varType)}, \\{offsetField});\n+                return \\{seg}.get(\\{layoutString(varTree.type())}, \\{offsetField});\n@@ -175,1 +179,1 @@\n-    private void emitFieldSetter(String javaName, Type varType, String offsetField) {\n+    private void emitFieldSetter(String javaName, Declaration.Variable varTree, String offsetField) {\n@@ -178,1 +182,3 @@\n-        Class<?> type = Utils.carrierFor(varType);\n+        Class<?> type = Utils.carrierFor(varTree.type());\n+        appendBlankLine();\n+        emitFieldDocComment(varTree, \"Setter for field:\");\n@@ -181,1 +187,1 @@\n-                \\{seg}.set(\\{layoutString(varType)}, \\{offsetField}, \\{x});\n+                \\{seg}.set(\\{layoutString(varTree.type())}, \\{offsetField}, \\{x});\n@@ -189,0 +195,1 @@\n+\n@@ -209,0 +216,1 @@\n+\n@@ -217,0 +225,1 @@\n+\n@@ -228,0 +237,1 @@\n+\n@@ -240,0 +250,1 @@\n+\n@@ -248,0 +259,1 @@\n+\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/StructBuilder.java","additions":26,"deletions":14,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+        first.appendBlankLine();\n@@ -62,0 +63,1 @@\n+        first.emitDefaultConstructor();\n@@ -64,0 +66,1 @@\n+\n@@ -175,0 +178,1 @@\n+            headerFileBuilder.appendBlankLine();\n@@ -176,0 +180,1 @@\n+            headerFileBuilder.emitDefaultConstructor();\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/ToplevelBuilder.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+        tdb.appendBlankLine();\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/TypedefBuilder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}