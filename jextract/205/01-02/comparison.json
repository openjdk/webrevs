{"files":[{"patch":"@@ -196,1 +196,1 @@\n-            emitDocComment(decl, \"Variadic invoker interface for:\");\n+            emitDocComment(decl, \"Variadic invoker class for:\");\n@@ -198,1 +198,1 @@\n-                public record \\{invokerClassName}(MethodHandle handle, FunctionDescriptor descriptor) {\n+                public static class \\{invokerClassName} {\n@@ -202,0 +202,32 @@\n+                    private final MethodHandle handle;\n+                    private final FunctionDescriptor descriptor;\n+                    private final MethodHandle spreader;\n+\n+                    private \\{invokerClassName}(MethodHandle handle, FunctionDescriptor descriptor, MethodHandle spreader) {\n+                        this.handle = handle;\n+                        this.descriptor = descriptor;\n+                        this.spreader = spreader;\n+                    }\n+\n+                    static \\{invokerClassName} specialize(MemoryLayout... layouts) {\n+                        FunctionDescriptor desc$ = BASE_DESC.appendArgumentLayouts(layouts);\n+                        Linker.Option fva$ = Linker.Option.firstVariadicArg(BASE_DESC.argumentLayouts().size());\n+                        var mh$ = Linker.nativeLinker().downcallHandle(ADDR, desc$, fva$);\n+                        var spreader$ = mh$.asSpreader(Object[].class, layouts.length);\n+                        return new \\{invokerClassName}(mh$, desc$, spreader$);\n+                    }\n+\n+                    \/**\n+                     * {@return specialized method handle}\n+                     *\/\n+                    public MethodHandle handle() {\n+                        return handle;\n+                    }\n+\n+                    \/**\n+                     * {@return specialized descriptor}\n+                     *\/\n+                    public FunctionDescriptor descriptor() {\n+                        return descriptor;\n+                    }\n+\n@@ -207,2 +239,1 @@\n-                            int trailingArgCount$ = descriptor.argumentLayouts().size() - BASE_DESC.argumentLayouts().size();\n-                            \\{returnWithCast}handle.asSpreader(Object[].class, trailingArgCount$).invokeExact(\\{paramList});\n+                            \\{returnWithCast}spreader.invokeExact(\\{paramList});\n@@ -221,4 +252,1 @@\n-                    FunctionDescriptor desc$ = \\{invokerClassName}.BASE_DESC.appendArgumentLayouts(layouts);\n-                    Linker.Option fva$ = Linker.Option.firstVariadicArg(\\{invokerClassName}.BASE_DESC.argumentLayouts().size());\n-                    var mh$ = Linker.nativeLinker().downcallHandle(\\{invokerClassName}.ADDR, desc$, fva$);\n-                    return new \\{invokerClassName}(mh$, desc$);\n+                    return \\{invokerClassName}.specialize(layouts);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/HeaderFileBuilder.java","additions":36,"deletions":8,"binary":false,"changes":44,"status":"modified"}]}