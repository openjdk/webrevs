{"files":[{"patch":"@@ -295,1 +295,1 @@\n-                                0 : fc.type().size() * 8);\n+                                    0 : fc.type().size() * 8);\n@@ -372,4 +372,6 @@\n-                Declaration enumConstantDecl = createTree(child);\n-                if (enumConstantDecl != null) { \/\/ see CODETOOLS-7903673\n-                    DeclarationString.with(enumConstantDecl, enumConstantString(c.spelling(), (Declaration.Constant) enumConstantDecl));\n-                    decls.add(enumConstantDecl);\n+                if (child.kind() == CursorKind.EnumConstantDecl) {\n+                    Declaration enumConstantDecl = createTree(child);\n+                    if (enumConstantDecl != null) {\n+                        DeclarationString.with(enumConstantDecl, enumConstantString(c.spelling(), (Declaration.Constant) enumConstantDecl));\n+                        decls.add(enumConstantDecl);\n+                    }\n@@ -474,1 +476,2 @@\n-                    nestedTypes.add(createTree(m));\n+                    Declaration decl = createTree(m);\n+                    nestedTypes.add(decl);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/TreeMaker.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jextract.test.api.attributes;\n+\n+import org.testng.annotations.Test;\n+import testlib.JextractApiTestBase;\n+\n+public class Test7903674 extends JextractApiTestBase {\n+    @Test\n+    public void testEnum() {\n+        parse(\"enum_with_attribute.h\");\n+    }\n+\n+    @Test\n+    public void testStruct() {\n+        parse(\"struct_with_attribute.h\");\n+    }\n+\n+    @Test\n+    public void testTypedef() {\n+        parse(\"typedef_with_attribute.h\");\n+    }\n+}\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/api\/attributes\/Test7903674.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -24,4 +24,3 @@\n-#include \"clinit_global.h\"\n-\n-int global1 = 1;\n-int global2 = 2;\n+enum __attribute((deprecated)) Foo {\n+    CFByteOrderUnknown\n+};\n\\ No newline at end of file\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/api\/attributes\/enum_with_attribute.h","additions":3,"deletions":4,"binary":false,"changes":7,"previous_filename":"test\/jtreg\/generator\/clinitCycles\/libClinitGlobal.c","status":"copied"},{"patch":"@@ -24,2 +24,3 @@\n-void f(int n, ...);\n-void F(int n, ...);\n\\ No newline at end of file\n+struct __attribute((deprecated)) Foo {\n+   int x;\n+};\n\\ No newline at end of file\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/api\/attributes\/struct_with_attribute.h","additions":3,"deletions":2,"binary":false,"changes":5,"previous_filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/variadicNames\/variadic_names.h","status":"copied"},{"patch":"@@ -24,1 +24,1 @@\n-typedef void (*Function)(int);\n+typedef __attribute((deprecated)) struct  { int x; } BAR;\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/api\/attributes\/typedef_with_attribute.h","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/fiMangle\/nestedDecls\/fi_mangle.h","status":"copied"}]}