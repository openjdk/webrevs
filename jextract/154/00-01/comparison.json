{"files":[{"patch":"@@ -264,1 +264,1 @@\n-                    } else if (!fc.isBitField() && !fc.spelling().isEmpty()) {\n+                    } else {\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/TreeMaker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -267,10 +267,0 @@\n-\n-    public static Primitive.Kind valueLayoutForSize(long size) {\n-        return switch ((int) size) {\n-            case 8 -> Primitive.Kind.Char;\n-            case 16 -> Primitive.Kind.Short;\n-            case 32 -> Primitive.Kind.Int;\n-            case 64 -> Primitive.Kind.LongLong;\n-            default -> throw new IllegalStateException(\"Cannot infer container layout\");\n-        };\n-    }\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/TypeMaker.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"}]}