{"files":[{"patch":"@@ -90,3 +90,3 @@\n-           MemorySegment point = arena.allocate(Point2d.$LAYOUT());\n-           Point2d.x$set(point, 3d);\n-           Point2d.y$set(point, 4d);\n+           MemorySegment point = Point2d.allocate(arena);\n+           Point2d.x(point, 3d);\n+           Point2d.y(point, 4d);\n@@ -99,1 +99,1 @@\n-As we can see, the `jextract` tool generated a `Point2d` class, modelling the C struct, and a `point_h` class which contains static native function wrappers, such as `distance`. If we look inside the generated code for `distance` we can find the following:\n+As we can see, the `jextract` tool generated a `Point2d` class, modelling the C struct, and a `point_h` class which contains static native function wrappers, such as `distance`. If we look inside the generated code for `distance` we can find the following (for clarity, some details have been omitted):\n@@ -102,9 +102,3 @@\n-static final FunctionDescriptor distance$FUNC = FunctionDescriptor.of(Constants$root.C_DOUBLE$LAYOUT,\n-    MemoryLayout.structLayout(\n-         Constants$root.C_DOUBLE$LAYOUT.withName(\"x\"),\n-         Constants$root.C_DOUBLE$LAYOUT.withName(\"y\")\n-    ).withName(\"Point2d\")\n-);\n-static final MethodHandle distance$MH = RuntimeHelper.downcallHandle(\n-    \"distance\",\n-    constants$0.distance$FUNC\n+static final FunctionDescriptor DESC = FunctionDescriptor.of(\n+        foo_h.C_DOUBLE,\n+        Point2d.$LAYOUT()\n@@ -113,10 +107,6 @@\n-public static MethodHandle distance$MH() {\n-    return RuntimeHelper.requireNonNull(constants$0.distance$MH,\"distance\");\n-}\n-public static double distance ( MemorySegment x0) {\n-    var mh$ = distance$MH();\n-    try {\n-        return (double)mh$.invokeExact(x0);\n-    } catch (Throwable ex$) {\n-        throw new AssertionError(\"should not reach here\", ex$);\n-    }\n+static final MethodHandle MH = Linker.nativeLinker().downcallHandle(\n+        foo_h.findOrThrow(\"distance\"),\n+        DESC);\n+\n+public static double distance(MemorySegment x0) {\n+    return (double) mh$.invokeExact(x0);\n","filename":"README.md","additions":13,"deletions":23,"binary":false,"changes":36,"status":"modified"}]}