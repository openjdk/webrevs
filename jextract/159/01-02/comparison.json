{"files":[{"patch":"@@ -35,0 +35,1 @@\n+import java.util.function.Predicate;\n@@ -197,0 +198,4 @@\n+    public void forEachShortCircuit(Predicate<Cursor> action) {\n+        CursorChildren.forEachShortCircuit(this, action);\n+    }\n+\n@@ -207,1 +212,1 @@\n-            private final Consumer<Cursor> action;\n+            private final Predicate<Cursor> action;\n@@ -211,1 +216,1 @@\n-            Context(Consumer<Cursor> action, ClangDisposable owner) {\n+            Context(Predicate<Cursor> action, ClangDisposable owner) {\n@@ -223,2 +228,1 @@\n-                    action.accept(new Cursor(segment, owner));\n-                    return true;\n+                    return action.test(new Cursor(segment, owner));\n@@ -249,1 +253,8 @@\n-        synchronized static void forEach(Cursor c, Consumer<Cursor> op) {\n+        static void forEach(Cursor c, Consumer<Cursor> op) {\n+            forEachShortCircuit(c, decl -> {\n+                op.accept(decl);\n+                return true;\n+            });\n+        }\n+\n+        synchronized static void forEachShortCircuit(Cursor c, Predicate<Cursor> op) {\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/Cursor.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -345,2 +345,1 @@\n-        record.forEach(fc -> {\n-            if (result.get().isPresent()) return;\n+        record.forEachShortCircuit(fc -> {\n@@ -352,0 +351,1 @@\n+                    return false;\n@@ -354,0 +354,1 @@\n+                    return false;\n@@ -356,0 +357,1 @@\n+            return true;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/TreeMaker.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}