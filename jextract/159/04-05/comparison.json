{"files":[{"patch":"@@ -325,9 +325,0 @@\n-    public static OptionalLong recordMemberOffset(Declaration member) {\n-        if (member instanceof Variable) {\n-            return ClangOffsetOf.get(member);\n-        } else {\n-            \/\/ anonymous struct\n-            return AnonymousStruct.getOrThrow((Scoped) member).offset();\n-        }\n-    }\n-\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/DeclarationImpl.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import java.util.OptionalLong;\n@@ -279,0 +280,9 @@\n+    private static long recordMemberOffset(Declaration member) {\n+        if (member instanceof Variable) {\n+            return ClangOffsetOf.get(member).orElseThrow();\n+        } else {\n+            \/\/ anonymous struct\n+            return AnonymousStruct.getOrThrow((Scoped) member).offset().orElseThrow();\n+        }\n+    }\n+\n@@ -290,1 +300,1 @@\n-                long nextOffset = DeclarationImpl.recordMemberOffset(member).getAsLong();\n+                long nextOffset = recordMemberOffset(member);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/StructBuilder.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -243,1 +243,1 @@\n-                    DeclarationImpl.recordMemberOffset(scoped).isEmpty()) {\n+                    AnonymousStruct.getOrThrow(scoped).offset().isEmpty()) {\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/UnsupportedFilter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}