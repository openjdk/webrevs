{"files":[{"patch":"@@ -16,1 +16,0 @@\n-\n@@ -23,0 +22,79 @@\n+\n+File: CXUnsavedFile.java\n+\n+\/\/ Manual change the layout of CXUnsavedFile to correctly handle the platform specific size of C_LONG\n+\n+diff --git a\/src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXUnsavedFile.java b\/src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXUnsavedFile.java\n+index 12d25de..a0ebb98 100644\n+--- a\/src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXUnsavedFile.java\n++++ b\/src\/main\/java\/org\/openjdk\/jextract\/clang\/libclang\/CXUnsavedFile.java\n+@@ -52,11 +52,20 @@ public class CXUnsavedFile {\n+         \/\/ Should not be called directly\n+     }\n+\n+-    private static final GroupLayout $LAYOUT = MemoryLayout.structLayout(\n+-        Index_h.C_POINTER.withName(\"Filename\"),\n+-        Index_h.C_POINTER.withName(\"Contents\"),\n+-        Index_h.C_LONG.withName(\"Length\")\n+-    ).withName(\"CXUnsavedFile\");\n++    private static final GroupLayout $LAYOUT = (switch (Index_h.C_LONG) {\n++        case OfInt _ -> MemoryLayout.structLayout(\n++            Index_h.C_POINTER.withName(\"Filename\"),\n++                Index_h.C_POINTER.withName(\"Contents\"),\n++                Index_h.C_LONG.withName(\"Length\"),\n++                MemoryLayout.paddingLayout(4)\n++        );\n++        case OfLong _ -> MemoryLayout.structLayout(\n++            Index_h.C_POINTER.withName(\"Filename\"),\n++                Index_h.C_POINTER.withName(\"Contents\"),\n++                Index_h.C_LONG.withName(\"Length\")\n++        );\n++        default -> throw new IllegalStateException(\"Unhandled layout: \" + Index_h.C_LONG);\n++    }).withName(\"CXUnsavedFile\");\n+\n+     \/**\n+      * The layout of this struct\n+@@ -153,7 +162,7 @@ public class CXUnsavedFile {\n+         struct.set(Contents$LAYOUT, Contents$OFFSET, fieldValue);\n+     }\n+\n+-    private static final OfLong Length$LAYOUT = (OfLong)$LAYOUT.select(groupElement(\"Length\"));\n++    private static final ValueLayout Length$LAYOUT = (ValueLayout) $LAYOUT.select(groupElement(\"Length\"));\n+\n+     \/**\n+      * Layout for field:\n+@@ -161,7 +170,7 @@ public class CXUnsavedFile {\n+      * unsigned long Length\n+      * }\n+      *\/\n+-    public static final OfLong Length$layout() {\n++    public static final ValueLayout Length$layout() {\n+         return Length$LAYOUT;\n+     }\n+\n+@@ -184,7 +193,11 @@ public class CXUnsavedFile {\n+      * }\n+      *\/\n+     public static long Length(MemorySegment struct) {\n+-        return struct.get(Length$LAYOUT, Length$OFFSET);\n++        return switch (Length$LAYOUT) {\n++            case OfInt l -> struct.get(l, Length$OFFSET);\n++            case OfLong l -> struct.get(l, Length$OFFSET);\n++            default -> throw new IllegalStateException(\"Unhandled layout: \" + Length$LAYOUT);\n++        };\n+     }\n+\n+     \/**\n+@@ -194,7 +207,11 @@ public class CXUnsavedFile {\n+      * }\n+      *\/\n+     public static void Length(MemorySegment struct, long fieldValue) {\n+-        struct.set(Length$LAYOUT, Length$OFFSET, fieldValue);\n++        switch (Length$LAYOUT) {\n++            case OfInt l -> struct.set(l, Length$OFFSET, Math.toIntExact(fieldValue));\n++            case OfLong l -> struct.set(l, Length$OFFSET, fieldValue);\n++            default -> throw new IllegalStateException(\"Unhandled layout: \" + Length$LAYOUT);\n++        }\n+     }\n+\n+     \/**\n","filename":"updateclang\/README.md","additions":79,"deletions":1,"binary":false,"changes":80,"status":"modified"}]}