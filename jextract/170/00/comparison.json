{"files":[{"patch":"@@ -286,1 +286,1 @@\n-            case Declared d when Utils.isStructOrUnion(type) -> structOrUnionLayoutString(0, d.tree());\n+            case Declared d when Utils.isStructOrUnion(type) -> structOrUnionLayoutString(0, d.tree(), 0);\n@@ -300,1 +300,1 @@\n-    private String structOrUnionLayoutString(long base, Declaration.Scoped scoped) {\n+    private String structOrUnionLayoutString(long base, Declaration.Scoped scoped, int indent) {\n@@ -323,1 +323,1 @@\n-                    memberLayout = STR.\"\\{memberLayout}.withName(\\\"\\{member.name()}\\\")\";\n+                    memberLayout = STR.\"\\{indentString(indent + 1)}\\{memberLayout}.withName(\\\"\\{member.name()}\\\")\";\n@@ -326,1 +326,1 @@\n-                    memberLayout = structOrUnionLayoutString(offset, (Scoped) member);\n+                    memberLayout = structOrUnionLayoutString(offset, (Scoped) member, indent + 1);\n@@ -347,3 +347,4 @@\n-        String indentNewLine = STR.\"\\n\\{indentString(1)}\";\n-        String prefix = isStruct ? \"MemoryLayout.structLayout(\" :\n-                \"MemoryLayout.unionLayout(\";\n+        String prefix = isStruct ?\n+                STR.\"\\{indentString(indent)}MemoryLayout.structLayout(\\n\" :\n+                STR.\"\\{indentString(indent)}MemoryLayout.unionLayout(\\n\";\n+        String suffix = STR.\"\\n\\{indentString(indent)})\";\n@@ -351,1 +352,1 @@\n-                .collect(Collectors.joining(\",\" + indentNewLine, prefix + indentNewLine, \"\\n)\"));\n+                .collect(Collectors.joining(\",\\n\", prefix, suffix));\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/StructBuilder.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}