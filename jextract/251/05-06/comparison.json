{"files":[{"patch":"@@ -75,1 +75,1 @@\n-    private TranslationUnit parseTUImpl(String file, String content,\n+    private TranslationUnit parseTU(String file, String content,\n@@ -80,1 +80,1 @@\n-            MemorySegment contentSeg = content == null ? null : arena.allocateFrom(content);\n+            MemorySegment contentSeg = arena.allocateFrom(content);\n@@ -86,7 +86,4 @@\n-            MemorySegment unsavedFile = contentSeg == null ?\n-                null : CXUnsavedFile.allocate(arena);\n-            if (unsavedFile != null) {\n-                CXUnsavedFile.Filename(unsavedFile, fileSeg);\n-                CXUnsavedFile.Contents(unsavedFile, contentSeg);\n-                CXUnsavedFile.Length(unsavedFile, content.length());\n-            }\n+            MemorySegment unsavedFile = CXUnsavedFile.allocate(arena);\n+            CXUnsavedFile.Filename(unsavedFile, fileSeg);\n+            CXUnsavedFile.Contents(unsavedFile, contentSeg);\n+            CXUnsavedFile.Length(unsavedFile, content.length());\n@@ -100,2 +97,2 @@\n-                    unsavedFile == null ? MemorySegment.NULL : unsavedFile,\n-                    unsavedFile == null ? 0 : 1,\n+                    unsavedFile,\n+                    1,\n@@ -118,11 +115,0 @@\n-\n-    public TranslationUnit parseTU(String file, Consumer<Diagnostic> dh, int options, String... args)\n-            throws ParsingFailedException {\n-        return parseTUImpl(file, null, dh, options, args);\n-    }\n-\n-    public TranslationUnit parseTU(String filename, String content, Consumer<Diagnostic> dh, int options, String... args)\n-            throws ParsingFailedException {\n-        return parseTUImpl(filename, content, dh, options, args);\n-    }\n-\n@@ -138,10 +124,0 @@\n-    public TranslationUnit parse(String file, Consumer<Diagnostic> dh, boolean detailedPreprocessorRecord, String... args)\n-            throws ParsingFailedException {\n-        return parseTU(file, dh, defaultOptions(detailedPreprocessorRecord), args);\n-    }\n-\n-    public TranslationUnit parse(String file, boolean detailedPreprocessorRecord, String... args)\n-            throws ParsingFailedException {\n-        return parse(file, dh -> {}, detailedPreprocessorRecord, args);\n-    }\n-\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/clang\/Index.java","additions":8,"deletions":32,"binary":false,"changes":40,"status":"modified"}]}