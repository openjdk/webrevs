{"files":[{"patch":"@@ -193,2 +193,2 @@\n-            case Declared d when Utils.isStructOrUnion(d) -> alignIfNeeded(String.format(\"%s.layout()\", JavaName.getFullNameOrThrow(d.tree())), ClangAlignOf.getOrThrow(d.tree()) \/ 8, align);\n-            case Delegated d when d.kind() == Delegated.Kind.POINTER -> alignIfNeeded(String.format(\"%s.C_POINTER\", runtimeHelperName()), 8, align);\n+            case Declared d when Utils.isStructOrUnion(d) -> alignIfNeeded(\"%s.layout()\", JavaName.getFullNameOrThrow(d.tree()), ClangAlignOf.getOrThrow(d.tree()) \/ 8, align);\n+            case Delegated d when d.kind() == Delegated.Kind.POINTER -> alignIfNeeded(\"%s.C_POINTER\", runtimeHelperName(), 8, align);\n@@ -196,1 +196,1 @@\n-            case Function _ -> alignIfNeeded(String.format(\"%s.C_POINTER\", runtimeHelperName()), 8, align);\n+            case Function _ -> alignIfNeeded(\"%s.C_POINTER\", runtimeHelperName(), 8, align);\n@@ -238,6 +238,6 @@\n-            case Short -> alignIfNeeded(String.format(\"%s.C_SHORT\", runtimeHelperName()), 2, align);\n-            case Int -> alignIfNeeded(String.format(\"%s.C_INT\", runtimeHelperName()), 4, align);\n-            case Long -> alignIfNeeded(String.format(\"%s.C_LONG\", runtimeHelperName()), TypeImpl.IS_WINDOWS ? 4 : 8, align);\n-            case LongLong -> alignIfNeeded(String.format(\"%s.C_LONG_LONG\", runtimeHelperName()), 8, align);\n-            case Float -> alignIfNeeded(String.format(\"%s.C_FLOAT\", runtimeHelperName()), 4, align);\n-            case Double -> alignIfNeeded(String.format(\"%s.C_DOUBLE\", runtimeHelperName()), 8, align);\n+            case Short -> alignIfNeeded(\"%s.C_SHORT\", runtimeHelperName(), 2, align);\n+            case Int -> alignIfNeeded(\"%s.C_INT\", runtimeHelperName(), 4, align);\n+            case Long -> alignIfNeeded(\"%s.C_LONG\", runtimeHelperName(), TypeImpl.IS_WINDOWS ? 4 : 8, align);\n+            case LongLong -> alignIfNeeded(\"%s.C_LONG_LONG\", runtimeHelperName(), 8, align);\n+            case Float -> alignIfNeeded(\"%s.C_FLOAT\", runtimeHelperName(), 4, align);\n+            case Double -> alignIfNeeded(\"%s.C_DOUBLE\", runtimeHelperName(), 8, align);\n@@ -245,1 +245,1 @@\n-                    alignIfNeeded(String.format(\"%s.C_LONG_DOUBLE\", runtimeHelperName()), 8, align) :\n+                    alignIfNeeded(\"%s.C_LONG_DOUBLE\", runtimeHelperName(), 8, align) :\n@@ -253,1 +253,2 @@\n-    private String alignIfNeeded(String layoutPrefix, long align, long expectedAlign) {\n+    private String alignIfNeeded(String layout, String prefix, long align, long expectedAlign) {\n+        String layoutPrefix = String.format(layout, prefix);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/ClassSourceBuilder.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -573,8 +573,8 @@\n-        public static %s %s() {\n-            class Holder {\n-                static final %s %s\n-                    = %s.LIBRARY_ARENA.allocateFrom(\"%s\");\n-            }\n-            return Holder.%s;\n-        }\n-        \"\"\",\n+                public static %s %s() {\n+                    class Holder {\n+                        static final %s %s\n+                            = %s.LIBRARY_ARENA.allocateFrom(\"%s\");\n+                    }\n+                    return Holder.%s;\n+                }\n+                \"\"\",\n@@ -590,6 +590,6 @@\n-        private static final %s %s = %s;\n-        \"\"\",\n-                    javaType.getSimpleName(),\n-                    constantName,\n-                    constantValue(javaType, value)));\n-            emitDocComment(declaration);\n+                private static final %s %s = %s;\n+                \"\"\",\n+                javaType.getSimpleName(),\n+                constantName,\n+                constantValue(javaType, value)));\n+                 emitDocComment(declaration);\n@@ -597,7 +597,7 @@\n-        public static %s %s() {\n-            return %s;\n-        }\n-        \"\"\",\n-                    javaType.getSimpleName(),\n-                    constantName,\n-                    constantName));\n+                public static %s %s() {\n+                    return %s;\n+                }\n+                \"\"\",\n+                javaType.getSimpleName(),\n+                constantName,\n+                constantName));\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/HeaderFileBuilder.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"}]}