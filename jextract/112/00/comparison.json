{"files":[{"patch":"@@ -282,1 +282,1 @@\n-            ValueLayout layoutNoName = layoutNoName(layout);\n+            ValueLayout layoutNoName = layout.withoutName();\n@@ -292,27 +292,0 @@\n-        private ValueLayout layoutNoName(ValueLayout layout) {\n-            final ValueLayout newLayout;\n-            if (layout.carrier() == boolean.class) {\n-                newLayout = ValueLayout.JAVA_BOOLEAN;\n-            } else if (layout.carrier() == byte.class) {\n-                newLayout = ValueLayout.JAVA_BYTE;\n-            } else if (layout.carrier() == char.class) {\n-                newLayout = ValueLayout.JAVA_CHAR;\n-            } else if (layout.carrier() == short.class) {\n-                newLayout = ValueLayout.JAVA_SHORT;\n-            } else if (layout.carrier() == int.class) {\n-                newLayout = ValueLayout.JAVA_INT;\n-            } else if (layout.carrier() == float.class) {\n-                newLayout = ValueLayout.JAVA_FLOAT;\n-            } else if (layout.carrier() == long.class) {\n-                newLayout = ValueLayout.JAVA_LONG;\n-            } else if (layout.carrier() == double.class) {\n-                newLayout = ValueLayout.JAVA_DOUBLE;\n-            } else if (layout.carrier() == MemorySegment.class) {\n-                newLayout = ValueLayout.ADDRESS;\n-            } else {\n-                throw new AssertionError(\"Cannot get here\");\n-            }\n-            \/\/ drop name if present\n-            return newLayout.withOrder(layout.order()).withBitAlignment(layout.bitAlignment());\n-        }\n-\n@@ -320,1 +293,1 @@\n-            return primitiveLayouts.get(layoutNoName(layout));\n+            return primitiveLayouts.get(layout.withoutName());\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/ToplevelBuilder.java","additions":2,"deletions":29,"binary":false,"changes":31,"status":"modified"}]}