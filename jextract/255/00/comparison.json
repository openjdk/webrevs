{"files":[{"patch":"@@ -102,0 +102,1 @@\n+                    Position pos = asPosition(d.location().getSpellingLocation());\n@@ -103,4 +104,5 @@\n-                        throw new ClangException(\n-                            asPosition(d.location().getSpellingLocation()),\n-                            d.severity(),\n-                            d.spelling());\n+                        throw new ClangException(pos, d.severity(), d.spelling());\n+                    } else if (d.severity() == Diagnostic.CXDiagnostic_Warning) {\n+                        logger.warn(pos, \"jextract.clang.warn\", d.spelling());\n+                    } else {\n+                        logger.info(pos, \"jextract.clang.info\", d.spelling());\n@@ -118,1 +120,2 @@\n-        return new PositionRecord(loc.path(), loc.line(), loc.column());\n+        return loc.path() == null ? Position.NO_POSITION :\n+               new PositionRecord(loc.path(), loc.line(), loc.column());\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/Parser.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -99,0 +99,6 @@\n+jextract.clang.info=\\\n+{0}\n+\n+jextract.clang.warn=\\\n+{0}\n+\n","filename":"src\/main\/resources\/org\/openjdk\/jextract\/impl\/resources\/Messages.properties","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}