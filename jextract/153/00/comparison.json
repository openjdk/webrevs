{"files":[{"patch":"@@ -193,3 +193,13 @@\n-\/\/ run jtreg tests. Note: needs jtreg_home variable set to point to the jtreg\n-task jtreg(type: JavaExec) {\n-    dependsOn createRuntimeImageForTest,cmakeBuild\n+void createJtregTask(String name, boolean coverage, String os_lib_dir) {\n+    tasks.register(name, JavaExec) {\n+        dependsOn createRuntimeImageForTest,cmakeBuild\n+\n+        doFirst {\n+            if (findProperty(\"jtreg_home\") == null) {\n+                throw new GradleException(\"jtreg_home is not defined\")\n+            }\n+            \/\/ e.g.: <jacoco repo>\/org.jacoco.agent\/target\/classes\/jacocoagent.jar\n+            if (coverage && findProperty(\"jacoco_agent\") == null) {\n+                throw new GradleException(\"jacoco_agent is not defined\")\n+            }\n+        }\n@@ -197,3 +207,18 @@\n-    doFirst {\n-        if (findProperty(\"jtreg_home\") == null) {\n-            throw new GradleException(\"jtreg_home is not defined\")\n+        workingDir = \"$buildDir\"\n+\n+        classpath = files(findProperty(\"jtreg_home\") + \"\/lib\/jtreg.jar\")\n+\n+        args = [\n+                \"-jdk\", \"$buildDir\/jextract-jdk-test-image\",\n+                \"-nativepath:$buildDir\/testlib-install\/${os_lib_dir}\",\n+                \"-javaoption:--enable-preview\",\n+                \"-javaoption:--enable-native-access=org.openjdk.jextract,ALL-UNNAMED\",\n+                \"-avm\", \"-conc:auto\", \"-verbose:summary\",\n+                \"-retain:fail,error\",\n+        ]\n+\n+        if (coverage) {\n+            String jacocoAgent = findProperty(\"jacoco_agent\")\n+            String coverageFile = \"$buildDir\/jacoco-run\/jextract.exec\"\n+            String includes = \"org.openjdk.jextract.*\"\n+            args += \"-javaoption:-javaagent:$jacocoAgent=destfile=$coverageFile,includes=$includes\"\n@@ -201,0 +226,2 @@\n+\n+        args += \"..\/test\"\n@@ -202,0 +229,7 @@\n+}\n+\n+createJtregTask(\"jtreg\", false, os_lib_dir)\n+createJtregTask(\"jtregWithCoverage\", true, os_lib_dir)\n+\n+task coverage(type: JavaExec) {\n+    dependsOn jtregWithCoverage\n@@ -203,1 +237,6 @@\n-    workingDir = \"$buildDir\"\n+    doFirst {\n+        \/\/ e.g.: <jacoco repo>\/org.jacoco.cli\/target\/org.jacoco.cli-0.8.12-SNAPSHOT-nodeps.jar\n+        if (findProperty(\"jacoco_cli\") == null) {\n+            throw new GradleException(\"jacoco_cli is not defined\")\n+        }\n+    }\n@@ -205,1 +244,1 @@\n-    classpath = files(findProperty(\"jtreg_home\") + \"\/lib\/jtreg.jar\")\n+    classpath = files(findProperty(\"jacoco_cli\"))\n@@ -208,7 +247,5 @@\n-            \"-jdk\", \"$buildDir\/jextract-jdk-test-image\",\n-            \"-nativepath:$buildDir\/testlib-install\/${os_lib_dir}\",\n-            \"-javaoption:--enable-preview\",\n-            \"-javaoption:--enable-native-access=org.openjdk.jextract,ALL-UNNAMED\",\n-            \"-avm\", \"-conc:auto\", \"-verbose:summary\",\n-            \"-retain:fail,error\",\n-            \"..\/test\"\n+            \"report\",\n+            \"$buildDir\/jacoco-run\/jextract.exec\",\n+            \"--classfiles\", \"$buildDir\/classes\/java\/main\",\n+            \"--sourcefiles\", \"$projectDir\/src\/main\/java\",\n+            \"--html\", \"$buildDir\/jacoco-report\"\n","filename":"build.gradle","additions":52,"deletions":15,"binary":false,"changes":67,"status":"modified"}]}