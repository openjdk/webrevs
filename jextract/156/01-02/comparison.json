{"files":[{"patch":"@@ -130,1 +130,0 @@\n-        long offset = ClangOffsetOf.getOrThrow(varTree) \/ 8;\n@@ -132,0 +131,1 @@\n+        String offsetField = emitOffsetFieldDecl(varTree);\n@@ -133,1 +133,2 @@\n-            emitSegmentGetter(javaName, offset, size);\n+            String sizeField = emitSizeFieldDecl(varTree);\n+            emitSegmentGetter(javaName, offsetField, sizeField);\n@@ -136,1 +137,1 @@\n-            emitFieldGetter(javaName, varTree.type(), offset);\n+            emitFieldGetter(javaName, varTree.type(), offsetField);\n@@ -138,3 +139,3 @@\n-            emitFieldSetter(javaName, varTree.type(), offset);\n-            emitIndexedFieldGetter(javaName, varTree.type(), offset);\n-            emitIndexedFieldSetter(javaName, varTree.type(), offset);\n+            emitFieldSetter(javaName, varTree.type(), offsetField);\n+            emitIndexedFieldGetter(javaName, varTree.type(), offsetField);\n+            emitIndexedFieldSetter(javaName, varTree.type(), offsetField);\n@@ -161,1 +162,1 @@\n-    private void emitFieldGetter(String javaName, Type varType, long offset) {\n+    private void emitFieldGetter(String javaName, Type varType, String offsetField) {\n@@ -167,1 +168,1 @@\n-                return \\{seg}.get(\\{layoutString(0, layout)}, \\{offset});\n+                return \\{seg}.get(\\{layoutString(0, layout)}, \\{offsetField});\n@@ -172,1 +173,1 @@\n-    private void emitFieldSetter(String javaName, Type varType, long offset) {\n+    private void emitFieldSetter(String javaName, Type varType, String offsetField) {\n@@ -179,1 +180,1 @@\n-                \\{seg}.set(\\{layoutString(1, layout)}, \\{offset}, \\{x});\n+                \\{seg}.set(\\{layoutString(1, layout)}, \\{offsetField}, \\{x});\n@@ -184,1 +185,1 @@\n-    private void emitSegmentGetter(String javaName, long offset, long size) {\n+    private void emitSegmentGetter(String javaName, String offsetField, String sizeField) {\n@@ -188,1 +189,1 @@\n-                return \\{seg}.asSlice(\\{offset}, \\{size});\n+                return \\{seg}.asSlice(\\{offsetField}, \\{sizeField});\n@@ -221,1 +222,1 @@\n-    private void emitIndexedFieldGetter(String javaName, Type varType, long offset) {\n+    private void emitIndexedFieldGetter(String javaName, Type varType, String offsetField) {\n@@ -228,1 +229,1 @@\n-                return \\{seg}.get(\\{layoutString(1, layout)}, \\{offset} + (\\{index} * sizeof()));\n+                return \\{seg}.get(\\{layoutString(1, layout)}, \\{offsetField} + (\\{index} * sizeof()));\n@@ -233,1 +234,1 @@\n-    private void emitIndexedFieldSetter(String javaName, Type varType, long offset) {\n+    private void emitIndexedFieldSetter(String javaName, Type varType, String offsetField) {\n@@ -241,1 +242,1 @@\n-                \\{seg}.set(\\{layoutString(1, layout)}, \\{offset} + (\\{index} * sizeof()), \\{x});\n+                \\{seg}.set(\\{layoutString(1, layout)}, \\{offsetField} + (\\{index} * sizeof()), \\{x});\n@@ -256,0 +257,16 @@\n+\n+    private String emitOffsetFieldDecl(Declaration field) {\n+        String offsetFieldName = STR.\"\\{field.name()}$OFFSET\";\n+        appendIndentedLines(STR.\"\"\"\n+            private static final long \\{offsetFieldName} = \\{ClangOffsetOf.getOrThrow(field) \/ 8};\n+            \"\"\");\n+        return offsetFieldName;\n+    }\n+\n+    private String emitSizeFieldDecl(Declaration field) {\n+        String sizeFieldName = STR.\"\\{field.name()}$SIZE\";\n+        appendIndentedLines(STR.\"\"\"\n+            private static final long \\{sizeFieldName} = \\{ClangSizeOf.getOrThrow(field) \/ 8};\n+            \"\"\");\n+        return sizeFieldName;\n+    }\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/StructBuilder.java","additions":33,"deletions":16,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -173,1 +173,3 @@\n-            return cls.getField(name);\n+            Field field = cls.getDeclaredField(name);\n+            field.setAccessible(true);\n+            return field;\n","filename":"test\/lib\/testlib\/JextractToolRunner.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.lang.foreign.MemoryLayout.PathElement;\n@@ -36,0 +37,1 @@\n+import java.lang.reflect.Field;\n@@ -189,0 +191,4 @@\n+            Field offsetField = findField(structCls, memberName + \"$OFFSET\");\n+            assertNotNull(offsetField);\n+            assertEquals(offsetField.getType(), long.class);\n+            assertEquals(offsetField.get(null), structLayout.byteOffset(PathElement.groupElement(memberName)));\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/TestClassGeneration.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}