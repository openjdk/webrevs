{"files":[{"patch":"@@ -65,0 +65,6 @@\n+    record CursorKey(Position position, String spelling) {\n+        static CursorKey of(Cursor cursor) {\n+            return new CursorKey(CursorPosition.of(cursor), cursor.spelling());\n+        }\n+    }\n+\n@@ -66,1 +72,1 @@\n-    private final Map<Position, Declaration> declarationCache = new HashMap<>();\n+    private final Map<CursorKey, Declaration> declarationCache = new HashMap<>();\n@@ -87,2 +93,2 @@\n-    public Optional<Declaration> lookup(Position pos) {\n-        Declaration declaration = declarationCache.get(pos);\n+    public Optional<Declaration> lookup(CursorKey key) {\n+        Declaration declaration = declarationCache.get(key);\n@@ -90,1 +96,1 @@\n-                parent.lookup(pos) :\n+                parent.lookup(key) :\n@@ -128,1 +134,2 @@\n-        Optional<Declaration> cachedDecl = lookup(pos);\n+        CursorKey key = CursorKey.of(c);\n+        Optional<Declaration> cachedDecl = lookup(key);\n@@ -144,2 +151,2 @@\n-        if (decl != null && pos != Position.NO_POSITION) {\n-            declarationCache.put(pos, decl);\n+        if (decl != null) {\n+            declarationCache.put(key, decl);\n@@ -291,0 +298,3 @@\n+            } else {\n+                \/\/ propagate\n+                createTree(fc);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/TreeMaker.java","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -138,2 +138,1 @@\n-                    Position pos = CursorPosition.of(pointee.getDeclarationCursor());\n-                    String spelling = t.spelling();\n+                    TreeMaker.CursorKey key = TreeMaker.CursorKey.of(pointee.getDeclarationCursor());\n@@ -141,1 +140,1 @@\n-                        Optional<Declaration> decl = treeMaker.lookup(pos);\n+                        Optional<Declaration> decl = treeMaker.lookup(key);\n@@ -144,1 +143,1 @@\n-                            return Type.error(spelling);\n+                            return Type.error(key.spelling());\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/TypeMaker.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.lang.foreign.GroupLayout;\n+import java.lang.foreign.MemoryLayout;\n+import java.lang.foreign.MemoryLayout.PathElement;\n+\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.*;\n+\n+import test.jextract.packedstructs.*;\n+\n+\/*\n+ * @test id=classes\n+ * @library \/lib\n+ * @run main\/othervm JtregJextract -l Func -t test.jextract.packedstructs packedstructs.h\n+ * @build TestPackedStructs\n+ * @run testng\/othervm --enable-native-access=ALL-UNNAMED TestPackedStructs\n+ *\/\n+\/*\n+ * @test id=sources\n+ * @library \/lib\n+ * @run main\/othervm JtregJextractSources -l Func -t test.jextract.packedstructs packedstructs.h\n+ * @build TestPackedStructs\n+ * @run testng\/othervm --enable-native-access=ALL-UNNAMED TestPackedStructs\n+ *\/\n+public class TestPackedStructs {\n+\n+    @Test\n+    public void testPackedStructs() {\n+        checkLayout(S1.$LAYOUT());\n+        checkLayout(S2.$LAYOUT());\n+        checkLayout(S3.$LAYOUT());\n+        checkLayout(S4.$LAYOUT());\n+        checkLayout(S5.$LAYOUT());\n+        checkLayout(S6.$LAYOUT());\n+        checkLayout(S7.$LAYOUT());\n+        checkLayout(S8.$LAYOUT());\n+    }\n+\n+    private void checkLayout(MemoryLayout layout) {\n+        layout.select(PathElement.groupElement(\"first\"));\n+        layout.select(PathElement.groupElement(\"second\"));\n+        assertEquals(((GroupLayout)layout).memberLayouts().get(1).byteAlignment(), 1);\n+    }\n+}\n","filename":"test\/jtreg\/generator\/TestPackedStructs.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#pragma pack(1)\n+struct S1 {\n+   char first;\n+   int second;\n+};\n+\n+#pragma pack(1)\n+struct S2 {\n+   char first;\n+   struct { int i } second;\n+};\n+\n+#pragma pack(1)\n+struct S3 {\n+   char first;\n+   int second[2];\n+};\n+\n+#pragma pack(1)\n+struct S4 {\n+   char first;\n+   union { int x; int y; } second;\n+};\n+\n+#pragma pack(1)\n+struct S5 {\n+   char first;\n+   union { struct { int i } x; struct { int i } y; } second;\n+};\n+\n+#pragma pack(1)\n+struct S6 {\n+   char first;\n+   union { int x[2]; int y[2]; } second;\n+};\n+\n+#pragma pack(1)\n+struct S7 {\n+   long long first;\n+   int second;\n+};\n+\n+#pragma pack(1)\n+struct S8 {\n+   struct S7 first[1];\n+   struct S7 second[1];\n+};\n","filename":"test\/jtreg\/generator\/packedstructs.h","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"}]}