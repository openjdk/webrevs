{"files":[{"patch":"@@ -26,7 +26,0 @@\n-import java.io.*;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-import java.util.stream.Stream;\n@@ -45,2 +38,0 @@\n-import java.io.FileWriter;\n-import java.io.IOException;\n@@ -60,43 +51,0 @@\n-class CopyrightUpdater {\n-    public static void main(String[] args) throws IOException {\n-        try (Stream<String> stream = Files.lines(Paths.get(\"2024file.list\"))) {\n-            stream.filter(a -> Files.isReadable(Path.of(a)))\n-                    .forEach(CopyrightUpdater::updateCopyright);\n-        }\n-    }\n-\n-    static void updateCopyright(String filePath) {\n-        File file = new File(filePath);\n-        StringBuilder contentBuilder = new StringBuilder();\n-\n-        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {\n-            String line;\n-            boolean updated = false;\n-            while ((line = reader.readLine()) != null) {\n-                Pattern singleYearPattern = Pattern.compile(\"Copyright \\\\(c\\\\) (202[0-3]), (\\\\d{4}), Oracle\");\n-                Pattern singleYearOnlyPattern = Pattern.compile(\"Copyright \\\\(c\\\\) (202[0-3]), Oracle\");\n-                Matcher matcher = singleYearPattern.matcher(line);\n-                Matcher singleYearOnlyMatcher = singleYearOnlyPattern.matcher(line);\n-                if (matcher.find()) {\n-                    String year = matcher.group(2); \/\/ Second year\n-                    if (!\"2024\".equals(year)) {\n-                        line = line.replace(\", \" + year, \", 2024\");\n-                        updated = true;\n-                    }\n-                } else if (singleYearOnlyMatcher.find()) {\n-                    line = line.replace(\", Oracle\", \", 2024, Oracle\");\n-                    updated = true;\n-                }\n-                contentBuilder.append(line).append(System.lineSeparator());\n-            }\n-            if (updated) {\n-                try (FileWriter writer = new FileWriter(file)) {\n-                    writer.write(contentBuilder.toString());\n-                }\n-            }\n-        } catch (IOException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-}\n-\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/ClassSourceBuilder.java","additions":0,"deletions":52,"binary":false,"changes":52,"status":"modified"}]}