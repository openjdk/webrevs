{"files":[{"patch":"@@ -0,0 +1,23 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n","filename":"test\/jtreg\/generator\/clinitCycles\/libClinitGlobal.c","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.annotations.Test;\n+import test.jextract.globalaccess.*;\n+\n+import java.lang.foreign.Arena;\n+import java.lang.foreign.MemorySegment;\n+\n+import static org.testng.Assert.*;\n+import static test.jextract.globalaccess.globalStructAccess_h.*;\n+\n+\/*\n+ * @test\n+ * @library \/lib\n+ * @run main\/othervm JtregJextract -l StructGlobal -t test.jextract.globalaccess globalStructAccess.h\n+ * @build TestGlobalStructAccess\n+ * @run testng\/othervm --enable-native-access=ALL-UNNAMED TestGlobalStructAccess\n+ *\/\n+public class TestGlobalStructAccess {\n+\n+    @Test\n+    public void testGlobalStructAccess() {\n+        try (Arena arena = Arena.ofConfined()) {\n+            MemorySegment gPoint = p();\n+            assertEquals(Point.x(gPoint), 1);\n+            assertEquals(Point.y(gPoint), 2);\n+\n+            MemorySegment newPoint = allocatePoint(3, 4, arena);\n+            p(newPoint);\n+            assertEquals(Point.x(gPoint), 3);\n+            assertEquals(Point.y(gPoint), 4);\n+        }\n+    }\n+\n+    static MemorySegment allocatePoint(int x, int y, Arena arena) {\n+        MemorySegment point = Point.allocate(arena);\n+        Point.x(point, x);\n+        Point.y(point, y);\n+        return point;\n+    }\n+}\n","filename":"test\/jtreg\/generator\/structAccessors\/TestGlobalStructAccess.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -36,1 +36,1 @@\n- * @run main\/othervm JtregJextract -l Func -t test.jextract.nestedaccess nestedStructAccess.h\n+ * @run main\/othervm JtregJextract -t test.jextract.nestedaccess nestedStructAccess.h\n","filename":"test\/jtreg\/generator\/structAccessors\/TestNestedStructAccess.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jtreg\/generator\/nestedStructAccess\/TestNestedStructAccess.java","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-    int x;\n-    int y;\n+   int x;\n+   int y;\n@@ -29,4 +29,1 @@\n-struct Line {\n-   struct Point start;\n-   struct Point end;\n-};\n+extern struct Point p;\n","filename":"test\/jtreg\/generator\/structAccessors\/globalStructAccess.h","additions":3,"deletions":6,"binary":false,"changes":9,"previous_filename":"test\/jtreg\/generator\/nestedStructAccess\/nestedStructAccess.h","status":"copied"},{"patch":"@@ -24,4 +24,1 @@\n-struct Point {\n-    int x;\n-    int y;\n-};\n+#include \"globalStructAccess.h\"\n@@ -29,4 +26,1 @@\n-struct Line {\n-   struct Point start;\n-   struct Point end;\n-};\n+struct Point p = { 1, 2 };\n","filename":"test\/jtreg\/generator\/structAccessors\/libStructGlobal.c","additions":2,"deletions":8,"binary":false,"changes":10,"previous_filename":"test\/jtreg\/generator\/nestedStructAccess\/nestedStructAccess.h","status":"copied"},{"patch":"","filename":"test\/jtreg\/generator\/structAccessors\/nestedStructAccess.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jtreg\/generator\/nestedStructAccess\/nestedStructAccess.h","status":"renamed"}]}