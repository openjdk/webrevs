{"files":[{"patch":"@@ -989,1 +989,1 @@\n-| `--symbols-class-name <name>`                                          | override the name of the root header class                                                                                                                                                                                                                                            |\n+| `--symbols-class-name <name>`                                    | override the name of the root header class                                                                                                                                                                                                                                            |\n","filename":"doc\/GUIDE.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -121,2 +121,6 @@\n-        return generateInternal(decl, headerName, targetPkg, new IncludeHelper(),\n-                libs, useSystemLoadLibrary, Logger.DEFAULT);\n+        Options.Builder builder = Options.builder();\n+        builder.setTargetPackage(targetPkg);\n+        builder.setUseSystemLoadLibrary(useSystemLoadLibrary);\n+        libs.forEach(builder::addLibrary);\n+        Options options = builder.build();\n+        return generateInternal(decl, headerName, targetPkg, options, Logger.DEFAULT);\n@@ -125,3 +129,6 @@\n-    private static List<JavaSourceFile> generateInternal(Declaration.Scoped decl, String headerName,\n-                                                         String targetPkg, IncludeHelper includeHelper,\n-                                                         List<Options.Library> libs, boolean useSystemLoadLibrary,\n+\n+\n+    private static List<JavaSourceFile> generateInternal(Declaration.Scoped decl,\n+                                                         String headerName,\n+                                                         String targetPkg,\n+                                                         Options options,\n@@ -131,1 +138,1 @@\n-                .map(new IncludeFilter(includeHelper)::scan)\n+                .map(new IncludeFilter(options.includeHelper)::scan)\n@@ -140,2 +147,2 @@\n-                List.of(OutputFactory.generateWrapped(transformedDecl, targetPkg, libs, useSystemLoadLibrary,\n-                        includeHelper.getSharedSymbolsFile()));\n+                List.of(OutputFactory.generateWrapped(transformedDecl, targetPkg, options.libraries, options.useSystemLoadLibrary,\n+                        options.sharedClassName));\n@@ -445,1 +452,1 @@\n-            builder.setSharedUtilsName(optionSet.valueOf(\"--symbols-class-name\"));\n+            builder.setSharedClassName(optionSet.valueOf(\"--symbols-class-name\"));\n@@ -511,2 +518,2 @@\n-                toplevel, headerName,\n-                options.targetPackage, options.includeHelper, options.libraries, options.useSystemLoadLibrary, logger);\n+                    toplevel, headerName, targetPackage, options, logger\n+            );\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/JextractTool.java","additions":18,"deletions":11,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -352,0 +352,1 @@\n+        appendBlankLine();\n@@ -354,1 +355,2 @@\n-    void emitLibaryArena(){appendIndentedLines(\"\"\"\n+    void emitLibaryArena(){\n+        appendIndentedLines(\"\"\"\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/HeaderFileBuilder.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-    public String sharedSymbolsFile;\n+    public String sharedClassName;\n@@ -89,2 +89,2 @@\n-    public String getSharedSymbolsFile() {\n-        return sharedSymbolsFile;\n+    public String getSharedClassName() {\n+        return sharedClassName;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/IncludeHelper.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,0 +41,2 @@\n+    \/\/ name of the shared class\n+    public String sharedClassName;\n@@ -44,1 +46,2 @@\n-                    String targetPackage, String outputDir, IncludeHelper includeHelper) {\n+                    String targetPackage, String outputDir, String sharedClassName,\n+                    IncludeHelper includeHelper) {\n@@ -51,0 +54,1 @@\n+        this.sharedClassName = sharedClassName;\n@@ -63,0 +67,1 @@\n+        private String sharedClassName;\n@@ -71,0 +76,1 @@\n+            this.sharedClassName = null;\n@@ -77,1 +83,1 @@\n-                    useSystemLoadLibrary, targetPackage, outputDir, includeHelper\n+                    useSystemLoadLibrary, targetPackage, outputDir, sharedClassName, includeHelper\n@@ -105,2 +111,2 @@\n-        public void setSharedUtilsName(String sharedSymbolsFile) {\n-            includeHelper.sharedSymbolsFile = sharedSymbolsFile;\n+        public void setSharedClassName(String file) {\n+            this.sharedClassName = file;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/Options.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-                                                   String sharedSymbolsFile) {\n+                                                   String sharedClassName) {\n@@ -53,1 +53,1 @@\n-                libs, useSystemLoadLibrary, sharedSymbolsFile);\n+                libs, useSystemLoadLibrary, sharedClassName);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/OutputFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    private static String SHARED;\n+    private final String shared;\n@@ -55,1 +55,1 @@\n-                    boolean useSystemLoadLibrary, String sharedSymbolsFile) {\n+                    boolean useSystemLoadLibrary, String sharedClassName) {\n@@ -57,2 +57,2 @@\n-        SHARED = sharedSymbolsFile != null ?\n-                sharedSymbolsFile :\n+        shared = sharedClassName != null ?\n+                sharedClassName :\n@@ -66,2 +66,2 @@\n-        SourceFileBuilder sfb = SourceFileBuilder.newSourceFile(packageName(), SHARED);\n-        HeaderFileBuilder shared = initHeader(sfb, SHARED, null, null);\n+        SourceFileBuilder sfb = SourceFileBuilder.newSourceFile(packageName(), shared);\n+        HeaderFileBuilder sharedHeader = initHeader(sfb, shared, null, null);\n@@ -69,3 +69,3 @@\n-        shared.emitBasicPrimitiveTypes();\n-        shared.emitRuntimeHelperMethods();\n-        shared.classEnd();\n+        sharedHeader.emitBasicPrimitiveTypes();\n+        sharedHeader.emitRuntimeHelperMethods();\n+        sharedHeader.classEnd();\n@@ -82,1 +82,1 @@\n-                SHARED,\n+                shared,\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/ToplevelBuilder.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n---symbols-class-name <name>            override the name of the root header class                   \\n\\\n+--symbols-class-name <name>        override the name of the root header class                   \\n\\\n","filename":"src\/main\/resources\/org\/openjdk\/jextract\/impl\/resources\/Messages.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.jextract.sharedSymbolsHeader.*;\n@@ -37,1 +36,0 @@\n- * @run main\/othervm JtregJextract -t test.jextract.sharedSymbolsHeader sharedSymbolsHeader.h\n@@ -52,0 +50,12 @@\n+\n+    @Test\n+    public void testSharedClassNameOption() {\n+        Path splitOutput = getOutputFilePath(\"sharedSymbolsHeaderCustomName\");\n+        Path splitH = getInputFilePath(\"sharedSymbolsHeader.h\");\n+        runAndCompile(splitOutput, \"--symbols-class-name\", \"CustomName\", splitH.toString());\n+        try(TestUtils.Loader loader = TestUtils.classLoader(splitOutput)) {\n+            assertNotNull(loader.loadClass(\"CustomName\"));\n+        } finally {\n+            TestUtils.deleteDir(splitOutput);\n+        }\n+    }\n","filename":"test\/jtreg\/generator\/sharedSymbolsHeader\/TestSharedSymbolsHeader.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}