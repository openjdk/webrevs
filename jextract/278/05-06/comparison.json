{"files":[{"patch":"@@ -989,1 +989,1 @@\n-| `--shared-symbols <name>`                                          | override the name of the root header class                                                                                                                                                                                                                                            |\n+| `--symbols-class-name <name>`                                          | override the name of the root header class                                                                                                                                                                                                                                            |\n","filename":"doc\/GUIDE.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -360,1 +360,1 @@\n-        parser.accepts(\"--shared-symbols\", \"help.shared.symbols\", true);\n+        parser.accepts(\"--symbols-class-name\", \"help.shared.symbols\", true);\n@@ -444,2 +444,2 @@\n-        if (optionSet.has(\"--shared-symbols\")) {\n-            builder.setSharedUtilsName(optionSet.valueOf(\"--shared-symbols\"));\n+        if (optionSet.has(\"--symbols-class-name\")) {\n+            builder.setSharedUtilsName(optionSet.valueOf(\"--symbols-class-name\"));\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/JextractTool.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -354,0 +354,5 @@\n+    void emitLibaryArena(){appendIndentedLines(\"\"\"\n+\n+            static final Arena LIBRARY_ARENA = Arena.ofAuto();\"\"\");\n+    }\n+\n@@ -357,1 +362,0 @@\n-            static final Arena LIBRARY_ARENA = Arena.ofAuto();\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/HeaderFileBuilder.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,2 +54,2 @@\n-    ToplevelBuilder(String packageName, String headerClassName,\n-                    List<Options.Library> libs, boolean useSystemLoadLibrary, String sharedSymbolsFile) {\n+    ToplevelBuilder(String packageName, String headerClassName, List<Options.Library> libs,\n+                    boolean useSystemLoadLibrary, String sharedSymbolsFile) {\n@@ -57,5 +57,6 @@\n-        SHARED = sharedSymbolsFile != null ? sharedSymbolsFile : headerDesc.displayName() + \"$shared\";\n-        createSharedClass();\n-        SourceFileBuilder sfb = SourceFileBuilder.newSourceFile(packageName, headerClassName);\n-        headerBuilders.add(sfb);\n-        lastHeader = createFirstHeader(sfb, libs, useSystemLoadLibrary);\n+        SHARED = sharedSymbolsFile != null ?\n+                sharedSymbolsFile :\n+                headerDesc.displayName() + \"$shared\";\n+\n+        initSharedClass();\n+        initFirstHeader(libs, useSystemLoadLibrary);\n@@ -64,1 +65,1 @@\n-    private void createSharedClass() {\n+    private void initSharedClass() {\n@@ -66,6 +67,1 @@\n-        HeaderFileBuilder sharedBuilder = new HeaderFileBuilder(sfb, SHARED, null, SHARED);\n-        sharedBuilder.appendBlankLine();\n-        sharedBuilder.classBegin();\n-        sharedBuilder.emitDefaultConstructor();\n-        sharedBuilder.emitBasicPrimitiveTypes();\n-        sharedBuilder.classEnd();\n+        HeaderFileBuilder shared = initHeader(sfb, SHARED, null, null);\n@@ -73,0 +69,3 @@\n+        shared.emitBasicPrimitiveTypes();\n+        shared.emitRuntimeHelperMethods();\n+        shared.classEnd();\n@@ -75,8 +74,42 @@\n-    private static HeaderFileBuilder createFirstHeader(SourceFileBuilder sfb, List<Options.Library> libs, boolean useSystemLoadLibrary) {\n-        HeaderFileBuilder first = new HeaderFileBuilder(sfb, String.format(\"%1$s#{SUFFIX}\",sfb.className()), SHARED, sfb.className());\n-        first.appendBlankLine();\n-        first.classBegin();\n-        first.emitDefaultConstructor();\n-        first.emitRuntimeHelperMethods();\n-        first.emitFirstHeaderPreamble(libs, useSystemLoadLibrary);\n-        return first;\n+    private void initFirstHeader(List<Options.Library> libs, boolean useSystemLoadLibrary) {\n+        String base = headerDesc.displayName();\n+        SourceFileBuilder sfb = SourceFileBuilder.newSourceFile(packageName(), base);\n+        headerBuilders.add(sfb);\n+\n+        lastHeader = initHeader(\n+                sfb,\n+                base + SUFFIX,\n+                SHARED,\n+                base\n+        );\n+        lastHeader.emitLibaryArena();\n+        lastHeader.emitFirstHeaderPreamble(libs, useSystemLoadLibrary);\n+    }\n+\n+    \/**\n+     * Shared boilerplate: blank line + classBegin + default constructor\n+     *\/\n+    private HeaderFileBuilder initHeader(SourceFileBuilder sfb, String classNameWithSuffix,\n+                                         String superClass, String extendsClass) {\n+        HeaderFileBuilder hfb = new HeaderFileBuilder(sfb, classNameWithSuffix,\n+                superClass, extendsClass);\n+        hfb.appendBlankLine();\n+        hfb.classBegin();\n+        hfb.emitDefaultConstructor();\n+        return hfb;\n+    }\n+\n+    \/**\n+     * Creates a new header file chunk\n+     *\/\n+    private HeaderFileBuilder newHeaderChunk() {\n+        String base = headerDesc.displayName();\n+        SourceFileBuilder sfb = SourceFileBuilder.newSourceFile(packageName(), base);\n+        HeaderFileBuilder hfb = initHeader(\n+                sfb,\n+                base + SUFFIX,\n+                base + PREV_SUFFIX,\n+                base\n+        );\n+        headerBuilders.add(sfb);\n+        return hfb;\n@@ -176,4 +209,0 @@\n-            SourceFileBuilder sfb = SourceFileBuilder.newSourceFile(packageName(), mainHeaderClassName());\n-            String className = mainHeaderClassName() + SUFFIX;\n-            HeaderFileBuilder headerFileBuilder = new HeaderFileBuilder(sfb, className,\n-                    mainHeaderClassName() + PREV_SUFFIX, mainHeaderClassName());\n@@ -181,5 +210,1 @@\n-            headerFileBuilder.appendBlankLine();\n-            headerFileBuilder.classBegin();\n-            headerFileBuilder.emitDefaultConstructor();\n-            headerBuilders.add(sfb);\n-            lastHeader = headerFileBuilder;\n+            lastHeader = newHeaderChunk();\n@@ -187,1 +212,0 @@\n-            return headerFileBuilder;\n@@ -190,1 +214,0 @@\n-            return lastHeader;\n@@ -192,0 +215,1 @@\n+        return lastHeader;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/ToplevelBuilder.java","additions":57,"deletions":33,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n---shared-symbols <name>            override the name of the root header class                   \\n\\\n+--symbols-class-name <name>            override the name of the root header class                   \\n\\\n","filename":"src\/main\/resources\/org\/openjdk\/jextract\/impl\/resources\/Messages.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}