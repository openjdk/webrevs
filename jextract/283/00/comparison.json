{"files":[{"patch":"@@ -0,0 +1,1 @@\n+import org.apache.groovy.nio.extensions.NioExtensions\n@@ -73,1 +74,1 @@\n-task copyLibClang(type: Sync) {\n+tasks.register(\"copyLibClang\", Sync) {\n@@ -96,2 +97,2 @@\n-task createJextractJmod(type: Exec) {\n-    dependsOn jar, copyLibClang\n+tasks.register(\"createJextractJmod\", Exec) {\n+    dependsOn copyLibClang\n@@ -100,1 +101,1 @@\n-    inputs.file(jar.archiveFile.get())\n+    inputs.file(tasks.named('jar', Jar).flatMap { it.archiveFile})\n@@ -105,1 +106,1 @@\n-        delete(jextract_jmod_file)\n+        Files.deleteIfExists(Path.of(jextract_jmod_file))\n@@ -119,1 +120,1 @@\n-task createJextractImage(type: Exec) {\n+tasks.register(\"createJextractImage\", Exec) {\n@@ -122,0 +123,1 @@\n+    def main_sources = \"$projectDir\/src\/main\"\n@@ -123,0 +125,3 @@\n+    inputs.file(\"$main_sources\/jextract\")\n+    inputs.file(\"$main_sources\/jextract.bat\")\n+    inputs.file(\"$main_sources\/jextract.ps1\")\n@@ -131,2 +136,2 @@\n-        delete(jextract_app_dir)\n-        project.mkdir \"${jextract_bin_dir}\"\n+        NioExtensions.deleteDir(Path.of(jextract_app_dir))\n+        Files.createDirectories(Path.of(jextract_bin_dir))\n@@ -148,1 +153,1 @@\n-        Files.copy(Path.of(\"$projectDir\/src\/main\/jextract\"), unixOut);\n+        Files.copy(Path.of(\"$main_sources\/jextract\"), unixOut);\n@@ -157,2 +162,2 @@\n-        Files.copy(Path.of(\"$projectDir\/src\/main\/jextract.bat\"), Path.of(\"${jextract_bin_dir}\/jextract.bat\"))\n-        Files.copy(Path.of(\"$projectDir\/src\/main\/jextract.ps1\"), Path.of(\"${jextract_bin_dir}\/jextract.ps1\"))\n+        Files.copy(Path.of(\"$main_sources\/jextract.bat\"), Path.of(\"${jextract_bin_dir}\/jextract.bat\"))\n+        Files.copy(Path.of(\"$main_sources\/jextract.ps1\"), Path.of(\"${jextract_bin_dir}\/jextract.ps1\"))\n@@ -166,1 +171,1 @@\n-task verify(type: Exec) {\n+tasks.register(\"verify\", Exec) {\n@@ -174,1 +179,1 @@\n-task createRuntimeImageForTest(type: Exec) {\n+tasks.register(\"createRuntimeImageForTest\", Exec) {\n@@ -195,1 +200,1 @@\n-task cmakeConfigure(type: Exec) {\n+tasks.register(\"cmakeConfigure\", Exec) {\n@@ -206,1 +211,1 @@\n-task cmakeBuild(type: Exec) {\n+tasks.register(\"cmakeBuild\", Exec) {\n","filename":"build.gradle","additions":20,"deletions":15,"binary":false,"changes":35,"status":"modified"}]}