{"files":[{"patch":"@@ -88,2 +88,1 @@\n-                return Optional.of(treeMaker.createMacro(TreeMaker.CursorPosition.of(cursor), tokens,\n-                        name, Type.primitive(Type.Primitive.Kind.Int), (long)num));\n+                return Optional.of(treeMaker.createMacro(TreeMaker.CursorPosition.of(cursor), name, Type.primitive(Type.Primitive.Kind.Int), (long)num));\n@@ -266,1 +265,1 @@\n-                constant = treeMaker.createMacro(position, tokens, name, type, value);\n+                constant = treeMaker.createMacro(position, name, type, value);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/MacroParserImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-    public Declaration.Constant createMacro(Position pos, String[] tokens, String name, Type type, Object value) {\n+    public Declaration.Constant createMacro(Position pos, String name, Type type, Object value) {\n@@ -235,2 +235,9 @@\n-        String macroString = Stream.of(tokens).skip(1).collect(Collectors.joining());\n-        DeclarationString.with(macro, STR.\"#define \\{name} \\{macroString}\");\n+        String valueString = value.toString();\n+        if (value instanceof String) {\n+            \/\/ quote string literal\n+            valueString = STR.\"\\\"\\{valueString}\\\"\";\n+        } else if (Utils.isPointer(type)) {\n+            \/\/ add pointer cast to make it look different from a numeric constant\n+            valueString = STR.\"(\\{valueString})\";\n+        }\n+        DeclarationString.with(macro, STR.\"#define \\{name} \\{valueString}\");\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/TreeMaker.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -50,1 +50,3 @@\n-            \"#define FOO 42\", \"#define MSG \\\"Hello\\\"\"));\n+            \"#define FOO 42\",\n+            \"#define MSG \\\"Hello\\\"\",\n+            \"#define MSG_COMMENT \\\"HelloWithComment\\\"\"));\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/Test7903257\/TestDocComments.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#define MSG_COMMENT \"HelloWithComment\" \/* Some comment *\/\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/Test7903257\/macros.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}