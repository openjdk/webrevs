{"files":[{"patch":"@@ -84,5 +84,0 @@\n-    final String fullName() {\n-        \/\/ for a (nested) class 'com.foo.package.A.B.C' this will return 'A.B.C'\n-        return isNested() ? enclosing.fullName() + \".\" + className : className;\n-    }\n-\n@@ -118,9 +113,2 @@\n-        indent();\n-        append(\"}\\n\\n\");\n-    }\n-\n-    \/\/ Internal generation helpers (used by other builders)\n-\n-    final void append(String s) {\n-        sb.append(s);\n-    }\n+        appendIndentedLines(\"\"\"\n+            }\n@@ -128,6 +116,1 @@\n-    final void append(char c) {\n-        sb.append(c);\n-    }\n-\n-    final void append(long l) {\n-        sb.append(l);\n+            \"\"\");\n@@ -136,3 +119,1 @@\n-    final void indent() {\n-        sb.indent();\n-    }\n+    \/\/ Internal generation helpers (used by other builders)\n@@ -148,4 +129,0 @@\n-    final int align() {\n-        return sb.align();\n-    }\n-\n@@ -208,4 +185,0 @@\n-        } else if (type.equals(FunctionDescriptor.class)) {\n-            return \"$DESC\";\n-        } else {\n-            return \"\";\n@@ -213,0 +186,1 @@\n+        throw new IllegalArgumentException(\"Not handled: \" + type);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/ClassSourceBuilder.java","additions":5,"deletions":31,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -69,4 +69,3 @@\n-\n-            if (fiName.isPresent()) {\n-                emitFunctionalInterfaceGetter(fiName.get(), javaName);\n-            }\n+            fiName.ifPresent(s -> emitFunctionalInterfaceGetter(s, javaName));\n+        } else {\n+            throw new IllegalArgumentException(\"Tree type not handled: \" + varTree.type());\n@@ -371,3 +370,1 @@\n-        if (declaration != null) {\n-            emitDocComment(declaration);\n-        }\n+        emitDocComment(declaration);\n@@ -425,3 +422,1 @@\n-        if (declaration != null) {\n-            emitDocComment(declaration);\n-        }\n+        emitDocComment(declaration);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/HeaderFileBuilder.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -326,5 +326,1 @@\n-        c.forEach(child -> {\n-            if (!child.isBitField() || (child.getBitFieldWidth() != 0 && !child.spelling().isEmpty())) {\n-                decls.add(createTree(child));\n-            }\n-        });\n+        c.forEach(child -> decls.add(createTree(child)));\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/TreeMaker.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}