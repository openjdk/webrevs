{"files":[{"patch":"@@ -42,0 +42,1 @@\n+import java.io.File;\n@@ -75,1 +76,1 @@\n-    private List<String> frameworkDirs;\n+    private final List<String> frameworkPaths;\n@@ -79,1 +80,5 @@\n-        this.frameworkDirs = new ArrayList<>();\n+        frameworkPaths = new ArrayList<>(Arrays.asList(\n+                \"\/System\/Library\/Frameworks\/\",\n+                \"\/System\/Library\/PrivateFrameworks\/\"\n+        ));\n+        inferMacOSFrameworkPath().ifPresent(path -> frameworkPaths.add(path.toString()));\n@@ -446,0 +451,9 @@\n+        if (optionSet.has(\"-F\")) {\n+            List<String> paths = optionSet.valuesOf(\"-F\");\n+\n+            paths.forEach(p -> builder.addClangArg(\"-F\" + p));\n+            frameworkPaths.addAll(0, paths);\n+        }\n+\n+        inferMacOSFrameworkPath().ifPresent(platformPath -> builder.addClangArg(\"-F\" + platformPath));\n+\n@@ -452,11 +466,0 @@\n-\n-        if (optionSet.has(\"-F\")) {\n-            optionSet.valuesOf(\"-F\").forEach(\n-                    p -> {\n-                        builder.addClangArg(\"-F\" + p);\n-                        frameworkDirs.add(p);\n-                    });\n-        }\n-\n-        inferMacOSFrameworkPath().ifPresent(platformPath -> builder.addClangArg(\"-F\" + platformPath));\n-\n@@ -536,0 +539,1 @@\n+                    String frameworhPath = \"\";\n@@ -537,1 +541,1 @@\n-                        lib = formatFrameworkPath(lib);\n+                        frameworhPath = resolveFrameworkPath(lib);\n@@ -540,1 +544,2 @@\n-                    Library library = Library.parse(lib);\n+                    assert frameworhPath != null : \"Framework not found: \" + lib;\n+                    Library library = Library.parse(frameworhPath);\n@@ -608,2 +613,2 @@\n-    private String formatFrameworkPath(String optionString) {\n-        for (String dir : frameworkDirs) {\n+    private String resolveFrameworkPath(String optionString) {\n+        for (String dir : frameworkPaths) {\n@@ -612,1 +617,1 @@\n-                return \":\" + path + optionString;\n+                return \":\" + path + File.separator + optionString;\n@@ -616,8 +621,1 @@\n-        String publicPath = String.format(\"\/System\/Library\/Frameworks\/%1$s.framework\/\", optionString);\n-        String privatePath = String.format(\"\/System\/Library\/PrivateFrameworks\/%1$s.framework\/\", optionString);\n-\n-        String frameworkPath = Files.exists(Path.of(privatePath)) ? privatePath :\n-                Files.exists(Path.of(publicPath)) ? publicPath :\n-                        String.valueOf(inferMacOSFrameworkPath().orElse(null));\n-\n-        return \":\" + frameworkPath + optionString;\n+        return null;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/JextractTool.java","additions":24,"deletions":26,"binary":false,"changes":50,"status":"modified"}]}