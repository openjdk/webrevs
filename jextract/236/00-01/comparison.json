{"files":[{"patch":"@@ -627,2 +627,2 @@\n-public static SequenceLayout FOO_ARRAY$layout() { ... } \/\/ 1\n-public static long[] FOO_ARRAY$dimensions() { ... } \/\/ 2\n+public static MemorySegment FOO_ARRAY() { ... } \/\/ 1\n+public static void FOO_ARRAY(MemorySegment varValue) { ... } \/\/ 1\n@@ -630,2 +630,2 @@\n-public static MemorySegment FOO_ARRAY() { ... } \/\/ 3\n-public static void FOO_ARRAY(MemorySegment varValue) { ... } \/\/ 3\n+public static int FOO_ARRAY(long index0, long index1) { ... } \/\/ 2\n+public static void FOO_ARRAY(long index0, long index1, int varValue) { ... } \/\/ 2\n@@ -633,2 +633,2 @@\n-public static int FOO_ARRAY(long index0, long index1) { ... } \/\/ 4\n-public static void FOO_ARRAY(long index0, long index1, int varValue) { ... } \/\/ 4\n+public static SequenceLayout FOO_ARRAY$layout() { ... } \/\/ 3\n+public static long[] FOO_ARRAY$dimensions() { ... } \/\/ 4\n@@ -639,8 +639,1 @@\n-1. a layout accessor, just like we have for a regular variable, but note that the return\n-  type is [`SequenceLayout`].\n-2. a `$dimensions` meta-deta accessor, which returns the _dimensions_ of the array type.\n-  This method returns a `long[]` where each element represents the length of a dimension\n-  of the array type. For instance, in the example `FOO_ARRAY` has a two dimension, whose\n-  lengths are `3` and `5`, so the `FOO_ARRAY$dimensions` method will return a `long[]`\n-  with two elements whose values are `3` and `5` in that order.\n-3. a getter and setter pair for the array variable. Note that the getter replaces the usual\n+1. a getter and setter pair for the array variable. Note that the getter replaces the usual\n@@ -649,1 +642,1 @@\n-4. a pair of _indexed_ getter and setter methods. These methods can be used to get or set\n+2. a pair of _indexed_ getter and setter methods. These methods can be used to get or set\n@@ -652,0 +645,7 @@\n+3. a layout accessor, just like we have for a regular variable, but note that the return\n+  type is [`SequenceLayout`].\n+4. a `$dimensions` meta-data accessor, which returns the _dimensions_ of the array type.\n+  This method returns a `long[]` where each element represents the length of a dimension\n+  of the array type. For instance, in the example `FOO_ARRAY` has two dimensions - `3` and\n+  `5` respectively - so the `FOO_ARRAY$dimensions` method will return a `long[]`\n+  with two elements whose values are `3` and `5` in that order.\n","filename":"doc\/GUIDE.md","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"}]}