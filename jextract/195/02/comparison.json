{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import org.openjdk.jextract.Type.Declared;\n@@ -78,3 +79,1 @@\n-             this.className = parent != null ?\n-                  parent.uniqueNestedClassName(name) :\n-                  javaSafeIdentifier(name);\n+             this.className = javaSafeIdentifier(name);\n@@ -172,1 +171,8 @@\n-                String name = scoped.name().isEmpty() ?\n+                String name;\n+                if (parent instanceof Typedef typedef && typedef.type() instanceof Declared declared &&\n+                        declared.tree().name().isEmpty()) {\n+                    \/\/ typedef struct { ... } Foo;\n+                    \/\/ steal the name from the parent typedef (which has already been mangled)\n+                    name = JavaName.getOrThrow(parent);\n+                } else {\n+                    name = oldScope.uniqueNestedClassName(scoped.name().isEmpty() ?\n@@ -174,1 +180,2 @@\n-                        scoped.name();\n+                        scoped.name());\n+                }\n@@ -195,2 +202,0 @@\n-        \/\/ We may potentially generate a class for a typedef. Make sure\n-        \/\/ class name is unique in the current nesting context.\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/NameMangler.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -147,1 +147,2 @@\n-        if (structOrUnionDecl != null) {\n+        if (structOrUnionDecl != null && !structOrUnionDecl.name().isEmpty()) {\n+            \/\/ do not generate a typedef class if this is a typedef of an anonymous struct (see NameMangler)\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/OutputFactory.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+import org.openjdk.jextract.Declaration.Scoped;\n+import org.openjdk.jextract.Declaration.Typedef;\n@@ -33,0 +35,1 @@\n+import org.openjdk.jextract.Type.Declared;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/Utils.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-        checkLayout(outer_td$0.layout(), UNDEFINED_STRUCT);\n","filename":"test\/jtreg\/generator\/nestedTypes\/TestNestedTypesUnsupported.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -118,2 +118,2 @@\n-            { \"Bar$0\", C_INT.withName(\"a\"),       int.class,           10 },\n-            { \"Bar$0\", C_INT.withName(\"b\"),       int.class,           10 },\n+            { \"Bar\", C_INT.withName(\"a\"),       int.class,           10 },\n+            { \"Bar\", C_INT.withName(\"b\"),       int.class,           10 },\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/TestClassGeneration.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}