{"files":[{"patch":"@@ -253,0 +253,1 @@\n+            static final Arena LIBRARY_ARENA = Arena.ofAuto();\n@@ -396,10 +397,22 @@\n-        appendLines(STR.\"\"\"\n-            private static final \\{javaType.getSimpleName()} \\{constantName} = \\{constantValue(javaType, value)};\n-\n-            \"\"\");\n-        emitDocComment(declaration);\n-        appendLines(STR.\"\"\"\n-            public static \\{javaType.getSimpleName()} \\{constantName}() {\n-                return \\{constantName};\n-            }\n-            \"\"\");\n+        if (value instanceof String) {\n+            emitDocComment(declaration);\n+            appendLines(STR.\"\"\"\n+                public static \\{javaType.getSimpleName()} \\{constantName}() {\n+                    class Holder {\n+                        static final \\{javaType.getSimpleName()} \\{constantName}\n+                            = \\{runtimeHelperName()}.LIBRARY_ARENA.allocateFrom(\"\\{Utils.quote(Objects.toString(value))}\");\n+                    }\n+                    return Holder.\\{constantName};\n+                }\n+                \"\"\");\n+        } else {\n+            appendLines(STR.\"\"\"\n+                private static final \\{javaType.getSimpleName()} \\{constantName} = \\{constantValue(javaType, value)};\n+                \"\"\");\n+            emitDocComment(declaration);\n+            appendLines(STR.\"\"\"\n+                public static \\{javaType.getSimpleName()} \\{constantName}() {\n+                    return \\{constantName};\n+                }\n+                \"\"\");\n+        }\n@@ -410,3 +423,1 @@\n-        if (value instanceof String) {\n-            return STR.\"Arena.ofAuto().allocateFrom(\\\"\\{Utils.quote(Objects.toString(value))}\\\")\";\n-        } else if (type == MemorySegment.class) {\n+        if (type == MemorySegment.class) {\n@@ -442,1 +453,1 @@\n-            } else {\n+            } else if (value instanceof Number n) {\n@@ -444,1 +455,3 @@\n-                buf.append(value + \"L\");\n+                buf.append(n.longValue() + \"L\");\n+            } else {\n+                throw new IllegalArgumentException(STR.\"Unhandled type: \\{type}, or value: \\{value}\");\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/HeaderFileBuilder.java","additions":28,"deletions":15,"binary":false,"changes":43,"status":"modified"}]}