{"files":[{"patch":"@@ -122,0 +122,24 @@\n+Users should exercise caution when filtering symbols, as it is relatively easy to filter out a declaration that is depended on by one or more declarations:\n+\n+```c\n+\/\/ test.h\n+struct A {\n+   int x;\n+}\n+struct A aVar;\n+```\n+\n+Here, we could run `jextract` and filter out `A`, like so:\n+\n+```\n+jextract --include-var aVar test.h\n+```\n+\n+However, doing so would lead to broken generated code, as the layout of the global variable `aVar` depends on the layout of the excluded struct `A`.\n+\n+In such cases, `jextract` will report the missing dependency and terminate without generating any bindings:\n+\n+```\n+ERROR: aVar depends on A which has been excluded\n+```\n+\n","filename":"README.md","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import java.text.MessageFormat;\n@@ -55,1 +54,0 @@\n-import java.util.Locale;\n@@ -57,1 +55,0 @@\n-import java.util.ResourceBundle;\n@@ -74,5 +71,6 @@\n-    private static final int OPTION_ERROR  = 1;\n-    private static final int INPUT_ERROR   = 2;\n-    private static final int CLANG_ERROR   = 3;\n-    private static final int RUNTIME_ERROR = 4;\n-    private static final int OUTPUT_ERROR  = 5;\n+    private static final int FAILURE       = 1;\n+    private static final int OPTION_ERROR  = 2;\n+    private static final int INPUT_ERROR   = 3;\n+    private static final int CLANG_ERROR   = 4;\n+    private static final int FATAL_ERROR   = 5;\n+    private static final int OUTPUT_ERROR  = 6;\n@@ -505,1 +503,1 @@\n-            return RUNTIME_ERROR;\n+            return FATAL_ERROR;\n@@ -522,1 +520,1 @@\n-            return RUNTIME_ERROR;\n+            return FATAL_ERROR;\n@@ -525,1 +523,3 @@\n-        return SUCCESS;\n+        return logger.hasErrors() ?\n+                FAILURE :\n+                SUCCESS;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/JextractTool.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -70,5 +70,6 @@\n-    protected static final int OPTION_ERROR  = 1;\n-    protected static final int INPUT_ERROR   = 2;\n-    protected static final int CLANG_ERROR   = 3;\n-    protected static final int RUNTIME_ERROR = 4;\n-    protected static final int OUTPUT_ERROR  = 5;\n+    protected static final int FAILURE       = 1;\n+    protected static final int OPTION_ERROR  = 2;\n+    protected static final int INPUT_ERROR   = 3;\n+    protected static final int CLANG_ERROR   = 4;\n+    protected static final int RUNTIME_ERROR = 5;\n+    protected static final int OUTPUT_ERROR  = 6;\n","filename":"test\/lib\/testlib\/JextractToolRunner.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+        result.checkFailure(FAILURE);\n","filename":"test\/testng\/org\/openjdk\/jextract\/test\/toolprovider\/includeDeps\/TestBadIncludes.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}