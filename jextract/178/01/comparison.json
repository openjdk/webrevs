{"files":[{"patch":"@@ -78,0 +78,1 @@\n+            import java.util.function.*;\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/SourceFileBuilder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-            emitOfAddressScoped();\n+            emitReinterpret();\n@@ -220,1 +220,1 @@\n-    private void emitOfAddressScoped() {\n+    private void emitReinterpret() {\n@@ -223,2 +223,6 @@\n-            public static MemorySegment ofAddress(MemorySegment addr, Arena scope) {\n-                return addr.reinterpret($LAYOUT().byteSize(), scope, null);\n+            public static MemorySegment reinterpret(MemorySegment addr, Arena scope, Consumer<MemorySegment> cleanup) {\n+                return reinterpret(addr, 1, scope, cleanup);\n+            }\n+\n+            public static MemorySegment reinterpret(MemorySegment addr, long elementCount, Arena scope, Consumer<MemorySegment> cleanup) {\n+                return addr.reinterpret($LAYOUT().byteSize() * elementCount, scope, cleanup);\n","filename":"src\/main\/java\/org\/openjdk\/jextract\/impl\/StructBuilder.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -14,1 +14,1 @@\n-    jtreg\/generator\/test8253102\/LibTest8253102Test.java \\\n+    jtreg\/generator\/reinterpret\/TestReinterpret.java \\\n","filename":"test\/TEST.groups","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.testng.annotations.Test;\n+\n+import java.lang.foreign.Arena;\n+import java.lang.foreign.MemorySegment;\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.assertTrue;\n+import static test.jextract.reinterpret.reinterpret_h.*;\n+import test.jextract.reinterpret.*;\n+\n+\/*\n+ * @test id=classes\n+ * @bug 8253102 7903626\n+ * @summary jextract should emit reinterpret utility method on struct classes\n+ * @library \/lib\n+ * @run main\/othervm JtregJextract -l Reinterpret -t test.jextract.reinterpret reinterpret.h\n+ * @build TestReinterpret\n+ * @run testng\/othervm --enable-native-access=ALL-UNNAMED TestReinterpret\n+ *\/\n+\/*\n+ * @test id=sources\n+ * @bug 8253102 7903626\n+ * @summary jextract should emit reinterpret utility method on struct classes\n+ * @library \/lib\n+ * @run main\/othervm JtregJextractSources -l Reinterpret -t test.jextract.reinterpret reinterpret.h\n+ * @build TestReinterpret\n+ * @run testng\/othervm --enable-native-access=ALL-UNNAMED TestReinterpret\n+ *\/\n+public class TestReinterpret {\n+    @Test\n+    public void testSingleStruct() {\n+        try (Arena arena = Arena.ofConfined()) {\n+            MemorySegment addr = make(14, 99);\n+            MemorySegment seg = Point.reinterpret(addr, arena, reinterpret_h::freePoint);\n+            assertEquals(Point.x(seg), 14);\n+            assertEquals(Point.y(seg), 99);\n+        }\n+    }\n+\n+    @Test\n+    public void testStructArray() {\n+        try (Arena arena = Arena.ofConfined()) {\n+            int elementCount = 10;\n+            MemorySegment addr = makeArray(elementCount);\n+            MemorySegment array = Point.reinterpret(addr, elementCount, arena, reinterpret_h::freePoint);\n+            for (int i = 0; i < elementCount; i++) {\n+                MemorySegment point = Point.asSlice(array, i);\n+                assertEquals(Point.x(point), i);\n+                assertEquals(Point.y(point), i + 1);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jtreg\/generator\/reinterpret\/TestReinterpret.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"reinterpret.h\"\n+#include <stdlib.h>\n+\n+EXPORT Point* make(int x, int y) {\n+    Point* p = (Point*)malloc(sizeof(Point));\n+    p->x = x; p->y = y;\n+    return p;\n+}\n+\n+EXPORT void freePoint(struct Point* ptr) {\n+    free(ptr);\n+}\n+\n+EXPORT Point* makeArray(int count) {\n+    Point* p = (Point*)calloc(count, sizeof(Point));\n+    for (int i = 0; i < count; i++) {\n+        p[i].x = i;\n+        p[i].y = i + 1;\n+    }\n+    return p;\n+}\n","filename":"test\/jtreg\/generator\/reinterpret\/libReinterpret.c","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -43,0 +43,2 @@\n+EXPORT Point* makeArray(int count);\n+\n","filename":"test\/jtreg\/generator\/reinterpret\/reinterpret.h","additions":2,"deletions":0,"binary":false,"changes":2,"previous_filename":"test\/jtreg\/generator\/test8253102\/test8253102.h","status":"renamed"},{"patch":"@@ -1,62 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import org.testng.annotations.Test;\n-\n-import java.lang.foreign.Arena;\n-import java.lang.foreign.MemorySegment;\n-import static org.testng.Assert.assertEquals;\n-import static org.testng.Assert.assertTrue;\n-import static test.jextract.test8253102.test8253102_h.*;\n-import test.jextract.test8253102.*;\n-\n-\/*\n- * @test id=classes\n- * @bug 8253102\n- * @summary jextract should emit address to segment utility method on struct classes\n- * @library \/lib\n- * @run main\/othervm JtregJextract -l Test8253102 -t test.jextract.test8253102 test8253102.h\n- * @build LibTest8253102Test\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED LibTest8253102Test\n- *\/\n-\/*\n- * @test id=sources\n- * @bug 8253102\n- * @summary jextract should emit address to segment utility method on struct classes\n- * @library \/lib\n- * @run main\/othervm JtregJextractSources -l Test8253102 -t test.jextract.test8253102 test8253102.h\n- * @build LibTest8253102Test\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED LibTest8253102Test\n- *\/\n-public class LibTest8253102Test {\n-    @Test\n-    public void test() {\n-        try (Arena arena = Arena.ofConfined()) {\n-            MemorySegment addr = make(14, 99);\n-            MemorySegment seg = Point.ofAddress(addr, arena);\n-            assertEquals(Point.x(seg), 14);\n-            assertEquals(Point.y(seg), 99);\n-            freePoint(addr);\n-        }\n-    }\n-}\n","filename":"test\/jtreg\/generator\/test8253102\/LibTest8253102Test.java","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"},{"patch":"@@ -1,35 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"test8253102.h\"\n-#include <stdlib.h>\n-\n-EXPORT Point* make(int x, int y) {\n-    Point* p = (Point*)malloc(sizeof(Point));\n-    p->x = x; p->y = y;\n-    return p;\n-}\n-\n-EXPORT void freePoint(struct Point* ptr) {\n-    free(ptr);\n-}\n","filename":"test\/jtreg\/generator\/test8253102\/libTest8253102.c","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -74,1 +74,1 @@\n-            var seg = Foo.ofAddress(getFoo(), arena);\n+            var seg = Foo.reinterpret(getFoo(), arena, null);\n","filename":"test\/jtreg\/generator\/test8257892\/LibUnsupportedTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}