{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -190,4 +190,15 @@\n-        Instant expected = Instant.now(Clock.systemUTC());\n-        Instant test = Instant.now();\n-        long diff = Math.abs(test.toEpochMilli() - expected.toEpochMilli());\n-        assertTrue(diff < 100);  \/\/ less than 0.1 secs\n+        long beforeMillis, instantMillis, afterMillis, diff;\n+        int retryRemaining = 5; \/\/ MAX_RETRY_COUNT\n+        do {\n+            beforeMillis = Instant.now(Clock.systemUTC()).toEpochMilli();\n+            instantMillis = Instant.now().toEpochMilli();\n+            afterMillis = Instant.now(Clock.systemUTC()).toEpochMilli();\n+            diff = instantMillis - beforeMillis;\n+            if (instantMillis < beforeMillis || instantMillis > afterMillis) {\n+                throw new RuntimeException(\": Invalid instant: (~\" + instantMillis + \"ms)\"\n+                        + \" when systemUTC in millis is in [\"\n+                        + beforeMillis + \", \"\n+                        + afterMillis + \"]\");\n+            }\n+        } while (diff > 100 && --retryRemaining > 0);  \/\/ retry if diff more than 0.1 sec\n+        assertTrue(retryRemaining > 0);\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/TCKInstant.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"}]}