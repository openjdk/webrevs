{"files":[{"patch":"@@ -39,8 +39,0 @@\n-class JfrRecorderThread : public JavaThread {\n- public:\n-  JfrRecorderThread(ThreadFunction entry_point) : JavaThread(entry_point) {}\n-  virtual ~JfrRecorderThread() {}\n-\n-  virtual bool is_JfrRecorder_thread() const { return true; }\n-};\n-\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrRecorderThread.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"runtime\/javaThread.hpp\"\n@@ -31,1 +32,0 @@\n-class JavaThread;\n@@ -45,0 +45,8 @@\n+class JfrRecorderThread : public JavaThread {\n+ public:\n+  JfrRecorderThread(ThreadFunction entry_point) : JavaThread(entry_point) {}\n+  virtual ~JfrRecorderThread() {}\n+\n+  virtual bool is_JfrRecorder_thread() const { return true; }\n+};\n+\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrRecorderThread.hpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+#include \"jfr\/recorder\/service\/jfrRecorderThread.hpp\"\n@@ -1030,0 +1031,1 @@\n+        declare_type(JfrRecorderThread, JavaThread)                       \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -161,0 +161,1 @@\n+        virtualConstructor.addMapping(\"JfrRecorderThread\", JavaThread.class);\n@@ -198,1 +199,2 @@\n-            \" DeoptimizeObjectsALotThread, StringDedupThread, NotificationThread, ServiceThread or JvmtiAgentThread)\", e);\n+            \" DeoptimizeObjectsALotThread, StringDedupThread, NotificationThread, ServiceThread,\" +\n+            \" JfrRecorderThread, or JvmtiAgentThread)\", e);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Threads.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-            LingeredApp.startApp(theApp, \"-Xmx4m\");\n+            LingeredApp.startApp(theApp, \"-Xmx8m\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbJstackWithConcurrentLock.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}