{"files":[{"patch":"@@ -385,1 +385,1 @@\n-class VM_PopulateDynamicDumpSharedSpace: public VM_GC_Sync_Operation {\n+class VM_PopulateDynamicDumpSharedSpace: public VM_Heap_Sync_Operation {\n@@ -389,1 +389,1 @@\n-  : VM_GC_Sync_Operation(), _builder(archive_name) {}\n+  : VM_Heap_Sync_Operation(), _builder(archive_name) {}\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-  VM_GC_Operation(gc_count_before, gc_cause),\n+  VM_GC_Collect_Operation(gc_count_before, gc_cause),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-class VM_G1CollectFull : public VM_GC_Operation {\n+class VM_G1CollectFull : public VM_GC_Collect_Operation {\n@@ -41,1 +41,1 @@\n-    VM_GC_Operation(gc_count_before, cause, full_gc_count_before, true) { }\n+    VM_GC_Collect_Operation(gc_count_before, cause, full_gc_count_before, true) { }\n@@ -46,1 +46,1 @@\n-class VM_G1TryInitiateConcMark : public VM_GC_Operation {\n+class VM_G1TryInitiateConcMark : public VM_GC_Collect_Operation {\n@@ -92,0 +92,1 @@\n+  bool is_gc_operation() const override { return true; }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -55,3 +55,3 @@\n-                                             uint full_gc_count,\n-                                             GCCause::Cause gc_cause) :\n-  VM_GC_Operation(gc_count, gc_cause, full_gc_count, is_cause_full(gc_cause)) {}\n+                                           uint full_gc_count,\n+                                           GCCause::Cause gc_cause) :\n+  VM_GC_Collect_Operation(gc_count, gc_cause, full_gc_count, is_cause_full(gc_cause)) {}\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVMOperations.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-class VM_ParallelGCCollect: public VM_GC_Operation {\n+class VM_ParallelGCCollect: public VM_GC_Collect_Operation {\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVMOperations.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-class VM_SerialGCCollect: public VM_GC_Operation {\n+class VM_SerialGCCollect: public VM_GC_Collect_Operation {\n@@ -54,1 +54,1 @@\n-    : VM_GC_Operation(gc_count_before, gc_cause, full_gc_count_before, full) {}\n+    : VM_GC_Collect_Operation(gc_count_before, gc_cause, full_gc_count_before, full) {}\n","filename":"src\/hotspot\/share\/gc\/serial\/serialVMOperations.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-bool VM_GC_Sync_Operation::doit_prologue() {\n+bool VM_Heap_Sync_Operation::doit_prologue() {\n@@ -56,1 +56,1 @@\n-void VM_GC_Sync_Operation::doit_epilogue() {\n+void VM_Heap_Sync_Operation::doit_epilogue() {\n@@ -118,1 +118,1 @@\n-  VM_GC_Sync_Operation::doit_prologue();\n+  VM_Heap_Sync_Operation::doit_prologue();\n@@ -142,1 +142,1 @@\n-  VM_GC_Sync_Operation::doit_epilogue();\n+  VM_Heap_Sync_Operation::doit_epilogue();\n@@ -209,1 +209,1 @@\n-    : VM_GC_Operation(gc_count_before, gc_cause, full_gc_count_before, true),\n+    : VM_GC_Collect_Operation(gc_count_before, gc_cause, full_gc_count_before, true),\n@@ -272,1 +272,1 @@\n-    : VM_GC_Operation(gc_count_before, cause), _word_size(word_size), _result(nullptr) {\n+    : VM_GC_Collect_Operation(gc_count_before, cause), _word_size(word_size), _result(nullptr) {\n","filename":"src\/hotspot\/share\/gc\/shared\/gcVMOperations.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-\/\/    VM_GC_Sync_Operation\n+\/\/    VM_Heap_Sync_Operation\n@@ -42,7 +42,9 @@\n-\/\/        VM_GC_HeapInspection\n-\/\/        VM_PopulateDynamicDumpSharedSpace\n-\/\/        VM_SerialGCCollect\n-\/\/        VM_ParallelGCCollect\n-\/\/        VM_CollectForAllocation\n-\/\/          VM_SerialCollectForAllocation\n-\/\/          VM_ParallelCollectForAllocation\n+\/\/        VM_GC_Collect_Operation\n+\/\/          VM_SerialGCCollect\n+\/\/          VM_ParallelGCCollect\n+\/\/          VM_CollectForAllocation\n+\/\/            VM_SerialCollectForAllocation\n+\/\/            VM_ParallelCollectForAllocation\n+\/\/          VM_CollectForMetadataAllocation\n+\/\/        VM_GC_Service_Operation\n+\/\/          VM_GC_HeapInspection\n@@ -50,0 +52,1 @@\n+\/\/      VM_PopulateDynamicDumpSharedSpace\n@@ -52,1 +55,1 @@\n-\/\/  VM_GC_Sync_Operation\n+\/\/  VM_Heap_Sync_Operation\n@@ -87,1 +90,1 @@\n-class VM_GC_Sync_Operation : public VM_Operation {\n+class VM_Heap_Sync_Operation : public VM_Operation {\n@@ -90,1 +93,1 @@\n-  VM_GC_Sync_Operation() : VM_Operation() { }\n+  VM_Heap_Sync_Operation() : VM_Operation() { }\n@@ -98,1 +101,1 @@\n-class VM_Verify : public VM_GC_Sync_Operation {\n+class VM_Verify : public VM_Heap_Sync_Operation {\n@@ -104,1 +107,1 @@\n-class VM_GC_Operation: public VM_GC_Sync_Operation {\n+class VM_GC_Operation: public VM_Heap_Sync_Operation {\n@@ -118,1 +121,1 @@\n-                  bool full = false) : VM_GC_Sync_Operation() {\n+                  bool full = false) : VM_Heap_Sync_Operation() {\n@@ -152,0 +155,8 @@\n+class VM_GC_Service_Operation : public VM_GC_Operation {\n+public:\n+  VM_GC_Service_Operation(uint gc_count_before,\n+                          GCCause::Cause _cause,\n+                          uint full_gc_count_before = 0,\n+                          bool full = false) :\n+    VM_GC_Operation(gc_count_before, _cause, full_gc_count_before, full) {}\n+};\n@@ -153,1 +164,13 @@\n-class VM_GC_HeapInspection: public VM_GC_Operation {\n+class VM_GC_Collect_Operation : public VM_GC_Operation {\n+public:\n+  VM_GC_Collect_Operation(uint gc_count_before,\n+                          GCCause::Cause _cause,\n+                          uint full_gc_count_before = 0,\n+                          bool full = false) :\n+    VM_GC_Operation(gc_count_before, _cause, full_gc_count_before, full) {}\n+\n+  bool is_gc_operation() const { return true; }\n+};\n+\n+\n+class VM_GC_HeapInspection : public VM_GC_Service_Operation {\n@@ -158,0 +181,1 @@\n+\n@@ -161,5 +185,5 @@\n-    VM_GC_Operation(0 \/* total collections,      dummy, ignored *\/,\n-                    GCCause::_heap_inspection \/* GC Cause *\/,\n-                    0 \/* total full collections, dummy, ignored *\/,\n-                    request_full_gc), _out(out), _full_gc(request_full_gc),\n-                    _parallel_thread_num(parallel_thread_num) {}\n+    VM_GC_Service_Operation(0 \/* total collections,      dummy, ignored *\/,\n+                            GCCause::_heap_inspection \/* GC Cause *\/,\n+                            0 \/* total full collections, dummy, ignored *\/,\n+                            request_full_gc), _out(out), _full_gc(request_full_gc),\n+                            _parallel_thread_num(parallel_thread_num) {}\n@@ -172,0 +196,1 @@\n+\n@@ -176,1 +201,1 @@\n-class VM_CollectForAllocation : public VM_GC_Operation {\n+class VM_CollectForAllocation : public VM_GC_Collect_Operation {\n@@ -189,1 +214,1 @@\n-class VM_CollectForMetadataAllocation: public VM_GC_Operation {\n+class VM_CollectForMetadataAllocation: public VM_GC_Collect_Operation {\n","filename":"src\/hotspot\/share\/gc\/shared\/gcVMOperations.hpp","additions":47,"deletions":22,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -58,0 +58,2 @@\n+\n+  bool is_gc_operation() const override { return true; };\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVMOperations.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -445,0 +445,4 @@\n+  virtual bool is_gc_operation() const {\n+    return true;\n+  }\n+\n@@ -1311,0 +1315,4 @@\n+  virtual bool is_gc_operation() const {\n+    return true;\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -581,0 +581,4 @@\n+\n+  virtual bool is_gc_operation() const {\n+    return true;\n+  }\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -163,0 +163,4 @@\n+  \/\/ VMOp_Type may belong to a category of operation\n+  \/\/ Override is_XX_operation() appropriately in subclasses\n+  virtual bool is_gc_operation() const { return false; }\n+\n","filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}