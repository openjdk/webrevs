{"files":[{"patch":"@@ -70,1 +70,0 @@\n-#include \"utilities\/debug.hpp\"\n@@ -73,0 +72,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -102,1 +102,1 @@\n-  #define MAP_ANON_64K  0x400\n+  #define MAP_ANON_64K 0x400\n@@ -2748,0 +2748,4 @@\n+bool os::Aix::supports_64K_mmap_pages() {\n+  return g_multipage_support.can_use_64K_mmap_pages;\n+}\n+\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+  static bool supports_64K_mmap_pages();\n","filename":"src\/hotspot\/os\/aix\/os_aix.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1927,1 +1927,1 @@\n-    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : 256*M)\n+    AIX_ONLY(os::vm_page_size() == 4*K ? 4*K : os::Aix::supports_64K_mmap_pages() ? 64*K : 256*M)\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,7 +32,0 @@\n-#include <sys\/mman.h>\n-\/\/ sys\/mman.h defines MAP_ANON_64K beginning with AIX7.3 TL1\n-#ifndef MAP_ANON_64K\n-  #define MAP_ANON_64K  0x400\n-#else\n-  STATIC_ASSERT(MAP_ANON_64K == 0x400);\n-#endif\n@@ -44,7 +37,1 @@\n-  \/\/ Can we use mmap with 64K pages? (Should be available with AIX 7.3 TL1)\n-  void* p = mmap(NULL, 1000000, PROT_READ | PROT_WRITE, MAP_ANON_64K | MAP_ANONYMOUS | MAP_SHARED, -1, 0);\n-  guarantee(p != (void*) -1, \"mmap returned invalid ptr.\"); \/\/ Should always work.\n-  bool can_use_64K_mmap_pages = (64*K == os::Aix::query_pagesize(p));\n-  munmap(p, 1000000);\n-\n-  if (os::vm_page_size() != 4*K && !can_use_64K_mmap_pages) {\n+  if (os::vm_page_size() != 4*K && !os::Aix::supports_64K_mmap_pages()) {\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_aix.cpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"}]}