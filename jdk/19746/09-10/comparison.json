{"files":[{"patch":"@@ -218,1 +218,1 @@\n-  \/\/ Storing region crossing non-null, is card already dirty?\n+  \/\/ Storing region crossing non-null, is card young?\n@@ -279,3 +279,0 @@\n-#undef __\n-#define __ masm->\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -304,1 +304,1 @@\n-  \/\/ Storing region crossing non-null, is card already dirty?\n+  \/\/ Storing region crossing non-null, is card young?\n@@ -364,3 +364,0 @@\n-#undef __\n-#define __ masm->\n-\n","filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -160,2 +160,2 @@\n- * same region as the reference, when the null is being written, or if the card\n- * is already marked as dirty by an earlier write.\n+ * same region as the reference, when null is being written, or if the card is\n+ * already marked as dirty by an earlier write.\n@@ -166,1 +166,2 @@\n- * and the store.\n+ * and the store. This can be seen as a compile-time version of the\n+ * above-mentioned Young Generation filter.\n@@ -229,1 +230,1 @@\n-void refine_barrier_by_new_val_type(Node* n) {\n+static void refine_barrier_by_new_val_type(const Node* n) {\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -127,0 +127,19 @@\n+    @Test\n+    @IR(applyIf = {\"UseCompressedOops\", \"false\"},\n+        counts = {IRNode.G1_STORE_P_WITH_BARRIER_FLAG, PRE_ONLY, \"1\"},\n+        phase = CompilePhase.FINAL_CODE)\n+    @IR(applyIf = {\"UseCompressedOops\", \"true\"},\n+        counts = {IRNode.G1_STORE_N_WITH_BARRIER_FLAG, PRE_ONLY, \"1\"},\n+        phase = CompilePhase.FINAL_CODE)\n+    public static void testStoreObfuscatedNull(Outer o, Object o1) {\n+        Object o2 = o1;\n+        for (int i = 0; i < 4; i++) {\n+            if ((i % 2) == 0) {\n+                o2 = null;\n+            }\n+        }\n+        \/\/ o2 is null here, but this is only known to C2 after applying some\n+        \/\/ optimizations (loop unrolling, IGVN).\n+        o.f = o2;\n+    }\n+\n@@ -168,0 +187,1 @@\n+                 \"testStoreObfuscatedNull\",\n@@ -183,0 +203,6 @@\n+        {\n+            Outer o = new Outer();\n+            Object o1 = new Object();\n+            testStoreObfuscatedNull(o, o1);\n+            Asserts.assertNull(o.f);\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestG1BarrierGeneration.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"}]}