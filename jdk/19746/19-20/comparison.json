{"files":[{"patch":"@@ -239,1 +239,0 @@\n-  assert(newval_bottom->isa_ptr() || newval_bottom->isa_narrowoop(), \"newval should be an OOP\");\n@@ -242,0 +241,11 @@\n+  if (!newval_bottom->isa_oopptr() &&\n+      !newval_bottom->isa_narrowoop() &&\n+      newval_type != TypePtr::Null) {\n+    \/\/ newval is neither an OOP nor null, so there is no barrier to refine.\n+    assert(barrier_data == 0, \"non-OOP stores should have no barrier data\");\n+    return;\n+  }\n+  if (barrier_data == 0) {\n+    \/\/ No barrier to refine.\n+    return;\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2841,4 +2841,8 @@\n-  return n != nullptr &&\n-    m != nullptr &&\n-    n->Opcode() == Op_StoreN &&\n-    m->is_EncodeP();\n+  if (n == nullptr ||\n+      m == nullptr ||\n+      n->Opcode() != Op_StoreN ||\n+      !m->is_EncodeP()) {\n+    return false;\n+  }\n+  assert(m == n->in(MemNode::ValueIn), \"m should be input to n\");\n+  return true;\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -229,0 +229,1 @@\n+                 \"testStoreNullOnNewObject\",\n","filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestG1BarrierGeneration.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}