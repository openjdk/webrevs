[{"commit":{"message":"Assert that unneeded stub tmp registers are not initialized in x64 and aarch64 platforms"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.cpp"}],"sha":"13b93bd94fd0171413c1822a104342f83165acdc"},{"commit":{"message":"Set tmp registers to noreg by default in G1PreBarrierStubC2::initialize_registers, for consistency"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.hpp"}],"sha":"f66228d81fb73aad863e3ded0c510a0c02634700"},{"commit":{"message":"Merge remote-tracking branch 'snazarkin\/arm32-JDK-8334060-g1-late-barrier-expansion' into JDK-8334060-g1-late-barrier-expansion"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"}],"sha":"3957c03fe5c5809e6f010a7b6e7f30dd8223534e"},{"commit":{"message":"Restore some asserts"},"files":[],"sha":"3767ec976db7fab84dd6441dadde8681c05729b6"},{"commit":{"message":"Default values for tmp regs of G1PostBarrierStubC2"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.hpp"}],"sha":"394cb5c58b298d5424b28df0e4cbd6dfa9665711"},{"commit":{"message":" 8334060: [arm32] Implementation of Late Barrier Expansion for G1"},"files":[{"filename":"src\/hotspot\/cpu\/arm\/arm.ad"},{"filename":"src\/hotspot\/cpu\/arm\/assembler_arm_32.hpp"},{"filename":"src\/hotspot\/cpu\/arm\/gc\/g1\/g1BarrierSetAssembler_arm.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/gc\/g1\/g1BarrierSetAssembler_arm.hpp"},{"filename":"src\/hotspot\/cpu\/arm\/gc\/g1\/g1_arm.ad"},{"filename":"src\/hotspot\/cpu\/arm\/gc\/shared\/barrierSetAssembler_arm.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/register_arm.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.hpp"}],"sha":"302b035fb0a7e83001428d323b6bb453c5e8bb04"},{"commit":{"message":"8330685: [arm32] share barrier spilling logic"},"files":[{"filename":"src\/hotspot\/cpu\/arm\/assembler_arm_32.hpp"},{"filename":"src\/hotspot\/cpu\/arm\/gc\/shared\/barrierSetAssembler_arm.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/gc\/shared\/barrierSetAssembler_arm.hpp"},{"filename":"src\/hotspot\/cpu\/arm\/register_arm.hpp"}],"sha":"b6f62a179cc1dbb345b9d2cd8704e3281b8920c8"},{"commit":{"message":"Discard memory accesses with barrier data as implicit null check candidates"},"files":[{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"}],"sha":"71a51bfc6cd3f20df4b7da49d712504be7d534b9"},{"commit":{"message":"Add missing IR test to test run"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestG1BarrierGeneration.java"}],"sha":"653f9acf4c9becfad9f0d484ce4da862dfd4649f"},{"commit":{"message":"Skip barrier refining for non-OOP stores and stores without barrier data"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"}],"sha":"10bc0d2c8ac32e659f87956888079b960e597fdc"},{"commit":{"message":"Assert that m is input to n in Matcher::is_encode_and_store_pattern"},"files":[{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"}],"sha":"a480d70b0008b95b5e4873f0249cd2b66f0a8ac8"},{"commit":{"message":"Fix a few style issues"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.hpp"}],"sha":"141020e6fd5726df12d3a9adcccc24de0dffa581"},{"commit":{"message":"Fix indentation in generate_post_barrier_fast_path\n\nCo-authored-by: Thomas Schatzl <59967451+tschatzl@users.noreply.github.com>"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp"}],"sha":"0979e41ecc835faaec0bb889d19b6c129be3112e"},{"commit":{"message":"Merge remote-tracking branch 'feilongjiang\/JEP-475-RISC-V' into JDK-8334060-g1-late-barrier-expansion"},"files":[],"sha":"9414591736a0fb3430361ae50c176420bbad3067"},{"commit":{"message":"riscv port for JEP 475"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1BarrierSetAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1BarrierSetAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1_riscv.ad"},{"filename":"src\/hotspot\/cpu\/riscv\/riscv.ad"}],"sha":"1c012cfd4a1f4d6e39d6f4798281423f884e97a6"},{"commit":{"message":"s390 port : late barrier expansion"},"files":[{"filename":"src\/hotspot\/cpu\/s390\/gc\/g1\/g1BarrierSetAssembler_s390.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/gc\/g1\/g1BarrierSetAssembler_s390.hpp"},{"filename":"src\/hotspot\/cpu\/s390\/gc\/g1\/g1_s390.ad"},{"filename":"src\/hotspot\/cpu\/s390\/gc\/shared\/barrierSetAssembler_s390.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/gc\/shared\/barrierSetAssembler_s390.hpp"},{"filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/register_s390.hpp"},{"filename":"src\/hotspot\/cpu\/s390\/s390.ad"}],"sha":"6663433c4aa17925f699eaa8995cdc0cd78c0034"},{"commit":{"message":"Merge remote-tracking branch 'TheRealMDoerr\/8334111_PPC64_G1_Barriers_V2' into JDK-8334060-g1-late-barrier-expansion"},"files":[],"sha":"22e07ef03a38629d6864f212431ca021430ae622"},{"commit":{"message":"Cleanup g1_ppc.ad"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/gc\/g1\/g1_ppc.ad"}],"sha":"ad662a256034a09156b1b43673d2640a119740b2"},{"commit":{"message":"Remove unnecessary g1LoadXVolatile instructions in aarch64"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1_aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1_aarch64.m4"}],"sha":"9821e795a3a9ebc54a5146e439976f0f864279f8"},{"commit":{"message":"8334111: Implementation of Late Barrier Expansion for G1: ppc port"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/gc\/g1\/g1BarrierSetAssembler_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/gc\/g1\/g1BarrierSetAssembler_ppc.hpp"},{"filename":"src\/hotspot\/cpu\/ppc\/gc\/g1\/g1_ppc.ad"},{"filename":"src\/hotspot\/cpu\/ppc\/ppc.ad"},{"filename":"src\/hotspot\/cpu\/ppc\/register_ppc.hpp"}],"sha":"ed9c0232f53a15d768804348e1d8a111fed9a19e"},{"commit":{"message":"Increase test coverage of new-object stores with different type information"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestG1BarrierGeneration.java"}],"sha":"1ea2862f5a1c9a54ac364d57dd3001427bc3db1c"},{"commit":{"message":"Refactor the two post-barrier removal cases into a single expression"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"}],"sha":"6f4027bf71262a5f0f8e341177c2f11265390777"},{"commit":{"message":"Remove unnecessary early null-based post-barrier elision"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.hpp"}],"sha":"deac05d7bafdc3a8ca20f06a5d818e31d5ce716e"},{"commit":{"message":"Make store capturability test G1-specific and more precise"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.hpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestG1BarrierGeneration.java"}],"sha":"6b99549798cbf3203b2920cdca7064e497738cd3"},{"commit":{"message":"Merge jdk-24+13"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"4ee450adaa0118a47c4a6be710454270fb8170fe"},{"commit":{"message":"Add test to motivate compile-time null checks in 'refine_barrier_by_new_val_type'"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestG1BarrierGeneration.java"}],"sha":"57adcfb04b163ba6744389d6258efe4b2ace534d"},{"commit":{"message":"Remark relation between compiler optimization and barrier filter"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"}],"sha":"72a04c4e8046256ee7e811d66934d5d9e24f4c7c"},{"commit":{"message":"Make 'refine_barrier_by_new_val_type' static and its input argument 'const'"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"}],"sha":"29d8a89a9a7fd0c1717330609c6d7cb36b0ff174"},{"commit":{"message":"Replace 'the null' with 'null' in comment"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"}],"sha":"d1a2349068194ee598cec2b6afe7aa972781b491"},{"commit":{"message":"Remove redundant redefinitions of '__'"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.cpp"}],"sha":"2dc688baf2a8f446c7579fafce7eab3a953e623a"},{"commit":{"message":"Replace 'already dirty' with 'young' in post-barrier fast path comment"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.cpp"}],"sha":"70c2771818834a74a12f8a61de3c77bb69e3e531"},{"commit":{"message":"Rename g1XChgX to g1GetAndSetX for consistency with Ideal operation names"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1_aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1_aarch64.m4"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1_x86_64.ad"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"daf38d3f7ab6e9bba485d7b3da0259a1ae627f83"},{"commit":{"message":"Pass oldval to the pre-barrier in g1CompareAndExchange\/SwapP"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1_aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1_aarch64.m4"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1_x86_64.ad"}],"sha":"92112802ec5cc1d99ec07481d24659ad0c8179bb"},{"commit":{"message":"Assert that no implicit null checks are generated for memory accesses with barriers"},"files":[{"filename":"src\/hotspot\/share\/opto\/output.cpp"}],"sha":"554de7791c87fd4ff182c3479213854d41d88de4"},{"commit":{"message":"Rename 'HeapRegionBounds' to 'G1HeapRegionBounds'"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1Arguments.cpp"}],"sha":"88d28b9f32ca0678536a46caef2b2362e784a903"},{"commit":{"message":"Merge jdk-24+10"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1Arguments.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.hpp"},{"filename":"src\/hotspot\/share\/opto\/buildOopMap.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestVolatiles.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"d87e4a6f2180573f25641db7f415140eead1f741"},{"commit":{"message":"Further motivate the choice of internal store address materialization in x64"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1_x86_64.ad"}],"sha":"d21104ca8ff1eef88a9d87fb78dda3009414b5b8"},{"commit":{"message":"Give barrier generation helper functions a more consistent name"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1_aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1_aarch64.m4"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1_x86_64.ad"}],"sha":"1834bf410f683b7263de10b1e018580c31a61339"},{"commit":{"message":"Also include HOTSPOT_TARGET_CPU_ARCH-based G1 ADL source file"},"files":[{"filename":"make\/hotspot\/gensrc\/GensrcAdlc.gmk"}],"sha":"47079ea1f2cd329736cfbf6db0030923c4407cda"},{"commit":{"message":"Flatten barrier assembly generation code by removing helpers individual barrier tests and operations"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.cpp"}],"sha":"20ef68c81ee8d1ceb985224b3e4770d2cd6ba63d"},{"commit":{"message":"Build barrier data in G1BarrierSetC2::get_store_barrier() by adding, rather than removing, barrier tags"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"}],"sha":"d722d4c7c1534794aaa38d54ecf7a4c12b158e84"},{"commit":{"message":"Implement JEP 475\n\nCo-authored-by: Erik Österlund, Siyao Liu, and Kim Barrett"},"files":[{"filename":"make\/hotspot\/gensrc\/GensrcAdlc.gmk"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/cas.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1_aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1_aarch64.m4"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1_x86_64.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1Arguments.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1BarrierSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1BarrierSetRuntime.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1BarrierSetRuntime.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.cpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/c2\/cardTableBarrierSetC2.cpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/c2\/cardTableBarrierSetC2.hpp"},{"filename":"src\/hotspot\/share\/opto\/buildOopMap.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.hpp"},{"filename":"src\/hotspot\/share\/opto\/memnode.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals_shared.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestVolatiles.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/scalarReplacement\/AllocationMergesTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestG1BarrierGeneration.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/runtime\/safepoints\/TestMachTempsAcrossSafepoints.java"},{"filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/src\/sun\/hotspot\/tools\/ctw\/CtwRunner.java"},{"filename":"test\/jdk\/java\/lang\/invoke\/BigArityTest.java"}],"sha":"937019ad09cf8d966e1fe556f6b861ec4731987b"}]