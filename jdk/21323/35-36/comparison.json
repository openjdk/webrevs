{"files":[{"patch":"@@ -5270,2 +5270,2 @@\n-        \/\/ maxPowsOf5 >= log5(intVal)\n-        long maxPowsOf5 = (long) Math.ceil(intVal.bitLength() * LOG_5_OF_2);\n+        \/\/ maxPowsOf5 >= floor(log5(intVal)) >= max{n : (intVal % 5^n) == 0}\n+        long maxPowsOf5 = Math.round(intVal.bitLength() * LOG_5_OF_2);\n@@ -5275,0 +5275,3 @@\n+        \/\/ Remove 5^(2^i) from the factors of intVal, until 5^remainingZeros < 5^(2^i)\n+        \/\/ (i.e., there are too few powers of five left to remove).\n+        \/\/ Note that if intVal % 5^(2^i) != 0, the cicle's condition will become false.\n@@ -5288,0 +5291,3 @@\n+        \/\/ bitLength(remainingZeros) == max{n : 5^(2^(n - 1)) <= 5^remainingZeros}\n+        \/\/ so, the invariant i == max{j : 5^(2^j) <= 5^remainingZeros}\n+        \/\/ will be true at the beginning of each iteration.\n@@ -5299,1 +5305,1 @@\n-                if (remainingZeros < exp >> 1)\n+                if (remainingZeros < exp >> 1) \/\/ else i == bitLength(remainingZeros) already\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"}]}