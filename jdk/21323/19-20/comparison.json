{"files":[{"patch":"@@ -5221,4 +5221,1 @@\n-    \/\/ floor(log2(log5(2^Integer.MAX_VALUE))) == 29\n-    private static final BigInteger[] FIVE_TO_2_TO = new BigInteger[30];\n-\n-    private static int FIVE_TO_2_TO_LEN = 1;\n+    private static final BigInteger[] FIVE_TO_2_TO = new BigInteger[20];\n@@ -5227,1 +5224,3 @@\n-        FIVE_TO_2_TO[0] = BigInteger.valueOf(5L);\n+        BigInteger pow = FIVE_TO_2_TO[0] = BigInteger.valueOf(5L);\n+        for (int i = 1; i < FIVE_TO_2_TO.length; i++)\n+            FIVE_TO_2_TO[i] = pow = pow.multiply(pow);\n@@ -5231,1 +5230,1 @@\n-     * @param n an integer such that {@code 0 <= n < FIVE_TO_2_TO.length}\n+     * @param n a non-negative integer\n@@ -5235,11 +5234,6 @@\n-        synchronized (BigDecimal.class) {\n-            int len = FIVE_TO_2_TO_LEN;\n-            if (n >= len) {\n-                BigInteger pow = FIVE_TO_2_TO[len - 1];\n-                for (; len <= n; len++)\n-                    FIVE_TO_2_TO[len] = pow = pow.multiply(pow);\n-\n-                FIVE_TO_2_TO_LEN = len;\n-            }\n-            return FIVE_TO_2_TO[n];\n-        }\n+        int i = Math.min(n, FIVE_TO_2_TO.length - 1);\n+        BigInteger pow = FIVE_TO_2_TO[i];\n+        for (; i < n; i++)\n+            pow = pow.multiply(pow);\n+\n+        return pow;\n@@ -5271,2 +5265,1 @@\n-        boolean zeroR = true;\n-        for (int i = 0; zeroR && remainingZeros >= 1L << i; i++) {\n+        for (int i = 0; remainingZeros >= 1L << i; i++) {\n@@ -5275,2 +5268,1 @@\n-            if (qr[1].signum() != 0) {\n-                zeroR = false; \/\/ non-0 remainder\n+            if (qr[1].signum() != 0) { \/\/ non-0 remainder\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigDecimal.java","additions":13,"deletions":21,"binary":false,"changes":34,"status":"modified"}]}