{"files":[{"patch":"@@ -100,1 +100,2 @@\n-     * specified name. {@linkplain java.nio.file##links Symbolic links}\n+     * specified name. If the file exists, it is truncated, otherwise a\n+     * new file is created. {@linkplain java.nio.file##links Symbolic links}\n@@ -102,1 +103,0 @@\n-     * If the file or link target exists, then it will be truncated.\n@@ -132,1 +132,4 @@\n-     * name.  {@linkplain java.nio.file##links Symbolic links}\n+     * name. If the file exists, it is truncated unless the second\n+     * argument is {@code true}, in which case bytes will be written to the\n+     * end of the file rather than the beginning. If the file does not exist,\n+     * it is created. {@linkplain java.nio.file##links Symbolic links}\n@@ -134,4 +137,0 @@\n-     * If the second argument is {@code true}, then\n-     * bytes will be written to the end of the file or link target rather than\n-     * the beginning; if {@code false}, the file or link target will be\n-     * truncated if it exists.\n@@ -169,1 +168,2 @@\n-     * {@linkplain java.nio.file##links Symbolic links}\n+     * If the file exists, it is truncated, otherwise a\n+     * new file is created. {@linkplain java.nio.file##links Symbolic links}\n@@ -171,3 +171,2 @@\n-     * If the file or link target exists, then it will be truncated.\n-     * A new {@code FileDescriptor} object is created to represent this\n-     * file connection.\n+     * A new {@code FileDescriptor} object is\n+     * created to represent this file connection.\n@@ -201,1 +200,4 @@\n-     * {@linkplain java.nio.file##links Symbolic links}\n+     * If the file exists, it is truncated unless the second\n+     * argument is {@code true}, in which case bytes will be written to the\n+     * end of the file rather than the beginning. If the file does not exist,\n+     * it is created. {@linkplain java.nio.file##links Symbolic links}\n@@ -203,5 +205,2 @@\n-     * If the second argument is\n-     * {@code true}, then bytes will be written to the end of the file\n-     * rather than the beginning; if {@code false}, the file or link target\n-     * will be truncated if it exists. A new {@code FileDescriptor} object is\n-     * created to represent this file connection.\n+     * A new {@code FileDescriptor} object is created to represent this\n+     * file connection.\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileOutputStream.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -104,1 +104,3 @@\n-     * to write to, a file with the specified pathname.\n+     * to write to, a file with the specified pathname. If the file exists\n+     * it is opened; if it does not exist and write mode is specified, a\n+     * new file is created.\n@@ -107,2 +109,0 @@\n-     * If the access mode specifies writing and the file or link target exists,\n-     * then it will be truncated.\n@@ -153,2 +153,4 @@\n-     * Creates a random access file stream to read from, and optionally to\n-     * write to, the file specified by the {@link File} argument.\n+     * Creates a random access file stream to read from, and optionally\n+     * to write to, the file specified by the {@link File} argument. If\n+     * the file exists it is opened; if it does not exist and write mode\n+     * is specified, a new file is created.\n@@ -157,3 +159,2 @@\n-     * If the access mode specifies writing and the file or link target exists,\n-     * then it will be truncated. A new {@link\n-     * FileDescriptor} object is created to represent this file connection.\n+     * A new {@link FileDescriptor} object is created to represent the\n+     * connection to the file.\n","filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}