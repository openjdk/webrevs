{"files":[{"patch":"@@ -82,0 +82,4 @@\n+ * <p> Unless otherwise noted, {@linkplain java.nio.file##links symbolic links}\n+ * are automatically redirected to the <i>target<\/i> of the link, whether they\n+ * are provided by a pathname string or via a {@code File} object.\n+ *\n@@ -907,2 +911,10 @@\n-     * a period character ({@code '.'}).  On Microsoft Windows systems, a file is\n-     * considered to be hidden if it has been marked as such in the filesystem.\n+     * a period character ({@code '.'}).  On Microsoft Windows systems, a file\n+     * is considered to be hidden if it has been marked as such in the\n+     * filesystem.\n+     *\n+     *\n+     * @implNote\n+     * If the file is a symbolic link, then on UNIX system it is considered to\n+     * be hidden if the name of the link itself, not that of its target, begins\n+     * with a period character.  On Windows systems, a symbolic link is\n+     * considered hidden if its target is so marked in the filesystem.\n@@ -1051,1 +1063,2 @@\n-     * order to be deleted.\n+     * order to be deleted.  If this pathname denotes a symbolic link, then the\n+     * link itself, not its target, will be deleted.\n@@ -1424,1 +1437,3 @@\n-     * Renames the file denoted by this abstract pathname.\n+     * Renames the file denoted by this abstract pathname.  If this pathname\n+     * denotes a symbolic link, then the link itself, not its target, will be\n+     * renamed.\n","filename":"src\/java.base\/share\/classes\/java\/io\/File.java","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -88,1 +88,3 @@\n-     * in the file system.  A new {@code FileDescriptor}\n+     * in the file system.  {@linkplain java.nio.file##links Symbolic links}\n+     * are automatically redirected to the <i>target<\/i> of the link.\n+     * A new {@code FileDescriptor}\n@@ -120,0 +122,2 @@\n+     * {@linkplain java.nio.file##links Symbolic links}\n+     * are automatically redirected to the <i>target<\/i> of the link.\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileInputStream.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -100,1 +100,4 @@\n-     * specified name. A new {@code FileDescriptor} object is\n+     * specified name. {@linkplain java.nio.file##links Symbolic links}\n+     * are automatically redirected to the <i>target<\/i> of the link.\n+     * If the file or link target exists, then it will be truncated.\n+     * A new {@code FileDescriptor} object is\n@@ -129,2 +132,6 @@\n-     * name.  If the second argument is {@code true}, then\n-     * bytes will be written to the end of the file rather than the beginning.\n+     * name.  {@linkplain java.nio.file##links Symbolic links}\n+     * are automatically redirected to the <i>target<\/i> of the link.\n+     * If the second argument is {@code true}, then\n+     * bytes will be written to the end of the file or link target rather than\n+     * the beginning; if {@code false}, the file or link target will be\n+     * truncated if it exists.\n@@ -161,2 +168,5 @@\n-     * the specified {@code File} object. A new\n-     * {@code FileDescriptor} object is created to represent this\n+     * the specified {@code File} object.\n+     * {@linkplain java.nio.file##links Symbolic links}\n+     * are automatically redirected to the <i>target<\/i> of the link.\n+     * If the file or link target exists, then it will be truncated.\n+     * A new {@code FileDescriptor} object is created to represent this\n@@ -190,1 +200,4 @@\n-     * the specified {@code File} object. If the second argument is\n+     * the specified {@code File} object.\n+     * {@linkplain java.nio.file##links Symbolic links}\n+     * are automatically redirected to the <i>target<\/i> of the link.\n+     * If the second argument is\n@@ -192,1 +205,2 @@\n-     * rather than the beginning. A new {@code FileDescriptor} object is\n+     * rather than the beginning; if {@code false}, the file or link target\n+     * will be truncated if it exists. A new {@code FileDescriptor} object is\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileOutputStream.java","additions":21,"deletions":7,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -104,2 +104,6 @@\n-     * to write to, a file with the specified pathname. A new\n-     * {@link FileDescriptor} object is created to represent the\n+     * to write to, a file with the specified pathname.\n+     * {@linkplain java.nio.file##links Symbolic links}\n+     * are automatically redirected to the <i>target<\/i> of the link.\n+     * If the access mode specifies writing and the file or link target exists,\n+     * then it will be truncated.\n+     * A new {@link FileDescriptor} object is created to represent the\n@@ -150,1 +154,5 @@\n-     * write to, the file specified by the {@link File} argument.  A new {@link\n+     * write to, the file specified by the {@link File} argument.\n+     * {@linkplain java.nio.file##links Symbolic links}\n+     * are automatically redirected to the <i>target<\/i> of the link.\n+     * If the access mode specifies writing and the file or link target exists,\n+     * then it will be truncated. A new {@link\n","filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}