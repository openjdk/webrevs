{"files":[{"patch":"@@ -1,56 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.code;\n-\n-import java.util.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-public class AdapterBlob extends RuntimeBlob {\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static void initialize(TypeDataBase db) {\n-    \/\/ Type type = db.lookupType(\"AdapterBlob\");\n-\n-    \/\/ \/\/ FIXME: add any needed fields\n-  }\n-\n-  public AdapterBlob(Address addr) {\n-    super(addr);\n-  }\n-\n-  public String getName() {\n-    return \"AdapterBlob: \" + super.getName();\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/AdapterBlob.java","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.code;\n-\n-import java.util.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-public class BufferBlob extends RuntimeBlob {\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static void initialize(TypeDataBase db) {\n-    Type type = db.lookupType(\"BufferBlob\");\n-\n-    \/\/ FIXME: add any needed fields\n-  }\n-\n-  public BufferBlob(Address addr) {\n-    super(addr);\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/BufferBlob.java","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"},{"patch":"@@ -55,0 +55,1 @@\n+  private static CIntegerField callerMustGCArgumentsField;\n@@ -56,1 +57,1 @@\n-  \/\/ Kinds of Codeblob\n+  \/\/ Kinds of CodeBlobs that we need to know about.\n@@ -58,4 +59,0 @@\n-  private static int BufferKind;\n-  private static int AdapterKind;\n-  private static int VtableKind;\n-  private static int MHAdapterKind;\n@@ -63,4 +60,0 @@\n-  private static int DeoptimizationKind;\n-  private static int ExceptionKind;\n-  private static int SafepointKind;\n-  private static int UncommonTrapKind;\n@@ -68,1 +61,0 @@\n-  private static int NumberOfKinds;\n@@ -92,0 +84,1 @@\n+    callerMustGCArgumentsField = type.getCIntegerField(\"_caller_must_gc_arguments\");\n@@ -99,4 +92,0 @@\n-    BufferKind         = db.lookupIntConstant(\"CodeBlobKind::Buffer\").intValue();\n-    AdapterKind        = db.lookupIntConstant(\"CodeBlobKind::Adapter\").intValue();\n-    VtableKind         = db.lookupIntConstant(\"CodeBlobKind::Vtable\").intValue();\n-    MHAdapterKind      = db.lookupIntConstant(\"CodeBlobKind::MHAdapter\").intValue();\n@@ -104,2 +93,0 @@\n-    DeoptimizationKind = db.lookupIntConstant(\"CodeBlobKind::Deoptimization\").intValue();\n-    SafepointKind      = db.lookupIntConstant(\"CodeBlobKind::Safepoint\").intValue();\n@@ -107,24 +94,0 @@\n-    NumberOfKinds      = db.lookupIntConstant(\"CodeBlobKind::Number_Of_Kinds\").intValue();\n-    if (VM.getVM().isServerCompiler()) {\n-        ExceptionKind    = db.lookupIntConstant(\"CodeBlobKind::Exception\").intValue();\n-        UncommonTrapKind = db.lookupIntConstant(\"CodeBlobKind::UncommonTrap\").intValue();\n-    } else {\n-        \/\/ Set invalid value to not match default.\n-        ExceptionKind    = NumberOfKinds + 1;\n-        UncommonTrapKind = NumberOfKinds + 1;\n-    }\n-\n-    wrapperClasses                     = new Class[NumberOfKinds];\n-    wrapperClasses[NMethodKind]        = NMethod.class;\n-    wrapperClasses[BufferKind]         = BufferBlob.class;\n-    wrapperClasses[AdapterKind]        = AdapterBlob.class;\n-    wrapperClasses[VtableKind]         = VtableBlob.class;\n-    wrapperClasses[MHAdapterKind]      = MethodHandlesAdapterBlob.class;\n-    wrapperClasses[RuntimeStubKind]    = RuntimeStub.class;\n-    wrapperClasses[DeoptimizationKind] = DeoptimizationBlob.class;\n-    wrapperClasses[SafepointKind]      = SafepointBlob.class;\n-    wrapperClasses[UpcallKind]         = UpcallStub.class;\n-    if (VM.getVM().isServerCompiler()) {\n-      wrapperClasses[ExceptionKind]    = ExceptionBlob.class;\n-      wrapperClasses[UncommonTrapKind] = UncommonTrapBlob.class;\n-    }\n@@ -143,1 +106,10 @@\n-      return wrapperClasses[cb.getKind()];\n+      int kind = cb.getKind();\n+      if (kind == NMethodKind) {\n+          return NMethod.class;\n+      } else if (kind == UpcallKind) {\n+          return UpcallStub.class;\n+      } else {\n+          \/\/ All other CodeBlob kinds have no special functionality in SA and can be\n+          \/\/ represented by the generic CodeBlob class.\n+          return CodeBlob.class;\n+      }\n@@ -199,2 +171,0 @@\n-  public boolean isBufferBlob()         { return getKind() == BufferKind; }\n-\n@@ -207,15 +177,0 @@\n-  public boolean isDeoptimizationBlob() { return getKind() == DeoptimizationKind; }\n-\n-  public boolean isUncommonTrapBlob()   { return getKind() == UncommonTrapKind; }\n-\n-  public boolean isExceptionBlob()      { return getKind() == ExceptionKind; }\n-\n-  public boolean isSafepointBlob()      { return getKind() == SafepointKind; }\n-\n-  public boolean isAdapterBlob()        { return getKind() == AdapterKind; }\n-\n-  public boolean isMHAdapterBlob()      { return getKind() == MHAdapterKind; }\n-\n-  public boolean isVtableBlob()         { return getKind() == VtableKind; }\n-\n-  \/\/ Fine grain nmethod support: isNMethod() == isJavaMethod() || isNativeMethod() || isOSRMethod()\n@@ -226,2 +181,0 @@\n-  \/** On-Stack Replacement method *\/\n-  public boolean isOSRMethod()          { return false; }\n@@ -269,1 +222,3 @@\n-  public boolean callerMustGCArguments() { return false; }\n+  public boolean callerMustGCArguments() {\n+    return callerMustGCArgumentsField.getValue(addr) != 0;\n+  }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/CodeBlob.java","additions":16,"deletions":61,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -99,7 +99,0 @@\n-    if (cbClass == null) {\n-      String message = \"Couldn't deduce type of CodeBlob \";\n-      message = message + \"@\" + cbStart + \" \";\n-      message = message + \"for PC=\" + addr;\n-\n-      throw new RuntimeException(message);\n-    }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/CodeCache.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.code;\n-\n-import java.util.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-public class DeoptimizationBlob extends SingletonBlob {\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static void initialize(TypeDataBase db) {\n-    Type type = db.lookupType(\"DeoptimizationBlob\");\n-\n-    \/\/ FIXME: add any needed fields\n-  }\n-\n-  public DeoptimizationBlob(Address addr) {\n-    super(addr);\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/DeoptimizationBlob.java","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"},{"patch":"@@ -1,55 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.code;\n-\n-import java.util.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-\/** ExceptionBlob: used for exception unwinding in compiled code\n-    (currently only used by Compiler 2) *\/\n-\n-public class ExceptionBlob extends SingletonBlob {\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static void initialize(TypeDataBase db) {\n-    Type type = db.lookupType(\"ExceptionBlob\");\n-\n-    \/\/ FIXME: add any needed fields\n-  }\n-\n-  public ExceptionBlob(Address addr) {\n-    super(addr);\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/ExceptionBlob.java","additions":0,"deletions":55,"binary":false,"changes":55,"status":"deleted"},{"patch":"@@ -1,56 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.code;\n-\n-import java.util.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-public class MethodHandlesAdapterBlob extends AdapterBlob {\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static void initialize(TypeDataBase db) {\n-    Type type = db.lookupType(\"MethodHandlesAdapterBlob\");\n-\n-    \/\/ FIXME: add any needed fields\n-  }\n-\n-  public MethodHandlesAdapterBlob(Address addr) {\n-    super(addr);\n-  }\n-\n-  public String getName() {\n-    return \"MethodHandlesAdapterBlob: \" + super.getName();\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/MethodHandlesAdapterBlob.java","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.code;\n-\n-import java.util.*;\n-\n-import sun.jvm.hotspot.compiler.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-public class RuntimeBlob extends CodeBlob {\n-\n-  \/\/ Only used by server compiler on x86; computed over in SA rather\n-  \/\/ than relying on computation in target VM\n-  private static final int     NOT_YET_COMPUTED = -2;\n-  private static final int     UNDEFINED        = -1;\n-  private              int     linkOffset       = NOT_YET_COMPUTED;\n-\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static void initialize(TypeDataBase db) {\n-    Type type = db.lookupType(\"RuntimeBlob\");\n-  }\n-\n-  public RuntimeBlob(Address addr) {\n-    super(addr);\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/RuntimeBlob.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -1,64 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.code;\n-\n-import java.util.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-public class RuntimeStub extends RuntimeBlob {\n-  private static CIntegerField callerMustGCArgumentsField;\n-\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static void initialize(TypeDataBase db) {\n-    Type type = db.lookupType(\"RuntimeStub\");\n-    callerMustGCArgumentsField                = type.getCIntegerField(\"_caller_must_gc_arguments\");\n-\n-    \/\/ FIXME: add any needed fields\n-  }\n-\n-  public RuntimeStub(Address addr) {\n-    super(addr);\n-  }\n-\n-  public boolean callerMustGCArguments() {\n-    return callerMustGCArgumentsField.getValue(addr) != 0;\n-  }\n-\n-\n-  public String getName() {\n-    return \"RuntimeStub: \" + super.getName();\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/RuntimeStub.java","additions":0,"deletions":64,"binary":false,"changes":64,"status":"deleted"},{"patch":"@@ -1,54 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.code;\n-\n-import java.util.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-\/** SafepointBlob: handles illegal_instruction exceptions during a safepoint *\/\n-\n-public class SafepointBlob extends SingletonBlob {\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static void initialize(TypeDataBase db) {\n-    Type type = db.lookupType(\"SafepointBlob\");\n-\n-    \/\/ FIXME: add any needed fields\n-  }\n-\n-  public SafepointBlob(Address addr) {\n-    super(addr);\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/SafepointBlob.java","additions":0,"deletions":54,"binary":false,"changes":54,"status":"deleted"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.code;\n-\n-import java.util.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-public class SingletonBlob extends RuntimeBlob {\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static void initialize(TypeDataBase db) {\n-    Type type = db.lookupType(\"SingletonBlob\");\n-\n-    \/\/ FIXME: add any needed fields\n-  }\n-\n-  public SingletonBlob(Address addr) {\n-    super(addr);\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/SingletonBlob.java","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"},{"patch":"@@ -1,54 +0,0 @@\n-\/*\n- * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.code;\n-\n-import java.util.*;\n-import sun.jvm.hotspot.debugger.*;\n-import sun.jvm.hotspot.runtime.*;\n-import sun.jvm.hotspot.types.*;\n-import sun.jvm.hotspot.utilities.Observable;\n-import sun.jvm.hotspot.utilities.Observer;\n-\n-\/** UncommonTrapBlob (currently only used by Compiler 2) *\/\n-\n-public class UncommonTrapBlob extends SingletonBlob {\n-  static {\n-    VM.registerVMInitializedObserver(new Observer() {\n-        public void update(Observable o, Object data) {\n-          initialize(VM.getVM().getTypeDataBase());\n-        }\n-      });\n-  }\n-\n-  private static void initialize(TypeDataBase db) {\n-    Type type = db.lookupType(\"UncommonTrapBlob\");\n-\n-    \/\/ FIXME: add any needed fields\n-  }\n-\n-  public UncommonTrapBlob(Address addr) {\n-    super(addr);\n-  }\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/UncommonTrapBlob.java","additions":0,"deletions":54,"binary":false,"changes":54,"status":"deleted"},{"patch":"@@ -34,1 +34,1 @@\n-public class UpcallStub extends RuntimeBlob {\n+public class UpcallStub extends CodeBlob {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/UpcallStub.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,40 +0,0 @@\n-\/*\n- * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, NTT DATA.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-package sun.jvm.hotspot.code;\n-\n-import sun.jvm.hotspot.debugger.Address;\n-\n-public class VtableBlob extends BufferBlob {\n-\n-    public VtableBlob(Address addr) {\n-        super(addr);\n-    }\n-\n-    public String getName() {\n-        return \"VtableBlob: \" + super.getName();\n-    }\n-\n-}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/VtableBlob.java","additions":0,"deletions":40,"binary":false,"changes":40,"status":"deleted"},{"patch":"@@ -163,20 +163,0 @@\n-                            } else if (cb.isBufferBlob()) {\n-                               out.println(\"<StubRoutines>\");\n-                            } else if (cb.isAdapterBlob()) {\n-                               out.println(\"<AdapterBlob>\");\n-                            } else if (cb.isVtableBlob()) {\n-                               out.println(\"<VtableBlob>\");\n-                            } else if (cb.isMHAdapterBlob()) {\n-                               out.println(\"<MethodHandlesAdapterBlob>\");\n-                            } else if (cb.isRuntimeStub()) {\n-                               out.println(\"<RuntimeStub>\");\n-                            } else if (cb.isUpcallStub()) {\n-                               out.println(\"<UpcallStub>\");\n-                            } else if (cb.isDeoptimizationBlob()) {\n-                               out.println(\"<DeoptimizationBlob>\");\n-                            } else if (cb.isUncommonTrapBlob()) {\n-                               out.println(\"<UncommonTrapBlob>\");\n-                            } else if (cb.isExceptionBlob()) {\n-                               out.println(\"<ExceptionBlob>\");\n-                            } else if (cb.isSafepointBlob()) {\n-                               out.println(\"<SafepointBlob>\");\n@@ -184,1 +164,1 @@\n-                               out.println(\"<Unknown code blob>\");\n+                               out.println(\"<\" + cb.getName() + \">\");\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/PStack.java","additions":1,"deletions":21,"binary":false,"changes":22,"status":"modified"}]}