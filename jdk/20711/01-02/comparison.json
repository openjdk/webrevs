{"files":[{"patch":"@@ -24,0 +24,7 @@\n+import doccheckutils.FileChecker;\n+import doccheckutils.FileProcessor;\n+import doccheckutils.HtmlFileChecker;\n+import doccheckutils.checkers.BadCharacterChecker;\n+import doccheckutils.checkers.DocTypeChecker;\n+import doccheckutils.checkers.LinkChecker;\n+import doccheckutils.checkers.TidyChecker;\n@@ -25,12 +32,0 @@\n-import org.junit.Before;\n-import org.junit.Test;\n-import tools.FileChecker;\n-import tools.FileProcessor;\n-import tools.HtmlFileChecker;\n-import tools.checkers.BadCharacterChecker;\n-import tools.checkers.DocTypeChecker;\n-import tools.checkers.LinkChecker;\n-import tools.checkers.TidyChecker;\n-\n-import java.io.File;\n-import java.io.IOException;\n@@ -40,4 +35,1 @@\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Executors;\n-import java.util.concurrent.Future;\n+import java.util.concurrent.*;\n@@ -45,0 +37,1 @@\n+import toolbox.TestRunner;\n@@ -48,1 +41,1 @@\n- * and runs different {@link FileChecker file checkers} on it\n+ * and runs different {@link FileChecker file checkers} on it.\n@@ -50,1 +43,1 @@\n-public class DocCheck {\n+public class DocCheck extends TestRunner {\n@@ -52,0 +45,1 @@\n+    private static final Path DIR = Path.of(System.getProperty(\"doccheck.dir\"));\n@@ -53,0 +47,1 @@\n+    private static final boolean RUN_PARALLEL = Boolean.parseBoolean(System.getProperty(\"doccheck.runParallel\", \"true\"));\n@@ -54,3 +49,14 @@\n-    @Before\n-    public void setUp() {\n-        Path root = Path.of(ROOT_PATH.getParent() + File.separator + \"docs\" + File.separator + System.getProperty(\"doccheck.dir\"));\n+    public static void main(String... args) throws Exception {\n+        DocCheck docCheck = new DocCheck();\n+        docCheck.runTests();\n+    }\n+\n+    public DocCheck() {\n+        super(System.err);\n+        init();\n+    }\n+\n+    public void init() {\n+        Path root = ROOT_PATH.getParent()\n+                .resolve(\"docs\")\n+                .resolve(DIR);\n@@ -62,0 +68,9 @@\n+    public List<FileChecker> getCheckers() {\n+        List<FileChecker> checkers = new ArrayList<>();\n+        checkers.add(new TidyChecker());\n+        checkers.add(new BadCharacterChecker());\n+        checkers.add(new HtmlFileChecker(new DocTypeChecker()));\n+        checkers.add(new HtmlFileChecker(new LinkChecker()));\n+        return checkers;\n+    }\n+\n@@ -64,1 +79,10 @@\n-        ExecutorService executorService = Executors.newFixedThreadPool(4);\n+        List<FileChecker> checkers = getCheckers();\n+        if (RUN_PARALLEL) {\n+            runCheckersInParallel(checkers);\n+        } else {\n+            runCheckersSequentially(checkers);\n+        }\n+    }\n+\n+    private void runCheckersInParallel(List<FileChecker> checkers) throws Exception {\n+        ExecutorService executorService = Executors.newFixedThreadPool(checkers.size());\n@@ -67,6 +91,1 @@\n-        try (\n-                TidyChecker tidy = new TidyChecker();\n-                BadCharacterChecker badChars = new BadCharacterChecker();\n-                HtmlFileChecker docChecker = new HtmlFileChecker(new DocTypeChecker());\n-                HtmlFileChecker htmlChecker = new HtmlFileChecker(new LinkChecker());\n-        ) {\n+        try {\n@@ -74,6 +93,8 @@\n-            futures.add(executorService.submit(() -> {\n-                try {\n-                    tidy.checkFiles(files);\n-                } catch (RuntimeException e) {\n-                    synchronized (exceptions) {\n-                        exceptions.add(e);\n+            for (FileChecker checker : checkers) {\n+                futures.add(executorService.submit(() -> {\n+                    try (checker) {  \/\/ try-with-resources ensures closing\n+                        checker.checkFiles(files);\n+                    } catch (Exception e) {\n+                        synchronized (exceptions) {\n+                            exceptions.add(e);\n+                        }\n@@ -81,32 +102,2 @@\n-                }\n-            }));\n-\n-            futures.add(executorService.submit(() -> {\n-                try {\n-                    docChecker.checkFiles(files);\n-                } catch (RuntimeException e) {\n-                    synchronized (exceptions) {\n-                        exceptions.add(e);\n-                    }\n-                }\n-            }));\n-\n-            futures.add(executorService.submit(() -> {\n-                try {\n-                    badChars.checkFiles(files);\n-                } catch (RuntimeException e) {\n-                    synchronized (exceptions) {\n-                        exceptions.add(e);\n-                    }\n-                }\n-            }));\n-\n-            futures.add(executorService.submit(() -> {\n-                try {\n-                    htmlChecker.checkFiles(files);\n-                } catch (RuntimeException e) {\n-                    synchronized (exceptions) {\n-                        exceptions.add(e);\n-                    }\n-                }\n-            }));\n+                }));\n+            }\n@@ -123,2 +114,0 @@\n-        } catch (IOException e) {\n-            throw new Exception(\"Interrupted: \" + e);\n@@ -127,0 +116,19 @@\n+            if (!executorService.awaitTermination(60, TimeUnit.SECONDS)) {\n+                executorService.shutdownNow();\n+            }\n+        }\n+\n+        if (!exceptions.isEmpty()) {\n+            throw new Exception(\"One or more HTML checkers failed: \" + exceptions);\n+        }\n+    }\n+\n+    private void runCheckersSequentially(List<FileChecker> checkers) throws Exception {\n+        List<Throwable> exceptions = new ArrayList<>();\n+\n+        for (FileChecker checker : checkers) {\n+            try (checker) {\n+                checker.checkFiles(files);\n+            } catch (Exception e) {\n+                exceptions.add(e);\n+            }\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/DocCheck.java","additions":76,"deletions":68,"binary":false,"changes":144,"status":"modified"},{"patch":"@@ -23,1 +23,1 @@\n-package tools;\n+package doccheckutils;\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/doccheckutils\/Checker.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/langtools\/jdk\/javadoc\/doccheck\/tools\/Checker.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package tools;\n+package doccheckutils;\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/doccheckutils\/FileChecker.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/langtools\/jdk\/javadoc\/doccheck\/tools\/FileChecker.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package tools;\n+package doccheckutils;\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/doccheckutils\/FileProcessor.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/langtools\/jdk\/javadoc\/doccheck\/tools\/FileProcessor.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package tools;\n+package doccheckutils;\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/doccheckutils\/HtmlChecker.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/langtools\/jdk\/javadoc\/doccheck\/tools\/HtmlChecker.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package tools;\n+package doccheckutils;\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/doccheckutils\/HtmlFileChecker.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/langtools\/jdk\/javadoc\/doccheck\/tools\/HtmlFileChecker.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package tools;\n+package doccheckutils;\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/doccheckutils\/Log.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/langtools\/jdk\/javadoc\/doccheck\/tools\/Log.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package tools.checkers;\n+package doccheckutils.checkers;\n@@ -25,2 +25,2 @@\n-import tools.FileChecker;\n-import tools.Log;\n+import doccheckutils.FileChecker;\n+import doccheckutils.Log;\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/doccheckutils\/checkers\/BadCharacterChecker.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/langtools\/jdk\/javadoc\/doccheck\/tools\/checkers\/BadCharacterChecker.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package tools.checkers;\n+package doccheckutils.checkers;\n@@ -25,2 +25,2 @@\n-import tools.HtmlChecker;\n-import tools.Log;\n+import doccheckutils.HtmlChecker;\n+import doccheckutils.Log;\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/doccheckutils\/checkers\/DocTypeChecker.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/langtools\/jdk\/javadoc\/doccheck\/tools\/checkers\/DocTypeChecker.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package tools.checkers;\n+package doccheckutils.checkers;\n@@ -26,2 +26,2 @@\n-import tools.HtmlChecker;\n-import tools.Log;\n+import doccheckutils.HtmlChecker;\n+import doccheckutils.Log;\n@@ -139,0 +139,1 @@\n+        errors.log(\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/doccheckutils\/checkers\/LinkChecker.java","additions":4,"deletions":3,"binary":false,"changes":7,"previous_filename":"test\/langtools\/jdk\/javadoc\/doccheck\/tools\/checkers\/LinkChecker.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package tools.checkers;\n+package doccheckutils.checkers;\n@@ -26,2 +26,2 @@\n-import tools.FileChecker;\n-import tools.Log;\n+import doccheckutils.FileChecker;\n+import doccheckutils.Log;\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/doccheckutils\/checkers\/TidyChecker.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/langtools\/jdk\/javadoc\/doccheck\/tools\/checkers\/TidyChecker.java","status":"renamed"},{"patch":"@@ -28,2 +28,2 @@\n- * @library \/test\/langtools\/jdk\/javadoc\/doccheck\/\n- * @run junit\/othervm  -Ddoccheck.dir=api\/jdk.javadoc DocCheck\n+ * @library \/tools\/lib \/test\/langtools\/jdk\/javadoc\/doccheck\/\n+ * @run main\/othervm -Ddoccheck.dir=api\/java.base -Ddoccheck.dir=true DocCheck\n@@ -31,0 +31,5 @@\n+\n+public class DocCheck__jdk_javadoc {\n+    public void main() {\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doccheck\/modules\/DocCheck__jdk_javadoc.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}