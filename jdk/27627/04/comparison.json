{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -268,2 +268,6 @@\n-     *         is less than 0\n-     * @throws IllegalArgumentException if {@code pixelStride} is less than 0\n+     *         is less than or equal to 0\n+     * @throws IllegalArgumentException if {@code pixelStride} is less than or equal to 0\n+     * @throws IllegalArgumentException if {@code w * pixelStride} is greater\n+     *         than {@code scanlineStride}\n+     * @throws IllegalArgumentException if the data size need to store all\n+     *          lines of the image is greater than {@code Integer.MAX_VALUE}\n@@ -271,0 +275,2 @@\n+     * @throws IllegalArgumentException if any element of {@code bandOffsets} is greater\n+     *         than {@code pixelStride} or the {@code scanlineStride}\n@@ -288,2 +294,2 @@\n-        if (pixelStride < 0) {\n-            throw new IllegalArgumentException(\"pixelStride is < 0\");\n+        if (pixelStride <= 0) {\n+            throw new IllegalArgumentException(\"pixelStride is <= 0\");\n@@ -291,2 +297,5 @@\n-        if (scanlineStride < 0) {\n-            throw new IllegalArgumentException(\"scanlineStride is < 0\");\n+        if (scanlineStride <= 0) {\n+            throw new IllegalArgumentException(\"scanlineStride is <= 0\");\n+        }\n+        if (bandOffsets == null) {\n+            throw new NullPointerException(\"bandOffsets is null\");\n@@ -294,2 +303,10 @@\n-        int size = scanlineStride * (h - 1) + \/\/ first (h - 1) scans\n-            pixelStride * w; \/\/ last scan\n+        lsz = (long)w * pixelStride;\n+        if (lsz > scanlineStride) {\n+            throw new IllegalArgumentException(\"w * pixelStride is too large\");\n+        }\n+        lsz = (long)scanlineStride * (long)(h - 1) + \/\/ first (h - 1) scans\n+            (long)pixelStride * (long)w; \/\/ last scan\n+        if (lsz > Integer.MAX_VALUE) {\n+            throw new IllegalArgumentException(\"size too large to store image\");\n+        }\n+        int size = (int)lsz;\n@@ -418,0 +435,4 @@\n+     * @throws IllegalArgumentException if the lengths of {@code bankIndices}\n+     *         and {@code bandOffsets} are different.\n+     * @throws IllegalArgumentException if the data size need to store all\n+     *          lines of a bank of the image is greater than {@code Integer.MAX_VALUE}\n@@ -426,3 +447,0 @@\n-        DataBuffer d;\n-        int bands = bandOffsets.length;\n-\n@@ -443,1 +461,5 @@\n-                ArrayIndexOutOfBoundsException(\"Band offsets array is null\");\n+                NullPointerException(\"Band offsets array is null\");\n+        }\n+        if (bandOffsets.length != bankIndices.length) {\n+            throw new IllegalArgumentException(\n+                                   \"bankIndices.length != bandOffsets.length\");\n@@ -454,0 +476,3 @@\n+        DataBuffer d;\n+        int bands = bandOffsets.length;\n+\n@@ -466,3 +491,9 @@\n-        int size = maxBandOff +\n-            scanlineStride * (h - 1) + \/\/ first (h - 1) scans\n-            w; \/\/ last scan\n+\n+        lsz = (long) maxBandOff +\n+              (long)scanlineStride * (h - 1) + \/\/ first (h - 1) scans\n+               w; \/\/ last scan\n+        if (lsz > Integer.MAX_VALUE) {\n+             throw new IllegalArgumentException(\"storage size is too large\");\n+        }\n+\n+        int size = (int)lsz;\n@@ -511,2 +542,6 @@\n-     * @throws RasterFormatException if {@code w} or {@code h}\n-     *         is less than or equal to zero, or computing either\n+     * @throws NullPointerException if {@code bandMasks} is null\n+     * @throws IllegalArgumentException if {@code w} and {@code h}\n+     *         are not both greater than 0\n+     * @throws IllegalArgumentException if the product of {@code w}\n+     *         and {@code h} is greater than {@code Integer.MAX_VALUE}\n+     * @throws RasterFormatException if computing either\n@@ -514,2 +549,1 @@\n-     *         {@code location.y + h} results in integer\n-     *         overflow\n+     *         {@code location.y + h} results in integer overflow\n@@ -528,0 +562,18 @@\n+        if (w <= 0 || h <= 0) {\n+             throw new IllegalArgumentException(\"w and h must be positive\");\n+        }\n+        long lsz = (long)w * h;\n+        if (lsz > Integer.MAX_VALUE) {\n+            throw new IllegalArgumentException(\"Dimensions (width=\"+w+\n+                                               \" height=\"+h+\") are too large\");\n+        }\n+\n+        if (location != null) {\n+            if ((w + location.getX() > Integer.MAX_VALUE) ||\n+                (h + location.getY() > Integer.MAX_VALUE)) {\n+              throw new RasterFormatException(\n+                 \"location.x + w and location.y + h \" +\n+                 \" cannot exceed Integer.MAX_VALUE\");\n+            }\n+        }\n+\n@@ -576,5 +628,2 @@\n-     * @throws RasterFormatException if {@code w} or {@code h}\n-     *         is less than or equal to zero, or computing either\n-     *         {@code location.x + w} or\n-     *         {@code location.y + h} results in integer\n-     *         overflow\n+     * @throws IllegalArgumentException if {@code bitsPerBand} or\n+     *         {@code bands} is not greater than zero\n@@ -585,2 +634,7 @@\n-     * @throws IllegalArgumentException if {@code bitsPerBand} or\n-     *         {@code bands} is not greater than zero\n+     * @throws IllegalArgumentException if {@code w} and {@code h}\n+     *         are not both greater than 0\n+     * @throws IllegalArgumentException if the product of {@code w}\n+     *         and {@code h} is greater than {@code Integer.MAX_VALUE}\n+     * @throws RasterFormatException if computing either\n+     *         {@code location.x + w} or\n+     *         {@code location.y + h} results in integer overflow\n@@ -610,0 +664,27 @@\n+        if (w <= 0 || h <= 0) {\n+             throw new IllegalArgumentException(\"w and h must be positive\");\n+        }\n+        long lsz = (long)w * h;\n+        if (lsz > Integer.MAX_VALUE) {\n+            throw new IllegalArgumentException(\"Dimensions (width=\"+w+\n+                                               \" height=\"+h+\") are too large\");\n+        }\n+\n+        if (location != null) {\n+            if ((w + location.getX() > Integer.MAX_VALUE) ||\n+                (h + location.getY() > Integer.MAX_VALUE)) {\n+              throw new RasterFormatException(\n+                 \"location.x + w and location.y + h \" +\n+                 \" cannot exceed Integer.MAX_VALUE\");\n+            }\n+        }\n+\n+        int shift = (bands-1)*bitsPerBand;\n+\n+        \/* Make sure the total mask size will fit in the data type *\/\n+        if (shift+bitsPerBand > DataBuffer.getDataTypeSize(dataType)) {\n+            throw new IllegalArgumentException(\"bitsPerBand(\"+\n+                                               bitsPerBand+\") * bands is \"+\n+                                               \" greater than data type \"+\n+                                               \"size.\");\n+        }\n@@ -613,9 +694,1 @@\n-            int shift = (bands-1)*bitsPerBand;\n-\n-            \/* Make sure the total mask size will fit in the data type *\/\n-            if (shift+bitsPerBand > DataBuffer.getDataTypeSize(dataType)) {\n-                throw new IllegalArgumentException(\"bitsPerBand(\"+\n-                                                   bitsPerBand+\") * bands is \"+\n-                                                   \" greater than data type \"+\n-                                                   \"size.\");\n-            }\n+\n@@ -696,0 +769,1 @@\n+     * @throws RasterFormatException if {@code dataBuffer} is too small.\n@@ -707,0 +781,2 @@\n+     * @throws IllegalArgumentException if any element of {@code bandOffsets} is greater\n+     *         than {@code pixelStride} or the {@code scanlineStride}\n@@ -782,0 +858,4 @@\n+     * @throws IllegalArgumentException if the lengths of {@code bankIndices}\n+     *         and {@code bandOffsets} are different.\n+     * @throws ArrayIndexOutOfBoundsException if any element of {@code bankIndices}\n+     *         is greater or equal to the number of bands in {@code dataBuffer}\n@@ -886,2 +966,6 @@\n-     * @throws RasterFormatException if {@code w} or {@code h}\n-     *         is less than or equal to zero, or computing either\n+     * @throws NullPointerException if {@code bandMasks} is null\n+     * @throws IllegalArgumentException if {@code w} and {@code h}\n+     *         are not both greater than 0\n+     * @throws IllegalArgumentException if the product of {@code w}\n+     *         and {@code h} is greater than {@code Integer.MAX_VALUE}\n+     * @throws RasterFormatException if computing either\n@@ -889,2 +973,1 @@\n-     *         {@code location.y + h} results in integer\n-     *         overflow\n+     *         {@code location.y + h} results in integer overflow\n@@ -909,0 +992,19 @@\n+\n+        if (w <= 0 || h <= 0) {\n+             throw new IllegalArgumentException(\"w and h must be positive\");\n+        }\n+        long lsz = (long)w * h;\n+        if (lsz > Integer.MAX_VALUE) {\n+            throw new IllegalArgumentException(\"Dimensions (width=\"+w+\n+                                               \" height=\"+h+\") are too large\");\n+        }\n+\n+        if (location != null) {\n+            if ((w + location.getX() > Integer.MAX_VALUE) ||\n+                (h + location.getY() > Integer.MAX_VALUE)) {\n+              throw new RasterFormatException(\n+                 \"location.x + w and location.y + h \" +\n+                 \" cannot exceed Integer.MAX_VALUE\");\n+            }\n+        }\n+\n@@ -963,2 +1065,5 @@\n-     * @throws RasterFormatException if {@code w} or {@code h}\n-     *         is less than or equal to zero, or computing either\n+     * @throws IllegalArgumentException if {@code w} and {@code h}\n+     *         are not both greater than 0\n+     * @throws IllegalArgumentException if the product of {@code w}\n+     *         and {@code h} is greater than {@code Integer.MAX_VALUE}\n+     * @throws RasterFormatException if computing either\n@@ -966,2 +1071,1 @@\n-     *         {@code location.y + h} results in integer\n-     *         overflow\n+     *         {@code location.y + h} results in integer overflow\n@@ -975,0 +1079,2 @@\n+     * @throws RasterFormatException if {@code bitsPixel} is less than 1 or\n+     *         not a power of 2 or exceeds the {@code dataBuffer} element size.\n@@ -985,0 +1091,19 @@\n+        if (w <= 0 || h <= 0) {\n+             throw new IllegalArgumentException(\"w and h must be positive\");\n+        }\n+        long lsz = (long)w * h;\n+\n+        if (lsz > Integer.MAX_VALUE) {\n+            throw new IllegalArgumentException(\"Dimensions (width=\"+w+\n+                                               \" height=\"+h+\") are too large\");\n+        }\n+\n+        if (location != null) {\n+            if ((w + location.getX() > Integer.MAX_VALUE) ||\n+                (h + location.getY() > Integer.MAX_VALUE)) {\n+              throw new RasterFormatException(\n+                 \"location.x + w and location.y + h \" +\n+                 \" cannot exceed Integer.MAX_VALUE\");\n+            }\n+        }\n+\n@@ -1003,0 +1128,6 @@\n+        if ((bitsPerPixel < 1) || (bitsPerPixel > DataBuffer.getDataTypeSize(dataType))) {\n+            \/\/ NB MPPSM checks power of 2 condition\n+            throw new\n+                RasterFormatException(\"bitsPerPixel must be > 0 and a power of 2 that \" +\n+                                      \"does not exceed data buffer element size\");\n+        }\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/Raster.java","additions":175,"deletions":44,"binary":false,"changes":219,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8255800\n+ * @bug 8255800 8369129\n@@ -45,0 +45,1 @@\n+    static int[] bandMasks1 = new int[] { 0x0ff };\n@@ -47,0 +48,1 @@\n+    static DataBuffer dBuffer1 = new DataBufferByte(1);\n@@ -53,2 +55,9 @@\n-    \/* Except a version starting with \"17\" or higher *\/\n-    static void checkIsOldVersion(Throwable t) {\n+    \/**\n+      * If running on a JDK of the targetVersion or later, throw\n+      * a RuntimeException because the exception argument\n+      * should not have occured. However it is expected on\n+      * prior versions because that was the previous behaviour.\n+      * @param targetVersion to check\n+      * @param t the thrown exception to print\n+      *\/\n+    static void checkIsOldVersion(int targetVersion, Throwable t) {\n@@ -58,1 +67,1 @@\n-        if (v >= 17) {\n+        if (v >= targetVersion) {\n@@ -65,0 +74,5 @@\n+    \/* Except a version starting with \"17\" or higher *\/\n+    static void checkIsOldVersion(Throwable t) {\n+        checkIsOldVersion(17, t);\n+    }\n+\n@@ -76,0 +90,4 @@\n+         packedRasterTests1();\n+         packedRasterTests2();\n+         packedRasterTests3();\n+         packedRasterTests4();\n@@ -737,1 +755,1 @@\n-            Raster.createBandedRaster(DataBuffer.TYPE_INT, 1, 1, 0,\n+            Raster.createBandedRaster(DataBuffer.TYPE_INT, 1, 1, 1,\n@@ -750,1 +768,1 @@\n-            Raster.createBandedRaster(DataBuffer.TYPE_INT, 1, 1, 0,\n+            Raster.createBandedRaster(DataBuffer.TYPE_INT, 1, 1, 1,\n@@ -759,0 +777,15 @@\n+        try {\n+            \/* @throws IllegalArgumentException if the lengths of {@code bankIndices}\n+             *         and {@code bandOffsets} are different.\n+             *\/\n+            Raster.createBandedRaster(DataBuffer.TYPE_INT, 1, 1, 1,\n+                                      bankIndices, bandOffsets2, null);\n+            noException();\n+        } catch (ArrayIndexOutOfBoundsException t) {\n+          checkIsOldVersion(26, t);\n+        } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for different array lengths\");\n+            System.out.println(t);\n+        }\n+\n@@ -897,0 +930,15 @@\n+        try {\n+            \/* @throws ArrayIndexOutOfBoundsException if any element of {@code bankIndices}\n+             *         is greater or equal to the number of bands in {@code dataBuffer}\n+             *\/\n+            int[] indices = new int[] { 0, 1, 2 };\n+            int[] offsets = new int[] { 0, 0, 0 };\n+            Raster.createBandedRaster(dBuffer, 1, 1, 1,\n+                                      indices, offsets, null);\n+            noException();\n+        } catch (ArrayIndexOutOfBoundsException t) {\n+            System.out.println(\n+                   \"Got expected exception for bad bank index\");\n+            System.out.println(t);\n+        }\n+\n@@ -1048,0 +1096,19 @@\n+        try {\n+            \/* @throws IllegalArgumentException if the data size\n+             * needs to store all lines is greater than\n+             * {@code Integer.MAX_VALUE}\n+             *\/\n+            Raster.createInterleavedRaster(DataBuffer.TYPE_BYTE,\n+                    1000, 1000,\n+                    Integer.MAX_VALUE\/2 , 1,\n+                    bandOffsets, null);\n+            noException();\n+        } catch (IllegalArgumentException t) {\n+            System.out.println(\"Got expected exception for overflow\");\n+            System.out.println(t);\n+        } catch (NegativeArraySizeException t) {\n+            checkIsOldVersion(26, t);\n+            System.out.println(\"Got expected exception for overflow\");\n+            System.out.println(t);\n+        }\n+\n@@ -1065,1 +1132,1 @@\n-              * {@code scanlineStride} is less than 0\n+              * {@code scanlineStride} is less than or equal to 0\n@@ -1068,1 +1135,1 @@\n-                                      1, 1, -3, 1, bandOffsets, null);\n+                                      1, 1, 0, 1, bandOffsets, null);\n@@ -1078,1 +1145,1 @@\n-              * is less than 0\n+              * is less than or equal to 0\n@@ -1081,1 +1148,1 @@\n-                                      1, 1, 3, -1, bandOffsets, null);\n+                                      1, 1, 3, 0, bandOffsets, null);\n@@ -1087,0 +1154,2 @@\n+        } catch (RasterFormatException t) {\n+            checkIsOldVersion(26, t);\n@@ -1094,0 +1163,13 @@\n+        try {\n+            \/* @throws IllegalArgumentException if (w * pixelStride)\n+             * is greater than scanlineStride\n+             *\/\n+            Raster.createInterleavedRaster(DataBuffer.TYPE_BYTE,\n+                                  1, 1, 0, 1, bandOffsets, null);\n+            noException();\n+        } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for incorrect stride\");\n+            System.out.println(t);\n+        }\n+\n@@ -1099,1 +1181,1 @@\n-                                  1, 1, 0, 1, null, null);\n+                                  1, 1, 1, 1, null, null);\n@@ -1106,1 +1188,1 @@\n-\n+      \n@@ -1190,0 +1272,12 @@\n+        try {\n+             \/* @throws RasterFormatException if {@code dataBuffer} is too small.\n+              *\/\n+            Raster.createInterleavedRaster(dBuffer1, 5, 1, 15, 1,\n+                                      bandOffsets, null);\n+            noException();\n+        } catch (RasterFormatException t) {\n+            System.out.println(\n+                \"Got expected exception for databuffer too small\");\n+            System.out.println(t);\n+        }\n+\n@@ -1202,1 +1296,0 @@\n-if (t != null) throw t;\n@@ -1245,0 +1338,186 @@\n+            System.out.println(\n+                   \"Got expected exception for bad databuffer banks\");\n+            System.out.println(t);\n+        }\n+\n+        try {\n+             \/* @throws IllegalArgumentException if any element of {@code bandOffsets} is greater\n+             *  than {@code pixelStride} or the {@code scanlineStride}\n+             *\/\n+            int[] offsets = new int[] { 0, 1, 2};\n+            Raster.createInterleavedRaster(dBuffer,\n+                                  1, 1, 1, 1, offsets, null);\n+            noException();\n+        } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for element too large\");\n+            System.out.println(t);\n+        }\n+\n+    }\n+\n+    \/*  createPackedRaster(int dataType,\n+     *                     int w, int h,\n+     *                     int[] bandMasks,\n+     *                     Point location)\n+     *\n+     *\/\n+     static void packedRasterTests1() {\n+\n+        System.out.println();\n+        System.out.println(\"** packedRasterTests1\");\n+\n+         try {\n+             \/* @throws IllegalArgumentException if {@code w} and {@code h}\n+              *         are not both greater than 0\n+              *\/\n+             Raster.createPackedRaster(DataBuffer.TYPE_BYTE, 0, 0, bandMasks1, null);\n+            noException();\n+         } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for zero w \/ h\");\n+            System.out.println(t);\n+         }\n+\n+         try {\n+             \/* @throws IllegalArgumentException if {@code w} * {@code h}\n+              *         is greater than {@code Integer.MAX_VALUE}\n+              *\/\n+             Raster.createPackedRaster(DataBuffer.TYPE_BYTE,\n+                                       Integer.MAX_VALUE\/10, Integer.MAX_VALUE\/10,\n+                                       bandMasks1, null);\n+            noException();\n+         } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for overflow\");\n+            System.out.println(t);\n+         }\n+\n+        try {\n+            \/* @throws RasterFormatException if computing either\n+             * {@code location.x + w} or\n+             * {@code location.y + h} results in integer overflow\n+             *\/\n+            Point pt = new Point(5, 1);\n+            Raster.createPackedRaster(DataBuffer.TYPE_BYTE,\n+                                      Integer.MAX_VALUE-2, 1,\n+                                      bandMasks1, pt);\n+            noException();\n+        } catch (RasterFormatException t) {\n+            System.out.println(\"Got expected exception for overflow\");\n+            System.out.println(t);\n+        }\n+\n+        try {\n+            \/* @throws IllegalArgumentException if {@code dataType}\n+             * is not one of the supported data types\n+             *\/\n+            Raster.createPackedRaster(1000, 1, 1, bandMasks1, null);\n+            noException();\n+        } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for bad databuffer type\");\n+            System.out.println(t);\n+        }\n+     }\n+\n+    \/*  createPackedRaster(int dataType,\n+     *                     int w, int h,\n+     *                     int bands,\n+     *                     int bitsPerBand,\n+     *                     Point location)\n+     *\/\n+     static void packedRasterTests2() {\n+\n+        System.out.println();\n+        System.out.println(\"** packedRasterTests2\");\n+\n+         try {\n+             \/* @throws IllegalArgumentException if {@code w} and {@code h}\n+              *         are not both greater than 0\n+              *\/\n+             Raster.createPackedRaster(DataBuffer.TYPE_BYTE, 0, 0, 1, 8, null);\n+             noException();\n+         } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for zero w \/ h\");\n+            System.out.println(t);\n+         }\n+\n+         try {\n+             \/* @throws IllegalArgumentException if {@code w} * {@code h}\n+              *         is greater than {@code Integer.MAX_VALUE}\n+              *\/\n+             Raster.createPackedRaster(DataBuffer.TYPE_BYTE,\n+                                       Integer.MAX_VALUE\/10, Integer.MAX_VALUE\/10,\n+                                       1, 8, null);\n+             noException();\n+         } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for overflow\");\n+            System.out.println(t);\n+         }\n+\n+        try {\n+            \/* @throws RasterFormatException if computing either\n+             * {@code location.x + w} or\n+             * {@code location.y + h} results in integer overflow\n+             *\/\n+            Point pt = new Point(5, 1);\n+            Raster.createPackedRaster(DataBuffer.TYPE_BYTE,\n+                                      Integer.MAX_VALUE-2, 1,\n+                                      1, 8, pt);\n+            noException();\n+        } catch (RasterFormatException t) {\n+            System.out.println(\"Got expected exception for overflow\");\n+            System.out.println(t);\n+        }\n+\n+        try {\n+             \/* @throws IllegalArgumentException if {@code bitsPerBand} or\n+              *         {@code bands} is not greater than zero\n+              *\/\n+            Raster.createPackedRaster(DataBuffer.TYPE_BYTE, 1, 1,\n+                                       0, 8, null);\n+            noException();\n+        } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for 0 bands\");\n+            System.out.println(t);\n+        }\n+\n+        try {\n+            \/* @throws IllegalArgumentException if {@code bitsPerBand} or\n+             *         {@code bands} is not greater than zero\n+             *\/\n+            Raster.createPackedRaster(DataBuffer.TYPE_BYTE, 1, 1,\n+                                       8, 0, null);\n+            noException();\n+        } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for 0 bitsPerBand\");\n+            System.out.println(t);\n+        }\n+\n+        try {\n+            \/* @throws IllegalArgumentException if the product of\n+             *         {@code bitsPerBand} and {@code bands} is\n+             *         greater than the number of bits held by\n+             *         {@code dataType}\n+             *\/\n+            Raster.createPackedRaster(DataBuffer.TYPE_BYTE, 1, 1,\n+                                       2, 8, null);\n+            noException();\n+        } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for bands per sample\");\n+            System.out.println(t);\n+        }\n+\n+        try {\n+            \/* @throws IllegalArgumentException if {@code dataType}\n+             * is not one of the supported data types\n+             *\/\n+            Raster.createPackedRaster(1000, 1, 1, 1, 8, null);\n+            noException();\n+        } catch (IllegalArgumentException t) {\n@@ -1250,0 +1529,203 @@\n+\n+    \/*  createPackedRaster(DataBuffer dataBuffer,\n+     *                     int w, int h,\n+     *                     int scanlineStride,\n+     *                     int[] bandMasks,\n+     *                     Point location)\n+     *\/\n+    static void packedRasterTests3() {\n+\n+        System.out.println();\n+        System.out.println(\"** packedRasterTests3\");\n+\n+        try {\n+             \/* @throws IllegalArgumentException if {@code w} and {@code h}\n+              *         are not both greater than 0\n+              *\/\n+            Raster.createPackedRaster(dBuffer, 0, 1, 1, bandMasks1, null);\n+           noException();\n+        } catch (IllegalArgumentException t) {\n+           System.out.println(\n+                  \"Got expected exception for zero w \/ h\");\n+           System.out.println(t);\n+        }\n+\n+        try {\n+            \/* @throws IllegalArgumentException if {@code w} * {@code h}\n+             *         is greater than {@code Integer.MAX_VALUE}\n+             *\/\n+            Raster.createPackedRaster(dBuffer,\n+                                      Integer.MAX_VALUE\/10, Integer.MAX_VALUE\/10,\n+                                      1, bandMasks1, null);\n+           noException();\n+        } catch (IllegalArgumentException t) {\n+           System.out.println(\n+                  \"Got expected exception for overflow\");\n+           System.out.println(t);\n+        }\n+\n+       try {\n+           \/* @throws RasterFormatException if computing either\n+            * {@code location.x + w} or\n+            * {@code location.y + h} results in integer overflow\n+            *\/\n+           Point pt = new Point(5, 1);\n+           Raster.createPackedRaster(dBuffer,\n+                                     Integer.MAX_VALUE-2, 1,\n+                                     1, bandMasks1, pt);\n+           noException();\n+       } catch (RasterFormatException t) {\n+           System.out.println(\"Got expected exception for overflow\");\n+           System.out.println(t);\n+       }\n+\n+       try {\n+            \/* @throws NullPointerException if databuffer is null.\n+             *\/\n+            Raster.createPackedRaster(null,\n+                                      1, 1,\n+                                      1, bandMasks1, null);\n+           noException();\n+       } catch (NullPointerException t) {\n+          System.out.println(\n+                  \"Got expected exception for null data buffer\");\n+           System.out.println(t);\n+       }\n+\n+       try {\n+            \/* @throws RasterFormatException if {@code dataBuffer}\n+             * has more than one bank.\n+             *\/\n+            DataBufferByte dbuffer2 = new DataBufferByte(20, 2);\n+            Raster.createPackedRaster(dbuffer2, 1, 1, 1, bandMasks1, null);\n+            noException();\n+        } catch (RasterFormatException t) {\n+            System.out.println(\n+                   \"Got expected exception for bad databuffer banks\");\n+            System.out.println(t);\n+        }\n+       try {\n+            \/* @throws IllegalArgumentException if {@code dataBuffer}\n+             * is not one of the supported data types\n+             *\/\n+            DataBufferFloat dbFloat = new DataBufferFloat(20);\n+            Raster.createPackedRaster(dbFloat, 1, 1, 1, bandMasks1, null);\n+            noException();\n+        } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for bad databuffer type\");\n+            System.out.println(t);\n+        }\n+   }\n+\n+    \/* createPackedRaster(DataBuffer dataBuffer,\n+     *               int w, int h,\n+     *               int bitsPerPixel,\n+     *               Point location)\n+     *\/\n+    static void packedRasterTests4() {\n+\n+        System.out.println();\n+        System.out.println(\"** packedRasterTests4\");\n+\n+        try {\n+             \/* @throws IllegalArgumentException if {@code w} and {@code h}\n+              *         are not both greater than 0\n+              *\/\n+            Raster.createPackedRaster(dBuffer, 0, 1, 8, null);\n+           noException();\n+        } catch (IllegalArgumentException t) {\n+           System.out.println(\n+                  \"Got expected exception for zero w \/ h\");\n+           System.out.println(t);\n+        }\n+\n+        try {\n+            \/* @throws IllegalArgumentException if {@code w} * {@code h}\n+             *         is greater than {@code Integer.MAX_VALUE}\n+             *\/\n+            Raster.createPackedRaster(dBuffer,\n+                                      Integer.MAX_VALUE\/10, Integer.MAX_VALUE\/10,\n+                                      8, null);\n+           noException();\n+        } catch (IllegalArgumentException t) {\n+           System.out.println(\n+                  \"Got expected exception for overflow\");\n+           System.out.println(t);\n+        }\n+\n+       try {\n+           \/* @throws RasterFormatException if computing either\n+            * {@code location.x + w} or\n+            * {@code location.y + h} results in integer overflow\n+            *\/\n+           Point pt = new Point(5, 1);\n+           Raster.createPackedRaster(dBuffer,\n+                                     Integer.MAX_VALUE-2, 1,\n+                                     8, pt);\n+           noException();\n+       } catch (RasterFormatException t) {\n+           System.out.println(\"Got expected exception for overflow\");\n+           System.out.println(t);\n+       }\n+\n+       try {\n+            \/* @throws IllegalArgumentException if {@code dataBuffer}\n+             * is not one of the supported data types\n+             *\/\n+            DataBufferFloat dbFloat = new DataBufferFloat(20);\n+            Raster.createPackedRaster(dbFloat, 1, 1, 8, null);\n+            noException();\n+        } catch (IllegalArgumentException t) {\n+            System.out.println(\n+                   \"Got expected exception for bad databuffer type\");\n+            System.out.println(t);\n+        }\n+\n+        try {\n+            \/* @throws RasterFormatException if {@code dataBuffer}\n+             * has more than one bank.\n+             *\/\n+            DataBufferByte dbb = new DataBufferByte(100, 2);\n+            Raster.createPackedRaster(dbb, 1, 1, 8, null);\n+            noException();\n+        } catch (RasterFormatException t) {\n+            System.out.println(\n+                   \"Got expected exception for bad databuffer banks\");\n+            System.out.println(t);\n+        }\n+\n+        try {\n+            \/* @throws NullPointerException if databuffer is null.\n+             *\/\n+           Raster.createPackedRaster(null, 1, 1, 8, null);\n+           noException();\n+       } catch (NullPointerException t) {\n+          System.out.println(\n+                  \"Got expected exception for null data buffer\");\n+           System.out.println(t);\n+       }\n+\n+       int[] badbpp = { 0, 6, 16 };\n+       for (int bpp : badbpp) {\n+           try {\n+               \/* @throws RasterFormatException if {@code bitsPixel} is less than 1 or\n+                * not a power of 2 or exceeds the {@code dataBuffer} element size.\n+                *\/\n+               System.out.println(\"Test bpp=\" + bpp);\n+               Raster.createPackedRaster(dBuffer, 1, 1, bpp, null);\n+               noException();\n+           } catch (RasterFormatException t) {\n+              System.out.println(\n+                      \"Got expected exception for bitsPerPixel\");\n+               System.out.println(t);\n+           } catch (ArithmeticException t) {\n+               checkIsOldVersion(26, t);\n+               if (bpp != 0) {\n+                   throw new RuntimeException(\"Unexpected arithmetic exception\");\n+               }\n+               System.out.println(\"Got expected arithmetic exception\");\n+               System.out.println(t);\n+        }\n+       }\n+    }\n","filename":"test\/jdk\/java\/awt\/image\/Raster\/CreateRasterExceptionTest.java","additions":496,"deletions":14,"binary":false,"changes":510,"status":"modified"}]}