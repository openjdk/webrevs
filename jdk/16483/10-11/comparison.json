{"files":[{"patch":"@@ -35,14 +35,21 @@\n-# its properties and values. Included files, as well as files pointed by\n-# java.security.properties, can include other files recursively. Paths\n-# may be absolute or relative, and may contain system properties for\n-# expansion in the form of ${system.property}. System properties in include\n-# paths bring flexibility for users to switch between predefined security\n-# profiles on a per-execution basis, as shown in one of the examples below.\n-# If a system property does not have a value, it expands to the empty\n-# string. This behavior enables the establishment of a default profile and\n-# makes profile selection optional. Each relative path is resolved against\n-# the base file containing its \"include\" definition, if local. An error will\n-# be thrown if a file cannot be included, either because it does not exist,\n-# cannot be resolved, or is recursively included more than once. For a\n-# secure JDK configuration, it is important to check OS permissions assigned\n-# to any file included.\n+# its properties. Security properties defined before an include statement\n+# may be overridden by properties in the included file, if their names\n+# match. Conversely, properties defined after an include statement may\n+# override properties in the included file.\n+#\n+# Included files, as well as files pointed by java.security.properties,\n+# can include other files recursively. Paths may be absolute or relative.\n+# Each relative path is resolved against the base file containing its\n+# \"include\" definition, if local. Paths may contain system properties for\n+# expansion in the form of ${system.property}. If a system property does\n+# not have a value, it expands to the empty string.\n+#\n+# System properties in included paths provide flexibility for users to\n+# switch between predefined security profiles on a per-execution basis.\n+# Profile selection may be required or optional depending on the files\n+# layout, as shown in example #3 below.\n+#\n+# An error will be thrown if a file cannot be included, either because it\n+# does not exist, cannot be resolved, or is recursively included more than\n+# once. For a secure JDK configuration, it is important to check OS\n+# permissions assigned to any file included.\n@@ -51,19 +58,13 @@\n-#\n-#   include ${java.home}\/conf\/security\/extra.security\n-#\n-#   include extra.security\n-#\n-#   include ${java.home}\/conf\/security\/profile${SecurityProfile}.security\n-#\n-# Note: In the latter case, the SecurityProfile system property can be set to\n-# select an existing security profile on a per-execution basis. For example,\n-# if Java is launched with the argument -DSecurityProfile=FIPS, the profile\n-# defined in the profileFIPS.security file is applied or an error thrown if\n-# not found. Other files may exist in the same directory defining alternative\n-# profiles. If SecurityProfile is not set, it expands to the empty string.\n-# When a profile.security file exists (may be empty), it defines a default\n-# security profile. When it does not exist, an error is thrown and explicit\n-# profile selection is required. Security properties defined after an include\n-# statement will override any matching property defined in a profile. In order\n-# to avoid this behavior, the include statement may be placed at the end of\n-# this file.\n+#   1) include ${java.home}\/conf\/security\/extra.security\n+#   2) include extra.security\n+#   3) include ${java.home}\/conf\/security\/profile${SecurityProfile}.security\n+#\n+# In example #3, if Java is launched with the argument -DSecurityProfile=FIPS,\n+# the profile defined in profileFIPS.security is applied. An error is thrown\n+# if this file is not found. Other files may exist in the same directory,\n+# enabling the selection of alternative profiles. If SecurityProfile is not\n+# set, it expands to the empty string. When a profile.security file exists\n+# (may be empty), it defines a default security profile. When it does not,\n+# an error is thrown and explicit profile selection is required. In order\n+# to prevent profile properties from being overridden, the include statement\n+# may be placed at the end of this file.\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":34,"deletions":33,"binary":false,"changes":67,"status":"modified"}]}