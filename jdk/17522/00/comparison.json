{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1990,3 +1990,2 @@\n-        } catch (OutOfMemoryError memerr) {\n-            throw new InvalidObjectException(\"Proxy interface limit exceeded: \" +\n-                                             Arrays.toString(ifaces), memerr);\n+        } catch (OutOfMemoryError oome) {\n+            throw genInvalidObjectException(oome, ifaces);\n@@ -2004,3 +2003,2 @@\n-        } catch (OutOfMemoryError memerr) {\n-            throw new InvalidObjectException(\"Proxy interface limit exceeded: \" +\n-                                             Arrays.toString(ifaces), memerr);\n+        } catch (OutOfMemoryError oome) {\n+            throw genInvalidObjectException(oome, ifaces);\n@@ -2016,0 +2014,7 @@\n+    \/\/ Generate an InvalidObjectException for an OutOfMemoryError\n+    \/\/ Use String.concat() to avoid string formatting invoke dynamic\n+    private static InvalidObjectException genInvalidObjectException(OutOfMemoryError oome, String[] ifaces) {\n+        return new InvalidObjectException(\"Proxy interface limit exceeded: \"\n+                .concat(Arrays.toString(ifaces)), oome);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"}]}