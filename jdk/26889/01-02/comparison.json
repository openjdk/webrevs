{"files":[{"patch":"@@ -98,10 +98,8 @@\n-        try {\n-            UnixNativeDispatcher.fstatat(UnixConstants.AT_FDCWD,\n-                                         path, flag, attrs);\n-        } catch (UnixException x) {\n-            if (x.errno() == UnixConstants.ENOENT)\n-                return null;\n-            else\n-                throw x;\n-        }\n-        return attrs;\n+        int errno = UnixNativeDispatcher.fstatat2(UnixConstants.AT_FDCWD,\n+                                                  path, flag, attrs);\n+        if (errno == 0)\n+            return attrs;\n+        else if (errno == UnixConstants.ENOENT)\n+            return null;\n+        else\n+            throw new UnixException(errno);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileAttributes.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -253,1 +253,12 @@\n-            stat0(buffer.address(), attrs);\n+            int errno = stat0(buffer.address(), attrs);\n+            if (errno != 0) {\n+                throw new UnixException(errno);\n+            }\n+        }\n+    }\n+    private static native int stat0(long pathAddress, UnixFileAttributes attrs);\n+\n+    \/\/ Variant of stat() returning errno instead of throwing UnixException\n+    static int stat2(UnixPath path, UnixFileAttributes attrs) {\n+        try (NativeBuffer buffer = copyToNativeBuffer(path)) {\n+            return stat0(buffer.address(), attrs);\n@@ -256,1 +267,0 @@\n-    private static native void stat0(long pathAddress, UnixFileAttributes attrs);\n@@ -281,1 +291,1 @@\n-    static void fstatat(int dfd, UnixPath path, int flag, UnixFileAttributes attrs)\n+    static void  fstatat(int dfd, UnixPath path, int flag, UnixFileAttributes attrs)\n@@ -285,1 +295,14 @@\n-            fstatat0(dfd, buffer.address(), flag, attrs);\n+            int errno = fstatat0(dfd, buffer.address(), flag, attrs);\n+            if (errno != 0) {\n+                throw new UnixException(errno);\n+            }\n+        }\n+    }\n+    private static native int fstatat0(int dfd, long pathAddress, int flag,\n+        UnixFileAttributes attrs);\n+\n+    \/\/ Variant of fstatat() returning errno instead of throwing UnixException\n+    static int fstatat2(int dfd, UnixPath path, int flag, UnixFileAttributes attrs)\n+    {\n+        try (NativeBuffer buffer = copyToNativeBuffer(path)) {\n+            return fstatat0(dfd, buffer.address(), flag, attrs);\n@@ -288,2 +311,0 @@\n-    private static native void fstatat0(int dfd, long pathAddress, int flag,\n-        UnixFileAttributes attrs) throws UnixException;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixNativeDispatcher.java","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -648,1 +648,1 @@\n-JNIEXPORT void JNICALL\n+JNIEXPORT jint JNICALL\n@@ -665,0 +665,1 @@\n+            return 0;\n@@ -666,1 +667,1 @@\n-            throwUnixException(env, errno);\n+            return errno;\n@@ -673,0 +674,1 @@\n+        return 0;\n@@ -674,1 +676,1 @@\n-        throwUnixException(env, errno);\n+        return errno;\n@@ -742,1 +744,1 @@\n-JNIEXPORT void JNICALL\n+JNIEXPORT jint JNICALL\n@@ -762,0 +764,1 @@\n+            return 0;\n@@ -763,1 +766,1 @@\n-            throwUnixException(env, errno);\n+            return errno;\n@@ -765,2 +768,0 @@\n-        \/\/ statx was available, so return now\n-        return;\n@@ -772,1 +773,1 @@\n-        return;\n+        return ENOTSUP;\n@@ -777,0 +778,1 @@\n+        return 0;\n@@ -778,1 +780,1 @@\n-        throwUnixException(env, errno);\n+        return errno;\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixNativeDispatcher.c","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"}]}