{"files":[{"patch":"@@ -86,2 +86,1 @@\n-    static UnixFileAttributes getIfExists(UnixPath path)\n-        throws UnixException\n+    static UnixFileAttributes getIfExists(UnixPath path) throws UnixException\n@@ -89,9 +88,1 @@\n-        UnixFileAttributes attrs = new UnixFileAttributes();\n-        int errno = UnixNativeDispatcher.stat2(path, attrs);\n-        if (errno == 0) {\n-            return attrs;\n-        } else if (errno == UnixConstants.ENOENT) {\n-            return null;\n-        } else {\n-            throw new UnixException(errno);\n-        }\n+        return getIfExists(path, true);\n@@ -107,8 +98,8 @@\n-        try {\n-            UnixNativeDispatcher.fstatat(UnixConstants.AT_FDCWD,\n-                                         path.asByteArray(), flag, attrs);\n-        } catch (UnixException x) {\n-            if (x.errno() == UnixConstants.ENOENT)\n-                return null;\n-\n-            throw x;\n+        int errno = UnixNativeDispatcher.fstatat(UnixConstants.AT_FDCWD,\n+                                                 path, flag, attrs);\n+        if (errno == 0) {\n+            return attrs;\n+        } else if (errno == UnixConstants.ENOENT) {\n+            return null;\n+        } else {\n+            throw new UnixException(errno);\n@@ -116,2 +107,0 @@\n-\n-        return attrs;\n@@ -133,1 +122,1 @@\n-        UnixNativeDispatcher.fstatat(dfd, path.asByteArray(), flag, attrs);\n+        UnixNativeDispatcher.fstatat(dfd, path, flag, attrs);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileAttributes.java","additions":11,"deletions":22,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -291,1 +291,1 @@\n-    static void fstatat(int dfd, byte[] path, int flag, UnixFileAttributes attrs)\n+    static int fstatat(int dfd, UnixPath path, int flag, UnixFileAttributes attrs)\n@@ -294,2 +294,2 @@\n-        try (NativeBuffer buffer = NativeBuffers.asNativeBuffer(path)) {\n-            fstatat0(dfd, buffer.address(), flag, attrs);\n+        try (NativeBuffer buffer = copyToNativeBuffer(path)) {\n+            return fstatat0(dfd, buffer.address(), flag, attrs);\n@@ -298,1 +298,1 @@\n-    private static native void fstatat0(int dfd, long pathAddress, int flag,\n+    private static native int fstatat0(int dfd, long pathAddress, int flag,\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixNativeDispatcher.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -744,1 +744,1 @@\n-JNIEXPORT void JNICALL\n+JNIEXPORT int JNICALL\n@@ -764,0 +764,2 @@\n+        } else if (errno == ENOENT) {\n+            return ENOENT;\n@@ -768,1 +770,1 @@\n-        return;\n+        return 0;\n@@ -774,1 +776,1 @@\n-        return;\n+        return -1;\n@@ -777,3 +779,1 @@\n-    if (err == -1) {\n-        throwUnixException(env, errno);\n-    } else {\n+    if (err == 0) {\n@@ -781,0 +781,4 @@\n+    } else if (errno == ENOENT) {\n+        return ENOENT;\n+    } else {\n+        throwUnixException(env, errno);\n@@ -782,0 +786,1 @@\n+    return 0;\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixNativeDispatcher.c","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"}]}