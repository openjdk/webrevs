{"files":[{"patch":"@@ -130,0 +130,10 @@\n+\n+JVMFlag::Error LargePageSizeInBytesConstraintFunc(size_t value, bool verbose) {\n+  if (!is_power_of_2(value)) {\n+    JVMFlag::printError(verbose, \"LargePageSizeInBytes ( %zu ) must be \"\n+                        \"a power of 2\\n\",\n+                        value);\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n+  }\n+  return JVMFlag::SUCCESS;\n+}\n\\ No newline at end of file\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -43,1 +43,2 @@\n-  f(size_t, NUMAInterleaveGranularityConstraintFunc)\n+  f(size_t, NUMAInterleaveGranularityConstraintFunc)  \\\n+  f(size_t, LargePageSizeInBytesConstraintFunc)\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -245,1 +245,2 @@\n-          \"page size for the environment as the maximum)\")                  \\\n+          \"page size for the environment as the maximum) \"                  \\\n+          \"(must be a power of 2)\")                                         \\\n@@ -247,0 +248,1 @@\n+          constraint(LargePageSizeInBytesConstraintFunc, AtParse)           \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-    private static final String FLAG_NAME = \"LargePageSizeInBytes\";\n+    private static final String FLAG_NAME = \"NUMASpaceResizeRate\";\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/vm_flags\/SizeTTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}