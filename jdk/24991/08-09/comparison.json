{"files":[{"patch":"@@ -38,2 +38,7 @@\n- * This class is intended for easy playback of short clips\n- * or snippets of sound. Applications needing more precise control or advanced\n+ * This class is intended for easy playback of short clips or snippets of sound.\n+ * Examples of when this might be used is to play an audible alert or effect in a UI app,\n+ * or to make a short announcement or to provide audible feedback such announcing as the\n+ * function of a button or control.\n+ * The application will typically let such clips play once to completion.\n+ * <p>\n+ * Applications needing more precise control or advanced\n@@ -99,3 +104,9 @@\n-     * The application can call the {@code stop()} method to stop it early.\n-     * This should be done if the application needs to guarantee exit before the clip\n-     * has finished playing.\n+     * <p>\n+     * Threading notes : Most applications will not need to do anything except call {@code play()}.\n+     * The following is therefore something most applications need not be concerned about.\n+     * Play back is managed in a background thread, which is ususally a daemon thread.\n+     * Running daemon threads do not prevent the VM from exiting.\n+     * So at least one thread must be alive to prevent the VM from terminating.\n+     * A UI application with any window displayed automatically satisfies this requirement.\n+     * Conversely, if the application wants to guarantee VM exit before the play() has completed, \n+     * it should call the {@code stop()} method.\n@@ -112,2 +123,9 @@\n-     * The application should call the {@code stop()} method to stop it.\n-     * Failure to do so may mean the application does not terminate.\n+     * <p>\n+     * Threading notes : Most applications will not need to do anything except call {@code loop()}.\n+     * The following is therefore something most applications need not be concerned about.\n+     * Play back is managed in a background thread, which is ususally a daemon thread.\n+     * Running daemon threads do not prevent the VM from exiting.\n+     * So at least one thread must be alive to prevent the VM from terminating.\n+     * A UI application with any window displayed automatically satisfies this requirement.\n+     * Conversely, if the application wants to guarantee VM exit before the play() has completed,\n+     * it should call the {@code stop()} method.\n@@ -123,1 +141,1 @@\n-     * playing does not block exit.\n+     * playing does not block exit. It is also required to stop a {@code loop()}.\n","filename":"src\/java.desktop\/share\/classes\/javax\/sound\/SoundClip.java","additions":26,"deletions":8,"binary":false,"changes":34,"status":"modified"}]}