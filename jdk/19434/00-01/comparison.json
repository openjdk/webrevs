{"files":[{"patch":"@@ -130,8 +130,4 @@\n-  \/\/ If the GC was cancelled just before final mark (but after the preceding cancellation check),\n-  \/\/ then the safepoint operation will do nothing and the concurrent mark will still be in progress.\n-  \/\/ In this case it is safe (and necessary) to resume the degenerated cycle from the marking phase.\n-  \/\/\n-  \/\/ On the other hand, if the GC is cancelled after final mark (but before this check), then the\n-  \/\/ final mark safepoint operation will have finished the mark (setting concurrent mark in progress\n-  \/\/ to false). In this case (final mark has completed), we need control to fall past the next\n-  \/\/ cancellation check and resume the degenerated cycle from the evacuation phase.\n+  \/\/ If the GC was cancelled before final mark, nothing happens on the safepoint. We are still\n+  \/\/ in the marking phase and must resume the degenerated cycle from there. If the GC was cancelled\n+  \/\/ after final mark, then we've entered the evacuation phase and must resume the degenerated cycle\n+  \/\/ from that phase.\n@@ -139,6 +135,0 @@\n-    \/\/ If the concurrent mark is still in progress after the final mark safepoint, then the GC has\n-    \/\/ been cancelled. The degenerated cycle must resume from the marking phase. Without this check,\n-    \/\/ the non-generational mode may fall all the way to the end of this collect routine without\n-    \/\/ having done anything (besides mark most of the heap). Without having collected anything, we\n-    \/\/ can expect an 'out of cycle' degenerated GC which will again mark the entire heap. This is\n-    \/\/ not optimal.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+  \/\/ Returns false if the collection was cancelled, true otherwise.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGC.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}