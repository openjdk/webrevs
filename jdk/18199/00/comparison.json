{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -162,0 +162,44 @@\n+    \/**\n+     * Get a Debug object corresponding to the given option on the given\n+     * property value.\n+     * <p>\n+     * Note: unlike other {@code getInstance} methods, this method might\n+     * return a Debug object even if the option is not set in the\n+     * {@code java.security.debug} system property.\n+     * <p>\n+     * Usually, this method is used by other individual era-specific debug\n+     * settings. For example,\n+     * {@snippet lang=java:\n+     * Map<String,String> settings = loadLoginSettings();\n+     * String property = settings.get(\"logout\");\n+     * Debug debug = Debug.of(\"logout\", setting);\n+     * }\n+     * @param option the debug option name\n+     * @param property debug setting for this option.\n+     *                 If \"true\" is included, a debug object is returned.\n+     *                 If \"false\" is included, {@code null} is returned.\n+     *                 Otherwise, fallback to {@code getInstance(option)}.\n+     *                 Please note that to avoid accidentally enabling debug\n+     *                 on {@code option}, the \"all\" value of the\n+     *                 {@code java.security.debug} system property does not\n+     *                 automatically cover this option.\n+     *\n+     * @return a new Debug object if the option is covered\n+     *\/\n+    public static Debug of(String option, String property) {\n+        if (property != null) {\n+            property = property.toLowerCase(Locale.ROOT);\n+            if (property.contains(\"false\")) {\n+                return null;\n+            }\n+            if (property.contains(\"true\")) {\n+                Debug d = new Debug();\n+                d.prefix = option;\n+                return d;\n+            }\n+        }\n+        \/\/ Only call getInstance() when option is included in args.\n+        \/\/ This prevents an object returned when args has \"all\".\n+        return args.contains(option) ? getInstance(option) : null;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Debug.java","additions":45,"deletions":1,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import sun.security.util.Debug;\n@@ -380,1 +381,2 @@\n-    private boolean debug = false;\n+    private Debug debug = null;\n+\n@@ -461,1 +463,1 @@\n-        debug = \"true\".equalsIgnoreCase((String)options.get(\"debug\"));\n+        debug = Debug.of(\"krb5loginmodule\", (String)options.get(\"debug\"));\n@@ -498,2 +500,2 @@\n-        if (debug) {\n-            System.out.print(\"Debug is  \" + debug\n+        if (debug != null) {\n+            debug.println(\"Debug is \" + (debug != null)\n@@ -532,2 +534,2 @@\n-                if (debug) {\n-                    System.out.println(\"Refreshing Kerberos configuration\");\n+                if (debug != null) {\n+                    debug.println(\"Refreshing Kerberos configuration\");\n@@ -561,2 +563,2 @@\n-                if (debug)\n-                    System.out.println(\"\\t\\t[Krb5LoginModule] \" +\n+                if (debug != null)\n+                    debug.println(\"\\t\\t[Krb5LoginModule] \" +\n@@ -570,2 +572,2 @@\n-                if (debug) {\n-                    System.out.println(\"\\t\\t[Krb5LoginModule] \" +\n+                if (debug != null) {\n+                    debug.println(\"\\t\\t[Krb5LoginModule] \" +\n@@ -584,2 +586,2 @@\n-                if (debug) {\n-                    System.out.println(\"\\t\\t[Krb5LoginModule] \" +\n+                if (debug != null) {\n+                    debug.println(\"\\t\\t[Krb5LoginModule] \" +\n@@ -605,2 +607,2 @@\n-            if (debug) {\n-                System.out.println(\"\\t\\t[Krb5LoginModule] \" +\n+            if (debug != null) {\n+                debug.println(\"\\t\\t[Krb5LoginModule] \" +\n@@ -644,2 +646,2 @@\n-                if (debug)\n-                    System.out.println(\"Acquire TGT from Cache\");\n+                if (debug != null)\n+                    debug.println(\"Acquire TGT from Cache\");\n@@ -661,2 +663,2 @@\n-                        if (debug)\n-                            System.out.println(\"Credentials are\" +\n+                        if (debug != null)\n+                            debug.println(\"Credentials are\" +\n@@ -675,2 +677,2 @@\n-                if (debug) {\n-                    System.out.println(\"Principal is \" + principal);\n+                if (debug != null) {\n+                    debug.println(\"Principal is \" + principal);\n@@ -678,1 +680,1 @@\n-                        System.out.println\n+                        debug.println\n@@ -732,2 +734,2 @@\n-                            if (debug) {\n-                                System.out.println\n+                            if (debug != null) {\n+                                debug.println\n@@ -768,2 +770,2 @@\n-                if (debug) {\n-                    System.out.println(\"principal is \" + principal);\n+                if (debug != null) {\n+                    debug.println(\"principal is \" + principal);\n@@ -772,1 +774,1 @@\n-                        System.out.println(\"Will use keytab\");\n+                        debug.println(\"Will use keytab\");\n@@ -775,1 +777,1 @@\n-                            System.out.println(\"EncryptionKey: keyType=\" +\n+                            debug.println(\"EncryptionKey: keyType=\" +\n@@ -803,2 +805,2 @@\n-            if (debug) {\n-                System.out.println\n+            if (debug != null) {\n+                debug.println\n@@ -807,0 +809,4 @@\n+            if (debug != null) {\n+                debug.println\n+                        (\"username from shared state is \" + username + \"\\n\");\n+            }\n@@ -808,2 +814,0 @@\n-                System.out.println\n-                    (\"username from shared state is null\\n\");\n@@ -813,4 +817,0 @@\n-            if (debug) {\n-                System.out.println\n-                    (\"username from shared state is \" + username + \"\\n\");\n-            }\n@@ -866,2 +866,2 @@\n-                if (debug) {\n-                    System.out.println\n+                if (debug != null) {\n+                    debug.println\n@@ -873,2 +873,2 @@\n-            if (debug) {\n-                System.out.println\n+            if (debug != null) {\n+                debug.println\n@@ -914,2 +914,2 @@\n-                if (debug) {\n-                    System.out.println(\"\\t\\t[Krb5LoginModule] \" +\n+                if (debug != null) {\n+                    debug.println(\"\\t\\t[Krb5LoginModule] \" +\n@@ -918,1 +918,1 @@\n-                    System.out.println();\n+                    debug.println();\n@@ -1011,2 +1011,2 @@\n-            if (debug)\n-                System.out.println(\"Renewed Kerberos Ticket\");\n+            if (debug != null)\n+                debug.println(\"Renewed Kerberos Ticket\");\n@@ -1015,2 +1015,2 @@\n-            if (debug)\n-                System.out.println(\"Ticket could not be renewed : \"\n+            if (debug != null)\n+                debug.println(\"Ticket could not be renewed : \"\n@@ -1134,2 +1134,2 @@\n-                        if (debug) {\n-                            System.out.println(\"Added server's key\"\n+                        if (debug != null) {\n+                            debug.println(\"Added server's key\"\n@@ -1137,1 +1137,1 @@\n-                            System.out.println(\"\\t\\t[Krb5LoginModule] \" +\n+                            debug.println(\"\\t\\t[Krb5LoginModule] \" +\n@@ -1147,2 +1147,2 @@\n-        if (debug)\n-            System.out.println(\"Commit Succeeded \\n\");\n+        if (debug != null)\n+            debug.println(\"Commit Succeeded \\n\");\n@@ -1197,2 +1197,2 @@\n-        if (debug) {\n-            System.out.println(\"\\t\\t[Krb5LoginModule]: \" +\n+        if (debug != null) {\n+            debug.println(\"\\t\\t[Krb5LoginModule]: \" +\n@@ -1225,2 +1225,2 @@\n-        if (debug) {\n-            System.out.println(\"\\t\\t[Krb5LoginModule]: \" +\n+        if (debug != null) {\n+            debug.println(\"\\t\\t[Krb5LoginModule]: \" +\n","filename":"src\/jdk.security.auth\/share\/classes\/com\/sun\/security\/auth\/module\/Krb5LoginModule.java","additions":55,"deletions":55,"binary":false,"changes":110,"status":"modified"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8327818\n+ * @summary reimplement debug option in Krb5LoginModule\n+ * @library \/test\/lib\n+ *\/\n+import com.sun.security.auth.module.Krb5LoginModule;\n+import jdk.test.lib.process.ProcessTools;\n+\n+import java.util.Map;\n+import javax.security.auth.Subject;\n+\n+public class LoginModuleDebug {\n+    public static void main(String[] args) throws Exception {\n+        if (args.length == 0) {\n+            \/\/ debug option set to true\n+            ProcessTools.executeTestJava(\"LoginDebug\",\n+                            \"debug\", \"true\")\n+                    .stdoutShouldBeEmpty()\n+                    .stderrShouldContain(\"krb5loginmodule:\");\n+            \/\/ debug option set to false\n+            ProcessTools.executeTestJava(\"LoginDebug\",\n+                            \"debug\", \"false\")\n+                    .stdoutShouldBeEmpty()\n+                    .stderrShouldNotContain(\"krb5loginmodule:\");\n+            \/\/ no debug option\n+            ProcessTools.executeTestJava(\"LoginDebug\",\n+                            \"foo\", \"bar\")\n+                    .stdoutShouldBeEmpty()\n+                    .stderrShouldNotContain(\"krb5loginmodule:\");\n+            \/\/ can also be set with system property\n+            ProcessTools.executeTestJava(\n+                    \"-Djava.security.debug=krb5loginmodule\",\n+                    \"LoginDebug\",\n+                            \"foo\", \"bar\")\n+                    .stdoutShouldBeEmpty()\n+                    .stderrShouldContain(\"krb5loginmodule:\");\n+            \/\/ debug option overrides system property\n+            ProcessTools.executeTestJava(\n+                            \"-Djava.security.debug=krb5loginmodule\",\n+                            \"LoginDebug\",\n+                            \"debug\", \"false\")\n+                    .stdoutShouldBeEmpty()\n+                    .stderrShouldNotContain(\"krb5loginmodule:\");\n+            \/\/ \"all\" does not cover\n+            ProcessTools.executeTestJava(\n+                            \"-Djava.security.debug=all\",\n+                            \"LoginDebug\",\n+                            \"foo\", \"bar\")\n+                    .stdoutShouldBeEmpty()\n+                    .stderrShouldNotContain(\"krb5loginmodule:\");\n+        } else {\n+            test(args[0], args[1]);\n+        }\n+    }\n+\n+    static void test(String key, String prop)\n+            throws Exception {\n+        new Krb5LoginModule().initialize(\n+                new Subject(), null, Map.of(), Map.of(key, prop));\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/LoginModuleDebug.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"}]}