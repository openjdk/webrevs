[{"commit":{"message":"Use Integer.compareUnsigned"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"08e6adcabe010b82bdaefface386b3083f90daa4"},{"commit":{"message":"Update copyright years and headers"},"files":[{"filename":"test\/jdk\/java\/math\/BigInteger\/HashCode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerCompareTo.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerEquals.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerHashCode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/Shared.java"}],"sha":"3227e08ad20e46182e934935c280cb72bd6cf736"},{"commit":{"message":"Merge branch 'master' into 8310813"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"25237b01979235f12c660f0608834b548a8400aa"},{"commit":{"message":"Merge branch 'master' into 8310813"},"files":[],"sha":"252b7378881251aaaaf332c51d44a7e944d2fd85"},{"commit":{"message":"Merge branch 'master' into 8310813"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"ef8b0c46f055589df33dab7864609c6c14635dfb"},{"commit":{"message":"Merge branch 'master' into 8310813"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"155fedbabcc10366d661abe6f283242ce8a59bba"},{"commit":{"message":"Merge branch 'master' into 8310813"},"files":[],"sha":"77bfab340fcc83476f72d57a6364010af6aef49d"},{"commit":{"message":"Fix bugs in Shared.createSingle"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/Shared.java"}],"sha":"6fa3f694c655c2da75ce64958b0d695a5bb7e71c"},{"commit":{"message":"Merge branch 'master' into 8310813"},"files":[],"sha":"8e84783bde48a81997d09d5ffc31656768a2612f"},{"commit":{"message":"Group params coarser (suggested by @cl4es)\n\n- Splits 20 params into 3 groups: (S)mall, (M)edium and (L)arge.\n  Every testXYZ method invokes M operations, where M is the maximum\n  number of elements in a group. Shorter groups are cyclically padded.\n- Uses the org.openjdk.jmh.infra.Blackhole API and increases\n  benchmark time.\n- Fixes a bug in Shared that precluded 0 from being in a pair."},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerCompareTo.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerEquals.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerHashCode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/Shared.java"}],"sha":"5af2d5dc40aca798f907394d7913f60a0c64e269"},{"commit":{"message":"Use better overloads (suggested by @cl4es)\n\n- Uses simpler, more suitable overloads for the subrange\n  starting from 0"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"88b036c97f4b4b29336119fb9240194382b484d2"},{"commit":{"message":"Improve benchmarks"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerCompareTo.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerEquals.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerHashCode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/Shared.java"}],"sha":"eb4b9775aaf6873cecee824272f51544904b40ed"},{"commit":{"message":"Merge branch 'master' into 8310813"},"files":[],"sha":"4b4c6edbee3ad1ffc1c653fdf190bc5c8599c1a7"},{"commit":{"message":"Restore hash code values\n\nBigInteger is old and ubiquitous enough so that there might be\ninadvertent dependencies on its hash code.\n\nThis commit also includes a test, to make sure hash code is\nunchanged."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"},{"filename":"test\/jdk\/java\/math\/BigInteger\/HashCode.java"}],"sha":"d087a592c8996e90a5754f023c2eac3a194d007f"},{"commit":{"message":"Merge branch 'master' into 8310813"},"files":[],"sha":"418b384867aeba57b5377b70e4a8d5504085ab76"},{"commit":{"message":"Add a benchmark"},"files":[],"sha":"9f838612851fef1cbfff5215db26d1a374982aec"},{"commit":{"message":"Merge branch 'master' into 8310813"},"files":[],"sha":"cbad788b98531bca8b8aefb5eda89b003e631248"},{"commit":{"message":"Use fewer range checks to improve performance"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"a2713ae5e95665d62c0d72aba261782e2a8ed944"},{"commit":{"message":"Improve"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"a9cbbe573720686a8b91d2cfd7fbaaf7fb1a5c52"},{"commit":{"message":"Initial commit"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"3e5f96d4db41214fede9b8b398c474828e312d14"}]