{"files":[{"patch":"@@ -850,1 +850,1 @@\n-  \/\/ Check for \"(x >> C1) << C2\" which just masks off low bits\n+  \/\/ Check for \"(x >> C1) << C2\"\n@@ -852,1 +852,1 @@\n-    \/\/ Special case C1 == C2\n+    \/\/ Special case C1 == C2, which just masks off low bits\n@@ -890,1 +890,1 @@\n-  \/\/ Check for \"((x >> C1) & Y) << C2\" which just masks off more low bits\n+  \/\/ Check for \"((x >> C1) & Y) << C2\"\n@@ -895,1 +895,1 @@\n-      \/\/ Special case C1 == C2\n+      \/\/ Special case C1 == C2, which just masks off low bits\n@@ -1026,1 +1026,1 @@\n-  \/\/ Check for \"(x >> C1) << C2\" which just masks off low bits\n+  \/\/ Check for \"(x >> C1) << C2\"\n@@ -1028,1 +1028,1 @@\n-    \/\/ Special case C1 == C2\n+    \/\/ Special case C1 == C2, which just masks off low bits\n@@ -1066,1 +1066,1 @@\n-  \/\/ Check for \"((x >> C1) & Y) << C2\" which just masks off more low bits\n+  \/\/ Check for \"((x >> C1) & Y) << C2\"\n@@ -1071,1 +1071,1 @@\n-      \/\/ Special case C1 == C2\n+      \/\/ Special case C1 == C2, which just masks off low bits\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -100,1 +100,0 @@\n-        Random random = new Random();\n@@ -108,0 +107,1 @@\n+            Random random = new Random(1000);\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/LShiftNodeIdealize.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}