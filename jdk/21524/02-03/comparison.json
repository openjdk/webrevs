{"files":[{"patch":"@@ -36,0 +36,3 @@\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n@@ -43,1 +46,1 @@\n- * @run main ScreenCaptureRobotTest\n+ * @run main\/othervm -Dsun.java2d.uiScale=1 ScreenCaptureRobotTest\n@@ -47,1 +50,0 @@\n-    private static int delay = 500;\n@@ -51,1 +53,3 @@\n-    private static BufferedImage displayImage;\n+    private static final int IMAGE_WIDTH = 200;\n+    private static final int IMAGE_HEIGHT = 100;\n+    private static volatile Point point;\n@@ -66,1 +70,1 @@\n-                .createCompatibleImage(200, 100);\n+                .createCompatibleImage(IMAGE_WIDTH, IMAGE_HEIGHT);\n@@ -69,2 +73,2 @@\n-        g.setColor(Color.yellow);\n-        g.fillRect(0, 0, 200, 100);\n+        g.setColor(Color.YELLOW);\n+        g.fillRect(0, 0, IMAGE_WIDTH, IMAGE_HEIGHT);\n@@ -72,1 +76,1 @@\n-        g.setFont(new Font(\"SansSerif\", Font.BOLD, 20));\n+        g.setFont(new Font(Font.SANS_SERIF, Font.BOLD, 20));\n@@ -75,1 +79,0 @@\n-        displayImage = realImage;\n@@ -82,1 +85,1 @@\n-        frame.setLocation(100, 100);\n+        frame.setLocationRelativeTo(null);\n@@ -84,1 +87,0 @@\n-        canvas.requestFocus();\n@@ -90,1 +92,1 @@\n-        robot.delay(delay);\n+        robot.delay(500);\n@@ -93,2 +95,6 @@\n-        Point pnt = canvas.getLocationOnScreen();\n-        Rectangle rect = new Rectangle(pnt.x + 10, pnt.y + 10, 200, 100);\n+        EventQueue.invokeAndWait(() -> {\n+            point = canvas.getLocationOnScreen();\n+        });\n+\n+        Rectangle rect = new Rectangle(point.x + 10, point.y + 10, IMAGE_WIDTH,\n+                IMAGE_HEIGHT);\n@@ -96,1 +102,0 @@\n-        \/\/ Capturing Image using Robot\n@@ -103,0 +108,2 @@\n+            saveImage(capturedImage, \"CapturedImage.png\");\n+            saveImage(realImage, \"RealImage.png\");\n@@ -104,3 +111,0 @@\n-        } else {\n-            System.out.println(\"\\nCaptured Image is same as actual Image\");\n-            System.out.println(\"Test passed\");\n@@ -116,1 +120,0 @@\n-        boolean result = true;\n@@ -121,0 +124,7 @@\n+        if (imgWidth != realImg.getWidth()\n+                || imgHeight != realImg.getHeight()) {\n+            System.out.println(\n+                    \"Captured image and real image widths are different\");\n+            return false;\n+        }\n+\n@@ -126,2 +136,5 @@\n-                    result = false;\n-                    return result;\n+                    System.out.println(\"Captured pixel (\"\n+                            + Integer.toHexString(capturedPixel) + \") at (\" + i\n+                            + \", \" + j + \") is not equal to real pixel (\"\n+                            + Integer.toHexString(realPixel) + \")\");\n+                    return false;\n@@ -131,1 +144,1 @@\n-        return result;\n+        return true;\n@@ -137,1 +150,14 @@\n-            g.drawImage(displayImage, 10, 10, this);\n+            g.drawImage(realImage, 10, 10, this);\n+        }\n+    }\n+\n+    private static void saveImage(BufferedImage image, String fileName) {\n+        \/\/ Save BufferedImage to PNG file\n+        try {\n+            File file = new File(fileName);\n+            System.out.println(\"Saving image : \" + image + \" to \"\n+                    + file.getAbsolutePath());\n+            ImageIO.write(image, \"PNG\", file);\n+        } catch (IOException ioe) {\n+            throw new RuntimeException(\n+                    \"Image save failed : \" + ioe.getMessage());\n","filename":"test\/jdk\/java\/awt\/Robot\/ScreenCaptureRobotTest.java","additions":48,"deletions":22,"binary":false,"changes":70,"status":"modified"}]}