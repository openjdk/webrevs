{"files":[{"patch":"@@ -39,1 +39,0 @@\n-import java.util.function.Function;\n@@ -44,1 +43,0 @@\n-import jdk.internal.net.http.common.TimeSource;\n@@ -60,1 +58,0 @@\n-    private volatile int unsuccessfulAttempts;\n@@ -120,1 +117,1 @@\n-        private final CompletableFuture<ConnectState> cf;\n+        private final CompletableFuture<Void> cf;\n@@ -123,1 +120,1 @@\n-        ConnectEvent(CompletableFuture<ConnectState> cf, Exchange<?> exchange) {\n+        ConnectEvent(CompletableFuture<Void> cf, Exchange<?> exchange) {\n@@ -152,1 +149,2 @@\n-                    cf.completeAsync(() -> ConnectState.CONNECT_FINISHED, client().theExecutor());\n+                    if (debug.on()) debug.log(\"%s has been connected asynchronously\", label());\n+                    cf.completeAsync(() -> null, client().theExecutor());\n@@ -173,1 +171,1 @@\n-        CompletableFuture<ConnectState> cf = new MinimalFuture<>();\n+        CompletableFuture<Void> cf = new MinimalFuture<>();\n@@ -211,1 +209,2 @@\n-                    cf.complete(ConnectState.CONNECTED);\n+                    if (debug.on()) debug.log(\"%s has been connected\", label());\n+                    cf.complete(null);\n@@ -231,4 +230,1 @@\n-        return cf.thenApply((state)->{\n-            if (debug.on()) debug.log(\"%s: %s\", label(), state);\n-            return null;\n-        });\n+        return cf;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/PlainHttpConnection.java","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"}]}