{"files":[{"patch":"@@ -926,0 +926,29 @@\n+void LatestMethodCache::init(JavaThread* current, InstanceKlass* ik,\n+                             const char* method, Symbol* signature, bool is_static)\n+{\n+  TempNewSymbol name = SymbolTable::new_symbol(method);\n+  Method* m = nullptr;\n+  \/\/ The klass must be linked before looking up the method.\n+  if (!ik->link_class_or_fail(current) ||\n+      ((m = ik->find_method(name, signature)) == nullptr) ||\n+      is_static != m->is_static()) {\n+    ResourceMark rm(current);\n+    \/\/ NoSuchMethodException doesn't actually work because it tries to run the\n+    \/\/ <init> function before java_lang_Class is linked. Print error and exit.\n+    vm_exit_during_initialization(err_msg(\"Unable to link\/verify %s.%s method\",\n+                                 ik->name()->as_C_string(), method));\n+  }\n+\n+  _klass = ik;\n+  _method_idnum = m->method_idnum();\n+  assert(_method_idnum >= 0, \"sanity check\");\n+}\n+\n+Method* LatestMethodCache::get_method() {\n+  if (klass() == nullptr) return nullptr;\n+  InstanceKlass* ik = InstanceKlass::cast(klass());\n+  Method* m = ik->method_with_idnum(method_idnum());\n+  assert(m != nullptr, \"sanity check\");\n+  return m;\n+}\n+\n@@ -1242,29 +1271,0 @@\n-void LatestMethodCache::init(JavaThread* current, InstanceKlass* ik,\n-                             const char* method, Symbol* signature, bool is_static)\n-{\n-  TempNewSymbol name = SymbolTable::new_symbol(method);\n-  Method* m = nullptr;\n-  \/\/ The klass must be linked before looking up the method.\n-  if (!ik->link_class_or_fail(current) ||\n-      ((m = ik->find_method(name, signature)) == nullptr) ||\n-      is_static != m->is_static()) {\n-    ResourceMark rm(current);\n-    \/\/ NoSuchMethodException doesn't actually work because it tries to run the\n-    \/\/ <init> function before java_lang_Class is linked. Print error and exit.\n-    vm_exit_during_initialization(err_msg(\"Unable to link\/verify %s.%s method\",\n-                                 ik->name()->as_C_string(), method));\n-  }\n-\n-  _klass = ik;\n-  _method_idnum = m->method_idnum();\n-  assert(_method_idnum >= 0, \"sanity check\");\n-}\n-\n-Method* LatestMethodCache::get_method() {\n-  if (klass() == nullptr) return nullptr;\n-  InstanceKlass* ik = InstanceKlass::cast(klass());\n-  Method* m = ik->method_with_idnum(method_idnum());\n-  assert(m != nullptr, \"sanity check\");\n-  return m;\n-}\n-\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"}]}