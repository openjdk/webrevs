{"files":[{"patch":"@@ -38,6 +38,0 @@\n-\/\/\n-\/\/ Note that the following pointers are effectively final -- after having been\n-\/\/ set at JVM startup-time, they should never be subsequently mutated.\n-\/\/ Instead of using pointers to malloc()ed monitors and mutexes we should consider\n-\/\/ eliminating the indirection and using instances instead.\n-\/\/ Consider using GCC's __read_mostly.\n@@ -204,3 +198,7 @@\n-#define def(var, type, pri, ...) {            \\\n-  var = new type(Mutex::pri, #var, ##__VA_ARGS__); \\\n-  add_mutex(var);                             \\\n+#define MUTEX_STORAGE_NAME(name) name##_storage\n+#define MUTEX_STORAGE(name, type) static alignas(type) uint8_t MUTEX_STORAGE_NAME(name)[sizeof(type)]\n+#define MUTEX_DEF(name, type, pri, ...) {                                                       \\\n+  assert(name == nullptr, \"Mutex\/Monitor initialized twice\");                                   \\\n+  MUTEX_STORAGE(name, type);                                                                    \\\n+  name = ::new(static_cast<void*>(MUTEX_STORAGE_NAME(name))) type((pri), #name, ##__VA_ARGS__); \\\n+  add_mutex(name);                                                                              \\\n@@ -208,0 +206,1 @@\n+#define MUTEX_DEFN(name, type, pri, ...) MUTEX_DEF(name, type, Mutex::pri, ##__VA_ARGS__)\n@@ -211,4 +210,1 @@\n-#define defl(var, type, held_lock, ...) {         \\\n-  var = new type(held_lock->rank()-1, #var, ##__VA_ARGS__); \\\n-  add_mutex(var);                                      \\\n-}\n+#define MUTEX_DEFL(name, type, held_lock, ...) MUTEX_DEF(name, type, (held_lock)->rank()-1, ##__VA_ARGS__)\n@@ -216,4 +212,1 @@\n-#define defl(var, type, held_lock, ...) {         \\\n-  var = new type(Mutex::safepoint, #var, ##__VA_ARGS__); \\\n-  add_mutex(var);                                      \\\n-}\n+#define MUTEX_DEFL(name, type, held_lock, ...) MUTEX_DEFN(name, type, safepoint, ##__VA_ARGS__)\n@@ -224,1 +217,1 @@\n-  def(tty_lock                     , PaddedMutex  , tty);      \/\/ allow to lock in VM\n+  MUTEX_DEFN(tty_lock                        , PaddedMutex  , tty);      \/\/ allow to lock in VM\n@@ -226,1 +219,1 @@\n-  def(STS_lock                     , PaddedMonitor, nosafepoint);\n+  MUTEX_DEFN(STS_lock                        , PaddedMonitor, nosafepoint);\n@@ -229,1 +222,1 @@\n-    def(CGC_lock                   , PaddedMonitor, nosafepoint);\n+    MUTEX_DEFN(CGC_lock                      , PaddedMonitor, nosafepoint);\n@@ -231,1 +224,1 @@\n-    def(G1DetachedRefinementStats_lock, PaddedMutex, nosafepoint-2);\n+    MUTEX_DEFN(G1DetachedRefinementStats_lock, PaddedMutex  , nosafepoint-2);\n@@ -233,4 +226,4 @@\n-    def(FreeList_lock              , PaddedMutex  , service-1);\n-    def(OldSets_lock               , PaddedMutex  , nosafepoint);\n-    def(Uncommit_lock              , PaddedMutex  , service-2);\n-    def(RootRegionScan_lock        , PaddedMonitor, nosafepoint-1);\n+    MUTEX_DEFN(FreeList_lock                 , PaddedMutex  , service-1);\n+    MUTEX_DEFN(OldSets_lock                  , PaddedMutex  , nosafepoint);\n+    MUTEX_DEFN(Uncommit_lock                 , PaddedMutex  , service-2);\n+    MUTEX_DEFN(RootRegionScan_lock           , PaddedMonitor, nosafepoint-1);\n@@ -238,2 +231,2 @@\n-    def(MarkStackFreeList_lock     , PaddedMutex  , nosafepoint);\n-    def(MarkStackChunkList_lock    , PaddedMutex  , nosafepoint);\n+    MUTEX_DEFN(MarkStackFreeList_lock        , PaddedMutex  , nosafepoint);\n+    MUTEX_DEFN(MarkStackChunkList_lock       , PaddedMutex  , nosafepoint);\n@@ -241,1 +234,1 @@\n-    def(MonitoringSupport_lock     , PaddedMutex  , service-1);      \/\/ used for serviceability monitoring support\n+    MUTEX_DEFN(MonitoringSupport_lock        , PaddedMutex  , service-1);      \/\/ used for serviceability monitoring support\n@@ -243,3 +236,3 @@\n-  def(StringDedup_lock             , PaddedMonitor, nosafepoint);\n-  def(StringDedupIntern_lock       , PaddedMutex  , nosafepoint);\n-  def(RawMonitor_lock              , PaddedMutex  , nosafepoint-1);\n+  MUTEX_DEFN(StringDedup_lock                , PaddedMonitor, nosafepoint);\n+  MUTEX_DEFN(StringDedupIntern_lock          , PaddedMutex  , nosafepoint);\n+  MUTEX_DEFN(RawMonitor_lock                 , PaddedMutex  , nosafepoint-1);\n@@ -247,2 +240,2 @@\n-  def(Metaspace_lock               , PaddedMutex  , nosafepoint-3);\n-  def(MetaspaceCritical_lock       , PaddedMonitor, nosafepoint-1);\n+  MUTEX_DEFN(Metaspace_lock                  , PaddedMutex  , nosafepoint-3);\n+  MUTEX_DEFN(MetaspaceCritical_lock          , PaddedMonitor, nosafepoint-1);\n@@ -250,3 +243,3 @@\n-  def(Patching_lock                , PaddedMutex  , nosafepoint);      \/\/ used for safepointing and code patching.\n-  def(MonitorDeflation_lock        , PaddedMonitor, nosafepoint);      \/\/ used for monitor deflation thread operations\n-  def(Service_lock                 , PaddedMonitor, service);      \/\/ used for service thread operations\n+  MUTEX_DEFN(Patching_lock                   , PaddedMutex  , nosafepoint);      \/\/ used for safepointing and code patching.\n+  MUTEX_DEFN(MonitorDeflation_lock           , PaddedMonitor, nosafepoint);      \/\/ used for monitor deflation thread operations\n+  MUTEX_DEFN(Service_lock                    , PaddedMonitor, service);      \/\/ used for service thread operations\n@@ -255,1 +248,1 @@\n-    def(Notification_lock          , PaddedMonitor, service);  \/\/ used for notification thread operations\n+    MUTEX_DEFN(Notification_lock             , PaddedMonitor, service);  \/\/ used for notification thread operations\n@@ -260,7 +253,7 @@\n-  def(JmethodIdCreation_lock       , PaddedMutex  , nosafepoint-2); \/\/ used for creating jmethodIDs.\n-  def(InvokeMethodTable_lock       , PaddedMutex  , safepoint);\n-  def(SharedDictionary_lock        , PaddedMutex  , safepoint);\n-  def(VMStatistic_lock             , PaddedMutex  , safepoint);\n-  def(SignatureHandlerLibrary_lock , PaddedMutex  , safepoint);\n-  def(SymbolArena_lock             , PaddedMutex  , nosafepoint);\n-  def(ExceptionCache_lock          , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(JmethodIdCreation_lock          , PaddedMutex  , nosafepoint-2); \/\/ used for creating jmethodIDs.\n+  MUTEX_DEFN(InvokeMethodTable_lock          , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(SharedDictionary_lock           , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(VMStatistic_lock                , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(SignatureHandlerLibrary_lock    , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(SymbolArena_lock                , PaddedMutex  , nosafepoint);\n+  MUTEX_DEFN(ExceptionCache_lock             , PaddedMutex  , safepoint);\n@@ -268,1 +261,1 @@\n-  def(FullGCALot_lock              , PaddedMutex  , safepoint); \/\/ a lock to make FullGCALot MT safe\n+  MUTEX_DEFN(FullGCALot_lock                 , PaddedMutex  , safepoint); \/\/ a lock to make FullGCALot MT safe\n@@ -270,1 +263,1 @@\n-  def(BeforeExit_lock              , PaddedMonitor, safepoint);\n+  MUTEX_DEFN(BeforeExit_lock                 , PaddedMonitor, safepoint);\n@@ -272,2 +265,2 @@\n-  def(NonJavaThreadsList_lock      , PaddedMutex,   nosafepoint-1);\n-  def(NonJavaThreadsListSync_lock  , PaddedMutex,   nosafepoint);\n+  MUTEX_DEFN(NonJavaThreadsList_lock         , PaddedMutex  , nosafepoint-1);\n+  MUTEX_DEFN(NonJavaThreadsListSync_lock     , PaddedMutex  , nosafepoint);\n@@ -275,4 +268,4 @@\n-  def(RetData_lock                 , PaddedMutex  , safepoint);\n-  def(Terminator_lock              , PaddedMonitor, safepoint, true);\n-  def(InitCompleted_lock           , PaddedMonitor, nosafepoint);\n-  def(Notify_lock                  , PaddedMonitor, safepoint, true);\n+  MUTEX_DEFN(RetData_lock                    , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(Terminator_lock                 , PaddedMonitor, safepoint, true);\n+  MUTEX_DEFN(InitCompleted_lock              , PaddedMonitor, nosafepoint);\n+  MUTEX_DEFN(Notify_lock                     , PaddedMonitor, safepoint, true);\n@@ -280,2 +273,1 @@\n-  def(Heap_lock                    , PaddedMonitor, safepoint); \/\/ Doesn't safepoint check during termination.\n-  def(JfieldIdCreation_lock        , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(JfieldIdCreation_lock           , PaddedMutex  , safepoint);\n@@ -283,5 +275,5 @@\n-  def(CompiledIC_lock              , PaddedMutex  , nosafepoint);  \/\/ locks VtableStubs_lock, InlineCacheBuffer_lock\n-  def(MethodCompileQueue_lock      , PaddedMonitor, safepoint);\n-  def(CompileStatistics_lock       , PaddedMutex  , safepoint);\n-  def(DirectivesStack_lock         , PaddedMutex  , nosafepoint);\n-  def(MultiArray_lock              , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(CompiledIC_lock                 , PaddedMutex  , nosafepoint);  \/\/ locks VtableStubs_lock, InlineCacheBuffer_lock\n+  MUTEX_DEFN(MethodCompileQueue_lock         , PaddedMonitor, safepoint);\n+  MUTEX_DEFN(CompileStatistics_lock          , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(DirectivesStack_lock            , PaddedMutex  , nosafepoint);\n+  MUTEX_DEFN(MultiArray_lock                 , PaddedMutex  , safepoint);\n@@ -289,4 +281,4 @@\n-  def(JvmtiThreadState_lock        , PaddedMutex  , safepoint);   \/\/ Used by JvmtiThreadState\/JvmtiEventController\n-  def(EscapeBarrier_lock           , PaddedMonitor, nosafepoint); \/\/ Used to synchronize object reallocation\/relocking triggered by JVMTI\n-  def(JvmtiVTMSTransition_lock     , PaddedMonitor, safepoint);   \/\/ used for Virtual Thread Mount State transition management\n-  def(Management_lock              , PaddedMutex  , safepoint);   \/\/ used for JVM management\n+  MUTEX_DEFN(JvmtiThreadState_lock           , PaddedMutex  , safepoint);   \/\/ Used by JvmtiThreadState\/JvmtiEventController\n+  MUTEX_DEFN(EscapeBarrier_lock              , PaddedMonitor, nosafepoint); \/\/ Used to synchronize object reallocation\/relocking triggered by JVMTI\n+  MUTEX_DEFN(JvmtiVTMSTransition_lock        , PaddedMonitor, safepoint);   \/\/ used for Virtual Thread Mount State transition management\n+  MUTEX_DEFN(Management_lock                 , PaddedMutex  , safepoint);   \/\/ used for JVM management\n@@ -294,2 +286,2 @@\n-  def(ConcurrentGCBreakpoints_lock , PaddedMonitor, safepoint, true);\n-  def(TouchedMethodLog_lock        , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(ConcurrentGCBreakpoints_lock    , PaddedMonitor, safepoint, true);\n+  MUTEX_DEFN(TouchedMethodLog_lock           , PaddedMutex  , safepoint);\n@@ -297,4 +289,4 @@\n-  def(CompileThread_lock           , PaddedMonitor, safepoint);\n-  def(PeriodicTask_lock            , PaddedMonitor, safepoint, true);\n-  def(RedefineClasses_lock         , PaddedMonitor, safepoint);\n-  def(Verify_lock                  , PaddedMutex,   safepoint);\n+  MUTEX_DEFN(CompileThread_lock              , PaddedMonitor, safepoint);\n+  MUTEX_DEFN(PeriodicTask_lock               , PaddedMonitor, safepoint, true);\n+  MUTEX_DEFN(RedefineClasses_lock            , PaddedMonitor, safepoint);\n+  MUTEX_DEFN(Verify_lock                     , PaddedMutex  , safepoint);\n@@ -303,1 +295,1 @@\n-    def(Compilation_lock           , PaddedMonitor, nosafepoint);\n+    MUTEX_DEFN(Compilation_lock              , PaddedMonitor, nosafepoint);\n@@ -307,4 +299,4 @@\n-  def(JfrBuffer_lock               , PaddedMutex  , nosafepoint);\n-  def(JfrMsg_lock                  , PaddedMonitor, nosafepoint-3);\n-  def(JfrStacktrace_lock           , PaddedMutex  , stackwatermark-1);\n-  def(JfrThreadSampler_lock        , PaddedMonitor, nosafepoint);\n+  MUTEX_DEFN(JfrBuffer_lock                  , PaddedMutex  , nosafepoint);\n+  MUTEX_DEFN(JfrMsg_lock                     , PaddedMonitor, nosafepoint-3);\n+  MUTEX_DEFN(JfrStacktrace_lock              , PaddedMutex  , stackwatermark-1);\n+  MUTEX_DEFN(JfrThreadSampler_lock           , PaddedMonitor, nosafepoint);\n@@ -314,1 +306,1 @@\n-  def(UnsafeJlong_lock             , PaddedMutex  , nosafepoint);\n+  MUTEX_DEFN(UnsafeJlong_lock                , PaddedMutex  , nosafepoint);\n@@ -317,7 +309,7 @@\n-  def(ContinuationRelativize_lock  , PaddedMonitor, nosafepoint-3);\n-  def(CodeHeapStateAnalytics_lock  , PaddedMutex  , safepoint);\n-  def(ThreadsSMRDelete_lock        , PaddedMonitor, nosafepoint-3); \/\/ Holds ConcurrentHashTableResize_lock\n-  def(ThreadIdTableCreate_lock     , PaddedMutex  , safepoint);\n-  def(SharedDecoder_lock           , PaddedMutex  , tty-1);\n-  def(DCmdFactory_lock             , PaddedMutex  , nosafepoint);\n-  def(NMTQuery_lock                , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(ContinuationRelativize_lock     , PaddedMonitor, nosafepoint-3);\n+  MUTEX_DEFN(CodeHeapStateAnalytics_lock     , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(ThreadsSMRDelete_lock           , PaddedMonitor, nosafepoint-3); \/\/ Holds ConcurrentHashTableResize_lock\n+  MUTEX_DEFN(ThreadIdTableCreate_lock        , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(SharedDecoder_lock              , PaddedMutex  , tty-1);\n+  MUTEX_DEFN(DCmdFactory_lock                , PaddedMutex  , nosafepoint);\n+  MUTEX_DEFN(NMTQuery_lock                   , PaddedMutex  , safepoint);\n@@ -326,1 +318,1 @@\n-  def(CDSClassFileStream_lock      , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(CDSClassFileStream_lock         , PaddedMutex  , safepoint);\n@@ -328,6 +320,6 @@\n-  def(DumpTimeTable_lock           , PaddedMutex  , nosafepoint);\n-  def(CDSLambda_lock               , PaddedMutex  , nosafepoint);\n-  def(DumpRegion_lock              , PaddedMutex  , nosafepoint);\n-  def(ClassListFile_lock           , PaddedMutex  , nosafepoint);\n-  def(LambdaFormInvokers_lock      , PaddedMutex  , safepoint);\n-  def(ScratchObjects_lock          , PaddedMutex  , nosafepoint-1); \/\/ Holds DumpTimeTable_lock\n+  MUTEX_DEFN(DumpTimeTable_lock              , PaddedMutex  , nosafepoint);\n+  MUTEX_DEFN(CDSLambda_lock                  , PaddedMutex  , nosafepoint);\n+  MUTEX_DEFN(DumpRegion_lock                 , PaddedMutex  , nosafepoint);\n+  MUTEX_DEFN(ClassListFile_lock              , PaddedMutex  , nosafepoint);\n+  MUTEX_DEFN(LambdaFormInvokers_lock         , PaddedMutex  , safepoint);\n+  MUTEX_DEFN(ScratchObjects_lock             , PaddedMutex  , nosafepoint-1); \/\/ Holds DumpTimeTable_lock\n@@ -335,2 +327,2 @@\n-  def(Bootclasspath_lock           , PaddedMutex  , nosafepoint);\n-  def(Zip_lock                     , PaddedMonitor, nosafepoint-1); \/\/ Holds DumpTimeTable_lock\n+  MUTEX_DEFN(Bootclasspath_lock              , PaddedMutex  , nosafepoint);\n+  MUTEX_DEFN(Zip_lock                        , PaddedMonitor, nosafepoint-1); \/\/ Holds DumpTimeTable_lock\n@@ -340,1 +332,1 @@\n-  def(JVMCIRuntime_lock            , PaddedMonitor, safepoint, true);\n+  MUTEX_DEFN(JVMCIRuntime_lock               , PaddedMonitor, safepoint, true);\n@@ -344,15 +336,15 @@\n-  defl(InlineCacheBuffer_lock      , PaddedMutex  , CompiledIC_lock);\n-  defl(VtableStubs_lock            , PaddedMutex  , CompiledIC_lock);  \/\/ Also holds DumpTimeTable_lock\n-  defl(CodeCache_lock              , PaddedMonitor, VtableStubs_lock);\n-  defl(CompiledMethod_lock         , PaddedMutex  , CodeCache_lock);\n-\n-  defl(Threads_lock                , PaddedMonitor, CompileThread_lock, true);\n-  defl(Compile_lock                , PaddedMutex  , MethodCompileQueue_lock);\n-  defl(AdapterHandlerLibrary_lock  , PaddedMutex  , InvokeMethodTable_lock);\n-  defl(Heap_lock                   , PaddedMonitor, AdapterHandlerLibrary_lock);\n-\n-  defl(PerfDataMemAlloc_lock       , PaddedMutex  , Heap_lock);\n-  defl(PerfDataManager_lock        , PaddedMutex  , Heap_lock);\n-  defl(ClassLoaderDataGraph_lock   , PaddedMutex  , MultiArray_lock);\n-  defl(VMOperation_lock            , PaddedMonitor, Heap_lock, true);\n-  defl(ClassInitError_lock         , PaddedMonitor, Threads_lock);\n+  MUTEX_DEFL(InlineCacheBuffer_lock         , PaddedMutex  , CompiledIC_lock);\n+  MUTEX_DEFL(VtableStubs_lock               , PaddedMutex  , CompiledIC_lock);  \/\/ Also holds DumpTimeTable_lock\n+  MUTEX_DEFL(CodeCache_lock                 , PaddedMonitor, VtableStubs_lock);\n+  MUTEX_DEFL(CompiledMethod_lock            , PaddedMutex  , CodeCache_lock);\n+\n+  MUTEX_DEFL(Threads_lock                   , PaddedMonitor, CompileThread_lock, true);\n+  MUTEX_DEFL(Compile_lock                   , PaddedMutex  , MethodCompileQueue_lock);\n+  MUTEX_DEFL(AdapterHandlerLibrary_lock     , PaddedMutex  , InvokeMethodTable_lock);\n+  MUTEX_DEFL(Heap_lock                      , PaddedMonitor, AdapterHandlerLibrary_lock);\n+\n+  MUTEX_DEFL(PerfDataMemAlloc_lock          , PaddedMutex  , Heap_lock);\n+  MUTEX_DEFL(PerfDataManager_lock           , PaddedMutex  , Heap_lock);\n+  MUTEX_DEFL(ClassLoaderDataGraph_lock      , PaddedMutex  , MultiArray_lock);\n+  MUTEX_DEFL(VMOperation_lock               , PaddedMonitor, Heap_lock, true);\n+  MUTEX_DEFL(ClassInitError_lock            , PaddedMonitor, Threads_lock);\n@@ -361,2 +353,2 @@\n-    defl(G1OldGCCount_lock         , PaddedMonitor, Threads_lock, true);\n-    defl(G1RareEvent_lock          , PaddedMutex  , Threads_lock, true);\n+    MUTEX_DEFL(G1OldGCCount_lock            , PaddedMonitor, Threads_lock, true);\n+    MUTEX_DEFL(G1RareEvent_lock             , PaddedMutex  , Threads_lock, true);\n@@ -365,1 +357,1 @@\n-  defl(CompileTaskAlloc_lock       , PaddedMutex ,  MethodCompileQueue_lock);\n+  MUTEX_DEFL(CompileTaskAlloc_lock          , PaddedMutex  ,  MethodCompileQueue_lock);\n@@ -368,1 +360,1 @@\n-    defl(PSOldGenExpand_lock   , PaddedMutex , Heap_lock, true);\n+    MUTEX_DEFL(PSOldGenExpand_lock          , PaddedMutex  , Heap_lock, true);\n@@ -371,4 +363,4 @@\n-  defl(OopMapCacheAlloc_lock       , PaddedMutex ,  Threads_lock, true);\n-  defl(Module_lock                 , PaddedMutex ,  ClassLoaderDataGraph_lock);\n-  defl(SystemDictionary_lock       , PaddedMonitor, Module_lock);\n-  defl(JNICritical_lock            , PaddedMonitor, AdapterHandlerLibrary_lock); \/\/ used for JNI critical regions\n+  MUTEX_DEFL(OopMapCacheAlloc_lock          , PaddedMutex  ,  Threads_lock, true);\n+  MUTEX_DEFL(Module_lock                    , PaddedMutex  ,  ClassLoaderDataGraph_lock);\n+  MUTEX_DEFL(SystemDictionary_lock          , PaddedMonitor, Module_lock);\n+  MUTEX_DEFL(JNICritical_lock               , PaddedMonitor, AdapterHandlerLibrary_lock); \/\/ used for JNI critical regions\n@@ -377,1 +369,1 @@\n-  defl(JVMCI_lock                  , PaddedMonitor, JVMCIRuntime_lock);\n+  MUTEX_DEFL(JVMCI_lock                     , PaddedMonitor, JVMCIRuntime_lock);\n@@ -381,0 +373,6 @@\n+#undef MUTEX_DEFL\n+#undef MUTEX_DEFN\n+#undef MUTEX_DEF\n+#undef MUTEX_STORAGE\n+#undef MUTEX_STORAGE_NAME\n+\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":114,"deletions":116,"binary":false,"changes":230,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-extern Mutex* tty_lock;                          \/\/ lock to synchronize output.\n+extern Mutex*   tty_lock;                          \/\/ lock to synchronize output.\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"runtime\/mutexLocker.hpp\"\n@@ -436,1 +437,0 @@\n-extern Mutex* tty_lock;\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}