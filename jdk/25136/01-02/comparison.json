{"files":[{"patch":"@@ -100,1 +100,1 @@\n-template <LogTagType IGNORED, LogTagType T2 = LogTag::__NO_TAG, LogTagType T1 = LogTag::__NO_TAG, LogTagType T3 = LogTag::__NO_TAG,\n+template <LogTagType IGNORED, LogTagType T1 = LogTag::__NO_TAG, LogTagType T2 = LogTag::__NO_TAG, LogTagType T3 = LogTag::__NO_TAG,\n@@ -116,1 +116,1 @@\n-      return LogTagSetMapping<LogTag::_cds, T2, T3, T4>::tagset().is_level(level);\n+      return LogTagSetMapping<LogTag::_cds, T1, T2, T3, T4>::tagset().is_level(level);\n@@ -118,1 +118,1 @@\n-      return LogTagSetMapping<LogTag::_aot, T2, T3, T4>::tagset().is_level(level);\n+      return LogTagSetMapping<LogTag::_aot, T1, T2, T3, T4>::tagset().is_level(level);\n","filename":"src\/hotspot\/share\/cds\/aotLogging.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-    log_trace(cds)(\"Ref: [\" PTR_FORMAT \"] -> \" PTR_FORMAT \" => \" PTR_FORMAT,\n+    log_trace(aot)(\"Ref: [\" PTR_FORMAT \"] -> \" PTR_FORMAT \" => \" PTR_FORMAT,\n@@ -319,1 +319,1 @@\n-    log_error(cds)(\"Failed to reserve %zu bytes of output buffer.\", buffer_size);\n+    aot_log_error(aot)(\"Failed to reserve %zu bytes of output buffer.\", buffer_size);\n@@ -368,3 +368,3 @@\n-    log_error(cds)(\"my_archive_requested_bottom = \" INTPTR_FORMAT, p2i(my_archive_requested_bottom));\n-    log_error(cds)(\"my_archive_requested_top    = \" INTPTR_FORMAT, p2i(my_archive_requested_top));\n-    log_error(cds)(\"SharedBaseAddress (\" INTPTR_FORMAT \") is too high. \"\n+    aot_log_error(aot)(\"my_archive_requested_bottom = \" INTPTR_FORMAT, p2i(my_archive_requested_bottom));\n+    aot_log_error(aot)(\"my_archive_requested_top    = \" INTPTR_FORMAT, p2i(my_archive_requested_top));\n+    aot_log_error(aot)(\"SharedBaseAddress (\" INTPTR_FORMAT \") is too high. \"\n@@ -428,1 +428,1 @@\n-      log_info(cds, hashtables)(\"Expanded _src_obj_table table to %d\", _src_obj_table.table_size());\n+      log_info(aot, hashtables)(\"Expanded _src_obj_table table to %d\", _src_obj_table.table_size());\n@@ -680,1 +680,1 @@\n-      log_info(cds, hashtables)(\"Expanded _buffered_to_src_table table to %d\", _buffered_to_src_table.table_size());\n+      log_info(aot, hashtables)(\"Expanded _buffered_to_src_table table to %d\", _buffered_to_src_table.table_size());\n@@ -690,1 +690,1 @@\n-  log_trace(cds)(\"Copy: \" PTR_FORMAT \" ==> \" PTR_FORMAT \" %d\", p2i(src), p2i(dest), bytes);\n+  log_trace(aot)(\"Copy: \" PTR_FORMAT \" ==> \" PTR_FORMAT \" %d\", p2i(src), p2i(dest), bytes);\n@@ -927,1 +927,1 @@\n-    if (log_is_enabled(Debug, cds, class)) {\n+    if (aot_log_is_enabled(Debug, aot, class)) {\n@@ -929,1 +929,1 @@\n-      log_debug(cds, class)(\"klasses[%5d] = \" PTR_FORMAT \" %-5s %s%s%s%s%s%s%s%s\", i,\n+      aot_log_debug(aot, class)(\"klasses[%5d] = \" PTR_FORMAT \" %-5s %s%s%s%s%s%s%s%s\", i,\n@@ -1054,1 +1054,1 @@\n-    log_debug(cds)(\"Relocating archive from [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] to \"\n+    aot_log_debug(aot)(\"Relocating archive from [\" INTPTR_FORMAT \" - \" INTPTR_FORMAT \"] to \"\n@@ -1578,2 +1578,2 @@\n-  if (log_is_enabled(Info, cds)) {\n-    log_info(cds)(\"Full module graph = %s\", CDSConfig::is_dumping_full_module_graph() ? \"enabled\" : \"disabled\");\n+  if (log_is_enabled(Info, aot)) {\n+    log_info(aot)(\"Full module graph = %s\", CDSConfig::is_dumping_full_module_graph() ? \"enabled\" : \"disabled\");\n@@ -1617,1 +1617,1 @@\n-  log_debug(cds)(\"total   : %9zu [100.0%% of total] out of %9zu bytes [%5.1f%% used]\",\n+  aot_log_debug(aot)(\"total   : %9zu [100.0%% of total] out of %9zu bytes [%5.1f%% used]\",\n@@ -1622,1 +1622,1 @@\n-  log_debug(cds)(\"bm space: %9zu [ %4.1f%% of total] out of %9zu bytes [100.0%% used]\",\n+  aot_log_debug(aot)(\"bm space: %9zu [ %4.1f%% of total] out of %9zu bytes [100.0%% used]\",\n@@ -1630,1 +1630,1 @@\n-  log_debug(cds)(\"hp space: %9zu [ %4.1f%% of total] out of %9zu bytes [100.0%% used] at \" INTPTR_FORMAT,\n+  aot_log_debug(aot)(\"hp space: %9zu [ %4.1f%% of total] out of %9zu bytes [100.0%% used] at \" INTPTR_FORMAT,\n@@ -1641,1 +1641,1 @@\n-  log_error(cds)(\"Unable to allocate from '%s' region: Please reduce the number of shared classes.\", name);\n+  log_error(aot)(\"Unable to allocate from '%s' region: Please reduce the number of shared classes.\", name);\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  LogMessage(cds) msg;\n+  LogMessage(aot) msg;\n","filename":"src\/hotspot\/share\/cds\/dumpAllocStats.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1133,2 +1133,16 @@\n-ATTRIBUTE_PRINTF(2, 0)\n-static void report_loading_error_helper(LogStream& ls, const char* format, va_list ap) {\n+void MetaspaceShared::report_loading_error(const char* format, ...) {\n+  \/\/ When using AOT cache, errors messages are always printed on the error channel.\n+  LogStream ls_aot(LogLevel::Error, LogTagSetMapping<LOG_TAGS(aot)>::tagset());\n+\n+  \/\/ If we are loading load the default CDS archive, it may fail due to incompatible VM options.\n+  \/\/ Print at the info level to avoid excessive verbosity.\n+  \/\/ However, if the user has specified a CDS archive (or AOT cache), they would be interested in\n+  \/\/ knowing that the loading fails, so we print at the error level.\n+  LogLevelType level = (!CDSConfig::is_using_archive() || CDSConfig::is_using_only_default_archive()) ?\n+                        LogLevel::Info : LogLevel::Error;\n+  LogStream ls_cds(level, LogTagSetMapping<LOG_TAGS(cds)>::tagset());\n+\n+  LogStream& ls = CDSConfig::new_aot_flags_used() ? ls_aot : ls_cds;\n+  va_list ap;\n+  va_start(ap, format);\n+\n@@ -1141,1 +1155,0 @@\n-\n@@ -1143,1 +1156,0 @@\n-}\n@@ -1145,24 +1157,1 @@\n-void MetaspaceShared::report_loading_error(const char* format, ...) {\n-  if (CDSConfig::new_aot_flags_used()) {\n-    \/\/ When using AOT cache, errors messages are always printed on the error channel.\n-    Log(aot) log;\n-    LogStream ls(log.error());\n-    va_list ap;\n-    va_start(ap, format);\n-    report_loading_error_helper(ls, format, ap);\n-    va_end(ap);\n-  } else {\n-    \/\/ If the user doesn't specify any CDS\/AOT options, we will try to load the default CDS archive, which\n-    \/\/ may fail due to incompatible VM options. Print at the info level to avoid excessive verbosity.\n-    \/\/ However, if the user has specified a CDS archive (or AOT cache), they would be interested in\n-    \/\/ knowing that the loading fails, so we print at the error level.\n-    Log(cds) log;\n-    LogStream ls_error(log.error());\n-    LogStream ls_info(log.info());\n-    LogStream& ls = (!CDSConfig::is_using_archive()) || CDSConfig::is_using_only_default_archive() ? ls_info : ls_error;\n-\n-    va_list ap;\n-    va_start(ap, format);\n-    report_loading_error_helper(ls, format, ap);\n-    va_end(ap);\n-  }\n+  va_end(ap);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":17,"deletions":28,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        String logArg = \"-Xlog:cds=debug,cds+reloc=debug,cds+heap\";\n+        String logArg = \"-Xlog:cds=debug,cds+reloc=debug,aot+heap\";\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ArchiveRelocationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-            .addPrefix(\"-cp\", appJar, \"-Xlog:class+load,cds=debug\",\n+            .addPrefix(\"-cp\", appJar, \"-Xlog:class+load=debug,cds=debug,class+path=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaWithJavaAgent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-            .addVmArgs(\"-Xlog:cds+class=debug\", \"-Xlog:aot\", \"-Xlog:cds\")\n+            .addVmArgs(\"-Xlog:aot+class=debug\", \"-Xlog:aot\", \"-Xlog:cds\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/AOTCacheSupportForCustomLoaders.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-            .addVmArgs(\"-Xlog:cds+class=debug\")\n+            .addVmArgs(\"-Xlog:aot+class=debug\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/VerifierFailOver.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-                \"-Xlog:cds,aot+load,cds+class=debug\",\n+                \"-Xlog:cds,aot+load,cds+class=debug,aot+class=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/BulkLoaderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,0 +76,1 @@\n+                \"-Xlog:aot\",\n@@ -77,0 +78,1 @@\n+                \"-Xlog:aot+class=debug\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/FakeCodeLocation.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-             \"-Xlog:cds=debug\", \/\/ test detailed metadata info printing\n+             \"-Xlog:cds=debug,aot=debug\", \/\/ test detailed metadata info printing\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/DynamicLotsOfClasses.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}