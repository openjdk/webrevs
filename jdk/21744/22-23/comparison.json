{"files":[{"patch":"@@ -61,0 +61,8 @@\n+static void buildJniFunctionName(const char *sym, const char *cname,\n+                                 char *jniEntryName) {\n+    strcpy(jniEntryName, sym);\n+    if (cname != NULL) {\n+        strcat(jniEntryName, \"_\");\n+        strcat(jniEntryName, cname);\n+    }\n+}\n","filename":"src\/java.base\/share\/native\/libjava\/NativeLibraries.c","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -359,3 +359,0 @@\n-void buildJniFunctionName(const char *sym, const char *cname,\n-                          char *jniEntryName);\n-\n","filename":"src\/java.base\/share\/native\/libjava\/jni_util.h","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,9 +54,0 @@\n-void buildJniFunctionName(const char *sym, const char *cname,\n-                          char *jniEntryName) {\n-    strcpy(jniEntryName, sym);\n-    if (cname != NULL) {\n-        strcat(jniEntryName, \"_\");\n-        strcat(jniEntryName, cname);\n-    }\n-}\n-\n","filename":"src\/java.base\/unix\/native\/libjava\/jni_util_md.c","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -38,28 +38,0 @@\n-\/*\n- * Windows symbols can be simple like JNI_OnLoad or __stdcall format\n- * like _JNI_OnLoad@8. We need to handle both.\n- *\/\n-void buildJniFunctionName(const char *sym, const char *cname,\n-                          char *jniEntryName) {\n-    if (cname != NULL) {\n-        char *p = strrchr(sym, '@');\n-        if (p != NULL && p != sym) {\n-            \/\/ sym == _JNI_OnLoad@8\n-            strncpy(jniEntryName, sym, (p - sym));\n-            jniEntryName[(p-sym)] = '\\0';\n-            \/\/ jniEntryName == _JNI_OnLoad\n-            strcat(jniEntryName, \"_\");\n-            strcat(jniEntryName, cname);\n-            strcat(jniEntryName, p);\n-            \/\/jniEntryName == _JNI_OnLoad_cname@8\n-        } else {\n-            strcpy(jniEntryName, sym);\n-            strcat(jniEntryName, \"_\");\n-            strcat(jniEntryName, cname);\n-        }\n-    } else {\n-        strcpy(jniEntryName, sym);\n-    }\n-    return;\n-}\n-\n","filename":"src\/java.base\/windows\/native\/libjava\/jni_util_md.c","additions":0,"deletions":28,"binary":false,"changes":28,"status":"modified"}]}