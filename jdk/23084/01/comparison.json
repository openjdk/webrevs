{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -2315,8 +2315,8 @@\n-      if ( (info->vmsize == -1    && sscanf(buf, \"VmSize: \" SSIZE_FORMAT \" kB\", &info->vmsize) == 1) ||\n-           (info->vmpeak == -1    && sscanf(buf, \"VmPeak: \" SSIZE_FORMAT \" kB\", &info->vmpeak) == 1) ||\n-           (info->vmswap == -1    && sscanf(buf, \"VmSwap: \" SSIZE_FORMAT \" kB\", &info->vmswap) == 1) ||\n-           (info->vmhwm == -1     && sscanf(buf, \"VmHWM: \" SSIZE_FORMAT \" kB\", &info->vmhwm) == 1) ||\n-           (info->vmrss == -1     && sscanf(buf, \"VmRSS: \" SSIZE_FORMAT \" kB\", &info->vmrss) == 1) ||\n-           (info->rssanon == -1   && sscanf(buf, \"RssAnon: \" SSIZE_FORMAT \" kB\", &info->rssanon) == 1) || \/\/ Needs Linux 4.5\n-           (info->rssfile == -1   && sscanf(buf, \"RssFile: \" SSIZE_FORMAT \" kB\", &info->rssfile) == 1) || \/\/ Needs Linux 4.5\n-           (info->rssshmem == -1  && sscanf(buf, \"RssShmem: \" SSIZE_FORMAT \" kB\", &info->rssshmem) == 1)  \/\/ Needs Linux 4.5\n+      if ( (info->vmsize == -1    && sscanf(buf, \"VmSize: %zd kB\", &info->vmsize) == 1) ||\n+           (info->vmpeak == -1    && sscanf(buf, \"VmPeak: %zd kB\", &info->vmpeak) == 1) ||\n+           (info->vmswap == -1    && sscanf(buf, \"VmSwap: %zd kB\", &info->vmswap) == 1) ||\n+           (info->vmhwm == -1     && sscanf(buf, \"VmHWM: %zd kB\", &info->vmhwm) == 1) ||\n+           (info->vmrss == -1     && sscanf(buf, \"VmRSS: %zd kB\", &info->vmrss) == 1) ||\n+           (info->rssanon == -1   && sscanf(buf, \"RssAnon: %zd kB\", &info->rssanon) == 1) || \/\/ Needs Linux 4.5\n+           (info->rssfile == -1   && sscanf(buf, \"RssFile: %zd kB\", &info->rssfile) == 1) || \/\/ Needs Linux 4.5\n+           (info->rssshmem == -1  && sscanf(buf, \"RssShmem: %zd kB\", &info->rssshmem) == 1)  \/\/ Needs Linux 4.5\n@@ -2370,2 +2370,2 @@\n-    st->print_cr(\"Virtual Size: \" SSIZE_FORMAT \"K (peak: \" SSIZE_FORMAT \"K)\", info.vmsize, info.vmpeak);\n-    st->print(\"Resident Set Size: \" SSIZE_FORMAT \"K (peak: \" SSIZE_FORMAT \"K)\", info.vmrss, info.vmhwm);\n+    st->print_cr(\"Virtual Size: %zdK (peak: %zdK)\", info.vmsize, info.vmpeak);\n+    st->print(\"Resident Set Size: %zdK (peak: %zdK)\", info.vmrss, info.vmhwm);\n@@ -2373,1 +2373,1 @@\n-      st->print(\" (anon: \" SSIZE_FORMAT \"K, file: \" SSIZE_FORMAT \"K, shmem: \" SSIZE_FORMAT \"K)\",\n+      st->print(\" (anon: %zdK, file: %zdK, shmem: %zdK)\",\n@@ -2378,1 +2378,1 @@\n-      st->print_cr(\"Swapped out: \" SSIZE_FORMAT \"K\", info.vmswap);\n+      st->print_cr(\"Swapped out: %zdK\", info.vmswap);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -568,1 +568,1 @@\n-      tty->print_cr(\" extended to [\" INTPTR_FORMAT \", \" INTPTR_FORMAT \"] (\" SSIZE_FORMAT \" bytes)\",\n+      tty->print_cr(\" extended to [\" INTPTR_FORMAT \", \" INTPTR_FORMAT \"] (%zd bytes)\",\n@@ -1494,4 +1494,4 @@\n-  tty->print_cr(\"Number of elements in freelist: \" SSIZE_FORMAT,       freelists_length());\n-  tty->print_cr(\"Allocated in freelist:          \" SSIZE_FORMAT \"kB\",  bytes_allocated_in_freelists()\/K);\n-  tty->print_cr(\"Unused bytes in CodeBlobs:      \" SSIZE_FORMAT \"kB\",  (wasted_bytes\/K));\n-  tty->print_cr(\"Segment map size:               \" SSIZE_FORMAT \"kB\",  allocated_segments()\/K); \/\/ 1 byte per segment\n+  tty->print_cr(\"Number of elements in freelist: %zd\",       freelists_length());\n+  tty->print_cr(\"Allocated in freelist:          %zdkB\",  bytes_allocated_in_freelists()\/K);\n+  tty->print_cr(\"Unused bytes in CodeBlobs:      %zdkB\",  (wasted_bytes\/K));\n+  tty->print_cr(\"Segment map size:               %zdkB\",  allocated_segments()\/K); \/\/ 1 byte per segment\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -4,0 +4,1 @@\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +69,1 @@\n-      assert(_partitions->in_free_set(_partition, _idx), \"Boundaries or find_last_set_bit failed: \" SSIZE_FORMAT, _idx);\n+      assert(_partitions->in_free_set(_partition, _idx), \"Boundaries or find_last_set_bit failed: %zd\", _idx);\n@@ -99,1 +100,1 @@\n-      assert(_partitions->in_free_set(_partition, _idx), \"Boundaries or find_last_set_bit failed: \" SSIZE_FORMAT, _idx);\n+      assert(_partitions->in_free_set(_partition, _idx), \"Boundaries or find_last_set_bit failed: %zd\", _idx);\n@@ -117,2 +118,2 @@\n-  log_debug(gc)(\"Mutator range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"], Collector range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT\n-               \"], Old Collector range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"]\",\n+  log_debug(gc)(\"Mutator range [%zd, %zd], Collector range [%zd, %zd\"\n+               \"], Old Collector range [%zd, %zd]\",\n@@ -125,3 +126,3 @@\n-  log_debug(gc)(\"Empty Mutator range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT\n-               \"], Empty Collector range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT\n-               \"], Empty Old Collecto range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"]\",\n+  log_debug(gc)(\"Empty Mutator range [%zd, %zd\"\n+               \"], Empty Collector range [%zd, %zd\"\n+               \"], Empty Old Collecto range [%zd, %zd]\",\n@@ -159,1 +160,1 @@\n-  log_debug(gc)(SSIZE_FORMAT_W(6) \": \" SIZE_FORMAT_X_0 \" 0x\" SIZE_FORMAT_X_0 \" 0x\" SIZE_FORMAT_X_0 \" 0x\" SIZE_FORMAT_X_0,\n+  log_debug(gc)(\"%6zd : \" SIZE_FORMAT_X_0 \" 0x\" SIZE_FORMAT_X_0 \" 0x\" SIZE_FORMAT_X_0 \" 0x\" SIZE_FORMAT_X_0,\n@@ -431,1 +432,1 @@\n-          \"Orig partition used: \" SIZE_FORMAT \" must exceed moved used: \" SIZE_FORMAT \" within region \" SSIZE_FORMAT,\n+          \"Orig partition used: \" SIZE_FORMAT \" must exceed moved used: \" SIZE_FORMAT \" within region %zd\",\n@@ -546,1 +547,1 @@\n-    assert(in_free_set(which_partition, idx), \"Boundaries or find_last_set_bit failed: \" SSIZE_FORMAT, idx);\n+    assert(in_free_set(which_partition, idx), \"Boundaries or find_last_set_bit failed: %zd\", idx);\n@@ -565,1 +566,1 @@\n-    assert(in_free_set(which_partition, idx), \"Boundaries or find_last_set_bit failed: \" SSIZE_FORMAT, idx);\n+    assert(in_free_set(which_partition, idx), \"Boundaries or find_last_set_bit failed: %zd\", idx);\n@@ -628,1 +629,1 @@\n-          \"leftmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT, leftmost(ShenandoahFreeSetPartitionId::Mutator),  _max);\n+          \"leftmost in bounds: %zd < %zd\", leftmost(ShenandoahFreeSetPartitionId::Mutator),  _max);\n@@ -630,1 +631,1 @@\n-          \"rightmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT, rightmost(ShenandoahFreeSetPartitionId::Mutator),  _max);\n+          \"rightmost in bounds: %zd < %zd\", rightmost(ShenandoahFreeSetPartitionId::Mutator),  _max);\n@@ -634,1 +635,1 @@\n-          \"leftmost region should be free: \" SSIZE_FORMAT,  leftmost(ShenandoahFreeSetPartitionId::Mutator));\n+          \"leftmost region should be free: %zd\",  leftmost(ShenandoahFreeSetPartitionId::Mutator));\n@@ -637,1 +638,1 @@\n-          \"rightmost region should be free: \" SSIZE_FORMAT, rightmost(ShenandoahFreeSetPartitionId::Mutator));\n+          \"rightmost region should be free: %zd\", rightmost(ShenandoahFreeSetPartitionId::Mutator));\n@@ -644,1 +645,1 @@\n-          \"free regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free regions before the leftmost: %zd, bound %zd\",\n@@ -647,1 +648,1 @@\n-          \"free regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free regions past the rightmost: %zd, bound %zd\",\n@@ -653,1 +654,1 @@\n-          \"free empty regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free empty regions before the leftmost: %zd, bound %zd\",\n@@ -656,1 +657,1 @@\n-          \"free empty regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free empty regions past the rightmost: %zd, bound %zd\",\n@@ -660,1 +661,1 @@\n-  assert (leftmost(ShenandoahFreeSetPartitionId::Collector) <= _max, \"leftmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT,\n+  assert (leftmost(ShenandoahFreeSetPartitionId::Collector) <= _max, \"leftmost in bounds: %zd < %zd\",\n@@ -662,1 +663,1 @@\n-  assert (rightmost(ShenandoahFreeSetPartitionId::Collector) < _max, \"rightmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT,\n+  assert (rightmost(ShenandoahFreeSetPartitionId::Collector) < _max, \"rightmost in bounds: %zd < %zd\",\n@@ -667,1 +668,1 @@\n-          \"leftmost region should be free: \" SSIZE_FORMAT,  leftmost(ShenandoahFreeSetPartitionId::Collector));\n+          \"leftmost region should be free: %zd\",  leftmost(ShenandoahFreeSetPartitionId::Collector));\n@@ -670,1 +671,1 @@\n-          \"rightmost region should be free: \" SSIZE_FORMAT, rightmost(ShenandoahFreeSetPartitionId::Collector));\n+          \"rightmost region should be free: %zd\", rightmost(ShenandoahFreeSetPartitionId::Collector));\n@@ -677,1 +678,1 @@\n-          \"free regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free regions before the leftmost: %zd, bound %zd\",\n@@ -680,1 +681,1 @@\n-          \"free regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free regions past the rightmost: %zd, bound %zd\",\n@@ -686,1 +687,1 @@\n-          \"free empty regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free empty regions before the leftmost: %zd, bound %zd\",\n@@ -689,1 +690,1 @@\n-          \"free empty regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free empty regions past the rightmost: %zd, bound %zd\",\n@@ -693,1 +694,1 @@\n-  assert (leftmost(ShenandoahFreeSetPartitionId::OldCollector) <= _max, \"leftmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT,\n+  assert (leftmost(ShenandoahFreeSetPartitionId::OldCollector) <= _max, \"leftmost in bounds: %zd < %zd\",\n@@ -695,1 +696,1 @@\n-  assert (rightmost(ShenandoahFreeSetPartitionId::OldCollector) < _max, \"rightmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT,\n+  assert (rightmost(ShenandoahFreeSetPartitionId::OldCollector) < _max, \"rightmost in bounds: %zd < %zd\",\n@@ -701,1 +702,1 @@\n-          \"leftmost region should be free: \" SSIZE_FORMAT,  leftmost(ShenandoahFreeSetPartitionId::OldCollector));\n+          \"leftmost region should be free: %zd\",  leftmost(ShenandoahFreeSetPartitionId::OldCollector));\n@@ -705,1 +706,1 @@\n-          \"rightmost region should be free: \" SSIZE_FORMAT, rightmost(ShenandoahFreeSetPartitionId::OldCollector));\n+          \"rightmost region should be free: %zd\", rightmost(ShenandoahFreeSetPartitionId::OldCollector));\n@@ -712,1 +713,1 @@\n-          \"free regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free regions before the leftmost: %zd, bound %zd\",\n@@ -715,1 +716,1 @@\n-          \"free regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free regions past the rightmost: %zd, bound %zd\",\n@@ -721,1 +722,1 @@\n-          \"free empty regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free empty regions before the leftmost: %zd, bound %zd\",\n@@ -724,1 +725,1 @@\n-          \"free empty regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          \"free empty regions past the rightmost: %zd, bound %zd\",\n@@ -1453,2 +1454,2 @@\n-  log_debug(gc)(\"  After find_regions_with_alloc_capacity(), Mutator range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"],\"\n-                \"  Old Collector range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"]\",\n+  log_debug(gc)(\"  After find_regions_with_alloc_capacity(), Mutator range [%zd, %zd],\"\n+                \"  Old Collector range [%zd, %zd]\",\n@@ -1716,2 +1717,2 @@\n-        log_debug(gc)(\"  Shifted Mutator range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"],\"\n-                      \"  Old Collector range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"]\",\n+        log_debug(gc)(\"  Shifted Mutator range [%zd, %zd],\"\n+                      \"  Old Collector range [%zd, %zd]\",\n@@ -1739,2 +1740,2 @@\n-      log_debug(gc)(\"  Shifted Mutator range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"],\"\n-                    \"  Collector range [\" SSIZE_FORMAT \", \" SSIZE_FORMAT \"]\",\n+      log_debug(gc)(\"  Shifted Mutator range [%zd, %zd],\"\n+                    \"  Collector range [%zd, %zd]\",\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":42,"deletions":41,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +99,1 @@\n-    assert((start_idx >= 0) && (start_idx < _num_bits), \"precondition: start_idx: \" SSIZE_FORMAT \", count: \" SSIZE_FORMAT,\n+    assert((start_idx >= 0) && (start_idx < _num_bits), \"precondition: start_idx: %zd, count: %zd\",\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahSimpleBitMap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -557,1 +557,1 @@\n-      out->print(\" \" SSIZE_PLUS_FORMAT, delta_count);\n+      out->print(\" %+zd\", delta_count);\n@@ -575,1 +575,1 @@\n-    out->print(\" \" SSIZE_PLUS_FORMAT, delta_count);\n+    out->print(\" %+zd\", delta_count);\n@@ -653,1 +653,1 @@\n-        out->print(\" \" SSIZE_PLUS_FORMAT, class_count_diff);\n+        out->print(\" %+zd\", class_count_diff);\n@@ -661,1 +661,1 @@\n-        out->print(\" \" SSIZE_PLUS_FORMAT, instance_class_count_diff);\n+        out->print(\" %+zd\", instance_class_count_diff);\n@@ -667,1 +667,1 @@\n-        out->print(\" \" SSIZE_PLUS_FORMAT, array_class_count_diff);\n+        out->print(\" %+zd\", array_class_count_diff);\n@@ -676,1 +676,1 @@\n-        out->print(\" \" SSIZE_PLUS_FORMAT, thread_count_diff);\n+        out->print(\" %+zd\", thread_count_diff);\n","filename":"src\/hotspot\/share\/nmt\/memReporter.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -138,3 +138,0 @@\n-#define SSIZE_FORMAT             \"%\"          PRIdPTR\n-#define SSIZE_PLUS_FORMAT        \"%+\"         PRIdPTR\n-#define SSIZE_FORMAT_W(width)    \"%\"   #width PRIdPTR\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -264,10 +264,10 @@\n-  check_format(SSIZE_FORMAT,           (ssize_t)123,      \"123\");\n-  check_format(SSIZE_FORMAT,           (ssize_t)-123,     \"-123\");\n-  check_format(SSIZE_FORMAT,           (ssize_t)2147483647, \"2147483647\");\n-  check_format(SSIZE_FORMAT,           (ssize_t)-2147483647, \"-2147483647\");\n-  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)123,      \"+123\");\n-  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)-123,     \"-123\");\n-  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)2147483647, \"+2147483647\");\n-  check_format(SSIZE_PLUS_FORMAT,      (ssize_t)-2147483647, \"-2147483647\");\n-  check_format(SSIZE_FORMAT_W(5),      (ssize_t)123,      \"  123\");\n-  check_format(SSIZE_FORMAT_W(-5),     (ssize_t)123,      \"123  \");\n+  check_format(\"%zd\",                  (ssize_t)123,      \"123\");\n+  check_format(\"%zd\",                  (ssize_t)-123,     \"-123\");\n+  check_format(\"%zd\",                  (ssize_t)2147483647, \"2147483647\");\n+  check_format(\"%zd\",                  (ssize_t)-2147483647, \"-2147483647\");\n+  check_format(\"%+zd\",                 (ssize_t)123,      \"+123\");\n+  check_format(\"%+zd\",                 (ssize_t)-123,     \"-123\");\n+  check_format(\"%+zd\",                 (ssize_t)2147483647, \"+2147483647\");\n+  check_format(\"%+zd\",                 (ssize_t)-2147483647, \"-2147483647\");\n+  check_format(\"%5zd\",                 (ssize_t)123,      \"  123\");\n+  check_format(\"%-5zd\",                (ssize_t)123,      \"123  \");\n","filename":"test\/hotspot\/gtest\/utilities\/test_globalDefinitions.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}