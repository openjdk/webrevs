{"files":[{"patch":"@@ -30,2 +30,2 @@\n- * @library ..\/..\/regtesthelpers\n- * @build   Util\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build   Util jdk.test.lib.Platform\n@@ -64,0 +64,1 @@\n+import jdk.test.lib.Platform;\n@@ -185,1 +186,1 @@\n-        if (Util.isOnWayland()) {\n+        if (Platform.isOnWayland()) {\n","filename":"test\/jdk\/java\/awt\/Focus\/6981400\/Test1.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n-  @library   ..\/..\/regtesthelpers\n-  @build     Util\n+  @library \/java\/awt\/regtesthelpers \/test\/lib\n+  @build   Util jdk.test.lib.Platform\n@@ -48,0 +48,1 @@\n+import jdk.test.lib.Platform;\n@@ -114,1 +115,1 @@\n-        if (Util.isOnWayland()) {\n+        if (Platform.isOnWayland()) {\n@@ -141,1 +142,1 @@\n-        if (c instanceof Frame && !Util.isOnWayland()) {\n+        if (c instanceof Frame && !Platform.isOnWayland()) {\n","filename":"test\/jdk\/java\/awt\/Focus\/ActualFocusedWindowTest\/ActualFocusedWindowBlockingTest.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+  @key headful\n@@ -28,1 +29,0 @@\n-  @key headful\n","filename":"test\/jdk\/java\/awt\/Focus\/ModalDialogInFocusEventTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,0 +50,2 @@\n+import jdk.test.lib.Platform;\n+\n@@ -59,1 +61,2 @@\n- * @build FrameBorderCounter\n+ * @library \/test\/lib\n+ * @build FrameBorderCounter jdk.test.lib.Platform\n@@ -205,1 +208,1 @@\n-        if (!isOnWayland) {\n+        if (!Platform.isOnWayland()) {\n@@ -282,1 +285,1 @@\n-        if (!isOnWayland) {\n+        if (!Platform.isOnWayland()) {\n@@ -479,1 +482,0 @@\n-    private static boolean isOnWayland;\n@@ -486,1 +488,0 @@\n-        isOnWayland = System.getenv(\"WAYLAND_DISPLAY\") != null;\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/HierarchyBoundsListenerMixingTest.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -666,9 +666,0 @@\n-    \/**\n-     * Checks if the current system is running on Wayland display server on Linux.\n-     *\n-     * @return {@code true} if the system is running on Wayland display server\n-     *\/\n-    public static boolean isOnWayland() {\n-        return System.getenv(\"WAYLAND_DISPLAY\") != null;\n-    }\n-\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/Util.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -476,0 +476,9 @@\n+\n+    \/**\n+     * Checks if the current system is running on Wayland display server on Linux.\n+     *\n+     * @return {@code true} if the system is running on Wayland display server\n+     *\/\n+    public static boolean isOnWayland() {\n+        return System.getenv(\"WAYLAND_DISPLAY\") != null;\n+    }\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}