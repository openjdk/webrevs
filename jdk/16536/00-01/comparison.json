{"files":[{"patch":"@@ -249,1 +249,1 @@\n- * constraint less strict than its natural alignment. This allows for avoiding padding between member layouts,\n+ * constraint less strict than its natural alignment. This allows to avoid padding between member layouts,\n@@ -346,1 +346,1 @@\n- * The {@code malloc} function allocates a region of memory of a given size,\n+ * The {@code malloc} function allocates a region of memory with the given size,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n- * This layout is a struct layout that describe a rectangle. It contains a single field, namely {@code points},\n+ * This layout is a struct layout describing a rectangle. It contains a single field, namely {@code points},\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}