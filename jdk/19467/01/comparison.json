{"files":[{"patch":"@@ -639,1 +639,1 @@\n-        cons = instantiateConsole(istty);\n+        cons = instantiateConsole();\n@@ -650,1 +650,1 @@\n-    private static Console instantiateConsole(boolean istty) {\n+    private static Console instantiateConsole() {\n@@ -658,2 +658,3 @@\n-             * {@code JdkConsoleProvider.DEFAULT_PROVIDER_MODULE_NAME}. If no\n-             * providers are available, or instantiation failed, java.base built-in\n+             * {@code JdkConsoleProvider.DEFAULT_PROVIDER_MODULE_NAME}. If multiple\n+             * provider implementations exist in that module, the first one found is used.\n+             * If no providers are available, or instantiation failed, java.base built-in\n@@ -662,14 +663,18 @@\n-            PrivilegedAction<Console> pa = () -> {\n-                var consModName = System.getProperty(\"jdk.console\",\n-                        JdkConsoleProvider.DEFAULT_PROVIDER_MODULE_NAME);\n-                return ServiceLoader.load(ModuleLayer.boot(), JdkConsoleProvider.class).stream()\n-                        .map(ServiceLoader.Provider::get)\n-                        .filter(jcp -> consModName.equals(jcp.getClass().getModule().getName()))\n-                        .map(jcp -> jcp.console(istty, CHARSET))\n-                        .filter(Objects::nonNull)\n-                        .findAny()\n-                        .map(jc -> (Console) new ProxyingConsole(jc))\n-                        .orElse(null);\n-            };\n-            c = AccessController.doPrivileged(pa);\n-        } catch (ServiceConfigurationError ignore) {\n+            c = AccessController.doPrivileged(new PrivilegedAction<Console>() {\n+                public Console run() {\n+                    var consModName = System.getProperty(\"jdk.console\",\n+                            JdkConsoleProvider.DEFAULT_PROVIDER_MODULE_NAME);\n+\n+                    for (var jcp : ServiceLoader.load(ModuleLayer.boot(), JdkConsoleProvider.class)) {\n+                        if (consModName.equals(jcp.getClass().getModule().getName())) {\n+                            var jc = jcp.console(istty, CHARSET);\n+                            if (jc != null) {\n+                                return new ProxyingConsole(jc);\n+                            }\n+                            break;\n+                        }\n+                    }\n+                    return null;\n+                }\n+            });\n+        } catch (ServiceConfigurationError _) {\n","filename":"src\/java.base\/share\/classes\/java\/io\/Console.java","additions":23,"deletions":18,"binary":false,"changes":41,"status":"modified"}]}