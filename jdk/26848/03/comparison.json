{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.nio.file.Files;\n@@ -30,0 +31,2 @@\n+import java.util.List;\n+import java.util.Set;\n@@ -97,0 +100,1 @@\n+        validateAppContentDirs(app);\n@@ -126,0 +130,12 @@\n+    private static void validateAppContentDirs(Application app) {\n+        for (var contentDir : app.contentDirs()) {\n+            if (!Files.isDirectory(contentDir)) {\n+                Log.info(I18N.format(\"warning.app.content.is.not.dir\",\n+                        contentDir));\n+            } else if (!CONTENTS_SUB_DIRS.contains(contentDir.getFileName().toString())) {\n+                Log.info(I18N.format(\"warning.non.standard.contents.sub.dir\",\n+                        contentDir));\n+            }\n+        }\n+    }\n+\n@@ -236,0 +252,4 @@\n+\n+    \/\/ List of standard subdirectories of the \"Contents\" directory\n+    private static final Set<String> CONTENTS_SUB_DIRS = Set.of(\"MacOS\",\n+            \"Resources\", \"Frameworks\", \"PlugIns\", \"SharedSupport\");\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacApplicationBuilder.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -88,0 +88,2 @@\n+warning.non.standard.contents.sub.dir=Warning: The file name of the directory \"{0}\" specified for the --app-content option is not a standard subdirectory name in the \"Contents\" directory of the application bundle. The result application bundle may fail code signing and\/or notarization.\n+warning.app.content.is.not.dir=Warning: The value \"{0}\" of the --app-content option is not a directory. The result application bundle may fail code signing and\/or notarization.\n\\ No newline at end of file\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,0 +58,1 @@\n+            String pAppContentNote;\n@@ -69,0 +70,2 @@\n+                    pAppContentNote\n+                            = I18N.getString(\"MSG_Help_mac_app_content_note\");\n@@ -79,0 +82,1 @@\n+                    pAppContentNote = \"\";\n@@ -89,0 +93,1 @@\n+                    pAppContentNote = \"\";\n@@ -102,0 +107,1 @@\n+                    pAppContentNote = \"\";\n@@ -107,1 +113,1 @@\n-                    pSignSampleUsage));\n+                    pSignSampleUsage, pAppContentNote));\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CLIHelp.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,1 +136,1 @@\n-\\n\\\n+{7}\\n\\\n@@ -337,0 +337,7 @@\n+\n+MSG_Help_mac_app_content_note=\\\n+\\          Note: The value should be a directory with the \"Resources\"\\n\\\n+\\          subdirectory (or any other directory that is valid in the \"Contents\"\\n\\\n+\\          directory of the application bundle). Otherwise, jpackage may produce\\n\\\n+\\          invalid application bundle which may fail code signing and\/or\\n\\\n+\\          notarization.\\n\\\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources.properties","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -193,0 +193,6 @@\n+    macOS note: The value should be a directory with the \"Resources\"\n+                subdirectory (or any other directory that is valid in the\n+                \"Contents\" directory of the application bundle). Otherwise,\n+                jpackage may produce invalid application bundle which may fail\n+                code signing and\/or notarization.\n+\n","filename":"src\/jdk.jpackage\/share\/man\/jpackage.md","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+import java.util.OptionalInt;\n@@ -814,0 +815,4 @@\n+    public Executor.Result executeIgnoreExitCode() {\n+        return execute(OptionalInt.empty());\n+    }\n+\n@@ -819,0 +824,4 @@\n+        return execute(OptionalInt.of(expectedExitCode));\n+    }\n+\n+    private Executor.Result execute(OptionalInt expectedExitCode) {\n@@ -855,1 +864,2 @@\n-        if (expectedExitCode == 0 && !isImagePackageType()) {\n+        if (expectedExitCode.isPresent() && expectedExitCode.orElseThrow() == 0\n+                && !isImagePackageType()) {\n@@ -863,1 +873,6 @@\n-        Executor.Result result = copy.createExecutor().execute(expectedExitCode);\n+        Executor.Result result;\n+        if (expectedExitCode.isEmpty()) {\n+            result = copy.createExecutor().executeWithoutExitCodeCheck();\n+        } else {\n+            result = copy.createExecutor().execute(expectedExitCode.orElseThrow());\n+        }\n@@ -867,1 +882,2 @@\n-        if (expectedExitCode == 0 && isImagePackageType()) {\n+        if (expectedExitCode.isPresent() && expectedExitCode.orElseThrow() == 0\n+                && isImagePackageType()) {\n@@ -875,1 +891,1 @@\n-        if (result.exitCode() == 0) {\n+        if (result.exitCode() == 0 && expectedExitCode.isPresent()) {\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JPackageCommand.java","additions":20,"deletions":4,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import java.util.Collection;\n@@ -42,0 +41,1 @@\n+import jdk.jpackage.test.JPackageStringBundle;\n@@ -119,0 +119,14 @@\n+    @Test(ifOS = MACOS)\n+    @Parameter({TEST_DIR, \"warning.non.standard.contents.sub.dir\"})\n+    @Parameter({TEST_DUKE, \"warning.app.content.is.not.dir\"})\n+    public void testWarnings(String testPath, String warningId) throws Exception {\n+        final var appContentValue = TKit.TEST_SRC_ROOT.resolve(testPath);\n+        final var expectedWarning = JPackageStringBundle.MAIN.cannedFormattedString(\n+                warningId, appContentValue);\n+\n+        JPackageCommand.helloAppImage()\n+            .addArguments(\"--app-content\", appContentValue)\n+            .validateOutput(expectedWarning)\n+            .executeIgnoreExitCode();\n+    }\n+\n","filename":"test\/jdk\/tools\/jpackage\/share\/AppContentTest.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"}]}