{"files":[{"patch":"@@ -214,5 +214,0 @@\n-\n-    \/\/ Can't include InvokerBytecodeGenerator, as it will pull in MethodHandleStatics which has many\n-    \/\/ environment dependencies (on system properties, etc).\n-    \/\/ MethodHandleStatics is an example of a class that must NOT get the aot-init treatment,\n-    \/\/ because of its strong reliance on (a) final fields which are (b) environmentally determined.\n","filename":"src\/hotspot\/share\/cds\/aotClassInitializer.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2684,1 +2684,1 @@\n-      classfile_parse_error(\"Incorrect runtimeSetup method declaration in class file %s\", CHECK_NULL);\n+      classfile_parse_error(\"@AOTRuntimeSetup method must be declared private static void runtimeSetup() for class %s\", CHECK_NULL);\n@@ -5161,5 +5161,4 @@\n-    if (_super_klass != nullptr) {\n-      if (!_super_klass->has_aot_safe_initializer()) {\n-        classfile_parse_error(\"aot-initialization safe %s requires an aot-initialization safe super class\", CHECK);\n-      }\n-    }\n+    guarantee_property(_super_klass == nullptr || _super_klass->has_aot_safe_initializer(),\n+                       \"Missing @AOTSafeClassInitializer in superclass %s for class %s\",\n+                       _super_klass->external_name(),\n+                       CHECK);\n@@ -5167,1 +5166,1 @@\n-    int len = _transitive_interfaces->length();\n+    int len = _local_interfaces->length();\n@@ -5169,6 +5168,5 @@\n-      InstanceKlass* intf = _transitive_interfaces->at(i);\n-      if (intf->class_initializer() != nullptr) {\n-        if (!intf->has_aot_safe_initializer()) {\n-          classfile_parse_error(\"superinterface %s not aot-initialization safe for %s\", intf->external_name(), CHECK);\n-        }\n-      }\n+      InstanceKlass* intf = _local_interfaces->at(i);\n+      guarantee_property(intf->class_initializer() == nullptr || intf->has_aot_safe_initializer(),\n+                         \"Missing @AOTSafeClassInitializer in superinterface %s for class %s\",\n+                         intf->external_name(),\n+                         CHECK);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"}]}