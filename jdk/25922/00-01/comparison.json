{"files":[{"patch":"@@ -270,0 +270,12 @@\n+bool AOTClassInitializer::has_runtime_setup(InstanceKlass* ik) {\n+  if (ik->has_aot_initialization()) {\n+    Method* runtime_setup_method = ik->find_method(vmSymbols::runtimeSetup(), vmSymbols::void_method_signature());\n+    if (runtime_setup_method != nullptr) {\n+      assert(runtime_setup_method->access_flags().is_private() && runtime_setup_method->access_flags().is_static(),\n+             \"%s::runtimeSetup() not private static\", ik->external_name());\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/cds\/aotClassInitializer.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+  static bool has_runtime_setup(InstanceKlass* ik);\n","filename":"src\/hotspot\/share\/cds\/aotClassInitializer.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -509,0 +509,3 @@\n+  if (AOTClassInitializer::has_runtime_setup(ik)) {\n+    ik->set_is_runtime_setup_required();\n+  }\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -945,1 +945,0 @@\n-    _jdk_internal_vm_annotation_RuntimeSetupRequired,\n@@ -1906,5 +1905,0 @@\n-    case VM_SYMBOL_ENUM_NAME(jdk_internal_vm_annotation_RuntimeSetupRequired_signature): {\n-      if (_location != _in_class)   break;  \/\/ only allow for classes\n-      if (!privileged)              break;  \/\/ only allow in privileged code\n-      return _jdk_internal_vm_annotation_RuntimeSetupRequired;\n-    }\n@@ -1993,3 +1987,0 @@\n-  if (has_annotation(_jdk_internal_vm_annotation_RuntimeSetupRequired)) {\n-    ik->set_is_runtime_setup_required();\n-  }\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -736,1 +736,0 @@\n-  template(jdk_internal_vm_annotation_RuntimeSetupRequired_signature, \"Ljdk\/internal\/vm\/annotation\/RuntimeSetupRequired;\")\\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -767,0 +767,4 @@\n+  \/\/ Does this class request explicit initialization in AOT archives when they are initialized in assembly phase,\n+  \/\/ with explicit assembly phase assemblyCleanup() or production run runtimeSetup() access?\n+  \/\/ Classes with instances are always initialized in AOT archive. This status is represented by has_aot_initialized_mirror().\n+  \/\/ However, access to setup\/cleanup functionality must be requested.\n@@ -770,2 +774,0 @@\n-  \/\/ If this class has been aot-initialized, do we need to call its runtimeSetup()\n-  \/\/ method during the production run?\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -57,2 +57,2 @@\n-    flag(has_aot_initialization             , 1 << 14) \/* True if klass requires AOT initialization in assembly phase for its fields *\/ \\\n-    flag(is_runtime_setup_required          , 1 << 15) \/* True if klass needs to call runtimeSetup when loaded from archive *\/ \\\n+    flag(has_aot_initialization             , 1 << 14) \/* True if klass explicitly requests to be initialized in AOT archive *\/ \\\n+    flag(is_runtime_setup_required          , 1 << 15) \/* True if klass has a runtimeSetup method to be called *\/ \\\n","filename":"src\/hotspot\/share\/oops\/instanceKlassFlags.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -82,0 +82,1 @@\n+import jdk.internal.vm.annotation.AOTClassInitializer;\n@@ -83,1 +84,0 @@\n-import jdk.internal.vm.annotation.RuntimeSetupRequired;\n@@ -215,1 +215,1 @@\n-@RuntimeSetupRequired\n+@AOTClassInitializer\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import jdk.internal.vm.annotation.RuntimeSetupRequired;\n@@ -78,1 +77,0 @@\n-@RuntimeSetupRequired\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import jdk.internal.vm.annotation.AOTClassInitializer;\n@@ -34,1 +35,0 @@\n-import jdk.internal.vm.annotation.RuntimeSetupRequired;\n@@ -47,1 +47,1 @@\n-@RuntimeSetupRequired\n+@AOTClassInitializer\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+import jdk.internal.vm.annotation.AOTClassInitializer;\n+\n@@ -71,1 +73,1 @@\n-\n+@AOTClassInitializer\n","filename":"src\/java.base\/share\/classes\/java\/util\/AbstractMap.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-import jdk.internal.vm.annotation.RuntimeSetupRequired;\n+import jdk.internal.vm.annotation.AOTClassInitializer;\n@@ -267,1 +267,1 @@\n-@RuntimeSetupRequired\n+@AOTClassInitializer\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ConcurrentHashMap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import jdk.internal.vm.annotation.AOTClassInitializer;\n@@ -31,1 +32,0 @@\n-import jdk.internal.vm.annotation.RuntimeSetupRequired;\n@@ -56,1 +56,1 @@\n-@RuntimeSetupRequired\n+@AOTClassInitializer\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/Unsafe.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,4 @@\n-\/\/\/ (`<clinit>`) executed whenever it is referenced in an AOT cache.\n+\/\/\/ (`<clinit>`) executed whenever it is referenced in an AOT cache, and may\n+\/\/\/ have custom runtime setup actions in a `private static void runtimeSetup()`\n+\/\/\/ method.  Note that classes with instances in the AOT cache are always\n+\/\/\/ initialized even without this annotation, but cannot define custom actions.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/annotation\/AOTClassInitializer.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,45 +0,0 @@\n-\/*\n- * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.internal.vm.annotation;\n-\n-import java.lang.annotation.ElementType;\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.RetentionPolicy;\n-import java.lang.annotation.Target;\n-\n-\/\/\/ Indicates a class or interface requires run-time setup when loaded from AOT\n-\/\/\/ archives.  They must declare a `runtimeSetup` method to be called by the VM,\n-\/\/\/ and this method must be called by the static initializer too.  See the AOT\n-\/\/\/ design document for more details.\n-\/\/\/\n-\/\/\/ This annotation is only recognized on privileged code and is ignored\n-\/\/\/ elsewhere.\n-\/\/\/\n-\/\/\/ @since 26\n-@Retention(RetentionPolicy.RUNTIME)\n-@Target(ElementType.TYPE)\n-public @interface RuntimeSetupRequired {\n-}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/annotation\/RuntimeSetupRequired.java","additions":0,"deletions":45,"binary":false,"changes":45,"status":"deleted"}]}