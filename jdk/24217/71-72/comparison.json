{"files":[{"patch":"@@ -26,1 +26,0 @@\n-import java.util.ArrayList;\n@@ -33,1 +32,1 @@\n- * reaching out to a {@link Hook#set}.\n+ * reaching out to a {@link Hook#anchor}.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Code.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * <p>\n@@ -119,5 +120,5 @@\n-                if (!(name instanceof DataName dn)) { return false; }\n-                if (mutability == Mutability.MUTABLE && !dn.mutable()) { return false; }\n-                if (mutability == Mutability.IMMUTABLE && dn.mutable()) { return false; }\n-                if (subtype != null && !dn.type().isSubtypeOf(subtype)) { return false; }\n-                if (supertype != null && !supertype.isSubtypeOf(dn.type())) { return false; }\n+                if (!(name instanceof DataName dataName)) { return false; }\n+                if (mutability == Mutability.MUTABLE && !dataName.mutable()) { return false; }\n+                if (mutability == Mutability.IMMUTABLE && dataName.mutable()) { return false; }\n+                if (subtype != null && !dataName.type().isSubtypeOf(subtype)) { return false; }\n+                if (supertype != null && !supertype.isSubtypeOf(dataName.type())) { return false; }\n@@ -134,1 +135,1 @@\n-         *                                       {@link subtypeOf} or {@link exactOf}.\n+         *                                       {@link #subtypeOf} or {@link #exactOf}.\n@@ -144,1 +145,1 @@\n-         * Create a filtered {@link View}, where all {@link DataName}s must be subtypes of {@code type}.\n+         * Create a filtered {@link View}, where all {@link DataName}s must be supertypes of {@code type}.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/DataName.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * <p>\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Hook.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-                \/\/ capturing group for \"name\" inside of \"{name}\"\n+                \/\/ capturing group for \"name\" inside \"{name}\"\n@@ -199,1 +199,1 @@\n-     * By default we use the overrides of {@link Object#toString}.\n+     * By default, we use the overrides of {@link Object#toString}.\n@@ -292,1 +292,1 @@\n-            case HookInsertToken(Hook hook, TemplateToken t) -> {\n+            case HookInsertToken(Hook hook, TemplateToken templateToken) -> {\n@@ -305,1 +305,1 @@\n-                renderTemplateToken(t);\n+                renderTemplateToken(templateToken);\n@@ -312,1 +312,1 @@\n-            case TemplateToken t -> {\n+            case TemplateToken templateToken -> {\n@@ -317,1 +317,1 @@\n-                renderTemplateToken(t);\n+                renderTemplateToken(templateToken);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Renderer.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+ * <p>\n@@ -94,3 +95,3 @@\n-                if (!(name instanceof StructuralName dn)) { return false; }\n-                if (subtype != null && !dn.type().isSubtypeOf(subtype)) { return false; }\n-                if (supertype != null && !supertype.isSubtypeOf(dn.type())) { return false; }\n+                if (!(name instanceof StructuralName structuralName)) { return false; }\n+                if (subtype != null && !structuralName.type().isSubtypeOf(subtype)) { return false; }\n+                if (supertype != null && !supertype.isSubtypeOf(structuralName.type())) { return false; }\n@@ -107,1 +108,1 @@\n-         *                                       {@link subtypeOf} or {@link exactOf}.\n+         *                                       {@link #subtypeOf} or {@link #exactOf}.\n@@ -117,1 +118,1 @@\n-         * Create a filtered {@link View}, where all {@link StructuralName}s must be subtypes of {@code type}.\n+         * Create a filtered {@link View}, where all {@link StructuralName}s must be supertypes of {@code type}.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/StructuralName.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"}]}