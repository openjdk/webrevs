{"files":[{"patch":"@@ -70,0 +70,1 @@\n+        comp.addJavaSourceCode(\"p.xyz.InnerTest3b\", generateWithHashtagAndDollarReplacements2());\n@@ -75,2 +76,2 @@\n-        comp.addJavaSourceCode(\"p.xyz.InnerTest10\", generateWithDataNamesForFuzzing());\n-        comp.addJavaSourceCode(\"p.xyz.InnerTest9\",  generateWithStructuralNamesForMethods());\n+        comp.addJavaSourceCode(\"p.xyz.InnerTest9\", generateWithDataNamesForFuzzing());\n+        comp.addJavaSourceCode(\"p.xyz.InnerTest10\",  generateWithStructuralNamesForMethods());\n@@ -88,0 +89,1 @@\n+        comp.invoke(\"p.xyz.InnerTest3b\", \"main\", new Object[] {});\n@@ -93,2 +95,2 @@\n-        comp.invoke(\"p.xyz.InnerTest9\",  \"main\", new Object[] {});\n-        comp.invoke(\"p.xyz.InnerTest10\", \"main\", new Object[] {});\n+        comp.invoke(\"p.xyz.InnerTest10\",  \"main\", new Object[] {});\n+        comp.invoke(\"p.xyz.InnerTest9\", \"main\", new Object[] {});\n@@ -255,0 +257,36 @@\n+    \/\/ In some cases, you may want to transform string arguments. You may\n+    \/\/ be working with types \"int\" and \"long\", and want to create names like\n+    \/\/ \"INT_CON\" and \"LONG_CON\".\n+    public static String generateWithHashtagAndDollarReplacements2() {\n+        \/\/ Let us define some final static variables of a specific type.\n+        var template1 = Template.make(\"type\", (String type) -> body(\n+            \/\/ The type (e.g. \"int\") is lower case, let us create the upper case \"INT_CON\" from it.\n+            let(\"TYPE_CON\", type.toUpperCase() + \"_CON\"),\n+            \"\"\"\n+            static final #type #TYPE_CON = 42;\n+            \"\"\"\n+        ));\n+\n+        \/\/ Let's write a simple class to demonstrate that this works, i.e. produces compilable code.\n+        var templateClass = Template.make(() -> body(\n+            \"\"\"\n+            package p.xyz;\n+\n+            public class InnerTest3b {\n+            \"\"\",\n+            template1.asToken(\"int\"),\n+            template1.asToken(\"long\"),\n+            \"\"\"\n+                public static void main() {\n+                    if (INT_CON != 42 || LONG_CON != 42) {\n+                        throw new RuntimeException(\"Wrong result!\");\n+                    }\n+                }\n+            }\n+            \"\"\"\n+        ));\n+\n+        \/\/ Render templateClass to String.\n+        return templateClass.render();\n+    }\n+\n@@ -777,1 +815,1 @@\n-            public class InnerTest10 {\n+            public class InnerTest9 {\n@@ -885,1 +923,1 @@\n-            public class InnerTest9 {\n+            public class InnerTest10 {\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestTutorial.java","additions":44,"deletions":6,"binary":false,"changes":50,"status":"modified"}]}