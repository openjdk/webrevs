{"files":[{"patch":"@@ -86,1 +86,1 @@\n-         * in {@link View#exactOf}, {@link View#subtypeOf}, and {@link View#supertypeOf}.\n+         * in {@link FilteredSet#exactOf}, {@link FilteredSet#subtypeOf}, and {@link FilteredSet#supertypeOf}.\n@@ -95,1 +95,1 @@\n-     * The {@link View} represents a filtered set of {@link DataName}s in the current scope.\n+     * The {@link FilteredSet} represents a filtered set of {@link DataName}s in the current scope.\n@@ -99,0 +99,2 @@\n+     * Note: The {@link FilteredSet} is only a filtered view on the set of {@link DataName}s,\n+     * and may return different results in different contexts.\n@@ -100,1 +102,1 @@\n-    public static final class View {\n+    public static final class FilteredSet {\n@@ -105,1 +107,1 @@\n-        View(Mutability mutability, DataName.Type subtype, DataName.Type supertype) {\n+        FilteredSet(Mutability mutability, DataName.Type subtype, DataName.Type supertype) {\n@@ -111,1 +113,1 @@\n-        View(Mutability mutability) {\n+        FilteredSet(Mutability mutability) {\n@@ -130,1 +132,1 @@\n-         * Create a filtered {@link View}, where all {@link DataName}s must be subtypes of {@code type}.\n+         * Create a {@link FilteredSet}, where all {@link DataName}s must be subtypes of {@code type}.\n@@ -133,2 +135,2 @@\n-         * @return The filtered {@link View}.\n-         * @throws UnsupportedOperationException If this {@link View} was already filtered with\n+         * @return The updated filtered set.\n+         * @throws UnsupportedOperationException If this {@link FilteredSet} was already filtered with\n@@ -137,1 +139,1 @@\n-        public View subtypeOf(DataName.Type type) {\n+        public FilteredSet subtypeOf(DataName.Type type) {\n@@ -141,1 +143,1 @@\n-            return new View(mutability, type, supertype);\n+            return new FilteredSet(mutability, type, supertype);\n@@ -145,1 +147,1 @@\n-         * Create a filtered {@link View}, where all {@link DataName}s must be supertypes of {@code type}.\n+         * Create a {@link FilteredSet}, where all {@link DataName}s must be supertypes of {@code type}.\n@@ -148,2 +150,2 @@\n-         * @return The filtered {@link View}.\n-         * @throws UnsupportedOperationException If this {@link View} was already filtered with\n+         * @return The updated filtered set.\n+         * @throws UnsupportedOperationException If this {@link FilteredSet} was already filtered with\n@@ -152,1 +154,1 @@\n-        public View supertypeOf(DataName.Type type) {\n+        public FilteredSet supertypeOf(DataName.Type type) {\n@@ -156,1 +158,1 @@\n-            return new View(mutability, subtype, type);\n+            return new FilteredSet(mutability, subtype, type);\n@@ -160,1 +162,1 @@\n-         * Create a filtered {@link View}, where all {@link DataName}s must be of exact {@code type},\n+         * Create a {@link FilteredSet}, where all {@link DataName}s must be of exact {@code type},\n@@ -164,2 +166,2 @@\n-         * @return The filtered {@link View}.\n-         * @throws UnsupportedOperationException If this {@link View} was already filtered with\n+         * @return The updated filtered set.\n+         * @throws UnsupportedOperationException If this {@link FilteredSet} was already filtered with\n@@ -168,1 +170,1 @@\n-        public View exactOf(DataName.Type type) {\n+        public FilteredSet exactOf(DataName.Type type) {\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/DataName.java","additions":21,"deletions":19,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-         * in {@link View#exactOf}, {@link View#subtypeOf}, and {@link View#supertypeOf}.\n+         * in {@link FilteredSet#exactOf}, {@link FilteredSet#subtypeOf}, and {@link FilteredSet#supertypeOf}.\n@@ -72,1 +72,1 @@\n-     * The {@link View} represents a filtered set of {@link StructuralName}s in the current scope.\n+     * The {@link FilteredSet} represents a filtered set of {@link StructuralName}s in the current scope.\n@@ -76,0 +76,2 @@\n+     * Note: The {@link FilteredSet} is only a filtered view on the set of {@link StructuralName}s,\n+     * and may return different results in different contexts.\n@@ -77,1 +79,1 @@\n-    public static final class View {\n+    public static final class FilteredSet {\n@@ -81,1 +83,1 @@\n-        View(StructuralName.Type subtype, StructuralName.Type supertype) {\n+        FilteredSet(StructuralName.Type subtype, StructuralName.Type supertype) {\n@@ -86,1 +88,1 @@\n-        View() {\n+        FilteredSet() {\n@@ -103,1 +105,1 @@\n-         * Create a filtered {@link View}, where all {@link StructuralName}s must be subtypes of {@code type}.\n+         * Create a {@link FilteredSet}, where all {@link StructuralName}s must be subtypes of {@code type}.\n@@ -106,2 +108,2 @@\n-         * @return The filtered {@link View}.\n-         * @throws UnsupportedOperationException If this {@link View} was already filtered with\n+         * @return The updated filtered set.\n+         * @throws UnsupportedOperationException If this {@link FilteredSet} was already filtered with\n@@ -110,1 +112,1 @@\n-        public View subtypeOf(StructuralName.Type type) {\n+        public FilteredSet subtypeOf(StructuralName.Type type) {\n@@ -114,1 +116,1 @@\n-            return new View(type, supertype);\n+            return new FilteredSet(type, supertype);\n@@ -118,1 +120,1 @@\n-         * Create a filtered {@link View}, where all {@link StructuralName}s must be supertypes of {@code type}.\n+         * Create a {@link FilteredSet}, where all {@link StructuralName}s must be supertypes of {@code type}.\n@@ -121,2 +123,2 @@\n-         * @return The filtered {@link View}.\n-         * @throws UnsupportedOperationException If this {@link View} was already filtered with\n+         * @return The updated filtered set.\n+         * @throws UnsupportedOperationException If this {@link FilteredSet} was already filtered with\n@@ -125,1 +127,1 @@\n-        public View supertypeOf(StructuralName.Type type) {\n+        public FilteredSet supertypeOf(StructuralName.Type type) {\n@@ -129,1 +131,1 @@\n-            return new View(subtype, type);\n+            return new FilteredSet(subtype, type);\n@@ -133,1 +135,1 @@\n-         * Create a filtered {@link View}, where all {@link StructuralName}s must be of exact {@code type},\n+         * Create a {@link FilteredSet}, where all {@link StructuralName}s must be of exact {@code type},\n@@ -137,2 +139,2 @@\n-         * @return The filtered {@link View}.\n-         * @throws UnsupportedOperationException If this {@link View} was already filtered with\n+         * @return The updated filtered set.\n+         * @throws UnsupportedOperationException If this {@link FilteredSet} was already filtered with\n@@ -141,1 +143,1 @@\n-        public View exactOf(StructuralName.Type type) {\n+        public FilteredSet exactOf(StructuralName.Type type) {\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/StructuralName.java","additions":21,"deletions":19,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -202,4 +202,5 @@\n- * we can call {@link DataName.View#count}, {@link DataName.View#sample}, {@link DataName.View#toList}, etc.\n- * There are many use-cases for this mechanism, especially facilitating communication between the code\n- * of outer and inner {@link Template}s. Especially for fuzzing, it may be useful to be able to add\n- * fields and variables, and sample them randomly, to create a random data flow graph.\n+ * we can call {@link DataName.FilteredSet#count}, {@link DataName.FilteredSet#sample},\n+ * {@link DataName.FilteredSet#toList}, etc. There are many use-cases for this mechanism, especially\n+ * facilitating communication between the code of outer and inner {@link Template}s. Especially for fuzzing,\n+ * it may be useful to be able to add fields and variables, and sample them randomly, to create a random data\n+ * flow graph.\n@@ -801,2 +802,2 @@\n-    static DataName.View dataNames(DataName.Mutability mutability) {\n-        return new DataName.View(mutability);\n+    static DataName.FilteredSet dataNames(DataName.Mutability mutability) {\n+        return new DataName.FilteredSet(mutability);\n@@ -840,2 +841,2 @@\n-    static StructuralName.View structuralNames() {\n-        return new StructuralName.View();\n+    static StructuralName.FilteredSet structuralNames() {\n+        return new StructuralName.FilteredSet();\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Template.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}