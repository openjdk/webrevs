{"files":[{"patch":"@@ -180,2 +180,6 @@\n- * a Template can reference itself. To ensure the termination of recursion, the templates are rendered\n- * with a certain amount of {@link #fuel} (default: 100, see {@link #DEFAULT_FUEL}), which is decreased at each\n+ * a Template can reference itself.\n+ *\n+ * <p>\n+ * The writer of recursive {@link Template}s must ensure that this recursion terminates. To unify the\n+ * approach across {@link Template}s, we introduce the concept of {@link fuel}. Templates are rendered starting\n+ * with a limited amount of {@link #fuel} (default: 100, see {@link #DEFAULT_FUEL}), which is decreased at each\n@@ -266,1 +270,1 @@\n-                                         Template.OneArgs,\n+                                         Template.OneArg,\n@@ -318,1 +322,1 @@\n-    record OneArgs<A>(String arg0Name, Function<A, TemplateBody> function) implements Template {\n+    record OneArg<A>(String arg0Name, Function<A, TemplateBody> function) implements Template {\n@@ -332,1 +336,1 @@\n-            return new TemplateToken.OneArgs<>(this, a);\n+            return new TemplateToken.OneArg<>(this, a);\n@@ -342,1 +346,1 @@\n-            return new TemplateToken.OneArgs<>(this, a).render();\n+            return new TemplateToken.OneArg<>(this, a).render();\n@@ -353,1 +357,1 @@\n-            return new TemplateToken.OneArgs<>(this, a).render(fuel);\n+            return new TemplateToken.OneArg<>(this, a).render(fuel);\n@@ -530,2 +534,2 @@\n-    static <A> Template.OneArgs<A> make(String arg0Name, Function<A, TemplateBody> body) {\n-        return new Template.OneArgs<>(arg0Name, body);\n+    static <A> Template.OneArg<A> make(String arg0Name, Function<A, TemplateBody> body) {\n+        return new Template.OneArg<>(arg0Name, body);\n@@ -704,1 +708,1 @@\n-     * the recursive use of Templates. We {@link Template.OneArgs#render} with {@code 30} total fuel,\n+     * the recursive use of Templates. We {@link Template.OneArg#render} with {@code 30} total fuel,\n@@ -709,1 +713,1 @@\n-     * var binding = new TemplateBinding<Template.OneArgs<Integer>>();\n+     * var binding = new TemplateBinding<Template.OneArg<Integer>>();\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Template.java","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-                                                   TemplateToken.OneArgs,\n+                                                   TemplateToken.OneArg,\n@@ -67,2 +67,2 @@\n-    static final class OneArgs<A> extends TemplateToken implements Token {\n-        private final Template.OneArgs<A> oneArgs;\n+    static final class OneArg<A> extends TemplateToken implements Token {\n+        private final Template.OneArg<A> oneArgs;\n@@ -71,1 +71,1 @@\n-        OneArgs(Template.OneArgs<A> oneArgs, A a) {\n+        OneArg(Template.OneArg<A> oneArgs, A a) {\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/TemplateToken.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-                               TemplateToken.OneArgs,\n+                               TemplateToken.OneArg,\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Token.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -397,1 +397,1 @@\n-        var binding1 = new TemplateBinding<Template.OneArgs<Integer>>();\n+        var binding1 = new TemplateBinding<Template.OneArg<Integer>>();\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestTutorial.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -768,1 +768,1 @@\n-        var binding1 = new TemplateBinding<Template.OneArgs<Integer>>();\n+        var binding1 = new TemplateBinding<Template.OneArg<Integer>>();\n@@ -814,1 +814,1 @@\n-        var binding2 = new TemplateBinding<Template.OneArgs<Integer>>();\n+        var binding2 = new TemplateBinding<Template.OneArg<Integer>>();\n@@ -861,1 +861,1 @@\n-        var binding2 = new TemplateBinding<Template.OneArgs<Integer>>();\n+        var binding2 = new TemplateBinding<Template.OneArg<Integer>>();\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/tests\/TestTemplate.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}