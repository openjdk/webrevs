{"files":[{"patch":"@@ -45,3 +45,9 @@\n-class Renderer {\n-    private static final Pattern DOLLAR_NAME_PATTERN = Pattern.compile(\"\\\\$([a-zA-Z_][a-zA-Z0-9_]*)\");\n-    private static final Pattern HASHTAG_REPLACEMENT_PATTERN = Pattern.compile(\"#([a-zA-Z_][a-zA-Z0-9_]*)\");\n+final class Renderer {\n+    private static final String NAME_CHARACTERS = \"[a-zA-Z_][a-zA-Z0-9_]*\";\n+    private static final Pattern DOLLAR_NAME_PATTERN = Pattern.compile(\"\\\\$(\" + NAME_CHARACTERS + \")\");\n+    private static final Pattern HASHTAG_REPLACEMENT_PATTERN = Pattern.compile(\"#(\" + NAME_CHARACTERS + \")\");\n+    private static final Pattern NAME_CHARACTERS_PATTERN = Pattern.compile(\"^\" + NAME_CHARACTERS + \"$\");\n+\n+    static boolean isValidName(String name) {\n+        return NAME_CHARACTERS_PATTERN.matcher(name).find();\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Renderer.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -65,0 +65,3 @@\n+        if (!Renderer.isValidName(name)) {\n+            throw new RendererException(\"Is not a valid '$' name: '\" + name + \"'.\");\n+        }\n@@ -69,0 +72,3 @@\n+        if (!Renderer.isValidName(key)) {\n+            throw new RendererException(\"Is not a valid hashtag replacement name: '\" + key + \"'.\");\n+        }\n@@ -75,0 +81,3 @@\n+        if (!Renderer.isValidName(key)) {\n+            throw new RendererException(\"Is not a valid hashtag replacement name: '\" + key + \"'.\");\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/TemplateFrame.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -144,0 +144,7 @@\n+        expectRendererException(() -> testFailingDollarName1(), \"Is not a valid '$' name: ''.\");\n+        expectRendererException(() -> testFailingDollarName2(), \"Is not a valid '$' name: '#abc'.\");\n+        expectRendererException(() -> testFailingDollarName3(), \"Is not a valid '$' name: 'abc#'.\");\n+        expectRendererException(() -> testFailingHashtagName1(), \"Is not a valid hashtag replacement name: ''.\");\n+        expectRendererException(() -> testFailingHashtagName2(), \"Is not a valid hashtag replacement name: 'abc#abc'.\");\n+        expectRendererException(() -> testFailingHashtagName3(), \"Is not a valid hashtag replacement name: ''.\");\n+        expectRendererException(() -> testFailingHashtagName4(), \"Is not a valid hashtag replacement name: 'xyz#xyz'.\");\n@@ -1752,0 +1759,51 @@\n+    public static void testFailingDollarName1() {\n+        var template1 = Template.make(() -> body(\n+            let(\"x\", $(\"\")) \/\/ empty string not allowed\n+        ));\n+        String code = template1.render();\n+    }\n+\n+    public static void testFailingDollarName2() {\n+        var template1 = Template.make(() -> body(\n+            let(\"x\", $(\"#abc\")) \/\/ \"#\" character not allowed\n+        ));\n+        String code = template1.render();\n+    }\n+\n+    public static void testFailingDollarName3() {\n+        var template1 = Template.make(() -> body(\n+            let(\"x\", $(\"abc#\")) \/\/ \"#\" character not allowed\n+        ));\n+        String code = template1.render();\n+    }\n+\n+    public static void testFailingHashtagName1() {\n+        \/\/ Empty Template argument\n+        var template1 = Template.make(\"\", (String x) -> body(\n+        ));\n+        String code = template1.render(\"abc\");\n+    }\n+\n+    public static void testFailingHashtagName2() {\n+        \/\/ \"#\" character not allowed in template argument\n+        var template1 = Template.make(\"abc#abc\", (String x) -> body(\n+        ));\n+        String code = template1.render(\"abc\");\n+    }\n+\n+    public static void testFailingHashtagName3() {\n+        var template1 = Template.make(() -> body(\n+            \/\/ Empty let hashtag name not allowed\n+            let(\"\", \"abc\")\n+        ));\n+        String code = template1.render();\n+    }\n+\n+    public static void testFailingHashtagName4() {\n+        var template1 = Template.make(() -> body(\n+        \/\/ \"#\" character not allowed in let hashtag name\n+            let(\"xyz#xyz\", \"abc\")\n+        ));\n+        String code = template1.render();\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/tests\/TestTemplate.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"modified"}]}