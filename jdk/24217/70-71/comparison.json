{"files":[{"patch":"@@ -33,5 +33,4 @@\n- * as {@link Token}s are rendered, and adding names to the {@link NameSet}s with {@link Template#addName}.\n- * {@link Hook}s can be added to a frame, which allows code to be inserted at that location later.\n- * When a {@link Hook} is {@link Hook#set}, this separates the Template into an outer and inner\n- * {@link CodeFrame}, ensuring that names that are {@link Template#addName}'d inside the inner frame\n- * are only available inside that frame.\n+ * as {@link Token}s are rendered, and adding names to the {@link NameSet}s with {@link Template#addStructuralName}\/\n+ * {@link Template#addDataName}. {@link Hook}s can be added to a frame, which allows code to be inserted at that\n+ * location later. When a {@link Hook} is {@link Hook#anchor}ed, it separates the Template into an outer and inner\n+ * {@link CodeFrame}, ensuring that names that are added inside the inner frame are only available inside that frame.\n@@ -52,1 +51,1 @@\n-    private final List<Code> codeList = new ArrayList<Code>();\n+    private final List<Code> codeList = new ArrayList<>();\n@@ -58,1 +57,1 @@\n-    final NameSet names;\n+    private final NameSet names;\n@@ -67,1 +66,1 @@\n-            this.names     = parent.names;\n+            this.names = parent.names;\n@@ -70,1 +69,1 @@\n-            this.names     = new NameSet(parent.names);\n+            this.names = new NameSet(parent.names);\n@@ -96,1 +95,1 @@\n-     * {@link Hook#set} earlier and are now {@link Hook#insert}ing into.\n+     * {@link Hook#anchor} earlier and are now {@link Hook#insert}ing into.\n@@ -118,1 +117,1 @@\n-    boolean hasHook(Hook hook) {\n+    private boolean hasHook(Hook hook) {\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/CodeFrame.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-     * @return The {@String} name of the name, that can be used in code.\n+     * @return The {@link String} name of the name, that can be used in code.\n@@ -54,1 +54,1 @@\n-    public interface Type {\n+    interface Type {\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Name.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    static final Random RANDOM = Utils.getRandomInstance();\n+    private static final Random RANDOM = Utils.getRandomInstance();\n@@ -58,1 +58,1 @@\n-        long w = names.stream().filter(n -> predicate.check(n)).mapToInt(Name::weight).sum();\n+        long w = names.stream().filter(predicate::check).mapToInt(Name::weight).sum();\n@@ -64,1 +64,1 @@\n-        int c = (int)names.stream().filter(n -> predicate.check(n)).count();\n+        int c = (int)names.stream().filter(predicate::check).count();\n@@ -70,1 +70,1 @@\n-        return names.stream().anyMatch(n -> predicate.check(n)) ||\n+        return names.stream().anyMatch(predicate::check) ||\n@@ -77,1 +77,1 @@\n-        list.addAll(names.stream().filter(n -> predicate.check(n)).toList());\n+        list.addAll(names.stream().filter(predicate::check).toList());\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/NameSet.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * The {@link Template#body} and {@link Hook#set} are given a list of tokens, which are either\n+ * The {@link Template#body} and {@link Hook#anchor} are given a list of tokens, which are either\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Token.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}