{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.util.Optional;\n@@ -40,0 +41,1 @@\n+    private final List<NameSet> children = new ArrayList<>();\n@@ -48,0 +50,5 @@\n+        if (parent != null) { parent.registerChild(this); }\n+    }\n+\n+    void registerChild(NameSet child) {\n+        children.add(child);\n@@ -97,0 +104,30 @@\n+    private Name findLocal(String name) {\n+        Optional<Name> opt = names.stream().filter(n -> n.name().equals(name)).findAny();\n+        return opt.orElse(null);\n+    }\n+\n+    private Name findParents(String name) {\n+        if (parent == null) { return null; }\n+        Name n = parent.findLocal(name);\n+        if (n != null) { return n; }\n+        return parent.findParents(name);\n+    }\n+\n+    private Name findChildren(String name) {\n+        for (NameSet child : children) {\n+            Name n1 = child.findLocal(name);\n+            if (n1 != null) { return n1; }\n+            Name n2 = child.findChildren(name);\n+            if (n2 != null) { return n2; }\n+        }\n+        return null;\n+    }\n+\n+    private Name find(String name) {\n+        Name n1 = findLocal(name);\n+        if (n1 != null) { return n1; }\n+        Name n2 = findParents(name);\n+        if (n2 != null) { return n2; }\n+        return findChildren(name);\n+    }\n+\n@@ -101,1 +138,4 @@\n-        \/\/ TODO: verification!\n+        Name other = find(name.name());\n+        if (other != null) {\n+            throw new RendererException(\"Duplicate name: \" + name + \", previously: \" + other);\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/NameSet.java","additions":41,"deletions":1,"binary":false,"changes":42,"status":"modified"}]}