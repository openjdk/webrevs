{"files":[{"patch":"@@ -29,1 +29,1 @@\n- * {@link Hook}s can be {@link #set} for a certain scope in a Template, and all nested\n+ * {@link Hook}s can be {@link #anchor}ed for a certain scope in a Template, and all nested\n@@ -31,1 +31,1 @@\n- * {@link #insert} code to where the {@link Hook} was {@link #set}. This can be useful to reach\n+ * {@link #insert} code to where the {@link Hook} was {@link #anchor}ed. This can be useful to reach\n@@ -49,2 +49,2 @@\n- *     \/\/ Set the hook here.\n- *     myHook.set(\n+ *     \/\/ Anchor the hook here.\n+ *     myHook.anchor(\n@@ -55,1 +55,1 @@\n- *         \/\/ Reach out to where the hook was set, and insert the code of template1.\n+ *         \/\/ Reach out to where the hook was anchored, and insert the code of template1.\n@@ -71,1 +71,1 @@\n-     * Set this {@link Hook} for the scope of the provided {@code 'tokens'}.\n+     * Anchor this {@link Hook} for the scope of the provided {@code 'tokens'}.\n@@ -73,1 +73,1 @@\n-     * {@link #insert}ed back to the location where this {@link Hook} was {@link #set}.\n+     * {@link #insert}ed back to the location where this {@link Hook} was {@link #anchor}ed.\n@@ -76,1 +76,1 @@\n-     * @return A {@link Token} that captures the setting of the scope and the list of validated {@link Token}s.\n+     * @return A {@link Token} that captures the anchoring of the scope and the list of validated {@link Token}s.\n@@ -78,2 +78,2 @@\n-    public Token set(Object... tokens) {\n-        return new HookSetToken(this, Token.parse(tokens));\n+    public Token anchor(Object... tokens) {\n+        return new HookAnchorToken(this, Token.parse(tokens));\n@@ -83,1 +83,1 @@\n-     * Inserts a {@link TemplateToken} to the innermost location where this {@link Hook} was {@link #set}.\n+     * Inserts a {@link TemplateToken} to the innermost location where this {@link Hook} was {@link #anchor}ed.\n@@ -94,1 +94,1 @@\n-     * Checks if the {@link Hook} was {@link Hook#set} for the current scope or an outer scope.\n+     * Checks if the {@link Hook} was {@link Hook#anchor}ed for the current scope or an outer scope.\n@@ -96,1 +96,1 @@\n-     * @return If the {@link Hook} was {@link Hook#set} for the current scope or an outer scope.\n+     * @return If the {@link Hook} was {@link Hook#anchor}ed for the current scope or an outer scope.\n@@ -98,2 +98,2 @@\n-    public boolean isSet() {\n-        return Renderer.getCurrent().isSet(this);\n+    public boolean isAnchored() {\n+        return Renderer.getCurrent().isAnchored(this);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Hook.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-record HookSetToken(Hook hook, List<Token> tokens) implements Token {}\n+record HookAnchorToken(Hook hook, List<Token> tokens) implements Token {}\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/HookAnchorToken.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/HookSetToken.java","status":"renamed"},{"patch":"@@ -243,1 +243,1 @@\n-            case HookSetToken(Hook hook, List<Token> tokens) -> {\n+            case HookAnchorToken(Hook hook, List<Token> tokens) -> {\n@@ -321,1 +321,1 @@\n-    boolean isSet(Hook hook) {\n+    boolean isAnchored(Hook hook) {\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Renderer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n- * {@link Hook#insert}ed to where a {@link Hook} was {@link Hook#set} earlier (in some outer scope of the code).\n+ * {@link Hook#insert}ed to where a {@link Hook} was {@link Hook#anchor}ed earlier (in some outer scope of the code).\n@@ -235,1 +235,1 @@\n- *     METHOD_HOOK.set(\n+ *     METHOD_HOOK.anchor(\n@@ -747,1 +747,1 @@\n-     * {@link Template#body} or {@link Hook#set}.\n+     * {@link Template#body} or {@link Hook#anchor}.\n@@ -769,1 +769,1 @@\n-     * {@link Template#body} or {@link Hook#set}, with a {@code weight} of 1.\n+     * {@link Template#body} or {@link Hook#anchor}, with a {@code weight} of 1.\n@@ -794,1 +794,1 @@\n-     * {@link Template#body} or {@link Hook#set}.\n+     * {@link Template#body} or {@link Hook#anchor}.\n@@ -808,1 +808,1 @@\n-     * {@link Template#body} or {@link Hook#set}, with a {@code weight} of 1.\n+     * {@link Template#body} or {@link Hook#anchor}, with a {@code weight} of 1.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Template.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-                               HookSetToken,\n+                               HookAnchorToken,\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Token.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -289,1 +289,1 @@\n-            \/\/ As long as the hook is set, we can insert code into the hook,\n+            \/\/ As long as the hook is anchored, we can insert code into the hook,\n@@ -291,1 +291,1 @@\n-            myHook.set(\n+            myHook.anchor(\n@@ -347,1 +347,1 @@\n-            Hooks.CLASS_HOOK.set(\n+            Hooks.CLASS_HOOK.anchor(\n@@ -352,1 +352,1 @@\n-                Hooks.METHOD_HOOK.set(\n+                Hooks.METHOD_HOOK.anchor(\n@@ -370,1 +370,1 @@\n-                Hooks.METHOD_HOOK.set(\n+                Hooks.METHOD_HOOK.anchor(\n@@ -660,1 +660,1 @@\n-            Hooks.CLASS_HOOK.set(\n+            Hooks.CLASS_HOOK.anchor(\n@@ -665,1 +665,1 @@\n-                Hooks.METHOD_HOOK.set(\n+                Hooks.METHOD_HOOK.anchor(\n@@ -683,1 +683,1 @@\n-                Hooks.METHOD_HOOK.set(\n+                Hooks.METHOD_HOOK.anchor(\n@@ -791,1 +791,1 @@\n-                Hooks.CLASS_HOOK.set(\n+                Hooks.CLASS_HOOK.anchor(\n@@ -888,2 +888,2 @@\n-            \/\/ We must set a CLASS_HOOK here, and insert the method definitions to that hook.\n-            Hooks.CLASS_HOOK.set(\n+            \/\/ We must anchor a CLASS_HOOK here, and insert the method definitions to that hook.\n+            Hooks.CLASS_HOOK.anchor(\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestTutorial.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-        testHookIsSet();\n+        testHookIsAnchored();\n@@ -122,1 +122,1 @@\n-        expectRendererException(() -> (new Hook(\"abc\")).isSet(),          \"A Template method such as\");\n+        expectRendererException(() -> (new Hook(\"abc\")).isAnchored(),     \"A Template method such as\");\n@@ -135,3 +135,3 @@\n-        expectIllegalArgumentException(() -> hook1.set(null),         \"Unexpected tokens: null\");\n-        expectIllegalArgumentException(() -> hook1.set(\"x\", null),    \"Unexpected token: null\");\n-        expectIllegalArgumentException(() -> hook1.set(hook1),        \"Unexpected token:\");\n+        expectIllegalArgumentException(() -> hook1.anchor(null),      \"Unexpected tokens: null\");\n+        expectIllegalArgumentException(() -> hook1.anchor(\"x\", null), \"Unexpected token: null\");\n+        expectIllegalArgumentException(() -> hook1.anchor(hook1),     \"Unexpected token:\");\n@@ -313,1 +313,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -330,1 +330,1 @@\n-    public static void testHookIsSet() {\n+    public static void testHookIsAnchored() {\n@@ -333,1 +333,1 @@\n-        var template0 = Template.make(() -> body(\"isSet: \", hook1.isSet(), \"\\n\"));\n+        var template0 = Template.make(() -> body(\"isSet: \", hook1.isAnchored(), \"\\n\"));\n@@ -340,1 +340,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -371,1 +371,1 @@\n-            hook1.set(), \/\/ empty\n+            hook1.anchor(), \/\/ empty\n@@ -373,1 +373,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -379,1 +379,1 @@\n-                hook1.set(\n+                hook1.anchor(\n@@ -385,1 +385,1 @@\n-                hook1.set(), \/\/ empty\n+                hook1.anchor(), \/\/ empty\n@@ -389,1 +389,1 @@\n-                hook1.set(\n+                hook1.anchor(\n@@ -436,1 +436,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -441,1 +441,1 @@\n-                hook2.set(\n+                hook2.anchor(\n@@ -463,1 +463,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -465,1 +465,1 @@\n-                hook2.set(\n+                hook2.anchor(\n@@ -524,1 +524,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -537,1 +537,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -590,1 +590,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -594,1 +594,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -658,1 +658,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -936,1 +936,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -1040,1 +1040,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -1145,1 +1145,1 @@\n-            hook1.set(\n+            hook1.anchor(\n@@ -1239,1 +1239,1 @@\n-            hook1.set(\n+            hook1.anchor(\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/tests\/TestTemplate.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"}]}