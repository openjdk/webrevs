{"files":[{"patch":"@@ -31,2 +31,2 @@\n- * All the Strings are later collected in a {@link StringBuilder}. If we used a {@link StringBuilder}\n- * directly to collect the Strings, we could not as easily insert code at an \"earlier\" position, i.e.\n+ * All the {@link String}s are later collected in a {@link StringBuilder}. If we used a {@link StringBuilder}\n+ * directly to collect the {@link String}s, we could not as easily insert code at an \"earlier\" position, i.e.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Code.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n- * of tokens that are concatenated (i.e. rendered) to a String. The Templates can have \"holes\", which are\n+ * of tokens that are concatenated (i.e. rendered) to a {@link String}. The Templates can have \"holes\", which are\n@@ -53,1 +53,1 @@\n- * Once we rendered the source code to a String, we can compile it with the {@code CompileFramework}.\n+ * Once we rendered the source code to a {@link String}, we can compile it with the {@code CompileFramework}.\n@@ -149,1 +149,1 @@\n- * A {@link Template} can be rendered to a String (e.g. {@link Template.ZeroArgs#render()}).\n+ * A {@link Template} can be rendered to a {@link String} (e.g. {@link Template.ZeroArgs#render()}).\n@@ -154,4 +154,4 @@\n- * Ideally, we would have used String Templates to inject these Template arguments into the strings.\n- * But since String Templates are not (yet) available, the Templates provide <strong>hashtag replacements<\/strong>\n- * in the Strings: the Template argument names are captured, and the argument values automatically replace any\n- * {@code \"#name\"} in the Strings. See the different overloads of {@link #make} for examples. Additional hashtag\n+ * Ideally, we would have used {@link String} Templates to inject these Template arguments into the strings.\n+ * But since {@link String} Templates are not (yet) available, the Templates provide <strong>hashtag replacements<\/strong>\n+ * in the {@link String}s: the Template argument names are captured, and the argument values automatically replace any\n+ * {@code \"#name\"} in the {@link String}s. See the different overloads of {@link #make} for examples. Additional hashtag\n@@ -163,1 +163,1 @@\n- * {@code \"$name\"} in the String with a {@code \"name_ID\"}, where the {@code \"ID\"} is unique for every use of\n+ * {@code \"$name\"} in the {@link String} with a {@code \"name_ID\"}, where the {@code \"ID\"} is unique for every use of\n@@ -219,1 +219,1 @@\n-         * Renders the {@link Template} to String.\n+         * Renders the {@link Template} to {@link String}.\n@@ -221,1 +221,1 @@\n-         * @return The String, resulting from rendering the {@link Template}.\n+         * @return The {@link String}, resulting from rendering the {@link Template}.\n@@ -228,1 +228,1 @@\n-         * Renders the {@link Template} to String.\n+         * Renders the {@link Template} to {@link String}.\n@@ -231,1 +231,1 @@\n-         * @return The String, resulting from rendering the {@link Template}.\n+         * @return The {@link String}, resulting from rendering the {@link Template}.\n@@ -262,1 +262,1 @@\n-         * Renders the {@link Template} to String.\n+         * Renders the {@link Template} to {@link String}.\n@@ -265,1 +265,1 @@\n-         * @return The String, resulting from rendering the {@link Template}.\n+         * @return The {@link String}, resulting from rendering the {@link Template}.\n@@ -272,1 +272,1 @@\n-         * Renders the {@link Template} to String.\n+         * Renders the {@link Template} to {@link String}.\n@@ -276,1 +276,1 @@\n-         * @return The String, resulting from rendering the {@link Template}.\n+         * @return The {@link String}, resulting from rendering the {@link Template}.\n@@ -310,1 +310,1 @@\n-         * Renders the {@link Template} to String.\n+         * Renders the {@link Template} to {@link String}.\n@@ -314,1 +314,1 @@\n-         * @return The String, resulting from rendering the {@link Template}.\n+         * @return The {@link String}, resulting from rendering the {@link Template}.\n@@ -321,1 +321,1 @@\n-         * Renders the {@link Template} to String.\n+         * Renders the {@link Template} to {@link String}.\n@@ -326,1 +326,1 @@\n-         * @return The String, resulting from rendering the {@link Template}.\n+         * @return The {@link String}, resulting from rendering the {@link Template}.\n@@ -385,1 +385,1 @@\n-         * Renders the {@link Template} to String.\n+         * Renders the {@link Template} to {@link String}.\n@@ -390,1 +390,1 @@\n-         * @return The String, resulting from rendering the {@link Template}.\n+         * @return The {@link String}, resulting from rendering the {@link Template}.\n@@ -397,1 +397,1 @@\n-         * Renders the {@link Template} to String.\n+         * Renders the {@link Template} to {@link String}.\n@@ -403,1 +403,1 @@\n-         * @return The String, resulting from rendering the {@link Template}.\n+         * @return The {@link String}, resulting from rendering the {@link Template}.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Template.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"}]}