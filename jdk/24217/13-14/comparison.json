{"files":[{"patch":"@@ -35,1 +35,1 @@\n- * When a {@link Hook} is {@link Hook#set}, this separates the {@link Template} into an outer and inner\n+ * When a {@link Hook} is {@link Hook#set}, this separates the Template into an outer and inner\n@@ -41,1 +41,1 @@\n- * {@link Template}.\n+ * Template.\n@@ -44,1 +44,1 @@\n- * For simple {@link Template} nesting, the {@link CodeFrame}s and {@link TemplateFrame}s overlap exactly.\n+ * For simple Template nesting, the {@link CodeFrame}s and {@link TemplateFrame}s overlap exactly.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/CodeFrame.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * {@link Hook}s can be {@link #set} for a certain scope in a {@link Template}, and all nested\n- * {@link Template}s in this scope, and then from within this scope, any {@link Template} can\n+ * {@link Hook}s can be {@link #set} for a certain scope in a Template, and all nested\n+ * Templates in this scope, and then from within this scope, any Template can\n@@ -72,1 +72,1 @@\n-     * From anywhere inside this scope, even in nested {@link Template}s, code can be\n+     * From anywhere inside this scope, even in nested Templates, code can be\n@@ -84,1 +84,1 @@\n-     * This could be in the same {@link Template}, or one nested further out.\n+     * This could be in the same Template, or one nested further out.\n@@ -86,1 +86,1 @@\n-     * @param filledTemplate The {@link Template} with applied arguments to be inserted at the {@link Hook}.\n+     * @param filledTemplate The Template with applied arguments to be inserted at the {@link Hook}.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Hook.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * {@link Template} rendering. There can only be a single {@link Renderer} active\n+ * Template rendering. There can only be a single {@link Renderer} active\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Renderer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * This exception is thrown when something goes wrong during {@link Template}\n+ * This exception is thrown when something goes wrong during Template\n@@ -29,1 +29,1 @@\n- * It most likely indicates a wrong use of the {@link Template}s.\n+ * It most likely indicates a wrong use of the Templates.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/RendererException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * To facilitate recursive uses of {@link Template}s, e.g. where a template uses\n+ * To facilitate recursive uses of Templates, e.g. where a template uses\n@@ -30,4 +30,4 @@\n- * is allocated first without any {@link Template} bound to it yet. At this stage,\n- * it can be used with {@link #get} inside a {@link Template}. Later, we can {@link #bind}\n- * a {@link Template} to the binding, such that {@link #get} returns that bound\n- * {@link Template}.\n+ * is allocated first without any Template bound to it yet. At this stage,\n+ * it can be used with {@link #get} inside a Template. Later, we can {@link #bind}\n+ * a Template to the binding, such that {@link #get} returns that bound\n+ * Template.\n@@ -40,0 +40,3 @@\n+    \/**\n+     * A collection of Bindable types.\n+     *\/\n@@ -46,1 +49,1 @@\n-     * Creates a new {@link TemplateBinding} that has no {@link Template} bound to it yet.\n+     * Creates a new {@link TemplateBinding} that has no Template bound to it yet.\n@@ -51,1 +54,1 @@\n-     * Retrieve the {@link Template} that was previously bound to the binding.\n+     * Retrieve the Template that was previously bound to the binding.\n@@ -53,2 +56,2 @@\n-     * @return The {@link Template} that was previously bound with {@link #bind}.\n-     * @throws RendererException if no {@link Template} was bound yet.\n+     * @return The Template that was previously bound with {@link #bind}.\n+     * @throws RendererException if no Template was bound yet.\n@@ -65,1 +68,1 @@\n-     * Binds a {@link Template} for future reference using {@link #get}.\n+     * Binds a Template for future reference using {@link #get}.\n@@ -67,2 +70,2 @@\n-     * @param template The {@link Template} to be bound.\n-     * @throws RendererException if a {@link Template} was already bound.\n+     * @param template The Template to be bound.\n+     * @throws RendererException if a Template was already bound.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/TemplateBinding.java","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * A {@link Template} generates a {@link TemplateBody}, which is a list of {@link Token}s,\n+ * A Template generates a {@link TemplateBody}, which is a list of {@link Token}s,\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/TemplateBody.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}