{"files":[{"patch":"@@ -324,2 +324,2 @@\n-     * @param arg0Name The name of the (first) argument, used for hashtag replacements in the {@link Template}.\n-     * @param <A> The type of the (first) argument.\n+     * @param arg1Name The name of the (first) argument, used for hashtag replacements in the {@link Template}.\n+     * @param <T1> The type of the (first) argument.\n@@ -328,3 +328,3 @@\n-    record OneArg<A>(String arg0Name, Function<A, TemplateBody> function) implements Template {\n-        TemplateBody instantiate(A a) {\n-            return function.apply(a);\n+    record OneArg<T1>(String arg1Name, Function<T1, TemplateBody> function) implements Template {\n+        TemplateBody instantiate(T1 arg1) {\n+            return function.apply(arg1);\n@@ -337,1 +337,1 @@\n-         * @param a The value for the (first) argument.\n+         * @param arg1 The value for the (first) argument.\n@@ -341,2 +341,2 @@\n-        public TemplateToken asToken(A a) {\n-            return new TemplateToken.OneArg<>(this, a);\n+        public TemplateToken asToken(T1 arg1) {\n+            return new TemplateToken.OneArg<>(this, arg1);\n@@ -348,1 +348,1 @@\n-         * @param a The value for the first argument.\n+         * @param arg1 The value for the first argument.\n@@ -351,2 +351,2 @@\n-        public String render(A a) {\n-            return new TemplateToken.OneArg<>(this, a).render();\n+        public String render(T1 arg1) {\n+            return new TemplateToken.OneArg<>(this, arg1).render();\n@@ -358,1 +358,1 @@\n-         * @param a The value for the first argument.\n+         * @param arg1 The value for the first argument.\n@@ -362,2 +362,2 @@\n-        public String render(float fuel, A a) {\n-            return new TemplateToken.OneArg<>(this, a).render(fuel);\n+        public String render(float fuel, T1 arg1) {\n+            return new TemplateToken.OneArg<>(this, arg1).render(fuel);\n@@ -370,4 +370,4 @@\n-     * @param arg0Name The name of the first argument, used for hashtag replacements in the {@link Template}.\n-     * @param arg1Name The name of the second argument, used for hashtag replacements in the {@link Template}.\n-     * @param <A> The type of the first argument.\n-     * @param <B> The type of the second argument.\n+     * @param arg1Name The name of the first argument, used for hashtag replacements in the {@link Template}.\n+     * @param arg2Name The name of the second argument, used for hashtag replacements in the {@link Template}.\n+     * @param <T1> The type of the first argument.\n+     * @param <T2> The type of the second argument.\n@@ -376,3 +376,3 @@\n-    record TwoArgs<A, B>(String arg0Name, String arg1Name, BiFunction<A, B, TemplateBody> function) implements Template {\n-        TemplateBody instantiate(A a, B b) {\n-            return function.apply(a, b);\n+    record TwoArgs<T1, T2>(String arg1Name, String arg2Name, BiFunction<T1, T2, TemplateBody> function) implements Template {\n+        TemplateBody instantiate(T1 arg1, T2 arg2) {\n+            return function.apply(arg1, arg2);\n@@ -385,2 +385,2 @@\n-         * @param a The value for the first argument.\n-         * @param b The value for the second argument.\n+         * @param arg1 The value for the first argument.\n+         * @param arg2 The value for the second argument.\n@@ -390,2 +390,2 @@\n-        public TemplateToken asToken(A a, B b) {\n-            return new TemplateToken.TwoArgs<>(this, a, b);\n+        public TemplateToken asToken(T1 arg1, T2 arg2) {\n+            return new TemplateToken.TwoArgs<>(this, arg1, arg2);\n@@ -397,2 +397,2 @@\n-         * @param a The value for the first argument.\n-         * @param b The value for the second argument.\n+         * @param arg1 The value for the first argument.\n+         * @param arg2 The value for the second argument.\n@@ -401,2 +401,2 @@\n-        public String render(A a, B b) {\n-            return new TemplateToken.TwoArgs<>(this, a, b).render();\n+        public String render(T1 arg1, T2 arg2) {\n+            return new TemplateToken.TwoArgs<>(this, arg1, arg2).render();\n@@ -408,2 +408,2 @@\n-         * @param a The value for the first argument.\n-         * @param b The value for the second argument.\n+         * @param arg1 The value for the first argument.\n+         * @param arg2 The value for the second argument.\n@@ -413,2 +413,2 @@\n-        public String render(float fuel, A a, B b) {\n-            return new TemplateToken.TwoArgs<>(this, a, b).render(fuel);\n+        public String render(float fuel, T1 arg1, T2 arg2) {\n+            return new TemplateToken.TwoArgs<>(this, arg1, arg2).render(fuel);\n@@ -443,6 +443,6 @@\n-     * @param arg0Name The name of the first argument, used for hashtag replacements in the {@link Template}.\n-     * @param arg1Name The name of the second argument, used for hashtag replacements in the {@link Template}.\n-     * @param arg2Name The name of the third argument, used for hashtag replacements in the {@link Template}.\n-     * @param <A> The type of the first argument.\n-     * @param <B> The type of the second argument.\n-     * @param <C> The type of the third argument.\n+     * @param arg1Name The name of the first argument, used for hashtag replacements in the {@link Template}.\n+     * @param arg2Name The name of the second argument, used for hashtag replacements in the {@link Template}.\n+     * @param arg3Name The name of the third argument, used for hashtag replacements in the {@link Template}.\n+     * @param <T1> The type of the first argument.\n+     * @param <T2> The type of the second argument.\n+     * @param <T3> The type of the third argument.\n@@ -451,3 +451,3 @@\n-    record ThreeArgs<A, B, C>(String arg0Name, String arg1Name, String arg2Name, TriFunction<A, B, C, TemplateBody> function) implements Template {\n-        TemplateBody instantiate(A a, B b, C c) {\n-            return function.apply(a, b, c);\n+    record ThreeArgs<T1, T2, T3>(String arg1Name, String arg2Name, String arg3Name, TriFunction<T1, T2, T3, TemplateBody> function) implements Template {\n+        TemplateBody instantiate(T1 arg1, T2 arg2, T3 arg3) {\n+            return function.apply(arg1, arg2, arg3);\n@@ -460,3 +460,3 @@\n-         * @param a The value for the first argument.\n-         * @param b The value for the second argument.\n-         * @param c The value for the third argument.\n+         * @param arg1 The value for the first argument.\n+         * @param arg2 The value for the second argument.\n+         * @param arg3 The value for the third argument.\n@@ -466,2 +466,2 @@\n-        public TemplateToken asToken(A a, B b, C c) {\n-            return new TemplateToken.ThreeArgs<>(this, a, b, c);\n+        public TemplateToken asToken(T1 arg1, T2 arg2, T3 arg3) {\n+            return new TemplateToken.ThreeArgs<>(this, arg1, arg2, arg3);\n@@ -473,3 +473,3 @@\n-         * @param a The value for the first argument.\n-         * @param b The value for the second argument.\n-         * @param c The value for the third argument.\n+         * @param arg1 The value for the first argument.\n+         * @param arg2 The value for the second argument.\n+         * @param arg3 The value for the third argument.\n@@ -478,2 +478,2 @@\n-        public String render(A a, B b, C c) {\n-            return new TemplateToken.ThreeArgs<>(this, a, b, c).render();\n+        public String render(T1 arg1, T2 arg2, T3 arg3) {\n+            return new TemplateToken.ThreeArgs<>(this, arg1, arg2, arg3).render();\n@@ -485,3 +485,3 @@\n-         * @param a The value for the first argument.\n-         * @param b The value for the second argument.\n-         * @param c The value for the third argument.\n+         * @param arg1 The value for the first argument.\n+         * @param arg2 The value for the second argument.\n+         * @param arg3 The value for the third argument.\n@@ -491,2 +491,2 @@\n-        public String render(float fuel, A a, B b, C c) {\n-            return new TemplateToken.ThreeArgs<>(this, a, b, c).render(fuel);\n+        public String render(float fuel, T1 arg1, T2 arg2, T3 arg3) {\n+            return new TemplateToken.ThreeArgs<>(this, arg1, arg2, arg3).render(fuel);\n@@ -536,2 +536,2 @@\n-     * @param <A> Type of the (first) argument.\n-     * @param arg0Name The name of the (first) argument for hashtag replacement.\n+     * @param <T1> Type of the (first) argument.\n+     * @param arg1Name The name of the (first) argument for hashtag replacement.\n@@ -540,2 +540,2 @@\n-    static <A> Template.OneArg<A> make(String arg0Name, Function<A, TemplateBody> body) {\n-        return new Template.OneArg<>(arg0Name, body);\n+    static <T1> Template.OneArg<T1> make(String arg1Name, Function<T1, TemplateBody> body) {\n+        return new Template.OneArg<>(arg1Name, body);\n@@ -563,4 +563,4 @@\n-     * @param <A> Type of the first argument.\n-     * @param arg0Name The name of the first argument for hashtag replacement.\n-     * @param <B> Type of the second argument.\n-     * @param arg1Name The name of the second argument for hashtag replacement.\n+     * @param <T1> Type of the first argument.\n+     * @param arg1Name The name of the first argument for hashtag replacement.\n+     * @param <T2> Type of the second argument.\n+     * @param arg2Name The name of the second argument for hashtag replacement.\n@@ -569,2 +569,2 @@\n-    static <A, B> Template.TwoArgs<A, B> make(String arg0Name, String arg1Name, BiFunction<A, B, TemplateBody> body) {\n-        return new Template.TwoArgs<>(arg0Name, arg1Name, body);\n+    static <T1, T2> Template.TwoArgs<T1, T2> make(String arg1Name, String arg2Name, BiFunction<T1, T2, TemplateBody> body) {\n+        return new Template.TwoArgs<>(arg1Name, arg2Name, body);\n@@ -578,6 +578,6 @@\n-     * @param <A> Type of the first argument.\n-     * @param arg0Name The name of the first argument for hashtag replacement.\n-     * @param <B> Type of the second argument.\n-     * @param arg1Name The name of the second argument for hashtag replacement.\n-     * @param <C> Type of the third argument.\n-     * @param arg2Name The name of the third argument for hashtag replacement.\n+     * @param <T1> Type of the first argument.\n+     * @param arg1Name The name of the first argument for hashtag replacement.\n+     * @param <T2> Type of the second argument.\n+     * @param arg2Name The name of the second argument for hashtag replacement.\n+     * @param <T3> Type of the third argument.\n+     * @param arg3Name The name of the third argument for hashtag replacement.\n@@ -586,2 +586,2 @@\n-    static <A, B, C> Template.ThreeArgs<A, B, C> make(String arg0Name, String arg1Name, String arg2Name, Template.TriFunction<A, B, C, TemplateBody> body) {\n-        return new Template.ThreeArgs<>(arg0Name, arg1Name, arg2Name, body);\n+    static <T1, T2, T3> Template.ThreeArgs<T1, T2, T3> make(String arg1Name, String arg2Name, String arg3Name, Template.TriFunction<T1, T2, T3, TemplateBody> body) {\n+        return new Template.ThreeArgs<>(arg1Name, arg2Name, arg3Name, body);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Template.java","additions":75,"deletions":75,"binary":false,"changes":150,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-     * @param <A> The type of the (first) argument.\n+     * @param <T1> The type of the (first) argument.\n@@ -67,3 +67,3 @@\n-    static final class OneArg<A> extends TemplateToken implements Token {\n-        private final Template.OneArg<A> oneArgs;\n-        private final A a;\n+    static final class OneArg<T1> extends TemplateToken implements Token {\n+        private final Template.OneArg<T1> oneArgs;\n+        private final T1 arg1;\n@@ -71,1 +71,1 @@\n-        OneArg(Template.OneArg<A> oneArgs, A a) {\n+        OneArg(Template.OneArg<T1> oneArgs, T1 arg1) {\n@@ -73,1 +73,1 @@\n-            this.a = a;\n+            this.arg1 = arg1;\n@@ -78,1 +78,1 @@\n-            return oneArgs.instantiate(a);\n+            return oneArgs.instantiate(arg1);\n@@ -83,1 +83,1 @@\n-            visitor.visit(oneArgs.arg0Name(), a);\n+            visitor.visit(oneArgs.arg1Name(), arg1);\n@@ -92,2 +92,2 @@\n-     * @param <A> The type of the first argument.\n-     * @param <B> The type of the second argument.\n+     * @param <T1> The type of the first argument.\n+     * @param <T2> The type of the second argument.\n@@ -95,4 +95,4 @@\n-    static final class TwoArgs<A, B> extends TemplateToken implements Token {\n-        private final Template.TwoArgs<A, B> twoArgs;\n-        private final A a;\n-        private final B b;\n+    static final class TwoArgs<T1, T2> extends TemplateToken implements Token {\n+        private final Template.TwoArgs<T1, T2> twoArgs;\n+        private final T1 arg1;\n+        private final T2 arg2;\n@@ -100,1 +100,1 @@\n-        TwoArgs(Template.TwoArgs<A, B> twoArgs, A a, B b) {\n+        TwoArgs(Template.TwoArgs<T1, T2> twoArgs, T1 arg1, T2 arg2) {\n@@ -102,2 +102,2 @@\n-            this.a = a;\n-            this.b = b;\n+            this.arg1 = arg1;\n+            this.arg2 = arg2;\n@@ -108,1 +108,1 @@\n-            return twoArgs.instantiate(a, b);\n+            return twoArgs.instantiate(arg1, arg2);\n@@ -113,2 +113,2 @@\n-            visitor.visit(twoArgs.arg0Name(), a);\n-            visitor.visit(twoArgs.arg1Name(), b);\n+            visitor.visit(twoArgs.arg1Name(), arg1);\n+            visitor.visit(twoArgs.arg2Name(), arg2);\n@@ -123,3 +123,3 @@\n-     * @param <A> The type of the first argument.\n-     * @param <B> The type of the second argument.\n-     * @param <C> The type of the second argument.\n+     * @param <T1> The type of the first argument.\n+     * @param <T2> The type of the second argument.\n+     * @param <T3> The type of the second argument.\n@@ -127,5 +127,5 @@\n-    static final class ThreeArgs<A, B, C> extends TemplateToken implements Token {\n-        private final Template.ThreeArgs<A, B, C> threeArgs;\n-        private final A a;\n-        private final B b;\n-        private final C c;\n+    static final class ThreeArgs<T1, T2, T3> extends TemplateToken implements Token {\n+        private final Template.ThreeArgs<T1, T2, T3> threeArgs;\n+        private final T1 arg1;\n+        private final T2 arg2;\n+        private final T3 arg3;\n@@ -133,1 +133,1 @@\n-        ThreeArgs(Template.ThreeArgs<A, B, C> threeArgs, A a, B b, C c) {\n+        ThreeArgs(Template.ThreeArgs<T1, T2, T3> threeArgs, T1 arg1, T2 arg2, T3 arg3) {\n@@ -135,3 +135,3 @@\n-            this.a = a;\n-            this.b = b;\n-            this.c = c;\n+            this.arg1 = arg1;\n+            this.arg2 = arg2;\n+            this.arg3 = arg3;\n@@ -142,1 +142,1 @@\n-            return threeArgs.instantiate(a, b, c);\n+            return threeArgs.instantiate(arg1, arg2, arg3);\n@@ -147,3 +147,3 @@\n-            visitor.visit(threeArgs.arg0Name(), a);\n-            visitor.visit(threeArgs.arg1Name(), b);\n-            visitor.visit(threeArgs.arg2Name(), c);\n+            visitor.visit(threeArgs.arg1Name(), arg1);\n+            visitor.visit(threeArgs.arg2Name(), arg2);\n+            visitor.visit(threeArgs.arg3Name(), arg3);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/TemplateToken.java","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"}]}