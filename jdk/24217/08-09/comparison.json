{"files":[{"patch":"@@ -60,0 +60,1 @@\n+ * <p>\n@@ -81,0 +82,1 @@\n+ * <p>\n@@ -85,0 +87,1 @@\n+ * <p>\n@@ -116,0 +119,1 @@\n+ * <p>\n@@ -133,0 +137,1 @@\n+ * <p>\n@@ -414,2 +419,2 @@\n-     * boxed primitive types (e.g. {@link Integer}), any {@link Token}, or {@link List}s\n-     * of any of these.\n+     * boxed primitive types (e.g. {@link Integer} or auto-boxed {@code int}), any {@link Token},\n+     * or {@link List}s of any of these.\n@@ -422,1 +427,1 @@\n-     *     \"normal string \", Integer.valueOf(3), Float.valueOf(1.5f),\n+     *     \"normal string \", Integer.valueOf(3), 3, Float.valueOf(1.5f), 1.5f,\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/Template.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -153,7 +153,7 @@\n-            new Type(\"byte\",   () -> GEN_BYTE.next(),   List.of(\"+\", \"-\", \"*\", \"&\", \"|\", \"^\")),\n-            new Type(\"char\",   () -> GEN_CHAR.next(),   List.of(\"+\", \"-\", \"*\", \"&\", \"|\", \"^\")),\n-            new Type(\"short\",  () -> GEN_SHORT.next(),  List.of(\"+\", \"-\", \"*\", \"&\", \"|\", \"^\")),\n-            new Type(\"int\",    () -> GEN_INT.next(),    List.of(\"+\", \"-\", \"*\", \"&\", \"|\", \"^\")),\n-            new Type(\"long\",   () -> GEN_LONG.next(),   List.of(\"+\", \"-\", \"*\", \"&\", \"|\", \"^\")),\n-            new Type(\"float\",  () -> GEN_FLOAT.next(),  List.of(\"+\", \"-\", \"*\", \"\/\")),\n-            new Type(\"double\", () -> GEN_DOUBLE.next(), List.of(\"+\", \"-\", \"*\", \"\/\"))\n+            new Type(\"byte\",   GEN_BYTE::next,   List.of(\"+\", \"-\", \"*\", \"&\", \"|\", \"^\")),\n+            new Type(\"char\",   GEN_CHAR::next,   List.of(\"+\", \"-\", \"*\", \"&\", \"|\", \"^\")),\n+            new Type(\"short\",  GEN_SHORT::next,  List.of(\"+\", \"-\", \"*\", \"&\", \"|\", \"^\")),\n+            new Type(\"int\",    GEN_INT::next,    List.of(\"+\", \"-\", \"*\", \"&\", \"|\", \"^\")),\n+            new Type(\"long\",   GEN_LONG::next,   List.of(\"+\", \"-\", \"*\", \"&\", \"|\", \"^\")),\n+            new Type(\"float\",  GEN_FLOAT::next,  List.of(\"+\", \"-\", \"*\", \"\/\")),\n+            new Type(\"double\", GEN_DOUBLE::next, List.of(\"+\", \"-\", \"*\", \"\/\"))\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestAdvanced.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -148,4 +148,4 @@\n-            Integer.valueOf(1),\n-            Long.valueOf(2),\n-            Double.valueOf(3.4),\n-            Float.valueOf(5.6f),\n+            Integer.valueOf(1), 1,\n+            Long.valueOf(2), 2L,\n+            Double.valueOf(3.4), 3.4,\n+            Float.valueOf(5.6f), 5.6f,\n@@ -156,1 +156,1 @@\n-        checkEQ(code, \"start 12L3.45.6f 1 and 2 end\");\n+        checkEQ(code, \"start 112L2L3.43.45.6f5.6f 1 and 2 end\");\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/tests\/TestTemplate.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}