{"files":[{"patch":"@@ -62,1 +62,1 @@\n-    HostPortrange(String scheme, String str) {\n+    HostPortrange(String scheme, String hostname) {\n@@ -77,1 +77,1 @@\n-        if (str.charAt(0) == '[') {\n+        if (hostname.charAt(0) == '[') {\n@@ -79,1 +79,1 @@\n-            int rb = str.indexOf(']');\n+            int rb = hostname.indexOf(']');\n@@ -81,1 +81,1 @@\n-                hoststr = str.substring(1, rb);\n+                hoststr = hostname.substring(1, rb);\n@@ -84,2 +84,2 @@\n-                           formatMsg(\"invalid IPv6 address%s\",\n-                                     filterNonSocketInfo(str).prefixWith(\": \")));\n+                       formatMsg(\"invalid IPv6 address%s\",\n+                                 filterNonSocketInfo(hostname).prefixWith(\": \")));\n@@ -87,3 +87,3 @@\n-            int sep = str.indexOf(':', rb + 1);\n-            if (sep != -1 && str.length() > sep) {\n-                portstr = str.substring(sep + 1);\n+            int sep = hostname.indexOf(':', rb + 1);\n+            if (sep != -1 && hostname.length() > sep) {\n+                portstr = hostname.substring(sep + 1);\n@@ -106,4 +106,4 @@\n-            int sep = str.indexOf(':');\n-            if (sep != -1 && str.length() > sep) {\n-                hoststr = str.substring(0, sep);\n-                portstr = str.substring(sep + 1);\n+            int sep = hostname.indexOf(':');\n+            if (sep != -1 && hostname.length() > sep) {\n+                hoststr = hostname.substring(0, sep);\n+                portstr = hostname.substring(sep + 1);\n@@ -111,1 +111,1 @@\n-                hoststr = sep == -1 ? str : str.substring(0, sep);\n+                hoststr = sep == -1 ? hostname : hostname.substring(0, sep);\n","filename":"src\/java.base\/share\/classes\/java\/net\/HostPortrange.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -89,2 +89,2 @@\n-     * The output(boolean enhance) method generates an enhanced\n-     * string when enhance is true.\n+     * The composeFilteredText(boolean enhance) method generates\n+     * an enhanced string when enhance is true.\n@@ -124,1 +124,1 @@\n-         * Implementation should call output(boolean flag)\n+         * Implementation should call composeFilteredText(boolean flag)\n@@ -130,1 +130,1 @@\n-        protected String output(boolean enhance) {\n+        protected String composeFilteredText(boolean enhance) {\n@@ -147,1 +147,1 @@\n-            return super.output(enhancedSocketExceptionText);\n+            return super.composeFilteredText(enhancedSocketExceptionText);\n@@ -158,1 +158,1 @@\n-            return super.output(enhancedNonSocketExceptionText);\n+            return super.composeFilteredText(enhancedNonSocketExceptionText);\n@@ -169,1 +169,1 @@\n-            return super.output(enhancedJarExceptionText);\n+            return super.composeFilteredText(enhancedJarExceptionText);\n@@ -180,1 +180,1 @@\n-            return super.output(enhancedUserExceptionText);\n+            return super.composeFilteredText(enhancedUserExceptionText);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/Exceptions.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -273,0 +273,2 @@\n+        java.naming,\n+        java.rmi,\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,2 @@\n-\n+import static jdk.internal.util.Exceptions.filterNonSocketInfo;\n+import static jdk.internal.util.Exceptions.formatMsg;\n@@ -562,2 +563,4 @@\n-        throw new IOException(\"HTTPS hostname wrong:  should be <\"\n-                              + url.getHost() + \">\");\n+        throw new IOException(formatMsg(\"HTTPS hostname wrong: %s\",\n+                                        filterNonSocketInfo(url.getHost())\n+                                            .prefixWith(\"should be <\")\n+                                            .suffixWith(\">\")));\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/https\/HttpsClient.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -65,0 +65,2 @@\n+import static jdk.internal.util.Exceptions.filterNonSocketInfo;\n+import static jdk.internal.util.Exceptions.formatMsg;\n@@ -557,1 +559,2 @@\n-            throw new UnknownHostException(isa.getHostName());\n+            throw new UnknownHostException(\n+                formatMsg(\"%s\", filterNonSocketInfo(isa.getHostName())));\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/NioSocketImpl.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -43,0 +43,3 @@\n+import static jdk.internal.util.Exceptions.filterNonSocketInfo;\n+import static jdk.internal.util.Exceptions.formatMsg;\n+\n@@ -95,1 +98,2 @@\n-            throw new UnknownHostException(remote.toString());\n+            throw new UnknownHostException(\n+                formatMsg(\"%s\", filterNonSocketInfo(remote.toString())));\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/SocketAdaptor.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+import static jdk.internal.util.Exceptions.filterNonSocketInfo;\n+import static jdk.internal.util.Exceptions.formatMsg;\n@@ -122,1 +124,2 @@\n-        return new MalformedURLException(\"Not an LDAP URL: \" + uri);\n+        return new MalformedURLException(formatMsg(\"Not an LDAP URL: %s\",\n+                                                   filterNonSocketInfo(uri)));\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapURL.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+import static jdk.internal.util.Exceptions.filterNonSocketInfo;\n+import static jdk.internal.util.Exceptions.formatMsg;\n@@ -235,0 +237,4 @@\n+    private MalformedURLException newMalformedURLException(String prefix, String msg) {\n+        return new MalformedURLException(formatMsg(prefix + \" %s\", filterNonSocketInfo(msg)));\n+    }\n+\n@@ -244,1 +250,1 @@\n-                if (scheme == null) throw new MalformedURLException(\"Invalid URI: \" + uri);\n+                if (scheme == null) throw newMalformedURLException(\"Invalid URI:\", uri);\n@@ -256,1 +262,1 @@\n-                        throw new MalformedURLException(\"unsupported authority: \" + auth);\n+                        throw newMalformedURLException(\"unsupported authority:\", auth);\n@@ -265,1 +271,1 @@\n-                        throw new MalformedURLException(\"URI fragments not supported: \" + uri);\n+                        throw newMalformedURLException(\"URI fragments not supported:\", uri);\n@@ -282,1 +288,1 @@\n-            var mue =  new MalformedURLException(e.getMessage());\n+            var mue =  newMalformedURLException(\"\", e.getMessage());\n@@ -302,1 +308,1 @@\n-            throw new MalformedURLException(\"Invalid URI: \" + uri);\n+            throw newMalformedURLException(\"Invalid URI:\", uri);\n@@ -306,1 +312,1 @@\n-                throw new MalformedURLException(\"URI fragments not supported: \" + uri);\n+                throw newMalformedURLException(\"URI fragments not supported:\", uri);\n@@ -352,1 +358,1 @@\n-                        throw new MalformedURLException(\"user info not supported in authority: \" + ui);\n+                        throw newMalformedURLException(\"user info not supported in authority:\", ui);\n@@ -355,1 +361,1 @@\n-                        throw new MalformedURLException(\"invalid authority: \" + auth);\n+                        throw newMalformedURLException(\"invalid authority:\", auth);\n@@ -358,1 +364,1 @@\n-                        throw new MalformedURLException(\"invalid trailing characters in authority: ?\" + q);\n+                        throw newMalformedURLException(\"invalid trailing characters in authority: ?\", q);\n@@ -361,1 +367,1 @@\n-                        throw new MalformedURLException(\"invalid trailing characters in authority: #\" + f);\n+                        throw newMalformedURLException(\"invalid trailing characters in authority: #\", f);\n@@ -367,2 +373,2 @@\n-                        throw new MalformedURLException(\"Authority component is not server-based, \" +\n-                                              \"or contains user info. Unsupported authority: \" + auth);\n+                        throw newMalformedURLException(\"Authority component is not server-based, \" +\n+                                              \"or contains user info. Unsupported authority:\", auth);\n@@ -371,1 +377,1 @@\n-                    var mue = new MalformedURLException(e.getMessage());\n+                    var mue = newMalformedURLException(\"\", e.getMessage());\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/toolkit\/url\/Uri.java","additions":19,"deletions":13,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+import static jdk.internal.util.Exceptions.filterNonSocketInfo;\n+import static jdk.internal.util.Exceptions.formatMsg;\n@@ -224,0 +226,4 @@\n+    private static MalformedURLException newMalformedURLException(String prefix, String msg) {\n+        return new MalformedURLException(formatMsg(prefix + \" %s\", filterNonSocketInfo(msg)));\n+    }\n+\n@@ -243,2 +249,2 @@\n-            MalformedURLException mue = new MalformedURLException(\n-                \"invalid URL String: \" + str);\n+            MalformedURLException mue = newMalformedURLException(\n+                \"invalid URL String:\", str);\n@@ -275,2 +281,2 @@\n-            throw new MalformedURLException(\n-                \"not a hierarchical URL: \" + str);\n+            throw newMalformedURLException(\n+                \"not a hierarchical URL:\", str);\n@@ -279,2 +285,2 @@\n-            throw new MalformedURLException(\n-                \"invalid character, '#', in URL name: \" + str);\n+            throw newMalformedURLException(\n+                \"invalid character, '#', in URL name:\", str);\n@@ -282,2 +288,2 @@\n-            throw new MalformedURLException(\n-                \"invalid character, '?', in URL name: \" + str);\n+            throw newMalformedURLException(\n+                \"invalid character, '?', in URL name:\", str);\n@@ -285,2 +291,2 @@\n-            throw new MalformedURLException(\n-                \"invalid character, '@', in URL host: \" + str);\n+            throw newMalformedURLException(\n+                \"invalid character, '@', in URL host:\", str);\n@@ -290,1 +296,1 @@\n-            throw new MalformedURLException(\"invalid URL scheme: \" + str);\n+            throw newMalformedURLException(\"invalid URL scheme:\", str);\n","filename":"src\/java.rmi\/share\/classes\/java\/rmi\/Naming.java","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"}]}