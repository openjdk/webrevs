{"files":[{"patch":"@@ -201,0 +201,5 @@\n+  virtual uint size_of() const { return sizeof(EncodeISOArrayNode); }\n+  virtual uint hash() const { return Node::hash() + ascii; }\n+  virtual bool cmp(const Node& n) const {\n+    return Node::cmp(n) && ascii == ((EncodeISOArrayNode&)n).is_ascii();\n+  }\n","filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -502,0 +502,1 @@\n+  virtual uint size_of() const { return sizeof(MachConstantNode); }\n@@ -542,0 +543,1 @@\n+  virtual uint size_of() const { return sizeof(MachEpilogNode); }\n@@ -570,0 +572,1 @@\n+  virtual uint size_of() const { return sizeof(MachNopNode); }\n@@ -797,0 +800,1 @@\n+  virtual uint size_of() const { return sizeof(MachJumpNode); }\n@@ -895,0 +899,1 @@\n+  virtual uint size_of() const { return sizeof(MachSafePointNode); }\n@@ -1009,0 +1014,1 @@\n+  virtual uint size_of() const { return sizeof(MachCallDynamicJavaNode); }\n@@ -1042,0 +1048,1 @@\n+  virtual uint size_of() const { return sizeof(MachHaltNode); }\n","filename":"src\/hotspot\/share\/opto\/machnode.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1092,0 +1092,5 @@\n+  virtual uint size_of() const { return sizeof(ClearArrayNode); }\n+  virtual uint hash() const { return Node::hash() + _is_large; }\n+  virtual bool cmp(const Node& n) const {\n+    return Node::cmp(n) && _is_large == ((ClearArrayNode&)n).is_large();\n+  }\n","filename":"src\/hotspot\/share\/opto\/memnode.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -127,0 +127,7 @@\n+  virtual uint size_of() const { return sizeof(OpaqueMultiversioningNode); }\n+  virtual uint hash() const { return Node::hash() + _is_delayed_slow_loop + _useless; }\n+  virtual bool cmp(const Node& n) const {\n+    return Node::cmp(n)\n+           && _is_delayed_slow_loop == ((OpaqueMultiversioningNode&)n).is_delayed_slow_loop()\n+           DEBUG_ONLY(&& _useless == ((OpaqueMultiversioningNode&)n).is_useless());\n+  }\n@@ -270,0 +277,1 @@\n+  virtual uint size_of() const { return sizeof(ProfileBooleanNode); }\n","filename":"src\/hotspot\/share\/opto\/opaquenode.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}