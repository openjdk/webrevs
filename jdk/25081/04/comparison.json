{"files":[{"patch":"@@ -187,1 +187,1 @@\n-  bool ascii;\n+  bool _ascii;\n@@ -190,1 +190,1 @@\n-    : Node(control, arymem, s1, s2, c), ascii(ascii) {}\n+    : Node(control, arymem, s1, s2, c), _ascii(ascii) {}\n@@ -192,1 +192,1 @@\n-  bool is_ascii() { return ascii; }\n+  bool is_ascii() { return _ascii; }\n@@ -201,0 +201,5 @@\n+  virtual uint size_of() const { return sizeof(EncodeISOArrayNode); }\n+  virtual uint hash() const { return Node::hash() + _ascii; }\n+  virtual bool cmp(const Node& n) const {\n+    return Node::cmp(n) && _ascii == ((EncodeISOArrayNode&)n).is_ascii();\n+  }\n","filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -502,0 +502,1 @@\n+  virtual uint size_of() const { return sizeof(MachConstantNode); }\n@@ -536,0 +537,2 @@\n+private:\n+  bool _do_polling;\n@@ -542,5 +545,1 @@\n-\n-private:\n-  bool _do_polling;\n-\n-public:\n+  virtual uint size_of() const { return sizeof(MachEpilogNode); }\n@@ -570,0 +569,1 @@\n+  virtual uint size_of() const { return sizeof(MachNopNode); }\n@@ -797,0 +797,1 @@\n+  virtual uint size_of() const { return sizeof(MachJumpNode); }\n@@ -895,0 +896,1 @@\n+  virtual uint size_of() const { return sizeof(MachSafePointNode); }\n@@ -1009,0 +1011,1 @@\n+  virtual uint size_of() const { return sizeof(MachCallDynamicJavaNode); }\n@@ -1042,0 +1045,1 @@\n+  virtual uint size_of() const { return sizeof(MachHaltNode); }\n","filename":"src\/hotspot\/share\/opto\/machnode.hpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1092,0 +1092,5 @@\n+  virtual uint size_of() const { return sizeof(ClearArrayNode); }\n+  virtual uint hash() const { return Node::hash() + _is_large; }\n+  virtual bool cmp(const Node& n) const {\n+    return Node::cmp(n) && _is_large == ((ClearArrayNode&)n).is_large();\n+  }\n","filename":"src\/hotspot\/share\/opto\/memnode.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -127,0 +127,1 @@\n+  virtual uint size_of() const { return sizeof(OpaqueMultiversioningNode); }\n@@ -270,0 +271,1 @@\n+  virtual uint size_of() const { return sizeof(ProfileBooleanNode); }\n","filename":"src\/hotspot\/share\/opto\/opaquenode.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}