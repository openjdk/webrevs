[{"commit":{"message":"Add random range tests"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/TestCountBitsRange.java"}],"sha":"79394a25e6772be0fc33cf205bb940c926e4e350"},{"commit":{"message":"Add more comments to IR test"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/TestCountBitsRange.java"}],"sha":"42c079f1661c41cb3356a3b879e0640bbbc72b40"},{"commit":{"message":"Add more constant folding tests for CLZ\/CTZ"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/TestCountBitsRange.java"}],"sha":"d09d4cb0c7e0d4d569e589909776d1134f29caab"},{"commit":{"message":"Add proof of correstness comments"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"}],"sha":"5cfe39b69b82e6433ef10593b9d62f9ce90216e0"},{"commit":{"message":"Remove redundant `@require` in IR test"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/TestCountBitsRange.java"}],"sha":"f1c0b45ad86f597b8967941f7f75275ec96cef59"},{"commit":{"message":"Add microbench"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/CountLeadingZeros.java"}],"sha":"b4b9b6433de6555d88c763224b0c0a031ca1717c"},{"commit":{"message":"Add missing test method declarations"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/TestCountBitsRange.java"}],"sha":"68d99387bab8fbb8d480b8c06da3a3d6d7c063fe"},{"commit":{"message":"Remove unnecessary code"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/TestCountBitsRange.java"}],"sha":"ce5f86956b0f512d5278d022f47cf041496b2bad"},{"commit":{"message":"Merge branch 'master' into enhance-clz-type"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"c9051a0bfc9efa45cf52d61c92f524b2003927ce"},{"commit":{"message":"Add checks for results of all test methods"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/TestCountBitsRange.java"}],"sha":"da805b035ec9880ad2016900ae08a1bf0d1d6484"},{"commit":{"message":"Replace `isa_*` with `is_*` and add checks for `Type::BOTTOM`"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"}],"sha":"db2d822aebaa0c0356a0bb182e280ee3b8a26be2"},{"commit":{"message":"Merge branch 'master' into enhance-clz-type"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"2f9bca68739365eb7bf6cb2616a13806c22c193b"},{"commit":{"message":"Move `TestCountBitsRange` to `compiler.c2.gvn`"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/TestCountBitsRange.java"}],"sha":"c965311b164a0234cb1b585e63949e124ccda3b0"},{"commit":{"message":"Fix null checks"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"}],"sha":"1ce8ebbb0331b276c9be1942f85e9d7cc0bf7c4d"},{"commit":{"message":"Narrow type bound"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"}],"sha":"1cb931b16f46254ea49154ad3f14c0b07f77ff56"},{"commit":{"message":"Use `BitsPerX` constant instead of `sizeof`"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"}],"sha":"0d0bb579d3c86af7a4f26c0ef69c0894d475d48a"},{"commit":{"message":"Make the type of count leading\/trailing zero nodes more precise"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"0faa2099b060d5bcfd6ca71ff7146f6092fcbe07"}]