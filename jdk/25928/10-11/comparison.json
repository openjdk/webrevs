{"files":[{"patch":"@@ -42,4 +42,4 @@\n-        \"clzConstInt\", \"clzCompareInt\", \"clzDiv8Int\",\n-        \"clzConstLong\", \"clzCompareLong\", \"clzDiv8Long\",\n-        \"ctzConstInt\", \"ctzCompareInt\", \"ctzDiv8Int\",\n-        \"ctzConstLong\", \"ctzCompareLong\", \"ctzDiv8Long\",\n+        \"clzConstInts\", \"clzCompareInt\", \"clzDiv8Int\",\n+        \"clzConstLongs\", \"clzCompareLong\", \"clzDiv8Long\",\n+        \"ctzConstInts\", \"ctzCompareInt\", \"ctzDiv8Int\",\n+        \"ctzConstLongs\", \"ctzCompareLong\", \"ctzDiv8Long\",\n@@ -48,3 +48,3 @@\n-        int i = RunInfo.getRandom().nextInt();\n-        long l = RunInfo.getRandom().nextLong();\n-        assertResult(i, l);\n+        int randInt = RunInfo.getRandom().nextInt();\n+        long randLong = RunInfo.getRandom().nextLong();\n+        assertResult(randInt, randLong);\n@@ -54,25 +54,44 @@\n-    public void assertResult(int i, long l) {\n-        Asserts.assertEQ(Integer.numberOfLeadingZeros(42),\n-                         clzConstInt());\n-        Asserts.assertEQ(Integer.numberOfLeadingZeros(i) < 0 || Integer.numberOfLeadingZeros(i) > 32,\n-                         clzCompareInt(i));\n-        Asserts.assertEQ(Integer.numberOfLeadingZeros(i) \/ 8,\n-                         clzDiv8Int(i));\n-        Asserts.assertEQ(Long.numberOfLeadingZeros(42),\n-                         clzConstLong());\n-        Asserts.assertEQ(Long.numberOfLeadingZeros(l) < 0 || Long.numberOfLeadingZeros(l) > 64,\n-                         clzCompareLong(l));\n-        Asserts.assertEQ(Long.numberOfLeadingZeros(l) \/ 8,\n-                         clzDiv8Long(l));\n-        Asserts.assertEQ(Integer.numberOfTrailingZeros(42),\n-                         ctzConstInt());\n-        Asserts.assertEQ(Integer.numberOfTrailingZeros(i) < 0 || Integer.numberOfTrailingZeros(i) > 32,\n-                         ctzCompareInt(i));\n-        Asserts.assertEQ(Integer.numberOfTrailingZeros(i) \/ 8,\n-                         ctzDiv8Int(i));\n-        Asserts.assertEQ(Long.numberOfTrailingZeros(42),\n-                         ctzConstLong());\n-        Asserts.assertEQ(Long.numberOfTrailingZeros(l) < 0 || Long.numberOfTrailingZeros(l) > 64,\n-                         ctzCompareLong(l));\n-        Asserts.assertEQ(Long.numberOfTrailingZeros(l) \/ 8,\n-                         ctzDiv8Long(l));\n+    public void assertResult(int randInt, long randLong) {\n+        int[] results = clzConstInts();\n+        Asserts.assertEQ(Integer.numberOfLeadingZeros(0), results[0]);\n+        for (int i = 0; i < 32; ++i) {\n+            Asserts.assertEQ(Integer.numberOfLeadingZeros(1 << i), results[i + 1]);\n+        }\n+        Asserts.assertEQ(Integer.numberOfLeadingZeros(randInt) < 0\n+                         || Integer.numberOfLeadingZeros(randInt) > 32,\n+                         clzCompareInt(randInt));\n+        Asserts.assertEQ(Integer.numberOfLeadingZeros(randInt) \/ 8,\n+                         clzDiv8Int(randInt));\n+\n+        results = clzConstLongs();\n+        Asserts.assertEQ(Long.numberOfLeadingZeros(0), results[0]);\n+        for (int i = 0; i < 64; ++i) {\n+            Asserts.assertEQ(Long.numberOfLeadingZeros(1l << i), results[i + 1]);\n+        }\n+        Asserts.assertEQ(Long.numberOfLeadingZeros(randLong) < 0\n+                         || Long.numberOfLeadingZeros(randLong) > 64,\n+                         clzCompareLong(randLong));\n+        Asserts.assertEQ(Long.numberOfLeadingZeros(randLong) \/ 8,\n+                         clzDiv8Long(randLong));\n+\n+        results = ctzConstInts();\n+        Asserts.assertEQ(Integer.numberOfTrailingZeros(0), results[0]);\n+        for (int i = 0; i < 32; ++i) {\n+            Asserts.assertEQ(Integer.numberOfTrailingZeros(1 << i), results[i + 1]);\n+        }\n+        Asserts.assertEQ(Integer.numberOfTrailingZeros(randInt) < 0\n+                         || Integer.numberOfTrailingZeros(randInt) > 32,\n+                         ctzCompareInt(randInt));\n+        Asserts.assertEQ(Integer.numberOfTrailingZeros(randInt) \/ 8,\n+                         ctzDiv8Int(randInt));\n+\n+        results = ctzConstLongs();\n+        Asserts.assertEQ(Long.numberOfTrailingZeros(0), results[0]);\n+        for (int i = 0; i < 64; ++i) {\n+            Asserts.assertEQ(Long.numberOfTrailingZeros(1l << i), results[i + 1]);\n+        }\n+        Asserts.assertEQ(Long.numberOfTrailingZeros(randLong) < 0\n+                         || Long.numberOfTrailingZeros(randLong) > 64,\n+                         ctzCompareLong(randLong));\n+        Asserts.assertEQ(Long.numberOfTrailingZeros(randLong) \/ 8,\n+                         ctzDiv8Long(randLong));\n@@ -83,2 +102,36 @@\n-    public int clzConstInt() {\n-        return Integer.numberOfLeadingZeros(42);\n+    public int[] clzConstInts() {\n+        return new int[] {\n+            Integer.numberOfLeadingZeros(0),\n+            Integer.numberOfLeadingZeros(1 << 0),\n+            Integer.numberOfLeadingZeros(1 << 1),\n+            Integer.numberOfLeadingZeros(1 << 2),\n+            Integer.numberOfLeadingZeros(1 << 3),\n+            Integer.numberOfLeadingZeros(1 << 4),\n+            Integer.numberOfLeadingZeros(1 << 5),\n+            Integer.numberOfLeadingZeros(1 << 6),\n+            Integer.numberOfLeadingZeros(1 << 7),\n+            Integer.numberOfLeadingZeros(1 << 8),\n+            Integer.numberOfLeadingZeros(1 << 9),\n+            Integer.numberOfLeadingZeros(1 << 10),\n+            Integer.numberOfLeadingZeros(1 << 11),\n+            Integer.numberOfLeadingZeros(1 << 12),\n+            Integer.numberOfLeadingZeros(1 << 13),\n+            Integer.numberOfLeadingZeros(1 << 14),\n+            Integer.numberOfLeadingZeros(1 << 15),\n+            Integer.numberOfLeadingZeros(1 << 16),\n+            Integer.numberOfLeadingZeros(1 << 17),\n+            Integer.numberOfLeadingZeros(1 << 18),\n+            Integer.numberOfLeadingZeros(1 << 19),\n+            Integer.numberOfLeadingZeros(1 << 20),\n+            Integer.numberOfLeadingZeros(1 << 21),\n+            Integer.numberOfLeadingZeros(1 << 22),\n+            Integer.numberOfLeadingZeros(1 << 23),\n+            Integer.numberOfLeadingZeros(1 << 24),\n+            Integer.numberOfLeadingZeros(1 << 25),\n+            Integer.numberOfLeadingZeros(1 << 26),\n+            Integer.numberOfLeadingZeros(1 << 27),\n+            Integer.numberOfLeadingZeros(1 << 28),\n+            Integer.numberOfLeadingZeros(1 << 29),\n+            Integer.numberOfLeadingZeros(1 << 30),\n+            Integer.numberOfLeadingZeros(1 << 31),\n+        };\n@@ -89,2 +142,3 @@\n-    public boolean clzCompareInt(int i) {\n-        return Integer.numberOfLeadingZeros(i) < 0 || Integer.numberOfLeadingZeros(i) > 32;\n+    public boolean clzCompareInt(int randInt) {\n+        return Integer.numberOfLeadingZeros(randInt) < 0\n+               || Integer.numberOfLeadingZeros(randInt) > 32;\n@@ -98,2 +152,2 @@\n-    public int clzDiv8Int(int i) {\n-        return Integer.numberOfLeadingZeros(i) \/ 8;\n+    public int clzDiv8Int(int randInt) {\n+        return Integer.numberOfLeadingZeros(randInt) \/ 8;\n@@ -104,2 +158,68 @@\n-    public int clzConstLong() {\n-        return Long.numberOfLeadingZeros(42);\n+    public int[] clzConstLongs() {\n+        return new int[] {\n+            Long.numberOfLeadingZeros(0),\n+            Long.numberOfLeadingZeros(1l << 0),\n+            Long.numberOfLeadingZeros(1l << 1),\n+            Long.numberOfLeadingZeros(1l << 2),\n+            Long.numberOfLeadingZeros(1l << 3),\n+            Long.numberOfLeadingZeros(1l << 4),\n+            Long.numberOfLeadingZeros(1l << 5),\n+            Long.numberOfLeadingZeros(1l << 6),\n+            Long.numberOfLeadingZeros(1l << 7),\n+            Long.numberOfLeadingZeros(1l << 8),\n+            Long.numberOfLeadingZeros(1l << 9),\n+            Long.numberOfLeadingZeros(1l << 10),\n+            Long.numberOfLeadingZeros(1l << 11),\n+            Long.numberOfLeadingZeros(1l << 12),\n+            Long.numberOfLeadingZeros(1l << 13),\n+            Long.numberOfLeadingZeros(1l << 14),\n+            Long.numberOfLeadingZeros(1l << 15),\n+            Long.numberOfLeadingZeros(1l << 16),\n+            Long.numberOfLeadingZeros(1l << 17),\n+            Long.numberOfLeadingZeros(1l << 18),\n+            Long.numberOfLeadingZeros(1l << 19),\n+            Long.numberOfLeadingZeros(1l << 20),\n+            Long.numberOfLeadingZeros(1l << 21),\n+            Long.numberOfLeadingZeros(1l << 22),\n+            Long.numberOfLeadingZeros(1l << 23),\n+            Long.numberOfLeadingZeros(1l << 24),\n+            Long.numberOfLeadingZeros(1l << 25),\n+            Long.numberOfLeadingZeros(1l << 26),\n+            Long.numberOfLeadingZeros(1l << 27),\n+            Long.numberOfLeadingZeros(1l << 28),\n+            Long.numberOfLeadingZeros(1l << 29),\n+            Long.numberOfLeadingZeros(1l << 30),\n+            Long.numberOfLeadingZeros(1l << 31),\n+            Long.numberOfLeadingZeros(1l << 32),\n+            Long.numberOfLeadingZeros(1l << 33),\n+            Long.numberOfLeadingZeros(1l << 34),\n+            Long.numberOfLeadingZeros(1l << 35),\n+            Long.numberOfLeadingZeros(1l << 36),\n+            Long.numberOfLeadingZeros(1l << 37),\n+            Long.numberOfLeadingZeros(1l << 38),\n+            Long.numberOfLeadingZeros(1l << 39),\n+            Long.numberOfLeadingZeros(1l << 40),\n+            Long.numberOfLeadingZeros(1l << 41),\n+            Long.numberOfLeadingZeros(1l << 42),\n+            Long.numberOfLeadingZeros(1l << 43),\n+            Long.numberOfLeadingZeros(1l << 44),\n+            Long.numberOfLeadingZeros(1l << 45),\n+            Long.numberOfLeadingZeros(1l << 46),\n+            Long.numberOfLeadingZeros(1l << 47),\n+            Long.numberOfLeadingZeros(1l << 48),\n+            Long.numberOfLeadingZeros(1l << 49),\n+            Long.numberOfLeadingZeros(1l << 50),\n+            Long.numberOfLeadingZeros(1l << 51),\n+            Long.numberOfLeadingZeros(1l << 52),\n+            Long.numberOfLeadingZeros(1l << 53),\n+            Long.numberOfLeadingZeros(1l << 54),\n+            Long.numberOfLeadingZeros(1l << 55),\n+            Long.numberOfLeadingZeros(1l << 56),\n+            Long.numberOfLeadingZeros(1l << 57),\n+            Long.numberOfLeadingZeros(1l << 58),\n+            Long.numberOfLeadingZeros(1l << 59),\n+            Long.numberOfLeadingZeros(1l << 60),\n+            Long.numberOfLeadingZeros(1l << 61),\n+            Long.numberOfLeadingZeros(1l << 62),\n+            Long.numberOfLeadingZeros(1l << 63),\n+        };\n@@ -110,2 +230,3 @@\n-    public boolean clzCompareLong(long l) {\n-        return Long.numberOfLeadingZeros(l) < 0 || Long.numberOfLeadingZeros(l) > 64;\n+    public boolean clzCompareLong(long randLong) {\n+        return Long.numberOfLeadingZeros(randLong) < 0\n+               || Long.numberOfLeadingZeros(randLong) > 64;\n@@ -119,2 +240,2 @@\n-    public int clzDiv8Long(long l) {\n-        return Long.numberOfLeadingZeros(l) \/ 8;\n+    public int clzDiv8Long(long randLong) {\n+        return Long.numberOfLeadingZeros(randLong) \/ 8;\n@@ -125,2 +246,36 @@\n-    public int ctzConstInt() {\n-        return Integer.numberOfTrailingZeros(42);\n+    public int[] ctzConstInts() {\n+        return new int[] {\n+            Integer.numberOfTrailingZeros(0),\n+            Integer.numberOfTrailingZeros(1 << 0),\n+            Integer.numberOfTrailingZeros(1 << 1),\n+            Integer.numberOfTrailingZeros(1 << 2),\n+            Integer.numberOfTrailingZeros(1 << 3),\n+            Integer.numberOfTrailingZeros(1 << 4),\n+            Integer.numberOfTrailingZeros(1 << 5),\n+            Integer.numberOfTrailingZeros(1 << 6),\n+            Integer.numberOfTrailingZeros(1 << 7),\n+            Integer.numberOfTrailingZeros(1 << 8),\n+            Integer.numberOfTrailingZeros(1 << 9),\n+            Integer.numberOfTrailingZeros(1 << 10),\n+            Integer.numberOfTrailingZeros(1 << 11),\n+            Integer.numberOfTrailingZeros(1 << 12),\n+            Integer.numberOfTrailingZeros(1 << 13),\n+            Integer.numberOfTrailingZeros(1 << 14),\n+            Integer.numberOfTrailingZeros(1 << 15),\n+            Integer.numberOfTrailingZeros(1 << 16),\n+            Integer.numberOfTrailingZeros(1 << 17),\n+            Integer.numberOfTrailingZeros(1 << 18),\n+            Integer.numberOfTrailingZeros(1 << 19),\n+            Integer.numberOfTrailingZeros(1 << 20),\n+            Integer.numberOfTrailingZeros(1 << 21),\n+            Integer.numberOfTrailingZeros(1 << 22),\n+            Integer.numberOfTrailingZeros(1 << 23),\n+            Integer.numberOfTrailingZeros(1 << 24),\n+            Integer.numberOfTrailingZeros(1 << 25),\n+            Integer.numberOfTrailingZeros(1 << 26),\n+            Integer.numberOfTrailingZeros(1 << 27),\n+            Integer.numberOfTrailingZeros(1 << 28),\n+            Integer.numberOfTrailingZeros(1 << 29),\n+            Integer.numberOfTrailingZeros(1 << 30),\n+            Integer.numberOfTrailingZeros(1 << 31),\n+        };\n@@ -131,2 +286,3 @@\n-    public boolean ctzCompareInt(int i) {\n-        return Integer.numberOfTrailingZeros(i) < 0 || Integer.numberOfTrailingZeros(i) > 32;\n+    public boolean ctzCompareInt(int randInt) {\n+        return Integer.numberOfTrailingZeros(randInt) < 0\n+               || Integer.numberOfTrailingZeros(randInt) > 32;\n@@ -140,2 +296,2 @@\n-    public int ctzDiv8Int(int i) {\n-        return Integer.numberOfTrailingZeros(i) \/ 8;\n+    public int ctzDiv8Int(int randInt) {\n+        return Integer.numberOfTrailingZeros(randInt) \/ 8;\n@@ -146,2 +302,68 @@\n-    public int ctzConstLong() {\n-        return Long.numberOfTrailingZeros(42);\n+    public int[] ctzConstLongs() {\n+        return new int[] {\n+            Long.numberOfTrailingZeros(0),\n+            Long.numberOfTrailingZeros(1l << 0),\n+            Long.numberOfTrailingZeros(1l << 1),\n+            Long.numberOfTrailingZeros(1l << 2),\n+            Long.numberOfTrailingZeros(1l << 3),\n+            Long.numberOfTrailingZeros(1l << 4),\n+            Long.numberOfTrailingZeros(1l << 5),\n+            Long.numberOfTrailingZeros(1l << 6),\n+            Long.numberOfTrailingZeros(1l << 7),\n+            Long.numberOfTrailingZeros(1l << 8),\n+            Long.numberOfTrailingZeros(1l << 9),\n+            Long.numberOfTrailingZeros(1l << 10),\n+            Long.numberOfTrailingZeros(1l << 11),\n+            Long.numberOfTrailingZeros(1l << 12),\n+            Long.numberOfTrailingZeros(1l << 13),\n+            Long.numberOfTrailingZeros(1l << 14),\n+            Long.numberOfTrailingZeros(1l << 15),\n+            Long.numberOfTrailingZeros(1l << 16),\n+            Long.numberOfTrailingZeros(1l << 17),\n+            Long.numberOfTrailingZeros(1l << 18),\n+            Long.numberOfTrailingZeros(1l << 19),\n+            Long.numberOfTrailingZeros(1l << 20),\n+            Long.numberOfTrailingZeros(1l << 21),\n+            Long.numberOfTrailingZeros(1l << 22),\n+            Long.numberOfTrailingZeros(1l << 23),\n+            Long.numberOfTrailingZeros(1l << 24),\n+            Long.numberOfTrailingZeros(1l << 25),\n+            Long.numberOfTrailingZeros(1l << 26),\n+            Long.numberOfTrailingZeros(1l << 27),\n+            Long.numberOfTrailingZeros(1l << 28),\n+            Long.numberOfTrailingZeros(1l << 29),\n+            Long.numberOfTrailingZeros(1l << 30),\n+            Long.numberOfTrailingZeros(1l << 31),\n+            Long.numberOfTrailingZeros(1l << 32),\n+            Long.numberOfTrailingZeros(1l << 33),\n+            Long.numberOfTrailingZeros(1l << 34),\n+            Long.numberOfTrailingZeros(1l << 35),\n+            Long.numberOfTrailingZeros(1l << 36),\n+            Long.numberOfTrailingZeros(1l << 37),\n+            Long.numberOfTrailingZeros(1l << 38),\n+            Long.numberOfTrailingZeros(1l << 39),\n+            Long.numberOfTrailingZeros(1l << 40),\n+            Long.numberOfTrailingZeros(1l << 41),\n+            Long.numberOfTrailingZeros(1l << 42),\n+            Long.numberOfTrailingZeros(1l << 43),\n+            Long.numberOfTrailingZeros(1l << 44),\n+            Long.numberOfTrailingZeros(1l << 45),\n+            Long.numberOfTrailingZeros(1l << 46),\n+            Long.numberOfTrailingZeros(1l << 47),\n+            Long.numberOfTrailingZeros(1l << 48),\n+            Long.numberOfTrailingZeros(1l << 49),\n+            Long.numberOfTrailingZeros(1l << 50),\n+            Long.numberOfTrailingZeros(1l << 51),\n+            Long.numberOfTrailingZeros(1l << 52),\n+            Long.numberOfTrailingZeros(1l << 53),\n+            Long.numberOfTrailingZeros(1l << 54),\n+            Long.numberOfTrailingZeros(1l << 55),\n+            Long.numberOfTrailingZeros(1l << 56),\n+            Long.numberOfTrailingZeros(1l << 57),\n+            Long.numberOfTrailingZeros(1l << 58),\n+            Long.numberOfTrailingZeros(1l << 59),\n+            Long.numberOfTrailingZeros(1l << 60),\n+            Long.numberOfTrailingZeros(1l << 61),\n+            Long.numberOfTrailingZeros(1l << 62),\n+            Long.numberOfTrailingZeros(1l << 63),\n+        };\n@@ -152,2 +374,3 @@\n-    public boolean ctzCompareLong(long l) {\n-        return Long.numberOfTrailingZeros(l) < 0 || Long.numberOfTrailingZeros(l) > 64;\n+    public boolean ctzCompareLong(long randLong) {\n+        return Long.numberOfTrailingZeros(randLong) < 0\n+               || Long.numberOfTrailingZeros(randLong) > 64;\n@@ -161,2 +384,2 @@\n-    public int ctzDiv8Long(long l) {\n-        return Long.numberOfTrailingZeros(l) \/ 8;\n+    public int ctzDiv8Long(long randLong) {\n+        return Long.numberOfTrailingZeros(randLong) \/ 8;\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/TestCountBitsRange.java","additions":279,"deletions":56,"binary":false,"changes":335,"status":"modified"}]}