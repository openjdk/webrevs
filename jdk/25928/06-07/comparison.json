{"files":[{"patch":"@@ -50,1 +50,0 @@\n-  \/\/ If the input is TOP, the result is also TOP.\n@@ -56,5 +55,0 @@\n-  \/\/ If the input is BOTTOM, the result is the local BOTTOM.\n-  if (t == Type::BOTTOM) {\n-    return bottom_type();\n-  }\n-\n@@ -62,3 +56,0 @@\n-  if (ti->is_con()) {\n-    return TypeInt::make(count_leading_zeros_int(ti->get_con()));\n-  }\n@@ -72,1 +63,0 @@\n-  \/\/ If the input is TOP, the result is also TOP.\n@@ -78,5 +68,0 @@\n-  \/\/ If the input is BOTTOM, the result is the local BOTTOM.\n-  if (t == Type::BOTTOM) {\n-    return bottom_type();\n-  }\n-\n@@ -84,3 +69,0 @@\n-  if (tl->is_con()) {\n-    return TypeInt::make(count_leading_zeros_long(tl->get_con()));\n-  }\n@@ -94,1 +76,0 @@\n-  \/\/ If the input is TOP, the result is also TOP.\n@@ -100,5 +81,0 @@\n-  \/\/ If the input is BOTTOM, the result is the local BOTTOM.\n-  if (t == Type::BOTTOM) {\n-    return bottom_type();\n-  }\n-\n@@ -106,3 +82,0 @@\n-  if (ti->is_con()) {\n-    return TypeInt::make(count_trailing_zeros_int(ti->get_con()));\n-  }\n@@ -116,1 +89,0 @@\n-  \/\/ If the input is TOP, the result is also TOP.\n@@ -122,5 +94,0 @@\n-  \/\/ If the input is BOTTOM, the result is the local BOTTOM.\n-  if (t == Type::BOTTOM) {\n-    return bottom_type();\n-  }\n-\n@@ -128,3 +95,0 @@\n-  if (tl->is_con()) {\n-    return TypeInt::make(count_trailing_zeros_long(tl->get_con()));\n-  }\n","filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp","additions":0,"deletions":36,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -56,0 +56,2 @@\n+        Asserts.assertEQ(Integer.numberOfLeadingZeros(42),\n+                         clzConstInt());\n@@ -60,0 +62,2 @@\n+        Asserts.assertEQ(Long.numberOfLeadingZeros(42),\n+                         clzConstLong());\n@@ -64,0 +68,2 @@\n+        Asserts.assertEQ(Integer.numberOfTrailingZeros(42),\n+                         ctzConstInt());\n@@ -68,0 +74,2 @@\n+        Asserts.assertEQ(Long.numberOfTrailingZeros(42),\n+                         ctzConstLong());\n@@ -74,0 +82,6 @@\n+    @Test\n+    @IR(failOn = IRNode.COUNT_LEADING_ZEROS_I)\n+    public int clzConstInt() {\n+        return Integer.numberOfLeadingZeros(42);\n+    }\n+\n@@ -89,0 +103,6 @@\n+    @Test\n+    @IR(failOn = IRNode.COUNT_LEADING_ZEROS_L)\n+    public int clzConstLong() {\n+        return Long.numberOfLeadingZeros(42);\n+    }\n+\n@@ -104,0 +124,6 @@\n+    @Test\n+    @IR(failOn = IRNode.COUNT_TRAILING_ZEROS_I)\n+    public int ctzConstInt() {\n+        return Integer.numberOfTrailingZeros(42);\n+    }\n+\n@@ -119,0 +145,6 @@\n+    @Test\n+    @IR(failOn = IRNode.COUNT_TRAILING_ZEROS_L)\n+    public int ctzConstLong() {\n+        return Long.numberOfTrailingZeros(42);\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/gvn\/TestCountBitsRange.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"}]}