{"files":[{"patch":"@@ -798,1 +798,1 @@\n-    if (nm->make_not_entrant()) {\n+    if (nm->make_not_entrant(\"C1 deoptimize\")) {\n@@ -1090,1 +1090,1 @@\n-      nm->make_not_entrant();\n+      nm->make_not_entrant(\"C1 code patch\");\n@@ -1338,1 +1338,1 @@\n-      nm->make_not_entrant();\n+      nm->make_not_entrant(\"C1 deoptimize for patching\");\n@@ -1466,1 +1466,1 @@\n-  nm->make_not_entrant();\n+  nm->make_not_entrant(\"C1 predicate failed trap\");\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -805,1 +805,1 @@\n-      nm->make_not_entrant();\n+      nm->make_not_entrant(\"CI replay\");\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1367,1 +1367,1 @@\n-      nm->make_not_entrant();\n+      nm->make_not_entrant(\"marked for deoptimization\");\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1971,1 +1971,3 @@\n-void nmethod::log_state_change() const {\n+void nmethod::log_state_change(const char* reason) const {\n+  assert(reason != nullptr, \"Must provide a reason\");\n+\n@@ -1975,2 +1977,2 @@\n-      xtty->begin_elem(\"make_not_entrant thread='%zu'\",\n-                       os::current_thread_id());\n+      xtty->begin_elem(\"make_not_entrant thread='%zu' reason='%s'\",\n+                       os::current_thread_id(), reason);\n@@ -1983,1 +1985,5 @@\n-  CompileTask::print_ul(this, \"made not entrant\");\n+  ResourceMark rm;\n+  stringStream ss(NEW_RESOURCE_ARRAY(char, 256), 256);\n+  ss.print(\"made not entrant: %s\", reason);\n+\n+  CompileTask::print_ul(this, ss.freeze());\n@@ -1985,1 +1991,1 @@\n-    print_on_with_msg(tty, \"made not entrant\");\n+    print_on_with_msg(tty, ss.freeze());\n@@ -1996,1 +2002,3 @@\n-bool nmethod::make_not_entrant() {\n+bool nmethod::make_not_entrant(const char* reason) {\n+  assert(reason != nullptr, \"Must provide a reason\");\n+\n@@ -2054,1 +2062,1 @@\n-    log_state_change();\n+    log_state_change(reason);\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -634,2 +634,2 @@\n-  bool  make_not_entrant();\n-  bool  make_not_used()    { return make_not_entrant(); }\n+  bool  make_not_entrant(const char* reason);\n+  bool  make_not_used()    { return make_not_entrant(\"not used\"); }\n@@ -948,1 +948,1 @@\n-  void log_state_change() const;\n+  void log_state_change(const char* reason) const;\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -799,1 +799,1 @@\n-          osr_nm->make_not_entrant();\n+          osr_nm->make_not_entrant(\"OSR invalidation for compiling with C1\");\n@@ -1204,1 +1204,1 @@\n-            nm->make_not_entrant();\n+            nm->make_not_entrant(\"OSR invalidation, back branch\");\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1372,1 +1372,1 @@\n-    code->make_not_entrant();\n+    code->make_not_entrant(\"JVMCI reprofile\");\n@@ -1812,1 +1812,1 @@\n-    fst.current()->cb()->as_nmethod()->make_not_entrant();\n+    fst.current()->cb()->as_nmethod()->make_not_entrant(\"JVMCI materialize virtual objects\");\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1778,1 +1778,1 @@\n-    nm->make_not_entrant();\n+    nm->make_not_entrant(\"JVMCI invalidate nmethod mirror\");\n@@ -1787,1 +1787,1 @@\n-    nm->make_not_entrant();\n+    nm->make_not_entrant(\"JVMCI invalidate nmethod mirror\");\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2198,2 +2198,2 @@\n-            if (old != nullptr ) {\n-              old->make_not_entrant();\n+            if (old != nullptr) {\n+              old->make_not_entrant(\"JVMCI register method\");\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3506,1 +3506,1 @@\n-      inv->make_not_entrant();\n+      inv->make_not_entrant(\"OSR invalidation of lower levels\");\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    nm->make_not_entrant();\n+    nm->make_not_entrant(\"set native function\");\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -786,1 +786,1 @@\n-                nm->make_not_entrant();\n+                nm->make_not_entrant(\"Whitebox deoptimization\");\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1810,1 +1810,1 @@\n-  nm->make_not_entrant();\n+  nm->make_not_entrant(\"missing exception handler\");\n@@ -2439,1 +2439,1 @@\n-      if (!nm->make_not_entrant()) {\n+      if (!nm->make_not_entrant(\"uncommon trap\")) {\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1345,1 +1345,1 @@\n-      nm->make_not_entrant();\n+      nm->make_not_entrant(\"zombie\");\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1102,0 +1102,4 @@\n+            String reason = atts.getValue(\"reason\");\n+            if (reason != null) {\n+              e.setReason(reason);\n+            }\n","filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/LogParser.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,0 +50,5 @@\n+    \/**\n+     * The reason of invalidation.\n+     *\/\n+    private String reason;\n+\n@@ -67,1 +72,1 @@\n-            stream.printf(\"%s make_zombie\\n\", getId());\n+            stream.printf(\"%s make_zombie\", getId());\n@@ -69,1 +74,4 @@\n-            stream.printf(\"%s make_not_entrant\\n\", getId());\n+            stream.printf(\"%s make_not_entrant\", getId());\n+        }\n+        if (getReason() != null) {\n+            stream.printf(\": %s\", getReason());\n@@ -71,0 +79,1 @@\n+        stream.println();\n@@ -91,1 +100,15 @@\n-    \/**\n+  \/**\n+   * @return the reason\n+   *\/\n+  public String getReason() {\n+      return reason;\n+  }\n+\n+  \/**\n+   * @param reason the reason to set\n+   *\/\n+  public void setReason(String reason) {\n+      this.reason = reason;\n+  }\n+\n+  \/**\n","filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/MakeNotEntrantEvent.java","additions":26,"deletions":3,"binary":false,"changes":29,"status":"modified"}]}