{"files":[{"patch":"@@ -1724,24 +1724,0 @@\n-    \/\/ Remaining count is less than 8 bytes and address is heapword aligned.\n-    {\n-      Label L_fill_2, L_fill_1, L_exit;\n-      __ test_bit(tmp_reg, count, 2);\n-      __ beqz(tmp_reg, L_fill_2);\n-      __ sw(value, Address(dest, 0));\n-      __ addi(dest, dest, 4);\n-\n-      __ bind(L_fill_2);\n-      __ test_bit(tmp_reg, count, 1);\n-      __ beqz(tmp_reg, L_fill_1);\n-      __ sh(value, Address(dest, 0));\n-      __ addi(dest, dest, 2);\n-\n-      __ bind(L_fill_1);\n-      __ test_bit(tmp_reg, count, 0);\n-      __ beqz(tmp_reg, L_exit);\n-      __ sb(value, Address(dest, 0));\n-\n-      __ bind(L_exit);\n-      __ leave();\n-      __ ret();\n-    }\n-\n@@ -1750,26 +1726,24 @@\n-    {\n-      Label L_fill_2, L_fill_1, L_exit;\n-      __ test_bit(tmp_reg, count, 2);\n-      __ beqz(tmp_reg, L_fill_2);\n-      __ sb(value, Address(dest, 0));\n-      __ sb(value, Address(dest, 1));\n-      __ sb(value, Address(dest, 2));\n-      __ sb(value, Address(dest, 3));\n-      __ addi(dest, dest, 4);\n-\n-      __ bind(L_fill_2);\n-      __ test_bit(tmp_reg, count, 1);\n-      __ beqz(tmp_reg, L_fill_1);\n-      __ sb(value, Address(dest, 0));\n-      __ sb(value, Address(dest, 1));\n-      __ addi(dest, dest, 2);\n-\n-      __ bind(L_fill_1);\n-      __ test_bit(tmp_reg, count, 0);\n-      __ beqz(tmp_reg, L_exit);\n-      __ sb(value, Address(dest, 0));\n-\n-      __ bind(L_exit);\n-      __ leave();\n-      __ ret();\n-    }\n+    Label L_fill_2, L_fill_1, L_exit;\n+    __ test_bit(tmp_reg, count, 2);\n+    __ beqz(tmp_reg, L_fill_2);\n+    __ sb(value, Address(dest, 0));\n+    __ sb(value, Address(dest, 1));\n+    __ sb(value, Address(dest, 2));\n+    __ sb(value, Address(dest, 3));\n+    __ addi(dest, dest, 4);\n+\n+    __ bind(L_fill_2);\n+    __ test_bit(tmp_reg, count, 1);\n+    __ beqz(tmp_reg, L_fill_1);\n+    __ sb(value, Address(dest, 0));\n+    __ sb(value, Address(dest, 1));\n+    __ addi(dest, dest, 2);\n+\n+    __ bind(L_fill_1);\n+    __ test_bit(tmp_reg, count, 0);\n+    __ beqz(tmp_reg, L_exit);\n+    __ sb(value, Address(dest, 0));\n+\n+    __ bind(L_exit);\n+    __ leave();\n+    __ ret();\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":24,"deletions":50,"binary":false,"changes":74,"status":"modified"}]}