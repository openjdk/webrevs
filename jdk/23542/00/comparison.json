{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+ * @test\n@@ -26,1 +27,3 @@\n- * @summary JDK code doesn't respect contract for equals and hashCode\n+ * @summary Ensure the GSSName has the correct impl which respects\n+ * the contract for equals and hashCode across different configurations.\n+ * @library \/test\/lib\n@@ -30,0 +33,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -32,0 +36,2 @@\n+import java.util.Arrays;\n+\n@@ -34,3 +40,16 @@\n-    private static String NAME_STR1 = \"service@localhost\";\n-    private static String NAME_STR2 = \"service2@localhost\";\n-    private static final Oid MECH;\n+    public static void main(String[] argv) throws Exception {\n+        var os = System.getProperty(\"os.name\");\n+        var arch = System.getProperty(\"os.arch\");\n+\n+        var isNative = false;\n+\n+        if (os.equals(\"Linux\") || os.equals(\"Mac OS X\")) {\n+\n+            isNative = true;\n+\n+            \/\/ Not all *nix has native GSS libs installed\n+            final var krb5ConfigCheck = ProcessTools.executeCommand(\n+                    \"sh\",\n+                    \"-c\",\n+                    \"krb5-config --libs 2> \/dev\/null\"\n+            );\n@@ -38,6 +57,56 @@\n-    static {\n-        Oid temp = null;\n-        try {\n-            temp = new Oid(\"1.2.840.113554.1.2.2\"); \/\/ KRB5\n-        } catch (Exception e) {\n-            \/\/ should never happen\n+            if (krb5ConfigCheck.getExitValue() != 0) {\n+\n+                \/\/ Fedora has a different path\n+                final var krb5ConfigCheck2 = ProcessTools.executeCommand(\n+                        \"sh\",\n+                        \"-c\",\n+                        \"\/usr\/kerberos\/bin\/krb5-config --libs 2> \/dev\/null\"\n+                );\n+                if (krb5ConfigCheck2.getExitValue() != 0) {\n+                    isNative = false;\n+                }\n+            }\n+        }\n+\n+        if (isNative) {\n+\n+            final var testCommand = new String[]{\"-Dsun.security.jgss.native=true\",\n+                    Krb5NameEquals.Krb5NameEqualsTest.class.getName()\n+            };\n+\n+            final var result = ProcessTools.executeTestJava(testCommand);\n+\n+            if (result.getExitValue() != 0) {\n+                if (os.equals(\"Linux\") &&\n+                    (arch.equals(\"x86_64\") || arch.equals(\"amd64\"))) {\n+                    final var javaPropCommand = new String[]{System.getProperty(\"java.home\"),\n+                            \"-XshowSettings:properties\",\n+                            \"-version 2\"\n+                    };\n+\n+                    final var javaPropCommandResult = ProcessTools.executeTestJava(javaPropCommand);\n+                    System.out.println(javaPropCommandResult.getOutput());\n+\n+                    var installationIssue = Arrays.stream(javaPropCommandResult.getStdout().split(\"\\n\"))\n+                            .anyMatch(line -> line.contains(\"sun.arch.data.model\") && line.contains(\"32\"));\n+\n+                    if (installationIssue) {\n+                        System.out.println(\"\"\"\n+                                Running 32-bit JDK on 64-bit Linux. Maybe only 64-bit library is installed.\n+                                Please manually check if this is the case. Treated as PASSED now.\"\"\");\n+                    }\n+                } else {\n+                    result.shouldHaveExitValue(0);\n+                }\n+            } else {\n+                result.shouldHaveExitValue(0);\n+            }\n+        } else {\n+\n+            final var testCommand = new String[]{\"-Djava.security.krb5.realm=R\",\n+                    \"-Djava.security.krb5.kdc=127.0.0.1\",\n+                    Krb5NameEquals.Krb5NameEqualsTest.class.getName()\n+            };\n+\n+            final var result = ProcessTools.executeTestJava(testCommand);\n+            result.shouldHaveExitValue(0);\n@@ -45,1 +114,0 @@\n-        MECH = temp;\n@@ -48,20 +116,15 @@\n-    public static void main(String[] argv) throws Exception {\n-        GSSManager mgr = GSSManager.getInstance();\n-\n-        boolean result = true;\n-        \/\/ Create GSSName and check their equals(), hashCode() impl\n-        GSSName name1 = mgr.createName(NAME_STR1,\n-            GSSName.NT_HOSTBASED_SERVICE, MECH);\n-        GSSName name2 = mgr.createName(NAME_STR2,\n-            GSSName.NT_HOSTBASED_SERVICE, MECH);\n-        GSSName name3 = mgr.createName(NAME_STR1,\n-            GSSName.NT_HOSTBASED_SERVICE, MECH);\n-\n-        if (!name1.equals(name1) || !name1.equals(name3) ||\n-            !name1.equals((Object) name1) ||\n-            !name1.equals((Object) name3)) {\n-            System.out.println(\"Error: should be the same name\");\n-            result = false;\n-        } else if (name1.hashCode() != name3.hashCode()) {\n-            System.out.println(\"Error: should have same hash\");\n-            result = false;\n+    static class Krb5NameEqualsTest {\n+\n+        private static String NAME_STR1 = \"service@localhost\";\n+        private static String NAME_STR2 = \"service2@localhost\";\n+        private static final Oid MECH;\n+\n+        static {\n+            Oid temp = null;\n+            try {\n+                temp = new Oid(\"1.2.840.113554.1.2.2\"); \/\/ KRB5\n+            } catch (Exception e) {\n+                \/\/ should never happen\n+                throw new RuntimeException(\"Exception initialising Oid\", e);\n+            }\n+            MECH = temp;\n@@ -70,3 +133,31 @@\n-        if (name1.equals(name2) || name1.equals((Object) name2)) {\n-            System.out.println(\"Error: should be different names\");\n-            result = false;\n+        public static void main(String[] argv) throws Exception {\n+            GSSManager mgr = GSSManager.getInstance();\n+\n+            boolean result = true;\n+            \/\/ Create GSSName and check their equals(), hashCode() impl\n+            GSSName name1 = mgr.createName(NAME_STR1,\n+                    GSSName.NT_HOSTBASED_SERVICE, MECH);\n+            GSSName name2 = mgr.createName(NAME_STR2,\n+                    GSSName.NT_HOSTBASED_SERVICE, MECH);\n+            GSSName name3 = mgr.createName(NAME_STR1,\n+                    GSSName.NT_HOSTBASED_SERVICE, MECH);\n+\n+            if (!name1.equals(name1) || !name1.equals(name3) ||\n+                !name1.equals((Object) name1) ||\n+                !name1.equals((Object) name3)) {\n+                System.out.println(\"Error: should be the same name\");\n+                result = false;\n+            } else if (name1.hashCode() != name3.hashCode()) {\n+                System.out.println(\"Error: should have same hash\");\n+                result = false;\n+            }\n+\n+            if (name1.equals(name2) || name1.equals((Object) name2)) {\n+                System.out.println(\"Error: should be different names\");\n+                result = false;\n+            }\n+            if (result) {\n+                System.out.println(\"Done\");\n+            } else {\n+                System.exit(1);\n+            }\n@@ -74,3 +165,0 @@\n-        if (result) {\n-            System.out.println(\"Done\");\n-        } else System.exit(1);\n","filename":"test\/jdk\/sun\/security\/krb5\/Krb5NameEquals.java","additions":126,"deletions":38,"binary":false,"changes":164,"status":"modified"},{"patch":"@@ -1,127 +0,0 @@\n-#\n-# Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 6317711 6944847 8024046\n-# @summary Ensure the GSSName has the correct impl which respects\n-# the contract for equals and hashCode across different configurations.\n-\n-# set a few environment variables so that the shell-script can run stand-alone\n-# in the source directory\n-\n-if [ \"${TESTSRC}\" = \"\" ] ; then\n-   TESTSRC=\".\"\n-fi\n-\n-if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-   TESTCLASSES=\".\"\n-fi\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-   echo \"TESTJAVA not set.  Test cannot execute.\"\n-   echo \"FAILED!!!\"\n-   exit 1\n-fi\n-\n-if [ \"${COMPILEJAVA}\" = \"\" ]; then\n-    COMPILEJAVA=\"${TESTJAVA}\"\n-fi\n-\n-NATIVE=false\n-\n-# set platform-dependent variables\n-OS=`uname -s`\n-case \"$OS\" in\n-  Linux | Darwin )\n-    PATHSEP=\":\"\n-    FILESEP=\"\/\"\n-    NATIVE=true\n-    # Not all *nix has native GSS libs installed\n-    krb5-config --libs 2> \/dev\/null\n-    if [ $? != 0 ]; then\n-        # Fedora has a different path\n-        \/usr\/kerberos\/bin\/krb5-config --libs 2> \/dev\/null\n-        if [ $? != 0 ]; then\n-            NATIVE=false\n-        fi\n-    fi\n-    ;;\n-  AIX )\n-    PATHSEP=\":\"\n-    FILESEP=\"\/\"\n-    ;;\n-  CYGWIN* )\n-    PATHSEP=\";\"\n-    FILESEP=\"\/\"\n-    ;;\n-  Windows* )\n-    PATHSEP=\";\"\n-    FILESEP=\"\\\\\"\n-    ;;\n-  * )\n-    echo \"Unrecognized system!\"\n-    exit 1;\n-    ;;\n-esac\n-\n-TEST=Krb5NameEquals\n-\n-${COMPILEJAVA}${FILESEP}bin${FILESEP}javac ${TESTJAVACOPTS} ${TESTTOOLVMOPTS} \\\n-    -d ${TESTCLASSES}${FILESEP} \\\n-    ${TESTSRC}${FILESEP}${TEST}.java\n-\n-EXIT_STATUS=0\n-\n-if [ \"${NATIVE}\" = \"true\" ] ; then\n-    echo \"Testing native provider\"\n-    ${TESTJAVA}${FILESEP}bin${FILESEP}java ${TESTVMOPTS} ${TESTJAVAOPTS} \\\n-        -classpath ${TESTCLASSES} \\\n-        -Dsun.security.jgss.native=true \\\n-        ${TEST}\n-    if [ $? != 0 ] ; then\n-        echo \"Native provider fails\"\n-        EXIT_STATUS=1\n-        if [ \"$OS\" = \"Linux\" -a `arch` = \"x86_64\" ]; then\n-            ${TESTJAVA}${FILESEP}bin${FILESEP}java -XshowSettings:properties -version 2> allprop\n-            cat allprop | grep sun.arch.data.model | grep 32\n-            if [ \"$?\" = \"0\" ]; then\n-                echo \"Running 32-bit JDK on 64-bit Linux. Maybe only 64-bit library is installed.\"\n-                echo \"Please manually check if this is the case. Treated as PASSED now.\"\n-                EXIT_STATUS=0\n-            fi\n-        fi\n-    fi\n-fi\n-\n-echo \"Testing java provider\"\n-${TESTJAVA}${FILESEP}bin${FILESEP}java ${TESTVMOPTS} ${TESTJAVAOPTS} \\\n-        -classpath ${TESTCLASSES} \\\n-        -Djava.security.krb5.realm=R \\\n-        -Djava.security.krb5.kdc=127.0.0.1 \\\n-        ${TEST}\n-if [ $? != 0 ] ; then\n-    echo \"Java provider fails\"\n-    EXIT_STATUS=1\n-fi\n-\n-exit ${EXIT_STATUS}\n","filename":"test\/jdk\/sun\/security\/krb5\/runNameEquals.sh","additions":0,"deletions":127,"binary":false,"changes":127,"status":"deleted"}]}