{"files":[{"patch":"@@ -716,1 +716,1 @@\n-\/\/ Helper, on 32bit, for os::allocatable_memory_limit\n+\/\/ Helper, on 32bit, for os::commit_memory_limit\n@@ -734,1 +734,1 @@\n-bool os::allocatable_memory_limit(size_t& limit) {\n+bool os::commit_memory_limit(size_t& limit) {\n@@ -737,1 +737,1 @@\n-  size_t as_limit = address_space_limit();\n+  size_t as_limit = reserve_memory_limit();\n@@ -798,1 +798,1 @@\n-size_t os::address_space_limit() {\n+size_t os::reserve_memory_limit() {\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -900,12 +900,0 @@\n-bool os::allocatable_memory_limit(size_t& limit) {\n-  MEMORYSTATUSEX ms;\n-  ms.dwLength = sizeof(ms);\n-  GlobalMemoryStatusEx(&ms);\n-  limit = (size_t)ms.ullAvailVirtual;\n-  return true;\n-}\n-\n-size_t os::address_space_limit() {\n-  \/\/ Virtual address space cannot be limited on Windows.\n-  return SIZE_MAX;\n-}\n@@ -3311,0 +3299,13 @@\n+bool os::commit_memory_limit(size_t& limit) {\n+  MEMORYSTATUSEX ms;\n+  ms.dwLength = sizeof(ms);\n+  GlobalMemoryStatusEx(&ms);\n+  limit = (size_t)ms.ullAvailVirtual;\n+  return true;\n+}\n+\n+size_t os::reserve_memory_limit() {\n+  \/\/ Virtual address space cannot be limited on Windows.\n+  return SIZE_MAX;\n+}\n+\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-  const size_t limit = os::address_space_limit() \/ MaxVirtMemFraction;\n+  const size_t limit = os::reserve_memory_limit() \/ MaxVirtMemFraction;\n@@ -40,1 +40,1 @@\n-  const size_t limit = os::address_space_limit();\n+  const size_t limit = os::reserve_memory_limit();\n","filename":"src\/hotspot\/share\/gc\/z\/zAddressSpaceLimit.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1492,1 +1492,1 @@\n-  if (os::allocatable_memory_limit(max_allocatable)) {\n+  if (os::commit_memory_limit(max_allocatable)) {\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -343,1 +343,0 @@\n-  static bool allocatable_memory_limit(size_t& limit);\n@@ -452,1 +451,9 @@\n-  static size_t address_space_limit();\n+  \/\/ Returns an upper limit beyond which reserve_memory() calls are guaranteed\n+  \/\/ to fail. It is not guaranteed that reserving less memory than this will\n+  \/\/ succeed, however.\n+  static size_t reserve_memory_limit();\n+\n+  \/\/ Returns an upper limit beyond which commit_memory() calls are guaranteed\n+  \/\/ to fail. It is not guaranteed that committing less memory than this will\n+  \/\/ succeed, however.\n+  static bool commit_memory_limit(size_t& limit);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}