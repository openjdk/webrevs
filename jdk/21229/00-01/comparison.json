{"files":[{"patch":"@@ -67,0 +67,3 @@\n+    private static final VectorMask<Byte> M;\n+    private static final boolean[] AZ;\n+\n@@ -133,0 +136,6 @@\n+\n+        AZ = new boolean[ByteVector.SPECIES_PREFERRED.length()];\n+        for (int i = 0; i < AZ.length; i++) {\n+            AZ[i] = r.nextBoolean();\n+        }\n+        M = VectorMask.fromArray(ByteVector.SPECIES_PREFERRED, AZ, 0);\n@@ -138,1 +147,2 @@\n-            \"testReplicate4IntVector\", \"testReplicate8IntVector\"})\n+            \"testReplicate4IntVector\", \"testReplicate8IntVector\",\n+            \"testByteMask\"})\n@@ -176,0 +186,3 @@\n+        boolean[] rz = new boolean[M.length()];\n+        testByteMask(rz);\n+        Asserts.assertTrue(Arrays.equals(AZ, rz));\n@@ -238,0 +251,6 @@\n+    @Test\n+    @IR(counts = {IRNode.CON_V, \"1\"}, applyIfPlatform = {\"x64\", \"true\"})\n+    public void testByteMask(boolean[] r) {\n+        M.intoArray(r, 0);\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestConVNode.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"}]}