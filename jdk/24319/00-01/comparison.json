{"files":[{"patch":"@@ -97,1 +97,1 @@\n-    _region_data[i].update_livedata(r->get_mixed_candidate_live_data_bytes());\n+    _region_data[i].update_livedata(r->get_live_data_bytes());\n@@ -418,0 +418,1 @@\n+#ifdef KELVIN_DEPRECATE\n@@ -419,0 +420,1 @@\n+#endif\n@@ -462,0 +464,1 @@\n+#ifdef KELVIN_DEPRECATE\n@@ -463,0 +466,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -373,1 +373,1 @@\n-\n+#ifdef KELVIN_DEPRECATE\n@@ -376,0 +376,1 @@\n+#endif\n@@ -385,1 +386,1 @@\n-  \/\/ Returns words identified as live at time of most recent mark. Does not include allocations subsequent to last mark.\n+  \/\/ Returns words identified as live at time of most recent mark.  Can only be called during final mark safepoints.\n@@ -387,1 +388,1 @@\n-\n+#ifdef KELVIN_DEPRECATE\n@@ -392,0 +393,1 @@\n+#endif\n@@ -393,3 +395,2 @@\n-  \/\/ Returns garbage by calculating difference between used and get_live_data_words.  The value returned is only\n-  \/\/ meaningful immediately following completion of marking.  If there have been subsequent allocations in this region,\n-  \/\/ use a different approach to determine garbage, such as (used() - get_mixed_candidate_live_data_bytes())\n+  \/\/ Returns garbage by calculating difference between used and get_live_data_words.  Can only be called during final\n+  \/\/ meark safepoints. Allocations above TAMS are considered live.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -131,0 +131,1 @@\n+#ifdef KELVIN_DEPRECATE\n@@ -134,0 +135,1 @@\n+#endif\n@@ -151,1 +153,4 @@\n-  return Atomic::load(&_live_data);\n+  ShenandoahMarkingContext *ctx = ShenandoahHeap::heap()->complete_marking_context();\n+  HeapWord* tams = ctx->top_at_mark_start(this);\n+  size_t words_above_tams = pointer_delta(top(), tams);\n+  return Atomic::load(&_live_data) + words_above_tams;\n@@ -158,0 +163,1 @@\n+#ifdef KELVIN_DEPRECATE\n@@ -159,1 +165,1 @@\n-  assert(SafepointSynchronize::is_at_safepoint(), \"Should be at Shenandoah safepoint\");\n+  shenandoah_assert_safepoint();\n@@ -165,1 +171,1 @@\n-  assert(SafepointSynchronize::is_at_safepoint(), \"Should be at Shenandoah safepoint\");\n+  shenandoah_assert_safepoint();\n@@ -171,1 +177,1 @@\n-  assert(SafepointSynchronize::is_at_safepoint(), \"Should be at Shenandoah safepoint\");\n+  shenandoah_assert_safepoint();\n@@ -174,0 +180,1 @@\n+#endif\n@@ -183,1 +190,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+#ifdef KELVIN_DEPRECATE\n@@ -74,0 +75,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegionClosures.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-    region->increase_live_data_alloc_words(live_bytes \/ HeapWordSize);\n+    region->increase_live_data_gc_words(live_bytes \/ HeapWordSize);\n","filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}