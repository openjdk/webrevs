{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+import java.util.Map;\n+import java.util.HashMap;\n@@ -59,0 +61,1 @@\n+    private final Map<String, Long> waste = new HashMap<>();\n@@ -181,0 +184,10 @@\n+        if (Logger.shouldLog(LogTag.JFR_SYSTEM_PARSER, LogLevel.DEBUG)) {\n+            \/\/ Log largest waste first\n+            waste.entrySet().stream()\n+                 .sorted((a, b) -> b.getValue().compareTo(a.getValue()))\n+                 .forEach(entry -> {\n+                     String msg = \"Total chunk waste by \" + entry.getKey() + \": \" + entry.getValue() + \" bytes.\";\n+                     Logger.log(LogTag.JFR_SYSTEM_PARSER, LogLevel.DEBUG, msg);\n+                 });\n+        }\n+        waste.clear();\n@@ -219,0 +232,16 @@\n+        if (Logger.shouldLog(LogTag.JFR_SYSTEM_PARSER, LogLevel.DEBUG)) {\n+            for (CheckpointPool pool : event.getPools()) {\n+                output.writeLong(pool.getTypeId());\n+                output.writeLong(pool.getTouchedCount());\n+                for (PoolEntry pe : pool.getEntries()) {\n+                    if (!pe.isTouched()) {\n+                        String name = pe.getType().getName();\n+                        long amount = pe.getEndPosition() - pe.getStartPosition();\n+                        waste.merge(pe.getType().getName(), amount, Long::sum);\n+                        String msg = \"Unreferenced constant ID \" + pe.getId() +\n+                                     \" of type \"+ name + \" using \" + amount + \" bytes.\";\n+                        Logger.log(LogTag.JFR_SYSTEM_PARSER, LogLevel.TRACE, msg);\n+                    }\n+                }\n+            }\n+        }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/filter\/ChunkWriter.java","additions":30,"deletions":1,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n- * @run main\/othervm -XX:TLABSize=2k jdk.jfr.jvm.TestWaste\n+ * @run main\/othervm -Xlog:jfr+system+parser=debug -XX:TLABSize=2k jdk.jfr.jvm.TestWaste\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestWaste.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}