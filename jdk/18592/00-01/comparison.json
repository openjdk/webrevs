{"files":[{"patch":"@@ -3043,0 +3043,12 @@\n+  if (HugePages::thp_mode() != THPMode::always && UseTransparentHugePages) {\n+    \/\/ No THP. Use the platform-independent pretouch memory code.\n+    return page_size;\n+  }\n+\n+  if (!UseMadvPopulateWrite) {\n+    \/\/ Use small pages with the platform-independent pretouch memory code.\n+    \/\/ When using THP, we need to always pre-touch using small pages as the\n+    \/\/ OS will initially always use small pages.\n+    return os::vm_page_size();\n+  }\n+\n@@ -3044,24 +3056,4 @@\n-  \/\/ Use madvise to pretouch on Linux when THP is used, and fallback to the\n-  \/\/ common method if unsupported. THP can form right after madvise rather than\n-  \/\/ being assembled later.\n-  if (HugePages::thp_mode() == THPMode::always || UseTransparentHugePages) {\n-    int err = 0;\n-    if (UseMadvPopulateWrite &&\n-        ::madvise(first, len, MADV_POPULATE_WRITE) == -1) {\n-      err = errno;\n-    }\n-    if (!UseMadvPopulateWrite || err == EINVAL) { \/\/ Not to use or not supported\n-      \/\/ When using THP we need to always pre-touch using small pages as the\n-      \/\/ OS will initially always use small pages.\n-      page_size = os::vm_page_size();\n-    } else if (err == 0) {\n-      page_size = 0;\n-    }\n-    if (UseMadvPopulateWrite) {\n-      log_debug(gc, os)(\"Called madvise(\" PTR_FORMAT \", \" SIZE_FORMAT \", %d):\"\n-                        \" error='%s' (errno=%d), when THPMode::always=%d and\"\n-                        \" UseTransparentHugePages=%d\",\n-                        p2i(first), len, MADV_POPULATE_WRITE, os::strerror(err),\n-                        err, (int)(HugePages::thp_mode() == THPMode::always),\n-                        (int)UseTransparentHugePages);\n-    }\n+  if (::madvise(first, len, MADV_POPULATE_WRITE) != -1) {\n+    \/\/ Succeeded\n+    \/\/ 0 signals not to run the platform-independent pretouch memory code.\n+    return 0;\n@@ -3069,1 +3061,10 @@\n-  return page_size;\n+\n+  int err = errno;\n+  log_debug(gc, os)(\"Called madvise(\" PTR_FORMAT \", \" SIZE_FORMAT \", %d):\"\n+                    \" error='%s' (errno=%d), when THPMode::always=%d and\"\n+                    \" UseTransparentHugePages=%d\",\n+                    p2i(first), len, MADV_POPULATE_WRITE, os::strerror(err),\n+                    err, (int)(HugePages::thp_mode() == THPMode::always),\n+                    (int)UseTransparentHugePages);\n+\n+  return os::vm_page_size();\n@@ -4547,0 +4548,1 @@\n+\n@@ -4826,1 +4828,1 @@\n-  if (FLAG_IS_DEFAULT(UseMadvPopulateWrite) && UseMadvPopulateWrite) {\n+  if (UseMadvPopulateWrite) {\n@@ -4830,6 +4832,7 @@\n-    if (Linux::_release_major < 5 ||\n-        (Linux::_release_major == 5 && Linux::_release_minor < 14)) {\n-      FLAG_SET_DEFAULT(UseMadvPopulateWrite, false);\n-    } else {\n-      FLAG_SET_DEFAULT(UseMadvPopulateWrite, (::madvise(0, 0, MADV_POPULATE_WRITE) == 0));\n-    }\n+    bool supportMadvPopulateWrite =\n+      (Linux::_release_major > 5 ||\n+       (Linux::_release_major == 5 && Linux::_release_minor >= 14)) &&\n+      (::madvise(0, 0, MADV_POPULATE_WRITE) == 0);\n+    if (!FLAG_IS_DEFAULT(UseMadvPopulateWrite) && !supportMadvPopulateWrite)\n+      warning(\"Platform is supposed not to support MADV_POPULATE_WRITE, \"\n+              \"disabling using it to pretouch (-XX:-UseMadvPopulateWrite)\");\n@@ -4837,1 +4840,0 @@\n-  log_debug(gc, os)(\"UseMadvPopulateWrite=%d\", (int)(UseMadvPopulateWrite ? 1 : 0));\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":35,"deletions":33,"binary":false,"changes":68,"status":"modified"}]}