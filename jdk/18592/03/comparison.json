{"files":[{"patch":"@@ -371,3 +371,0 @@\n-  *major = -1;\n-  *minor = -1;\n-\n@@ -3045,0 +3042,12 @@\n+  if (HugePages::thp_mode() != THPMode::always && UseTransparentHugePages) {\n+    \/\/ No THP. Use the platform-independent pretouch memory code.\n+    return page_size;\n+  }\n+\n+  if (!UseMadvPopulateWrite) {\n+    \/\/ Use small pages with the platform-independent pretouch memory code.\n+    \/\/ When using THP, we need to always pre-touch using small pages as the\n+    \/\/ OS will initially always use small pages.\n+    return os::vm_page_size();\n+  }\n+\n@@ -3046,18 +3055,3 @@\n-  \/\/ Use madvise to pretouch on Linux when THP is used, and fallback to the\n-  \/\/ common method if unsupported. THP can form right after madvise rather than\n-  \/\/ being assembled later.\n-  if (HugePages::thp_mode() == THPMode::always || UseTransparentHugePages) {\n-    int err = 0;\n-    if (UseMadvPopulateWrite &&\n-        ::madvise(first, len, MADV_POPULATE_WRITE) == -1) {\n-      err = errno;\n-    }\n-    if (!UseMadvPopulateWrite || err == EINVAL) { \/\/ Not to use or not supported\n-      \/\/ When using THP we need to always pre-touch using small pages as the\n-      \/\/ OS will initially always use small pages.\n-      return os::vm_page_size();\n-    } else if (err != 0) {\n-      log_info(gc, os)(\"::madvise(\" PTR_FORMAT \", \" SIZE_FORMAT \", %d) failed; \"\n-                       \"error='%s' (errno=%d)\", p2i(first), len,\n-                       MADV_POPULATE_WRITE, os::strerror(err), err);\n-    }\n+  if (::madvise(first, len, MADV_POPULATE_WRITE) != -1) {\n+    \/\/ Succeeded\n+    \/\/ 0 signals not to run the platform-independent pretouch memory code.\n@@ -3066,1 +3060,10 @@\n-  return page_size;\n+\n+  int err = errno;\n+  log_debug(gc, os)(\"Called madvise(\" PTR_FORMAT \", \" SIZE_FORMAT \", %d):\"\n+                    \" error='%s' (errno=%d), when THPMode::always=%d and\"\n+                    \" UseTransparentHugePages=%d\",\n+                    p2i(first), len, MADV_POPULATE_WRITE, os::strerror(err),\n+                    err, (int)(HugePages::thp_mode() == THPMode::always),\n+                    (int)UseTransparentHugePages);\n+\n+  return os::vm_page_size();\n@@ -4545,3 +4548,0 @@\n-  \/\/ Check the availability of MADV_POPULATE_WRITE.\n-  FLAG_SET_DEFAULT(UseMadvPopulateWrite, (::madvise(0, 0, MADV_POPULATE_WRITE) == 0));\n-\n@@ -4824,0 +4824,27 @@\n+  \/\/ Check the availability of MADV_POPULATE_WRITE.\n+  if (UseMadvPopulateWrite) {\n+    \/\/ Some downstream kernels recognize MADV_POPULATE_WRITE_value as another\n+    \/\/ advice, so the check of versions is required here.\n+    \/\/ See https:\/\/github.com\/oracle\/linux-uek\/issues\/23\n+    struct utsname buffer;\n+    int ret = uname(&buffer);\n+    if (ret != 0) {\n+      log_warning(os)(\"uname(2) failed to get kernel version: %s\",\n+                      os::errno_name(ret));\n+    }\n+\n+    long major = -1, minor = -1;\n+    bool supportMadvPopulateWrite =\n+      (ret == 0 &&\n+       (sscanf(buffer.release, \"%ld.%ld\", &major, &minor) == 2) &&\n+       (major > 5 || (major == 5 && minor >= 14)) &&\n+       (::madvise(0, 0, MADV_POPULATE_WRITE) == 0));\n+    if (!supportMadvPopulateWrite) {\n+      if (!FLAG_IS_DEFAULT(UseMadvPopulateWrite)) {\n+        warning(\"Platform does not support MADV_POPULATE_WRITE, \"\n+                \"disabling using it to pretouch (-XX:-UseMadvPopulateWrite)\");\n+      }\n+      UseMadvPopulateWrite = false;\n+    }\n+  }\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":52,"deletions":25,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -89,1 +89,0 @@\n-gc\/parallel\/TestAlwaysPreTouchBehavior.java 8325218 linux-all\n@@ -115,1 +114,0 @@\n-runtime\/Thread\/TestAlwaysPreTouchStacks.java 8324781 linux-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}