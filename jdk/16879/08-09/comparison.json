{"files":[{"patch":"@@ -0,0 +1,58 @@\n+\/*\r\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\r\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\r\n+ *\r\n+ * This code is free software; you can redistribute it and\/or modify it\r\n+ * under the terms of the GNU General Public License version 2 only, as\r\n+ * published by the Free Software Foundation.  Oracle designates this\r\n+ * particular file as subject to the \"Classpath\" exception as provided\r\n+ * by Oracle in the LICENSE file that accompanied this code.\r\n+ *\r\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\r\n+ * version 2 for more details (a copy is included in the LICENSE file that\r\n+ * accompanied this code).\r\n+ *\r\n+ * You should have received a copy of the GNU General Public License version\r\n+ * 2 along with this work; if not, write to the Free Software Foundation,\r\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\r\n+ *\r\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\r\n+ * or visit www.oracle.com if you need additional information or have any\r\n+ * questions.\r\n+ *\/\r\n+\r\n+package com.sun.io;\r\n+\r\n+import java.io.ByteArrayOutputStream;\r\n+import java.io.FileOutputStream;\r\n+import java.io.OutputStream;\r\n+import java.io.PipedOutputStream;\r\n+import java.util.zip.CheckedOutputStream;\r\n+\r\n+\/**\r\n+ * Package-private utility class\r\n+ *\/\r\n+final class IOStreams {\r\n+\r\n+    \/**\r\n+     * Returns true if this class satisfies two conditions:\r\n+     * <pre>\r\n+     * - the reference to {@code byte[]} is not kept within the class\r\n+     * - the argument of {@link OutputStream#write(byte[])}} and {@link OutputStream#write(byte[], int, int)}} is not modified within the methods\r\n+     * - the {@code byte[]} is not read outside of the given bounds\r\n+     * <\/pre>\r\n+     *\r\n+     * @return true if this class is trusted\r\n+     * @see java.io.ByteArrayInputStream#transferTo(OutputStream)\r\n+     * @see java.io.BufferedInputStream#implTransferTo(OutputStream)\r\n+     *\/\r\n+    public static boolean isTrusted(OutputStream os) {\r\n+        var clazz = os.getClass();\r\n+        return clazz == ByteArrayOutputStream.class\r\n+                || clazz == FileOutputStream.class\r\n+                || clazz == PipedOutputStream.class\r\n+                || clazz == CheckedOutputStream.class;\r\n+    }\r\n+}\r\n","filename":"src\/java.base\/share\/classes\/com\/sun\/io\/IOStreams.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.io.IOStreams;\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedInputStream.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.io.IOStreams;\n","filename":"src\/java.base\/share\/classes\/java\/io\/ByteArrayInputStream.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,53 +0,0 @@\n-\/*\r\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\r\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\r\n- *\r\n- * This code is free software; you can redistribute it and\/or modify it\r\n- * under the terms of the GNU General Public License version 2 only, as\r\n- * published by the Free Software Foundation.  Oracle designates this\r\n- * particular file as subject to the \"Classpath\" exception as provided\r\n- * by Oracle in the LICENSE file that accompanied this code.\r\n- *\r\n- * This code is distributed in the hope that it will be useful, but WITHOUT\r\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\r\n- * version 2 for more details (a copy is included in the LICENSE file that\r\n- * accompanied this code).\r\n- *\r\n- * You should have received a copy of the GNU General Public License version\r\n- * 2 along with this work; if not, write to the Free Software Foundation,\r\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\r\n- *\r\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\r\n- * or visit www.oracle.com if you need additional information or have any\r\n- * questions.\r\n- *\/\r\n-\r\n-package java.io;\r\n-\r\n-import java.util.zip.CheckedOutputStream;\r\n-\r\n-\/**\r\n- * Package-private utility class\r\n- *\/\r\n-final class IOStreams {\r\n-\r\n-    \/**\r\n-     * Returns true if this class satisfies two conditions:\r\n-     * <pre>\r\n-     * - the reference to {@code byte[]} is not kept within the class\r\n-     * - the argument of {@link OutputStream#write(byte[])}} and {@link OutputStream#write(byte[], int, int)}} is not modified within the methods\r\n-     * <\/pre>\r\n-     * @see java.io.ByteArrayInputStream#transferTo(OutputStream)\r\n-     * @see java.io.BufferedInputStream#implTransferTo(OutputStream)\r\n-     *\r\n-     * @return true if this class is trusted\r\n-     *\/\r\n-    static boolean isTrusted(OutputStream os) {\r\n-        var clazz = os.getClass();\r\n-        return clazz == ByteArrayOutputStream.class\r\n-                || clazz == FileOutputStream.class\r\n-                || clazz == PipedOutputStream.class\r\n-                || clazz == CheckedOutputStream.class;\r\n-    }\r\n-}\r\n","filename":"src\/java.base\/share\/classes\/java\/io\/IOStreams.java","additions":0,"deletions":53,"binary":false,"changes":53,"status":"deleted"}]}