{"files":[{"patch":"@@ -100,4 +100,4 @@\n-         (is_addi_at(instr + instruction_size) ||\n-          is_jalr_at(instr + instruction_size) ||\n-          is_load_at(instr + instruction_size) ||\n-          is_float_load_at(instr + instruction_size)) &&\n+         (is_addi_at(instr + MacroAssembler::instruction_size) ||\n+          is_jalr_at(instr + MacroAssembler::instruction_size) ||\n+          is_load_at(instr + MacroAssembler::instruction_size) ||\n+          is_float_load_at(instr + MacroAssembler::instruction_size)) &&\n@@ -110,1 +110,1 @@\n-         is_ld_at(instr + instruction_size) && \/\/ ld\n+         is_ld_at(instr + MacroAssembler::instruction_size) && \/\/ ld\n@@ -116,7 +116,7 @@\n-         is_addi_at(instr + instruction_size) && \/\/ Addi\n-         is_slli_shift_at(instr + instruction_size * 2, 11) && \/\/ Slli Rd, Rs, 11\n-         is_addi_at(instr + instruction_size * 3) && \/\/ Addi\n-         is_slli_shift_at(instr + instruction_size * 4, 6) && \/\/ Slli Rd, Rs, 6\n-         (is_addi_at(instr + instruction_size * 5) ||\n-          is_jalr_at(instr + instruction_size * 5) ||\n-          is_load_at(instr + instruction_size * 5)) && \/\/ Addi\/Jalr\/Load\n+         is_addi_at(instr + MacroAssembler::instruction_size) && \/\/ Addi\n+         is_slli_shift_at(instr + MacroAssembler::instruction_size * 2, 11) && \/\/ Slli Rd, Rs, 11\n+         is_addi_at(instr + MacroAssembler::instruction_size * 3) && \/\/ Addi\n+         is_slli_shift_at(instr + MacroAssembler::instruction_size * 4, 6) && \/\/ Slli Rd, Rs, 6\n+         (is_addi_at(instr + MacroAssembler::instruction_size * 5) ||\n+          is_jalr_at(instr + MacroAssembler::instruction_size * 5) ||\n+          is_load_at(instr + MacroAssembler::instruction_size * 5)) && \/\/ Addi\/Jalr\/Load\n@@ -128,6 +128,6 @@\n-         is_lui_at(instr + instruction_size) && \/\/ lui\n-         is_slli_shift_at(instr + instruction_size * 2, 18) && \/\/ slli Rd, Rs, 18\n-         is_add_at(instr + instruction_size * 3) &&\n-         (is_addi_at(instr + instruction_size * 4) ||\n-          is_jalr_at(instr + instruction_size * 4) ||\n-          is_load_at(instr + instruction_size * 4)) && \/\/ Addi\/Jalr\/Load\n+         is_lui_at(instr + MacroAssembler::instruction_size) && \/\/ lui\n+         is_slli_shift_at(instr + MacroAssembler::instruction_size * 2, 18) && \/\/ slli Rd, Rs, 18\n+         is_add_at(instr + MacroAssembler::instruction_size * 3) &&\n+         (is_addi_at(instr + MacroAssembler::instruction_size * 4) ||\n+          is_jalr_at(instr + MacroAssembler::instruction_size * 4) ||\n+          is_load_at(instr + MacroAssembler::instruction_size * 4)) && \/\/ Addi\/Jalr\/Load\n@@ -139,1 +139,1 @@\n-         is_srli_at(instr + instruction_size) && \/\/ srli\n+         is_srli_at(instr + MacroAssembler::instruction_size) && \/\/ srli\n@@ -145,1 +145,1 @@\n-         is_addiw_at(instr + instruction_size) && \/\/ addiw\n+         is_addiw_at(instr + MacroAssembler::instruction_size) && \/\/ addiw\n@@ -5113,1 +5113,1 @@\n-  return 1 * instruction_size + wordSize;\n+  return 1 * MacroAssembler::instruction_size + wordSize;\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -1243,1 +1243,1 @@\n-      return 2 * 4;  \/\/ auipc + jalr, see far_call() & far_jump()\n+      return 2 * MacroAssembler::instruction_size;  \/\/ auipc + jalr, see far_call() & far_jump()\n@@ -1647,3 +1647,3 @@\n-    movptr1_instruction_size = 6 * instruction_size, \/\/ lui, addi, slli, addi, slli, addi.  See movptr1().\n-    movptr2_instruction_size = 5 * instruction_size, \/\/ lui, lui, slli, add, addi.  See movptr2().\n-    load_pc_relative_instruction_size = 2 * instruction_size \/\/ auipc, ld\n+    movptr1_instruction_size = 6 * MacroAssembler::instruction_size, \/\/ lui, addi, slli, addi, slli, addi.  See movptr1().\n+    movptr2_instruction_size = 5 * MacroAssembler::instruction_size, \/\/ lui, lui, slli, add, addi.  See movptr2().\n+    load_pc_relative_instruction_size = 2 * MacroAssembler::instruction_size \/\/ auipc, ld\n@@ -1704,5 +1704,5 @@\n-    address addi1 = lui + instruction_size;\n-    address slli1 = addi1 + instruction_size;\n-    address addi2 = slli1 + instruction_size;\n-    address slli2 = addi2 + instruction_size;\n-    address last_instr = slli2 + instruction_size;\n+    address addi1 = lui + MacroAssembler::instruction_size;\n+    address slli1 = addi1 + MacroAssembler::instruction_size;\n+    address addi2 = slli1 + MacroAssembler::instruction_size;\n+    address slli2 = addi2 + MacroAssembler::instruction_size;\n+    address last_instr = slli2 + MacroAssembler::instruction_size;\n@@ -1728,4 +1728,4 @@\n-    address lui2 = lui1 + instruction_size;\n-    address slli = lui2 + instruction_size;\n-    address add  = slli + instruction_size;\n-    address last_instr = add + instruction_size;\n+    address lui2 = lui1 + MacroAssembler::instruction_size;\n+    address slli = lui2 + MacroAssembler::instruction_size;\n+    address add  = slli + MacroAssembler::instruction_size;\n+    address last_instr = add + MacroAssembler::instruction_size;\n@@ -1745,1 +1745,1 @@\n-    address srli = lui + instruction_size;\n+    address srli = lui + MacroAssembler::instruction_size;\n@@ -1756,1 +1756,1 @@\n-    address addiw = lui + instruction_size;\n+    address addiw = lui + MacroAssembler::instruction_size;\n@@ -1767,1 +1767,1 @@\n-    address last_instr = auipc + instruction_size;\n+    address last_instr = auipc + MacroAssembler::instruction_size;\n@@ -1777,1 +1777,1 @@\n-    address load = auipc + instruction_size;\n+    address load = auipc + MacroAssembler::instruction_size;\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"}]}