{"files":[{"patch":"@@ -311,1 +311,3 @@\n-        copyFontResources();\n+        if (!options.noFonts()) {\n+            copyFontResources();\n+        }\n@@ -470,1 +472,0 @@\n-            InputStream in = cssURL.openStream();\n@@ -473,9 +474,8 @@\n-            try (in) {\n-                try (BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {\n-                    String line;\n-                    while ((line = reader.readLine()) != null) {\n-                        Matcher m = pattern.matcher(line);\n-                        if (m.find()) {\n-                            DocPath fontPath = DocPaths.FONTS.resolve(m.group());\n-                            copyResource(fontPath, DocPaths.RESOURCE_FILES.resolve(fontPath), false);\n-                        }\n+            try (InputStream in = cssURL.openStream();\n+                 BufferedReader reader = new BufferedReader(new InputStreamReader(in))) {\n+                String line;\n+                while ((line = reader.readLine()) != null) {\n+                    Matcher m = pattern.matcher(line);\n+                    if (m.find()) {\n+                        DocPath fontPath = DocPaths.FONTS.resolve(m.group());\n+                        copyResource(fontPath, DocPaths.RESOURCE_FILES.resolve(fontPath), false);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -568,0 +568,3 @@\n+doclet.usage.no-fonts.description=\\\n+    Do not include standard web fonts in generated documentation\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -211,0 +211,7 @@\n+    \/**\n+     * Argument for command-line option {@code --no-fonts}.\n+     * True if command-line option {@code --no-fonts} is used and font files\n+     * should not be included in generated documentation. Default value is false.\n+     *\/\n+    private boolean noFonts = false;\n+\n@@ -484,0 +491,8 @@\n+                new Option(resources, \"--no-fonts\") {\n+                    @Override\n+                    public boolean process(String opt, List<String> args) {\n+                        noFonts = true;\n+                        return true;\n+                    }\n+                },\n+\n@@ -892,0 +907,9 @@\n+    \/**\n+     * Argument for command-line option {@code --no-fonts}.\n+     * True if command-line option {@code --no-fonts\"} is used.\n+     * Default value is false.\n+     *\/\n+    public boolean noFonts() {\n+        return noFonts;\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseOptions.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8324774 8327385\n+ * @summary Add DejaVu web fonts\n+ * @library \/tools\/lib ..\/..\/lib\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build toolbox.ToolBox javadoc.tester.*\n+ * @run main TestFonts\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+public class TestFonts extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        var tester = new TestFonts();\n+        tester.setup().runTests();\n+    }\n+\n+    private final ToolBox tb = new ToolBox();\n+    Path src;\n+\n+    TestFonts setup() throws IOException {\n+        src = Path.of(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                   \/**\n+                    * Simple dummy class.\n+                    *\/\n+                   public class Dummy {}\n+                   \"\"\");\n+        return this;\n+    }\n+\n+    @Test\n+    public void testFonts(Path base) throws Exception {\n+        setUseDefaultOptions(false);\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                src.resolve(\"Dummy.java\").toString());\n+        checkExit(Exit.OK);\n+        checkOutput(\"resource-files\/fonts\/dejavu.css\", true,\n+                \"\"\"\n+                    \/* DejaVu fonts v2.37 *\/\"\"\",\n+                \"\"\"\n+                    @font-face {\n+                      font-family: 'DejaVu Sans Mono';\n+                      src: url('DejaVuLGCSansMono.woff2') format('woff2'),\n+                           url('DejaVuLGCSansMono.woff') format('woff');\n+                      font-weight: normal;\n+                      font-style: normal;\n+                    }\"\"\");\n+        checkFiles(true,\n+                \"resource-files\/fonts\/DejaVuLGCSans-Bold.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSans-Bold.woff2\",\n+                \"resource-files\/fonts\/DejaVuLGCSans-BoldOblique.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSans-BoldOblique.woff2\",\n+                \"resource-files\/fonts\/DejaVuLGCSans-Oblique.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSans-Oblique.woff2\",\n+                \"resource-files\/fonts\/DejaVuLGCSans.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSans.woff2\",\n+                \"resource-files\/fonts\/DejaVuLGCSansMono-Bold.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSansMono-Bold.woff2\",\n+                \"resource-files\/fonts\/DejaVuLGCSansMono-BoldOblique.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSansMono-BoldOblique.woff2\",\n+                \"resource-files\/fonts\/DejaVuLGCSansMono-Oblique.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSansMono-Oblique.woff2\",\n+                \"resource-files\/fonts\/DejaVuLGCSansMono.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSansMono.woff2\",\n+                \"resource-files\/fonts\/DejaVuLGCSerif-Bold.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSerif-Bold.woff2\",\n+                \"resource-files\/fonts\/DejaVuLGCSerif-BoldItalic.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSerif-BoldItalic.woff2\",\n+                \"resource-files\/fonts\/DejaVuLGCSerif-Italic.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSerif-Italic.woff2\",\n+                \"resource-files\/fonts\/DejaVuLGCSerif.woff\",\n+                \"resource-files\/fonts\/DejaVuLGCSerif.woff2\");\n+    }\n+\n+    @Test\n+    public void testNoFontsOption(Path base) throws Exception {\n+        setUseDefaultOptions(false);\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"--no-fonts\",\n+                src.resolve(\"Dummy.java\").toString());\n+        checkExit(Exit.OK);\n+        checkFiles(true, \"resource-files\/copy.svg\",\n+                \"resource-files\/glass.png\",\n+                \"resource-files\/jquery-ui.min.css\",\n+                \"resource-files\/link.svg\",\n+                \"resource-files\/stylesheet.css\",\n+                \"resource-files\/x.png\");\n+        checkFiles(false, \"resource-files\/fonts\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testFonts\/TestFonts.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -171,0 +171,3 @@\n+    \/** Default options used when running javadoc with the standard doclet. *\/\n+    private final String[] defaultOptions = {\"--no-fonts\"};\n+\n@@ -252,0 +255,1 @@\n+    private boolean useDefaultOptions = true;\n@@ -489,0 +493,1 @@\n+        boolean hasDocletOption = false;\n@@ -496,0 +501,1 @@\n+                case \"-doclet\" -> hasDocletOption = true;\n@@ -517,0 +523,7 @@\n+        \/\/ Use default options when running with standard doclet unless explicitly disabled\n+        if (!hasDocletOption && useDefaultOptions) {\n+            var newArgs = Arrays.copyOf(defaultOptions, defaultOptions.length + args.length);\n+            System.arraycopy(args, 0, newArgs, defaultOptions.length, args.length);\n+            args = newArgs;\n+        }\n+\n@@ -622,0 +635,7 @@\n+    \/**\n+     * Sets whether to use the default options when running javadoc with the standard doclet.\n+     *\/\n+    public void setUseDefaultOptions(boolean b) {\n+        useDefaultOptions = b;\n+    }\n+\n","filename":"test\/langtools\/jdk\/javadoc\/lib\/javadoc\/tester\/JavadocTester.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @bug 8273154\n+ * @bug 8273154 8327385\n@@ -427,0 +427,5 @@\n+    @Test\n+    public void testDefaultOptions() {\n+        checkFiles(false, \"resource-files\/fonts\");\n+    }\n+\n","filename":"test\/langtools\/jdk\/javadoc\/testJavadocTester\/TestJavadocTester.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    List<String> MISSING_IN_MAN_PAGE = List.of();\n+    List<String> MISSING_IN_MAN_PAGE = List.of(\"--no-fonts\");\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/CheckManPageOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}