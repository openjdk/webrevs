{"files":[{"patch":"@@ -41,0 +41,2 @@\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n@@ -47,8 +49,28 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            String str = \"one two three\";\n-            JPasswordField field = new JPasswordField(str);\n-            if (!(field.getUI() instanceof BasicTextUI)) {\n-                System.out.println(\"Skipping PasswordSelectionWordTest \" +\n-                        \"because the JPasswordField UI was \" + field.getUI());\n-                return;\n-            }\n+        for (UIManager.LookAndFeelInfo laf :\n+                UIManager.getInstalledLookAndFeels()) {\n+            System.out.println(\"Testing LAF: \" + laf.getClassName());\n+            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+            SwingUtilities.invokeAndWait(() -> runTest());\n+        }\n+    }\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported LAF: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void runTest() {\n+        String str = \"one two three\";\n+        JPasswordField field = new JPasswordField(str);\n+        if (!(field.getUI() instanceof BasicTextUI)) {\n+            System.out.println(\"Skipping PasswordSelectionWordTest \" +\n+                    \"because the JPasswordField UI was \" + field.getUI());\n+            return;\n+        }\n+        System.out.println(\"Testing \"+ field.getUI());\n@@ -56,3 +78,3 @@\n-            \/\/ do something (anything) to initialize the Views:\n-            field.setSize(100, 100);\n-            field.addNotify();\n+        \/\/ do something (anything) to initialize the Views:\n+        field.setSize(100, 100);\n+        field.addNotify();\n@@ -60,12 +82,11 @@\n-            Action action = field.getActionMap().get(\n-                    DefaultEditorKit.selectWordAction);\n-            action.actionPerformed(new ActionEvent(field, 0, \"\"));\n-            int selectionStart = field.getSelectionStart();\n-            int selectionEnd = field.getSelectionEnd();\n-            System.out.println(\"selectionStart = \" + selectionStart);\n-            System.out.println(\"selectionEnd = \" + selectionEnd);\n-            if (selectionStart != 0 || selectionEnd != str.length()) {\n-                throw new Error(\"selectionStart = \" + selectionStart +\n-                        \" and selectionEnd = \" + selectionEnd);\n-            }\n-        });\n+        Action action = field.getActionMap().get(\n+                DefaultEditorKit.selectWordAction);\n+        action.actionPerformed(new ActionEvent(field, 0, \"\"));\n+        int selectionStart = field.getSelectionStart();\n+        int selectionEnd = field.getSelectionEnd();\n+        System.out.println(\"selectionStart = \" + selectionStart);\n+        System.out.println(\"selectionEnd = \" + selectionEnd);\n+        if (selectionStart != 0 || selectionEnd != str.length()) {\n+            throw new Error(\"selectionStart = \" + selectionStart +\n+                    \" and selectionEnd = \" + selectionEnd);\n+        }\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicPasswordFieldUI\/PasswordSelectionWordTest.java","additions":44,"deletions":23,"binary":false,"changes":67,"status":"modified"}]}