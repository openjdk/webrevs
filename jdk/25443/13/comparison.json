{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,19 +94,0 @@\n-\n-    \/**\n-     * Create the action map for Password Field.  This map provides\n-     * same actions for double mouse click and\n-     * and for triple mouse click (see bug 4231444).\n-     *\/\n-\n-    ActionMap createActionMap() {\n-        ActionMap map = super.createActionMap();\n-        if (map.get(DefaultEditorKit.selectWordAction) != null) {\n-            Action a = map.get(DefaultEditorKit.selectLineAction);\n-            if (a != null) {\n-                map.remove(DefaultEditorKit.selectWordAction);\n-                map.put(DefaultEditorKit.selectWordAction, a);\n-            }\n-        }\n-        return map;\n-    }\n-\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicPasswordFieldUI.java","additions":1,"deletions":20,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -650,0 +650,15 @@\n+\n+        if (getComponent() instanceof JPasswordField) {\n+            \/\/ Edit the action map for Password Field.  This map provides\n+            \/\/ same actions for double mouse click and\n+            \/\/ and for triple mouse click (see bugs 4231444, 8354646).\n+\n+            if (map.get(DefaultEditorKit.selectWordAction) != null) {\n+                Action a = map.get(DefaultEditorKit.selectLineAction);\n+                map.remove(DefaultEditorKit.selectWordAction);\n+                if (a != null) {\n+                    map.put(DefaultEditorKit.selectWordAction, a);\n+                }\n+            }\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTextUI.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,15 +111,0 @@\n-\n-    \/**\n-     * {@inheritDoc}\n-     *\/\n-    @Override\n-    protected void installKeyboardActions() {\n-        super.installKeyboardActions();\n-        ActionMap map = SwingUtilities.getUIActionMap(getComponent());\n-        if (map != null && map.get(DefaultEditorKit.selectWordAction) != null) {\n-            Action a = map.get(DefaultEditorKit.selectLineAction);\n-            if (a != null) {\n-                map.put(DefaultEditorKit.selectWordAction, a);\n-            }\n-        }\n-    }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthPasswordFieldUI.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- * @bug 6191897\n+ * @bug 6191897 8354646\n","filename":"test\/jdk\/java\/awt\/TextField\/SetEchoCharWordOpsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @key headful\n+ * @bug 4231444 8354646\n+ * @summary Password fields' ActionMap needs to replace\n+ *          DefaultEditorKit.selectWordAction with\n+ *          DefaultEditorKit.selectLineAction.\n+ *\n+ * @run main PasswordSelectionWordTest\n+ *\/\n+\n+import javax.swing.Action;\n+import javax.swing.JPasswordField;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+import javax.swing.plaf.basic.BasicTextUI;\n+import javax.swing.text.DefaultEditorKit;\n+import java.awt.event.ActionEvent;\n+\n+public class PasswordSelectionWordTest {\n+    public static void main(String[] args) throws Exception {\n+        for (UIManager.LookAndFeelInfo laf :\n+                UIManager.getInstalledLookAndFeels()) {\n+            System.out.println(\"Testing LAF: \" + laf.getClassName());\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (setLookAndFeel(laf)) {\n+                    runTest();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static boolean setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+            return true;\n+        } catch (UnsupportedLookAndFeelException  e) {\n+            System.err.println(\"Skipping unsupported look and feel:\");\n+            e.printStackTrace();\n+            return false;\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void runTest() {\n+        String str = \"one two three\";\n+        JPasswordField field = new JPasswordField(str);\n+        if (!(field.getUI() instanceof BasicTextUI)) {\n+            throw new RuntimeException(\"Unexpected condition: JPasswordField UI was \" + field.getUI());\n+        }\n+        System.out.println(\"Testing \" + field.getUI());\n+\n+        \/\/ do something (anything) to initialize the Views:\n+        field.setSize(100, 100);\n+        field.addNotify();\n+\n+        Action action = field.getActionMap().get(\n+                DefaultEditorKit.selectWordAction);\n+        action.actionPerformed(new ActionEvent(field, 0, \"\"));\n+        int selectionStart = field.getSelectionStart();\n+        int selectionEnd = field.getSelectionEnd();\n+        System.out.println(\"selectionStart = \" + selectionStart);\n+        System.out.println(\"selectionEnd = \" + selectionEnd);\n+        if (selectionStart != 0 || selectionEnd != str.length()) {\n+            throw new RuntimeException(\"selectionStart = \" + selectionStart +\n+                    \" and selectionEnd = \" + selectionEnd);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPasswordField\/PasswordSelectionWordTest.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"}]}