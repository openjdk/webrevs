{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthPasswordFieldUI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,5 +29,2 @@\n- * DefaultEditorKit.selectWordAction with DefaultEditorKit.selectLineAction.\n- * When we failed to do this: the user could double-click words and\n- * identify spaces in the password. 8354646 is an offshoot of 4231444 that\n- * reproduced in Aqua because AquaTextPasswordFieldUI does NOT extend\n- * BasicPasswordFieldUI.\n+ *          DefaultEditorKit.selectWordAction with\n+ *          DefaultEditorKit.selectLineAction.\n@@ -51,2 +48,5 @@\n-            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n-            SwingUtilities.invokeAndWait(() -> runTest());\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (setLookAndFeel(laf)) {\n+                    runTest();\n+                }\n+            });\n@@ -56,1 +56,1 @@\n-    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+    private static boolean setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n@@ -59,1 +59,8 @@\n-        } catch (Exception  e) {\n+            return true;\n+        } catch (UnsupportedLookAndFeelException  e) {\n+            System.err.println(\"Skipping unsupported look and feel:\")\n+            e.printStackTrace();\n+            return false;\n+        } catch (RuntimeException e) {\n+            throw e;\n+        } catch (Exception e) {\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicPasswordFieldUI\/PasswordSelectionWordTest.java","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"}]}