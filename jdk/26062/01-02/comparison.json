{"files":[{"patch":"@@ -829,0 +829,2 @@\n+\n+    \/\/ Division of a zero by a zero results in NaN.\n@@ -833,0 +835,3 @@\n+    \/\/ As per C++ standard section 7.6.5 (expr.mul), behavior is undefined only if\n+    \/\/ the second operand is 0.0. In all other situations, we can expect a standard-compliant\n+    \/\/ C++ compiler to generate code following IEEE 754 semantics.\n@@ -834,0 +839,1 @@\n+      \/\/ If either operand is NaN, the result is NaN\n@@ -837,0 +843,2 @@\n+        \/\/ Division of a nonzero finite value by a zero results in a signed infinity. Also,\n+        \/\/ division of an infinity by a finite value results in a signed infinity.\n","filename":"src\/hotspot\/share\/opto\/divnode.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}