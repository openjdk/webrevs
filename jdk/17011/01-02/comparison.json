{"files":[{"patch":"@@ -226,1 +226,1 @@\n-JVM_VirtualThreadSync\n+JVM_VirtualThreadCriticalLock\n","filename":"make\/data\/hotspot-symbols\/symbols-unix","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -600,1 +600,1 @@\n-  do_intrinsic(_notifyJvmtiVThreadSync, java_lang_VirtualThread, notifyJvmtiSync_name, bool_void_signature, F_RN)       \\\n+  do_intrinsic(_notifyJvmtiVThreadCriticalLock, java_lang_VirtualThread, notifyJvmtiCriticalLock_name, bool_void_signature, F_RN) \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -424,1 +424,1 @@\n-  template(notifyJvmtiSync_name,                      \"notifyJvmtiSync\")                          \\\n+  template(notifyJvmtiCriticalLock_name,              \"notifyJvmtiCriticalLock\")                  \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1158,1 +1158,1 @@\n-JVM_VirtualThreadSync(JNIEnv* env, jobject vthread, jboolean enter);\n+JVM_VirtualThreadCriticalLock(JNIEnv* env, jobject vthread, jboolean enter);\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -825,1 +825,1 @@\n-  case vmIntrinsics::_notifyJvmtiVThreadSync:\n+  case vmIntrinsics::_notifyJvmtiVThreadCriticalLock:\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -496,1 +496,1 @@\n-  case vmIntrinsics::_notifyJvmtiVThreadSync:       return inline_native_notify_jvmti_sync();\n+  case vmIntrinsics::_notifyJvmtiVThreadCriticalLock: return inline_native_notify_jvmti_sync();\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4013,1 +4013,1 @@\n-JVM_ENTRY(void, JVM_VirtualThreadSync(JNIEnv* env, jobject vthread, jboolean enter))\n+JVM_ENTRY(void, JVM_VirtualThreadCriticalLock(JNIEnv* env, jobject vthread, jboolean enter))\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -361,5 +361,7 @@\n-            notifyJvmtiSync(true);\n-            synchronized (interruptLock) {\n-                \/\/ need to recheck interrupt status\n-                if (!interrupted) {\n-                    carrier.clearInterrupt();\n+            try {\n+                notifyJvmtiCriticalLock(true);\n+                synchronized (interruptLock) {\n+                    \/\/ need to recheck interrupt status\n+                    if (!interrupted) {\n+                        carrier.clearInterrupt();\n+                    }\n@@ -367,0 +369,2 @@\n+            } finally {\n+                notifyJvmtiCriticalLock(false);\n@@ -368,1 +372,0 @@\n-            notifyJvmtiSync(false);\n@@ -386,4 +389,8 @@\n-        notifyJvmtiSync(true);\n-        \/\/ break connection to carrier thread, synchronized with interrupt\n-        synchronized (interruptLock) {\n-            setCarrierThread(null);\n+        try {\n+            notifyJvmtiCriticalLock(true);\n+            \/\/ break connection to carrier thread, synchronized with interrupt\n+            synchronized (interruptLock) {\n+                setCarrierThread(null);\n+            }\n+        } finally {\n+            notifyJvmtiCriticalLock(false);\n@@ -391,1 +398,0 @@\n-        notifyJvmtiSync(false);\n@@ -749,6 +755,8 @@\n-                notifyJvmtiSync(true);\n-                \/\/ unpark carrier thread when pinned\n-                synchronized (carrierThreadAccessLock()) {\n-                    Thread carrier = carrierThread;\n-                    if (carrier != null && ((s = state()) == PINNED || s == TIMED_PINNED)) {\n-                        U.unpark(carrier);\n+                try {\n+                    notifyJvmtiCriticalLock(true);\n+                    \/\/ unpark carrier thread when pinned\n+                    synchronized (carrierThreadAccessLock()) {\n+                        Thread carrier = carrierThread;\n+                        if (carrier != null && ((s = state()) == PINNED || s == TIMED_PINNED)) {\n+                            U.unpark(carrier);\n+                        }\n@@ -756,0 +764,2 @@\n+                } finally {\n+                    notifyJvmtiCriticalLock(false);\n@@ -757,1 +767,0 @@\n-                notifyJvmtiSync(false);\n@@ -853,7 +862,8 @@\n-            notifyJvmtiSync(true);\n-            synchronized (interruptLock) {\n-                interrupted = true;\n-                Interruptible b = nioBlocker;\n-                if (b != null) {\n-                    b.interrupt(this);\n-                }\n+            try {\n+                notifyJvmtiCriticalLock(true);\n+                synchronized (interruptLock) {\n+                    interrupted = true;\n+                    Interruptible b = nioBlocker;\n+                    if (b != null) {\n+                        b.interrupt(this);\n+                    }\n@@ -861,3 +871,6 @@\n-                \/\/ interrupt carrier thread if mounted\n-                Thread carrier = carrierThread;\n-                if (carrier != null) carrier.setInterrupt();\n+                    \/\/ interrupt carrier thread if mounted\n+                    Thread carrier = carrierThread;\n+                    if (carrier != null) carrier.setInterrupt();\n+                }\n+            } finally {\n+                notifyJvmtiCriticalLock(false);\n@@ -865,1 +878,0 @@\n-            notifyJvmtiSync(false);\n@@ -883,4 +895,8 @@\n-            notifyJvmtiSync(true);\n-            synchronized (interruptLock) {\n-                interrupted = false;\n-                carrierThread.clearInterrupt();\n+            try {\n+                notifyJvmtiCriticalLock(true);\n+                synchronized (interruptLock) {\n+                    interrupted = false;\n+                    carrierThread.clearInterrupt();\n+                }\n+            } finally {\n+                notifyJvmtiCriticalLock(false);\n@@ -888,1 +904,0 @@\n-            notifyJvmtiSync(false);\n@@ -911,1 +926,0 @@\n-                notifyJvmtiSync(true);\n@@ -913,0 +927,1 @@\n+                    notifyJvmtiCriticalLock(true);\n@@ -921,1 +936,1 @@\n-                    notifyJvmtiSync(false);\n+                    notifyJvmtiCriticalLock(false);\n@@ -1036,9 +1051,11 @@\n-            notifyJvmtiSync(true);\n-            \/\/ include the carrier thread state and name when mounted\n-            synchronized (carrierThreadAccessLock()) {\n-                carrier = carrierThread;\n-                if (carrier != null) {\n-                    String stateAsString = carrier.threadState().toString();\n-                    sb.append(stateAsString.toLowerCase(Locale.ROOT));\n-                    sb.append('@');\n-                    sb.append(carrier.getName());\n+            try {\n+                notifyJvmtiCriticalLock(true);\n+                \/\/ include the carrier thread state and name when mounted\n+                synchronized (carrierThreadAccessLock()) {\n+                    carrier = carrierThread;\n+                    if (carrier != null) {\n+                        String stateAsString = carrier.threadState().toString();\n+                        sb.append(stateAsString.toLowerCase(Locale.ROOT));\n+                        sb.append('@');\n+                        sb.append(carrier.getName());\n+                    }\n@@ -1046,0 +1063,2 @@\n+            } finally {\n+                notifyJvmtiCriticalLock(false);\n@@ -1047,1 +1066,0 @@\n-            notifyJvmtiSync(false);\n@@ -1146,1 +1164,1 @@\n-    private native void notifyJvmtiSync(boolean enter);\n+    private native void notifyJvmtiCriticalLock(boolean enter);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/VirtualThread.java","additions":65,"deletions":47,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    { \"notifyJvmtiSync\",         \"(Z)V\", (void *)&JVM_VirtualThreadSync },\n+    { \"notifyJvmtiCriticalLock\", \"(Z)V\", (void *)&JVM_VirtualThreadCriticalLock },\n","filename":"src\/java.base\/share\/native\/libjava\/VirtualThread.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}