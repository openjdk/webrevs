{"files":[{"patch":"@@ -1307,21 +1307,0 @@\n-    long computeSizeUTF8(int sp, int sl) {\n-        byte[] val = this.value;\n-        if (!isLatin1()) {\n-            return computeSizeUTF8_UTF16(val, true);\n-        }\n-\n-        int count = StringCoding.countPositives(val, sp, sl);\n-        if (count == sl) {\n-            return count;\n-        }\n-\n-        int i = count;\n-        count = sl;\n-        while (i < sl) {\n-            if (val[i++] < 0) {\n-                count++;\n-            }\n-        }\n-        return count;\n-    }\n-\n@@ -1334,2 +1313,1 @@\n-        int len = sl - sp;\n-        int count = StringCoding.countPositives(val, sp, len);\n+        int count = StringCoding.countPositives(val, sp, sl - sp);\n@@ -1371,2 +1349,1 @@\n-        int end = sp + sl;\n-        while (sp < end) {\n+        while (sp < sl) {\n@@ -1381,1 +1358,1 @@\n-        while (sp < end) {\n+        while (sp < sl) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":3,"deletions":26,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -397,1 +397,1 @@\n-                utf8Size = JLA.encodeUTF8(str, off, len, utf8, 0);\n+                utf8Size = JLA.encodeUTF8(str, off, off + len, utf8, 0);\n@@ -406,0 +406,1 @@\n+            int boff = bb.arrayOffset();\n@@ -407,1 +408,1 @@\n-            int newCap = bb.position() + utf8Size;\n+            int newCap = bb.position() + boff + utf8Size;\n@@ -421,2 +422,3 @@\n-            pos = JLA.encodeUTF8(str, off, len, cb, pos);\n-            bb.position(pos);\n+\n+            pos = JLA.encodeUTF8(str, off, off + len, cb, pos + boff);\n+            bb.position(pos - boff);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/StreamEncoder.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}