{"files":[{"patch":"@@ -41,0 +41,1 @@\n+import java.util.List;\n@@ -42,0 +43,1 @@\n+import java.util.spi.ToolProvider;\n@@ -159,0 +161,60 @@\n+\n+    @Test\n+    void testUserModuleOnModulePath(@TempDir Path base) throws Exception {\n+        Files.createDirectories(base.resolve(\"foo\", \"foo\"));\n+        Files.writeString(base.resolve(\"foo\", \"module-info.java\"),\n+                \"\"\"\n+                module foo {\n+                  exports foo;\n+                }\n+                \"\"\");\n+        Files.writeString(base.resolve(\"foo\", \"foo\", \"Foo.java\"),\n+                \"\"\"\n+                package foo;\n+                public record Foo() {}\n+                \"\"\");\n+        var javac = ToolProvider.findFirst(\"javac\").orElseThrow();\n+        javac.run(System.out, System.err, \"--module-source-path\", base.toString(), \"--module\", \"foo\", \"-d\", base.toString());\n+\n+        Files.createDirectories(base.resolve(\"bar\", \"bar\"));\n+        Files.writeString(base.resolve(\"bar\", \"module-info.java\"),\n+                \"\"\"\n+                module bar {\n+                  requires foo;\n+                }\n+                \"\"\");\n+        Files.writeString(base.resolve(\"bar\", \"bar\",\"Prog1.java\"),\n+                \"\"\"\n+                package bar;\n+                \n+                class Prog1 {\n+                  public static void main(String... args) {\n+                    System.out.println(new foo.Foo());\n+                  }\n+                }\n+                \"\"\");\n+\n+        var command = List.of(\n+                Path.of(System.getProperty(\"java.home\"), \"bin\", \"java\").toString(),\n+                \"-p\", \".\",\n+                \"bar\/bar\/Prog1.java\");\n+        var redirectedOut = base.resolve(\"out.redirected\");\n+        var redirectedErr = base.resolve(\"err.redirected\");\n+        var process = new ProcessBuilder(command)\n+                .directory(base.toFile())\n+                .redirectOutput(redirectedOut.toFile())\n+                .redirectError(redirectedErr.toFile())\n+                .start();\n+        var code = process.waitFor();\n+        var out = Files.readAllLines(redirectedOut);\n+        var err = Files.readAllLines(redirectedErr);\n+\n+        assertAll(\n+                () -> assertEquals(0, code),\n+                () -> assertLinesMatch(\n+                      \"\"\"\n+                      Foo[]\n+                      \"\"\".lines(), out.stream()),\n+                () -> assertTrue(err.isEmpty())\n+        );\n+    }\n","filename":"test\/langtools\/tools\/javac\/launcher\/ModuleSourceLauncherTests.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -74,1 +74,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -90,1 +90,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -116,1 +116,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -127,1 +127,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -145,1 +145,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -173,1 +173,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -181,1 +181,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -201,1 +201,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -209,1 +209,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -218,1 +218,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -285,1 +285,1 @@\n-                \"\"\"\n+                    \"\"\"\n@@ -297,1 +297,1 @@\n-                \"\"\"\n+                    \"\"\"\n","filename":"test\/langtools\/tools\/javac\/launcher\/MultiFileSourceLauncherTests.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"}]}