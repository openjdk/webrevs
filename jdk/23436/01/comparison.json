{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import java.util.Objects;\n@@ -185,1 +186,1 @@\n-                        if (newValue != null && !newValue.equals(oldValue)) {\n+                        if (!Objects.equals(newValue, oldValue)) {\n@@ -211,1 +212,1 @@\n-                        if (newValue != null && !newValue.equals(oldValue)) {\n+                        if (!Objects.equals(newValue, oldValue)) {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessible.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.GridLayout;\n+\n+import javax.swing.JCheckBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JToggleButton;\n+\n+\/*\n+ * @test\n+ * @bug 8348936 8345728\n+ * @summary Verifies that VoiceOver announces the untick state of CheckBox and\n+ *          ToggleButton when space key is pressed. Also verifies that CheckBox\n+ *          and ToggleButton untick state is magnified with Screen Magnifier.\n+ * @requires os.family == \"mac\"\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TestJCheckBoxToggleAccessibility\n+ *\/\n+\n+public class TestJCheckBoxToggleAccessibility {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+\n+                Testing with VoiceOver\n+\n+                1. Start the VoiceOver application (Press Command + F5)\n+                2. Click on Frame with CheckBox and ToggleButton window to move focus\n+                3. Press Spacebar\n+                4. VO should announce the checked state\n+                5. Press Spacebar again\n+                6. VO should announce the unchecked state\n+                7. Press Tab to move focus to ToggleButton\n+                8. Repeat steps 3 to 6 and listen the announcement\n+                9. If announcements are incorrect, press Fail\n+\n+                Stop the VoiceOver application (Press Command + F5)\n+\n+                Testing with Screen Magnifier\n+                1. Enable Screen magnifier on the Mac\n+                   System Preference -> Accessibility -> Hover Text -> Enable Hover Text\n+                   Default Hover Text Activation Modifier is \"Command\" key.\n+                2. Move focus back to test application\n+\n+                    Test CheckBox states with Screen Magnifier\n+                        a. Click on CheckBox to select\n+                        b. Press Command key and hover mouse over CheckBox\n+                        c. CheckBox ticked state along with label should be magnified\n+                        d. Keep Command button pressed and click CheckBox to deselect\n+                        e. CheckBox unticked state along with label should be magnified\n+                        f. Release Command key\n+                        g. If Screen Magnifier behaviour is incorrect, press Fail\n+\n+                    Test ToggleButton states with Screen Magnifier\n+                        a. Click on ToggleButton to select\n+                        b. Press Command key and hover mouse over ToggleButton\n+                        c. Ticked state along with label should be magnified\n+                        d. Keep Command button pressed and click ToggleButton to deselect\n+                        e. Unticked state along with label should be magnified\n+                        f. Release Command key\n+                        g. If Screen Magnifier behaviour is incorrect, press Fail\n+\n+                Press Pass if you are able to hear correct VoiceOver announcements and\n+                able to see the correct screen magnifier behaviour. \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"TestJCheckBoxToggleAccessibility Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .rows(25)\n+                .testUI(TestJCheckBoxToggleAccessibility::createUI)\n+                .testTimeOut(8)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createUI() {\n+        JFrame frame = new JFrame(\"A Frame with CheckBox and ToggleButton\");\n+        JCheckBox cb = new JCheckBox(\"CheckBox\", false);\n+        JToggleButton tb = new JToggleButton(\"ToggleButton\");\n+\n+        JPanel p = new JPanel(new GridLayout(2, 1));\n+        p.add(cb);\n+        p.add(tb);\n+        frame.getContentPane().add(p, BorderLayout.CENTER);\n+        frame.setSize(400, 400);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/accessibility\/TestJCheckBoxToggleAccessibility.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"}]}