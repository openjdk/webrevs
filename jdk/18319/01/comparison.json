{"files":[{"patch":"@@ -57,0 +57,1 @@\n+import javax.swing.Box;\n@@ -208,0 +209,3 @@\n+    private static JTextArea logArea;\n+    private static boolean isLogAreaFirstAppend = true;\n+\n@@ -377,0 +381,14 @@\n+    \/**\n+     * Does the same as {@link #invokeOnEDT(Runnable)}, but does not throw\n+     * any checked exceptions.\n+     *\n+     * @param doRun an operation to run on EDT\n+     *\/\n+    private static void invokeOnEDTUncheckedException(Runnable doRun) {\n+        try {\n+            invokeOnEDT(doRun);\n+        } catch (InterruptedException | InvocationTargetException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n@@ -388,1 +406,2 @@\n-                                           enableScreenCapture),\n+                                           enableScreenCapture,\n+                                           false, 0),\n@@ -405,2 +424,3 @@\n-                                         builder.screenCapture);\n-\n+                                         builder.screenCapture,\n+                                         builder.addLogArea,\n+                                         builder.logAreaRows);\n@@ -425,1 +445,3 @@\n-                                                       boolean enableScreenCapture) {\n+                                                       boolean enableScreenCapture,\n+                                                       boolean addLogArea,\n+                                                       int logAreaRows) {\n@@ -459,1 +481,15 @@\n-        main.add(buttonsPanel, BorderLayout.SOUTH);\n+        if (addLogArea) {\n+            logArea = new JTextArea(\"(the test log will be here)\",\n+                                    logAreaRows, columns);\n+            logArea.setEditable(false);\n+\n+            Box buttonsLogPanel = Box.createVerticalBox();\n+\n+            buttonsLogPanel.add(buttonsPanel);\n+            buttonsLogPanel.add(new JScrollPane(logArea));\n+\n+            main.add(buttonsLogPanel, BorderLayout.SOUTH);\n+        } else {\n+            main.add(buttonsPanel, BorderLayout.SOUTH);\n+        }\n+\n@@ -1044,0 +1080,34 @@\n+    \/**\n+     * Adds a {@code message} to the log area, if enabled by\n+     * {@link Builder#logArea()} or {@link Builder#logArea(int)}.\n+     *\n+     * @param message to log\n+     *\/\n+    public static void log(String message) {\n+        invokeOnEDTUncheckedException(() -> {\n+            if (isLogAreaFirstAppend) {\n+                logArea.setText(message + \"\\n\");\n+                isLogAreaFirstAppend = false;\n+            } else {\n+                logArea.append(message + \"\\n\");\n+            }\n+        });\n+    }\n+\n+    \/**\n+     * Clears the log area, if enabled by\n+     * {@link Builder#logArea()} or {@link Builder#logArea(int)}.\n+     *\/\n+    public static void logClear() {\n+        invokeOnEDTUncheckedException(() -> logArea.setText(\"\"));\n+    }\n+\n+    \/**\n+     * Replaces the log area content with provided {@code text}, if enabled by\n+     * {@link Builder#logArea()} or {@link Builder#logArea(int)}.\n+     * @param text new text for the log area\n+     *\/\n+    public static void logSet(String text) {\n+        invokeOnEDTUncheckedException(() -> logArea.setText(text));\n+    }\n+\n@@ -1051,0 +1121,2 @@\n+        private boolean addLogArea;\n+        private int logAreaRows = 10;\n@@ -1100,0 +1172,31 @@\n+        \/**\n+         * Adds a log area below the \"Pass\", \"Fail\" buttons.\n+         * <p>\n+         * The log area can be controlled by {@link #log(String)},\n+         * {@link #logClear()} and {@link #logSet(String)}.\n+         *\n+         * @return this builder\n+         *\/\n+        public Builder logArea() {\n+            this.addLogArea = true;\n+            return this;\n+        }\n+\n+        \/**\n+         * Adds a log area below the \"Pass\", \"Fail\" buttons.\n+         * <p>\n+         * The log area can be controlled by {@link #log(String)},\n+         * {@link #logClear()} and {@link #logSet(String)}.\n+         * <p>\n+         * The number of columns is taken from the number of\n+         * columns in the instructional JTextArea.\n+         *\n+         * @param rows of the log area\n+         * @return this builder\n+         *\/\n+        public Builder logArea(int rows) {\n+            this.addLogArea = true;\n+            this.logAreaRows = rows;\n+            return this;\n+        }\n+\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":108,"deletions":5,"binary":false,"changes":113,"status":"modified"}]}