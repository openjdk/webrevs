{"files":[{"patch":"@@ -47,3 +47,0 @@\n-hotspot_null_check = \\\n-  sources\n-\n@@ -227,2 +224,1 @@\n-  -compiler\/runtime\/Test6826736.java \\\n-  sources\n+  -compiler\/runtime\/Test6826736.java\n@@ -636,0 +632,3 @@\n+tier1_sources = \\\n+   sources\n+\n@@ -641,1 +640,2 @@\n-  :tier1_serviceability\n+  :tier1_serviceability \\\n+  :tier1_sources\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-    private static final List<Path> files = new ArrayList<>();\n@@ -47,1 +46,1 @@\n-    private static final Pattern NULL_PATTERN = Pattern.compile(\"\\\\bNULL\\\\b\");\n+    private static final Pattern NULL_PATTERN = Pattern.compile(\"(?<![\\\\p{Alnum}_])NULL(?![\\\\p{Alnum}_])\");\n@@ -49,0 +48,1 @@\n+    private static int errorCount = 0;\n@@ -68,9 +68,2 @@\n-        boolean foundNull = false;\n-        for (Path file : files) {\n-            if (checkForNull(file)) {\n-                foundNull = true;\n-            }\n-        }\n-\n-        if (foundNull) {\n-            throw new RuntimeException(\"Found usage of 'NULL' in source files. See errors above.\");\n+        if (errorCount > 0) {\n+            throw new RuntimeException(\"Test found \" + errorCount + \" usages of 'NULL' in source files. See errors above.\");\n@@ -85,2 +78,1 @@\n-                \"src\/hotspot\/share\/utilities\/globalDefinitions_gcc.hpp\",\n-                \"src\/hotspot\/os\/windows\/os_windows.cpp\" \/\/todo: remove after JDK-8349417\n+                \"src\/hotspot\/os\/windows\/os_windows.cpp\" \/\/TODO: remove after JDK-8349417\n@@ -94,2 +86,4 @@\n-        sourceExclusions.forEach(relativePath ->  excludedSourceFiles.add(rootDir.resolve(relativePath).normalize().toString()));\n-        testExclusions.forEach(relativePath ->  excludedTestFiles.add(rootDir.resolve(relativePath).normalize().toString()));\n+        sourceExclusions.forEach(relativePath ->\n+                excludedSourceFiles.add(rootDir.resolve(relativePath).normalize().toString()));\n+        testExclusions.forEach(relativePath ->\n+                excludedTestFiles.add(rootDir.resolve(relativePath).normalize().toString()));\n@@ -101,1 +95,1 @@\n-            public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) {\n+            public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n@@ -103,1 +97,1 @@\n-                    files.add(file);\n+                    checkForNull(file);\n@@ -133,2 +127,1 @@\n-    private static boolean checkForNull(Path path) throws IOException {\n-        boolean found = false;\n+    private static void checkForNull(Path path) throws IOException {\n@@ -140,1 +133,1 @@\n-                found = true;\n+                errorCount++;\n@@ -144,1 +137,0 @@\n-        return found;\n","filename":"test\/hotspot\/jtreg\/sources\/TestNoNULL.java","additions":13,"deletions":21,"binary":false,"changes":34,"status":"modified"}]}