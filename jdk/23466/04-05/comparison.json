{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import java.nio.charset.MalformedInputException;\n@@ -65,1 +66,1 @@\n-            processFiles(srcPath, excludedSourceFiles, false);\n+            processFiles(srcPath, excludedSourceFiles, Set.of());\n@@ -67,1 +68,1 @@\n-        processFiles(testPath, excludedTestFiles, true);\n+        processFiles(testPath, excludedTestFiles, excludedTestExtensions);\n@@ -92,1 +93,1 @@\n-    private static void processFiles(Path directory, Set<String> excludedFiles, boolean excludeExtensions) throws IOException {\n+    private static void processFiles(Path directory, Set<String> excludedFiles, Set<String> excludeExtensions) throws IOException {\n@@ -109,1 +110,1 @@\n-    private static boolean isIncluded(Path file, Set<String> excludedFiles, boolean excludeExtensions) {\n+    private static boolean isIncluded(Path file, Set<String> excludedFiles, Set<String> excludeExtensions) {\n@@ -116,5 +117,3 @@\n-        if (excludeExtensions) {\n-            for (String ext : excludedTestExtensions) {\n-                if (filePath.endsWith(ext)) {\n-                    return false;\n-                }\n+        for (String ext : excludeExtensions) {\n+            if (filePath.endsWith(ext)) {\n+                return false;\n@@ -127,8 +126,8 @@\n-    private static void checkForNull(Path path) throws IOException {\n-        List<String> lines = Files.readAllLines(path, StandardCharsets.UTF_8);\n-\n-        for (int i = 0; i < lines.size(); i++) {\n-            Matcher matcher = NULL_PATTERN.matcher(lines.get(i));\n-            if (matcher.find()) {\n-                errorCount++;\n-                System.err.printf(\"Error: 'NULL' found in %s at line %d:%n%s%n\", path, i + 1, lines.get(i));\n+    private static void checkForNull(Path path) {\n+        try {\n+            List<String> lines = Files.readAllLines(path, StandardCharsets.UTF_8);\n+            for (int i = 0; i < lines.size(); i++) {\n+                if (NULL_PATTERN.matcher(lines.get(i)).find()) {\n+                    errorCount++;\n+                    System.err.printf(\"Error: 'NULL' found in %s at line %d:%n%s%n\", path, i + 1, lines.get(i));\n+                }\n@@ -136,0 +135,4 @@\n+        } catch (MalformedInputException e) {\n+            System.err.println(\"Skipping binary file: \" + path);\n+        } catch (IOException e) {\n+            System.err.printf(\"Skipping unreadable file: \" + path);\n","filename":"test\/hotspot\/jtreg\/sources\/TestNoNULL.java","additions":20,"deletions":17,"binary":false,"changes":37,"status":"modified"}]}