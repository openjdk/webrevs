{"files":[{"patch":"@@ -436,2 +436,0 @@\n- *  caller: initiating class. The initiating class may be null when a security\n- *          manager is not installed.\n@@ -440,2 +438,2 @@\n-JVM_FindClassFromCaller(JNIEnv *env, const char *name, jboolean init,\n-                        jobject loader, jclass caller);\n+JVM_FindClassFromLoader(JNIEnv *env, const char *name, jboolean init,\n+                        jobject loader);\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -802,4 +802,3 @@\n-\/\/ Find a class with this name in this loader, using the caller's protection domain.\n-JVM_ENTRY(jclass, JVM_FindClassFromCaller(JNIEnv* env, const char* name,\n-                                          jboolean init, jobject loader,\n-                                          jclass caller))\n+\/\/ Find a class with this name in this loader.\n+JVM_ENTRY(jclass, JVM_FindClassFromLoader(JNIEnv* env, const char* name,\n+                                          jboolean init, jobject loader))\n@@ -811,1 +810,0 @@\n-  oop from_class = JNIHandles::resolve(caller);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -473,1 +473,1 @@\n-        return forName0(className, true, loader, caller);\n+        return forName0(className, true, loader);\n@@ -554,1 +554,1 @@\n-        return forName0(name, initialize, loader, null);\n+        return forName0(name, initialize, loader);\n@@ -559,2 +559,1 @@\n-                                            ClassLoader loader,\n-                                            Class<?> caller)\n+                                            ClassLoader loader)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-                              jboolean initialize, jobject loader, jclass caller)\n+                              jboolean initialize, jobject loader)\n@@ -136,1 +136,1 @@\n-    cls = JVM_FindClassFromCaller(env, clname, initialize, loader, caller);\n+    cls = JVM_FindClassFromLoader(env, clname, initialize, loader);\n","filename":"src\/java.base\/share\/native\/libjava\/Class.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}