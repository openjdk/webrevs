{"files":[{"patch":"@@ -5876,14 +5876,0 @@\n-      jccb(Assembler::zero, L_C_align);\n-      movl(Address(to, 0), value);\n-      addptr(to, 4);\n-      subptr(count, 1<<shift);\n-    }\n-\n-    BIND(L_C_align);\n-    if (EnableX86ECoreOpts) {\n-      \/\/ align 'big' arrays to 64 bytes (cache line size) to minimize split_stores\n-      cmpptr(count, 256<<shift);\n-      jcc(Assembler::below, L_fill_32_bytes);\n-\n-      BIND(L_align_64_bytes);\n-      testptr(to, 0x3f); \/\/ low 7 bits shoud be zero\n@@ -5894,1 +5880,0 @@\n-      jmpb(L_align_64_bytes);\n@@ -5926,0 +5911,19 @@\n+\n+        \/\/ align data for 64-byte chunks\n+        Label L_fill_64_bytes_loop, L_fill_64_start;\n+        if (EnableX86ECoreOpts) {\n+            \/\/ align 'big' arrays to 64 bytes (cache line size) to minimize split_stores\n+            cmpptr(count, 256<<shift);\n+            jcc(Assembler::below, L_fill_64_start);\n+\n+            align(16);\n+\n+            BIND(L_align_64_bytes);\n+            testptr(to, 0x3f); \/\/ low 7 bits shoud be zero\n+            jccb(Assembler::zero, L_fill_64_start);\n+            movl(Address(to, 0), value);\n+            addptr(to, 4);\n+            subptr(count, 1<<shift);\n+            jmpb(L_align_64_bytes);\n+        }\n+\n@@ -5927,1 +5931,1 @@\n-        Label L_fill_64_bytes_loop;\n+        BIND(L_fill_64_start);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":20,"deletions":16,"binary":false,"changes":36,"status":"modified"}]}