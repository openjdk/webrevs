{"files":[{"patch":"@@ -751,7 +751,2 @@\n-  return (p != nullptr);\n-}\n-\n-bool ArchiveBuilder::has_been_buffered(address src_addr) const {\n-  if (RegeneratedClasses::has_been_regenerated(src_addr) ||\n-      _src_obj_table.get(src_addr) == nullptr ||\n-      get_buffered_addr(src_addr) == nullptr) {\n+  if (p == nullptr) {\n+    \/\/ This object has never been seen by ArchiveBuilder\n@@ -759,2 +754,0 @@\n-  } else {\n-    return true;\n@@ -762,0 +755,19 @@\n+  if (p->buffered_addr() == nullptr) {\n+    \/\/ ArchiveBuilder has seen this object, but decided not to archive it. So\n+    \/\/ Any reference to this object will be modified to nullptr inside the buffer.\n+    assert(p->follow_mode() == set_to_null, \"must be\");\n+    return false;\n+  }\n+\n+  DEBUG_ONLY({\n+    \/\/ This is a class\/method that belongs to one of the \"original\" classes that\n+    \/\/ have been regenerated by lambdaFormInvokers.cpp. We must have archived\n+    \/\/ the \"regenerated\" version of it.\n+    if (RegeneratedClasses::has_been_regenerated(src_addr)) {\n+      address regen_obj = RegeneratedClasses::get_regenerated_object(src_addr);\n+      precond(regen_obj != nullptr && regen_obj != src_addr);\n+      assert(has_been_archived(regen_obj), \"must be\");\n+      assert(get_buffered_addr(src_addr) == get_buffered_addr(regen_obj), \"must be\");\n+    }});\n+\n+  return true;\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":21,"deletions":9,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -183,0 +183,1 @@\n+    FollowMode follow_mode() const { return _follow_mode; }\n@@ -446,4 +447,2 @@\n-\n-  bool has_been_buffered(address src_addr) const;\n-  template <typename T> bool has_been_buffered(T src_addr) const {\n-    return has_been_buffered((address)src_addr);\n+  template <typename T> bool has_been_archived(T src_addr) const {\n+    return has_been_archived((address)src_addr);\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -767,1 +767,1 @@\n-    guarantee(ArchiveBuilder::current()->has_been_buffered((address)native_ptr),\n+    guarantee(ArchiveBuilder::current()->has_been_archived((address)native_ptr),\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -386,2 +386,1 @@\n-  if (SystemDictionaryShared::is_excluded_class(src_ik)) {\n-    assert(!ArchiveBuilder::current()->has_been_buffered(src_ik), \"sanity\");\n+  if (!ArchiveBuilder::current()->has_been_archived(src_ik)) {\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}