{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,1 +161,2 @@\n-            suspendedThread = debugee.threadByName(invokemethod007a.testedThread);\n+            suspendedThread = debugee.threadByFieldNameOrThrow(testedClass, \"thread\",\n+                                                               invokemethod007a.testedThread);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod007.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,1 @@\n+    static Thread thread = null;\n@@ -49,1 +50,0 @@\n-        Thread thread = null;\n@@ -57,1 +57,1 @@\n-                thread = JDIThreadFactory.newThread(new im007aThread01(\"im007aThread01\"));\n+                thread = JDIThreadFactory.newThread(new im007aThread01(testedThread));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod007a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 57;\n+    static final int DEBUGGEE_STOPATLINE = 60;\n@@ -115,2 +115,5 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        thrRef = debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n@@ -122,2 +125,0 @@\n-        \/\/ debuggee main class\n-        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod009.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -47,1 +49,2 @@\n-        Thread.currentThread().setName(invokemethod009.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod009.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod009t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,2 +114,5 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        thrRef = debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n@@ -142,1 +145,0 @@\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod010.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -45,1 +47,2 @@\n-        Thread.currentThread().setName(invokemethod010.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod010.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod010t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 61;\n+    static final int DEBUGGEE_STOPATLINE = 63;\n@@ -116,3 +116,7 @@\n-        ThreadReference thrRef = null;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+        ClassType clsType = (ClassType) rType;\n+\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n@@ -126,3 +130,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-            ClassType clsType = (ClassType) rType;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod014.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    static Thread testThread = null;\n@@ -51,1 +52,2 @@\n-        Thread.currentThread().setName(invokemethod014.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod014.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod014t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -160,1 +160,2 @@\n-            suspendedThread = debugee.threadByName(newinstance007a.testedThread);\n+            suspendedThread = debugee.threadByFieldNameOrThrow(testedClass, \"thread\",\n+                                                               newinstance007a.testedThread);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance007.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    public final static int brkpLineNumber = 70;\n+    public final static int brkpLineNumber = 71;\n@@ -43,0 +43,1 @@\n+    static Thread thread = null;\n@@ -49,1 +50,0 @@\n-        Thread thread = null;\n@@ -57,1 +57,1 @@\n-                thread = JDIThreadFactory.newThread(new im007aThread01(\"im007aThread01\"));\n+                thread = JDIThreadFactory.newThread(new im007aThread01(testedThread));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance007a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,3 +98,6 @@\n-        ThreadReference thrRef = null;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+        ClassType clsType = (ClassType) rType;\n+\n+        ThreadReference thrRef = debuggee.threadByFieldName(rType, \"thread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n@@ -126,4 +129,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-            ClassType clsType = (ClassType) rType;\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance009.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread thread = null;\n+\n@@ -51,1 +53,2 @@\n-        Thread.currentThread().setName(newinstance009.DEBUGGEE_THRNAME);\n+        thread = Thread.currentThread();\n+        thread.setName(newinstance009.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance009t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,2 @@\n-                       ThreadReference thread = debuggee.threadByName(threadName);\n+                       ThreadReference thread =\n+                           debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/equals\/equals001.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,0 +67,1 @@\n+    static Thread thread1 = null;\n@@ -76,1 +77,1 @@\n-            Thread thread1 = JDIThreadFactory.newThread(new equals001aThread(\"thread1\"));\n+            thread1 = JDIThreadFactory.newThread(new equals001aThread(\"thread1\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/equals\/equals001a.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-    private final static int brkpLineNumber = 145;\n+    private final static int brkpLineNumber = 146;\n@@ -129,1 +129,2 @@\n-                       ThreadReference thread = debuggee.threadByName(threadName);\n+                       ThreadReference thread =\n+                           debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/hashCode\/hashcode001.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,0 +67,1 @@\n+    static Thread thread1 = null;\n@@ -76,1 +77,1 @@\n-            Thread thread1 = JDIThreadFactory.newThread(new hashcode001aThread(\"thread1\"));\n+            thread1 = JDIThreadFactory.newThread(new hashcode001aThread(\"thread1\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/hashCode\/hashcode001a.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 62;\n+    static final int DEBUGGEE_STOPATLINE = 64;\n@@ -127,2 +127,4 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        rType[0] = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n@@ -134,1 +136,0 @@\n-        rType[0] = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod002.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+    static Thread testThread = null;\n@@ -52,1 +53,2 @@\n-        Thread.currentThread().setName(invokemethod002.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod002.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod002t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 59;\n+    static final int DEBUGGEE_STOPATLINE = 62;\n@@ -138,7 +138,0 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n-                + DEBUGGEE_THRNAME);\n-            tot_res = Consts.TEST_FAILED;\n-            return quitDebuggee();\n-        }\n@@ -153,0 +146,8 @@\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n+                + DEBUGGEE_THRNAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod003.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -49,1 +51,2 @@\n-        Thread.currentThread().setName(invokemethod003.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod003.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod003t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,2 +114,4 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        ReferenceType debuggeeClass = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(debuggeeClass, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod004.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -46,1 +48,2 @@\n-        Thread.currentThread().setName(invokemethod004.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod004.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod004t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 58;\n+    static final int DEBUGGEE_STOPATLINE = 61;\n@@ -116,2 +116,6 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        ReferenceType[] rType = new ReferenceType[2];\n+        \/\/ debuggee main class\n+        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n@@ -123,3 +127,0 @@\n-        ReferenceType[] rType = new ReferenceType[2];\n-        \/\/ debuggee main class\n-        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod005.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -48,1 +50,2 @@\n-        Thread.currentThread().setName(invokemethod005.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod005.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod005t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 58;\n+    static final int DEBUGGEE_STOPATLINE = 61;\n@@ -114,2 +114,6 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        ReferenceType[] rType = new ReferenceType[2];\n+        \/\/ debuggee main class\n+        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n@@ -121,3 +125,0 @@\n-        ReferenceType[] rType = new ReferenceType[2];\n-        \/\/ debuggee main class\n-        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod006.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -48,1 +50,2 @@\n-        Thread.currentThread().setName(invokemethod006.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod006.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod006t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 58;\n+    static final int DEBUGGEE_STOPATLINE = 61;\n@@ -130,2 +130,6 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        ReferenceType[] rType = new ReferenceType[2];\n+        \/\/ debuggee main class\n+        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n@@ -137,3 +141,0 @@\n-        ReferenceType[] rType = new ReferenceType[2];\n-        \/\/ debuggee main class\n-        rType[0] = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod007.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -48,1 +50,2 @@\n-        Thread.currentThread().setName(invokemethod007.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod007.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod007t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 69;\n+    static final int DEBUGGEE_STOPATLINE = 71;\n@@ -123,7 +123,0 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n-                + DEBUGGEE_THRNAME);\n-            tot_res = Consts.TEST_FAILED;\n-            return quitDebuggee();\n-        }\n@@ -136,0 +129,8 @@\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n+                + DEBUGGEE_THRNAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod008.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    static Thread testThread = null;\n@@ -59,1 +60,2 @@\n-        Thread.currentThread().setName(invokemethod008.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod008.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod008t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 69;\n+    static final int DEBUGGEE_STOPATLINE = 71;\n@@ -123,7 +123,0 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n-                + DEBUGGEE_THRNAME);\n-            tot_res = Consts.TEST_FAILED;\n-            return quitDebuggee();\n-        }\n@@ -136,0 +129,8 @@\n+        thrRef = debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: Method Debugee.threadByName() returned null for debuggee thread \"\n+                + DEBUGGEE_THRNAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod009.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    static Thread testThread = null;\n@@ -59,1 +60,2 @@\n-        Thread.currentThread().setName(invokemethod009.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod009.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod009t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 72;\n+    static final int DEBUGGEE_STOPATLINE = 74;\n@@ -146,8 +146,0 @@\n-        ThreadReference thrRef;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n-            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n-                + DEBUGGEE_THRNAME);\n-            tot_res = Consts.TEST_FAILED;\n-            return quitDebuggee();\n-        }\n@@ -160,0 +152,9 @@\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType[0], \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+                + DEBUGGEE_THRNAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod014.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    static Thread testThread = null;\n@@ -61,1 +62,2 @@\n-        Thread.currentThread().setName(invokemethod014.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(invokemethod014.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/invokeMethod\/invokemethod014t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,2 +112,4 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        ReferenceType debuggeeClass = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(debuggeeClass, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n@@ -211,0 +213,4 @@\n+            if (fld.name().equals(\"testThread\")) {\n+                \/\/ skip the static testThread field\n+                continue;\n+            }\n@@ -232,1 +238,1 @@\n-                    + fld.name() + \"\\\"\\n\\tfrom the debuggee's object reference \\\"\"\n+                    + fld.name() + \"\\\"\\n\\tfrom the de19buggee's object reference \\\"\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue002.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -56,1 +58,0 @@\n-\n@@ -70,1 +71,2 @@\n-        Thread.currentThread().setName(setvalue002.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(setvalue002.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue002t.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,2 +145,4 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        ReferenceType debuggeeClass = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(debuggeeClass, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue003.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -56,1 +58,0 @@\n-\n@@ -69,1 +70,2 @@\n-        Thread.currentThread().setName(setvalue003.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(setvalue003.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue003t.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,2 +125,4 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        ReferenceType debuggeeClass = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(debuggeeClass, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue004.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -68,1 +70,2 @@\n-        Thread.currentThread().setName(setvalue004.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(setvalue004.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue004t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,2 +112,4 @@\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        ReferenceType debuggeeClass = debuggee.classByName(DEBUGGEE_CLASS); \/\/ debuggee main class\n+\n+        thrRef = debuggee.threadByFieldName(debuggeeClass, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue005.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -51,1 +53,2 @@\n-        Thread.currentThread().setName(setvalue005.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(setvalue005.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/setValue\/setvalue005t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,0 +74,1 @@\n+import com.sun.jdi.ReferenceType;\n@@ -75,0 +76,1 @@\n+import com.sun.jdi.ThreadReference;\n@@ -169,0 +171,4 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(SDEDebuggee.class.getName());\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\",\n+                                              SDEDebuggee.mainThreadName);\n@@ -170,1 +176,1 @@\n-                debuggee.threadByName(SDEDebuggee.mainThreadName),\n+                mainThread,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/defaultStratum\/defaultStratum003\/defaultStratum003.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,0 +64,1 @@\n+import com.sun.jdi.ReferenceType;\n@@ -65,0 +66,1 @@\n+import com.sun.jdi.ThreadReference;\n@@ -168,0 +170,5 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(SDEDebuggee.class.getName());\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\",\n+                                              SDEDebuggee.mainThreadName);\n+\n@@ -172,1 +179,1 @@\n-                        debuggee.threadByName(SDEDebuggee.mainThreadName),\n+                        mainThread,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/defaultStratum\/defaultStratum004\/defaultStratum004.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 57;\n+    static final int DEBUGGEE_STOPATLINE = 60;\n@@ -138,0 +138,3 @@\n+            \/\/ debuggee main class\n+            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n@@ -139,3 +142,3 @@\n-            ThreadReference thrRef = null;\n-            if ((thrRef =\n-                    debuggee.threadByName(DEBUGGEE_THRNAME)) == null)\n+            ThreadReference thrRef =\n+                debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+            if (thrRef == null) {\n@@ -144,0 +147,1 @@\n+            }\n@@ -146,1 +150,0 @@\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/sourceName\/sourcename004.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -47,1 +49,2 @@\n-        Thread.currentThread().setName(sourcename004.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(sourcename004.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/sourceName\/sourcename004t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 57;\n+    static final int DEBUGGEE_STOPATLINE = 60;\n@@ -138,0 +138,3 @@\n+            \/\/ debuggee main class\n+            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n@@ -139,3 +142,3 @@\n-            ThreadReference thrRef = null;\n-            if ((thrRef =\n-                    debuggee.threadByName(DEBUGGEE_THRNAME)) == null)\n+            ThreadReference thrRef =\n+                debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+            if (thrRef == null) {\n@@ -144,0 +147,1 @@\n+            }\n@@ -145,2 +149,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/sourceNames\/sourcenames002.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -47,1 +49,2 @@\n-        Thread.currentThread().setName(sourcenames002.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(sourcenames002.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/sourceNames\/sourcenames002t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,3 +54,2 @@\n-    static final String DEBUGGEE_THRDNAMES[] = {\n-        \"getvalue003tMainThr\", \"getvalue003tAuxThr\"\n-    };\n+    static final String DEBUGGEE_MAIN_THREAD_NAME = \"getvalue003tMainThr\";\n+    static final String DEBUGGEE_AUX_THREAD_NAME  = \"getvalue003tAuxThr\";\n@@ -62,1 +61,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 69;\n+    static final int DEBUGGEE_STOPATLINE = 72;\n@@ -108,9 +107,2 @@\n-        ThreadReference thrRef[] = new ThreadReference[2];\n-        for (int i=0; i<2; i++)\n-            if ((thrRef[i] =\n-                    debuggee.threadByName(DEBUGGEE_THRDNAMES[i])) == null) {\n-                log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n-                    + DEBUGGEE_THRDNAMES[i]);\n-                tot_res = Consts.TEST_FAILED;\n-                return quitDebuggee();\n-            }\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n@@ -118,3 +110,6 @@\n-        try {\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(rType, \"mainThread\",\n+                                              DEBUGGEE_MAIN_THREAD_NAME);\n+        ThreadReference auxThread =\n+            debuggee.threadByFieldNameOrThrow(rType, \"auxThr\",\n+                                              DEBUGGEE_AUX_THREAD_NAME);\n@@ -122,0 +117,1 @@\n+        try {\n@@ -125,1 +121,1 @@\n-            StackFrame stFrame = findFrame(thrRef[0], DEBUGGEE_LOCALVAR, false);\n+            StackFrame stFrame = findFrame(mainThread, DEBUGGEE_LOCALVAR, false);\n@@ -128,1 +124,1 @@\n-            findFrame(thrRef[1], DEBUGGEE_LOCALVAR, true);\n+            findFrame(auxThread, DEBUGGEE_LOCALVAR, true);\n@@ -132,1 +128,1 @@\n-                + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                + \"\\\"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -134,1 +130,1 @@\n-                + \"\\\"\\n\\tbelongs to thread \\\"\" + thrRef[0]\n+                + \"\\\"\\n\\tbelongs to thread \\\"\" + mainThread\n@@ -143,1 +139,1 @@\n-                    + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                    + \"\\\"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -145,1 +141,1 @@\n-                    + \"\\\"\\n\\tbelongs to thread \\\"\" + thrRef[0] + \"\\\"\");\n+                    + \"\\\"\\n\\tbelongs to thread \\\"\" + mainThread + \"\\\"\");\n@@ -155,1 +151,1 @@\n-                    + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                    + \"\\\"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -157,1 +153,1 @@\n-                    + \"\\\"\\n\\tbelongs to thread \\\"\" + thrRef[0] + \"\\\"\");\n+                    + \"\\\"\\n\\tbelongs to thread \\\"\" + mainThread + \"\\\"\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValue\/getvalue003.java","additions":21,"deletions":25,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,3 @@\n-    private OtherThr auxThr;\n+\n+    static Thread mainThread = null;\n+    static OtherThr auxThr = null;\n@@ -53,1 +55,2 @@\n-        Thread.currentThread().setName(getvalue003.DEBUGGEE_THRDNAMES[0]);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(getvalue003.DEBUGGEE_MAIN_THREAD_NAME);\n@@ -84,2 +87,1 @@\n-        auxThr = new OtherThr(readyObj,\n-            getvalue003.DEBUGGEE_THRDNAMES[1]);\n+        auxThr = new OtherThr(readyObj, getvalue003.DEBUGGEE_AUX_THREAD_NAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValue\/getvalue003t.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,3 +55,2 @@\n-    static final String DEBUGGEE_THRDNAMES[] = {\n-        \"getvalues003tMainThr\", \"getvalues003tAuxThr\"\n-    };\n+    static final String DEBUGGEE_MAIN_THREAD_NAME = \"getvalues003tMainThr\";\n+    static final String DEBUGGEE_AUX_THREAD_NAME  = \"getvalues003tAuxThr\";\n@@ -68,1 +67,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 78;\n+    static final int DEBUGGEE_STOPATLINE = 81;\n@@ -114,9 +113,2 @@\n-        ThreadReference thrRef[] = new ThreadReference[2];\n-        for (int i=0; i<2; i++)\n-            if ((thrRef[i] =\n-                    debuggee.threadByName(DEBUGGEE_THRDNAMES[i])) == null) {\n-                log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n-                    + DEBUGGEE_THRDNAMES[i]);\n-                tot_res = Consts.TEST_FAILED;\n-                return quitDebuggee();\n-            }\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n@@ -124,3 +116,6 @@\n-        try {\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(rType, \"mainThread\",\n+                                              DEBUGGEE_MAIN_THREAD_NAME);\n+        ThreadReference auxThread =\n+            debuggee.threadByFieldNameOrThrow(rType, \"auxThr\",\n+                                              DEBUGGEE_AUX_THREAD_NAME);\n@@ -128,0 +123,1 @@\n+        try {\n@@ -131,1 +127,1 @@\n-            StackFrame stFrame = findFrame(thrRef[0], DEBUGGEE_VARS[0], true);\n+            StackFrame stFrame = findFrame(mainThread, DEBUGGEE_VARS[0], true);\n@@ -134,1 +130,1 @@\n-            StackFrame wrongStFrame = findFrame(thrRef[1], DEBUGGEE_VARS[0], false);\n+            StackFrame wrongStFrame = findFrame(auxThread, DEBUGGEE_VARS[0], false);\n@@ -156,1 +152,1 @@\n-                    + \"\\n\\tgotten from thread \\\"\" + thrRef[0]\n+                    + \"\\n\\tgotten from thread \\\"\" + mainThread\n@@ -160,1 +156,1 @@\n-                    + \"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                    + \"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -162,1 +158,1 @@\n-                    + \"\\\"\\n\\tin the thread \\\"\" + thrRef[0]\n+                    + \"\\\"\\n\\tin the thread \\\"\" + mainThread\n@@ -171,1 +167,1 @@\n-                        + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[0]\n+                        + \"\\\"\\n\\tgotten from thread \\\"\" + mainThread\n@@ -175,1 +171,1 @@\n-                        + \"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                        + \"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -177,1 +173,1 @@\n-                        + \"\\\"\\n\\tin the thread \\\"\" + thrRef[0] + \"\\\"\");\n+                        + \"\\\"\\n\\tin the thread \\\"\" + mainThread + \"\\\"\");\n@@ -187,1 +183,1 @@\n-                        + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[0]\n+                        + \"\\\"\\n\\tgotten from thread \\\"\" + mainThread\n@@ -191,1 +187,1 @@\n-                        + \"\\\"\\n\\tgotten from thread \\\"\" + thrRef[1]\n+                        + \"\\\"\\n\\tgotten from thread \\\"\" + auxThread\n@@ -193,1 +189,1 @@\n-                        + \"\\\"\\n\\tin the thread \\\"\" + thrRef[0] + \"\\\"\");\n+                        + \"\\\"\\n\\tin the thread \\\"\" + mainThread + \"\\\"\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValues\/getvalues003.java","additions":24,"deletions":28,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,3 @@\n-    private OtherThr auxThr;\n+\n+    static Thread mainThread = null;\n+    static OtherThr auxThr = null;\n@@ -54,1 +56,2 @@\n-        Thread.currentThread().setName(getvalues003.DEBUGGEE_THRDNAMES[0]);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(getvalues003.DEBUGGEE_MAIN_THREAD_NAME);\n@@ -93,2 +96,1 @@\n-        auxThr = new OtherThr(readyObj,\n-            getvalues003.DEBUGGEE_THRDNAMES[1]);\n+        auxThr = new OtherThr(readyObj, getvalues003.DEBUGGEE_AUX_THREAD_NAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValues\/getvalues003t.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,1 +114,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 67;\n+    static final int DEBUGGEE_STOPATLINE = 70;\n@@ -159,3 +159,6 @@\n-        ThreadReference thrRef = null;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRDNAME)) == null) {\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType, \"mainThread\", DEBUGGEE_THRDNAME);\n+        if (thrRef == null) {\n@@ -169,3 +172,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue005\/setvalue005.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread mainThread = null;\n+\n@@ -49,1 +51,2 @@\n-        Thread.currentThread().setName(setvalue005.DEBUGGEE_THRDNAME);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(setvalue005.DEBUGGEE_THRDNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue005\/setvalue005t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,1 +135,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 72;\n+    static final int DEBUGGEE_STOPATLINE = 75;\n@@ -180,3 +180,6 @@\n-        ThreadReference thrRef = null;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRDNAME)) == null) {\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType, \"mainThread\", DEBUGGEE_THRDNAME);\n+        if (thrRef == null) {\n@@ -190,3 +193,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue006\/setvalue006.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread mainThread = null;\n+\n@@ -49,1 +51,2 @@\n-        Thread.currentThread().setName(setvalue006.DEBUGGEE_THRDNAME);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(setvalue006.DEBUGGEE_THRDNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue006\/setvalue006t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,0 +76,1 @@\n+import com.sun.jdi.ReferenceType;\n@@ -77,0 +78,1 @@\n+import com.sun.jdi.ThreadReference;\n@@ -168,0 +170,4 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(SDEDebuggee.class.getName());\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\",\n+                                              SDEDebuggee.mainThreadName);\n@@ -169,1 +175,1 @@\n-                debuggee.threadByName(SDEDebuggee.mainThreadName),\n+                mainThread,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepEvent\/_itself_\/stepEvent003\/stepEvent003.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,0 +82,1 @@\n+import com.sun.jdi.ReferenceType;\n@@ -83,0 +84,1 @@\n+import com.sun.jdi.ThreadReference;\n@@ -233,0 +235,4 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(SDEDebuggee.class.getName());\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\",\n+                                              SDEDebuggee.mainThreadName);\n@@ -234,1 +240,1 @@\n-                debuggee.threadByName(SDEDebuggee.mainThreadName),\n+                mainThread,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepEvent\/_itself_\/stepEvent004\/stepEvent004.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-                thread1 = debuggee.threadByName(threadName1);\n+                thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n@@ -134,1 +134,1 @@\n-                thread2 = debuggee.threadByName(threadName2);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassExclusionFilter\/filter001.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-                thread1 = debuggee.threadByName(threadName1);\n+                thread1 = debuggee.threadByFieldName(debuggeeClass, threadName1);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_rt\/filter_rt001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,2 +127,2 @@\n-                thread1 = debuggee.threadByName(threadName1);\n-                thread2 = debuggee.threadByName(threadName2);\n+                thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_rt\/filter_rt003.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-                thread1 = debuggee.threadByName(threadName1);\n+                thread1 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName1);\n@@ -134,1 +134,1 @@\n-                thread2 = debuggee.threadByName(threadName2);\n+                thread2 = debuggee.threadByFieldNameOrThrow(debuggeeClass, threadName2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_s\/filter_s001.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -208,1 +208,3 @@\n-        ThreadReference thread2 = debuggee.threadByName(threadName2);\n+        ReferenceType debuggeeClass = debuggee.classByName(debuggeeName);\n+        ThreadReference thread2 =\n+            debuggee.threadByFieldName(debuggeeClass, \"thread2\", threadName2);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/interrupt\/interrupt001.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,3 +94,6 @@\n-        ThreadReference thrRef;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/ownedMonitors\/ownedmonitors002.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+    static Thread testThread = null;\n+\n@@ -40,1 +42,2 @@\n-        Thread.currentThread().setName(ownedmonitors002.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(ownedmonitors002.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/ownedMonitors\/ownedmonitors002t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 80;\n+    static final int DEBUGGEE_STOPATLINE = 83;\n@@ -109,3 +109,6 @@\n-        ThreadReference thrRef = null;\n-        if ((thrRef =\n-                debuggee.threadByName(DEBUGGEE_THRNAME)) == null) {\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference thrRef =\n+            debuggee.threadByFieldName(rType, \"testThread\", DEBUGGEE_THRNAME);\n+        if (thrRef == null) {\n@@ -120,3 +123,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes006.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+    static Thread testThread = null;\n+\n@@ -54,1 +56,2 @@\n-        Thread.currentThread().setName(popframes006.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(popframes006.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes006t.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,3 +53,3 @@\n-    static final String DEBUGGEE_THRDS[] = {\n-        \"popframes007tMainThr\", \"popframes007tAuxThr\"\n-    };\n+    static final String DEBUGGEE_MAIN_THREAD_NAME = \"popframes007tMainThr\";\n+    static final String DEBUGGEE_AUX_THREAD_NAME  = \"popframes007tAuxThr\";\n+\n@@ -62,1 +62,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 83;\n+    static final int DEBUGGEE_STOPATLINE = 86;\n@@ -109,9 +109,20 @@\n-        ThreadReference thrRef[] = new ThreadReference[2];\n-        for (int i=0; i<2; i++)\n-            if ((thrRef[i] =\n-                    debuggee.threadByName(DEBUGGEE_THRDS[i])) == null) {\n-                log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n-                    + DEBUGGEE_THRDS[i]);\n-                tot_res = Consts.TEST_FAILED;\n-                return quitDebuggee();\n-            }\n+        \/\/ debuggee main class\n+        ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldName(rType, \"mainThread\", DEBUGGEE_MAIN_THREAD_NAME);\n+        if (mainThread == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+                         + DEBUGGEE_MAIN_THREAD_NAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n+\n+        ThreadReference auxThread =\n+            debuggee.threadByFieldName(rType, \"auxThr\", DEBUGGEE_AUX_THREAD_NAME);\n+        if (auxThread == null) {\n+            log.complain(\"TEST FAILURE: method Debugee.threadByName() returned null for debuggee thread \"\n+                         + DEBUGGEE_AUX_THREAD_NAME);\n+            tot_res = Consts.TEST_FAILED;\n+            return quitDebuggee();\n+        }\n@@ -121,3 +132,0 @@\n-            \/\/ debuggee main class\n-            ReferenceType rType = debuggee.classByName(DEBUGGEE_CLASS);\n-\n@@ -130,1 +138,1 @@\n-            StackFrame stFrame = findFrame(thrRef[1], DEBUGGEE_LOCALVAR);\n+            StackFrame stFrame = findFrame(auxThread, DEBUGGEE_LOCALVAR);\n@@ -134,1 +142,1 @@\n-                + \"\\\"\\n\\tgot from thread reference \\\"\" + thrRef[1]\n+                + \"\\\"\\n\\tgot from thread reference \\\"\" + auxThread\n@@ -136,1 +144,1 @@\n-                + thrRef[0] + \"\\\" ...\");\n+                + mainThread + \"\\\" ...\");\n@@ -140,1 +148,1 @@\n-                thrRef[0].popFrames(stFrame);\n+                mainThread.popFrames(stFrame);\n@@ -144,1 +152,1 @@\n-                    + \"\\\"\\n\\tgot from thread reference \\\"\" + thrRef[1]\n+                    + \"\\\"\\n\\tgot from thread reference \\\"\" + auxThread\n@@ -146,1 +154,1 @@\n-                    + thrRef[0] + \"\\\"\");\n+                    + mainThread + \"\\\"\");\n@@ -170,1 +178,1 @@\n-                    + \"\\\"\\n\\tgot from thread reference \\\"\" + thrRef[1]\n+                    + \"\\\"\\n\\tgot from thread reference \\\"\" + auxThread\n@@ -172,1 +180,1 @@\n-                    + thrRef[0] + \"\\\"\");\n+                    + mainThread + \"\\\"\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes007.java","additions":33,"deletions":25,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,3 @@\n+    static Thread mainThread = null;\n+    static OtherThr auxThr = null;\n+\n@@ -38,1 +41,0 @@\n-    private OtherThr auxThr;\n@@ -55,1 +57,2 @@\n-        Thread.currentThread().setName(popframes007.DEBUGGEE_THRDS[0]);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(popframes007.DEBUGGEE_MAIN_THREAD_NAME);\n@@ -96,1 +99,1 @@\n-            popframes007.DEBUGGEE_THRDS[1], this);\n+            popframes007.DEBUGGEE_AUX_THREAD_NAME, this);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes007t.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-    static final int DEBUGGEE_STOPATLINE = 88;\n+    static final int DEBUGGEE_STOPATLINE = 90;\n@@ -118,1 +118,4 @@\n-        ThreadReference thrRef = debuggee.threadByName(DEBUGGEE_THRNAME);\n+        \/\/ debuggee main class\n+        mainClass = debuggee.classByName(DEBUGGEE_CLASS);\n+\n+        ThreadReference thrRef = debuggee.threadByFieldName(mainClass, \"testThread\", DEBUGGEE_THRNAME);\n@@ -131,3 +134,0 @@\n-            \/\/ debuggee main class\n-            mainClass = debuggee.classByName(DEBUGGEE_CLASS);\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop002.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+    static Thread testThread = null;\n@@ -57,1 +58,2 @@\n-        Thread.currentThread().setName(stop002.DEBUGGEE_THRNAME);\n+        testThread = Thread.currentThread();\n+        testThread.setName(stop002.DEBUGGEE_THRNAME);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop002t.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,0 +78,1 @@\n+import com.sun.jdi.ReferenceType;\n@@ -79,0 +80,1 @@\n+import com.sun.jdi.ThreadReference;\n@@ -153,0 +155,4 @@\n+        ReferenceType debuggeeClass = debuggee.classByName(SDEDebuggee.class.getName());\n+        ThreadReference mainThread =\n+            debuggee.threadByFieldNameOrThrow(debuggeeClass, \"mainThread\",\n+                                              SDEDebuggee.mainThreadName);\n@@ -154,1 +160,1 @@\n-                debuggee.threadByName(SDEDebuggee.mainThreadName),\n+                mainThread,\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/setDefaultStratum\/setDefaultStratum003\/setDefaultStratum003.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -293,0 +293,18 @@\n+\n+    public ThreadReference threadByFieldName(ReferenceType debuggeeClass,\n+                                             String threadFieldName) {\n+        return threadByFieldName(debuggeeClass, threadFieldName, threadFieldName);\n+    }\n+\n+    public ThreadReference threadByFieldName(ReferenceType debuggeeClass,\n+                                             String threadFieldName,\n+                                             String threadName) {\n+        try {\n+            return threadByFieldNameOrThrow(debuggeeClass, threadFieldName, threadName);\n+        } catch (JDITestRuntimeException e) {\n+            log.display(\"** Unexpected exception trying to find thread \\\"\" + threadName + \"\\\"\");\n+            e.printStackTrace(log.getOutStream());\n+            return null;\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/Debugee.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+    public static Thread mainThread = null;\n@@ -45,1 +46,2 @@\n-        Thread.currentThread().setName(mainThreadName);\n+        mainThread = Thread.currentThread();\n+        mainThread.setName(mainThreadName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/sde\/SDEDebuggee.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}