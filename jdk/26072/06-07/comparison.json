{"files":[{"patch":"@@ -108,32 +108,0 @@\n-    private static int countInstructions(Iterator<String> iter, String instr) {\n-        String line = null;\n-        int foundInstCount = 0;\n-        while (iter.hasNext()) {\n-            line = iter.next().trim();\n-            if (line.startsWith(\";; }\")) {\n-                break;\n-            }\n-\n-            if (!line.startsWith(\"0x\")) {\n-                continue;\n-            }\n-            int pos = line.indexOf(':');\n-            if (pos == -1 || pos == line.length() - 1) {\n-                continue;\n-            }\n-\n-            line = line.substring(pos + 1).replaceAll(\"\\\\s\", \"\");\n-            if (line.startsWith(\";\")) {\n-                continue;\n-            }\n-\n-            for (String s : line.split(\"\\\\|\")) {\n-                if (!s.startsWith(instr)) {\n-                    return foundInstCount;\n-                }\n-                foundInstCount++;\n-            }\n-        }\n-        return foundInstCount;\n-    }\n-\n@@ -149,5 +117,1 @@\n-    \/\/ We work as follows:\n-    \/\/ 1. Check whether printed instructions are disassembled (\"[Disassembly]\").\n-    \/\/ 2. Look for the block comment ';; spin_wait {'.\n-    \/\/ 3. Count spin wait instructions.\n-    private static void checkOutput(OutputAnalyzer output, String spinWaitInst, int spinWaitInstCount) {\n+    private static void checkOutput(OutputAnalyzer output, String spinWaitInst, int expectedCount) {\n@@ -155,1 +119,2 @@\n-        String line = null;\n+\n+        \/\/ 1. Check whether printed instructions are disassembled\n@@ -158,1 +123,1 @@\n-            line = iter.next();\n+            String line = iter.next();\n@@ -163,1 +128,0 @@\n-\n@@ -169,1 +133,2 @@\n-        boolean foundSpinWaitBlock = false;\n+        \/\/ 2. Look for the block comment\n+        boolean foundHead = false;\n@@ -171,1 +136,1 @@\n-            line = iter.next();\n+            String line = iter.next().trim();\n@@ -173,1 +138,1 @@\n-                foundSpinWaitBlock = true;\n+                foundHead = true;\n@@ -177,3 +142,2 @@\n-\n-        if (!foundSpinWaitBlock) {\n-            throw new RuntimeException(\"Block comment ';; spin_wait {' not found\");\n+        if (!foundHead) {\n+            throw new RuntimeException(\"Block comment not found\");\n@@ -182,2 +146,25 @@\n-        final String expectedInstInOutput = isDisassembled ? spinWaitInst : getSpinWaitInstHex(spinWaitInst);\n-        final int foundInstCount = countInstructions(iter, expectedInstInOutput);\n+        \/\/ 3. Count spin wait instructions\n+        final String expectedInst = isDisassembled ? spinWaitInst : getSpinWaitInstHex(spinWaitInst);\n+        int foundCount = 0;\n+        while (iter.hasNext()) {\n+            String line = iter.next().trim();\n+            if (line.startsWith(\";;}\")) {\n+                break;\n+            }\n+            if (!line.startsWith(\"0x\")) {\n+                continue;\n+            }\n+            int pos = line.indexOf(':');\n+            if (pos == -1 || pos == line.length() - 1) {\n+                continue;\n+            }\n+            line = line.substring(pos + 1).replaceAll(\"\\\\s\", \"\");\n+            if (line.startsWith(\";\")) {\n+                continue;\n+            }\n+            for (String s : line.split(\"\\\\|\")) {\n+                if (s.startsWith(expectedInst)) {\n+                    foundCount++;\n+                }\n+            }\n+        }\n@@ -185,2 +172,2 @@\n-        if (foundInstCount != spinWaitInstCount) {\n-            throw new RuntimeException(\"Expect \" + spinWaitInstCount + \" \" + spinWaitInst + \" instructions. Found: \" + foundInstCount);\n+        if (foundCount != expectedCount) {\n+            throw new RuntimeException(\"Expected \" + expectedCount + \" \" + spinWaitInst + \" instructions. Found: \" + foundCount);\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitAArch64.java","additions":37,"deletions":50,"binary":false,"changes":87,"status":"modified"}]}