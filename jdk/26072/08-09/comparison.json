{"files":[{"patch":"@@ -50,1 +50,0 @@\n-import java.util.function.Function;\n@@ -149,17 +148,1 @@\n-        Function<String, Integer> countExpectedInstFunc = null;\n-        if (isDisassembled) {\n-            \/\/ When code is disassembled, we have one instruction per line.\n-            countExpectedInstFunc = (s) ->\n-            {\n-                return s.startsWith(spinWaitInst) ? 1 : 0;\n-            };\n-        } else {\n-            final String expectedInst = getSpinWaitInstHex(spinWaitInst);\n-            \/\/ Otherwise, there can be multiple hex instructions separated by '|'\n-            countExpectedInstFunc = (s) ->\n-            {\n-                return (int)Arrays.stream(s.split(\"\\\\|\"))\n-                                  .takeWhile(i -> i.startsWith(expectedInst))\n-                                  .count();\n-            };\n-        }\n+        final String expectedInst = isDisassembled ? spinWaitInst : getSpinWaitInstHex(spinWaitInst);\n@@ -183,1 +166,5 @@\n-            foundCount += countExpectedInstFunc.apply(line);\n+            \/\/ When code is disassembled, we have one instruction per line.\n+            \/\/ Otherwise, there can be multiple hex instructions separated by '|'.\n+            foundCount += (int)Arrays.stream(line.split(\"\\\\|\"))\n+                                     .takeWhile(i -> i.startsWith(expectedInst))\n+                                     .count();\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitAArch64.java","additions":6,"deletions":19,"binary":false,"changes":25,"status":"modified"}]}