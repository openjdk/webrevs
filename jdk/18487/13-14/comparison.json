{"files":[{"patch":"@@ -2882,16 +2882,15 @@\n-#define INSN(NAME, op1, op2)                                                                        \\\n-  void NAME(FloatRegister Vd, SIMD_Arrangement T, FloatRegister Vn, FloatRegister Vm, int index) {  \\\n-    starti;                                                                                         \\\n-    assert(T == T4H || T == T8H || T == T2S || T == T4S, \"invalid arrangement\");                    \\\n-    assert(index >= 0 &&                                                                            \\\n-               ((T == T2S && index <= 1) || (T != T2S && index <= 3) || (T == T8H && index <= 7)),  \\\n-           \"invalid index\");                                                                        \\\n-    assert((T != T4H && T != T8H) || Vm->encoding() < 16, \"invalid source SIMD&FP register\");       \\\n-    f(0, 31), f((int)T & 1, 30), f(op1, 29);                                                        \\\n-    f(0b01111, 28, 24);                                                                             \\\n-    if (T == T4H || T == T8H) {                                                                     \\\n-      f(0b01, 23, 22), f(index & 0b11, 21, 20), lrf(Vm, 16), f(op2, 15, 12), f(index >> 2 & 1, 11); \\\n-    } else {                                                                                        \\\n-      f(0b10, 23, 22), f(index & 1, 21), rf(Vm, 16), f(op2, 15, 12), f(index >> 1, 11);             \\\n-    }                                                                                               \\\n-    f(0, 10), rf(Vn, 5), rf(Vd, 0);                                                                 \\\n+#define INSN(NAME, op1, op2)                                                                       \\\n+  void NAME(FloatRegister Vd, SIMD_Arrangement T, FloatRegister Vn, FloatRegister Vm, int index) { \\\n+    starti;                                                                                        \\\n+    assert(T == T4H || T == T8H || T == T2S || T == T4S, \"invalid arrangement\");                   \\\n+    assert(index >= 0 &&                                                                           \\\n+               ((T == T2S && index <= 1) || (T != T2S && index <= 3) || (T == T8H && index <= 7)), \\\n+           \"invalid index\");                                                                       \\\n+    assert((T != T4H && T != T8H) || Vm->encoding() < 16, \"invalid source SIMD&FP register\");      \\\n+    f(0, 31), f((int)T & 1, 30), f(op1, 29), f(0b01111, 28, 24);                                   \\\n+    if (T == T4H || T == T8H) {                                                                    \\\n+      f(0b01, 23, 22), f(index & 0b11, 21, 20), lrf(Vm, 16), f(index >> 2 & 1, 11);                \\\n+    } else {                                                                                       \\\n+      f(0b10, 23, 22), f(index & 1, 21), rf(Vm, 16), f(index >> 1, 11);                            \\\n+    }                                                                                              \\\n+    f(op2, 15, 12), f(0, 10), rf(Vn, 5), rf(Vd, 0);                                                \\\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"}]}