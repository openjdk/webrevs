{"files":[{"patch":"@@ -3065,0 +3065,34 @@\n+ protected:\n+  void _xaddwv(bool is_unsigned, FloatRegister Vd, FloatRegister Vn, SIMD_Arrangement Ta,\n+               FloatRegister Vm, SIMD_Arrangement Tb) {\n+    starti;\n+    assert((Tb >> 1) + 1 == (Ta >> 1), \"Incompatible arrangement\");\n+    f(0, 31), f((int)Tb & 1, 30), f(is_unsigned ? 1 : 0, 29), f(0b01110, 28, 24);\n+    f((int)(Ta >> 1) - 1, 23, 22), f(1, 21), rf(Vm, 16), f(0b000100, 15, 10), rf(Vn, 5), rf(Vd, 0);\n+  }\n+\n+ public:\n+  void uaddwv(FloatRegister Vd, FloatRegister Vn, SIMD_Arrangement Ta, FloatRegister Vm,\n+              SIMD_Arrangement Tb) {\n+    assert(Tb == T8B || Tb == T4H || Tb == T2S, \"invalid arrangement\");\n+    _xaddwv(\/* is_unsigned *\/ true, Vd, Vn, Ta, Vm, Tb);\n+  }\n+\n+  void uaddwv2(FloatRegister Vd, FloatRegister Vn, SIMD_Arrangement Ta, FloatRegister Vm,\n+               SIMD_Arrangement Tb) {\n+    assert(Tb == T16B || Tb == T8H || Tb == T4S, \"invalid arrangement\");\n+    _xaddwv(\/* is_unsigned *\/ true, Vd, Vn, Ta, Vm, Tb);\n+  }\n+\n+  void saddwv(FloatRegister Vd, FloatRegister Vn, SIMD_Arrangement Ta, FloatRegister Vm,\n+              SIMD_Arrangement Tb) {\n+    assert(Tb == T8B || Tb == T4H || Tb == T2S, \"invalid arrangement\");\n+    _xaddwv(\/* is_unsigned *\/ false, Vd, Vn, Ta, Vm, Tb);\n+  }\n+\n+  void saddwv2(FloatRegister Vd, FloatRegister Vn, SIMD_Arrangement Ta, FloatRegister Vm,\n+               SIMD_Arrangement Tb) {\n+    assert(Tb == T16B || Tb == T8H || Tb == T4S, \"invalid arrangement\");\n+    _xaddwv(\/* is_unsigned *\/ false, Vd, Vn, Ta, Vm, Tb);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -5323,1 +5323,0 @@\n-    const FloatRegister vhalf0 = v13, vhalf1 = v12, vhalf2 = v11, vhalf3 = v10;\n@@ -5329,2 +5328,2 @@\n-    assert_different_registers(vdata0, vdata1, vdata2, vdata3, vhalf0, vhalf1, vhalf2, vhalf3,\n-                               vmul0, vmul1, vmul2, vmul3, vpow, vpowm);\n+    assert_different_registers(vdata0, vdata1, vdata2, vdata3, vmul0, vmul1, vmul2, vmul3, vpow,\n+                               vpowm);\n@@ -5441,1 +5440,1 @@\n-        __ sxtl(vhalf0, Assembler::T4S, vdata0, Assembler::T4H);\n+\t__ saddwv(vmul0, vmul0, Assembler::T4S, vdata0, Assembler::T4H);\n@@ -5443,1 +5442,1 @@\n-        __ uxtl(vhalf0, Assembler::T4S, vdata0, Assembler::T4H);\n+\t__ uaddwv(vmul0, vmul0, Assembler::T4S, vdata0, Assembler::T4H);\n@@ -5445,1 +5444,0 @@\n-      __ addv(vmul0, Assembler::T4S, vmul0, vhalf0);\n@@ -5455,1 +5453,1 @@\n-        __ sshll2(vhalf0, Assembler::T4S, vdata0, Assembler::T8H, 0);\n+\t__ saddwv2(vmul0, vmul0, Assembler::T4S, vdata0, Assembler::T8H);\n@@ -5457,1 +5455,1 @@\n-        __ ushll2(vhalf0, Assembler::T4S, vdata0, Assembler::T8H, 0);\n+\t__ uaddwv2(vmul0, vmul0, Assembler::T4S, vdata0, Assembler::T8H);\n@@ -5459,1 +5457,0 @@\n-      __ addv(vmul0, Assembler::T4S, vmul0, vhalf0);\n@@ -5555,4 +5552,4 @@\n-        __ sxtl(vhalf3, Assembler::T4S, vdata3, Assembler::T4H);\n-        __ sxtl(vhalf2, Assembler::T4S, vdata2, Assembler::T4H);\n-        __ sxtl(vhalf1, Assembler::T4S, vdata1, Assembler::T4H);\n-        __ sxtl(vhalf0, Assembler::T4S, vdata0, Assembler::T4H);\n+\t__ saddwv(vmul3, vmul3, Assembler::T4S, vdata3, Assembler::T4H);\n+\t__ saddwv(vmul2, vmul2, Assembler::T4S, vdata2, Assembler::T4H);\n+\t__ saddwv(vmul1, vmul1, Assembler::T4S, vdata1, Assembler::T4H);\n+\t__ saddwv(vmul0, vmul0, Assembler::T4S, vdata0, Assembler::T4H);\n@@ -5560,4 +5557,4 @@\n-        __ uxtl(vhalf3, Assembler::T4S, vdata3, Assembler::T4H);\n-        __ uxtl(vhalf2, Assembler::T4S, vdata2, Assembler::T4H);\n-        __ uxtl(vhalf1, Assembler::T4S, vdata1, Assembler::T4H);\n-        __ uxtl(vhalf0, Assembler::T4S, vdata0, Assembler::T4H);\n+\t__ uaddwv(vmul3, vmul3, Assembler::T4S, vdata3, Assembler::T4H);\n+\t__ uaddwv(vmul2, vmul2, Assembler::T4S, vdata2, Assembler::T4H);\n+\t__ uaddwv(vmul1, vmul1, Assembler::T4S, vdata1, Assembler::T4H);\n+\t__ uaddwv(vmul0, vmul0, Assembler::T4S, vdata0, Assembler::T4H);\n@@ -5565,4 +5562,0 @@\n-      __ addv(vmul3, Assembler::T4S, vmul3, vhalf3);\n-      __ addv(vmul2, Assembler::T4S, vmul2, vhalf2);\n-      __ addv(vmul1, Assembler::T4S, vmul1, vhalf1);\n-      __ addv(vmul0, Assembler::T4S, vmul0, vhalf0);\n@@ -5581,4 +5574,4 @@\n-        __ sshll2(vhalf3, Assembler::T4S, vdata3, Assembler::T8H, 0);\n-        __ sshll2(vhalf2, Assembler::T4S, vdata2, Assembler::T8H, 0);\n-        __ sshll2(vhalf1, Assembler::T4S, vdata1, Assembler::T8H, 0);\n-        __ sshll2(vhalf0, Assembler::T4S, vdata0, Assembler::T8H, 0);\n+\t__ saddwv2(vmul3, vmul3, Assembler::T4S, vdata3, Assembler::T8H);\n+\t__ saddwv2(vmul2, vmul2, Assembler::T4S, vdata2, Assembler::T8H);\n+\t__ saddwv2(vmul1, vmul1, Assembler::T4S, vdata1, Assembler::T8H);\n+\t__ saddwv2(vmul0, vmul0, Assembler::T4S, vdata0, Assembler::T8H);\n@@ -5586,4 +5579,4 @@\n-        __ ushll2(vhalf3, Assembler::T4S, vdata3, Assembler::T8H, 0);\n-        __ ushll2(vhalf2, Assembler::T4S, vdata2, Assembler::T8H, 0);\n-        __ ushll2(vhalf1, Assembler::T4S, vdata1, Assembler::T8H, 0);\n-        __ ushll2(vhalf0, Assembler::T4S, vdata0, Assembler::T8H, 0);\n+\t__ uaddwv2(vmul3, vmul3, Assembler::T4S, vdata3, Assembler::T8H);\n+\t__ uaddwv2(vmul2, vmul2, Assembler::T4S, vdata2, Assembler::T8H);\n+\t__ uaddwv2(vmul1, vmul1, Assembler::T4S, vdata1, Assembler::T8H);\n+\t__ uaddwv2(vmul0, vmul0, Assembler::T4S, vdata0, Assembler::T8H);\n@@ -5591,4 +5584,0 @@\n-      __ addv(vmul3, Assembler::T4S, vmul3, vhalf3);\n-      __ addv(vmul2, Assembler::T4S, vmul2, vhalf2);\n-      __ addv(vmul1, Assembler::T4S, vmul1, vhalf1);\n-      __ addv(vmul0, Assembler::T4S, vmul0, vhalf0);\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":22,"deletions":33,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -1326,0 +1326,35 @@\n+class WideningNEONInstruction(Instruction):\n+    def __init__(self, args):\n+        self._name, self.insname, self.widerArrangement, self.narrowerArrangement = args\n+\n+    def generate(self):\n+        self._firstSIMDreg = FloatRegister().generate()\n+        return self\n+\n+    def cstr(self):\n+        buf = Instruction.cstr(self) + str(self._firstSIMDreg)\n+        current = self._firstSIMDreg\n+        for cnt in range(1, self.numWiderRegs):\n+            buf = '%s, %s' % (buf, current.nextReg())\n+            current = current.nextReg()\n+        buf = '%s, __ T%s' % (buf, self.widerArrangement)\n+        for cnt in range(0, self.numNarrowerRegs):\n+            buf = '%s, %s' % (buf, current.nextReg())\n+            current = current.nextReg()\n+        buf = '%s, __ T%s' % (buf, self.narrowerArrangement)\n+        return '%s);' % (buf)\n+\n+    def astr(self):\n+        buf = '%s\\t%s.%s' % (self.insname, self._firstSIMDreg, self.widerArrangement)\n+        current = self._firstSIMDreg\n+        for cnt in range(1, self.numWiderRegs):\n+            buf = '%s, %s.%s' % (buf, current.nextReg(), self.widerArrangement)\n+            current = current.nextReg()\n+        for cnt in range(0, self.numNarrowerRegs):\n+            buf = '%s, %s.%s' % (buf, current.nextReg(), self.narrowerArrangement)\n+            current = current.nextReg()\n+        return buf\n+\n+    def aname(self):\n+        return self._name\n+\n@@ -1445,0 +1480,4 @@\n+class AddWideNEONOp(WideningNEONInstruction):\n+    numWiderRegs = 2\n+    numNarrowerRegs = 1\n+\n@@ -2147,0 +2186,9 @@\n+generate(AddWideNEONOp,\n+         [[\"saddwv\", \"saddw\", \"8H\", \"8B\"], [\"saddwv\", \"saddw2\", \"8H\", \"16B\"],\n+          [\"saddwv\", \"saddw\", \"4S\", \"4H\"], [\"saddwv\", \"saddw2\", \"4S\", \"8H\"],\n+          [\"saddwv\", \"saddw\", \"2D\", \"2S\"], [\"saddwv\", \"saddw2\", \"2D\", \"4S\"],\n+          [\"uaddwv\", \"uaddw\", \"8H\", \"8B\"], [\"uaddwv\", \"uaddw2\", \"8H\", \"16B\"],\n+          [\"uaddwv\", \"uaddw\", \"4S\", \"4H\"], [\"uaddwv\", \"uaddw2\", \"4S\", \"8H\"],\n+          [\"uaddwv\", \"uaddw\", \"2D\", \"2S\"], [\"uaddwv\", \"uaddw2\", \"2D\", \"4S\"],\n+          ])\n+\n","filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py","additions":48,"deletions":0,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -1299,0 +1299,14 @@\n+\/\/ AddWideNEONOp\n+    __ saddwv(v12, v13, __ T8H, v14, __ T8B);          \/\/       saddw   v12.8H, v13.8H, v14.8B\n+    __ saddwv(v30, v31, __ T8H, v0, __ T16B);          \/\/       saddw2  v30.8H, v31.8H, v0.16B\n+    __ saddwv(v13, v14, __ T4S, v15, __ T4H);          \/\/       saddw   v13.4S, v14.4S, v15.4H\n+    __ saddwv(v8, v9, __ T4S, v10, __ T8H);            \/\/       saddw2  v8.4S, v9.4S, v10.8H\n+    __ saddwv(v25, v26, __ T2D, v27, __ T2S);          \/\/       saddw   v25.2D, v26.2D, v27.2S\n+    __ saddwv(v29, v30, __ T2D, v31, __ T4S);          \/\/       saddw2  v29.2D, v30.2D, v31.4S\n+    __ uaddwv(v1, v2, __ T8H, v3, __ T8B);             \/\/       uaddw   v1.8H, v2.8H, v3.8B\n+    __ uaddwv(v31, v0, __ T8H, v1, __ T16B);           \/\/       uaddw2  v31.8H, v0.8H, v1.16B\n+    __ uaddwv(v23, v24, __ T4S, v25, __ T4H);          \/\/       uaddw   v23.4S, v24.4S, v25.4H\n+    __ uaddwv(v31, v0, __ T4S, v1, __ T8H);            \/\/       uaddw2  v31.4S, v0.4S, v1.8H\n+    __ uaddwv(v20, v21, __ T2D, v22, __ T2S);          \/\/       uaddw   v20.2D, v21.2D, v22.2S\n+    __ uaddwv(v0, v1, __ T2D, v2, __ T4S);             \/\/       uaddw2  v0.2D, v1.2D, v2.4S\n+\n@@ -1316,7 +1330,7 @@\n-    0x14000000,     0x17ffffd7,     0x14000435,     0x94000000,\n-    0x97ffffd4,     0x94000432,     0x3400000a,     0x34fffa2a,\n-    0x340085ea,     0x35000008,     0x35fff9c8,     0x35008588,\n-    0xb400000b,     0xb4fff96b,     0xb400852b,     0xb500001d,\n-    0xb5fff91d,     0xb50084dd,     0x10000013,     0x10fff8b3,\n-    0x10008473,     0x90000013,     0x36300016,     0x3637f836,\n-    0x363083f6,     0x3758000c,     0x375ff7cc,     0x3758838c,\n+    0x14000000,     0x17ffffd7,     0x14000441,     0x94000000,\n+    0x97ffffd4,     0x9400043e,     0x3400000a,     0x34fffa2a,\n+    0x3400876a,     0x35000008,     0x35fff9c8,     0x35008708,\n+    0xb400000b,     0xb4fff96b,     0xb40086ab,     0xb500001d,\n+    0xb5fff91d,     0xb500865d,     0x10000013,     0x10fff8b3,\n+    0x100085f3,     0x90000013,     0x36300016,     0x3637f836,\n+    0x36308576,     0x3758000c,     0x375ff7cc,     0x3758850c,\n@@ -1327,13 +1341,13 @@\n-    0x54008160,     0x54000001,     0x54fff541,     0x54008101,\n-    0x54000002,     0x54fff4e2,     0x540080a2,     0x54000002,\n-    0x54fff482,     0x54008042,     0x54000003,     0x54fff423,\n-    0x54007fe3,     0x54000003,     0x54fff3c3,     0x54007f83,\n-    0x54000004,     0x54fff364,     0x54007f24,     0x54000005,\n-    0x54fff305,     0x54007ec5,     0x54000006,     0x54fff2a6,\n-    0x54007e66,     0x54000007,     0x54fff247,     0x54007e07,\n-    0x54000008,     0x54fff1e8,     0x54007da8,     0x54000009,\n-    0x54fff189,     0x54007d49,     0x5400000a,     0x54fff12a,\n-    0x54007cea,     0x5400000b,     0x54fff0cb,     0x54007c8b,\n-    0x5400000c,     0x54fff06c,     0x54007c2c,     0x5400000d,\n-    0x54fff00d,     0x54007bcd,     0x5400000e,     0x54ffefae,\n-    0x54007b6e,     0x5400000f,     0x54ffef4f,     0x54007b0f,\n+    0x540082e0,     0x54000001,     0x54fff541,     0x54008281,\n+    0x54000002,     0x54fff4e2,     0x54008222,     0x54000002,\n+    0x54fff482,     0x540081c2,     0x54000003,     0x54fff423,\n+    0x54008163,     0x54000003,     0x54fff3c3,     0x54008103,\n+    0x54000004,     0x54fff364,     0x540080a4,     0x54000005,\n+    0x54fff305,     0x54008045,     0x54000006,     0x54fff2a6,\n+    0x54007fe6,     0x54000007,     0x54fff247,     0x54007f87,\n+    0x54000008,     0x54fff1e8,     0x54007f28,     0x54000009,\n+    0x54fff189,     0x54007ec9,     0x5400000a,     0x54fff12a,\n+    0x54007e6a,     0x5400000b,     0x54fff0cb,     0x54007e0b,\n+    0x5400000c,     0x54fff06c,     0x54007dac,     0x5400000d,\n+    0x54fff00d,     0x54007d4d,     0x5400000e,     0x54ffefae,\n+    0x54007cee,     0x5400000f,     0x54ffef4f,     0x54007c8f,\n@@ -1585,1 +1599,4 @@\n-    0x658622a6,     0x65d83bd9,     0x0441303f,\n+    0x658622a6,     0x65d83bd9,     0x0441303f,     0x0e2e11ac,\n+    0x4e2013fe,     0x0e6f11cd,     0x4e6a1128,     0x0ebb1359,\n+    0x4ebf13dd,     0x2e231041,     0x6e21101f,     0x2e791317,\n+    0x6e61101f,     0x2eb612b4,     0x6ea21020,\n","filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h","additions":38,"deletions":21,"binary":false,"changes":59,"status":"modified"}]}