{"files":[{"patch":"@@ -1599,0 +1599,10 @@\n+  \/\/ Load\/store a register, but with a BasicType parameter. Loaded signed integer values are\n+  \/\/ extended to 64 bits.\n+  void load(Register Rt, const Address &adr, BasicType bt) {\n+    int op = (is_signed_subword_type(bt) || bt == T_INT) ? 0b10 : 0b01;\n+    ld_st2(Rt, adr, exact_log2(type2aelembytes(bt)), op);\n+  }\n+  void store(Register Rt, const Address &adr, BasicType bt) {\n+    ld_st2(Rt, adr, exact_log2(type2aelembytes(bt)), 0b00);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-    arrays_hashcode_elload(tmp1, Address(post(ary, type2aelembytes(eltype))), eltype);\n+    load(tmp1, Address(post(ary, type2aelembytes(eltype))), eltype);\n@@ -140,23 +140,0 @@\n-void C2_MacroAssembler::arrays_hashcode_elload(Register dst, Address src, BasicType eltype) {\n-  switch (eltype) {\n-  \/\/ T_BOOLEAN used as surrogate for unsigned byte\n-  case T_BOOLEAN:\n-    ldrb(dst, src);\n-    break;\n-  case T_BYTE:\n-    ldrsb(dst, src);\n-    break;\n-  case T_SHORT:\n-    ldrsh(dst, src);\n-    break;\n-  case T_CHAR:\n-    ldrh(dst, src);\n-    break;\n-  case T_INT:\n-    ldrw(dst, src);\n-    break;\n-  default:\n-    ShouldNotReachHere();\n-  }\n-}\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":1,"deletions":24,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -5316,23 +5316,0 @@\n-  void large_arrays_hashcode_elload(Register dst, Address src, BasicType eltype) {\n-    switch (eltype) {\n-    \/\/ T_BOOLEAN used as surrogate for unsigned byte\n-    case T_BOOLEAN:\n-      __ ldrb(dst, src);\n-      break;\n-    case T_BYTE:\n-      __ ldrsb(dst, src);\n-      break;\n-    case T_SHORT:\n-      __ ldrsh(dst, src);\n-      break;\n-    case T_CHAR:\n-      __ ldrh(dst, src);\n-      break;\n-    case T_INT:\n-      __ ldrw(dst, src);\n-      break;\n-    default:\n-      ShouldNotReachHere();\n-    }\n-  }\n-\n@@ -5357,2 +5334,2 @@\n-    size_t vf; \/\/ vectorization factor\n-    int multiply_by_halves;\n+    unsigned int vf; \/\/ vectorization factor\n+    bool multiply_by_halves;\n@@ -5383,1 +5360,1 @@\n-    const size_t uf = 4;\n+    const unsigned uf = 4;\n@@ -5386,1 +5363,1 @@\n-    const size_t evf = vf * uf;\n+    const unsigned evf = vf * uf;\n@@ -5508,1 +5485,1 @@\n-      large_arrays_hashcode_elload(rscratch1, Address(__ post(ary, type2aelembytes(eltype))),\n+      __ load(rscratch1, Address(__ post(ary, type2aelembytes(eltype))),\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":5,"deletions":28,"binary":false,"changes":33,"status":"modified"}]}