{"files":[{"patch":"@@ -51,1 +51,1 @@\n-    THROW_MSG_NULL(vmSymbols::java_lang_InternalError(), \"JVMCI is not enabled\")\n+    THROW_MSG_NULL(vmSymbols::java_lang_InternalError(), JVMCI_NOT_ENABLED_ERROR_MESSAGE)\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -723,1 +723,1 @@\n-    JVMCI_THROW_MSG_NULL(InternalError, \"JVMCI is not enabled\");\n+    JVMCI_THROW_MSG_NULL(InternalError, JVMCI_NOT_ENABLED_ERROR_MESSAGE);\n@@ -735,1 +735,1 @@\n-    JVMCI_THROW_MSG_0(InternalError, \"JVMCI is not enabled\");\n+    JVMCI_THROW_MSG_0(InternalError, JVMCI_NOT_ENABLED_ERROR_MESSAGE);\n@@ -1518,1 +1518,1 @@\n-    JVMCI_THROW_MSG(InternalError, \"JVMCI is not enabled\");\n+    JVMCI_THROW_MSG(InternalError, JVMCI_NOT_ENABLED_ERROR_MESSAGE);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+#define JVMCI_NOT_ENABLED_ERROR_MESSAGE \"JVMCI is not enabled. Must specify '-XX:+EnableJVMCI' or '--add-modules=jdk.internal.vm.ci' to the java launcher.\"\n+\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,10 @@\n-          \"Enable JVMCI. Defaults to true if UseJVMCICompiler is true.\")    \\\n+          \"Enable JVMCI support in the VM. \"                                \\\n+          \"Defaults to true if UseJVMCICompiler is true or \"                \\\n+          \"--add-modules=jdk.internal.vm.ci was specified. \"                \\\n+          \"The behavior of --add-modules=jdk.internal.vm.ci is triggered \"  \\\n+          \"if any of the following is true: \"                               \\\n+          \"1. -XX:+EnableJVMCI is set to true on the command line. \"        \\\n+          \"2. -XX:+EnableJVMCI is set to true by jdk\/internal\/vm\/options \"  \\\n+          \"   in the java.base module. \"                                    \\\n+          \"3. EnableJVMCI is defaulted to true by UseJVMCICompiler and \"    \\\n+          \"   libjvmci is not enabled\")                                     \\\n","filename":"src\/hotspot\/share\/jvmci\/jvmci_globals.hpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -88,0 +88,3 @@\n+#if INCLUDE_JVMCI\n+bool   Arguments::_jvmci_module_added           = false;\n+#endif\n@@ -1801,3 +1804,3 @@\n-    PropertyList_unique_add(&_system_properties, \"jdk.internal.vm.ci.enabled\", \"true\",\n-        AddProperty, UnwriteableProperty, InternalProperty);\n-    if (ClassLoader::is_module_observable(\"jdk.internal.vm.ci\")) {\n+    \/\/ Add the JVMCI module if not using libjvmci or EnableJVMCI\n+    \/\/ was explicitly set on the command line or in the jimage.\n+    if ((!UseJVMCINativeLibrary || FLAG_IS_CMDLINE(EnableJVMCI) || FLAG_IS_JIMAGE_RESOURCE(EnableJVMCI)) && ClassLoader::is_module_observable(\"jdk.internal.vm.ci\") && !_jvmci_module_added) {\n@@ -2250,0 +2253,13 @@\n+#if INCLUDE_JVMCI\n+      if (!_jvmci_module_added) {\n+        const char *jvmci_module = strstr(tail, \"jdk.internal.vm.ci\");\n+        if (jvmci_module != nullptr) {\n+          char before = *(jvmci_module - 1);\n+          char after  = *(jvmci_module + strlen(\"jdk.internal.vm.ci\"));\n+          if ((before == '=' || before == ',') && (after == '\\0' || after == ',')) {\n+            FLAG_SET_DEFAULT(EnableJVMCI, true);\n+            _jvmci_module_added = true;\n+          }\n+        }\n+      }\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -200,0 +200,4 @@\n+#if INCLUDE_JVMCI\n+  \/\/ was jdk.internal.vm.ci module specified in the --add-modules option?\n+  static bool _jvmci_module_added;\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-        Services.checkJVMCIEnabled();\n@@ -88,1 +87,0 @@\n-        Services.checkJVMCIEnabled();\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/services\/JVMCIServiceLocator.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,11 +67,0 @@\n-    static final boolean JVMCI_ENABLED = Boolean.parseBoolean(VM.getSavedProperties().get(\"jdk.internal.vm.ci.enabled\"));\n-\n-    \/**\n-     * Checks that JVMCI is enabled in the VM and throws an error if it isn't.\n-     *\/\n-    static void checkJVMCIEnabled() {\n-        if (!JVMCI_ENABLED) {\n-            throw new Error(\"The EnableJVMCI VM option must be true (i.e., -XX:+EnableJVMCI) to use JVMCI\");\n-        }\n-    }\n-\n@@ -87,1 +76,0 @@\n-        checkJVMCIEnabled();\n@@ -116,1 +104,0 @@\n-        checkJVMCIEnabled();\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/services\/Services.java","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"}]}