{"files":[{"patch":"@@ -51,1 +51,1 @@\n-    THROW_MSG_NULL(vmSymbols::java_lang_InternalError(), JAVA_NOT_ENABLED_ERROR_MESSAGE)\n+    THROW_MSG_NULL(vmSymbols::java_lang_InternalError(), JVMCI_NOT_ENABLED_ERROR_MESSAGE)\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -723,1 +723,1 @@\n-    JVMCI_THROW_MSG_NULL(InternalError, JAVA_NOT_ENABLED_ERROR_MESSAGE);\n+    JVMCI_THROW_MSG_NULL(InternalError, JVMCI_NOT_ENABLED_ERROR_MESSAGE);\n@@ -735,1 +735,1 @@\n-    JVMCI_THROW_MSG_0(InternalError, JAVA_NOT_ENABLED_ERROR_MESSAGE);\n+    JVMCI_THROW_MSG_0(InternalError, JVMCI_NOT_ENABLED_ERROR_MESSAGE);\n@@ -1518,1 +1518,1 @@\n-    JVMCI_THROW_MSG(InternalError, JAVA_NOT_ENABLED_ERROR_MESSAGE);\n+    JVMCI_THROW_MSG(InternalError, JVMCI_NOT_ENABLED_ERROR_MESSAGE);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-#define JAVA_NOT_ENABLED_ERROR_MESSAGE \"JVMCI is not enabled. Must specify '--add-modules=jdk.internal.vm.ci' or '-XX:+EnableJVMCI' to the java launcher.\"\n+#define JVMCI_NOT_ENABLED_ERROR_MESSAGE \"JVMCI is not enabled. Must specify '--add-modules=jdk.internal.vm.ci' or '-XX:+EnableJVMCI' to the java launcher.\"\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,4 +51,3 @@\n-          \"If true and UseJVMCINativeLibrary is false (i.e. libjvmci is \"   \\\n-          \"not available or not selected), the behavior of adding the \"     \\\n-          \"jdk.internal.vm.ci module is triggered, as if the \"   \\\n-          \"--add-modules=jdk.internal.vm.ci option was specified.\")         \\\n+          \"If explicity set to true on the command line OR defaulted to \"   \\\n+          \"true by UseJVMCICompiler and libjvmci is not enabled, the \"      \\\n+          \"behavior --add-modules=jdk.internal.vm.ci is triggered.\")        \\\n","filename":"src\/hotspot\/share\/jvmci\/jvmci_globals.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1804,5 +1804,3 @@\n-    \/\/ libjvmci doesn't require resolving jdk.internal.vm.ci as it is\n-    \/\/ compiled into the libjvmci image itself. Without libjvmci, there\n-    \/\/ is no other representation of the jdk.internal.vm.ci module\n-    \/\/ so it needs to be added to the root module set.\n-    if (!UseJVMCINativeLibrary && ClassLoader::is_module_observable(\"jdk.internal.vm.ci\") && !_jvmci_module_added) {\n+    \/\/ Add the JVMCI module if not using libjvmci or EnableJVMCI\n+    \/\/ was explicitly set on the command line.\n+    if ((!UseJVMCINativeLibrary || FLAG_IS_CMDLINE(EnableJVMCI)) && ClassLoader::is_module_observable(\"jdk.internal.vm.ci\") && !_jvmci_module_added) {\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -173,1 +173,0 @@\n-                \"--add-modules=jdk.internal.vm.ci\",\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.hotspot.test\/src\/jdk\/vm\/ci\/hotspot\/test\/TestHotSpotJVMCIRuntime.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}