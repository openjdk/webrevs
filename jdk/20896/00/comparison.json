{"files":[{"patch":"@@ -35,0 +35,1 @@\n+import java.lang.classfile.constantpool.FieldRefEntry;\n@@ -199,28 +200,1 @@\n-    static class ClassData {\n-        final String name;\n-        final ClassDesc desc;\n-        final Object value;\n-\n-        ClassData(String name, ClassDesc desc, Object value) {\n-            this.name = name;\n-            this.desc = desc;\n-            this.value = value;\n-        }\n-\n-        public String name() { return name; }\n-        public String toString() {\n-            return name + \",value=\"+value;\n-        }\n-    }\n-\n-    String classData(Object arg) {\n-        ClassDesc desc;\n-        if (arg instanceof Class) {\n-            desc = CD_Class;\n-        } else if (arg instanceof MethodHandle) {\n-            desc = CD_MethodHandle;\n-        } else if (arg instanceof LambdaForm) {\n-            desc = CD_LambdaForm;\n-        } else {\n-            desc = CD_Object;\n-        }\n+    record ClassData(FieldRefEntry field, Object value) {}\n@@ -228,0 +202,1 @@\n+    FieldRefEntry classData(ClassFileBuilder<?, ?> cfb, Object arg, ClassDesc desc) {\n@@ -240,2 +215,3 @@\n-        classData.add(new ClassData(name, desc, arg));\n-        return name;\n+        var field = cfb.constantPool().fieldRefEntry(classDesc, name, desc);\n+        classData.add(new ClassData(field, arg));\n+        return field;\n@@ -331,1 +307,1 @@\n-                    ClassData p = classData.get(0);\n+                    var field = classData.getFirst().field;\n@@ -333,1 +309,1 @@\n-                    clb.withField(p.name, p.desc, ACC_STATIC | ACC_FINAL);\n+                    clb.withField(field.name(), field.type(), ACC_STATIC | ACC_FINAL);\n@@ -335,2 +311,4 @@\n-                    cob.checkcast(p.desc)\n-                       .putstatic(classDesc, p.name, p.desc);\n+                    var ft = field.typeSymbol();\n+                    if (ft != CD_Object)\n+                        cob.checkcast(ft);\n+                    cob.putstatic(field);\n@@ -343,1 +321,1 @@\n-                        ClassData p = classData.get(i);\n+                        var field = classData.get(i).field;\n@@ -345,1 +323,1 @@\n-                        clb.withField(p.name, p.desc, ACC_STATIC | ACC_FINAL);\n+                        clb.withField(field.name(), field.type(), ACC_STATIC | ACC_FINAL);\n@@ -349,3 +327,5 @@\n-                           .invokeinterface(listGet)\n-                           .checkcast(p.desc)\n-                           .putstatic(classDesc, p.name, p.desc);\n+                           .invokeinterface(listGet);\n+                        var ft = field.typeSymbol();\n+                        if (ft != CD_Object)\n+                            cob.checkcast(ft);\n+                        cob.putstatic(field);\n@@ -369,2 +349,0 @@\n-     *\n-     * @param wrapper primitive type class to box.\n@@ -378,2 +356,0 @@\n-     *\n-     * @param wrapper wrapper type class to unbox.\n@@ -448,1 +424,1 @@\n-            cob.getstatic(classDesc, classData(cls), CD_Class)\n+            cob.getstatic(classData(cob, cls, CD_Class))\n@@ -557,1 +533,1 @@\n-        final byte[] classFile = classFileSetup(new Consumer<ClassBuilder>() {\n+        final byte[] classFile = classFileSetup(new Consumer<>() {\n@@ -569,1 +545,1 @@\n-        methodSetup(clb, new Consumer<MethodBuilder>() {\n+        methodSetup(clb, new Consumer<>() {\n@@ -579,1 +555,1 @@\n-                classData(lambdaForm); \/\/ keep LambdaForm instance & its compiled form lifetime tightly coupled.\n+                classData(mb, lambdaForm, CD_LambdaForm); \/\/ keep LambdaForm instance & its compiled form lifetime tightly coupled.\n@@ -581,1 +557,1 @@\n-                mb.withCode(new Consumer<CodeBuilder>() {\n+                mb.withCode(new Consumer<>() {\n@@ -589,2 +565,1 @@\n-                            cob.getstatic(classDesc, classData(lambdaForm.customized), CD_MethodHandle)\n-                               .checkcast(CD_MethodHandle);\n+                            cob.getstatic(classData(cob, lambdaForm.customized, CD_MethodHandle));\n@@ -723,1 +698,1 @@\n-            cob.getstatic(classDesc, classData(target), CD_MethodHandle);\n+            cob.getstatic(classData(cob, target, CD_MethodHandle));\n@@ -1448,1 +1423,1 @@\n-                cob.getstatic(classDesc, classData(arg), CD_Object);\n+                cob.getstatic(classData(cob, arg, CD_Object));\n@@ -1527,1 +1502,1 @@\n-        final byte[] classFile = classFileSetup(new Consumer<ClassBuilder>() {\n+        final byte[] classFile = classFileSetup(new Consumer<>() {\n@@ -1530,1 +1505,1 @@\n-                methodSetup(clb, new Consumer<MethodBuilder>() {\n+                methodSetup(clb, new Consumer<>() {\n@@ -1539,1 +1514,1 @@\n-                        mb.withCode(new Consumer<CodeBuilder>() {\n+                        mb.withCode(new Consumer<>() {\n@@ -1596,1 +1571,1 @@\n-        final byte[] classFile = classFileSetup(new Consumer<ClassBuilder>() {\n+        final byte[] classFile = classFileSetup(new Consumer<>() {\n@@ -1599,1 +1574,1 @@\n-                methodSetup(clb, new Consumer<MethodBuilder>() {\n+                methodSetup(clb, new Consumer<>() {\n@@ -1608,1 +1583,1 @@\n-                        mb.withCode(new Consumer<CodeBuilder>() {\n+                        mb.withCode(new Consumer<>() {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":33,"deletions":58,"binary":false,"changes":91,"status":"modified"}]}