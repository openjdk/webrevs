{"files":[{"patch":"@@ -39,1 +39,2 @@\n-void ObjectStartArray::initialize(MemRegion reserved_region) {\n+ObjectStartArray::ObjectStartArray(MemRegion covered_region)\n+  : _virtual_space(nullptr) {\n@@ -41,1 +42,1 @@\n-  size_t bytes_to_reserve = num_bytes_required(reserved_region);\n+  size_t bytes_to_reserve = num_bytes_required(covered_region);\n@@ -55,1 +56,1 @@\n-  _virtual_space.initialize(backing_store);\n+  _virtual_space = new PSVirtualSpace(backing_store, os::vm_page_size());\n@@ -57,1 +58,1 @@\n-  assert(_virtual_space.low_boundary() != nullptr, \"set from the backing_store\");\n+  assert(_virtual_space->low_boundary() != nullptr, \"set from the backing_store\");\n@@ -59,1 +60,1 @@\n-  _offset_base = (uint8_t*)(_virtual_space.low_boundary() - (uintptr_t(reserved_region.start()) >> CardTable::card_shift()));\n+  _offset_base = (uint8_t*)(_virtual_space->low_boundary() - (uintptr_t(covered_region.start()) >> CardTable::card_shift()));\n@@ -66,1 +67,1 @@\n-  \/\/ Only commit memory in page sized chunks\n+  \/\/ Only commit memory in page-sized chunks\n@@ -69,1 +70,1 @@\n-  size_t current_size = _virtual_space.committed_size();\n+  size_t current_size = _virtual_space->committed_size();\n@@ -78,1 +79,1 @@\n-    if (!_virtual_space.expand_by(expand_by)) {\n+    if (!_virtual_space->expand_by(expand_by)) {\n@@ -84,1 +85,1 @@\n-    _virtual_space.shrink_by(shrink_by);\n+    _virtual_space->shrink_by(shrink_by);\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.cpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-  PSVirtualSpace  _virtual_space;\n+  PSVirtualSpace* _virtual_space;\n@@ -77,1 +77,1 @@\n-  void initialize(MemRegion reserved_region);\n+  ObjectStartArray(MemRegion covered_region);\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,3 +70,0 @@\n-  \/\/ Object start stuff: for all reserved memory\n-  start_array()->initialize(reserved_mr);\n-\n@@ -111,0 +108,1 @@\n+  _start_array = new ObjectStartArray(reserved_mr);\n@@ -285,1 +283,1 @@\n-    _start_array.update_for_block(cur, cur + word_size);\n+    _start_array->update_for_block(cur, cur + word_size);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  ObjectStartArray         _start_array;       \/\/ Keeps track of where objects start in a 512b block\n+  ObjectStartArray*        _start_array;       \/\/ Keeps track of where objects start in a 512b block\n@@ -59,1 +59,1 @@\n-      _start_array.update_for_block(res, res + word_size);\n+      _start_array->update_for_block(res, res + word_size);\n@@ -106,1 +106,1 @@\n-  ObjectStartArray*     start_array()             { return &_start_array; }\n+  ObjectStartArray*     start_array()             { return _start_array;  }\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-\/\/ PSVirtualSpace\n-\n@@ -40,17 +38,0 @@\n-\/\/ Deprecated.\n-PSVirtualSpace::PSVirtualSpace():\n-  _alignment(os::vm_page_size()),\n-  _reserved_low_addr(nullptr),\n-  _reserved_high_addr(nullptr),\n-  _committed_low_addr(nullptr),\n-  _committed_high_addr(nullptr),\n-  _special(false) {\n-}\n-\n-\/\/ Deprecated.\n-void PSVirtualSpace::initialize(ReservedSpace rs) {\n-  set_reserved(rs);\n-  set_committed(reserved_low_addr(), reserved_low_addr());\n-  DEBUG_ONLY(verify());\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVirtualspace.cpp","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -61,3 +61,0 @@\n-  PSVirtualSpace();\n-  void initialize(ReservedSpace rs);\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVirtualspace.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}