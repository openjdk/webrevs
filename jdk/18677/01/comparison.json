{"files":[{"patch":"@@ -466,0 +466,15 @@\n+class G1VerifyFailureCounter {\n+  size_t _count;\n+\n+public:\n+  G1VerifyFailureCounter() : _count(0) {}\n+\n+  \/\/ Increases the failure counter and return whether this has been the first failure.\n+  bool record_failure() {\n+    _count++;\n+    return _count == 1;\n+  }\n+\n+  size_t count() const { return _count; }\n+};\n+\n@@ -469,3 +484,3 @@\n-  VerifyOption _vo;\n-  oop _containing_obj;\n-  size_t _num_failures;\n+  const VerifyOption _vo;\n+  const oop _containing_obj;\n+  G1VerifyFailureCounter* const _failures;\n@@ -475,2 +490,1 @@\n-    _num_failures++;\n-    return _num_failures == 1;\n+    return _failures->record_failure();\n@@ -490,1 +504,1 @@\n-    G1VerifyLiveAndRemSetClosure* _cl;\n+    G1VerifyFailureCounter* _failures;\n@@ -495,1 +509,1 @@\n-    Checker(G1VerifyLiveAndRemSetClosure* cl, oop containing_obj, T* p, oop obj) :\n+    Checker(G1VerifyFailureCounter* failures, oop containing_obj, T* p, oop obj) :\n@@ -497,1 +511,1 @@\n-      _cl(cl),\n+      _failures(failures),\n@@ -502,0 +516,4 @@\n+    bool record_failure() {\n+      return _failures->record_failure();\n+    }\n+\n@@ -520,1 +538,2 @@\n-    LiveChecker(G1VerifyLiveAndRemSetClosure* cl, oop containing_obj, T* p, oop obj, VerifyOption vo) : Checker<T>(cl, containing_obj, p, obj) {\n+    LiveChecker(G1VerifyFailureCounter* failures, oop containing_obj, T* p, oop obj, VerifyOption vo)\n+      : Checker<T>(failures, containing_obj, p, obj) {\n@@ -536,1 +555,1 @@\n-      if (this->_cl->record_failure()) {\n+      if (this->record_failure()) {\n@@ -562,1 +581,2 @@\n-    RemSetChecker(G1VerifyLiveAndRemSetClosure* cl, oop containing_obj, T* p, oop obj) : Checker<T>(cl, containing_obj, p, obj) {\n+    RemSetChecker(G1VerifyFailureCounter* failures, oop containing_obj, T* p, oop obj)\n+      : Checker<T>(failures, containing_obj, p, obj) {\n@@ -589,1 +609,1 @@\n-      if (this->_cl->record_failure()) {\n+      if (this->record_failure()) {\n@@ -602,3 +622,1 @@\n-    assert(_containing_obj != nullptr, \"must be\");\n-\n-    if (num_failures() >= G1MaxVerifyFailures) {\n+    if (_failures->count() >= G1MaxVerifyFailures) {\n@@ -614,1 +632,1 @@\n-    LiveChecker<T> live_check(this, _containing_obj, p, obj, _vo);\n+    LiveChecker<T> live_check(_failures, _containing_obj, p, obj, _vo);\n@@ -621,1 +639,1 @@\n-    RemSetChecker<T> remset_check(this, _containing_obj, p, obj);\n+    RemSetChecker<T> remset_check(_failures, _containing_obj, p, obj);\n@@ -628,11 +646,4 @@\n-  G1VerifyLiveAndRemSetClosure(G1CollectedHeap* g1h, VerifyOption vo) :\n-    _vo(vo),\n-    _containing_obj(nullptr),\n-    _num_failures(0) { }\n-\n-  void set_containing_obj(oop const obj) {\n-    assert(!G1CollectedHeap::heap()->is_obj_dead_cond(obj, _vo), \"Precondition\");\n-    _containing_obj = obj;\n-  }\n-\n-  size_t num_failures() const { return _num_failures; }\n+  G1VerifyLiveAndRemSetClosure(oop containing_obj, VerifyOption vo, G1VerifyFailureCounter* failures)\n+    : _vo(vo),\n+      _containing_obj(containing_obj),\n+      _failures(failures) {}\n@@ -647,3 +658,1 @@\n-  G1VerifyLiveAndRemSetClosure cl(g1h, vo);\n-\n-  size_t other_failures = 0;\n+  G1VerifyFailureCounter failures;\n@@ -660,1 +669,1 @@\n-      cl.set_containing_obj(obj);\n+      G1VerifyLiveAndRemSetClosure cl(obj, vo, &failures);\n@@ -663,1 +672,1 @@\n-      other_failures++;\n+      failures.record_failure();\n@@ -666,1 +675,1 @@\n-    if ((cl.num_failures() + other_failures) >= G1MaxVerifyFailures) {\n+    if (failures.count() >= G1MaxVerifyFailures) {\n@@ -676,1 +685,1 @@\n-  return (cl.num_failures() + other_failures) != 0;\n+  return failures.count() != 0;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.cpp","additions":44,"deletions":35,"binary":false,"changes":79,"status":"modified"}]}