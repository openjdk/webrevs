{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -239,1 +239,1 @@\n-void CodeBlob::print_code() {\n+void CodeBlob::print_code_on(outputStream* st) {\n@@ -241,1 +241,1 @@\n-  Disassembler::decode(this, tty);\n+  Disassembler::decode(this, st);\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -243,1 +243,1 @@\n-  void print_code();\n+  void print_code_on(outputStream* st);\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -690,6 +690,9 @@\n-    ttyLocker ttyl;\n-    tty->print_cr(\"implicit exception happened at \" INTPTR_FORMAT, p2i(pc));\n-    print();\n-    method()->print_codes();\n-    print_code();\n-    print_pcs();\n+\n+    \/\/ Keep tty output consistent. To avoid ttyLocker, we buffer in stream, and print all at once.\n+    stringStream ss;\n+    ss.print_cr(\"implicit exception happened at \" INTPTR_FORMAT, p2i(pc));\n+    print_on(&ss);\n+    method()->print_codes_on(&ss);\n+    print_code_on(&ss);\n+    print_pcs_on(&ss);\n+    tty->print(\"%s\", ss.as_string()); \/\/ print all at once\n","filename":"src\/hotspot\/share\/code\/compiledMethod.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -230,1 +230,1 @@\n-  virtual void print_pcs() = 0;\n+  virtual void print_pcs_on(outputStream* st) = 0;\n","filename":"src\/hotspot\/share\/code\/compiledMethod.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1024,1 +1024,1 @@\n-      print_pcs();\n+      print_pcs_on(tty);\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -624,1 +624,0 @@\n-  void print_pcs() { print_pcs_on(tty); }\n@@ -638,2 +637,1 @@\n-  \/\/ void print_pcs()                             PRODUCT_RETURN;\n-  void print_pcs()                                { return; }\n+  void print_pcs_on(outputStream* st) { return; }\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -195,1 +195,3 @@\n-  ttyLocker ttyl;  \/\/ keep the following output coherent\n+  \/\/ Keep output to st coherent: collect all lines and print at once.\n+  ResourceMark rm;\n+  stringStream ss;\n@@ -197,1 +199,1 @@\n-    method_printer.trace(method, s.bcp(), st);\n+    method_printer.trace(method, s.bcp(), &ss);\n@@ -199,0 +201,1 @@\n+  st->print(\"%s\", ss.as_string());\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeTracer.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -543,1 +543,1 @@\n-void Method::print_invocation_count() {\n+void Method::print_invocation_count(outputStream* st) {\n@@ -545,7 +545,7 @@\n-  if (is_static()) tty->print(\"static \");\n-  if (is_final()) tty->print(\"final \");\n-  if (is_synchronized()) tty->print(\"synchronized \");\n-  if (is_native()) tty->print(\"native \");\n-  tty->print(\"%s::\", method_holder()->external_name());\n-  name()->print_symbol_on(tty);\n-  signature()->print_symbol_on(tty);\n+  if (is_static())       { st->print(\"static \"); }\n+  if (is_final())        { st->print(\"final \"); }\n+  if (is_synchronized()) { st->print(\"synchronized \"); }\n+  if (is_native())       { st->print(\"native \"); }\n+  st->print(\"%s::\", method_holder()->external_name());\n+  name()->print_symbol_on(st);\n+  signature()->print_symbol_on(st);\n@@ -555,1 +555,1 @@\n-    tty->print(\" {%d}\", code_size());\n+    st->print(\" {%d}\", code_size());\n@@ -557,1 +557,1 @@\n-  tty->cr();\n+  st->cr();\n@@ -564,3 +564,3 @@\n-  tty->print_cr (\"  interpreter_invocation_count: \" INT32_FORMAT_W(11), interpreter_invocation_count());\n-  tty->print_cr (\"  invocation_counter:           \" INT32_FORMAT_W(11), invocation_count());\n-  tty->print_cr (\"  backedge_counter:             \" INT32_FORMAT_W(11), backedge_count());\n+  st->print_cr (\"  interpreter_invocation_count: \" INT32_FORMAT_W(11), interpreter_invocation_count());\n+  st->print_cr (\"  invocation_counter:           \" INT32_FORMAT_W(11), invocation_count());\n+  st->print_cr (\"  backedge_counter:             \" INT32_FORMAT_W(11), backedge_count());\n@@ -569,1 +569,1 @@\n-    tty->print_cr (\"  decompile_count:              \" UINT32_FORMAT_W(11), method_data()->decompile_count());\n+    st->print_cr (\"  decompile_count:              \" UINT32_FORMAT_W(11), method_data()->decompile_count());\n@@ -574,1 +574,1 @@\n-    tty->print_cr (\"  compiled_invocation_count:    \" INT64_FORMAT_W(11), compiled_invocation_count());\n+    st->print_cr (\"  compiled_invocation_count:    \" INT64_FORMAT_W(11), compiled_invocation_count());\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -457,1 +457,1 @@\n-  void print_invocation_count();\n+  void print_invocation_count(outputStream* st);\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,5 +133,10 @@\n-        ttyLocker ttyl;\n-        tty->print_cr(\"------------------------------------------------------------------------\");\n-        m->print_invocation_count();\n-        tty->print_cr(\"  mdo size: %d bytes\", m->method_data()->size_in_bytes());\n-        tty->cr();\n+\n+        \/\/ Instead of taking tty lock, we collect all lines into a string stream\n+        \/\/ and then print them all at once.\n+        ResourceMark rm2;\n+        stringStream ss;\n+\n+        ss.print_cr(\"------------------------------------------------------------------------\");\n+        m->print_invocation_count(&ss);\n+        ss.print_cr(\"  mdo size: %d bytes\", m->method_data()->size_in_bytes());\n+        ss.cr();\n@@ -140,2 +145,2 @@\n-          tty->fill_to(2);\n-          m->method_data()->parameters_type_data()->print_data_on(tty);\n+          ss.fill_to(2);\n+          m->method_data()->parameters_type_data()->print_data_on(&ss);\n@@ -143,1 +148,2 @@\n-        m->print_codes();\n+        m->print_codes_on(&ss);\n+        tty->print(\"%s\", ss.as_string()); \/\/ print all at once\n@@ -195,1 +201,1 @@\n-    if ((iic + cic) >= (uint64_t)MethodHistogramCutoff) m->print_invocation_count();\n+    if ((iic + cic) >= (uint64_t)MethodHistogramCutoff) m->print_invocation_count(tty);\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -162,8 +162,10 @@\n-      ttyLocker ttyl;\n-      tty->print_cr(\"Error in fill_from_frame: pc_desc for \"\n-                    INTPTR_FORMAT \" not found or invalid at %d\",\n-                    p2i(_frame.pc()), decode_offset);\n-      nm()->print();\n-      nm()->method()->print_codes();\n-      nm()->print_code();\n-      nm()->print_pcs();\n+      \/\/ Keep tty output consistent. To avoid ttyLocker, we buffer in stream, and print all at once.\n+      stringStream ss;\n+      ss.print_cr(\"Error in fill_from_frame: pc_desc for \"\n+                  INTPTR_FORMAT \" not found or invalid at %d\",\n+                  p2i(_frame.pc()), decode_offset);\n+      nm()->print_on(&ss);\n+      nm()->method()->print_codes_on(&ss);\n+      nm()->print_code_on(&ss);\n+      nm()->print_pcs_on(&ss);\n+      tty->print(\"%s\", ss.as_string()); \/\/ print all at once\n","filename":"src\/hotspot\/share\/runtime\/vframe.inline.hpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"}]}