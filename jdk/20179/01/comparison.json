{"files":[{"patch":"@@ -93,4 +93,9 @@\n-            \/\/ create and cache generic info repository\n-            genericInfo =\n-                ConstructorRepository.make(getSignature(),\n-                                           getFactory());\n+            var root = this.root;\n+            if (root != null) {\n+                genericInfo = root.getGenericInfo();\n+            } else {\n+                \/\/ create and cache generic info repository\n+                genericInfo =\n+                        ConstructorRepository.make(getSignature(),\n+                                getFactory());\n+            }\n@@ -165,0 +170,1 @@\n+        res.genericInfo = genericInfo;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Constructor.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,3 +112,8 @@\n-            \/\/ create and cache generic info repository\n-            genericInfo = FieldRepository.make(getGenericSignature(),\n-                                               getFactory());\n+            var root = this.root;\n+            if (root != null) {\n+                genericInfo = root.getGenericInfo();\n+            } else {\n+                \/\/ create and cache generic info repository\n+                genericInfo = FieldRepository.make(getGenericSignature(),\n+                        getFactory());\n+            }\n@@ -165,0 +170,1 @@\n+        res.genericInfo = genericInfo;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Field.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -116,3 +116,9 @@\n-            \/\/ create and cache generic info repository\n-            genericInfo = MethodRepository.make(getGenericSignature(),\n-                                                getFactory());\n+            var root = this.root;\n+            if (root != null) {\n+                genericInfo = root.getGenericInfo();\n+            } else {\n+                \/\/ create and cache generic info repository\n+                genericInfo = MethodRepository.make(getGenericSignature(),\n+                        getFactory());\n+            }\n+\n@@ -173,0 +179,1 @@\n+        res.genericInfo = genericInfo;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"}]}