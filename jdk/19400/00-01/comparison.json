{"files":[{"patch":"@@ -603,9 +603,6 @@\n-                if (actuals.length() != (formals == null ? 0 : formals.length())) {\n-                    final List<Type> actualsCp = actuals;\n-                    addSymbolReadListener(t, () -> {\n-                        List<Type> formalsCp = ((ClassType)t.type.tsym.type).typarams_field;\n-                        if (formalsCp != null && !formalsCp.isEmpty()) {\n-                            updateBounds(actualsCp, formalsCp);\n-                        }\n-                    });\n-                }\n+                \/* actualsCp is final as it will be captured by the inner class below. We could avoid defining\n+                 * this additional local variable and depend on field ClassType::typarams_field which `actuals` is\n+                 * assigned to but then we would have a dependendy on the internal representation of ClassType which\n+                 * could change in the future\n+                 *\/\n+                final List<Type> actualsCp = actuals;\n@@ -636,0 +633,6 @@\n+                                if (actualsCp.length() != (formals == null ? 0 : formals.length())) {\n+                                    List<Type> formalsCp = ((ClassType)t.type.tsym.type).typarams_field;\n+                                    if (formalsCp != null && !formalsCp.isEmpty()) {\n+                                        updateBounds(actualsCp, formalsCp);\n+                                    }\n+                                }\n@@ -2911,15 +2914,0 @@\n-    Map<ClassSymbol, java.util.List<SymbolReadListener>> symbolReadListeners = new LinkedHashMap<>();\n-\n-    interface SymbolReadListener {\n-        void symbolRead();\n-    }\n-\n-    private void addSymbolReadListener(ClassSymbol csym, SymbolReadListener listener) {\n-        java.util.List<SymbolReadListener> listeners = symbolReadListeners.get(csym);\n-        if (listeners == null) {\n-            listeners = new ArrayList<>();\n-        }\n-        listeners.add(listener);\n-        symbolReadListeners.put(csym, listeners);\n-    }\n-\n@@ -3011,7 +2999,0 @@\n-        java.util.List<SymbolReadListener> listeners = symbolReadListeners.get(c);\n-        if (listeners != null) {\n-            for (SymbolReadListener listener : listeners) {\n-                listener.symbolRead();\n-            }\n-            symbolReadListeners.remove(c);\n-        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java","additions":12,"deletions":31,"binary":false,"changes":43,"status":"modified"}]}