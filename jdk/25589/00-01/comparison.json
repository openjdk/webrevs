{"files":[{"patch":"@@ -152,0 +152,13 @@\n+static char *computeToken(JLI_List *parts, const char *anchor, const char *nextc) {\n+    char *token;\n+    if ((*parts)->size == 0) {\n+        token = clone_substring(anchor, nextc - anchor);\n+    } else {\n+        JLI_List_addSubstring(*parts, anchor, nextc - anchor);\n+        token = JLI_List_combine(*parts);\n+        JLI_List_free(*parts);\n+        *parts = JLI_List_new(4);\n+    }\n+    return token;\n+}\n+\n@@ -249,8 +262,1 @@\n-                if (pctx->parts->size == 0) {\n-                    token = clone_substring(anchor, nextc - anchor);\n-                } else {\n-                    JLI_List_addSubstring(pctx->parts, anchor, nextc - anchor);\n-                    token = JLI_List_combine(pctx->parts);\n-                    JLI_List_free(pctx->parts);\n-                    pctx->parts = JLI_List_new(4);\n-                }\n+                token = computeToken(&pctx->parts, anchor, nextc);\n@@ -265,1 +271,1 @@\n-                \/\/ return non-zero length token, terminated the comment marker\n+                \/\/ return non-zero length token, terminated by the number sign\n@@ -267,8 +273,1 @@\n-                    if (pctx->parts->size == 0) {\n-                        token = clone_substring(anchor, nextc - anchor);\n-                    } else {\n-                        JLI_List_addSubstring(pctx->parts, anchor, nextc - anchor);\n-                        token = JLI_List_combine(pctx->parts);\n-                        JLI_List_free(pctx->parts);\n-                        pctx->parts = JLI_List_new(4);\n-                    }\n+                    token = computeToken(&pctx->parts, anchor, nextc);\n@@ -278,1 +277,1 @@\n-                \/\/ anchor after hashtag character\n+                \/\/ anchor after number sign\n","filename":"src\/java.base\/share\/native\/libjli\/args.c","additions":17,"deletions":18,"binary":false,"changes":35,"status":"modified"}]}