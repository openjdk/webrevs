{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,0 +173,8 @@\n+            if (!b.getLiveOut().isEmpty()) {\n+                writer.startTag(Parser.LIVEOUT_ELEMENT);\n+                for (Integer lrg : b.getLiveOut()) {\n+                    writer.simpleTag(Parser.LIVE_RANGE_ELEMENT, new Properties(Parser.LIVE_RANGE_ID_PROPERTY, String.valueOf(lrg)));\n+                }\n+                writer.endTag(); \/\/ Parser.LIVEOUT_ELEMENT\n+            }\n+\n@@ -178,0 +186,10 @@\n+        if (!graph.getLiveRanges().isEmpty()) {\n+            writer.startTag(Parser.LIVE_RANGES_ELEMENT);\n+            for (InputLiveRange liveRange : graph.getLiveRanges()) {\n+                writer.startTag(Parser.LIVE_RANGE_ELEMENT, new Properties(Parser.LIVE_RANGE_ID_PROPERTY, String.valueOf(liveRange.getId())));\n+                writer.writeProperties(liveRange.getProperties());\n+                writer.endTag(); \/\/ Parser.LIVE_RANGE_ELEMENT\n+            }\n+            writer.endTag(); \/\/ Parser.LIVE_RANGES_ELEMENT\n+        }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/Printer.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -140,0 +140,12 @@\n+        \/\/ Pre-compute live ranges joined by each block.\n+        Map<InputBlock, Set<Integer>> blockJoined = new HashMap<>();\n+        for (InputBlock b : graph.getBlocks()) {\n+            blockJoined.put(b, new HashSet<>());\n+            for (InputNode n : b.getNodes()) {\n+                LivenessInfo l = graph.getLivenessInfoForNode(n);\n+                if (l != null && l.join != null) {\n+                    blockJoined.get(b).addAll(l.join);\n+                }\n+            }\n+        }\n+\n@@ -146,0 +158,1 @@\n+            Set<Integer> opening = new HashSet<>();\n@@ -151,0 +164,9 @@\n+            Set<Integer> joined = new HashSet<>();\n+            if (b.getSuccessors().size() == 1) {\n+                \/\/ We assume the live-out ranges in this block might only be\n+                \/\/ joined if there is exactly one successor block (i.e. the CFG\n+                \/\/ does not contain critical edges).\n+                joined.addAll(b.getLiveOut());\n+                InputBlock succ = b.getSuccessors().iterator().next();\n+                joined.retainAll(blockJoined.get(succ));\n+            }\n@@ -163,2 +185,6 @@\n-                        liveRangeSegments\n-                            .add(new LiveRangeSegment(liveRangeHash.get(liveRangeId), getBlock(b), start, end));\n+                        LiveRangeSegment s = new LiveRangeSegment(liveRangeHash.get(liveRangeId), getBlock(b), start, end);\n+                        if (opening.contains(liveRangeId)) {\n+                            s.setOpening(true);\n+                        }\n+                        s.setClosing(true);\n+                        liveRangeSegments.add(s);\n@@ -177,0 +203,1 @@\n+                    opening.add(l.def);\n@@ -190,0 +217,6 @@\n+                if (opening.contains(liveRangeId)) {\n+                    s.setOpening(true);\n+                }\n+                if (instant.contains(liveRangeId) || joined.contains(liveRangeId)) {\n+                    s.setClosing(true);\n+                }\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Diagram.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -43,0 +43,2 @@\n+    private boolean opening;\n+    private boolean closing;\n@@ -108,0 +110,16 @@\n+    public void setOpening(boolean opening) {\n+        this.opening = opening;\n+    }\n+\n+    public boolean isOpening() {\n+        return opening;\n+    }\n+\n+    public void setClosing(boolean closing) {\n+        this.closing = closing;\n+    }\n+\n+    public boolean isClosing() {\n+        return closing;\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/LiveRangeSegment.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    private static boolean isPhi(InputNode node) {\n+    private static boolean isPhi(InputNode node, int defLiveRange, List<Integer> uses) {\n@@ -41,1 +41,9 @@\n-        return nodeName.equals(\"Phi\");\n+        if (!nodeName.equals(\"Phi\")) {\n+            return false;\n+        }\n+        Set<Integer> useSet = new HashSet<>(uses);\n+        if (useSet.size() == 1 && useSet.iterator().next() == defLiveRange) {\n+            \/\/ The phi operands have been coalesced, treat as a regular instruction.\n+            return false;\n+        }\n+        return true;\n@@ -63,8 +71,2 @@\n-        boolean empty = true;\n-        for (InputBlock b : graph.getBlocks()) {\n-            if (!b.getLiveOut().isEmpty()) {\n-                empty = false;\n-                break;\n-            }\n-        }\n-        if (empty) { \/\/ No block-level liveness information available, move on.\n+        if (graph.getLiveRanges().isEmpty()) {\n+            \/\/ No block-level liveness information available, move on.\n@@ -106,1 +108,1 @@\n-                    if (isPhi(n)) {\n+                    if (isPhi(n, defLiveRange, uses)) {\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/main\/java\/com\/sun\/hotspot\/igv\/servercompiler\/ServerCompilerPreProcessor.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -138,2 +138,7 @@\n-        if (liveRangeSegment.getStart() != null) {\n-            g.drawLine(-RANGE_WIDTH, 0, RANGE_WIDTH, 0);\n+        int start = 0;\n+        int end = length;\n+        if (length == 0 && !liveRangeSegment.isInstantaneous()) {\n+            \/\/ Continuation segment in empty basic block.\n+            assert liveRangeSegment.getStart() == null && liveRangeSegment.getEnd() == null;\n+            start = -2;\n+            end = 3;\n@@ -141,5 +146,3 @@\n-        if (length != 0) {\n-            g.drawLine(0, 0, 0, length);\n-            if (liveRangeSegment.getEnd() != null) {\n-                g.drawLine(-RANGE_WIDTH, length, RANGE_WIDTH, length);\n-            }\n+        g.drawLine(0, start, 0, end);\n+        if (liveRangeSegment.isOpening()) {\n+            g.drawLine(-RANGE_WIDTH, 0, RANGE_WIDTH, 0);\n@@ -147,5 +150,2 @@\n-        if (liveRangeSegment.getStart() == null &&\n-            liveRangeSegment.getEnd() == null &&\n-            length == 0) {\n-            \/\/ Continuation segment in empty basic block.\n-            g.drawLine(0, -2, 0, 3);\n+        if (liveRangeSegment.isClosing()) {\n+            g.drawLine(-RANGE_WIDTH, end, RANGE_WIDTH, end);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/widgets\/LiveRangeWidget.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}