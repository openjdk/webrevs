{"files":[{"patch":"@@ -253,0 +253,26 @@\n+    \/\/ This test ensures that we do not address outside the segment even though there\n+    \/\/ are odd bytes at the end.\n+    @Test(dataProvider = \"strings\")\n+    public void offBoundaryTrailingBytes(String testString) {\n+        if (testString.length() < 3 || !containsOnlyRegularCharacters(testString)) {\n+            return;\n+        }\n+        for (var charset : standardCharsets()) {\n+            for (var arena: arenas()) {\n+                try (arena) {\n+                    MemorySegment strSegment = arena.allocateFrom(testString, charset);\n+                    \/\/ Add an odd byte at the end\n+                    MemorySegment inSegment = arena.allocate(strSegment.byteSize() + 1);\n+                    \/\/ Make sure there are no null-terminators so that we will try to scan\n+                    \/\/ the entire segment.\n+                    inSegment.fill((byte) 1);\n+                    for (int i = 0; i < 4; i++) {\n+                        final int offset = i;\n+                        var e = expectThrows(IndexOutOfBoundsException.class, () -> inSegment.getString(offset, charset));\n+                        assertTrue(e.getMessage().contains(\"No null terminator found\"));\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestStringEncoding.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"}]}