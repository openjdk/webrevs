{"files":[{"patch":"@@ -136,1 +136,1 @@\n-            throw stringTooLarge(segment, fromOffset, toOffset);\n+            throw nullNotFound(segment, fromOffset, toOffset);\n@@ -169,1 +169,1 @@\n-            throw stringTooLarge(segment, fromOffset, toOffset);\n+            throw nullNotFound(segment, fromOffset, toOffset);\n@@ -204,1 +204,1 @@\n-            throw stringTooLarge(segment, fromOffset, toOffset);\n+            throw nullNotFound(segment, fromOffset, toOffset);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/StringSupport.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -57,0 +57,14 @@\n+    @Test\n+    public void emptySegment() {\n+        for (Charset charset : standardCharsets()) {\n+            for (Arena arena : arenas()) {\n+                try (arena) {\n+                    var segment = arena.allocate(0);\n+                    var e = expectThrows(IndexOutOfBoundsException.class, () ->\n+                            segment.getString(0, charset));\n+                    assertTrue(e.getMessage().contains(\"No null terminator found\"));\n+                }\n+            }\n+        }\n+    }\n+\n@@ -304,0 +318,6 @@\n+                    \/\/ Test end offset\n+                    for (int j = 0; j < len - 1; j++) {\n+                        final long toOffset = j;\n+                        expectThrows(IndexOutOfBoundsException.class, () ->\n+                                StringSupport.strlenByte((AbstractMemorySegmentImpl) segment, 0, toOffset));\n+                    }\n","filename":"test\/jdk\/java\/foreign\/TestStringEncoding.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"}]}