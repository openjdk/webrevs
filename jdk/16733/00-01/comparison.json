{"files":[{"patch":"@@ -233,5 +233,11 @@\n-  \/\/ is equal to bottom except from Remark and until the region has been\n-  \/\/ scrubbed concurrently. The scrubbing ensures that all dead objects (with\n-  \/\/ possibly unloaded classes) have beenreplaced with filler objects that\n-  \/\/ are parsable. Below this limit the marking bitmap must be used to\n-  \/\/ determine size and liveness.\n+  \/\/ is equal to bottom except\n+  \/\/\n+  \/\/ * from Remark and until the region has been scrubbed concurrently. The\n+  \/\/   scrubbing ensures that all dead objects (with possibly unloaded classes)\n+  \/\/   have been replaced with filler objects that are parsable.\n+  \/\/ * after the marking phase in the Full GC pause until the objects have been\n+  \/\/   moved. Some (debug) code iterates over the heap after marking but before\n+  \/\/   compaction.\n+  \/\/\n+  \/\/ Below this limit the marking bitmap must be used to determine size and\n+  \/\/ liveness.\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -171,0 +171,3 @@\n+  \/\/ After marking and class unloading the heap temporarily contains dead objects\n+  \/\/ with unloaded klasses. Moving parsable_bottom makes some (debug) code correctly\n+  \/\/ skip dead objects.\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}