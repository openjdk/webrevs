{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,9 @@\n+\/*\n+ * @test\n+ * @bug 8158633\n+ * @summary BASE64 encoded cert not correctly parsed with UTF-16\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+\n@@ -25,0 +34,2 @@\n+import java.nio.charset.Charset;\n+import java.nio.file.Path;\n@@ -29,3 +40,27 @@\n-        try (FileInputStream fis = new FileInputStream(args[0])) {\n-            CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n-            System.out.println(cf.generateCertificate(fis));\n+\n+        final var certPath = Path.of(System.getProperty(\"test.src\", \".\"))\n+                .getParent()\n+                .resolve(\"HostnameChecker\")\n+                .resolve(\"cert5.crt\")\n+                .toString();\n+\n+        final var testCommand = new String[]{\"-Dfile.encoding=UTF-16\",\n+                PemEncoding.PemEncodingTest.class.getName(),\n+                certPath};\n+\n+        final var result = ProcessTools.executeTestJava(testCommand);\n+        result.shouldHaveExitValue(0);\n+\n+    }\n+\n+    static class PemEncodingTest {\n+        public static void main(String[] args) throws Exception {\n+\n+            try (FileInputStream fis = new FileInputStream(args[0])) {\n+                CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n+                System.out.println(cf.generateCertificate(fis));\n+            }\n+\n+            if (!\"UTF-16\".equals(Charset.defaultCharset().displayName())) {\n+                throw new RuntimeException(\"File encoding is not UTF-16\");\n+            }\n","filename":"test\/jdk\/sun\/security\/util\/Pem\/PemEncoding.java","additions":39,"deletions":4,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -1,35 +0,0 @@\n-#\n-# Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8158633\n-# @summary BASE64 encoded cert not correctly parsed with UTF-16\n-# @build PemEncoding\n-# @run shell encoding.sh\n-\n-# jtreg does not like -Dfile.encoding=UTF-16 inside a @run main line,\n-# therefore a shell test is written.\n-\n-$TESTJAVA\/bin\/java $TESTVMOPTS $TESTJAVAOPTS -cp $TESTCLASSES \\\n-        -Dfile.encoding=UTF-16 \\\n-        PemEncoding $TESTSRC\/..\/HostnameChecker\/cert5.crt\n","filename":"test\/jdk\/sun\/security\/util\/Pem\/encoding.sh","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"}]}