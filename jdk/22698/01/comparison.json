{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,6 +32,15 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.lang.reflect.InvocationTargetException;\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.text.*;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.InputEvent;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.CaretEvent;\n+import javax.swing.event.CaretListener;\n+import javax.swing.text.DefaultStyledDocument;\n+import javax.swing.text.MutableAttributeSet;\n+import javax.swing.text.SimpleAttributeSet;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.StyledEditorKit;\n@@ -41,2 +50,5 @@\n-    private volatile boolean passed = false;\n-    private JEditorPane jep;\n+    private static volatile boolean passed;\n+    private static volatile Point p;\n+    private static volatile Dimension dim;\n+    private static JEditorPane jep;\n+    private static JFrame f;\n@@ -44,22 +56,1 @@\n-    public static void main(final String[] args) {\n-        bug4506788 app = new bug4506788();\n-        app.init();\n-        app.start();\n-    }\n-\n-    public void init() {\n-        try {\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                @Override\n-                public void run() {\n-                    createAndShowGUI();\n-                }\n-            });\n-        } catch (InterruptedException | InvocationTargetException ex) {\n-            ex.printStackTrace();\n-            throw new RuntimeException(\"FAILED: SwingUtilities.invokeAndWait method failed then creating and showing GUI\");\n-        }\n-    }\n-\n-    public void start() {\n-        Robot robot;\n+    public static void main(final String[] args) throws Exception {\n@@ -67,1 +58,1 @@\n-            robot = new Robot();\n+            Robot robot = new Robot();\n@@ -69,26 +60,0 @@\n-        } catch (AWTException e) {\n-            throw new RuntimeException(\"Robot could not be created\");\n-        }\n-\n-        robot.waitForIdle();\n-\n-        Point p;\n-        try {\n-            p = getJEPLocOnScreen();\n-        } catch (Exception e) {\n-            throw new RuntimeException(\"Could not get JEditorPane location on screen\");\n-        }\n-\n-        robot.mouseMove(p.x, p.y);\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-        robot.keyPress(KeyEvent.VK_HOME);\n-        robot.keyRelease(KeyEvent.VK_HOME);\n-        robot.keyPress(KeyEvent.VK_RIGHT);\n-        robot.keyRelease(KeyEvent.VK_RIGHT);\n-        robot.keyPress(KeyEvent.VK_X);\n-        robot.keyRelease(KeyEvent.VK_X);\n-        robot.keyPress(KeyEvent.VK_RIGHT);\n-        robot.keyRelease(KeyEvent.VK_RIGHT);\n-\n-        robot.waitForIdle();\n@@ -96,4 +61,1 @@\n-        if (!passed) {\n-            throw new RuntimeException(\"Test failed.\");\n-        }\n-    }\n+            SwingUtilities.invokeAndWait(() -> createAndShowGUI());\n@@ -101,1 +63,2 @@\n-    private Point getJEPLocOnScreen() throws Exception {\n+            robot.waitForIdle();\n+            robot.delay(1000);\n@@ -103,1 +66,4 @@\n-        final Point[] result = new Point[1];\n+            SwingUtilities.invokeAndWait(() -> {\n+                p = jep.getLocationOnScreen();\n+                dim = jep.getSize();\n+            });\n@@ -105,4 +71,20 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            @Override\n-            public void run() {\n-                result[0] = jep.getLocationOnScreen();\n+            robot.mouseMove(p.x + dim.width \/ 2, p.y + dim.height \/ 2);\n+            robot.waitForIdle();\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.keyPress(KeyEvent.VK_HOME);\n+            robot.keyRelease(KeyEvent.VK_HOME);\n+            robot.waitForIdle();\n+            robot.keyPress(KeyEvent.VK_RIGHT);\n+            robot.keyRelease(KeyEvent.VK_RIGHT);\n+            robot.waitForIdle();\n+            robot.keyPress(KeyEvent.VK_X);\n+            robot.keyRelease(KeyEvent.VK_X);\n+            robot.waitForIdle();\n+            robot.keyPress(KeyEvent.VK_RIGHT);\n+            robot.keyRelease(KeyEvent.VK_RIGHT);\n+            robot.waitForIdle();\n+\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed.\");\n@@ -110,3 +92,7 @@\n-        });\n-\n-        return result[0];\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n@@ -115,1 +101,1 @@\n-    private void createAndShowGUI() {\n+    private static void createAndShowGUI() {\n@@ -118,1 +104,1 @@\n-        JFrame f = new JFrame();\n+        f = new JFrame(\"bug4506788\");\n@@ -124,0 +110,1 @@\n+                System.out.println(\"getDot \" + e.getDot());\n","filename":"test\/jdk\/javax\/swing\/text\/StyledEditorKit\/4506788\/bug4506788.java","additions":60,"deletions":73,"binary":false,"changes":133,"status":"modified"}]}