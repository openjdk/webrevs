{"files":[{"patch":"@@ -111,1 +111,0 @@\n-runtime\/ClassInitErrors\/TestStackOverflowDuringInit.java 8334545 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8309034\n+ * @bug 8309034 8334545\n@@ -30,3 +30,0 @@\n- * @requires os.simpleArch == \"x64\"\n- * @comment The reproducer only fails in the desired way on x64.\n- * @requires vm.flagless\n@@ -34,2 +31,4 @@\n- *\n- * @run main\/othervm -Xss160K -Xint TestStackOverflowDuringInit\n+ * @requires vm.flagless\n+ * @comment Run with the smallest stack possible to limit the execution time.\n+ *          This is the smallest stack that is supported by all platforms.\n+ * @run main\/othervm -Xss240K -Xint TestStackOverflowDuringInit\n@@ -54,0 +53,22 @@\n+    \/\/ Later changes to the JDK meant that LongCache was initialized before\n+    \/\/ the test even started under jtreg so we define local versions.\n+\n+    static class LongCache {\n+        \/\/ Must have a static initializer\n+        static {\n+            System.out.println(\"LongCache is initializing\");\n+        }\n+        static java.lang.Long valueOf(long l) {\n+            return Long.valueOf(l);\n+        }\n+    }\n+\n+    static class MyLong {\n+        static java.lang.Long valueOf(long l) {\n+            if (l > -128 && l < 127) {\n+                return LongCache.valueOf(l);\n+            } else {\n+                return Long.valueOf(l);\n+            }\n+        }\n+    }\n@@ -57,2 +78,2 @@\n-            \/\/ This will initialize Long but not touch LongCache.\n-            Long.valueOf(1024L);\n+            \/\/ This will initialize MyLong but not touch LongCache.\n+            MyLong.valueOf(1024L);\n@@ -66,1 +87,1 @@\n-            Long.valueOf(0);\n+            MyLong.valueOf(0);\n@@ -71,1 +92,1 @@\n-        String expected = \"java.lang.NoClassDefFoundError: Could not initialize class java.lang.Long$LongCache\";\n+        String expected = \"java.lang.NoClassDefFoundError: Could not initialize class TestStackOverflowDuringInit$LongCache\";\n@@ -74,0 +95,6 @@\n+        \/\/ Pre-load, but not initialize, LongCache, else we will\n+        \/\/ hit SOE during class loading.\n+        System.out.println(\"Pre-loading ...\");\n+        Class<?> c = Class.forName(\"TestStackOverflowDuringInit$LongCache\",\n+                                   false,\n+                                   TestStackOverflowDuringInit.class.getClassLoader());\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassInitErrors\/TestStackOverflowDuringInit.java","additions":38,"deletions":11,"binary":false,"changes":49,"status":"modified"}]}