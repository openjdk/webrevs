{"files":[{"patch":"@@ -231,0 +231,5 @@\n+  if (set->_blocks == nullptr) {\n+    _blocks = nullptr;\n+    _arena = arena();\n+    return;\n+  }\n@@ -261,9 +266,2 @@\n-\n-  if (_max_blocks <= preallocated_block_list_size) {\n-    _blocks = _preallocated_block_list;\n-  } else {\n-    _blocks = (IndexSet::BitBlock**) arena()->AmallocWords(sizeof(IndexSet::BitBlock*) * _max_blocks);\n-  }\n-  for (uint i = 0; i < _max_blocks; i++) {\n-    set_block(i, &_empty_block);\n-  }\n+  _arena = arena();\n+  _blocks = nullptr;\n@@ -286,9 +284,2 @@\n-\n-  if (_max_blocks <= preallocated_block_list_size) {\n-    _blocks = _preallocated_block_list;\n-  } else {\n-    _blocks = (IndexSet::BitBlock**) arena->AmallocWords(sizeof(IndexSet::BitBlock*) * _max_blocks);\n-  }\n-  for (uint i = 0; i < _max_blocks; i++) {\n-    set_block(i, &_empty_block);\n-  }\n+  _arena = arena;\n+  _blocks = nullptr;\n@@ -307,0 +298,6 @@\n+  if (_blocks == nullptr && set->_blocks == nullptr) {\n+    return;\n+  }\n+  initialize_if_needed();\n+  set->initialize_if_needed();\n+\n@@ -347,1 +344,1 @@\n-    if (_blocks[i] != &_empty_block) {\n+    if (_blocks != nullptr && _blocks[i] != &_empty_block) {\n","filename":"src\/hotspot\/share\/opto\/indexSet.cpp","additions":16,"deletions":19,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -207,0 +207,2 @@\n+  Arena* _arena;\n+\n@@ -255,4 +257,6 @@\n-    for (uint i = 0; i < _current_block_limit; i++) {\n-      BitBlock *block = _blocks[i];\n-      if (block != &_empty_block) {\n-        free_block(i);\n+    if (_blocks != nullptr) {\n+      for (uint i = 0; i < _current_block_limit; i++) {\n+        BitBlock* block = _blocks[i];\n+        if (block != &_empty_block) {\n+          free_block(i);\n+        }\n@@ -269,0 +273,3 @@\n+    if (_blocks == nullptr) {\n+      return false;\n+    }\n@@ -276,0 +283,1 @@\n+    initialize_if_needed();\n@@ -288,0 +296,3 @@\n+    if (_blocks == nullptr) {\n+      return false;\n+    }\n@@ -322,0 +333,15 @@\n+  \/\/ Top level array of pointers to BitBlocks is allocated on first element addition to avoid wasting memory.\n+  void initialize_if_needed() {\n+    if (_blocks != nullptr) {\n+      return;\n+    }\n+    if (_max_blocks <= preallocated_block_list_size) {\n+      _blocks = _preallocated_block_list;\n+    } else {\n+      _blocks = (IndexSet::BitBlock**) _arena->AmallocWords(sizeof(IndexSet::BitBlock*) * _max_blocks);\n+    }\n+    for (uint i = 0; i < _max_blocks; i++) {\n+      set_block(i, &_empty_block);\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/indexSet.hpp","additions":30,"deletions":4,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n- *                   -XX:CompileCommand=MemLimit,*.*,0\n","filename":"test\/hotspot\/jtreg\/compiler\/escapeAnalysis\/TestFindInstMemRecursion.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}