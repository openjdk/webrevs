{"files":[{"patch":"@@ -2518,1 +2518,1 @@\n-        C->print_method(PHASE_AFTER_MACRO_EXPANSION_ELIMINATE, 4, n);\n+        C->print_method(PHASE_AFTER_MACRO_EXPANSION_ELIMINATE, 5, n);\n@@ -2580,1 +2580,1 @@\n-    C->print_method(PHASE_AFTER_MACRO_EXPANSION_ARRAYCOPY, 4, n);\n+    C->print_method(PHASE_AFTER_MACRO_EXPANSION_ARRAYCOPY, 5, n);\n@@ -2623,1 +2623,1 @@\n-    C->print_method(PHASE_AFTER_MACRO_EXPANSION_ALLOCATE, 4, n);\n+    C->print_method(PHASE_AFTER_MACRO_EXPANSION_ALLOCATE, 5, n);\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,3 +33,2 @@\n-* `N=4`: additionally, after individual steps within phases. Currently: loop\n-  optimizations, macro expansions.\n-* `N=5`: additionally, after every effective IGVN step (slow)\n+* `N=4`: additionally, after every loop optimization\n+* `N=5`: additionally, after every effective IGVN step and every macro expansion (slow)\n","filename":"src\/utils\/IdealGraphVisualizer\/README.md","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestModDivTopInput.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPeelingSkeletonPredicateInitialization.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}