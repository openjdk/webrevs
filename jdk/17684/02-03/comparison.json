{"files":[{"patch":"@@ -2518,1 +2518,1 @@\n-        C->print_method(PHASE_AFTER_MACRO_EXPANSION_ELIMINATE, 5, n);\n+        C->print_method(PHASE_AFTER_MACRO_EXPANSION_STEP, 5, n);\n@@ -2580,1 +2580,1 @@\n-    C->print_method(PHASE_AFTER_MACRO_EXPANSION_ARRAYCOPY, 5, n);\n+    C->print_method(PHASE_AFTER_MACRO_EXPANSION_STEP, 5, n);\n@@ -2623,1 +2623,1 @@\n-    C->print_method(PHASE_AFTER_MACRO_EXPANSION_ALLOCATE, 5, n);\n+    C->print_method(PHASE_AFTER_MACRO_EXPANSION_STEP, 5, n);\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,75 +31,73 @@\n-  flags(BEFORE_STRINGOPTS,               \"Before StringOpts\") \\\n-  flags(AFTER_STRINGOPTS,                \"After StringOpts\") \\\n-  flags(BEFORE_REMOVEUSELESS,            \"Before RemoveUseless\") \\\n-  flags(AFTER_PARSING,                   \"After Parsing\") \\\n-  flags(BEFORE_ITER_GVN,                 \"Before Iter GVN\") \\\n-  flags(ITER_GVN1,                       \"Iter GVN 1\") \\\n-  flags(AFTER_ITER_GVN_STEP,             \"After Iter GVN Step\") \\\n-  flags(AFTER_ITER_GVN,                  \"After Iter GVN\") \\\n-  flags(INCREMENTAL_INLINE_STEP,         \"Incremental Inline Step\") \\\n-  flags(INCREMENTAL_INLINE_CLEANUP,      \"Incremental Inline Cleanup\") \\\n-  flags(INCREMENTAL_INLINE,              \"Incremental Inline\") \\\n-  flags(INCREMENTAL_BOXING_INLINE,       \"Incremental Boxing Inline\") \\\n-  flags(EXPAND_VUNBOX,                   \"Expand VectorUnbox\") \\\n-  flags(SCALARIZE_VBOX,                  \"Scalarize VectorBox\") \\\n-  flags(INLINE_VECTOR_REBOX,             \"Inline Vector Rebox Calls\") \\\n-  flags(EXPAND_VBOX,                     \"Expand VectorBox\") \\\n-  flags(ELIMINATE_VBOX_ALLOC,            \"Eliminate VectorBoxAllocate\") \\\n-  flags(ITER_GVN_BEFORE_EA,              \"Iter GVN before EA\") \\\n-  flags(ITER_GVN_AFTER_VECTOR,           \"Iter GVN after vector box elimination\") \\\n-  flags(BEFORE_BEAUTIFY_LOOPS,           \"Before beautify loops\") \\\n-  flags(AFTER_BEAUTIFY_LOOPS,            \"After beautify loops\") \\\n-  flags(BEFORE_LOOP_UNROLLING,           \"Before Loop Unrolling\") \\\n-  flags(AFTER_LOOP_UNROLLING,            \"After Loop Unrolling\") \\\n-  flags(BEFORE_SPLIT_IF,                 \"Before Split-If\") \\\n-  flags(AFTER_SPLIT_IF,                  \"After Split-If\") \\\n-  flags(BEFORE_LOOP_PREDICATION_IC,      \"Before Loop Predication IC\") \\\n-  flags(AFTER_LOOP_PREDICATION_IC,       \"After Loop Predication IC\") \\\n-  flags(BEFORE_LOOP_PREDICATION_RC,      \"Before Loop Predication RC\") \\\n-  flags(AFTER_LOOP_PREDICATION_RC,       \"After Loop Predication RC\") \\\n-  flags(BEFORE_PARTIAL_PEELING,          \"Before Partial Peeling\") \\\n-  flags(AFTER_PARTIAL_PEELING,           \"After Partial Peeling\") \\\n-  flags(BEFORE_LOOP_PEELING,             \"Before Loop Peeling\") \\\n-  flags(AFTER_LOOP_PEELING,              \"After Loop Peeling\") \\\n-  flags(BEFORE_LOOP_UNSWITCHING,         \"Before Loop Unswitching\") \\\n-  flags(AFTER_LOOP_UNSWITCHING,          \"After Loop Unswitching\") \\\n-  flags(BEFORE_RANGE_CHECK_ELIMINATION,  \"Before Range Check Elimination\") \\\n-  flags(AFTER_RANGE_CHECK_ELIMINATION,   \"After Range Check Elimination\") \\\n-  flags(BEFORE_PRE_MAIN_POST,            \"Before Pre\/Main\/Post Loops\") \\\n-  flags(AFTER_PRE_MAIN_POST,             \"After Pre\/Main\/Post Loops\") \\\n-  flags(SUPERWORD1_BEFORE_SCHEDULE,      \"Superword 1, Before Schedule\") \\\n-  flags(SUPERWORD2_BEFORE_OUTPUT,        \"Superword 2, Before Output\") \\\n-  flags(SUPERWORD3_AFTER_OUTPUT,         \"Superword 3, After Output\") \\\n-  flags(BEFORE_CLOOPS,                   \"Before CountedLoop\") \\\n-  flags(AFTER_CLOOPS,                    \"After CountedLoop\") \\\n-  flags(PHASEIDEAL_BEFORE_EA,            \"PhaseIdealLoop before EA\") \\\n-  flags(AFTER_EA,                        \"After Escape Analysis\") \\\n-  flags(ITER_GVN_AFTER_EA,               \"Iter GVN after EA\") \\\n-  flags(ITER_GVN_AFTER_ELIMINATION,      \"Iter GVN after eliminating allocations and locks\") \\\n-  flags(PHASEIDEALLOOP1,                 \"PhaseIdealLoop 1\") \\\n-  flags(PHASEIDEALLOOP2,                 \"PhaseIdealLoop 2\") \\\n-  flags(PHASEIDEALLOOP3,                 \"PhaseIdealLoop 3\") \\\n-  flags(BEFORE_CCP1,                     \"Before PhaseCCP 1\") \\\n-  flags(CCP1,                            \"PhaseCCP 1\") \\\n-  flags(ITER_GVN2,                       \"Iter GVN 2\") \\\n-  flags(PHASEIDEALLOOP_ITERATIONS,       \"PhaseIdealLoop iterations\") \\\n-  flags(BEFORE_MACRO_EXPANSION ,         \"Before Macro Expansion\") \\\n-  flags(AFTER_MACRO_EXPANSION_ELIMINATE, \"After Eliminate Macro Expansion\") \\\n-  flags(AFTER_MACRO_EXPANSION_ARRAYCOPY, \"After ArrayCopy Macro Expansion\") \\\n-  flags(AFTER_MACRO_EXPANSION_ALLOCATE,  \"After Allocate Macro Expansion\") \\\n-  flags(AFTER_MACRO_EXPANSION,           \"After Macro Expansion\") \\\n-  flags(BARRIER_EXPANSION,               \"Barrier expand\") \\\n-  flags(OPTIMIZE_FINISHED,               \"Optimize finished\") \\\n-  flags(BEFORE_MATCHING,                 \"Before matching\") \\\n-  flags(MATCHING,                        \"After matching\") \\\n-  flags(GLOBAL_CODE_MOTION,              \"Global code motion\") \\\n-  flags(REGISTER_ALLOCATION,             \"Register Allocation\") \\\n-  flags(BLOCK_ORDERING,                  \"Block Ordering\") \\\n-  flags(PEEPHOLE,                        \"Peephole\") \\\n-  flags(POSTALLOC_EXPAND,                \"Post-Allocation Expand\") \\\n-  flags(MACH_ANALYSIS,                   \"After mach analysis\") \\\n-  flags(FINAL_CODE,                      \"Final Code\") \\\n-  flags(END,                             \"End\") \\\n-  flags(FAILURE,                         \"Failure\") \\\n-  flags(ALL,                             \"All\") \\\n-  flags(DEBUG,                           \"Debug\")\n+  flags(BEFORE_STRINGOPTS,              \"Before StringOpts\") \\\n+  flags(AFTER_STRINGOPTS,               \"After StringOpts\") \\\n+  flags(BEFORE_REMOVEUSELESS,           \"Before RemoveUseless\") \\\n+  flags(AFTER_PARSING,                  \"After Parsing\") \\\n+  flags(BEFORE_ITER_GVN,                \"Before Iter GVN\") \\\n+  flags(ITER_GVN1,                      \"Iter GVN 1\") \\\n+  flags(AFTER_ITER_GVN_STEP,            \"After Iter GVN Step\") \\\n+  flags(AFTER_ITER_GVN,                 \"After Iter GVN\") \\\n+  flags(INCREMENTAL_INLINE_STEP,        \"Incremental Inline Step\") \\\n+  flags(INCREMENTAL_INLINE_CLEANUP,     \"Incremental Inline Cleanup\") \\\n+  flags(INCREMENTAL_INLINE,             \"Incremental Inline\") \\\n+  flags(INCREMENTAL_BOXING_INLINE,      \"Incremental Boxing Inline\") \\\n+  flags(EXPAND_VUNBOX,                  \"Expand VectorUnbox\") \\\n+  flags(SCALARIZE_VBOX,                 \"Scalarize VectorBox\") \\\n+  flags(INLINE_VECTOR_REBOX,            \"Inline Vector Rebox Calls\") \\\n+  flags(EXPAND_VBOX,                    \"Expand VectorBox\") \\\n+  flags(ELIMINATE_VBOX_ALLOC,           \"Eliminate VectorBoxAllocate\") \\\n+  flags(ITER_GVN_BEFORE_EA,             \"Iter GVN before EA\") \\\n+  flags(ITER_GVN_AFTER_VECTOR,          \"Iter GVN after vector box elimination\") \\\n+  flags(BEFORE_BEAUTIFY_LOOPS,          \"Before beautify loops\") \\\n+  flags(AFTER_BEAUTIFY_LOOPS,           \"After beautify loops\") \\\n+  flags(BEFORE_LOOP_UNROLLING,          \"Before Loop Unrolling\") \\\n+  flags(AFTER_LOOP_UNROLLING,           \"After Loop Unrolling\") \\\n+  flags(BEFORE_SPLIT_IF,                \"Before Split-If\") \\\n+  flags(AFTER_SPLIT_IF,                 \"After Split-If\") \\\n+  flags(BEFORE_LOOP_PREDICATION_IC,     \"Before Loop Predication IC\") \\\n+  flags(AFTER_LOOP_PREDICATION_IC,      \"After Loop Predication IC\") \\\n+  flags(BEFORE_LOOP_PREDICATION_RC,     \"Before Loop Predication RC\") \\\n+  flags(AFTER_LOOP_PREDICATION_RC,      \"After Loop Predication RC\") \\\n+  flags(BEFORE_PARTIAL_PEELING,         \"Before Partial Peeling\") \\\n+  flags(AFTER_PARTIAL_PEELING,          \"After Partial Peeling\") \\\n+  flags(BEFORE_LOOP_PEELING,            \"Before Loop Peeling\") \\\n+  flags(AFTER_LOOP_PEELING,             \"After Loop Peeling\") \\\n+  flags(BEFORE_LOOP_UNSWITCHING,        \"Before Loop Unswitching\") \\\n+  flags(AFTER_LOOP_UNSWITCHING,         \"After Loop Unswitching\") \\\n+  flags(BEFORE_RANGE_CHECK_ELIMINATION, \"Before Range Check Elimination\") \\\n+  flags(AFTER_RANGE_CHECK_ELIMINATION,  \"After Range Check Elimination\") \\\n+  flags(BEFORE_PRE_MAIN_POST,           \"Before Pre\/Main\/Post Loops\") \\\n+  flags(AFTER_PRE_MAIN_POST,            \"After Pre\/Main\/Post Loops\") \\\n+  flags(SUPERWORD1_BEFORE_SCHEDULE,     \"Superword 1, Before Schedule\") \\\n+  flags(SUPERWORD2_BEFORE_OUTPUT,       \"Superword 2, Before Output\") \\\n+  flags(SUPERWORD3_AFTER_OUTPUT,        \"Superword 3, After Output\") \\\n+  flags(BEFORE_CLOOPS,                  \"Before CountedLoop\") \\\n+  flags(AFTER_CLOOPS,                   \"After CountedLoop\") \\\n+  flags(PHASEIDEAL_BEFORE_EA,           \"PhaseIdealLoop before EA\") \\\n+  flags(AFTER_EA,                       \"After Escape Analysis\") \\\n+  flags(ITER_GVN_AFTER_EA,              \"Iter GVN after EA\") \\\n+  flags(ITER_GVN_AFTER_ELIMINATION,     \"Iter GVN after eliminating allocations and locks\") \\\n+  flags(PHASEIDEALLOOP1,                \"PhaseIdealLoop 1\") \\\n+  flags(PHASEIDEALLOOP2,                \"PhaseIdealLoop 2\") \\\n+  flags(PHASEIDEALLOOP3,                \"PhaseIdealLoop 3\") \\\n+  flags(BEFORE_CCP1,                    \"Before PhaseCCP 1\") \\\n+  flags(CCP1,                           \"PhaseCCP 1\") \\\n+  flags(ITER_GVN2,                      \"Iter GVN 2\") \\\n+  flags(PHASEIDEALLOOP_ITERATIONS,      \"PhaseIdealLoop iterations\") \\\n+  flags(BEFORE_MACRO_EXPANSION ,        \"Before Macro Expansion\") \\\n+  flags(AFTER_MACRO_EXPANSION_STEP,     \"After Macro Expansion Step\") \\\n+  flags(AFTER_MACRO_EXPANSION,          \"After Macro Expansion\") \\\n+  flags(BARRIER_EXPANSION,              \"Barrier expand\") \\\n+  flags(OPTIMIZE_FINISHED,              \"Optimize finished\") \\\n+  flags(BEFORE_MATCHING,                \"Before matching\") \\\n+  flags(MATCHING,                       \"After matching\") \\\n+  flags(GLOBAL_CODE_MOTION,             \"Global code motion\") \\\n+  flags(REGISTER_ALLOCATION,            \"Register Allocation\") \\\n+  flags(BLOCK_ORDERING,                 \"Block Ordering\") \\\n+  flags(PEEPHOLE,                       \"Peephole\") \\\n+  flags(POSTALLOC_EXPAND,               \"Post-Allocation Expand\") \\\n+  flags(MACH_ANALYSIS,                  \"After mach analysis\") \\\n+  flags(FINAL_CODE,                     \"Final Code\") \\\n+  flags(END,                            \"End\") \\\n+  flags(FAILURE,                        \"Failure\") \\\n+  flags(ALL,                            \"All\") \\\n+  flags(DEBUG,                          \"Debug\")\n","filename":"src\/hotspot\/share\/opto\/phasetype.hpp","additions":73,"deletions":75,"binary":false,"changes":148,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-* `N=5`: additionally, after every effective IGVN step and every macro expansion (slow)\n+* `N=5`: additionally, after every effective IGVN and every macro expansion step (slow)\n","filename":"src\/utils\/IdealGraphVisualizer\/README.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-                          \"CompileCommand=PrintIdealPhase,*::*,AFTER_MACRO_EXPANSION_ELIMINATE,AFTER_MACRO_EXPANSION_ARRAYCOPY,AFTER_MACRO_EXPANSION_ALLOCATE\",\n+                          \"CompileCommand=PrintIdealPhase,*::*,AFTER_MACRO_EXPANSION_STEP\",\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestStress.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,3 +99,1 @@\n-    AFTER_MACRO_EXPANSION_ELIMINATE(\"After Eliminate Macro Expansion\"),\n-    AFTER_MACRO_EXPANSION_ARRAYCOPY(\"After ArrayCopy Macro Expansion\"),\n-    AFTER_MACRO_EXPANSION_ALLOCATE(\"After Allocate Macro Expansion\"),\n+    AFTER_MACRO_EXPANSION_STEP(\"After Macro Expansion Step\"),\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/CompilePhase.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}