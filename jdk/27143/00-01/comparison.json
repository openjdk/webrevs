{"files":[{"patch":"@@ -126,18 +126,10 @@\n-                if (addressStart.compareTo(heapStart) <= 0 && heapStart.compareTo(addressEnd) < 0) {\n-                    \/\/ Found a range that contains the start of the heap, verify that it is THP eligible.\n-                    while (smapsFile.hasNextLine()) {\n-                        Matcher m = thpEligiblePattern.matcher(smapsFile.nextLine());\n-                        if (!m.matches()) {\n-                            continue;\n-                        }\n-\n-                        \/\/ Found the THPeligible line\n-                        if (m.group(1).equals(\"1\")) {\n-                            \/\/ Success - THPeligible is 1, heap can be backed by huge pages\n-                            return;\n-                        }\n-\n-                        throw new RuntimeException(\"The address range 0x\" + addressStart.toString(16)\n-                                                   + \"-0x\" + addressEnd.toString(16)\n-                                                   + \" that contains the heap start\" + heapStart\n-                                                   + \" is not THPeligible\");\n+                if (addressStart.compareTo(heapStart) > 0 || heapStart.compareTo(addressEnd) >= 0) {\n+                    continue;\n+                }\n+\n+                \/\/ Found a range that contains the start of the heap, verify that it is THP eligible.\n+\n+                while (smapsFile.hasNextLine()) {\n+                    Matcher m = thpEligiblePattern.matcher(smapsFile.nextLine());\n+                    if (!m.matches()) {\n+                        continue;\n@@ -146,1 +138,11 @@\n-                    throw new RuntimeException(\"Couldn't find THPeligible in the smaps file\");\n+                    \/\/ Found the THPeligible line\n+\n+                    if (m.group(1).equals(\"1\")) {\n+                        \/\/ Success - THPeligible is 1, heap can be backed by huge pages\n+                        return;\n+                    }\n+\n+                    throw new RuntimeException(\"The address range 0x\" + addressStart.toString(16)\n+                                               + \"-0x\" + addressEnd.toString(16)\n+                                               + \" that contains the heap start\" + heapStart\n+                                               + \" is not THPeligible\");\n@@ -148,0 +150,2 @@\n+\n+                throw new RuntimeException(\"Couldn't find THPeligible in the smaps file\");\n","filename":"test\/hotspot\/jtreg\/gc\/TestTransparentHugePagesHeap.java","additions":23,"deletions":19,"binary":false,"changes":42,"status":"modified"}]}