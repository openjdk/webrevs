{"files":[{"patch":"@@ -40,6 +40,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -47,0 +42,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -110,1 +111,1 @@\n-            content.add(new HtmlTree(TagName.WBR));\n+            content.add(new HtmlTree(HtmlTag.WBR));\n@@ -122,1 +123,1 @@\n-        Content memberLink = writer.getDocLink(context, te, ee, name(ee), HtmlStyle.memberNameLink);\n+        Content memberLink = writer.getDocLink(context, te, ee, name(ee), HtmlStyles.memberNameLink);\n@@ -216,1 +217,1 @@\n-            target.add(new HtmlTree(TagName.WBR));\n+            target.add(new HtmlTree(HtmlTag.WBR));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractExecutableMemberWriter.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -47,5 +47,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -56,0 +52,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -453,1 +454,1 @@\n-        var code = new HtmlTree(TagName.CODE);\n+        var code = new HtmlTree(HtmlTag.CODE);\n@@ -475,1 +476,1 @@\n-                    code.add(new HtmlTree(TagName.BR));\n+                    code.add(new HtmlTree(HtmlTag.BR));\n@@ -529,1 +530,1 @@\n-            target.add(HtmlTree.DIV(HtmlStyle.deprecationBlock, output));\n+            target.add(HtmlTree.DIV(HtmlStyles.deprecationBlock, output));\n@@ -581,1 +582,1 @@\n-        var useTable = new Table<Void>(HtmlStyle.summaryTable)\n+        var useTable = new Table<Void>(HtmlStyles.summaryTable)\n@@ -583,1 +584,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast);\n@@ -599,1 +600,1 @@\n-                var name = HtmlTree.SPAN(HtmlStyle.typeNameLabel);\n+                var name = HtmlTree.SPAN(HtmlStyles.typeNameLabel);\n@@ -680,1 +681,1 @@\n-        return new HtmlTree(TagName.CODE);\n+        return new HtmlTree(HtmlTag.CODE);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -28,4 +28,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -33,1 +29,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -36,0 +33,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.RawHtml;\n@@ -138,2 +139,2 @@\n-                    HtmlStyle.title, title);\n-            var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                    HtmlStyles.title, title);\n+            var div = HtmlTree.DIV(HtmlStyles.header, heading);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractOverviewIndexWriter.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,8 +28,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.toolkit.util.ClassTree;\n-import jdk.javadoc.internal.doclets.toolkit.util.ClassTree.Hierarchy;\n-import jdk.javadoc.internal.doclets.toolkit.util.DocPath;\n-\n-import javax.lang.model.element.TypeElement;\n@@ -40,0 +32,10 @@\n+import javax.lang.model.element.TypeElement;\n+\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n+import jdk.javadoc.internal.doclets.toolkit.util.ClassTree;\n+import jdk.javadoc.internal.doclets.toolkit.util.ClassTree.Hierarchy;\n+import jdk.javadoc.internal.doclets.toolkit.util.DocPath;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+\n@@ -80,1 +82,1 @@\n-            var ul = new HtmlTree(TagName.UL);\n+            var ul = new HtmlTree(HtmlTag.UL);\n@@ -82,2 +84,2 @@\n-                var li = new HtmlTree(TagName.LI);\n-                li.setStyle(HtmlStyle.circle);\n+                var li = new HtmlTree(HtmlTag.LI);\n+                li.setStyle(HtmlStyles.circle);\n@@ -107,1 +109,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.hierarchy, sectionHeading);\n+            var section = HtmlTree.SECTION(HtmlStyles.hierarchy, sectionHeading);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractTreeWriter.java","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -36,4 +36,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+\n@@ -41,0 +38,2 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -44,0 +43,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -82,1 +84,1 @@\n-        var table = new Table<TypeElement>(HtmlStyle.summaryTable)\n+        var table = new Table<TypeElement>(HtmlStyles.summaryTable)\n@@ -84,1 +86,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast)\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast)\n@@ -99,2 +101,2 @@\n-                HtmlStyle.title, titleContent);\n-        var headerDiv = HtmlTree.DIV(HtmlStyle.header, pHeading);\n+                HtmlStyles.title, titleContent);\n+        var headerDiv = HtmlTree.DIV(HtmlStyles.header, pHeading);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllClassesIndexWriter.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,4 +32,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -38,0 +35,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -63,2 +64,2 @@\n-                HtmlStyle.title, titleContent);\n-        var headerDiv = HtmlTree.DIV(HtmlStyle.header, pHeading);\n+                HtmlStyles.title, titleContent);\n+        var headerDiv = HtmlTree.DIV(HtmlStyles.header, pHeading);\n@@ -80,1 +81,1 @@\n-        var table = new Table<PackageElement>(HtmlStyle.summaryTable)\n+        var table = new Table<PackageElement>(HtmlStyles.summaryTable)\n@@ -83,1 +84,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AllPackagesIndexWriter.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -35,5 +35,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Comment;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -42,0 +38,5 @@\n+import jdk.javadoc.internal.html.Comment;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -99,1 +100,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -184,1 +185,1 @@\n-        writer.addSummary(HtmlStyle.memberSummary,\n+        writer.addSummary(HtmlStyles.memberSummary,\n@@ -212,1 +213,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, content)\n+        return HtmlTree.SECTION(HtmlStyles.detail, content)\n@@ -241,1 +242,1 @@\n-        return getMember(HtmlTree.SECTION(HtmlStyle.memberDetails, c));\n+        return getMember(HtmlTree.SECTION(HtmlStyles.memberDetails, c));\n@@ -281,1 +282,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -284,1 +285,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast);\n@@ -295,1 +296,1 @@\n-                name(member), HtmlStyle.memberNameLink);\n+                name(member), HtmlStyles.memberNameLink);\n@@ -334,1 +335,1 @@\n-                var dl = HtmlTree.DL(HtmlStyle.notes);\n+                var dl = HtmlTree.DL(HtmlStyles.notes);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeMemberWriter.java","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -41,4 +41,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -46,0 +42,1 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -53,0 +50,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -247,1 +248,1 @@\n-        var table = new Table<Void>(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -250,1 +251,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -273,1 +274,1 @@\n-        var table = new Table<Void>(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -276,1 +277,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -291,1 +292,1 @@\n-        var ul = HtmlTree.UL(HtmlStyle.blockList);\n+        var ul = HtmlTree.UL(HtmlStyles.blockList);\n@@ -293,1 +294,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.detail)\n+            var section = HtmlTree.SECTION(HtmlStyles.detail)\n@@ -304,1 +305,1 @@\n-        var li = HtmlTree.SECTION(HtmlStyle.classUses, ul);\n+        var li = HtmlTree.SECTION(HtmlStyles.classUses, ul);\n@@ -425,1 +426,1 @@\n-        headingContent.add(new HtmlTree(TagName.BR));\n+        headingContent.add(new HtmlTree(HtmlTag.BR));\n@@ -428,2 +429,2 @@\n-                HtmlStyle.title, headingContent);\n-        var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                HtmlStyles.title, headingContent);\n+        var div = HtmlTree.DIV(HtmlStyles.header, heading);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -48,6 +48,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -61,0 +56,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -157,1 +158,1 @@\n-        Content c = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+        Content c = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -433,1 +434,1 @@\n-        var div = HtmlTree.DIV(HtmlStyle.header);\n+        var div = HtmlTree.DIV(HtmlStyles.header);\n@@ -438,1 +439,1 @@\n-                HtmlStyle.title, Text.of(header));\n+                HtmlStyles.title, Text.of(header));\n@@ -466,1 +467,1 @@\n-        return getMember(HtmlIds.CLASS_DESCRIPTION, HtmlStyle.classDescription, classInfo);\n+        return getMember(HtmlIds.CLASS_DESCRIPTION, HtmlStyles.classDescription, classInfo);\n@@ -475,1 +476,1 @@\n-        classInfo.add(new HtmlTree(TagName.HR));\n+        classInfo.add(new HtmlTree(HtmlTag.HR));\n@@ -517,1 +518,1 @@\n-            var entry = HtmlTree.DIV(HtmlStyle.inheritance, getClassHelperContent(type));\n+            var entry = HtmlTree.DIV(HtmlStyles.inheritance, getClassHelperContent(type));\n@@ -567,1 +568,1 @@\n-                target.add(HtmlTree.DL(HtmlStyle.notes, paramInfo));\n+                target.add(HtmlTree.DL(HtmlStyles.notes, paramInfo));\n@@ -581,1 +582,1 @@\n-                var dl = HtmlTree.DL(HtmlStyle.notes);\n+                var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -593,1 +594,1 @@\n-                var dl = HtmlTree.DL(HtmlStyle.notes);\n+                var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -612,1 +613,1 @@\n-            var dl = HtmlTree.DL(HtmlStyle.notes);\n+            var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -623,1 +624,1 @@\n-            var dl = HtmlTree.DL(HtmlStyle.notes);\n+            var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -636,1 +637,1 @@\n-            var dl = HtmlTree.DL(HtmlStyle.notes);\n+            var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -650,1 +651,1 @@\n-                var dl = HtmlTree.DL(HtmlStyle.notes);\n+                var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -663,1 +664,1 @@\n-            var dl = HtmlTree.DL(HtmlStyle.notes);\n+            var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -665,1 +666,1 @@\n-            var dd = new HtmlTree(TagName.DD);\n+            var dd = new HtmlTree(HtmlTag.DD);\n@@ -675,2 +676,2 @@\n-            var deprLabel = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(typeElement));\n-            var div = HtmlTree.DIV(HtmlStyle.deprecationBlock, deprLabel);\n+            var deprLabel = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(typeElement));\n+            var div = HtmlTree.DIV(HtmlStyles.deprecationBlock, deprLabel);\n@@ -729,1 +730,1 @@\n-        var section = HtmlTree.SECTION(HtmlStyle.details, content);\n+        var section = HtmlTree.SECTION(HtmlStyles.details, content);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriter.java","additions":25,"deletions":24,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -42,7 +42,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -50,1 +43,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -56,0 +50,7 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -331,2 +332,2 @@\n-                 HtmlStyle.title, titleContent);\n-         var div = HtmlTree.DIV(HtmlStyle.header, pHeading);\n+                 HtmlStyles.title, titleContent);\n+         var div = HtmlTree.DIV(HtmlStyles.header, pHeading);\n@@ -338,1 +339,1 @@\n-        return HtmlTree.UL(HtmlStyle.contentsList);\n+        return HtmlTree.UL(HtmlStyles.contentsList);\n@@ -364,1 +365,1 @@\n-        summarySection = HtmlTree.SECTION(HtmlStyle.constantsSummary, heading)\n+        summarySection = HtmlTree.SECTION(HtmlStyles.constantsSummary, heading)\n@@ -371,1 +372,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n@@ -397,1 +398,1 @@\n-        var table = new Table<Void>(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -400,1 +401,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast);\n@@ -416,1 +417,1 @@\n-        var code = new HtmlTree(TagName.CODE)\n+        var code = new HtmlTree(HtmlTag.CODE)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriter.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -35,7 +35,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -44,0 +38,7 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -111,1 +112,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -175,1 +176,1 @@\n-        writer.addSummary(HtmlStyle.constructorSummary,\n+        writer.addSummary(HtmlStyles.constructorSummary,\n@@ -198,1 +199,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, content)\n+        return HtmlTree.SECTION(HtmlStyles.detail, content)\n@@ -228,1 +229,1 @@\n-                HtmlTree.SECTION(HtmlStyle.constructorDetails)\n+                HtmlTree.SECTION(HtmlStyles.constructorDetails)\n@@ -260,2 +261,2 @@\n-            bodyRowStyles = Arrays.asList(HtmlStyle.colFirst, HtmlStyle.colConstructorName,\n-                    HtmlStyle.colLast);\n+            bodyRowStyles = Arrays.asList(HtmlStyles.colFirst, HtmlStyles.colConstructorName,\n+                    HtmlStyles.colLast);\n@@ -263,1 +264,1 @@\n-            bodyRowStyles = Arrays.asList(HtmlStyle.colConstructorName, HtmlStyle.colLast);\n+            bodyRowStyles = Arrays.asList(HtmlStyles.colConstructorName, HtmlStyles.colLast);\n@@ -267,1 +268,1 @@\n-                HtmlStyle.summaryTable)\n+                HtmlStyles.summaryTable)\n@@ -280,1 +281,1 @@\n-            var code = new HtmlTree(TagName.CODE);\n+            var code = new HtmlTree(HtmlTag.CODE);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstructorWriter.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -34,3 +34,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -39,0 +36,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Contents.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,3 +35,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -40,0 +38,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -82,1 +84,1 @@\n-            Content tabs = HtmlTree.DIV(HtmlStyle.checkboxes, contents.getContent(\n+            Content tabs = HtmlTree.DIV(HtmlStyles.checkboxes, contents.getContent(\n@@ -128,1 +130,1 @@\n-            table.setGridStyle(HtmlStyle.threeColumnReleaseSummary);\n+            table.setGridStyle(HtmlStyles.threeColumnReleaseSummary);\n@@ -173,1 +175,1 @@\n-        return new HtmlStyle[]{ HtmlStyle.colSummaryItemName, HtmlStyle.colSecond, HtmlStyle.colLast };\n+        return new HtmlStyle[]{ HtmlStyles.colSummaryItemName, HtmlStyles.colSecond, HtmlStyles.colLast };\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -28,0 +28,10 @@\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.lang.model.element.Element;\n+import javax.lang.model.element.ModuleElement;\n+import javax.lang.model.element.PackageElement;\n+import javax.tools.JavaFileManager.Location;\n+\n@@ -32,0 +42,2 @@\n+\n+import jdk.javadoc.internal.doclets.formats.html.Navigation.PageMode;\n@@ -33,1 +45,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -41,13 +52,3 @@\n-import jdk.javadoc.internal.doclint.HtmlTag;\n-\n-import javax.lang.model.element.Element;\n-import javax.lang.model.element.ModuleElement;\n-import javax.lang.model.element.PackageElement;\n-import javax.tools.JavaFileManager.Location;\n-\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import jdk.javadoc.internal.doclets.formats.html.Navigation.PageMode;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -252,1 +253,1 @@\n-                        switch (HtmlTag.get(startElem.getName())) {\n+                        switch (HtmlTag.of(startElem.getName())) {\n@@ -270,1 +271,1 @@\n-                        switch (HtmlTag.get(endElem.getName())) {\n+                        switch (HtmlTag.of(endElem.getName())) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DocFilesHandler.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -32,4 +32,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -38,0 +35,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -78,1 +79,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -141,1 +142,1 @@\n-        writer.addSummary(HtmlStyle.constantsSummary,\n+        writer.addSummary(HtmlStyles.constantsSummary,\n@@ -159,1 +160,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, enumConstantsContent)\n+        return HtmlTree.SECTION(HtmlStyles.detail, enumConstantsContent)\n@@ -189,1 +190,1 @@\n-                HtmlTree.SECTION(HtmlStyle.constantDetails)\n+                HtmlTree.SECTION(HtmlStyles.constantDetails)\n@@ -209,1 +210,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -212,1 +213,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -223,1 +224,1 @@\n-                name(member), HtmlStyle.memberNameLink);\n+                name(member), HtmlStyles.memberNameLink);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/EnumConstantWriter.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -52,4 +52,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -61,0 +58,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -106,1 +107,1 @@\n-                .addMainContent(HtmlTree.DIV(HtmlStyle.header,\n+                .addMainContent(HtmlTree.DIV(HtmlStyles.header,\n@@ -195,1 +196,1 @@\n-        var table = new Table<URI>(HtmlStyle.summaryTable)\n+        var table = new Table<URI>(HtmlStyles.summaryTable)\n@@ -198,1 +199,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast)\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast)\n@@ -214,1 +215,1 @@\n-            Content referencesList = HtmlTree.UL(HtmlStyle.refList, searchIndexItems,\n+            Content referencesList = HtmlTree.UL(HtmlStyles.refList, searchIndexItems,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ExternalSpecsWriter.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -35,5 +35,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -42,0 +38,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -88,1 +90,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -150,1 +152,1 @@\n-        writer.addSummary(HtmlStyle.fieldSummary,\n+        writer.addSummary(HtmlStyles.fieldSummary,\n@@ -168,1 +170,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, content)\n+        return HtmlTree.SECTION(HtmlStyles.detail, content)\n@@ -199,1 +201,1 @@\n-                HtmlTree.SECTION(HtmlStyle.fieldDetails)\n+                HtmlTree.SECTION(HtmlStyles.fieldDetails)\n@@ -220,2 +222,2 @@\n-        List<HtmlStyle> bodyRowStyles = Arrays.asList(HtmlStyle.colFirst, HtmlStyle.colSecond,\n-                HtmlStyle.colLast);\n+        List<HtmlStyle> bodyRowStyles = Arrays.asList(HtmlStyles.colFirst, HtmlStyles.colSecond,\n+                HtmlStyles.colLast);\n@@ -223,1 +225,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -255,1 +257,1 @@\n-                HtmlStyle.memberNameLink);\n+                HtmlStyles.memberNameLink);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/FieldWriter.java","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n+import jdk.javadoc.internal.html.HtmlTag;\n@@ -37,1 +37,1 @@\n-    static final TagName PAGE_TITLE_HEADING = TagName.H1;\n+    static final HtmlTag PAGE_TITLE_HEADING = HtmlTag.H1;\n@@ -43,1 +43,1 @@\n-    static final TagName CONTENT_HEADING = TagName.H2;\n+    static final HtmlTag CONTENT_HEADING = HtmlTag.H2;\n@@ -49,1 +49,1 @@\n-    static final TagName SUB_HEADING = TagName.H3;\n+    static final HtmlTag SUB_HEADING = HtmlTag.H3;\n@@ -55,1 +55,1 @@\n-        static final TagName SUMMARY_HEADING = TagName.H2;\n+        static final HtmlTag SUMMARY_HEADING = HtmlTag.H2;\n@@ -67,1 +67,1 @@\n-        static final TagName SUMMARY_HEADING = TagName.H2;\n+        static final HtmlTag SUMMARY_HEADING = HtmlTag.H2;\n@@ -73,1 +73,1 @@\n-        static final TagName INHERITED_SUMMARY_HEADING = TagName.H3;\n+        static final HtmlTag INHERITED_SUMMARY_HEADING = HtmlTag.H3;\n@@ -79,1 +79,1 @@\n-        static final TagName DETAILS_HEADING = TagName.H2;\n+        static final HtmlTag DETAILS_HEADING = HtmlTag.H2;\n@@ -84,1 +84,1 @@\n-        static final TagName MEMBER_HEADING = TagName.H3;\n+        static final HtmlTag MEMBER_HEADING = HtmlTag.H3;\n@@ -91,1 +91,1 @@\n-        static final TagName PACKAGE_HEADING = TagName.H2;\n+        static final HtmlTag PACKAGE_HEADING = HtmlTag.H2;\n@@ -101,1 +101,1 @@\n-        static final TagName PACKAGE_HEADING = TagName.H2;\n+        static final HtmlTag PACKAGE_HEADING = HtmlTag.H2;\n@@ -106,1 +106,1 @@\n-        static final TagName CLASS_HEADING = TagName.H3;\n+        static final HtmlTag CLASS_HEADING = HtmlTag.H3;\n@@ -111,1 +111,1 @@\n-        static final TagName CLASS_SUBHEADING = TagName.H4;\n+        static final HtmlTag CLASS_SUBHEADING = HtmlTag.H4;\n@@ -116,1 +116,1 @@\n-        static final TagName MEMBER_HEADING = TagName.H5;\n+        static final HtmlTag MEMBER_HEADING = HtmlTag.H5;\n@@ -123,1 +123,1 @@\n-        static final TagName SUMMARY_HEADING = TagName.H2;\n+        static final HtmlTag SUMMARY_HEADING = HtmlTag.H2;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Headings.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -30,6 +30,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -37,1 +31,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -41,0 +36,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -106,2 +107,2 @@\n-        content.add(HtmlTree.HEADING(Headings.PAGE_TITLE_HEADING, HtmlStyle.title, mainHeading))\n-                .add(new HtmlTree(TagName.HR))\n+        content.add(HtmlTree.HEADING(Headings.PAGE_TITLE_HEADING, HtmlStyles.title, mainHeading))\n+                .add(new HtmlTree(HtmlTag.HR))\n@@ -109,1 +110,1 @@\n-                .add(new HtmlTree(TagName.HR))\n+                .add(new HtmlTree(HtmlTag.HR))\n@@ -111,2 +112,2 @@\n-                .add(new HtmlTree(TagName.HR))\n-                .add(HtmlTree.SPAN(HtmlStyle.helpFootnote,\n+                .add(new HtmlTree(HtmlTag.HR))\n+                .add(HtmlTree.SPAN(HtmlStyles.helpFootnote,\n@@ -132,1 +133,1 @@\n-        var navSection = HtmlTree.DIV(HtmlStyle.subTitle)\n+        var navSection = HtmlTree.DIV(HtmlStyles.subTitle)\n@@ -156,1 +157,1 @@\n-            var searchExamples = HtmlTree.OL(HtmlStyle.tocList);\n+            var searchExamples = HtmlTree.OL(HtmlStyles.tocList);\n@@ -193,1 +194,1 @@\n-        var pageKindsSection = HtmlTree.DIV(HtmlStyle.subTitle)\n+        var pageKindsSection = HtmlTree.DIV(HtmlStyles.subTitle)\n@@ -238,1 +239,1 @@\n-                HtmlTree.SPAN(HtmlStyle.helpNote, getContent(\"doclet.help.class_interface.note\")),\n+                HtmlTree.SPAN(HtmlStyles.helpNote, getContent(\"doclet.help.class_interface.note\")),\n@@ -257,1 +258,1 @@\n-                .add(new HtmlTree(TagName.BR))\n+                .add(new HtmlTree(HtmlTag.BR))\n@@ -267,1 +268,1 @@\n-                .add(new HtmlTree(TagName.BR))\n+                .add(new HtmlTree(HtmlTag.BR))\n@@ -415,1 +416,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.helpSection,\n+        return HtmlTree.SECTION(HtmlStyles.helpSection,\n@@ -425,1 +426,1 @@\n-        var list = HtmlTree.UL(HtmlStyle.helpSectionList, HtmlTree.LI(first));\n+        var list = HtmlTree.UL(HtmlStyles.helpSectionList, HtmlTree.LI(first));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":21,"deletions":20,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -97,3 +97,0 @@\n-\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n@@ -102,3 +99,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -106,5 +101,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Script;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TextBuilder;\n@@ -129,1 +119,11 @@\n-import jdk.javadoc.internal.doclint.HtmlTag;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.RawHtml;\n+import jdk.javadoc.internal.html.Script;\n+import jdk.javadoc.internal.html.Text;\n+import jdk.javadoc.internal.html.TextBuilder;\n@@ -364,1 +364,1 @@\n-        var dl = HtmlTree.DL(HtmlStyle.notes);\n+        var dl = HtmlTree.DL(HtmlStyles.notes);\n@@ -613,1 +613,1 @@\n-                if (first instanceof HtmlTree htmlTree && htmlTree.tagName.equals(TagName.H1)) {\n+                if (first instanceof HtmlTree htmlTree && htmlTree.tag.equals(HtmlTag.H1)) {\n@@ -688,2 +688,2 @@\n-                    .add(new HtmlTree(TagName.HR))\n-                    .add(HtmlTree.P(HtmlStyle.legalCopy,\n+                    .add(new HtmlTree(HtmlTag.HR))\n+                    .add(HtmlTree.P(HtmlStyles.legalCopy,\n@@ -920,1 +920,1 @@\n-                                    Content label, HtmlStyle style, boolean code) {\n+                                     Content label, HtmlStyle style, boolean code) {\n@@ -1050,1 +1050,1 @@\n-        addPreQualifiedClassLink(context, typeElement, HtmlStyle.typeNameLink, content);\n+        addPreQualifiedClassLink(context, typeElement, HtmlStyles.typeNameLink, content);\n@@ -1258,1 +1258,1 @@\n-                div = HtmlTree.DIV(HtmlStyle.deprecationComment, result);\n+                div = HtmlTree.DIV(HtmlStyles.deprecationComment, result);\n@@ -1261,1 +1261,1 @@\n-                div = HtmlTree.DIV(HtmlStyle.block, result);\n+                div = HtmlTree.DIV(HtmlStyles.block, result);\n@@ -1280,1 +1280,1 @@\n-            HtmlTag htmlTag = HtmlTag.get(name);\n+            HtmlTag htmlTag = HtmlTag.of(name);\n@@ -1947,1 +1947,1 @@\n-            return HtmlTree.SPAN(HtmlStyle.invalidTag, Text.of(summary));\n+            return HtmlTree.SPAN(HtmlStyles.invalidTag, Text.of(summary));\n@@ -1949,1 +1949,1 @@\n-        return HtmlTree.DETAILS(HtmlStyle.invalidTag)\n+        return HtmlTree.DETAILS(HtmlStyles.invalidTag)\n@@ -2408,1 +2408,1 @@\n-        var body = new HtmlTree(TagName.BODY).setStyle(getBodyStyle());\n+        var body = new HtmlTree(HtmlTag.BODY).setStyle(getBodyStyle());\n@@ -2426,1 +2426,1 @@\n-        return HtmlStyle.valueOf(page);\n+        return HtmlStyles.valueOf(page);\n@@ -2476,2 +2476,2 @@\n-            var div = HtmlTree.DIV(HtmlStyle.block);\n-            div.add(HtmlTree.SPAN(HtmlStyle.previewLabel, contents.previewPhrase));\n+            var div = HtmlTree.DIV(HtmlStyles.block);\n+            div.add(HtmlTree.SPAN(HtmlStyles.previewLabel, contents.previewPhrase));\n@@ -2484,2 +2484,2 @@\n-            var div = HtmlTree.DIV(HtmlStyle.block);\n-            div.add(HtmlTree.SPAN(HtmlStyle.restrictedLabel, contents.restrictedPhrase));\n+            var div = HtmlTree.DIV(HtmlStyles.block);\n+            div.add(HtmlTree.SPAN(HtmlStyles.restrictedLabel, contents.restrictedPhrase));\n@@ -2493,1 +2493,1 @@\n-            var previewDiv = HtmlTree.DIV(HtmlStyle.previewBlock);\n+            var previewDiv = HtmlTree.DIV(HtmlStyles.previewBlock);\n@@ -2509,1 +2509,1 @@\n-            previewDiv.add(HtmlTree.SPAN(HtmlStyle.previewLabel,\n+            previewDiv.add(HtmlTree.SPAN(HtmlStyles.previewLabel,\n@@ -2513,1 +2513,1 @@\n-                previewDiv.add(HtmlTree.DIV(HtmlStyle.previewComment, note1));\n+                previewDiv.add(HtmlTree.DIV(HtmlStyles.previewComment, note1));\n@@ -2516,1 +2516,1 @@\n-            previewDiv.add(HtmlTree.DIV(HtmlStyle.previewComment, note2));\n+            previewDiv.add(HtmlTree.DIV(HtmlStyles.previewComment, note2));\n@@ -2524,1 +2524,1 @@\n-                var previewDiv = HtmlTree.DIV(HtmlStyle.previewBlock);\n+                var previewDiv = HtmlTree.DIV(HtmlStyles.previewBlock);\n@@ -2527,1 +2527,1 @@\n-                previewDiv.add(HtmlTree.SPAN(HtmlStyle.previewLabel,\n+                previewDiv.add(HtmlTree.SPAN(HtmlStyles.previewLabel,\n@@ -2529,1 +2529,1 @@\n-                var ul = HtmlTree.UL(HtmlStyle.previewComment);\n+                var ul = HtmlTree.UL(HtmlStyles.previewComment);\n@@ -2537,1 +2537,1 @@\n-                previewDiv.add(HtmlTree.DIV(HtmlStyle.previewComment, note1));\n+                previewDiv.add(HtmlTree.DIV(HtmlStyles.previewComment, note1));\n@@ -2541,1 +2541,1 @@\n-                previewDiv.add(HtmlTree.DIV(HtmlStyle.previewComment, note2));\n+                previewDiv.add(HtmlTree.DIV(HtmlStyles.previewComment, note2));\n@@ -2604,1 +2604,1 @@\n-                                   new HtmlTree(TagName.EM).add(featureName),\n+                                   new HtmlTree(HtmlTag.EM).add(featureName),\n@@ -2643,1 +2643,1 @@\n-            var restrictedDiv = HtmlTree.DIV(HtmlStyle.restrictedBlock);\n+            var restrictedDiv = HtmlTree.DIV(HtmlStyles.restrictedBlock);\n@@ -2650,1 +2650,1 @@\n-            restrictedDiv.add(HtmlTree.SPAN(HtmlStyle.restrictedLabel,\n+            restrictedDiv.add(HtmlTree.SPAN(HtmlStyles.restrictedLabel,\n@@ -2653,1 +2653,1 @@\n-            restrictedDiv.add(HtmlTree.DIV(HtmlStyle.restrictedComment, note1));\n+            restrictedDiv.add(HtmlTree.DIV(HtmlStyles.restrictedComment, note1));\n@@ -2655,1 +2655,1 @@\n-            restrictedDiv.add(HtmlTree.DIV(HtmlStyle.restrictedComment, note2));\n+            restrictedDiv.add(HtmlTree.DIV(HtmlStyles.restrictedComment, note2));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":43,"deletions":43,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+\n@@ -49,1 +50,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n@@ -53,0 +53,1 @@\n+import jdk.javadoc.internal.html.HtmlId;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIds.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+\n@@ -37,1 +38,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -45,0 +45,1 @@\n+import jdk.javadoc.internal.html.HtmlTree;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIndexBuilder.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -46,5 +46,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -57,0 +52,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -380,1 +381,1 @@\n-                links.add(new HtmlTree(TagName.WBR));\n+                links.add(new HtmlTree(HtmlTag.WBR));\n@@ -387,1 +388,1 @@\n-                    links.add(new HtmlTree(TagName.WBR));\n+                    links.add(new HtmlTree(HtmlTag.WBR));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkFactory.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -34,3 +34,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -39,0 +37,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkInfo.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n@@ -35,5 +33,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Script;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -44,0 +38,6 @@\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Script;\n+import jdk.javadoc.internal.html.Text;\n@@ -95,1 +95,1 @@\n-        var metaRefresh = new HtmlTree(TagName.META)\n+        var metaRefresh = new HtmlTree(HtmlTag.META)\n@@ -106,1 +106,1 @@\n-        var body = new HtmlTree(TagName.BODY).setStyle(HtmlStyle.indexRedirectPage);\n+        var body = new HtmlTree(HtmlTag.BODY).setStyle(HtmlStyles.indexRedirectPage);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexRedirectWriter.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -39,8 +39,0 @@\n-import com.sun.source.doctree.DeprecatedTree;\n-\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -48,1 +40,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -55,0 +48,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -132,1 +131,1 @@\n-                .addMainContent(HtmlTree.DIV(HtmlStyle.header,\n+                .addMainContent(HtmlTree.DIV(HtmlStyles.header,\n@@ -152,1 +151,1 @@\n-        var dl = HtmlTree.DL(HtmlStyle.index);\n+        var dl = HtmlTree.DL(HtmlStyles.index);\n@@ -167,1 +166,1 @@\n-        var heading = HtmlTree.HEADING(Headings.CONTENT_HEADING, HtmlStyle.title, headContent)\n+        var heading = HtmlTree.HEADING(Headings.CONTENT_HEADING, HtmlStyles.title, headContent)\n@@ -212,1 +211,1 @@\n-                        HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_IN_LABEL, (TypeElement) element).style(HtmlStyle.typeNameLink)));\n+                        HtmlLinkInfo.Kind.SHOW_TYPE_PARAMS_IN_LABEL, (TypeElement) element).style(HtmlStyles.typeNameLink)));\n@@ -220,1 +219,1 @@\n-                        label, HtmlStyle.memberNameLink));\n+                        label, HtmlStyles.memberNameLink));\n@@ -228,1 +227,1 @@\n-        var dd = new HtmlTree(TagName.DD);\n+        var dd = new HtmlTree(HtmlTag.DD);\n@@ -261,1 +260,1 @@\n-        var dt = HtmlTree.DT(labelLink.setStyle(HtmlStyle.searchTagLink));\n+        var dt = HtmlTree.DT(labelLink.setStyle(HtmlStyles.searchTagLink));\n@@ -265,1 +264,1 @@\n-        var dd = new HtmlTree(TagName.DD);\n+        var dd = new HtmlTree(HtmlTag.DD);\n@@ -284,2 +283,2 @@\n-        var span = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(element));\n-        var div = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n+        var span = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(element));\n+        var div = HtmlTree.DIV(HtmlStyles.deprecationBlock);\n@@ -352,1 +351,1 @@\n-        content.add(new HtmlTree(TagName.BR));\n+        content.add(new HtmlTree(HtmlTag.BR));\n@@ -364,1 +363,1 @@\n-        return HtmlTree.SPAN(HtmlStyle.verticalSeparator, Text.of(\"|\"));\n+        return HtmlTree.SPAN(HtmlStyles.verticalSeparator, Text.of(\"|\"));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexWriter.java","additions":20,"deletions":21,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Comment;\n+import jdk.javadoc.internal.html.Comment;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MarkerComments.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,6 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -48,0 +43,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -110,1 +110,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -190,1 +190,1 @@\n-        writer.addSummary(HtmlStyle.methodSummary,\n+        writer.addSummary(HtmlStyles.methodSummary,\n@@ -212,1 +212,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, content)\n+        return HtmlTree.SECTION(HtmlStyles.detail, content)\n@@ -254,1 +254,1 @@\n-                    var descriptionFromTypeLabel = HtmlTree.SPAN(HtmlStyle.descriptionFromTypeLabel,\n+                    var descriptionFromTypeLabel = HtmlTree.SPAN(HtmlStyles.descriptionFromTypeLabel,\n@@ -260,1 +260,1 @@\n-                    methodContent.add(HtmlTree.DIV(HtmlStyle.block, descriptionFromTypeLabel));\n+                    methodContent.add(HtmlTree.DIV(HtmlStyles.block, descriptionFromTypeLabel));\n@@ -273,1 +273,1 @@\n-        return getMember(HtmlTree.SECTION(HtmlStyle.methodDetails, c)\n+        return getMember(HtmlTree.SECTION(HtmlStyles.methodDetails, c)\n@@ -292,1 +292,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -294,1 +294,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast)\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriter.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -34,3 +34,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -38,0 +36,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Text;\n@@ -81,1 +82,1 @@\n-            var table = new Table<ModuleElement>(HtmlStyle.summaryTable)\n+            var table = new Table<ModuleElement>(HtmlStyles.summaryTable)\n@@ -83,1 +84,1 @@\n-                    .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast)\n+                    .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleIndexWriter.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+\n@@ -45,6 +46,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -52,1 +47,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -56,0 +52,7 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -194,2 +197,2 @@\n-        moduleContent.add(new HtmlTree(TagName.HR));\n-        Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+        moduleContent.add(new HtmlTree(HtmlTag.HR));\n+        Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -264,1 +267,1 @@\n-        var div = HtmlTree.DIV(HtmlStyle.header);\n+        var div = HtmlTree.DIV(HtmlStyles.header);\n@@ -270,1 +273,1 @@\n-                HtmlStyle.title, moduleHead);\n+                HtmlStyles.title, moduleHead);\n@@ -282,1 +285,1 @@\n-        return HtmlTree.UL(HtmlStyle.summaryList);\n+        return HtmlTree.UL(HtmlStyles.summaryList);\n@@ -286,1 +289,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.summary, source);\n+        return HtmlTree.SECTION(HtmlStyles.summary, source);\n@@ -505,1 +508,1 @@\n-        return new Table<Void>(HtmlStyle.detailsTable)\n+        return new Table<Void>(HtmlStyles.detailsTable)\n@@ -508,1 +511,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -519,1 +522,1 @@\n-        return new Table<Void>(HtmlStyle.detailsTable)\n+        return new Table<Void>(HtmlStyles.detailsTable)\n@@ -522,1 +525,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast);\n@@ -531,1 +534,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.modulesSummary)\n+            var section = HtmlTree.SECTION(HtmlStyles.modulesSummary)\n@@ -573,1 +576,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.packagesSummary)\n+            var section = HtmlTree.SECTION(HtmlStyles.packagesSummary)\n@@ -603,1 +606,1 @@\n-        var table = new Table<PackageElement>(HtmlStyle.summaryTable)\n+        var table = new Table<PackageElement>(HtmlStyles.summaryTable)\n@@ -639,1 +642,1 @@\n-        colStyles.add(HtmlStyle.colFirst);\n+        colStyles.add(HtmlStyles.colFirst);\n@@ -643,1 +646,1 @@\n-            colStyles.add(HtmlStyle.colSecond);\n+            colStyles.add(HtmlStyles.colSecond);\n@@ -648,1 +651,1 @@\n-            colStyles.add(HtmlStyle.colSecond);\n+            colStyles.add(HtmlStyles.colSecond);\n@@ -652,1 +655,1 @@\n-        colStyles.add(HtmlStyle.colLast);\n+        colStyles.add(HtmlStyles.colLast);\n@@ -744,1 +747,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.servicesSummary)\n+            var section = HtmlTree.SECTION(HtmlStyles.servicesSummary)\n@@ -786,1 +789,1 @@\n-                    summary.add(HtmlTree.DIV(HtmlStyle.block, description));\n+                    summary.add(HtmlTree.DIV(HtmlStyles.block, description));\n@@ -816,1 +819,1 @@\n-                    desc.add(HtmlTree.DIV(HtmlStyle.block, description));\n+                    desc.add(HtmlTree.DIV(HtmlStyles.block, description));\n@@ -825,1 +828,1 @@\n-                desc.add(new HtmlTree(TagName.BR));\n+                desc.add(new HtmlTree(HtmlTag.BR));\n@@ -827,1 +830,1 @@\n-                var implSpan = HtmlTree.SPAN(HtmlStyle.implementationLabel, contents.implementation);\n+                var implSpan = HtmlTree.SPAN(HtmlStyles.implementationLabel, contents.implementation);\n@@ -851,2 +854,2 @@\n-            var deprDiv = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n-            var deprPhrase = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(mdle));\n+            var deprDiv = HtmlTree.DIV(HtmlStyles.deprecationBlock);\n+            var deprPhrase = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(mdle));\n@@ -867,1 +870,1 @@\n-            var tree = HtmlTree.SECTION(HtmlStyle.moduleDescription)\n+            var tree = HtmlTree.SECTION(HtmlStyles.moduleDescription)\n@@ -905,2 +908,2 @@\n-            var deprDiv = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n-            var deprPhrase = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(pkg));\n+            var deprDiv = HtmlTree.DIV(HtmlStyles.deprecationBlock);\n+            var deprPhrase = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(pkg));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriter.java","additions":37,"deletions":34,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -38,6 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -45,1 +40,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -50,1 +44,7 @@\n-import jdk.javadoc.internal.doclets.toolkit.util.VisibleMemberTable;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -329,1 +329,1 @@\n-            target.add(HtmlTree.LI(HtmlStyle.navBarCell1Rev, label));\n+            target.add(HtmlTree.LI(HtmlStyles.navBarCell1Rev, label));\n@@ -412,1 +412,1 @@\n-            link.setStyle(HtmlStyle.currentSelection);\n+            link.setStyle(HtmlStyles.currentSelection);\n@@ -502,1 +502,1 @@\n-        var searchDiv = HtmlTree.DIV(HtmlStyle.navListSearch)\n+        var searchDiv = HtmlTree.DIV(HtmlStyles.navListSearch)\n@@ -519,1 +519,1 @@\n-        var navContent = new HtmlTree(TagName.DIV);\n+        var navContent = new HtmlTree(HtmlTag.DIV);\n@@ -524,3 +524,3 @@\n-        HtmlTree iconSpan = HtmlTree.SPAN(HtmlStyle.navBarToggleIcon).add(Entity.NO_BREAK_SPACE);\n-        navContent.setStyle(HtmlStyle.navContent).add(HtmlTree.DIV(HtmlStyle.navMenuButton,\n-                        new HtmlTree(TagName.BUTTON).setId(HtmlIds.NAVBAR_TOGGLE_BUTTON)\n+        HtmlTree iconSpan = HtmlTree.SPAN(HtmlStyles.navBarToggleIcon).add(Entity.NO_BREAK_SPACE);\n+        navContent.setStyle(HtmlStyles.navContent).add(HtmlTree.DIV(HtmlStyles.navMenuButton,\n+                        new HtmlTree(HtmlTag.BUTTON).setId(HtmlIds.NAVBAR_TOGGLE_BUTTON)\n@@ -533,1 +533,1 @@\n-                .add(HtmlTree.DIV(HtmlStyle.skipNav,\n+                .add(HtmlTree.DIV(HtmlStyles.skipNav,\n@@ -538,1 +538,1 @@\n-        var navList = new HtmlTree(TagName.UL)\n+        var navList = new HtmlTree(HtmlTag.UL)\n@@ -540,1 +540,1 @@\n-                .setStyle(HtmlStyle.navList)\n+                .setStyle(HtmlStyles.navList)\n@@ -544,1 +544,1 @@\n-        var aboutDiv = HtmlTree.DIV(HtmlStyle.aboutLanguage, aboutContent);\n+        var aboutDiv = HtmlTree.DIV(HtmlStyles.aboutLanguage, aboutContent);\n@@ -546,1 +546,1 @@\n-        navigationBar.add(HtmlTree.DIV(HtmlStyle.topNav, navContent).setId(HtmlIds.NAVBAR_TOP));\n+        navigationBar.add(HtmlTree.DIV(HtmlStyles.topNav, navContent).setId(HtmlIds.NAVBAR_TOP));\n@@ -548,1 +548,1 @@\n-        var subNavContent = HtmlTree.DIV(HtmlStyle.navContent);\n+        var subNavContent = HtmlTree.DIV(HtmlStyles.navContent);\n@@ -556,1 +556,1 @@\n-        var breadcrumbNav = HtmlTree.OL(HtmlStyle.subNavList);\n+        var breadcrumbNav = HtmlTree.OL(HtmlStyles.subNavList);\n@@ -563,1 +563,1 @@\n-        navigationBar.add(HtmlTree.DIV(HtmlStyle.subNav, subNavContent));\n+        navigationBar.add(HtmlTree.DIV(HtmlStyles.subNav, subNavContent));\n@@ -566,1 +566,1 @@\n-        navigationBar.add(HtmlTree.SPAN(HtmlStyle.skipNav)\n+        navigationBar.add(HtmlTree.SPAN(HtmlStyles.skipNav)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Navigation.java","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -34,5 +34,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -40,0 +36,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -74,1 +76,1 @@\n-        writer.addSummary(HtmlStyle.nestedClassSummary,\n+        writer.addSummary(HtmlStyles.nestedClassSummary,\n@@ -95,2 +97,2 @@\n-        List<HtmlStyle> bodyRowStyles = Arrays.asList(HtmlStyle.colFirst, HtmlStyle.colSecond,\n-                HtmlStyle.colLast);\n+        List<HtmlStyle> bodyRowStyles = Arrays.asList(HtmlStyles.colFirst, HtmlStyles.colSecond,\n+                HtmlStyles.colLast);\n@@ -98,1 +100,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -128,1 +130,1 @@\n-                .style(HtmlStyle.typeNameLink));\n+                .style(HtmlStyles.typeNameLink));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NestedClassWriter.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -35,5 +35,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -43,0 +39,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -84,1 +84,1 @@\n-            Content tabs = HtmlTree.DIV(HtmlStyle.checkboxes,\n+            Content tabs = HtmlTree.DIV(HtmlStyles.checkboxes,\n@@ -99,1 +99,1 @@\n-        table.setGridStyle(HtmlStyle.threeColumnReleaseSummary);\n+        table.setGridStyle(HtmlStyles.threeColumnReleaseSummary);\n@@ -152,1 +152,1 @@\n-        return new HtmlStyle[]{ HtmlStyle.colSummaryItemName, HtmlStyle.colSecond, HtmlStyle.colLast };\n+        return new HtmlStyle[]{ HtmlStyles.colSummaryItemName, HtmlStyles.colSecond, HtmlStyles.colLast };\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/NewAPIListWriter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -34,3 +34,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -39,0 +37,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Text;\n@@ -84,1 +85,1 @@\n-            var table = new Table<PackageElement>(HtmlStyle.summaryTable)\n+            var table = new Table<PackageElement>(HtmlStyles.summaryTable)\n@@ -86,1 +87,1 @@\n-                    .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast)\n+                    .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageIndexWriter.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import javax.lang.model.element.Element;\n@@ -33,4 +32,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -40,3 +36,3 @@\n-\n-import java.util.ArrayList;\n-import java.util.List;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -103,2 +99,2 @@\n-                HtmlStyle.title, headContent);\n-        var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                HtmlStyles.title, headContent);\n+        var div = HtmlTree.DIV(HtmlStyles.header, heading);\n@@ -139,1 +135,1 @@\n-        var span = HtmlTree.SPAN(HtmlStyle.packageHierarchyLabel,\n+        var span = HtmlTree.SPAN(HtmlStyles.packageHierarchyLabel,\n@@ -142,1 +138,1 @@\n-        var ul = HtmlTree.UL(HtmlStyle.horizontal).addStyle(HtmlStyle.contentsList);\n+        var ul = HtmlTree.UL(HtmlStyles.horizontal).addStyle(HtmlStyles.contentsList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageTreeWriter.java","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.util.ArrayList;\n-import java.util.List;\n@@ -35,1 +33,0 @@\n-import javax.lang.model.element.Element;\n@@ -39,5 +36,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -45,1 +37,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -50,0 +42,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -141,1 +139,1 @@\n-        var table = new Table<Void>(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -144,1 +142,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -168,1 +166,1 @@\n-        var ul = HtmlTree.UL(HtmlStyle.blockList);\n+        var ul = HtmlTree.UL(HtmlStyles.blockList);\n@@ -171,1 +169,1 @@\n-            var section = HtmlTree.SECTION(HtmlStyle.detail)\n+            var section = HtmlTree.SECTION(HtmlStyles.detail)\n@@ -177,1 +175,1 @@\n-            var table = new Table<Void>(HtmlStyle.summaryTable)\n+            var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -180,1 +178,1 @@\n-                    .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                    .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -195,1 +193,1 @@\n-        var li = HtmlTree.SECTION(HtmlStyle.packageUses, ul);\n+        var li = HtmlTree.SECTION(HtmlStyles.packageUses, ul);\n@@ -209,1 +207,1 @@\n-        headingContent.add(new HtmlTree(TagName.BR));\n+        headingContent.add(new HtmlTree(HtmlTag.BR));\n@@ -212,2 +210,2 @@\n-                HtmlStyle.title, headingContent);\n-        var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                HtmlStyles.title, headingContent);\n+        var div = HtmlTree.DIV(HtmlStyles.header, heading);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageUseWriter.java","additions":17,"deletions":19,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import javax.lang.model.element.Element;\n@@ -43,5 +42,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+\n@@ -49,1 +44,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -55,0 +51,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -74,1 +75,1 @@\n-    private final HtmlTree section = HtmlTree.SECTION(HtmlStyle.packageDescription, new ContentBuilder());\n+    private final HtmlTree section = HtmlTree.SECTION(HtmlStyles.packageDescription, new ContentBuilder());\n@@ -130,2 +131,2 @@\n-        packageContent.add(new HtmlTree(TagName.HR));\n-        Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+        packageContent.add(new HtmlTree(HtmlTag.HR));\n+        Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -205,1 +206,1 @@\n-        var div = HtmlTree.DIV(HtmlStyle.header);\n+        var div = HtmlTree.DIV(HtmlStyles.header);\n@@ -212,1 +213,1 @@\n-                HtmlStyle.title, packageHead);\n+                HtmlStyles.title, packageHead);\n@@ -280,2 +281,2 @@\n-            var deprDiv = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n-            var deprPhrase = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(packageElement));\n+            var deprDiv = HtmlTree.DIV(HtmlStyles.deprecationBlock);\n+            var deprPhrase = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(packageElement));\n@@ -294,1 +295,1 @@\n-        return HtmlTree.UL(HtmlStyle.summaryList);\n+        return HtmlTree.UL(HtmlStyles.summaryList);\n@@ -311,1 +312,1 @@\n-        var table = new Table<TypeElement>(HtmlStyle.summaryTable)\n+        var table = new Table<TypeElement>(HtmlStyles.summaryTable)\n@@ -313,1 +314,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast)\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast)\n@@ -350,1 +351,1 @@\n-            var table = new Table<Void>(HtmlStyle.summaryTable)\n+            var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -355,1 +356,1 @@\n-                table.setColumnStyles(HtmlStyle.colPlain, HtmlStyle.colFirst, HtmlStyle.colLast);\n+                table.setColumnStyles(HtmlStyles.colPlain, HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -357,1 +358,1 @@\n-                table.setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                table.setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -426,1 +427,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.summary, summaryContent);\n+        return HtmlTree.SECTION(HtmlStyles.summary, summaryContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriter.java","additions":22,"deletions":21,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -36,4 +36,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -42,0 +39,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -84,1 +86,1 @@\n-            Content list = HtmlTree.UL(HtmlStyle.previewFeatureList).addStyle(HtmlStyle.checkboxes);\n+            Content list = HtmlTree.UL(HtmlStyles.previewFeatureList).addStyle(HtmlStyles.checkboxes);\n@@ -109,1 +111,1 @@\n-        table.setGridStyle(HtmlStyle.threeColumnSummary)\n+        table.setGridStyle(HtmlStyles.threeColumnSummary)\n@@ -134,1 +136,1 @@\n-        return new HtmlStyle[]{ HtmlStyle.colSummaryItemName, HtmlStyle.colSecond, HtmlStyle.colLast };\n+        return new HtmlStyle[]{ HtmlStyles.colSummaryItemName, HtmlStyles.colSecond, HtmlStyles.colLast };\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PreviewListWriter.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -38,5 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -46,0 +42,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -83,1 +84,1 @@\n-                Content div = HtmlTree.DIV(HtmlStyle.horizontalScroll);\n+                Content div = HtmlTree.DIV(HtmlStyles.horizontalScroll);\n@@ -164,1 +165,1 @@\n-        writer.addSummary(HtmlStyle.propertySummary,\n+        writer.addSummary(HtmlStyles.propertySummary,\n@@ -182,1 +183,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.detail, content)\n+        return HtmlTree.SECTION(HtmlStyles.detail, content)\n@@ -213,1 +214,1 @@\n-                    var descriptionFromLabel = HtmlTree.SPAN(HtmlStyle.descriptionFromTypeLabel,\n+                    var descriptionFromLabel = HtmlTree.SPAN(HtmlStyles.descriptionFromTypeLabel,\n@@ -219,1 +220,1 @@\n-                    propertyContent.add(HtmlTree.DIV(HtmlStyle.block, descriptionFromLabel));\n+                    propertyContent.add(HtmlTree.DIV(HtmlStyles.block, descriptionFromLabel));\n@@ -232,1 +233,1 @@\n-                HtmlTree.SECTION(HtmlStyle.propertyDetails)\n+                HtmlTree.SECTION(HtmlStyles.propertyDetails)\n@@ -253,1 +254,1 @@\n-        return new Table<Element>(HtmlStyle.summaryTable)\n+        return new Table<Element>(HtmlStyles.summaryTable)\n@@ -256,1 +257,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colSecond, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colSecond, HtmlStyles.colLast);\n@@ -287,1 +288,1 @@\n-                HtmlStyle.memberNameLink,\n+                HtmlStyles.memberNameLink,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PropertyWriter.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import jdk.javadoc.internal.html.Content;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/RestrictedListWriter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,7 +30,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -39,0 +33,7 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -82,1 +83,1 @@\n-        contentTree.add(HtmlTree.HEADING(Headings.PAGE_TITLE_HEADING, HtmlStyle.title,\n+        contentTree.add(HtmlTree.HEADING(Headings.PAGE_TITLE_HEADING, HtmlStyles.title,\n@@ -91,1 +92,1 @@\n-                        .add(HtmlTree.DETAILS(HtmlStyle.pageSearchDetails)\n+                        .add(HtmlTree.DETAILS(HtmlStyles.pageSearchDetails)\n@@ -94,1 +95,1 @@\n-                .add(HtmlTree.DIV(HtmlStyle.pageSearchInfo, helpSection)\n+                .add(HtmlTree.DIV(HtmlStyles.pageSearchInfo, helpSection)\n@@ -99,2 +100,2 @@\n-                        .add(new HtmlTree(TagName.BUTTON)\n-                                .add(new HtmlTree(TagName.IMG)\n+                        .add(new HtmlTree(HtmlTag.BUTTON)\n+                                .add(new HtmlTree(HtmlTag.IMG)\n@@ -106,1 +107,1 @@\n-                                .addStyle(HtmlStyle.copy)\n+                                .addStyle(HtmlStyles.copy)\n@@ -112,1 +113,1 @@\n-                .add(new HtmlTree(TagName.P)\n+                .add(new HtmlTree(HtmlTag.P)\n@@ -115,1 +116,1 @@\n-                .add(HtmlTree.DIV(new HtmlTree(TagName.DIV)\n+                .add(HtmlTree.DIV(new HtmlTree(HtmlTag.DIV)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SearchWriter.java","additions":16,"deletions":15,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -38,4 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -43,0 +40,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -56,1 +57,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n@@ -60,1 +61,1 @@\n-        return new HtmlTree(TagName.LI).setStyle(HtmlStyle.blockList);\n+        return new HtmlTree(HtmlTag.LI).setStyle(HtmlStyles.blockList);\n@@ -64,1 +65,1 @@\n-        var section = HtmlTree.SECTION(HtmlStyle.detail);\n+        var section = HtmlTree.SECTION(HtmlStyles.detail);\n@@ -78,1 +79,1 @@\n-        var pre = new HtmlTree(TagName.PRE);\n+        var pre = new HtmlTree(HtmlTag.PRE);\n@@ -125,1 +126,1 @@\n-            var div = HtmlTree.DIV(HtmlStyle.block, serialFieldContent);\n+            var div = HtmlTree.DIV(HtmlStyles.block, serialFieldContent);\n@@ -139,1 +140,1 @@\n-            var dl = HtmlTree.DL(HtmlStyle.notes);\n+            var dl = HtmlTree.DL(HtmlStyles.notes);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SerialFieldWriter.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -31,4 +31,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -36,0 +33,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -49,1 +50,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n@@ -53,1 +54,1 @@\n-        return new HtmlTree(TagName.LI);\n+        return new HtmlTree(HtmlTag.LI);\n@@ -67,1 +68,1 @@\n-        var section = HtmlTree.SECTION(HtmlStyle.detail, serialHeading);\n+        var section = HtmlTree.SECTION(HtmlStyles.detail, serialHeading);\n@@ -124,1 +125,1 @@\n-        var dl = HtmlTree.DL(HtmlStyle.notes);\n+        var dl = HtmlTree.DL(HtmlStyles.notes);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SerialMethodWriter.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -44,4 +44,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -49,1 +45,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -56,0 +52,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -565,2 +566,2 @@\n-                HtmlStyle.title, h1Content);\n-        var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                HtmlStyles.title, h1Content);\n+        var div = HtmlTree.DIV(HtmlStyles.header, heading);\n@@ -578,1 +579,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n@@ -587,1 +588,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.serializedPackageContainer);\n+        return HtmlTree.SECTION(HtmlStyles.serializedPackageContainer);\n@@ -599,1 +600,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n@@ -618,1 +619,1 @@\n-        var section = HtmlTree.SECTION(HtmlStyle.serializedClassDetails)\n+        var section = HtmlTree.SECTION(HtmlStyles.serializedClassDetails)\n@@ -643,1 +644,1 @@\n-        section.add(HtmlTree.DIV(HtmlStyle.typeSignature, signature));\n+        section.add(HtmlTree.DIV(HtmlStyles.typeSignature, signature));\n@@ -648,1 +649,1 @@\n-        return HtmlTree.DL(HtmlStyle.nameValue);\n+        return HtmlTree.DL(HtmlStyles.nameValue);\n@@ -670,1 +671,1 @@\n-        return HtmlTree.UL(HtmlStyle.blockList);\n+        return HtmlTree.UL(HtmlStyles.blockList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SerializedFormWriter.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -28,8 +28,6 @@\n-import jdk.javadoc.doclet.DocletEnvironment;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.toolkit.util.Utils;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+import java.util.stream.Collectors;\n@@ -46,6 +44,10 @@\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Set;\n-import java.util.SortedSet;\n-import java.util.TreeSet;\n-import java.util.stream.Collectors;\n+\n+import jdk.javadoc.doclet.DocletEnvironment;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n+import jdk.javadoc.internal.doclets.toolkit.util.Utils;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -66,1 +68,1 @@\n-        var signature = HtmlTree.DIV(HtmlStyle.moduleSignature);\n+        var signature = HtmlTree.DIV(HtmlStyles.moduleSignature);\n@@ -69,1 +71,1 @@\n-            signature.add(HtmlTree.SPAN(HtmlStyle.annotations, annotations));\n+            signature.add(HtmlTree.SPAN(HtmlStyles.annotations, annotations));\n@@ -76,1 +78,1 @@\n-        var nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n+        var nameSpan = HtmlTree.SPAN(HtmlStyles.elementName);\n@@ -86,1 +88,1 @@\n-        var signature = HtmlTree.DIV(HtmlStyle.packageSignature);\n+        var signature = HtmlTree.DIV(HtmlStyles.packageSignature);\n@@ -89,1 +91,1 @@\n-            signature.add(HtmlTree.SPAN(HtmlStyle.annotations, annotations));\n+            signature.add(HtmlTree.SPAN(HtmlStyles.annotations, annotations));\n@@ -92,1 +94,1 @@\n-        var nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n+        var nameSpan = HtmlTree.SPAN(HtmlStyles.elementName);\n@@ -125,1 +127,1 @@\n-                content.add(HtmlTree.SPAN(HtmlStyle.annotations, annotationInfo));\n+                content.add(HtmlTree.SPAN(HtmlStyles.annotations, annotationInfo));\n@@ -127,1 +129,1 @@\n-            content.add(HtmlTree.SPAN(HtmlStyle.modifiers, modifiers));\n+            content.add(HtmlTree.SPAN(HtmlStyles.modifiers, modifiers));\n@@ -129,1 +131,1 @@\n-            var nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n+            var nameSpan = HtmlTree.SPAN(HtmlStyles.elementName);\n@@ -134,1 +136,1 @@\n-                nameSpan.addStyle(HtmlStyle.typeNameLabel).add(className);\n+                nameSpan.addStyle(HtmlStyles.typeNameLabel).add(className);\n@@ -147,1 +149,1 @@\n-                var extendsImplements = HtmlTree.SPAN(HtmlStyle.extendsImplements);\n+                var extendsImplements = HtmlTree.SPAN(HtmlStyles.extendsImplements);\n@@ -189,1 +191,1 @@\n-                var permitsSpan = HtmlTree.SPAN(HtmlStyle.permits);\n+                var permitsSpan = HtmlTree.SPAN(HtmlStyles.permits);\n@@ -208,1 +210,1 @@\n-                    permitsSpan.add(HtmlTree.SPAN(HtmlStyle.permitsNote, c));\n+                    permitsSpan.add(HtmlTree.SPAN(HtmlStyles.permitsNote, c));\n@@ -212,1 +214,1 @@\n-            return HtmlTree.DIV(HtmlStyle.typeSignature, content);\n+            return HtmlTree.DIV(HtmlStyles.typeSignature, content);\n@@ -453,1 +455,1 @@\n-                content.add(HtmlTree.SPAN(HtmlStyle.annotations, annotations));\n+                content.add(HtmlTree.SPAN(HtmlStyles.annotations, annotations));\n@@ -467,1 +469,1 @@\n-                content.add(HtmlTree.SPAN(HtmlStyle.returnType, returnType));\n+                content.add(HtmlTree.SPAN(HtmlStyles.returnType, returnType));\n@@ -472,1 +474,1 @@\n-            var nameSpan = HtmlTree.SPAN(HtmlStyle.elementName);\n+            var nameSpan = HtmlTree.SPAN(HtmlStyles.elementName);\n@@ -486,1 +488,1 @@\n-            return HtmlTree.DIV(HtmlStyle.memberSignature, content);\n+            return HtmlTree.DIV(HtmlStyles.memberSignature, content);\n@@ -517,1 +519,1 @@\n-                target.add(HtmlTree.SPAN(HtmlStyle.modifiers, Text.of(mods)))\n+                target.add(HtmlTree.SPAN(HtmlStyles.modifiers, Text.of(mods)))\n@@ -535,1 +537,1 @@\n-                target.add(HtmlTree.SPAN(HtmlStyle.typeParametersLong, typeParameters));\n+                target.add(HtmlTree.SPAN(HtmlStyles.typeParametersLong, typeParameters));\n@@ -537,1 +539,1 @@\n-                target.add(HtmlTree.SPAN(HtmlStyle.typeParameters, typeParameters));\n+                target.add(HtmlTree.SPAN(HtmlStyles.typeParameters, typeParameters));\n@@ -568,2 +570,2 @@\n-                target.add(new HtmlTree(TagName.WBR))\n-                        .add(HtmlTree.SPAN(HtmlStyle.parameters, parameters));\n+                target.add(new HtmlTree(HtmlTag.WBR))\n+                        .add(HtmlTree.SPAN(HtmlStyles.parameters, parameters));\n@@ -578,1 +580,1 @@\n-                        .add(HtmlTree.SPAN(HtmlStyle.exceptions, exceptions));\n+                        .add(HtmlTree.SPAN(HtmlStyles.exceptions, exceptions));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Signatures.java","additions":40,"deletions":38,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Head;\n-\n@@ -41,0 +39,1 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.Head;\n@@ -42,5 +41,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -55,0 +50,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -204,1 +204,1 @@\n-            var pre = new HtmlTree(TagName.PRE);\n+            var pre = new HtmlTree(HtmlTag.PRE);\n@@ -213,1 +213,1 @@\n-            var div = HtmlTree.DIV(HtmlStyle.sourceContainer, pre);\n+            var div = HtmlTree.DIV(HtmlStyles.sourceContainer, pre);\n@@ -249,1 +249,1 @@\n-        return new HtmlTree(TagName.BODY).setStyle(HtmlStyle.sourcePage);\n+        return new HtmlTree(HtmlTag.BODY).setStyle(HtmlStyles.sourcePage);\n@@ -259,1 +259,1 @@\n-        var span = HtmlTree.SPAN(HtmlStyle.sourceLineNo);\n+        var span = HtmlTree.SPAN(HtmlStyles.sourceLineNo);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SourceToHTMLConverter.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import java.util.*;\n+import java.util.List;\n@@ -35,0 +35,1 @@\n+\n@@ -36,4 +37,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -42,0 +40,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -120,2 +123,2 @@\n-            var deprLabel = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(member));\n-            div = HtmlTree.DIV(HtmlStyle.block, deprLabel);\n+            var deprLabel = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(member));\n+            div = HtmlTree.DIV(HtmlStyles.block, deprLabel);\n@@ -130,2 +133,2 @@\n-                var deprLabel = HtmlTree.SPAN(HtmlStyle.deprecatedLabel, getDeprecatedPhrase(te));\n-                div = HtmlTree.DIV(HtmlStyle.block, deprLabel);\n+                var deprLabel = HtmlTree.SPAN(HtmlStyles.deprecatedLabel, getDeprecatedPhrase(te));\n+                div = HtmlTree.DIV(HtmlStyles.block, deprLabel);\n@@ -203,1 +206,1 @@\n-        return HtmlTree.UL(HtmlStyle.summaryList);\n+        return HtmlTree.UL(HtmlStyles.summaryList);\n@@ -222,1 +225,1 @@\n-        return HtmlTree.UL(HtmlStyle.detailsList);\n+        return HtmlTree.UL(HtmlStyles.detailsList);\n@@ -239,1 +242,1 @@\n-        return HtmlTree.UL(HtmlStyle.memberList);\n+        return HtmlTree.UL(HtmlStyles.memberList);\n@@ -252,1 +255,1 @@\n-        return HtmlTree.DIV(HtmlStyle.inheritedList);\n+        return HtmlTree.DIV(HtmlStyles.inheritedList);\n@@ -284,1 +287,1 @@\n-        return HtmlTree.SECTION(HtmlStyle.summary, memberContent);\n+        return HtmlTree.SECTION(HtmlStyles.summary, memberContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SubWriterHolderWriter.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -34,6 +34,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Script;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -41,1 +35,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -46,0 +40,8 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Script;\n+import jdk.javadoc.internal.html.Text;\n@@ -142,2 +144,2 @@\n-                HtmlStyle.title, getHeadContent());\n-        content.add(HtmlTree.DIV(HtmlStyle.header, heading));\n+                HtmlStyles.title, getHeadContent());\n+        content.add(HtmlTree.DIV(HtmlStyles.header, heading));\n@@ -204,1 +206,1 @@\n-        var ul= HtmlTree.UL(HtmlStyle.contentsList);\n+        var ul= HtmlTree.UL(HtmlStyles.contentsList);\n@@ -241,1 +243,1 @@\n-            var table = new Table<Element>(HtmlStyle.summaryTable)\n+            var table = new Table<Element>(HtmlStyles.summaryTable)\n@@ -270,1 +272,1 @@\n-            content.add(HtmlTree.UL(HtmlStyle.blockList, HtmlTree.LI(table)));\n+            content.add(HtmlTree.UL(HtmlStyles.blockList, HtmlTree.LI(table)));\n@@ -373,1 +375,1 @@\n-        return new HtmlStyle[]{ HtmlStyle.colSummaryItemName, HtmlStyle.colLast };\n+        return new HtmlStyle[]{ HtmlStyles.colSummaryItemName, HtmlStyles.colLast };\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SummaryListWriter.java","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -41,4 +41,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -50,0 +47,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -89,1 +90,1 @@\n-                .addMainContent(HtmlTree.DIV(HtmlStyle.header,\n+                .addMainContent(HtmlTree.DIV(HtmlStyles.header,\n@@ -109,1 +110,1 @@\n-        var table = new Table<Void>(HtmlStyle.summaryTable)\n+        var table = new Table<Void>(HtmlStyles.summaryTable)\n@@ -112,1 +113,1 @@\n-                .setColumnStyles(HtmlStyle.colFirst, HtmlStyle.colLast);\n+                .setColumnStyles(HtmlStyles.colFirst, HtmlStyles.colLast);\n@@ -122,1 +123,1 @@\n-            table.addRow(propertyName, HtmlTree.DIV(HtmlStyle.block, separatedReferenceLinks));\n+            table.addRow(propertyName, HtmlTree.DIV(HtmlStyles.block, separatedReferenceLinks));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SystemPropertiesWriter.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -37,7 +37,9 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -306,1 +308,1 @@\n-        HtmlStyle rowStyle = rowIndex % 2 == 0 ? HtmlStyle.evenRowColor : HtmlStyle.oddRowColor;\n+        HtmlStyle rowStyle = rowIndex % 2 == 0 ? HtmlStyles.evenRowColor : HtmlStyles.oddRowColor;\n@@ -362,1 +364,1 @@\n-            main = new HtmlTree(TagName.DIV).setId(id);\n+            main = new HtmlTree(HtmlTag.DIV).setId(id);\n@@ -369,3 +371,3 @@\n-                case 2 -> HtmlStyle.twoColumnSummary;\n-                case 3 -> HtmlStyle.threeColumnSummary;\n-                case 4 -> HtmlStyle.fourColumnSummary;\n+                case 2 -> HtmlStyles.twoColumnSummary;\n+                case 3 -> HtmlStyles.threeColumnSummary;\n+                case 4 -> HtmlStyles.fourColumnSummary;\n@@ -386,1 +388,1 @@\n-            var tablist = HtmlTree.DIV(HtmlStyle.tableTabs)\n+            var tablist = HtmlTree.DIV(HtmlStyles.tableTabs)\n@@ -392,1 +394,1 @@\n-                tablist.add(createTab(defaultTabId, HtmlStyle.activeTableTab, true, defaultTab));\n+                tablist.add(createTab(defaultTabId, HtmlStyles.activeTableTab, true, defaultTab));\n@@ -395,1 +397,1 @@\n-                        tablist.add(createTab(HtmlIds.forTab(id, tab.index()), HtmlStyle.tableTab, false, tab.label()));\n+                        tablist.add(createTab(HtmlIds.forTab(id, tab.index()), HtmlStyles.tableTab, false, tab.label()));\n@@ -404,1 +406,1 @@\n-            var tabpanel = new HtmlTree(TagName.DIV)\n+            var tabpanel = new HtmlTree(HtmlTag.DIV)\n@@ -417,1 +419,1 @@\n-        var tab = new HtmlTree(TagName.BUTTON)\n+        var tab = new HtmlTree(HtmlTag.BUTTON)\n@@ -439,1 +441,1 @@\n-        return HtmlTree.DIV(HtmlStyle.caption, HtmlTree.SPAN(title));\n+        return HtmlTree.DIV(HtmlStyles.caption, HtmlTree.SPAN(title));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Table.java","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -33,4 +33,6 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -155,4 +157,4 @@\n-                    : (i == 0) ? HtmlStyle.colFirst\n-                    : (i == (cellContents.size() - 1)) ? HtmlStyle.colLast\n-                    : (i == 1) ? HtmlStyle.colSecond : null;\n-            var cell = HtmlTree.DIV(HtmlStyle.tableHeader, cellContent);\n+                    : (i == 0) ? HtmlStyles.colFirst\n+                    : (i == (cellContents.size() - 1)) ? HtmlStyles.colLast\n+                    : (i == 1) ? HtmlStyles.colSecond : null;\n+            var cell = HtmlTree.DIV(HtmlStyles.tableHeader, cellContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TableHeader.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -27,8 +27,9 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ListBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.ListBuilder;\n+import jdk.javadoc.internal.html.Text;\n@@ -49,1 +50,1 @@\n-        listBuilder = new ListBuilder(HtmlTree.OL(HtmlStyle.tocList));\n+        listBuilder = new ListBuilder(HtmlTree.OL(HtmlStyles.tocList));\n@@ -67,1 +68,1 @@\n-        listBuilder.pushNestedList(HtmlTree.OL(HtmlStyle.tocList));\n+        listBuilder.pushNestedList(HtmlTree.OL(HtmlStyles.tocList));\n@@ -90,1 +91,1 @@\n-                .setStyle(HtmlStyle.toc)\n+                .setStyle(HtmlStyles.toc)\n@@ -92,1 +93,1 @@\n-        var header = HtmlTree.DIV(HtmlStyle.tocHeader, writer.contents.contentsHeading);\n+        var header = HtmlTree.DIV(HtmlStyles.tocHeader, writer.contents.contentsHeading);\n@@ -95,1 +96,1 @@\n-                    .add(HtmlTree.INPUT(HtmlAttr.InputType.TEXT, HtmlStyle.filterInput)\n+                    .add(HtmlTree.INPUT(HtmlAttr.InputType.TEXT, HtmlStyles.filterInput)\n@@ -99,1 +100,1 @@\n-                    .add(HtmlTree.INPUT(HtmlAttr.InputType.RESET, HtmlStyle.resetFilter)\n+                    .add(HtmlTree.INPUT(HtmlAttr.InputType.RESET, HtmlStyles.resetFilter)\n@@ -103,1 +104,1 @@\n-        content.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.hideSidebar)\n+        content.add(new HtmlTree(HtmlTag.BUTTON).addStyle(HtmlStyles.hideSidebar)\n@@ -106,1 +107,1 @@\n-        content.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.showSidebar)\n+        content.add(new HtmlTree(HtmlTag.BUTTON).addStyle(HtmlStyles.showSidebar)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TableOfContents.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -32,4 +32,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n@@ -37,0 +33,2 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.BodyContents;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -41,0 +39,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -81,2 +82,2 @@\n-                HtmlStyle.title, headContent);\n-        var div = HtmlTree.DIV(HtmlStyle.header, heading);\n+                HtmlStyles.title, headContent);\n+        var div = HtmlTree.DIV(HtmlStyles.header, heading);\n@@ -108,1 +109,1 @@\n-            var span = HtmlTree.SPAN(HtmlStyle.packageHierarchyLabel,\n+            var span = HtmlTree.SPAN(HtmlStyles.packageHierarchyLabel,\n@@ -111,1 +112,1 @@\n-            var ul = HtmlTree.UL(HtmlStyle.horizontal).addStyle(HtmlStyle.contentsList);\n+            var ul = HtmlTree.UL(HtmlStyles.horizontal).addStyle(HtmlStyles.contentsList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TreeWriter.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n@@ -36,0 +34,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n+\n@@ -99,1 +102,1 @@\n-                .add(HtmlTree.DIV(HtmlStyle.mainGrid)\n+                .add(HtmlTree.DIV(HtmlStyles.mainGrid)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/BodyContents.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -41,0 +40,6 @@\n+import jdk.javadoc.internal.html.Comment;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Script;\n@@ -270,1 +275,1 @@\n-        var head = new HtmlTree(TagName.HEAD);\n+        var head = new HtmlTree(HtmlTag.HEAD);\n@@ -298,1 +303,1 @@\n-            var link = new HtmlTree(TagName.LINK);\n+            var link = new HtmlTree(HtmlTag.LINK);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Head.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1,123 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n-\n-import jdk.javadoc.internal.doclets.toolkit.util.Utils;\n-\n-\/**\n- * Enum representing HTML tag attributes.\n- *\/\n-public enum HtmlAttr {\n-    ALT,\n-    ARIA_CONTROLS(\"aria-controls\"),\n-    ARIA_EXPANDED(\"aria-expanded\"),\n-    ARIA_LABEL(\"aria-label\"),\n-    ARIA_LABELLEDBY(\"aria-labelledby\"),\n-    ARIA_ORIENTATION(\"aria-orientation\"),\n-    ARIA_SELECTED(\"aria-selected\"),\n-    AUTOCOMPLETE,\n-    CHECKED,\n-    CLASS,\n-    CLEAR,\n-    COLS,\n-    CONTENT,\n-    DATA_COPIED(\"data-copied\"), \/\/ custom HTML5 data attribute\n-    DISABLED,\n-    FOR,\n-    HREF,\n-    HTTP_EQUIV(\"http-equiv\"),\n-    ID,\n-    LANG,\n-    NAME,\n-    ONCLICK,\n-    ONKEYDOWN,\n-    ONLOAD,\n-    PLACEHOLDER,\n-    REL,\n-    ROLE,\n-    ROWS,\n-    SCOPE,\n-    SCROLLING,\n-    SRC,\n-    STYLE,\n-    SUMMARY,\n-    TABINDEX,\n-    TARGET,\n-    TITLE,\n-    TYPE,\n-    VALUE,\n-    WIDTH;\n-\n-    private final String value;\n-\n-    public enum Role {\n-\n-        BANNER,\n-        CONTENTINFO,\n-        MAIN,\n-        NAVIGATION,\n-        REGION;\n-\n-        private final String role;\n-\n-        Role() {\n-            role = Utils.toLowerCase(name());\n-        }\n-\n-        public String toString() {\n-            return role;\n-        }\n-    }\n-\n-    public enum InputType {\n-\n-        CHECKBOX,\n-        RESET,\n-        TEXT;\n-\n-        private final String type;\n-\n-        InputType() {\n-            type = Utils.toLowerCase(name());\n-        }\n-\n-        public String toString() {\n-            return type;\n-        }\n-    }\n-\n-    HtmlAttr() {\n-        this.value = Utils.toLowerCase(name());\n-    }\n-\n-    HtmlAttr(String name) {\n-        this.value = name;\n-    }\n-\n-    public String toString() {\n-        return value;\n-    }\n-}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlAttr.java","additions":0,"deletions":123,"binary":false,"changes":123,"status":"deleted"},{"patch":"@@ -32,1 +32,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -35,0 +34,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.DocType;\n+import jdk.javadoc.internal.html.HtmlTag;\n@@ -46,1 +48,1 @@\n-     * @param html the {@link TagName#HTML HTML} element of the document\n+     * @param html the {@link HtmlTag#HTML HTML} element of the document\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlDocument.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+import jdk.javadoc.internal.html.HtmlStyle;\n+\n@@ -52,1 +54,1 @@\n-public enum HtmlStyle {\n+public enum HtmlStyles implements HtmlStyle {\n@@ -1101,1 +1103,1 @@\n-    HtmlStyle() {\n+    HtmlStyles() {\n@@ -1107,1 +1109,1 @@\n-    HtmlStyle(String cssName) {\n+    HtmlStyles(String cssName) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlStyles.java","additions":5,"deletions":3,"binary":false,"changes":8,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlStyle.java","status":"renamed"},{"patch":"@@ -28,1 +28,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -31,0 +30,6 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -200,1 +205,1 @@\n-            l.addStyle(HtmlStyle.externalLink);\n+            l.addStyle(HtmlStyles.externalLink);\n@@ -214,1 +219,1 @@\n-            .setStyle(HtmlStyle.externalLink);\n+            .setStyle(HtmlStyles.externalLink);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Links.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1,118 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n-\n-import java.util.Locale;\n-\n-import jdk.javadoc.internal.doclets.toolkit.util.Utils;\n-\n-\/**\n- * Enum representing the names for HTML elements.\n- *\n- * @see <a href=\"https:\/\/html.spec.whatwg.org\/multipage\/syntax.html#syntax-tag-name\">WhatWG: Tag Name<\/a>\n- * @see <a href=\"https:\/\/www.w3.org\/TR\/html51\/syntax.html#tag-name\">HTML 5.1: Tag Name<\/a>\n- *\/\n-public enum TagName {\n-    A(true),\n-    ASIDE,\n-    BUTTON(true),\n-    BLOCKQUOTE,\n-    BODY,\n-    BR(true),\n-    CAPTION,\n-    CODE(true),\n-    DD,\n-    DETAILS,\n-    DIV,\n-    DL,\n-    DT,\n-    EM(true),\n-    FOOTER,\n-    FORM,\n-    H1,\n-    H2,\n-    H3,\n-    H4,\n-    H5,\n-    H6,\n-    HEAD,\n-    HEADER,\n-    HR,\n-    HTML,\n-    I(true),\n-    IMG(true),\n-    INPUT(true),\n-    LABEL(true),\n-    LI,\n-    LISTING,\n-    LINK(true),\n-    MAIN,\n-    MENU,\n-    META,\n-    NAV,\n-    NOSCRIPT(true),\n-    OL,\n-    P,\n-    PRE,\n-    SCRIPT(true),\n-    SECTION,\n-    SMALL(true),\n-    SPAN(true),\n-    STRONG(true),\n-    SUB(true),\n-    SUMMARY,\n-    SUP(true),\n-    TABLE,\n-    TBODY,\n-    THEAD,\n-    TD,\n-    TH,\n-    TITLE,\n-    TR,\n-    UL,\n-    WBR(true);\n-\n-    public final String value;\n-    public final boolean phrasingContent;\n-\n-    static TagName of(String s) {\n-        return valueOf(s.toUpperCase(Locale.ROOT));\n-    }\n-\n-    TagName() {\n-        this(false);\n-    }\n-\n-    TagName(boolean phrasingContent) {\n-        this.value = Utils.toLowerCase(name());\n-        this.phrasingContent = phrasingContent;\n-    }\n-\n-    public String toString() {\n-        return value;\n-    }\n-\n-}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/TagName.java","additions":0,"deletions":118,"binary":false,"changes":118,"status":"deleted"},{"patch":"@@ -30,1 +30,1 @@\n- * {@link jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree HtmlTree}\n+ * {@link jdk.javadoc.internal.html.HtmlTree HtmlTree}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -40,0 +39,1 @@\n+import jdk.javadoc.internal.html.Content;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/BaseTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,4 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -43,0 +40,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n@@ -64,1 +64,1 @@\n-                result.add(HtmlTree.SPAN(HtmlStyle.deprecatedLabel,\n+                result.add(HtmlTree.SPAN(HtmlStyles.deprecatedLabel,\n@@ -75,1 +75,1 @@\n-                result.add(HtmlTree.SPAN(HtmlStyle.deprecatedLabel,\n+                result.add(HtmlTree.SPAN(HtmlStyles.deprecatedLabel,\n@@ -81,1 +81,1 @@\n-                        result.add(HtmlTree.DIV(HtmlStyle.deprecationComment, body));\n+                        result.add(HtmlTree.DIV(HtmlStyles.deprecationComment, body));\n@@ -86,1 +86,1 @@\n-                    result.add(HtmlTree.SPAN(HtmlStyle.deprecatedLabel,\n+                    result.add(HtmlTree.SPAN(HtmlStyles.deprecatedLabel,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/DeprecatedTaglet.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -36,2 +36,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/DocRootTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/IndexTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -48,0 +47,1 @@\n+import jdk.javadoc.internal.html.Content;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/InheritDocTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,3 +49,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -55,0 +52,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/LinkTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,3 +37,3 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/LiteralTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,4 +46,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -53,0 +49,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/ParamTaglet.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,3 +44,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -49,0 +46,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/ReturnTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,4 +48,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -58,0 +54,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SeeTaglet.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -45,4 +45,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -50,0 +46,4 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.RawHtml;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SimpleTaglet.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,5 +54,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -64,1 +60,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -69,0 +64,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -125,1 +125,1 @@\n-        var pre = new HtmlTree(TagName.PRE).setStyle(HtmlStyle.snippet);\n+        var pre = new HtmlTree(HtmlTag.PRE).setStyle(HtmlStyles.snippet);\n@@ -131,1 +131,1 @@\n-        var code = new HtmlTree(TagName.CODE)\n+        var code = new HtmlTree(HtmlTag.CODE)\n@@ -199,2 +199,2 @@\n-        var snippetContainer = HtmlTree.DIV(HtmlStyle.snippetContainer,\n-                new HtmlTree(TagName.BUTTON)\n+        var snippetContainer = HtmlTree.DIV(HtmlStyles.snippetContainer,\n+                new HtmlTree(HtmlTag.BUTTON)\n@@ -203,1 +203,1 @@\n-                        .add(new HtmlTree(TagName.IMG)\n+                        .add(new HtmlTree(HtmlTag.IMG)\n@@ -207,2 +207,2 @@\n-                        .addStyle(HtmlStyle.copy)\n-                        .addStyle(HtmlStyle.snippetCopy)\n+                        .addStyle(HtmlStyles.copy)\n+                        .addStyle(HtmlStyles.snippetCopy)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SnippetTaglet.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.util.stream.Collectors;\n@@ -45,7 +44,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TextBuilder;\n@@ -55,0 +47,7 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.Entity;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.RawHtml;\n+import jdk.javadoc.internal.html.Text;\n+import jdk.javadoc.internal.html.TextBuilder;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SpecTaglet.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SummaryTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTree;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SystemPropertyTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+\n@@ -32,0 +33,1 @@\n+\n@@ -33,2 +35,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.HtmlTree;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/Taglet.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-\n@@ -48,0 +47,1 @@\n+\n@@ -52,8 +52,1 @@\n-import jdk.javadoc.internal.doclets.formats.html.IndexWriter;\n-import jdk.javadoc.internal.doclets.formats.html.SummaryListWriter;\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -67,0 +60,5 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlId;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.Text;\n@@ -380,1 +378,1 @@\n-            result = HtmlTree.SPAN(id, HtmlStyle.searchTagResult, tagContent);\n+            result = HtmlTree.SPAN(id, HtmlStyles.searchTagResult, tagContent);\n@@ -460,1 +458,1 @@\n-        var list = HtmlTree.UL(hasLongLabels ? HtmlStyle.tagListLong : HtmlStyle.tagList);\n+        var list = HtmlTree.UL(hasLongLabels ? HtmlStyles.tagListLong : HtmlStyles.tagList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/TagletWriter.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -60,3 +60,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ContentBuilder;\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -66,0 +63,3 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.ContentBuilder;\n+import jdk.javadoc.internal.html.HtmlTree;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/ThrowsTaglet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,2 +35,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.RawHtml;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/UserTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -44,1 +43,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n@@ -46,0 +44,2 @@\n+import jdk.javadoc.internal.html.Content;\n+import jdk.javadoc.internal.html.Text;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/ValueTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -104,3 +104,10 @@\n-import jdk.javadoc.internal.doclint.HtmlTag.AttrKind;\n-import jdk.javadoc.internal.doclint.HtmlTag.ElemKind;\n-import static jdk.javadoc.internal.doclint.Messages.Group.*;\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlAttr.AttrKind;\n+import jdk.javadoc.internal.html.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTag.ElemKind;\n+\n+import static jdk.javadoc.internal.doclint.Messages.Group.ACCESSIBILITY;\n+import static jdk.javadoc.internal.doclint.Messages.Group.HTML;\n+import static jdk.javadoc.internal.doclint.Messages.Group.MISSING;\n+import static jdk.javadoc.internal.doclint.Messages.Group.REFERENCE;\n+import static jdk.javadoc.internal.doclint.Messages.Group.SYNTAX;\n@@ -135,1 +142,1 @@\n-        final Set<HtmlTag.Attr> attrs;\n+        final Set<HtmlAttr> attrs;\n@@ -140,1 +147,1 @@\n-            attrs = EnumSet.noneOf(HtmlTag.Attr.class);\n+            attrs = EnumSet.noneOf(HtmlAttr.class);\n@@ -402,1 +409,1 @@\n-        final HtmlTag t = HtmlTag.get(treeName);\n+        final HtmlTag t = HtmlTag.of(treeName);\n@@ -475,1 +482,1 @@\n-                        if (!top.attrs.contains(HtmlTag.Attr.ALT))\n+                        if (!top.attrs.contains(HtmlAttr.ALT))\n@@ -595,1 +602,1 @@\n-        final HtmlTag t = HtmlTag.get(treeName);\n+        final HtmlTag t = HtmlTag.of(treeName);\n@@ -608,1 +615,1 @@\n-                                    && !top.attrs.contains(HtmlTag.Attr.SUMMARY)\n+                                    && !top.attrs.contains(HtmlAttr.SUMMARY)\n@@ -685,1 +692,1 @@\n-            HtmlTag.Attr attr = currTag.getAttr(name);\n+            HtmlAttr attr = currTag.getAttr(name);\n@@ -761,1 +768,2 @@\n-                                    env.messages.error(HTML, tree, \"dc.attr.table.border.not.valid\", attr);\n+                                    env.messages.error(HTML, tree, \"dc.attr.table.border.not.valid\",\n+                                            (v == null ? tree : v));\n@@ -764,1 +772,1 @@\n-                                env.messages.error(HTML, tree, \"dc.attr.table.border.not.number\", attr);\n+                                env.messages.error(HTML, tree, \"dc.attr.table.border.not.number\", v);\n@@ -770,1 +778,2 @@\n-                                    env.messages.error(HTML, tree, \"dc.attr.img.border.not.valid\", attr);\n+                                    env.messages.error(HTML, tree, \"dc.attr.img.border.not.valid\",\n+                                            (v == null ? tree : v));\n@@ -773,1 +782,1 @@\n-                                env.messages.error(HTML, tree, \"dc.attr.img.border.not.number\", attr);\n+                                env.messages.error(HTML, tree, \"dc.attr.img.border.not.number\", v);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":23,"deletions":14,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -1,674 +0,0 @@\n-\/*\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.javadoc.internal.doclint;\n-\n-import java.util.EnumMap;\n-import java.util.EnumSet;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.Set;\n-import javax.lang.model.element.Name;\n-\n-import com.sun.tools.javac.util.StringUtils;\n-\n-import static jdk.javadoc.internal.doclint.HtmlTag.Attr.*;\n-\n-\/**\n- * Enum representing HTML tags.\n- *\n- * The intent of this class is to embody the semantics of the current HTML standard,\n- * to the extent supported\/used by javadoc.\n- *\n- * This class is derivative of {@link jdk.javadoc.internal.doclets.formats.html.markup.TagName}.\n- * Eventually, these two should be merged back together, and possibly made\n- * public.\n- *\n- * @see <a href=\"https:\/\/html.spec.whatwg.org\/multipage\/\">HTML Living Standard<\/a>\n- * @see <a href=\"http:\/\/www.w3.org\/TR\/html5\/\">HTML 5 Specification<\/a>\n- * @see <a href=\"http:\/\/www.w3.org\/TR\/REC-html40\/\">HTML 4.01 Specification<\/a>\n- * @see <a href=\"http:\/\/www.w3.org\/TR\/wai-aria\/\">WAI-ARIA Specification<\/a>\n- * @see <a href=\"http:\/\/www.w3.org\/TR\/aria-in-html\/#recommendations-table\">WAI-ARIA Recommendations Table<\/a>\n- *\/\n-public enum HtmlTag {\n-    A(BlockType.INLINE, EndKind.REQUIRED,\n-            attrs(AttrKind.OK, HREF, TARGET, ID),\n-            attrs(AttrKind.HTML4, REV, CHARSET, SHAPE, COORDS, NAME)),\n-\n-    ABBR(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    ACRONYM(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    ADDRESS(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    ARTICLE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    ASIDE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    B(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    BDI(BlockType.INLINE, EndKind.REQUIRED),\n-\n-    BIG(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT)),\n-\n-    BLOCKQUOTE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    BODY(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    BR(BlockType.INLINE, EndKind.NONE,\n-            attrs(AttrKind.HTML4, CLEAR)),\n-\n-    CAPTION(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, ALIGN)),\n-\n-    CENTER(ElemKind.HTML4, BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    CITE(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    CODE(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    COL(BlockType.TABLE_ITEM, EndKind.NONE,\n-            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, VALIGN, WIDTH)),\n-\n-    COLGROUP(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, VALIGN, WIDTH)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == COL);\n-        }\n-    },\n-\n-    DD(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT)),\n-\n-    DEL(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST),\n-            attrs(AttrKind.OK, Attr.CITE, Attr.DATETIME)),\n-\n-    DFN(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    DIV(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n-            attrs(AttrKind.HTML4, ALIGN)),\n-\n-    DL(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, COMPACT)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == DT) || (t == DD);\n-        }\n-    },\n-\n-    DT(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT)),\n-\n-    EM(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.NO_NEST)),\n-\n-    FONT(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED, \/\/ tag itself is deprecated\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, SIZE, COLOR, FACE)),\n-\n-    FOOTER(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            switch (t) {\n-                case HEADER: case FOOTER: case MAIN:\n-                    return false;\n-                default:\n-                    return (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n-            }\n-        }\n-    },\n-\n-    FIGURE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    FIGCAPTION(BlockType.BLOCK, EndKind.REQUIRED),\n-\n-    FRAME(ElemKind.HTML4, BlockType.OTHER, EndKind.NONE),\n-\n-    FRAMESET(ElemKind.HTML4, BlockType.OTHER, EndKind.REQUIRED),\n-\n-    H1(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-    H2(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-    H3(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-    H4(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-    H5(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-    H6(BlockType.BLOCK, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN)),\n-\n-    HEAD(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    HEADER(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            switch (t) {\n-                case HEADER: case FOOTER: case MAIN:\n-                    return false;\n-                default:\n-                    return (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n-            }\n-        }\n-    },\n-\n-    HR(BlockType.BLOCK, EndKind.NONE,\n-            attrs(AttrKind.HTML4, WIDTH, ALIGN, NOSHADE, SIZE)),\n-\n-    HTML(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    I(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    IFRAME(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    IMG(BlockType.INLINE, EndKind.NONE,\n-            attrs(AttrKind.OK, SRC, ALT, HEIGHT, WIDTH, CROSSORIGIN),\n-            attrs(AttrKind.HTML4, NAME, ALIGN, HSPACE, VSPACE, BORDER)),\n-\n-    INS(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST),\n-            attrs(AttrKind.OK, Attr.CITE, Attr.DATETIME)),\n-\n-    KBD(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    LI(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n-            attrs(AttrKind.OK, VALUE),\n-            attrs(AttrKind.HTML4, TYPE)),\n-\n-    LINK(BlockType.OTHER, EndKind.NONE),\n-\n-    MAIN(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    MARK(BlockType.INLINE, EndKind.REQUIRED),\n-\n-    MENU(BlockType.BLOCK, EndKind.REQUIRED) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == LI);\n-        }\n-    },\n-\n-    META(BlockType.OTHER, EndKind.NONE),\n-\n-    NAV(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    NOFRAMES(ElemKind.HTML4, BlockType.OTHER, EndKind.REQUIRED),\n-\n-    NOSCRIPT(BlockType.BLOCK, EndKind.REQUIRED),\n-\n-    OL(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.OK, START, TYPE, REVERSED),\n-            attrs(AttrKind.HTML4, COMPACT)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == LI);\n-        }\n-    },\n-\n-    P(BlockType.BLOCK, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, ALIGN)),\n-\n-    PRE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, WIDTH)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            switch (t) {\n-                case IMG: case BIG: case SMALL: case SUB: case SUP:\n-                    return false;\n-                default:\n-                    return (t.blockType == BlockType.INLINE);\n-            }\n-        }\n-    },\n-\n-    Q(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    S(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    SAMP(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    SCRIPT(BlockType.OTHER, EndKind.REQUIRED,\n-            attrs(AttrKind.OK, SRC)),\n-\n-    SECTION(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    SMALL(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT)),\n-\n-    SPAN(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT)),\n-\n-    STRIKE(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT)),\n-\n-    STRONG(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT)),\n-\n-    STYLE(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    SUB(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    SUP(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    TABLE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.OK, BORDER),\n-            attrs(AttrKind.HTML4, SUMMARY, CELLPADDING, CELLSPACING,\n-                    Attr.FRAME, RULES, WIDTH, ALIGN, BGCOLOR)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            switch (t) {\n-                case CAPTION:\n-                case COLGROUP:\n-                case THEAD: case TBODY: case TFOOT:\n-                case TR: \/\/ HTML 3.2\n-                    return true;\n-                default:\n-                    return false;\n-            }\n-        }\n-    },\n-\n-    TBODY(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == TR);\n-        }\n-    },\n-\n-    TD(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n-            attrs(AttrKind.OK, COLSPAN, ROWSPAN, HEADERS),\n-            attrs(AttrKind.HTML4, AXIS, Attr.ABBR, SCOPE, ALIGN, VALIGN, CHAR, CHAROFF,\n-                    WIDTH, BGCOLOR, HEIGHT, NOWRAP)),\n-\n-    TEMPLATE(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n-\n-    TFOOT(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == TR);\n-        }\n-    },\n-\n-    TH(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n-            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n-            attrs(AttrKind.OK, COLSPAN, ROWSPAN, HEADERS, SCOPE, Attr.ABBR),\n-            attrs(AttrKind.HTML4, WIDTH, BGCOLOR, HEIGHT, NOWRAP, AXIS, ALIGN, CHAR, CHAROFF, VALIGN)),\n-\n-    THEAD(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n-            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == TR);\n-        }\n-    },\n-\n-    TIME(BlockType.INLINE, EndKind.REQUIRED),\n-\n-    TITLE(BlockType.OTHER, EndKind.REQUIRED),\n-\n-    TR(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n-            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, BGCOLOR, VALIGN)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == TH) || (t == TD);\n-        }\n-    },\n-\n-    TT(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    U(BlockType.INLINE, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n-\n-    UL(BlockType.BLOCK, EndKind.REQUIRED,\n-            EnumSet.of(Flag.EXPECT_CONTENT),\n-            attrs(AttrKind.HTML4, COMPACT, TYPE)) {\n-        @Override\n-        public boolean accepts(HtmlTag t) {\n-            return (t == LI);\n-        }\n-    },\n-\n-    WBR(BlockType.INLINE, EndKind.NONE),\n-\n-    VAR(BlockType.INLINE, EndKind.REQUIRED);\n-\n-    \/**\n-     * Enum representing the supportability of HTML element.\n-     *\/\n-    public enum ElemKind {\n-        OK,\n-        INVALID,\n-        OBSOLETE,\n-        HTML4\n-    }\n-\n-    \/**\n-     * Enum representing the type of HTML element.\n-     *\/\n-    public enum BlockType {\n-        BLOCK,\n-        INLINE,\n-        LIST_ITEM,\n-        TABLE_ITEM,\n-        OTHER\n-    }\n-\n-    \/**\n-     * Enum representing HTML end tag requirement.\n-     *\/\n-    public enum EndKind {\n-        NONE,\n-        OPTIONAL,\n-        REQUIRED\n-    }\n-\n-    public enum Flag {\n-        ACCEPTS_BLOCK,\n-        ACCEPTS_INLINE,\n-        EXPECT_CONTENT,\n-        NO_NEST\n-    }\n-\n-    public enum Attr {\n-        ABBR,\n-        ACCESSKEY(true),\n-        ALIGN,\n-        ALINK,\n-        ALT,\n-        ARIA_ACTIVEDESCENDANT(true),\n-        ARIA_CONTROLS(true),\n-        ARIA_DESCRIBEDBY(true),\n-        ARIA_EXPANDED(true),\n-        ARIA_LABEL(true),\n-        ARIA_LABELLEDBY(true),\n-        ARIA_LEVEL(true),\n-        ARIA_MULTISELECTABLE(true),\n-        ARIA_OWNS(true),\n-        ARIA_POSINSET(true),\n-        ARIA_READONLY(true),\n-        ARIA_REQUIRED(true),\n-        ARIA_SELECTED(true),\n-        ARIA_SETSIZE(true),\n-        ARIA_SORT(true),\n-        AUTOCAPITALIZE(true),\n-        AUTOFOCUS(true),\n-        AXIS,\n-        BACKGROUND,\n-        BGCOLOR,\n-        BORDER,\n-        CELLPADDING,\n-        CELLSPACING,\n-        CHAR,\n-        CHAROFF,\n-        CHARSET,\n-        CITE,\n-        CLASS(true),\n-        CLEAR,\n-        COLOR,\n-        COLSPAN,\n-        COMPACT,\n-        CONTENTEDITABLE(true),\n-        COORDS,\n-        CROSSORIGIN,\n-        DATETIME,\n-        DIR(true),\n-        DRAGGABLE(true),\n-        ENTERKEYHINT(true),\n-        FACE,\n-        FRAME,\n-        FRAMEBORDER,\n-        HEADERS,\n-        HEIGHT,\n-        HIDDEN(true),\n-        HREF,\n-        HSPACE,\n-        ID(true),\n-        INERT(true),\n-        INPUTMODE(true),\n-        IS(true),\n-        ITEMID(true),\n-        ITEMPROP(true),\n-        ITEMREF(true),\n-        ITEMSCOPE(true),\n-        ITEMTYPE(true),\n-        LANG(true),\n-        LINK,\n-        LONGDESC,\n-        MARGINHEIGHT,\n-        MARGINWIDTH,\n-        NAME,\n-        NONCE(true),\n-        NOSHADE,\n-        NOWRAP,\n-        POPOVER(true),\n-        PROFILE,\n-        REV,\n-        REVERSED,\n-        ROLE(true),\n-        ROWSPAN,\n-        RULES,\n-        SCHEME,\n-        SCOPE,\n-        SCROLLING,\n-        SHAPE,\n-        SIZE,\n-        SPACE,\n-        SPELLCHECK(true),\n-        SRC,\n-        START,\n-        STYLE(true),\n-        SUMMARY,\n-        TABINDEX(true),\n-        TARGET,\n-        TEXT,\n-        TITLE(true),\n-        TRANSLATE(true),\n-        TYPE,\n-        VALIGN,\n-        VALUE,\n-        VERSION,\n-        VLINK,\n-        VSPACE,\n-        WIDTH,\n-        WRITINGSUGGESTIONS(true);\n-\n-        private final String name;\n-        private final boolean isGlobal;\n-\n-        Attr() {\n-            this(false);\n-        }\n-\n-        Attr(boolean flag) {\n-            name = StringUtils.toLowerCase(name().replace(\"_\", \"-\"));\n-            isGlobal = flag;\n-        }\n-\n-        public boolean isGlobal() {\n-            return isGlobal;\n-        }\n-\n-        public String getText() {\n-            return name;\n-        }\n-\n-        static final Map<String,Attr> index = new HashMap<>();\n-        static {\n-            for (Attr t: values()) {\n-                index.put(t.getText(), t);\n-            }\n-        }\n-    }\n-\n-    public enum AttrKind {\n-        OK,\n-        INVALID,\n-        OBSOLETE,\n-        HTML4\n-    }\n-\n-    \/\/ This class exists to avoid warnings from using parameterized vararg type\n-    \/\/ Map<Attr,AttrKind> in signature of HtmlTag constructor.\n-    private static class AttrMap extends EnumMap<Attr,AttrKind>  {\n-        private static final long serialVersionUID = 0;\n-        AttrMap() {\n-            super(Attr.class);\n-        }\n-    }\n-\n-\n-    public final ElemKind elemKind;\n-    public final BlockType blockType;\n-    public final EndKind endKind;\n-    public final Set<Flag> flags;\n-    private final Map<Attr,AttrKind> attrs;\n-\n-    HtmlTag(BlockType blockType, EndKind endKind, AttrMap... attrMaps) {\n-        this(ElemKind.OK, blockType, endKind, Set.of(), attrMaps);\n-    }\n-\n-    HtmlTag(ElemKind elemKind, BlockType blockType, EndKind endKind, AttrMap... attrMaps) {\n-        this(elemKind, blockType, endKind, Set.of(), attrMaps);\n-    }\n-\n-    HtmlTag(BlockType blockType, EndKind endKind, Set<Flag> flags, AttrMap... attrMaps) {\n-        this(ElemKind.OK, blockType, endKind, flags, attrMaps);\n-    }\n-\n-    HtmlTag(ElemKind elemKind, BlockType blockType, EndKind endKind, Set<Flag> flags, AttrMap... attrMaps) {\n-        this.elemKind = elemKind;\n-        this.blockType = blockType;\n-        this.endKind = endKind;\n-        this.flags = flags;\n-        this.attrs = new EnumMap<>(Attr.class);\n-        for (Map<Attr,AttrKind> m: attrMaps)\n-            this.attrs.putAll(m);\n-    }\n-\n-    public boolean accepts(HtmlTag t) {\n-        if (flags.contains(Flag.ACCEPTS_BLOCK) && flags.contains(Flag.ACCEPTS_INLINE)) {\n-            return (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n-        } else if (flags.contains(Flag.ACCEPTS_BLOCK)) {\n-            return (t.blockType == BlockType.BLOCK);\n-        } else if (flags.contains(Flag.ACCEPTS_INLINE)) {\n-            return (t.blockType == BlockType.INLINE);\n-        } else\n-            switch (blockType) {\n-                case BLOCK:\n-                case INLINE:\n-                    return (t.blockType == BlockType.INLINE);\n-                case OTHER:\n-                    \/\/ OTHER tags are invalid in doc comments, and will be\n-                    \/\/ reported separately, so silently accept\/ignore any content\n-                    return true;\n-                default:\n-                    \/\/ any combination which could otherwise arrive here\n-                    \/\/ ought to have been handled in an overriding method\n-                    throw new AssertionError(this + \":\" + t);\n-            }\n-    }\n-\n-    public boolean acceptsText() {\n-        \/\/ generally, anywhere we can put text we can also put inline tag\n-        \/\/ so check if a typical inline tag is allowed\n-        return accepts(B);\n-    }\n-\n-    public String getText() {\n-        return StringUtils.toLowerCase(name());\n-    }\n-\n-    public Attr getAttr(Name attrName) {\n-        return Attr.index.get(StringUtils.toLowerCase(attrName.toString()));\n-    }\n-\n-    public AttrKind getAttrKind(Name attrName) {\n-        Attr attr = getAttr(attrName);\n-        if (attr == null) {\n-            return AttrKind.INVALID;\n-        }\n-        return attr.isGlobal() ?\n-                AttrKind.OK :\n-                attrs.getOrDefault(attr, AttrKind.INVALID);\n-    }\n-\n-    private static AttrMap attrs(AttrKind k, Attr... attrs) {\n-        AttrMap map = new AttrMap();\n-        for (Attr a: attrs) map.put(a, k);\n-        return map;\n-    }\n-\n-    private static final Map<String, HtmlTag> index = new HashMap<>();\n-    static {\n-        for (HtmlTag t: values()) {\n-            index.put(t.getText(), t);\n-        }\n-    }\n-\n-    public static HtmlTag get(Name tagName) {\n-        return index.get(StringUtils.toLowerCase(tagName.toString()));\n-    }\n-}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/HtmlTag.java","additions":0,"deletions":674,"binary":false,"changes":674,"status":"deleted"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -32,2 +32,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/Comment.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Comment.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html;\n+package jdk.javadoc.internal.html;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/Content.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Content.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -34,2 +34,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/ContentBuilder.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/ContentBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/DocType.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/DocType.java","status":"renamed"},{"patch":"@@ -26,3 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n-\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n+package jdk.javadoc.internal.html;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/Entity.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Entity.java","status":"renamed"},{"patch":"@@ -0,0 +1,248 @@\n+\/*\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.javadoc.internal.html;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Locale;\n+\n+public enum HtmlAttr {\n+    ABBR,\n+    ACCESSKEY(true),\n+    ALIGN,\n+    ALINK,\n+    ALT,\n+    ARIA_ACTIVEDESCENDANT(true),\n+    ARIA_CONTROLS(true),\n+    ARIA_DESCRIBEDBY(true),\n+    ARIA_EXPANDED(true),\n+    ARIA_LABEL(true),\n+    ARIA_LABELLEDBY(true),\n+    ARIA_LEVEL(true),\n+    ARIA_MULTISELECTABLE(true),\n+    ARIA_ORIENTATION(true),\n+    ARIA_OWNS(true),\n+    ARIA_POSINSET(true),\n+    ARIA_READONLY(true),\n+    ARIA_REQUIRED(true),\n+    ARIA_SELECTED(true),\n+    ARIA_SETSIZE(true),\n+    ARIA_SORT(true),\n+    AUTOCAPITALIZE(true),\n+    AUTOCOMPLETE,\n+    AUTOFOCUS(true),\n+    AXIS,\n+    BACKGROUND,\n+    BGCOLOR,\n+    BORDER,\n+    CELLPADDING,\n+    CELLSPACING,\n+    CHAR,\n+    CHAROFF,\n+    CHARSET,\n+    CHECKED,\n+    CITE,\n+    CLASS(true),\n+    CLEAR,\n+    COLOR,\n+    COLS,\n+    COLSPAN,\n+    COMPACT,\n+    CONTENT,\n+    CONTENTEDITABLE(true),\n+    COORDS,\n+    CROSSORIGIN,\n+    DATA_COPIED, \/\/ custom HTML5 data attribute\n+    DATETIME,\n+    DIR(true),\n+    DISABLED,\n+    DRAGGABLE(true),\n+    ENTERKEYHINT(true),\n+    FACE,\n+    FOR,\n+    FORM,\n+    FRAME,\n+    FRAMEBORDER,\n+    HEADERS,\n+    HEIGHT,\n+    HIDDEN(true),\n+    HREF,\n+    HSPACE,\n+    HTTP_EQUIV,\n+    ID(true),\n+    INERT(true),\n+    INPUTMODE(true),\n+    IS(true),\n+    ITEMID(true),\n+    ITEMPROP(true),\n+    ITEMREF(true),\n+    ITEMSCOPE(true),\n+    ITEMTYPE(true),\n+    LANG(true),\n+    LINK,\n+    LONGDESC,\n+    MARGINHEIGHT,\n+    MARGINWIDTH,\n+    NAME,\n+    NONCE(true),\n+    NOSHADE,\n+    NOWRAP,\n+    ONCLICK,\n+    ONKEYDOWN,\n+    ONLOAD,\n+    PLACEHOLDER,\n+    POPOVER(true),\n+    PROFILE,\n+    REL,\n+    REV,\n+    REVERSED,\n+    ROLE(true),\n+    ROWS,\n+    ROWSPAN,\n+    RULES,\n+    SCHEME,\n+    SCOPE,\n+    SCROLLING,\n+    SHAPE,\n+    SIZE,\n+    SPACE,\n+    SPELLCHECK(true),\n+    SRC,\n+    START,\n+    STYLE(true),\n+    SUMMARY,\n+    TABINDEX(true),\n+    TARGET,\n+    TEXT,\n+    TITLE(true),\n+    TRANSLATE(true),\n+    TYPE,\n+    VALIGN,\n+    VALUE,\n+    VERSION,\n+    VLINK,\n+    VSPACE,\n+    WIDTH,\n+    WRITINGSUGGESTIONS(true);\n+\n+    \/**\n+     * The \"external\" name of this attribute.\n+     *\/\n+    private final String name;\n+    \/**\n+     * Whether this is a global attribute, that can be used with all HTML tags.\n+     *\/\n+    private final boolean isGlobal;\n+\n+    public enum Role {\n+\n+        BANNER,\n+        CONTENTINFO,\n+        MAIN,\n+        NAVIGATION,\n+        REGION;\n+\n+        private final String role;\n+\n+        Role() {\n+            role = name().toLowerCase(Locale.ROOT);\n+        }\n+\n+        public String toString() {\n+            return role;\n+        }\n+    }\n+\n+    public enum InputType {\n+\n+        CHECKBOX,\n+        RESET,\n+        TEXT;\n+\n+        private final String type;\n+\n+        InputType() {\n+            type = name().toLowerCase(Locale.ROOT);\n+        }\n+\n+        public String toString() {\n+            return type;\n+        }\n+    }\n+\n+    public enum AttrKind {\n+        OK,\n+        INVALID,\n+        OBSOLETE,\n+        HTML4\n+    }\n+\n+    HtmlAttr() {\n+        this(false);\n+    }\n+\n+    HtmlAttr(boolean flag) {\n+        name = name().toLowerCase(Locale.ROOT).replace(\"_\", \"-\");\n+        isGlobal = flag;\n+    }\n+\n+    \/**\n+     * {@return the \"external\" name of this attribute}\n+     * The external name is the name of the enum member in lower case with {@code _} replaced by {@code -}.\n+     *\/\n+    public String getName() {\n+        return name;\n+    }\n+\n+    \/**\n+     * {@return whether this attribute is a global attribute, that may appear on all tags}\n+     *\/\n+    public boolean isGlobal() {\n+        return isGlobal;\n+    }\n+\n+    \/\/ FIXME: this is used in doclint Checker, when generating messages\n+    @Override\n+    public String toString() {\n+        return name;\n+    }\n+\n+    private static final Map<String, HtmlAttr> index = new HashMap<>();\n+    static {\n+        for (HtmlAttr t : values()) {\n+            index.put(t.getName(), t);\n+        }\n+    }\n+\n+    \/**\n+     * {@return the attribute with the given name, or {@code null} if there is no known attribute}\n+     *\n+     * @param name the name\n+     *\/\n+    public static HtmlAttr of(CharSequence name) {\n+        return index.get(name.toString().toLowerCase(Locale.ROOT));\n+    }\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlAttr.java","additions":248,"deletions":0,"binary":false,"changes":248,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlId.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlId.java","status":"renamed"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.javadoc.internal.html;\n+\n+public interface HtmlStyle {\n+    String cssName();\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlStyle.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"@@ -0,0 +1,533 @@\n+\/*\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.javadoc.internal.html;\n+\n+import java.io.Serial;\n+import java.util.EnumMap;\n+import java.util.EnumSet;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import javax.lang.model.element.Name;\n+\n+import static jdk.javadoc.internal.html.HtmlAttr.*;\n+\n+\/**\n+ * Enum representing HTML tags.\n+ *\n+ * The intent of this class is to embody the semantics of the current HTML standard,\n+ * to the extent supported\/used by javadoc.\n+ *\n+ * @see <a href=\"https:\/\/html.spec.whatwg.org\/multipage\/\">HTML Living Standard<\/a>\n+ * @see <a href=\"http:\/\/www.w3.org\/TR\/html5\/\">HTML 5 Specification<\/a>\n+ * @see <a href=\"http:\/\/www.w3.org\/TR\/REC-html40\/\">HTML 4.01 Specification<\/a>\n+ * @see <a href=\"http:\/\/www.w3.org\/TR\/wai-aria\/\">WAI-ARIA Specification<\/a>\n+ * @see <a href=\"http:\/\/www.w3.org\/TR\/aria-in-html\/#recommendations-table\">WAI-ARIA Recommendations Table<\/a>\n+ *\/\n+public enum HtmlTag {\n+    A(BlockType.INLINE, EndKind.REQUIRED,\n+            attrs(AttrKind.OK, HREF, TARGET, ID),\n+            attrs(AttrKind.HTML4, REV, CHARSET, SHAPE, COORDS, NAME)),\n+\n+    ABBR(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    ACRONYM(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    ADDRESS(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    ARTICLE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    ASIDE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    B(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    BDI(BlockType.INLINE, EndKind.REQUIRED),\n+\n+    BIG(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT)),\n+\n+    BLOCKQUOTE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    BODY(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    BR(BlockType.INLINE, EndKind.NONE,\n+            attrs(AttrKind.HTML4, CLEAR)),\n+\n+    BUTTON(BlockType.OTHER, EndKind.REQUIRED,\n+            attrs(AttrKind.OK, FORM, NAME, TYPE, VALUE)),\n+\n+    CAPTION(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, ALIGN)),\n+\n+    CENTER(ElemKind.HTML4, BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    CITE(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    CODE(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    COL(BlockType.TABLE_ITEM, EndKind.NONE,\n+            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, VALIGN, WIDTH)),\n+\n+    COLGROUP(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, VALIGN, WIDTH)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == COL);\n+        }\n+    },\n+\n+    DD(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT)),\n+\n+    DEL(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST),\n+            attrs(AttrKind.OK, HtmlAttr.CITE, HtmlAttr.DATETIME)),\n+\n+    DETAILS(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    DFN(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    DIV(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n+            attrs(AttrKind.HTML4, ALIGN)),\n+\n+    DL(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, COMPACT)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == DT) || (t == DD);\n+        }\n+    },\n+\n+    DT(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.ACCEPTS_INLINE, Flag.EXPECT_CONTENT)),\n+\n+    EM(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.NO_NEST)),\n+\n+    FONT(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED, \/\/ tag itself is deprecated\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, SIZE, COLOR, FACE)),\n+\n+    FOOTER(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return switch (t) {\n+                case HEADER, FOOTER, MAIN -> false;\n+                default -> (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n+            };\n+        }\n+    },\n+\n+    FIGURE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    FIGCAPTION(BlockType.BLOCK, EndKind.REQUIRED),\n+\n+    FRAME(ElemKind.HTML4, BlockType.OTHER, EndKind.NONE),\n+\n+    FRAMESET(ElemKind.HTML4, BlockType.OTHER, EndKind.REQUIRED),\n+\n+    H1(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+    H2(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+    H3(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+    H4(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+    H5(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+    H6(BlockType.BLOCK, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN)),\n+\n+    HEAD(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    HEADER(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return switch (t) {\n+                case HEADER, FOOTER, MAIN -> false;\n+                default -> (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n+            };\n+        }\n+    },\n+\n+    HR(BlockType.BLOCK, EndKind.NONE,\n+            attrs(AttrKind.HTML4, WIDTH, ALIGN, NOSHADE, SIZE)),\n+\n+    HTML(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    I(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    IFRAME(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    IMG(BlockType.INLINE, EndKind.NONE,\n+            attrs(AttrKind.OK, SRC, ALT, HEIGHT, WIDTH, CROSSORIGIN),\n+            attrs(AttrKind.HTML4, NAME, ALIGN, HSPACE, VSPACE, BORDER)),\n+\n+    INPUT(BlockType.OTHER, EndKind.NONE,\n+            attrs(AttrKind.OK, NAME, TYPE, VALUE)),\n+\n+    INS(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST),\n+            attrs(AttrKind.OK, HtmlAttr.CITE, HtmlAttr.DATETIME)),\n+\n+    KBD(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    LABEL(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    LI(BlockType.LIST_ITEM, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n+            attrs(AttrKind.OK, VALUE),\n+            attrs(AttrKind.HTML4, TYPE)),\n+\n+    LINK(BlockType.OTHER, EndKind.NONE),\n+\n+    MAIN(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    MARK(BlockType.INLINE, EndKind.REQUIRED),\n+\n+    MENU(BlockType.BLOCK, EndKind.REQUIRED) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == LI);\n+        }\n+    },\n+\n+    META(BlockType.OTHER, EndKind.NONE),\n+\n+    NAV(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    NOFRAMES(ElemKind.HTML4, BlockType.OTHER, EndKind.REQUIRED),\n+\n+    NOSCRIPT(BlockType.BLOCK, EndKind.REQUIRED),\n+\n+    OL(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.OK, START, TYPE, REVERSED),\n+            attrs(AttrKind.HTML4, COMPACT)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == LI);\n+        }\n+    },\n+\n+    P(BlockType.BLOCK, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, ALIGN)),\n+\n+    PRE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, WIDTH)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return switch (t) {\n+                case IMG, BIG, SMALL, SUB, SUP -> false;\n+                default -> (t.blockType == BlockType.INLINE);\n+            };\n+        }\n+    },\n+\n+    Q(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    S(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    SAMP(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    SCRIPT(BlockType.OTHER, EndKind.REQUIRED,\n+            attrs(AttrKind.OK, SRC)),\n+\n+    SECTION(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    SMALL(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT)),\n+\n+    SPAN(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT)),\n+\n+    STRIKE(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT)),\n+\n+    STRONG(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT)),\n+\n+    STYLE(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    SUB(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    SUMMARY(BlockType.BLOCK, EndKind.REQUIRED),\n+\n+    SUP(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    TABLE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.OK, BORDER),\n+            attrs(AttrKind.HTML4, HtmlAttr.SUMMARY, CELLPADDING, CELLSPACING,\n+                    HtmlAttr.FRAME, RULES, WIDTH, ALIGN, BGCOLOR)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return switch (t) {\n+                case CAPTION, COLGROUP, THEAD, TBODY, TFOOT, TR -> true;\n+                default -> false;\n+            };\n+        }\n+    },\n+\n+    TBODY(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == TR);\n+        }\n+    },\n+\n+    TD(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n+            attrs(AttrKind.OK, COLSPAN, ROWSPAN, HEADERS),\n+            attrs(AttrKind.HTML4, AXIS, HtmlAttr.ABBR, SCOPE, ALIGN, VALIGN, CHAR, CHAROFF,\n+                    WIDTH, BGCOLOR, HEIGHT, NOWRAP)),\n+\n+    TEMPLATE(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE)),\n+\n+    TFOOT(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == TR);\n+        }\n+    },\n+\n+    TH(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n+            EnumSet.of(Flag.ACCEPTS_BLOCK, Flag.ACCEPTS_INLINE),\n+            attrs(AttrKind.OK, COLSPAN, ROWSPAN, HEADERS, SCOPE, HtmlAttr.ABBR),\n+            attrs(AttrKind.HTML4, WIDTH, BGCOLOR, HEIGHT, NOWRAP, AXIS, ALIGN, CHAR, CHAROFF, VALIGN)),\n+\n+    THEAD(BlockType.TABLE_ITEM, EndKind.REQUIRED,\n+            attrs(AttrKind.HTML4, ALIGN, VALIGN, CHAR, CHAROFF)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == TR);\n+        }\n+    },\n+\n+    TIME(BlockType.INLINE, EndKind.REQUIRED),\n+\n+    TITLE(BlockType.OTHER, EndKind.REQUIRED),\n+\n+    TR(BlockType.TABLE_ITEM, EndKind.OPTIONAL,\n+            attrs(AttrKind.HTML4, ALIGN, CHAR, CHAROFF, BGCOLOR, VALIGN)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == TH) || (t == TD);\n+        }\n+    },\n+\n+    TT(ElemKind.HTML4, BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    U(BlockType.INLINE, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT, Flag.NO_NEST)),\n+\n+    UL(BlockType.BLOCK, EndKind.REQUIRED,\n+            EnumSet.of(Flag.EXPECT_CONTENT),\n+            attrs(AttrKind.HTML4, COMPACT, TYPE)) {\n+        @Override\n+        public boolean accepts(HtmlTag t) {\n+            return (t == LI);\n+        }\n+    },\n+\n+    WBR(BlockType.INLINE, EndKind.NONE),\n+\n+    VAR(BlockType.INLINE, EndKind.REQUIRED);\n+\n+    \/**\n+     * Enum representing the supportability of HTML element.\n+     *\/\n+    public enum ElemKind {\n+        OK,\n+        INVALID,\n+        OBSOLETE,\n+        HTML4\n+    }\n+\n+    \/**\n+     * Enum representing the type of HTML element.\n+     *\/\n+    public enum BlockType {\n+        BLOCK,\n+        INLINE,\n+        LIST_ITEM,\n+        TABLE_ITEM,\n+        OTHER\n+    }\n+\n+    \/**\n+     * Enum representing HTML end tag requirement.\n+     *\/\n+    public enum EndKind {\n+        NONE,\n+        OPTIONAL,\n+        REQUIRED\n+    }\n+\n+    public enum Flag {\n+        ACCEPTS_BLOCK,\n+        ACCEPTS_INLINE,\n+        EXPECT_CONTENT,\n+        NO_NEST\n+    }\n+\n+    \/\/ This class exists to avoid warnings from using parameterized vararg type\n+    \/\/ Map<Attr,AttrKind> in signature of HtmlTag constructor.\n+    private static class AttrMap extends EnumMap<HtmlAttr,AttrKind> {\n+        @Serial\n+        private static final long serialVersionUID = 0;\n+        AttrMap() {\n+            super(HtmlAttr.class);\n+        }\n+    }\n+\n+\n+    public final ElemKind elemKind;\n+    public final BlockType blockType;\n+    public final EndKind endKind;\n+    public final Set<Flag> flags;\n+    private final Map<HtmlAttr,AttrKind> attrs;\n+\n+    HtmlTag(BlockType blockType, EndKind endKind, AttrMap... attrMaps) {\n+        this(ElemKind.OK, blockType, endKind, Set.of(), attrMaps);\n+    }\n+\n+    HtmlTag(ElemKind elemKind, BlockType blockType, EndKind endKind, AttrMap... attrMaps) {\n+        this(elemKind, blockType, endKind, Set.of(), attrMaps);\n+    }\n+\n+    HtmlTag(BlockType blockType, EndKind endKind, Set<Flag> flags, AttrMap... attrMaps) {\n+        this(ElemKind.OK, blockType, endKind, flags, attrMaps);\n+    }\n+\n+    HtmlTag(ElemKind elemKind, BlockType blockType, EndKind endKind, Set<Flag> flags, AttrMap... attrMaps) {\n+        this.elemKind = elemKind;\n+        this.blockType = blockType;\n+        this.endKind = endKind;\n+        this.flags = flags;\n+        this.attrs = new EnumMap<>(HtmlAttr.class);\n+        for (Map<HtmlAttr,AttrKind> m: attrMaps)\n+            this.attrs.putAll(m);\n+    }\n+\n+    public boolean accepts(HtmlTag t) {\n+        if (flags.contains(Flag.ACCEPTS_BLOCK) && flags.contains(Flag.ACCEPTS_INLINE)) {\n+            return (t.blockType == BlockType.BLOCK) || (t.blockType == BlockType.INLINE);\n+        } else if (flags.contains(Flag.ACCEPTS_BLOCK)) {\n+            return (t.blockType == BlockType.BLOCK);\n+        } else if (flags.contains(Flag.ACCEPTS_INLINE)) {\n+            return (t.blockType == BlockType.INLINE);\n+        } else {\n+            \/\/ any combination which could otherwise arrive here\n+            \/\/ ought to have been handled in an overriding method\n+            return switch (blockType) {\n+                case BLOCK, INLINE -> (t.blockType == BlockType.INLINE);\n+                case OTHER ->\n+                    \/\/ OTHER tags are invalid in doc comments, and will be\n+                    \/\/ reported separately, so silently accept\/ignore any content\n+                        true;\n+                default -> throw new AssertionError(this + \":\" + t);\n+            };\n+        }\n+    }\n+\n+    public boolean acceptsText() {\n+        \/\/ generally, anywhere we can put text we can also put inline tag\n+        \/\/ so check if a typical inline tag is allowed\n+        return accepts(B);\n+    }\n+\n+    public String getName() {\n+        return name().toLowerCase(Locale.ROOT).replace(\"_\", \"-\");\n+    }\n+\n+    public HtmlAttr getAttr(Name attrName) {\n+        return HtmlAttr.of(attrName);\n+    }\n+\n+    public AttrKind getAttrKind(Name attrName) {\n+        HtmlAttr attr = getAttr(attrName);\n+        if (attr == null) {\n+            return AttrKind.INVALID;\n+        }\n+        return attr.isGlobal() ?\n+                AttrKind.OK :\n+                attrs.getOrDefault(attr, AttrKind.INVALID);\n+    }\n+\n+    private static AttrMap attrs(AttrKind k, HtmlAttr... attrs) {\n+        AttrMap map = new AttrMap();\n+        for (HtmlAttr a : attrs) map.put(a, k);\n+        return map;\n+    }\n+\n+    private static final Map<String, HtmlTag> index = new HashMap<>();\n+    static {\n+        for (HtmlTag t: values()) {\n+            index.put(t.getName(), t);\n+        }\n+    }\n+\n+    public static HtmlTag of(CharSequence tagName) {\n+        return index.get(tagName.toString().toLowerCase(Locale.ROOT));\n+    }\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlTag.java","additions":533,"deletions":0,"binary":false,"changes":533,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -41,3 +41,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr.Role;\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n@@ -66,1 +63,1 @@\n-     * The name of the HTML element.\n+     * The tag for the HTML element.\n@@ -69,1 +66,1 @@\n-    public final TagName tagName;\n+    public final HtmlTag tag;\n@@ -87,1 +84,1 @@\n-     * @param tagName the name\n+     * @param tag the name\n@@ -89,2 +86,2 @@\n-    public HtmlTree(TagName tagName) {\n-        this.tagName = Objects.requireNonNull(tagName);\n+    public HtmlTree(HtmlTag tag) {\n+        this.tag = Objects.requireNonNull(tag);\n@@ -134,1 +131,1 @@\n-    public HtmlTree setRole(Role role) {\n+    public HtmlTree setRole(HtmlAttr.Role role) {\n@@ -350,1 +347,1 @@\n-        return new HtmlTree(TagName.A)\n+        return new HtmlTree(HtmlTag.A)\n@@ -366,1 +363,1 @@\n-        return new HtmlTree(TagName.A)\n+        return new HtmlTree(HtmlTag.A)\n@@ -378,1 +375,1 @@\n-        return new HtmlTree(TagName.CAPTION)\n+        return new HtmlTree(HtmlTag.CAPTION)\n@@ -389,1 +386,1 @@\n-        return new HtmlTree(TagName.CODE)\n+        return new HtmlTree(HtmlTag.CODE)\n@@ -400,1 +397,1 @@\n-        return new HtmlTree(TagName.DD)\n+        return new HtmlTree(HtmlTag.DD)\n@@ -410,1 +407,1 @@\n-        return new HtmlTree(TagName.DETAILS);\n+        return new HtmlTree(HtmlTag.DETAILS);\n@@ -419,1 +416,1 @@\n-        return new HtmlTree(TagName.DETAILS)\n+        return new HtmlTree(HtmlTag.DETAILS)\n@@ -430,1 +427,1 @@\n-        return new HtmlTree(TagName.DL)\n+        return new HtmlTree(HtmlTag.DL)\n@@ -442,1 +439,1 @@\n-        return new HtmlTree(TagName.DL)\n+        return new HtmlTree(HtmlTag.DL)\n@@ -454,1 +451,1 @@\n-        return new HtmlTree(TagName.DIV)\n+        return new HtmlTree(HtmlTag.DIV)\n@@ -466,1 +463,1 @@\n-        return new HtmlTree(TagName.DIV)\n+        return new HtmlTree(HtmlTag.DIV)\n@@ -478,1 +475,1 @@\n-        return new HtmlTree(TagName.DIV)\n+        return new HtmlTree(HtmlTag.DIV)\n@@ -489,1 +486,1 @@\n-        return new HtmlTree(TagName.DT)\n+        return new HtmlTree(HtmlTag.DT)\n@@ -500,2 +497,2 @@\n-        return new HtmlTree(TagName.FOOTER)\n-                .setRole(Role.CONTENTINFO);\n+        return new HtmlTree(HtmlTag.FOOTER)\n+                .setRole(HtmlAttr.Role.CONTENTINFO);\n@@ -511,2 +508,2 @@\n-        return new HtmlTree(TagName.HEADER)\n-                .setRole(Role.BANNER);\n+        return new HtmlTree(HtmlTag.HEADER)\n+                .setRole(HtmlAttr.Role.BANNER);\n@@ -522,1 +519,1 @@\n-    public static HtmlTree HEADING(TagName headingTag, Content body) {\n+    public static HtmlTree HEADING(HtmlTag headingTag, Content body) {\n@@ -535,1 +532,1 @@\n-    public static HtmlTree HEADING(TagName headingTag, HtmlStyle style, Content body) {\n+    public static HtmlTree HEADING(HtmlTag headingTag, HtmlStyle style, Content body) {\n@@ -550,1 +547,1 @@\n-    public static HtmlTree HEADING_TITLE(TagName headingTag,\n+    public static HtmlTree HEADING_TITLE(HtmlTag headingTag,\n@@ -566,1 +563,1 @@\n-    public static HtmlTree HEADING_TITLE(TagName headingTag, Content body) {\n+    public static HtmlTree HEADING_TITLE(HtmlTag headingTag, Content body) {\n@@ -572,1 +569,1 @@\n-    private static TagName checkHeading(TagName headingTag) {\n+    private static HtmlTag checkHeading(HtmlTag headingTag) {\n@@ -589,1 +586,1 @@\n-        return new HtmlTree(TagName.HTML)\n+        return new HtmlTree(HtmlTag.HTML)\n@@ -604,1 +601,1 @@\n-        return new HtmlTree(TagName.INPUT)\n+        return new HtmlTree(HtmlTag.INPUT)\n@@ -618,1 +615,1 @@\n-        return new HtmlTree(TagName.INPUT)\n+        return new HtmlTree(HtmlTag.INPUT)\n@@ -631,1 +628,1 @@\n-        return new HtmlTree(TagName.LABEL)\n+        return new HtmlTree(HtmlTag.LABEL)\n@@ -643,1 +640,1 @@\n-        return new HtmlTree(TagName.LI)\n+        return new HtmlTree(HtmlTag.LI)\n@@ -669,1 +666,1 @@\n-        return new HtmlTree(TagName.LINK)\n+        return new HtmlTree(HtmlTag.LINK)\n@@ -683,2 +680,2 @@\n-        return new HtmlTree(TagName.MAIN)\n-                .setRole(Role.MAIN);\n+        return new HtmlTree(HtmlTag.MAIN)\n+                .setRole(HtmlAttr.Role.MAIN);\n@@ -694,2 +691,2 @@\n-        return new HtmlTree(TagName.MAIN)\n-                .setRole(Role.MAIN)\n+        return new HtmlTree(HtmlTag.MAIN)\n+                .setRole(HtmlAttr.Role.MAIN)\n@@ -708,1 +705,1 @@\n-        return new HtmlTree(TagName.META)\n+        return new HtmlTree(HtmlTag.META)\n@@ -721,1 +718,1 @@\n-        return new HtmlTree(TagName.META)\n+        return new HtmlTree(HtmlTag.META)\n@@ -733,2 +730,2 @@\n-        return new HtmlTree(TagName.NAV)\n-                .setRole(Role.NAVIGATION);\n+        return new HtmlTree(HtmlTag.NAV)\n+                .setRole(HtmlAttr.Role.NAVIGATION);\n@@ -744,1 +741,1 @@\n-        return new HtmlTree(TagName.NOSCRIPT)\n+        return new HtmlTree(HtmlTag.NOSCRIPT)\n@@ -755,1 +752,1 @@\n-        return new HtmlTree(TagName.OL)\n+        return new HtmlTree(HtmlTag.OL)\n@@ -766,1 +763,1 @@\n-        return new HtmlTree(TagName.P)\n+        return new HtmlTree(HtmlTag.P)\n@@ -789,1 +786,1 @@\n-        return new HtmlTree(TagName.PRE).add(body);\n+        return new HtmlTree(HtmlTag.PRE).add(body);\n@@ -800,1 +797,1 @@\n-        return new HtmlTree(TagName.SCRIPT)\n+        return new HtmlTree(HtmlTag.SCRIPT)\n@@ -813,1 +810,1 @@\n-        return new HtmlTree(TagName.SECTION)\n+        return new HtmlTree(HtmlTag.SECTION)\n@@ -825,1 +822,1 @@\n-        return new HtmlTree(TagName.SECTION)\n+        return new HtmlTree(HtmlTag.SECTION)\n@@ -837,1 +834,1 @@\n-        return new HtmlTree(TagName.SMALL)\n+        return new HtmlTree(HtmlTag.SMALL)\n@@ -848,1 +845,1 @@\n-        return new HtmlTree(TagName.SPAN)\n+        return new HtmlTree(HtmlTag.SPAN)\n@@ -859,1 +856,1 @@\n-        return new HtmlTree(TagName.SPAN)\n+        return new HtmlTree(HtmlTag.SPAN)\n@@ -883,1 +880,1 @@\n-        return new HtmlTree(TagName.SPAN)\n+        return new HtmlTree(HtmlTag.SPAN)\n@@ -897,1 +894,1 @@\n-        return new HtmlTree(TagName.SPAN)\n+        return new HtmlTree(HtmlTag.SPAN)\n@@ -910,1 +907,1 @@\n-        return new HtmlTree(TagName.SUMMARY)\n+        return new HtmlTree(HtmlTag.SUMMARY)\n@@ -921,1 +918,1 @@\n-        return new HtmlTree(TagName.SUP)\n+        return new HtmlTree(HtmlTag.SUP)\n@@ -933,1 +930,1 @@\n-        return new HtmlTree(TagName.TD)\n+        return new HtmlTree(HtmlTag.TD)\n@@ -947,1 +944,1 @@\n-        return new HtmlTree(TagName.TH)\n+        return new HtmlTree(HtmlTag.TH)\n@@ -961,1 +958,1 @@\n-        return new HtmlTree(TagName.TH)\n+        return new HtmlTree(HtmlTag.TH)\n@@ -973,1 +970,1 @@\n-        return new HtmlTree(TagName.TITLE)\n+        return new HtmlTree(HtmlTag.TITLE)\n@@ -984,1 +981,1 @@\n-        return new HtmlTree(TagName.UL)\n+        return new HtmlTree(HtmlTag.UL)\n@@ -997,1 +994,1 @@\n-        var ul = new HtmlTree(TagName.UL)\n+        var ul = new HtmlTree(HtmlTag.UL)\n@@ -1016,1 +1013,1 @@\n-        return new HtmlTree(TagName.UL)\n+        return new HtmlTree(HtmlTag.UL)\n@@ -1028,1 +1025,1 @@\n-        return tagName.phrasingContent;\n+        return tag.blockType == HtmlTag.BlockType.INLINE;\n@@ -1072,1 +1069,1 @@\n-            && tagName != TagName.SCRIPT;\n+            && tag != HtmlTag.SCRIPT;\n@@ -1083,1 +1080,1 @@\n-        return switch (tagName) {\n+        return switch (tag) {\n@@ -1090,1 +1087,1 @@\n-     * Returns whether or not this is a <em>void<\/em> element.\n+     * Returns whether this is a <em>void<\/em> element.\n@@ -1092,1 +1089,1 @@\n-     * @return whether or not this is a void element\n+     * @return whether this is a void element\n@@ -1097,2 +1094,2 @@\n-        return switch (tagName) {\n-            case BR, HR, IMG, INPUT, LINK, META, WBR -> true;\n+        return switch (tag) {\n+            case BR, COL, FRAME, HR, IMG, INPUT, LINK, META, WBR -> true;\n@@ -1109,1 +1106,1 @@\n-        String tagString = tagName.toString();\n+        String tagString = tag.getName();\n@@ -1116,1 +1113,1 @@\n-            out.write(key.toString());\n+            out.write(key.getName());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlTree.java","additions":73,"deletions":76,"binary":false,"changes":149,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlTree.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -35,2 +35,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/ListBuilder.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/ListBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -33,2 +33,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n@@ -150,2 +148,2 @@\n-                var tn = TagName.of(m.group(\"tag\"));\n-                if (!tn.phrasingContent) {\n+                var tn = HtmlTag.of(m.group(\"tag\"));\n+                if (tn.blockType != HtmlTag.BlockType.INLINE) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/RawHtml.java","additions":3,"deletions":5,"binary":false,"changes":8,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/RawHtml.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -31,2 +31,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n@@ -103,1 +101,1 @@\n-        var script = new HtmlTree(TagName.SCRIPT) {\n+        var script = new HtmlTree(HtmlTag.SCRIPT) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/Script.java","additions":2,"deletions":4,"binary":false,"changes":6,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Script.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -31,2 +31,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/Text.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Text.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.javadoc.internal.doclets.formats.html.markup;\n+package jdk.javadoc.internal.html;\n@@ -31,2 +31,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.Content;\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/TextBuilder.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/TextBuilder.java","status":"renamed"},{"patch":"@@ -71,1 +71,1 @@\n- *          {@linkplain jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree HTML tree nodes}.\n+ *          {@linkplain jdk.javadoc.internal.html.HtmlTree HTML tree nodes}.\n@@ -73,1 +73,1 @@\n- *          {@link jdk.javadoc.internal.doclets.formats.html.Content}, the {@code markup} library\n+ *          {@link jdk.javadoc.internal.html.Content}, the {@code markup} library\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/package-info.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,2 @@\n- * @modules jdk.javadoc\/jdk.javadoc.internal.doclets.formats.html.markup\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.html\n+ *          jdk.javadoc\/jdk.javadoc.internal.doclets.formats.html.markup\n@@ -47,1 +48,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n+import jdk.javadoc.internal.html.HtmlStyle;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyles;\n@@ -50,1 +52,1 @@\n- * This test compares the set of CSS class names defined in HtmlStyle\n+ * This test compares the set of CSS class names defined in HtmlStyles\n@@ -188,1 +190,1 @@\n-        return Arrays.stream(HtmlStyle.values())\n+        return Arrays.stream(HtmlStyles.values())\n@@ -196,1 +198,1 @@\n-        URL url = HtmlStyle.class.getResource(stylesheet);\n+        URL url = HtmlStyles.class.getResource(stylesheet);\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/checkStylesheetClasses\/CheckStylesheetClasses.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ *          jdk.javadoc\/jdk.javadoc.internal.html\n@@ -38,0 +39,1 @@\n+import jdk.javadoc.internal.html.*;\n@@ -71,3 +73,3 @@\n-        HtmlTree html = new HtmlTree(TagName.HTML);\n-        HtmlTree head = new HtmlTree(TagName.HEAD);\n-        HtmlTree title = new HtmlTree(TagName.TITLE);\n+        HtmlTree html = new HtmlTree(HtmlTag.HTML);\n+        HtmlTree head = new HtmlTree(HtmlTag.HEAD);\n+        HtmlTree title = new HtmlTree(HtmlTag.TITLE);\n@@ -79,1 +81,1 @@\n-        HtmlTree meta = new HtmlTree(TagName.META);\n+        HtmlTree meta = new HtmlTree(HtmlTag.META);\n@@ -83,1 +85,1 @@\n-        HtmlTree link = new HtmlTree(TagName.LINK);\n+        HtmlTree link = new HtmlTree(HtmlTag.LINK);\n@@ -91,1 +93,1 @@\n-        HtmlTree body = new HtmlTree(TagName.BODY);\n+        HtmlTree body = new HtmlTree(HtmlTag.BODY);\n@@ -94,1 +96,1 @@\n-        HtmlTree p = new HtmlTree(TagName.P);\n+        HtmlTree p = new HtmlTree(HtmlTag.P);\n@@ -107,1 +109,1 @@\n-        HtmlTree p1 = new HtmlTree(TagName.P);\n+        HtmlTree p1 = new HtmlTree(HtmlTag.P);\n@@ -109,1 +111,1 @@\n-        HtmlTree anchor = new HtmlTree(TagName.A);\n+        HtmlTree anchor = new HtmlTree(HtmlTag.A);\n@@ -115,1 +117,1 @@\n-        HtmlTree dl = new HtmlTree(TagName.DL);\n+        HtmlTree dl = new HtmlTree(HtmlTag.DL);\n@@ -118,3 +120,3 @@\n-        HtmlTree dlTree = new HtmlTree(TagName.DL);\n-        dlTree.add(new HtmlTree(TagName.DT));\n-        dlTree.add(new HtmlTree (TagName.DD));\n+        HtmlTree dlTree = new HtmlTree(HtmlTag.DL);\n+        dlTree.add(new HtmlTree(HtmlTag.DT));\n+        dlTree.add(new HtmlTree (HtmlTag.DD));\n@@ -122,3 +124,3 @@\n-        HtmlTree dlDisplay = new HtmlTree(TagName.DL);\n-        dlDisplay.add(new HtmlTree(TagName.DT));\n-        HtmlTree dd = new HtmlTree (TagName.DD);\n+        HtmlTree dlDisplay = new HtmlTree(HtmlTag.DL);\n+        dlDisplay.add(new HtmlTree(HtmlTag.DT));\n+        HtmlTree dd = new HtmlTree (HtmlTag.DD);\n@@ -133,1 +135,1 @@\n-        HtmlTree hr = new HtmlTree(TagName.HR);\n+        HtmlTree hr = new HtmlTree(HtmlTag.HR);\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlDocument\/TestHtmlDocument.java","additions":19,"deletions":17,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-                    attribute \"border\" for table only accepts \"\" or \"1\": BORDER\"\"\",\n+                    attribute \"border\" for table only accepts \"\" or \"1\": border\"\"\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testHtmlTableStyles\/TestHtmlTableStyles.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- *          jdk.javadoc\/jdk.javadoc.internal.doclets.formats.html.markup\n+ *          jdk.javadoc\/jdk.javadoc.internal.html\n@@ -32,3 +32,2 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n-import jdk.javadoc.internal.doclint.HtmlTag;\n+import jdk.javadoc.internal.html.HtmlTree;\n+import jdk.javadoc.internal.html.HtmlTag;\n@@ -45,1 +44,0 @@\n-                TagName tagName = TagName.valueOf(htmlTag.name());\n@@ -47,1 +45,1 @@\n-                check(htmlTag, tagName);\n+                check(htmlTag);\n@@ -59,2 +57,2 @@\n-    private static void check(HtmlTag htmlTag, TagName tagName) {\n-        boolean elementIsVoid = new HtmlTree(tagName).isVoid();\n+    private static void check(HtmlTag htmlTag) {\n+        boolean elementIsVoid = new HtmlTree(htmlTag).isVoid();\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testVoidHtmlElements\/TestVoidHtmlElements.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ *          jdk.javadoc\/jdk.javadoc.internal.html\n@@ -34,1 +35,0 @@\n-import jdk.javadoc.internal.doclint.HtmlTag;\n@@ -36,0 +36,2 @@\n+import jdk.javadoc.internal.html.HtmlAttr;\n+import jdk.javadoc.internal.html.HtmlTag;\n@@ -44,2 +46,2 @@\n-        check(HtmlTag.Attr.ABBR, HtmlTag.Attr.valueOf(\"ABBR\"), HtmlTag.Attr.values());\n-        check(HtmlTag.AttrKind.INVALID, HtmlTag.AttrKind.valueOf(\"INVALID\"), HtmlTag.AttrKind.values());\n+        check(HtmlAttr.ABBR, HtmlAttr.valueOf(\"ABBR\"), HtmlAttr.values());\n+        check(HtmlAttr.AttrKind.INVALID, HtmlAttr.AttrKind.valueOf(\"INVALID\"), HtmlAttr.AttrKind.values());\n","filename":"test\/langtools\/tools\/doclint\/CoverageExtras.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -103,4 +103,0 @@\n-     * <details>\n-     * <summary>Summary<\/summary>\n-     * <p>Details and Summary no longer supported in HTML5<\/p>\n-     * <\/details>\n@@ -155,0 +151,4 @@\n+     * <details>\n+     * <summary>Summary<\/summary>\n+     * <p>Details<\/p>\n+     * <\/details>\n","filename":"test\/langtools\/tools\/doclint\/html\/HtmlVersionTagsAttrsTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -229,1 +229,1 @@\n-HtmlVersionTagsAttrsTest.java:69: error: attribute \"border\" for table only accepts \"\" or \"1\": BORDER\n+HtmlVersionTagsAttrsTest.java:69: error: attribute \"border\" for table only accepts \"\" or \"1\": 0\n@@ -262,13 +262,1 @@\n-HtmlVersionTagsAttrsTest.java:103: error: unknown tag: details\n-     * <details>\n-       ^\n-HtmlVersionTagsAttrsTest.java:104: error: unknown tag: summary\n-     * <summary>Summary<\/summary>\n-       ^\n-HtmlVersionTagsAttrsTest.java:104: error: unknown tag: summary\n-     * <summary>Summary<\/summary>\n-                       ^\n-HtmlVersionTagsAttrsTest.java:106: error: unknown tag: details\n-     * <\/details>\n-       ^\n-HtmlVersionTagsAttrsTest.java:129: error: element not allowed in documentation comments: <main>\n+HtmlVersionTagsAttrsTest.java:125: error: element not allowed in documentation comments: <main>\n@@ -301,1 +289,1 @@\n-HtmlVersionTagsAttrsTest.java:189: error: attribute \"border\" for table only accepts \"\" or \"1\": BORDER\n+HtmlVersionTagsAttrsTest.java:189: error: attribute \"border\" for table only accepts \"\" or \"1\": 2\n@@ -313,1 +301,1 @@\n-102 errors\n+98 errors\n","filename":"test\/langtools\/tools\/doclint\/html\/HtmlVersionTagsAttrsTest.out","additions":4,"deletions":16,"binary":false,"changes":20,"status":"modified"}]}