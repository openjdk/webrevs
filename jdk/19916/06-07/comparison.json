{"files":[{"patch":"@@ -32,0 +32,10 @@\n+\n+\/**\n+ * An abstraction for the type-safe representation and use of HTML attributes.\n+ * \n+ * @apiNote\n+ * Attributes are used when performing simple validity checks on HTML in\n+ * documentation comments, and when generating HTML for output.\n+ * \n+ * @see HtmlTree#put(HtmlAttr, String)\n+ *\/\n@@ -155,0 +165,1 @@\n+\n@@ -160,0 +171,5 @@\n+    \/**\n+     * An abstraction for the type-safe representation and use of ARIA roles.\n+     *\n+     * @see HtmlTree#setRole(Role)\n+     *\/\n@@ -179,0 +195,6 @@\n+    \/**\n+     * An abstraction for the type-safe representation and use of \"input\" types.\n+     *\n+     * @see HtmlTree#INPUT(InputType, HtmlId)\n+     * @see HtmlTree#INPUT(InputType, HtmlStyle)\n+     *\/\n@@ -196,0 +218,5 @@\n+    \/**\n+     * An abstraction for the kind of an attribute in the context of an HTML tag.\n+     *\n+     * @see HtmlTag#attrs(AttrKind,HtmlAttr...)\n+     *\/\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlAttr.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -28,0 +28,12 @@\n+\/**\n+ * An abstraction for the type-safe representation and use of CSS class names.\n+ *\n+ * @apiNote\n+ * Despite the name, implementations of this interface provide values for the HTML\n+ * {@code class} attribute, and <strong>not<\/strong> the HTML {@code style} attribute.\n+ * This is to avoid confusion with the widespread use of the word \"class\" in the Java ecosystem,\n+ * and the potential for clashes with methods called {@code setClass} instead of {@code setStyle}.\n+ *\n+ * @see HtmlTree#addStyle(HtmlStyle)\n+ * @see HtmlTree#setStyle(HtmlStyle)\n+ *\/\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/HtmlStyle.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}