{"files":[{"patch":"@@ -43,1 +43,1 @@\n-    static int numberOfActionEvents = 0;\n+    static volatile int numberOfActionEvents = 0;\n@@ -46,4 +46,5 @@\n-        Robot robot = new Robot();\n-        SwingUtilities.invokeAndWait(() -> createTestUI());\n-        robot.waitForIdle();\n-        robot.delay(250);\n+        try {\n+            Robot robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> createTestUI());\n+            robot.waitForIdle();\n+            robot.delay(250);\n@@ -51,13 +52,8 @@\n-        \/\/ change selected index 3 times\n-        SwingUtilities.invokeAndWait(() -> {\n-            comboBox.setSelectedIndex(1);\n-            comboBox.setSelectedIndex(3);\n-            comboBox.setSelectedIndex(2);\n-        });\n-        robot.waitForIdle();\n-        robot.delay(250);\n-\n-        if (numberOfActionEvents != 3) {\n-            throw new RuntimeException(\"Unexpected number of Action Events!\\n\" +\n-                    \"Expected: 3\\nActual: \" + numberOfActionEvents);\n-        }\n+            \/\/ change selected index 3 times\n+            SwingUtilities.invokeAndWait(() -> {\n+                comboBox.setSelectedIndex(1);\n+                comboBox.setSelectedIndex(3);\n+                comboBox.setSelectedIndex(2);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(250);\n@@ -65,2 +61,10 @@\n-        if (frame != null) {\n-            SwingUtilities.invokeAndWait(() -> frame.dispose());\n+            if (numberOfActionEvents != 3) {\n+                throw new RuntimeException(\"Unexpected number of Action Events!\\n\" +\n+                        \"Expected: 3\\nActual: \" + numberOfActionEvents);\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -89,2 +93,1 @@\n-        frame.getContentPane().add(panel);\n-        frame.setLocationRelativeTo(null);\n+        frame.add(panel);\n@@ -92,0 +95,1 @@\n+        frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4166593.java","additions":26,"deletions":22,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    static int numberOfContentsChangedEvents = 0;\n+    static volatile int numberOfContentsChangedEvents = 0;\n@@ -48,4 +48,5 @@\n-        Robot robot = new Robot();\n-        SwingUtilities.invokeAndWait(() -> createTestUI());\n-        robot.waitForIdle();\n-        robot.delay(250);\n+        try {\n+            Robot robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> createTestUI());\n+            robot.waitForIdle();\n+            robot.delay(250);\n@@ -53,8 +54,9 @@\n-        \/\/ change selected index 3 times\n-        SwingUtilities.invokeAndWait(() -> {\n-            comboBox.setSelectedIndex(1);\n-            comboBox.setSelectedIndex(3);\n-            comboBox.setSelectedIndex(2);\n-        });\n-        robot.waitForIdle();\n-        robot.delay(250);\n+            \/\/ change selected index 3 times\n+            SwingUtilities.invokeAndWait(() -> {\n+                comboBox.setSelectedIndex(1);\n+                comboBox.setSelectedIndex(3);\n+                comboBox.setSelectedIndex(2);\n+                comboBox.setSelectedIndex(2);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(250);\n@@ -62,7 +64,10 @@\n-        if (numberOfContentsChangedEvents != 3) {\n-            throw new RuntimeException(\"Unexpected number of Contents Changed Events!\\n\" +\n-                    \"Expected: 3\\nActual: \" + numberOfContentsChangedEvents);\n-        }\n-\n-        if (frame != null) {\n-            SwingUtilities.invokeAndWait(() -> frame.dispose());\n+            if (numberOfContentsChangedEvents != 3) {\n+                throw new RuntimeException(\"Unexpected number of Contents Changed Events!\\n\" +\n+                        \"Expected: 3\\nActual: \" + numberOfContentsChangedEvents);\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -102,2 +107,1 @@\n-        frame.getContentPane().add(panel);\n-        frame.setLocationRelativeTo(null);\n+        frame.add(panel);\n@@ -105,0 +109,1 @@\n+        frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4180054.java","additions":27,"deletions":22,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -48,20 +48,2 @@\n-    static JButton btnAction = new JButton(\"Action\");\n-    static JComboBox cmbAction = new JComboBox();\n-    static Point loc;\n-    static ActionListener al = e -> pass();\n-    static DocumentListener dl = new DocumentListener() {\n-        @Override\n-        public void changedUpdate(DocumentEvent evt) {\n-            resetButtons();\n-        }\n-\n-        @Override\n-        public void insertUpdate(DocumentEvent evt) {\n-            resetButtons();\n-        }\n-\n-        @Override\n-        public void removeUpdate(DocumentEvent evt) {\n-            resetButtons();\n-        }\n-    };\n+    static JButton btnAction;\n+    static volatile Point loc;\n@@ -113,1 +95,22 @@\n-        frame.getContentPane().setLayout(new FlowLayout());\n+        frame.setLayout(new FlowLayout());\n+\n+        btnAction = new JButton(\"Action\");\n+        JComboBox cmbAction = new JComboBox();\n+\n+        ActionListener al = e -> pass();\n+        DocumentListener dl = new DocumentListener() {\n+            @Override\n+            public void changedUpdate(DocumentEvent evt) {\n+                resetButtons();\n+            }\n+\n+            @Override\n+            public void insertUpdate(DocumentEvent evt) {\n+                resetButtons();\n+            }\n+\n+            @Override\n+            public void removeUpdate(DocumentEvent evt) {\n+                resetButtons();\n+            }\n+        };\n@@ -117,1 +120,1 @@\n-        frame.getContentPane().add(cmbAction);\n+        frame.add(cmbAction);\n@@ -120,1 +123,1 @@\n-        frame.getContentPane().add(btnAction);\n+        frame.add(btnAction);\n@@ -125,1 +128,0 @@\n-        frame.setLocationRelativeTo(null);\n@@ -127,0 +129,1 @@\n+        frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4530952.java","additions":27,"deletions":24,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    static String[] data = { \"Apple\", \"Orange\", \"Cherry\" };\n+    static String[] data = {\"Apple\", \"Orange\", \"Cherry\"};\n@@ -45,4 +45,5 @@\n-        Robot robot = new Robot();\n-        SwingUtilities.invokeAndWait(() -> createTestUI());\n-        robot.waitForIdle();\n-        robot.delay(250);\n+        try {\n+            Robot robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> createTestUI());\n+            robot.waitForIdle();\n+            robot.delay(250);\n@@ -50,9 +51,9 @@\n-        \/\/ enter some text in combo box editor\n-        robot.keyPress(KeyEvent.VK_A);\n-        robot.keyRelease(KeyEvent.VK_A);\n-        robot.keyPress(KeyEvent.VK_A);\n-        robot.keyRelease(KeyEvent.VK_A);\n-        robot.keyPress(KeyEvent.VK_ENTER);\n-        robot.keyRelease(KeyEvent.VK_ENTER);\n-        robot.waitForIdle();\n-        robot.delay(250);\n+            \/\/ enter some text in combo box editor\n+            robot.keyPress(KeyEvent.VK_A);\n+            robot.keyRelease(KeyEvent.VK_A);\n+            robot.keyPress(KeyEvent.VK_A);\n+            robot.keyRelease(KeyEvent.VK_A);\n+            robot.keyPress(KeyEvent.VK_ENTER);\n+            robot.keyRelease(KeyEvent.VK_ENTER);\n+            robot.waitForIdle();\n+            robot.delay(250);\n@@ -60,11 +61,11 @@\n-        \/\/ select orange in combo box\n-        robot.keyPress(KeyEvent.VK_DOWN);\n-        robot.keyRelease(KeyEvent.VK_DOWN);\n-        robot.keyPress(KeyEvent.VK_DOWN);\n-        robot.keyRelease(KeyEvent.VK_DOWN);\n-        robot.keyPress(KeyEvent.VK_DOWN);\n-        robot.keyRelease(KeyEvent.VK_DOWN);\n-        robot.keyPress(KeyEvent.VK_ENTER);\n-        robot.keyRelease(KeyEvent.VK_ENTER);\n-        robot.waitForIdle();\n-        robot.delay(250);\n+            \/\/ select orange in combo box\n+            robot.keyPress(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_DOWN);\n+            robot.keyPress(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_DOWN);\n+            robot.keyPress(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_DOWN);\n+            robot.keyPress(KeyEvent.VK_ENTER);\n+            robot.keyRelease(KeyEvent.VK_ENTER);\n+            robot.waitForIdle();\n+            robot.delay(250);\n@@ -72,8 +73,11 @@\n-        String currSelection = (String) combo.getEditor().getItem();\n-        if (!currSelection.equals(\"Orange\")) {\n-            throw new RuntimeException(\"Unexpected Selection.\\n\" +\n-                    \"Expected: Orange\\nActual: \" + currSelection);\n-        }\n-\n-        if (frame != null) {\n-            SwingUtilities.invokeAndWait(() -> frame.dispose());\n+            String currSelection = (String) combo.getEditor().getItem();\n+            if (!currSelection.equals(\"Orange\")) {\n+                throw new RuntimeException(\"Unexpected Selection.\\n\" +\n+                        \"Expected: Orange\\nActual: \" + currSelection);\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -88,3 +92,2 @@\n-        frame.getContentPane().setLayout(new FlowLayout());\n-        frame.getContentPane().add(combo);\n-        frame.setLocationRelativeTo(null);\n+        frame.setLayout(new FlowLayout());\n+        frame.add(combo);\n@@ -92,0 +95,1 @@\n+        frame.setLocationRelativeTo(null);\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4530953.java","additions":40,"deletions":36,"binary":false,"changes":76,"status":"modified"}]}