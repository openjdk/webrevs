{"files":[{"patch":"@@ -1364,2 +1364,2 @@\n-      jlong lo = (-1 << (bits_per_java_integer(bt) - ((uint)count)-1)); \/\/ FFFF8000\n-      jlong hi = ~lo;               \/\/ 00007FFF\n+      jlong lo = (CONST64(-1) << (bits_per_java_integer(bt) - ((uint)count)-1)); \/\/ FFFF8000\n+      jlong hi = ~lo;                                                            \/\/ 00007FFF\n@@ -1469,2 +1469,6 @@\n-  if (t1 == Type::TOP) return Type::TOP;\n-  if (t2 == Type::TOP) return Type::TOP;\n+  if (t1 == Type::TOP) {\n+    return Type::TOP;\n+  }\n+  if (t2 == Type::TOP) {\n+    return Type::TOP;\n+  }\n@@ -1473,1 +1477,3 @@\n-  if (t1 == TypeInteger::zero(bt)) return TypeInteger::zero(bt);\n+  if (t1 == TypeInteger::zero(bt)) {\n+    return TypeInteger::zero(bt);\n+  }\n@@ -1475,1 +1481,3 @@\n-  if (t2 == TypeInt::ZERO) return t1;\n+  if (t2 == TypeInt::ZERO) {\n+    return t1;\n+  }\n@@ -1491,1 +1499,3 @@\n-    if (shift == 0)  return t1;\n+    if (shift == 0) {\n+      return t1;\n+    }\n@@ -1509,2 +1519,6 @@\n-      if (r1->lo_as_long() >= 0) assert(ti == TypeInteger::zero(bt),    \">>31\/63 of + is  0\");\n-      if (r1->hi_as_long() <  0) assert(ti == TypeInteger::minus_1(bt), \">>31\/63 of - is -1\");\n+      if (r1->lo_as_long() >= 0) {\n+        assert(ti == TypeInteger::zero(bt),    \">>31\/63 of + is  0\");\n+      }\n+      if (r1->hi_as_long() <  0) {\n+        assert(ti == TypeInteger::minus_1(bt), \">>31\/63 of - is -1\");\n+      }\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":23,"deletions":9,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1614,1 +1614,1 @@\n-  if( use_op == Op_LShiftI ) {\n+  if (use_op == Op_LShiftI || use_op == Op_LShiftL) {\n@@ -1617,1 +1617,1 @@\n-      if (u->Opcode() == Op_RShiftI)\n+      if (u->Opcode() == Op_RShiftI || u->Opcode() == Op_RShiftL)\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1702,2 +1702,2 @@\n-const TypeInteger* TypeInteger::make(jlong lo, BasicType bt) {\n-  return make(lo, lo, WidenMin, bt);\n+const TypeInteger* TypeInteger::make(jlong con, BasicType bt) {\n+  return make(con, con, WidenMin, bt);\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -609,1 +609,1 @@\n-  static const TypeInteger* make(jlong lo, BasicType bt);\n+  static const TypeInteger* make(jlong con, BasicType bt);\n","filename":"src\/hotspot\/share\/opto\/type.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-    final static int test7Min = -1 << (32 - test7Shift -1);\n+    final static int test7Min = -1 << (32 - test7Shift - 1);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/RShiftINodeIdealizationTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-        long x7 = Integer.max(Integer.min((int)x, (int)test7Max), (int)test7Min);\n+        long x7 = Long.max(Long.min(x, test7Max), test7Min);\n@@ -75,1 +75,1 @@\n-        long x8 = Integer.max(Integer.min((int)x, (int)(test7Max+1)), (int)test7Min);\n+        long x8 = Long.max(Long.min(x, test7Max+1), test7Min);\n@@ -77,1 +77,1 @@\n-        long x9 = Integer.max(Integer.min((int)x, (int)test7Max), (int)(test7Min-1));\n+        long x9 = Long.max(Long.min(x, test7Max), test7Min-1);\n@@ -125,2 +125,2 @@\n-    final static int test7Shift = RunInfo.getRandom().nextInt(32) + 32;\n-    final static long test7Min = -1L << (64 - test7Shift -1);\n+    final static int test7Shift = RunInfo.getRandom().nextInt(1, 64);\n+    final static long test7Min = -1L << (64 - test7Shift - 1);\n@@ -132,1 +132,1 @@\n-        x = Integer.max(Integer.min((int)x, (int)test7Max), (int)test7Min);\n+        x = Long.max(Long.min(x, test7Max), test7Min);\n@@ -139,1 +139,1 @@\n-        x = Integer.max(Integer.min((int)x, (int)(test7Max+1)), (int)test7Min);\n+        x = Long.max(Long.min(x, test7Max+1), test7Min);\n@@ -146,1 +146,1 @@\n-        x = Integer.max(Integer.min((int)x, (int)test7Max), (int)(test7Min-1));\n+        x = Long.max(Long.min(x, test7Max), test7Min-1);\n@@ -153,1 +153,1 @@\n-        x = Integer.max(Integer.min((int)x, (int)test7Max), (int)test7Min);\n+        x = Long.max(Long.min(x, test7Max), test7Min);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/RShiftLNodeIdealizationTests.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}