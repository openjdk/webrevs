{"files":[{"patch":"@@ -1340,1 +1340,0 @@\n-  const TypeInteger* t3;  \/\/ type of in(1).in(2)\n@@ -1347,0 +1346,1 @@\n+  \/\/ and convert to (x >> 24) & (0xFF000000 >> 24) = x >> 24\n@@ -1348,5 +1348,6 @@\n-  const Node* mask = in(1);\n-  if (mask->Opcode() == Op_And(bt) &&\n-      (t3 = phase->type(mask->in(2))->isa_integer(bt)) &&\n-      t3->is_con()) {\n-    jlong maskbits = t3->get_con_as_long(bt);\n+  const TypeInteger* mask_t;\n+  const Node* and_node = in(1);\n+  if (and_node->Opcode() == Op_And(bt) &&\n+      (mask_t = phase->type(and_node->in(2))->isa_integer(bt)) &&\n+      mask_t->is_con()) {\n+    jlong maskbits = mask_t->get_con_as_long(bt);\n@@ -1354,1 +1355,1 @@\n-    Node* shr_nomask = phase->transform(RShiftNode::make(mask->in(1), in(2), bt));\n+    Node* shr_nomask = phase->transform(RShiftNode::make(and_node->in(1), in(2), bt));\n@@ -1485,1 +1486,0 @@\n-  const TypeInt* t3;  \/\/ type of in(1).in(2)\n@@ -1491,1 +1491,3 @@\n-  if( shl->Opcode() != Op_LShiftI ) return nullptr;\n+  if (shl->Opcode() != Op_LShiftI) {\n+    return nullptr;\n+  }\n@@ -1493,3 +1495,4 @@\n-  if( shift == 16 &&\n-      (t3 = phase->type(shl->in(2))->isa_int()) &&\n-      t3->is_con(16) ) {\n+  const TypeInt* left_shift_t;\n+  if (shift == 16 &&\n+      (left_shift_t = phase->type(shl->in(2))->isa_int()) &&\n+      left_shift_t->is_con(16)) {\n@@ -1497,1 +1500,1 @@\n-    if( ld->Opcode() == Op_LoadS ) {\n+    if (ld->Opcode() == Op_LoadS) {\n@@ -1515,3 +1518,3 @@\n-  if( shift == 24 &&\n-      (t3 = phase->type(shl->in(2))->isa_int()) &&\n-      t3->is_con(24) ) {\n+  if (shift == 24 &&\n+      (left_shift_t = phase->type(shl->in(2))->isa_int()) &&\n+      left_shift_t->is_con(24)) {\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":19,"deletions":16,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -71,2 +71,2 @@\n-        Asserts.assertEQ((x & 0xFF000000) >> 24, test5(x));\n-        Asserts.assertEQ(x >> 64, test6(x));\n+        Asserts.assertEQ((x & test5Mask) >> test5Shift, test5(x));\n+        Asserts.assertEQ(x, test6(x));\n@@ -105,0 +105,3 @@\n+    final static int test5Shift = RunInfo.getRandom().nextInt(32);\n+    final static int test5Mask = -1 << test5Shift;\n+\n@@ -109,1 +112,1 @@\n-        return (x & 0xFF000000) >> 24;\n+        return (x & test5Mask) >> test5Shift;\n@@ -112,0 +115,2 @@\n+    final static int test6Shift = RunInfo.getRandom().nextInt(Integer.MAX_VALUE \/ 32) * 32 ;\n+\n@@ -115,1 +120,1 @@\n-        return (x >> 64);\n+        return (x >> test6Shift);\n@@ -118,3 +123,3 @@\n-    final int test7Shift = 10;\n-    final int test7Min = -1 << (32 - test7Shift -1);\n-    final int test7Max = ~test7Min;\n+    final static int test7Shift = RunInfo.getRandom().nextInt(32);\n+    final static int test7Min = -1 << (32 - test7Shift -1);\n+    final static int test7Max = ~test7Min;\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/RShiftINodeIdealizationTests.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @bug 8320330\n+ * @bug 8320330 8349361\n@@ -71,1 +71,2 @@\n-        Asserts.assertEQ((x & 0xFF000000_00000000L) >> 56, test5(x));\n+        Asserts.assertEQ((x & test5Mask) >> test5Shift, test5(x));\n+        Asserts.assertEQ(x, test6(x));\n@@ -104,0 +105,3 @@\n+    final static int test5Shift = RunInfo.getRandom().nextInt(64);\n+    final static long test5Mask = -1L << test5Shift;\n+\n@@ -108,1 +112,1 @@\n-        return (x & 0xFF000000_00000000L) >> 56;\n+        return (x & test5Mask) >> test5Shift;\n@@ -111,0 +115,2 @@\n+    final static int test6Shift = RunInfo.getRandom().nextInt(Integer.MAX_VALUE \/ 64) * 64 ;\n+\n@@ -114,1 +120,1 @@\n-        return (x >> 128);\n+        return (x >> test6Shift);\n@@ -117,3 +123,3 @@\n-    final int test7Shift = 42;\n-    final long test7Min = -1L << (64 - test7Shift -1);\n-    final long test7Max = ~test7Min;\n+    final static int test7Shift = RunInfo.getRandom().nextInt(32) + 32;\n+    final static long test7Min = -1L << (64 - test7Shift -1);\n+    final static long test7Max = ~test7Min;\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/RShiftLNodeIdealizationTests.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"}]}