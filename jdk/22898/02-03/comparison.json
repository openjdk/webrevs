{"files":[{"patch":"@@ -158,5 +158,11 @@\n-        long ifdOffset = firstIFDOffset;\n-        while (ifdOffset != 0) {\n-            ImageFileDirectory ifd = new ImageFileDirectory(input, ifdOffset);\n-            imageFileDirectories.add(ifd);\n-            ifdOffset = ifd.nextIFD;\n+        ImageFileDirectory ifd1 = null;\n+        ImageFileDirectory ifd2 = null;\n+        if (firstIFDOffset != 0) {\n+            ifd1 = new ImageFileDirectory(input, firstIFDOffset);\n+            imageFileDirectories.add(ifd1);\n+\n+            long secondIFDOffset = ifd1.nextIFD;\n+            if (secondIFDOffset != 0) {\n+                ifd2 = new ImageFileDirectory(input, secondIFDOffset);\n+                imageFileDirectories.add(ifd2);\n+            }\n@@ -165,1 +171,1 @@\n-        if (imageFileDirectories.size() == 2) {\n+        if (ifd2 != null) {\n@@ -167,1 +173,0 @@\n-            ImageFileDirectory ifd2 = imageFileDirectories.get(1);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/ExifMarkerSegment.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-        new JpegExifThumbnailTest(\"jdk_8160327-SV650.jpg\",\n+        new JpegExifThumbnailTest(\"SV650.jpg\",\n@@ -134,1 +134,1 @@\n-        new JpegExifThumbnailTest(\"jdk_8160327-exif-rgb-thumbnail-sony-d700.jpg\",\n+        new JpegExifThumbnailTest(\"exif-rgb-thumbnail-sony-d700.jpg\",\n@@ -138,4 +138,5 @@\n-        new JpegExifThumbnailTest(\"jdk_8160327-jfif-jfif-and-exif-thumbnail-sharpshot-iphone.jpg\",\n-                2010,2,11,20,41,27,\n-                new Dimension(131, 122),\n-                new Dimension(160, 120)).run();\n+        \/\/ This includes a JFIF thumbnail and an EXIF thumbnail.\n+        new JpegExifThumbnailTest(\"jfif_and_exif.jpg\",\n+                2025,2,21,1,14,51,\n+                new Dimension(150, 200),\n+                new Dimension(120, 160)).run();\n@@ -145,1 +146,1 @@\n-        new JpegExifThumbnailTest(\"jdk_8160327-plastic-wrap.jpg\",\n+        new JpegExifThumbnailTest(\"plastic-wrap.jpg\",\n@@ -150,1 +151,1 @@\n-        new JpegExifThumbnailTest(\"jdk_8160327-bad-timestamp.jpg\",\n+        new JpegExifThumbnailTest(\"bad-timestamp.jpg\",\n@@ -155,1 +156,1 @@\n-        new JpegExifThumbnailTest(\"jdk_8160327-unusual-ImageFileDirectory.jpeg\",\n+        new JpegExifThumbnailTest(\"unusual-ImageFileDirectory.jpeg\",\n@@ -158,1 +159,1 @@\n-        \/\/ This file is a replica of jdk_8160327-SV650.jpg, except the 14th byte was changed\n+        \/\/ This file is a replica of SV650.jpg, except the 14th byte was changed\n@@ -162,1 +163,1 @@\n-        new JpegExifThumbnailTest(\"jdk_8160327-corrupt-magic-number.jpg\",\n+        new JpegExifThumbnailTest(\"corrupt-magic-number.jpg\",\n@@ -164,0 +165,11 @@\n+\n+        \/\/ This file is set up so ImageFileDirectory X points to Y,\n+        \/\/ then Y points back to X. An early draft of the ExifMarkerSegment\n+        \/\/ class would get stuck parsing this loop. (After a few minutes this\n+        \/\/ would probably fail with an OutOfMemoryError as the list of IFDs\n+        \/\/ grew too large.)\n+        \/\/ The expected behavior here is to stop after reading 2 IFDs, and\n+        \/\/ otherwise read the JPEG as usual\n+        new JpegExifThumbnailTest(\"malicious_looping_IFD.jpg\",\n+                2025, 2, 16, 15, 48, 34,\n+                new Dimension(60, 80)).run();\n","filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/JpegExifThumbnailTest.java","additions":23,"deletions":11,"binary":false,"changes":34,"status":"modified"},{"patch":"","filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/SV650.jpg","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/jdk_8160327-SV650.jpg","status":"renamed"},{"patch":"","filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/bad-timestamp.jpg","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/jdk_8160327-bad-timestamp.jpg","status":"renamed"},{"patch":"","filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/corrupt-magic-number.jpg","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/jdk_8160327-corrupt-magic-number.jpg","status":"renamed"},{"patch":"","filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/exif-rgb-thumbnail-sony-d700.jpg","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/jdk_8160327-exif-rgb-thumbnail-sony-d700.jpg","status":"renamed"},{"filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/jdk_8160327-jfif-jfif-and-exif-thumbnail-sharpshot-iphone.jpg","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/jfif_and_exif.jpg","binary":true,"status":"added"},{"filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/malicious_looping_IFD.jpg","binary":true,"status":"added"},{"patch":"","filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/plastic-wrap.jpg","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/jdk_8160327-plastic-wrap.jpg","status":"renamed"},{"patch":"","filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/unusual-ImageFileDirectory.jpeg","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegExifThumbnail\/jdk_8160327-unusual-ImageFileDirectory.jpeg","status":"renamed"}]}