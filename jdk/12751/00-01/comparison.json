{"files":[{"patch":"@@ -219,7 +219,6 @@\n-                if (timeout == 0) {\n-                    while (!latch.await(1, TimeUnit.SECONDS)) {\n-                        if (!p.isAlive()) {\n-                            \/\/Fail if process finished before printed expected string\n-                            latch.countDown();\n-                            throw new RuntimeException(\"Started process is not alive.\");\n-                        }\n+                \/\/ Every second check if process is still alive\n+                boolean succeeded = Utils.waitForCondition(() -> {\n+                    \/\/Fail if process finished before printed expected string\n+                    if (!p.isAlive()) {\n+                        latch.countDown();\n+                        throw new RuntimeException(\"Started process \" + name + \" is not alive.\");\n@@ -227,3 +226,4 @@\n-                } else {\n-                    if (!latch.await(Utils.adjustTimeout(timeout), unit)) {\n-                        throw new TimeoutException();\n+                    try {\n+                       return latch.await(1, TimeUnit.SECONDS);\n+                    } catch (InterruptedException e) {\n+                        throw new RuntimeException(e);\n@@ -231,0 +231,4 @@\n+                }, unit.toMillis(Utils.adjustTimeout(timeout)), 0);\n+\n+                if (!succeeded) {\n+                    throw new TimeoutException();\n@@ -233,1 +237,1 @@\n-        } catch (TimeoutException | InterruptedException | RuntimeException e) {\n+        } catch (TimeoutException | RuntimeException e) {\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"}]}