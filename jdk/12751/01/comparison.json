{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -219,5 +219,6 @@\n-                if (timeout == 0) {\n-                    latch.await();\n-                } else {\n-                    if (!latch.await(Utils.adjustTimeout(timeout), unit)) {\n-                        throw new TimeoutException();\n+                \/\/ Every second check if process is still alive\n+                boolean succeeded = Utils.waitForCondition(() -> {\n+                    \/\/Fail if process finished before printed expected string\n+                    if (!p.isAlive()) {\n+                        latch.countDown();\n+                        throw new RuntimeException(\"Started process \" + name + \" is not alive.\");\n@@ -225,0 +226,9 @@\n+                    try {\n+                       return latch.await(1, TimeUnit.SECONDS);\n+                    } catch (InterruptedException e) {\n+                        throw new RuntimeException(e);\n+                    }\n+                }, unit.toMillis(Utils.adjustTimeout(timeout)), 0);\n+\n+                if (!succeeded) {\n+                    throw new TimeoutException();\n@@ -227,1 +237,1 @@\n-        } catch (TimeoutException | InterruptedException e) {\n+        } catch (TimeoutException | RuntimeException e) {\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,3 +153,11 @@\n-            this.process = ProcessTools.startProcess(name, processBuilder, waitfor);\n-            \/\/ Release when process is started\n-            latch.countDown();\n+            String name = Thread.currentThread().getName();\n+\n+            try {\n+                this.process = ProcessTools.startProcess(name, processBuilder, waitfor);\n+            } catch (Throwable t) {\n+                System.out.println(String.format(\"ProcessThread[%s] failed: %s\", name, t.toString()));\n+                throw t;\n+            } finally {\n+                \/\/ Release when process is started or failed\n+                latch.countDown();\n+            }\n@@ -157,1 +165,0 @@\n-            \/\/ Will block...\n@@ -159,1 +166,0 @@\n-                this.process.waitFor();\n@@ -161,0 +167,2 @@\n+                \/\/ Will block...\n+                this.process.waitFor();\n@@ -162,1 +170,0 @@\n-                String name = Thread.currentThread().getName();\n","filename":"test\/lib\/jdk\/test\/lib\/thread\/ProcessThread.java","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"}]}