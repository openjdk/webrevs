{"files":[{"patch":"@@ -99,1 +99,0 @@\n-\n@@ -104,2 +103,1 @@\n-            String certSignatureAlg)\n-            throws Exception {\n+            String certSignatureAlg) throws Exception {\n","filename":"test\/jdk\/sun\/security\/ssl\/X509KeyManager\/AlgorithmConstraintsCheck.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+import javax.net.ssl.SSLHandshakeException;\n@@ -72,3 +73,6 @@\n-    private static final String CLIENT_CERT_SIG_ALG = \"SHA384withRSA\";\n-    private static final String SERVER_CERT_SIG_ALG = \"SHA256withRSA\";\n-    private static final String TRUSTED_CERT_SIG_ALG = \"SHA512withRSA\";\n+    private static final String KEY_ALGORITHM = \"EC\";\n+    private static final String CLIENT_CERT_SIG_SCHEME =\n+            \"ecdsa_secp384r1_sha384\";\n+    private static final String CLIENT_CERT_SIG_ALG = \"SHA384withECDSA\";\n+    private static final String SERVER_CERT_SIG_ALG = \"SHA256withECDSA\";\n+    private static final String TRUSTED_CERT_SIG_ALG = \"SHA512withECDSA\";\n@@ -93,1 +97,1 @@\n-                \"jdk.tls.client.SignatureSchemes\", \"rsa_pkcs1_sha384\");\n+                \"jdk.tls.client.SignatureSchemes\", CLIENT_CERT_SIG_SCHEME);\n@@ -95,1 +99,1 @@\n-                \"jdk.tls.server.SignatureSchemes\", \"rsa_pkcs1_sha384\");\n+                \"jdk.tls.server.SignatureSchemes\", CLIENT_CERT_SIG_SCHEME);\n@@ -109,2 +113,1 @@\n-                        assertTrue(\n-                                ex instanceof javax.net.ssl.SSLHandshakeException);\n+                        assertTrue(ex instanceof SSLHandshakeException);\n@@ -112,1 +115,1 @@\n-                                + \"no cipher suites in common\");\n+                                + \"No available authentication scheme\");\n@@ -130,3 +133,2 @@\n-    private static SSLContext getSSLContext(\n-            X509Certificate trustedCertificate, X509Certificate keyCertificate,\n-            PrivateKey privateKey, String kmAlg)\n+    private static SSLContext getSSLContext(X509Certificate trustedCertificate,\n+            X509Certificate keyCertificate, PrivateKey privateKey, String kmAlg)\n@@ -151,3 +153,1 @@\n-        \/\/ Use TLSv1.2 which supports SHA*withRSA algorithms for both handshake\n-        \/\/ and certificate signatures.\n-        SSLContext ctx = SSLContext.getInstance(\"TLSv1.2\");\n+        SSLContext ctx = SSLContext.getInstance(\"TLS\");\n@@ -208,1 +208,1 @@\n-        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\");\n+        KeyPairGenerator kpg = KeyPairGenerator.getInstance(KEY_ALGORITHM);\n@@ -222,1 +222,2 @@\n-                \"CN=localhost, OU=SSL-Client, O=Some-Org, L=Some-City, ST=Some-State, C=US\",\n+                \"CN=localhost, OU=SSL-Client, O=Some-Org, L=Some-City,\"\n+                        + \" ST=Some-State, C=US\",\n@@ -231,1 +232,0 @@\n-\n","filename":"test\/jdk\/sun\/security\/ssl\/X509KeyManager\/PeerConstraintsCheck.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"}]}