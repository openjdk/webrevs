{"files":[{"patch":"@@ -53,1 +53,1 @@\n- *\n+ * <p>\n@@ -59,1 +59,1 @@\n- *\n+ * <p>\n@@ -62,0 +62,3 @@\n+ * <p>\n+ * Algorithm constraints and certificate checks can be disabled by setting\n+ * \"jdk.tls.SunX509keymanager.certSelectionChecking\" system property to \"false\".\n@@ -73,0 +76,6 @@\n+    @Override\n+    boolean isCheckingDisabled() {\n+        return \"false\".equalsIgnoreCase(System.getProperty(\n+                \"jdk.tls.SunX509keymanager.certSelectionChecking\", \"true\"));\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SunX509KeyManagerImpl.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -56,4 +56,2 @@\n- * Layer that adds algorithm constraints and certificate\n- * checking to a key manager. Checks can be disabled by setting\n- * \"jdk.tls.keymanager.disableCertChecking\" system property to \"true\"\n- * before creating a KeyManager object.\n+ * Layer that adds algorithm constraints and certificate checking to a key\n+ * manager.\n@@ -68,2 +66,1 @@\n-        checksDisabled = \"true\".equals(System.getProperty(\n-                \"jdk.tls.keymanager.disableCertChecking\"));\n+        checksDisabled = isCheckingDisabled();\n@@ -72,0 +69,2 @@\n+    abstract boolean isCheckingDisabled();\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/X509KeyManagerCertChecking.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import java.security.cert.Certificate;\n@@ -88,0 +87,5 @@\n+    @Override\n+    boolean isCheckingDisabled() {\n+        return false;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/X509KeyManagerImpl.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -238,1 +238,1 @@\n-                \"jdk.tls.keymanager.disableCertChecking\", \"true\");\n+                \"jdk.tls.SunX509keymanager.certSelectionChecking\", \"false\");\n","filename":"test\/jdk\/sun\/security\/mscapi\/ShortRSAKeyWithinTLS.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,2 +54,3 @@\n- * @bug 8170706\n- * @summary Support algorithm constraints in SunX509 key manager\n+ * @bug 8359956\n+ * @summary Support algorithm constraints and certificate checks in SunX509\n+ *          key manager\n@@ -75,1 +76,1 @@\n-        String disabled = args[0];\n+        String enabled = args[0];\n@@ -80,1 +81,1 @@\n-                \"jdk.tls.keymanager.disableCertChecking\", disabled);\n+                \"jdk.tls.SunX509keymanager.certSelectionChecking\", enabled);\n@@ -97,1 +98,1 @@\n-        if (\"true\".equals(disabled)) {\n+        if (\"false\".equals(enabled) && kmAlg.equals(\"SunX509\")) {\n","filename":"test\/jdk\/sun\/security\/ssl\/X509KeyManager\/AlgorithmConstraintsCheck.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -59,2 +59,3 @@\n- * @bug 8359069\n- * @summary Support certificate checks in SunX509 key manager\n+ * @bug 8359956\n+ * @summary Support algorithm constraints and certificate checks in SunX509\n+ *          key manager\n@@ -119,1 +120,1 @@\n-        String disabled = args[0];\n+        String enabled = args[0];\n@@ -123,1 +124,1 @@\n-                \"jdk.tls.keymanager.disableCertChecking\", disabled);\n+                \"jdk.tls.SunX509keymanager.certSelectionChecking\", enabled);\n@@ -128,1 +129,1 @@\n-        usageTestCase(disabled, kmAlg, \"RSA\", NONE_KEY_USAGES, true, true);\n+        usageTestCase(enabled, kmAlg, \"RSA\", NONE_KEY_USAGES, true, true);\n@@ -132,1 +133,1 @@\n-        usageTestCase(disabled, kmAlg, \"RSA\", NO_DG_USAGE, false, true);\n+        usageTestCase(enabled, kmAlg, \"RSA\", NO_DG_USAGE, false, true);\n@@ -136,1 +137,1 @@\n-        usageTestCase(disabled, kmAlg, \"RSASSA-PSS\", NO_DG_USAGE, true, false);\n+        usageTestCase(enabled, kmAlg, \"RSASSA-PSS\", NO_DG_USAGE, true, false);\n@@ -139,1 +140,1 @@\n-        usageTestCase(disabled, kmAlg, \"DSA\", NO_DG_USAGE, true, true);\n+        usageTestCase(enabled, kmAlg, \"DSA\", NO_DG_USAGE, true, true);\n@@ -142,1 +143,1 @@\n-        usageTestCase(disabled, kmAlg, \"EC\", NO_DG_USAGE, true, true);\n+        usageTestCase(enabled, kmAlg, \"EC\", NO_DG_USAGE, true, true);\n@@ -146,1 +147,1 @@\n-        usageTestCase(disabled, kmAlg, \"RSA\", NO_DG_NO_KE_USAGE, true, true);\n+        usageTestCase(enabled, kmAlg, \"RSA\", NO_DG_NO_KE_USAGE, true, true);\n@@ -149,1 +150,1 @@\n-        usageTestCase(disabled, kmAlg, \"DH\", NO_KA_USAGE, true, true);\n+        usageTestCase(enabled, kmAlg, \"DH\", NO_KA_USAGE, true, true);\n@@ -153,1 +154,1 @@\n-        usageTestCase(disabled, kmAlg, \"EC\", NO_KA_USAGE, true, false);\n+        usageTestCase(enabled, kmAlg, \"EC\", NO_KA_USAGE, true, false);\n@@ -158,1 +159,1 @@\n-        issuerTestCase(disabled, kmAlg, \"RSA\",\n+        issuerTestCase(enabled, kmAlg, \"RSA\",\n@@ -162,1 +163,1 @@\n-        issuerTestCase(disabled, kmAlg, \"RSA\",\n+        issuerTestCase(enabled, kmAlg, \"RSA\",\n@@ -166,1 +167,1 @@\n-        issuerTestCase(disabled, kmAlg, \"RSA\",\n+        issuerTestCase(enabled, kmAlg, \"RSA\",\n@@ -170,1 +171,1 @@\n-        issuerTestCase(disabled, kmAlg, \"RSA\", new Principal[]{}, true);\n+        issuerTestCase(enabled, kmAlg, \"RSA\", new Principal[]{}, true);\n@@ -173,1 +174,1 @@\n-        issuerTestCase(disabled, kmAlg, \"RSA\", null, true);\n+        issuerTestCase(enabled, kmAlg, \"RSA\", null, true);\n@@ -176,1 +177,1 @@\n-        issuerTestCase(disabled, kmAlg, \"RSA\",\n+        issuerTestCase(enabled, kmAlg, \"RSA\",\n@@ -188,1 +189,1 @@\n-    private static void usageTestCase(String disabled, String kmAlg,\n+    private static void usageTestCase(String enabled, String kmAlg,\n@@ -206,1 +207,1 @@\n-        if (\"true\".equals(disabled)) {\n+        if (\"false\".equals(enabled) && kmAlg.equals(\"SunX509\")) {\n@@ -262,1 +263,1 @@\n-    private static void issuerTestCase(String disabled, String kmAlg,\n+    private static void issuerTestCase(String enabled, String kmAlg,\n@@ -281,1 +282,1 @@\n-            if (\"true\".equals(disabled)) {\n+            if (\"false\".equals(enabled) && kmAlg.equals(\"SunX509\")) {\n","filename":"test\/jdk\/sun\/security\/ssl\/X509KeyManager\/CertChecking.java","additions":23,"deletions":22,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -58,3 +58,3 @@\n- * @bug 8353113\n- * @summary Peer supported certificate signature algorithms are not being\n- *          checked with default SunX509 key manager\n+ * @bug 8359956\n+ * @summary Support algorithm constraints and certificate checks in SunX509\n+ *          key manager\n@@ -106,1 +106,1 @@\n-        String disabled = args[0];\n+        String enabled = args[0];\n@@ -110,1 +110,1 @@\n-                \"jdk.tls.keymanager.disableCertChecking\", disabled);\n+                \"jdk.tls.SunX509keymanager.certSelectionChecking\", enabled);\n@@ -112,1 +112,1 @@\n-        if (\"true\".equals(disabled)) {\n+        if (\"false\".equals(enabled) && kmAlg.equals(\"SunX509\")) {\n","filename":"test\/jdk\/sun\/security\/ssl\/X509KeyManager\/PeerConstraintsCheck.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -36,2 +36,0 @@\n-import java.net.*;\n-import java.util.*;\n@@ -1117,1 +1115,1 @@\n-                \"jdk.tls.keymanager.disableCertChecking\", \"true\");\n+                \"jdk.tls.SunX509keymanager.certSelectionChecking\", \"false\");\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/PKIXExtendedTM.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-                \"jdk.tls.keymanager.disableCertChecking\", \"true\");\n+                \"jdk.tls.SunX509keymanager.certSelectionChecking\", \"false\");\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/PrintSSL.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}