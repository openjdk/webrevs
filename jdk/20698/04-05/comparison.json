{"files":[{"patch":"@@ -7486,11 +7486,0 @@\n-void Assembler::xorw(Register dst, Register src) {\n-  (void)prefix_and_encode(dst->encoding(), src->encoding());\n-  emit_arith(0x33, 0xC0, dst, src);\n-}\n-\n-void Assembler::exorw(Register dst, Register src1, Register src2, bool no_flags) {\n-  InstructionAttr attributes(AVX_128bit, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_3C, &attributes, no_flags);\n-  emit_arith(0x33, 0xC0, src1, src2);\n-}\n-\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -794,1 +794,2 @@\n-  void evex_prefix_ndd(Address adr, int ndd_enc, int xreg_enc, VexSimdPrefix pre, VexOpcode opc, InstructionAttr *attributes, bool no_flags = false);\n+  void evex_prefix_ndd(Address adr, int ndd_enc, int xreg_enc, VexSimdPrefix pre, VexOpcode opc,\n+                       InstructionAttr *attributes, bool no_flags = false);\n@@ -796,1 +797,2 @@\n-  void evex_prefix_nf(Address adr, int ndd_enc, int xreg_enc, VexSimdPrefix pre, VexOpcode opc, InstructionAttr *attributes, bool no_flags = false);\n+  void evex_prefix_nf(Address adr, int ndd_enc, int xreg_enc, VexSimdPrefix pre, VexOpcode opc,\n+                      InstructionAttr *attributes, bool no_flags = false);\n@@ -2502,2 +2504,0 @@\n-  void xorw(Register dst, Register src);\n-  void exorw(Register dst, Register src1, Register src2, bool no_flags);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}