{"files":[{"patch":"@@ -405,1 +405,1 @@\n-                        cert = (X509Certificate)CERT_FACTORY.generateCertificate(in);\n+                        cert = (X509Certificate) CERT_FACTORY.generateCertificate(in);\n@@ -691,1 +691,1 @@\n-        public String value( ) {\n+        public String value() {\n@@ -705,1 +705,3 @@\n-    public record CertificateRequest(String name, CertificateType type, int days, boolean expired, boolean trusted) implements Comparable<CertificateRequest>{\n+    public record CertificateRequest(String name, CertificateType type, int days, boolean expired, boolean trusted)\n+            implements Comparable<CertificateRequest> {\n+\n@@ -733,1 +735,1 @@\n-            }else {\n+            } else {\n@@ -823,1 +825,1 @@\n-    private record InstalledCertificate(String name, CertificateType type, int days, boolean expired) implements Comparable<InstalledCertificate>{\n+    private record InstalledCertificate(String name, CertificateType type, int days, boolean expired) implements Comparable<InstalledCertificate> {\n@@ -874,1 +876,1 @@\n-            return (int)TimeUnit.DAYS.convert(notAfter.getTime() - notBefore.getTime(), TimeUnit.MILLISECONDS);\n+            return (int) TimeUnit.DAYS.convert(notAfter.getTime() - notBefore.getTime(), TimeUnit.MILLISECONDS);\n@@ -902,2 +904,2 @@\n-     * The user will be prompted to enter the user login password as\n-     * many times as the number of unique certificates this function will create.\n+     * The user will be prompted to enter the user login password as many times as\n+     * the number of unique certificates this function will create.\n@@ -1049,1 +1051,1 @@\n-                synchronized(this) {\n+                synchronized (this) {\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/MacSign.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"}]}