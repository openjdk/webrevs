{"files":[{"patch":"@@ -1642,1 +1642,1 @@\n-  assert(!_dual, \"\");\n+  assert(!_dual, \"dual types should only be used for join calculation\");\n@@ -1647,1 +1647,1 @@\n-  assert(!_dual, \"\");\n+  assert(!_dual, \"dual types should only be used for join calculation\");\n@@ -1657,1 +1657,1 @@\n-  assert(!_dual, \"\");\n+  assert(!_dual, \"dual types should only be used for join calculation\");\n@@ -1662,1 +1662,1 @@\n-  assert(!ft->_dual, \"\");\n+  assert(!ft->_dual, \"dual types should only be used for join calculation\");\n@@ -1772,1 +1772,1 @@\n-  assert(!_dual, \"\");\n+  assert(!_dual, \"dual types should only be used for join calculation\");\n@@ -1777,1 +1777,1 @@\n-  assert(!_dual, \"\");\n+  assert(!_dual, \"dual types should only be used for join calculation\");\n@@ -1787,1 +1787,1 @@\n-  assert(!_dual, \"\");\n+  assert(!_dual, \"dual types should only be used for join calculation\");\n@@ -1792,1 +1792,1 @@\n-  assert(!ft->_dual, \"\");\n+  assert(!ft->_dual, \"dual types should only be used for join calculation\");\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -617,0 +617,2 @@\n+  \/\/ Check if a TypeInt is a subset of this TypeInt (i.e. all elements of the\n+  \/\/ argument are also elements of this type)\n@@ -619,0 +621,1 @@\n+  \/\/ Excluding the cases where this and t are the same\n@@ -695,0 +698,2 @@\n+  \/\/ Check if a TypeLong is a subset of this TypeLong (i.e. all elements of the\n+  \/\/ argument are also elements of this type)\n@@ -697,0 +702,1 @@\n+  \/\/ Excluding the cases where this and t are the same\n","filename":"src\/hotspot\/share\/opto\/type.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}