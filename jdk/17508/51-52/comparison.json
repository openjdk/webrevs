{"files":[{"patch":"@@ -91,6 +91,6 @@\n-\/\/ function will always find a such value. The conversion is also true, that is\n-\/\/ if this function finds a value not less than lo and satisfies bits, then it\n-\/\/ must trivially be the case that there exists a such value. As a result, the\n-\/\/ negation of those statements are also equivalent, there does not exists a\n-\/\/ value not less than lo and satisfies bits if and only if this function does\n-\/\/ not return a such value.\n+\/\/ function will always find one such value. The conversion is also true, that\n+\/\/ is if this function finds a value not less than lo and satisfies bits, then\n+\/\/ it must trivially be the case that there exists one such value. As a result,\n+\/\/ the negation of those statements are also equivalent, there does not exists\n+\/\/ a value not less than lo and satisfies bits if and only if this function\n+\/\/ does not return one such value.\n@@ -303,0 +303,4 @@\n+    \/\/ Note that in this case, new_lo is always a valid answer. That is, it is\n+    \/\/ a value not less than lo and satisfies bits. This is because there is\n+    \/\/ always a bit up to first_violation that is 0 in both lo and zeros\n+    \/\/ (trivially, it is the bit at first_violation).\n@@ -341,3 +345,3 @@\n-    \/\/ i is the last bit being 0 in both lo and zeros that stands before the\n-    \/\/ first violation, which is the last set bit of tmp. i == 2 here, we want\n-    \/\/ to obtain the value with only the bit i set, this is equivalent to\n+    \/\/ i is the last bit being 0 in both lo and zeros that is up to the first\n+    \/\/ violation, which is the last set bit of tmp. i == 2 here, we want to\n+    \/\/ obtain the value with only the bit i set, this is equivalent to\n@@ -355,0 +359,4 @@\n+    \/\/ In this case, new_lo may not always be a valid answer. This can happen\n+    \/\/ if there is no bit up to first_violation that is 0 in both lo and zeros,\n+    \/\/ i.e. tmp == 0. In such cases, alignment == 0 && lo == bits._ones. It is\n+    \/\/ the only case when this function does not return a valid answer.\n","filename":"src\/hotspot\/share\/opto\/rangeinference.cpp","additions":17,"deletions":9,"binary":false,"changes":26,"status":"modified"}]}