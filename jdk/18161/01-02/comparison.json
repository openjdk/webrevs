{"files":[{"patch":"@@ -3410,4 +3410,0 @@\n-    \/\/ Some attributes can be ignored. Calculate actual attributes_count.\n-    u2 actual_attributes_count = generic_sig_index != 0 ? 1 : 0\n-                               + annotations != nullptr ? 1 : 0\n-                               + type_annotations != nullptr ? 1 : 0;\n@@ -3415,2 +3411,1 @@\n-      RecordComponent::allocate(_loader_data, name_index, descriptor_index,\n-                                actual_attributes_count, generic_sig_index,\n+      RecordComponent::allocate(_loader_data, name_index, descriptor_index, generic_sig_index,\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-                                           u2 attributes_count,\n@@ -41,1 +40,1 @@\n-         RecordComponent(name_index, descriptor_index, attributes_count,\n+         RecordComponent(name_index, descriptor_index,\n@@ -68,1 +67,0 @@\n-  st->print(\" - attributes_count: %d\", _attributes_count);\n","filename":"src\/hotspot\/share\/oops\/recordComponent.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-    u2 _attributes_count;\n@@ -46,3 +45,2 @@\n-    RecordComponent(u2 name_index, u2 descriptor_index, u2 attributes_count,\n-                    u2 generic_signature_index, AnnotationArray* annotations,\n-                    AnnotationArray* type_annotations):\n+    RecordComponent(u2 name_index, u2 descriptor_index, u2 generic_signature_index,\n+                    AnnotationArray* annotations, AnnotationArray* type_annotations):\n@@ -51,1 +49,0 @@\n-                    _attributes_count(attributes_count),\n@@ -57,1 +54,0 @@\n-                                     u2 attributes_count,\n@@ -72,2 +68,0 @@\n-    u2 attributes_count() const { return _attributes_count; }\n-\n","filename":"src\/hotspot\/share\/oops\/recordComponent.hpp","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -497,1 +497,0 @@\n-      assert(component->attributes_count() > 0, \"Bad component attributes count\");\n@@ -514,1 +513,4 @@\n-    write_u2(component->attributes_count());\n+    u2 attributes_count = component->generic_signature_index() != 0 ? 1 : 0\n+                        + component->annotations() != nullptr ? 1 : 0\n+                        + component->type_annotations() != nullptr ? 1 : 0;\n+    write_u2(attributes_count);\n","filename":"src\/hotspot\/share\/prims\/jvmtiClassFileReconstituter.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}