{"files":[{"patch":"@@ -87,4 +87,1 @@\n-    \/\/ for Transformer\n-    private String targetClassName;\n-    private byte[] seenClassBytes;\n-    private byte[] newClassBytes;\n+    private Transformer transformer;\n@@ -101,5 +98,2 @@\n-    \/\/ Returns class bytes passed to the transformer.\n-    private byte[] retransform(Class targetClass, byte[] classBytes) throws Throwable {\n-        targetClassName = targetClass.getName();\n-        seenClassBytes = null;\n-        newClassBytes = classBytes;\n+    private void retransform(Class targetClass, byte[] classBytes) throws Throwable {\n+        transformer.prepare(targetClass, classBytes);\n@@ -107,2 +101,2 @@\n-        assertTrue(targetClass.getName() + \" was not seen by transform()\", seenClassBytes != null);\n-        return seenClassBytes;\n+        assertTrue(targetClass.getName() + \" was not seen by transform()\",\n+                   transformer.getSeenClassBytes() != null);\n@@ -112,1 +106,2 @@\n-        fInst.addTransformer(new Transformer(), true);\n+        transformer = new Transformer();\n+        fInst.addTransformer(transformer, true);\n@@ -122,1 +117,0 @@\n-            \/\/ Ensure retransformation does not fail with ClassFormatError.\n@@ -150,0 +144,4 @@\n+        private String targetClassName;\n+        private byte[] seenClassBytes;\n+        private byte[] newClassBytes;\n+\n@@ -153,0 +151,11 @@\n+        \/\/ Prepares transformer for Instrumentation.retransformClasses.\n+        public void prepare(Class targetClass, byte[] classBytes) {\n+            targetClassName = targetClass.getName();\n+            newClassBytes = classBytes;\n+            seenClassBytes = null;\n+        }\n+\n+        byte[] getSeenClassBytes() {\n+            return seenClassBytes;\n+        }\n+\n","filename":"test\/jdk\/java\/lang\/instrument\/RetransformRecordAnnotation.java","additions":22,"deletions":13,"binary":false,"changes":35,"status":"modified"}]}