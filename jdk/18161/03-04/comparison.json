{"files":[{"patch":"@@ -513,3 +513,4 @@\n-    u2 attributes_count = component->generic_signature_index() != 0 ? 1 : 0\n-                        + component->annotations() != nullptr ? 1 : 0\n-                        + component->type_annotations() != nullptr ? 1 : 0;\n+    u2 attributes_count = (component->generic_signature_index() != 0 ? 1 : 0)\n+                        + (component->annotations() != nullptr ? 1 : 0)\n+                        + (component->type_annotations() != nullptr ? 1 : 0);\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiClassFileReconstituter.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,0 +35,4 @@\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n@@ -41,3 +45,35 @@\n-    \/\/ RetentionPolicy.CLASS by default\n-    @interface MyAnnotation{}\n-    public record MyRecord(@MyAnnotation Object o, Object other) {}\n+    @Target({ElementType.TYPE_PARAMETER, ElementType.TYPE_USE})\n+    @Retention(RetentionPolicy.RUNTIME)\n+    @interface RuntimeTypeAnno {}\n+\n+    @Retention(RetentionPolicy.RUNTIME)\n+    @interface RuntimeParamAnno {\n+        String s() default \"foo\";\n+    }\n+\n+    @Target({ElementType.TYPE_PARAMETER, ElementType.TYPE_USE})\n+    @Retention(RetentionPolicy.CLASS)\n+    @interface ClassTypeAnno {}\n+\n+    @Retention(RetentionPolicy.CLASS)\n+    @interface ClassParamAnno {\n+        String s() default \"bar\";\n+    }\n+\n+    @RuntimeTypeAnno\n+    @RuntimeParamAnno(s = \"1\")\n+    public record VisibleAnnos(@RuntimeTypeAnno @RuntimeParamAnno(s = \"2\") Object o, Object other) {\n+    }\n+\n+    @ClassTypeAnno\n+    @ClassParamAnno(s = \"3\")\n+    public record InvisibleAnnos(@ClassTypeAnno @ClassParamAnno(s = \"4\") Object o, Object other) {\n+    }\n+\n+    @RuntimeTypeAnno\n+    @RuntimeParamAnno(s = \"5\")\n+    @ClassTypeAnno\n+    @ClassParamAnno(s = \"6\")\n+    public record MixedAnnos(@RuntimeTypeAnno @RuntimeParamAnno(s = \"7\")\n+                             @ClassTypeAnno @ClassParamAnno(s = \"8\") Object o, Object other) {\n+    }\n@@ -51,5 +87,2 @@\n-    private String targetClassName = \"RetransformRecordAnnotation$MyRecord\";\n-    private String classFileName = targetClassName + \".class\";\n-    private Class targetClass;\n-    private byte[] originalClassBytes;\n-\n+    \/\/ for Transformer\n+    private String targetClassName;\n@@ -61,5 +94,0 @@\n-\n-        File origClassFile = new File(System.getProperty(\"test.classes\", \".\"), classFileName);\n-        log(\"Reading test class from \" + origClassFile);\n-        originalClassBytes = Files.readAllBytes(origClassFile.toPath());\n-        log(\"Read \" + originalClassBytes.length + \" bytes.\");\n@@ -74,1 +102,2 @@\n-    private byte[] retransform(byte[] classBytes) throws Throwable {\n+    private byte[] retransform(Class targetClass, byte[] classBytes) throws Throwable {\n+        targetClassName = targetClass.getName();\n@@ -78,1 +107,1 @@\n-        assertTrue(targetClassName + \" was not seen by transform()\", seenClassBytes != null);\n+        assertTrue(targetClass.getName() + \" was not seen by transform()\", seenClassBytes != null);\n@@ -83,3 +112,0 @@\n-        ClassLoader loader = getClass().getClassLoader();\n-        targetClass = loader.loadClass(targetClassName);\n-\n@@ -90,1 +116,1 @@\n-            retransform(originalClassBytes);\n+            retransform(InvisibleAnnos.class, loadClassBytes(InvisibleAnnos.class));\n@@ -95,1 +121,1 @@\n-            log(\"Test: retransform to null\");\n+            log(\"Test: retransform VisibleAnnos to null\");\n@@ -97,1 +123,13 @@\n-            retransform(null);\n+            retransform(VisibleAnnos.class, null);\n+            log(\"\");\n+        }\n+\n+        {\n+            log(\"Test: retransform InvisibleAnnos to null\");\n+            retransform(InvisibleAnnos.class, null);\n+            log(\"\");\n+        }\n+\n+        {\n+            log(\"Test: retransform MixedAnnos to null\");\n+            retransform(MixedAnnos.class, null);\n@@ -102,0 +140,8 @@\n+    private byte[] loadClassBytes(Class cls) throws Exception {\n+        String classFileName = cls.getName() + \".class\";\n+        File classFile = new File(System.getProperty(\"test.classes\", \".\"), classFileName);\n+        log(\"Reading test class from \" + classFile);\n+        byte[] classBytes = Files.readAllBytes(classFile.toPath());\n+        log(\"Read \" + classBytes.length + \" bytes.\");\n+        return classBytes;\n+    }\n","filename":"test\/jdk\/java\/lang\/instrument\/RetransformRecordAnnotation.java","additions":67,"deletions":21,"binary":false,"changes":88,"status":"modified"}]}