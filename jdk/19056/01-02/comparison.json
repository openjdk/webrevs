{"files":[{"patch":"@@ -442,1 +442,1 @@\n-bool SerialHeap::do_young_gc(DefNewGeneration* young_gen, bool clear_soft_refs) {\n+bool SerialHeap::do_young_gc(bool clear_soft_refs) {\n@@ -451,2 +451,2 @@\n-  TraceCollectorStats tcs(young_gen->counters());\n-  TraceMemoryManagerStats tmms(young_gen->gc_manager(), gc_cause(), \"end of minor GC\");\n+  TraceCollectorStats tcs(_young_gen->counters());\n+  TraceMemoryManagerStats tmms(_young_gen->gc_manager(), gc_cause(), \"end of minor GC\");\n@@ -468,1 +468,1 @@\n-  bool result = young_gen->collect(clear_soft_refs);\n+  bool result = _young_gen->collect(clear_soft_refs);\n@@ -472,1 +472,1 @@\n-  update_gc_stats(young_gen, false);\n+  update_gc_stats(_young_gen, false);\n@@ -492,5 +492,0 @@\n-bool SerialHeap::should_do_full_collection(size_t size, bool full, bool is_tlab,\n-                                           SerialHeap::GenerationType max_gen) const {\n-  return max_gen == OldGen && _old_gen->should_collect(full, size, is_tlab);\n-}\n-\n@@ -653,1 +648,1 @@\n-    bool success = do_young_gc(_young_gen, clear_soft_refs);\n+    bool success = do_young_gc(clear_soft_refs);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-  bool do_young_gc(DefNewGeneration* young_gen, bool clear_soft_refs);\n+  bool do_young_gc(bool clear_soft_refs);\n@@ -300,4 +300,0 @@\n-  \/\/ Return true if we need to perform full collection.\n-  bool should_do_full_collection(size_t size, bool full,\n-                                 bool is_tlab, GenerationType max_gen) const;\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}