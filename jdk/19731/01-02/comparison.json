{"files":[{"patch":"@@ -31,1 +31,0 @@\n- * @build jdk.test.lib.Platform\n@@ -43,1 +42,0 @@\n-import jdk.test.lib.Platform;\n@@ -56,3 +54,0 @@\n-        if(Platform.isRoot() && !tester.isWindows()) {\n-            throw new SkippedException(\"root user has privileged will make this test fail.\");\n-        }\n@@ -70,1 +65,1 @@\n-            throw error(outDir, \"Cannot create directory\");\n+            throw skip(outDir, \"Cannot create directory\");\n@@ -73,4 +68,1 @@\n-            if (skip(outDir)) {\n-                return;\n-            }\n-            throw error(outDir, \"could not set directory read-only\");\n+            throw skip(outDir, \"could not set directory read-only\");\n@@ -79,1 +71,1 @@\n-            throw error(outDir, \"directory is writable\");\n+            throw skip(outDir, \"directory is writable\");\n@@ -102,1 +94,1 @@\n-            throw error(outDir, \"Cannot create directory\");\n+            throw skip(outDir, \"Cannot create directory\");\n@@ -107,1 +99,1 @@\n-            throw error(index, \"could not set index read-only\");\n+            throw skip(index, \"could not set index read-only\");\n@@ -110,1 +102,1 @@\n-            throw error(index, \"index is writable\");\n+            throw skip(index, \"index is writable\");\n@@ -148,1 +140,1 @@\n-            throw error(pkgOutDir, \"Cannot create directory\");\n+            throw skip(pkgOutDir, \"Cannot create directory\");\n@@ -151,4 +143,1 @@\n-            if (skip(pkgOutDir)) {\n-                return;\n-            }\n-            throw error(pkgOutDir, \"could not set directory read-only\");\n+            throw skip(pkgOutDir, \"could not set directory read-only\");\n@@ -157,1 +146,1 @@\n-            throw error(pkgOutDir, \"directory is writable\");\n+            throw skip(pkgOutDir, \"directory is writable\");\n@@ -201,1 +190,1 @@\n-            throw error(docFilesOutDir, \"Cannot create directory\");\n+            throw skip(docFilesOutDir, \"Cannot create directory\");\n@@ -204,4 +193,1 @@\n-            if (skip(docFilesOutDir)) {\n-                return;\n-            }\n-            throw error(docFilesOutDir, \"could not set directory read-only\");\n+            throw skip(docFilesOutDir, \"could not set directory read-only\");\n@@ -210,1 +196,1 @@\n-            throw error(docFilesOutDir, \"directory is writable\");\n+            throw skip(docFilesOutDir, \"directory is writable\");\n@@ -228,1 +214,2 @@\n-    private Error error(File f, String message) {\n+    private Error skip(File f, String message) {\n+        out.print(System.getProperty(\"user.name\"));\n@@ -231,1 +218,1 @@\n-        throw new Error(f + \": \" + message);\n+        throw new SkippedException(f + \": \" + message);\n@@ -251,15 +238,0 @@\n-\n-    private boolean skip(File dir) {\n-        if (isWindows()) {\n-            showAllAttributes(dir.toPath());\n-            out.println(\"Windows: cannot set directory read only:\" + dir);\n-            out.println(\"TEST CASE SKIPPED\");\n-            return true;\n-        } else {\n-            return false;\n-        }\n-    }\n-\n-    private boolean isWindows() {\n-        return System.getProperty(\"os.name\").toLowerCase(Locale.US).startsWith(\"windows\");\n-    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testIOException\/TestIOException.java","additions":15,"deletions":43,"binary":false,"changes":58,"status":"modified"}]}