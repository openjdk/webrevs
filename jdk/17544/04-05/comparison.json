{"files":[{"patch":"@@ -499,7 +499,9 @@\n-     * @implNote Expand the map if the map if the number of mappings to be added\n-     *           is greater than or equal to threshold. This is conservative; the\n-     *           obvious condition is (m.size() + size) >= threshold, but this\n-     *           condition could result in a map with twice the appropriate\n-     *           capacity, if the keys to be added overlap with the keys already in\n-     *           this map. By using the conservative calculation, we subject ourself\n-     *           to at most one extra resize.\n+     * @implNote {@code HashMap}'s resize policy is intentionally conservative to\n+     *           avoid an unnecessarily large capacity if {@code m} contains many\n+     *           duplicate keys. This can lead to a potentially expensive, extra\n+     *           resize operation. To avoid such an additional resize operation,\n+     *           callers of {@code putAll()} can use the\n+     *           {@code HashMap(int initialCapacity)} constructor or\n+     *           {@code newHashMap(int numMappings)} to create a map with a large\n+     *           enough capacity before calling {@code putAll()} to ensure that the\n+     *           map is only resized and copied once.\n","filename":"src\/java.base\/share\/classes\/java\/util\/HashMap.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"}]}