{"files":[{"patch":"@@ -268,0 +268,1 @@\n+\n@@ -275,3 +276,10 @@\n-  if ((ret == -1 || ret >= max_msg_size) && strlen(msg) > 0) {\n-    assert(msg[max_msg_size - 1] == '\\0', \"should be null terminated\");\n-    UTF8::truncate_to_legal_utf8((unsigned char*)msg, max_msg_size);\n+  if (ret == -1 || ret >= max_msg_size) {\n+    int len = (int) strlen(msg);\n+    if (len > 0) {\n+      \/\/ Truncation will only happen if the buffer was filled by vsnprintf,\n+      \/\/ otherwise vsnprintf already terminated filling it at a well-defined point.\n+      \/\/ But as this is not a clearly specified area we will perform our own UTF8\n+      \/\/ truncation anyway - though for those well-defined termination points it\n+      \/\/ will be a no-op.\n+      UTF8::truncate_to_legal_utf8((unsigned char*)msg, len);\n+    }\n","filename":"src\/hotspot\/share\/utilities\/exceptions.cpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}