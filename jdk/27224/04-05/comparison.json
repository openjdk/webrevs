{"files":[{"patch":"@@ -1510,0 +1510,4 @@\n+static size_t limit_by_size_t_max(uint64_t value) {\n+  return (size_t)MIN2(value, (uint64_t)std::numeric_limits<size_t>::max());\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1107,6 +1107,0 @@\n-\/\/ This is typically used to safely convert to size_t from a larger type.\n-template <class T>\n-size_t limit_by_size_t_max(T value) {\n-  return (size_t)MIN2(value, (T)std::numeric_limits<size_t>::max());\n-}\n-\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}