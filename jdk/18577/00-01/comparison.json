{"files":[{"patch":"@@ -534,1 +534,1 @@\n-    const VPointer& align_to_ref_p = get_pointer(mem_ref);\n+    const VPointer& align_to_ref_p = vpointer(mem_ref);\n@@ -540,1 +540,1 @@\n-        const VPointer& p2 = get_pointer(s);\n+        const VPointer& p2 = vpointer(s);\n@@ -596,1 +596,1 @@\n-    const VPointer& p1 = get_pointer(s1);\n+    const VPointer& p1 = vpointer(s1);\n@@ -600,1 +600,1 @@\n-        const VPointer& p2 = get_pointer(s2);\n+        const VPointer& p2 = vpointer(s2);\n@@ -621,1 +621,1 @@\n-      const VPointer& p = get_pointer(s);\n+      const VPointer& p = vpointer(s);\n@@ -644,1 +644,1 @@\n-        const VPointer& p = get_pointer(s);\n+        const VPointer& p = vpointer(s);\n@@ -717,1 +717,1 @@\n-  const VPointer& align_to_ref_p = get_pointer(mem_ref);\n+  const VPointer& align_to_ref_p = vpointer(mem_ref);\n@@ -878,2 +878,2 @@\n-  const VPointer& p1 = get_pointer(s1->as_Mem());\n-  const VPointer& p2 = get_pointer(s2->as_Mem());\n+  const VPointer& p1 = vpointer(s1->as_Mem());\n+  const VPointer& p2 = vpointer(s2->as_Mem());\n@@ -1640,1 +1640,1 @@\n-  const VPointer& mem_ref_p = get_pointer(mem_ref);\n+  const VPointer& mem_ref_p = vpointer(mem_ref);\n@@ -3313,1 +3313,1 @@\n-  const VPointer& p = get_pointer(s);\n+  const VPointer& p = vpointer(s);\n@@ -3416,1 +3416,1 @@\n-  const VPointer& align_to_ref_p = get_pointer(align_to_ref);\n+  const VPointer& align_to_ref_p = vpointer(align_to_ref);\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -498,3 +498,3 @@\n-  \/\/ VLoopDependencyGraph Accessors\n-  const VPointer& get_pointer(const MemNode* mem) const {\n-    return _vloop_analyzer.pointers().get(mem);\n+  \/\/ VLoopVPointer Accessors\n+  const VPointer& vpointer(const MemNode* mem) const {\n+    return _vloop_analyzer.vpointers().vpointer(mem);\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-  _pointers.compute_and_cache();\n+  _vpointers.compute_and_cache();\n@@ -184,2 +184,2 @@\n-void VLoopPointers::compute_and_cache() {\n-  int number_of_pointers = 0;\n+void VLoopVPointers::compute_and_cache() {\n+  int number_of_vpointers = 0;\n@@ -189,1 +189,1 @@\n-      number_of_pointers++;\n+      number_of_vpointers++;\n@@ -193,2 +193,2 @@\n-  uint bytes = number_of_pointers * sizeof(VPointer);\n-  _pointers = (VPointer*)_arena->Amalloc(bytes);\n+  uint bytes = number_of_vpointers * sizeof(VPointer);\n+  _vpointers = (VPointer*)_arena->Amalloc(bytes);\n@@ -201,2 +201,2 @@\n-      ::new (&_pointers[pointers_idx]) VPointer(mem, _vloop);\n-      _bb_idx_to_pointer.at_put(i, pointers_idx);\n+      ::new (&_vpointers[pointers_idx]) VPointer(mem, _vloop);\n+      _bb_idx_to_vpointer.at_put(i, pointers_idx);\n@@ -207,1 +207,1 @@\n-  NOT_PRODUCT( if (_vloop.is_trace_pointers()) { print(); } )\n+  NOT_PRODUCT( if (_vloop.is_trace_vpointers()) { print(); } )\n@@ -210,1 +210,1 @@\n-const VPointer& VLoopPointers::get(const MemNode* mem) const {\n+const VPointer& VLoopVPointers::vpointer(const MemNode* mem) const {\n@@ -213,1 +213,1 @@\n-  int pointers_idx = _bb_idx_to_pointer.at(bb_idx);\n+  int pointers_idx = _bb_idx_to_vpointer.at(bb_idx);\n@@ -215,1 +215,1 @@\n-  return _pointers[pointers_idx];\n+  return _vpointers[pointers_idx];\n@@ -219,2 +219,2 @@\n-void VLoopPointers::print() const {\n-  tty->print_cr(\"\\nVLoopPointers::print:\");\n+void VLoopVPointers::print() const {\n+  tty->print_cr(\"\\nVLoopVPointers::print:\");\n@@ -225,1 +225,1 @@\n-      const VPointer& p = get(mem);\n+      const VPointer& p = vpointer(mem);\n@@ -260,1 +260,1 @@\n-      const VPointer& p1 = _pointers.get(n1);\n+      const VPointer& p1 = _vpointers.vpointer(n1);\n@@ -268,1 +268,1 @@\n-        const VPointer& p2 = _pointers.get(n2);\n+        const VPointer& p2 = _vpointers.vpointer(n2);\n","filename":"src\/hotspot\/share\/opto\/vectorization.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-  bool is_trace_pointers() const {\n+  bool is_trace_vpointers() const {\n@@ -456,1 +456,1 @@\n-class VLoopPointers : public StackObj {\n+class VLoopVPointers : public StackObj {\n@@ -463,1 +463,1 @@\n-  VPointer* _pointers;\n+  VPointer* _vpointers;\n@@ -465,2 +465,2 @@\n-  \/\/ Map bb_idx -> index in _pointers. -1 if not mapped.\n-  GrowableArray<int> _bb_idx_to_pointer;\n+  \/\/ Map bb_idx -> index in _vpointers. -1 if not mapped.\n+  GrowableArray<int> _bb_idx_to_vpointer;\n@@ -469,3 +469,3 @@\n-  VLoopPointers(Arena* arena,\n-                const VLoop& vloop,\n-                const VLoopBody& body) :\n+  VLoopVPointers(Arena* arena,\n+                 const VLoop& vloop,\n+                 const VLoopBody& body) :\n@@ -475,6 +475,6 @@\n-    _pointers(nullptr),\n-    _bb_idx_to_pointer(arena,\n-                       vloop.estimated_body_length(),\n-                       vloop.estimated_body_length(),\n-                       -1) {}\n-  NONCOPYABLE(VLoopPointers);\n+    _vpointers(nullptr),\n+    _bb_idx_to_vpointer(arena,\n+                        vloop.estimated_body_length(),\n+                        vloop.estimated_body_length(),\n+                        -1) {}\n+  NONCOPYABLE(VLoopVPointers);\n@@ -483,1 +483,1 @@\n-  const VPointer& get(const MemNode* mem) const;\n+  const VPointer& vpointer(const MemNode* mem) const;\n@@ -503,1 +503,1 @@\n-  const VLoopPointers&     _pointers;\n+  const VLoopVPointers&    _vpointers;\n@@ -516,1 +516,1 @@\n-                       const VLoopPointers& pointers) :\n+                       const VLoopVPointers& pointers) :\n@@ -521,1 +521,1 @@\n-    _pointers(pointers),\n+    _vpointers(pointers),\n@@ -615,1 +615,1 @@\n-  VLoopPointers        _pointers;\n+  VLoopVPointers       _vpointers;\n@@ -627,2 +627,2 @@\n-    _pointers        (&_arena, vloop, _body),\n-    _dependency_graph(&_arena, vloop, _body, _memory_slices, _pointers)\n+    _vpointers       (&_arena, vloop, _body),\n+    _dependency_graph(&_arena, vloop, _body, _memory_slices, _vpointers)\n@@ -642,1 +642,1 @@\n-  const VLoopPointers& pointers()                const { return _pointers; }\n+  const VLoopVPointers& vpointers()              const { return _vpointers; }\n","filename":"src\/hotspot\/share\/opto\/vectorization.hpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"}]}