{"files":[{"patch":"@@ -49,0 +49,4 @@\n+  void reset() {\n+    disarm();\n+    arm();\n+  };\n","filename":"src\/hotspot\/os\/linux\/compilerThreadTimeout_linux.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2349,0 +2349,1 @@\n+        thread->timeout()->reset();\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+  void reset() {};\n","filename":"src\/hotspot\/share\/compiler\/compilerThread.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @bug 8308094 8365909\n+ * @bug 8308094 8365909 8366875\n@@ -40,0 +40,6 @@\n+        double timeoutFactor = 1.0;\n+        try {\n+            timeoutFactor = Double.parseDouble(System.getProperty(\"test.timeout.factor\", \"1.0\"));\n+        } catch (NumberFormatException ignored) {}\n+\n+        \/\/ Short timeouts crash the VM.\n@@ -52,1 +58,11 @@\n-        ProcessTools.executeTestJava(\"-Xcomp\", \"-XX:CompileTaskTimeout=2000\", \"--version\")\n+        \/\/ A long enough timeout succeeds.\n+        int timeout = (int)(500.0 * timeoutFactor);\n+        ProcessTools.executeTestJava(\"-Xcomp\", \"-XX:CompileTaskTimeout=\" + timeout, \"--version\")\n+                    .shouldHaveExitValue(0);\n+\n+        \/\/ Each repeated compilation has a new timeout.\n+        ProcessTools.executeTestJava(\"-Xcomp\",\n+                                     \"-XX:CompileTaskTimeout=\" + timeout,\n+                                     \"-XX:RepeatCompilation=100\",\n+                                     \"-XX:CompileCommand=compileonly,java\/util\/concurrent\/ConcurrentHashMap.*\",\n+                                     \"--version\")\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestCompileTaskTimeout.java","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"}]}