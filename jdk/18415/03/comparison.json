{"files":[{"patch":"@@ -1,43 +0,0 @@\n-<html>\n-<!--\n- Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<!--\n- @test\n- @bug 4150029 8006087\n- @summary BackSpace keyboard button does not lead to parent directory\n- @author Oleg Mokhovikov\n- @library \/test\/lib\n- @build jdk.test.lib.Platform\n- @run applet\/manual=done bug4150029.html\n--->\n-\n-<body>\n-<applet  code=\"bug4150029.class\" width=200 height=200><\/applet>\n-Follow the instructions below.\n-1.Go into 'subDir' folder.\n-2.Press BACKSPACE key.\n-3.Push OPEN button.\n-4.Push DONE button.\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/4150029\/bug4150029.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,10 @@\n-\/*\n-   bug 4150029 8006087\n-   summary BackSpace keyboard button does not lead to parent directory\n-   author Oleg Mokhovikov\n-*\/\n+import java.awt.BorderLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n@@ -32,3 +37,8 @@\n-import javax.swing.*;\n-import java.io.File;\n-import java.io.IOException;\n+\/*\n+ * @test\n+ * @bug 4150029 8006087\n+ * @summary BackSpace keyboard button does not lead to parent directory\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.Platform\n+ * @run main bug4150029\n+ *\/\n@@ -36,2 +46,8 @@\n-public class bug4150029 extends JApplet {\n-    private boolean res;\n+public class bug4150029 {\n+    private static JFrame frame;\n+    private static JFileChooser fileChooser;\n+    private static Robot robot;\n+    private static File testDir;\n+    private static File subDir;\n+    private static File prevDir;\n+    private static File crntDir;\n@@ -39,6 +55,11 @@\n-    public void init() {\n-        if (Platform.isOSX()) {\n-            try {\n-                UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n-            } catch (Exception e) {\n-                throw new RuntimeException(e);\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+\n+        try {\n+            if (Platform.isOSX()) {\n+                try {\n+                    UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+                } catch (Exception e) {\n+                    throw new RuntimeException(e);\n+                }\n@@ -46,1 +67,0 @@\n-        }\n@@ -48,1 +68,1 @@\n-        String tmpDir = System.getProperty(\"java.io.tmpdir\");\n+            String tmpDir = System.getProperty(\"java.io.tmpdir\");\n@@ -50,2 +70,29 @@\n-        if (tmpDir.length() == 0) {\/\/'java.io.tmpdir' isn't guaranteed to be defined\n-            tmpDir = System.getProperty(\"user.home\");\n+            \/\/'java.io.tmpdir' isn't guaranteed to be defined\n+            if (tmpDir.length() == 0) {\n+                tmpDir = System.getProperty(\"user.home\");\n+            }\n+            System.out.println(\"Temp directory: \" + tmpDir);\n+\n+            testDir = new File(tmpDir, \"testDir\");\n+            testDir.mkdir();\n+            testDir.deleteOnExit();\n+            System.out.println(\"Created directory: \" + testDir);\n+\n+            subDir = new File(testDir, \"subDir\");\n+            subDir.mkdir();\n+            subDir.deleteOnExit();\n+            System.out.println(\"Created sub-directory: \" + subDir);\n+\n+            fileChooser = new JFileChooser(subDir);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                createAndShowUI();\n+            });\n+\n+            doTesting();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -53,0 +100,1 @@\n+    }\n@@ -54,9 +102,11 @@\n-        System.out.println(\"Temp directory: \" + tmpDir);\n-\n-        File testDir = new File(tmpDir, \"testDir\");\n-\n-        testDir.mkdir();\n-\n-        File subDir = new File(testDir, \"subDir\");\n-\n-        subDir.mkdir();\n+    private static void createAndShowUI() {\n+        frame = new JFrame(\"Backspace Shortcut for Directory Navigation Test\");\n+        frame.setLayout(new BorderLayout());\n+        fileChooser = new JFileChooser(subDir);\n+        fileChooser.setControlButtonsAreShown(false);\n+        frame.add(fileChooser, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n@@ -64,2 +114,3 @@\n-        System.out.println(\"Created directory: \" + testDir);\n-        System.out.println(\"Created sub-directory: \" + subDir);\n+    private static void doTesting() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            Point p = frame.getLocationOnScreen();\n@@ -67,1 +118,4 @@\n-        JFileChooser fileChooser = new JFileChooser(testDir);\n+        });\n+        robot.mouseMove(p.x + 200, p.y + 200);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -69,1 +123,3 @@\n-        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n+        boolean passed_1 = false;\n+        boolean passed_2 = false;\n+        robot.waitForIdle();\n@@ -71,5 +127,5 @@\n-        try {\n-            res = fileChooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION ||\n-                    testDir.getCanonicalPath().equals(fileChooser.getSelectedFile().getCanonicalPath());\n-        } catch (IOException e) {\n-            res = false;\n+        \/\/ check backspace key at subDir level\n+        clickBackSpace();\n+        if (prevDir != crntDir) {\n+            passed_1 = true;\n+        }\n@@ -77,1 +133,7 @@\n-            e.printStackTrace();\n+        \/\/ check if backspace key changes directory at root level\n+        while (!fileChooser.getFileSystemView().isFileSystemRoot(prevDir)) {\n+            clickBackSpace();\n+            if (prevDir == crntDir) {\n+                passed_2 = true;\n+                break;\n+            }\n@@ -80,5 +142,2 @@\n-        try {\n-            subDir.delete();\n-            testDir.delete();\n-        } catch (SecurityException e) {\n-            e.printStackTrace();\n+        if (!(passed_1 && passed_2)) {\n+            throw new RuntimeException(\"BackSpace does not lead to parent directory\");\n@@ -88,4 +147,5 @@\n-    public void destroy() {\n-        if (!res) {\n-            throw new RuntimeException(\"BackSpace keyboard button does not lead to parent directory\");\n-        }\n+    private static void clickBackSpace() {\n+        prevDir = fileChooser.getCurrentDirectory();\n+        robot.keyPress(KeyEvent.VK_BACK_SPACE);\n+        robot.keyRelease(KeyEvent.VK_BACK_SPACE);\n+        crntDir = fileChooser.getCurrentDirectory();\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/4150029\/bug4150029.java","additions":109,"deletions":49,"binary":false,"changes":158,"status":"modified"}]}