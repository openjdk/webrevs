{"files":[{"patch":"@@ -1,43 +0,0 @@\n-<html>\n-<!--\n- Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<!--\n- @test\n- @bug 4150029 8006087\n- @summary BackSpace keyboard button does not lead to parent directory\n- @author Oleg Mokhovikov\n- @library \/test\/lib\n- @build jdk.test.lib.Platform\n- @run applet\/manual=done bug4150029.html\n--->\n-\n-<body>\n-<applet  code=\"bug4150029.class\" width=200 height=200><\/applet>\n-Follow the instructions below.\n-1.Go into 'subDir' folder.\n-2.Press BACKSPACE key.\n-3.Push OPEN button.\n-4.Push DONE button.\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/4150029\/bug4150029.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,4 @@\n-\/*\n-   bug 4150029 8006087\n-   summary BackSpace keyboard button does not lead to parent directory\n-   author Oleg Mokhovikov\n-*\/\n+import java.io.File;\n+import java.io.IOException;\n+import javax.swing.JFileChooser;\n+import javax.swing.UIManager;\n@@ -32,3 +31,8 @@\n-import javax.swing.*;\n-import java.io.File;\n-import java.io.IOException;\n+\/*\n+ * @test\n+ * @bug 4150029 8006087\n+ * @summary BackSpace keyboard button does not lead to parent directory\n+ * @library \/test\/lib \/java\/awt\/regtesthelpers\n+ * @build jdk.test.lib.Platform PassFailJFrame\n+ * @run main\/manual bug4150029\n+ *\/\n@@ -36,2 +40,18 @@\n-public class bug4150029 extends JApplet {\n-    private boolean res;\n+public class bug4150029 {\n+    private static boolean res;\n+\n+    public static void main(String[] args) throws Exception {\n+        String instructions = \"\"\"\n+                Follow the instructions below.\n+                1.Go into 'subDir' folder.\n+                2.Press BACKSPACE key.\n+                3.Push OPEN button.\n+                4.Push PASS button.\"\"\";\n+\n+        PassFailJFrame pfframe = PassFailJFrame.builder()\n+                .title(\"bug4150029\")\n+                .instructions(instructions)\n+                .rows(5)\n+                .columns(40)\n+                .testTimeOut(10)\n+                .build();\n@@ -39,6 +59,7 @@\n-    public void init() {\n-        if (Platform.isOSX()) {\n-            try {\n-                UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n-            } catch (Exception e) {\n-                throw new RuntimeException(e);\n+        try {\n+            if (Platform.isOSX()) {\n+                try {\n+                    UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+                } catch (Exception e) {\n+                    throw new RuntimeException(e);\n+                }\n@@ -46,1 +67,0 @@\n-        }\n@@ -48,1 +68,1 @@\n-        String tmpDir = System.getProperty(\"java.io.tmpdir\");\n+            String tmpDir = System.getProperty(\"java.io.tmpdir\");\n@@ -50,3 +70,4 @@\n-        if (tmpDir.length() == 0) {\/\/'java.io.tmpdir' isn't guaranteed to be defined\n-            tmpDir = System.getProperty(\"user.home\");\n-        }\n+            \/\/'java.io.tmpdir' isn't guaranteed to be defined\n+            if (tmpDir.length() == 0) {\n+                tmpDir = System.getProperty(\"user.home\");\n+            }\n@@ -54,1 +75,1 @@\n-        System.out.println(\"Temp directory: \" + tmpDir);\n+            System.out.println(\"Temp directory: \" + tmpDir);\n@@ -56,1 +77,1 @@\n-        File testDir = new File(tmpDir, \"testDir\");\n+            File testDir = new File(tmpDir, \"testDir\");\n@@ -58,1 +79,1 @@\n-        testDir.mkdir();\n+            testDir.mkdir();\n@@ -60,1 +81,1 @@\n-        File subDir = new File(testDir, \"subDir\");\n+            File subDir = new File(testDir, \"subDir\");\n@@ -62,1 +83,1 @@\n-        subDir.mkdir();\n+            subDir.mkdir();\n@@ -64,2 +85,2 @@\n-        System.out.println(\"Created directory: \" + testDir);\n-        System.out.println(\"Created sub-directory: \" + subDir);\n+            System.out.println(\"Created directory: \" + testDir);\n+            System.out.println(\"Created sub-directory: \" + subDir);\n@@ -67,1 +88,1 @@\n-        JFileChooser fileChooser = new JFileChooser(testDir);\n+            JFileChooser fileChooser = new JFileChooser(testDir);\n@@ -69,1 +90,1 @@\n-        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n+            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n@@ -71,5 +92,5 @@\n-        try {\n-            res = fileChooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION ||\n-                    testDir.getCanonicalPath().equals(fileChooser.getSelectedFile().getCanonicalPath());\n-        } catch (IOException e) {\n-            res = false;\n+            try {\n+                res = fileChooser.showOpenDialog(null) != JFileChooser.APPROVE_OPTION ||\n+                        testDir.getCanonicalPath().equals(fileChooser.getSelectedFile().getCanonicalPath());\n+            } catch (IOException e) {\n+                res = false;\n@@ -77,2 +98,2 @@\n-            e.printStackTrace();\n-        }\n+                e.printStackTrace();\n+            }\n@@ -80,7 +101,6 @@\n-        try {\n-            subDir.delete();\n-            testDir.delete();\n-        } catch (SecurityException e) {\n-            e.printStackTrace();\n-        }\n-    }\n+            try {\n+                subDir.delete();\n+                testDir.delete();\n+            } catch (SecurityException e) {\n+                e.printStackTrace();\n+            }\n@@ -88,3 +108,5 @@\n-    public void destroy() {\n-        if (!res) {\n-            throw new RuntimeException(\"BackSpace keyboard button does not lead to parent directory\");\n+            pfframe.awaitAndCheck();\n+        } finally {\n+            if (!res) {\n+                PassFailJFrame.forceFail(\"BackSpace keyboard button does not lead to parent directory\");\n+            }\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/4150029\/bug4150029.java","additions":70,"deletions":48,"binary":false,"changes":118,"status":"modified"}]}