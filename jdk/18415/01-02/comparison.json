{"files":[{"patch":"@@ -24,0 +24,5 @@\n+import java.awt.BorderLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n@@ -25,1 +30,0 @@\n-import java.io.IOException;\n@@ -27,0 +31,2 @@\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n@@ -41,1 +47,7 @@\n-    private static boolean res;\n+    private static JFrame frame;\n+    private static JFileChooser fileChooser;\n+    private static Robot robot;\n+    private static File testDir;\n+    private static File subDir;\n+    private static File prevDir;\n+    private static File crntDir;\n@@ -44,14 +56,2 @@\n-        String instructions = \"\"\"\n-                Follow the instructions below.\n-                1.Go into 'subDir' folder.\n-                2.Press BACKSPACE key.\n-                3.Push OPEN button.\n-                4.Push PASS button.\"\"\";\n-\n-        PassFailJFrame pfframe = PassFailJFrame.builder()\n-                .title(\"bug4150029\")\n-                .instructions(instructions)\n-                .rows(5)\n-                .columns(40)\n-                .testTimeOut(10)\n-                .build();\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n@@ -74,1 +74,0 @@\n-\n@@ -77,2 +76,1 @@\n-            File testDir = new File(tmpDir, \"testDir\");\n-\n+            testDir = new File(tmpDir, \"testDir\");\n@@ -80,0 +78,2 @@\n+            testDir.deleteOnExit();\n+            System.out.println(\"Created directory: \" + testDir);\n@@ -81,2 +81,1 @@\n-            File subDir = new File(testDir, \"subDir\");\n-\n+            subDir = new File(testDir, \"subDir\");\n@@ -84,2 +83,1 @@\n-\n-            System.out.println(\"Created directory: \" + testDir);\n+            subDir.deleteOnExit();\n@@ -88,1 +86,1 @@\n-            JFileChooser fileChooser = new JFileChooser(testDir);\n+            fileChooser = new JFileChooser(subDir);\n@@ -90,1 +88,1 @@\n-            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n+\/\/            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n@@ -92,5 +90,11 @@\n-            try {\n-                res = fileChooser.showOpenDialog(null) != JFileChooser.APPROVE_OPTION ||\n-                        testDir.getCanonicalPath().equals(fileChooser.getSelectedFile().getCanonicalPath());\n-            } catch (IOException e) {\n-                res = false;\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"Backspace Shortcut for Directory Navigation Test\");\n+                frame.getContentPane().setLayout(new BorderLayout());\n+                fileChooser = new JFileChooser(subDir);\n+                fileChooser.setControlButtonsAreShown(false);\n+                frame.getContentPane().add(fileChooser, BorderLayout.CENTER);\n+                frame.pack();\n+                frame.setLocationRelativeTo(null);\n+                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                frame.setVisible(true);\n+            });\n@@ -98,2 +102,9 @@\n-                e.printStackTrace();\n-            }\n+            doTesting();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n@@ -101,6 +112,4 @@\n-            try {\n-                subDir.delete();\n-                testDir.delete();\n-            } catch (SecurityException e) {\n-                e.printStackTrace();\n-            }\n+    private static void doTesting() {\n+        Point p = frame.getLocationOnScreen();\n+        robot.mouseMove(p.x + 200, p.y + 200);\n+        robot.mousePress(InputEvent.BUTTON1_MASK);\n@@ -108,4 +117,16 @@\n-            pfframe.awaitAndCheck();\n-        } finally {\n-            if (!res) {\n-                PassFailJFrame.forceFail(\"BackSpace keyboard button does not lead to parent directory\");\n+        boolean passed_1 = false;\n+        boolean passed_2 = false;\n+        robot.waitForIdle();\n+\n+        \/\/ check backspace key at subDir level\n+        clickBackSpace();\n+        if (prevDir != crntDir) {\n+            passed_1 = true;\n+        }\n+\n+        \/\/ check if backspace key changes directory at root level\n+        while (!fileChooser.getFileSystemView().isFileSystemRoot(prevDir)) {\n+            clickBackSpace();\n+            if (prevDir == crntDir) {\n+                passed_2 = true;\n+                break;\n@@ -114,0 +135,13 @@\n+\n+        if (passed_1 && passed_2) {\n+            System.out.println(\"Passed\");\n+        } else {\n+            throw new RuntimeException(\"BackSpace does not lead to parent directory\");\n+        }\n+    }\n+\n+    private static void clickBackSpace() {\n+        prevDir = fileChooser.getCurrentDirectory();\n+        robot.keyPress(KeyEvent.VK_BACK_SPACE);\n+        robot.keyRelease(KeyEvent.VK_BACK_SPACE);\n+        crntDir = fileChooser.getCurrentDirectory();\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/4150029\/bug4150029.java","additions":76,"deletions":42,"binary":false,"changes":118,"status":"modified"}]}