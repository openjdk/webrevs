{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n- * @author Alexander Scherbatiy\n@@ -32,4 +31,0 @@\n- * @library \/test\/lib\n- * @modules java.desktop\/com.sun.java.swing.plaf.windows\n- *          java.desktop\/sun.awt\n- * @build jdk.test.lib.OSVersion jdk.test.lib.Platform\n@@ -40,5 +35,15 @@\n-import jdk.test.lib.Platform;\n-import jdk.test.lib.OSVersion;\n-import java.awt.*;\n-import javax.swing.*;\n-import com.sun.java.swing.plaf.windows.WindowsLookAndFeel;\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.imageio.ImageIO;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n@@ -51,0 +56,1 @@\n+    private static JPanel panel;\n@@ -54,5 +60,2 @@\n-            if (Platform.isWindows()\n-                && OSVersion.current().equals(OSVersion.WINDOWS_XP)) {\n-                UIManager.setLookAndFeel(new WindowsLookAndFeel());\n-                testButtonBorder();\n-            }\n+            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n+            testButtonBorder();\n@@ -60,1 +63,5 @@\n-            if (frame != null) SwingUtilities.invokeAndWait(() -> frame.dispose());\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -66,3 +73,0 @@\n-        robot.setAutoDelay(50);\n-\n-        SwingUtilities.invokeAndWait(new Runnable() {\n@@ -70,4 +74,3 @@\n-            public void run() {\n-                createAndShowGUI();\n-            }\n-        });\n+        SwingUtilities.invokeAndWait(bug4796987::createAndShowGUI);\n+        robot.waitForIdle();\n+        robot.delay(500);\n@@ -75,0 +78,3 @@\n+        \/\/ Hover over button1\n+        Point b1Center = Util.getCenterPoint(button1);\n+        robot.mouseMove(b1Center.x, b1Center.y);\n@@ -76,1 +82,0 @@\n-        Thread.sleep(500);\n@@ -78,2 +83,7 @@\n-        Point p1 = Util.getCenterPoint(button1);\n-        Point p2 = Util.getCenterPoint(button2);\n+        Rectangle panelBounds = Util.invokeOnEDT(() ->\n+                new Rectangle(panel.getLocationOnScreen(),\n+                              panel.getSize()));\n+        BufferedImage image = robot.createScreenCapture(panelBounds);\n+\n+        final Point p1 = Util.invokeOnEDT(() -> getCenterPoint(button1));\n+        final Point p2 = Util.invokeOnEDT(() -> getCenterPoint(button2));\n@@ -81,4 +91,6 @@\n-        Color color = robot.getPixelColor(p1.x, p2.x);\n-        for (int dx = p1.x; dx < p2.x - p1.x; dx++) {\n-            robot.mouseMove(p1.x + dx, p1.y);\n-            if (!color.equals(robot.getPixelColor(p1.x + dx, p1.y))) {\n+        final int color = image.getRGB(p1.x, p1.y);\n+        for (int dx = 0; p1.x + dx < p2.x; dx++) {\n+            if (color != image.getRGB(p1.x + dx, p1.y)) {\n+                System.err.println(\"Wrong color at \" + (p1.x + dx) + \", \" + p1.y\n+                                   + \" - expected \" + Integer.toHexString(color));\n+                saveImage(image);\n@@ -90,0 +102,11 @@\n+    \/**\n+     * {@return the center point of a button relative to its parent}\n+     * @param button the button to calculate the center point\n+     *\/\n+    private static Point getCenterPoint(JButton button) {\n+        Point location = button.getLocation();\n+        Dimension size = button.getSize();\n+        location.translate(size.width \/ 2, size.height \/ 2);\n+        return location;\n+    }\n+\n@@ -98,1 +121,1 @@\n-        frame = new JFrame(\"Test\");\n+        frame = new JFrame(\"bug4796987\");\n@@ -105,1 +128,1 @@\n-        JPanel panel = new JPanel(new BorderLayout(50, 50));\n+        panel = new JPanel(new BorderLayout(50, 50));\n@@ -110,0 +133,1 @@\n+        frame.setLocationRelativeTo(null);\n@@ -112,0 +136,8 @@\n+\n+    private static void saveImage(BufferedImage image) {\n+        try {\n+            ImageIO.write(image, \"png\",\n+                          new File(\"frame.png\"));\n+        } catch (IOException ignored) {\n+        }\n+    }\n","filename":"test\/jdk\/javax\/swing\/JButton\/4796987\/bug4796987.java","additions":65,"deletions":33,"binary":false,"changes":98,"status":"modified"}]}