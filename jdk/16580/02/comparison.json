{"files":[{"patch":"@@ -1893,3 +1893,1 @@\n-    case Op_CountPositives:\n-      return UseRVV;\n-\n+    case Op_CountPositives:    \/\/ fall through\n@@ -1897,1 +1895,1 @@\n-      return UseRVV && SpecialEncodeISOArray;\n+      return UseRVV;\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -202,10 +202,0 @@\n-  if (UseRVV) {\n-    if (!ext_V.enabled()) {\n-      warning(\"RVV is not supported on this CPU\");\n-      FLAG_SET_DEFAULT(UseRVV, false);\n-    } else {\n-      \/\/ read vector length from vector CSR vlenb\n-      _initial_vector_length = cpu_vector_length();\n-    }\n-  }\n-\n@@ -264,0 +254,19 @@\n+\n+  if (UseRVV) {\n+    if (!ext_V.enabled()) {\n+      warning(\"RVV is not supported on this CPU\");\n+      FLAG_SET_DEFAULT(UseRVV, false);\n+    } else {\n+      \/\/ read vector length from vector CSR vlenb\n+      _initial_vector_length = cpu_vector_length();\n+    }\n+  }\n+\n+#ifdef COMPILER2\n+  c2_initialize();\n+#endif \/\/ COMPILER2\n+\n+  \/\/ NOTE: Make sure codes dependent on UseRVV are put after c2_initialize(),\n+  \/\/       as there are extra checks inside it which could disable UseRVV\n+  \/\/       in some situations.\n+\n@@ -274,4 +283,0 @@\n-\n-#ifdef COMPILER2\n-  c2_initialize();\n-#endif \/\/ COMPILER2\n@@ -291,4 +296,0 @@\n-    FLAG_SET_DEFAULT(SpecialEncodeISOArray, false);\n-  }\n-\n-  if (!UseRVV && MaxVectorSize) {\n@@ -296,3 +297,0 @@\n-  }\n-\n-  if (!UseRVV) {\n@@ -300,3 +298,1 @@\n-  }\n-\n-  if (UseRVV) {\n+  } else {\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":20,"deletions":24,"binary":false,"changes":44,"status":"modified"}]}