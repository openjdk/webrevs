{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,1 +131,1 @@\n-        return '\\'' + Convert.quote(c) + '\\'';\n+        return '\\'' + Convert.quote(c, true) + '\\'';\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Constants.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -301,1 +301,1 @@\n-            buf.append(quote(s.charAt(i)));\n+            buf.append(quote(s.charAt(i), false));\n@@ -310,1 +310,7 @@\n-    public static String quote(char ch) {\n+    public static String quote(char ch, boolean charContext) {\n+        \/*\n+         * In a char context, single quote (') must be escaped and\n+         * double quote (\") need not be escaped. In a non-char\n+         * context, in other words a string context, the reverse is\n+         * true.\n+         *\/\n@@ -317,2 +323,2 @@\n-        case '\\'':  return \"\\\\'\";\n-        case '\\\"':  return \"\\\\\\\"\";\n+        case '\\'':  return (charContext ? \"\\\\'\" : \"'\");\n+        case '\\\"':  return (charContext ? \"\\\"\"  : \"\\\\\\\"\");\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Convert.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -363,1 +363,1 @@\n-                           \"  public static final java.lang.String AMP = \\\"&amp;&&lt;<&gt;>&apos;\\\\'\\\";\\n\\n\" +\n+                           \"  public static final java.lang.String AMP = \\\"&amp;&&lt;<&gt;>&apos;'\\\";\\n\\n\" +\n","filename":"test\/langtools\/tools\/javac\/platform\/createsymbols\/CreateSymbolsTestImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8164819\n+ * @bug 8164819 8325078\n@@ -284,2 +284,2 @@\n-       \"@CharArray({'a', 'b', 'c', '\\\\''})\")\n-        @CharArray({'a', 'b', 'c', '\\''})\n+       \"@CharArray({'a', 'b', 'c', '\\\\'', '\\\"'})\")\n+        @CharArray({'a', 'b', 'c', '\\'', '\"'})\n@@ -301,2 +301,2 @@\n-       \"@StringArray({\\\"A\\\", \\\"B\\\", \\\"C\\\", \\\"\\\\\\\"Quote\\\\\\\"\\\"})\")\n-        @StringArray({\"A\", \"B\", \"C\", \"\\\"Quote\\\"\"})\n+       \"@StringArray({\\\"A\\\", \\\"B\\\", \\\"C\\\", \\\"\\\\\\\"Quote\\\\\\\"\\\", \\\"'\\\", \\\"\\\\\\\"\\\"})\")\n+        @StringArray({\"A\", \"B\", \"C\", \"\\\"Quote\\\"\", \"'\", \"\\\"\"})\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/AnnotationToStringTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}