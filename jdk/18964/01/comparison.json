{"files":[{"patch":"@@ -1,1 +1,1 @@\n-## libpng v1.6.40\n+## libpng v1.6.43\n@@ -12,5 +12,5 @@\n-Copyright (c) 1995-2023 The PNG Reference Library Authors.\n-Copyright (c) 2018-2023 Cosmin Truta\n-Copyright (c) 1998-2018 Glenn Randers-Pehrson\n-Copyright (c) 1996-1997 Andreas Dilger\n-Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n+Copyright (C) 1995-2024 The PNG Reference Library Authors.\n+Copyright (C) 2018-2024 Cosmin Truta\n+Copyright (C) 1998-2018 Glenn Randers-Pehrson\n+Copyright (C) 1996-1997 Andreas Dilger\n+Copyright (C) 1995-1996 Guy Eric Schalnat, Group 42, Inc.\n@@ -160,0 +160,1 @@\n+ * Adam Richter\n@@ -161,0 +162,1 @@\n+ * Chris Blume\n@@ -189,0 +191,2 @@\n+ * Apple Inc.\n+    - Zixu Wang (王子旭)\n@@ -190,1 +194,1 @@\n-   - Richard Townsend\n+    - Richard Townsend\n@@ -192,6 +196,10 @@\n-   - Dan Field\n-   - Leon Scroggins III\n-   - Matt Sarett\n-   - Mike Klein\n-   - Sami Boukortt\n-   - Wan-Teh Chang\n+    - Dan Field\n+    - Leon Scroggins III\n+    - Matt Sarett\n+    - Mike Klein\n+    - Sami Boukortt\n+    - Wan-Teh Chang\n+ * Loongson Technology Corporation Ltd.\n+    - GuXiWei (顾希伟)\n+    - JinBo (金波)\n+    - ZhangLixia (张利霞)\n@@ -200,1 +208,1 @@\n-files in the \"ci\", \"projects\", \"scripts\" and \"tests\" directories, have\n+files in the \"projects\", \"scripts\" and \"tests\" directories, have\n@@ -203,3 +211,4 @@\n-Some files in the \"contrib\" directory, and some tools-generated files\n-that are distributed with libpng, have other copyright owners, and are\n-released under other open source licenses.\n+Some files in the \"ci\" and \"contrib\" directories, as well as some\n+of the tools-generated files that are distributed with libpng, have\n+other copyright owners, and are released under other open source\n+licenses.\n","filename":"src\/java.desktop\/share\/legal\/libpng.md","additions":26,"deletions":17,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -6132,0 +6132,67 @@\n+Version 1.6.41 [January 24, 2024]\n+  Added SIMD-optimized code for the LoongArch LSX hardware.\n+    (Contributed by GuXiWei, JinBo and ZhangLixia)\n+  Fixed the run-time discovery of MIPS MSA hardware.\n+    (Contributed by Sui Jingfeng)\n+  Fixed an off-by-one error in the function png_do_check_palette_indexes(),\n+    which failed to recognize errors that might have existed in the first\n+    column of a broken palette-encoded image. This was a benign regression\n+    accidentally introduced in libpng-1.6.33. No pixel was harmed.\n+    (Contributed by Adam Richter; reviewed by John Bowler)\n+  Fixed, improved and modernized the contrib\/pngminus programs, i.e.,\n+    png2pnm.c and pnm2png.c\n+  Removed old and peculiar portability hacks that were meant to silence\n+    warnings issued by gcc version 7.1 alone.\n+    (Contributed by John Bowler)\n+  Fixed and modernized the CMake file, and raised the minimum required\n+    CMake version from 3.1 to 3.6.\n+    (Contributed by Clinton Ingram, Timothy Lyanguzov, Tyler Kropp, et al.)\n+  Allowed the configure script to disable the building of auxiliary tools\n+    and tests, thus catching up with the CMake file.\n+    (Contributed by Carlo Bramini)\n+  Fixed a build issue on Mac.\n+    (Contributed by Zixu Wang)\n+  Moved the Autoconf macro files to scripts\/autoconf.\n+  Moved the CMake files (except for the main CMakeLists.txt) to\n+    scripts\/cmake and moved the list of their contributing authors to\n+    scripts\/cmake\/AUTHORS.md\n+  Updated the CI configurations and scripts.\n+  Relicensed the CI scripts to the MIT License.\n+  Improved the test coverage.\n+    (Contributed by John Bowler)\n+\n+Version 1.6.42 [January 29, 2024]\n+  Fixed the implementation of the macro function png_check_sig().\n+    This was an API regression, introduced in libpng-1.6.41.\n+    (Reported by Matthieu Darbois)\n+  Fixed and updated the libpng manual.\n+\n+Version 1.6.43 [February 23, 2024]\n+  Fixed the row width check in png_check_IHDR().\n+    This corrected a bug that was specific to the 16-bit platforms,\n+    and removed a spurious compiler warning from the 64-bit builds.\n+    (Reported by Jacek Caban; fixed by John Bowler)\n+  Added eXIf chunk support to the push-mode reader in pngpread.c.\n+    (Contributed by Chris Blume)\n+  Added contrib\/pngexif for the benefit of the users who would like\n+    to inspect the content of eXIf chunks.\n+  Added contrib\/conftest\/basic.dfa, a basic build-time configuration.\n+    (Contributed by John Bowler)\n+  Fixed a preprocessor condition in pngread.c that broke build-time\n+    configurations like contrib\/conftest\/pngcp.dfa.\n+    (Contributed by John Bowler)\n+  Added CMake build support for LoongArch LSX.\n+    (Contributed by GuXiWei)\n+  Fixed a CMake build error that occurred under a peculiar state of the\n+    dependency tree. This was a regression introduced in libpng-1.6.41.\n+    (Contributed by Dan Rosser)\n+  Marked the installed libpng headers as system headers in CMake.\n+    (Contributed by Benjamin Buch)\n+  Updated the build support for RISCOS.\n+    (Contributed by Cameron Cawley)\n+  Updated the makefiles to allow cross-platform builds to initialize\n+    conventional make variables like AR and ARFLAGS.\n+  Added various improvements to the CI scripts in areas like version\n+    consistency verification and text linting.\n+  Added version consistency verification to pngtest.c also.\n+\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/CHANGES","additions":67,"deletions":0,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * Copyright (c) 1995-2023 The PNG Reference Library Authors.\n- * Copyright (c) 2018-2023 Cosmin Truta.\n+ * Copyright (c) 1995-2024 The PNG Reference Library Authors.\n+ * Copyright (c) 2018-2024 Cosmin Truta.\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/LICENSE","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-README for libpng version 1.6.40\n+README for libpng version 1.6.43\n@@ -145,4 +145,5 @@\n-    arm\/          =>  Optimized code for the ARM platform\n-    intel\/        =>  Optimized code for the INTEL-SSE2 platform\n-    mips\/         =>  Optimized code for the MIPS platform\n-    powerpc\/      =>  Optimized code for the PowerPC platform\n+    arm\/          =>  Optimized code for ARM Neon\n+    intel\/        =>  Optimized code for INTEL SSE2\n+    loongarch\/    =>  Optimized code for LoongArch LSX\n+    mips\/         =>  Optimized code for MIPS MSA and MIPS MMI\n+    powerpc\/      =>  Optimized code for PowerPC VSX\n@@ -161,0 +162,1 @@\n+        pngexif\/      =>  Program to inspect the EXIF information in PNG files\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/README","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+    shopt -s nullglob\n@@ -41,10 +42,12 @@\n-    do\n-      # replace tabs with spaces\n-      expand ${f} > ${f}.tmp;\n-      mv ${f}.tmp $f;\n-\n-      # fix line endings to LF\n-      sed -i -e 's\/\\r$\/\/g' ${f};\n-\n-      # remove trailing spaces\n-      sed -i -e 's\/[ ]* $\/\/g' ${f};\n+         do\n+            # replace tabs with spaces\n+            expand ${f} > ${f}.tmp\n+            mv ${f}.tmp $f\n+\n+            # fix line endings to LF\n+            sed -e 's\/\\r$\/\/g' ${f} > ${f}.tmp\n+            mv ${f}.tmp $f\n+\n+            # remove trailing spaces\n+            sed -e 's\/[ ]* $\/\/g' ${f} > ${f}.tmp\n+            mv ${f}.tmp $f\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/UPDATING.txt","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2023 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n@@ -45,21 +45,1 @@\n-typedef png_libpng_version_1_6_40 Your_png_h_is_not_version_1_6_40;\n-\n-#ifdef __GNUC__\n-\/* The version tests may need to be added to, but the problem warning has\n- * consistently been fixed in GCC versions which obtain wide-spread release.\n- * The problem is that many versions of GCC rearrange comparison expressions in\n- * the optimizer in such a way that the results of the comparison will change\n- * if signed integer overflow occurs.  Such comparisons are not permitted in\n- * ANSI C90, however GCC isn't clever enough to work out that that do not occur\n- * below in png_ascii_from_fp and png_muldiv, so it produces a warning with\n- * -Wextra.  Unfortunately this is highly dependent on the optimizer and the\n- * machine architecture so the warning comes and goes unpredictably and is\n- * impossible to \"fix\", even were that a good idea.\n- *\/\n-#if __GNUC__ == 7 && __GNUC_MINOR__ == 1\n-#define GCC_STRICT_OVERFLOW 1\n-#endif \/* GNU 7.1.x *\/\n-#endif \/* GNU *\/\n-#ifndef GCC_STRICT_OVERFLOW\n-#define GCC_STRICT_OVERFLOW 0\n-#endif\n+typedef png_libpng_version_1_6_43 Your_png_h_is_not_version_1_6_43;\n@@ -104,1 +84,1 @@\n-   png_byte png_signature[8] = {137, 80, 78, 71, 13, 10, 26, 10};\n+   static const png_byte png_signature[8] = {137, 80, 78, 71, 13, 10, 26, 10};\n@@ -110,1 +90,1 @@\n-      return (-1);\n+      return -1;\n@@ -113,1 +93,1 @@\n-      return (-1);\n+      return -1;\n@@ -118,1 +98,1 @@\n-   return ((int)(memcmp(&sig[start], &png_signature[start], num_to_check)));\n+   return memcmp(&sig[start], &png_signature[start], num_to_check);\n@@ -478,1 +458,0 @@\n-\/* The following API is not called internally *\/\n@@ -717,1 +696,1 @@\n-      return (NULL);\n+      return NULL;\n@@ -719,1 +698,1 @@\n-   return (png_ptr->io_ptr);\n+   return png_ptr->io_ptr;\n@@ -783,1 +762,1 @@\n-      char number_buf[5]; \/* enough for a four-digit year *\/\n+      char number_buf[5] = {0, 0, 0, 0, 0}; \/* enough for a four-digit year *\/\n@@ -846,2 +825,2 @@\n-      \"libpng version 1.6.40\" PNG_STRING_NEWLINE \\\n-      \"Copyright (c) 2018-2023 Cosmin Truta\" PNG_STRING_NEWLINE \\\n+      \"libpng version 1.6.43\" PNG_STRING_NEWLINE \\\n+      \"Copyright (c) 2018-2024 Cosmin Truta\" PNG_STRING_NEWLINE \\\n@@ -1008,1 +987,1 @@\n-   return (inflateReset(&png_ptr->zstream));\n+   return inflateReset(&png_ptr->zstream);\n@@ -1017,1 +996,1 @@\n-   return((png_uint_32)PNG_LIBPNG_VER);\n+   return (png_uint_32)PNG_LIBPNG_VER;\n@@ -1873,2 +1852,2 @@\n-      {\n-         char number[PNG_NUMBER_BUFFER_SIZE]; \/* +24 = 114 *\/\n+   {\n+      char number[PNG_NUMBER_BUFFER_SIZE]; \/* +24 = 114 *\/\n@@ -1876,5 +1855,5 @@\n-         pos = png_safecat(message, (sizeof message), pos,\n-             png_format_number(number, number+(sizeof number),\n-             PNG_NUMBER_FORMAT_x, value));\n-         pos = png_safecat(message, (sizeof message), pos, \"h: \"); \/* +2 = 116 *\/\n-      }\n+      pos = png_safecat(message, (sizeof message), pos,\n+          png_format_number(number, number+(sizeof number),\n+          PNG_NUMBER_FORMAT_x, value));\n+      pos = png_safecat(message, (sizeof message), pos, \"h: \"); \/* +2 = 116 *\/\n+   }\n@@ -2563,11 +2542,0 @@\n-#ifdef __GNUC__\n-\/* This exists solely to work round a warning from GNU C. *\/\n-static int \/* PRIVATE *\/\n-png_gt(size_t a, size_t b)\n-{\n-   return a > b;\n-}\n-#else\n-#   define png_gt(a,b) ((a) > (b))\n-#endif\n-\n@@ -2595,2 +2563,10 @@\n-   if (png_gt(((width + 7) & (~7U)),\n-       ((PNG_SIZE_MAX\n+   \/* The bit mask on the first line below must be at least as big as a\n+    * png_uint_32.  \"~7U\" is not adequate on 16-bit systems because it will\n+    * be an unsigned 16-bit value.  Casting to (png_alloc_size_t) makes the\n+    * type of the result at least as bit (in bits) as the RHS of the > operator\n+    * which also avoids a common warning on 64-bit systems that the comparison\n+    * of (png_uint_32) against the constant value on the RHS will always be\n+    * false.\n+    *\/\n+   if (((width + 7) & ~(png_alloc_size_t)7) >\n+       (((PNG_SIZE_MAX\n@@ -2922,8 +2898,0 @@\n-#if GCC_STRICT_OVERFLOW\n-#pragma GCC diagnostic push\n-\/* The problem arises below with exp_b10, which can never overflow because it\n- * comes, originally, from frexp and is therefore limited to a range which is\n- * typically +\/-710 (log2(DBL_MAX)\/log2(DBL_MIN)).\n- *\/\n-#pragma GCC diagnostic warning \"-Wstrict-overflow=2\"\n-#endif \/* GCC_STRICT_OVERFLOW *\/\n@@ -3251,4 +3219,0 @@\n-#if GCC_STRICT_OVERFLOW\n-#pragma GCC diagnostic pop\n-#endif \/* GCC_STRICT_OVERFLOW *\/\n-\n@@ -3282,1 +3246,1 @@\n-         char digits[10];\n+         char digits[10] = {0};\n@@ -3367,9 +3331,0 @@\n-#if GCC_STRICT_OVERFLOW \/* from above *\/\n-\/* It is not obvious which comparison below gets optimized in such a way that\n- * signed overflow would change the result; looking through the code does not\n- * reveal any tests which have the form GCC complains about, so presumably the\n- * optimizer is moving an add or subtract into the 'if' somewhere.\n- *\/\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic warning \"-Wstrict-overflow=2\"\n-#endif \/* GCC_STRICT_OVERFLOW *\/\n@@ -3490,3 +3445,0 @@\n-#if GCC_STRICT_OVERFLOW\n-#pragma GCC diagnostic pop\n-#endif \/* GCC_STRICT_OVERFLOW *\/\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/png.c","additions":31,"deletions":79,"binary":false,"changes":110,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * libpng version 1.6.40\n+ * libpng version 1.6.43\n@@ -34,1 +34,1 @@\n- * Copyright (c) 2018-2023 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n@@ -46,1 +46,1 @@\n- *   libpng versions 1.6.36, December 2018, through 1.6.40, June 2023:\n+ *   libpng versions 1.6.36, December 2018, through 1.6.43, February 2024:\n@@ -58,2 +58,2 @@\n- *  * Copyright (c) 1995-2023 The PNG Reference Library Authors.\n- *  * Copyright (c) 2018-2023 Cosmin Truta.\n+ *  * Copyright (c) 1995-2024 The PNG Reference Library Authors.\n+ *  * Copyright (c) 2018-2024 Cosmin Truta.\n@@ -270,1 +270,1 @@\n- *    1.6.40                  16    10640  16.so.16.40[.0]\n+ *    1.6.43                  16    10643  16.so.16.43[.0]\n@@ -286,3 +286,0 @@\n- *    DLLNUM will change each time there are forward or backward changes\n- *    in binary compatibility (e.g., when a new feature is added).\n- *\n@@ -309,2 +306,2 @@\n-#define PNG_LIBPNG_VER_STRING \"1.6.40\"\n-#define PNG_HEADER_VERSION_STRING \" libpng version 1.6.40 - June 21, 2023\\n\"\n+#define PNG_LIBPNG_VER_STRING \"1.6.43\"\n+#define PNG_HEADER_VERSION_STRING \" libpng version \" PNG_LIBPNG_VER_STRING \"\\n\"\n@@ -312,2 +309,4 @@\n-#define PNG_LIBPNG_VER_SONUM   16\n-#define PNG_LIBPNG_VER_DLLNUM  16\n+\/* The versions of shared library builds should stay in sync, going forward *\/\n+#define PNG_LIBPNG_VER_SHAREDLIB 16\n+#define PNG_LIBPNG_VER_SONUM     PNG_LIBPNG_VER_SHAREDLIB \/* [Deprecated] *\/\n+#define PNG_LIBPNG_VER_DLLNUM    PNG_LIBPNG_VER_SHAREDLIB \/* [Deprecated] *\/\n@@ -318,1 +317,1 @@\n-#define PNG_LIBPNG_VER_RELEASE 40\n+#define PNG_LIBPNG_VER_RELEASE 43\n@@ -321,1 +320,1 @@\n- * development version.  [Deprecated]\n+ * development version.\n@@ -349,1 +348,1 @@\n-#define PNG_LIBPNG_VER 10640 \/* 1.6.40 *\/\n+#define PNG_LIBPNG_VER 10643 \/* 1.6.43 *\/\n@@ -459,1 +458,1 @@\n-typedef char* png_libpng_version_1_6_40;\n+typedef char* png_libpng_version_1_6_43;\n@@ -880,1 +879,1 @@\n-#if INT_MAX >= 0x8000 \/* else this might break *\/\n+#if ~0U > 0xffffU \/* or else this might break on a 16-bit machine *\/\n@@ -939,1 +938,1 @@\n- * start > 7 will always fail (ie return non-zero).\n+ * start > 7 will always fail (i.e. return non-zero).\n@@ -945,1 +944,1 @@\n- * png_check_sig(sig, n) := !png_sig_cmp(sig, 0, n).\n+ * png_check_sig(sig, n) := (png_sig_cmp(sig, 0, n) == 0).\n@@ -947,1 +946,1 @@\n-#define png_check_sig(sig, n) !png_sig_cmp((sig), 0, (n))\n+#define png_check_sig(sig, n) (png_sig_cmp((sig), 0, (n)) == 0) \/* DEPRECATED *\/\n@@ -1761,1 +1760,1 @@\n-\/* Reassign responsibility for freeing existing data, whether allocated\n+\/* Reassign the responsibility for freeing existing data, whether allocated\n@@ -1763,4 +1762,1 @@\n- * in, it does not change the state for other png_info structures.\n- *\n- * It is unlikely that this function works correctly as of 1.6.0 and using it\n- * may result either in memory leaks or double free of allocated data.\n+ * in, without changing the state for other png_info structures.\n@@ -3238,1 +3234,3 @@\n-#define PNG_IGNORE_ADLER32 8\n+#ifdef PNG_DISABLE_ADLER32_CHECK_SUPPORTED\n+#  define PNG_IGNORE_ADLER32 8 \/* SOFTWARE: disable Adler32 check on IDAT *\/\n+#endif\n@@ -3240,1 +3238,2 @@\n-#  define PNG_POWERPC_VSX   10 \/* HARDWARE: PowerPC VSX SIMD instructions supported *\/\n+#  define PNG_POWERPC_VSX   10 \/* HARDWARE: PowerPC VSX SIMD instructions\n+                                * supported *\/\n@@ -3242,1 +3241,5 @@\n-#define PNG_OPTION_NEXT  12 \/* Next option - numbers must be even *\/\n+#ifdef PNG_MIPS_MMI_API_SUPPORTED\n+#  define PNG_MIPS_MMI   12 \/* HARDWARE: MIPS MMI SIMD instructions supported *\/\n+#endif\n+\n+#define PNG_OPTION_NEXT  14 \/* Next option - numbers must be even *\/\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/png.h","additions":32,"deletions":29,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * libpng version 1.6.40\n+ * libpng version 1.6.43\n@@ -34,1 +34,1 @@\n- * Copyright (c) 2018-2022 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngconf.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n@@ -286,1 +286,1 @@\n-   char buffer[PNG_NUMBER_BUFFER_SIZE];\n+   char buffer[PNG_NUMBER_BUFFER_SIZE] = {0};\n@@ -296,1 +296,1 @@\n-   char buffer[PNG_NUMBER_BUFFER_SIZE];\n+   char buffer[PNG_NUMBER_BUFFER_SIZE] = {0};\n@@ -889,1 +889,1 @@\n-   return ((png_voidp)png_ptr->error_ptr);\n+   return (png_voidp)png_ptr->error_ptr;\n@@ -964,1 +964,1 @@\n-png_safe_execute(png_imagep image_in, int (*function)(png_voidp), png_voidp arg)\n+png_safe_execute(png_imagep image, int (*function)(png_voidp), png_voidp arg)\n@@ -966,3 +966,1 @@\n-   volatile png_imagep image = image_in;\n-   volatile int result;\n-   volatile png_voidp saved_error_buf;\n+   png_voidp saved_error_buf = image->opaque->error_buf;\n@@ -970,0 +968,1 @@\n+   int result;\n@@ -971,5 +970,2 @@\n-   \/* Safely execute function(arg) with png_error returning to this function. *\/\n-   saved_error_buf = image->opaque->error_buf;\n-   result = setjmp(safe_jmpbuf) == 0;\n-\n-   if (result != 0)\n+   \/* Safely execute function(arg), with png_error returning back here. *\/\n+   if (setjmp(safe_jmpbuf) == 0)\n@@ -977,1 +973,0 @@\n-\n@@ -980,0 +975,2 @@\n+      image->opaque->error_buf = saved_error_buf;\n+      return result;\n@@ -982,0 +979,1 @@\n+   \/* On png_error, return via longjmp, pop the jmpbuf, and free the image. *\/\n@@ -983,6 +981,2 @@\n-\n-   \/* And do the cleanup prior to any failure return. *\/\n-   if (result == 0)\n-      png_image_free(image);\n-\n-   return result;\n+   png_image_free(image);\n+   return 0;\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngerror.c","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2023 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n@@ -59,1 +59,1 @@\n-         return(0);\n+         return 0;\n@@ -62,1 +62,1 @@\n-      return(info_ptr->valid & flag);\n+      return info_ptr->valid & flag;\n@@ -65,1 +65,1 @@\n-   return(0);\n+   return 0;\n@@ -72,1 +72,1 @@\n-      return(info_ptr->rowbytes);\n+      return info_ptr->rowbytes;\n@@ -74,1 +74,1 @@\n-   return(0);\n+   return 0;\n@@ -82,1 +82,1 @@\n-      return(info_ptr->row_pointers);\n+      return info_ptr->row_pointers;\n@@ -84,1 +84,1 @@\n-   return(0);\n+   return 0;\n@@ -96,1 +96,1 @@\n-   return (0);\n+   return 0;\n@@ -105,1 +105,1 @@\n-   return (0);\n+   return 0;\n@@ -114,1 +114,1 @@\n-   return (0);\n+   return 0;\n@@ -123,1 +123,1 @@\n-   return (0);\n+   return 0;\n@@ -132,1 +132,1 @@\n-   return (0);\n+   return 0;\n@@ -141,1 +141,1 @@\n-   return (0);\n+   return 0;\n@@ -150,1 +150,1 @@\n-   return (0);\n+   return 0;\n@@ -158,0 +158,2 @@\n+   png_debug(1, \"in png_get_x_pixels_per_meter\");\n+\n@@ -160,7 +162,4 @@\n-      {\n-         png_debug1(1, \"in %s retrieval function\",\n-             \"png_get_x_pixels_per_meter\");\n-\n-         if (info_ptr->phys_unit_type == PNG_RESOLUTION_METER)\n-            return (info_ptr->x_pixels_per_unit);\n-      }\n+   {\n+      if (info_ptr->phys_unit_type == PNG_RESOLUTION_METER)\n+         return info_ptr->x_pixels_per_unit;\n+   }\n@@ -172,1 +171,1 @@\n-   return (0);\n+   return 0;\n@@ -180,0 +179,2 @@\n+   png_debug(1, \"in png_get_y_pixels_per_meter\");\n+\n@@ -183,3 +184,0 @@\n-      png_debug1(1, \"in %s retrieval function\",\n-          \"png_get_y_pixels_per_meter\");\n-\n@@ -187,1 +185,1 @@\n-         return (info_ptr->y_pixels_per_unit);\n+         return info_ptr->y_pixels_per_unit;\n@@ -194,1 +192,1 @@\n-   return (0);\n+   return 0;\n@@ -201,0 +199,2 @@\n+   png_debug(1, \"in png_get_pixels_per_meter\");\n+\n@@ -204,2 +204,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"png_get_pixels_per_meter\");\n-\n@@ -208,1 +206,1 @@\n-         return (info_ptr->x_pixels_per_unit);\n+         return info_ptr->x_pixels_per_unit;\n@@ -215,1 +213,1 @@\n-   return (0);\n+   return 0;\n@@ -224,0 +222,2 @@\n+   png_debug(1, \"in png_get_pixel_aspect_ratio\");\n+\n@@ -227,2 +227,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"png_get_aspect_ratio\");\n-\n@@ -230,2 +228,2 @@\n-         return ((float)((float)info_ptr->y_pixels_per_unit\n-             \/(float)info_ptr->x_pixels_per_unit));\n+         return (float)info_ptr->y_pixels_per_unit\n+              \/ (float)info_ptr->x_pixels_per_unit;\n@@ -238,1 +236,1 @@\n-   return ((float)0.0);\n+   return (float)0.0;\n@@ -248,0 +246,2 @@\n+   png_debug(1, \"in png_get_pixel_aspect_ratio_fixed\");\n+\n@@ -256,2 +256,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"png_get_aspect_ratio_fixed\");\n-\n@@ -278,0 +276,2 @@\n+   png_debug(1, \"in png_get_x_offset_microns\");\n+\n@@ -281,2 +281,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"png_get_x_offset_microns\");\n-\n@@ -284,1 +282,1 @@\n-         return (info_ptr->x_offset);\n+         return info_ptr->x_offset;\n@@ -291,1 +289,1 @@\n-   return (0);\n+   return 0;\n@@ -298,0 +296,2 @@\n+   png_debug(1, \"in png_get_y_offset_microns\");\n+\n@@ -301,2 +301,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"png_get_y_offset_microns\");\n-\n@@ -304,1 +302,1 @@\n-         return (info_ptr->y_offset);\n+         return info_ptr->y_offset;\n@@ -311,1 +309,1 @@\n-   return (0);\n+   return 0;\n@@ -318,0 +316,2 @@\n+   png_debug(1, \"in png_get_x_offset_pixels\");\n+\n@@ -321,2 +321,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"png_get_x_offset_pixels\");\n-\n@@ -324,1 +322,1 @@\n-         return (info_ptr->x_offset);\n+         return info_ptr->x_offset;\n@@ -331,1 +329,1 @@\n-   return (0);\n+   return 0;\n@@ -338,0 +336,2 @@\n+   png_debug(1, \"in png_get_y_offset_pixels\");\n+\n@@ -341,2 +341,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"png_get_y_offset_pixels\");\n-\n@@ -344,1 +342,1 @@\n-         return (info_ptr->y_offset);\n+         return info_ptr->y_offset;\n@@ -351,1 +349,1 @@\n-   return (0);\n+   return 0;\n@@ -465,0 +463,2 @@\n+   png_debug1(1, \"in %s retrieval function\", \"pHYs\");\n+\n@@ -468,2 +468,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"pHYs\");\n-\n@@ -495,1 +493,1 @@\n-   return (retval);\n+   return retval;\n@@ -509,1 +507,1 @@\n-      return(info_ptr->channels);\n+      return info_ptr->channels;\n@@ -511,1 +509,1 @@\n-   return (0);\n+   return 0;\n@@ -519,1 +517,1 @@\n-      return(info_ptr->signature);\n+      return info_ptr->signature;\n@@ -521,1 +519,1 @@\n-   return (NULL);\n+   return NULL;\n@@ -530,0 +528,2 @@\n+   png_debug1(1, \"in %s retrieval function\", \"bKGD\");\n+\n@@ -534,2 +534,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"bKGD\");\n-\n@@ -537,1 +535,1 @@\n-      return (PNG_INFO_bKGD);\n+      return PNG_INFO_bKGD;\n@@ -540,1 +538,1 @@\n-   return (0);\n+   return 0;\n@@ -555,0 +553,2 @@\n+   png_debug1(1, \"in %s retrieval function\", \"cHRM\");\n+\n@@ -564,2 +564,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"cHRM\");\n-\n@@ -590,1 +588,1 @@\n-      return (PNG_INFO_cHRM);\n+      return PNG_INFO_cHRM;\n@@ -593,1 +591,1 @@\n-   return (0);\n+   return 0;\n@@ -602,0 +600,2 @@\n+   png_debug1(1, \"in %s retrieval function\", \"cHRM_XYZ(float)\");\n+\n@@ -605,2 +605,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"cHRM_XYZ(float)\");\n-\n@@ -634,1 +632,1 @@\n-      return (PNG_INFO_cHRM);\n+      return PNG_INFO_cHRM;\n@@ -637,1 +635,1 @@\n-   return (0);\n+   return 0;\n@@ -650,0 +648,2 @@\n+   png_debug1(1, \"in %s retrieval function\", \"cHRM_XYZ\");\n+\n@@ -653,2 +653,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"cHRM_XYZ\");\n-\n@@ -673,1 +671,1 @@\n-      return (PNG_INFO_cHRM);\n+      return PNG_INFO_cHRM;\n@@ -676,1 +674,1 @@\n-   return (0);\n+   return 0;\n@@ -706,1 +704,1 @@\n-      return (PNG_INFO_cHRM);\n+      return PNG_INFO_cHRM;\n@@ -709,1 +707,1 @@\n-   return (0);\n+   return 0;\n@@ -727,1 +725,1 @@\n-      return (PNG_INFO_gAMA);\n+      return PNG_INFO_gAMA;\n@@ -730,1 +728,1 @@\n-   return (0);\n+   return 0;\n@@ -747,1 +745,1 @@\n-      return (PNG_INFO_gAMA);\n+      return PNG_INFO_gAMA;\n@@ -750,1 +748,1 @@\n-   return (0);\n+   return 0;\n@@ -766,1 +764,1 @@\n-      return (PNG_INFO_sRGB);\n+      return PNG_INFO_sRGB;\n@@ -769,1 +767,1 @@\n-   return (0);\n+   return 0;\n@@ -793,1 +791,1 @@\n-      return (PNG_INFO_iCCP);\n+      return PNG_INFO_iCCP;\n@@ -796,1 +794,1 @@\n-   return (0);\n+   return 0;\n@@ -806,0 +804,2 @@\n+   png_debug1(1, \"in %s retrieval function\", \"sPLT\");\n+\n@@ -812,1 +812,1 @@\n-   return (0);\n+   return 0;\n@@ -838,1 +838,1 @@\n-      return (PNG_INFO_eXIf);\n+      return PNG_INFO_eXIf;\n@@ -841,1 +841,1 @@\n-   return (0);\n+   return 0;\n@@ -856,1 +856,1 @@\n-      return (PNG_INFO_hIST);\n+      return PNG_INFO_hIST;\n@@ -859,1 +859,1 @@\n-   return (0);\n+   return 0;\n@@ -872,1 +872,1 @@\n-      return (0);\n+      return 0;\n@@ -904,1 +904,1 @@\n-   return (1);\n+   return 1;\n@@ -921,1 +921,1 @@\n-      return (PNG_INFO_oFFs);\n+      return PNG_INFO_oFFs;\n@@ -924,1 +924,1 @@\n-   return (0);\n+   return 0;\n@@ -948,1 +948,1 @@\n-      return (PNG_INFO_pCAL);\n+      return PNG_INFO_pCAL;\n@@ -951,1 +951,1 @@\n-   return (0);\n+   return 0;\n@@ -963,0 +963,2 @@\n+   png_debug1(1, \"in %s retrieval function\", \"sCAL\");\n+\n@@ -974,1 +976,1 @@\n-      return (PNG_INFO_sCAL);\n+      return PNG_INFO_sCAL;\n@@ -977,1 +979,1 @@\n-   return(0);\n+   return 0;\n@@ -986,0 +988,2 @@\n+   png_debug1(1, \"in %s retrieval function\", \"sCAL(float)\");\n+\n@@ -992,1 +996,1 @@\n-      return (PNG_INFO_sCAL);\n+      return PNG_INFO_sCAL;\n@@ -995,1 +999,1 @@\n-   return(0);\n+   return 0;\n@@ -1002,0 +1006,2 @@\n+   png_debug1(1, \"in %s retrieval function\", \"sCAL(str)\");\n+\n@@ -1008,1 +1014,1 @@\n-      return (PNG_INFO_sCAL);\n+      return PNG_INFO_sCAL;\n@@ -1011,1 +1017,1 @@\n-   return(0);\n+   return 0;\n@@ -1046,1 +1052,1 @@\n-   return (retval);\n+   return retval;\n@@ -1062,1 +1068,1 @@\n-      return (PNG_INFO_PLTE);\n+      return PNG_INFO_PLTE;\n@@ -1065,1 +1071,1 @@\n-   return (0);\n+   return 0;\n@@ -1079,1 +1085,1 @@\n-      return (PNG_INFO_sBIT);\n+      return PNG_INFO_sBIT;\n@@ -1082,1 +1088,1 @@\n-   return (0);\n+   return 0;\n@@ -1093,1 +1099,1 @@\n-      png_debug1(1, \"in 0x%lx retrieval function\",\n+      png_debug1(1, \"in text retrieval function, chunk typeid = 0x%lx\",\n@@ -1108,1 +1114,1 @@\n-   return(0);\n+   return 0;\n@@ -1123,1 +1129,1 @@\n-      return (PNG_INFO_tIME);\n+      return PNG_INFO_tIME;\n@@ -1126,1 +1132,1 @@\n-   return (0);\n+   return 0;\n@@ -1136,0 +1142,3 @@\n+\n+   png_debug1(1, \"in %s retrieval function\", \"tRNS\");\n+\n@@ -1139,2 +1148,0 @@\n-      png_debug1(1, \"in %s retrieval function\", \"tRNS\");\n-\n@@ -1172,1 +1179,1 @@\n-   return (retval);\n+   return retval;\n@@ -1187,1 +1194,1 @@\n-   return (0);\n+   return 0;\n@@ -1283,1 +1290,1 @@\n-   return (-1);\n+   return -1;\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngget.c","additions":126,"deletions":119,"binary":false,"changes":245,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-\/* libpng version 1.6.40 *\/\n+\/* libpng version 1.6.43 *\/\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pnglibconf.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n@@ -176,1 +176,1 @@\n-   if (png_sig_cmp(info_ptr->signature, num_checked, num_to_check))\n+   if (png_sig_cmp(info_ptr->signature, num_checked, num_to_check) != 0)\n@@ -179,1 +179,1 @@\n-          png_sig_cmp(info_ptr->signature, num_checked, num_to_check - 4))\n+          png_sig_cmp(info_ptr->signature, num_checked, num_to_check - 4) != 0)\n@@ -325,0 +325,8 @@\n+#endif\n+#ifdef PNG_READ_eXIf_SUPPORTED\n+   else if (png_ptr->chunk_name == png_eXIf)\n+   {\n+      PNG_PUSH_SAVE_BUFFER_IF_FULL\n+      png_handle_eXIf(png_ptr, info_ptr, png_ptr->push_length);\n+   }\n+\n@@ -1120,1 +1128,1 @@\n-      return (NULL);\n+      return NULL;\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngpread.c","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2023 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n@@ -67,1 +67,1 @@\n-# define _POSIX_SOURCE 1 \/* Just the POSIX 1003.1 and C89 APIs *\/\n+#  define _POSIX_SOURCE 1 \/* Just the POSIX 1003.1 and C89 APIs *\/\n@@ -221,1 +221,2 @@\n-#  if defined(__mips_msa) && (__mips_isa_rev >= 5) && defined(PNG_ALIGNED_MEMORY_SUPPORTED)\n+#  if defined(__mips_msa) && (__mips_isa_rev >= 5) && \\\n+   defined(PNG_ALIGNED_MEMORY_SUPPORTED)\n@@ -228,0 +229,13 @@\n+#ifndef PNG_MIPS_MMI_OPT\n+#  ifdef PNG_MIPS_MMI\n+#    if defined(__mips_loongson_mmi) && (_MIPS_SIM == _ABI64) && \\\n+     defined(PNG_ALIGNED_MEMORY_SUPPORTED)\n+#       define PNG_MIPS_MMI_OPT 1\n+#    else\n+#       define PNG_MIPS_MMI_OPT 0\n+#    endif\n+#  else\n+#    define PNG_MIPS_MMI_OPT 0\n+#  endif\n+#endif\n+\n@@ -236,0 +250,8 @@\n+#ifndef PNG_LOONGARCH_LSX_OPT\n+#  if defined(__loongarch_sx)\n+#     define PNG_LOONGARCH_LSX_OPT 1\n+#  else\n+#     define PNG_LOONGARCH_LSX_OPT 0\n+#  endif\n+#endif\n+\n@@ -242,1 +264,1 @@\n-#     if defined(__SSE4_1__) || defined(__AVX__) || defined(__SSSE3__) || \\\n+#      if defined(__SSE4_1__) || defined(__AVX__) || defined(__SSSE3__) || \\\n@@ -279,1 +301,0 @@\n-#  define PNG_FILTER_OPTIMIZATIONS png_init_filter_functions_msa\n@@ -295,0 +316,1 @@\n+#     define PNG_FILTER_OPTIMIZATIONS png_init_filter_functions_mips\n@@ -300,0 +322,16 @@\n+#if PNG_MIPS_MMI_OPT > 0\n+#  ifndef PNG_MIPS_MMI_IMPLEMENTATION\n+#     if defined(__mips_loongson_mmi) && (_MIPS_SIM == _ABI64)\n+#        define PNG_MIPS_MMI_IMPLEMENTATION 2\n+#     else \/* !defined __mips_loongson_mmi  || _MIPS_SIM != _ABI64 *\/\n+#        define PNG_MIPS_MMI_IMPLEMENTATION 0\n+#     endif \/* __mips_loongson_mmi  && _MIPS_SIM == _ABI64 *\/\n+#  endif \/* !PNG_MIPS_MMI_IMPLEMENTATION *\/\n+\n+#   if PNG_MIPS_MMI_IMPLEMENTATION > 0\n+#      define PNG_FILTER_OPTIMIZATIONS png_init_filter_functions_mips\n+#   endif\n+#else\n+#   define PNG_MIPS_MMI_IMPLEMENTATION 0\n+#endif \/* PNG_MIPS_MMI_OPT > 0 *\/\n+\n@@ -307,0 +345,6 @@\n+#if PNG_LOONGARCH_LSX_OPT > 0\n+#   define PNG_FILTER_OPTIMIZATIONS png_init_filter_functions_lsx\n+#   define PNG_LOONGARCH_LSX_IMPLEMENTATION 1\n+#else\n+#   define PNG_LOONGARCH_LSX_IMPLEMENTATION 0\n+#endif\n@@ -545,12 +589,2 @@\n-#  if (defined(__MWERKS__) && defined(macintosh)) || defined(applec) || \\\n-    defined(THINK_C) || defined(__SC__) || defined(TARGET_OS_MAC)\n-   \/* We need to check that <math.h> hasn't already been included earlier\n-    * as it seems it doesn't agree with <fp.h>, yet we should really use\n-    * <fp.h> if possible.\n-    *\/\n-#    if !defined(__MATH_H__) && !defined(__MATH_H) && !defined(__cmath__)\n-#      include <fp.h>\n-#    endif\n-#  else\n-#    include <math.h>\n-#  endif\n+#  include <math.h>\n+\n@@ -1337,1 +1371,1 @@\n-#if PNG_MIPS_MSA_OPT > 0\n+#if PNG_MIPS_MSA_IMPLEMENTATION == 1\n@@ -1354,0 +1388,17 @@\n+#if PNG_MIPS_MMI_IMPLEMENTATION > 0\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_up_mmi,(png_row_infop row_info,\n+    png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_sub3_mmi,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_sub4_mmi,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_avg3_mmi,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_avg4_mmi,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_paeth3_mmi,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_paeth4_mmi,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+#endif\n+\n@@ -1386,0 +1437,17 @@\n+#if PNG_LOONGARCH_LSX_IMPLEMENTATION == 1\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_up_lsx,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_sub3_lsx,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_sub4_lsx,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_avg3_lsx,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_avg4_lsx,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_paeth3_lsx,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+PNG_INTERNAL_FUNCTION(void,png_read_filter_row_paeth4_lsx,(png_row_infop\n+    row_info, png_bytep row, png_const_bytep prev_row),PNG_EMPTY);\n+#endif\n+\n@@ -2125,2 +2193,2 @@\n-#if PNG_MIPS_MSA_OPT > 0\n-PNG_INTERNAL_FUNCTION(void, png_init_filter_functions_msa,\n+#if PNG_MIPS_MSA_IMPLEMENTATION == 1\n+PNG_INTERNAL_FUNCTION(void, png_init_filter_functions_mips,\n@@ -2130,0 +2198,5 @@\n+#  if PNG_MIPS_MMI_IMPLEMENTATION > 0\n+PNG_INTERNAL_FUNCTION(void, png_init_filter_functions_mips,\n+   (png_structp png_ptr, unsigned int bpp), PNG_EMPTY);\n+#  endif\n+\n@@ -2136,0 +2209,5 @@\n+#if PNG_LOONGARCH_LSX_OPT > 0\n+PNG_INTERNAL_FUNCTION(void, png_init_filter_functions_lsx,\n+    (png_structp png_ptr, unsigned int bpp), PNG_EMPTY);\n+#endif\n+\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngpriv.h","additions":98,"deletions":20,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2019 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n@@ -599,1 +599,5 @@\n-   if (png_ptr->transformations)\n+   if (png_ptr->transformations\n+#     ifdef PNG_CHECK_FOR_INVALID_INDEX_SUPPORTED\n+         || png_ptr->num_palette_max >= 0\n+#     endif\n+      )\n@@ -816,1 +820,1 @@\n-       png_ptr->num_palette_max > png_ptr->num_palette)\n+       png_ptr->num_palette_max >= png_ptr->num_palette)\n@@ -1080,0 +1084,2 @@\n+   png_debug(1, \"in png_read_png\");\n+\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngread.c","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2019 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n@@ -321,1 +321,1 @@\n-   png_debug(1, \"in png_set_alpha_mode\");\n+   png_debug(1, \"in png_set_alpha_mode_fixed\");\n@@ -328,1 +328,1 @@\n-   \/* Validate the value to ensure it is in a reasonable range. The value\n+   \/* Validate the value to ensure it is in a reasonable range.  The value\n@@ -330,3 +330,2 @@\n-    * viewing correction values.  The intent is to weed out users of this API\n-    * who use the inverse of the gamma value accidentally!  Since some of these\n-    * values are reasonable this may have to be changed:\n+    * viewing correction values.  The intent is to weed out the API users\n+    * who might use the inverse of the gamma value accidentally!\n@@ -334,2 +333,2 @@\n-    * 1.6.x: changed from 0.07..3 to 0.01..100 (to accommodate the optimal 16-bit\n-    * gamma of 36, and its reciprocal.)\n+    * In libpng 1.6.0, we changed from 0.07..3 to 0.01..100, to accommodate\n+    * the optimal 16-bit gamma of 36 and its reciprocal.\n@@ -472,1 +471,1 @@\n-          (png_alloc_size_t)((png_uint_32)num_palette * (sizeof (png_byte))));\n+          (png_alloc_size_t)num_palette);\n@@ -489,1 +488,1 @@\n-             (png_alloc_size_t)((png_uint_32)num_palette * (sizeof (png_byte))));\n+             (png_alloc_size_t)num_palette);\n@@ -623,2 +622,1 @@\n-             (png_alloc_size_t)((png_uint_32)num_palette *\n-             (sizeof (png_byte))));\n+             (png_alloc_size_t)num_palette);\n@@ -626,2 +624,1 @@\n-             (png_alloc_size_t)((png_uint_32)num_palette *\n-             (sizeof (png_byte))));\n+             (png_alloc_size_t)num_palette);\n@@ -792,1 +789,1 @@\n-          (png_alloc_size_t)(num_entries * (sizeof (png_byte))));\n+          (png_alloc_size_t)(num_entries));\n@@ -794,2 +791,1 @@\n-      distance = (png_bytep)png_malloc(png_ptr, (png_alloc_size_t)(num_entries *\n-          (sizeof (png_byte))));\n+      distance = (png_bytep)png_malloc(png_ptr, (png_alloc_size_t)num_entries);\n@@ -797,1 +793,1 @@\n-      memset(distance, 0xff, num_entries * (sizeof (png_byte)));\n+      memset(distance, 0xff, num_entries);\n@@ -1001,1 +997,1 @@\n-   png_debug(1, \"in png_set_rgb_to_gray\");\n+   png_debug(1, \"in png_set_rgb_to_gray_fixed\");\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngrtran.c","additions":15,"deletions":19,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2022 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n@@ -57,1 +57,1 @@\n-   return (uval);\n+   return uval;\n@@ -171,1 +171,1 @@\n-          png_sig_cmp(info_ptr->signature, num_checked, num_to_check - 4))\n+          png_sig_cmp(info_ptr->signature, num_checked, num_to_check - 4) != 0)\n@@ -202,1 +202,1 @@\n-   png_debug2(0, \"Reading %lx chunk, length = %lu\",\n+   png_debug2(0, \"Reading chunk typeid = 0x%lx, length = %lu\",\n@@ -269,1 +269,1 @@\n-      return (1);\n+      return 1;\n@@ -272,1 +272,1 @@\n-   return (0);\n+   return 0;\n@@ -308,1 +308,1 @@\n-      return ((int)(crc != png_ptr->crc));\n+      return crc != png_ptr->crc;\n@@ -312,1 +312,1 @@\n-      return (0);\n+      return 0;\n@@ -452,2 +452,1 @@\n-#if ZLIB_VERNUM >= 0x1290 && \\\n-   defined(PNG_SET_OPTION_SUPPORTED) && defined(PNG_IGNORE_ADLER32)\n+#ifdef PNG_DISABLE_ADLER32_CHECK_SUPPORTED\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngrutil.c","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018-2023 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n@@ -794,2 +794,2 @@\n-   png_debug1(1, \"in %lx storage function\", png_ptr == NULL ? 0xabadca11U :\n-      (unsigned long)png_ptr->chunk_name);\n+   png_debug1(1, \"in text storage function, chunk typeid = 0x%lx\",\n+      png_ptr == NULL ? 0xabadca11UL : (unsigned long)png_ptr->chunk_name);\n@@ -798,1 +798,1 @@\n-      return(0);\n+      return 0;\n@@ -978,1 +978,1 @@\n-   return(0);\n+   return 0;\n@@ -1094,0 +1094,2 @@\n+   png_debug1(1, \"in %s storage function\", \"sPLT\");\n+\n@@ -1568,1 +1570,1 @@\n-   png_debug1(1, \"in %s storage function\", \"rows\");\n+   png_debug(1, \"in png_set_rows\");\n@@ -1587,0 +1589,2 @@\n+   png_debug(1, \"in png_set_compression_buffer_size\");\n+\n@@ -1658,0 +1662,2 @@\n+   png_debug(1, \"in png_set_user_limits\");\n+\n@@ -1673,0 +1679,2 @@\n+   png_debug(1, \"in png_set_chunk_cache_max\");\n+\n@@ -1682,0 +1690,2 @@\n+   png_debug(1, \"in png_set_chunk_malloc_max\");\n+\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngset.c","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * Copyright (c) 2018 Cosmin Truta\n+ * Copyright (c) 2018-2024 Cosmin Truta\n@@ -134,1 +134,1 @@\n-      return (7);\n+      return 7;\n@@ -137,1 +137,1 @@\n-   return (1);\n+   return 1;\n@@ -529,0 +529,2 @@\n+   png_debug(1, \"in png_do_strip_channel\");\n+\n@@ -729,0 +731,2 @@\n+   png_debug(1, \"in png_do_check_palette_indexes\");\n+\n@@ -739,1 +743,1 @@\n-      png_bytep rp = png_ptr->row_buf + row_info->rowbytes - 1;\n+      png_bytep rp = png_ptr->row_buf + row_info->rowbytes;\n@@ -864,1 +868,1 @@\n-      return (NULL);\n+      return NULL;\n","filename":"src\/java.desktop\/share\/native\/libsplashscreen\/libpng\/pngtrans.c","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"}]}