{"files":[{"patch":"@@ -2299,1 +2299,1 @@\n-  const u1* code_start = 0;\n+  const u1* code_start = nullptr;\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -873,1 +873,1 @@\n-  address code_start = 0;\n+  address code_start = nullptr;\n","filename":"src\/hotspot\/share\/classfile\/defaultMethods.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n-JavaAssertions::OptionList*     JavaAssertions::_classes = 0;\n-JavaAssertions::OptionList*     JavaAssertions::_packages = 0;\n+JavaAssertions::OptionList*     JavaAssertions::_classes = nullptr;\n+JavaAssertions::OptionList*     JavaAssertions::_packages = nullptr;\n@@ -46,1 +46,1 @@\n-  assert(name != 0, \"need a name\");\n+  assert(name != nullptr, \"need a name\");\n@@ -54,1 +54,1 @@\n-  for (rc = 0; p != 0; p = p->next(), ++rc) \/* empty *\/;\n+  for (rc = 0; p != nullptr; p = p->next(), ++rc) \/* empty *\/;\n@@ -59,1 +59,1 @@\n-  assert(name != 0, \"must have a name\");\n+  assert(name != nullptr, \"must have a name\");\n@@ -138,1 +138,1 @@\n-  for (index = len - 1; p != 0; p = p->next(), --index) {\n+  for (index = len - 1; p != nullptr; p = p->next(), --index) {\n@@ -150,1 +150,1 @@\n-  for (OptionList* p = _classes; p != 0; p = p->next()) {\n+  for (OptionList* p = _classes; p != nullptr; p = p->next()) {\n@@ -155,1 +155,1 @@\n-  return 0;\n+  return nullptr;\n@@ -163,1 +163,1 @@\n-  if (_packages == 0) return 0;\n+  if (_packages == nullptr) return nullptr;\n@@ -173,1 +173,1 @@\n-    for (OptionList* p = _packages; p != 0; p = p->next()) {\n+    for (OptionList* p = _packages; p != nullptr; p = p->next()) {\n@@ -184,1 +184,1 @@\n-  return 0;\n+  return nullptr;\n@@ -196,1 +196,1 @@\n-  assert(classname != 0, \"must have a classname\");\n+  assert(classname != nullptr, \"must have a classname\");\n","filename":"src\/hotspot\/share\/classfile\/javaAssertions.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-      DEBUG_ONLY(static void* last = 0);\n+      DEBUG_ONLY(static void* last = nullptr);\n","filename":"src\/hotspot\/share\/classfile\/symbolTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}