{"files":[{"patch":"@@ -210,0 +210,5 @@\n+void AOTArtifactFinder::append_to_all_cached_classes(Klass* k) {\n+  precond(!SystemDictionaryShared::should_be_excluded(k));\n+  _all_cached_classes->append(k);\n+}\n+\n@@ -211,0 +216,6 @@\n+  if (CDSConfig::is_dumping_dynamic_archive() && ik->is_shared()) {\n+    \/\/ This class is already included in the base archive. No need to cache\n+    \/\/ it again in the dynamic archive.\n+    return;\n+  }\n+\n@@ -214,1 +225,15 @@\n-    _all_cached_classes->append(ik);\n+    append_to_all_cached_classes(ik);\n+\n+    \/\/ All super types must be added.\n+    InstanceKlass* s = ik->java_super();\n+    if (s != nullptr) {\n+      add_cached_instance_class(s);\n+    }\n+\n+    Array<InstanceKlass*>* interfaces = ik->local_interfaces();\n+    int len = interfaces->length();\n+    for (int i = 0; i < len; i++) {\n+      InstanceKlass* intf = interfaces->at(i);\n+      add_cached_instance_class(intf);\n+    }\n+\n@@ -232,1 +257,1 @@\n-    _all_cached_classes->append(tak);\n+    append_to_all_cached_classes(tak);\n","filename":"src\/hotspot\/share\/cds\/aotArtifactFinder.cpp","additions":27,"deletions":2,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -82,0 +82,1 @@\n+  static void append_to_all_cached_classes(Klass* k);\n","filename":"src\/hotspot\/share\/cds\/aotArtifactFinder.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}