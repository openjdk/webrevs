{"files":[{"patch":"@@ -44,1 +44,1 @@\n-  MarkingNMethodClosure code_closure(marker->mark_closure(), !NMethodToOopClosure::FixRelocations, true \/* keepalive nmethods *\/);\n+  MarkingNMethodClosure code_closure(marker->mark_closure());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarkTask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1068,3 +1068,1 @@\n-    MarkingNMethodClosure mark_and_push_in_blobs(&cm->_mark_and_push_closure,\n-                                                 !NMethodToOopClosure::FixRelocations,\n-                                                 true \/* keepalive nmethods *\/);\n+    MarkingNMethodClosure mark_and_push_in_blobs(&cm->_mark_and_push_closure);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -488,3 +488,1 @@\n-    MarkingNMethodClosure mark_code_closure(&follow_root_closure,\n-                                            !NMethodToOopClosure::FixRelocations,\n-                                            true);\n+    MarkingNMethodClosure mark_code_closure(&follow_root_closure);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialFullGC.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-  MarkingNMethodClosure nmethods_cl(oops, !NMethodToOopClosure::FixRelocations, true \/*FIXME*\/);\n+  MarkingNMethodClosure nmethods_cl(oops);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,3 +56,2 @@\n-    if (_keepalive_nmethods) {\n-      \/\/ CodeCache unloading support\n-      nm->mark_as_maybe_on_stack();\n+    \/\/ CodeCache unloading support\n+    nm->mark_as_maybe_on_stack();\n@@ -60,7 +59,2 @@\n-      BarrierSetNMethod* bs_nm = BarrierSet::barrier_set()->barrier_set_nmethod();\n-      bs_nm->disarm(nm);\n-    }\n-\n-    if (_fix_relocations) {\n-      nm->fix_oop_relocations();\n-    }\n+    BarrierSetNMethod* bs_nm = BarrierSet::barrier_set()->barrier_set_nmethod();\n+    bs_nm->disarm(nm);\n","filename":"src\/hotspot\/share\/memory\/iterator.cpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -258,2 +258,2 @@\n-class MarkingNMethodClosure : public NMethodToOopClosure {\n-  bool _keepalive_nmethods;\n+class MarkingNMethodClosure : public NMethodClosure {\n+  OopClosure* _cl;\n@@ -262,3 +262,1 @@\n-  MarkingNMethodClosure(OopClosure* cl, bool fix_relocations, bool keepalive_nmethods) :\n-      NMethodToOopClosure(cl, fix_relocations),\n-      _keepalive_nmethods(keepalive_nmethods) {}\n+  MarkingNMethodClosure(OopClosure* cl) : _cl(cl) {}\n","filename":"src\/hotspot\/share\/memory\/iterator.hpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}