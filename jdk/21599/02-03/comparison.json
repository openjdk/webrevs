{"files":[{"patch":"@@ -33,0 +33,4 @@\n+\n+bool PhaseLowering::should_lower() {\n+  return false;\n+}\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_lowering_aarch64.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,4 @@\n+\n+bool PhaseLowering::should_lower() {\n+  return false;\n+}\n","filename":"src\/hotspot\/cpu\/arm\/c2_lowering_arm.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,4 @@\n+\n+bool PhaseLowering::should_lower() {\n+  return false;\n+}\n","filename":"src\/hotspot\/cpu\/ppc\/c2_lowering_ppc.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,4 @@\n+\n+bool PhaseLowering::should_lower() {\n+  return false;\n+}\n","filename":"src\/hotspot\/cpu\/riscv\/c2_lowering_riscv.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,4 @@\n+\n+bool PhaseLowering::should_lower() {\n+  return false;\n+}\n","filename":"src\/hotspot\/cpu\/s390\/c2_lowering_s390.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,4 @@\n+\n+bool PhaseLowering::should_lower() {\n+  return false;\n+}\n","filename":"src\/hotspot\/cpu\/x86\/c2_lowering_x86.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2273,1 +2273,6 @@\n-  \/\/ Run the lowered Ideal method to continue doing transformations on the node, while avoiding existing transforms\n+  Node* lowered = lower_node(k);\n+  if (lowered != nullptr) {\n+    return lowered;\n+  }\n+\n+  \/\/ Run the lowered Ideal method to continue doing transformations on the node, while avoiding existing ideal transforms\n@@ -2275,0 +2280,1 @@\n+\n@@ -2286,0 +2292,4 @@\n+  if (!should_lower()) {\n+    return;\n+  }\n+\n@@ -2291,12 +2301,1 @@\n-  while(_worklist.size() != 0) {\n-    Node* n = _worklist.pop();\n-    Node* new_node = lower_node(n);\n-\n-    \/\/ If a lowered node is returned, replace all usages of the old node with the new one.\n-    if (new_node != nullptr) {\n-      new_node = transform(new_node);\n-\n-      \/\/ Replace node, adding all users to the worklist.\n-      replace_node(n, new_node);\n-    }\n-  }\n+  optimize();\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -715,0 +715,2 @@\n+  bool should_lower();\n+\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}