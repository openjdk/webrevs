{"files":[{"patch":"@@ -61,0 +61,2 @@\n+  ADLC_CFLAGS += -DINCLUDE_SUFFIX_CPU=_$(HOTSPOT_TARGET_CPU_ARCH)\n+\n@@ -62,0 +64,1 @@\n+  ADLC_CFLAGS += -I$(TOPDIR)\/src\/hotspot\/cpu\/$(HOTSPOT_TARGET_CPU_ARCH)\n","filename":"make\/hotspot\/gensrc\/GensrcAdlc.gmk","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -22,0 +22,1 @@\n+ *\n@@ -23,1 +24,0 @@\n-module org.singlejar {\n@@ -25,1 +25,0 @@\n-}\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_classes_aarch64.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/langtools\/tools\/jnativescan\/cases\/modules\/org.singlejar\/module-info.java","status":"copied"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"opto\/node.hpp\"\n+#include \"opto\/phaseX.hpp\"\n+\n+Node* PhaseLowering::lower_node(Node* in) {\n+  return nullptr;\n+}\n\\ No newline at end of file\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_lowering_aarch64.cpp","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -22,0 +22,1 @@\n+ *\n@@ -23,1 +24,0 @@\n-module org.singlejar {\n@@ -25,1 +25,0 @@\n-}\n","filename":"src\/hotspot\/cpu\/arm\/c2_classes_arm.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/langtools\/tools\/jnativescan\/cases\/modules\/org.singlejar\/module-info.java","status":"copied"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"opto\/node.hpp\"\n+#include \"opto\/phaseX.hpp\"\n+\n+Node* PhaseLowering::lower_node(Node* in) {\n+  return nullptr;\n+}\n\\ No newline at end of file\n","filename":"src\/hotspot\/cpu\/arm\/c2_lowering_arm.cpp","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -22,0 +22,1 @@\n+ *\n@@ -23,1 +24,0 @@\n-module org.singlejar {\n@@ -25,1 +25,0 @@\n-}\n","filename":"src\/hotspot\/cpu\/ppc\/c2_classes_ppc.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/langtools\/tools\/jnativescan\/cases\/modules\/org.singlejar\/module-info.java","status":"copied"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"opto\/node.hpp\"\n+#include \"opto\/phaseX.hpp\"\n+\n+Node* PhaseLowering::lower_node(Node* in) {\n+  return nullptr;\n+}\n\\ No newline at end of file\n","filename":"src\/hotspot\/cpu\/ppc\/c2_lowering_ppc.cpp","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -22,0 +22,1 @@\n+ *\n@@ -23,1 +24,0 @@\n-module org.singlejar {\n@@ -25,1 +25,0 @@\n-}\n","filename":"src\/hotspot\/cpu\/riscv\/c2_classes_riscv.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/langtools\/tools\/jnativescan\/cases\/modules\/org.singlejar\/module-info.java","status":"copied"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"opto\/node.hpp\"\n+#include \"opto\/phaseX.hpp\"\n+\n+Node* PhaseLowering::lower_node(Node* in) {\n+  return nullptr;\n+}\n\\ No newline at end of file\n","filename":"src\/hotspot\/cpu\/riscv\/c2_lowering_riscv.cpp","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -22,0 +22,1 @@\n+ *\n@@ -23,1 +24,0 @@\n-module org.singlejar {\n@@ -25,1 +25,0 @@\n-}\n","filename":"src\/hotspot\/cpu\/s390\/c2_classes_s390.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/langtools\/tools\/jnativescan\/cases\/modules\/org.singlejar\/module-info.java","status":"copied"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"opto\/node.hpp\"\n+#include \"opto\/phaseX.hpp\"\n+\n+Node* PhaseLowering::lower_node(Node* in) {\n+  return nullptr;\n+}\n\\ No newline at end of file\n","filename":"src\/hotspot\/cpu\/s390\/c2_lowering_s390.cpp","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -22,0 +22,1 @@\n+ *\n@@ -23,1 +24,0 @@\n-module org.singlejar {\n@@ -25,1 +25,0 @@\n-}\n","filename":"src\/hotspot\/cpu\/x86\/c2_classes_x86.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"test\/langtools\/tools\/jnativescan\/cases\/modules\/org.singlejar\/module-info.java","status":"copied"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"opto\/node.hpp\"\n+#include \"opto\/phaseX.hpp\"\n+\n+Node* PhaseLowering::lower_node(Node* in) {\n+  return nullptr;\n+}\n\\ No newline at end of file\n","filename":"src\/hotspot\/cpu\/x86\/c2_lowering_x86.cpp","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -518,0 +518,1 @@\n+#include CPU_HEADER(c2_classes)\n","filename":"src\/hotspot\/share\/opto\/classes.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2461,0 +2461,11 @@\n+  \/\/ Lower nodes and match backend-specific patterns with Ideal nodes\n+  {\n+    TracePhase tp(\"lower\", &timers[_t_lower]);\n+    print_method(PHASE_BEFORE_LOWERING, 3);\n+\n+    PhaseLowering lower(&igvn);\n+    lower.lower();\n+\n+    print_method(PHASE_AFTER_LOWERING, 2);\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -90,0 +90,1 @@\n+    tty->print_cr (\"         Lowering:            %7.3f s\", timers[_t_lower].seconds());\n","filename":"src\/hotspot\/share\/opto\/phase.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+    Lower,                            \/\/ Backend-dependent Ideal node lowering\n@@ -91,0 +92,1 @@\n+      _t_lower,\n","filename":"src\/hotspot\/share\/opto\/phase.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2272,0 +2272,43 @@\n+Node* PhaseLowering::transform(Node* n) {\n+  \/\/ New node, make space for the node in the types table\n+  _igvn->ensure_type_or_null(n);\n+\n+  \/\/ Try to find an existing version of the same node\n+  Node* existing = _igvn->hash_find_insert(n);\n+  if (existing != nullptr) {\n+    \/\/ GVN hit, return the existing node\n+    n->destruct(_igvn);\n+    return existing;\n+  }\n+\n+  \/\/ Record the type of the node in the types table\n+  const Type* type = n->Value(_igvn);\n+  _igvn->set_type(n, type);\n+  n->raise_bottom_type(type);\n+\n+  return n;\n+}\n+\n+\n+void PhaseLowering::lower() {\n+  \/\/ Worklist should be empty before lowering\n+  _igvn->_worklist.ensure_empty();\n+\n+  C->identify_useful_nodes(_igvn->_worklist);\n+\n+  while(_igvn->_worklist.size() != 0) {\n+    Node* n = _igvn->_worklist.pop();\n+    Node* new_node = lower_node(n);\n+\n+    \/\/ If a lowered node is returned, replace all usages of the old node with the new one.\n+    if (new_node != nullptr) {\n+      new_node = transform(new_node);\n+\n+      \/\/ Replace node, adding all users to the worklist.\n+      _igvn->replace_node(n, new_node);\n+    }\n+  }\n+\n+  \/\/ Worklist should be empty after lowering\n+  _igvn->_worklist.ensure_empty();\n+}\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":43,"deletions":0,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -701,1 +701,23 @@\n-#endif \/\/ SHARE_OPTO_PHASEX_HPP\n+\/\/ Phase for lowering common Ideal nodes into machine-specific Ideal nodes and identifying complex patterns before\n+\/\/ the platform matcher.\n+class PhaseLowering : public PhaseTransform {\n+  PhaseIterGVN* _igvn;\n+public:\n+  PhaseLowering(PhaseIterGVN* igvn) : PhaseTransform(Lower), _igvn(igvn) {};\n+\n+  \/\/ GVN the given node, returning an existing version if it exists.\n+  virtual Node* transform(Node* n);\n+\n+  \/\/ Return a lowered version of the input node, or nullptr if no lowering took place.\n+  \/\/ Implemented by backends.\n+  Node* lower_node(Node* in);\n+\n+  \/\/ Main function to lower all nodes in the graph.\n+  void lower();\n+\n+  inline PhaseIterGVN* igvn() {\n+    return _igvn;\n+  }\n+};\n+\n+#endif \/\/ SHARE_OPTO_PHASEX_HPP\n\\ No newline at end of file\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -92,0 +92,2 @@\n+  flags(BEFORE_LOWERING,                \"Before Lowering\") \\\n+  flags(AFTER_LOWERING,                 \"After Lowering\") \\\n","filename":"src\/hotspot\/share\/opto\/phasetype.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -102,0 +102,2 @@\n+    BEFORE_LOWERING(\"Before Lowering\"),\n+    AFTER_LOWERING(\"After Lowering\"),\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/CompilePhase.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}