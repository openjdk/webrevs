{"files":[{"patch":"@@ -60,1 +60,0 @@\n-  ADLC_CFLAGS += -DINCLUDE_SUFFIX_CPU=_$(HOTSPOT_TARGET_CPU_ARCH)\n@@ -63,1 +62,0 @@\n-  ADLC_CFLAGS += -I$(TOPDIR)\/src\/hotspot\/cpu\/$(HOTSPOT_TARGET_CPU_ARCH)\n","filename":"make\/hotspot\/gensrc\/GensrcAdlc.gmk","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,24 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_classes_aarch64.hpp","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -30,1 +30,1 @@\n-Node* PhaseLowering::lower_node(Node* n) {\n+Node* PhaseLowering::lower_node_platform(Node* n) {\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_lowering_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,24 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n","filename":"src\/hotspot\/cpu\/arm\/c2_classes_arm.hpp","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -30,1 +30,1 @@\n-Node* PhaseLowering::lower_node(Node* n) {\n+Node* PhaseLowering::lower_node_platform(Node* n) {\n","filename":"src\/hotspot\/cpu\/arm\/c2_lowering_arm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,24 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n","filename":"src\/hotspot\/cpu\/ppc\/c2_classes_ppc.hpp","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -30,1 +30,1 @@\n-Node* PhaseLowering::lower_node(Node* n) {\n+Node* PhaseLowering::lower_node_platform(Node* n) {\n","filename":"src\/hotspot\/cpu\/ppc\/c2_lowering_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,24 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n","filename":"src\/hotspot\/cpu\/riscv\/c2_classes_riscv.hpp","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -30,1 +30,1 @@\n-Node* PhaseLowering::lower_node(Node* n) {\n+Node* PhaseLowering::lower_node_platform(Node* n) {\n","filename":"src\/hotspot\/cpu\/riscv\/c2_lowering_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,24 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n","filename":"src\/hotspot\/cpu\/s390\/c2_classes_s390.hpp","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -30,1 +30,1 @@\n-Node* PhaseLowering::lower_node(Node* n) {\n+Node* PhaseLowering::lower_node_platform(Node* n) {\n","filename":"src\/hotspot\/cpu\/s390\/c2_lowering_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,24 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n","filename":"src\/hotspot\/cpu\/x86\/c2_classes_x86.hpp","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -30,1 +30,1 @@\n-Node* PhaseLowering::lower_node(Node* n) {\n+Node* PhaseLowering::lower_node_platform(Node* n) {\n","filename":"src\/hotspot\/cpu\/x86\/c2_lowering_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -523,1 +523,0 @@\n-#include CPU_HEADER(c2_classes)\n","filename":"src\/hotspot\/share\/opto\/classes.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2468,10 +2468,0 @@\n-  \/\/ Lower nodes and match backend-specific patterns with Ideal nodes\n-  {\n-    TracePhase tp(\"lower\", &timers[_t_lower]);\n-\n-    PhaseLowering lower(&igvn);\n-    lower.lower();\n-\n-    print_method(PHASE_AFTER_LOWERING, 2);\n-  }\n-\n@@ -2490,0 +2480,10 @@\n+\n+  \/\/ Lower nodes and match backend-specific patterns with Ideal nodes.\n+  {\n+    TracePhase tp(\"lower\", &timers[_t_lower]);\n+\n+    PhaseLowering lower(&igvn);\n+    lower.lower();\n+\n+    print_method(PHASE_AFTER_LOWERING, 2);\n+  }\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -157,0 +157,1 @@\n+class PhaseLowering;\n@@ -1109,0 +1110,5 @@\n+  \/\/ Return an Idealized node only during PhaseLowering.\n+  virtual Node* LoweredIdeal(PhaseLowering* phase) {\n+    return nullptr;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2272,11 +2272,5 @@\n-Node* PhaseLowering::transform(Node* n) {\n-  \/\/ New node, make space for the node in the types table\n-  _igvn->ensure_type_or_null(n);\n-\n-  \/\/ Try to find an existing version of the same node\n-  Node* existing = _igvn->hash_find_insert(n);\n-  if (existing != nullptr) {\n-    \/\/ GVN hit, return the existing node\n-    n->destruct(_igvn);\n-    return existing;\n-  }\n+Node* PhaseLowering::apply_ideal(Node* k, bool can_reshape) {\n+  \/\/ Run the lowered Ideal method to continue doing transformations on the node, while avoiding existing transforms\n+  \/\/ that may undo the changes done during lowering.\n+  return k->LoweredIdeal(this);\n+}\n@@ -2284,4 +2278,2 @@\n-  \/\/ Record the type of the node in the types table\n-  const Type* type = n->Value(_igvn);\n-  _igvn->set_type(n, type);\n-  n->raise_bottom_type(type);\n+Node* PhaseLowering::lower_node(Node* n) {\n+  \/\/ Apply shared lowering transforms\n@@ -2289,1 +2281,2 @@\n-  return n;\n+  \/\/ Apply backend-specific lowering transforms\n+  return lower_node_platform(n);\n@@ -2292,1 +2285,0 @@\n-\n@@ -2295,1 +2287,1 @@\n-  _igvn->_worklist.ensure_empty();\n+  _worklist.ensure_empty();\n@@ -2297,1 +2289,1 @@\n-  C->identify_useful_nodes(_igvn->_worklist);\n+  C->identify_useful_nodes(_worklist);\n@@ -2299,2 +2291,2 @@\n-  while(_igvn->_worklist.size() != 0) {\n-    Node* n = _igvn->_worklist.pop();\n+  while(_worklist.size() != 0) {\n+    Node* n = _worklist.pop();\n@@ -2308,1 +2300,1 @@\n-      _igvn->replace_node(n, new_node);\n+      replace_node(n, new_node);\n@@ -2313,1 +2305,1 @@\n-  _igvn->_worklist.ensure_empty();\n+  _worklist.ensure_empty();\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":15,"deletions":23,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -427,1 +427,1 @@\n-  Node* apply_ideal(Node* i, bool can_reshape);\n+  virtual Node* apply_ideal(Node* i, bool can_reshape);\n@@ -703,2 +703,1 @@\n-class PhaseLowering : public PhaseTransform {\n-  PhaseIterGVN* _igvn;\n+class PhaseLowering : public PhaseIterGVN {\n@@ -706,1 +705,1 @@\n-  PhaseLowering(PhaseIterGVN* igvn) : PhaseTransform(Lower), _igvn(igvn) {};\n+  PhaseLowering(PhaseIterGVN* igvn) : PhaseIterGVN(igvn) {};\n@@ -708,2 +707,1 @@\n-  \/\/ GVN the given node, returning an existing version if it exists.\n-  virtual Node* transform(Node* n);\n+  virtual Node* apply_ideal(Node* i, bool can_reshape);\n@@ -712,1 +710,0 @@\n-  \/\/ Implemented by backends.\n@@ -715,0 +712,3 @@\n+  \/\/ Version of lower_node implemented by backends, called by lower_node.\n+  Node* lower_node_platform(Node* in);\n+\n@@ -717,4 +717,0 @@\n-\n-  inline PhaseIterGVN* igvn() {\n-    return _igvn;\n-  }\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -92,1 +92,0 @@\n-  flags(BEFORE_LOWERING,                \"Before Lowering\") \\\n","filename":"src\/hotspot\/share\/opto\/phasetype.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -102,1 +102,0 @@\n-    BEFORE_LOWERING(\"Before Lowering\"),\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/CompilePhase.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}