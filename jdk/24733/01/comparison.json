{"files":[{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.event.ActionListener;\n+import javax.swing.JButton;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+\n+\/*\n+ * @test\n+ * @bug 4212498\n+ * @key headful\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4212498\n+ *\/\n+\n+public class bug4212498 {\n+    static JPanel panel = new JPanel();\n+    static JComboBox comboBox = new JComboBox(new Object[]{\n+            \"Coma Berenices\",\n+            \"Triangulum\",\n+            \"Camelopardis\",\n+            \"Cassiopea\"});\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Edit the value in the text field (without using the popup)\n+            and then press the tab key. If the number doesn't increase,\n+            then test fails.\n+\n+            Also, try tabbing out without making a change. The number\n+            should NOT increase unless the user changes something.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(bug4212498::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4212498\");\n+        comboBox.setEditable(true);\n+\n+        final JLabel label = new JLabel(\"0\");\n+\n+        ActionListener actionListener =\n+                e -> label.setText(\"\" + (Integer.parseInt(label.getText()) + 1));\n+\n+        comboBox.addActionListener(actionListener);\n+\n+        panel.add(comboBox);\n+        panel.add(label);\n+        panel.add(new JButton(\"B\"));\n+\n+        frame.getContentPane().add(panel);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4212498.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4459267\n+ * @summary Tests that pressing PageUp in combo popup list doesn't cause\n+ *          stack overflow\n+ * @key headful\n+ * @run main bug4459267\n+ *\/\n+\n+public class bug4459267 {\n+    static JFrame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(250);\n+\n+            SwingUtilities.invokeAndWait(() -> createTestUI());\n+            robot.waitForIdle();\n+\n+            robot.keyPress(KeyEvent.VK_PAGE_UP);\n+            robot.keyRelease(KeyEvent.VK_PAGE_UP);\n+            robot.waitForIdle();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createTestUI() {\n+        frame = new JFrame(\"bug4459267\");\n+        JComboBox jcmb = new JComboBox();\n+        jcmb.addItem(\"JComobo1\");\n+        jcmb.addItem(\"Item2\");\n+        jcmb.addItem(\"Item3\");\n+        frame.getContentPane().add(jcmb, BorderLayout.NORTH);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4459267.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4519269\n+ * @summary Tests that DefaultKeySelectionManager doesn't throw NPE\n+ * @key headful\n+ * @run main bug4519269\n+ *\/\n+\n+public class bug4519269 {\n+    static JFrame frame;\n+    static JComboBox combo;\n+    static Point p;\n+    static Object[] data = {new CustomString(\"Item 1\"), new CustomString(\"Item 2\"),\n+            new CustomString(\"Item 3\"), new CustomString(\"Item 4\")};\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(250);\n+\n+            SwingUtilities.invokeAndWait(() -> createTestUI());\n+            robot.waitForIdle();\n+\n+            SwingUtilities.invokeAndWait (() -> p = combo.getLocationOnScreen());\n+            robot.mouseMove(p.x+5, p.y+5);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+\n+            robot.keyPress(KeyEvent.VK_SHIFT);\n+            robot.keyRelease(KeyEvent.VK_SHIFT);\n+            robot.waitForIdle();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createTestUI() {\n+        frame = new JFrame(\"bug4519269\");\n+        combo = new JComboBox(data);\n+        frame.getContentPane().add(combo);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    static class CustomString {\n+        String string;\n+        public CustomString(String s) {\n+            string = s;\n+        }\n+        public String toString() {\n+            return null;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4519269.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"}]}