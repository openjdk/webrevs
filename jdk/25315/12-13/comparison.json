{"files":[{"patch":"@@ -1562,0 +1562,19 @@\n+void SafePointNode::remove_non_debug_edges(GrowableArray<Node*>& non_debug_edges) {\n+  assert(non_debug_edges.is_empty(), \"edges not processed\");\n+  while (req() > jvms()->endoff()) {\n+    uint last = req() - 1;\n+    non_debug_edges.push(in(last));\n+    del_req(last);\n+  }\n+  assert(jvms()->endoff() == req(), \"no extra edges past debug info allowed\");\n+}\n+\n+void SafePointNode::restore_non_debug_edges(GrowableArray<Node*>& non_debug_edges) {\n+  assert(jvms()->endoff() == req(), \"no extra edges past debug info allowed\");\n+  while (non_debug_edges.is_nonempty()) {\n+    Node* non_debug_edge = non_debug_edges.pop();\n+    add_req(non_debug_edge);\n+  }\n+  assert(non_debug_edges.is_empty(), \"edges not processed\");\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -494,0 +494,3 @@\n+  void remove_non_debug_edges(GrowableArray<Node*>& non_debug_edges);\n+  void restore_non_debug_edges(GrowableArray<Node*>& non_debug_edges);\n+\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1226,0 +1226,1 @@\n+  GrowableArray<Node*> non_debug_edges_worklist;\n@@ -1232,0 +1233,2 @@\n+    sfpt->remove_non_debug_edges(non_debug_edges_worklist);\n+\n@@ -1236,0 +1239,2 @@\n+    assert(sfpt->jvms()->endoff() == sfpt->req(), \"no extra edges past debug info allowed\");\n+\n@@ -1243,0 +1248,1 @@\n+    sfpt->jvms()->set_endoff(sfpt->req());\n@@ -1257,1 +1263,1 @@\n-        return false;\n+        return false; \/\/ non-recoverable failure; recompile\n@@ -1276,0 +1282,3 @@\n+\n+    sfpt->restore_non_debug_edges(non_debug_edges_worklist);\n+\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -711,0 +711,1 @@\n+  GrowableArray<Node*> non_debug_edges_worklist;\n@@ -713,0 +714,3 @@\n+\n+    sfpt_done->remove_non_debug_edges(non_debug_edges_worklist);\n+\n@@ -714,0 +718,1 @@\n+    assert(sfpt_done->jvms()->endoff() == sfpt_done->req(), \"no extra edges past debug info allowed\");\n@@ -734,0 +739,3 @@\n+\n+    sfpt_done->restore_non_debug_edges(non_debug_edges_worklist);\n+\n@@ -739,0 +747,2 @@\n+  assert(sfpt->jvms()->endoff() == sfpt->req(), \"no extra edges past debug info allowed\");\n+\n@@ -863,2 +873,3 @@\n-bool PhaseMacroExpand::scalar_replacement(AllocateNode *alloc, GrowableArray <SafePointNode *>& safepoints) {\n-  GrowableArray <SafePointNode *> safepoints_done;\n+bool PhaseMacroExpand::scalar_replacement(AllocateNode* alloc, GrowableArray<SafePointNode*>& safepoints) {\n+  GrowableArray<SafePointNode*> safepoints_done;\n+  GrowableArray<Node*> non_debug_edges_worklist;\n@@ -871,1 +882,2 @@\n-    assert(sfpt->jvms()->endoff() == sfpt->req(), \"reachability edges not supported\");\n+\n+    sfpt->remove_non_debug_edges(non_debug_edges_worklist);\n@@ -875,0 +887,2 @@\n+    sfpt->restore_non_debug_edges(non_debug_edges_worklist);\n+\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":17,"deletions":3,"binary":false,"changes":20,"status":"modified"}]}