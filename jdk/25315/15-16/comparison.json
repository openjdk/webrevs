{"files":[{"patch":"@@ -1308,2 +1308,0 @@\n-\n-      \/\/ assert(C->_for_post_loop_igvn.length() == 0 || C->post_loop_opts_phase(), \"\");\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,2 @@\n- * doesn't play well with some optimizations C2 does.\n+ * doesn't play well with some optimizations C2 does (e.g., during loop-invariant code motion a safepoint\n+ * can become interfering once a load is hoisted).\n@@ -52,1 +53,2 @@\n- *   (0) initial set of RFs is materialized during parsing;\n+ *   (0) initial set of RFs is materialized during parsing (as a result of\n+ *       Reference.reachabilityFence intrinsification);\n@@ -54,1 +56,1 @@\n- *       moves the ones with loop-invariant referents outside loops;\n+ *       moves the ones with loop-invariant referents outside (after) loops;\n@@ -70,1 +72,1 @@\n- * ensure the referent present in their oop maps.\n+ * to ensure that the referent is present in their oop maps.\n","filename":"src\/hotspot\/share\/opto\/reachability.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}