{"files":[{"patch":"@@ -1922,1 +1922,1 @@\n-\/\/   toLong(maskAll(true))  => (-1ULL >> (64 -vlen))\n+\/\/   toLong(maskAll(true))  => (-1ULL >> (64 - vlen))\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,0 +66,20 @@\n+    @ForceInline\n+    public static void testMaskFromLong(VectorSpecies<?> species) {\n+        int vlen = species.length();\n+        long inputLong = 0L;\n+        maskFromLongKernel(species, inputLong);\n+        verifyMaskFromLong(species, inputLong, false);\n+\n+        inputLong = vlen >= 64 ? 0L : (0x1L << vlen);\n+        maskFromLongKernel(species, inputLong);\n+        verifyMaskFromLong(species, inputLong, false);\n+\n+        inputLong = -1L;\n+        maskFromLongKernel(species, inputLong);\n+        verifyMaskFromLong(species, inputLong, true);\n+\n+        inputLong = (-1L >>> (64 - vlen));\n+        maskFromLongKernel(species, inputLong);\n+        verifyMaskFromLong(species, inputLong, true);\n+    }\n+\n@@ -76,16 +96,1 @@\n-        int vlen = B_SPECIES.length();\n-        long inputLong = 0L;\n-        maskFromLongKernel(B_SPECIES, inputLong);\n-        verifyMaskFromLong(B_SPECIES, inputLong, false);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        maskFromLongKernel(B_SPECIES, inputLong);\n-        verifyMaskFromLong(B_SPECIES, inputLong, false);\n-\n-        inputLong = -1L;\n-        maskFromLongKernel(B_SPECIES, inputLong);\n-        verifyMaskFromLong(B_SPECIES, inputLong, true);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        maskFromLongKernel(B_SPECIES, inputLong);\n-        verifyMaskFromLong(B_SPECIES, inputLong, true);\n+        testMaskFromLong(B_SPECIES);\n@@ -104,16 +109,1 @@\n-        int vlen = S_SPECIES.length();\n-        long inputLong = 0L;\n-        maskFromLongKernel(S_SPECIES, inputLong);\n-        verifyMaskFromLong(S_SPECIES, inputLong, false);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        maskFromLongKernel(S_SPECIES, inputLong);\n-        verifyMaskFromLong(S_SPECIES, inputLong, false);\n-\n-        inputLong = -1L;\n-        maskFromLongKernel(S_SPECIES, inputLong);\n-        verifyMaskFromLong(S_SPECIES, inputLong, true);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        maskFromLongKernel(S_SPECIES, inputLong);\n-        verifyMaskFromLong(S_SPECIES, inputLong, true);\n+        testMaskFromLong(S_SPECIES);\n@@ -132,16 +122,1 @@\n-        int vlen = I_SPECIES.length();\n-        long inputLong = 0L;\n-        maskFromLongKernel(I_SPECIES, inputLong);\n-        verifyMaskFromLong(I_SPECIES, inputLong, false);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        maskFromLongKernel(I_SPECIES, inputLong);\n-        verifyMaskFromLong(I_SPECIES, inputLong, false);\n-\n-        inputLong = -1L;\n-        maskFromLongKernel(I_SPECIES, inputLong);\n-        verifyMaskFromLong(I_SPECIES, inputLong, true);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        maskFromLongKernel(I_SPECIES, inputLong);\n-        verifyMaskFromLong(I_SPECIES, inputLong, true);\n+        testMaskFromLong(I_SPECIES);\n@@ -160,16 +135,1 @@\n-        int vlen = L_SPECIES.length();\n-        long inputLong = 0L;\n-        maskFromLongKernel(L_SPECIES, inputLong);\n-        verifyMaskFromLong(L_SPECIES, inputLong, false);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        maskFromLongKernel(L_SPECIES, inputLong);\n-        verifyMaskFromLong(L_SPECIES, inputLong, false);\n-\n-        inputLong = -1L;\n-        maskFromLongKernel(L_SPECIES, inputLong);\n-        verifyMaskFromLong(L_SPECIES, inputLong, true);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        maskFromLongKernel(L_SPECIES, inputLong);\n-        verifyMaskFromLong(L_SPECIES, inputLong, true);\n+        testMaskFromLong(L_SPECIES);\n@@ -188,16 +148,1 @@\n-        int vlen = F_SPECIES.length();\n-        long inputLong = 0L;\n-        maskFromLongKernel(F_SPECIES, inputLong);\n-        verifyMaskFromLong(F_SPECIES, inputLong, false);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        maskFromLongKernel(F_SPECIES, inputLong);\n-        verifyMaskFromLong(F_SPECIES, inputLong, false);\n-\n-        inputLong = -1L;\n-        maskFromLongKernel(F_SPECIES, inputLong);\n-        verifyMaskFromLong(F_SPECIES, inputLong, true);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        maskFromLongKernel(F_SPECIES, inputLong);\n-        verifyMaskFromLong(F_SPECIES, inputLong, true);\n+        testMaskFromLong(F_SPECIES);\n@@ -216,16 +161,1 @@\n-        int vlen = D_SPECIES.length();\n-        long inputLong = 0L;\n-        maskFromLongKernel(D_SPECIES, inputLong);\n-        verifyMaskFromLong(D_SPECIES, inputLong, false);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        maskFromLongKernel(D_SPECIES, inputLong);\n-        verifyMaskFromLong(D_SPECIES, inputLong, false);\n-\n-        inputLong = -1L;\n-        maskFromLongKernel(D_SPECIES, inputLong);\n-        verifyMaskFromLong(D_SPECIES, inputLong, true);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        maskFromLongKernel(D_SPECIES, inputLong);\n-        verifyMaskFromLong(D_SPECIES, inputLong, true);\n+        testMaskFromLong(D_SPECIES);\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMaskFromLongTest.java","additions":26,"deletions":96,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -60,0 +60,20 @@\n+    @ForceInline\n+    public static void testMaskFromLongToLong(VectorSpecies<?> species) {\n+        int vlen = species.length();\n+        long inputLong = 0L;\n+        long got = maskFromLongToLong(species, inputLong);\n+        verifyMaskFromLongToLong(species, inputLong, got);\n+\n+        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n+        got = maskFromLongToLong(species, inputLong);\n+        verifyMaskFromLongToLong(species, inputLong, got);\n+\n+        inputLong = -1L;\n+        got = maskFromLongToLong(species, inputLong);\n+        verifyMaskFromLongToLong(species, inputLong, got);\n+\n+        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n+        got = maskFromLongToLong(species, inputLong);\n+        verifyMaskFromLongToLong(species, inputLong, got);\n+    }\n+\n@@ -73,16 +93,1 @@\n-        int vlen = B_SPECIES.length();\n-        long inputLong = 0L;\n-        long got = maskFromLongToLong(B_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(B_SPECIES, inputLong, got);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        got = maskFromLongToLong(B_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(B_SPECIES, inputLong, got);\n-\n-        inputLong = -1L;\n-        got = maskFromLongToLong(B_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(B_SPECIES, inputLong, got);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        got = maskFromLongToLong(B_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(B_SPECIES, inputLong, got);\n+        testMaskFromLongToLong(B_SPECIES);\n@@ -104,16 +109,1 @@\n-        int vlen = S_SPECIES.length();\n-        long inputLong = 0L;\n-        long got = maskFromLongToLong(S_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(S_SPECIES, inputLong, got);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        got = maskFromLongToLong(S_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(S_SPECIES, inputLong, got);\n-\n-        inputLong = -1L;\n-        got = maskFromLongToLong(S_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(S_SPECIES, inputLong, got);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        got = maskFromLongToLong(S_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(S_SPECIES, inputLong, got);\n+        testMaskFromLongToLong(S_SPECIES);\n@@ -135,16 +125,1 @@\n-        int vlen = I_SPECIES.length();\n-        long inputLong = 0L;\n-        long got = maskFromLongToLong(I_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(I_SPECIES, inputLong, got);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        got = maskFromLongToLong(I_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(I_SPECIES, inputLong, got);\n-\n-        inputLong = -1L;\n-        got = maskFromLongToLong(I_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(I_SPECIES, inputLong, got);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        got = maskFromLongToLong(I_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(I_SPECIES, inputLong, got);\n+        testMaskFromLongToLong(I_SPECIES);\n@@ -166,16 +141,1 @@\n-        int vlen = L_SPECIES.length();\n-        long inputLong = 0L;\n-        long got = maskFromLongToLong(L_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(L_SPECIES, inputLong, got);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        got = maskFromLongToLong(L_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(L_SPECIES, inputLong, got);\n-\n-        inputLong = -1L;\n-        got = maskFromLongToLong(L_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(L_SPECIES, inputLong, got);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        got = maskFromLongToLong(L_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(L_SPECIES, inputLong, got);\n+        testMaskFromLongToLong(L_SPECIES);\n@@ -197,16 +157,1 @@\n-        int vlen = F_SPECIES.length();\n-        long inputLong = 0L;\n-        long got = maskFromLongToLong(F_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(F_SPECIES, inputLong, got);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        got = maskFromLongToLong(F_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(F_SPECIES, inputLong, got);\n-\n-        inputLong = -1L;\n-        got = maskFromLongToLong(F_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(F_SPECIES, inputLong, got);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        got = maskFromLongToLong(F_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(F_SPECIES, inputLong, got);\n+        testMaskFromLongToLong(F_SPECIES);\n@@ -228,16 +173,1 @@\n-        int vlen = D_SPECIES.length();\n-        long inputLong = 0L;\n-        long got = maskFromLongToLong(D_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(D_SPECIES, inputLong, got);\n-\n-        inputLong = vlen >= 64 ? 0 : (0x1L << vlen);\n-        got = maskFromLongToLong(D_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(D_SPECIES, inputLong, got);\n-\n-        inputLong = -1L;\n-        got = maskFromLongToLong(D_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(D_SPECIES, inputLong, got);\n-\n-        inputLong = (0xFFFFFFFFFFFFFFFFL >>> (64 - vlen));\n-        got = maskFromLongToLong(D_SPECIES, inputLong);\n-        verifyMaskFromLongToLong(D_SPECIES, inputLong, got);\n+        testMaskFromLongToLong(D_SPECIES);\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMaskToLongTest.java","additions":26,"deletions":96,"binary":false,"changes":122,"status":"modified"}]}