{"files":[{"patch":"@@ -43,0 +43,2 @@\n+\/\/ It's recursive because NMT may recursively lock it when NMT has detected\n+\/\/ a memory corruption in an Arena and the VM exits.\n@@ -44,2 +46,3 @@\n-  Thread* _owner;\n-\n+  int64_t _recursions;\n+  intx _owner;\n+  static constexpr intx no_owner_sentinel = -1;\n@@ -48,1 +51,1 @@\n-    : PlatformMutex(), _owner(nullptr) {}\n+  : PlatformMutex(), _recursions(0), _owner(no_owner_sentinel) {}\n@@ -51,2 +54,4 @@\n-    Thread* t = Thread::current_or_null_safe();\n-    if (_owner == nullptr || t != _owner) {\n+    intx current = os::current_thread_id();\n+    if (current == _owner) {\n+      _recursions++;\n+    } else {\n@@ -54,1 +59,3 @@\n-      _owner = t;\n+      _owner = current;\n+      _recursions++;\n+      assert(_recursions == 1, \"should be\");\n@@ -59,2 +66,6 @@\n-    _owner = nullptr;\n-    PlatformMutex::unlock();\n+    assert(_owner == os::current_thread_id(), \"must be\");\n+    _recursions--;\n+    if (_recursions == 0) {\n+      _owner = no_owner_sentinel;\n+      PlatformMutex::unlock();\n+    }\n","filename":"src\/hotspot\/share\/memory\/arena.cpp","additions":19,"deletions":8,"binary":false,"changes":27,"status":"modified"}]}