{"files":[{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2025, Alibaba Group Holding Limited. All Rights Reserved.\n@@ -1770,0 +1771,3 @@\n+            int compressed = StringUTF16.compress(s, off, val, count, end - off);\n+            count += compressed;\n+            off += compressed;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2025, Alibaba Group Holding Limited. All Rights Reserved.\n@@ -1315,4 +1316,7 @@\n-    private static void putChars(byte[] val, int index, char[] str, int off, int end) {\n-        while (off < end) {\n-            putChar(val, index++, str[off++]);\n-        }\n+    private static void putCharsUnchecked(byte[] val, int index, char[] str, int off, int end) {\n+        Unsafe.getUnsafe().copyMemory(\n+                str,\n+                Unsafe.ARRAY_CHAR_BASE_OFFSET + ((long) off << 1),\n+                val,\n+                Unsafe.ARRAY_BYTE_BASE_OFFSET + ((long) index << 1),\n+                ((long) (end - off)) << 1);\n@@ -1493,1 +1497,2 @@\n-        putChars(val, index, ca, off, end);\n+        checkBoundsBeginEnd(off, end, ca);\n+        putCharsUnchecked(val, index, ca, off, end);\n@@ -1669,0 +1674,4 @@\n+    private static void checkBoundsBeginEnd(int begin, int end, char[] val) {\n+        String.checkBoundsBeginEnd(begin, end, val.length);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2025, Alibaba Group Holding Limited. All Rights Reserved.\n@@ -53,0 +54,1 @@\n+    private char[][] charArray22p40p31;\n@@ -66,0 +68,1 @@\n+\n@@ -70,0 +73,4 @@\n+        charArray22p40p31 = new char[str22p40p31.length][];\n+        for (int i = 0; i < str22p40p31.length; i++) {\n+            charArray22p40p31[i] = str22p40p31[i].toCharArray();\n+        }\n@@ -276,0 +283,20 @@\n+    @Benchmark\n+    public int appendWithCharArrayLatin1() {\n+        StringBuilder buf = sbLatin1;\n+        buf.delete(0, buf.length());\n+        for (char[] charArray : charArray22p40p31) {\n+            buf.append(charArray);\n+        }\n+        return buf.length();\n+    }\n+\n+    @Benchmark\n+    public int appendWithCharArrayUTF16() {\n+        StringBuilder buf = sbUtf16;\n+        buf.delete(0, buf.length());\n+        for (char[] charArray : charArray22p40p31) {\n+            buf.append(charArray);\n+        }\n+        return buf.length();\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringBuilders.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"}]}