{"files":[{"patch":"@@ -61,1 +61,1 @@\n-    private boolean birthtime_invalid;\n+    private boolean birthtime_available = true;\n@@ -167,1 +167,1 @@\n-        if (UnixNativeDispatcher.birthtimeSupported() && !birthtime_invalid) {\n+        if (UnixNativeDispatcher.birthtimeSupported() && birthtime_available) {\n@@ -170,1 +170,1 @@\n-            \/\/ return last modified when birth time not supported\n+            \/\/ return last modified when birth time unsupported or unavailable\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileAttributes.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-static jfieldID attrs_birthtime_invalid;\n+static jfieldID attrs_birthtime_available;\n@@ -336,2 +336,2 @@\n-    attrs_birthtime_invalid = (*env)->GetFieldID(env, clazz, \"birthtime_invalid\", \"Z\");\n-    CHECK_NULL_RETURN(attrs_birthtime_invalid, 0);\n+    attrs_birthtime_available = (*env)->GetFieldID(env, clazz, \"birthtime_available\", \"Z\");\n+    CHECK_NULL_RETURN(attrs_birthtime_available, 0);\n@@ -627,10 +627,11 @@\n-    (*env)->SetLongField(env, attrs, attrs_st_birthtime_sec,\n-                         (jlong)buf->stx_btime.tv_sec);\n-    (*env)->SetLongField(env, attrs, attrs_st_birthtime_nsec,\n-                         (jlong)buf->stx_btime.tv_nsec);\n-\n-    \/\/ Check mask for birth time and set flag accordingly\n-    jboolean birthtime_invalid = (buf->stx_mask & STATX_BTIME) != 0 ?\n-        JNI_FALSE : JNI_TRUE;\n-    (*env)->SetBooleanField(env, attrs, attrs_birthtime_invalid,\n-                            birthtime_invalid);\n+    (*env)->SetLongField(env, attrs, attrs_st_birthtime_sec, (jlong)buf->stx_btime.tv_sec);\n+    (*env)->SetLongField(env, attrs, attrs_st_birthtime_nsec, (jlong)buf->stx_btime.tv_nsec);\n+\n+    \/\/ Check mask for birth time and set flag accordingly. The birth time is\n+    \/\/ filled in if and only if the STATX_BTIME bit is set in the mask.\n+    \/\/ Although the statx system call might be supported by the operating\n+    \/\/ system, the birth time is not necessarily supported by the file system.\n+    jboolean birthtime_available = (buf->stx_mask & STATX_BTIME) != 0 ?\n+        JNI_TRUE : JNI_FALSE;\n+    (*env)->SetBooleanField(env, attrs, attrs_birthtime_available,\n+                            birthtime_available);\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixNativeDispatcher.c","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"}]}