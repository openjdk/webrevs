[{"commit":{"message":"* some whitespace fixes"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestCodeCacheUnloadDuringConcCycle.java"}],"sha":"348a7896ac2f32040a6af27bb41dd889212489d5"},{"commit":{"message":"8350621\n\nHi all,\n\n  please review this change to avoid CodeCache triggered GCs temporarily being ignored.\n\nIn particular, G1 does not make sure when its `collect()` method is called during a\nconcurrent cycle, that a `Remark` pause that does code unloading etc. actually occurs\nafter that request. This makes it so that some internal flag is not reset appropriately,\nstuck until the next code unloading (caused by e.g. a regular concurrent cycle being\ntriggered).\n\nTesting: tier1-5\n\nThanks,\n  Thomas"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectorState.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/gcCause.hpp"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestCodeCacheUnloadDuringConcCycle.java"}],"sha":"9240022802ea8505a581ad422ec4eaff5efb7204"}]