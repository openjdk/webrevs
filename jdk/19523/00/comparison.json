{"files":[{"patch":"@@ -1177,2 +1177,2 @@\n-                    } else if (pd instanceof BindingPattern bp) {\n-                        Set<Symbol> permittedSymbols = allPermittedSubTypes((ClassSymbol) bp.type.tsym, cs -> true);\n+                    } else if (pd instanceof BindingPattern bp && bp.type.tsym instanceof ClassSymbol clazz) {\n+                        Set<Symbol> permittedSymbols = allPermittedSubTypes(clazz, cs -> true);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8262891 8268871 8274363 8281100 8294670 8311038 8311815 8325215 8333169\n+ * @bug 8262891 8268871 8274363 8281100 8294670 8311038 8311815 8325215 8333169 8327368\n@@ -2108,0 +2108,33 @@\n+    @Test \/\/JDK-8327368\n+    public void testExpandForTypeVariables(Path base) throws Exception {\n+        doTest(base,\n+               new String[0],\n+               \"\"\"\n+               public class Test {\n+                   interface Parent { int a();}\n+\n+                   static class Child implements Parent {\n+                       public int a() {\n+                           return 1;\n+                       }\n+                   }\n+\n+                   record Rec<T, U>(T a, U b) {}\n+\n+                   private static <T extends Parent, U extends Parent> boolean test(Rec<T, U> p) {\n+                       boolean res;\n+                       switch (p) {\n+                           case Rec(Child a, var b) -> res = a.a() + b.a() == 2; \/\/line A\n+                       }\n+                       return res;\n+                   }\n+\n+                   public static void main(String argv[]) {\n+                       System.out.println(test(new Rec<>(new Child(), new Child())));\n+                   }\n+               }\n+               \"\"\",\n+               \"Test.java:14:9: compiler.err.not.exhaustive.statement\",\n+               \"1 error\");\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/Exhaustiveness.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"}]}