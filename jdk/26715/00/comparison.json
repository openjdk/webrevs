{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.awt.Rectangle;\n@@ -1055,13 +1056,1 @@\n-     * Returns the high-precision framing rectangle of the arc.  The framing\n-     * rectangle contains only the part of this {@code Arc2D} that is\n-     * in between the starting and ending angles and contains the pie\n-     * wedge, if this {@code Arc2D} has a {@code PIE} closure type.\n-     * <p>\n-     * This method differs from the\n-     * {@link RectangularShape#getBounds() getBounds} in that the\n-     * {@code getBounds} method only returns the bounds of the\n-     * enclosing ellipse of this {@code Arc2D} without considering\n-     * the starting and ending angles of this {@code Arc2D}.\n-     *\n-     * @return the {@code Rectangle2D} that represents the arc's\n-     * framing rectangle.\n+     * {@inheritDoc}\n@@ -1113,0 +1102,9 @@\n+    \/**\n+     * {@inheritDoc}\n+     * @since 1.2\n+     *\/\n+    @Override\n+    public Rectangle getBounds() {\n+        return getBounds2D().getBounds();\n+    }\n+\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/Arc2D.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4197755\n+ * @summary Verifies that Arc2D.getBounds() is similar to Arc2D.getBounds2D()\n+ *\/\n+\n+import java.awt.geom.Arc2D;\n+import java.awt.geom.Point2D;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class Arc2DGetBoundsTest {\n+    public static void main(String[] args) {\n+        \/\/ Imagine a circle that represents a compass.\n+        \/\/ This arc represents the northern \/ top quarter.\n+        Arc2D arc = new Arc2D.Double(0, 0, 1000, 1000, 45, 90, Arc2D.PIE);\n+\n+        \/\/ Create 8 pie slices, and place a dot in the center of each\n+        List<Point2D> samples = new ArrayList<>();\n+        for (int segment = 0; segment < 8; segment++) {\n+            double theta = -(segment + .5) \/ 8.0 * 2 * Math.PI;\n+            Point2D p = new Point2D.Double(\n+                    500 + 100 * Math.cos(theta),\n+                    500 + 100 * Math.sin(theta)\n+            );\n+            samples.add(p);\n+        }\n+\n+        \/\/ these assertions have never been known to fail:\n+        assertTrue(!arc.contains(samples.get(0)));\n+        assertTrue(arc.contains(samples.get(1)));\n+        assertTrue(arc.contains(samples.get(2)));\n+        assertTrue(!arc.contains(samples.get(3)));\n+        assertTrue(!arc.contains(samples.get(4)));\n+        assertTrue(!arc.contains(samples.get(5)));\n+        assertTrue(!arc.contains(samples.get(6)));\n+        assertTrue(!arc.contains(samples.get(7)));\n+\n+        assertTrue(arc.getBounds2D().contains(samples.get(0)));\n+        assertTrue(arc.getBounds2D().contains(samples.get(1)));\n+        assertTrue(arc.getBounds2D().contains(samples.get(2)));\n+        assertTrue(arc.getBounds2D().contains(samples.get(3)));\n+        assertTrue(!arc.getBounds2D().contains(samples.get(4)));\n+        assertTrue(!arc.getBounds2D().contains(samples.get(5)));\n+        assertTrue(!arc.getBounds2D().contains(samples.get(6)));\n+        assertTrue(!arc.getBounds2D().contains(samples.get(7)));\n+\n+\n+        assertTrue(arc.getBounds().contains(samples.get(0)));\n+        assertTrue(arc.getBounds().contains(samples.get(1)));\n+        assertTrue(arc.getBounds().contains(samples.get(2)));\n+        assertTrue(arc.getBounds().contains(samples.get(3)));\n+\n+        \/\/ these are the assertions that failed before resolving 4197755\n+        assertTrue(!arc.getBounds().contains(samples.get(4)));\n+        assertTrue(!arc.getBounds().contains(samples.get(5)));\n+        assertTrue(!arc.getBounds().contains(samples.get(6)));\n+        assertTrue(!arc.getBounds().contains(samples.get(7)));\n+    }\n+\n+    private static void assertTrue(boolean b) {\n+        if (!b)\n+            throw new Error();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/geom\/Arc2D\/Arc2DGetBoundsTest.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}