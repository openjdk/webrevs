{"files":[{"patch":"@@ -259,1 +259,3 @@\n-    return freeze_internal<SelfT, false>(thread, sp);\n+    freeze_result res = freeze_internal<SelfT, false>(thread, sp);\n+    JFR_ONLY(assert((res == freeze_ok) || res == thread->last_freeze_fail_result(), \"freeze failure not set\"));\n+    return res;\n@@ -263,1 +265,3 @@\n-    return freeze_internal<SelfT, true>(thread, sp);\n+    freeze_result res = freeze_internal<SelfT, true>(thread, sp);\n+    JFR_ONLY(assert((res == freeze_ok) || res == thread->last_freeze_fail_result(), \"freeze failure not set\"));\n+    return res;\n@@ -1680,1 +1684,1 @@\n-static freeze_result preempt_epilog(ContinuationWrapper& cont, freeze_result res, frame& old_last_frame) {\n+static freeze_result preempt_epilog(JavaThread* thread, ContinuationWrapper& cont, freeze_result res, frame& old_last_frame) {\n@@ -1682,0 +1686,1 @@\n+    JFR_ONLY(thread->set_last_freeze_fail_result(res);)\n@@ -1725,0 +1730,1 @@\n+    JFR_ONLY(current->set_last_freeze_fail_result(res);)\n@@ -1741,1 +1747,1 @@\n-    return !preempt ? freeze_epilog(cont) : preempt_epilog(cont, freeze_ok, freeze.last_frame());\n+    return !preempt ? freeze_epilog(cont) : preempt_epilog(current, cont, freeze_ok, freeze.last_frame());\n@@ -1751,1 +1757,1 @@\n-    preempt_epilog(cont, res, freeze.last_frame());\n+    preempt_epilog(current, cont, res, freeze.last_frame());\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -521,0 +521,4 @@\n+#if INCLUDE_JFR\n+  _last_freeze_fail_result(freeze_ok),\n+#endif\n+\n@@ -2364,1 +2368,1 @@\n-#endif\n\\ No newline at end of file\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}