{"files":[{"patch":"@@ -1795,1 +1795,1 @@\n-    default:                assert(false, \"wrong opcode\");\n+    default:                assert(false, \"%s\", NodeClassNames[opcode]);\n@@ -1855,1 +1855,1 @@\n-    default:                assert(false, \"wrong opcode\");\n+    default:                assert(false, \"%s\", NodeClassNames[opcode]);\n@@ -1891,1 +1891,1 @@\n-    default: assert(false, \"wrong opcode\");\n+    default: assert(false, \"%s\", NodeClassNames[opcode]);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -5155,2 +5155,2 @@\n-  \/\/ Non-strictly ordered floating-point add reduction for doubles. This rule is\n-  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add reduction).\n+  \/\/ Non-strictly ordered floating-point add\/mul reduction for floats. This rule is\n+  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add\/mul reduction).\n@@ -5172,2 +5172,2 @@\n-  \/\/ Non-strictly ordered floating-point add reduction for doubles. This rule is\n-  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add reduction).\n+  \/\/ Non-strictly ordered floating-point add\/mul reduction for floats. This rule is\n+  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add\/mul reduction).\n@@ -5189,2 +5189,2 @@\n-  \/\/ Non-strictly ordered floating-point add reduction for doubles. This rule is\n-  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add reduction).\n+  \/\/ Non-strictly ordered floating-point add\/mul reduction for floats. This rule is\n+  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add\/mul reduction).\n@@ -5206,2 +5206,2 @@\n-  \/\/ Non-strictly ordered floating-point add reduction for doubles. This rule is\n-  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add reduction).\n+  \/\/ Non-strictly ordered floating-point add\/mul reduction for floats. This rule is\n+  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add\/mul reduction).\n@@ -5267,2 +5267,2 @@\n-  \/\/ Non-strictly ordered floating-point add reduction for doubles. This rule is\n-  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add reduction).\n+  \/\/ Non-strictly ordered floating-point add\/mul reduction for doubles. This rule is\n+  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add\/mul reduction).\n@@ -5284,2 +5284,2 @@\n-  \/\/ Non-strictly ordered floating-point add reduction for doubles. This rule is\n-  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add reduction).\n+  \/\/ Non-strictly ordered floating-point add\/mul reduction for doubles. This rule is\n+  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add\/mul reduction).\n@@ -5301,2 +5301,2 @@\n-  \/\/ Non-strictly ordered floating-point add reduction for doubles. This rule is\n-  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add reduction).\n+  \/\/ Non-strictly ordered floating-point add\/mul reduction for doubles. This rule is\n+  \/\/ intended for the VectorAPI (which allows for non-strictly ordered add\/mul reduction).\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)100.0;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)50.0;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)100.0;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)50.0;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)100.0;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)50.0;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)100.0;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)50.0;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)100.0;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)50.0;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)100.0;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)50.0;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)100.0;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)50.0;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)100.0;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)50.0;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)100.0;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)50.0;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)100.0;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)50.0;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-    private static final $type$ RELATIVE_ROUNDING_ERROR_FACTOR_MUL = ($type$)100.0;\n+    private static final $type$ RELATIVE_ROUNDING_ERROR_FACTOR_MUL = ($type$)50.0;\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}