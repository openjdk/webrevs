{"files":[{"patch":"@@ -67,1 +67,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_ADD = (double)0.000001;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_ADD = (double)10.0;\n@@ -70,1 +70,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_MUL = (double)0.00001;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)100.0;\n@@ -135,1 +135,1 @@\n-                                            double relativeError) {\n+                                            double relativeErrorFactor) {\n@@ -138,1 +138,1 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError));\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor);\n@@ -140,1 +140,1 @@\n-                Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError));\n+                Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor);\n@@ -143,2 +143,2 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError), \"Final result is incorrect!\");\n-            Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError), \"at index #\" + i);\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor, \"Final result is incorrect!\");\n+            Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor, \"at index #\" + i);\n@@ -2200,1 +2200,1 @@\n-                Double128VectorTests::ADDReduce, Double128VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_ADD);\n+                Double128VectorTests::ADDReduce, Double128VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2246,1 +2246,1 @@\n-                Double128VectorTests::ADDReduceMasked, Double128VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_ADD);\n+                Double128VectorTests::ADDReduceMasked, Double128VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2289,1 +2289,1 @@\n-                Double128VectorTests::MULReduce, Double128VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_MUL);\n+                Double128VectorTests::MULReduce, Double128VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n@@ -2335,1 +2335,1 @@\n-                Double128VectorTests::MULReduceMasked, Double128VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_MUL);\n+                Double128VectorTests::MULReduceMasked, Double128VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_ADD = (double)0.000001;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_ADD = (double)10.0;\n@@ -70,1 +70,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_MUL = (double)0.00001;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)100.0;\n@@ -135,1 +135,1 @@\n-                                            double relativeError) {\n+                                            double relativeErrorFactor) {\n@@ -138,1 +138,1 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError));\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor);\n@@ -140,1 +140,1 @@\n-                Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError));\n+                Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor);\n@@ -143,2 +143,2 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError), \"Final result is incorrect!\");\n-            Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError), \"at index #\" + i);\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor, \"Final result is incorrect!\");\n+            Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor, \"at index #\" + i);\n@@ -2200,1 +2200,1 @@\n-                Double256VectorTests::ADDReduce, Double256VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_ADD);\n+                Double256VectorTests::ADDReduce, Double256VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2246,1 +2246,1 @@\n-                Double256VectorTests::ADDReduceMasked, Double256VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_ADD);\n+                Double256VectorTests::ADDReduceMasked, Double256VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2289,1 +2289,1 @@\n-                Double256VectorTests::MULReduce, Double256VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_MUL);\n+                Double256VectorTests::MULReduce, Double256VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n@@ -2335,1 +2335,1 @@\n-                Double256VectorTests::MULReduceMasked, Double256VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_MUL);\n+                Double256VectorTests::MULReduceMasked, Double256VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_ADD = (double)0.000001;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_ADD = (double)10.0;\n@@ -70,1 +70,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_MUL = (double)0.00001;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)100.0;\n@@ -135,1 +135,1 @@\n-                                            double relativeError) {\n+                                            double relativeErrorFactor) {\n@@ -138,1 +138,1 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError));\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor);\n@@ -140,1 +140,1 @@\n-                Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError));\n+                Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor);\n@@ -143,2 +143,2 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError), \"Final result is incorrect!\");\n-            Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError), \"at index #\" + i);\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor, \"Final result is incorrect!\");\n+            Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor, \"at index #\" + i);\n@@ -2200,1 +2200,1 @@\n-                Double512VectorTests::ADDReduce, Double512VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_ADD);\n+                Double512VectorTests::ADDReduce, Double512VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2246,1 +2246,1 @@\n-                Double512VectorTests::ADDReduceMasked, Double512VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_ADD);\n+                Double512VectorTests::ADDReduceMasked, Double512VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2289,1 +2289,1 @@\n-                Double512VectorTests::MULReduce, Double512VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_MUL);\n+                Double512VectorTests::MULReduce, Double512VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n@@ -2335,1 +2335,1 @@\n-                Double512VectorTests::MULReduceMasked, Double512VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_MUL);\n+                Double512VectorTests::MULReduceMasked, Double512VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_ADD = (double)0.000001;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_ADD = (double)10.0;\n@@ -70,1 +70,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_MUL = (double)0.00001;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)100.0;\n@@ -135,1 +135,1 @@\n-                                            double relativeError) {\n+                                            double relativeErrorFactor) {\n@@ -138,1 +138,1 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError));\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor);\n@@ -140,1 +140,1 @@\n-                Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError));\n+                Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor);\n@@ -143,2 +143,2 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError), \"Final result is incorrect!\");\n-            Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError), \"at index #\" + i);\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor, \"Final result is incorrect!\");\n+            Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor, \"at index #\" + i);\n@@ -2200,1 +2200,1 @@\n-                Double64VectorTests::ADDReduce, Double64VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_ADD);\n+                Double64VectorTests::ADDReduce, Double64VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2246,1 +2246,1 @@\n-                Double64VectorTests::ADDReduceMasked, Double64VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_ADD);\n+                Double64VectorTests::ADDReduceMasked, Double64VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2289,1 +2289,1 @@\n-                Double64VectorTests::MULReduce, Double64VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_MUL);\n+                Double64VectorTests::MULReduce, Double64VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n@@ -2335,1 +2335,1 @@\n-                Double64VectorTests::MULReduceMasked, Double64VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_MUL);\n+                Double64VectorTests::MULReduceMasked, Double64VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_ADD = (double)0.000001;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_ADD = (double)10.0;\n@@ -75,1 +75,1 @@\n-    private static final double RELATIVE_ROUNDING_ERROR_MUL = (double)0.00001;\n+    private static final double RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (double)100.0;\n@@ -140,1 +140,1 @@\n-                                            double relativeError) {\n+                                            double relativeErrorFactor) {\n@@ -143,1 +143,1 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError));\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor);\n@@ -145,1 +145,1 @@\n-                Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError));\n+                Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor);\n@@ -148,2 +148,2 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError), \"Final result is incorrect!\");\n-            Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError), \"at index #\" + i);\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor, \"Final result is incorrect!\");\n+            Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor, \"at index #\" + i);\n@@ -2205,1 +2205,1 @@\n-                DoubleMaxVectorTests::ADDReduce, DoubleMaxVectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_ADD);\n+                DoubleMaxVectorTests::ADDReduce, DoubleMaxVectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2251,1 +2251,1 @@\n-                DoubleMaxVectorTests::ADDReduceMasked, DoubleMaxVectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_ADD);\n+                DoubleMaxVectorTests::ADDReduceMasked, DoubleMaxVectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2294,1 +2294,1 @@\n-                DoubleMaxVectorTests::MULReduce, DoubleMaxVectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_MUL);\n+                DoubleMaxVectorTests::MULReduce, DoubleMaxVectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n@@ -2340,1 +2340,1 @@\n-                DoubleMaxVectorTests::MULReduceMasked, DoubleMaxVectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_MUL);\n+                DoubleMaxVectorTests::MULReduceMasked, DoubleMaxVectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_ADD = (float)0.000001;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_ADD = (float)10.0;\n@@ -70,1 +70,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_MUL = (float)0.00001;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)100.0;\n@@ -135,1 +135,1 @@\n-                                            float relativeError) {\n+                                            float relativeErrorFactor) {\n@@ -138,1 +138,1 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError));\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor);\n@@ -140,1 +140,1 @@\n-                Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError));\n+                Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor);\n@@ -143,2 +143,2 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError), \"Final result is incorrect!\");\n-            Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError), \"at index #\" + i);\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor, \"Final result is incorrect!\");\n+            Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor, \"at index #\" + i);\n@@ -2211,1 +2211,1 @@\n-                Float128VectorTests::ADDReduce, Float128VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_ADD);\n+                Float128VectorTests::ADDReduce, Float128VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2257,1 +2257,1 @@\n-                Float128VectorTests::ADDReduceMasked, Float128VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_ADD);\n+                Float128VectorTests::ADDReduceMasked, Float128VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2300,1 +2300,1 @@\n-                Float128VectorTests::MULReduce, Float128VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_MUL);\n+                Float128VectorTests::MULReduce, Float128VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n@@ -2346,1 +2346,1 @@\n-                Float128VectorTests::MULReduceMasked, Float128VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_MUL);\n+                Float128VectorTests::MULReduceMasked, Float128VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_ADD = (float)0.000001;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_ADD = (float)10.0;\n@@ -70,1 +70,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_MUL = (float)0.00001;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)100.0;\n@@ -135,1 +135,1 @@\n-                                            float relativeError) {\n+                                            float relativeErrorFactor) {\n@@ -138,1 +138,1 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError));\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor);\n@@ -140,1 +140,1 @@\n-                Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError));\n+                Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor);\n@@ -143,2 +143,2 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError), \"Final result is incorrect!\");\n-            Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError), \"at index #\" + i);\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor, \"Final result is incorrect!\");\n+            Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor, \"at index #\" + i);\n@@ -2211,1 +2211,1 @@\n-                Float256VectorTests::ADDReduce, Float256VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_ADD);\n+                Float256VectorTests::ADDReduce, Float256VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2257,1 +2257,1 @@\n-                Float256VectorTests::ADDReduceMasked, Float256VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_ADD);\n+                Float256VectorTests::ADDReduceMasked, Float256VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2300,1 +2300,1 @@\n-                Float256VectorTests::MULReduce, Float256VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_MUL);\n+                Float256VectorTests::MULReduce, Float256VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n@@ -2346,1 +2346,1 @@\n-                Float256VectorTests::MULReduceMasked, Float256VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_MUL);\n+                Float256VectorTests::MULReduceMasked, Float256VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_ADD = (float)0.000001;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_ADD = (float)10.0;\n@@ -70,1 +70,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_MUL = (float)0.00001;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)100.0;\n@@ -135,1 +135,1 @@\n-                                            float relativeError) {\n+                                            float relativeErrorFactor) {\n@@ -138,1 +138,1 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError));\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor);\n@@ -140,1 +140,1 @@\n-                Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError));\n+                Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor);\n@@ -143,2 +143,2 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError), \"Final result is incorrect!\");\n-            Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError), \"at index #\" + i);\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor, \"Final result is incorrect!\");\n+            Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor, \"at index #\" + i);\n@@ -2211,1 +2211,1 @@\n-                Float512VectorTests::ADDReduce, Float512VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_ADD);\n+                Float512VectorTests::ADDReduce, Float512VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2257,1 +2257,1 @@\n-                Float512VectorTests::ADDReduceMasked, Float512VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_ADD);\n+                Float512VectorTests::ADDReduceMasked, Float512VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2300,1 +2300,1 @@\n-                Float512VectorTests::MULReduce, Float512VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_MUL);\n+                Float512VectorTests::MULReduce, Float512VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n@@ -2346,1 +2346,1 @@\n-                Float512VectorTests::MULReduceMasked, Float512VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_MUL);\n+                Float512VectorTests::MULReduceMasked, Float512VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_ADD = (float)0.000001;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_ADD = (float)10.0;\n@@ -70,1 +70,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_MUL = (float)0.00001;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)100.0;\n@@ -135,1 +135,1 @@\n-                                            float relativeError) {\n+                                            float relativeErrorFactor) {\n@@ -138,1 +138,1 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError));\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor);\n@@ -140,1 +140,1 @@\n-                Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError));\n+                Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor);\n@@ -143,2 +143,2 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError), \"Final result is incorrect!\");\n-            Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError), \"at index #\" + i);\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor, \"Final result is incorrect!\");\n+            Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor, \"at index #\" + i);\n@@ -2211,1 +2211,1 @@\n-                Float64VectorTests::ADDReduce, Float64VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_ADD);\n+                Float64VectorTests::ADDReduce, Float64VectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2257,1 +2257,1 @@\n-                Float64VectorTests::ADDReduceMasked, Float64VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_ADD);\n+                Float64VectorTests::ADDReduceMasked, Float64VectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2300,1 +2300,1 @@\n-                Float64VectorTests::MULReduce, Float64VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_MUL);\n+                Float64VectorTests::MULReduce, Float64VectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n@@ -2346,1 +2346,1 @@\n-                Float64VectorTests::MULReduceMasked, Float64VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_MUL);\n+                Float64VectorTests::MULReduceMasked, Float64VectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_ADD = (float)0.000001;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_ADD = (float)10.0;\n@@ -75,1 +75,1 @@\n-    private static final float RELATIVE_ROUNDING_ERROR_MUL = (float)0.00001;\n+    private static final float RELATIVE_ROUNDING_ERROR_FACTOR_MUL = (float)100.0;\n@@ -140,1 +140,1 @@\n-                                            float relativeError) {\n+                                            float relativeErrorFactor) {\n@@ -143,1 +143,1 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError));\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor);\n@@ -145,1 +145,1 @@\n-                Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError));\n+                Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor);\n@@ -148,2 +148,2 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError), \"Final result is incorrect!\");\n-            Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError), \"at index #\" + i);\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor, \"Final result is incorrect!\");\n+            Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor, \"at index #\" + i);\n@@ -2216,1 +2216,1 @@\n-                FloatMaxVectorTests::ADDReduce, FloatMaxVectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_ADD);\n+                FloatMaxVectorTests::ADDReduce, FloatMaxVectorTests::ADDReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2262,1 +2262,1 @@\n-                FloatMaxVectorTests::ADDReduceMasked, FloatMaxVectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_ADD);\n+                FloatMaxVectorTests::ADDReduceMasked, FloatMaxVectorTests::ADDReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_ADD);\n@@ -2305,1 +2305,1 @@\n-                FloatMaxVectorTests::MULReduce, FloatMaxVectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_MUL);\n+                FloatMaxVectorTests::MULReduce, FloatMaxVectorTests::MULReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n@@ -2351,1 +2351,1 @@\n-                FloatMaxVectorTests::MULReduceMasked, FloatMaxVectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_MUL);\n+                FloatMaxVectorTests::MULReduceMasked, FloatMaxVectorTests::MULReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_MUL);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorTests.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/jdk\/incubator\/vector\/gen-template.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n-                $vectorteststype$::[[TEST]]ReduceMasked, $vectorteststype$::[[TEST]]ReduceAllMasked, RELATIVE_ROUNDING_ERROR_[[TEST]]);\n+                $vectorteststype$::[[TEST]]ReduceMasked, $vectorteststype$::[[TEST]]ReduceAllMasked, RELATIVE_ROUNDING_ERROR_FACTOR_[[TEST]]);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Masked-op.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n-                $vectorteststype$::[[TEST]]Reduce, $vectorteststype$::[[TEST]]ReduceAll, RELATIVE_ROUNDING_ERROR_[[TEST]]);\n+                $vectorteststype$::[[TEST]]Reduce, $vectorteststype$::[[TEST]]ReduceAll, RELATIVE_ROUNDING_ERROR_FACTOR_[[TEST]]);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-op.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-    private static final $type$ RELATIVE_ROUNDING_ERROR_ADD = ($type$)0.000001;\n+    private static final $type$ RELATIVE_ROUNDING_ERROR_FACTOR_ADD = ($type$)10.0;\n@@ -103,1 +103,1 @@\n-    private static final $type$ RELATIVE_ROUNDING_ERROR_MUL = ($type$)0.00001;\n+    private static final $type$ RELATIVE_ROUNDING_ERROR_FACTOR_MUL = ($type$)100.0;\n@@ -183,1 +183,1 @@\n-                                            $type$ relativeError) {\n+                                            $type$ relativeErrorFactor) {\n@@ -186,1 +186,1 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError));\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor);\n@@ -188,1 +188,1 @@\n-                Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError));\n+                Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor);\n@@ -191,2 +191,2 @@\n-            Assert.assertEquals(rc, fa.apply(a), Math.abs(rc * relativeError), \"Final result is incorrect!\");\n-            Assert.assertEquals(r[i], f.apply(a, i), Math.abs(r[i] * relativeError), \"at index #\" + i);\n+            Assert.assertEquals(rc, fa.apply(a), Math.ulp(rc) * relativeErrorFactor, \"Final result is incorrect!\");\n+            Assert.assertEquals(r[i], f.apply(a, i), Math.ulp(r[i]) * relativeErrorFactor, \"at index #\" + i);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}