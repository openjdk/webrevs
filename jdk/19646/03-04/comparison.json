{"files":[{"patch":"@@ -70,1 +70,1 @@\n-  product(bool, StressBailout, false, DIAGNOSTIC,                           \\\n+  develop(bool, StressBailout, false,                                       \\\n@@ -73,1 +73,1 @@\n-  product(uint, StressBailoutProbability, 100000, DIAGNOSTIC,               \\\n+  develop(uint, StressBailoutProbability, 100000,                           \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1131,1 +1131,1 @@\n-  if (failing(true))\n+  if (failing(DEBUG_ONLY(true)))\n@@ -4433,1 +4433,1 @@\n-  if (_compile->failing(true)) return; \/\/ timing code, not stressing bailouts.\n+  if (_compile->failing(DEBUG_ONLY(true))) return; \/\/ timing code, not stressing bailouts.\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -841,1 +841,1 @@\n-  bool failing(bool no_stress_bailout=false) {\n+  bool failing(DEBUG_ONLY(bool no_stress_bailout=false)) {\n@@ -846,1 +846,1 @@\n-    \/\/ Disable for PhaseIdealLoop verification\n+    \/\/ Disable stress code for PhaseIdealLoop verification\n@@ -850,1 +850,0 @@\n-#endif\n@@ -854,0 +853,1 @@\n+#endif\n@@ -857,0 +857,1 @@\n+#ifdef ASSERT\n@@ -858,1 +859,0 @@\n-    assert(0 < invprob, \"domain error\");\n@@ -870,0 +870,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -343,1 +343,1 @@\n-  if (failing(true))  return;  \/\/ dying anyway...\n+  if (failing(DEBUG_ONLY(true))) return;  \/\/ dying anyway...\n@@ -449,1 +449,1 @@\n-  if (failing(true)) { stop(); return top(); }\n+  if (failing(DEBUG_ONLY(true))) { stop(); return top(); }\n@@ -2059,1 +2059,1 @@\n-  if (failing(true))  stop();\n+  if (failing(DEBUG_ONLY(true)))  stop();\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-  bool failing(bool no_stress_bailout=false) const { return C->failing(no_stress_bailout); }\n+  bool failing(DEBUG_ONLY(bool no_stress_bailout=false)) const { return C->failing(DEBUG_ONLY(no_stress_bailout)); }\n","filename":"src\/hotspot\/share\/opto\/graphKit.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4939,1 +4939,1 @@\n-  if (C->failing(true)) return;\n+  if (C->failing(DEBUG_ONLY(true))) return;\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -429,1 +429,1 @@\n-  bool failing()                { return C->failing(true); } \/\/ might have cascading effects, not stressing bailouts for now.\n+  bool failing()                { return C->failing(DEBUG_ONLY(true)); } \/\/ might have cascading effects, not stressing bailouts for now.\n","filename":"src\/hotspot\/share\/opto\/parse.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * @requires vm.compiler2.enabled\n+ * @requires vm.debug == true & vm.compiler2.enabled\n@@ -45,2 +45,1 @@\n-        String[] procArgs = {\"-Xcomp\", \"-XX:-TieredCompilation\",\n-                             \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+StressBailout\",\n+        String[] procArgs = {\"-Xcomp\", \"-XX:-TieredCompilation\", \"-XX:+StressBailout\",\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestStressBailout.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}