{"files":[{"patch":"@@ -2118,1 +2118,1 @@\n-      assert(!failing(true) || failure_is_artificial(), \"inconsistent\");\n+      assert(!failing_internal() || failure_is_artificial(), \"inconsistent\");\n@@ -2161,1 +2161,1 @@\n-      assert(!failing(true) || failure_is_artificial(), \"inconsistent\");\n+      assert(!failing_internal() || failure_is_artificial(), \"inconsistent\");\n@@ -4375,1 +4375,1 @@\n-  if (_compile->failing(DEBUG_ONLY(true))) return; \/\/ timing code, not stressing bailouts.\n+  if (_compile->failing_internal()) return; \/\/ timing code, not stressing bailouts.\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -792,1 +792,1 @@\n-  bool       phase_verify_ideal_loop() { return _phase_verify_ideal_loop; }\n+  bool       phase_verify_ideal_loop() const { return _phase_verify_ideal_loop; }\n@@ -838,1 +838,1 @@\n-  bool failing(DEBUG_ONLY(bool no_stress_bailout = false)) {\n+  bool failing() {\n@@ -843,1 +843,1 @@\n-    \/\/ Disable stress code for PhaseIdealLoop verification\n+    \/\/ Disable stress code for PhaseIdealLoop verification (would have cascading effects).\n@@ -847,1 +847,1 @@\n-    if (StressBailout && !no_stress_bailout) {\n+    if (StressBailout) {\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -343,1 +343,1 @@\n-  if (failing(DEBUG_ONLY(true))) return;  \/\/ dying anyway...\n+  if (failing_internal()) return;  \/\/ dying anyway...\n@@ -449,1 +449,1 @@\n-  if (failing(DEBUG_ONLY(true))) { stop(); return top(); }\n+  if (failing_internal()) { stop(); return top(); }\n@@ -2059,1 +2059,1 @@\n-  if (failing(DEBUG_ONLY(true)))  stop();\n+  if (failing_internal())  stop();\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-    assert(failing(true) || !has_exceptions(),\n+    assert(failing_internal() || !has_exceptions(),\n@@ -184,1 +184,2 @@\n-  bool failing(DEBUG_ONLY(bool no_stress_bailout = false)) const { return C->failing(DEBUG_ONLY(no_stress_bailout)); }\n+  bool failing() const { return C->failing(); }\n+  bool failing_internal() const { return C->failing_internal(); }\n","filename":"src\/hotspot\/share\/opto\/graphKit.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -4938,1 +4938,1 @@\n-  if (C->failing(DEBUG_ONLY(true))) return;\n+  if (C->failing_internal()) return;\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2689,1 +2689,1 @@\n-  assert(!C->failing(true) || C->failure_is_artificial(), \"already failing.\");\n+  assert(!C->failing_internal() || C->failure_is_artificial(), \"already failing.\");\n@@ -2860,1 +2860,1 @@\n-  assert(!C->failing(true) || C->failure_is_artificial(), \"sanity\");\n+  assert(!C->failing_internal() || C->failure_is_artificial(), \"sanity\");\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1718,1 +1718,1 @@\n-      assert(!C->failing(true) || C->failure_is_artificial(), \"Should not reach here if failing.\");\n+      assert(!C->failing_internal() || C->failure_is_artificial(), \"Should not reach here if failing.\");\n@@ -3394,1 +3394,1 @@\n-  assert (!C->failing(true) || C->failure_is_artificial(), \"Must not have pending failure. Reason is: %s\", C->failure_reason());\n+  assert (!C->failing_internal() || C->failure_is_artificial(), \"Must not have pending failure. Reason is: %s\", C->failure_reason());\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -429,1 +429,1 @@\n-  bool failing()                { return C->failing(DEBUG_ONLY(true)); } \/\/ might have cascading effects, not stressing bailouts for now.\n+  bool failing()                { return C->failing_internal(); } \/\/ might have cascading effects, not stressing bailouts for now.\n","filename":"src\/hotspot\/share\/opto\/parse.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}