{"files":[{"patch":"@@ -1461,5 +1461,3 @@\n-void C2_MacroAssembler::arrays_hashcode(Register ary, Register cnt,\n-                                        Register result, Register tmp1, Register tmp2,\n-                                        Register tmp3, Register tmp4, Register tmp5,\n-                                        Register tmp6,\n-                                        BasicType eltype)\n+void C2_MacroAssembler::arrays_hashcode(Register ary, Register cnt, Register result,\n+                                        Register tmp1, Register tmp2, Register tmp3,\n+                                        Register tmp4, BasicType eltype)\n@@ -1467,0 +1465,2 @@\n+  const Register tmp5 = t0;\n+  const Register tmp6 = t1;\n@@ -1470,0 +1470,1 @@\n+  const int chunks_end_shift = exact_log2(elsize);\n@@ -1482,3 +1483,5 @@\n-  const Register pow31_3_4 = tmp6;\n-  const Register pow31_2   = tmp5;\n-  const Register chunk     = tmp4;\n+  const Register pow31_3_4 = tmp1;\n+  const Register pow31_3   = tmp2;\n+  const Register pow31_2   = tmp3;\n+  const Register chunks    = tmp4;\n+  const Register chunks_end = chunks;\n@@ -1492,2 +1495,1 @@\n-  lw(pow31_2, ExternalAddress(StubRoutines::riscv::arrays_hashcode_powers_of_31()\n-                              + 2 * sizeof(jint))); \/\/ [31^^2]\n+  mv(pow31_2, 961); \/\/ [31^^2]\n@@ -1495,3 +1497,6 @@\n-  andi(chunk, cnt, ~(stride-1));\n-  beqz(chunk, TAIL);\n-  andi(cnt, cnt, stride-1);\n+  andi(chunks, cnt, ~(stride-1));\n+  beqz(chunks, TAIL);\n+\n+  slli(chunks_end, chunks, chunks_end_shift);\n+  add(chunks_end, ary, chunks_end);\n+  andi(cnt, cnt, stride-1); \/\/ don't forget about tail!\n@@ -1511,0 +1516,1 @@\n+  srli(pow31_3, pow31_3_4, 32);\n@@ -1514,13 +1520,12 @@\n-  DO_ELEMENT_LOAD(tmp1, 0);\n-  srli(tmp2, pow31_3_4, 32);\n-  mulw(tmp1, tmp1, tmp2);          \/\/ 31^^3 * ary[i+0]\n-  addw(result, result, tmp1);\n-  DO_ELEMENT_LOAD(tmp3, 1);\n-  mulw(tmp3, tmp3, pow31_2);       \/\/ 31^^2 * ary[i+1]\n-  addw(result, result, tmp3);\n-  DO_ELEMENT_LOAD(tmp1, 2);\n-  slli(tmp2, tmp1, 5);             \/\/ optimize 31^^1 * ary[i+2]\n-  subw(tmp1, tmp2, tmp1);          \/\/ with ary[i+2]<<5 - ary[i+2]\n-  addw(result, result, tmp1);\n-  DO_ELEMENT_LOAD(tmp3, 3);\n-  addw(result, result, tmp3);      \/\/ 31^^4 * h + 31^^3 * ary[i+0] + 31^^2 * ary[i+1]\n+  DO_ELEMENT_LOAD(tmp5, 0);\n+  mulw(tmp5, tmp5, pow31_3);       \/\/ 31^^3 * ary[i+0]\n+  addw(result, result, tmp5);\n+  DO_ELEMENT_LOAD(tmp5, 1);\n+  mulw(tmp5, tmp5, pow31_2);       \/\/ 31^^2 * ary[i+1]\n+  addw(result, result, tmp5);\n+  DO_ELEMENT_LOAD(tmp5, 2);\n+  slli(tmp6, tmp5, 5);             \/\/ optimize 31^^1 * ary[i+2]\n+  subw(tmp5, tmp6, tmp5);          \/\/ with ary[i+2]<<5 - ary[i+2]\n+  addw(result, result, tmp5);\n+  DO_ELEMENT_LOAD(tmp5, 3);\n+  addw(result, result, tmp5);      \/\/ 31^^4 * h + 31^^3 * ary[i+0] + 31^^2 * ary[i+1]\n@@ -1528,1 +1533,0 @@\n-  subw(chunk, chunk, stride);\n@@ -1530,1 +1534,1 @@\n-  bnez(chunk, WIDE_LOOP);\n+  bne(ary, chunks_end, WIDE_LOOP);\n@@ -1534,0 +1538,2 @@\n+  slli(chunks_end, cnt, chunks_end_shift);\n+  add(chunks_end, ary, chunks_end);\n@@ -1536,7 +1542,6 @@\n-  DO_ELEMENT_LOAD(tmp1, 0)\n-  slli(tmp2, result, 5);           \/\/ optimize 31 * result\n-  subw(result, tmp2, result);      \/\/ with result<<5 - result\n-  addw(result, result, tmp1);\n-  subw(cnt, cnt, 1);\n-  add(ary, ary, elsize);\n-  bnez(cnt, TAIL_LOOP);\n+  DO_ELEMENT_LOAD(tmp5, 0)\n+  slli(tmp6, result, 5);           \/\/ optimize 31 * result\n+  subw(result, tmp6, result);      \/\/ with result<<5 - result\n+  addw(result, result, tmp5);\n+  addi(ary, ary, elsize);\n+  bne(ary, chunks_end, TAIL_LOOP);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":40,"deletions":35,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -82,3 +82,2 @@\n-                       Register tmp1, Register tmp2, Register tmp3,\n-                       Register tmp4, Register tmp5, Register tmp6,\n-                       BasicType eltype);\n+                       Register tmp1, Register tmp2,\n+                       Register tmp3, Register tmp4, BasicType eltype);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -10307,2 +10307,2 @@\n-                         iRegINoSp tmp1, iRegINoSp tmp2, iRegINoSp tmp3, iRegINoSp tmp4,\n-                         iRegINoSp tmp5, iRegINoSp tmp6, rFlagsReg cr)\n+                         iRegINoSp tmp1, iRegINoSp tmp2,\n+                         iRegINoSp tmp3, iRegINoSp tmp4, rFlagsReg cr)\n@@ -10311,1 +10311,1 @@\n-  effect(TEMP tmp1, TEMP tmp2, TEMP tmp3, TEMP tmp4, TEMP tmp5, TEMP tmp6,\n+  effect(TEMP tmp1, TEMP tmp2, TEMP tmp3, TEMP tmp4,\n@@ -10317,2 +10317,1 @@\n-                       $tmp1$$Register, $tmp2$$Register, $tmp3$$Register,\n-                       $tmp4$$Register, $tmp5$$Register, $tmp6$$Register,\n+                       $tmp1$$Register, $tmp2$$Register, $tmp3$$Register, $tmp4$$Register,\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -60,5 +60,2 @@\n-         923521, \/\/ 0x000E1781\n-          29791, \/\/ 0x0000745F\n-            961, \/\/ 0x000003C1\n-             31, \/\/ 0x0000001F\n-              1, \/\/ 0x00000001\n+         923521, \/\/ 31^^4 (0x000E1781)\n+          29791, \/\/ 31^^3 (0x0000745F)\n","filename":"src\/hotspot\/cpu\/riscv\/stubRoutines_riscv.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}