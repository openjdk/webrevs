{"files":[{"patch":"@@ -284,21 +284,0 @@\n-# Param 1 - dir to find debuginfo files in\n-FindDebuginfoFiles = \\\n-    $(wildcard $(addprefix $1\/*, $(DEBUGINFO_SUFFIXES)) \\\n-        $(addprefix $1\/*\/*, $(DEBUGINFO_SUFFIXES)) \\\n-        $(addprefix $1\/*\/*\/*, $(DEBUGINFO_SUFFIXES)))\n-\n-# Pick the correct debug info files to copy, either zipped or not.\n-ifeq ($(ZIP_EXTERNAL_DEBUG_SYMBOLS), true)\n-  DEBUGINFO_SUFFIXES += .diz\n-else\n-  DEBUGINFO_SUFFIXES := .debuginfo .pdb .map\n-  # On Macosx, if debug symbols have not been zipped, find all files inside *.dSYM\n-  # dirs.\n-  ifeq ($(call isTargetOs, macosx), true)\n-    $(call FillFindCache, \\\n-        $(SUPPORT_OUTPUTDIR)\/modules_libs $(SUPPORT_OUTPUTDIR)\/modules_cmds)\n-    FindDebuginfoFiles = \\\n-        $(if $(wildcard $1), $(call containing, .dSYM\/, $(call FindFiles, $1)))\n-  endif\n-endif\n-\n","filename":"make\/Images.gmk","additions":0,"deletions":21,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -179,1 +179,9 @@\n-static-jdk-image: $(copy-from-jdk-image) $(copy-static-launcher)\n+$(eval $(call SetupCopyFiles, copy-static-launcher-debuginfo, \\\n+    SRC := $(STATIC_LAUNCHER_OUTPUT_DIR), \\\n+    DEST := $(STATIC_JDK_IMAGE_DIR)\/bin, \\\n+    FILES := $(call FindDebuginfoFiles, $(STATIC_LAUNCHER_OUTPUT_DIR)), \\\n+))\n+\n+TARGETS += $(copy-static-launcher-debuginfo)\n+\n+static-jdk-image: $(copy-from-jdk-image) $(copy-static-launcher) $(copy-static-launcher-debuginfo)\n","filename":"make\/StaticLibs.gmk","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -310,0 +310,23 @@\n+\n+# Find native debuginfo files in a directory\n+#\n+# Param 1 - dir to find debuginfo files in\n+FindDebuginfoFiles = \\\n+    $(wildcard $(addprefix $1\/*, $(DEBUGINFO_SUFFIXES)) \\\n+        $(addprefix $1\/*\/*, $(DEBUGINFO_SUFFIXES)) \\\n+        $(addprefix $1\/*\/*\/*, $(DEBUGINFO_SUFFIXES)))\n+\n+# Pick the correct debug info files to copy, either zipped or not.\n+ifeq ($(ZIP_EXTERNAL_DEBUG_SYMBOLS), true)\n+  DEBUGINFO_SUFFIXES += .diz\n+else\n+  DEBUGINFO_SUFFIXES := .debuginfo .pdb .map\n+  # On Macosx, if debug symbols have not been zipped, find all files inside *.dSYM\n+  # dirs.\n+  ifeq ($(call isTargetOs, macosx), true)\n+    $(call FillFindCache, \\\n+        $(SUPPORT_OUTPUTDIR)\/modules_libs $(SUPPORT_OUTPUTDIR)\/modules_cmds)\n+    FindDebuginfoFiles = \\\n+        $(if $(wildcard $1), $(call containing, .dSYM\/, $(call FindFiles, $1)))\n+  endif\n+endif\n","filename":"make\/common\/FileUtils.gmk","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}