{"files":[{"patch":"@@ -156,4 +156,1 @@\n-  {\n-    ShenandoahHeapLocker locker(heap->lock());\n-    heap->free_set()->log_status();\n-  }\n+  heap->free_set()->log_status();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -150,4 +150,1 @@\n-      {\n-        ShenandoahHeapLocker locker(heap->lock());\n-        heap->free_set()->log_status();\n-      }\n+      heap->free_set()->log_status();\n@@ -181,3 +178,1 @@\n-      {\n-        ShenandoahHeapLocker locker(heap->lock());\n-        heap->free_set()->log_status();\n+      heap->free_set()->log_status();\n@@ -185,4 +180,4 @@\n-        \/\/ Notify Universe about new heap usage. This has implications for\n-        \/\/ global soft refs policy, and we better report it every time heap\n-        \/\/ usage goes down.\n-        heap->update_capacity_and_used_at_gc();\n+      \/\/ Notify Universe about new heap usage. This has implications for\n+      \/\/ global soft refs policy, and we better report it every time heap\n+      \/\/ usage goes down.\n+      heap->update_capacity_and_used_at_gc();\n@@ -190,3 +185,2 @@\n-        \/\/ Signal that we have completed a visit to all live objects.\n-        heap->record_whole_heap_examined_timestamp();\n-      }\n+      \/\/ Signal that we have completed a visit to all live objects.\n+      heap->record_whole_heap_examined_timestamp();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1082,1 +1082,0 @@\n-  log_status();\n@@ -1134,2 +1133,2 @@\n-  shenandoah_assert_heaplocked();\n-\n+  \/\/ Must not be heap locked, it acquires heap lock only when log is enabled\n+  shenandoah_assert_not_heaplocked();\n@@ -1139,0 +1138,1 @@\n+    ShenandoahHeapLocker locker(_heap->lock());\n@@ -1192,0 +1192,1 @@\n+    ShenandoahHeapLocker locker(_heap->lock());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -241,0 +241,1 @@\n+  heap->free_set()->log_status();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -381,0 +381,1 @@\n+  _free_set->log_status();\n@@ -1836,0 +1837,1 @@\n+  _free_set->log_status();\n@@ -2295,0 +2297,1 @@\n+  _free_set->log_status();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}