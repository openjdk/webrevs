{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,4 +77,9 @@\n-    srcInfo.bounds.x2 = UNSAFE_TO_ADD(srcx, width)\n-                        ? clipInfo.bounds.x2 : (srcx + width);\n-    srcInfo.bounds.y2 = UNSAFE_TO_ADD(srcy, height)\n-                        ? clipInfo.bounds.y2 : (srcy + height);\n+    if (UNSAFE_TO_ADD(srcx, width) ||\n+        UNSAFE_TO_ADD(srcy, height) ||\n+        UNSAFE_TO_ADD(dstx, width) ||\n+        UNSAFE_TO_ADD(dsty, height)) {\n+        return;\n+    }\n+\n+    srcInfo.bounds.x2 = srcx + width;\n+    srcInfo.bounds.y2 = srcy + height;\n@@ -83,4 +88,2 @@\n-    dstInfo.bounds.x2 = UNSAFE_TO_ADD(dstx, width)\n-                        ? clipInfo.bounds.x2 : (dstx + width);\n-    dstInfo.bounds.y2 = UNSAFE_TO_ADD(dsty, height)\n-                        ? clipInfo.bounds.y2 : (dsty + height);\n+    dstInfo.bounds.x2 = dstx + width;\n+    dstInfo.bounds.y2 = dsty + height;\n","filename":"src\/java.desktop\/share\/native\/libawt\/java2d\/loops\/Blit.c","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8357299\n- * @summary Verifies if Graphics copyArea doesn't copy any pixels\n- *          when there is overflow\n- * @run main BrokenBoundsClip\n- *\/\n-\n-import java.awt.Color;\n-import java.awt.Graphics2D;\n-import java.awt.image.BufferedImage;\n-\n-import static java.awt.image.BufferedImage.TYPE_INT_RGB;\n-\n-public final class BrokenBoundsClip {\n-\n-     public static final int SIZE = 100;\n-\n-     public static void main(String[] args) {\n-         BufferedImage bi = new BufferedImage(SIZE, SIZE, TYPE_INT_RGB);\n-\n-         Graphics2D g2d = bi.createGraphics();\n-         g2d.setColor(Color.RED);\n-         g2d.fillRect(SIZE \/ 2, SIZE \/ 2, SIZE \/ 2, SIZE \/ 2);\n-\n-         g2d.copyArea(bi.getWidth() \/ 2, bi.getHeight() \/ 2,\n-                      Integer.MAX_VALUE , Integer.MAX_VALUE ,\n-                      -bi.getWidth() \/ 2, -bi.getHeight() \/ 2);\n-         int actual = bi.getRGB(0, 0);\n-         int expected = Color.RED.getRGB();\n-         if (actual != expected) {\n-             System.err.println(\"Actual:   \" + Integer.toHexString(actual));\n-             System.err.println(\"Expected: \" + Integer.toHexString(expected));\n-             throw new RuntimeException(\"Wrong color\");\n-         }\n-     }\n-}\n","filename":"test\/jdk\/java\/awt\/Graphics\/BrokenBoundsClip.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"}]}