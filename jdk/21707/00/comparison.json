{"files":[{"patch":"@@ -52,3 +52,1 @@\n-  if (new_word_capacity < _size) {\n-    return; \/\/ No need to grow\n-  }\n+  assert(new_word_capacity >= _size, \"Should have been checked before, use maybe_grow?\");\n@@ -69,3 +67,1 @@\n-  if (word >= _size) {\n-    grow(word);\n-  }\n+  maybe_grow(word);\n","filename":"src\/hotspot\/share\/libadt\/vectset.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+\n@@ -53,0 +54,5 @@\n+  void maybe_grow(uint new_word_capacity) {\n+    if (new_word_capacity >= _size) {\n+      grow(new_word_capacity);\n+    }\n+  }\n@@ -54,0 +60,1 @@\n+\n@@ -81,1 +88,1 @@\n-    grow(word);\n+    maybe_grow(word);\n@@ -110,1 +117,1 @@\n-    grow(word);\n+    maybe_grow(word);\n","filename":"src\/hotspot\/share\/libadt\/vectset.hpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2773,3 +2773,1 @@\n-  if (i < _max) {\n-    return; \/\/ No need to grow\n-  }\n+  assert(i >= _max, \"Should have been checked before, use maybe_grow?\");\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1613,1 +1613,8 @@\n-  void   grow( uint i );        \/\/ Grow array node to fit\n+  \/\/ Grow array to required capacity\n+  void maybe_grow(uint i) {\n+    if (i >= _max) {\n+      grow(i);\n+    }\n+  }\n+  void grow(uint i);\n+\n@@ -1631,1 +1638,1 @@\n-  void map( uint i, Node *n ) { grow(i); _nodes[i] = n; }\n+  void map( uint i, Node *n ) { maybe_grow(i); _nodes[i] = n; }\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}