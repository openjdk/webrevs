{"files":[{"patch":"@@ -50,0 +50,1 @@\n+#ifdef _LP64\n@@ -57,0 +58,8 @@\n+#else\n+    \/* On 32-bit, gcc warns us against using values larger than ptrdiff_t for malloc,\n+     * memset and as array subscript. Since the chance of a 2GB allocation to be\n+     * successful is slim (would typically reach or exceed the user address space\n+     * size), lets just not bother. Returning NULL will cause the test to be silently\n+     * skipped. *\/\n+    return NULL;\n+#endif\n","filename":"test\/hotspot\/jtreg\/runtime\/exceptionMsgs\/NoClassDefFoundError\/libNoClassDefFoundErrorTest.c","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include <stdint.h>\n@@ -30,1 +31,1 @@\n-  upcall_func upcall = (upcall_func)upcallAddr;\n+  upcall_func upcall = (upcall_func)(uintptr_t)upcallAddr;\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/libupcall.c","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}