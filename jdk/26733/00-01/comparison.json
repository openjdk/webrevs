{"files":[{"patch":"@@ -57,1 +57,0 @@\n- protected:\n@@ -59,0 +58,1 @@\n+ protected:\n@@ -109,0 +109,2 @@\n+  typedef typename CONFIG::KEY_TYPE K;\n+  static_assert(sizeof(K) > 1, \"invalid size of CONFIG::KEY_TYPE\");\n@@ -119,1 +121,1 @@\n-    typename CONFIG::KEY_TYPE* const old_table = this->table();\n+    K* const old_table = this->table();\n@@ -126,1 +128,1 @@\n-      const typename CONFIG::KEY_TYPE k = old_table[i];\n+      const K k = old_table[i];\n@@ -131,1 +133,1 @@\n-          typename CONFIG::KEY_TYPE v = this->_table[idx];\n+          K v = this->_table[idx];\n@@ -138,1 +140,1 @@\n-        memcpy(this->_table, old_table, old_table_size * sizeof(typename CONFIG::KEY_TYPE));\n+        memcpy(this->_table, old_table, old_table_size * sizeof(K));\n@@ -152,1 +154,1 @@\n-  typename CONFIG::KEY_TYPE* find_slot(typename CONFIG::KEY_TYPE const& k) const {\n+  K* find_slot(K const& k) const {\n@@ -157,1 +159,1 @@\n-      typename CONFIG::KEY_TYPE v = this->_table[idx];\n+      K v = this->_table[idx];\n@@ -162,1 +164,1 @@\n-        return reinterpret_cast<typename CONFIG::KEY_TYPE*>(p2i(&this->_table[idx]) | 1);\n+        return reinterpret_cast<K*>(p2i(&this->_table[idx]) | 1);\n@@ -177,2 +179,2 @@\n-  bool contains(typename CONFIG::KEY_TYPE const& k) const {\n-    typename CONFIG::KEY_TYPE* const slot = find_slot(k);\n+  bool contains(K const& k) const {\n+    K* const slot = find_slot(k);\n@@ -182,2 +184,2 @@\n-  bool add(typename CONFIG::KEY_TYPE const& k) {\n-    typename CONFIG::KEY_TYPE* const slot = find_slot(k);\n+  bool add(K const& k) {\n+    K* const slot = find_slot(k);\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrSet.hpp","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"}]}