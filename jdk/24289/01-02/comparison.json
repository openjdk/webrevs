{"files":[{"patch":"@@ -25,1 +25,1 @@\n- package compiler.integerArithmetic;\n+package compiler.integerArithmetic;\n@@ -27,2 +27,4 @@\n- import compiler.lib.ir_framework.*;\n- import jdk.test.lib.Asserts;\n+import compiler.lib.ir_framework.*;\n+import java.util.Random;\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.Asserts;\n@@ -30,7 +32,8 @@\n- \/*\n-  * @test\n-  * @bug 8352893\n-  * @summary Test that an or with all bits set is folded to all bits (x | -1 == -1).\n-  * @library \/ \/test\/lib\n-  * @run driver compiler.integerArithmetic.TestOrSaturate\n-  *\/\n+\/*\n+ * @test\n+ * @bug 8352893\n+ * @summary Test that an or with all bits set is folded to all bits (x | -1 == -1).\n+ * @key randomness\n+ * @library \/ \/test\/lib\n+ * @run driver compiler.integerArithmetic.TestOrSaturate\n+ *\/\n@@ -43,1 +46,1 @@\n-    private final static int WARMUP = 10_000;\n+    private static final Random random = Utils.getRandomInstance();\n@@ -47,5 +50,3 @@\n-        for (int i = 0; i < WARMUP; i++) {\n-            Asserts.assertEQ(-1L, testL(i));\n-            Asserts.assertEQ(-1, testI(i));\n-            Asserts.assertEQ(-1, testDelayed(i));\n-        }\n+        Asserts.assertEQ(-1L, testL(random.nextLong()));\n+        Asserts.assertEQ(-1, testI(random.nextInt()));\n+        Asserts.assertEQ(-1, testDelayed(random.nextInt()));\n","filename":"test\/hotspot\/jtreg\/compiler\/integerArithmetic\/TestOrSaturate.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"}]}