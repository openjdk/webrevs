{"files":[{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-        Debugee debuggee = binder.startLocalDebugee(cmd);\n+        Debugee debuggee = binder.startDebugee(cmd);\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/framework\/TestProcessLauncher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-        Debugee debugee = binder.startLocalDebugee(cmd);\n+        Debugee debugee = binder.startDebugee(cmd);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/AttachingConnector\/attach\/attach001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-        Debugee debugee = binder.startLocalDebugee(cmd);\n+        Debugee debugee = binder.startDebugee(cmd);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/AttachingConnector\/attach\/attach002.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-        Debugee debugee = binder.startLocalDebugee(cmd);\n+        Debugee debugee = binder.startDebugee(cmd);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/AttachingConnector\/attachnosuspend\/attachnosuspend001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,1 +119,1 @@\n-        Debugee debugee = binder.makeLocalDebugee(vm.process());\n+        Debugee debugee = binder.makeDebugee(vm.process());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/LaunchingConnector\/launchnosuspend\/launchnosuspend001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-        Debugee debugee = binder.startLocalDebugee(cmd);\n+        Debugee debugee = binder.startDebugee(cmd);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ListeningConnector\/accept\/accept001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-        Debugee debugee = binder.startLocalDebugee(cmd);\n+        Debugee debugee = binder.startDebugee(cmd);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ListeningConnector\/accept\/accept002.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-        Debugee debugee = binder.startLocalDebugee(cmd);\n+        Debugee debugee = binder.startDebugee(cmd);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ListeningConnector\/listennosuspend\/listennosuspend001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,1 +171,1 @@\n-            debugee = binder.startLocalDebugee(cmd);\n+            debugee = binder.startDebugee(cmd);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ListeningConnector\/startListening\/startlis001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,1 +146,1 @@\n-            debugee = binder.startLocalDebugee(cmd);\n+            debugee = binder.startDebugee(cmd);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ListeningConnector\/startListening\/startlis002.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,1 +153,1 @@\n-            debugee = binder.startLocalDebugee(commandToRun);\n+            debugee = binder.startDebugee(commandToRun);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachineManager\/createVirtualMachine\/createVM002.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -154,1 +154,1 @@\n-            debugee = binder.startLocalDebugee(commandToRun);\n+            debugee = binder.startDebugee(commandToRun);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachineManager\/createVirtualMachine\/createVM003.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -157,1 +157,1 @@\n-            debugee = binder.startLocalDebugee(commandToRun);\n+            debugee = binder.startDebugee(commandToRun);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachineManager\/createVirtualMachine\/createVM004.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,1 +153,1 @@\n-            debugee = binder.startLocalDebugee(commandToRun);\n+            debugee = binder.startDebugee(commandToRun);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachineManager\/createVirtualMachine\/createVM005.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-     * Launch debuggee on local host.\n+     * Launch debuggee.\n@@ -62,1 +62,1 @@\n-        launcher.display(\"Starting local debuggee.\");\n+        launcher.display(\"Starting debuggee.\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdb\/Debuggee.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * This class provides launching of <code>jdb<\/code> and debuggee in local\n- * mode according to test command line options.\n+ * This class provides launching of <code>jdb<\/code> and debuggee\n+ * according to test command line options.\n@@ -97,1 +97,1 @@\n-     * Defines mode (local) and type of connector (default, launching,\n+     * Defines type of connector (default, launching,\n@@ -100,1 +100,1 @@\n-     * and debuggee in defined mode.\n+     * and debuggee.\n@@ -107,1 +107,1 @@\n-            localDefaultLaunch(jdbCmdArgs, classToExecute);\n+            defaultLaunch(jdbCmdArgs, classToExecute);\n@@ -109,1 +109,1 @@\n-            localRawLaunch(jdbCmdArgs, classToExecute);\n+            rawLaunch(jdbCmdArgs, classToExecute);\n@@ -111,1 +111,1 @@\n-            localLaunch(jdbCmdArgs, classToExecute);\n+            launchFromJdb(jdbCmdArgs, classToExecute);\n@@ -113,1 +113,1 @@\n-            localLaunchAndAttach(jdbCmdArgs, classToExecute);\n+            launchAndAttach(jdbCmdArgs, classToExecute);\n@@ -115,1 +115,1 @@\n-            localLaunchAndListen(jdbCmdArgs, classToExecute);\n+            launchAndListen(jdbCmdArgs, classToExecute);\n@@ -117,1 +117,1 @@\n-            throw new TestBug(\"Unexpected connector type for local launch mode\"\n+            throw new TestBug(\"Unexpected connector type: \"\n@@ -258,1 +258,1 @@\n-     * Run test in local mode using default connector.\n+     * Run test using default connector.\n@@ -260,1 +260,1 @@\n-    private void localDefaultLaunch\n+    private void defaultLaunch\n@@ -262,1 +262,1 @@\n-        localLaunch(jdbCmdArgs, classToExecute);\n+        launchFromJdb(jdbCmdArgs, classToExecute);\n@@ -266,1 +266,1 @@\n-     * Run test in local mode using raw launching connector.\n+     * Run test using raw launching connector.\n@@ -268,1 +268,1 @@\n-    private void localRawLaunch\n+    private void rawLaunch\n@@ -270,1 +270,1 @@\n-        localLaunch(jdbCmdArgs, classToExecute);\n+        launchFromJdb(jdbCmdArgs, classToExecute);\n@@ -274,1 +274,1 @@\n-     * Run test in local mode using launching connector.\n+     * Run test using launching connector.\n@@ -276,1 +276,1 @@\n-    private void localLaunch\n+    private void launchFromJdb\n@@ -280,1 +280,1 @@\n-        display(\"Starting jdb launching local debuggee\");\n+        display(\"Starting jdb launching debuggee\");\n@@ -290,1 +290,1 @@\n-     * Run test in local mode using attaching connector.\n+     * Run test using attaching connector.\n@@ -292,1 +292,1 @@\n-    private void localLaunchAndAttach\n+    private void launchAndAttach\n@@ -300,1 +300,1 @@\n-        display(\"Start jdb attaching to local debuggee\");\n+        display(\"Starting jdb attaching to debuggee\");\n@@ -306,1 +306,1 @@\n-     * Run test in local mode using listening connector.\n+     * Run test using listening connector.\n@@ -308,1 +308,1 @@\n-    private void localLaunchAndListen\n+    private void launchAndListen\n@@ -312,1 +312,1 @@\n-        display(\"Starting jdb listening to local debuggee\");\n+        display(\"Starting jdb listening to debuggee\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdb\/Launcher.java","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -477,8 +477,0 @@\n-\/*\n-        if (! isLaunchedLocally() && ! isDefaultJVMDIStrictMode()) {\n-            throw new BadOption(\"inconsistent options: \"\n-                                + \"-launch.mode=\" + getLaunchMode()\n-                                + \" and -jvmdi.strict=\" + getJVMDIStrictMode());\n-        }\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/ArgumentHandler.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -126,1 +126,1 @@\n-     * Make initial <code>Debugee<\/code> object for local debuggee process\n+     * Make initial <code>Debugee<\/code> object for debuggee process\n@@ -129,1 +129,1 @@\n-    public Debugee makeLocalDebugee(Process process) {\n+    public Debugee makeDebugee(Process process) {\n@@ -134,1 +134,1 @@\n-     * Launch local debuggee process with specified command line\n+     * Launch debuggee process with specified command line\n@@ -137,1 +137,1 @@\n-    public Debugee startLocalDebugee(String cmd) {\n+    public Debugee startDebugee(String cmd) {\n@@ -144,1 +144,1 @@\n-            throw new Failure(\"Caught exception while launching local debuggee VM process:\\n\\t\"\n+            throw new Failure(\"Caught exception while launching debuggee VM process:\\n\\t\"\n@@ -148,1 +148,1 @@\n-        return makeLocalDebugee(process);\n+        return makeDebugee(process);\n@@ -157,1 +157,1 @@\n-        Debugee debugee = makeLocalDebugee(proc);\n+        Debugee debugee = makeDebugee(proc);\n@@ -192,1 +192,1 @@\n-            debugee = localDefaultLaunchDebugee(vmm, classToExecute, classPath);\n+            debugee = defaultLaunchDebugee(vmm, classToExecute, classPath);\n@@ -194,1 +194,1 @@\n-            debugee = localRawLaunchDebugee(vmm, classToExecute, classPath);\n+            debugee = rawLaunchDebugee(vmm, classToExecute, classPath);\n@@ -196,1 +196,1 @@\n-            debugee = localLaunchDebugee(vmm, classToExecute, classPath);\n+            debugee = launchDebugee(vmm, classToExecute, classPath);\n@@ -198,1 +198,1 @@\n-            debugee = localLaunchAndAttachDebugee(vmm, classToExecute, classPath);\n+            debugee = launchAndAttachDebugee(vmm, classToExecute, classPath);\n@@ -200,1 +200,1 @@\n-            debugee = localLaunchAndListenDebugee(vmm, classToExecute, classPath);\n+            debugee = launchAndListenDebugee(vmm, classToExecute, classPath);\n@@ -202,1 +202,1 @@\n-            throw new TestBug(\"Unexpected connector type for local debugee launch mode\"\n+            throw new TestBug(\"Unexpected connector type for debugee: \"\n@@ -234,1 +234,1 @@\n-     * Launch debugee locally via the default LaunchingConnector.\n+     * Launch debugee via the default LaunchingConnector.\n@@ -236,1 +236,1 @@\n-    private Debugee localDefaultLaunchDebugee (VirtualMachineManager vmm,\n+    private Debugee defaultLaunchDebugee (VirtualMachineManager vmm,\n@@ -260,1 +260,1 @@\n-        Debugee debugee = makeLocalDebugee(process);\n+        Debugee debugee = makeDebugee(process);\n@@ -269,1 +269,1 @@\n-     * Launch debugee locally via the default LaunchingConnector.\n+     * Launch debugee via the default LaunchingConnector.\n@@ -271,1 +271,1 @@\n-    private Debugee localLaunchDebugee (VirtualMachineManager vmm,\n+    private Debugee launchDebugee (VirtualMachineManager vmm,\n@@ -298,1 +298,1 @@\n-        Debugee debugee = makeLocalDebugee(process);\n+        Debugee debugee = makeDebugee(process);\n@@ -306,1 +306,1 @@\n-     * Launch debugee locally via the RawLaunchingConnector.\n+     * Launch debugee via the RawLaunchingConnector.\n@@ -308,1 +308,1 @@\n-    private Debugee localRawLaunchDebugee (VirtualMachineManager vmm,\n+    private Debugee rawLaunchDebugee (VirtualMachineManager vmm,\n@@ -334,1 +334,1 @@\n-        Debugee debugee = makeLocalDebugee(process);\n+        Debugee debugee = makeDebugee(process);\n@@ -342,2 +342,1 @@\n-     * Launch debugee VM locally as a local process and connect to it using\n-     * <code>AttachingConnector<\/code>.\n+     * Launch debugee VM and connect to it using <code>AttachingConnector<\/code>.\n@@ -345,1 +344,1 @@\n-    private Debugee localLaunchAndAttachDebugee (VirtualMachineManager vmm,\n+    private Debugee launchAndAttachDebugee (VirtualMachineManager vmm,\n@@ -359,1 +358,1 @@\n-        Debugee debugee = startLocalDebugee(cmdLineArgs);\n+        Debugee debugee = startDebugee(cmdLineArgs);\n@@ -394,2 +393,1 @@\n-     * Launch debugee VM locally as a local process and connect to it using\n-     * <code>ListeningConnector<\/code>.\n+     * Launch debugee VM and connect to it using <code>ListeningConnector<\/code>.\n@@ -397,1 +395,1 @@\n-    private Debugee localLaunchAndListenDebugee (VirtualMachineManager vmm,\n+    private Debugee launchAndListenDebugee (VirtualMachineManager vmm,\n@@ -422,1 +420,1 @@\n-        Debugee debugee = startLocalDebugee(cmdLineArgs);\n+        Debugee debugee = startDebugee(cmdLineArgs);\n@@ -688,1 +686,1 @@\n-     * Launch local debuggee process with specified command line arguments\n+     * Launch debuggee process with specified command line arguments\n@@ -691,1 +689,1 @@\n-    protected Debugee startLocalDebugee(String[] cmdArgs) {\n+    protected Debugee startDebugee(String[] cmdArgs) {\n@@ -698,1 +696,1 @@\n-            throw new Failure(\"Caught exception while launching local debuggee VM process:\\n\\t\"\n+            throw new Failure(\"Caught exception while launching debuggee VM process:\\n\\t\"\n@@ -702,1 +700,1 @@\n-        return makeLocalDebugee(process);\n+        return makeDebugee(process);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/Binder.java","additions":32,"deletions":34,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -41,5 +41,0 @@\n- * This is an abstract class that declares abstract methods to control\n- * debugee VM process.\n- * Derived classes should implement these methods corresponding to the mode\n- * that the process should be started in (locally).\n- * <p>\n@@ -55,1 +50,1 @@\n-abstract public class DebugeeProcess {\n+public class DebugeeProcess {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeProcess.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"}]}