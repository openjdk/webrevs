{"files":[{"patch":"@@ -226,3 +226,0 @@\n-  ~StackTraceBlobInstaller() {\n-    JfrStackTraceRepository::clear_leak_profiler();\n-  }\n@@ -283,5 +280,8 @@\n-  \/\/ can safepoint here\n-  ThreadInVMfromNative transition(thread);\n-  MutexLocker lock(ClassLoaderDataGraph_lock);\n-  \/\/ the lock is needed to ensure the unload lists do not grow in the middle of inspection.\n-  install_stack_traces(sampler);\n+  {\n+    \/\/ can safepoint here\n+    ThreadInVMfromNative transition(thread);\n+    MutexLocker lock(ClassLoaderDataGraph_lock);\n+    \/\/ the lock is needed to ensure the unload lists do not grow in the middle of inspection.\n+    install_stack_traces(sampler);\n+  }\n+  JfrStackTraceRepository::clear_leak_profiler();\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/objectSampleCheckpoint.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -576,3 +576,1 @@\n-  if (_stack_trace_repository.is_modified()) {\n-    write_stacktrace(_stack_trace_repository, _chunkwriter, false);\n-  }\n+  write_stacktrace(_stack_trace_repository, _chunkwriter, true);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrRecorderService.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -101,0 +101,1 @@\n+  MutexLocker lock(JfrStacktrace_lock, Mutex::_no_safepoint_check_flag);\n@@ -104,2 +105,0 @@\n-  MutexLocker lock(JfrStacktrace_lock, Mutex::_no_safepoint_check_flag);\n-  assert(_entries > 0, \"invariant\");\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stacktrace\/jfrStackTraceRepository.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}