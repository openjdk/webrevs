{"files":[{"patch":"@@ -67,1 +67,1 @@\n-    CgroupV2Controller* mem_other = new CgroupV2Controller(cg_infos[MEMORY_IDX]._mount_path, cg_infos[MEMORY_IDX]._cgroup_path);\n+    CgroupV2Controller mem_other = CgroupV2Controller(cg_infos[MEMORY_IDX]._mount_path, cg_infos[MEMORY_IDX]._cgroup_path);\n@@ -69,1 +69,1 @@\n-    CgroupV2CpuController* cpu = new CgroupV2CpuController(new CgroupV2Controller(cg_infos[CPU_IDX]._mount_path, cg_infos[CPU_IDX]._cgroup_path));\n+    CgroupV2CpuController* cpu = new CgroupV2CpuController(CgroupV2Controller(cg_infos[CPU_IDX]._mount_path, cg_infos[CPU_IDX]._cgroup_path));\n@@ -106,1 +106,1 @@\n-        memory = new CgroupV1MemoryController(new CgroupV1Controller(info._root_mount_path, info._mount_path));\n+        memory = new CgroupV1MemoryController(CgroupV1Controller(info._root_mount_path, info._mount_path));\n@@ -112,3 +112,2 @@\n-        CgroupV1Controller* c_r = new CgroupV1Controller(info._root_mount_path, info._mount_path);\n-        cpu = new CgroupV1CpuController(c_r);\n-        c_r->set_subsystem_path(info._cgroup_path);\n+        cpu = new CgroupV1CpuController(CgroupV1Controller(info._root_mount_path, info._mount_path));\n+        cpu->set_subsystem_path(info._cgroup_path);\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -217,1 +217,1 @@\n-    virtual void print_version_specific_info(outputStream* st, julong host_mem);\n+    virtual void print_version_specific_info(outputStream* st, julong host_mem) = 0;\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/memory.use_hierarchy\", \"Use Hierarchy\", use_hierarchy);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/memory.use_hierarchy\", \"Use Hierarchy\", use_hierarchy);\n@@ -85,1 +85,1 @@\n-  _reader->set_subsystem_path(cgroup_path);\n+  reader()->set_subsystem_path(cgroup_path);\n@@ -93,1 +93,1 @@\n-void do_trace_log(julong read_mem_limit, julong host_mem) {\n+void verbose_log(julong read_mem_limit, julong host_mem) {\n@@ -116,1 +116,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/memory.limit_in_bytes\", \"Memory Limit\", memlimit);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/memory.limit_in_bytes\", \"Memory Limit\", memlimit);\n@@ -121,1 +121,1 @@\n-      bool is_ok = _reader->read_numerical_key_value(\"\/memory.stat\", \"hierarchical_memory_limit\", &hier_memlimit);\n+      bool is_ok = reader()->read_numerical_key_value(\"\/memory.stat\", \"hierarchical_memory_limit\", &hier_memlimit);\n@@ -127,1 +127,1 @@\n-        do_trace_log(hier_memlimit, phys_mem);\n+        verbose_log(hier_memlimit, phys_mem);\n@@ -132,1 +132,1 @@\n-    do_trace_log(memlimit, phys_mem);\n+    verbose_log(memlimit, phys_mem);\n@@ -135,1 +135,1 @@\n-    do_trace_log(memlimit, phys_mem);\n+    verbose_log(memlimit, phys_mem);\n@@ -155,1 +155,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/memory.memsw.limit_in_bytes\", \"Memory and Swap Limit\", memswlimit);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/memory.memsw.limit_in_bytes\", \"Memory and Swap Limit\", memswlimit);\n@@ -160,1 +160,1 @@\n-      bool is_ok = _reader->read_numerical_key_value(\"\/memory.stat\",\n+      bool is_ok = reader()->read_numerical_key_value(\"\/memory.stat\",\n@@ -213,1 +213,1 @@\n-      return memory_swap_usage_impl(_reader);\n+      return memory_swap_usage_impl(reader());\n@@ -221,1 +221,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/memory.swappiness\", \"Swappiness\", swappiness);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/memory.swappiness\", \"Swappiness\", swappiness);\n@@ -227,1 +227,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/memory.soft_limit_in_bytes\", \"Memory Soft Limit\", memsoftlimit);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/memory.soft_limit_in_bytes\", \"Memory Soft Limit\", memsoftlimit);\n@@ -247,1 +247,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/memory.usage_in_bytes\", \"Memory Usage\", memusage);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/memory.usage_in_bytes\", \"Memory Usage\", memusage);\n@@ -261,1 +261,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/memory.max_usage_in_bytes\", \"Maximum Memory Usage\", memmaxusage);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/memory.max_usage_in_bytes\", \"Maximum Memory Usage\", memmaxusage);\n@@ -267,1 +267,1 @@\n-  bool is_ok = _reader->read_numerical_key_value(\"\/memory.stat\", \"rss\", &rss);\n+  bool is_ok = reader()->read_numerical_key_value(\"\/memory.stat\", \"rss\", &rss);\n@@ -277,1 +277,1 @@\n-  bool is_ok = _reader->read_numerical_key_value(\"\/memory.stat\", \"cache\", &cache);\n+  bool is_ok = reader()->read_numerical_key_value(\"\/memory.stat\", \"cache\", &cache);\n@@ -287,1 +287,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/memory.kmem.usage_in_bytes\", \"Kernel Memory Usage\", kmem_usage);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/memory.kmem.usage_in_bytes\", \"Kernel Memory Usage\", kmem_usage);\n@@ -293,1 +293,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/memory.kmem.limit_in_bytes\", \"Kernel Memory Limit\", kmem_limit);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/memory.kmem.limit_in_bytes\", \"Kernel Memory Limit\", kmem_limit);\n@@ -302,1 +302,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/memory.kmem.max_usage_in_bytes\", \"Maximum Kernel Memory Usage\", kmem_max_usage);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/memory.kmem.max_usage_in_bytes\", \"Maximum Kernel Memory Usage\", kmem_max_usage);\n@@ -340,1 +340,1 @@\n-  bool is_ok = _reader->read_number(\"\/cpu.cfs_quota_us\", &quota);\n+  bool is_ok = reader()->read_number(\"\/cpu.cfs_quota_us\", &quota);\n@@ -354,1 +354,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/cpu.cfs_period_us\", \"CPU Period\", period);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/cpu.cfs_period_us\", \"CPU Period\", period);\n@@ -370,1 +370,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/cpu.shares\", \"CPU Shares\", shares);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/cpu.shares\", \"CPU Shares\", shares);\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n-    char *_root;\n-    char *_mount_point;\n+    char* _root;\n+    char* _mount_point;\n@@ -40,1 +40,1 @@\n-    char *_path;\n+    char* _path;\n@@ -43,4 +43,12 @@\n-    CgroupV1Controller(char *root, char *mountpoint) {\n-      _root = os::strdup(root);\n-      _mount_point = os::strdup(mountpoint);\n-      _path = nullptr;\n+    CgroupV1Controller(char *root, char *mountpoint) : _root(os::strdup(root)),\n+                                                       _mount_point(os::strdup(mountpoint)),\n+                                                       _path(nullptr) {\n+    }\n+    \/\/ Shallow copy constructor\n+    CgroupV1Controller(const CgroupV1Controller& o) : _root(o._root),\n+                                                      _mount_point(o._mount_point),\n+                                                      _path(o._path) {\n+    }\n+    ~CgroupV1Controller() {\n+      \/\/ At least one subsystem controller exists with paths to malloc'd path\n+      \/\/ names\n@@ -49,2 +57,2 @@\n-    virtual void set_subsystem_path(char *cgroup_path);\n-    char *subsystem_path() { return _path; }\n+    void set_subsystem_path(char *cgroup_path);\n+    char *subsystem_path() override { return _path; }\n@@ -53,1 +61,1 @@\n-class CgroupV1MemoryController : public CgroupMemoryController {\n+class CgroupV1MemoryController final : public CgroupMemoryController {\n@@ -56,1 +64,2 @@\n-    CgroupV1Controller* _reader;\n+    CgroupV1Controller _reader;\n+    CgroupV1Controller* reader() { return &_reader; }\n@@ -83,1 +92,1 @@\n-    CgroupV1MemoryController(CgroupV1Controller* reader)\n+    CgroupV1MemoryController(CgroupV1Controller reader)\n@@ -90,1 +99,1 @@\n-class CgroupV1CpuController: public CgroupCpuController {\n+class CgroupV1CpuController final : public CgroupCpuController {\n@@ -93,1 +102,2 @@\n-    CgroupV1Controller* _reader;\n+    CgroupV1Controller _reader;\n+    CgroupV1Controller* reader() { return &_reader; }\n@@ -98,0 +108,3 @@\n+    void set_subsystem_path(char *cgroup_path) {\n+      reader()->set_subsystem_path(cgroup_path);\n+    }\n@@ -100,1 +113,1 @@\n-    CgroupV1CpuController(CgroupV1Controller* reader) : _reader(reader) {\n+    CgroupV1CpuController(CgroupV1Controller reader) : _reader(reader) {\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.hpp","additions":28,"deletions":15,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/cpu.weight\", \"Raw value for CPU Shares\", shares);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/cpu.weight\", \"Raw value for CPU Shares\", shares);\n@@ -89,1 +89,1 @@\n-  bool is_ok = _reader->read_numerical_tuple_value(\"\/cpu.max\", true \/* use_first *\/, &quota_val);\n+  bool is_ok = reader()->read_numerical_tuple_value(\"\/cpu.max\", true \/* use_first *\/, &quota_val);\n@@ -100,1 +100,1 @@\n-  CONTAINER_READ_STRING_CHECKED(_unified, \"\/cpuset.cpus\", \"cpuset.cpus\", cpus, 1024);\n+  CONTAINER_READ_STRING_CHECKED(unified(), \"\/cpuset.cpus\", \"cpuset.cpus\", cpus, 1024);\n@@ -106,1 +106,1 @@\n-  CONTAINER_READ_STRING_CHECKED(_unified, \"\/cpuset.mems\", \"cpuset.mems\", mems, 1024);\n+  CONTAINER_READ_STRING_CHECKED(unified(), \"\/cpuset.mems\", \"cpuset.mems\", mems, 1024);\n@@ -112,1 +112,1 @@\n-  bool is_ok = _reader->read_numerical_tuple_value(\"\/cpu.max\", false \/* use_first *\/, &period_val);\n+  bool is_ok = reader()->read_numerical_tuple_value(\"\/cpu.max\", false \/* use_first *\/, &period_val);\n@@ -133,1 +133,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_reader, \"\/memory.current\", \"Memory Usage\", memusage);\n+  CONTAINER_READ_NUMBER_CHECKED(reader(), \"\/memory.current\", \"Memory Usage\", memusage);\n@@ -139,1 +139,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED_MAX(_reader, \"\/memory.low\", \"Memory Soft Limit\", mem_soft_limit);\n+  CONTAINER_READ_NUMBER_CHECKED_MAX(reader(), \"\/memory.low\", \"Memory Soft Limit\", mem_soft_limit);\n@@ -151,1 +151,1 @@\n-  bool is_ok = _reader->read_numerical_key_value(\"\/memory.stat\", \"anon\", &rss);\n+  bool is_ok = reader()->read_numerical_key_value(\"\/memory.stat\", \"anon\", &rss);\n@@ -161,1 +161,1 @@\n-  bool is_ok = _reader->read_numerical_key_value(\"\/memory.stat\", \"file\", &cache);\n+  bool is_ok = reader()->read_numerical_key_value(\"\/memory.stat\", \"file\", &cache);\n@@ -176,1 +176,1 @@\n-  bool is_ok = _reader->read_number_handle_max(\"\/memory.swap.max\", &swap_limit);\n+  bool is_ok = reader()->read_number_handle_max(\"\/memory.swap.max\", &swap_limit);\n@@ -204,1 +204,1 @@\n-      jlong swap_current = mem_swp_current_val(_reader);\n+      jlong swap_current = mem_swp_current_val(reader());\n@@ -226,1 +226,1 @@\n-  jlong limit = mem_limit_val(_reader);\n+  jlong limit = mem_limit_val(reader());\n@@ -261,2 +261,2 @@\n-  jlong swap_current = mem_swp_current_val(_reader);\n-  jlong swap_limit = mem_swp_limit_val(_reader);\n+  jlong swap_current = mem_swp_current_val(reader());\n+  jlong swap_limit = mem_swp_limit_val(reader());\n@@ -288,1 +288,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED_MAX(_unified, \"\/pids.max\", \"Maximum number of tasks\", pids_max);\n+  CONTAINER_READ_NUMBER_CHECKED_MAX(unified(), \"\/pids.max\", \"Maximum number of tasks\", pids_max);\n@@ -302,1 +302,1 @@\n-  CONTAINER_READ_NUMBER_CHECKED(_unified, \"\/pids.current\", \"Current number of tasks\", pids_current);\n+  CONTAINER_READ_NUMBER_CHECKED(unified(), \"\/pids.current\", \"Current number of tasks\", pids_current);\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -42,4 +42,13 @@\n-    CgroupV2Controller(char * mount_path, char *cgroup_path) {\n-      _mount_path = mount_path;\n-      _cgroup_path = os::strdup(cgroup_path);\n-      _path = construct_path(mount_path, cgroup_path);\n+    CgroupV2Controller(char * mount_path, char *cgroup_path) :\n+                                            _mount_path(os::strdup(mount_path)),\n+                                            _cgroup_path(os::strdup(cgroup_path)),\n+                                            _path(construct_path(mount_path, cgroup_path)) {\n+    }\n+    \/\/ Shallow copy constructor\n+    CgroupV2Controller(const CgroupV2Controller& o) :\n+                                            _mount_path(o._mount_path),\n+                                            _cgroup_path(o._cgroup_path),\n+                                            _path(o._path) {\n+    }\n+    ~CgroupV2Controller() {\n+      \/\/ At least one controller exists with references to the paths\n@@ -48,1 +57,1 @@\n-    char *subsystem_path() { return _path; }\n+    char *subsystem_path() override { return _path; }\n@@ -53,1 +62,2 @@\n-    CgroupV2Controller* _reader;\n+    CgroupV2Controller _reader;\n+    CgroupV2Controller* reader() { return &_reader; }\n@@ -55,1 +65,1 @@\n-    CgroupV2CpuController(CgroupV2Controller* reader) : _reader(reader) {\n+    CgroupV2CpuController(CgroupV2Controller reader) : _reader(reader) {\n@@ -62,1 +72,1 @@\n-class CgroupV2MemoryController: public CgroupMemoryController {\n+class CgroupV2MemoryController final: public CgroupMemoryController {\n@@ -64,1 +74,2 @@\n-    CgroupV2Controller* _reader;\n+    CgroupV2Controller _reader;\n+    CgroupV2Controller* reader() { return &_reader; }\n@@ -66,1 +77,1 @@\n-    CgroupV2MemoryController(CgroupV2Controller* reader) : _reader(reader) {\n+    CgroupV2MemoryController(CgroupV2Controller reader) : _reader(reader) {\n@@ -83,1 +94,1 @@\n-    CgroupV2Controller* _unified = nullptr;\n+    CgroupV2Controller _unified;\n@@ -88,0 +99,2 @@\n+    CgroupV2Controller* unified() { return &_unified; }\n+\n@@ -91,1 +104,1 @@\n-                      CgroupV2Controller* unified) :\n+                      CgroupV2Controller unified) :\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.hpp","additions":25,"deletions":12,"binary":false,"changes":37,"status":"modified"}]}