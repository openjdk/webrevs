{"files":[{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Point;\n+import javax.swing.JComboBox;\n+import javax.swing.JComponent;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JPanel;\n+\n+\/*\n+ * @test\n+ * @bug 4185024\n+ * @summary Tests that Heavyweight combo boxes on JDesktop work correctly\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4185024\n+ *\/\n+\n+public class bug4185024 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Click on the JComboBox button inside the JInternalFrame to bring up the menu.\n+            Select one of the menu items and verify that the choice is highlighted correctly.\n+            Click on the menu's scroll bar and verify that it causes the menu to scroll down.\n+\n+            Inside JInternalFrame:\n+            This test is for the JComboBox in the JInternalFrame.\n+            To test, please click on the combobox and check the following:\n+            Does the selection in the popup list follow the mouse?\n+            Does the popup list respond to clicking and dragging the scroll bar?\n+            If so, press PASS, otherwise, press FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(bug4185024::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4185024\");\n+        JPanel p = new JPanel();\n+        p.setLayout(new BorderLayout());\n+        JDesktopPane desktop = new JDesktopPane();\n+        p.add(desktop);\n+        frame.add(p);\n+\n+        JComboBox months = new JComboBox();\n+        months.addItem(\"January\");\n+        months.addItem(\"February\");\n+        months.addItem(\"March\");\n+        months.addItem(\"April\");\n+        months.addItem(\"May\");\n+        months.addItem(\"June\");\n+        months.addItem(\"July\");\n+        months.addItem(\"August\");\n+        months.addItem(\"September\");\n+        months.addItem(\"October\");\n+        months.addItem(\"November\");\n+        months.addItem(\"December\");\n+        months.getAccessibleContext().setAccessibleName(\"Months\");\n+        months.getAccessibleContext().setAccessibleDescription(\"Choose a month of the year\");\n+\n+        \/\/ Set this to true and the popup works correctly...\n+        months.setLightWeightPopupEnabled(false);\n+\n+        addFrame(\"Months\", desktop, months);\n+\n+        frame.setSize(300, 300);\n+        frame.setLocationRelativeTo(null);\n+        return frame;\n+    }\n+\n+    private static void addFrame(String title, JDesktopPane desktop, JComponent component) {\n+        JInternalFrame jf = new JInternalFrame(title);\n+        Point newPos = new Point(20, 20);\n+        jf.setResizable(true);\n+        jf.getContentPane().add(component);\n+        jf.setLocation(newPos);\n+        desktop.add(jf);\n+\n+        jf.pack();\n+        jf.show();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4185024.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+\n+import jtreg.SkippedException;\n+\n+\/*\n+ * @test\n+ * @bug 4201964\n+ * @summary Tests that JComboBox's arrow button isn't drawn too wide in Windows Look&Feel\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4201964\n+ *\/\n+\n+public class bug4201964 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Does the arrow look too large?  If not, it passes.\n+            Since we can't use real html in here, I can't give you\n+            any pictures to compare against.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+        } catch (Exception e) {\n+            throw new jtreg.SkippedException(\"Couldn't load the Windows look and feel.\");\n+        }\n+\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .rows(50)\n+                .columns(50)\n+                .testUI(bug4201964::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4201964\");\n+        JPanel panel = new JPanel();\n+        JComboBox comboBox;\n+\n+        comboBox = new JComboBox(new Object[]{\n+                \"Coma Berenices\",\n+                \"Triangulum\",\n+                \"Camelopardis\",\n+                \"Cassiopea\"});\n+\n+        panel.add(comboBox);\n+\n+        frame.add(panel);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4201964.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.UIManager;\n+\n+import jtreg.SkippedException;\n+\n+\/*\n+ * @test\n+ * @bug 4249732\n+ * @requires (os.family == \"windows\")\n+ * @summary Tests that Windows editable combo box selects text picked from its list\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame\n+ * @run main bug4249732\n+ *\/\n+\n+public class bug4249732 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Click on combo box arrow button to open its dropdown list, and\n+            select an item from there. The text in the combo box editor should\n+            be selected, otherwise test fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+        } catch (Exception e) {\n+            throw new jtreg.SkippedException(\"Couldn't load the Windows look and feel.\");\n+        }\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .rows(30)\n+                .columns(40)\n+                .testUI(bug4249732::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4249732\");\n+\n+        JComboBox cb = new JComboBox(new Object[]{\"foo\", \"bar\", \"baz\"});\n+        cb.setEditable(true);\n+\n+        frame.add(cb, BorderLayout.NORTH);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4249732.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,125 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.DefaultCellEditor;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.table.AbstractTableModel;\n+\n+\/*\n+ * @test\n+ * @bug 4368848\n+ * @summary Tests that mouse wheel events cancel popups\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main bug4368848\n+ *\/\n+\n+public class bug4368848 {\n+    static final String[] names = {\"First Name\", \"Last Name\", \"Veggy\"};\n+    static Object[][] data = {\n+            {\"Mark\", \"Andrews\", false},\n+            {\"Tom\", \"Ball\", false},\n+            {\"Alan\", \"Chung\", false},\n+            {\"Jeff\", \"Dinkins\", false},\n+            {\"Amy\", \"Fowler\", false},\n+            {\"Brian\", \"Gerhold\", false},\n+            {\"James\", \"Gosling\", false},\n+            {\"David\", \"Karlton\", false},\n+            {\"Dave\", \"Kloba\", false},\n+            {\"Peter\", \"Korn\", false},\n+            {\"Phil\", \"Milne\", false},\n+            {\"Dave\", \"Moore\", false},\n+            {\"Hans\", \"Muller\", false},\n+            {\"Rick\", \"Levenson\", false},\n+            {\"Tim\", \"Prinzing\", false},\n+            {\"Chester\", \"Rose\", false},\n+            {\"Ray\", \"Ryan\", false},\n+            {\"Georges\", \"Saab\", false},\n+            {\"Willie\", \"Walker\", false},\n+            {\"Kathy\", \"Walrath\", false},\n+            {\"Arnaud\", \"Weber\", false}\n+    };\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Click any cell in the 'Veggy' column, so that combo box appears.\n+            Make sure mouse pointer is over the table, but _not_ over the combo\n+            box. Try scrolling the table using the mouse wheel. The combo popup\n+            should disappear. If it stays visible, test fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(bug4368848::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4368848\");\n+        ExampleTableModel dataModel = new ExampleTableModel();\n+\n+        JComboBox _editor = new JComboBox();\n+        _editor.addItem(false);\n+        _editor.addItem(true);\n+\n+        JTable tableView = new JTable(dataModel);\n+        tableView.setDefaultEditor(Boolean.class, new DefaultCellEditor(_editor));\n+\n+        frame.getContentPane().add(new JScrollPane(tableView));\n+        frame.setSize(200, 200);\n+        frame.setLocationRelativeTo(null);\n+        return frame;\n+    }\n+\n+    static class ExampleTableModel extends AbstractTableModel {\n+        \/\/ These methods always need to be implemented.\n+        public int getColumnCount() {\n+            return names.length;\n+        }\n+\n+        public int getRowCount() {\n+            return data.length;\n+        }\n+\n+        public Object getValueAt(int row, int col) {\n+            return data[row][col];\n+        }\n+\n+        public boolean isCellEditable(int row, int col) {\n+            return true;\n+        }\n+\n+        public String getColumnName(int column) {\n+            return names[column];\n+        }\n+\n+        public Class getColumnClass(int col) {\n+            return getValueAt(0, col).getClass();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/bug4368848.java","additions":125,"deletions":0,"binary":false,"changes":125,"status":"added"}]}