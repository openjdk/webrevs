{"files":[{"patch":"@@ -56,2 +56,2 @@\n-\/\/ * atomic_xchg: Atomically swap a new value at an address if previous value matched the compared value.\n-\/\/ * atomic_xchg_at: Atomically swap a new value at an internal pointer address if previous value matched the compared value.\n+\/\/ * atomic_xchg: Atomically swap a new value at an address without checking the previous value.\n+\/\/ * atomic_xchg_at: Atomically swap a new value at an internal pointer address without checking the previous value.\n@@ -86,1 +86,1 @@\n-\/\/ The implementation of step 1-4 resides in in accessBackend.hpp, to allow selected\n+\/\/ The implementation of step 1-4 resides in accessBackend.hpp, to allow selected\n@@ -90,2 +90,1 @@\n-\/\/ access.inline.hpp. The accesses that are allowed through the access.hpp file\n-\/\/ must be instantiated in access.cpp using the INSTANTIATE_HPP_ACCESS macro.\n+\/\/ access.inline.hpp.\n","filename":"src\/hotspot\/share\/oops\/access.hpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}