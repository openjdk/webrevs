{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,2 +107,2 @@\n-     * Return a List of all the available Services that implement\n-     * (type, algorithm). Note that the list is initialized lazily\n+     * Return an iterator over all the available Services that implement\n+     * (type, algorithm). Note that the iterator is initialized lazily\n@@ -118,13 +118,1 @@\n-     * This method exists for compatibility with JCE only. It will be removed\n-     * once JCE has been changed to use the replacement method.\n-     * @deprecated use {@code getServices(List<ServiceId>)} instead\n-     *\/\n-    @Deprecated\n-    public static Iterator<Service> getServices(String type,\n-            List<String> algorithms) {\n-        ProviderList list = Providers.getProviderList();\n-        return list.getServices(type, algorithms);\n-    }\n-\n-    \/**\n-     * Return a List of all the available Services that implement any of\n+     * Return an iterator over all the available Services that implement any of\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/GetInstance.java","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -394,1 +394,1 @@\n-     * Return a List containing all the Services describing implementations\n+     * Return an iterator over all the Services describing implementations\n@@ -396,1 +396,1 @@\n-     * exists, this method returns an empty List.\n+     * exists, this method returns an empty iterator.\n@@ -398,1 +398,1 @@\n-     * The elements of this list are determined lazily on demand.\n+     * The elements of this iterator are determined lazily on demand.\n@@ -400,1 +400,1 @@\n-     * The List returned is NOT thread safe.\n+     * The iterator returned is NOT thread safe.\n@@ -406,14 +406,0 @@\n-    \/**\n-     * This method exists for compatibility with JCE only. It will be removed\n-     * once JCE has been changed to use the replacement method.\n-     * @deprecated use {@code getServices(List<ServiceId>)} instead\n-     *\/\n-    @Deprecated\n-    public Iterator<Service> getServices(String type, List<String> algorithms) {\n-        List<ServiceId> ids = new ArrayList<>();\n-        for (String alg : algorithms) {\n-            ids.add(new ServiceId(type, alg));\n-        }\n-        return getServices(ids);\n-    }\n-\n@@ -425,1 +411,1 @@\n-     * Inner class for a List of Services. Custom List implementation in\n+     * Inner class for an iterator over Services. Customized implementation in\n@@ -452,1 +438,1 @@\n-        \/\/ Matching preferred provider list for this ServiceList\n+        \/\/ Matching preferred provider list for this ServiceIterator\n@@ -539,0 +525,1 @@\n+        @Override\n@@ -543,0 +530,1 @@\n+        @Override\n@@ -552,0 +540,1 @@\n+        @Override\n@@ -563,1 +552,1 @@\n-         * ServiceList.\n+         * ServiceIterator.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/ProviderList.java","additions":10,"deletions":21,"binary":false,"changes":31,"status":"modified"}]}