{"files":[{"patch":"@@ -134,1 +134,1 @@\n-        List<Service> list = GetInstance.getServices(\"KeyFactory\", algorithm);\n+        Iterable<Service> list = GetInstance.getServices(\"KeyFactory\", algorithm);\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -233,1 +233,1 @@\n-        List<Service> list =\n+        Iterable<Service> list =\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyPairGenerator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -260,1 +260,1 @@\n-        List<Service> list;\n+        Iterable<Service> list;\n","filename":"src\/java.base\/share\/classes\/java\/security\/Signature.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -542,1 +542,1 @@\n-        List<Service> services = GetInstance.getServices(cipherServices);\n+        Iterable<Service> services = GetInstance.getServices(cipherServices);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -157,1 +157,1 @@\n-        List<Service> services = GetInstance.getServices(type, algorithm);\n+        Iterable<Service> services = GetInstance.getServices(type, algorithm);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/JceSecurity.java.template","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -540,1 +540,1 @@\n-        List<Provider.Service> list = GetInstance.getServices(\n+        Iterable<Provider.Service> list = GetInstance.getServices(\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KEM.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,1 @@\n-        List<Service> services =\n+        Iterable<Service> services =\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KeyAgreement.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,1 +170,1 @@\n-        List<Service> list =\n+        Iterable<Service> list =\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KeyGenerator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,1 +180,1 @@\n-        List<Service> services = GetInstance.getServices(\"Mac\", algorithm);\n+        Iterable<Service> services = GetInstance.getServices(\"Mac\", algorithm);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Mac.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-        List<Service> list =\n+        Iterable<Service> list =\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/SecretKeyFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,1 +112,1 @@\n-    public static List<Service> getServices(String type, String algorithm) {\n+    public static Iterable<Service> getServices(String type, String algorithm) {\n@@ -123,1 +123,1 @@\n-    public static List<Service> getServices(String type,\n+    public static Iterable<Service> getServices(String type,\n@@ -133,1 +133,1 @@\n-    public static List<Service> getServices(List<ServiceId> ids) {\n+    public static Iterable<Service> getServices(List<ServiceId> ids) {\n@@ -186,1 +186,1 @@\n-        List<Service> services = getServices(type, algorithm);\n+        Iterable<Service> services = getServices(type, algorithm);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/GetInstance.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -402,1 +402,1 @@\n-    public List<Service> getServices(String type, String algorithm) {\n+    public Iterable<Service> getServices(String type, String algorithm) {\n@@ -412,1 +412,1 @@\n-    public List<Service> getServices(String type, List<String> algorithms) {\n+    public Iterable<Service> getServices(String type, List<String> algorithms) {\n@@ -420,1 +420,1 @@\n-    public List<Service> getServices(List<ServiceId> ids) {\n+    public Iterable<Service> getServices(List<ServiceId> ids) {\n@@ -429,1 +429,1 @@\n-    private final class ServiceList extends AbstractList<Service> {\n+    private final class ServiceList implements Iterable<Service> {\n@@ -537,28 +537,0 @@\n-        public Service get(int index) {\n-            Service s = tryGet(index);\n-            if (s == null) {\n-                throw new IndexOutOfBoundsException();\n-            }\n-            return s;\n-        }\n-\n-        public int size() {\n-            int n;\n-            if (services != null) {\n-                n = services.size();\n-            } else {\n-                n = (firstService != null) ? 1 : 0;\n-            }\n-            while (tryGet(n) != null) {\n-                n++;\n-            }\n-            return n;\n-        }\n-\n-        \/\/ override isEmpty() and iterator() to not call size()\n-        \/\/ this avoids loading + checking all Providers\n-\n-        public boolean isEmpty() {\n-            return (tryGet(0) == null);\n-        }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/ProviderList.java","additions":5,"deletions":33,"binary":false,"changes":38,"status":"modified"}]}