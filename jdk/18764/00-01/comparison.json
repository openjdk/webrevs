{"files":[{"patch":"@@ -82,1 +82,1 @@\n-            sslOn = property.equals(\"ssl\");\n+            sslOn = property.equals(\"ssl\") || property.endsWith(\",ssl\") || property.contains(\"ssl,\");\n@@ -93,2 +93,1 @@\n-        System.err.println(\"help           print the help messages\");\n-        System.err.println(\"expand         expand debugging information\");\n+        System.err.println(\"help           print this help message and exit\");\n@@ -100,1 +99,1 @@\n-        System.err.println(\"\\trecord       enable per-record tracing\");\n+        System.err.println(\"\\tdefaultctx   print default SSL initialization\");\n@@ -102,1 +101,4 @@\n-        System.err.println(\"\\tkeygen       print key generation data\");\n+        System.err.println(\"\\tkeymanager   print key manager tracing\");\n+        System.err.println(\"\\tpluggability print pluggability tracing\");\n+        System.err.println(\"\\trecord       enable per-record tracing\");\n+        System.err.println(\"\\trespmgr      print OCSP response tracing\");\n@@ -104,1 +106,0 @@\n-        System.err.println(\"\\tdefaultctx   print default SSL initialization\");\n@@ -106,2 +107,0 @@\n-        System.err.println(\"\\tsessioncache print session cache tracing\");\n-        System.err.println(\"\\tkeymanager   print key manager tracing\");\n@@ -109,1 +108,0 @@\n-        System.err.println(\"\\tpluggability print pluggability tracing\");\n@@ -112,1 +110,0 @@\n-        System.err.println(\"\\tdata         hex dump of each handshake message\");\n@@ -159,2 +156,3 @@\n-        return options.contains(\"data\") || options.contains(\"verbose\") ||\n-                options.contains(\"plaintext\") || options.contains(\"packet\");\n+        return options.contains(\"verbose\")\n+                || options.contains(\"plaintext\")\n+                || options.contains(\"packet\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLLogger.java","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import java.util.ArrayList;\n@@ -65,1 +66,1 @@\n-                Arguments.of(\"all\",\n+                Arguments.of(List.of(\"-Djavax.net.debug=all\"),\n@@ -72,1 +73,1 @@\n-                Arguments.of(\"ssl\",\n+                Arguments.of(List.of(\"-Djavax.net.debug=ssl\"),\n@@ -78,1 +79,1 @@\n-                Arguments.of(\"ssl:plaintext\",\n+                Arguments.of(List.of(\"-Djavax.net.debug=ssl:plaintext\"),\n@@ -84,1 +85,8 @@\n-                Arguments.of(\"ssl:record:plaintext\",\n+                \/\/ allow all ssl logs if ssl separated by comma\n+                Arguments.of(List.of(\"-Djavax.net.debug=ssl,record\"),\n+                        List.of(\"trigger seeding of SecureRandom\",\n+                                \"jdk.tls.keyLimits:\",\n+                                \"WRITE:\"),\n+                        List.of(\"matching alias:\",\n+                                \"Plaintext before ENCRYPTION\")),\n+                Arguments.of(List.of(\"-Djavax.net.debug=ssl:record:plaintext\"),\n@@ -88,1 +96,1 @@\n-                Arguments.of(\"ssl:trustmanager\",\n+                Arguments.of(List.of(\"-Djavax.net.debug=ssl:trustmanager\"),\n@@ -92,1 +100,1 @@\n-                Arguments.of(\"ssl:sslctx\",\n+                Arguments.of(List.of(\"-Djavax.net.debug=ssl:sslctx\"),\n@@ -97,1 +105,1 @@\n-                Arguments.of(\"ssltypo\",\n+                Arguments.of(List.of(\"-Djavax.net.debug=ssltypo\"),\n@@ -102,1 +110,19 @@\n-                Arguments.of(\"\", \/\/ empty invokes System.Logger use\n+                \/\/ help message test. Should exit without running test\n+                Arguments.of(List.of(\"-Djavax.net.debug=help\"),\n+                        List.of(\"print this help message and exit\",\n+                                \"debugging can be widened with:\"),\n+                        List.of(\"Plaintext before ENCRYPTION\",\n+                                \"adding as trusted certificates\",\n+                                \"hex dump of each handshake message\")),\n+                \/\/ add in javax.net.debug sanity test\n+                Arguments.of(List.of(\"-Djavax.net.debug=ssl:trustmanager\",\n+                                \"-Djava.security.debug=all\"),\n+                        List.of(\"adding as trusted certificates\",\n+                                \"properties: Initial security property:\",\n+                                \"certpath: Cert path validation succeeded\",\n+                                \"Found trusted certificate:\"),\n+                        List.of(\"Plaintext before ENCRYPTION\",\n+                                \"length =\")),\n+                \/\/ empty invokes System.Logger use\n+                Arguments.of(List.of(\"-Djavax.net.debug\",\n+                        \"-Djava.util.logging.config.file=\" + LOG_FILE),\n@@ -112,1 +138,1 @@\n-    public void checkDebugOutput(String params, List<String> expected,\n+    public void checkDebugOutput(List<String> params, List<String> expected,\n@@ -114,5 +140,4 @@\n-        OutputAnalyzer outputAnalyzer = ProcessTools.executeTestJava(\n-                \"-Djava.util.logging.config.file=\" + LOG_FILE,\n-                \"-Djavax.net.debug=\" + params,\n-                \"DebugPropertyValues\"\n-        );\n+\n+        List<String> args = new ArrayList<>(params);\n+        args.add(\"DebugPropertyValues\");\n+        OutputAnalyzer outputAnalyzer = ProcessTools.executeTestJava(args);\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLLogger\/DebugPropertyValues.java","additions":39,"deletions":14,"binary":false,"changes":53,"status":"modified"}]}