{"files":[{"patch":"@@ -1518,0 +1518,20 @@\n+\n+#\n+# Policy for name comparison in keytab and ccache entry lookup\n+#\n+# When looking up a keytab or credentials cache (ccache) entry for a Kerberos\n+# principal, the principal name is compared with the name in the entry.\n+# The comparison is by default case-insensitive. However, many Kerberos\n+# implementations consider principal names to be case-sensitive. Consequently,\n+# if two principals have names that differ only in case, there is a risk that\n+# an incorrect keytab or ccache entry might be selected.\n+#\n+# If this security property is set to \"true\", the comparison of principal\n+# names at keytab and ccache entry lookup is case-sensitive.\n+#\n+# The default value is \"false\".\n+#\n+# If a system property of the same name is also specified, it supersedes the\n+# security property value defined here.\n+#\n+#jdk.security.krb5.name.case.sensitive=false\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,0 +112,6 @@\n+    private static final boolean NAME_CASE_SENSITIVE_IN_MATCH\n+            = \"true\".equalsIgnoreCase(\n+                    SecurityProperties.privilegedGetOverridable(\n+                            \"jdk.security.krb5.name.case.sensitive\"));\n+\n+\n@@ -610,1 +616,9 @@\n-     * Checks if two <code>PrincipalName<\/code> objects have identical values in their corresponding data fields.\n+     * Checks if two <code>PrincipalName<\/code> objects have identical values\n+     * in their corresponding data fields.\n+     * <p>\n+     * If {@systemProperty jdk.security.krb5.name.case.sensitive} is set to true,\n+     * the name comparison is case-sensitive. Otherwise, it's case-insensitive.\n+     * <p>\n+     * It is used in {@link sun.security.krb5.internal.ccache.FileCredentialsCache}\n+     * and {@link sun.security.krb5.internal.ktab.KeyTab} to retrieve ccache\n+     * or keytab entry for a principal.\n@@ -615,1 +629,0 @@\n-    \/\/ It is used in <code>sun.security.krb5.internal.ccache<\/code> package.\n@@ -623,2 +636,8 @@\n-            if (!(this.nameRealm.toString().equalsIgnoreCase(pname.nameRealm.toString()))) {\n-                matched = false;\n+            if (NAME_CASE_SENSITIVE_IN_MATCH) {\n+                if (!(this.nameRealm.toString().equals(pname.nameRealm.toString()))) {\n+                    matched = false;\n+                }\n+            } else {\n+                if (!(this.nameRealm.toString().equalsIgnoreCase(pname.nameRealm.toString()))) {\n+                    matched = false;\n+                }\n@@ -631,2 +650,8 @@\n-                if (!(this.nameStrings[i].equalsIgnoreCase(pname.nameStrings[i]))) {\n-                    matched = false;\n+                if (NAME_CASE_SENSITIVE_IN_MATCH) {\n+                    if (!(this.nameStrings[i].equals(pname.nameStrings[i]))) {\n+                        matched = false;\n+                    }\n+                } else {\n+                    if (!(this.nameStrings[i].equalsIgnoreCase(pname.nameStrings[i]))) {\n+                        matched = false;\n+                    }\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/PrincipalName.java","additions":32,"deletions":7,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8331975\n+ * @summary ensure correct name comparison when a system property is set\n+ * @library \/test\/lib\n+ * @compile -XDignore.symbol.file CaseSensitive.java\n+ * @run main jdk.test.lib.FileInstaller TestHosts TestHosts\n+ * @run main\/othervm -Djdk.net.hosts.file=TestHosts CaseSensitive no\n+ * @run main\/othervm -Djdk.net.hosts.file=TestHosts\n+ *      -Djdk.security.krb5.name.case.sensitive=true CaseSensitive yes\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import org.ietf.jgss.GSSException;\n+import sun.security.jgss.GSSUtil;\n+\n+public class CaseSensitive {\n+\n+    public static void main(String[] args) throws Exception {\n+        switch (args[0]) {\n+            case \"yes\" -> testSensitive();\n+            case \"no\" -> testInsensitive();\n+        }\n+    }\n+\n+    static void testSensitive() throws Exception {\n+        var kdc = new OneKDC(null).writeJAASConf();\n+        kdc.addPrincipal(\"hello\", \"password\".toCharArray());\n+        kdc.writeKtab(OneKDC.KTAB);\n+\n+        Context c = Context.fromJAAS(\"client\");\n+        Context s = Context.fromJAAS(\"com.sun.security.jgss.krb5.accept\");\n+\n+        \/\/ There is only \"hello\". Cannot talk to \"HELLO\"\n+        c.startAsClient(\"HELLO\", GSSUtil.GSS_KRB5_MECH_OID);\n+        s.startAsServer(GSSUtil.GSS_KRB5_MECH_OID);\n+        try {\n+            Context.handshake(c, s);\n+            throw new RuntimeException(\"Should not succeed\");\n+        } catch(GSSException ge) {\n+            System.out.println(ge.getMessage());\n+            System.out.println(\"No HELLO in db. Expected\");\n+        }\n+\n+        \/\/ Add \"HELLO\". Can talk to \"HELLO\" now.\n+        kdc.addPrincipal(\"HELLO\", \"different\".toCharArray());\n+        kdc.writeKtab(OneKDC.KTAB);\n+\n+        c.startAsClient(\"HELLO\", GSSUtil.GSS_KRB5_MECH_OID);\n+        s.startAsServer(GSSUtil.GSS_KRB5_MECH_OID);\n+        Context.handshake(c, s);\n+        \/\/ Name could be partial without realm, so only compare the beginning\n+        Asserts.assertTrue(c.x().getTargName().toString().startsWith(\"HELLO\"),\n+                c.x().getTargName().toString());\n+        Asserts.assertTrue(s.x().getTargName().toString().startsWith(\"HELLO\"),\n+                s.x().getTargName().toString());\n+\n+        \/\/ Can also talk to \"hello\", which has a different password.\n+        c.startAsClient(\"hello\", GSSUtil.GSS_KRB5_MECH_OID);\n+        s.startAsServer(GSSUtil.GSS_KRB5_MECH_OID);\n+        Context.handshake(c, s);\n+        Asserts.assertTrue(c.x().getTargName().toString().startsWith(\"hello\"),\n+                c.x().getTargName().toString());\n+        Asserts.assertTrue(s.x().getTargName().toString().startsWith(\"hello\"),\n+                s.x().getTargName().toString());\n+    }\n+\n+    static void testInsensitive() throws Exception {\n+        var kdc = new OneKDC(null).writeJAASConf();\n+        kdc.addPrincipal(\"hello\", \"password\".toCharArray());\n+        kdc.writeKtab(OneKDC.KTAB);\n+\n+        Context c = Context.fromJAAS(\"client\");\n+        Context s = Context.fromJAAS(\"com.sun.security.jgss.krb5.accept\");\n+\n+        \/\/ There is only \"hello\" but we can talk to \"HELLO\".\n+        c.startAsClient(\"HELLO\", GSSUtil.GSS_KRB5_MECH_OID);\n+        s.startAsServer(GSSUtil.GSS_KRB5_MECH_OID);\n+        Context.handshake(c, s);\n+        Asserts.assertTrue(c.x().getTargName().toString().startsWith(\"HELLO\"),\n+                c.x().getTargName().toString());\n+        Asserts.assertTrue(s.x().getTargName().toString().startsWith(\"HELLO\"),\n+                s.x().getTargName().toString());\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/CaseSensitive.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,0 +146,3 @@\n+    private static final boolean NAME_CASE_SENSITIVE\n+            = Boolean.getBoolean(\"jdk.security.krb5.name.case.sensitive\");\n+\n@@ -157,2 +160,1 @@\n-    private TreeMap<String,char[]> passwords = new TreeMap<>\n-            (String.CASE_INSENSITIVE_ORDER);\n+    private TreeMap<String,char[]> passwords = newTreeMap();\n@@ -162,2 +164,1 @@\n-    private TreeMap<String,String> salts = new TreeMap<>\n-            (String.CASE_INSENSITIVE_ORDER);\n+    private TreeMap<String,String> salts = newTreeMap();\n@@ -168,2 +169,1 @@\n-    private TreeMap<String,byte[]> s2kparamses = new TreeMap<>\n-            (String.CASE_INSENSITIVE_ORDER);\n+    private TreeMap<String,byte[]> s2kparamses = newTreeMap();\n@@ -172,2 +172,1 @@\n-    private TreeMap<String,KDC> aliasReferrals = new TreeMap<>\n-            (String.CASE_INSENSITIVE_ORDER);\n+    private TreeMap<String,KDC> aliasReferrals = newTreeMap();\n@@ -176,2 +175,7 @@\n-    private TreeMap<String,PrincipalName> alias2Principals = new TreeMap<>\n-            (String.CASE_INSENSITIVE_ORDER);\n+    private TreeMap<String,PrincipalName> alias2Principals = newTreeMap();\n+\n+    private static <T> TreeMap<String,T> newTreeMap() {\n+        return NAME_CASE_SENSITIVE\n+                ? new TreeMap<>()\n+                : new TreeMap<>(String.CASE_INSENSITIVE_ORDER);\n+    }\n@@ -357,1 +361,1 @@\n-                int kvno = 0;\n+                int kvno = -1; \/\/ always create new keys\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/KDC.java","additions":16,"deletions":12,"binary":false,"changes":28,"status":"modified"}]}