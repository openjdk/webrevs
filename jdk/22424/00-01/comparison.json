{"files":[{"patch":"@@ -3026,1 +3026,1 @@\n-             setAlwaysOnTop(aot); \/\/ since 1.5; subject to permission check\n+             setAlwaysOnTop(aot);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Window.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,0 @@\n-    private static final Border SAFE_NO_FOCUS_BORDER = new EmptyBorder(1, 1, 1, 1);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/DefaultListCellRenderer.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6367,3 +6367,0 @@\n-        \/\/ Get a PrinterJob.\n-        \/\/ Do this before anything with side-effects since it may throw a\n-        \/\/ security exception - in which case we don't want to do anything else.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTable.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -161,15 +161,17 @@\n-                    DelayedTimer delayedTimer = timer.delayedTimer;\n-                    if (delayedTimer == runningTimer) {\n-                        \/*\n-                         * Timer is not removed (delayedTimer != null)\n-                         * or not removed and added (runningTimer == delayedTimer)\n-                         * after we get it from the queue and before the\n-                         * lock on the timer is acquired\n-                         *\/\n-                        timer.post(); \/\/ have timer post an event\n-                        timer.delayedTimer = null;\n-                        if (timer.isRepeats()) {\n-                            delayedTimer.setTime(now()\n-                                + TimeUnit.MILLISECONDS.toNanos(\n-                                      timer.getDelay()));\n-                            addTimer(delayedTimer);\n+                    try {\n+                        DelayedTimer delayedTimer = timer.delayedTimer;\n+                        if (delayedTimer == runningTimer) {\n+                            \/*\n+                             * Timer is not removed (delayedTimer != null)\n+                             * or not removed and added (runningTimer == delayedTimer)\n+                             * after we get it from the queue and before the\n+                             * lock on the timer is acquired\n+                             *\/\n+                            timer.post(); \/\/ have timer post an event\n+                            timer.delayedTimer = null;\n+                            if (timer.isRepeats()) {\n+                                delayedTimer.setTime(now()\n+                                    + TimeUnit.MILLISECONDS.toNanos(\n+                                          timer.getDelay()));\n+                                addTimer(delayedTimer);\n+                            }\n@@ -177,0 +179,5 @@\n+    \n+                        \/\/ Allow run other threads on systems without kernel threads\n+                        timer.getLock().newCondition().awaitNanos(1);\n+                    } finally {\n+                        timer.getLock().unlock();\n@@ -178,4 +185,0 @@\n-\n-                    \/\/ Allow run other threads on systems without kernel threads\n-                    timer.getLock().newCondition().awaitNanos(1);\n-                    timer.getLock().unlock();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/TimerQueue.java","additions":22,"deletions":19,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n-    private static final Border SAFE_NO_FOCUS_BORDER = new EmptyBorder(1, 1, 1, 1);\n@@ -71,1 +70,0 @@\n-    @SuppressWarnings(\"removal\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicComboBoxRenderer.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,0 @@\n-    private static final Object BASIC_LABEL_UI_KEY = new Object();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicLabelUI.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -57,2 +57,0 @@\n-    private static final Object METAL_LABEL_UI_KEY = new Object();\n-\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalLabelUI.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,3 +108,0 @@\n-    private static Icon SAFE_HORIZ_THUMB_ICON;\n-    private static Icon SAFE_VERT_THUMB_ICON;\n-\n@@ -144,4 +141,2 @@\n-        horizThumbIcon = SAFE_HORIZ_THUMB_ICON =\n-                UIManager.getIcon( \"Slider.horizontalThumbIcon\" );\n-        vertThumbIcon = SAFE_VERT_THUMB_ICON =\n-                UIManager.getIcon( \"Slider.verticalThumbIcon\" );\n+        horizThumbIcon = UIManager.getIcon( \"Slider.horizontalThumbIcon\" );\n+        vertThumbIcon = UIManager.getIcon( \"Slider.verticalThumbIcon\" );\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalSliderUI.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -96,1 +96,0 @@\n-    private static final Border SAFE_NO_FOCUS_BORDER = new EmptyBorder(1, 1, 1, 1);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/table\/DefaultTableCellRenderer.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    private static final OSType CURRENT_OSTYPE = getOSTypeImpl();  \/\/ No DoPriv needed\n+    private static final OSType CURRENT_OSTYPE = getOSTypeImpl();\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/OSInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,5 +60,0 @@\n-    \/\/TODO: uncomment three lines below after moving functionality to java.awt.Robot\n-    \/\/{\n-    \/\/    syncDelay = AccessController.doPrivileged(new GetIntegerAction(\"java.awt.robotdelay\", DEFAULT_SYNC_DELAY));\n-    \/\/}\n-\n","filename":"test\/jdk\/lib\/client\/ExtendedRobot.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}