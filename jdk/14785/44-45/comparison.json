{"files":[{"patch":"@@ -98,1 +98,1 @@\n-          \"is enabled.\"                                                     \\\n+          \"is enabled.\")                                                    \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3592,2 +3592,1 @@\n-  \/\/   xboi = -boi = (-base - offset - invar)                                 (13a, stride * scale > 0)\n-  \/\/   xboi = +boi = (+base + offset + invar)                                 (13b, stride * scale < 0)\n+  \/\/   xboi = (stride * scale > 0) ? -boi              : boi                  (13)\n@@ -3600,0 +3599,11 @@\n+  \/\/\n+  \/\/ When we have computed adjust_pre_iter, we update the pre-loop limit\n+  \/\/ with (3a, b). However, we have to make sure that the adjust_pre_iter\n+  \/\/ additional pre-loop iterations do not lead the pre-loop to execute\n+  \/\/ iterations that would step over the original limit (orig_limit) of\n+  \/\/ the loop. Hence, we must constrain the updated limit as follows:\n+  \/\/\n+  \/\/ constrained_limit = MIN(old_limit + adjust_pre_iter, orig_limit)\n+  \/\/                   = MIN(new_limit,                   orig_limit)         (15a, stride > 0)\n+  \/\/ constrained_limit = MAX(old_limit - adjust_pre_iter, orig_limit)\n+  \/\/                   = MAX(new_limit,                   orig_limit)         (15a, stride < 0)\n@@ -3655,3 +3665,3 @@\n-  \/\/ 1: Compute:\n-  \/\/    xboi = (-base - offset - invar)         (stride * scale > 0)\n-  \/\/    xboi = (+base + offset + invar)         (stride * scale < 0)\n+  \/\/ 1: Compute (13a, b):\n+  \/\/    xboi = -boi = (-base - offset - invar)         (stride * scale > 0)\n+  \/\/    xboi = +boi = (+base + offset + invar)         (stride * scale < 0)\n@@ -3701,1 +3711,2 @@\n-  \/\/ 2: Compute: XBOI = xboi \/ abs(scale)\n+  \/\/ 2: Compute (14):\n+  \/\/    XBOI = xboi \/ abs(scale)\n@@ -3708,1 +3719,4 @@\n-  \/\/ 3: Compute: XBOI_OP_old_limit = XBOI OP old_limit\n+  \/\/ 3: Compute (12):\n+  \/\/    adjust_pre_iter = (XBOI OP old_limit) % AW\n+  \/\/\n+  \/\/ 3.1: XBOI_OP_old_limit = XBOI OP old_limit\n@@ -3718,1 +3732,1 @@\n-  \/\/ 4: Compute:\n+  \/\/ 3.2: Compute:\n@@ -3729,1 +3743,1 @@\n-  \/\/ 5: Compute:\n+  \/\/ 4: Compute (3a, b):\n@@ -3741,2 +3755,3 @@\n-  \/\/ 6. Make sure not to exceed the original limit with the new limit\n-  Node* constrained =\n+  \/\/ 5: Compute (15a, b):\n+  \/\/    Prevent pre-loop from going past the original limit of the loop.\n+  Node* constrained_limit =\n@@ -3745,3 +3760,3 @@\n-  _igvn.register_new_node_with_optimizer(constrained);\n-  _phase->set_ctrl(constrained, pre_ctrl);\n-  _igvn.replace_input_of(pre_opaq, 1, constrained);\n+  _igvn.register_new_node_with_optimizer(constrained_limit);\n+  _phase->set_ctrl(constrained_limit, pre_ctrl);\n+  _igvn.replace_input_of(pre_opaq, 1, constrained_limit);\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":29,"deletions":14,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -772,1 +772,1 @@\n-  \/\/ Attribute init either to C_const or to C_init term.\n+  \/\/ Attribute init (i.e. _init_node) either to C_const or to C_init term.\n@@ -774,1 +774,1 @@\n-  const int C_init =       _init_node->is_ConI() ? 0                                : _scale;\n+  const int C_const =      _offset + C_const_init * _scale;\n@@ -779,2 +779,2 @@\n-  const int C_const = _offset + C_const_init * _scale;\n-  const int C_pre = _scale * _pre_stride;\n+  const int C_init = _init_node->is_ConI() ? 0 : _scale;\n+  const int C_pre =  _scale * _pre_stride;\n","filename":"src\/hotspot\/share\/opto\/vectorization.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}