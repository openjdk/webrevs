{"files":[{"patch":"@@ -1675,1 +1675,1 @@\n-    \/\/ iv = init + pre_iter * pre_stride + j * main_stride\n+    \/\/ iv = init + pre_iter * pre_stride + main_iter * main_stride\n@@ -1678,1 +1678,1 @@\n-    tty->print_cr(\" + pre_iter * pre_stride(%d) + j * main_stride(%d)\",\n+    tty->print_cr(\" + pre_iter * pre_stride(%d) + main_iter * main_stride(%d)\",\n@@ -1714,1 +1714,1 @@\n-  \/\/   iv = init + pre_stride * pre_iter + main_stride * j\n+  \/\/   iv = init + pre_stride * pre_iter + main_stride * main_iter\n@@ -1720,1 +1720,1 @@\n-  \/\/ j:           number of main-loop iterations (j >= 0)\n+  \/\/ main_iter:   number of main-loop iterations (main_iter >= 0)\n@@ -1733,1 +1733,1 @@\n-  \/\/                          \\   + scale * main_stride * j                 + C_main  * j               (main-loop term, for any j >= 0)\n+  \/\/                          \\   + scale * main_stride * main_iter         + C_main  * main_iter       (main-loop term)\n@@ -1749,2 +1749,2 @@\n-  \/\/   6) The \"C_main * j\" term represents how much the iv is increased during \"j\"\n-  \/\/      main-loop iterations.\n+  \/\/   6) The \"C_main * main_iter\" term represents how much the iv is increased\n+  \/\/      during \"main_iter\" main-loop iterations.\n@@ -1766,1 +1766,1 @@\n-    tty->print_cr(\"C_const(%d) + C_invar(%d) * var_invar + C_init(%d) * var_init + C_pre(%d) * pre_iter + C_main(%d) * j\",\n+    tty->print_cr(\"C_const(%d) + C_invar(%d) * var_invar + C_init(%d) * var_init + C_pre(%d) * pre_iter + C_main(%d) * main_iter\",\n@@ -1796,1 +1796,1 @@\n-  \/\/   C_const + C_invar * var_invar + C_init * var_init + C_pre * pre_iter + C_main * j = 0 (modulo aw)      (1)\n+  \/\/   C_const + C_invar * var_invar + C_init * var_init + C_pre * pre_iter + C_main * main_iter = 0 (modulo aw)      (1)\n@@ -1798,1 +1798,1 @@\n-  \/\/ Alignment must be maintained over all main-loop iterations, i.e. for any j >= 0, we require:\n+  \/\/ Alignment must be maintained over all main-loop iterations, i.e. for any main_iter >= 0, we require:\n@@ -1800,1 +1800,1 @@\n-  \/\/   C_main % aw = 0                                                                                        (2*)\n+  \/\/   C_main % aw = 0                                                                                                (2*)\n@@ -1808,1 +1808,1 @@\n-    tty->print(\" + C_pre(%d) * pre_iter + C_main(%d) * j = 0 (mod aw(%d))\",\n+    tty->print(\" + C_pre(%d) * pre_iter + C_main(%d) * main_iter = 0 (mod aw(%d))\",\n@@ -2034,1 +2034,1 @@\n-\/\/ j = 0 \/\/ main-loop iteration counter\n+\/\/ main_iter = 0 \/\/ main-loop iteration counter\n@@ -2038,3 +2038,3 @@\n-\/\/   i = pre_iter + j * unroll_factor\n-\/\/   iv = init + i * pre_stride = init + pre_iter * pre_stride + j * unroll_factor * pre_stride\n-\/\/                              = init + pre_iter * pre_stride + j * main_stride\n+\/\/   i = pre_iter + main_iter * unroll_factor\n+\/\/   iv = init + i * pre_stride = init + pre_iter * pre_stride + main_iter * unroll_factor * pre_stride\n+\/\/                              = init + pre_iter * pre_stride + main_iter * main_stride\n@@ -2044,1 +2044,1 @@\n-\/\/   j++\n+\/\/   main_iter++\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -231,0 +231,2 @@\n+\/\/ TODO restate this a bit with since I changed the new proof!\n+\/\/\n@@ -233,1 +235,1 @@\n-\/\/ Such that the address is aligned for any j >= 0:\n+\/\/ Such that the address is aligned for any main_iter >= 0:\n@@ -237,1 +239,1 @@\n-\/\/                               + scale * main_stride * j\n+\/\/                               + scale * main_stride * main_iter\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}