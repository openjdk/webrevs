{"files":[{"patch":"@@ -261,0 +261,1 @@\n+\n@@ -275,0 +276,1 @@\n+\n@@ -288,0 +290,1 @@\n+\n@@ -311,9 +314,11 @@\n-  bool is_valid() const { return _valid; }\n-  const char* reason() const { assert(!is_valid(), \"only invalid has reason\"); return _reason; }\n-  int r() const { assert(is_valid(), \"only valid has solution\"); return _r; }\n-  int q() const { assert(is_valid(), \"only valid has solution\"); return _q; }\n-  MemNode* mem_ref() const { assert(is_valid(), \"valid and not trivial\"); return _mem_ref; }\n-  int aw() const { assert(is_valid() && !is_trivial(), \"valid and not trivial\"); return _aw; }\n-  bool is_trivial() const { return _trivial; }\n-  Node* invar_dependency() const { return _invar_dependency; }\n-  int scale_dependency() const { return _scale_dependency; }\n+\n+  bool is_valid() const          { return _valid; }\n+  bool is_trivial() const        { return _trivial; }\n+  const char* reason() const     { assert(!is_valid(), \"only invalid has reason\"); return _reason; }\n+  int r() const                  { assert(is_valid(), \"only valid has solution\"); return _r; }\n+  int q() const                  { assert(is_valid(), \"only valid has solution\"); return _q; }\n+  MemNode* mem_ref() const       { assert(is_valid(), \"valid and not trivial\"); return _mem_ref; }\n+  int aw() const                 { assert(is_valid() && !is_trivial(), \"valid and not trivial\"); return _aw; }\n+  Node* invar_dependency() const { assert(is_valid() && !is_trivial(), \"valid and not trivial\"); return _invar_dependency; }\n+  int scale_dependency() const   { assert(is_valid() && !is_trivial(), \"valid and not trivial\"); return _scale_dependency; }\n+\n@@ -352,0 +357,1 @@\n+\n@@ -370,0 +376,1 @@\n+\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"}]}