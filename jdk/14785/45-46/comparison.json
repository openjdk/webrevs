{"files":[{"patch":"@@ -803,1 +803,2 @@\n-  \/\/ adjusting the pre-loop limit (pre_iter). We decompose pre_iter:\n+  \/\/ adjusting the pre-loop iteration count (pre_iter), which is controlled by the pre-loop\n+  \/\/ limit. We decompose pre_iter:\n@@ -824,1 +825,7 @@\n-  \/\/ We can only guarantee solutions to (4a) and (4b) if:\n+  \/\/ If we cannot prove that the C_const, init and invar terms can be aligned independently, then\n+  \/\/ we can always modify init (by 1) or invar (by var_invar), and hence invalidate (3). Hence,\n+  \/\/ this strengthening is necessary to guarantee statically that (3) has a solution, i.e. that\n+  \/\/ we can ensure alignment for and init or invar.\n+  \/\/\n+  \/\/ We can only guarantee solutions to (4a) and (4b) if C_init and C_invar are zero or\n+  \/\/ multiples of C_pre:\n@@ -829,1 +836,1 @@\n-  \/\/ Which means there are X and Y such that:\n+  \/\/ Which means there are integers X and Y such that:\n@@ -900,1 +907,1 @@\n-  \/\/ that pre_q >= 0 and 0 <= pre_r < pre_q:\n+  \/\/ that 0 <= pre_r < pre_q:\n@@ -906,0 +913,2 @@\n+  \/\/   (C_const + C_pre * pre_iter_C_const         ) % aw = 0                     (take (4c))\n+  \/\/   (C_const + C_pre * (pre_r + pre_q * m)      ) % aw = 0                     (apply (7))\n@@ -915,1 +924,1 @@\n-  const int  pre_q = _aw \/ abs(C_pre);\n+  const int pre_q = _aw \/ abs(C_pre);\n@@ -926,1 +935,1 @@\n-  \/\/ Hence, the solution depends on:\n+  \/\/ Hence, the solution for pre_iter depends on:\n","filename":"src\/hotspot\/share\/opto\/vectorization.cpp","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"}]}