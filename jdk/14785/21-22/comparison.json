{"files":[{"patch":"@@ -8255,1 +8255,1 @@\n-  ins_pipe( pipe_slow );\n+  ins_pipe(pipe_slow);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8979,1 +8979,1 @@\n-  ins_pipe( pipe_slow );\n+  ins_pipe(pipe_slow);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-          \"Check that vector store\/load are aligned if AlignVector is on.\") \\\n+          \"Check that vector stores\/loads are aligned if AlignVector is on.\") \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    warning(\"VerifyAlignVector disabled because AlignVector not enabled.\");\n+    warning(\"VerifyAlignVector disabled because AlignVector is not enabled.\");\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -612,1 +612,1 @@\n-  \/\/ is required, we may change the reference later (see filter_packs_for_alignment).\n+  \/\/ is required, we may change the reference later (see filter_packs_for_alignment()).\n@@ -1694,1 +1694,1 @@\n-  \/\/ We analyze the adress of the mem_ref. The idea is to disassemble it into a linear\n+  \/\/ We analyze the address of mem_ref. The idea is to disassemble it into a linear\n@@ -1708,1 +1708,1 @@\n-  \/\/ pre_iter:    number of pre-loop iterations (adjustible via pre-loop limit)\n+  \/\/ pre_iter:    number of pre-loop iterations (adjustable via pre-loop limit)\n@@ -1713,1 +1713,1 @@\n-  \/\/ expanding the iv varialbe. In a second step, we reshape the expression again, and\n+  \/\/ expanding the iv variable. In a second step, we reshape the expression again, and\n@@ -1726,1 +1726,1 @@\n-  \/\/   1) The \"base\" of the address is the address of a java object (e.g. array),\n+  \/\/   1) The \"base\" of the address is the address of a Java object (e.g. array),\n@@ -1749,0 +1749,1 @@\n+    C_init = 0;\n@@ -1750,0 +1751,1 @@\n+    C_const_init = 0\n@@ -1796,1 +1798,1 @@\n-  \/\/ Alignment must be maintained over all main-loop iterations, i.e for any j >= 0, we require:\n+  \/\/ Alignment must be maintained over all main-loop iterations, i.e. for any j >= 0, we require:\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"}]}