{"files":[{"patch":"@@ -559,0 +559,2 @@\n+        \/\/ Only run for 90% of the time, and subtract some margin. This ensures the shutdown has sufficient time,\n+        \/\/ even for very slow runs.\n@@ -560,2 +562,4 @@\n-                                   Utils.adjustTimeout(Utils.DEFAULT_TEST_TIMEOUT) -\n-                                   20_000; \/\/ somewhat arbitrary margin\n+                                   (long)(Utils.adjustTimeout(Utils.DEFAULT_TEST_TIMEOUT) * 0.9) -\n+                                   20_000;\n+        long test_hard_timeout = System.currentTimeMillis() +\n+                                Utils.adjustTimeout(Utils.DEFAULT_TEST_TIMEOUT);\n@@ -568,0 +572,2 @@\n+                long allowance = test_time_allowance - System.currentTimeMillis();\n+                long until_timeout = test_hard_timeout - System.currentTimeMillis();\n@@ -569,1 +575,1 @@\n-                                   \", time allowance: \" + (test_time_allowance - System.currentTimeMillis()));\n+                                   \", time allowance: \" + allowance + \", until timeout: \" + until_timeout);\n@@ -581,1 +587,4 @@\n-                    System.out.println(\"TEST PASSED: hit maximal time allownance during iteration \" + i);\n+                    allowance = test_time_allowance - System.currentTimeMillis();\n+                    until_timeout = test_hard_timeout - System.currentTimeMillis();\n+                    System.out.println(\"TEST PASSED: hit maximal time allownance during iteration \" + i +\n+                                       \", time allowance: \" + allowance + \", until timeout: \" + until_timeout);\n@@ -586,1 +595,3 @@\n-        System.out.println(\"TEST PASSED\");\n+        long allowance = test_time_allowance - System.currentTimeMillis();\n+        long until_timeout = test_hard_timeout - System.currentTimeMillis();\n+        System.out.println(\"TEST PASSED, time allowance: \" + allowance + \", until timeout: \" + until_timeout);\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestAlignVectorFuzzer.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"}]}