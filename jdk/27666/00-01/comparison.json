{"files":[{"patch":"@@ -26,1 +26,2 @@\n- * @summary\n+ * @bug 8369258\n+ * @summary C2: enable ReassociateInvariants for all loop types\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestReassociateInvariants.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @bug 8324751\n+ * @bug 8324751 8369258\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestMemorySegment_ReassociateInvariants1.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @bug 8324751\n+ * @bug 8324751 8369258\n@@ -84,3 +84,0 @@\n-    \/\/ If you see this IR rule fail: investigate JDK-8365982, possibly close it and fix this IR rule!\n-    \/\/ Also: consider renaming the file to something more descriptive: what have you fixed with this?\n-    \/\/ And: you may now be able to tighten IR rules in TestAliasingFuzzer.java\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestMemorySegment_ReassociateInvariants2.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}