{"files":[{"patch":"@@ -27,3 +27,2 @@\n- * @summary To check proper WINDOW_EVENTS are triggered when Frame gains or losses the focus\n- * @library \/lib\/client\n- * @build ExtendedRobot\n+ * @summary To check proper WINDOW_EVENTS are triggered when Frame gains\n+ * or loses the focus\n@@ -33,0 +32,1 @@\n+import java.awt.AWTException;\n@@ -36,0 +36,2 @@\n+import java.awt.Component;\n+import java.awt.Dimension;\n@@ -39,0 +41,2 @@\n+import java.awt.Point;\n+import java.awt.Robot;\n@@ -46,0 +50,5 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n@@ -49,9 +58,3 @@\n-    private Frame frame, frame2;\n-    private Button button, button2;\n-    private TextField textField, textField2;\n-    private volatile int eventType;\n-    private final Object lock1 = new Object();\n-    private final Object lock2 = new Object();\n-    private final Object lock3 = new Object();\n-    private boolean passed = true;\n-    private final int delay = 150;\n+    private static Frame frame, frame2;\n+    private static Button button, button2;\n+    private static TextField textField, textField2;\n@@ -59,15 +62,3 @@\n-    public static void main(String[] args) throws Exception {\n-        ActiveAWTWindowTest test = new ActiveAWTWindowTest();\n-        try {\n-            test.doTest();\n-        } finally {\n-            EventQueue.invokeAndWait(() -> {\n-                if (test.frame != null) {\n-                    test.frame.dispose();\n-                }\n-                if (test.frame2 != null) {\n-                    test.frame2.dispose();\n-                }\n-            });\n-        }\n-    }\n+    private static CountDownLatch windowActivatedLatch = new CountDownLatch(1);\n+    private static CountDownLatch windowDeactivatedLatch = new CountDownLatch(1);\n+    private static CountDownLatch windowFocusGainedLatch = new CountDownLatch(1);\n@@ -75,9 +66,13 @@\n-    public ActiveAWTWindowTest() {\n-        try{\n-            EventQueue.invokeAndWait( () -> {\n-                    initializeGUI();\n-            });\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-            throw new RuntimeException(\"Interrupted or unexpected Exception occured\");\n-        }\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            initializeGUI();\n+        });\n+        doTest();\n+        EventQueue.invokeAndWait(() -> {\n+            if (frame != null) {\n+                frame.dispose();\n+            }\n+            if (frame2 != null) {\n+                frame2.dispose();\n+            }\n+        });\n@@ -86,1 +81,1 @@\n-    private void initializeGUI() {\n+    private static void initializeGUI() {\n@@ -89,1 +84,0 @@\n-\n@@ -93,0 +87,1 @@\n+\n@@ -94,0 +89,1 @@\n+            @Override\n@@ -96,7 +92,1 @@\n-                synchronized (lock3) {\n-                    try {\n-                        lock3.notifyAll();\n-                    } catch (Exception ex) {\n-                        ex.printStackTrace();\n-                    }\n-                }\n+                windowFocusGainedLatch.countDown();\n@@ -105,0 +95,1 @@\n+            @Override\n@@ -106,1 +97,1 @@\n-                    System.out.println(\"Frame Focus lost\");\n+                System.out.println(\"Frame Focus lost\");\n@@ -109,0 +100,1 @@\n+\n@@ -110,0 +102,1 @@\n+            @Override\n@@ -111,9 +104,2 @@\n-                eventType = WindowEvent.WINDOW_ACTIVATED;\n-                System.out.println(\"Undecorated Frame is activated\\n\");\n-                synchronized (lock1) {\n-                    try {\n-                        lock1.notifyAll();\n-                    } catch (Exception ex) {\n-                        ex.printStackTrace();\n-                    }\n-                }\n+                System.out.println(\"Undecorated Frame is activated\");\n+                windowActivatedLatch.countDown();\n@@ -122,0 +108,1 @@\n+            @Override\n@@ -123,9 +110,2 @@\n-                eventType = WindowEvent.WINDOW_DEACTIVATED;\n-                System.out.println(\"Undecorated Frame got Deactivated\\n\");\n-                synchronized (lock2) {\n-                    try {\n-                        lock2.notifyAll();\n-                    } catch (Exception ex) {\n-                        ex.printStackTrace();\n-                    }\n-                }\n+                System.out.println(\"Undecorated Frame got Deactivated\");\n+                windowDeactivatedLatch.countDown();\n@@ -134,0 +114,1 @@\n+\n@@ -136,5 +117,1 @@\n-        button.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent e) {\n-                textField.setText(\"Focus gained\");\n-            }\n-        });\n+        button.addActionListener(e -> textField.setText(\"Focus gained\"));\n@@ -152,0 +129,1 @@\n+\n@@ -154,5 +132,1 @@\n-        button2.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent e) {\n-                textField2.setText(\"Got the focus\");\n-            }\n-        });\n+        button2.addActionListener(e -> textField2.setText(\"Got the focus\"));\n@@ -163,2 +137,0 @@\n-\n-        frame.toFront();\n@@ -167,10 +139,3 @@\n-    public void doTest() {\n-        ExtendedRobot robot;\n-        try {\n-            robot = new ExtendedRobot();\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-            throw new RuntimeException(\"Cannot create robot\");\n-        }\n-\n-        robot.setAutoDelay(delay);\n+    private static void doTest() throws AWTException, InterruptedException  {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(150);\n@@ -178,20 +143,2 @@\n-\n-        robot.waitForIdle(5*delay);\n-        robot.mouseMove(button.getLocationOnScreen().x + button.getSize().width \/ 2,\n-                        button.getLocationOnScreen().y + button.getSize().height \/ 2);\n-        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-\n-        if (eventType != WindowEvent.WINDOW_ACTIVATED) {\n-            synchronized (lock1) {\n-                try {\n-                    lock1.wait(delay * 10);\n-                } catch (Exception e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        }\n-        if (eventType != WindowEvent.WINDOW_ACTIVATED) {\n-            passed = false;\n-            System.err.println(\"WINDOW_ACTIVATED event did not occur when the \" +\n-                    \"undecorated frame is activated!\");\n+        if (!windowFocusGainedLatch.await(1000, TimeUnit.MILLISECONDS)) {\n+            throw new RuntimeException(\"Frame did not gain focus\");\n@@ -199,0 +146,1 @@\n+        clickButtonCenter(robot, button);\n@@ -200,14 +148,2 @@\n-        eventType = -1;\n-\n-        robot.mouseMove(button2.getLocationOnScreen().x + button2.getSize().width \/ 2,\n-                        button2.getLocationOnScreen().y + button2.getSize().height \/ 2);\n-        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-\n-        if (eventType != WindowEvent.WINDOW_DEACTIVATED) {\n-            synchronized (lock2) {\n-                try {\n-                    lock2.wait(delay * 10);\n-                } catch (Exception e) {\n-                }\n-            }\n+        if (!windowActivatedLatch.await(1000, TimeUnit.MILLISECONDS)) {\n+            throw new RuntimeException(\"Frame was not activated\");\n@@ -215,4 +151,4 @@\n-        if (eventType != WindowEvent.WINDOW_DEACTIVATED) {\n-            passed = false;\n-            System.err.println(\"FAIL: WINDOW_DEACTIVATED event did not occur for the \" +\n-                    \"undecorated frame when another frame gains focus!\");\n+        clickButtonCenter(robot, button2);\n+\n+        if (!windowDeactivatedLatch.await(2000, TimeUnit.MILLISECONDS)) {\n+            throw new RuntimeException(\"Frame was not deactivated\");\n@@ -221,3 +157,1 @@\n-            passed = false;\n-            System.err.println(\"FAIL: The undecorated frame has focus even when \" +\n-                        \"another frame is clicked!\");\n+            throw new RuntimeException(\"Frame did not lose focus\");\n@@ -225,0 +159,1 @@\n+    }\n@@ -226,7 +161,8 @@\n-        if (!passed) {\n-            \/\/captureScreenAndSave();\n-            System.err.println(\"Test failed!\");\n-            throw new RuntimeException(\"Test failed.\");\n-        } else {\n-            System.out.println(\"Test passed\");\n-        }\n+    private static void clickButtonCenter(Robot robot, Component button) {\n+        Point location = button.getLocationOnScreen();\n+        Dimension size = button.getSize();\n+        int x = location.x + size.width \/ 2;\n+        int y = location.y + size.height \/ 2;\n+        robot.mouseMove(x, y);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -235,0 +171,1 @@\n+\n","filename":"test\/jdk\/java\/awt\/Frame\/MiscUndecorated\/ActiveAWTWindowTest.java","additions":71,"deletions":134,"binary":false,"changes":205,"status":"modified"}]}