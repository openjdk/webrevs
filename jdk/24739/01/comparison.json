{"files":[{"patch":"@@ -0,0 +1,187 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import javax.swing.DefaultCellEditor;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.border.BevelBorder;\n+import javax.swing.table.AbstractTableModel;\n+import javax.swing.table.DefaultTableCellRenderer;\n+import javax.swing.table.TableCellRenderer;\n+import javax.swing.table.TableColumn;\n+import javax.swing.table.TableModel;\n+\n+\/*\n+ * @test\n+ * @bug 4201917\n+ * @summary Shift Click in table before making selection\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ShiftClick\n+ *\/\n+\n+public class ShiftClick {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Shift click in the table. Check that all cells\n+            from the first through where you clicked are selected.\n+            If the cells are selected, press pass, otherwise fail.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(ShiftClick::createTestUI)\n+                .logArea(6)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"ShiftClick\");\n+\n+        \/\/ Take the dummy data from SwingSet.\n+        final String[] names = {\"First Name\", \"Last Name\", \"Favorite Color\",\n+                \"Favorite Number\", \"Vegetarian\"};\n+        final Object[][] data = {\n+                {\"Mark\", \"Andrews\", \"Red\", 2, true},\n+                {\"Tom\", \"Ball\", \"Blue\", 99, false},\n+                {\"Alan\", \"Chung\", \"Green\", 838, false},\n+                {\"Jeff\", \"Dinkins\", \"Turquois\", 8, true},\n+                {\"Amy\", \"Fowler\", \"Yellow\", 3, false},\n+                {\"Brian\", \"Gerhold\", \"Green\", 0, false},\n+                {\"James\", \"Gosling\", \"Pink\", 21, false},\n+                {\"David\", \"Karlton\", \"Red\", 1, false},\n+                {\"Dave\", \"Kloba\", \"Yellow\", 14, false},\n+                {\"Peter\", \"Korn\", \"Purple\", 12, false},\n+                {\"Phil\", \"Milne\", \"Purple\", 3, false},\n+                {\"Dave\", \"Moore\", \"Green\", 88, false},\n+                {\"Hans\", \"Muller\", \"Maroon\", 5, false},\n+                {\"Rick\", \"Levenson\", \"Blue\", 2, false},\n+                {\"Tim\", \"Prinzing\", \"Blue\", 22, false},\n+                {\"Chester\", \"Rose\", \"Black\", 0, false},\n+                {\"Ray\", \"Ryan\", \"Gray\", 77, false},\n+                {\"Georges\", \"Saab\", \"Red\", 4, false},\n+                {\"Willie\", \"Walker\", \"Phthalo Blue\", 4, false},\n+                {\"Kathy\", \"Walrath\", \"Blue\", 8, false},\n+                {\"Arnaud\", \"Weber\", \"Green\", 44, false}\n+        };\n+\n+        \/\/ Create a model of the data.\n+        TableModel dataModel = new AbstractTableModel() {\n+            \/\/ These methods always need to be implemented.\n+            public int getColumnCount() {\n+                return names.length;\n+            }\n+\n+            public int getRowCount() {\n+                return data.length;\n+            }\n+\n+            public Object getValueAt(int row, int col) {\n+                return data[row][col];\n+            }\n+\n+            \/\/ The default implementations of these methods in\n+            \/\/ AbstractTableModel would work, but we can refine them.\n+            public String getColumnName(int column) {\n+                return names[column];\n+            }\n+\n+            public Class getColumnClass(int c) {\n+                return getValueAt(0, c).getClass();\n+            }\n+\n+            public boolean isCellEditable(int row, int col) {\n+                return true;\n+            }\n+\n+            public void setValueAt(Object aValue, int row, int column) {\n+                System.out.println(\"Setting value to: \" + aValue);\n+                data[row][column] = aValue;\n+            }\n+        };\n+\n+        \/\/ Create the table\n+        JTable tableView = new JTable(dataModel);\n+        \/\/ Turn off auto-resizing so that we can set column sizes programmatically.\n+        \/\/ In this mode, all columns will get their preferred widths, as set blow.\n+        tableView.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);\n+\n+        \/\/ Create a combo box to show that you can use one in a table.\n+        JComboBox comboBox = new JComboBox();\n+        comboBox.addItem(\"Red\");\n+        comboBox.addItem(\"Orange\");\n+        comboBox.addItem(\"Yellow\");\n+        comboBox.addItem(\"Green\");\n+        comboBox.addItem(\"Blue\");\n+        comboBox.addItem(\"Indigo\");\n+        comboBox.addItem(\"Violet\");\n+\n+        TableColumn colorColumn = tableView.getColumn(\"Favorite Color\");\n+        \/\/ Use the combo box as the editor in the \"Favorite Color\" column.\n+        colorColumn.setCellEditor(new DefaultCellEditor(comboBox));\n+\n+        \/\/ Set a pink background and tooltip for the Color column renderer.\n+        DefaultTableCellRenderer colorColumnRenderer = new DefaultTableCellRenderer();\n+        colorColumnRenderer.setBackground(Color.pink);\n+        colorColumnRenderer.setToolTipText(\"Click for combo box\");\n+        colorColumn.setCellRenderer(colorColumnRenderer);\n+\n+        \/\/ Set a tooltip for the header of the colors column.\n+        TableCellRenderer headerRenderer = colorColumn.getHeaderRenderer();\n+        if (headerRenderer instanceof DefaultTableCellRenderer)\n+            ((DefaultTableCellRenderer) headerRenderer).setToolTipText(\"Hi Mom!\");\n+\n+        \/\/ Set the width of the \"Vegetarian\" column.\n+        TableColumn vegetarianColumn = tableView.getColumn(\"Vegetarian\");\n+        vegetarianColumn.setPreferredWidth(100);\n+\n+        \/\/ Show the values in the \"Favorite Number\" column in different colors.\n+        TableColumn numbersColumn = tableView.getColumn(\"Favorite Number\");\n+        DefaultTableCellRenderer numberColumnRenderer = new DefaultTableCellRenderer() {\n+            public void setValue(Object value) {\n+                int cellValue = (value instanceof Number) ? ((Number) value).intValue() : 0;\n+                setForeground((cellValue > 30) ? Color.black : Color.red);\n+                setText((value == null) ? \"\" : value.toString());\n+            }\n+        };\n+        numberColumnRenderer.setHorizontalAlignment(JLabel.RIGHT);\n+        numbersColumn.setCellRenderer(numberColumnRenderer);\n+        numbersColumn.setPreferredWidth(110);\n+\n+        \/\/ Finish setting up the table.\n+        JScrollPane scrollpane = new JScrollPane(tableView);\n+        scrollpane.setBorder(new BevelBorder(BevelBorder.LOWERED));\n+        scrollpane.setPreferredSize(new Dimension(430, 200));\n+\n+        frame.add(scrollpane);\n+        frame.setSize(500, 200);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTable\/ShiftClick.java","additions":187,"deletions":0,"binary":false,"changes":187,"status":"added"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.table.AbstractTableModel;\n+import javax.swing.table.TableModel;\n+\n+\/*\n+ * @test\n+ * @bug 4128506\n+ * @summary Tests that JTable with AUTO_RESIZE_ALL_COLUMNS correctly compute width of columns\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4128506\n+ *\/\n+\n+public class bug4128506 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            If the columns of JTable have the same width the test passes, else test fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(bug4128506::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        final Object[][] data = {\n+                {\"cell_1_1\", \"cell_1_2\", \"cell_1_3\"},\n+                {\"cell_2_1\", \"cell_2_2\", \"cell_2_3\"},\n+                {\"cell_3_1\", \"cell_3_2\", \"cell_3_3\"},\n+                {\"cell_4_1\", \"cell_4_2\", \"cell_4_3\"},\n+        };\n+\n+        TableModel dataModel = new AbstractTableModel() {\n+            public int getColumnCount() {\n+                return 3;\n+            }\n+\n+            public int getRowCount() {\n+                return data.length;\n+            }\n+\n+            public Object getValueAt(int row, int col) {\n+                return data[row][col];\n+            }\n+        };\n+\n+        JFrame frame = new JFrame(\"bug4128506\");\n+        JTable tableView = new JTable(dataModel);\n+        tableView.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);\n+        tableView.getColumnModel().getColumn(1).setMinWidth(5);\n+        JScrollPane scrollpane = new JScrollPane(tableView);\n+        frame.add(scrollpane);\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTable\/bug4128506.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.Robot;\n+import java.util.Vector;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.SwingUtilities;\n+import javax.swing.table.DefaultTableModel;\n+\n+\/*\n+ * @test\n+ * @bug 4190222\n+ * @summary Setting data vector on the model correctly repaint table\n+ * @key headful\n+ * @run main bug4190222\n+ *\/\n+\n+public class bug4190222 {\n+    static JFrame frame;\n+    static DefaultTableModel dtm;\n+    static JTable tbl;\n+    static volatile Dimension preResize;\n+    static volatile Dimension postResize;\n+\n+    static Vector data;\n+    static Vector colNames;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(250);\n+\n+            SwingUtilities.invokeAndWait(() -> createTestUI());\n+            robot.waitForIdle();\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                preResize = tbl.getSize();\n+                dtm.setDataVector(data, colNames);\n+                postResize = tbl.getSize();\n+            });\n+            robot.waitForIdle();\n+\n+            if (!preResize.equals(postResize)) {\n+                throw new RuntimeException(\"Size of table changed after resizing.\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createTestUI() {\n+        frame = new JFrame(\"bug4190222\");\n+\n+        data = new Vector(1, 1);\n+        colNames = new Vector(3);\n+        for (int i = 1; i < 4; i++) {\n+            Vector row = new Vector(1, 1);\n+            row.addElement(\"Row \" + i + \", Col 1\");\n+            row.addElement(\"Row \" + i + \", Col 2\");\n+            row.addElement(\"Row \" + i + \", Col 3\");\n+            data.addElement(row);\n+        }\n+        colNames.addElement(\"Col 1\");\n+        colNames.addElement(\"Col 2\");\n+        colNames.addElement(\"Col 3\");\n+\n+        dtm = new DefaultTableModel(data, colNames);\n+        tbl = new JTable(dtm);\n+        JScrollPane scrollPane = new JScrollPane(tbl);\n+        frame.add(\"Center\", scrollPane);\n+        JPanel panel = new JPanel();\n+        frame.add(\"South\", panel);\n+\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTable\/bug4190222.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+\n+\/*\n+ * @test\n+ * @bug 4224179\n+ * @summary Tests if Table default cell editor doesn't handle % (percent) character correctly\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4224179\n+ *\/\n+\n+public class bug4224179 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1. Click ONCE on the center cell (\"Huml\")\n+            2. Type the following symbols one after another: a%b\n+\n+            If the center cell doesn't read \"Humla%b\" the test fails.\n+\n+            3. After the above, press the ESCAPE key and note that the cell\n+               reverts back to \"Huml\"\n+            4. Do the stuff in part 1 again\n+            5. Press the ESCAPE key\n+\n+            If the center cell now reads \"Huml\" as it initially was,\n+            the test passed and fails otherwise.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(50)\n+                .testUI(bug4224179::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4224179\");\n+        JTable table = new JTable(3, 3);\n+        table.setValueAt(\"Huml\", 1, 1);\n+        table.setPreferredScrollableViewportSize(new Dimension(500, 70));\n+        JScrollPane scrollPane = new JScrollPane(table);\n+        frame.add(scrollPane, BorderLayout.CENTER);\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTable\/bug4224179.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"}]}