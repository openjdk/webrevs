{"files":[{"patch":"@@ -2588,0 +2588,1 @@\n+  __ enter();   \/\/ required for proper stackwalking of RuntimeStub frame\n@@ -2597,8 +2598,3 @@\n-    \/\/ setup_arg_regs only has an effect for Windows\n-    \/\/ Windows argument registers are moved into Linux ABI-defined registers\n-    \/\/ r9 and r10 are used to save rsi and rdi and are therefore unavailable\n-    \/\/ as scratch registers for the routine.\n-    setup_arg_regs(3);\n-\n-    const Register dest = rdi;\n-    const Register size = rsi;\n+    const Register dest = c_rarg0;\n+    const Register size = c_rarg1;\n+    const Register byteVal = c_rarg2;\n@@ -2606,1 +2602,1 @@\n-    const Register rScratch1 = rcx;\n+    const Register rScratch1 = r10;\n@@ -2613,7 +2609,4 @@\n-    {\n-      const Register byteVal = rdx;\n-\n-      \/\/ Propagate byte to full Register\n-      __ movzbl(rScratch1, byteVal);\n-      __ mov64(wide_value, 0x0101010101010101);\n-      __ imulq(wide_value, rScratch1);\n+    \/\/ Propagate byte to full Register\n+    __ movzbl(rScratch1, byteVal);\n+    __ mov64(wide_value, 0x0101010101010101);\n+    __ imulq(wide_value, rScratch1);\n@@ -2621,4 +2614,3 @@\n-      \/\/ Check for pointer & size alignment\n-      __ movq(rScratch1, dest);\n-      __ orq(rScratch1, size);\n-    }\n+    \/\/ Check for pointer & size alignment\n+    __ movq(rScratch1, dest);\n+    __ orq(rScratch1, size);\n@@ -2661,1 +2653,1 @@\n-    restore_arg_regs();\n+    __ leave();   \/\/ required for proper stackwalking of RuntimeStub frame\n@@ -2679,16 +2671,5 @@\n-    {\n-      const Register byteVal = rdx;\n-#ifdef _WIN32\n-      __ movq(rcx, rdi); \/\/ Restore c_rarg*\n-      __ movq(r8, rdx);\n-      __ movq(rdx, rsi);\n-      restore_arg_regs();\n-#endif\n-      \/\/ rax has expanded byte value\n-      __ movq(c_rarg2, rax);\n-\n-      \/\/ Set up for tail call to previously generated byte fill routine\n-      \/\/ Parameter order is (ptr, byteVal, size)\n-      __ xchgq(c_rarg1, c_rarg2);\n-      __ jump(RuntimeAddress(unsafe_byte_fill));\n-    }\n+    \/\/ Set up for tail call to previously generated byte fill routine\n+    \/\/ Parameter order is (ptr, byteVal, size)\n+    __ xchgq(c_rarg1, c_rarg2);\n+    __ pop(rbp);    \/\/ Clear effect of enter()\n+    __ jump(RuntimeAddress(unsafe_byte_fill));\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_arraycopy.cpp","additions":18,"deletions":37,"binary":false,"changes":55,"status":"modified"}]}