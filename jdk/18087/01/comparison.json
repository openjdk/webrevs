{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -635,1 +635,1 @@\n-            final int endBci = startBci + UNSAFE.getChar(localVariableTableElement + config.localVariableTableElementLengthOffset);\n+            final int endBci = startBci + UNSAFE.getChar(localVariableTableElement + config.localVariableTableElementLengthOffset) - 1;\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotResolvedJavaMethodImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,3 @@\n+    \/**\n+     * Returns the first BCI at which this local has a value (inclusive).\n+     *\/\n@@ -48,0 +51,6 @@\n+\n+    \/**\n+     * Returns the last BCI at which this local has a value (inclusive).\n+     * If the value returned is less than {@link #getStartBCI}, this object denotes a local\n+     * variable that is never live.\n+     *\/\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/meta\/Local.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -98,0 +98,2 @@\n+import jdk.vm.ci.meta.Local;\n+import jdk.vm.ci.meta.LocalVariableTable;\n@@ -737,0 +739,18 @@\n+    @Test\n+    public void getLocalVariableTableTest() {\n+        for (ResolvedJavaMethod m : methods.values()) {\n+            LocalVariableTable table = m.getLocalVariableTable();\n+            if (table == null) {\n+                continue;\n+            }\n+            for (Local l : table.getLocals()) {\n+                if (l.getStartBCI() < 0) {\n+                    throw new AssertionError(m.format(\"%H.%n(%p)\") + \" local \" + l.getName() + \" starts at \" + l.getStartBCI());\n+                }\n+                if (l.getEndBCI() >= m.getCodeSize()) {\n+                    throw new AssertionError(m.format(\"%H.%n(%p)\") + \" (\" + m.getCodeSize() + \"bytes) local \" + l.getName() + \" ends at \" + l.getEndBCI());\n+                }\n+            }\n+        }\n+    }\n+\n@@ -759,1 +779,0 @@\n-        \"getLocalVariableTable\",\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.runtime.test\/src\/jdk\/vm\/ci\/runtime\/test\/TestResolvedJavaMethod.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"}]}