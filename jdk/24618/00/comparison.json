{"files":[{"patch":"@@ -6448,1 +6448,0 @@\n-    int32_t con = (int32_t)$src2$$constant;\n@@ -6510,1 +6509,0 @@\n-    \/\/ src2 is imm, so actually call the addi\n@@ -6832,1 +6830,1 @@\n-\/\/ In RV64I, only the low 5 bits of src2 are considered for the shift amount\n+\/\/ Only the low 5 bits of src2 are considered for the shift amount, all other bits are ignored.\n@@ -6865,1 +6863,1 @@\n-\/\/ In RV64I, only the low 5 bits of src2 are considered for the shift amount\n+\/\/ Only the low 5 bits of src2 are considered for the shift amount, all other bits are ignored.\n@@ -6898,1 +6896,1 @@\n-\/\/ In RV64I, only the low 5 bits of src2 are considered for the shift amount\n+\/\/ Only the low 5 bits of src2 are considered for the shift amount, all other bits are ignored.\n@@ -6933,1 +6931,1 @@\n-\/\/ In RV64I, only the low 6 bits of src2 are considered for the shift amount\n+\/\/ Only the low 6 bits of src2 are considered for the shift amount, all other bits are ignored.\n@@ -6968,1 +6966,1 @@\n-\/\/ In RV64I, only the low 6 bits of src2 are considered for the shift amount\n+\/\/ Only the low 6 bits of src2 are considered for the shift amount, all other bits are ignored.\n@@ -7021,1 +7019,1 @@\n-\/\/ In RV64I, only the low 6 bits of src2 are considered for the shift amount\n+\/\/ Only the low 6 bits of src2 are considered for the shift amount, all other bits are ignored.\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n-instruct rorI_imm_b(iRegINoSp dst, iRegI src, immI shift) %{\n+\/\/ Rotate Right Word Immediate\n+instruct rorI_imm_b(iRegINoSp dst, iRegIorL2I src, immI shift) %{\n@@ -42,0 +43,1 @@\n+\/\/ Rotate Right Immediate\n@@ -56,1 +58,3 @@\n-instruct rorI_reg_b(iRegINoSp dst, iRegI src, iRegI shift) %{\n+\/\/ Rotate Right Word Register\n+\/\/ Only the low 5 bits of shift value are used, all other bits are ignored.\n+instruct rorI_reg_b(iRegINoSp dst, iRegIorL2I src, iRegIorL2I shift) %{\n@@ -68,1 +72,3 @@\n-instruct rorL_reg_b(iRegLNoSp dst, iRegL src, iRegI shift) %{\n+\/\/ Rotate Right Register\n+\/\/ Only the low 6 bits of shift value are used, all other bits are ignored.\n+instruct rorL_reg_b(iRegLNoSp dst, iRegL src, iRegIorL2I shift) %{\n@@ -80,1 +86,3 @@\n-instruct rolI_reg_b(iRegINoSp dst, iRegI src, iRegI shift) %{\n+\/\/ Rotate Left Word Register\n+\/\/ Only the low 5 bits of shift value are used, all other bits are ignored.\n+instruct rolI_reg_b(iRegINoSp dst, iRegIorL2I src, iRegIorL2I shift) %{\n@@ -92,1 +100,3 @@\n-instruct rolL_reg_b(iRegLNoSp dst, iRegL src, iRegI shift) %{\n+\/\/ Rotate Left Register\n+\/\/ Only the low 6 bits of shift value are used, all other bits are ignored.\n+instruct rolL_reg_b(iRegLNoSp dst, iRegL src, iRegIorL2I shift) %{\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_b.ad","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -3434,0 +3434,1 @@\n+\/\/ Only the low log2(SEW) bits of shift value are used, all other bits are ignored.\n@@ -3476,0 +3477,1 @@\n+\/\/ Only the low log2(SEW) bits of shift value are used, all other bits are ignored.\n@@ -3519,0 +3521,1 @@\n+\/\/ Only the low log2(SEW) bits of shift value are used, all other bits are ignored.\n@@ -3562,0 +3565,1 @@\n+\/\/ Only the low log2(SEW) bits of shift value are used, all other bits are ignored.\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}