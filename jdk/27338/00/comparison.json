{"files":[{"patch":"@@ -39,1 +39,1 @@\n-\t$$(call LogInfo, Processing $(strip $4))\n+\t$$(call LogInfo, $$(if $$($1_INFO), $$($1_INFO), Processing $(strip $4)))\n@@ -69,0 +69,2 @@\n+#   INFO a message to print on the info log level, instead of the default\n+#       \"Processing <file>\". Applies to all files processed in this rule.\n","filename":"make\/common\/TextFileProcessing.gmk","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-include gensrc\/GensrcExceptions.gmk\n+include gensrc\/GensrcNioExceptions.gmk\n","filename":"make\/modules\/java.base\/Gensrc.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,57 +0,0 @@\n-#\n-# Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-include MakeIncludeStart.gmk\n-ifeq ($(INCLUDE), true)\n-\n-################################################################################\n-\n-GENSRC_EXCEPTIONS :=\n-\n-GENSRC_EXCEPTIONS_DST := $(SUPPORT_OUTPUTDIR)\/gensrc\/java.base\/java\/nio\n-\n-GENSRC_EXCEPTIONS_SRC := $(MODULE_SRC)\/share\/classes\/java\/nio\n-GENSRC_EXCEPTIONS_CMD := $(TOPDIR)\/make\/scripts\/genExceptions.sh\n-\n-GENSRC_EXCEPTIONS_SRC_DIRS := . charset channels\n-\n-$(GENSRC_EXCEPTIONS_DST)\/_the.%.marker: $(GENSRC_EXCEPTIONS_SRC)\/%\/exceptions \\\n-    $(GENSRC_EXCEPTIONS_CMD)\n-\t$(call LogInfo, Generating exceptions java.nio $*)\n-\t$(call MakeDir, $(@D)\/$*)\n-\tSCRIPTS=\"$(TOPDIR)\/make\/scripts\" AWK=\"$(AWK)\" SH=\"$(SH)\" $(SH) \\\n-\t    $(GENSRC_EXCEPTIONS_CMD) $< $(@D)\/$* $(LOG_DEBUG)\n-\t$(TOUCH) $@\n-\n-GENSRC_EXCEPTIONS += $(foreach D, $(GENSRC_EXCEPTIONS_SRC_DIRS), $(GENSRC_EXCEPTIONS_DST)\/_the.$(D).marker)\n-\n-$(GENSRC_EXCEPTIONS): $(BUILD_TOOLS_JDK)\n-\n-TARGETS += $(GENSRC_EXCEPTIONS)\n-\n-################################################################################\n-\n-endif # include guard\n-include MakeIncludeEnd.gmk\n","filename":"make\/modules\/java.base\/gensrc\/GensrcExceptions.gmk","additions":0,"deletions":57,"binary":false,"changes":57,"status":"deleted"},{"patch":"@@ -0,0 +1,417 @@\n+#\n+# Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+include MakeIncludeStart.gmk\n+ifeq ($(INCLUDE), true)\n+\n+################################################################################\n+include TextFileProcessing.gmk\n+\n+NIO_EXCEPTIONS_INPUT_DIR := $(MODULE_SRC)\/share\/classes\/java\/nio\n+NIO_EXCEPTIONS_OUTPUT_DIR := $(SUPPORT_OUTPUTDIR)\/gensrc\/java.base\/java\/nio\n+\n+SetupGenException = $(NamedParamsMacroTemplate)\n+define SetupGenExceptionBody\n+  ifeq ($$($1_SUBPACKAGE), )\n+    $1_DOTTED_SUBPACKAGE :=\n+  else\n+    $1_DOTTED_SUBPACKAGE := .$$($1_SUBPACKAGE)\n+  endif\n+  ifeq ($$($1_TEMPLATE), )\n+    $1_TEMPLATE := NioExceptions\n+  endif\n+  ifeq ($$($1_SINCE), )\n+    $1_SINCE := 1.4\n+  endif\n+\n+  $1_OUTPUT := $(NIO_EXCEPTIONS_OUTPUT_DIR)\/$$($1_SUBPACKAGE)\/$1.java\n+  $$(eval $$(call SetupTextFileProcessing, $1, \\\n+      SOURCE_FILES := $(NIO_EXCEPTIONS_INPUT_DIR)\/$$($1_TEMPLATE).java.template, \\\n+      OUTPUT_FILE := $$($1_OUTPUT), \\\n+      INFO := Generating java.nio$$($1_DOTTED_SUBPACKAGE).$1.java, \\\n+      REPLACEMENTS := \\\n+          @@SUBPACKAGE@@ => $$($1_DOTTED_SUBPACKAGE) ; \\\n+          @@DESCRIPTION@@ => $$($1_DESCRIPTION) ; \\\n+          @@SINCE@@ => $$($1_SINCE) ; \\\n+          @@CLASS_NAME@@ => $1 ; \\\n+          @@SUPERCLASS@@ => $$($1_SUPERCLASS) ; \\\n+          @@SERIAL_VERSION_UID@@ => $$($1_SERIAL_VERSION_UID) ; \\\n+          @@NAME_DESC@@ => $$($1_NAME_DESC) , \\\n+  ))\n+endef\n+\n+################################################################################\n+# Exceptions for java.nio\n+\n+$(eval $(call SetupGenException, BufferOverflowException, \\\n+    SUPERCLASS := RuntimeException, \\\n+    SERIAL_VERSION_UID := -5484897634319144535L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when a relative <i>put<\/i> operation reaches\\n \\\n+        $(SPACE)* the target buffer'\"'\"'s limit., \\\n+))\n+TARGETS += $(BufferOverflowException)\n+\n+$(eval $(call SetupGenException, BufferUnderflowException, \\\n+    SUPERCLASS := RuntimeException, \\\n+    SERIAL_VERSION_UID := -1713313658691622206L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when a relative <i>get<\/i> operation reaches\\n \\\n+        $(SPACE)* the source buffer'\"'\"'s limit., \\\n+))\n+TARGETS += $(BufferUnderflowException)\n+\n+$(eval $(call SetupGenException, InvalidMarkException, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := 1698329710438510774L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to reset a buffer\\n \\\n+        $(SPACE)* when its mark is not defined., \\\n+))\n+TARGETS += $(InvalidMarkException)\n+\n+$(eval $(call SetupGenException, ReadOnlyBufferException, \\\n+    SUPERCLASS := UnsupportedOperationException, \\\n+    SERIAL_VERSION_UID := -1210063976496234090L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when a content-mutation method such as\\n \\\n+        $(SPACE)* <code>put<\/code> or <code>compact<\/code> is invoked upon a read-only buffer., \\\n+))\n+TARGETS += $(ReadOnlyBufferException)\n+\n+################################################################################\n+# Exceptions for java.nio.charset\n+\n+$(eval $(call SetupGenException, CharacterCodingException, \\\n+    SUBPACKAGE := charset, \\\n+    SUPERCLASS := java.io.IOException, \\\n+    SERIAL_VERSION_UID := 8421532232154627783L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Checked exception thrown when a character encoding\\n \\\n+        $(SPACE)* or decoding error occurs., \\\n+))\n+TARGETS += $(CharacterCodingException)\n+\n+$(eval $(call SetupGenException, UnsupportedCharsetException, \\\n+    TEMPLATE := CharsetNameExceptions, \\\n+    SUBPACKAGE := charset, \\\n+    SUPERCLASS := IllegalArgumentException, \\\n+    SERIAL_VERSION_UID := 1490765524727386367L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when no support is available\\n \\\n+        $(SPACE)* for a requested charset., \\\n+    NAME_DESC := name of the unsupported charset, \\\n+))\n+TARGETS += $(UnsupportedCharsetException)\n+\n+$(eval $(call SetupGenException, IllegalCharsetNameException, \\\n+    TEMPLATE := CharsetNameExceptions, \\\n+    SUBPACKAGE := charset, \\\n+    SUPERCLASS := IllegalArgumentException, \\\n+    SERIAL_VERSION_UID := 1457525358470002989L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when a string that is not a\\n \\\n+        $(SPACE)* <a href=\"Charset.html\\#names\">legal charset name<\/a> is used as such., \\\n+    NAME_DESC := illegal charset name, \\\n+))\n+TARGETS += $(IllegalCharsetNameException)\n+\n+################################################################################\n+# Exceptions for java.nio.channels\n+\n+$(eval $(call SetupGenException, ClosedChannelException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := java.io.IOException, \\\n+    SERIAL_VERSION_UID := 882777185433553857L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Checked exception thrown when an attempt is made to invoke or complete an\\n \\\n+        $(SPACE)* I\/O operation upon channel that is closed$(COMMA) or at least closed to that\\n \\\n+        $(SPACE)* operation.'\" \"''\" \"'That this exception is thrown does not necessarily imply that\\n \\\n+        $(SPACE)* the channel is completely closed.'\" \"''\" \"'A socket channel whose write half has\\n \\\n+        $(SPACE)* been shut down$(COMMA) for example$(COMMA) may still be open for reading., \\\n+))\n+TARGETS += $(ClosedChannelException)\n+\n+$(eval $(call SetupGenException, FileLockInterruptionException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := java.io.IOException, \\\n+    SERIAL_VERSION_UID := 7104080643653532383L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Checked exception received by a thread when another thread interrupts it\\n \\\n+        $(SPACE)* while it is waiting to acquire a file lock.'\" \"''\" \"'Before this exception is thrown\\n \\\n+        $(SPACE)* the interrupt status of the previously-blocked thread will have been set., \\\n+))\n+TARGETS += $(FileLockInterruptionException)\n+\n+$(eval $(call SetupGenException, AsynchronousCloseException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := ClosedChannelException, \\\n+    SERIAL_VERSION_UID := 6891178312432313966L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Checked exception received by a thread when another thread closes the\\n \\\n+        $(SPACE)* channel or the part of the channel upon which it is blocked in an I\/O\\n \\\n+        $(SPACE)* operation., \\\n+))\n+TARGETS += $(AsynchronousCloseException)\n+\n+$(eval $(call SetupGenException, ClosedByInterruptException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := AsynchronousCloseException, \\\n+    SERIAL_VERSION_UID := -4488191543534286750L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Checked exception received by a thread when another thread interrupts it\\n \\\n+        $(SPACE)* while it is blocked in an I\/O operation upon a channel.'\" \"''\" \"'Before this\\n \\\n+        $(SPACE)* exception is thrown the channel will have been closed and the interrupt\\n \\\n+        $(SPACE)* status of the previously-blocked thread will have been set., \\\n+))\n+TARGETS += $(ClosedByInterruptException)\n+\n+$(eval $(call SetupGenException, IllegalSelectorException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalArgumentException, \\\n+    SERIAL_VERSION_UID := -8406323347253320987L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to register a channel\\n \\\n+        $(SPACE)* with a selector that was not created by the provider that created the\\n \\\n+        $(SPACE)* channel., \\\n+))\n+TARGETS += $(IllegalSelectorException)\n+\n+$(eval $(call SetupGenException, UnresolvedAddressException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalArgumentException, \\\n+    SERIAL_VERSION_UID := 6136959093620794148L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to invoke a network\\n \\\n+        $(SPACE)* operation upon an unresolved socket address., \\\n+))\n+TARGETS += $(UnresolvedAddressException)\n+\n+$(eval $(call SetupGenException, UnsupportedAddressTypeException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalArgumentException, \\\n+    SERIAL_VERSION_UID := -2964323842829700493L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to bind or connect\\n \\\n+        $(SPACE)* to a socket address of a type that is not supported., \\\n+))\n+TARGETS += $(UnsupportedAddressTypeException)\n+\n+$(eval $(call SetupGenException, AlreadyConnectedException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := -7331895245053773357L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to connect a {@link\\n \\\n+        $(SPACE)* SocketChannel} that is already connected., \\\n+))\n+TARGETS += $(AlreadyConnectedException)\n+\n+$(eval $(call SetupGenException, ConnectionPendingException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := 2008393366501760879L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to connect a {@link\\n \\\n+        $(SPACE)* SocketChannel} for which a non-blocking connection operation is already in\\n \\\n+        $(SPACE)* progress., \\\n+))\n+TARGETS += $(ConnectionPendingException)\n+\n+$(eval $(call SetupGenException, ClosedSelectorException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := 6466297122317847835L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to invoke an I\/O\\n \\\n+        $(SPACE)* operation upon a closed selector., \\\n+))\n+TARGETS += $(ClosedSelectorException)\n+\n+$(eval $(call SetupGenException, CancelledKeyException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := -8438032138028814268L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to use\\n \\\n+        $(SPACE)* a selection key that is no longer valid., \\\n+))\n+TARGETS += $(CancelledKeyException)\n+\n+$(eval $(call SetupGenException, IllegalBlockingModeException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := -3335774961855590474L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when a blocking-mode-specific operation\\n \\\n+        $(SPACE)* is invoked upon a channel in the incorrect blocking mode., \\\n+))\n+TARGETS += $(IllegalBlockingModeException)\n+\n+$(eval $(call SetupGenException, NoConnectionPendingException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := -8296561183633134743L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when the {@link SocketChannel\\#finishConnect\\n \\\n+        $(SPACE)* finishConnect} method of a {@link SocketChannel} is invoked without first\\n \\\n+        $(SPACE)* successfully invoking its {@link SocketChannel\\#connect connect} method., \\\n+))\n+TARGETS += $(NoConnectionPendingException)\n+\n+$(eval $(call SetupGenException, NonReadableChannelException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := -3200915679294993514L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to read\\n \\\n+        $(SPACE)* from a channel that was not originally opened for reading., \\\n+))\n+TARGETS += $(NonReadableChannelException)\n+\n+$(eval $(call SetupGenException, NonWritableChannelException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := -7071230488279011621L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to write\\n \\\n+        $(SPACE)* to a channel that was not originally opened for writing., \\\n+))\n+TARGETS += $(NonWritableChannelException)\n+\n+$(eval $(call SetupGenException, NotYetBoundException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := 4640999303950202242L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to invoke an I\/O\\n \\\n+        $(SPACE)* operation upon a server socket channel that is not yet bound., \\\n+))\n+TARGETS += $(NotYetBoundException)\n+\n+$(eval $(call SetupGenException, NotYetConnectedException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := 4697316551909513464L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to invoke an I\/O\\n \\\n+        $(SPACE)* operation upon a socket channel that is not yet connected., \\\n+))\n+TARGETS += $(NotYetConnectedException)\n+\n+$(eval $(call SetupGenException, OverlappingFileLockException, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := 2047812138163068433L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to acquire a lock on a\\n \\\n+        $(SPACE)* region of a file that overlaps a region already locked by the same Java\\n \\\n+        $(SPACE)* virtual machine$(COMMA) or when another thread is already waiting to lock an\\n \\\n+        $(SPACE)* overlapping region of the same file., \\\n+))\n+TARGETS += $(OverlappingFileLockException)\n+\n+$(eval $(call SetupGenException, InterruptedByTimeoutException, \\\n+    SINCE := 1.7, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := java.io.IOException, \\\n+    SERIAL_VERSION_UID := -4268008601014042947L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Checked exception received by a thread when a timeout elapses before an\\n \\\n+        $(SPACE)* asynchronous operation completes., \\\n+))\n+TARGETS += $(InterruptedByTimeoutException)\n+\n+$(eval $(call SetupGenException, IllegalChannelGroupException, \\\n+    SINCE := 1.7, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalArgumentException, \\\n+    SERIAL_VERSION_UID := -2495041211157744253L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to open a channel\\n \\\n+        $(SPACE)* in a group that was not created by the same provider., \\\n+))\n+TARGETS += $(IllegalChannelGroupException)\n+\n+$(eval $(call SetupGenException, AlreadyBoundException, \\\n+    SINCE := 1.7, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := 6796072983322737592L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to bind the socket a\\n \\\n+        $(SPACE)* network oriented channel that is already bound., \\\n+))\n+TARGETS += $(AlreadyBoundException)\n+\n+$(eval $(call SetupGenException, AcceptPendingException, \\\n+    SINCE := 1.7, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := 2721339977965416421L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to initiate an accept\\n \\\n+        $(SPACE)* operation on a channel and a previous accept operation has not completed., \\\n+    ))\n+TARGETS += $(AcceptPendingException)\n+\n+$(eval $(call SetupGenException, ReadPendingException, \\\n+    SINCE := 1.7, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := 1986315242191227217L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to read from an\\n \\\n+        $(SPACE)* asynchronous socket channel and a previous read has not completed., \\\n+))\n+TARGETS += $(ReadPendingException)\n+\n+$(eval $(call SetupGenException, WritePendingException, \\\n+    SINCE := 1.7, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := 7031871839266032276L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to write to an\\n \\\n+        $(SPACE)* asynchronous socket channel and a previous write has not completed., \\\n+))\n+TARGETS += $(WritePendingException)\n+\n+$(eval $(call SetupGenException, ShutdownChannelGroupException, \\\n+    SINCE := 1.7, \\\n+    SUBPACKAGE := channels, \\\n+    SUPERCLASS := IllegalStateException, \\\n+    SERIAL_VERSION_UID := -3903801676350154157L, \\\n+    DESCRIPTION := \\\n+        $(SPACE)* Unchecked exception thrown when an attempt is made to construct a channel in\\n \\\n+        $(SPACE)* a group that is shutdown or the completion handler for an I\/O operation\\n \\\n+        $(SPACE)* cannot be invoked because the channel group has terminated., \\\n+))\n+TARGETS += $(ShutdownChannelGroupException)\n+\n+################################################################################\n+\n+endif # include guard\n+include MakeIncludeEnd.gmk\n","filename":"make\/modules\/java.base\/gensrc\/GensrcNioExceptions.gmk","additions":417,"deletions":0,"binary":false,"changes":417,"status":"added"},{"patch":"@@ -1,45 +0,0 @@\n-#! \/bin\/sh\n-#\n-# Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# Parse the first contiguous comment block in this script and generate\n-# a java comment block. If this script is invoked with a copyright\n-# year\/year range, the java comment block will contain a Sun copyright.\n-\n-COPYRIGHT_YEARS=\"$1\"\n-\n-cat <<__END__\n-\/*\n-__END__\n-\n-if [ \"x$COPYRIGHT_YEARS\" != x ]; then\n-  cat <<__END__\n- * Copyright (c) $COPYRIGHT_YEARS Oracle and\/or its affiliates. All rights reserved.\n-__END__\n-fi\n-\n-$AWK ' \/^#.*Copyright.*Oracle\/ { next }\n-    \/^#([^!]|$)\/ { sub(\/^#\/, \" *\"); print }\n-    \/^$\/ { print \" *\/\"; exit } ' $0\n","filename":"make\/scripts\/addNotices.sh","additions":0,"deletions":45,"binary":false,"changes":45,"status":"deleted"},{"patch":"@@ -1,116 +0,0 @@\n-#! \/bin\/sh\n-#\n-# Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# Generate exception classes\n-\n-SPEC=$1\n-DST=$2\n-\n-gen() {\n-  ID=$1\n-  WHAT=$2\n-  SVUID=$3\n-  ARG_TYPE=$4\n-  ARG_ID=$5\n-  ARG_PROP=$6\n-  ARG_PHRASE=$7\n-  ARG_PARAM=\"$ARG_TYPE$ $ARG_ID\"\n-  echo '-->' $DST\/$ID.java\n-  out=$DST\/${ID}.java\n-\n-  $SH ${SCRIPTS}\/addNotices.sh \"$COPYRIGHT_YEARS\" > $out\n-\n-  cat >>$out <<__END__\n-\n-\/\/ -- This file was mechanically generated: Do not edit! -- \/\/\n-\n-package $PACKAGE;\n-\n-\n-\/**$WHAT\n- *\n- * @since $SINCE\n- *\/\n-\n-public `if [ ${ABSTRACT:-0} = 1 ];\n-        then echo 'abstract '; fi`class $ID\n-    extends ${SUPER}\n-{\n-\n-    @java.io.Serial\n-    private static final long serialVersionUID = $SVUID;\n-__END__\n-\n-  if [ $ARG_ID ]; then\n-\n-    cat >>$out <<__END__\n-\n-    \/**\n-     * The $ARG_PHRASE.\n-     *\n-     * @serial\n-     *\/\n-    private $ARG_TYPE $ARG_ID;\n-\n-    \/**\n-     * Constructs an instance of this class.\n-     *\n-     * @param  $ARG_ID\n-     *         The $ARG_PHRASE\n-     *\/\n-    public $ID($ARG_TYPE $ARG_ID) {\n-        super(String.valueOf($ARG_ID));\n-\tthis.$ARG_ID = $ARG_ID;\n-    }\n-\n-    \/**\n-     * Retrieves the $ARG_PHRASE.\n-     *\n-     * @return  The $ARG_PHRASE\n-     *\/\n-    public $ARG_TYPE get$ARG_PROP() {\n-        return $ARG_ID;\n-    }\n-\n-}\n-__END__\n-\n-  else\n-\n-    cat >>$out <<__END__\n-\n-    \/**\n-     * Constructs an instance of this class.\n-     *\/\n-    public $ID() { }\n-\n-}\n-__END__\n-\n-  fi\n-}\n-\n-. $SPEC\n","filename":"make\/scripts\/genExceptions.sh","additions":0,"deletions":116,"binary":false,"changes":116,"status":"deleted"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package java.nio@@SUBPACKAGE@@;\n+\n+\/**\n+ @@DESCRIPTION@@\n+ *\n+ * @since @@SINCE@@\n+ *\/\n+\n+public class @@CLASS_NAME@@\n+    extends @@SUPERCLASS@@\n+{\n+\n+    @java.io.Serial\n+    private static final long serialVersionUID = @@SERIAL_VERSION_UID@@;\n+\n+    \/**\n+     * The @@NAME_DESC@@.\n+     *\n+     * @serial\n+     *\/\n+    private String charsetName;\n+\n+    \/**\n+     * Constructs an instance of this class.\n+     *\n+     * @param  charsetName\n+     *         The @@NAME_DESC@@\n+     *\/\n+    public @@CLASS_NAME@@(String charsetName) {\n+        super(String.valueOf(charsetName));\n+\tthis.charsetName = charsetName;\n+    }\n+\n+    \/**\n+     * Retrieves the @@NAME_DESC@@.\n+     *\n+     * @return  The @@NAME_DESC@@\n+     *\/\n+    public String getCharsetName() {\n+        return charsetName;\n+    }\n+}\n","filename":"src\/java.base\/share\/classes\/java\/nio\/CharsetNameExceptions.java.template","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package java.nio@@SUBPACKAGE@@;\n+\n+\/**\n+ @@DESCRIPTION@@\n+ *\n+ * @since @@SINCE@@\n+ *\/\n+\n+public class @@CLASS_NAME@@\n+    extends @@SUPERCLASS@@\n+{\n+\n+    @java.io.Serial\n+    private static final long serialVersionUID = @@SERIAL_VERSION_UID@@;\n+\n+    \/**\n+     * Constructs an instance of this class.\n+     *\/\n+    public @@CLASS_NAME@@() { }\n+}\n","filename":"src\/java.base\/share\/classes\/java\/nio\/NioExceptions.java.template","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -1,194 +0,0 @@\n-#\n-# Copyright (c) 2000, 2009, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# Generated exception classes for java.nio.channels\n-\n-SINCE=1.4\n-PACKAGE=java.nio.channels\n-# This year should only change if the generated source is modified.\n-COPYRIGHT_YEARS=\"2000, 2007,\"\n-\n-\n-SUPER=java.io.IOException\n-\n-gen ClosedChannelException \"\n- * Checked exception thrown when an attempt is made to invoke or complete an\n- * I\/O operation upon channel that is closed, or at least closed to that\n- * operation.  That this exception is thrown does not necessarily imply that\n- * the channel is completely closed.  A socket channel whose write half has\n- * been shut down, for example, may still be open for reading.\" \\\n- 882777185433553857L\n-\n-gen FileLockInterruptionException \"\n- * Checked exception received by a thread when another thread interrupts it\n- * while it is waiting to acquire a file lock.  Before this exception is thrown\n- * the interrupt status of the previously-blocked thread will have been set.\" \\\n- 7104080643653532383L\n-\n-\n-SUPER=ClosedChannelException\n-\n-gen AsynchronousCloseException \"\n- * Checked exception received by a thread when another thread closes the\n- * channel or the part of the channel upon which it is blocked in an I\/O\n- * operation.\" \\\n- 6891178312432313966L\n-\n-\n-SUPER=AsynchronousCloseException\n-\n-gen ClosedByInterruptException \"\n- * Checked exception received by a thread when another thread interrupts it\n- * while it is blocked in an I\/O operation upon a channel.  Before this\n- * exception is thrown the channel will have been closed and the interrupt\n- * status of the previously-blocked thread will have been set.\" \\\n- -4488191543534286750L\n-\n-\n-SUPER=IllegalArgumentException\n-\n-gen IllegalSelectorException \"\n- * Unchecked exception thrown when an attempt is made to register a channel\n- * with a selector that was not created by the provider that created the\n- * channel.\" \\\n- -8406323347253320987L\n-\n-gen UnresolvedAddressException \"\n- * Unchecked exception thrown when an attempt is made to invoke a network\n- * operation upon an unresolved socket address.\" \\\n- 6136959093620794148L\n-\n-gen UnsupportedAddressTypeException \"\n- * Unchecked exception thrown when an attempt is made to bind or connect\n- * to a socket address of a type that is not supported.\" \\\n- -2964323842829700493L\n-\n-\n-SUPER=IllegalStateException\n-\n-gen AlreadyConnectedException \"\n- * Unchecked exception thrown when an attempt is made to connect a {@link\n- * SocketChannel} that is already connected.\" \\\n- -7331895245053773357L\n-\n-gen ConnectionPendingException \"\n- * Unchecked exception thrown when an attempt is made to connect a {@link\n- * SocketChannel} for which a non-blocking connection operation is already in\n- * progress.\" \\\n- 2008393366501760879L\n-\n-gen ClosedSelectorException \"\n- * Unchecked exception thrown when an attempt is made to invoke an I\/O\n- * operation upon a closed selector.\" \\\n- 6466297122317847835L\n-\n-gen CancelledKeyException \"\n- * Unchecked exception thrown when an attempt is made to use\n- * a selection key that is no longer valid.\" \\\n- -8438032138028814268L\n-\n-gen IllegalBlockingModeException \"\n- * Unchecked exception thrown when a blocking-mode-specific operation\n- * is invoked upon a channel in the incorrect blocking mode.\" \\\n- -3335774961855590474L\n-\n-gen NoConnectionPendingException \"\n- * Unchecked exception thrown when the {@link SocketChannel#finishConnect\n- * finishConnect} method of a {@link SocketChannel} is invoked without first\n- * successfully invoking its {@link SocketChannel#connect connect} method.\" \\\n- -8296561183633134743L\n-\n-gen NonReadableChannelException \"\n- * Unchecked exception thrown when an attempt is made to read\n- * from a channel that was not originally opened for reading.\" \\\n- -3200915679294993514L\n-\n-gen NonWritableChannelException \"\n- * Unchecked exception thrown when an attempt is made to write\n- * to a channel that was not originally opened for writing.\" \\\n- -7071230488279011621L\n-\n-gen NotYetBoundException \"\n- * Unchecked exception thrown when an attempt is made to invoke an I\/O\n- * operation upon a server socket channel that is not yet bound.\" \\\n- 4640999303950202242L\n-\n-gen NotYetConnectedException \"\n- * Unchecked exception thrown when an attempt is made to invoke an I\/O\n- * operation upon a socket channel that is not yet connected.\" \\\n- 4697316551909513464L\n-\n-gen OverlappingFileLockException \"\n- * Unchecked exception thrown when an attempt is made to acquire a lock on a\n- * region of a file that overlaps a region already locked by the same Java\n- * virtual machine, or when another thread is already waiting to lock an\n- * overlapping region of the same file.\" \\\n- 2047812138163068433L\n-\n-\n-SINCE=1.7\n-\n-SUPER=java.io.IOException\n-\n-gen InterruptedByTimeoutException \"\n- * Checked exception received by a thread when a timeout elapses before an\n- * asynchronous operation completes.\" \\\n- -4268008601014042947L\n-\n-SUPER=IllegalArgumentException\n-\n-gen IllegalChannelGroupException \"\n- * Unchecked exception thrown when an attempt is made to open a channel\n- * in a group that was not created by the same provider. \" \\\n- -2495041211157744253L\n-\n-\n-SUPER=IllegalStateException\n-\n-gen AlreadyBoundException \"\n- * Unchecked exception thrown when an attempt is made to bind the socket a\n- * network oriented channel that is already bound.\" \\\n- 6796072983322737592L\n-\n-gen AcceptPendingException \"\n- * Unchecked exception thrown when an attempt is made to initiate an accept\n- * operation on a channel and a previous accept operation has not completed.\" \\\n- 2721339977965416421L\n-\n-gen ReadPendingException \"\n- * Unchecked exception thrown when an attempt is made to read from an\n- * asynchronous socket channel and a previous read has not completed.\" \\\n- 1986315242191227217L\n-\n-gen WritePendingException \"\n- * Unchecked exception thrown when an attempt is made to write to an\n- * asynchronous socket channel and a previous write has not completed.\" \\\n- 7031871839266032276L\n-\n-gen ShutdownChannelGroupException \"\n- * Unchecked exception thrown when an attempt is made to construct a channel in \n- * a group that is shutdown or the completion handler for an I\/O operation \n- * cannot be invoked because the channel group has terminated.\" \\\n- -3903801676350154157L\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/exceptions","additions":0,"deletions":194,"binary":false,"changes":194,"status":"deleted"},{"patch":"@@ -1,53 +0,0 @@\n-#\n-# Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# Generated exception classes for java.nio.charset\n-\n-SINCE=1.4\n-PACKAGE=java.nio.charset\n-# This year should only change if the generated source is modified.\n-COPYRIGHT_YEARS=\"2000, 2021,\"\n-\n-SUPER=java.io.IOException\n-\n-gen CharacterCodingException \"\n- * Checked exception thrown when a character encoding\n- * or decoding error occurs.\" \\\n- 8421532232154627783L\n-\n-\n-SUPER=IllegalArgumentException\n-\n-gen IllegalCharsetNameException \"\n- * Unchecked exception thrown when a string that is not a\n- * <a href=\"Charset.html#names\">legal charset name<\/a> is used as such.\" \\\n- 1457525358470002989L \\\n- String charsetName CharsetName \"illegal charset name\"\n-\n-gen UnsupportedCharsetException \"\n- * Unchecked exception thrown when no support is available\n- * for a requested charset.\" \\\n- 1490765524727386367L \\\n- String charsetName CharsetName \"name of the unsupported charset\"\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/exceptions","additions":0,"deletions":53,"binary":false,"changes":53,"status":"deleted"},{"patch":"@@ -1,60 +0,0 @@\n-#\n-# Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# Generated exception classes for java.nio\n-\n-SINCE=1.4\n-PACKAGE=java.nio\n-# This year should only change if the generated source is modified.\n-COPYRIGHT_YEARS=\"2000, 2021,\"\n-\n-\n-SUPER=RuntimeException\n-\n-gen BufferOverflowException \"\n- * Unchecked exception thrown when a relative <i>put<\/i> operation reaches\n- * the target buffer's limit.\" \\\n- -5484897634319144535L\n-\n-gen BufferUnderflowException \"\n- * Unchecked exception thrown when a relative <i>get<\/i> operation reaches\n- * the source buffer's limit.\" \\\n- -1713313658691622206L\n-\n-\n-SUPER=IllegalStateException\n-\n-gen InvalidMarkException \"\n- * Unchecked exception thrown when an attempt is made to reset a buffer\n- * when its mark is not defined.\" \\\n- 1698329710438510774L\n-\n-\n-SUPER=UnsupportedOperationException\n-\n-gen ReadOnlyBufferException \"\n- * Unchecked exception thrown when a content-mutation method such as\n- * <code>put<\/code> or <code>compact<\/code> is invoked upon a read-only buffer.\" \\\n- -1210063976496234090L\n","filename":"src\/java.base\/share\/classes\/java\/nio\/exceptions","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"}]}