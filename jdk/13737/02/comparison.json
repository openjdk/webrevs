{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-    static String cacheName;\n-\n@@ -108,3 +106,1 @@\n-    public static String cacheName() {\n-        return cacheName;\n-    }\n+    public abstract String cacheName();\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/ccache\/CredentialsCache.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    implements FileCCacheConstants {\n+        implements FileCCacheConstants {\n@@ -75,0 +75,2 @@\n+    private final String localCacheName;\n+\n@@ -78,1 +80,1 @@\n-            FileCredentialsCache fcc = new FileCredentialsCache();\n+            String cacheName;\n@@ -88,0 +90,1 @@\n+            FileCredentialsCache fcc = new FileCredentialsCache(cacheName);\n@@ -91,1 +94,1 @@\n-            fcc.load(cacheName);\n+            fcc.load();\n@@ -109,2 +112,1 @@\n-            FileCredentialsCache fcc = new FileCredentialsCache();\n-            cacheName = FileCredentialsCache.checkValidation(name);\n+            String cacheName = FileCredentialsCache.checkValidation(name);\n@@ -112,1 +114,1 @@\n-                \/\/ invalid cache name or the file doesn't exist\n+                \/\/ invalid cache name\n@@ -115,1 +117,2 @@\n-            fcc.init(principal, cacheName);\n+            FileCredentialsCache fcc = new FileCredentialsCache(cacheName);\n+            fcc.init(principal);\n@@ -125,3 +128,3 @@\n-            FileCredentialsCache fcc = new FileCredentialsCache();\n-            cacheName = FileCredentialsCache.getDefaultCacheName();\n-            fcc.init(principal, cacheName);\n+            String cacheName = FileCredentialsCache.getDefaultCacheName();\n+            FileCredentialsCache fcc = new FileCredentialsCache(cacheName);\n+            fcc.init(principal);\n@@ -138,1 +141,2 @@\n-    private FileCredentialsCache() {\n+    private FileCredentialsCache(String cacheName) {\n+        localCacheName = cacheName;\n@@ -141,3 +145,3 @@\n-    boolean exists(String cache) {\n-        File file = new File(cache);\n-        return file.exists();\n+    @Override\n+    public String cacheName() {\n+        return localCacheName;\n@@ -146,2 +150,2 @@\n-    synchronized void init(PrincipalName principal, String name)\n-        throws IOException, KrbException {\n+    synchronized void init(PrincipalName principal)\n+            throws IOException, KrbException {\n@@ -149,1 +153,1 @@\n-        try (FileOutputStream fos = new FileOutputStream(name);\n+        try (FileOutputStream fos = new FileOutputStream(localCacheName);\n@@ -154,1 +158,1 @@\n-        load(name);\n+        load();\n@@ -157,3 +161,2 @@\n-    synchronized void load(String name) throws IOException, KrbException {\n-        PrincipalName p;\n-        try (FileInputStream fis = new FileInputStream(name);\n+    synchronized void load() throws IOException, KrbException {\n+        try (FileInputStream fis = new FileInputStream(localCacheName);\n@@ -170,1 +173,1 @@\n-            p = cis.readPrincipal(version);\n+            PrincipalName p = cis.readPrincipal(version);\n@@ -176,1 +179,1 @@\n-            } else\n+            } else {\n@@ -178,0 +181,1 @@\n+            }\n@@ -248,2 +252,2 @@\n-        try (FileOutputStream fos = new FileOutputStream(cacheName);\n-             CCacheOutputStream cos = new CCacheOutputStream(fos)) {\n+        try (FileOutputStream fos = new FileOutputStream(localCacheName);\n+                CCacheOutputStream cos = new CCacheOutputStream(fos)) {\n@@ -536,1 +540,1 @@\n-                if (!(temp.isDirectory()))\n+                if (!(temp.isDirectory())) {\n@@ -538,1 +542,1 @@\n-                temp = null;\n+                }\n@@ -540,2 +544,0 @@\n-            fCheck = null;\n-\n@@ -557,1 +559,0 @@\n-\n@@ -585,1 +586,1 @@\n-                            (\"KRB5CCNAME=\")) {\n+                                (\"KRB5CCNAME=\")) {\n@@ -591,1 +592,3 @@\n-            } else     s1 = commandResult.readLine();\n+            } else {\n+                s1 = commandResult.readLine();\n+            }\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/ccache\/FileCredentialsCache.java","additions":35,"deletions":32,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -1,73 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- *\n- *  (C) Copyright IBM Corp. 1999 All Rights Reserved.\n- *  Copyright 1997 The Open Group Research Institute.  All rights reserved.\n- *\/\n-\n-package sun.security.krb5.internal.ccache;\n-\n-import sun.security.krb5.KrbException;\n-import sun.security.krb5.PrincipalName;\n-\n-import java.io.File;\n-import java.io.IOException;\n-\n-\/\/Windows supports the \"API: cache\" type, which is a shared memory cache.  This is\n-\/\/implemented by krbcc32.dll as part of the MIT Kerberos for Win32 distribution.\n-\/\/MemoryCredentialsCache will provide future functions to access shared memory cache on\n-\/\/Windows platform. Native code implementation may be necessary.\n-\/**\n- * This class extends CredentialsCache. It is used for accessing data in shared memory\n- * cache on Windows platforms.\n- *\n- * @author Yanni Zhang\n- *\/\n-public abstract class MemoryCredentialsCache extends CredentialsCache {\n-\n-    private static CredentialsCache getCCacheInstance(PrincipalName p) {\n-        return null;\n-    }\n-\n-    private static CredentialsCache getCCacheInstance(PrincipalName p, File cacheFile) {\n-        return null;\n-    }\n-\n-\n-    public abstract boolean exists(String cache);\n-\n-    public abstract void update(Credentials c);\n-\n-    public abstract void save() throws IOException, KrbException;\n-\n-    public abstract Credentials[] getCredsList();\n-\n-    public abstract Credentials getCreds(PrincipalName sname) ;\n-\n-    public abstract PrincipalName getPrimaryPrincipal();\n-\n-}\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/ccache\/MemoryCredentialsCache.java","additions":0,"deletions":73,"binary":false,"changes":73,"status":"deleted"},{"patch":"@@ -147,2 +147,3 @@\n-                target = CredentialsCache.getInstance();\n-                name = CredentialsCache.cacheName();\n+                CredentialsCache cc = CredentialsCache.getInstance();\n+                target = cc;\n+                name = cc.cacheName();\n@@ -175,2 +176,3 @@\n-                target = CredentialsCache.getInstance();\n-                name = CredentialsCache.cacheName();\n+                CredentialsCache cc = CredentialsCache.getInstance();\n+                target = cc;\n+                name = cc.cacheName();\n","filename":"src\/java.security.jgss\/windows\/classes\/sun\/security\/krb5\/internal\/tools\/Klist.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8307143\n+ * @summary CredentialsCache.cacheName should not be static\n+ * @modules java.security.jgss\/sun.security.krb5\n+ *          java.security.jgss\/sun.security.krb5.internal.ccache\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import sun.security.krb5.PrincipalName;\n+import sun.security.krb5.internal.ccache.CredentialsCache;\n+\n+public class TwoFiles {\n+    public static void main(String[] args) throws Exception {\n+        PrincipalName pn = new PrincipalName(\"me@HERE\");\n+        CredentialsCache cc1 = CredentialsCache.create(pn, \"cc1\");\n+        CredentialsCache cc2 = CredentialsCache.create(pn, \"cc2\");\n+        \/\/ name is canonicalized\n+        Asserts.assertTrue(cc1.cacheName().endsWith(\"cc1\"), cc1.cacheName());\n+        Asserts.assertTrue(cc2.cacheName().endsWith(\"cc2\"), cc2.cacheName());\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/krb5\/ccache\/TwoFiles.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"}]}