{"files":[{"patch":"@@ -686,2 +686,2 @@\n-                                            AdapterHandlerEntry* handler) {\n-  address i2c_entry = __ pc();\n+                                            address entry_address[AdapterBlob::ENTRY_COUNT]) {\n+  entry_address[AdapterBlob::I2C] = __ pc();\n@@ -691,1 +691,1 @@\n-  address c2i_unverified_entry = __ pc();\n+  entry_address[AdapterBlob::C2I_Unverified] = __ pc();\n@@ -721,1 +721,1 @@\n-  address c2i_entry = __ pc();\n+  entry_address[AdapterBlob::C2I] = __ pc();\n@@ -724,1 +724,1 @@\n-  address c2i_no_clinit_check_entry = nullptr;\n+  entry_address[AdapterBlob::C2I_No_Clinit_Check] = nullptr;\n@@ -739,1 +739,1 @@\n-    c2i_no_clinit_check_entry = __ pc();\n+    entry_address[AdapterBlob::C2I_No_Clinit_Check] = __ pc();\n@@ -746,2 +746,0 @@\n-\n-  handler->set_entry_points(i2c_entry, c2i_entry, c2i_unverified_entry, c2i_no_clinit_check_entry);\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -620,2 +620,2 @@\n-                                            AdapterHandlerEntry* handler) {\n-  address i2c_entry = __ pc();\n+                                            address entry_address[AdapterBlob::ENTRY_COUNT]) {\n+  entry_address[AdapterBlob::I2C] = __ pc();\n@@ -624,1 +624,1 @@\n-  address c2i_unverified_entry = __ pc();\n+  entry_address[AdapterBlob::C2I_Unverified] = __ pc();\n@@ -637,1 +637,2 @@\n-  address c2i_entry = __ pc();\n+  entry_address[AdapterBlob::C2I] = __ pc();\n+  entry_address[AdapterBlob::C2I_No_Clinit_Check] = nullptr;\n@@ -639,2 +640,0 @@\n-\n-  handler->set_entry_points(i2c_entry, c2i_entry, c2i_unverified_entry, nullptr);\n","filename":"src\/hotspot\/cpu\/arm\/sharedRuntime_arm.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1202,6 +1202,1 @@\n-                                            AdapterHandlerEntry* handler) {\n-  address i2c_entry;\n-  address c2i_unverified_entry;\n-  address c2i_entry;\n-\n-\n+                                            address entry_address[AdapterBlob::ENTRY_COUNT]) {\n@@ -1211,1 +1206,1 @@\n-  i2c_entry = __ pc();\n+  entry_address[AdapterBlob::I2C] = __ pc();\n@@ -1219,1 +1214,1 @@\n-  c2i_unverified_entry = __ pc();\n+  entry_address[AdapterBlob::C2I_Unverified] = __ pc();\n@@ -1247,1 +1242,1 @@\n-  c2i_entry = __ pc();\n+  entry_address[AdapterBlob::C2I] = __ pc();\n@@ -1250,1 +1245,1 @@\n-  address c2i_no_clinit_check_entry = nullptr;\n+  entry_address[AdapterBlob::C2I_No_Clinit_Check] = nullptr;\n@@ -1269,1 +1264,1 @@\n-    c2i_no_clinit_check_entry = __ pc();\n+    entry_address[AdapterBlob::C2I_No_Clinit_Check] = __ pc();\n@@ -1276,2 +1271,0 @@\n-\n-  handler->set_entry_points(i2c_entry, c2i_entry, c2i_unverified_entry, c2i_no_clinit_check_entry);\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -605,2 +605,2 @@\n-                                            AdapterHandlerEntry* handler) {\n-  address i2c_entry = __ pc();\n+                                            address entry_address[AdapterBlob::ENTRY_COUNT]) {\n+  entry_address[AdapterBlob::I2C] = __ pc();\n@@ -609,1 +609,1 @@\n-  address c2i_unverified_entry = __ pc();\n+  entry_address[AdapterBlob::C2I_Unverified] = __ pc();\n@@ -636,1 +636,1 @@\n-  address c2i_entry = __ pc();\n+  entry_address[AdapterBlob::C2I] = __ pc();\n@@ -639,1 +639,1 @@\n-  address c2i_no_clinit_check_entry = nullptr;\n+  entry_address[AdapterBlob::C2I_No_Clinit_Check] = nullptr;\n@@ -654,1 +654,1 @@\n-    c2i_no_clinit_check_entry = __ pc();\n+    entry_address[AdapterBlob::C2I_No_Clinit_Check] = __ pc();\n@@ -661,2 +661,0 @@\n-\n-  handler->set_entry_points(i2c_entry, c2i_entry, c2i_unverified_entry, c2i_no_clinit_check_entry);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2350,1 +2350,1 @@\n-                                            AdapterHandlerEntry* handler) {\n+                                            address entry_address[AdapterBlob::ENTRY_COUNT]) {\n@@ -2352,1 +2352,1 @@\n-  address i2c_entry = __ pc();\n+  entry_address[AdapterBlob::I2C] = __ pc();\n@@ -2355,2 +2355,0 @@\n-  address c2i_unverified_entry;\n-\n@@ -2366,1 +2364,1 @@\n-    c2i_unverified_entry = __ pc();\n+    entry_address[AdapterBlob::C2I_Unverified] = __ pc();\n@@ -2379,1 +2377,1 @@\n-  address c2i_entry = __ pc();\n+  entry_address[AdapterBlob::C2I] = __ pc();\n@@ -2382,1 +2380,1 @@\n-  address c2i_no_clinit_check_entry = nullptr;\n+  entry_address[AdapterBlob::C2I_No_Clinit_Check] = nullptr;\n@@ -2399,1 +2397,1 @@\n-    c2i_no_clinit_check_entry = __ pc();\n+    entry_address[AdapterBlob::C2I_No_Clinit_Check] = __ pc();\n@@ -2403,2 +2401,0 @@\n-\n-  handler->set_entry_points(i2c_entry, c2i_entry, c2i_unverified_entry, c2i_no_clinit_check_entry);\n","filename":"src\/hotspot\/cpu\/s390\/sharedRuntime_s390.cpp","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1010,2 +1010,2 @@\n-                                            AdapterHandlerEntry* handler) {\n-  address i2c_entry = __ pc();\n+                                            address entry_address[AdapterBlob::ENTRY_COUNT]) {\n+  entry_address[AdapterBlob::I2C] = __ pc();\n@@ -1024,1 +1024,1 @@\n-  address c2i_unverified_entry = __ pc();\n+  entry_address[AdapterBlob::C2I_Unverified] = __ pc();\n@@ -1042,1 +1042,1 @@\n-  address c2i_entry = __ pc();\n+  entry_address[AdapterBlob::C2I] = __ pc();\n@@ -1045,1 +1045,1 @@\n-  address c2i_no_clinit_check_entry = nullptr;\n+  entry_address[AdapterBlob::C2I_No_Clinit_Check] = nullptr;\n@@ -1064,1 +1064,1 @@\n-    c2i_no_clinit_check_entry = __ pc();\n+    entry_address[AdapterBlob::C2I_No_Clinit_Check] = __ pc();\n@@ -1071,2 +1071,0 @@\n-\n-  handler->set_entry_points(i2c_entry, c2i_entry, c2i_unverified_entry, c2i_no_clinit_check_entry);\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -41,6 +41,0 @@\n-\n-static address zero_null_code_stub() {\n-  address start = ShouldNotCallThisStub();\n-  return start;\n-}\n-\n@@ -58,6 +52,3 @@\n-                                            AdapterHandlerEntry* handler) {\n-  \/\/ foil any attempt to call the i2c, c2i or unverified c2i entries\n-  handler->set_entry_points(CAST_FROM_FN_PTR(address,zero_null_code_stub),\n-                            CAST_FROM_FN_PTR(address,zero_null_code_stub),\n-                            CAST_FROM_FN_PTR(address,zero_null_code_stub),\n-                            nullptr);\n+                                            address entry_address[AdapterBlob::ENTRY_COUNT]) {\n+  ShouldNotCallThis();\n+  return;\n","filename":"src\/hotspot\/cpu\/zero\/sharedRuntime_zero.cpp","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -408,1 +408,7 @@\n-  static const int ENTRY_COUNT = 4;\n+  enum Entry {\n+    I2C,\n+    C2I,\n+    C2I_Unverified,\n+    C2I_No_Clinit_Check,\n+    ENTRY_COUNT\n+  };\n@@ -419,0 +425,4 @@\n+  address i2c_entry() { return code_begin(); }\n+  address c2i_entry() { return i2c_entry() + _c2i_offset; }\n+  address c2i_unverified_entry() { return i2c_entry() + _c2i_unverified_offset; }\n+  address c2i_no_clinit_check_entry() { return _c2i_no_clinit_check_offset == -1 ? nullptr : i2c_entry() + _c2i_no_clinit_check_offset; }\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1290,0 +1290,1 @@\n+#ifndef ZERO\n@@ -1291,0 +1292,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2529,2 +2529,1 @@\n-static void post_adapter_creation(const AdapterBlob* new_adapter,\n-                                  const AdapterHandlerEntry* entry) {\n+static void post_adapter_creation(const AdapterHandlerEntry* entry) {\n@@ -2532,0 +2531,1 @@\n+    AdapterBlob* adapter_blob = entry->adapter_blob();\n@@ -2536,1 +2536,1 @@\n-                 new_adapter->name(),\n+                 adapter_blob->name(),\n@@ -2539,1 +2539,1 @@\n-      Forte::register_stub(blob_id, new_adapter->content_begin(), new_adapter->content_end());\n+      Forte::register_stub(blob_id, adapter_blob->content_begin(), adapter_blob->content_end());\n@@ -2543,1 +2543,1 @@\n-      JvmtiExport::post_dynamic_code_generated(blob_id, new_adapter->content_begin(), new_adapter->content_end());\n+      JvmtiExport::post_dynamic_code_generated(blob_id, adapter_blob->content_begin(), adapter_blob->content_end());\n@@ -2565,5 +2565,0 @@\n-  AdapterBlob* no_arg_blob = nullptr;\n-  AdapterBlob* int_arg_blob = nullptr;\n-  AdapterBlob* obj_arg_blob = nullptr;\n-  AdapterBlob* obj_int_arg_blob = nullptr;\n-  AdapterBlob* obj_obj_arg_blob = nullptr;\n@@ -2573,1 +2568,1 @@\n-    _no_arg_handler = create_adapter(no_arg_blob, 0, nullptr);\n+    _no_arg_handler = create_adapter(0, nullptr);\n@@ -2576,1 +2571,1 @@\n-    _obj_arg_handler = create_adapter(obj_arg_blob, 1, obj_args);\n+    _obj_arg_handler = create_adapter(1, obj_args);\n@@ -2579,1 +2574,1 @@\n-    _int_arg_handler = create_adapter(int_arg_blob, 1, int_args);\n+    _int_arg_handler = create_adapter(1, int_args);\n@@ -2582,1 +2577,1 @@\n-    _obj_int_arg_handler = create_adapter(obj_int_arg_blob, 2, obj_int_args);\n+    _obj_int_arg_handler = create_adapter(2, obj_int_args);\n@@ -2585,1 +2580,1 @@\n-    _obj_obj_arg_handler = create_adapter(obj_obj_arg_blob, 2, obj_obj_args);\n+    _obj_obj_arg_handler = create_adapter(2, obj_obj_args);\n@@ -2599,5 +2594,5 @@\n-  post_adapter_creation(no_arg_blob, _no_arg_handler);\n-  post_adapter_creation(obj_arg_blob, _obj_arg_handler);\n-  post_adapter_creation(int_arg_blob, _int_arg_handler);\n-  post_adapter_creation(obj_int_arg_blob, _obj_int_arg_handler);\n-  post_adapter_creation(obj_obj_arg_blob, _obj_obj_arg_handler);\n+  post_adapter_creation(_no_arg_handler);\n+  post_adapter_creation(_obj_arg_handler);\n+  post_adapter_creation(_int_arg_handler);\n+  post_adapter_creation(_obj_int_arg_handler);\n+  post_adapter_creation(_obj_obj_arg_handler);\n@@ -2698,3 +2693,2 @@\n-  AdapterBlob* comparison_blob = nullptr;\n-  AdapterHandlerEntry* comparison_entry = create_adapter(comparison_blob, total_args_passed, sig_bt, true);\n-  assert(comparison_blob == nullptr, \"no blob should be created when creating an adapter for comparison\");\n+  AdapterHandlerEntry* comparison_entry = create_adapter(total_args_passed, sig_bt, true);\n+  assert(comparison_entry->adapter_blob() == nullptr, \"no blob should be created when creating an adapter for comparison\");\n@@ -2722,1 +2716,1 @@\n-  AdapterBlob* adapter_blob = nullptr;\n+  bool new_entry = false;\n@@ -2738,0 +2732,1 @@\n+#ifndef ZERO\n@@ -2739,0 +2734,1 @@\n+#endif\n@@ -2745,1 +2741,4 @@\n-      entry = create_adapter(adapter_blob, total_args_passed, sig_bt);\n+      entry = create_adapter(total_args_passed, sig_bt);\n+      if (entry != nullptr) {\n+        new_entry = true;\n+      }\n@@ -2750,2 +2749,2 @@\n-  if (adapter_blob != nullptr) {\n-    post_adapter_creation(adapter_blob, entry);\n+  if (new_entry) {\n+    post_adapter_creation(entry);\n@@ -2756,1 +2755,1 @@\n-AdapterBlob* AdapterHandlerLibrary::lookup_aot_cache(AdapterHandlerEntry* handler) {\n+void AdapterHandlerLibrary::lookup_aot_cache(AdapterHandlerEntry* handler) {\n@@ -2760,1 +2759,0 @@\n-  int offsets[AdapterBlob::ENTRY_COUNT];\n@@ -2762,1 +2760,0 @@\n-  AdapterBlob* adapter_blob = nullptr;\n@@ -2765,10 +2762,1 @@\n-    adapter_blob = blob->as_adapter_blob();\n-    adapter_blob->get_offsets(offsets);\n-    address i2c_entry = adapter_blob->content_begin();\n-    assert(offsets[0] == 0, \"sanity check\");\n-    handler->set_entry_points(\n-      i2c_entry,\n-      (offsets[1] != -1) ? (i2c_entry + offsets[1]) : nullptr,\n-      (offsets[2] != -1) ? (i2c_entry + offsets[2]) : nullptr,\n-      (offsets[3] != -1) ? (i2c_entry + offsets[3]) : nullptr\n-    );\n+    handler->set_adapter_blob(blob->as_adapter_blob());\n@@ -2776,1 +2764,0 @@\n-  return adapter_blob;\n@@ -2780,1 +2767,1 @@\n-void AdapterHandlerLibrary::print_adapter_handler_info(outputStream* st, AdapterHandlerEntry* handler, AdapterBlob* adapter_blob) {\n+void AdapterHandlerLibrary::print_adapter_handler_info(outputStream* st, AdapterHandlerEntry* handler) {\n@@ -2786,0 +2773,1 @@\n+  AdapterBlob* adapter_blob = handler->adapter_blob();\n@@ -2804,2 +2792,13 @@\n-bool AdapterHandlerLibrary::generate_adapter_code(AdapterBlob*& adapter_blob,\n-                                                  AdapterHandlerEntry* handler,\n+void AdapterHandlerLibrary::address_to_offset(address entry_address[AdapterBlob::ENTRY_COUNT],\n+                                              int entry_offset[AdapterBlob::ENTRY_COUNT]) {\n+  entry_offset[AdapterBlob::I2C] = 0;\n+  entry_offset[AdapterBlob::C2I] = entry_address[AdapterBlob::C2I] - entry_address[AdapterBlob::I2C];\n+  entry_offset[AdapterBlob::C2I_Unverified] = entry_address[AdapterBlob::C2I_Unverified] - entry_address[AdapterBlob::I2C];\n+  if (entry_address[AdapterBlob::C2I_No_Clinit_Check] == nullptr) {\n+    entry_offset[AdapterBlob::C2I_No_Clinit_Check] = -1;\n+  } else {\n+    entry_offset[AdapterBlob::C2I_No_Clinit_Check] = entry_address[AdapterBlob::C2I_No_Clinit_Check] - entry_address[AdapterBlob::I2C];\n+  }\n+}\n+\n+bool AdapterHandlerLibrary::generate_adapter_code(AdapterHandlerEntry* handler,\n@@ -2813,0 +2812,1 @@\n+#ifndef ZERO\n@@ -2824,0 +2824,2 @@\n+  address entry_address[AdapterBlob::ENTRY_COUNT];\n+  assert(AdapterBlob::ENTRY_COUNT == 4, \"sanity\");\n@@ -2829,2 +2831,1 @@\n-                                         handler);\n-#ifdef ZERO\n+                                         entry_address);\n@@ -2833,2 +2834,2 @@\n-  adapter_blob = nullptr;\n-#else\n+  int entry_offset[AdapterBlob::ENTRY_COUNT];\n+  address_to_offset(entry_address, entry_offset);\n@@ -2843,13 +2844,1 @@\n-\n-  int entry_offset[AdapterBlob::ENTRY_COUNT];\n-  assert(AdapterBlob::ENTRY_COUNT == 4, \"sanity\");\n-  address i2c_entry = handler->get_i2c_entry();\n-  entry_offset[0] = 0; \/\/ i2c_entry offset\n-  entry_offset[1] = (handler->get_c2i_entry() != nullptr) ?\n-                    (handler->get_c2i_entry() - i2c_entry) : -1;\n-  entry_offset[2] = (handler->get_c2i_unverified_entry() != nullptr) ?\n-                    (handler->get_c2i_unverified_entry() - i2c_entry) : -1;\n-  entry_offset[3] = (handler->get_c2i_no_clinit_check_entry() != nullptr) ?\n-                    (handler->get_c2i_no_clinit_check_entry() - i2c_entry) : -1;\n-\n-  adapter_blob = AdapterBlob::create(&buffer, entry_offset);\n+  AdapterBlob* adapter_blob = AdapterBlob::create(&buffer, entry_offset);\n@@ -2862,0 +2851,1 @@\n+  handler->set_adapter_blob(adapter_blob);\n@@ -2869,1 +2859,0 @@\n-  handler->relocate(adapter_blob->content_begin());\n@@ -2875,1 +2864,1 @@\n-    print_adapter_handler_info(tty, handler, adapter_blob);\n+    print_adapter_handler_info(tty, handler);\n@@ -2882,2 +2871,1 @@\n-AdapterHandlerEntry* AdapterHandlerLibrary::create_adapter(AdapterBlob*& adapter_blob,\n-                                                           int total_args_passed,\n+AdapterHandlerEntry* AdapterHandlerLibrary::create_adapter(int total_args_passed,\n@@ -2888,1 +2876,1 @@\n-  if (!generate_adapter_code(adapter_blob, handler, total_args_passed, sig_bt, is_transient)) {\n+  if (!generate_adapter_code(handler, total_args_passed, sig_bt, is_transient)) {\n@@ -2905,1 +2893,2 @@\n-  set_entry_points(nullptr, nullptr, nullptr, nullptr, false);\n+   _adapter_blob = nullptr;\n+   _linked = false;\n@@ -2955,1 +2944,1 @@\n-AdapterBlob* AdapterHandlerLibrary::link_aot_adapter_handler(AdapterHandlerEntry* handler) {\n+void AdapterHandlerLibrary::link_aot_adapter_handler(AdapterHandlerEntry* handler) {\n@@ -2958,1 +2947,1 @@\n-    return nullptr;\n+    return;\n@@ -2961,1 +2950,1 @@\n-  AdapterBlob* blob = lookup_aot_cache(handler);\n+  lookup_aot_cache(handler);\n@@ -2964,2 +2953,2 @@\n-  if ((blob != nullptr) && (PrintAdapterHandlers || PrintStubCode)) {\n-    print_adapter_handler_info(tty, handler, blob);\n+  if (PrintAdapterHandlers || PrintStubCode) {\n+    print_adapter_handler_info(tty, handler);\n@@ -2968,1 +2957,0 @@\n-  return blob;\n@@ -2974,2 +2962,0 @@\n-  AdapterBlob* adapter_blob = nullptr;\n-  ResourceMark rm;\n@@ -2982,2 +2968,3 @@\n-    adapter_blob = AdapterHandlerLibrary::link_aot_adapter_handler(this);\n-    if (adapter_blob == nullptr) {\n+    AdapterHandlerLibrary::link_aot_adapter_handler(this);\n+    \/\/ If link_aot_adapter_handler() succeeds, _adapter_blob will be non-null\n+    if (_adapter_blob == nullptr) {\n@@ -2993,1 +2980,1 @@\n-    if (!AdapterHandlerLibrary::generate_adapter_code(adapter_blob, this, nargs, bt, \/* is_transient *\/ false)) {\n+    if (!AdapterHandlerLibrary::generate_adapter_code(this, nargs, bt, \/* is_transient *\/ false)) {\n@@ -3000,3 +2987,2 @@\n-  \/\/ Outside of the lock\n-  if (adapter_blob != nullptr) {\n-    post_adapter_creation(adapter_blob, this);\n+  if (_adapter_blob != nullptr) {\n+    post_adapter_creation(this);\n@@ -3049,5 +3035,5 @@\n-  address base = _i2c_entry;\n-  if (base == nullptr)  base = _c2i_entry;\n-  assert(base <= _c2i_entry || _c2i_entry == nullptr, \"\");\n-  assert(base <= _c2i_unverified_entry || _c2i_unverified_entry == nullptr, \"\");\n-  assert(base <= _c2i_no_clinit_check_entry || _c2i_no_clinit_check_entry == nullptr, \"\");\n+  address base = _adapter_blob->i2c_entry();\n+  if (base == nullptr) base = _adapter_blob->c2i_entry();\n+  assert(base <= _adapter_blob->c2i_entry() || _adapter_blob->c2i_entry() == nullptr, \"\");\n+  assert(base <= _adapter_blob->c2i_unverified_entry() || _adapter_blob->c2i_unverified_entry() == nullptr, \"\");\n+  assert(base <= _adapter_blob->c2i_no_clinit_check_entry() || _adapter_blob->c2i_no_clinit_check_entry() == nullptr, \"\");\n@@ -3057,15 +3043,0 @@\n-void AdapterHandlerEntry::relocate(address new_base) {\n-  address old_base = base_address();\n-  assert(old_base != nullptr, \"\");\n-  ptrdiff_t delta = new_base - old_base;\n-  if (_i2c_entry != nullptr)\n-    _i2c_entry += delta;\n-  if (_c2i_entry != nullptr)\n-    _c2i_entry += delta;\n-  if (_c2i_unverified_entry != nullptr)\n-    _c2i_unverified_entry += delta;\n-  if (_c2i_no_clinit_check_entry != nullptr)\n-    _c2i_no_clinit_check_entry += delta;\n-  assert(base_address() == new_base, \"\");\n-}\n-\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":72,"deletions":101,"binary":false,"changes":173,"status":"modified"},{"patch":"@@ -479,5 +479,5 @@\n-                               int total_args_passed,\n-                               int max_arg,\n-                               const BasicType *sig_bt,\n-                               const VMRegPair *regs,\n-                               AdapterHandlerEntry* handler);\n+                                      int total_args_passed,\n+                                      int max_arg,\n+                                      const BasicType *sig_bt,\n+                                      const VMRegPair *regs,\n+                                      address entry_address[AdapterBlob::ENTRY_COUNT]);\n@@ -688,5 +688,2 @@\n-  address _i2c_entry;\n-  address _c2i_entry;\n-  address _c2i_unverified_entry;\n-  address _c2i_no_clinit_check_entry;\n-  bool    _linked;\n+  AdapterBlob* _adapter_blob;\n+  bool _linked;\n@@ -705,4 +702,1 @@\n-    _i2c_entry(nullptr),\n-    _c2i_entry(nullptr),\n-    _c2i_unverified_entry(nullptr),\n-    _c2i_no_clinit_check_entry(nullptr),\n+    _adapter_blob(nullptr),\n@@ -737,6 +731,3 @@\n-  void set_entry_points(address i2c_entry, address c2i_entry, address c2i_unverified_entry, address c2i_no_clinit_check_entry, bool linked = true) {\n-    _i2c_entry = i2c_entry;\n-    _c2i_entry = c2i_entry;\n-    _c2i_unverified_entry = c2i_unverified_entry;\n-    _c2i_no_clinit_check_entry = c2i_no_clinit_check_entry;\n-    _linked = linked;\n+  void set_adapter_blob(AdapterBlob* blob) {\n+    _adapter_blob = blob;\n+    _linked = true;\n@@ -745,9 +736,4 @@\n-  address get_i2c_entry()                  const { return _i2c_entry; }\n-  address get_c2i_entry()                  const { return _c2i_entry; }\n-  address get_c2i_unverified_entry()       const { return _c2i_unverified_entry; }\n-  address get_c2i_no_clinit_check_entry()  const { return _c2i_no_clinit_check_entry; }\n-\n-  static const char* entry_name(int i) {\n-    assert(i >=0 && i < ENTRIES_COUNT, \"entry id out of range\");\n-    return _entry_names[i];\n-  }\n+  address get_i2c_entry()                  const { return _adapter_blob != nullptr ? _adapter_blob->i2c_entry() : nullptr; }\n+  address get_c2i_entry()                  const { return _adapter_blob != nullptr ? _adapter_blob->c2i_entry() : nullptr; }\n+  address get_c2i_unverified_entry()       const { return _adapter_blob != nullptr ? _adapter_blob->c2i_unverified_entry() : nullptr; }\n+  address get_c2i_no_clinit_check_entry()  const { return _adapter_blob != nullptr ? _adapter_blob->c2i_no_clinit_check_entry() : nullptr; }\n@@ -755,0 +741,1 @@\n+  AdapterBlob* adapter_blob() const { return _adapter_blob; }\n@@ -757,1 +744,0 @@\n-  void relocate(address new_base);\n@@ -798,3 +784,2 @@\n-  static AdapterBlob* lookup_aot_cache(AdapterHandlerEntry* handler);\n-  static AdapterHandlerEntry* create_adapter(AdapterBlob*& new_adapter,\n-                                             int total_args_passed,\n+  static void lookup_aot_cache(AdapterHandlerEntry* handler);\n+  static AdapterHandlerEntry* create_adapter(int total_args_passed,\n@@ -805,1 +790,1 @@\n-  static void print_adapter_handler_info(outputStream* st, AdapterHandlerEntry* handler, AdapterBlob* adapter_blob);\n+  static void print_adapter_handler_info(outputStream* st, AdapterHandlerEntry* handler);\n@@ -813,2 +798,1 @@\n-  static bool generate_adapter_code(AdapterBlob*& adapter_blob,\n-                                    AdapterHandlerEntry* handler,\n+  static bool generate_adapter_code(AdapterHandlerEntry* handler,\n@@ -832,1 +816,1 @@\n-  static AdapterBlob* link_aot_adapter_handler(AdapterHandlerEntry* handler) NOT_CDS_RETURN_(nullptr);\n+  static void link_aot_adapter_handler(AdapterHandlerEntry* handler) NOT_CDS_RETURN;\n@@ -836,0 +820,1 @@\n+  static void address_to_offset(address entry_address[AdapterBlob::ENTRY_COUNT], int entry_offset[AdapterBlob::ENTRY_COUNT]);\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp","additions":22,"deletions":37,"binary":false,"changes":59,"status":"modified"}]}