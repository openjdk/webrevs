{"files":[{"patch":"@@ -309,1 +309,1 @@\n-                    sun.net.www.MimeTable.loadTable();\n+                    sun.net.www.MimeTable.getDefaultTable();\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import jdk.internal.util.StaticProperty;\n-\n@@ -33,1 +31,0 @@\n-import java.io.FileOutputStream;\n@@ -43,1 +40,2 @@\n-public class MimeTable implements FileNameMap {\n+public final class MimeTable implements FileNameMap {\n+\n@@ -47,3 +45,0 @@\n-    \/** Keyed by content type, returns MimeEntries *\/\n-    private final Hashtable<String, MimeEntry> entries = new Hashtable<>();\n-\n@@ -53,7 +48,1 @@\n-    \/\/ Will be reset if in the platform-specific data file\n-    private static String tempFileTemplate =\n-            System.getProperty(\"content.types.temp.file.template\", \"\/tmp\/%s\");\n-\n-    private static final String filePreamble = \"sun.net.www MIME content-types table\";\n-\n-    MimeTable() {\n+    private MimeTable() {\n@@ -63,2 +52,2 @@\n-    private static class DefaultInstanceHolder {\n-        static final MimeTable defaultInstance = getDefaultInstance();\n+    private static final class DefaultInstanceHolder {\n+        private static final MimeTable defaultInstance = getDefaultInstance();\n@@ -66,1 +55,1 @@\n-        static MimeTable getDefaultInstance() {\n+        private static MimeTable getDefaultInstance() {\n@@ -81,9 +70,0 @@\n-    public static FileNameMap loadTable() {\n-        MimeTable mt = getDefaultTable();\n-        return mt;\n-    }\n-\n-    public synchronized int getSize() {\n-        return entries.size();\n-    }\n-\n@@ -99,4 +79,2 @@\n-    public synchronized void add(MimeEntry m) {\n-        entries.put(m.getType(), m);\n-\n-        String exts[] = m.getExtensions();\n+    private void add(MimeEntry m) {\n+        String[] exts = m.getExtensions();\n@@ -107,2 +85,2 @@\n-        for (int i = 0; i < exts.length; i++) {\n-            extensionMap.put(exts[i], m);\n+        for (String ext : exts) {\n+            extensionMap.put(ext, m);\n@@ -112,32 +90,0 @@\n-    public synchronized MimeEntry remove(String type) {\n-        MimeEntry entry = entries.get(type);\n-        return remove(entry);\n-    }\n-\n-    public synchronized MimeEntry remove(MimeEntry entry) {\n-        String[] extensionKeys = entry.getExtensions();\n-        if (extensionKeys != null) {\n-            for (int i = 0; i < extensionKeys.length; i++) {\n-                extensionMap.remove(extensionKeys[i]);\n-            }\n-        }\n-\n-        return entries.remove(entry.getType());\n-    }\n-\n-    public synchronized MimeEntry find(String type) {\n-        MimeEntry entry = entries.get(type);\n-        if (entry == null) {\n-            \/\/ try a wildcard lookup\n-            Enumeration<MimeEntry> e = entries.elements();\n-            while (e.hasMoreElements()) {\n-                MimeEntry wild = e.nextElement();\n-                if (wild.matches(type)) {\n-                    return wild;\n-                }\n-            }\n-        }\n-\n-        return entry;\n-    }\n-\n@@ -147,1 +93,1 @@\n-    private MimeEntry findViaFileExtension(String fname) {\n+    private MimeEntry findByFileExtension(String fname) {\n@@ -158,1 +104,2 @@\n-        return findByExt(ext);\n+        return extensionMap.get(ext);\n+\n@@ -169,2 +116,1 @@\n-    public MimeEntry findByFileName(String fname) {\n-        MimeEntry entry = null;\n+    private MimeEntry findByFileName(String fname) {\n@@ -176,1 +122,1 @@\n-            entry = findViaFileExtension(fname.substring(0, hashIndex));\n+            MimeEntry entry = findByFileExtension(fname.substring(0, hashIndex));\n@@ -182,2 +128,0 @@\n-        assert entry == null;\n-\n@@ -186,27 +130,1 @@\n-        if (entry == null) {\n-            entry = findViaFileExtension(fname);\n-        }\n-\n-        return entry;\n-    }\n-\n-    \/**\n-     * Locate a MimeEntry by the file extension that has been associated\n-     * with it.\n-     *\/\n-    public synchronized MimeEntry findByExt(String fileExtension) {\n-        return extensionMap.get(fileExtension);\n-    }\n-\n-    public synchronized MimeEntry findByDescription(String description) {\n-        Enumeration<MimeEntry> e = elements();\n-        while (e.hasMoreElements()) {\n-            MimeEntry entry = e.nextElement();\n-            if (description.equals(entry.getDescription())) {\n-                return entry;\n-            }\n-        }\n-\n-        \/\/ We failed, now try treating description as type\n-        return find(description);\n-    }\n+        return findByFileExtension(fname);\n@@ -214,2 +132,0 @@\n-    String getTempFileTemplate() {\n-        return tempFileTemplate;\n@@ -218,17 +134,1 @@\n-    public synchronized Enumeration<MimeEntry> elements() {\n-        return entries.elements();\n-    }\n-\n-    \/\/ For backward compatibility -- mailcap format files\n-    \/\/ This is not currently used, but may in the future when we add ability\n-    \/\/ to read BOTH the properties format and the mailcap format.\n-    protected static String[] mailcapLocations =\n-            new String[]{\n-                    System.getProperty(\"user.mailcap\"),\n-                    StaticProperty.userHome() + \"\/.mailcap\",\n-                    \"\/etc\/mailcap\",\n-                    \"\/usr\/etc\/mailcap\",\n-                    \"\/usr\/local\/etc\/mailcap\"\n-            };\n-\n-    public synchronized void load() {\n+    private synchronized void load() {\n@@ -236,1 +136,1 @@\n-        File file = null;\n+        File file;\n@@ -263,1 +163,1 @@\n-    void parse(Properties entries) {\n+    private void parse(Properties entries) {\n@@ -268,1 +168,0 @@\n-            MimeTable.tempFileTemplate = tempFileTemplate;\n@@ -307,1 +206,1 @@\n-    void parse(String type, String attrs) {\n+    private void parse(String type, String attrs) {\n@@ -320,1 +219,1 @@\n-    void parse(String pair, MimeEntry entry) {\n+    private static void parse(String pair, MimeEntry entry) {\n@@ -340,1 +239,1 @@\n-    void fill(MimeEntry entry, String name, String value) {\n+    private static void fill(MimeEntry entry, String name, String value) {\n@@ -360,1 +259,1 @@\n-    int getActionCode(String action) {\n+    private static int getActionCode(String action) {\n@@ -370,57 +269,0 @@\n-    public Properties getAsProperties() {\n-        Properties properties = new Properties();\n-        Enumeration<MimeEntry> e = elements();\n-        while (e.hasMoreElements()) {\n-            MimeEntry entry = e.nextElement();\n-            properties.put(entry.getType(), entry.toProperty());\n-        }\n-\n-        return properties;\n-    }\n-\n-    protected boolean saveAsProperties(File file) {\n-        try (FileOutputStream os = new FileOutputStream(file)) {\n-            Properties properties = getAsProperties();\n-            properties.put(\"temp.file.template\", tempFileTemplate);\n-            String tag;\n-            String user = StaticProperty.userName();\n-            if (user != null) {\n-                tag = \"; customized for \" + user;\n-                properties.store(os, filePreamble + tag);\n-            }\n-            else {\n-                properties.store(os, filePreamble);\n-            }\n-        }\n-        catch (IOException e) {\n-            e.printStackTrace();\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-    \/*\n-     * Debugging utilities\n-     *\n-    public void list(PrintStream out) {\n-        Enumeration keys = entries.keys();\n-        while (keys.hasMoreElements()) {\n-            String key = (String)keys.nextElement();\n-            MimeEntry entry = (MimeEntry)entries.get(key);\n-            out.println(key + \": \" + entry);\n-        }\n-    }\n-\n-    public static void main(String[] args) {\n-        MimeTable testTable = MimeTable.getDefaultTable();\n-\n-        Enumeration e = testTable.elements();\n-        while (e.hasMoreElements()) {\n-            MimeEntry entry = (MimeEntry)e.nextElement();\n-            System.out.println(entry);\n-        }\n-\n-        testTable.save(File.separator + \"tmp\" +\n-                       File.separator + \"mime_table.save\");\n-    }\n-    *\/\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/MimeTable.java","additions":23,"deletions":181,"binary":false,"changes":204,"status":"modified"}]}