{"files":[{"patch":"@@ -132,1 +132,17 @@\n-                                                 \"JAVA_LOCALE_USE_OLD_ISO_CODES\"); \/\/ C\n+                                                 \"JAVA_LOCALE_USE_OLD_ISO_CODES\",  \/\/ C\n+                                                 \"USER_LANGUAGE\",                  \/\/ C\n+                                                 \"USER_LANGUAGE_DISPLAY\",          \/\/ C\n+                                                 \"USER_LANGUAGE_FORMAT\",           \/\/ C\n+                                                 \"USER_SCRIPT\",                    \/\/ C\n+                                                 \"USER_SCRIPT_DISPLAY\",            \/\/ C\n+                                                 \"USER_SCRIPT_FORMAT\",             \/\/ C\n+                                                 \"USER_COUNTRY\",                   \/\/ C\n+                                                 \"USER_COUNTRY_DISPLAY\",           \/\/ C\n+                                                 \"USER_COUNTRY_FORMAT\",            \/\/ C\n+                                                 \"USER_VARIANT\",                   \/\/ C\n+                                                 \"USER_VARIANT_DISPLAY\",           \/\/ C\n+                                                 \"USER_VARIANT_FORMAT\",            \/\/ C\n+                                                 \"USER_EXTENSIONS\",                \/\/ C\n+                                                 \"USER_EXTENSIONS_DISPLAY\",        \/\/ C\n+                                                 \"USER_EXTENSIONS_FORMAT\",         \/\/ C\n+                                                 \"USER_REGION\");                   \/\/ C\n","filename":"src\/hotspot\/share\/cds\/cdsHeapVerifier.cpp","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+import jdk.internal.util.StaticProperty;\n@@ -1054,0 +1055,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -1056,2 +1058,5 @@\n-        Properties props = GetPropertyAction.privilegedGetProperties();\n-        language = props.getProperty(\"user.language\", \"en\");\n+        var sm = System.getSecurityManager();\n+        if (sm != null) {\n+            sm.checkPropertiesAccess();\n+        }\n+        language = StaticProperty.userLanguage(0);\n@@ -1059,2 +1064,2 @@\n-        region = props.getProperty(\"user.region\");\n-        if (region != null) {\n+        region = StaticProperty.userRegion();\n+        if (!region.isEmpty()) {\n@@ -1072,3 +1077,3 @@\n-            script = props.getProperty(\"user.script\", \"\");\n-            country = props.getProperty(\"user.country\", \"\");\n-            variant = props.getProperty(\"user.variant\", \"\");\n+            script = StaticProperty.userScript(0);\n+            country = StaticProperty.userCountry(0);\n+            variant = StaticProperty.userVariant(0);\n@@ -1078,1 +1083,1 @@\n-                getDefaultExtensions(props.getProperty(\"user.extensions\", \"\"))\n+                getDefaultExtensions(StaticProperty.userExtensions(0))\n@@ -1082,0 +1087,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -1083,2 +1089,0 @@\n-        Properties props = GetPropertyAction.privilegedGetProperties();\n-\n@@ -1086,0 +1090,4 @@\n+        var sm = System.getSecurityManager();\n+        if (sm != null) {\n+            sm.checkPropertiesAccess();\n+        }\n@@ -1087,9 +1095,5 @@\n-            props.getProperty(category.languageKey,\n-                    locale.getLanguage()),\n-            props.getProperty(category.scriptKey,\n-                    locale.getScript()),\n-            props.getProperty(category.countryKey,\n-                    locale.getCountry()),\n-            props.getProperty(category.variantKey,\n-                    locale.getVariant()),\n-            getDefaultExtensions(props.getProperty(category.extensionsKey, \"\"))\n+            StaticProperty.userLanguage(category.ordinal() + 1),\n+            StaticProperty.userScript(category.ordinal() + 1),\n+            StaticProperty.userCountry(category.ordinal() + 1),\n+            StaticProperty.userVariant(category.ordinal() + 1),\n+            getDefaultExtensions(StaticProperty.userExtensions(category.ordinal() + 1))\n","filename":"src\/java.base\/share\/classes\/java\/util\/Locale.java","additions":23,"deletions":19,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -60,0 +60,16 @@\n+    private static final String USER_LANGUAGE;\n+    private static final String USER_LANGUAGE_DISPLAY;\n+    private static final String USER_LANGUAGE_FORMAT;\n+    private static final String USER_SCRIPT;\n+    private static final String USER_SCRIPT_DISPLAY;\n+    private static final String USER_SCRIPT_FORMAT;\n+    private static final String USER_COUNTRY;\n+    private static final String USER_COUNTRY_DISPLAY;\n+    private static final String USER_COUNTRY_FORMAT;\n+    private static final String USER_VARIANT;\n+    private static final String USER_VARIANT_DISPLAY;\n+    private static final String USER_VARIANT_FORMAT;\n+    private static final String USER_EXTENSIONS;\n+    private static final String USER_EXTENSIONS_DISPLAY;\n+    private static final String USER_EXTENSIONS_FORMAT;\n+    private static final String USER_REGION;\n@@ -82,0 +98,16 @@\n+        USER_LANGUAGE = getProperty(props, \"user.language\", \"en\");\n+        USER_LANGUAGE_DISPLAY = getProperty(props, \"user.language.display\", USER_LANGUAGE);\n+        USER_LANGUAGE_FORMAT = getProperty(props, \"user.language.format\", USER_LANGUAGE);\n+        USER_SCRIPT = getProperty(props, \"user.script\", \"\");\n+        USER_SCRIPT_DISPLAY = getProperty(props, \"user.script.display\", USER_SCRIPT);\n+        USER_SCRIPT_FORMAT = getProperty(props, \"user.script.format\", USER_SCRIPT);\n+        USER_COUNTRY = getProperty(props, \"user.country\", \"\");\n+        USER_COUNTRY_DISPLAY = getProperty(props, \"user.country.display\", USER_COUNTRY);\n+        USER_COUNTRY_FORMAT = getProperty(props, \"user.country.format\", USER_COUNTRY);\n+        USER_VARIANT = getProperty(props, \"user.variant\", \"\");\n+        USER_VARIANT_DISPLAY = getProperty(props, \"user.variant.display\", USER_VARIANT);\n+        USER_VARIANT_FORMAT = getProperty(props, \"user.variant.format\", USER_VARIANT);\n+        USER_EXTENSIONS = getProperty(props, \"user.extensions\", \"\");\n+        USER_EXTENSIONS_DISPLAY = getProperty(props, \"user.extensions.display\", USER_EXTENSIONS);\n+        USER_EXTENSIONS_FORMAT = getProperty(props, \"user.extensions.format\", USER_EXTENSIONS);\n+        USER_REGION = getProperty(props, \"user.region\", \"\");\n@@ -279,0 +311,105 @@\n+\n+    \/**\n+     * {@return the {@code user.language} system property}\n+     * <strong>{@link SecurityManager#checkPropertyAccess} is NOT checked\n+     * in this method. The caller of this method should take care to ensure\n+     * that the returned property is not made accessible to untrusted code.<\/strong>\n+     *\n+     * @param category locale category. 0 for the base property,\n+     *                 {@code Locale.Category.ordinal() + 1} for the category\n+     *                 specific property\n+     *\/\n+    public static String userLanguage(int category) {\n+        return switch (category) {\n+            case 0 -> USER_LANGUAGE;\n+            case 1 -> USER_LANGUAGE_DISPLAY;\n+            case 2 -> USER_LANGUAGE_FORMAT;\n+            default -> throw new InternalError();\n+        };\n+    }\n+\n+    \/**\n+     * {@return the {@code user.script} system property}\n+     * <strong>{@link SecurityManager#checkPropertyAccess} is NOT checked\n+     * in this method. The caller of this method should take care to ensure\n+     * that the returned property is not made accessible to untrusted code.<\/strong>\n+     *\n+     * @param category locale category. 0 for the base property,\n+     *                 {@code Locale.Category.ordinal() + 1} for the category\n+     *                 specific property\n+     *\/\n+    public static String userScript(int category) {\n+        return switch (category) {\n+            case 0 -> USER_SCRIPT;\n+            case 1 -> USER_SCRIPT_DISPLAY;\n+            case 2 -> USER_SCRIPT_FORMAT;\n+            default -> throw new InternalError();\n+        };\n+    }\n+\n+    \/**\n+     * {@return the {@code user.country} system property}\n+     * <strong>{@link SecurityManager#checkPropertyAccess} is NOT checked\n+     * in this method. The caller of this method should take care to ensure\n+     * that the returned property is not made accessible to untrusted code.<\/strong>\n+     *\n+     * @param category locale category. 0 for the base property,\n+     *                 {@code Locale.Category.ordinal() + 1} for the category\n+     *                 specific property\n+     *\/\n+    public static String userCountry(int category) {\n+        return switch (category) {\n+            case 0 -> USER_COUNTRY;\n+            case 1 -> USER_COUNTRY_DISPLAY;\n+            case 2 -> USER_COUNTRY_FORMAT;\n+            default -> throw new InternalError();\n+        };\n+    }\n+\n+    \/**\n+     * {@return the {@code user.variant} system property}\n+     * <strong>{@link SecurityManager#checkPropertyAccess} is NOT checked\n+     * in this method. The caller of this method should take care to ensure\n+     * that the returned property is not made accessible to untrusted code.<\/strong>\n+     *\n+     * @param category locale category. 0 for the base property,\n+     *                 {@code Locale.Category.ordinal() + 1} for the category\n+     *                 specific property\n+     *\/\n+    public static String userVariant(int category) {\n+        return switch (category) {\n+            case 0 -> USER_VARIANT;\n+            case 1 -> USER_VARIANT_DISPLAY;\n+            case 2 -> USER_VARIANT_FORMAT;\n+            default -> throw new InternalError();\n+        };\n+    }\n+\n+    \/**\n+     * {@return the {@code user.extensions} system property}\n+     * <strong>{@link SecurityManager#checkPropertyAccess} is NOT checked\n+     * in this method. The caller of this method should take care to ensure\n+     * that the returned property is not made accessible to untrusted code.<\/strong>\n+     *\n+     * @param category locale category. 0 for the base property,\n+     *                 {@code Locale.Category.ordinal() + 1} for the category\n+     *                 specific property\n+     *\/\n+    public static String userExtensions(int category) {\n+        return switch (category) {\n+            case 0 -> USER_EXTENSIONS;\n+            case 1 -> USER_EXTENSIONS_DISPLAY;\n+            case 2 -> USER_EXTENSIONS_FORMAT;\n+            default -> throw new InternalError();\n+        };\n+    }\n+\n+    \/**\n+     * {@return the {@code user.region} system property}\n+     * <strong>{@link SecurityManager#checkPropertyAccess} is NOT checked\n+     * in this method. The caller of this method should take care to ensure\n+     * that the returned property is not made accessible to untrusted code.<\/strong>\n+     *\/\n+    public static String userRegion() {\n+        return USER_REGION;\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/StaticProperty.java","additions":137,"deletions":0,"binary":false,"changes":137,"status":"modified"}]}