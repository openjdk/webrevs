{"files":[{"patch":"@@ -99,2 +99,4 @@\n-  DeadSpacer(ContiguousSpace* space, size_t allowed_dead_ratio) : _allowed_deadspace_words(0), _space(space) {\n-    _active = allowed_dead_ratio > 0;\n+  DeadSpacer(ContiguousSpace* space) : _allowed_deadspace_words(0), _space(space) {\n+    size_t ratio = (_space == SerialHeap::heap()->old_gen()->space())\n+                   ? MarkSweepDeadRatio : 0;\n+    _active = ratio > 0;\n@@ -108,1 +110,1 @@\n-        _allowed_deadspace_words = (space->capacity() * allowed_dead_ratio \/ 100) \/ HeapWordSize;\n+        _allowed_deadspace_words = (space->capacity() * ratio \/ 100) \/ HeapWordSize;\n@@ -152,3 +154,0 @@\n-    \/\/ The maximum percentage of objects that can be dead in the compacted\n-    \/\/ live part of a compacted space.\n-    size_t _allowed_dead_ratio;\n@@ -156,1 +155,1 @@\n-    void init(ContiguousSpace* space, size_t allowed_dead_ratio) {\n+    void init(ContiguousSpace* space) {\n@@ -160,1 +159,0 @@\n-      _allowed_dead_ratio = allowed_dead_ratio;\n@@ -182,4 +180,0 @@\n-  size_t get_allowed_dead_ratio(uint index) const {\n-    return _spaces[index]._allowed_dead_ratio;\n-  }\n-\n@@ -271,3 +265,3 @@\n-    _spaces[0].init(heap->old_gen()->space(), MarkSweepDeadRatio);\n-    _spaces[1].init(heap->young_gen()->eden(), 0);\n-    _spaces[2].init(heap->young_gen()->from(), 0);\n+    _spaces[0].init(heap->old_gen()->space());\n+    _spaces[1].init(heap->young_gen()->eden());\n+    _spaces[2].init(heap->young_gen()->from());\n@@ -277,1 +271,1 @@\n-      _spaces[3].init(heap->young_gen()->to(), 0);\n+      _spaces[3].init(heap->young_gen()->to());\n@@ -293,1 +287,1 @@\n-      DeadSpacer dead_spacer(space, get_allowed_dead_ratio(i));\n+      DeadSpacer dead_spacer(space);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialFullGC.cpp","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"}]}