{"files":[{"patch":"@@ -440,1 +440,1 @@\n-                    throw new IllegalArgumentException(\"Invalid KeySpec.\");\n+                    throw new ClassCastException(\"Invalid KeySpec.\");\n@@ -443,3 +443,3 @@\n-                throw new IllegalArgumentException(\"Invalid KeySpec \" +\n-                    \"specified (\" + tClass.getName() +\") for key (\" +\n-                    key.getClass().getName() +\")\", e);\n+                throw new ClassCastException(\"Invalid KeySpec \" +\n+                    \"specified: \" + tClass.getName() +\" for key \" +\n+                    key.getClass().getName());\n","filename":"src\/java.base\/share\/classes\/java\/security\/PEMDecoder.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @bug 8298420\n+ * @bug 8298420 8365288\n@@ -81,1 +81,3 @@\n-        testClass(PEMData.rsapriv, X509EncodedKeySpec.class, false);\n+        testClass(PEMData.rsapriv, X509EncodedKeySpec.class, false, ClassCastException.class);\n+        System.out.println(\"Decoder test rsapriv PEM asking other EKS returned:\");\n+        testClass(PEMData.rsapriv, XEKS.class, false, ClassCastException.class);\n@@ -487,0 +489,13 @@\n+    static void testClass(PEMData.Entry entry, Class clazz, boolean pass,\n+        Class ec) throws RuntimeException {\n+        try {\n+            testClass(entry, clazz);\n+        } catch (Exception e) {\n+            if (ec.isInstance(e)) {\n+                System.out.println(\"PASS\");\n+                return;\n+            }\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n@@ -576,0 +591,11 @@\n+\n+    class XEKS extends EncodedKeySpec {\n+        public XEKS(byte[] encodedKey) {\n+            super(encodedKey);\n+        }\n+\n+        @Override\n+        public String getFormat() {\n+            return \"\";\n+        }\n+    }\n","filename":"test\/jdk\/java\/security\/PEM\/PEMDecoderTest.java","additions":28,"deletions":2,"binary":false,"changes":30,"status":"modified"}]}