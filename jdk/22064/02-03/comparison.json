{"files":[{"patch":"@@ -1367,1 +1367,0 @@\n-  \/\/ This also looks obsolete\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-static void trace_class_resolution_impl(Klass* to_class, TRAPS) {\n+extern void trace_class_resolution(Klass* to_class) {\n@@ -160,1 +160,1 @@\n-  JavaThread* jthread = THREAD;\n+  JavaThread* jthread = JavaThread::current();\n@@ -164,7 +164,1 @@\n-    \/\/ scan up the stack skipping ClassLoader, AccessController and PrivilegedAction frames\n-    \/\/ It was this thing - is this no longer needed also?  We won't have these frames anymore, right (except class loader)?\n-    TempNewSymbol access_controller = SymbolTable::new_symbol(\"java\/security\/AccessController\");\n-    Klass* access_controller_klass = SystemDictionary::resolve_or_fail(access_controller, false, CHECK);\n-    TempNewSymbol privileged_action = SymbolTable::new_symbol(\"java\/security\/PrivilegedAction\");\n-    Klass* privileged_action_klass = SystemDictionary::resolve_or_fail(privileged_action, false, CHECK);\n-\n+    \/\/ Scan up the stack skipping ClassLoader frames.\n@@ -175,3 +169,1 @@\n-      if (!vfst.method()->method_holder()->is_subclass_of(vmClasses::ClassLoader_klass())&&\n-          !vfst.method()->method_holder()->is_subclass_of(access_controller_klass) &&\n-          !vfst.method()->method_holder()->is_subclass_of(privileged_action_klass)) {\n+      if (!vfst.method()->method_holder()->is_subclass_of(vmClasses::ClassLoader_klass())) {\n@@ -236,8 +228,0 @@\n-void trace_class_resolution(Klass* to_class) {\n-  EXCEPTION_MARK;\n-  trace_class_resolution_impl(to_class, THREAD);\n-  if (HAS_PENDING_EXCEPTION) {\n-    CLEAR_PENDING_EXCEPTION;\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":4,"deletions":20,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -535,2 +535,1 @@\n-\/\/ This function is used in Class.forName, Class.newInstance, Method.Invoke,\n-\/\/ AccessController.doPrivileged.\n+\/\/ This function is used in Class.forName, Class.newInstance, and Method.Invoke.\n","filename":"src\/hotspot\/share\/runtime\/vframe.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}