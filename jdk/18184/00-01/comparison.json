{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    public static void main(String[] args) {\n+    public static void main(String[] args) throws Exception {\n@@ -43,11 +43,9 @@\n-            try {\n-                jif.setIcon(true);\n-            } catch (PropertyVetoException ex) {\n-                ex.printStackTrace();\n-            }\n-            JInternalFrame[] ji =\n-                    mDesktop.getAllFramesInLayer(JLayeredPane.DEFAULT_LAYER);\n-            for (int i = 0; i < ji.length; i++) {\n-                if (jif == ji[i]) {\n-                    return;\n-                }\n+            jif.setIcon(true);\n+        } catch (PropertyVetoException ex) {\n+            ex.printStackTrace();\n+        }\n+        JInternalFrame[] ji =\n+                mDesktop.getAllFramesInLayer(JLayeredPane.DEFAULT_LAYER);\n+        for (int i = 0; i < ji.length; i++) {\n+            if (jif == ji[i]) {\n+                return;\n@@ -55,4 +53,0 @@\n-            throw new RuntimeException(\"JDesktopPane.getAllFramesInLayer() failed...\");\n-        } catch (Exception e) {\n-            throw new RuntimeException(\"Test interrupted by \"\n-                    + e.getLocalizedMessage());\n@@ -60,0 +54,1 @@\n+        throw new RuntimeException(\"JDesktopPane.getAllFramesInLayer() failed...\");\n","filename":"test\/jdk\/javax\/swing\/JDesktopPane\/4132993\/bug4132993.java","additions":12,"deletions":17,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import java.awt.AWTException;\n@@ -34,0 +35,1 @@\n+import java.beans.PropertyVetoException;\n@@ -51,1 +53,1 @@\n-    volatile boolean  keyTyped = false;\n+    volatile boolean frameActivated = false;\n@@ -67,1 +69,1 @@\n-                        keyTyped = true;\n+                        frameActivated = true;\n@@ -83,3 +85,9 @@\n-    public void performTest() {\n-        try {\n-            jif.setSelected(true);\n+    public void performTest() throws InterruptedException,\n+            InvocationTargetException, AWTException {\n+        SwingUtilities.invokeAndWait(() -> {\n+            try {\n+                jif.setSelected(true);\n+            } catch (PropertyVetoException e) {\n+                e.printStackTrace();\n+            }\n+        });\n@@ -87,4 +95,3 @@\n-            synchronized (this) {\n-                while (!keyTyped) {\n-                    bug4773378.this.wait();\n-                }\n+        synchronized (this) {\n+            while (!frameActivated) {\n+                bug4773378.this.wait();\n@@ -92,0 +99,1 @@\n+        }\n@@ -93,5 +101,5 @@\n-            robot = new Robot();\n-            robot.keyPress(KeyEvent.VK_CONTROL);\n-            robot.keyPress(KeyEvent.VK_F6);\n-            robot.keyRelease(KeyEvent.VK_F6);\n-            robot.keyRelease(KeyEvent.VK_CONTROL);\n+        robot = new Robot();\n+        robot.keyPress(KeyEvent.VK_CONTROL);\n+        robot.keyPress(KeyEvent.VK_F6);\n+        robot.keyRelease(KeyEvent.VK_F6);\n+        robot.keyRelease(KeyEvent.VK_CONTROL);\n@@ -99,4 +107,1 @@\n-            Thread.sleep(2000);\n-        } catch (Throwable t) {\n-            t.printStackTrace();\n-        }\n+        Thread.sleep(2000);\n@@ -115,1 +120,2 @@\n-    public static void main(String[] args) throws InterruptedException, InvocationTargetException {\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException, AWTException {\n@@ -121,1 +127,0 @@\n-\n","filename":"test\/jdk\/javax\/swing\/JDesktopPane\/4773378\/bug4773378.java","additions":26,"deletions":21,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-            robo.mouseMove(100,100);\n+            robo.mouseMove(100, 100);\n","filename":"test\/jdk\/javax\/swing\/JEditorPane\/4325606\/bug4325606.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-    public static void main(String[] args)  {\n+    public static void main(String[] args) {\n","filename":"test\/jdk\/javax\/swing\/JEditorPane\/4330998\/bug4330998.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    JFrame frame = null;\n+    JFrame frame;\n@@ -70,0 +70,1 @@\n+        jRobo.waitForIdle();\n@@ -79,3 +80,1 @@\n-            try {\n-                Thread.sleep(50);\n-            } catch (InterruptedException ex) {}\n+            jRobo.delay(50);\n@@ -92,1 +91,1 @@\n-    public static void main(String args[]) throws InterruptedException,\n+    public static void main(String[] args) throws InterruptedException,\n","filename":"test\/jdk\/javax\/swing\/JEditorPane\/4694598\/bug4694598.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"}]}