{"files":[{"patch":"@@ -107,1 +107,1 @@\n-    virtual char *subsystem_path() = 0;\n+    virtual char* subsystem_path() = 0;\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,3 +73,1 @@\n-  TestController(char *p) {\n-    _path = p;\n-  }\n+  TestController(char* p): _path(p) {}\n@@ -103,1 +101,2 @@\n-  julong x = 0xBAD;\n+  constexpr julong bad = 0xBAD;\n+  julong x = bad;\n@@ -107,2 +106,2 @@\n-  EXPECT_FALSE(is_ok) << \"Value must not be missing in key\/value case\";\n-  EXPECT_EQ((julong)0xBAD, x) << \"x must be unchanged\";\n+  EXPECT_FALSE(is_ok) << \"Value is missing in key\/value case, expecting false\";\n+  EXPECT_EQ(bad, x) << \"x must be unchanged\";\n@@ -110,1 +109,1 @@\n-  x = 0xBAD;\n+  x = bad;\n@@ -114,1 +113,1 @@\n-  EXPECT_EQ((julong)0xBAD, x) << \"x must be unchanged\";\n+  EXPECT_EQ(bad, x) << \"x must be unchanged\";\n@@ -116,1 +115,1 @@\n-  x = 0xBAD;\n+  x = bad;\n@@ -120,1 +119,1 @@\n-  EXPECT_EQ((julong)0xBAD, x) << \"x must be unchanged\";\n+  EXPECT_EQ(bad, x) << \"x must be unchanged\";\n@@ -122,1 +121,1 @@\n-  x = 0xBAD;\n+  x = bad;\n@@ -126,1 +125,1 @@\n-  EXPECT_EQ((julong)0xBAD, x) << \"x must be unchanged\";\n+  EXPECT_EQ(bad, x) << \"x must be unchanged\";\n@@ -128,1 +127,1 @@\n-  x = 0xBAD;\n+  x = bad;\n@@ -132,1 +131,1 @@\n-  EXPECT_EQ((julong)0xBAD, x) << \"x must be unchanged\";\n+  EXPECT_EQ(bad, x) << \"x must be unchanged\";\n@@ -148,1 +147,2 @@\n-  julong x = 0xBAD;\n+  constexpr julong bad = 0xBAD;\n+  julong x = bad;\n@@ -153,1 +153,1 @@\n-  EXPECT_EQ((julong)100, x) << \"Incorrect!\";\n+  EXPECT_EQ((julong)100, x);\n@@ -155,1 +155,1 @@\n-  x = 0xBAD;\n+  x = bad;\n@@ -159,1 +159,1 @@\n-  EXPECT_EQ((julong)111, x) << \"Incorrect!\";\n+  EXPECT_EQ((julong)111, x);\n@@ -161,1 +161,1 @@\n-  x = 0xBAD;\n+  x = bad;\n@@ -165,1 +165,1 @@\n-  EXPECT_EQ((julong)111, x) << \"Incorrect!\";\n+  EXPECT_EQ((julong)111, x);\n@@ -167,1 +167,1 @@\n-  x = 0xBAD;\n+  x = bad;\n@@ -171,1 +171,1 @@\n-  EXPECT_EQ((julong)133, x) << \"Incorrect!\";\n+  EXPECT_EQ((julong)133, x);\n@@ -173,1 +173,1 @@\n-  x = 0xBAD;\n+  x = bad;\n@@ -177,1 +177,1 @@\n-  EXPECT_EQ((julong)333, x) << \"Incorrect!\";\n+  EXPECT_EQ((julong)333, x);\n@@ -179,1 +179,1 @@\n-  x = 0xBAD;\n+  x = bad;\n@@ -183,1 +183,1 @@\n-  EXPECT_EQ((julong)1, x) << \"Incorrect!\";\n+  EXPECT_EQ((julong)1, x);\n@@ -192,1 +192,2 @@\n-  julong a = 0xBAD;\n+  constexpr julong bad = 0xBAD;\n+  julong a = bad;\n@@ -196,1 +197,1 @@\n-  EXPECT_EQ((julong)0xBAD, a) << \"Expected untouched scan value\";\n+  EXPECT_EQ(bad, a) << \"Expected untouched scan value\";\n@@ -217,1 +218,2 @@\n-  julong result = 0xBAD;\n+  constexpr julong bad = 0xBAD;\n+  julong result = bad;\n@@ -220,1 +222,1 @@\n-  EXPECT_EQ((julong)0xBAD, result) << \"Expected untouched scan value\";\n+  EXPECT_EQ(bad, result) << \"Expected untouched scan value\";\n@@ -227,1 +229,2 @@\n-  julong a = 0xBAD;\n+  constexpr julong bad = 0xBAD;\n+  julong a = bad;\n@@ -231,1 +234,1 @@\n-  EXPECT_EQ((julong)0xBAD, a) << \"Expected untouched scan value\";\n+  EXPECT_EQ(bad, a) << \"Expected untouched scan value\";\n@@ -237,0 +240,1 @@\n+  constexpr julong bad = 0xBAD;\n@@ -245,1 +249,1 @@\n-  julong foo = 0xBAD;\n+  julong foo = bad;\n@@ -253,1 +257,1 @@\n-  foo = 0xBAD;\n+  foo = bad;\n@@ -258,1 +262,1 @@\n-  foo = 0xBAD;\n+  foo = bad;\n@@ -262,1 +266,1 @@\n-  EXPECT_EQ((julong)0xBAD, foo) << \"foo was altered\";\n+  EXPECT_EQ(bad, foo) << \"foo was altered\";\n@@ -301,1 +305,1 @@\n-  EXPECT_STREQ(\"foo-bar\", result) << \"Expected strings to be equal\";\n+  EXPECT_STREQ(\"foo-bar\", result);\n@@ -307,1 +311,1 @@\n-  EXPECT_STREQ(\"1234\", result) << \"Expected strings to be equal\";\n+  EXPECT_STREQ(\"1234\", result);\n@@ -314,1 +318,7 @@\n-  EXPECT_STREQ(\"abc def\", result) << \"Expected strings to be equal\";\n+  EXPECT_STREQ(\"abc def\", result);\n+\n+  result[0] = '\\0';\n+  fill_file(test_file, \"  \\na\");\n+  ok = controller->read_string(base_with_slash, result, 1024);\n+  EXPECT_TRUE(ok) << \"String parsing should have been successful\";\n+  EXPECT_STREQ(\"  \", result);\n@@ -321,1 +331,1 @@\n-  EXPECT_STREQ(\"test\", result) << \"Expected strings to be equal\";\n+  EXPECT_STREQ(\"test\", result);\n@@ -332,2 +342,3 @@\n-  char too_large[2 * 1024];\n-  for (int i = 0; i < (2 * 1024); i++) {\n+  const size_t large_len = 2 * 1024;\n+  char too_large[large_len];\n+  for (size_t i = 0; i < large_len; i++) {\n@@ -336,0 +347,1 @@\n+  too_large[large_len - 1] = '\\0';\n@@ -341,3 +353,1 @@\n-  for (int i = 0; i < 1023; i++) {\n-    EXPECT_EQ(too_large[i], result[i]) << \"Expected item at idx \" << i << \" to match\";\n-  }\n+  EXPECT_EQ(0, strncmp(too_large, result, 1023));\n@@ -366,1 +376,1 @@\n-  EXPECT_EQ((jlong)10000, result) << \"result value incorrect\";\n+  EXPECT_EQ((jlong)10000, result);\n","filename":"test\/hotspot\/gtest\/runtime\/test_cgroupSubsystem_linux.cpp","additions":56,"deletions":46,"binary":false,"changes":102,"status":"modified"}]}