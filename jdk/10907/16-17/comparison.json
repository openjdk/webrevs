{"files":[{"patch":"@@ -77,0 +77,3 @@\n+  \/\/ Max size of stub has been determined by testing with 0, in which case\n+  \/\/ C2CodeStubList::emit() will throw an assertion and report the actual size that\n+  \/\/ is needed.\n@@ -89,0 +92,3 @@\n+  \/\/ Max size of stub has been determined by testing with 0, in which case\n+  \/\/ C2CodeStubList::emit() will throw an assertion and report the actual size that\n+  \/\/ is needed.\n","filename":"src\/hotspot\/cpu\/x86\/c2_CodeStubs_x86.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -624,1 +624,1 @@\n-      \/\/ We can not emit the lock-stack-check in verified_entry() because we don't have enough\n+      \/\/ We cannot emit the lock-stack-check in verified_entry() because we don't have enough\n@@ -632,1 +632,1 @@\n-      testptr(objReg, objReg); \/\/ ZF=0 to indicate failure\n+      testptr(objReg, objReg); \/\/ force ZF=0 to indicate failure\n@@ -682,2 +682,1 @@\n-  \/\/ Optimistic form: consider XORL tmpReg,tmpReg\n-  movptr(tmpReg, NULL_WORD);\n+  xorptr(tmpReg, tmpReg);\n@@ -685,7 +684,1 @@\n-  \/\/ Appears unlocked - try to swing _owner from null to non-null.\n-  \/\/ Ideally, I'd manifest \"Self\" with get_thread and then attempt\n-  \/\/ to CAS the register containing Self into m->Owner.\n-  \/\/ But we don't have enough registers, so instead we can either try to CAS\n-  \/\/ rsp or the address of the box (in scr) into &m->owner.  If the CAS succeeds\n-  \/\/ we later store \"Self\" into m->Owner.  Transiently storing a stack address\n-  \/\/ (rsp or the address of the box) into  m->owner is harmless.\n+  \/\/ Appears unlocked - try to swing _owner from null to curren thread.\n@@ -815,1 +808,1 @@\n-      \/\/ If the owner is ANONYMOUS, we need to fix it -  in an outline stube.\n+      \/\/ If the owner is ANONYMOUS, we need to fix it -  in an outline stub.\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1357,1 +1357,1 @@\n-      \/\/ Try to swing header from locked to unlock.\n+      \/\/ Try to swing header from locked to unlocked.\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -9733,1 +9733,1 @@\n-  get_thread(rax);\n+  get_thread(thread);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}