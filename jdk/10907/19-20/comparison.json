{"files":[{"patch":"@@ -761,1 +761,1 @@\n-  SharedRuntime::monitor_enter_helper(obj, UseFastLocking ? NULL : lock->lock(), current);\n+  SharedRuntime::monitor_enter_helper(obj, UseFastLocking ? nullptr : lock->lock(), current);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -743,2 +743,2 @@\n-           \"must be NULL or an object\");\n-    ObjectSynchronizer::enter(h_obj, NULL, current);\n+           \"must be null or an object\");\n+    ObjectSynchronizer::enter(h_obj, nullptr, current);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  _base(UseFastLocking && !UseHeavyMonitors ? _initial : NULL),\n+  _base(UseFastLocking && !UseHeavyMonitors ? _initial : nullptr),\n","filename":"src\/hotspot\/share\/runtime\/lockStack.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-    set_owner_from(NULL, ANONYMOUS_OWNER);\n+    set_owner_from(nullptr, ANONYMOUS_OWNER);\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1342,1 +1342,1 @@\n-        monitor->set_owner_from(NULL, current);\n+        monitor->set_owner_from(nullptr, current);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1429,1 +1429,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1438,1 +1438,1 @@\n-      assert(owner == NULL || owner->is_Java_thread(), \"only JavaThreads own monitors\");\n+      assert(owner == nullptr || owner->is_Java_thread(), \"only JavaThreads own monitors\");\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}