{"files":[{"patch":"@@ -2648,1 +2648,5 @@\n-  if (use->Opcode() == Op_AddX) {\n+\n+  \/\/ From CastX2PNode::Ideal\n+  \/\/ CastX2P(AddX(x, y))\n+  \/\/ CastX2P(SubX(x, y))\n+  if (use->Opcode() == Op_AddX || use->Opcode() == Op_SubX) {\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8367483\n+ * @summary Missed worklist notification during IGVN for CastX2P(SubX(x, y)) pattern,\n+ *          leads to missed optimization.\n+ * @run main\/othervm\n+ *           -XX:CompileCommand=compileonly,compiler.igvn.MissedOptimizationWithCastX2PSubX::test\n+ *           -XX:-TieredCompilation\n+ *           -XX:+IgnoreUnrecognizedVMOptions\n+ *           -XX:VerifyIterativeGVN=1110\n+ *           compiler.igvn.MissedOptimizationWithCastX2PSubX\n+ * @run main compiler.igvn.MissedOptimizationWithCastX2PSubX\n+ *\/\n+\n+package compiler.igvn;\n+\n+import java.lang.foreign.*;\n+\n+public class MissedOptimizationWithCastX2PSubX {\n+    public static void main(String[] args) {\n+        MemorySegment a  = Arena.ofAuto().allocate(74660);\n+        MemorySegment b  = Arena.ofAuto().allocate(74660);\n+\n+        for (int i = 0; i < 1_000; i++) {\n+            test(a, 69830\/2 - 100, b, -10_000, 0, 1_000);\n+        }\n+    }\n+\n+    public static void test(MemorySegment a, long invarA, MemorySegment b, long invarB, long ivLo, long ivHi) {\n+        for (long i = ivHi-1; i >= ivLo; i-=1) {\n+            a.set(ValueLayout.JAVA_CHAR_UNALIGNED, 69830L + 2L * i + -2L * invarA, (char)42);\n+            b.set(ValueLayout.JAVA_FLOAT_UNALIGNED, 9071L + -4L * i + -4L * invarB, 42);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/igvn\/MissedOptimizationWithCastX2PSubX.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}