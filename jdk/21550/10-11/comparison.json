{"files":[{"patch":"@@ -38,1 +38,1 @@\n-import static jdk.jpackage.test.DirectoryContentVerifierTest.AssertType.EQUALS;\n+import static jdk.jpackage.test.DirectoryContentVerifierTest.AssertType.MATCH;\n@@ -55,1 +55,1 @@\n-        EQUALS(DirectoryContentVerifier::equals),\n+        MATCH(DirectoryContentVerifier::match),\n@@ -79,1 +79,1 @@\n-            if (assertOp == EQUALS) {\n+            if (assertOp == MATCH) {\n@@ -81,1 +81,1 @@\n-                    data.add(new Object[]{actualPaths, expectedPaths, EQUALS, success});\n+                    data.add(new Object[]{actualPaths, expectedPaths, MATCH, success});\n@@ -114,1 +114,1 @@\n-        private AssertType assertOp = EQUALS;\n+        private AssertType assertOp = MATCH;\n","filename":"test\/jdk\/tools\/jpackage\/helpers-test\/jdk\/jpackage\/test\/DirectoryContentVerifierTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -270,2 +270,2 @@\n-        TKit.assertDirectoryContent(bundleRoot).equals(Path.of(\"Contents\"));\n-        TKit.assertDirectoryContent(bundleRoot.resolve(\"Contents\")).equals(\n+        TKit.assertDirectoryContent(bundleRoot).match(Path.of(\"Contents\"));\n+        TKit.assertDirectoryContent(bundleRoot.resolve(\"Contents\")).match(\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/MacHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -775,2 +775,2 @@\n-        public void equals(Path ... expected) {\n-            equals(Set.of(expected));\n+        public void match(Path ... expected) {\n+            DirectoryContentVerifier.this.match(Set.of(expected));\n@@ -779,1 +779,1 @@\n-        public void equals(Set<Path> expected) {\n+        public void match(Set<Path> expected) {\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/TKit.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}