{"files":[{"patch":"@@ -37,0 +37,1 @@\n+import jdk.jpackage.test.Annotations.Parameter;\n@@ -60,11 +61,9 @@\n-        for (boolean appImage : List.of(true, false)) {\n-            data.addAll(List.of(new Object[][]{\n-                {appImage, wrap(InOutPathTest::outputDirInInputDir, \"--dest:subdir\")},\n-                {appImage, wrap(InOutPathTest::outputDirSameAsInputDir, \"--dest:same\")},\n-                {appImage, wrap(InOutPathTest::tempDirInInputDir, \"--temp\")},\n-                {appImage, wrap(cmd -> {\n-                    outputDirInInputDir(cmd);\n-                    tempDirInInputDir(cmd);\n-                }, \"--dest:subdir and --temp\")},\n-            }));\n-        }\n+        data.addAll(List.of(new Object[][]{\n+            {wrap(InOutPathTest::outputDirInInputDir, \"--dest:subdir\")},\n+            {wrap(InOutPathTest::outputDirSameAsInputDir, \"--dest:same\")},\n+            {wrap(InOutPathTest::tempDirInInputDir, \"--temp\")},\n+            {wrap(cmd -> {\n+                outputDirInInputDir(cmd);\n+                tempDirInInputDir(cmd);\n+            }, \"--dest:subdir and --temp\")},\n+        }));\n@@ -75,2 +74,1 @@\n-    public InOutPathTest(Boolean appImage, Envelope configure) {\n-        this.appImage = appImage;\n+    public InOutPathTest(Envelope configure) {\n@@ -81,1 +79,3 @@\n-    public void test() throws Throwable {\n+    @Parameter(\"true\")\n+    @Parameter(\"false\")\n+    public void test(boolean appImage) throws Throwable {\n@@ -174,1 +174,0 @@\n-    private final boolean appImage;\n","filename":"test\/jdk\/tools\/jpackage\/share\/InOutPathTest.java","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"}]}