{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-import java.io.File;\n@@ -46,1 +45,0 @@\n-import java.util.Properties;\n@@ -49,1 +47,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -51,0 +48,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -90,22 +88,4 @@\n-        var launcher = Path.of(System.getProperty(\"test.nativepath\"), \"NullCallerTest\");\n-        var pb = new ProcessBuilder(launcher.toString());\n-        var env = pb.environment();\n-\n-        var libDir = Platform.libDir().toString();\n-        var vmDir = Platform.jvmLibDir().toString();\n-\n-        \/\/ set up shared library path\n-        var sharedLibraryPathEnvName = Platform.sharedLibraryPathVariableName();\n-        env.compute(sharedLibraryPathEnvName,\n-                (k, v) -> (v == null) ? libDir : v + File.pathSeparator + libDir);\n-        env.compute(sharedLibraryPathEnvName,\n-                (k, v) -> (v == null) ? vmDir : v + File.pathSeparator + vmDir);\n-\n-        \/\/ launch the actual test\n-        System.out.println(\"Launching: \" + launcher + \" shared library path: \" +\n-                env.get(sharedLibraryPathEnvName));\n-        new OutputAnalyzer(pb.start())\n-                .outputTo(System.out)\n-                .errorTo(System.err)\n-                .shouldHaveExitValue(0);\n-\n+        ProcessBuilder pb = ProcessTools.createNativeTestProcessBuilder(\"NullCallerTest\");\n+        System.out.println(\"Launching: \" + pb.command() + \" shared library path: \" +\n+                               pb.environment().get(Platform.sharedLibraryPathVariableName()));\n+        ProcessTools.executeProcess(pb).shouldHaveExitValue(0);\n","filename":"test\/jdk\/jni\/nullCaller\/NullCallerTest.java","additions":6,"deletions":26,"binary":false,"changes":32,"status":"modified"}]}