{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import java.lang.constant.ConstantDescs;\n@@ -1527,1 +1528,1 @@\n-        boolean isConstructor() { return !isPartial() && \"<init>\".equals(name); }\n+        boolean isConstructor() { return !isPartial() && ConstantDescs.INIT_NAME.equals(name); }\n@@ -1529,1 +1530,1 @@\n-        boolean isMethod() { return !isPartial() && !isConstructor() && !\"<clinit>\".equals(name); }\n+        boolean isMethod() { return !isPartial() && !isConstructor() && !ConstantDescs.CLASS_INIT_NAME.equals(name); }\n@@ -2043,2 +2044,2 @@\n-     * <p> The returned array never contains methods with names \"{@code <init>}\"\n-     * or \"{@code <clinit>}\".\n+     * <p> The returned array never contains methods with names {@value\n+     * ConstantDescs#INIT_NAME} or {@value ConstantDescs#CLASS_INIT_NAME}.\n@@ -2237,2 +2238,2 @@\n-     * <p> This method does not find any method with name \"{@code <init>}\" or\n-     * \"{@code <clinit>}\".\n+     * <p> This method does not find any method with name {@value\n+     * ConstantDescs#INIT_NAME} or {@value ConstantDescs#CLASS_INIT_NAME}.\n@@ -2296,1 +2297,2 @@\n-     *         or if the name is \"&lt;init&gt;\"or \"&lt;clinit&gt;\".\n+     *         or if the name is {@value ConstantDescs#INIT_NAME} or\n+     *         {@value ConstantDescs#CLASS_INIT_NAME}.\n@@ -2552,2 +2554,3 @@\n-     * has a class initialization method {@code <clinit>}, then the returned\n-     * array does <em>not<\/em> have a corresponding {@code Method} object.\n+     * has a class initialization method {@value ConstantDescs#CLASS_INIT_NAME},\n+     * then the returned array does <em>not<\/em> have a corresponding {@code\n+     * Method} object.\n@@ -2724,1 +2727,2 @@\n-     * name is \"&lt;init&gt;\"or \"&lt;clinit&gt;\" a {@code NoSuchMethodException}\n+     * name is {@value ConstantDescs#INIT_NAME} or {@value\n+     * ConstantDescs#CLASS_INIT_NAME} a {@code NoSuchMethodException}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.lang.constant.ConstantDescs;\n@@ -265,3 +266,3 @@\n-     * the appropriate <i>special method name<\/i>, {@code <init>} or\n-     * {@code <clinit>}, as per Section {@jvms 3.9} of <cite>The Java Virtual\n-     * Machine Specification<\/cite>.\n+     * the appropriate <i>special method name<\/i>, {@value ConstantDescs#INIT_NAME}\n+     * or {@value ConstantDescs#CLASS_INIT_NAME}, as per Section {@jvms 3.9}\n+     * of <cite>The Java Virtual Machine Specification<\/cite>.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StackTraceElement.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -286,0 +286,27 @@\n+    \/**\n+     * The special name of instance initialization methods, {@value}. An instance\n+     * initialization method has this special name and is {@code void}.\n+     *\n+     * @jvms 2.9.1 Instance Initialization Methods\n+     * @since 21\n+     *\/\n+    public static final String INIT_NAME = \"<init>\";\n+\n+    \/**\n+     * The special name of class initialization methods, {@value}. A class\n+     * initialization method has this special name, {@link java.lang.reflect.AccessFlag#STATIC\n+     * ACC_STATIC} flag set, is {@link #MTD_void void} and takes no arguments.\n+     *\n+     * @jvms 2.9.2 Class Initialization Methods\n+     * @since 21\n+     *\/\n+    public static final String CLASS_INIT_NAME = \"<clinit>\";\n+\n+    \/**\n+     * Nominal descriptor representing the method descriptor {@code ()V},\n+     * taking no argument and returning {@code void}.\n+     *\n+     * @since 21\n+     *\/\n+    public static final MethodTypeDesc MTD_void = MethodTypeDesc.of(CD_void);\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/ConstantDescs.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    private static final Set<String> pointyNames = Set.of(\"<init>\", \"<clinit>\");\n+    private static final Set<String> pointyNames = Set.of(ConstantDescs.INIT_NAME, ConstantDescs.CLASS_INIT_NAME);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/ConstantUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-     * For constructors, returns the reserved name {@code \"<init>\"}.\n+     * For constructors, returns the reserved name {@value ConstantDescs#INIT_NAME}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/DirectMethodHandleDesc.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -163,1 +163,2 @@\n-     * This is {@code \"<init>\"} if the underlying member was a constructor,\n+     * This is {@value java.lang.constant.ConstantDescs#INIT_NAME}\n+     * if the underlying member was a constructor,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleInfo.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -715,1 +715,2 @@\n-     * with special names ({@code \"<init>\"} and {@code \"<clinit>\"}).\n+     * with special names ({@value ConstantDescs#INIT_NAME} and {@value\n+     * ConstantDescs#CLASS_INIT_NAME}).\n@@ -2771,1 +2772,1 @@\n-            String name = \"<init>\";\n+            String name = ConstantDescs.INIT_NAME;\n@@ -2967,1 +2968,2 @@\n-         * <em>(Note:  JVM internal methods named {@code \"<init>\"} are not visible to this API,\n+         * <em>(Note:  JVM internal methods named {@value ConstantDescs#INIT_NAME}\n+         * are not visible to this API,\n@@ -4005,1 +4007,1 @@\n-                assert(!method.getName().equals(\"<init>\"));  \/\/ not this code path\n+                assert(!method.getName().equals(ConstantDescs.INIT_NAME));  \/\/ not this code path\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}