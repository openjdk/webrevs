{"files":[{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Dialog;\n+import java.awt.Frame;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.WindowEvent;\n+import java.awt.event.WindowAdapter;\n+\n+\/*\n+ * @test\n+ * @bug 4336913\n+ * @summary On Windows, disable parent window controls while modal dialog is being created.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ClosingParentTest\n+ *\/\n+\n+public class ClosingParentTest {\n+\n+    static String instructions = \"\"\"\n+            When the test starts, you will see a Frame with a Button\n+            titled 'Show modal dialog with delay'. Press this button\n+            and before the modal Dialog is shown, try to close the\n+            Frame using X button or system menu for windowing systems\n+            which don't provide X button in Window decorations. The\n+            delay before Dialog showing is 5 seconds.\n+            If in test output you see message about WINDOW_CLOSING\n+            being dispatched, then test fails. If no such message\n+            is printed, the test passes.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ClosingParentTest\")\n+                .instructions(instructions)\n+                .testTimeOut(5)\n+                .rows(10)\n+                .columns(35)\n+                .testUI(ClosingParentTest::createGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createGUI() {\n+        Frame frame = new Frame(\"Main Frame\");\n+        Dialog dialog = new Dialog(frame, true);\n+\n+        Button button = new Button(\"Show modal dialog with delay\");\n+        button.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                try {\n+                    Thread.currentThread().sleep(5000);\n+                } catch (InterruptedException x) {\n+                    x.printStackTrace();\n+                }\n+\n+                dialog.setVisible(true);\n+            }\n+        });\n+        frame.add(button);\n+        frame.pack();\n+        frame.addWindowListener(new WindowAdapter() {\n+            public void windowClosing(WindowEvent e) {\n+                System.out.println(\"WINDOW_CLOSING dispatched on the frame\");\n+            }\n+        });\n+\n+        dialog.setSize(100, 100);\n+        dialog.addWindowListener(new WindowAdapter() {\n+            public void windowClosing(WindowEvent e) {\n+                dialog.dispose();\n+            }\n+        });\n+\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/ClosingParentTest.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.FileDialog;\n+import java.awt.Frame;\n+\n+\/*\n+ * @test\n+ * @bug 4177831\n+ * @summary solaris: default FileDialog title is not empty\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FileDialogEmptyTitleTest\n+ *\/\n+\n+public class FileDialogEmptyTitleTest {\n+    static String instructions = \"\"\"\n+            Test passes if title of file dialog is empty,\n+            otherwise test failed.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"FileDialogEmptyTitleTest\")\n+                .instructions(instructions)\n+                .testTimeOut(5)\n+                .rows(10)\n+                .columns(35)\n+                .testUI(FileDialogEmptyTitleTest::createGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static FileDialog createGUI() {\n+        Frame frame = new Frame(\"invisible dialog owner\");\n+        FileDialog fileDialog = new FileDialog(frame);\n+        return fileDialog;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/FileDialogEmptyTitleTest.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.FileDialog;\n+import java.awt.Frame;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 4859390\n+ * @requires (os.family == \"windows\")\n+ * @summary Verify that FileDialog matches the look\n+    of the native windows FileDialog\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FileDialogUIUpdate\n+ *\/\n+\n+public class FileDialogUIUpdate extends Frame {\n+    static String instructions = \"\"\"\n+            Click the button to show the FileDialog. Then open the Paint\n+            application (usually found in Program Files->Accessories).\n+            Select File->Open from Paint to display a native Open dialog.\n+            Compare the native dialog to the AWT FileDialog.\n+            Specifically, confirm that the Places Bar icons are along the left side (or\n+            not, if the native dialog doesn't have them), and that the\n+            dialogs are both resizable (or not).\n+            If the file dialogs both look the same press Pass.  If not,\n+            press Fail.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"FileDialogUIUpdate\")\n+                .instructions(instructions)\n+                .testTimeOut(5)\n+                .rows(12)\n+                .columns(35)\n+                .testUI(FileDialogUIUpdate::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public FileDialogUIUpdate() {\n+        final FileDialog fd = new FileDialog(new Frame(\"FileDialogUIUpdate frame\"),\n+                \"Open FileDialog\");\n+        Button showButton = new Button(\"Show FileDialog\");\n+        setLayout(new BorderLayout());\n+\n+        fd.setDirectory(\"c:\/\");\n+        showButton.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                fd.setVisible(true);\n+            }\n+        });\n+\n+        add(showButton);\n+        setSize(200, 200);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/FileDialogUIUpdate.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Dialog;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 4070085\n+ * @summary Java program locks up X server\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MenuAndModalDialogTest\n+ *\/\n+\n+public class MenuAndModalDialogTest {\n+    static Frame frame;\n+    static String instructions = \"\"\"\n+            1. Bring up the File Menu and leave it up.\n+            2. In a few seconds, the modal dialog will appear.\n+            3. Verify that your system does not lock up when you push the \"OK\" button.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame pf = PassFailJFrame.builder()\n+                .title(\"MenuAndModalDialogTest\")\n+                .instructions(instructions)\n+                .testTimeOut(5)\n+                .rows(10)\n+                .columns(35)\n+                .testUI(MenuAndModalDialogTest::createFrame)\n+                .build();\n+\n+        \/\/ Allow time to pop up the menu\n+        try {\n+            Thread.currentThread().sleep(5000);\n+        } catch (InterruptedException exception) {\n+        }\n+\n+        createDialog();\n+        pf.awaitAndCheck();\n+    }\n+\n+    public static Frame createFrame() {\n+        frame = new Frame(\"MenuAndModalDialogTest frame\");\n+\n+        MenuBar menuBar = new MenuBar();\n+        frame.setMenuBar(menuBar);\n+\n+        Menu file = new Menu(\"File\");\n+        menuBar.add(file);\n+\n+        MenuItem menuItem = new MenuItem(\"A Menu Entry\");\n+        file.add(menuItem);\n+\n+        frame.setSize(200, 200);\n+        frame.setLocationRelativeTo(null);\n+        return frame;\n+    }\n+\n+    public static void createDialog() {\n+        Dialog dialog = new Dialog(frame);\n+\n+        Button button = new Button(\"OK\");\n+        dialog.add(button);\n+        button.addActionListener(\n+                new ActionListener() {\n+                    public void actionPerformed(ActionEvent e) {\n+                        dialog.dispose();\n+                    }\n+                }\n+        );\n+\n+        dialog.setSize(200, 200);\n+        dialog.setModal(true);\n+        dialog.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/MenuAndModalDialogTest.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"}]}