{"files":[{"patch":"@@ -1,49 +0,0 @@\n-<html>\n-\n-<!--\n- Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<!--  \n-  @test\n-  @bug 6299866\n-  @summary Tests that no NPE is thrown when the tray icon is disposed from the\n-  handler of action event caused by clicking on this icon.\n-  @library ..\/..\/regtesthelpers\n-  @library \/test\/lib\n-  @build Sysout\n-  @build jdk.test.lib.Platform\n-  @author artem.ananiev: area=awt.tray\n-  @run applet\/manual=yesno DisposeInActionEventTest.html\n-  -->\n-<head>\n-<title> DisposeInActionEventTest <\/title>\n-<\/head>\n-<body>\n-\n-<h1>DisposeInActionEventTest<br>Bug ID: 6299866<\/h1>\n-\n-<p> See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"DisposeInActionEventTest.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/DisposeInActionEventTest\/DisposeInActionEventTest.html","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,16 +24,10 @@\n-\n-\/*\n-  test\n-  @bug 6299866\n-  @summary Tests that no NPE is thrown when the tray icon is disposed from the\n-  handler of action event caused by clicking on this icon.\n-  @library ..\/..\/regtesthelpers\n-  @build Sysout\n-  @author artem.ananiev: area=awt.tray\n-  @run applet\/manual=yesno DisposeInActionEventTest.html\n-*\/\n-\n-import java.applet.*;\n-\n-import java.awt.*;\n-import java.awt.image.*;\n+import java.awt.AWTException;\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import java.awt.SystemTray;\n+import java.awt.TrayIcon;\n+import java.awt.image.BufferedImage;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextArea;\n@@ -42,1 +36,0 @@\n-import test.java.awt.regtesthelpers.Sysout;\n@@ -44,2 +37,9 @@\n-public class DisposeInActionEventTest extends Applet {\n-    private boolean traySupported;\n+\/*\n+ * @test\n+ * @bug 6299866 8316931\n+ * @summary Tests that no NPE is thrown when the tray icon is disposed from the\n+ * handler of action event caused by clicking on this icon.\n+ * @library ..\/..\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame jtreg.SkippedException\n+ * @run main\/manual DisposeInActionEventTest\n+ *\/\n@@ -47,2 +47,4 @@\n-    private SystemTray systemTray;\n-    private TrayIcon trayIcon;\n+public class DisposeInActionEventTest {\n+    private static JTextArea textArea;\n+    private static SystemTray systemTray;\n+    private static TrayIcon trayIcon;\n@@ -50,2 +52,7 @@\n-    public void init() {\n-        this.setLayout(new BorderLayout());\n+    public static void main(String[] args) throws Exception {\n+        if (!SystemTray.isSupported()) {\n+            throw new jtreg.SkippedException(\"The test cannot be run because \" +\n+                    \"SystemTray is not supported.\");\n+        }\n+        String clickInstruction =\n+                (Platform.isOSX()) ? \"Right-click\" : \"Double click (left mouse button)\";\n@@ -53,13 +60,25 @@\n-        String[] instructions;\n-        traySupported = SystemTray.isSupported();\n-        if (!traySupported) {\n-            instructions = new String[]{\n-                    \"The test cannot be run because SystemTray is not supported.\",\n-                    \"Simply press PASS button.\"\n-            };\n-        } else {\n-            String clickInstruction;\n-            if (Platform.isOSX()) {\n-                clickInstruction = \"right\";\n-            } else {\n-                clickInstruction = \"left\";\n+        String instructions = \"When the test starts, it adds the icon to the tray area. If you\\n\" +\n+                       \"  don't see a tray icon, please, make sure that the tray area\\n\" +\n+                       \"  (also called Taskbar Status Area on MS Windows, Notification\\n\" +\n+                       \"  Area on Gnome or System Tray on KDE) is visible.\\n\\n\" +\n+                        clickInstruction + \" the tray icon to trigger the\\n\" +\n+                       \"  action event. Brief information about action events is printed\\n\" +\n+                       \"  in the frame. After each action event, the tray icon is removed from\\n\" +\n+                       \"  the tray and then added back in a second.\\n\\n\" +\n+                       \"The test checks if any exceptions are thrown when removing and\\n\" +\n+                       \"  re-adding the icon. If something is wrong, the test will automatically fail.\\n\" +\n+                       \"  Repeat clicks several times Then press PASS button.\";\n+\n+        try {\n+            PassFailJFrame.builder()\n+                    .title(\"DisposeInActionEventTest\")\n+                    .instructions(instructions)\n+                    .testTimeOut(10)\n+                    .rows(15)\n+                    .columns(45)\n+                    .testUI(DisposeInActionEventTest::showFrameAndIcon)\n+                    .build()\n+                    .awaitAndCheck();\n+        } finally {\n+            if (systemTray != null) {\n+                systemTray.remove(trayIcon);\n@@ -67,14 +86,0 @@\n-            instructions = new String[]{\n-                    \"When the test starts, it adds the icon to the tray aread. If you\",\n-                    \"  don't see a tray icon, please, make sure that the tray area\",\n-                    \"  (also called Taskbar Status Area on MS Windows, Notification\",\n-                    \"  Area on Gnome or System Tray on KDE) is visible.\",\n-                    \"Double-click with \" + clickInstruction + \" button on the tray icon to trigger the\",\n-                    \"  action event. Brief information about action events is printed\",\n-                    \"  below. After each action event the tray icon is removed from\",\n-                    \"  the tray and then added back in a second.\",\n-                    \"The test performs some automatic checks when removing the icon. If\",\n-                    \"  something is wrong the corresponding message is displayed below.\",\n-                    \"  Repeat double-clicks several times. If no 'Test FAILED' messages\",\n-                    \"  are printed, press PASS button else FAIL button.\"\n-            };\n@@ -82,1 +87,0 @@\n-        Sysout.createDialogWithInstructions(instructions);\n@@ -85,7 +89,3 @@\n-    @Override\n-    public void start() {\n-        setSize(200, 200);\n-        setVisible(true);\n-        validate();\n-\n-        if (!traySupported) return;\n+    private static JFrame showFrameAndIcon() {\n+        JFrame frame = new JFrame(\"Event Message Display\");\n+        frame.setLayout(new BorderLayout());\n@@ -93,1 +93,3 @@\n-        System.setProperty(\"sun.awt.exception.handler\", \"DisposeInActionEventTest$EDTExceptionHandler\");\n+        textArea = new JTextArea();\n+        frame.getContentPane().add(new JScrollPane(textArea));\n+        frame.setSize(400, 200);\n@@ -107,1 +109,1 @@\n-            Sysout.println(ev.toString());\n+            textArea.append(ev + \"\\n\");\n@@ -114,2 +116,2 @@\n-                    Sysout.println(e.toString());\n-                    Sysout.println(\"!!! The test coudn't be performed !!!\");\n+                    e.printStackTrace();\n+                    PassFailJFrame.forceFail(\"Exception caught: \" + e.getMessage());\n@@ -117,4 +119,2 @@\n-            }\n-            ).start();\n-        }\n-        );\n+            }).start();\n+        });\n@@ -125,2 +125,2 @@\n-            Sysout.println(e.toString());\n-            Sysout.println(\"!!! The test coudn't be performed !!!\");\n+            e.printStackTrace();\n+            PassFailJFrame.forceFail(\"Exception caught: \" + e.getMessage());\n@@ -128,0 +128,2 @@\n+\n+        return frame;\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/DisposeInActionEventTest\/DisposeInActionEventTest.java","additions":71,"deletions":69,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -24,9 +24,0 @@\n-\/*\n- * @test\n- * @bug 6384984 8004032\n- * @library ..\/..\/regtesthelpers \/test\/lib\n- * @build PassFailJFrame jtreg.SkippedException\n- * @summary TrayIcon try to dispay a tooltip when is not visible\n- * @run main\/manual ShowAfterDisposeTest\n-*\/\n-\n@@ -45,0 +36,8 @@\n+\/*\n+ * @test\n+ * @bug 6384984 8004032 8316931\n+ * @library ..\/..\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame jtreg.SkippedException\n+ * @summary TrayIcon try to dispay a tooltip when is not visible\n+ * @run main\/manual ShowAfterDisposeTest\n+ *\/\n@@ -46,0 +45,3 @@\n+    private static SystemTray tray;\n+    private static TrayIcon icon;\n+\n@@ -67,9 +69,15 @@\n-        PassFailJFrame.builder()\n-                .title(\"Test Instructions Frame\")\n-                .instructions(instructions)\n-                .testTimeOut(10)\n-                .rows(10)\n-                .columns(45)\n-                .testUI(ShowAfterDisposeTest::showFrameAndIcon)\n-                .build()\n-                .awaitAndCheck();\n+        try {\n+            PassFailJFrame.builder()\n+                    .title(\"Test Instructions Frame\")\n+                    .instructions(instructions)\n+                    .testTimeOut(10)\n+                    .rows(10)\n+                    .columns(45)\n+                    .testUI(ShowAfterDisposeTest::showFrameAndIcon)\n+                    .build()\n+                    .awaitAndCheck();\n+        } finally {\n+            if (tray != null) {\n+                tray.remove(icon);\n+            }\n+        }\n@@ -90,2 +98,2 @@\n-        final SystemTray tray = SystemTray.getSystemTray();\n-        final TrayIcon icon = new TrayIcon(img);\n+        tray = SystemTray.getSystemTray();\n+        icon = new TrayIcon(img);\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/ShowAfterDisposeTest\/ShowAfterDisposeTest.java","additions":28,"deletions":20,"binary":false,"changes":48,"status":"modified"}]}