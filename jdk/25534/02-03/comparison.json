{"files":[{"patch":"@@ -187,32 +187,21 @@\n-        SecureDirectoryStream<Path> stream =\n-            (SecureDirectoryStream<Path>)newDirectoryStream(aDir);\n-\n-        \/\/ Test setting permission on directory with no permissions\n-        setPosixFilePermissions(aDir, noperms);\n-        assertTrue(getPosixFilePermissions(aDir).equals(noperms));\n-        PosixFileAttributeView view = stream.getFileAttributeView(PosixFileAttributeView.class);\n-        view.setPermissions(permsDir);\n-        assertTrue(getPosixFilePermissions(aDir).equals(permsDir));\n-\n-        if (supportsSymbolicLinks) {\n-            \/\/ Create a file and a link to the file\n-            Path fileEntry = Path.of(\"file\");\n-            Path file = createFile(aDir.resolve(fileEntry));\n-            Set<PosixFilePermission> permsFile = getPosixFilePermissions(file);\n-            Path linkEntry = Path.of(\"link\");\n-            Path link = createSymbolicLink(aDir.resolve(linkEntry), fileEntry);\n-            Set<PosixFilePermission> permsLink = getPosixFilePermissions(link, NOFOLLOW_LINKS);\n-\n-            \/\/ Test following link to file\n-            view = stream.getFileAttributeView(link, PosixFileAttributeView.class);\n-            view.setPermissions(noperms);\n-            assertTrue(getPosixFilePermissions(file).equals(noperms));\n-            assertTrue(getPosixFilePermissions(link, NOFOLLOW_LINKS).equals(permsLink));\n-            view.setPermissions(permsFile);\n-            assertTrue(getPosixFilePermissions(file).equals(permsFile));\n-            assertTrue(getPosixFilePermissions(link, NOFOLLOW_LINKS).equals(permsLink));\n-\n-            \/\/ Symbolic link permissions do not apply on Linux\n-            if (!Platform.isLinux()) {\n-                \/\/ Test not following link to file\n-                view = stream.getFileAttributeView(link, PosixFileAttributeView.class, NOFOLLOW_LINKS);\n+        try (SecureDirectoryStream<Path> stream =\n+             (SecureDirectoryStream<Path>)newDirectoryStream(aDir);) {\n+\n+            \/\/ Test setting permission on directory with no permissions\n+            setPosixFilePermissions(aDir, noperms);\n+            assertTrue(getPosixFilePermissions(aDir).equals(noperms));\n+            PosixFileAttributeView view = stream.getFileAttributeView(PosixFileAttributeView.class);\n+            view.setPermissions(permsDir);\n+            assertTrue(getPosixFilePermissions(aDir).equals(permsDir));\n+\n+            if (supportsSymbolicLinks) {\n+                \/\/ Create a file and a link to the file\n+                Path fileEntry = Path.of(\"file\");\n+                Path file = createFile(aDir.resolve(fileEntry));\n+                Set<PosixFilePermission> permsFile = getPosixFilePermissions(file);\n+                Path linkEntry = Path.of(\"link\");\n+                Path link = createSymbolicLink(aDir.resolve(linkEntry), fileEntry);\n+                Set<PosixFilePermission> permsLink = getPosixFilePermissions(link, NOFOLLOW_LINKS);\n+\n+                \/\/ Test following link to file\n+                view = stream.getFileAttributeView(link, PosixFileAttributeView.class);\n@@ -220,3 +209,3 @@\n-                assertTrue(getPosixFilePermissions(file).equals(permsFile));\n-                assertTrue(getPosixFilePermissions(link, NOFOLLOW_LINKS).equals(noperms));\n-                view.setPermissions(permsLink);\n+                assertTrue(getPosixFilePermissions(file).equals(noperms));\n+                assertTrue(getPosixFilePermissions(link, NOFOLLOW_LINKS).equals(permsLink));\n+                view.setPermissions(permsFile);\n@@ -225,0 +214,15 @@\n+\n+                \/\/ Symbolic link permissions do not apply on Linux\n+                if (!Platform.isLinux()) {\n+                    \/\/ Test not following link to file\n+                    view = stream.getFileAttributeView(link, PosixFileAttributeView.class, NOFOLLOW_LINKS);\n+                    view.setPermissions(noperms);\n+                    assertTrue(getPosixFilePermissions(file).equals(permsFile));\n+                    assertTrue(getPosixFilePermissions(link, NOFOLLOW_LINKS).equals(noperms));\n+                    view.setPermissions(permsLink);\n+                    assertTrue(getPosixFilePermissions(file).equals(permsFile));\n+                    assertTrue(getPosixFilePermissions(link, NOFOLLOW_LINKS).equals(permsLink));\n+                }\n+\n+                delete(link);\n+                delete(file);\n@@ -227,2 +231,2 @@\n-            delete(link);\n-            delete(file);\n+            \/\/ clean-up\n+            delete(aDir);\n@@ -230,4 +234,0 @@\n-\n-        \/\/ clean-up\n-        stream.close();\n-        delete(aDir);\n","filename":"test\/jdk\/java\/nio\/file\/DirectoryStream\/SecureDS.java","additions":41,"deletions":41,"binary":false,"changes":82,"status":"modified"}]}