{"files":[{"patch":"@@ -4161,1 +4161,1 @@\n-  predicate(UseAVX >= 2 && Matcher::vector_element_basic_type(n) == T_BYTE);\n+  predicate(Matcher::vector_element_basic_type(n) == T_BYTE);\n@@ -4166,4 +4166,9 @@\n-    int vlen_enc = vector_length_encoding(this);\n-    if (vlen == 64 || VM_Version::supports_avx512vlbw()) { \/\/ AVX512VL for <512bit operands\n-      assert(VM_Version::supports_avx512bw(), \"required\"); \/\/ 512-bit byte vectors assume AVX512BW\n-      __ evpbroadcastb($dst$$XMMRegister, $src$$Register, vlen_enc);\n+    if (UseAVX >= 2) {\n+      int vlen_enc = vector_length_encoding(this);\n+      if (vlen == 64 || VM_Version::supports_avx512vlbw()) { \/\/ AVX512VL for <512bit operands\n+        assert(VM_Version::supports_avx512bw(), \"required\"); \/\/ 512-bit byte vectors assume AVX512BW\n+        __ evpbroadcastb($dst$$XMMRegister, $src$$Register, vlen_enc);\n+      } else {\n+        __ movdl($dst$$XMMRegister, $src$$Register);\n+        __ vpbroadcastb($dst$$XMMRegister, $dst$$XMMRegister, vlen_enc);\n+      }\n@@ -4171,0 +4176,1 @@\n+       assert(UseAVX < 2, \"\");\n@@ -4172,18 +4178,6 @@\n-      __ vpbroadcastb($dst$$XMMRegister, $dst$$XMMRegister, vlen_enc);\n-    }\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct ReplB_reg(vec dst, rRegI src) %{\n-  predicate(UseAVX < 2 && Matcher::vector_element_basic_type(n) == T_BYTE);\n-  match(Set dst (Replicate src));\n-  format %{ \"replicateB $dst,$src\" %}\n-  ins_encode %{\n-    uint vlen = Matcher::vector_length(this);\n-    __ movdl($dst$$XMMRegister, $src$$Register);\n-    __ punpcklbw($dst$$XMMRegister, $dst$$XMMRegister);\n-    __ pshuflw($dst$$XMMRegister, $dst$$XMMRegister, 0x00);\n-    if (vlen >= 16) {\n-      assert(vlen == 16, \"\");\n-      __ punpcklqdq($dst$$XMMRegister, $dst$$XMMRegister);\n+      __ punpcklbw($dst$$XMMRegister, $dst$$XMMRegister);\n+      __ pshuflw($dst$$XMMRegister, $dst$$XMMRegister, 0x00);\n+      if (vlen >= 16) {\n+        assert(vlen == 16, \"\");\n+        __ punpcklqdq($dst$$XMMRegister, $dst$$XMMRegister);\n+      }\n@@ -4209,1 +4203,1 @@\n-  predicate(UseAVX >= 2 && Matcher::vector_element_basic_type(n) == T_SHORT);\n+  predicate(Matcher::vector_element_basic_type(n) == T_SHORT);\n@@ -4215,3 +4209,8 @@\n-    if (vlen == 32 || VM_Version::supports_avx512vlbw()) { \/\/ AVX512VL for <512bit operands\n-      assert(VM_Version::supports_avx512bw(), \"required\"); \/\/ 512-bit short vectors assume AVX512BW\n-      __ evpbroadcastw($dst$$XMMRegister, $src$$Register, vlen_enc);\n+    if (UseAVX >= 2) {\n+      if (vlen == 32 || VM_Version::supports_avx512vlbw()) { \/\/ AVX512VL for <512bit operands\n+        assert(VM_Version::supports_avx512bw(), \"required\"); \/\/ 512-bit short vectors assume AVX512BW\n+        __ evpbroadcastw($dst$$XMMRegister, $src$$Register, vlen_enc);\n+      } else {\n+        __ movdl($dst$$XMMRegister, $src$$Register);\n+        __ vpbroadcastw($dst$$XMMRegister, $dst$$XMMRegister, vlen_enc);\n+      }\n@@ -4219,0 +4218,1 @@\n+      assert(UseAVX < 2, \"\");\n@@ -4220,18 +4220,5 @@\n-      __ vpbroadcastw($dst$$XMMRegister, $dst$$XMMRegister, vlen_enc);\n-    }\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct ReplS_reg(vec dst, rRegI src) %{\n-  predicate(UseAVX < 2 && Matcher::vector_element_basic_type(n) == T_SHORT);\n-  match(Set dst (Replicate src));\n-  format %{ \"replicateS $dst,$src\" %}\n-  ins_encode %{\n-    uint vlen = Matcher::vector_length(this);\n-    int vlen_enc = vector_length_encoding(this);\n-    __ movdl($dst$$XMMRegister, $src$$Register);\n-    __ pshuflw($dst$$XMMRegister, $dst$$XMMRegister, 0x00);\n-    if (vlen >= 8) {\n-      assert(vlen == 8, \"\");\n-      __ punpcklqdq($dst$$XMMRegister, $dst$$XMMRegister);\n+      __ pshuflw($dst$$XMMRegister, $dst$$XMMRegister, 0x00);\n+      if (vlen >= 8) {\n+        assert(vlen == 8, \"\");\n+        __ punpcklqdq($dst$$XMMRegister, $dst$$XMMRegister);\n+      }\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":32,"deletions":45,"binary":false,"changes":77,"status":"modified"}]}