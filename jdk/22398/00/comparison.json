{"files":[{"patch":"@@ -46,7 +46,0 @@\n-    final boolean checkSecurity(Object context, boolean quiet) {\n-        \/\/ No need to check security.  Applets and downloaded code can\n-        \/\/ only make byte array image once they already have a handle\n-        \/\/ on the image data anyway...\n-        return true;\n-    }\n-\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/ByteArrayImageSource.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -37,5 +37,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n-        if (security != null) {\n-            security.checkRead(filename);\n-        }\n@@ -45,6 +40,0 @@\n-    final boolean checkSecurity(Object context, boolean quiet) {\n-        \/\/ File based images only ever need to be checked statically\n-        \/\/ when the image is retrieved from the cache.\n-        return true;\n-    }\n-\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/FileImageSource.java","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -36,2 +36,0 @@\n-    Object securityContext;\n-    boolean secure;\n@@ -71,16 +69,0 @@\n-        \/\/ ImageReps do their own security at access time.\n-        if (ic instanceof ImageRepresentation) {\n-            ImageRepresentation ir = (ImageRepresentation) ic;\n-            if (ir.image.source != src) {\n-                throw new SecurityException(\"ImageRep added to wrong image source\");\n-            }\n-            secure = true;\n-        } else {\n-            @SuppressWarnings(\"removal\")\n-            SecurityManager security = System.getSecurityManager();\n-            if (security != null) {\n-                securityContext = security.getSecurityContext();\n-            } else {\n-                securityContext = null;\n-            }\n-        }\n@@ -92,1 +74,0 @@\n-                (securityContext != null ? \", \" + securityContext : \"\") +\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/ImageConsumerQueue.java","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -286,23 +286,17 @@\n-       try {\n-          if (threadGroup.getParent() != null) {\n-             \/\/ threadGroup is not the root, so we proceed\n-             fetcherThreadGroup = threadGroup;\n-          } else {\n-             \/\/ threadGroup is the root (\"system\") ThreadGroup.\n-             \/\/ We instead want to use its child: the \"main\"\n-             \/\/ ThreadGroup.  Thus, we start with the current\n-             \/\/ ThreadGroup, and go up the tree until\n-             \/\/ threadGroup.getParent().getParent() == null.\n-             threadGroup = Thread.currentThread().getThreadGroup();\n-             ThreadGroup parent = threadGroup.getParent();\n-             while ((parent != null)\n-                  && (parent.getParent() != null)) {\n-                  threadGroup = parent;\n-                  parent = threadGroup.getParent();\n-             }\n-             fetcherThreadGroup = threadGroup;\n-         }\n-       } catch (SecurityException e) {\n-         \/\/ Not allowed access to parent ThreadGroup -- just use\n-         \/\/ the AppContext's ThreadGroup\n-         fetcherThreadGroup = appContext.getThreadGroup();\n+       if (threadGroup.getParent() != null) {\n+           \/\/ threadGroup is not the root, so we proceed\n+           fetcherThreadGroup = threadGroup;\n+       } else {\n+           \/\/ threadGroup is the root (\"system\") ThreadGroup.\n+           \/\/ We instead want to use its child: the \"main\"\n+           \/\/ ThreadGroup.  Thus, we start with the current\n+           \/\/ ThreadGroup, and go up the tree until\n+           \/\/ threadGroup.getParent().getParent() == null.\n+           threadGroup = Thread.currentThread().getThreadGroup();\n+           ThreadGroup parent = threadGroup.getParent();\n+           while ((parent != null)\n+                && (parent.getParent() != null)) {\n+                threadGroup = parent;\n+                parent = threadGroup.getParent();\n+           }\n+           fetcherThreadGroup = threadGroup;\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/ImageFetcher.java","additions":17,"deletions":23,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -104,3 +104,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -131,3 +128,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -193,3 +187,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -201,3 +192,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -326,3 +314,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -348,4 +333,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n-\n@@ -545,4 +526,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n-\n@@ -680,3 +657,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -752,3 +726,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -773,4 +744,0 @@\n-\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -788,3 +755,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -819,3 +783,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -852,3 +813,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -888,3 +846,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/ImageRepresentation.java","additions":0,"deletions":45,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -43,2 +43,0 @@\n-    abstract boolean checkSecurity(Object context, boolean quiet);\n-\n@@ -86,1 +84,0 @@\n-        checkSecurity(null, false);\n@@ -102,19 +99,0 @@\n-            if (!cq.secure) {\n-                Object context = null;\n-                @SuppressWarnings(\"removal\")\n-                SecurityManager security = System.getSecurityManager();\n-                if (security != null) {\n-                    context = security.getSecurityContext();\n-                }\n-                if (cq.securityContext == null) {\n-                    cq.securityContext = context;\n-                } else if (!cq.securityContext.equals(context)) {\n-                    \/\/ If there are two different security contexts that both\n-                    \/\/ have a handle on the same ImageConsumer, then there has\n-                    \/\/ been a security breach and whether or not they trade\n-                    \/\/ image data is small fish compared to what they could be\n-                    \/\/ trading.  Throw a Security exception anyway...\n-                    errorConsumer(cq, false);\n-                    throw new SecurityException(\"Applets are trading image data!\");\n-                }\n-            }\n@@ -306,7 +284,0 @@\n-            if (cq.interested) {\n-                \/\/ Now that there is a decoder, security may have changed\n-                \/\/ so reverify it here, just in case.\n-                if (!checkSecurity(cq.securityContext, true)) {\n-                    errorConsumer(cq, false);\n-                }\n-            }\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/InputStreamImageSource.java","additions":0,"deletions":29,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -74,3 +74,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -91,3 +88,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -106,3 +100,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -123,3 +114,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -138,3 +126,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -165,3 +150,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -182,3 +164,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -189,3 +168,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -202,3 +178,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -276,3 +249,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n@@ -300,3 +270,0 @@\n-        if (src != null) {\n-            src.checkSecurity(null, false);\n-        }\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/ToolkitImage.java","additions":0,"deletions":33,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -58,24 +58,0 @@\n-    final boolean checkSecurity(Object context, boolean quiet) {\n-        \/\/ If actualHost is not null, then the host\/port parameters that\n-        \/\/ the image was actually fetched from were different than the\n-        \/\/ host\/port parameters the original URL specified for at least\n-        \/\/ one of the download attempts.  The original URL security was\n-        \/\/ checked when the applet got a handle to the image, so we only\n-        \/\/ need to check for the real host\/port.\n-        if (actualHost != null) {\n-            try {\n-                @SuppressWarnings(\"removal\")\n-                SecurityManager security = System.getSecurityManager();\n-                if (security != null) {\n-                    security.checkConnect(actualHost, actualPort, context);\n-                }\n-            } catch (SecurityException e) {\n-                if (!quiet) {\n-                    throw e;\n-                }\n-                return false;\n-            }\n-        }\n-        return true;\n-    }\n-\n@@ -109,0 +85,1 @@\n+                \/\/ This is not directly related to SecurityManager so keep it.\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/URLImageSource.java","additions":1,"deletions":24,"binary":false,"changes":25,"status":"modified"}]}