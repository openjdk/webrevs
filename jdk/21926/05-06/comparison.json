{"files":[{"patch":"@@ -89,1 +89,1 @@\n-  NOT_PRODUCT(TraceMemPointer _mptrace; )\n+  NOT_PRODUCT(TraceMemPointer _mptrace;)\n@@ -190,1 +190,1 @@\n-  \/\/ memops must be acheived in the pre-loop, via the exit check in the pre-loop.\n+  \/\/ memops must be achieved in the pre-loop, via the exit check in the pre-loop.\n@@ -701,1 +701,1 @@\n-\/\/ VPointer wraps the MemPointer to the use in a loop:\n+\/\/ VPointer wraps the MemPointer for the use in a loop:\n@@ -722,1 +722,1 @@\n-\/\/       a summand where its variable it main-loop variant.\n+\/\/       a summand where its variable is main-loop variant.\n@@ -804,3 +804,3 @@\n-  const MemPointer& mem_pointer() const { assert(_is_valid, \"\"); return _mem_pointer; }\n-  jint size()                     const { assert(_is_valid, \"\"); return mem_pointer().size(); }\n-  jint iv_scale()                 const { assert(_is_valid, \"\"); return _iv_scale; }\n+  const MemPointer& mem_pointer() const { assert(_is_valid, \"must be valid\"); return _mem_pointer; }\n+  jint size()                     const { assert(_is_valid, \"must be valid\"); return mem_pointer().size(); }\n+  jint iv_scale()                 const { assert(_is_valid, \"must be valid\"); return _iv_scale; }\n@@ -921,1 +921,1 @@\n-    \/\/ In the pointer analysis, and especially the AlignVector, analysis we assume that\n+    \/\/ In the pointer analysis, and especially the AlignVector analysis, we assume that\n","filename":"src\/hotspot\/share\/opto\/vectorization.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}