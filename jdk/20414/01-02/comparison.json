{"files":[{"patch":"@@ -49,0 +49,2 @@\n+import jdk.internal.access.SharedSecrets;\n+\n@@ -697,0 +699,1 @@\n+            String keystorePath = null;\n@@ -701,0 +704,13 @@\n+            if (debug != null) {\n+                if (stream instanceof FileInputStream) {\n+                    keystorePath = SharedSecrets\n+                                    .getJavaIOFileInputStreamAccess()\n+                                    .getPath((FileInputStream) stream);\n+                    if (keystorePath != null) {\n+                        debug.println(\"JceKeyStore: Loading \\\"\" + keystorePath.substring(\n+                            keystorePath.lastIndexOf(File.separator) + 1)\n+                            + \"\\\" keystore\");\n+                    }\n+                }\n+            }\n+\n@@ -867,0 +883,5 @@\n+                    if (keystorePath != null) {\n+                        debug.println(\"JceKeyStore: Loaded \\\"\" + keystorePath.substring(\n+                            keystorePath.lastIndexOf(File.separator) + 1)\n+                            + \"\\\" keystore\");\n+                    }\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/JceKeyStore.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -41,0 +41,3 @@\n+import jdk.internal.access.JavaSecurityKeyStoreAccess;\n+import jdk.internal.access.SharedSecrets;\n+\n@@ -213,0 +216,3 @@\n+    \/\/The keystore full path\n+    private static String keystorePath;\n+\n@@ -805,0 +811,10 @@\n+    \/\/ Set up JavaIOFileInputStreamAccess in SharedSecrets\n+    static {\n+        SharedSecrets.setJavaSecurityKeyStoreAccess(\n+                new JavaSecurityKeyStoreAccess() {\n+                    public String getPath(KeyStore ks) {\n+                        return keystorePath;\n+                    }\n+                }\n+        );\n+    }\n@@ -1499,0 +1515,5 @@\n+        if (stream instanceof FileInputStream) {\n+            keystorePath = SharedSecrets\n+                    .getJavaIOFileInputStreamAccess()\n+                    .getPath((FileInputStream) stream);\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyStore.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.io.File;\n@@ -32,0 +33,1 @@\n+import jdk.internal.access.SharedSecrets;\n@@ -33,0 +35,1 @@\n+import sun.security.ssl.SSLLogger;\n@@ -278,0 +281,11 @@\n+        if (ks != null && SSLLogger.isOn && SSLLogger.isOn(\"trustmanager\")) {\n+            String keystorePath = SharedSecrets\n+                    .getJavaSecurityKeyStoreAccess()\n+                    .getPath(ks);\n+            if (keystorePath != null) {\n+                SSLLogger.fine(provider.getName() + \": Loaded \\\"\" + keystorePath\n+                        .substring(keystorePath\n+                                .lastIndexOf(File.separator) + 1)\n+                        + \"\\\" keystore in \" + ks.getType() + \" format\");\n+            }\n+        }\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/TrustManagerFactory.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import java.io.FileInputStream;\n+import java.security.KeyStore;\n@@ -29,2 +29,2 @@\n-public interface JavaIOFileInputStreamAccess {\n-    public String getPath(FileInputStream fis);\n+public interface JavaSecurityKeyStoreAccess {\n+    public String getPath(KeyStore fis);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaSecurityKeyStoreAccess.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaIOFileInputStreamAccess.java","status":"copied"},{"patch":"@@ -33,0 +33,1 @@\n+import java.security.KeyStore;\n@@ -90,0 +91,1 @@\n+    private static JavaSecurityKeyStoreAccess javaSecurityKeyStoreAccess;\n@@ -365,0 +367,13 @@\n+    public static void setJavaSecurityKeyStoreAccess(JavaSecurityKeyStoreAccess jsks) {\n+        javaSecurityKeyStoreAccess = jsks;\n+    }\n+\n+    public static JavaSecurityKeyStoreAccess getJavaSecurityKeyStoreAccess() {\n+        var access = javaSecurityKeyStoreAccess;\n+        if (access == null) {\n+            ensureClassInitialized(KeyStore.class);\n+            access = javaSecurityKeyStoreAccess;\n+        }\n+        return access;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/SharedSecrets.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-\n+import jdk.internal.access.SharedSecrets;\n@@ -1961,0 +1961,1 @@\n+        String keystorePath = null;\n@@ -1965,0 +1966,12 @@\n+        if (debug != null) {\n+            if (stream instanceof FileInputStream) {\n+                keystorePath = SharedSecrets\n+                                .getJavaIOFileInputStreamAccess()\n+                                .getPath((FileInputStream) stream);\n+                if (keystorePath != null) {\n+                    debug.println(\"PKCS12KeyStore: Loading \\\"\" + keystorePath.substring(\n+                        keystorePath.lastIndexOf(File.separator) + 1)\n+                        + \"\\\" keystore\");\n+                }\n+            }\n+        }\n@@ -2226,0 +2239,5 @@\n+            if (keystorePath != null) {\n+                    debug.println(\"PKCS12KeyStore: Loaded \\\"\" + keystorePath.substring(\n+                        keystorePath.lastIndexOf(File.separator) + 1)\n+                        + \"\\\" keystore\");\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/PKCS12KeyStore.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+import jdk.internal.access.SharedSecrets;\n@@ -661,0 +662,1 @@\n+            String keystorePath = null;\n@@ -672,0 +674,12 @@\n+            if (debug != null) {\n+                if (stream instanceof FileInputStream) {\n+                    keystorePath = SharedSecrets\n+                                    .getJavaIOFileInputStreamAccess()\n+                                    .getPath((FileInputStream) stream);\n+                    if (keystorePath != null) {\n+                        debug.println(\"JavaKeyStore: Loading \\\"\" + keystorePath.substring(\n+                            keystorePath.lastIndexOf(File.separator) + 1)\n+                            + \"\\\" keystore\");\n+                    }\n+                }\n+            }\n@@ -789,0 +803,5 @@\n+                if (keystorePath != null) {\n+                        debug.println(\"JavaKeyStore: Loaded \\\"\" + keystorePath.substring(\n+                            keystorePath.lastIndexOf(File.separator) + 1)\n+                            + \"\\\" keystore\");\n+                }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/JavaKeyStore.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -390,0 +390,4 @@\n+                    if (SSLLogger.isOn && SSLLogger.isOn(\"trustmanager\")) {\n+                        SSLLogger.fine(\n+                                \"Loaded keystore: \" + descriptor.storeName);\n+                    }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/TrustStoreManager.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,3 +40,0 @@\n-\n-import jdk.internal.access.SharedSecrets;\n-\n@@ -291,11 +288,0 @@\n-                if (stream instanceof FileInputStream) {\n-                    String keystorePath = SharedSecrets\n-                                    .getJavaIOFileInputStreamAccess()\n-                                    .getPath((FileInputStream) stream);\n-                    if (keystorePath != null) {\n-                        debug.println(\"Loaded \\\"\" + keystorePath.substring(\n-                            keystorePath.lastIndexOf(File.separator) + 1)\n-                            + \"\\\" keystore in \" + type + \" format\");\n-                        return;\n-                    }\n-                }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KeyStoreDelegator.java","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-                            \" -Djava.security.debug=keystore\");\n+                            \" -Djavax.net.debug=trustmanager\");\n@@ -80,1 +80,1 @@\n-            output.shouldContain(\"Loaded \\\"keystore\\\" keystore in PKCS12 format\");\n+            output.shouldContain(\"Loaded \\\"keystore\\\" keystore in pkcs12 format\");\n","filename":"test\/jdk\/java\/security\/KeyStore\/LogKeyStorePathVerifier.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}