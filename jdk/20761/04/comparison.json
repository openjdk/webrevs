{"files":[{"patch":"@@ -618,26 +618,4 @@\n-            if (value instanceof Integer iVal)\n-                return switch (iVal) {\n-                    case -1 -> iconst_m1();\n-                    case 0 -> iconst_0();\n-                    case 1 -> iconst_1();\n-                    case 2 -> iconst_2();\n-                    case 3 -> iconst_3();\n-                    case 4 -> iconst_4();\n-                    case 5 -> iconst_5();\n-                    default -> (iVal >= Byte.MIN_VALUE && iVal <= Byte.MAX_VALUE) ? bipush(iVal)\n-                            : (iVal >= Short.MIN_VALUE && iVal <= Short.MAX_VALUE) ? sipush(iVal)\n-                            : ldc(constantPool().intEntry(iVal));\n-                };\n-            if (value instanceof Long lVal)\n-                return lVal == 0L ? lconst_0()\n-                        : lVal == 1L ? lconst_1()\n-                        : ldc(constantPool().longEntry(lVal));\n-            if (value instanceof Float fVal)\n-                return Float.floatToRawIntBits(fVal) == 0 ? fconst_0()\n-                        : fVal == 1.0f ? fconst_1()\n-                        : fVal == 2.0f ? fconst_2()\n-                        : ldc(constantPool().floatEntry(fVal));\n-            if (value instanceof Double dVal)\n-                return Double.doubleToRawLongBits(dVal) == 0L ? dconst_0()\n-                        : dVal == 1.0d ? dconst_1()\n-                        : ldc(constantPool().doubleEntry(dVal));\n+            if (value instanceof Integer) return loadConstant((int)    value);\n+            if (value instanceof Long   ) return loadConstant((long)   value);\n+            if (value instanceof Float  ) return loadConstant((float)  value);\n+            if (value instanceof Double ) return loadConstant((double) value);\n@@ -648,0 +626,59 @@\n+\n+    \/**\n+     * Generate an instruction pushing a constant int value onto the operand stack.\n+     * @param value the int value\n+     * @return this builder\n+     * @since 24\n+     *\/\n+    default CodeBuilder loadConstant(int value) {\n+        return switch (value) {\n+            case -1 -> iconst_m1();\n+            case  0 -> iconst_0();\n+            case  1 -> iconst_1();\n+            case  2 -> iconst_2();\n+            case  3 -> iconst_3();\n+            case  4 -> iconst_4();\n+            case  5 -> iconst_5();\n+            default -> (value >= Byte.MIN_VALUE  && value <= Byte.MAX_VALUE ) ? bipush(value)\n+                     : (value >= Short.MIN_VALUE && value <= Short.MAX_VALUE) ? sipush(value)\n+                     : ldc(constantPool().intEntry(value));\n+        };\n+    }\n+\n+    \/**\n+     * Generate an instruction pushing a constant long value onto the operand stack.\n+     * @param value the long value\n+     * @return this builder\n+     * @since 24\n+     *\/\n+    default CodeBuilder loadConstant(long value) {\n+        return value == 0l ? lconst_0()\n+             : value == 1l ? lconst_1()\n+             : ldc(constantPool().longEntry(value));\n+    }\n+\n+    \/**\n+     * Generate an instruction pushing a constant float value onto the operand stack.\n+     * @param value the float value\n+     * @return this builder\n+     * @since 24\n+     *\/\n+    default CodeBuilder loadConstant(float value) {\n+        return Float.floatToRawIntBits(value) == 0 ? fconst_0()\n+             : value == 1.0f                       ? fconst_1()\n+             : value == 2.0f                       ? fconst_2()\n+             : ldc(constantPool().floatEntry(value));\n+    }\n+\n+    \/**\n+     * Generate an instruction pushing a constant double value onto the operand stack.\n+     * @param value the double value\n+     * @return this builder\n+     * @since 24\n+     *\/\n+    default CodeBuilder loadConstant(double value) {\n+        return Double.doubleToRawLongBits(value) == 0l ? dconst_0()\n+             : value == 1.0d                           ? dconst_1()\n+             : ldc(constantPool().doubleEntry(value));\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/CodeBuilder.java","additions":63,"deletions":26,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -1649,1 +1649,1 @@\n-                    cob.loadConstant(os.toString());\n+                    cob.ldc(os.toString());\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}