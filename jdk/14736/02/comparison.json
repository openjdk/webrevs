{"files":[{"patch":"@@ -27,1 +27,0 @@\n-import java.nio.ByteBuffer;\n@@ -195,5 +194,0 @@\n-    \/**\n-     * {@return a {@link java.nio.ByteBuffer ByteBuffer} view of the bytes in the buffer}\n-     *\/\n-    ByteBuffer asByteBuffer();\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/BufWriter.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -174,1 +174,0 @@\n-    @Override\n@@ -176,1 +175,1 @@\n-        return ByteBuffer.wrap(elems, 0, offset);\n+        return ByteBuffer.wrap(elems, 0, offset).slice();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufWriterImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-                dcb.bytecodesBufWriter.asByteBuffer().slice(0, dcb.bytecodesBufWriter.size()),\n+                ((BufWriterImpl) dcb.bytecodesBufWriter).asByteBuffer(),\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackCounter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-                dcb.bytecodesBufWriter.asByteBuffer().slice(0, dcb.bytecodesBufWriter.size()),\n+                ((BufWriterImpl) dcb.bytecodesBufWriter).asByteBuffer(),\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}