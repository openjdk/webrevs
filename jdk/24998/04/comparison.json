{"files":[{"patch":"@@ -1609,4 +1609,2 @@\n-  char* rfilename = NEW_RESOURCE_ARRAY(char, strlen(filename) + 1);\n-  char* robjectname = NEW_RESOURCE_ARRAY(char, strlen(objectname) + 1);\n-  strcpy(rfilename, filename);\n-  strcpy(robjectname, objectname);\n+  char* rfilename = ResourceArea::strdup(filename);\n+  char* robjectname = ResourceArea::strdup(objectname);\n","filename":"src\/hotspot\/os\/windows\/perfMemory_windows.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1513,2 +1513,1 @@\n-  char* orig_copy = NEW_RESOURCE_ARRAY_IN_THREAD(thread, char, strlen(orig)+1);\n-  strcpy(orig_copy, orig);\n+  char* orig_copy = ResourceArea::strdup(thread, orig);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -642,2 +642,1 @@\n-    char* p = resource_allocate_bytes(strlen(prop_value) + 1);\n-    strcpy(p, prop_value);\n+    char* p = ResourceArea::strdup(prop_value);\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -212,0 +212,7 @@\n+  char* strdup(const char* s) {\n+    const size_t sz = strlen(s) + 1;\n+    char* ptr = (char*)Amalloc(sz);\n+    memcpy(ptr, s, sz);\n+    return ptr;\n+  }\n+\n","filename":"src\/hotspot\/share\/memory\/arena.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -146,0 +146,8 @@\n+\n+  static char* strdup(const char* src) {\n+    return static_cast<Arena*>(Thread::current()->resource_area())->strdup(src);\n+  }\n+\n+  static char* strdup(Thread* thread, const char* src) {\n+    return static_cast<Arena*>(thread->resource_area())->strdup(src);\n+  }\n","filename":"src\/hotspot\/share\/memory\/resourceArea.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -471,2 +471,1 @@\n-      char* prefix_copy = NEW_RESOURCE_ARRAY(char, strlen(prefix)+1);\n-      strcpy(prefix_copy, prefix);\n+      char* prefix_copy = ResourceArea::strdup(prefix);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2712,2 +2712,1 @@\n-    char* str = NEW_RESOURCE_ARRAY(char, strlen(error())+1);\n-    strcpy(str, error());\n+    char* str = ResourceArea::strdup(error());\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -384,0 +384,10 @@\n+\n+TEST_VM(Arena, string_duplicate)\n+{\n+  char testString[] = \"this is a test string\";\n+  Arena ar(mtTest);\n+  auto copy = ar.strdup(&testString[0]);\n+  int result = strcmp(testString, copy);\n+  ASSERT_TRUE(0 == result);\n+  ASSERT_NE(copy, &testString[0]);\n+}\n","filename":"test\/hotspot\/gtest\/memory\/test_arena.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}