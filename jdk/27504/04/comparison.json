{"files":[{"patch":"@@ -498,0 +498,4 @@\n+  if (JvmtiEventController::is_execution_finished()) {\n+    now_enabled &= VM_DEATH_BIT;\n+  }\n+\n@@ -540,0 +544,4 @@\n+  if (JvmtiEventController::is_execution_finished()) {\n+    now_enabled &= VM_DEATH_BIT;\n+  }\n+\n@@ -1050,1 +1058,1 @@\n-  \/\/ events are disabled (phase has changed)\n+  \/\/ events are disabled, see JvmtiEventController::_execution_finished\n@@ -1062,0 +1070,3 @@\n+volatile bool JvmtiEventController::_execution_finished = false;\n+volatile int  JvmtiEventController::_in_callback_count = 0;\n+\n@@ -1210,0 +1221,2 @@\n+  \/\/ No new event callbacks except vm_death can be called after this point.\n+  AtomicAccess::store(&_execution_finished, true);\n@@ -1214,1 +1227,14 @@\n-}\n+\n+  \/\/ Some events might be still in callback for daemons and VM internal threads.\n+  const double start = os::elapsedTime();\n+  const double max_wait_time = 60;\n+  \/\/ The first time we see the callback count reaches zero we know all actual\n+  \/\/ callbacks are complete. The count could rise again, but those \"callbacks\"\n+  \/\/ will immediately see `execution_finished()` and return (dropping the count).\n+  while (in_callback_count() > 0) {\n+    os::naked_short_sleep(100);\n+    if (os::elapsedTime() - start > max_wait_time) {\n+      break;\n+    }\n+  }\n+}\n\\ No newline at end of file\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":28,"deletions":2,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -200,0 +200,5 @@\n+  \/\/ These fields are used to synchronize stop posting events and\n+  \/\/ wait until already executing callbacks are finished.\n+  volatile static bool  _execution_finished;\n+  volatile static int   _in_callback_count;\n+\n@@ -248,0 +253,4 @@\n+  static bool is_execution_finished();\n+  static void inc_in_callback_count();\n+  static void dec_in_callback_count();\n+  static int in_callback_count();\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -111,0 +111,18 @@\n+inline bool JvmtiEventController::is_execution_finished() {\n+  return AtomicAccess::load(&_execution_finished);\n+}\n+\n+inline void JvmtiEventController::inc_in_callback_count() {\n+  AtomicAccess::inc(&_in_callback_count);\n+}\n+\n+inline void JvmtiEventController::dec_in_callback_count() {\n+  AtomicAccess::dec(&_in_callback_count);\n+}\n+\n+inline int JvmtiEventController::in_callback_count() {\n+  int result = AtomicAccess::load(&_in_callback_count);\n+  assert(result >= 0, \"Should be positive\");\n+  return result;\n+}\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.inline.hpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -100,1 +100,6 @@\n-    _hm(thread)  {};\n+    _hm(thread) {\n+    JvmtiEventController::inc_in_callback_count();\n+  };\n+  ~JvmtiJavaThreadEventTransition() {\n+    JvmtiEventController::dec_in_callback_count();\n+  }\n@@ -114,0 +119,1 @@\n+    JvmtiEventController::inc_in_callback_count();\n@@ -128,1 +134,1 @@\n-    if (_jthread != nullptr)\n+    if (_jthread != nullptr) {\n@@ -130,0 +136,2 @@\n+    }\n+    JvmtiEventController::dec_in_callback_count();\n@@ -133,0 +141,13 @@\n+\/\/ The JVMTI_...__BLOCK are used to ensure that vm_death is the last posted event.\n+\/\/ The callbacks are not executed after _execution_finished is set to true\n+\/\/ and the _in_callback_count contains the number of callbacks still in progress.\n+#define JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread) \\\n+  JvmtiJavaThreadEventTransition jet(thread); \\\n+  if (JvmtiEventController::is_execution_finished()) {\\\n+    return; \\\n+  }\n+#define JVMTI_THREAD_EVENT_CALLBACK_BLOCK(thread) \\\n+  JvmtiThreadEventTransition jet(thread); \\\n+  if (JvmtiEventController::is_execution_finished()) { \\\n+    return; \\\n+  }\n@@ -665,1 +686,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -694,1 +715,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -744,1 +765,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -772,0 +793,5 @@\n+  \/\/ It is needed to disable event generation before setting DEAD phase and wait\n+  \/\/ until already executing events are finished.\n+  \/\/ The VM_DEATH should be the last posted event.\n+  JvmtiEventController::vm_death();\n+\n@@ -779,0 +805,1 @@\n+      \/\/ JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK must not be used here\n@@ -788,1 +815,0 @@\n-  JvmtiEventController::vm_death();\n@@ -970,1 +996,1 @@\n-    JvmtiJavaThreadEventTransition jet(_thread);\n+    JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(_thread)\n@@ -1180,1 +1206,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1222,1 +1248,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1363,1 +1389,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1404,1 +1430,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1447,1 +1473,1 @@\n-        JvmtiJavaThreadEventTransition jet(thread);\n+        JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1493,1 +1519,1 @@\n-        JvmtiJavaThreadEventTransition jet(thread);\n+        JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1541,1 +1567,1 @@\n-        JvmtiJavaThreadEventTransition jet(thread);\n+        JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1571,1 +1597,1 @@\n-        JvmtiJavaThreadEventTransition jet(thread);\n+        JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1607,1 +1633,1 @@\n-        JvmtiJavaThreadEventTransition jet(thread);\n+        JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1642,1 +1668,1 @@\n-        JvmtiJavaThreadEventTransition jet(thread);\n+        JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1677,1 +1703,1 @@\n-        JvmtiJavaThreadEventTransition jet(thread);\n+        JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1790,1 +1816,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1830,1 +1856,1 @@\n-        JvmtiJavaThreadEventTransition jet(thread);\n+        JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1917,1 +1943,1 @@\n-        JvmtiJavaThreadEventTransition jet(thread);\n+        JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1944,1 +1970,1 @@\n-          JvmtiJavaThreadEventTransition jet(thread);\n+          JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -1992,1 +2018,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2080,1 +2106,1 @@\n-        JvmtiJavaThreadEventTransition jet(thread);\n+        JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2155,1 +2181,1 @@\n-          JvmtiJavaThreadEventTransition jet(thread);\n+          JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2241,1 +2267,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2399,1 +2425,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2431,1 +2457,1 @@\n-        JvmtiJavaThreadEventTransition jet(thread);\n+        JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2528,1 +2554,1 @@\n-  JvmtiJavaThreadEventTransition jet(thread);\n+  JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2555,1 +2581,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2597,1 +2623,1 @@\n-    JvmtiJavaThreadEventTransition jet(thread);\n+    JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2681,1 +2707,1 @@\n-      JvmtiThreadEventTransition jet(thread);\n+      JVMTI_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2702,1 +2728,1 @@\n-      JvmtiThreadEventTransition jet(thread);\n+      JVMTI_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2723,1 +2749,1 @@\n-     JvmtiThreadEventTransition jet(thread);\n+     JVMTI_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2757,1 +2783,1 @@\n-      JvmtiThreadEventTransition jet(thread);\n+      JVMTI_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2791,1 +2817,1 @@\n-      JvmtiThreadEventTransition jet(thread);\n+      JVMTI_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2824,1 +2850,1 @@\n-      JvmtiThreadEventTransition jet(thread);\n+      JVMTI_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2858,1 +2884,1 @@\n-      JvmtiThreadEventTransition jet(thread);\n+      JVMTI_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2901,1 +2927,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n@@ -2939,1 +2965,1 @@\n-      JvmtiJavaThreadEventTransition jet(thread);\n+      JVMTI_JAVA_THREAD_EVENT_CALLBACK_BLOCK(thread)\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":66,"deletions":40,"binary":false,"changes":106,"status":"modified"}]}