{"files":[{"patch":"@@ -788,1 +788,1 @@\n-java\/awt\/dnd\/DnDFileGroupDescriptor\/DnDFileGroupDescriptor.html 8080185 macosx-all,linux-all\n+java\/awt\/dnd\/DnDFileGroupDescriptor\/DnDFileGroupDescriptor.java 8080185 macosx-all,linux-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,43 +0,0 @@\n-<!--\n- Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--\n-  @test\n-  @bug 6242241\n-  @summary Tests basic DnD functionality in an applet\n-  @author Your Name: Alexey Utkin area=dnd\n-  @run applet\/manual=yesno DnDFileGroupDescriptor.html\n-  -->\n-<head>\n-<title> DnDToWordpadTest <\/title>\n-<\/head>\n-<body>\n-\n-<h1>DnDFileGroupDescriptor<br>Bug ID: 6242241<\/h1>\n-\n-<p> See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"DnDFileGroupDescriptor.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/dnd\/DnDFileGroupDescriptor\/DnDFileGroupDescriptor.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -1,23 +0,0 @@\n- \/*\n-  * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n-  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-  *\n-  * This code is free software; you can redistribute it and\/or modify it\n-  * under the terms of the GNU General Public License version 2 only, as\n-  * published by the Free Software Foundation.\n-  *\n-  * This code is distributed in the hope that it will be useful, but WITHOUT\n-  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-  * version 2 for more details (a copy is included in the LICENSE file that\n-  * accompanied this code).\n-  *\n-  * You should have received a copy of the GNU General Public License version\n-  * 2 along with this work; if not, write to the Free Software Foundation,\n-  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-  *\n-  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-  * or visit www.oracle.com if you need additional information or have any\n-  * questions.\n-  *\/\n-\n@@ -25,14 +2,30 @@\n-  test\n-  @bug 6242241\n-  @summary Tests basic DnD functionality in an applet\n-  @requires (os.family == \"windows\")\n-  @author Your Name: Alexey Utkin area=dnd\n-  @run applet\/manual=yesno DnDFileGroupDescriptor.html\n-*\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n-\n-public class DnDFileGroupDescriptor extends Applet {\n-    public void init() {\n-        setLayout(new BorderLayout());\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+\n+import sun.awt.OSInfo;\n+import jtreg.SkippedException;\n@@ -40,15 +33,40 @@\n-        String[] instructions = {\n-         \"The applet window contains a red field.\",\n-         \"1. Start MS Outlook program. Find and open \",\n-         \"   the mail form with attachments.\",\n-         \"2. Select attachments from the mail and drag into a red field of applet.\",\n-         \"   When the mouse enters the field during the drag, the application \",\n-         \"   should change the cursor form to OLE-copy and field color to yellow.\",\n-         \"3. Release the mouse button (drop attachments) over the field.\",\n-         \"\",\n-         \"File paths in temporary folder should appear.\",\n-         \"\",\n-         \"You should be able to repeat this operation multiple times.\",\n-         \"Please, select \\\"Pass\\\" just in case of success or \\\"Fail\\\" for another.\"\n-        };\n-        Sysout.createDialogWithInstructions( instructions );\n+\/*\n+ * @test\n+ * @bug 6242241\n+ * @summary Tests TransferFlavor that supports DnD of MS Outlook attachments.\n+ * @requires (os.family == \"windows\")\n+ * @modules java.desktop\/sun.awt\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame jtreg.SkippedException\n+ * @run main\/manual DnDFileGroupDescriptor\n+ *\/\n+\n+public class DnDFileGroupDescriptor {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            When the test starts, a RED panel appears.\n+            1. Start MS Outlook program. Find and open the mail form with attachments.\n+\n+            2. Select attachments from the mail and drag into a red field of applet.\n+                When the mouse enters the field during the process of drag, the application\n+                should change the cursor form to OLE-copy and field color to yellow.\n+\n+            3. Release the mouse button (drop attachments) over the field.\n+                File paths in temporary folder should appear.\n+                You should be able to repeat this operation multiple times.\n+\n+            If the above is the case then press PASS, else FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        if (OSInfo.getOSType() != OSInfo.OSType.WINDOWS) {\n+            throw new SkippedException(\"This test is for Windows only\");\n+        }\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(DnDFileGroupDescriptor::createUI)\n+                .build()\n+                .awaitAndCheck();\n@@ -57,5 +75,3 @@\n-    public void start() {\n-        Panel   mainPanel;\n-        Component dropTarget;\n-\n-        mainPanel = new Panel();\n+    private static Frame createUI() {\n+        Frame frame = new Frame(\"Test MS Outlook Mail Attachments DnD\");\n+        Panel mainPanel = new Panel();\n@@ -64,3 +80,1 @@\n-        mainPanel.setBackground(Color.blue);\n-        dropTarget = new DnDTarget(Color.red, Color.yellow);\n-\n+        Component dropTarget = new DnDTarget(Color.RED, Color.YELLOW);\n@@ -68,1 +82,0 @@\n-        add(mainPanel);\n@@ -70,1 +83,4 @@\n-        setSize(200,200);\n+        frame.add(mainPanel);\n+        frame.setSize(400,200);\n+        frame.setAlwaysOnTop(true);\n+        return frame;\n@@ -73,116 +89,0 @@\n-\n-\/****************************************************\n- Standard Test Machinery\n- DO NOT modify anything below -- it's a standard\n-  chunk of code whose purpose is to make user\n-  interaction uniform, and thereby make it simpler\n-  to read and understand someone else's test.\n- ****************************************************\/\n-\n-class Sysout\n- {\n-   private static TestDialog dialog;\n-\n-   public static void createDialogWithInstructions( String[] instructions )\n-    {\n-      dialog = new TestDialog( new Frame(), \"Instructions\" );\n-      dialog.printInstructions( instructions );\n-      dialog.show();\n-      println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-   public static void createDialog( )\n-    {\n-      dialog = new TestDialog( new Frame(), \"Instructions\" );\n-      String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-      dialog.printInstructions( defInstr );\n-      dialog.show();\n-      println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-\n-   public static void printInstructions( String[] instructions )\n-    {\n-      dialog.printInstructions( instructions );\n-    }\n-\n-\n-   public static void println( String messageIn )\n-    {\n-      dialog.displayMessage( messageIn );\n-    }\n-\n- }\/\/ Sysout  class\n-\n-class TestDialog extends Dialog\n- {\n-\n-   TextArea instructionsText;\n-   TextArea messageText;\n-   int maxStringLength = 80;\n-\n-   \/\/DO NOT call this directly, go through Sysout\n-   public TestDialog( Frame frame, String name )\n-    {\n-      super( frame, name );\n-      int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-      instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-      add( \"North\", instructionsText );\n-\n-      messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-      add(\"South\", messageText);\n-\n-      pack();\n-\n-      show();\n-    }\/\/ TestDialog()\n-\n-   \/\/DO NOT call this directly, go through Sysout\n-   public void printInstructions( String[] instructions )\n-    {\n-      \/\/Clear out any current instructions\n-      instructionsText.setText( \"\" );\n-\n-      \/\/Go down array of instruction strings\n-\n-      String printStr, remainingStr;\n-      for( int i=0; i < instructions.length; i++ )\n-       {\n-         \/\/chop up each into pieces maxSringLength long\n-         remainingStr = instructions[ i ];\n-         while( remainingStr.length() > 0 )\n-          {\n-            \/\/if longer than max then chop off first max chars to print\n-            if( remainingStr.length() >= maxStringLength )\n-             {\n-               \/\/Try to chop on a word boundary\n-               int posOfSpace = remainingStr.\n-                  lastIndexOf( ' ', maxStringLength - 1 );\n-\n-               if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-               printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-               remainingStr = remainingStr.substring( posOfSpace + 1 );\n-             }\n-            \/\/else just print\n-            else\n-             {\n-               printStr = remainingStr;\n-               remainingStr = \"\";\n-             }\n-\n-            instructionsText.append( printStr + \"\\n\" );\n-\n-          }\/\/ while\n-\n-       }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-   \/\/DO NOT call this directly, go through Sysout\n-   public void displayMessage( String messageIn )\n-    {\n-      messageText.append( messageIn + \"\\n\" );\n-    }\n-\n- }\/\/ TestDialog  class\n","filename":"test\/jdk\/java\/awt\/dnd\/DnDFileGroupDescriptor\/DnDFileGroupDescriptor.java","additions":78,"deletions":178,"binary":false,"changes":256,"status":"modified"}]}