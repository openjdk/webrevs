{"files":[{"patch":"@@ -341,0 +341,4 @@\n+    private static final String RESTRICTED_ANNOTATION =\n+            \"Ljdk\/internal\/javac\/Restricted;\";\n+    private static final String RESTRICTED_ANNOTATION_INTERNAL =\n+            \"Ljdk\/internal\/javac\/Restricted+Annotation;\";\n@@ -352,1 +356,2 @@\n-                    VALUE_BASED_ANNOTATION));\n+                    VALUE_BASED_ANNOTATION,\n+                    RESTRICTED_ANNOTATION));\n@@ -1250,0 +1255,6 @@\n+        if (RESTRICTED_ANNOTATION.equals(annotationType)) {\n+            \/\/the non-public Restricted annotation will not be available in ct.sym,\n+            \/\/replace with purely synthetic javac-internal annotation:\n+            annotationType = RESTRICTED_ANNOTATION_INTERNAL;\n+        }\n+\n","filename":"make\/langtools\/src\/classes\/build\/tools\/symbolgenerator\/CreateSymbols.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -225,0 +225,1 @@\n+    public final Type restrictedInternalType;\n@@ -612,0 +613,1 @@\n+        restrictedInternalType = enterClass(\"jdk.internal.javac.Restricted+Annotation\");\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1547,1 +1547,1 @@\n-            } else if (proxy.type.tsym.flatName() == syms.restrictedType.tsym.flatName()) {\n+            } else if (proxy.type.tsym.flatName() == syms.restrictedInternalType.tsym.flatName()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+ * @compile\/fail\/ref=RestrictedMethods.out --release ${jdk.version} -Xlint:restricted -Werror -XDrawDiagnostics RestrictedMethods.java\n","filename":"test\/langtools\/tools\/javac\/RestrictedMethods.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,4 +1,4 @@\n-RestrictedMethods.java:14:44: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n-RestrictedMethods.java:18:49: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n-RestrictedMethods.java:24:27: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n-RestrictedMethods.java:33:16: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n+RestrictedMethods.java:15:44: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n+RestrictedMethods.java:19:49: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n+RestrictedMethods.java:25:27: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n+RestrictedMethods.java:34:16: compiler.warn.restricted.method: java.lang.foreign.MemorySegment, reinterpret(long)\n","filename":"test\/langtools\/tools\/javac\/RestrictedMethods.out","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}