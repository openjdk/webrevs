{"files":[{"patch":"@@ -2580,0 +2580,5 @@\n+  \/\/ Since casts specifically change the type of a node, stay on the safe side and do not truncate them.\n+  if (in->is_ConstraintCast()) {\n+    return false;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -431,0 +431,26 @@\n+    @Test(compLevel = CompLevel.C2)\n+    @IR(counts = { IRNode.CAST_II, \">0\" })\n+    @Warmup(0)\n+    public Object[] testCastII() {\n+        byte[] bytes = new byte[400];\n+        intField = 6;\n+        int i = 0;\n+        int j = 1;\n+\n+        do {\n+            bytes[j] = (byte) i;\n+            int k = 1;\n+\n+            do {\n+                i <<= intField;\n+                i += (k ^ i);\n+                i -= j;\n+\n+                for (int u = 1; 1 > u; u++) {\n+                }\n+            } while (++k < 8);\n+        } while (++j < 191);\n+\n+        return new Object[] { bytes };\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestSubwordTruncation.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"}]}