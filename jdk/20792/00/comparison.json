{"files":[{"patch":"@@ -660,1 +660,1 @@\n-        target.setInternalDuration(Duration.between(startTime, endTime));\n+        target.setInternalDuration(startTime.until(endTime));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecorder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -475,1 +475,1 @@\n-            return Duration.between(first, last);\n+            return first.until(last);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/query\/Function.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-            Duration d = Duration.between(current.start(), next.start());\n+            Duration d = current.start().until(next.start());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/util\/StopWatch.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-            Asserts.assertEquals(re.getDuration(), Duration.between(re.getStartTime(), re.getEndTime()));\n+            Asserts.assertEquals(re.getDuration(), re.getStartTime().until(re.getEndTime()));\n@@ -114,1 +114,1 @@\n-            Asserts.assertEquals(re.getDuration(), Duration.between(re.getStartTime(), re.getEndTime()));\n+            Asserts.assertEquals(re.getDuration(), re.getStartTime().until(re.getEndTime()));\n","filename":"test\/jdk\/jdk\/jfr\/api\/event\/TestGetDuration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,1 +91,1 @@\n-        Duration s = Duration.between(offset, t);\n+        Duration s = offset.until(t);\n","filename":"test\/jdk\/jdk\/jfr\/api\/recording\/misc\/TestGetStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-        long durationMillis = Duration.between(afterStart, r.getStopTime()).toMillis();\n+        long durationMillis = afterStart.until(r.getStopTime()).toMillis();\n","filename":"test\/jdk\/jdk\/jfr\/api\/recording\/options\/TestDuration.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        Duration measuredDuration = Duration.between(start, stop);\n+        Duration measuredDuration = start.until(stop);\n","filename":"test\/jdk\/jdk\/jfr\/api\/recording\/state\/TestStateDuration.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        long millis = Duration.between(start, started).toMillis();\n+        long millis = start.until(started).toMillis();\n","filename":"test\/jdk\/jdk\/jfr\/api\/recording\/state\/TestStateScheduleStart.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-                    while ((Duration.between(start, Instant.now()).compareTo(runTime) < 0) ||\n+                    while ((start.until(Instant.now()).compareTo(runTime) < 0) ||\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestThreadCpuTimeEvent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}