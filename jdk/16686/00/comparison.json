{"files":[{"patch":"@@ -372,0 +372,1 @@\n+  ThreadsListHandle tlh(current);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+bool JvmtiThreadState::_seen_interp_only_mode = false;\n@@ -529,1 +530,6 @@\n-  JvmtiEventController::thread_started(thread);\n+  \/\/ JvmtiThreadState objects for virtual thread filtered events enabled globally\n+  \/\/ must be created eagerly if the interp_only_mode is enabled. Otherwise,\n+  \/\/ it is an important optimization to create JvmtiThreadState objects lazily.\n+  if (JvmtiThreadState::seen_interp_only_mode()) {\n+    JvmtiEventController::thread_started(thread);\n+  }\n@@ -534,4 +540,4 @@\n-  }\n-  \/\/ post VirtualThreadMount event after VirtualThreadStart\n-  if (JvmtiExport::should_post_vthread_mount()) {\n-    JvmtiExport::post_vthread_mount(vthread);\n+    \/\/ post VirtualThreadMount event after VirtualThreadStart\n+    if (JvmtiExport::should_post_vthread_mount()) {\n+      JvmtiExport::post_vthread_mount(vthread);\n+    }\n@@ -548,4 +554,0 @@\n-  \/\/ post VirtualThreadUnmount event before VirtualThreadEnd\n-  if (JvmtiExport::should_post_vthread_unmount()) {\n-    JvmtiExport::post_vthread_unmount(vthread);\n-  }\n@@ -553,0 +555,4 @@\n+    \/\/ post VirtualThreadUnmount event before VirtualThreadEnd\n+    if (JvmtiExport::should_post_vthread_unmount()) {\n+      JvmtiExport::post_vthread_unmount(vthread);\n+    }\n@@ -572,1 +578,2 @@\n-    if (JvmtiExport::should_post_vthread_mount()) {\n+    if (JvmtiExport::can_support_virtual_threads() &&\n+        JvmtiExport::should_post_vthread_mount()) {\n@@ -581,1 +588,2 @@\n-    if (JvmtiExport::should_post_vthread_unmount()) {\n+    if (JvmtiExport::can_support_virtual_threads() &&\n+        JvmtiExport::should_post_vthread_unmount()) {\n@@ -605,1 +613,2 @@\n-  {\n+  JvmtiThreadState* state = thread->jvmti_thread_state();\n+  if (state != nullptr && state->is_pending_interp_only_mode()) {\n@@ -607,1 +616,1 @@\n-    JvmtiThreadState* state = thread->jvmti_thread_state();\n+    state = thread->jvmti_thread_state();\n@@ -746,0 +755,1 @@\n+  _seen_interp_only_mode = true;\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.cpp","additions":23,"deletions":13,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -234,0 +234,2 @@\n+  static bool _seen_interp_only_mode; \/\/ needed for optimization\n+\n@@ -253,0 +255,7 @@\n+  \/\/ JvmtiThreadState objects for virtual thread filtered events enabled globally\n+  \/\/ must be created eagerly if the interp_only_mode is enabled. Otherwise,\n+  \/\/ it is an important optimization to create JvmtiThreadState objects lazily.\n+  static bool seen_interp_only_mode() {\n+    return _seen_interp_only_mode;\n+  }\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}