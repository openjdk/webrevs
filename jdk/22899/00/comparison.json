{"files":[{"patch":"@@ -53,0 +53,1 @@\n+  friend class SerialHeap;\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -332,3 +332,3 @@\n-      \/\/ Note that only large objects get a shot at being\n-      \/\/ allocated in later generations.\n-      bool first_only = !should_try_older_generation_allocation(size);\n+\n+      bool first_only = !should_try_older_generation_allocation(size)\n+                     && is_long_enough_from_prev_gc_pause_end();\n@@ -637,0 +637,20 @@\n+bool SerialHeap::is_long_enough_from_prev_gc_pause_end() const {\n+  Ticks young_gc_pause_end = _young_gen->_gc_timer->gc_end();\n+  Ticks full_gc_pause_end = SerialFullGC::gc_timer()->gc_end();\n+\n+  Ticks prev_gc_pause_end;\n+  Tickspan gc_pause;\n+  if (full_gc_pause_end < young_gc_pause_end ) {\n+    \/\/ Previous is young-gc\n+    prev_gc_pause_end = young_gc_pause_end;\n+    gc_pause = young_gc_pause_end - _young_gen->_gc_timer->gc_start();\n+  } else {\n+    \/\/ Previous is full-gc\n+    prev_gc_pause_end = full_gc_pause_end;\n+    gc_pause = full_gc_pause_end - SerialFullGC::gc_timer()->gc_start();\n+  }\n+  Tickspan since_end_gc_pause = Ticks::now() - prev_gc_pause_end;\n+\n+  return since_end_gc_pause.seconds() * 100 >= gc_pause.seconds() * GCTimeRatio;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":23,"deletions":3,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -123,0 +123,2 @@\n+  bool is_long_enough_from_prev_gc_pause_end() const;\n+\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}