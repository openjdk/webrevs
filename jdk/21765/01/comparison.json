{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,1 +131,1 @@\n-                    replacement = writer.commentTagsToOutput(doc.value().method, null,\n+                    replacement = writer.commentTagsToOutput(doc.value().method, inheritDoc,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/InheritDocTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -372,2 +372,5 @@\n-        Content result;\n-        if (context.isFirstSentence && context.inSummary || context.inTags.contains(DocTree.Kind.INDEX)\n+        \/\/ Only create index item for tags in their native location.\n+        if (context.isFirstSentence && context.inSummary\n+                || context.inTags.contains(DocTree.Kind.INDEX)\n+                || context.inTags.contains(DocTree.Kind.INHERIT_DOC)\n+                || isDifferentTypeElement(element)\n@@ -375,10 +378,1 @@\n-            result = tagContent;\n-        } else {\n-            HtmlId id = HtmlIds.forText(tagText, htmlWriter.indexAnchorTable);\n-            result = HtmlTree.SPAN(id, HtmlStyles.searchTagResult, tagContent);\n-            if (options.createIndex() && !tagText.isEmpty()) {\n-                String holder = getHolderName(element);\n-                IndexItem item = IndexItem.of(element, tree, tagText, holder, desc,\n-                        new DocLink(htmlWriter.path, id.name()));\n-                configuration.indexBuilder.add(item);\n-            }\n+            return tagContent;\n@@ -386,1 +380,8 @@\n-        return result;\n+        HtmlId id = HtmlIds.forText(tagText, htmlWriter.indexAnchorTable);\n+        if (options.createIndex() && !tagText.isEmpty()) {\n+            String holder = getHolderName(element);\n+            IndexItem item = IndexItem.of(element, tree, tagText, holder, desc,\n+                    new DocLink(htmlWriter.path, id.name()));\n+            configuration.indexBuilder.add(item);\n+        }\n+        return HtmlTree.SPAN(id, HtmlStyles.searchTagResult, tagContent);\n@@ -475,0 +476,11 @@\n+\n+    \/\/ Test if element is the same as or belongs to the current page element\n+    private boolean isDifferentTypeElement(Element element) {\n+        if (element.getKind().isDeclaredType()) {\n+            return element != getCurrentPageElement();\n+        } else if (element.getKind() == ElementKind.OTHER) {\n+            return false;\n+        } else {\n+            return utils.getEnclosingTypeElement(element) != getCurrentPageElement();\n+        }\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/TagletWriter.java","additions":25,"deletions":13,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- *      8192850 8182765 8220217 8224052 8237383\n+ *      8192850 8182765 8220217 8224052 8237383 8341904\n@@ -155,2 +155,1 @@\n-                    <div class=\"block\">Returns some value with an <span id=\"inheritedsearchtag\" clas\\\n-                    s=\"search-tag-result\">inherited search tag<\/span>.<\/div>\"\"\");\n+                    <div class=\"block\">Returns some value with an inherited search tag.<\/div>\"\"\");\n@@ -221,4 +220,2 @@\n-        checkOutput(\"tag-search-index.js\", true,\n-                \"\"\"\n-                    {\"l\":\"inherited search tag\",\"h\":\"pkg2.UndocumentedGenericParent.parentMethod(Str\\\n-                    ing)\",\"u\":\"pkg2\/DocumentedNonGenericChild.html#inheritedsearchtag\"}\"\"\");\n+        \/\/ Search tags from inherited doc comments are not added to the index (8341904).\n+        checkOutput(\"tag-search-index.js\", true, \"tagSearchIndex = []\");\n@@ -249,2 +246,1 @@\n-                    <div class=\"block\">Returns some value with an <span id=\"inheritedsearchtag\" clas\\\n-                    s=\"search-tag-result\">inherited search tag<\/span>.<\/div>\"\"\");\n+                    <div class=\"block\">Returns some value with an inherited search tag.<\/div>\"\"\");\n@@ -273,4 +269,2 @@\n-        checkOutput(\"tag-search-index.js\", true,\n-                \"\"\"\n-                    {\"l\":\"inherited search tag\",\"h\":\"pkg2.UndocumentedGenericParent.parentMethod(Str\\\n-                    ing)\",\"u\":\"pkg2\/DocumentedNonGenericChild.html#inheritedsearchtag\"}\"\"\");\n+        \/\/ Search tags from inherited doc comments are not added to the index (8341904).\n+        checkOutput(\"tag-search-index.js\", true, \"tagSearchIndex = []\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMemberInheritance\/TestMemberInheritance.java","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,5 @@\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public void parentMethod2() {}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMemberInheritance\/pkg2\/DocumentedNonGenericChild.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,5 @@\n+\n+    \/**\n+     * Method with systemProperty tag. {@systemProperty parent.system.prop}.\n+     *\/\n+    public abstract void parentMethod2();\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMemberInheritance\/pkg2\/UndocumentedGenericParent.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}