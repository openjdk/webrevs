[{"commit":{"message":"Clean up scalar floating point conversion tests"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/ScalarFPtoIntCastTest.java"}],"sha":"a7940ee01fb42e79aaf9b5b5362cf150858d3c65"},{"commit":{"message":"Introduce scalar floating point conversion tests with IR rules"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/ScalarFPtoIntCastTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFPtoIntCastTest.java"}],"sha":"5d26ff4846ccb3b4e6da6cef21cf9cb469cee243"},{"commit":{"message":"Add extra constraints to vector floating point conversion instruction predicates and tests"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFPtoIntCastTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayTypeConvertTest.java"}],"sha":"025d815f233f73041390f9255def961dd18439b9"},{"commit":{"message":"Change the floating point conversion instruction, IR nodes, and test rules to make them clearer"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFPtoIntCastTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayTypeConvertTest.java"}],"sha":"df1757566260e696b1ee344ebea1bba7eede3f53"},{"commit":{"message":"Change debug text format of AVX 10.2 vector conversion instructions"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"}],"sha":"5e8800d78d9fd32182ecffa8fe7f96da95d10816"},{"commit":{"message":"Check for instructions that shouldn't appear in vector floating point conversion tests"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFPtoIntCastTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayTypeConvertTest.java"}],"sha":"8587952d7558ac0002b6e38da71e0bd1ccfae31b"},{"commit":{"message":"Correctly calculate vector lengths and don't rely on VectorReinterpret in cast2F2X and cast2D2X memory instructions"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"}],"sha":"7202ec4cb9ecbb019939ca792ea8b1f000bfa9cd"},{"commit":{"message":"Add new IR nodes covering x86 floating point conversion instructions"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFPtoIntCastTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayTypeConvertTest.java"}],"sha":"bc59e4d2f86b5d7fa96a40f5c37c2ad148c1cb40"},{"commit":{"message":"Check for scalar casting instead of vector casting in tests when disabling vector alignment or compact object headers"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayTypeConvertTest.java"}],"sha":"4d8f3ab65796b5c719f0235b35843dcc0a6ceca2"},{"commit":{"message":"Use applyIfCPUFeatureAnd to check multiple CPU feature pairs in tests"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFPtoIntCastTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayTypeConvertTest.java"}],"sha":"b7d3ae34eb43161fd65a7f0c8de401fceddd9f8d"},{"commit":{"message":"Avoid machine instruction searches in IR rules for non-AVX10.2 platforms during Vector floating point to integer conversion tests"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFPtoIntCastTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayTypeConvertTest.java"}],"sha":"709b44390de8ac43235058be70cfc7f01cb032ff"},{"commit":{"message":"Add new IR rules to vector float to integer conversion tests"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFPtoIntCastTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayTypeConvertTest.java"}],"sha":"6407cc48d0730881f176b5aabef7633ca2795b24"},{"commit":{"message":"Fix match rule for AVX 10.2 double to long scalar conversion"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"a38060edf5b478a837544f3b681bdcd43ecd579b"},{"commit":{"message":"Add AVX 10.2 CPU feature flag to list of verified ones"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/IREncodingPrinter.java"}],"sha":"e0c84f697ac8ed46d6b19c37d0a2f76d3cc7303c"},{"commit":{"message":"Update floating point conversion tests to check for AVX 10.2 CPU feature ID"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFPtoIntCastTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayTypeConvertTest.java"}],"sha":"07ac817a4adf69407966ebae2a6c5fd13fa0f608"},{"commit":{"message":"Correct matching rules for AVX 10.2 floating point conversion instructions that involve memory"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"9d7484cb62138e340a04d25f2d4d3ff634f244d1"},{"commit":{"message":"Fix input size enum values for AVX 10.2 conversion instructions that take memory as the source"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"be5c0b4eca86cb27eac272b28c7ad759afdcc1c4"},{"commit":{"message":"Add memory variants of the AVX 10.2 floating point conversion instructions"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"e67e376e5a0d44730c305f6bca7088e1c49d2111"},{"commit":{"message":"Enable new AVX 10.2 vector and scalar floating point conversion instructions"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"57745ae18bd5ddb3a7573f58c3e5214a39c6a0f8"}]