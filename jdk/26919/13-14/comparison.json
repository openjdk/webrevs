{"files":[{"patch":"@@ -36,0 +36,2 @@\n+import compiler.lib.verify.Verify;\n+import java.util.Arrays;\n@@ -37,0 +39,1 @@\n+import java.util.stream.IntStream;\n@@ -53,4 +56,8 @@\n-        float_arr = new float[COUNT];\n-        double_arr = new double[COUNT];\n-        long_arr = new long[COUNT];\n-        int_arr = new int[COUNT];\n+        Random ran = new Random(0);\n+        int_arr = IntStream.range(0, COUNT)\n+            .mapToObj(i -> ran.nextInt(Byte.MAX_VALUE))\n+            .mapToInt(Integer::intValue)\n+            .toArray();\n+        long_arr = Arrays.stream(int_arr)\n+            .mapToLong(i -> i)\n+            .toArray();\n@@ -59,0 +66,2 @@\n+        double_arr = new double[COUNT];\n+        float_arr = new float[COUNT];\n@@ -60,1 +69,0 @@\n-        Random ran = new Random(0);\n@@ -62,1 +70,1 @@\n-            int floor_val = ran.nextInt(Byte.MAX_VALUE);\n+            int floor_val = int_arr[i];\n@@ -64,2 +72,0 @@\n-            long_arr[i] = (long) floor_val;\n-            int_arr[i] = floor_val;\n@@ -68,1 +74,0 @@\n-            float_arr[i] = ran.nextFloat(floor_val, ceil_val);\n@@ -70,0 +75,1 @@\n+            float_arr[i] = (float) double_arr[i];\n@@ -80,4 +86,0 @@\n-        checkf2int();\n-    }\n-\n-    public void checkf2int() {\n@@ -86,4 +88,3 @@\n-            int expected = (int) float_val;\n-            if (int_arr[i] != expected) {\n-                throw new RuntimeException(\"Invalid result: int_arr[\" + i + \"] = \" + int_arr[i] + \" != \" + expected);\n-            }\n+            int computed = (int) float_val;\n+            int expected = int_arr[i];\n+            Verify.checkEQ(computed, expected);\n@@ -100,4 +101,0 @@\n-        checkf2long();\n-    }\n-\n-    public void checkf2long() {\n@@ -106,4 +103,3 @@\n-            long expected = (long) float_val;\n-            if (long_arr[i] != expected) {\n-                throw new RuntimeException(\"Invalid result: long_arr[\" + i + \"] = \" + long_arr[i] + \" != \" + expected);\n-            }\n+            long computed = (long) float_val;\n+            long expected = long_arr[i];\n+            Verify.checkEQ(computed, expected);\n@@ -120,4 +116,0 @@\n-        checkf2short();\n-    }\n-\n-    public void checkf2short() {\n@@ -126,4 +118,3 @@\n-            short expected = (short) float_val;\n-            if (short_arr[i] != expected) {\n-                throw new RuntimeException(\"Invalid result: short_arr[\" + i + \"] = \" + short_arr[i] + \" != \" + expected);\n-            }\n+            short computed = (short) float_val;\n+            short expected = short_arr[i];\n+            Verify.checkEQ(computed, expected);\n@@ -140,4 +131,0 @@\n-        checkf2byte();\n-    }\n-\n-    public void checkf2byte() {\n@@ -146,4 +133,3 @@\n-            byte expected = (byte) float_val;\n-            if (byte_arr[i] != expected) {\n-                throw new RuntimeException(\"Invalid result: byte_arr[\" + i + \"] = \" + byte_arr[i] + \" != \" + expected);\n-            }\n+            byte computed = (byte) float_val;\n+            byte expected = byte_arr[i];\n+            Verify.checkEQ(computed, expected);\n@@ -160,4 +146,0 @@\n-        checkd2int();\n-    }\n-\n-    public void checkd2int() {\n@@ -166,4 +148,3 @@\n-            int expected = (int) double_val;\n-            if (int_arr[i] != expected) {\n-                throw new RuntimeException(\"Invalid result: int_arr[\" + i + \"] = \" + int_arr[i] + \" != \" + expected);\n-            }\n+            int computed = (int) double_val;\n+            int expected = int_arr[i];\n+            Verify.checkEQ(computed, expected);\n@@ -180,4 +161,0 @@\n-        checkd2long();\n-    }\n-\n-    public void checkd2long() {\n@@ -186,4 +163,3 @@\n-            long expected = (long) double_val;\n-            if (long_arr[i] != expected) {\n-                throw new RuntimeException(\"Invalid result: long_arr[\" + i + \"] = \" + long_arr[i] + \" != \" + expected);\n-            }\n+            long computed = (long) double_val;\n+            long expected = long_arr[i];\n+            Verify.checkEQ(computed, expected);\n@@ -200,4 +176,0 @@\n-        checkd2short();\n-    }\n-\n-    public void checkd2short() {\n@@ -206,4 +178,3 @@\n-            short expected = (short) double_val;\n-            if (short_arr[i] != expected) {\n-                throw new RuntimeException(\"Invalid result: short_arr[\" + i + \"] = \" + short_arr[i] + \" != \" + expected);\n-            }\n+            short computed = (short) double_val;\n+            short expected = short_arr[i];\n+            Verify.checkEQ(computed, expected);\n@@ -220,4 +191,0 @@\n-        checkd2byte();\n-    }\n-\n-    public void checkd2byte() {\n@@ -226,4 +193,3 @@\n-            byte expected = (byte) double_val;\n-            if (byte_arr[i] != expected) {\n-                throw new RuntimeException(\"Invalid result: byte_arr[\" + i + \"] = \" + byte_arr[i] + \" != \" + expected);\n-            }\n+            byte computed = (byte) double_val;\n+            byte expected = byte_arr[i];\n+            Verify.checkEQ(computed, expected);\n","filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/ScalarFPtoIntCastTest.java","additions":39,"deletions":73,"binary":false,"changes":112,"status":"modified"}]}