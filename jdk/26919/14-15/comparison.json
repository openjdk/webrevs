{"files":[{"patch":"@@ -36,0 +36,2 @@\n+import compiler.lib.generators.Generator;\n+import static compiler.lib.generators.Generators.G;\n@@ -37,3 +39,0 @@\n-import java.util.Arrays;\n-import java.util.Random;\n-import java.util.stream.IntStream;\n@@ -43,0 +42,1 @@\n+\n@@ -45,4 +45,11 @@\n-    private long[] long_arr;\n-    private int[] int_arr;\n-    private short[] short_arr;\n-    private byte[] byte_arr;\n+    private long[] long_float_arr;\n+    private long[] long_double_arr;\n+    private int[] int_float_arr;\n+    private int[] int_double_arr;\n+    private short[] short_float_arr;\n+    private short[] short_double_arr;\n+    private byte[] byte_float_arr;\n+    private byte[] byte_double_arr;\n+\n+    private static final Generator<Float> genF = G.floats();\n+    private static final Generator<Double> genD = G.doubles();\n@@ -52,1 +59,1 @@\n-        testFramework.setDefaultWarmup(5000).start();\n+        testFramework.start();\n@@ -56,11 +63,8 @@\n-        Random ran = new Random(0);\n-        int_arr = IntStream.range(0, COUNT)\n-            .mapToObj(i -> ran.nextInt(Byte.MAX_VALUE))\n-            .mapToInt(Integer::intValue)\n-            .toArray();\n-        long_arr = Arrays.stream(int_arr)\n-            .mapToLong(i -> i)\n-            .toArray();\n-        short_arr = new short[COUNT];\n-        byte_arr = new byte[COUNT];\n-        double_arr = new double[COUNT];\n+        long_float_arr = new long[COUNT];\n+        long_double_arr = new long[COUNT];\n+        int_float_arr = new int[COUNT];\n+        int_double_arr = new int[COUNT];\n+        short_float_arr = new short[COUNT];\n+        short_double_arr = new short[COUNT];\n+        byte_float_arr = new byte[COUNT];\n+        byte_double_arr = new byte[COUNT];\n@@ -68,0 +72,1 @@\n+        double_arr = new double[COUNT];\n@@ -69,0 +74,2 @@\n+        G.fill(genF, float_arr);\n+        G.fill(genD, double_arr);\n@@ -70,6 +77,8 @@\n-            int floor_val = int_arr[i];\n-            int ceil_val = floor_val + 1;\n-            short_arr[i] = (short) floor_val;\n-            byte_arr[i] = (byte) floor_val;\n-            double_arr[i] = ran.nextDouble(floor_val, ceil_val);\n-            float_arr[i] = (float) double_arr[i];\n+            long_float_arr[i] = (long) float_arr[i];\n+            long_double_arr[i] = (long) double_arr[i];\n+            int_float_arr[i] = (int) float_arr[i];\n+            int_double_arr[i] = (int) double_arr[i];\n+            short_float_arr[i] = (short) float_arr[i];\n+            short_double_arr[i] = (short) double_arr[i];\n+            byte_float_arr[i] = (byte) float_arr[i];\n+            byte_double_arr[i] = (byte) double_arr[i];\n@@ -89,1 +98,1 @@\n-            int expected = int_arr[i];\n+            int expected = int_float_arr[i];\n@@ -104,1 +113,1 @@\n-            long expected = long_arr[i];\n+            long expected = long_float_arr[i];\n@@ -119,1 +128,1 @@\n-            short expected = short_arr[i];\n+            short expected = short_float_arr[i];\n@@ -134,1 +143,1 @@\n-            byte expected = byte_arr[i];\n+            byte expected = byte_float_arr[i];\n@@ -149,1 +158,1 @@\n-            int expected = int_arr[i];\n+            int expected = int_double_arr[i];\n@@ -164,1 +173,1 @@\n-            long expected = long_arr[i];\n+            long expected = long_double_arr[i];\n@@ -179,1 +188,1 @@\n-            short expected = short_arr[i];\n+            short expected = short_double_arr[i];\n@@ -194,1 +203,1 @@\n-            byte expected = byte_arr[i];\n+            byte expected = byte_double_arr[i];\n","filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/ScalarFPtoIntCastTest.java","additions":42,"deletions":33,"binary":false,"changes":75,"status":"modified"}]}