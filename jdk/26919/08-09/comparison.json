{"files":[{"patch":"@@ -494,0 +494,20 @@\n+    public static final String CAST_F2X = PREFIX + \"CAST_F2X\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CAST_F2X, \"castF2X_reg_(av|eve)x\");\n+    }\n+\n+    public static final String CAST_D2X = PREFIX + \"CAST_D2X\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CAST_D2X, \"castD2X_reg_(av|eve)x\");\n+    }\n+\n+    public static final String CAST2_F2X = PREFIX + \"CAST2_F2X\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CAST2_F2X, \"cast2F2X_(reg|mem)_evex\");\n+    }\n+\n+    public static final String CAST2_D2X = PREFIX + \"CAST2_D2X\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CAST2_D2X, \"cast2D2X_(reg|mem)_evex\");\n+    }\n+\n@@ -608,0 +628,40 @@\n+    public static final String CONV_D2I = PREFIX + \"CONV_D2I\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CONV_D2I, \"convD2I_reg_reg\");\n+    }\n+\n+    public static final String CONV_D2L = PREFIX + \"CONV_D2L\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CONV_D2L, \"convD2L_reg_reg\");\n+    }\n+\n+    public static final String CONV_F2I = PREFIX + \"CONV_F2I\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CONV_F2I, \"convF2I_reg_reg\");\n+    }\n+\n+    public static final String CONV_F2L = PREFIX + \"CONV_F2L\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CONV_F2L, \"convF2L_reg_reg\");\n+    }\n+\n+    public static final String CONV2_D2I = PREFIX + \"CONV2_D2I\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CONV2_D2I, \"conv2D2I_(reg_reg|reg_mem)\");\n+    }\n+\n+    public static final String CONV2_D2L = PREFIX + \"CONV2_D2L\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CONV2_D2L, \"conv2D2L_(reg_reg|reg_mem)\");\n+    }\n+\n+    public static final String CONV2_F2I = PREFIX + \"CONV2_F2I\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CONV2_F2I, \"conv2F2I_(reg_reg|reg_mem)\");\n+    }\n+\n+    public static final String CONV2_F2L = PREFIX + \"CONV2_F2L\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(CONV2_F2L, \"conv2F2L_(reg_reg|reg_mem)\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-* @bug 8287835\n+* @bug 8287835 8320347\n@@ -90,2 +90,2 @@\n-        applyIfCPUFeature = {\"avx512f\", \"true\"})\n-    @IR(counts = {\"castFtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        applyIfCPUFeatureOr = {\"avx512f\", \"true\", \"avx10_2\", \"true\"})\n+    @IR(counts = {IRNode.CAST_F2X, \"> 0\"},\n@@ -93,1 +93,1 @@\n-    @IR(counts = {\"cast2FtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_F2X, \"> 0\"},\n@@ -112,2 +112,2 @@\n-        applyIfCPUFeature = {\"avx512dq\", \"true\"})\n-    @IR(counts = {\"castFtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        applyIfCPUFeatureOr = {\"avx512dq\", \"true\", \"avx10_2\", \"true\"})\n+    @IR(counts = {IRNode.CAST_F2X, \"> 0\"},\n@@ -115,1 +115,1 @@\n-    @IR(counts = {\"cast2FtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_F2X, \"> 0\"},\n@@ -134,2 +134,2 @@\n-        applyIfCPUFeature = {\"avx512f\", \"true\"})\n-    @IR(counts = {\"castFtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        applyIfCPUFeatureOr = {\"avx512f\", \"true\", \"avx10_2\", \"true\"})\n+    @IR(counts = {IRNode.CAST_F2X, \"> 0\"},\n@@ -137,1 +137,1 @@\n-    @IR(counts = {\"cast2FtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_F2X, \"> 0\"},\n@@ -156,2 +156,2 @@\n-        applyIfCPUFeature = {\"avx512f\", \"true\"})\n-    @IR(counts = {\"castFtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        applyIfCPUFeatureOr = {\"avx512f\", \"true\", \"avx10_2\", \"true\"})\n+    @IR(counts = {IRNode.CAST_F2X, \"> 0\"},\n@@ -159,1 +159,1 @@\n-    @IR(counts = {\"cast2FtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_F2X, \"> 0\"},\n@@ -178,2 +178,2 @@\n-        applyIfCPUFeature = {\"avx512f\", \"true\"})\n-    @IR(counts = {\"castDtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        applyIfCPUFeatureOr = {\"avx512f\", \"true\", \"avx10_2\", \"true\"})\n+    @IR(counts = {IRNode.CAST_D2X, \"> 0\"},\n@@ -181,1 +181,1 @@\n-    @IR(counts = {\"cast2DtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_D2X, \"> 0\"},\n@@ -200,2 +200,2 @@\n-        applyIfCPUFeature = {\"avx512dq\", \"true\"})\n-    @IR(counts = {\"castDtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        applyIfCPUFeatureOr = {\"avx512dq\", \"true\", \"avx10_2\", \"true\"})\n+    @IR(counts = {IRNode.CAST_D2X, \"> 0\"},\n@@ -203,1 +203,1 @@\n-    @IR(counts = {\"cast2DtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_D2X, \"> 0\"},\n@@ -222,2 +222,2 @@\n-        applyIfCPUFeature = {\"avx512f\", \"true\"})\n-    @IR(counts = {\"castDtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        applyIfCPUFeatureOr = {\"avx512f\", \"true\", \"avx10_2\", \"true\"})\n+    @IR(counts = {IRNode.CAST_D2X, \"> 0\"},\n@@ -225,1 +225,1 @@\n-    @IR(counts = {\"cast2DtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_D2X, \"> 0\"},\n@@ -244,2 +244,2 @@\n-        applyIfCPUFeature = {\"avx512f\", \"true\"})\n-    @IR(counts = {\"castDtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        applyIfCPUFeatureOr = {\"avx512f\", \"true\", \"avx10_2\", \"true\"})\n+    @IR(counts = {IRNode.CAST_D2X, \"> 0\"},\n@@ -247,1 +247,1 @@\n-    @IR(counts = {\"cast2DtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_D2X, \"> 0\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFPtoIntCastTest.java","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -297,3 +297,3 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx\", \"true\", \"rvv\", \"true\"},\n-        counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE + \"min(max_float, max_int)\", \">0\"})\n-    @IR(counts = {\"castFtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx\", \"true\", \"avx10_2\", \"true\", \"rvv\", \"true\"},\n+        counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE + \"min(max_float, max_int)\", \"> 0\"})\n+    @IR(counts = {IRNode.CAST_F2X, \"> 0\"},\n@@ -301,1 +301,1 @@\n-    @IR(counts = {\"cast2FtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_F2X, \"> 0\"},\n@@ -312,3 +312,3 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx512dq\", \"true\", \"rvv\", \"true\"},\n-        counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE + \"min(max_float, max_long)\", \">0\"})\n-    @IR(counts = {\"castFtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx512dq\", \"true\", \"avx10_2\", \"true\", \"rvv\", \"true\"},\n+        counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE + \"min(max_float, max_long)\", \"> 0\"})\n+    @IR(counts = {IRNode.CAST_F2X, \"> 0\"},\n@@ -316,1 +316,1 @@\n-    @IR(counts = {\"cast2FtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_F2X, \"> 0\"},\n@@ -327,3 +327,3 @@\n-    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx\", \"true\", \"rvv\", \"true\"},\n-        counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE + \"min(max_double, max_int)\", \">0\"})\n-    @IR(counts = {\"castDtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx\", \"true\", \"avx10_2\", \"true\", \"rvv\", \"true\"},\n+        counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE + \"min(max_double, max_int)\", \"> 0\"})\n+    @IR(counts = {IRNode.CAST_D2X, \"> 0\"},\n@@ -331,1 +331,1 @@\n-    @IR(counts = {\"cast2DtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_D2X, \"> 0\"},\n@@ -342,3 +342,3 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx512dq\", \"true\", \"rvv\", \"true\"},\n-        counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE + \"min(max_double, max_long)\", \">0\"})\n-    @IR(counts = {\"castDtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx512dq\", \"true\", \"avx10_2\", \"true\", \"rvv\", \"true\"},\n+        counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE + \"min(max_double, max_long)\", \"> 0\"})\n+    @IR(counts = {IRNode.CAST_D2X, \"> 0\"},\n@@ -346,1 +346,1 @@\n-    @IR(counts = {\"cast2DtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_D2X, \"> 0\"},\n@@ -358,1 +358,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\", \"rvv\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\", \"avx10_2\", \"true\", \"rvv\", \"true\"},\n@@ -360,2 +360,2 @@\n-        counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE + \"min(max_float, max_short)\", \">0\"})\n-    @IR(counts = {\"convF2I\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE + \"min(max_float, max_short)\", \"> 0\"})\n+    @IR(counts = {IRNode.CONV_F2I, \"> 0\"},\n@@ -363,1 +363,1 @@\n-    @IR(counts = {\"conv2F2I\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CONV2_F2I, \"> 0\"},\n@@ -381,1 +381,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\", \"rvv\", \"true\"},\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\", \"avx10_2\", \"true\", \"rvv\", \"true\"},\n@@ -383,2 +383,2 @@\n-        counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE + \"min(max_float, max_char)\", \">0\"})\n-    @IR(counts = {\"convF2I\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE + \"min(max_float, max_char)\", \"> 0\"})\n+    @IR(counts = {IRNode.CONV_F2I, \"> 0\"},\n@@ -386,1 +386,1 @@\n-    @IR(counts = {\"conv2F2I\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CONV2_F2I, \"> 0\"},\n@@ -406,2 +406,2 @@\n-        counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE + \"min(max_double, max_short)\", \">0\"})\n-    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx\", \"true\"},\n+        counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE + \"min(max_double, max_short)\", \"> 0\"})\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx\", \"true\", \"avx10_2\", \"true\"},\n@@ -409,2 +409,2 @@\n-        counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE + \"min(max_double, max_short)\", \">0\"})\n-    @IR(counts = {\"castDtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE + \"min(max_double, max_short)\", \"> 0\"})\n+    @IR(counts = {IRNode.CAST_D2X, \"> 0\"},\n@@ -412,1 +412,1 @@\n-    @IR(counts = {\"cast2DtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_D2X, \"> 0\"},\n@@ -424,6 +424,6 @@\n-        applyIf = {\"MaxVectorSize\", \">=32\"},\n-        counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE + \"min(max_double, max_char)\", \">0\"})\n-    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx\", \"true\"},\n-        applyIf = {\"MaxVectorSize\", \">=16\"},\n-        counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE + \"min(max_double, max_char)\", \">0\"})\n-    @IR(counts = {\"castDtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+        applyIf = {\"MaxVectorSize\", \">= 32\"},\n+        counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE + \"min(max_double, max_char)\", \"> 0\"})\n+    @IR(applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx\", \"true\", \"avx10_2\", \"true\"},\n+        applyIf = {\"MaxVectorSize\", \">= 16\"},\n+        counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE + \"min(max_double, max_char)\", \"> 0\"})\n+    @IR(counts = {IRNode.CAST_D2X, \"> 0\"},\n@@ -431,1 +431,1 @@\n-    @IR(counts = {\"cast2DtoX\", \" >0 \"}, phase = CompilePhase.FINAL_CODE,\n+    @IR(counts = {IRNode.CAST2_D2X, \"> 0\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayTypeConvertTest.java","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"}]}