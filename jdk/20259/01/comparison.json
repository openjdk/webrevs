{"files":[{"patch":"@@ -1294,0 +1294,1 @@\n+            Assert.check(sym.kind != TYP);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1831,1 +1831,0 @@\n-        Symbol c = sym.owner;\n@@ -1835,1 +1834,1 @@\n-            return make.at(pos).This(c.erasure(types));\n+            return make.at(pos).This(currentClass.erasure(types));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2024, Alphabet LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8336786\n+ * @summary VerifyError with lambda capture and enclosing instance references\n+ * @compile a\/A.java SuperClassThisCapture.java\n+ * @run main SuperClassThisCapture\n+ *\/\n+\n+public class SuperClassThisCapture extends a.A {\n+\n+  public static void main(String[] args) {\n+    new SuperClassThisCapture().f(42);\n+    new SuperClassThisCapture().g();\n+  }\n+\n+  public void f(int x) {\n+    Runnable r = () -> {\n+      System.err.println(x);\n+      new I();\n+    };\n+    r.run();\n+  }\n+\n+  public void g() {\n+    Runnable r = () -> new I();\n+    r.run();\n+  }\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/SuperClassThisCapture\/SuperClassThisCapture.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Alphabet LLC. All rights reserved.\n@@ -27,0 +27,1 @@\n+  public class I {}\n","filename":"test\/langtools\/tools\/javac\/lambda\/SuperClassThisCapture\/a\/A.java","additions":2,"deletions":1,"binary":false,"changes":3,"previous_filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/6437894\/A.java","status":"copied"}]}