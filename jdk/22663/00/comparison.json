{"files":[{"patch":"@@ -1152,0 +1152,1 @@\n+    \/\/ Load barrier on the control output of a call\n@@ -1153,1 +1154,1 @@\n-      CallNode* call = ctrl->is_Proj() ? ctrl->in(0)->as_CallJava() : ctrl->as_CallJava();\n+      CallJavaNode* call = ctrl->is_Proj() ? ctrl->in(0)->as_CallJava() : ctrl->as_CallJava();\n@@ -1189,0 +1190,8 @@\n+      \/\/ If this is a runtime call, it doesn't have an exception handling path\n+      if (projs.fallthrough_catchproj == nullptr) {\n+        assert(call->method() == nullptr, \"should be runtime call\");\n+        assert(projs.catchall_catchproj == nullptr, \"runtime call should not have catch all projection\");\n+        continue;\n+      }\n+\n+      \/\/ Otherwise, clone the barrier so there's one for the fallthrough and one for the exception handling path\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}