{"files":[{"patch":"@@ -90,1 +90,1 @@\n-    guarantee(MIN_GC_REGION_ALIGNMENT <= \/*G1*\/G1HeapRegion::min_region_size_in_words() * HeapWordSize, \"must be\");\n+    guarantee(MIN_GC_REGION_ALIGNMENT <= G1HeapRegion::min_region_size_in_words() * HeapWordSize, \"must be\");\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -761,1 +761,1 @@\n-  G1HeapRegion*                 _curr_region;\n+  G1HeapRegion*               _curr_region;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-class G1HeapRegion;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  HeapWord*   _compaction_top;\n+  HeapWord* _compaction_top;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-class G1HeapRegion;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}