{"files":[{"patch":"@@ -123,0 +123,13 @@\n+    \/**\n+     * Adjusts the given {@link TemporalAccessor} using chronology and time-zone from a formatter if present.\n+     * <p>\n+     * This method serves as an optimization front-end that checks for non-null overrides in the formatter.\n+     * If neither chronology nor time-zone is specified in the formatter, returns the original temporal unchanged.\n+     * Otherwise, delegates to the core adjustment method {@link #adjust(TemporalAccessor, Chronology, ZoneId)}.\n+     *\n+     * @param temporal  the temporal object to adjust, not null\n+     * @param formatter the formatter providing potential chronology and time-zone overrides\n+     * @return the adjusted temporal, or the original if no overrides are present in the formatter\n+     * @implNote Optimizes for the common case where formatters don't specify chronology\/time-zone\n+     *           by avoiding unnecessary processing. Most formatters have null for these properties.\n+     *\/\n@@ -136,0 +149,21 @@\n+    \/**\n+     * Adjusts the given {@link TemporalAccessor} with optional overriding chronology and time-zone.\n+     * <p>\n+     * This method minimizes changes by returning the original temporal if the override parameters\n+     * are either {@code null} or equivalent to those already present in the temporal. When overrides\n+     * are applied:\n+     * <ul>\n+     *   <li>If a time-zone override is provided and the temporal supports {@link ChronoField#INSTANT_SECONDS},\n+     *       the result is a zoned date-time using the override time-zone and chronology (defaulting to ISO if not overridden).<\/li>\n+     *   <li>Other cases (including partial date-times or mixed chronology\/time-zone changes) are delegated\n+     *       to a secondary adjustment method.<\/li>\n+     * <\/ul>\n+     *\n+     * @param temporal       the temporal object to adjust, not null\n+     * @param overrideChrono the chronology to override (null retains the original chronology)\n+     * @param overrideZone   the time-zone to override (null retains the original time-zone)\n+     * @return the adjusted temporal, which may be the original object if no effective changes were made,\n+     *         or a new object with the applied overrides\n+     * @implNote Optimizes for common cases where overrides are identical to existing values\n+     *           or where instant-based temporals can be directly converted with a time-zone.\n+     *\/\n@@ -164,0 +198,36 @@\n+    \/**\n+     * Internal helper method to adjust temporal fields using override chronology and time-zone in complex cases.\n+     * <p>\n+     * Handles non-instant temporal objects by creating a delegate {@link TemporalAccessor} that combines:\n+     * <ul>\n+     *   <li>The original temporal's time-related fields<\/li>\n+     *   <li>Date fields converted to the effective chronology (if available)<\/li>\n+     *   <li>Override zone\/chronology information for temporal queries<\/li>\n+     * <\/ul>\n+     *\n+     * Performs critical validation before processing:\n+     * <ul>\n+     *   <li>Rejects offset changes for non-instant temporal objects with existing offsets<\/li>\n+     *   <li>Verifies date field integrity when applying chronology overrides to partial dates<\/li>\n+     * <\/ul>\n+     *\n+     * @param temporal        the original temporal object to adjust, not null\n+     * @param overrideZone    override time-zone (nullable)\n+     * @param temporalZone    original time-zone from temporal (nullable)\n+     * @param overrideChrono  override chronology (nullable)\n+     * @param effectiveChrono precomputed effective chronology (override if present, otherwise temporal's chronology)\n+     * @param temporalChrono  original chronology from temporal (nullable)\n+     * @return adjusted temporal accessor combining original fields with overrides\n+     * @throws DateTimeException if:\n+     *         <ul>\n+     *           <li>Applying a {@link ZoneOffset} override to a temporal with conflicting existing offset that doesn't represent an instant<\/li>\n+     *           <li>Applying chronology override to temporal with partial date fields<\/li>\n+     *         <\/ul>\n+     * @implNote Creates an anonymous temporal accessor that:\n+     *         <ul>\n+     *           <li>Delegates time-based fields to original temporal<\/li>\n+     *           <li>Uses converted date fields when chronology override is applied<\/li>\n+     *           <li>Responds to chronology\/zone queries with effective values<\/li>\n+     *           <li>Preserves precision queries from original temporal<\/li>\n+     *         <\/ul>\n+     *\/\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimePrintContext.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"modified"}]}