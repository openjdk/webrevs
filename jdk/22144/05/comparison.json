{"files":[{"patch":"@@ -280,3 +280,3 @@\n-\n-  if (is_power_of_2(c - 1)) {\n-    __ shift_left(left, exact_log2(c - 1), tmp);\n+  unsigned int u_value = (juint)c;\n+  if (is_power_of_2(u_value - 1)) {\n+    __ shift_left(left, exact_log2(u_value - 1), tmp);\n@@ -285,2 +285,2 @@\n-  } else if (is_power_of_2(c + 1)) {\n-    __ shift_left(left, exact_log2(c + 1), tmp);\n+  } else if (is_power_of_2(u_value + 1)) {\n+    __ shift_left(left, exact_log2(u_value + 1), tmp);\n@@ -289,2 +289,3 @@\n-  } else {\n-    return false;\n+  } else if (u_value == -1) {\n+    __ negate(left, result);\n+    return true;\n@@ -292,0 +293,1 @@\n+  return false;\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRGenerator_aarch64.cpp","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -331,2 +331,3 @@\n-  if (is_power_of_2(c + 1)) {\n-    LIR_Address::Scale scale = (LIR_Address::Scale) log2i_exact(c + 1);\n+  unsigned int u_value = (juint)c;\n+  if (is_power_of_2(u_value + 1)) {\n+    LIR_Address::Scale scale = (LIR_Address::Scale) log2i_exact(u_value + 1);\n@@ -336,2 +337,2 @@\n-  } else if (is_power_of_2(c - 1)) {\n-    LIR_Address::Scale scale = (LIR_Address::Scale) log2i_exact(c - 1);\n+  } else if (is_power_of_2(u_value - 1)) {\n+    LIR_Address::Scale scale = (LIR_Address::Scale) log2i_exact(u_value - 1);\n@@ -341,0 +342,3 @@\n+  } else if (u_value == -1) {\n+    __ negate(left, result);\n+    return true;\n","filename":"src\/hotspot\/cpu\/arm\/c1_LIRGenerator_arm.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -299,2 +299,5 @@\n-  if (is_power_of_2(c + 1)) {\n-    __ shift_left(left, log2i_exact(c + 1), result);\n+  \/\/ Using unsigned arithmetics to avoid undefined behavior due to integer overflow.\n+  \/\/ The involved operations are not sensitive to signedness.\n+  unsigned int u_value = (juint)c;\n+  if (is_power_of_2(u_value + 1)) {\n+    __ shift_left(left, log2i_exact(u_value + 1), result);\n@@ -303,2 +306,2 @@\n-  } else if (is_power_of_2(c - 1)) {\n-    __ shift_left(left, log2i_exact(c - 1), result);\n+  } else if (is_power_of_2(u_value - 1)) {\n+    __ shift_left(left, log2i_exact(u_value - 1), result);\n@@ -307,0 +310,3 @@\n+  } else if (u_value == -1) {\n+    __ negate(left, result);\n+    return true;\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRGenerator_ppc.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -230,0 +230,1 @@\n+  unsigned int u_value = (juint)c;\n@@ -231,1 +232,1 @@\n-    if (is_power_of_2(c + 1)) {\n+    if (is_power_of_2(u_value + 1)) {\n@@ -233,1 +234,1 @@\n-      __ shift_left(left, log2i_exact(c + 1), left);\n+      __ shift_left(left, log2i_exact(u_value + 1), left);\n@@ -236,1 +237,1 @@\n-    } else if (is_power_of_2(c - 1)) {\n+    } else if (is_power_of_2(u_value - 1)) {\n@@ -238,1 +239,1 @@\n-      __ shift_left(left, log2i_exact(c - 1), left);\n+      __ shift_left(left, log2i_exact(u_value - 1), left);\n@@ -243,0 +244,5 @@\n+\n+  if (c == -1) {\n+    __ negate(left, result);\n+    return true;\n+  }\n@@ -499,2 +505,2 @@\n-        int iconst = right_arg->get_jint_constant();\n-        if (is_power_of_2(iconst - 1) || is_power_of_2(iconst + 1)) {\n+        unsigned int u_const = (juint)right_arg->get_jint_constant();\n+        if (is_power_of_2(u_const - 1) || is_power_of_2(u_const + 1)) {\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRGenerator_s390.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"}]}