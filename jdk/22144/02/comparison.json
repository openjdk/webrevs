{"files":[{"patch":"@@ -281,7 +281,12 @@\n-  if (is_power_of_2(c - 1)) {\n-    __ shift_left(left, exact_log2(c - 1), tmp);\n-    __ add(tmp, left, result);\n-    return true;\n-  } else if (is_power_of_2(c + 1)) {\n-    __ shift_left(left, exact_log2(c + 1), tmp);\n-    __ sub(tmp, left, result);\n+  if (c > 0 && c < max_jint) {\n+    if (is_power_of_2(c - 1)) {\n+      __ shift_left(left, exact_log2(c - 1), tmp);\n+      __ add(tmp, left, result);\n+      return true;\n+    } else if (is_power_of_2(c + 1)) {\n+      __ shift_left(left, exact_log2(c + 1), tmp);\n+      __ sub(tmp, left, result);\n+      return true;\n+    }\n+  } else if (c == -1) {\n+    __ negate(left, result);\n@@ -289,2 +294,0 @@\n-  } else {\n-    return false;\n@@ -292,0 +295,1 @@\n+  return false;\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRGenerator_aarch64.cpp","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -331,9 +331,14 @@\n-  if (is_power_of_2(c + 1)) {\n-    LIR_Address::Scale scale = (LIR_Address::Scale) log2i_exact(c + 1);\n-    LIR_Address* addr = new LIR_Address(left, left, scale, 0, T_INT);\n-    __ sub(LIR_OprFact::address(addr), left, result); \/\/ rsb with shifted register\n-    return true;\n-  } else if (is_power_of_2(c - 1)) {\n-    LIR_Address::Scale scale = (LIR_Address::Scale) log2i_exact(c - 1);\n-    LIR_Address* addr = new LIR_Address(left, left, scale, 0, T_INT);\n-    __ add(left, LIR_OprFact::address(addr), result); \/\/ add with shifted register\n+  if (c > 0 && c < max_jint) {\n+    if (is_power_of_2(c + 1)) {\n+      LIR_Address::Scale scale = (LIR_Address::Scale) log2i_exact(c + 1);\n+      LIR_Address *addr = new LIR_Address(left, left, scale, 0, T_INT);\n+      __ sub(LIR_OprFact::address(addr), left, result); \/\/ rsb with shifted register\n+      return true;\n+    } else if (is_power_of_2(c - 1)) {\n+      LIR_Address::Scale scale = (LIR_Address::Scale) log2i_exact(c - 1);\n+      LIR_Address *addr = new LIR_Address(left, left, scale, 0, T_INT);\n+      __ add(left, LIR_OprFact::address(addr), result); \/\/ add with shifted register\n+      return true;\n+    }\n+  } else if(c == -1) {\n+    __ negate(left, result);\n","filename":"src\/hotspot\/cpu\/arm\/c1_LIRGenerator_arm.cpp","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -299,2 +299,4 @@\n-  if (is_power_of_2(c + 1)) {\n-    __ shift_left(left, log2i_exact(c + 1), result);\n+  \/\/ Using unsigned arithmetics to avoid undefined behavior due to integer overflow.\n+  \/\/ The involved operations are not sensitive to signedness.\n+  if (is_power_of_2((juint)c + 1)) {\n+    __ shift_left(left, log2i_exact((juint)c + 1), result);\n@@ -303,2 +305,2 @@\n-  } else if (is_power_of_2(c - 1)) {\n-    __ shift_left(left, log2i_exact(c - 1), result);\n+  } else if (is_power_of_2((juint)c - 1)) {\n+    __ shift_left(left, log2i_exact((juint)c - 1), result);\n@@ -307,0 +309,3 @@\n+  } else if (c == -1) {\n+    __ negate(left, result);\n+    return true;\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRGenerator_ppc.cpp","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-  if (tmp->is_valid()) {\n+  if (c > 0 && c < max_jint && tmp->is_valid()) {\n@@ -242,0 +242,3 @@\n+  } else if(c == -1) {\n+    __ negate(left, result);\n+    return true;\n@@ -500,1 +503,1 @@\n-        if (is_power_of_2(iconst - 1) || is_power_of_2(iconst + 1)) {\n+        if (iconst > 0 && iconst < max_jint && (is_power_of_2(iconst - 1) || is_power_of_2(iconst + 1))) {\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRGenerator_s390.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -272,0 +272,18 @@\n+\n+        if (true) {\n+          x = a;\n+        } else {\n+          x = b;\n+        }\n+\n+        z_bre(ok);\n+        lg(x, b);\n+        z_bru(tmp);\n+        bind(ok);\n+        lg(x,a);\n+        bind(tmp);\n+\n+\n+        z_lochie(a)\n+          (b)\n+\n","filename":"src\/hotspot\/cpu\/s390\/gc\/shared\/barrierSetAssembler_s390.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}