{"files":[{"patch":"@@ -3455,1 +3455,1 @@\n-            lockRunState();\n+            long isShutdown = lockRunState() & SHUTDOWN;\n@@ -3457,1 +3457,1 @@\n-                if ((ds = delayScheduler) == null) {\n+                if (isShutdown == 0L && (ds = delayScheduler) == null) {\n@@ -3465,1 +3465,0 @@\n-                \/\/ exceptions on start passed to (external) callers\n@@ -3467,4 +3466,11 @@\n-                if ((ctr = container) != null)\n-                    ctr.start(ds);\n-                else\n-                    ds.start();\n+                try {\n+                    if ((ctr = container) != null)\n+                        ctr.start(ds);\n+                    else\n+                        ds.start();\n+                } catch (RuntimeException rex) { \/\/ back out\n+                    lockRunState();\n+                    ds = delayScheduler = null;\n+                    unlockRunState();\n+                    tryTerminate(false, false);\n+                }\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -647,0 +647,18 @@\n+    \/**\n+     * schedule throws RejectedExecutionException if shutdown before\n+     * first delayed task is submitted\n+     *\/\n+    public void testInitialScheduleAfterShutdown() throws InterruptedException {\n+        Runnable r = new NoOpRunnable();\n+        boolean rje = false;\n+        try (final ForkJoinPool p = new ForkJoinPool(1)) {\n+            p.shutdown();\n+            assertTrue(p.awaitTermination(LONG_DELAY_MS, MILLISECONDS));\n+            try {\n+                p.schedule(r, 1, MILLISECONDS);\n+            } catch (RejectedExecutionException ok) {\n+                rje = true;\n+            }\n+        }\n+        assertTrue(rje);\n+    }\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/ForkJoinPool20Test.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}