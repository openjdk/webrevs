{"files":[{"patch":"@@ -126,0 +126,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -1938,1 +1939,1 @@\n-                TemporalField field = FIELD_MAP.get(cur);\n+                TemporalField field = FIELD_MAP[cur];\n@@ -2187,1 +2188,2 @@\n-    private static final Map<Character, TemporalField> FIELD_MAP = new HashMap<>();\n+    @Stable\n+    private static final TemporalField[] FIELD_MAP = new TemporalField[128];\n@@ -2190,25 +2192,25 @@\n-        FIELD_MAP.put('G', ChronoField.ERA);                       \/\/ SDF, LDML (different to both for 1\/2 chars)\n-        FIELD_MAP.put('y', ChronoField.YEAR_OF_ERA);               \/\/ SDF, LDML\n-        FIELD_MAP.put('u', ChronoField.YEAR);                      \/\/ LDML (different in SDF)\n-        FIELD_MAP.put('Q', IsoFields.QUARTER_OF_YEAR);             \/\/ LDML (removed quarter from 310)\n-        FIELD_MAP.put('q', IsoFields.QUARTER_OF_YEAR);             \/\/ LDML (stand-alone)\n-        FIELD_MAP.put('M', ChronoField.MONTH_OF_YEAR);             \/\/ SDF, LDML\n-        FIELD_MAP.put('L', ChronoField.MONTH_OF_YEAR);             \/\/ SDF, LDML (stand-alone)\n-        FIELD_MAP.put('D', ChronoField.DAY_OF_YEAR);               \/\/ SDF, LDML\n-        FIELD_MAP.put('d', ChronoField.DAY_OF_MONTH);              \/\/ SDF, LDML\n-        FIELD_MAP.put('F', ChronoField.ALIGNED_WEEK_OF_MONTH);     \/\/ SDF, LDML\n-        FIELD_MAP.put('E', ChronoField.DAY_OF_WEEK);               \/\/ SDF, LDML (different to both for 1\/2 chars)\n-        FIELD_MAP.put('c', ChronoField.DAY_OF_WEEK);               \/\/ LDML (stand-alone)\n-        FIELD_MAP.put('e', ChronoField.DAY_OF_WEEK);               \/\/ LDML (needs localized week number)\n-        FIELD_MAP.put('a', ChronoField.AMPM_OF_DAY);               \/\/ SDF, LDML\n-        FIELD_MAP.put('H', ChronoField.HOUR_OF_DAY);               \/\/ SDF, LDML\n-        FIELD_MAP.put('k', ChronoField.CLOCK_HOUR_OF_DAY);         \/\/ SDF, LDML\n-        FIELD_MAP.put('K', ChronoField.HOUR_OF_AMPM);              \/\/ SDF, LDML\n-        FIELD_MAP.put('h', ChronoField.CLOCK_HOUR_OF_AMPM);        \/\/ SDF, LDML\n-        FIELD_MAP.put('m', ChronoField.MINUTE_OF_HOUR);            \/\/ SDF, LDML\n-        FIELD_MAP.put('s', ChronoField.SECOND_OF_MINUTE);          \/\/ SDF, LDML\n-        FIELD_MAP.put('S', ChronoField.NANO_OF_SECOND);            \/\/ LDML (SDF uses milli-of-second number)\n-        FIELD_MAP.put('A', ChronoField.MILLI_OF_DAY);              \/\/ LDML\n-        FIELD_MAP.put('n', ChronoField.NANO_OF_SECOND);            \/\/ 310 (proposed for LDML)\n-        FIELD_MAP.put('N', ChronoField.NANO_OF_DAY);               \/\/ 310 (proposed for LDML)\n-        FIELD_MAP.put('g', JulianFields.MODIFIED_JULIAN_DAY);\n+        FIELD_MAP['G'] = ChronoField.ERA;                       \/\/ SDF, LDML (different to both for 1\/2 chars)\n+        FIELD_MAP['y'] = ChronoField.YEAR_OF_ERA;               \/\/ SDF, LDML\n+        FIELD_MAP['u'] = ChronoField.YEAR;                      \/\/ LDML (different in SDF)\n+        FIELD_MAP['Q'] = IsoFields.QUARTER_OF_YEAR;             \/\/ LDML (removed quarter from 310)\n+        FIELD_MAP['q'] = IsoFields.QUARTER_OF_YEAR;             \/\/ LDML (stand-alone)\n+        FIELD_MAP['M'] = ChronoField.MONTH_OF_YEAR;             \/\/ SDF, LDML\n+        FIELD_MAP['L'] = ChronoField.MONTH_OF_YEAR;             \/\/ SDF, LDML (stand-alone)\n+        FIELD_MAP['D'] = ChronoField.DAY_OF_YEAR;               \/\/ SDF, LDML\n+        FIELD_MAP['d'] = ChronoField.DAY_OF_MONTH;              \/\/ SDF, LDML\n+        FIELD_MAP['F'] = ChronoField.ALIGNED_WEEK_OF_MONTH;     \/\/ SDF, LDML\n+        FIELD_MAP['E'] = ChronoField.DAY_OF_WEEK;               \/\/ SDF, LDML (different to both for 1\/2 chars)\n+        FIELD_MAP['c'] = ChronoField.DAY_OF_WEEK;               \/\/ LDML (stand-alone)\n+        FIELD_MAP['e'] = ChronoField.DAY_OF_WEEK;               \/\/ LDML (needs localized week number)\n+        FIELD_MAP['a'] = ChronoField.AMPM_OF_DAY;               \/\/ SDF, LDML\n+        FIELD_MAP['H'] = ChronoField.HOUR_OF_DAY;               \/\/ SDF, LDML\n+        FIELD_MAP['k'] = ChronoField.CLOCK_HOUR_OF_DAY;         \/\/ SDF, LDML\n+        FIELD_MAP['K'] = ChronoField.HOUR_OF_AMPM;              \/\/ SDF, LDML\n+        FIELD_MAP['h'] = ChronoField.CLOCK_HOUR_OF_AMPM;        \/\/ SDF, LDML\n+        FIELD_MAP['m'] = ChronoField.MINUTE_OF_HOUR;            \/\/ SDF, LDML\n+        FIELD_MAP['s'] = ChronoField.SECOND_OF_MINUTE;          \/\/ SDF, LDML\n+        FIELD_MAP['S'] = ChronoField.NANO_OF_SECOND;            \/\/ LDML (SDF uses milli-of-second number)\n+        FIELD_MAP['A'] = ChronoField.MILLI_OF_DAY;              \/\/ LDML\n+        FIELD_MAP['n'] = ChronoField.NANO_OF_SECOND;            \/\/ 310 (proposed for LDML)\n+        FIELD_MAP['N'] = ChronoField.NANO_OF_DAY;               \/\/ 310 (proposed for LDML)\n+        FIELD_MAP['g'] = JulianFields.MODIFIED_JULIAN_DAY;\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":29,"deletions":27,"binary":false,"changes":56,"status":"modified"}]}