{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,9 +73,0 @@\n-    \/**\n-     * This checks a given `algorithm' against the list of 'algorithms' from\n-     * the DisabledAlgorithmConstraints or LegacyAlgorithmConstraints.\n-     *\n-     * @param algorithms List of algorithms from the constraints list\n-     * @param algorithm algorithm being checked against list\n-     * @param decomposer class the decomposing names into sub-elements\n-     * @return\n-     *\/\n@@ -88,5 +79,2 @@\n-        \/\/ Check `algorithm` against disabled algorithms\n-        for (String a : algorithms) {\n-            if (algorithm.equalsIgnoreCase(a)) {\n-                return false;\n-            }\n+        if (algorithms.contains(algorithm)) {\n+            return false;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/AbstractAlgorithmConstraints.java","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-        algorithmConstraints = new Constraints(disabledAlgorithms);\n+        algorithmConstraints = new Constraints(propertyName, disabledAlgorithms);\n@@ -338,1 +338,1 @@\n-        public Constraints(Set<String> constraintSet) {\n+        public Constraints(String propertyName, Set<String> constraintSet) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DisabledAlgorithmConstraints.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,2 +41,0 @@\n-import sun.security.pkcs.NamedPKCS8Key;\n-import sun.security.provider.ML_DSA;\n@@ -185,1 +183,1 @@\n-     * KeyPairGenerator, EdDSA means Ed25519.\n+     * KeyPairGenerator, \"EdDSA\" means \"Ed25519\".\n@@ -188,5 +186,5 @@\n-        return switch (key) {\n-            case EdECKey ed -> ed.getParams().getName();\n-            case XECKey xe -> ((NamedParameterSpec) xe.getParams()).getName();\n-            default -> key.getAlgorithm();\n-        };\n+        if (key instanceof AsymmetricKey ak &&\n+            ak.getParams() instanceof NamedParameterSpec nps) {\n+            return nps.getName();\n+        }\n+        return key.getAlgorithm();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KeyUtil.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"}]}