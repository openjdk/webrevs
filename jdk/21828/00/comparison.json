{"files":[{"patch":"@@ -1114,1 +1114,1 @@\n-            checkStack(stackSize + 2);\n+            checkStack(stackSize + 1);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @bug 8305990 8320222 8320618 8335475 8338623 8338661\n+ * @bug 8305990 8320222 8320618 8335475 8338623 8338661 8343436\n@@ -347,0 +347,18 @@\n+    @ParameterizedTest\n+    @EnumSource(ClassFile.StackMapsOption.class)\n+    void testI2LCounters(ClassFile.StackMapsOption option) {\n+        var cf = ClassFile.of(option);\n+        var bytes = cf.build(ClassDesc.of(\"Test\"), clb -> clb\n+            .withMethodBody(\"a\", MTD_long_int, ACC_STATIC, cob ->\n+                    cob.iload(0)\n+                       .i2l()\n+                       .lreturn()));\n+\n+        var cm = ClassFile.of().parse(bytes);\n+        for (var method : cm.methods()) {\n+            var code = (CodeAttribute) method.code().orElseThrow();\n+            assertEquals(1, code.maxLocals());\n+            assertEquals(2, code.maxStack());\n+        }\n+    }\n+\n@@ -349,0 +367,1 @@\n+    private static final MethodTypeDesc MTD_long_int = MethodTypeDesc.of(CD_long, CD_int);\n","filename":"test\/jdk\/jdk\/classfile\/StackMapsTest.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"}]}