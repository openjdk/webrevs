{"files":[{"patch":"@@ -28,1 +28,0 @@\n-#include \"opto\/cfgnode.hpp\"\n","filename":"src\/hotspot\/cpu\/x86\/c2_intelJccErratum_x86.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-#include \"compiler\/compilerDirectives.hpp\"\n-#include \"memory\/resourceArea.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_Compilation.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"asm\/macroAssembler.hpp\"\n@@ -34,1 +33,0 @@\n-#include \"runtime\/synchronizer.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_FrameMap.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-#include \"oops\/oop.inline.hpp\"\n@@ -46,2 +45,0 @@\n-#include \"runtime\/vm_version.hpp\"\n-#include \"utilities\/bitMap.inline.hpp\"\n@@ -49,1 +46,0 @@\n-#include \"utilities\/powerOfTwo.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-#include \"ci\/ciMethod.hpp\"\n-#include \"ci\/ciStreams.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_IR.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-#include \"ci\/ciInstance.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_LIRAssembler.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"ci\/ciMethodData.hpp\"\n@@ -33,1 +32,0 @@\n-#include \"jfr\/support\/jfrIntrinsics.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#include \"c1\/c1_Canonicalizer.hpp\"\n@@ -28,1 +27,0 @@\n-#include \"c1\/c1_ValueMap.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_Optimizer.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-#include \"c1\/c1_Canonicalizer.hpp\"\n-#include \"c1\/c1_ValueMap.hpp\"\n@@ -33,1 +31,0 @@\n-#ifdef ASSERT\n@@ -35,1 +32,0 @@\n-#endif\n","filename":"src\/hotspot\/share\/c1\/c1_RangeCheckElimination.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"c1\/c1_FrameMap.hpp\"\n@@ -38,1 +37,0 @@\n-#include \"code\/pcDesc.hpp\"\n@@ -51,1 +49,0 @@\n-#include \"memory\/allocation.inline.hpp\"\n@@ -56,1 +53,0 @@\n-#include \"oops\/klass.inline.hpp\"\n@@ -70,1 +66,0 @@\n-#include \"runtime\/threadCritical.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#include \"runtime\/deoptimization.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#include \"c1\/c1_Canonicalizer.hpp\"\n@@ -31,0 +30,1 @@\n+#include \"utilities\/bitMap.inline.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_ValueMap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"memory\/allocation.hpp\"\n@@ -31,1 +30,0 @@\n-#include \"utilities\/bitMap.inline.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_ValueSet.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-#include \"ci\/ciConstant.hpp\"\n-#include \"ci\/ciMethodData.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_ValueType.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-#include \"opto\/node.hpp\"\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,3 @@\n+#ifdef COMPILER2\n+#include \"opto\/c2_globals.hpp\"\n+#endif\n@@ -34,1 +37,0 @@\n-#include \"utilities\/xmlstream.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"opto\/c2_MacroAssembler.hpp\"\n","filename":"src\/hotspot\/share\/code\/compiledIC.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,3 +43,0 @@\n-#ifdef COMPILER2\n-#include \"opto\/matcher.hpp\"\n-#endif\n","filename":"src\/hotspot\/share\/code\/vtableStubs.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-\n@@ -37,1 +36,0 @@\n-#include \"compiler\/compilerDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/compiler\/compilerDefinitions.inline.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"ci\/ciMetadata.hpp\"\n@@ -31,1 +30,0 @@\n-#include \"compiler\/compiler_globals.hpp\"\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,3 +80,0 @@\n-#ifdef COMPILER2\n-#include \"opto\/runtime.hpp\"\n-#endif\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,6 @@\n-#include \"opto\/output.hpp\"\n+\n+\/\/ Define the initial sizes for allocation of the resizable code buffer\n+enum {\n+  initial_const_capacity =   4 * 1024\n+};\n+\n","filename":"src\/hotspot\/share\/opto\/c2compiler.hpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -949,4 +949,1 @@\n-  Node_Notes*       node_notes_at(int idx) {\n-    return locate_node_notes(_node_note_array, idx, false);\n-  }\n-  inline bool   set_node_notes_at(int idx, Node_Notes* value);\n+  Node_Notes*       node_notes_at(int idx);\n@@ -954,0 +951,1 @@\n+  inline bool   set_node_notes_at(int idx, Node_Notes* value);\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+#include \"opto\/vectornode.hpp\"\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-#include \"opto\/multnode.hpp\"\n-#include \"opto\/node.hpp\"\n@@ -32,1 +30,0 @@\n-#include \"opto\/type.hpp\"\n","filename":"src\/hotspot\/share\/opto\/mathexactnode.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2003,0 +2003,4 @@\n+inline Node_Notes* Compile::node_notes_at(int idx) {\n+  return locate_node_notes(_node_note_array, idx, false);\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#include \"asm\/macroAssembler.inline.hpp\"\n@@ -37,1 +36,0 @@\n-#include \"memory\/allocation.inline.hpp\"\n@@ -51,2 +49,0 @@\n-#include \"opto\/runtime.hpp\"\n-#include \"opto\/subnode.hpp\"\n@@ -54,1 +50,0 @@\n-#include \"runtime\/handles.inline.hpp\"\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -57,5 +57,0 @@\n-\/\/ Define the initial sizes for allocation of the resizable code buffer\n-enum {\n-  initial_const_capacity =   4 * 1024\n-};\n-\n","filename":"src\/hotspot\/share\/opto\/output.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-#include \"opto\/type.hpp\"\n-#include \"runtime\/deoptimization.hpp\"\n","filename":"src\/hotspot\/share\/opto\/runtime.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,3 +46,0 @@\n-#ifdef COMPILER2\n-#include \"opto\/runtime.hpp\"\n-#endif\n","filename":"src\/hotspot\/share\/runtime\/vframeArray.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -48,4 +48,0 @@\n-#ifdef COMPILER2\n-#include \"opto\/matcher.hpp\"\n-#endif\n-\n","filename":"src\/hotspot\/share\/runtime\/vframe_hp.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}