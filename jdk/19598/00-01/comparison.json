{"files":[{"patch":"@@ -91,1 +91,1 @@\n-                    if (bootstrapMethod.type() == CONDY_GET_STATIC_FINAL_MT) {\n+                    if (bootstrapMethod.type() == CONDY_NO_ARG) {\n@@ -109,0 +109,4 @@\n+                } else if (bootstrapMethod.type() == CONDY_INVOKE) {\n+                    result = (CallSite)bootstrapMethod\n+                            .invokeExact(caller, name, (Class<?>)type,\n+                                    (MethodHandle)info, new Object[0]);\n@@ -112,1 +116,1 @@\n-                        if (bootstrapMethod.type() == CONDY_GET_STATIC_FINAL_CLASS_MT) {\n+                        if (bootstrapMethod.type() == CONDY_EXTRA_CLASS) {\n@@ -145,2 +149,5 @@\n-                } else if (argv.length >= 1 && bsmType == SCF_MT) {\n-                    String recipe = (String)argv[0];\n+                } else if (bsmType == SCF_MT) {\n+                    Object[] shiftedArgs = Arrays.copyOfRange(argv, 1, argv.length);\n+                    maybeReBoxElements(shiftedArgs);\n+                    result = (CallSite)bootstrapMethod.invokeExact(caller, name, (MethodType)type, (String)argv[0], shiftedArgs);\n+                } else if (bsmType == CONDY_INVOKE) {\n@@ -149,1 +156,1 @@\n-                    result = (CallSite)bootstrapMethod.invokeExact(caller, name, (MethodType)type, recipe, shiftedArgs);\n+                    result = (Object)bootstrapMethod.invokeExact(caller, name, (Class<?>)type, (MethodHandle)argv[0], shiftedArgs);\n@@ -158,1 +165,1 @@\n-                } else if (bsmType == CONDY_GET_STATIC_FINAL_MT) {\n+                } else if (bsmType == CONDY_NO_ARG) {\n@@ -160,1 +167,1 @@\n-                } else if (bsmType == CONDY_GET_STATIC_FINAL_CLASS_MT) {\n+                } else if (bsmType == CONDY_EXTRA_CLASS) {\n@@ -178,1 +185,1 @@\n-                            case 0 -> bootstrapMethod.invoke(caller, name, mt);\n+                            case 0 -> bootstrapMethod.invokeBasic(caller, name, mt);\n@@ -286,1 +293,2 @@\n-     * Exact type used of the {@link java.lang.invoke.ConstantBootstraps#getStaticFinal(Lookup, String, Class)}\n+     * Exact type of for example\n+     * {@link java.lang.invoke.ConstantBootstraps#getStaticFinal(Lookup, String, Class)}\n@@ -289,1 +297,1 @@\n-    private static final MethodType CONDY_GET_STATIC_FINAL_MT = MethodType.methodType(Object.class,\n+    private static final MethodType CONDY_NO_ARG = MethodType.methodType(Object.class,\n@@ -293,1 +301,2 @@\n-     * Exact type of the {@link java.lang.invoke.ConstantBootstraps#getStaticFinal(Lookup, String, Class, Class)}\n+     * Exact type of for example the\n+     * {@link java.lang.invoke.ConstantBootstraps#getStaticFinal(Lookup, String, Class, Class)}\n@@ -296,1 +305,1 @@\n-    private static final MethodType CONDY_GET_STATIC_FINAL_CLASS_MT = MethodType.methodType(Object.class,\n+    private static final MethodType CONDY_EXTRA_CLASS = MethodType.methodType(Object.class,\n@@ -299,0 +308,8 @@\n+    \/**\n+     * Exact type of the\n+     * {@link java.lang.invoke.ConstantBootstraps#invoke(Lookup, String, Class, MethodHandle, Object...)}\n+     * bootstrap method.\n+     *\/\n+    private static final MethodType CONDY_INVOKE = MethodType.methodType(Object.class,\n+            Lookup.class, String.class, Class.class, MethodHandle.class, Object[].class);\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/BootstrapMethodInvoker.java","additions":29,"deletions":12,"binary":false,"changes":41,"status":"modified"}]}