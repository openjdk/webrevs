{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -639,1 +639,1 @@\n-                return entry.getAlias();\n+                return mapEntry.getKey();\n","filename":"src\/jdk.crypto.mscapi\/windows\/classes\/sun\/security\/mscapi\/CKeyStore.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+import jdk.test.lib.Asserts;\n+import sun.security.tools.keytool.CertAndKeyGen;\n+import sun.security.x509.X500Name;\n+\n+import java.security.KeyStore;\n+import java.security.MessageDigest;\n+import java.security.cert.X509Certificate;\n+import java.util.HexFormat;\n+\n+\/**\n+ * @test\n+ * @bug 8187634\n+ * @requires os.family == \"windows\"\n+ * @library \/test\/lib\n+ * @modules java.base\/sun.security.tools.keytool\n+ *          java.base\/sun.security.x509\n+ * @summary getCertificateAlias should return correct alias\n+ *\/\n+public class DupAlias {\n+    public static void main(String[] args) throws Exception {\n+\n+        String nn = \"8187634\";\n+        String na = nn + \"a\";\n+        String nb = nn + \"b\";\n+        String n1 = nn + \" (1)\";\n+\n+        CertAndKeyGen g = new CertAndKeyGen(\"EC\", \"SHA256withECDSA\");\n+        g.generate(-1);\n+        X509Certificate a = g.getSelfCertificate(new X500Name(\"CN=\" + na), 1000);\n+        g.generate(-1);\n+        X509Certificate b = g.getSelfCertificate(new X500Name(\"CN=\" + nb), 1000);\n+\n+        KeyStore ks = KeyStore.getInstance(\"Windows-MY-CURRENTUSER\");\n+        try {\n+            ks.load(null, null);\n+            ks.deleteEntry(na);\n+            ks.deleteEntry(nb);\n+            ks.deleteEntry(nn);\n+            ks.deleteEntry(n1);\n+            ks.setCertificateEntry(na, a);\n+            ks.setCertificateEntry(nb, b);\n+\n+            ps(String.format(\"\"\"\n+                    $cert = Get-Item Cert:\/CurrentUser\/My\/%s;\n+                    $cert.FriendlyName = %s;\n+                    $cert = Get-Item Cert:\/CurrentUser\/My\/%s;\n+                    $cert.FriendlyName = %s;\n+                    \"\"\", thumbprint(a), nn, thumbprint(b), nn));\n+\n+            ks.load(null, null);\n+            Asserts.assertFalse(ks.containsAlias(na));\n+            Asserts.assertFalse(ks.containsAlias(nb));\n+            Asserts.assertEquals(ks.getCertificateAlias(ks.getCertificate(nn)), nn);\n+            Asserts.assertEquals(ks.getCertificateAlias(ks.getCertificate(n1)), n1);\n+        } finally {\n+            ks.deleteEntry(na);\n+            ks.deleteEntry(nb);\n+            ks.deleteEntry(nn);\n+            ks.deleteEntry(n1);\n+        }\n+    }\n+\n+    static void ps(String f) throws Exception {\n+        ProcessBuilder pb = new ProcessBuilder(\"powershell\", \"-Command\", f);\n+        pb.inheritIO();\n+        if (pb.start().waitFor() != 0) {\n+            throw new RuntimeException(\"Failed\");\n+        }\n+    }\n+\n+    static String thumbprint(X509Certificate c) throws Exception {\n+        return HexFormat.of().formatHex(\n+                MessageDigest.getInstance(\"SHA-1\").digest(c.getEncoded()));\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/mscapi\/DupAlias.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"}]}