{"files":[{"patch":"@@ -420,2 +420,2 @@\n-         * @throws IllegalArgumentException if the resulting array type exceeds\n-         *         255 dimensions\n+         * @throws IllegalArgumentException if {@code dims < 1} or the\n+         *         resulting array type exceeds 255 dimensions\n@@ -425,0 +425,5 @@\n+            if (componentSignature instanceof SignaturesImpl.ArrayTypeSigImpl arr) {\n+                if (dims < 1 || dims > 255 - arr.arrayDepth())\n+                    throw new IllegalArgumentException(\"illegal array depth value\");\n+                return new SignaturesImpl.ArrayTypeSigImpl(dims + arr.arrayDepth(), arr.elemType());\n+            }\n@@ -427,2 +432,0 @@\n-            if (componentSignature instanceof SignaturesImpl.ArrayTypeSigImpl arr)\n-                return new SignaturesImpl.ArrayTypeSigImpl(dims + arr.arrayDepth(), arr.elemType());\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/Signature.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @bug 8321540 8319463\n+ * @bug 8321540 8319463 8357955\n@@ -303,0 +303,14 @@\n+    @Test\n+    void testArraySignatureLimits() {\n+        var sig = Signature.parseFrom(\"I\");\n+        var arrSig = Signature.parseFrom(\"[I\");\n+        for (int dim : List.of(256, -1, 0))\n+            Assertions.assertThrows(IllegalArgumentException.class, () -> Signature.ArrayTypeSig.of(dim, sig));\n+        for (int dim : List.of(255, -1, 0))\n+            Assertions.assertThrows(IllegalArgumentException.class, () -> Signature.ArrayTypeSig.of(dim, arrSig));\n+        for (int dim : List.of(255, 1))\n+            Signature.ArrayTypeSig.of(dim, sig);\n+        for (int dim : List.of(254, 1))\n+            Signature.ArrayTypeSig.of(dim, arrSig);\n+    }\n+\n","filename":"test\/jdk\/jdk\/classfile\/SignaturesTest.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"}]}