{"files":[{"patch":"@@ -157,1 +157,1 @@\n-  \/\/ above runtime checks that guarantee it is withing bounds.\n+  \/\/ above runtime checks that guarantee it is within bounds.\n","filename":"src\/hotspot\/share\/opto\/arraycopynode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1670,2 +1670,2 @@\n-        Node* x = n;\n-        Node* c = place_outside_loop(n_ctrl, loop_ctrl);\n+        Node* maybe_pinned_n = n;\n+        Node* outside_ctrl = place_outside_loop(n_ctrl, loop_ctrl);\n@@ -1673,2 +1673,2 @@\n-          Node* clone = n->pin_array_access_node();\n-          if (clone != nullptr) {\n+          Node* pinned_clone = n->pin_array_access_node();\n+          if (pinned_clone != nullptr) {\n@@ -1678,2 +1678,2 @@\n-            register_new_node(clone, c);\n-            x = clone;\n+            register_new_node(pinned_clone, outside_ctrl);\n+            maybe_pinned_n = pinned_clone;\n@@ -1682,1 +1682,1 @@\n-        _igvn.replace_input_of(x, 0, c);\n+        _igvn.replace_input_of(maybe_pinned_n, 0, outside_ctrl);\n@@ -2257,2 +2257,2 @@\n-        Node* clone = use->pin_array_access_node();\n-        if (clone != nullptr) {\n+        Node* pinned_clone = use->pin_array_access_node();\n+        if (pinned_clone != nullptr) {\n@@ -2263,3 +2263,3 @@\n-          clone->set_req(0, phi);\n-          register_new_node(clone, get_ctrl(use));\n-          _igvn.replace_node( use, clone);\n+          pinned_clone->set_req(0, phi);\n+          register_new_node(pinned_clone, get_ctrl(use));\n+          _igvn.replace_node(use, pinned_clone);\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -735,2 +735,2 @@\n-    pin_array_access_nodes(new_true);\n-    pin_array_access_nodes(new_false);\n+    pin_array_access_nodes_dependent_on(new_true);\n+    pin_array_access_nodes_dependent_on(new_false);\n@@ -749,1 +749,1 @@\n-void PhaseIdealLoop::pin_array_access_nodes(Node* ctrl) {\n+void PhaseIdealLoop::pin_array_access_nodes_dependent_on(Node* ctrl) {\n@@ -751,2 +751,2 @@\n-    Node* u = ctrl->out(i);\n-    if (!u->depends_only_on_test()) {\n+    Node* use = ctrl->out(i);\n+    if (!use->depends_only_on_test()) {\n@@ -755,4 +755,4 @@\n-    Node* clone = u->pin_array_access_node();\n-    if (clone != nullptr) {\n-      register_new_node(clone, get_ctrl(u));\n-      _igvn.replace_node(u, clone);\n+    Node* pinned_clone = use->pin_array_access_node();\n+    if (pinned_clone != nullptr) {\n+      register_new_node(pinned_clone, get_ctrl(use));\n+      _igvn.replace_node(use, pinned_clone);\n","filename":"src\/hotspot\/share\/opto\/split_if.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}