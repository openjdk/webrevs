{"files":[{"patch":"@@ -847,1 +847,0 @@\n-        verifyImageIndex(imageIndex);\n@@ -849,0 +848,1 @@\n+        verifyImageIndex(imageIndex);\n@@ -862,1 +862,0 @@\n-        verifyImageIndex(imageIndex);\n@@ -864,0 +863,1 @@\n+        verifyImageIndex(imageIndex);\n@@ -893,1 +893,0 @@\n-        verifyImageIndex(imageIndex);\n@@ -895,0 +894,1 @@\n+        verifyImageIndex(imageIndex);\n@@ -912,1 +912,0 @@\n-        verifyImageIndex(imageIndex);\n@@ -914,0 +913,1 @@\n+        verifyImageIndex(imageIndex);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/jpeg\/JPEGImageReader.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -34,1 +34,0 @@\n-import java.util.Objects;\n@@ -38,1 +37,0 @@\n-import javax.imageio.ImageTypeSpecifier;\n@@ -42,1 +40,28 @@\n-    static boolean passed;\n+    private static boolean failed;\n+\n+    private static void checkException(boolean exceptionReceived,\n+                                       String testName) {\n+        if (!exceptionReceived) {\n+            System.out.println(\"Didn't receive IndexOutOfBoundsException for \"\n+                + testName);\n+            failed = true;\n+        }\n+    }\n+\n+    private static void testMethod(String methodName,\n+                                   RunnableWithException method) {\n+        boolean exceptionReceived = false;\n+        System.out.println(\"Testing \" + methodName);\n+        try {\n+            method.run();\n+        } catch (Exception e) {\n+            if (e instanceof IndexOutOfBoundsException) {\n+                exceptionReceived = true;\n+            }\n+        }\n+        checkException(exceptionReceived, methodName);\n+    }\n+\n+    private interface RunnableWithException {\n+        void run() throws Exception;\n+    }\n@@ -52,15 +77,9 @@\n-        try {\n-            \/\/ Iterate through all functions where we don't have sufficient\n-            \/\/ checks for -1 index\n-            Iterator<ImageTypeSpecifier> types = ir.getImageTypes(-1);\n-            int width = ir.getWidth(-1);\n-            int height = ir.getHeight(-1);\n-            ImageTypeSpecifier specifier = ir.getRawImageType(-1);\n-        } catch (IndexOutOfBoundsException e) {\n-            if (Objects.equals(e.getMessage(), \"imageIndex < 0\")) {\n-                passed = true;\n-            }\n-        }\n-        if (!passed) {\n-            throw new RuntimeException(\"JpegImageReader didn't throw required\"\n-                + \" IndexOutOfBoundsException for -1 image index\");\n+\n+        testMethod(\"getImageTypes()\", () -> ir.getImageTypes(-1));\n+        testMethod(\"getWidth()\", () -> ir.getWidth(-1));\n+        testMethod(\"getHeight()\", () -> ir.getHeight(-1));\n+        testMethod(\"getRawImageType()\", () -> ir.getRawImageType(-1));\n+\n+        if (failed) {\n+            throw new RuntimeException(\"JpegImageReader didn't throw required\" +\n+                \" IndexOutOfBoundsException for -1 image index\");\n","filename":"test\/jdk\/javax\/imageio\/plugins\/jpeg\/JpegNegativeImageIndexTest.java","additions":38,"deletions":19,"binary":false,"changes":57,"status":"modified"}]}