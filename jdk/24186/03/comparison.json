{"files":[{"patch":"@@ -539,3 +539,2 @@\n-# First bug for AIX, second for Windows\n-com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuLoad.java 8030957,8351002 aix-all,windows-all\n-com\/sun\/management\/OperatingSystemMXBean\/GetSystemCpuLoad.java  8030957,8351002 aix-all,windows-all\n+com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuLoad.java 8030957 aix-all\n+com\/sun\/management\/OperatingSystemMXBean\/GetSystemCpuLoad.java  8030957 aix-all\n","filename":"test\/jdk\/ProblemList.txt","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- *\n+ * @library \/test\/lib\n@@ -32,1 +32,0 @@\n-import java.lang.management.*;\n@@ -34,0 +33,2 @@\n+import java.lang.management.*;\n+import jdk.test.lib.Platform;\n@@ -39,0 +40,2 @@\n+\n+        Exception ex = null;\n@@ -40,1 +43,2 @@\n-        for(int i=0; i<10; i++) {\n+\n+        for(int i = 0; i < 10; i++) {\n@@ -42,1 +46,6 @@\n-            if(load<0.0 || load>1.0) {\n+            if (load == -1.0 && Platform.isWindows()) {\n+                \/\/ Some Windows 2019 systems can return -1 for the first few reads.\n+                \/\/ Remember a -1 in case it never gets better.\n+                ex = new RuntimeException(\"getProcessCpuLoad() returns \" + load\n+                     + \" which is not in the [0.0,1.0] interval\");\n+            } else if (load < 0.0 || load > 1.0) {\n@@ -44,1 +53,4 @@\n-                       +   \" which is not in the [0.0,1.0] interval\");\n+                          + \" which is not in the [0.0,1.0] interval\");\n+            } else {\n+                \/\/ A good reading: forget any previous -1.\n+                ex = null;\n@@ -52,0 +64,4 @@\n+\n+        if (ex != null) {\n+            throw ex;\n+        }\n","filename":"test\/jdk\/com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuLoad.java","additions":21,"deletions":5,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+ * @library \/test\/lib\n@@ -48,0 +49,1 @@\n+import jdk.test.lib.Platform;\n@@ -58,3 +60,1 @@\n-    private static final long MAX_TIME_FOR_PASS = Long.MAX_VALUE;\n-\n-    \/\/ No max time.\n+    private static final long MAX_TIME_FOR_PASS = Long.MAX_VALUE \/ 10_000_000;\n@@ -77,0 +77,14 @@\n+        if (ns == -1 && Platform.isWindows()) {\n+            \/\/ Some Windows 2019 systems can return -1 for the first few reads.\n+            for (int i = 0; i < 10; i++) {\n+                ns = mbean.getProcessCpuTime();\n+                if (ns != -1) {\n+                    break;\n+                }\n+                try {\n+                    Thread.sleep(200);\n+                } catch (InterruptedException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n@@ -78,2 +92,1 @@\n-            System.out.println(\"getProcessCpuTime() is not supported\");\n-            return;\n+            throw new RuntimeException(\"getProcessCpuTime() is not supported\");\n","filename":"test\/jdk\/com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuTime.java","additions":19,"deletions":6,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -27,2 +27,2 @@\n- * @summary Basic unit test of OperatingSystemMXBean.getSystemCpuLoad()\n- *\n+ * @summary Basic unit test of OperatingSystemMXBean.getProcessCpuLoad()\n+ * @library \/test\/lib\n@@ -32,1 +32,0 @@\n-import java.lang.management.*;\n@@ -34,0 +33,2 @@\n+import java.lang.management.*;\n+import jdk.test.lib.Platform;\n@@ -39,0 +40,2 @@\n+\n+        Exception ex = null;\n@@ -40,1 +43,2 @@\n-        for(int i=0; i<10; i++) {\n+\n+        for (int i = 0; i < 10; i++) {\n@@ -42,1 +46,7 @@\n-            if(load<0.0 || load>1.0) {\n+            if (load == -1.0 && Platform.isWindows()) {\n+                \/\/ Some Windows 2019 systems can return -1 for the first few reads.\n+                \/\/ Remember a -1 in case it never gets better.\n+                ex = new RuntimeException(\"getSystemCpuLoad() returns \" + load\n+                         + \" which is not in the [0.0,1.0] interval\");\n+\n+            } else if (load < 0.0 || load > 1.0) {\n@@ -44,1 +54,4 @@\n-                       +  \" which is not in the [0.0,1.0] interval\");\n+                           + \" which is not in the [0.0,1.0] interval\");\n+            } else {\n+                \/\/ A good reading: forget any previous -1.\n+                ex = null;\n@@ -52,0 +65,4 @@\n+\n+        if (ex != null) {\n+            throw ex;\n+        }\n","filename":"test\/jdk\/com\/sun\/management\/OperatingSystemMXBean\/GetSystemCpuLoad.java","additions":23,"deletions":6,"binary":false,"changes":29,"status":"modified"}]}