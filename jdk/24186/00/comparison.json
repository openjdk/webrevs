{"files":[{"patch":"@@ -539,3 +539,2 @@\n-# First bug for AIX, second for Windows\n-com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuLoad.java 8030957,8351002 aix-all,windows-all\n-com\/sun\/management\/OperatingSystemMXBean\/GetSystemCpuLoad.java  8030957,8351002 aix-all,windows-all\n+com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuLoad.java 8030957 aix-all\n+com\/sun\/management\/OperatingSystemMXBean\/GetSystemCpuLoad.java  8030957 aix-all\n","filename":"test\/jdk\/ProblemList.txt","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+\n+        Exception ex = null;\n@@ -40,1 +42,2 @@\n-        for(int i=0; i<10; i++) {\n+\n+        for(int i = 0; i < 10; i++) {\n@@ -42,1 +45,6 @@\n-            if(load<0.0 || load>1.0) {\n+            if (load == -1.0) {\n+                \/\/ Some Windows 2019 systems can return -1 for the first few reads.\n+                \/\/ Remember a -1 in case it never gets better.\n+                ex = new RuntimeException(\"getProcessCpuLoad() returns \" + load\n+                     + \" which is not in the [0.0,1.0] interval\");\n+            } else if (load < 0.0 || load > 1.0) {\n@@ -44,1 +52,4 @@\n-                       +   \" which is not in the [0.0,1.0] interval\");\n+                          + \" which is not in the [0.0,1.0] interval\");\n+            } else {\n+                \/\/ A good reading: forget any previous -1.\n+                ex = null;\n@@ -52,0 +63,4 @@\n+\n+        if (ex != null) {\n+            throw ex;\n+        }\n","filename":"test\/jdk\/com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuLoad.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    private static final long MAX_TIME_FOR_PASS = Long.MAX_VALUE;\n+    private static final long MAX_TIME_FOR_PASS = Long.MAX_VALUE \/ 1000;\n@@ -76,1 +76,14 @@\n-        long ns = mbean.getProcessCpuTime();\n+        long ns = 0;\n+        \/\/ Do not skip test if first read is -1:\n+        \/\/ Some Windows 2019 systems can return -1 for the first few reads.\n+        for (int i = 0; i < 10; i++) {\n+            ns = mbean.getProcessCpuTime();\n+            if (ns != -1) {\n+                break;\n+            }\n+            try {\n+                Thread.sleep(200);\n+            } catch(InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n@@ -78,2 +91,1 @@\n-            System.out.println(\"getProcessCpuTime() is not supported\");\n-            return;\n+            throw new RuntimeException(\"getProcessCpuTime() is not supported\");\n","filename":"test\/jdk\/com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuTime.java","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @summary Basic unit test of OperatingSystemMXBean.getSystemCpuLoad()\n+ * @summary Basic unit test of OperatingSystemMXBean.getProcessCpuLoad()\n@@ -39,0 +39,2 @@\n+\n+        Exception ex = null;\n@@ -40,1 +42,2 @@\n-        for(int i=0; i<10; i++) {\n+\n+        for(int i = 0; i < 10; i++) {\n@@ -42,1 +45,7 @@\n-            if(load<0.0 || load>1.0) {\n+            if (load == -1.0) {\n+                \/\/ Some Windows 2019 systems can return -1 for the first few reads.\n+                \/\/ Remember a -1 in case it never gets better.\n+                ex = new RuntimeException(\"getSystemCpuLoad() returns \" + load\n+                         +  \" which is not in the [0.0,1.0] interval\");\n+\n+            } else if (load < 0.0 || load > 1.0) {\n@@ -44,1 +53,4 @@\n-                       +  \" which is not in the [0.0,1.0] interval\");\n+                           +  \" which is not in the [0.0,1.0] interval\");\n+            } else {\n+                \/\/ A good reading: forget any previous -1.\n+                ex = null;\n@@ -52,0 +64,4 @@\n+\n+        if (ex != null) {\n+            throw ex;\n+        }\n","filename":"test\/jdk\/com\/sun\/management\/OperatingSystemMXBean\/GetSystemCpuLoad.java","additions":20,"deletions":4,"binary":false,"changes":24,"status":"modified"}]}