{"files":[{"patch":"@@ -28,1 +28,1 @@\n- *\n+ * @library \/test\/lib\n@@ -32,1 +32,0 @@\n-import java.lang.management.*;\n@@ -34,0 +33,2 @@\n+import java.lang.management.*;\n+import jdk.test.lib.Platform;\n@@ -45,1 +46,1 @@\n-            if (load == -1.0) {\n+            if (load == -1.0 && Platform.isWindows()) {\n","filename":"test\/jdk\/com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuLoad.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @library \/test\/lib\n@@ -48,0 +49,1 @@\n+import jdk.test.lib.Platform;\n@@ -76,12 +78,13 @@\n-        long ns = 0;\n-        \/\/ Do not skip test if first read is -1:\n-        \/\/ Some Windows 2019 systems can return -1 for the first few reads.\n-        for (int i = 0; i < 10; i++) {\n-            ns = mbean.getProcessCpuTime();\n-            if (ns != -1) {\n-                break;\n-            }\n-            try {\n-                Thread.sleep(200);\n-            } catch(InterruptedException e) {\n-                e.printStackTrace();\n+        long ns = mbean.getProcessCpuTime();\n+        if (ns == -1 && Platform.isWindows()) {\n+            \/\/ Some Windows 2019 systems can return -1 for the first few reads.\n+            for (int i = 0; i < 10; i++) {\n+                ns = mbean.getProcessCpuTime();\n+                if (ns != -1) {\n+                    break;\n+                }\n+                try {\n+                    Thread.sleep(200);\n+                } catch (InterruptedException e) {\n+                    e.printStackTrace();\n+                }\n","filename":"test\/jdk\/com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuTime.java","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- *\n+ * @library \/test\/lib\n@@ -32,1 +32,0 @@\n-import java.lang.management.*;\n@@ -34,0 +33,2 @@\n+import java.lang.management.*;\n+import jdk.test.lib.Platform;\n@@ -45,1 +46,1 @@\n-            if (load == -1.0) {\n+            if (load == -1.0 && Platform.isWindows()) {\n","filename":"test\/jdk\/com\/sun\/management\/OperatingSystemMXBean\/GetSystemCpuLoad.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}