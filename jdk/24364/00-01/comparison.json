{"files":[{"patch":"@@ -114,0 +114,1 @@\n+            throw new RuntimeException(ble);\n@@ -117,3 +118,1 @@\n-}\n-\n-class PaintLabel extends JLabel {\n+    static class PaintLabel extends JLabel {\n@@ -121,3 +120,3 @@\n-    private int pref = 40;\n-    private int min = pref - 30;\n-    private int max = pref + 30;\n+        private int pref = 40;\n+        private int min = pref - 30;\n+        private int max = pref + 30;\n@@ -125,1 +124,1 @@\n-    public PaintLabel(float align) {\n+        public PaintLabel(float align) {\n@@ -127,2 +126,2 @@\n-        setAlignmentY(align);\n-        String alignStr = String.valueOf(align);\n+            setAlignmentY(align);\n+            String alignStr = String.valueOf(align);\n@@ -130,4 +129,4 @@\n-        setText(\"align = \" + alignStr);\n-        setOpaque(true);\n-        setBackground(Color.PINK);\n-    }\n+            setText(\"align = \" + alignStr);\n+            setOpaque(true);\n+            setBackground(Color.PINK);\n+        }\n@@ -135,3 +134,3 @@\n-    public Dimension getMinimumSize() {\n-        return new Dimension(super.getMinimumSize().width, min);\n-    }\n+        public Dimension getMinimumSize() {\n+            return new Dimension(super.getMinimumSize().width, min);\n+        }\n@@ -139,3 +138,3 @@\n-    public Dimension getPreferredSize() {\n-        return new Dimension(super.getPreferredSize().width, pref);\n-    }\n+        public Dimension getPreferredSize() {\n+            return new Dimension(super.getPreferredSize().width, pref);\n+        }\n@@ -143,3 +142,3 @@\n-    public Dimension getMaximumSize() {\n-        return new Dimension(super.getMaximumSize().width, max);\n-    }\n+        public Dimension getMaximumSize() {\n+            return new Dimension(super.getMaximumSize().width, max);\n+        }\n@@ -147,7 +146,8 @@\n-    public void paintComponent(Graphics g) {\n-        g.setColor(Color.PINK);\n-        g.fillRect(0, 0, getWidth(), getHeight());\n-        int y = (int)(getAlignmentY() * getHeight());\n-        g.setColor(Color.BLACK);\n-        g.drawLine(0, y, getWidth(), y);\n-        g.drawString(getText(), 0, 10);\n+        public void paintComponent(Graphics g) {\n+            g.setColor(Color.PINK);\n+            g.fillRect(0, 0, getWidth(), getHeight());\n+            int y = (int)(getAlignmentY() * getHeight());\n+            g.setColor(Color.BLACK);\n+            g.drawLine(0, y, getWidth(), y);\n+            g.drawString(getText(), 0, 10);\n+        }\n@@ -156,1 +156,1 @@\n-}\n+    static class CustomComponentView extends ComponentView {\n@@ -158,1 +158,3 @@\n-class CustomComponentView extends ComponentView {\n+        public CustomComponentView(Element elem) {\n+            super(elem);\n+        }\n@@ -160,3 +162,4 @@\n-    public CustomComponentView(Element elem) {\n-        super(elem);\n-    }\n+        public int getResizeWeight(int axis) {\n+            return 1;\n+        }\n+}\n@@ -164,3 +167,1 @@\n-    public int getResizeWeight(int axis) {\n-        return 1;\n-    }\n+    static class CustomEditorKit extends StyledEditorKit implements ViewFactory {\n@@ -168,1 +169,7 @@\n-}\n+        public View create(Element elem) {\n+            if (StyleConstants.ComponentElementName.equals(elem.getName())) {\n+                return new CustomComponentView(elem);\n+            } else {\n+                return super.getViewFactory().create(elem);\n+            }\n+        }\n@@ -170,6 +177,2 @@\n-class CustomEditorKit extends StyledEditorKit implements ViewFactory {\n-    public View create(Element elem) {\n-        if (StyleConstants.ComponentElementName.equals(elem.getName())) {\n-            return new CustomComponentView(elem);\n-        } else {\n-            return super.getViewFactory().create(elem);\n+        public ViewFactory getViewFactory() {\n+            return this;\n@@ -177,1 +180,1 @@\n-    }\n+}\n@@ -179,3 +182,0 @@\n-    public ViewFactory getViewFactory() {\n-        return this;\n-    }\n","filename":"test\/jdk\/javax\/swing\/text\/BoxView\/BaselineTest.java","additions":48,"deletions":48,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    static volatile JEditorPane jep;\n+    static JEditorPane jep;\n@@ -67,0 +67,1 @@\n+            throw new RuntimeException(e);\n","filename":"test\/jdk\/javax\/swing\/text\/html\/FormView\/4473401\/bug4473401.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n-            .title(\" Test Instructions\")\n","filename":"test\/jdk\/javax\/swing\/text\/html\/FormView\/bug4529702.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+            throw new RuntimeException(e);\n","filename":"test\/jdk\/javax\/swing\/text\/html\/FrameSetView\/4890934\/bug4890934.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}