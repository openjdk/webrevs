{"files":[{"patch":"@@ -151,3 +151,0 @@\n-  friend class LightweightSynchronizer;\n-  friend class ObjectSynchronizer;\n-  friend class ObjectWaiter;\n@@ -337,0 +334,1 @@\n+  void      increment_recursions(JavaThread* current);\n@@ -427,0 +425,1 @@\n+ public:\n@@ -429,1 +428,0 @@\n- private:\n@@ -433,1 +431,0 @@\n-public:\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -153,0 +153,5 @@\n+inline void ObjectMonitor::increment_recursions(JavaThread* current) {\n+  assert(has_owner(current), \"must be the owner\");\n+  _recursions++;\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.inline.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -426,1 +426,1 @@\n-      m->_recursions++;\n+      m->increment_recursions(current);\n@@ -443,1 +443,1 @@\n-      assert(m->_recursions == 0, \"invariant\");\n+      assert(m->recursions() == 0, \"invariant\");\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}