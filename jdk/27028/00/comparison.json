{"files":[{"patch":"@@ -922,0 +922,5 @@\n+  VectorSet argument_set;\n+\n+  for (int i = 0; i < num_arguments(); i++) {\n+    argument_set.set(argument(i)->_idx);\n+  }\n@@ -1065,0 +1070,23 @@\n+\n+        \/\/ First exclude the following pattern:\n+        \/\/ append -> Phi -> Region -> (True, False) -> If -> Bool -> CmpP -> Proj (Result) -> toString;\n+        \/\/ in order to prevent an unsafe transformation in eliminate_unneeded_control,\n+        \/\/ where the Bool would be replaced by a constant zero but the Phi stays live\n+        \/\/ as it is a parameter of the concatenation itself.\n+        assert(ptr->in(1)->in(0)->in(1)->is_Bool(), \"unexpected if shape\");\n+        Node* v1 = ptr->in(1)->in(0)->in(1)->in(1)->in(1);\n+        Node* v2 = ptr->in(1)->in(0)->in(1)->in(1)->in(2);\n+        if (_multiple &&\n+            ((v1->is_Proj() && is_SB_toString(v1->in(0)) && ctrl_path.member(v1->in(0))) ||\n+             (v2->is_Proj() && is_SB_toString(v2->in(0)) && ctrl_path.member(v2->in(0))))) {\n+          for (SimpleDUIterator i(ptr); i.has_next(); i.next()) {\n+            Node* use = i.get();\n+            if (use->is_Phi() && argument_set.test(use->_idx)) {\n+              fail = true;\n+              break;\n+            }\n+          }\n+          if (fail) {\n+            break;\n+          }\n+        }\n","filename":"src\/hotspot\/share\/opto\/stringopts.cpp","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8362117\n+ * @summary Test stacked string concatenations where the toString result\n+ *          of the first StringBuilder chain is used as a test for a\n+ *          simple diamond in the second StringBuilder. If the region of\n+ *          the simple diamond has a Phi that is used as a parameter in the\n+ *          concatenation, a wrong result should not be produced.\n+ * @library \/test\/lib \/\n+ * @run main\/othervm compiler.stringopts.TestStackedConcatsPhiUseOfDiamondRegion\n+ * @run main\/othervm -XX:-TieredCompilation -Xcomp\n+ *                   -XX:CompileOnly=compiler.stringopts.TestStackedConcatsPhiUseOfDiamondRegion::f\n+ *                   compiler.stringopts.TestStackedConcatsPhiUseOfDiamondRegion\n+ *\/\n+\n+package compiler.stringopts;\n+\n+import jdk.test.lib.Asserts;\n+\n+public class TestStackedConcatsPhiUseOfDiamondRegion {\n+\n+    public static void main (String... args) {\n+        new StringBuilder(); \/\/ load the class\n+        f();\n+    }\n+\n+    static String f() {\n+        String s = \"a\";\n+        s = new StringBuilder().append(s).append(s).toString();\n+        s = new StringBuilder().append(s).append((s == \"xx\") ? s : \"aa\").toString();\n+        Asserts.assertEQ(s, \"aaaa\"); \/\/ in particular, we should not have s.equals(\"aaxx\").\n+        return s;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/stringopts\/TestStackedConcatsPhiUseOfDiamondRegion.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}