{"files":[{"patch":"@@ -25,1 +25,1 @@\n- * @test\n+ * @test id=metal\n@@ -28,2 +28,1 @@\n- * @summary\n- *     This test checks if menu items lay out correctly when their\n+ * @summary Verifies if menu items lay out correctly when their\n@@ -31,3 +30,0 @@\n- *     The tester is asked to compare left-to-right and\n- *     right-to-left menus and judge whether they are mirror images of each\n- *     other.\n@@ -36,1 +32,23 @@\n- * @run main\/manual RightLeftOrientation\n+ * @run main\/manual RightLeftOrientation metal\n+ *\/\n+\n+\/*\n+ * @test id=motif\n+ * @bug 4211052\n+ * @requires (os.family == \"windows\")\n+ * @summary Verifies if menu items lay out correctly when their\n+ *     ComponentOrientation property is set to RIGHT_TO_LEFT.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual RightLeftOrientation motif\n+ *\/\n+\n+\/*\n+ * @test id=windows\n+ * @bug 4211052\n+ * @requires (os.family == \"windows\")\n+ * @summary Verifies if menu items lay out correctly when their\n+ *     ComponentOrientation property is set to RIGHT_TO_LEFT.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual RightLeftOrientation windows\n@@ -57,0 +75,1 @@\n+import javax.swing.SwingUtilities;\n@@ -61,0 +80,2 @@\n+    static volatile JFrame frame;\n+\n@@ -62,5 +83,1 @@\n-        A menu bar is shown containing a menu for each look and feel.\n-        A disabled menu means that the look and feel is not available for\n-        testing in this environment.\n-        Every effort should be made to run this test\n-        in an environment that covers all look and feels.\n+        A menu bar is shown with a menu.\n@@ -68,1 +85,1 @@\n-        Each menu is divided into two halves. The upper half is oriented\n+        The menu is divided into two halves. The upper half is oriented\n@@ -70,1 +87,1 @@\n-        For each menu, ensure that the lower half mirrors the upper half.\n+        Ensure that the lower half mirrors the upper half.\n@@ -76,0 +93,23 @@\n+        if (args.length < 1) {\n+            throw new IllegalArgumentException(\"Look-and-Feel keyword is required\");\n+        }\n+\n+        final String lafClassName;\n+        switch (args[0]) {\n+            case \"metal\" -> lafClassName = UIManager.getCrossPlatformLookAndFeelClassName();\n+            case \"motif\" -> lafClassName = \"com.sun.java.swing.plaf.motif.MotifLookAndFeel\";\n+            case \"windows\" -> lafClassName = \"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\";\n+            default -> throw new IllegalArgumentException(\n+                           \"Unsupported Look-and-Feel keyword for this test: \" + args[0]);\n+        }\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            try {\n+                UIManager.setLookAndFeel(lafClassName);\n+            } catch (Exception e) {\n+                throw new RuntimeException(e);\n+            }\n+        });\n+\n+        System.out.println(\"Test for LookAndFeel \" + lafClassName);\n+\n@@ -77,1 +117,0 @@\n-                .title(\"RightLeftOrientation Instructions\")\n@@ -86,1 +125,1 @@\n-        JFrame frame = new JFrame(\"RightLeftOrientation\");\n+        frame = new JFrame(\"RightLeftOrientation\");\n@@ -89,6 +128,1 @@\n-        menuBar.add(createMenu(\"javax.swing.plaf.metal.MetalLookAndFeel\",\n-                                \"Metal\"));\n-        menuBar.add(createMenu(\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\",\n-                                \"Motif\"));\n-        menuBar.add(createMenu(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\",\n-                                \"Windows\"));\n+        menuBar.add(createMenu());\n@@ -97,1 +131,1 @@\n-        frame.pack();\n+        frame.setSize(250, 70);\n@@ -102,13 +136,5 @@\n-    static JMenu createMenu(String laf, String name) {\n-        JMenu menu = new JMenu(name);\n-        try {\n-            LookAndFeel save = UIManager.getLookAndFeel();\n-            UIManager.setLookAndFeel(laf);\n-            addMenuItems(menu, ComponentOrientation.LEFT_TO_RIGHT);\n-            menu.addSeparator();\n-            addMenuItems(menu, ComponentOrientation.RIGHT_TO_LEFT);\n-            UIManager.setLookAndFeel(save);\n-        } catch (Exception e) {\n-            menu = new JMenu(name);\n-            menu.setEnabled(false);\n-        }\n+    static JMenu createMenu() {\n+        JMenu menu = new JMenu(UIManager.getLookAndFeel().getID());\n+        addMenuItems(menu, ComponentOrientation.LEFT_TO_RIGHT);\n+        menu.addSeparator();\n+        addMenuItems(menu, ComponentOrientation.RIGHT_TO_LEFT);\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/RightLeftOrientation.java","additions":62,"deletions":36,"binary":false,"changes":98,"status":"modified"}]}