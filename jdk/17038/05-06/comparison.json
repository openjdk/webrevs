{"files":[{"patch":"@@ -1,51 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2011, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/* @test\n-   @bug 4528128 6846616\n-   @summary Test if reading InputStream of a closed ZipFile crashes VM\n-   @author kladko\n-   *\/\n-\n-\n-import java.util.zip.*;\n-import java.io.*;\n-import java.util.*;\n-\n-public class ReadAfterClose {\n-    public static void main(String[] argv) throws Exception {\n-        InputStream in;\n-        try (ZipFile zf = new ZipFile(\n-                 new File(System.getProperty(\"test.src\",\".\"),\"crash.jar\"))) {\n-            ZipEntry zent = zf.getEntry(\"Test.java\");\n-            in = zf.getInputStream(zent);\n-        }\n-        \/\/ ensure zf is closed at this point\n-        try {\n-            in.read();\n-        } catch (IOException e) {\n-            return;\n-        }\n-        throw new Exception(\"Test failed.\");\n-    }\n-}\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/ReadAfterClose.java","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -43,0 +43,1 @@\n+import java.util.zip.ZipException;\n@@ -315,0 +316,32 @@\n+\n+    \/**\n+     * Verify that reading an InputStream from a closed ZipFile\n+     * throws IOException as expected and does not crash the VM.\n+     * See bugs: 4528128 6846616\n+     *\n+     * @throws IOException if an unexpected IOException occurs\n+     *\/\n+    @Test\n+    public void readAfterClose() throws IOException {\n+        zip = createZip(\"read-after-close.zip\");\n+        InputStream in;\n+        try (ZipFile zf = new ZipFile(zip.toFile())) {\n+            ZipEntry zent = zf.getEntry(\"file.txt\");\n+            in = zf.getInputStream(zent);\n+        }\n+\n+        \/\/ zf is closed at this point\n+        assertThrows(IOException.class,  () -> {\n+            in.read();\n+        });\n+        assertThrows(IOException.class,  () -> {\n+            in.read(new byte[10]);\n+        });\n+        assertThrows(IOException.class,  () -> {\n+            byte[] buf = new byte[10];\n+            in.read(buf, 0, buf.length);\n+        });\n+        assertThrows(IOException.class,  () -> {\n+            in.readAllBytes();\n+        });\n+    }\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/ReadZip.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"modified"},{"filename":"test\/jdk\/java\/util\/zip\/ZipFile\/crash.jar","binary":true,"status":"deleted"}]}