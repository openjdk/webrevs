{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/EnumerateAfterClose.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/FinalizeInflater.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import java.util.HexFormat;\n@@ -232,1 +233,0 @@\n-        URI uri = URI.create(\"jar:\" + zip.toUri());\n@@ -234,1 +234,1 @@\n-        try (FileSystem fs = FileSystems.newFileSystem(uri, env)) {\n+        try (FileSystem fs = FileSystems.newFileSystem(zip, env)) {\n@@ -244,1 +244,1 @@\n-        try (FileSystem fs = FileSystems.newFileSystem(uri, Map.of())) {\n+        try (FileSystem fs = FileSystems.newFileSystem(zip, Map.of())) {\n@@ -250,2 +250,2 @@\n-     * Read a zip file created via \"echo hello | zip dst.zip -\",\n-     * which includes a 'Zip64 End of Central Directory header'\n+     * Read a zip file created via Info-ZIP in streaming mode,\n+     * which includes a 'Zip64 End of Central Directory header'.\n@@ -257,16 +257,20 @@\n-    public void readZip64EndZipProcess() throws IOException, InterruptedException {\n-        if (Files.notExists(Paths.get(\"\/usr\/bin\/zip\"))) {\n-            return;\n-        }\n-\n-        Process zip = new ProcessBuilder(\"zip\", this.zip.toString(), \"-\").start();\n-        OutputStream os = zip.getOutputStream();\n-        os.write(\"hello\".getBytes(US_ASCII));\n-        os.close();\n-        zip.waitFor();\n-        if (zip.exitValue() == 0 && Files.exists(this.zip)) {\n-            try (ZipFile zf = new ZipFile(this.zip.toFile())) {\n-                try (InputStream in = zf.getInputStream(zf.getEntry(\"-\"))) {\n-                    String contents = new String(in.readAllBytes(), StandardCharsets.US_ASCII);\n-                    assertEquals(\"hello\", contents);\n-                }\n+    public void readZip64EndInfoZIPStreaming() throws IOException, InterruptedException {\n+        \/\/ ZIP created using: \"echo -n hello | zip zip64.zip -\"\n+        \/\/ Hex encoded using: \"cat zip64.zip | xxd -ps\"\n+        byte[] zipBytes = HexFormat.of().parseHex(\"\"\"\n+                  504b03042d0000000000c441295886a61036ffffffffffffffff01001400\n+                  2d010010000500000000000000050000000000000068656c6c6f504b0102\n+                  1e032d0000000000c441295886a610360500000005000000010000000000\n+                  000001000000b011000000002d504b06062c000000000000001e032d0000\n+                  00000000000000010000000000000001000000000000002f000000000000\n+                  003800000000000000504b06070000000067000000000000000100000050\n+                  4b050600000000010001002f000000380000000000\n+                  \"\"\".replaceAll(\"\\n\",\"\")\n+        );\n+\n+        Files.write(zip, zipBytes);\n+\n+        try (ZipFile zf = new ZipFile(this.zip.toFile())) {\n+            try (InputStream in = zf.getInputStream(zf.getEntry(\"-\"))) {\n+                String contents = new String(in.readAllBytes(), StandardCharsets.US_ASCII);\n+                assertEquals(\"hello\", contents);\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/ReadZip.java","additions":25,"deletions":21,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/ReleaseInflater.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/StreamZipEntriesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}