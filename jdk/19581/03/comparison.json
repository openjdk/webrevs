{"files":[{"patch":"@@ -27,1 +27,0 @@\n- * @requires vm.compiler2.enabled\n@@ -32,1 +31,1 @@\n- *      -XX:LoopMaxUnroll=16 compiler.loopopts.superword.CoLocatePackMemoryState\n+ *                   -XX:+IgnoreUnrecognizedVMOptions -XX:LoopMaxUnroll=16 compiler.loopopts.superword.CoLocatePackMemoryState\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/CoLocatePackMemoryState.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @requires vm.bits == \"64\"\n@@ -140,0 +139,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -157,0 +157,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -174,0 +175,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -191,0 +193,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -208,0 +211,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/RedTest_long.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n- * @requires vm.compiler2.enabled\n- * @requires vm.simpleArch == \"x86\" | vm.simpleArch == \"x64\" | vm.simpleArch == \"aarch64\" | vm.simpleArch == \"riscv64\"\n@@ -31,1 +29,1 @@\n- * @run main\/othervm -Xbatch -XX:LoopUnrollLimit=250\n+ * @run main\/othervm -Xbatch\n@@ -33,0 +31,1 @@\n+ *                   -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ReductionPerf.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n- * @requires vm.compiler2.enabled\n@@ -52,1 +51,0 @@\n- * @requires vm.compiler2.enabled\n@@ -62,1 +60,0 @@\n- * @requires vm.compiler2.enabled\n@@ -99,1 +96,1 @@\n-                           \"-XX:LoopUnrollLimit=250\");\n+                           \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:LoopUnrollLimit=250\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestAlignVector.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @requires vm.compiler2.enabled\n@@ -44,1 +43,0 @@\n- * @requires vm.compiler2.enabled\n@@ -59,2 +57,0 @@\n- * @requires vm.compiler2.enabled\n- * @requires vm.bits == 64\n@@ -76,1 +72,0 @@\n- * @requires vm.compiler2.enabled\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestAlignVectorFuzzer.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @requires vm.compiler2.enabled\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestCyclicDependency.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- *       https:\/\/bugs.openjdk.org\/browse\/JDK-8310190\n+ *       https:\/\/bugs.openjdk.org\/browse\/JDK-8333729\n@@ -116,1 +116,0 @@\n- * @requires vm.compiler2.enabled\n@@ -125,1 +124,0 @@\n- * @requires vm.compiler2.enabled\n@@ -1288,1 +1286,1 @@\n-                           \"-XX:LoopUnrollLimit=250\");\n+                           \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:LoopUnrollLimit=250\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestDependencyOffsets.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @requires vm.bits == 64\n@@ -45,1 +44,1 @@\n-        TestFramework.runWithFlags(\"-XX:LoopMaxUnroll=16\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:LoopMaxUnroll=16\");\n@@ -85,1 +84,3 @@\n-    @IR(applyIfCPUFeature = {\"avx2\", \"true\"}, applyIf = {\"SuperWordReductions\", \"true\"},\n+    @IR(applyIfCPUFeature = {\"avx2\", \"true\"},\n+        applyIf = {\"SuperWordReductions\", \"true\"},\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -96,1 +97,3 @@\n-    @IR(applyIfCPUFeature = {\"avx2\", \"true\"}, applyIf = {\"SuperWordReductions\", \"true\"},\n+    @IR(applyIfCPUFeature = {\"avx2\", \"true\"},\n+        applyIf = {\"SuperWordReductions\", \"true\"},\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -108,1 +111,3 @@\n-    @IR(applyIfCPUFeature = {\"avx2\", \"true\"}, applyIf = {\"SuperWordReductions\", \"true\"},\n+    @IR(applyIfCPUFeature = {\"avx2\", \"true\"},\n+        applyIf = {\"SuperWordReductions\", \"true\"},\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -131,1 +136,3 @@\n-    @IR(applyIfCPUFeature = {\"avx2\", \"true\"}, applyIf = {\"SuperWordReductions\", \"true\"},\n+    @IR(applyIfCPUFeature = {\"avx2\", \"true\"},\n+        applyIf = {\"SuperWordReductions\", \"true\"},\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -145,0 +152,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestGeneralizedReductions.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n- * @requires vm.bits == 64\n- * @requires vm.compiler2.enabled\n@@ -81,1 +79,1 @@\n-                                   \"-XX:LoopUnrollLimit=1000\");\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:LoopUnrollLimit=1000\");\n@@ -123,0 +121,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -147,0 +146,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -170,0 +170,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -194,0 +195,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n@@ -270,0 +272,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestIndependentPacksWithCyclicDependency.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n- * @requires vm.compiler2.enabled\n@@ -34,2 +33,2 @@\n- * @run main\/othervm -XX:LoopUnrollLimit=250\n- *                   -XX:CompileCommand=compileonly,compiler.loopopts.superword.TestIndependentPacksWithCyclicDependency2::test\n+ * @run main\/othervm -XX:CompileCommand=compileonly,compiler.loopopts.superword.TestIndependentPacksWithCyclicDependency2::test\n+ *                   -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=250\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestIndependentPacksWithCyclicDependency2.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,2 +30,1 @@\n- * @requires vm.compiler2.enabled\n- * @run main\/othervm\/timeout=30 -XX:LoopUnrollLimit=1000 -Xbatch\n+ * @run main\/othervm\/timeout=30 -Xbatch\n@@ -33,0 +32,1 @@\n+ *                              -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=1000\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestLargeCompilation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,2 +38,1 @@\n- * @requires vm.compiler2.enabled\n- * @run main\/othervm -XX:+AlignVector compiler.loopopts.superword.TestLargeScaleAndStride\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+AlignVector compiler.loopopts.superword.TestLargeScaleAndStride\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestLargeScaleAndStride.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @requires vm.compiler2.enabled\n@@ -34,2 +33,0 @@\n- *                   -Xbatch -XX:LoopUnrollLimit=100\n- *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressLCM\n@@ -37,0 +34,3 @@\n+ *                   -Xbatch\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressLCM\n+ *                   -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=100\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestMovingLoadBeforeStore.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -78,2 +78,2 @@\n-        TestFramework.runWithFlags(\"-XX:+AlignVector\");\n-        TestFramework.runWithFlags(\"-XX:-AlignVector\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+AlignVector\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-AlignVector\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestMulAddS2I.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,2 +32,3 @@\n- * @run main\/othervm -Xbatch -XX:LoopUnrollLimit=32\n- *      compiler.loopopts.superword.TestPeeledReductionNode\n+ * @run main\/othervm -Xbatch\n+ *                   -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=32\n+ *                   compiler.loopopts.superword.TestPeeledReductionNode\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestPeeledReductionNode.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @requires vm.compiler2.enabled\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestPickFirstMemoryState.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @requires vm.compiler2.enabled\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestPickLastMemoryState.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n- * @requires vm.compiler2.enabled\n@@ -58,2 +57,2 @@\n-                                   \"-XX:LoopUnrollLimit=1000\",\n-                                   \"-XX:-TieredCompilation\", \"-Xbatch\");\n+                                   \"-XX:-TieredCompilation\", \"-Xbatch\",\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:LoopUnrollLimit=1000\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestScheduleReordersScalarMemops.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n- * @requires vm.compiler2.enabled\n@@ -74,1 +73,1 @@\n-        TestFramework.runWithFlags(\"-XX:LoopUnrollLimit=1000\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:LoopUnrollLimit=1000\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestSplitPacks.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @requires vm.compiler2.enabled\n@@ -37,1 +36,0 @@\n- * @requires vm.compiler2.enabled\n@@ -46,1 +44,0 @@\n- * @requires vm.compiler2.enabled\n@@ -55,1 +52,0 @@\n- * @requires vm.compiler2.enabled\n@@ -78,4 +74,4 @@\n-            case \"Vanilla-Unaligned\"         -> { framework.addFlags(\"-XX:-AlignVector\"); }\n-            case \"Vanilla-Aligned\"           -> { framework.addFlags(\"-XX:+AlignVector\"); }\n-            case \"MaxVectorSize16-Unaligned\" -> { framework.addFlags(\"-XX:-AlignVector\", \"-XX:MaxVectorSize=16\"); }\n-            case \"MaxVectorSize32-Aligned\"   -> { framework.addFlags(\"-XX:+AlignVector\", \"-XX:MaxVectorSize=32\"); }\n+            case \"Vanilla-Unaligned\"         -> { framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-AlignVector\"); }\n+            case \"Vanilla-Aligned\"           -> { framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+AlignVector\"); }\n+            case \"MaxVectorSize16-Unaligned\" -> { framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-AlignVector\", \"-XX:MaxVectorSize=16\"); }\n+            case \"MaxVectorSize32-Aligned\"   -> { framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+AlignVector\", \"-XX:MaxVectorSize=32\"); }\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestUnorderedReduction.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @requires vm.bits == \"64\"\n@@ -65,0 +64,1 @@\n+        applyIfPlatform = {\"64-bit\", \"true\"},\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestUnorderedReductionPartialVectorization.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @requires vm.compiler2.enabled\n@@ -32,1 +31,3 @@\n- * @run main\/othervm -XX:LoopUnrollLimit=250\n+ * @run main\/othervm\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n+ *      -XX:LoopUnrollLimit=250\n@@ -37,1 +38,3 @@\n- * @run main\/othervm -XX:LoopUnrollLimit=250\n+ * @run main\/othervm\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n+ *      -XX:LoopUnrollLimit=250\n@@ -43,1 +46,3 @@\n- * @run main\/othervm -XX:LoopUnrollLimit=250\n+ * @run main\/othervm\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n+ *      -XX:LoopUnrollLimit=250\n@@ -48,1 +53,3 @@\n- * @run main\/othervm -XX:LoopUnrollLimit=250\n+ * @run main\/othervm\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n+ *      -XX:LoopUnrollLimit=250\n@@ -54,1 +61,3 @@\n- * @run main\/othervm -XX:LoopUnrollLimit=250\n+ * @run main\/othervm\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n+ *      -XX:LoopUnrollLimit=250\n@@ -59,1 +68,3 @@\n- * @run main\/othervm -XX:LoopUnrollLimit=250\n+ * @run main\/othervm\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n+ *      -XX:LoopUnrollLimit=250\n@@ -65,1 +76,3 @@\n- * @run main\/othervm -XX:LoopUnrollLimit=250\n+ * @run main\/othervm\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n+ *      -XX:LoopUnrollLimit=250\n@@ -70,1 +83,3 @@\n- * @run main\/othervm -XX:LoopUnrollLimit=250\n+ * @run main\/othervm\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n+ *      -XX:LoopUnrollLimit=250\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/Vec_MulAddS2I.java","additions":24,"deletions":9,"binary":false,"changes":33,"status":"modified"}]}