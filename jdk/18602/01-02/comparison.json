{"files":[{"patch":"@@ -280,4 +280,1 @@\n-                        int exitValue = outputAnalyzer.getExitValue();\n-                        if(0 != exitValue) {\n-                            die(\"Error: error happened in client process, exitValue = \" + exitValue);\n-                        }\n+                        outputAnalyzer.shouldHaveExitValue(0);\n","filename":"test\/jdk\/java\/rmi\/reliability\/benchmark\/bench\/rmi\/Main.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n- * @run main\/othervm InitialContextTest\n+ * @run main InitialContextTest\n@@ -267,3 +267,1 @@\n-            if(outputAnalyzer.getExitValue() != 0) {\n-                throw new RuntimeException(outputAnalyzer.getOutput());\n-            }\n+            outputAnalyzer.shouldHaveExitValue(0);\n@@ -271,1 +269,1 @@\n-            throw new RuntimeException(ex.getMessage());\n+            throw new RuntimeException(ex);\n@@ -285,3 +283,1 @@\n-            if(outputAnalyzer.getExitValue() != 0) {\n-                throw new RuntimeException(outputAnalyzer.getOutput());\n-            }\n+            outputAnalyzer.shouldHaveExitValue(0);\n@@ -289,1 +285,1 @@\n-            throw new RuntimeException(ex.getMessage());\n+            throw new RuntimeException(ex);\n@@ -305,1 +301,1 @@\n-        System.setProperty(\"test.noclasspath\", \"true\");\n+\/\/        System.setProperty(\"test.noclasspath\", \"true\");\n@@ -315,1 +311,1 @@\n-            throw new RuntimeException(ex.getMessage());\n+            throw new RuntimeException(ex);\n","filename":"test\/jdk\/javax\/naming\/spi\/providers\/InitialContextTest.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @run main\/othervm EscapePath\n+ * @run main EscapePath\n@@ -92,1 +92,0 @@\n-        System.setProperty(\"test.noclasspath\", \"true\");\n@@ -100,3 +99,1 @@\n-            if(outputAnalyzer.getExitValue() != 0) {\n-                throw new RuntimeException(\"Path encoding failure.\");\n-            }\n+            outputAnalyzer.shouldHaveExitValue(0);\n@@ -104,1 +101,1 @@\n-            throw new RuntimeException(ex.getMessage());\n+            throw new RuntimeException(ex);\n","filename":"test\/jdk\/sun\/misc\/EscapePath.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}