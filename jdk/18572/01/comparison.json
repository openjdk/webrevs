{"files":[{"patch":"@@ -65,1 +65,1 @@\n-GrowableArrayCHeap<int, mtClassShared>* ArchiveHeapWriter::_source_objs_order;\n+GrowableArrayCHeap<ArchiveHeapWriter::HeapObjOrder, mtClassShared>* ArchiveHeapWriter::_source_objs_order;\n@@ -82,1 +82,1 @@\n-    _buffer_offset_to_source_obj_table = new BufferOffsetToSourceObjectTable();\n+    _buffer_offset_to_source_obj_table = new BufferOffsetToSourceObjectTable(\/*size*\/36137, \/*max size*\/1 * M);\n@@ -89,1 +89,0 @@\n-    _source_objs_order = new GrowableArrayCHeap<int, mtClassShared>(10000);\n@@ -97,1 +96,0 @@\n-  _source_objs_order->append(_source_objs->length());\n@@ -234,2 +232,2 @@\n-  bool has_o_ptr = HeapShared::has_oop_pointers(o);\n-  bool has_n_ptr = HeapShared::has_native_pointers(o);\n+  bool has_oop_ptr, has_native_ptr;\n+  HeapShared::get_pointer_info(o, has_oop_ptr, has_native_ptr);\n@@ -237,2 +235,2 @@\n-  if (!has_o_ptr) {\n-    if (!has_n_ptr) {\n+  if (!has_oop_ptr) {\n+    if (!has_native_ptr) {\n@@ -244,1 +242,1 @@\n-    if (has_n_ptr) {\n+    if (has_native_ptr) {\n@@ -257,6 +255,3 @@\n-int ArchiveHeapWriter::compare_objs_by_oop_fields(int* a, int* b) {\n-  oop oa = _source_objs->at(*a);\n-  oop ob = _source_objs->at(*b);\n-\n-  int rank_a = oop_sorting_rank(oa);\n-  int rank_b = oop_sorting_rank(ob);\n+int ArchiveHeapWriter::compare_objs_by_oop_fields(HeapObjOrder* a, HeapObjOrder* b) {\n+  int rank_a = a->_rank;\n+  int rank_b = b->_rank;\n@@ -268,1 +263,1 @@\n-    return *a - *b;\n+    return a->_index - b->_index;\n@@ -273,0 +268,11 @@\n+  log_info(cds)(\"sorting heap objects\");\n+  int len = _source_objs->length();\n+  _source_objs_order = new GrowableArrayCHeap<HeapObjOrder, mtClassShared>(len);\n+\n+  for (int i = 0; i < len; i++) {\n+    oop o = _source_objs->at(i);\n+    int rank = oop_sorting_rank(o);\n+    HeapObjOrder os = {i, rank};\n+    _source_objs_order->append(os);\n+  }\n+  log_info(cds)(\"computed ranks\");\n@@ -274,0 +280,1 @@\n+  log_info(cds)(\"sorting heap objects done\");\n@@ -279,1 +286,1 @@\n-    int src_obj_index = _source_objs_order->at(i);\n+    int src_obj_index = _source_objs_order->at(i)._index;\n@@ -286,1 +293,2 @@\n-    _buffer_offset_to_source_obj_table->put(buffer_offset, src_obj);\n+    _buffer_offset_to_source_obj_table->put_when_absent(buffer_offset, src_obj);\n+    _buffer_offset_to_source_obj_table->maybe_grow();\n@@ -583,1 +591,1 @@\n-    int src_obj_index = _source_objs_order->at(i);\n+    int src_obj_index = _source_objs_order->at(i)._index;\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.cpp","additions":27,"deletions":19,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -143,1 +143,0 @@\n-  static GrowableArrayCHeap<int, mtClassShared>* _source_objs_order;\n@@ -145,2 +144,14 @@\n-  typedef ResourceHashtable<size_t, oop,\n-      36137, \/\/ prime number\n+  \/\/ We sort _source_objs_order to minimize the number of bits in ptrmap and oopmap.\n+  \/\/ See comments near the body of ArchiveHeapWriter::compare_objs_by_oop_fields().\n+  \/\/ The objects will be written in the order of:\n+  \/\/_source_objs->at(_source_objs_order->at(0)._index)\n+  \/\/ source_objs->at(_source_objs_order->at(1)._index)\n+  \/\/ source_objs->at(_source_objs_order->at(2)._index)\n+  \/\/ ...\n+  struct HeapObjOrder {\n+    int _index;    \/\/ The location of this object in _source_objs\n+    int _rank;     \/\/ A lower rank means the object will be written at a lower location.\n+  };\n+  static GrowableArrayCHeap<HeapObjOrder, mtClassShared>* _source_objs_order;\n+\n+  typedef ResizeableResourceHashtable<size_t, oop,\n@@ -215,1 +226,1 @@\n-  static int compare_objs_by_oop_fields(int* a, int* b);\n+  static int compare_objs_by_oop_fields(HeapObjOrder* a, HeapObjOrder* b);\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.hpp","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -288,1 +288,2 @@\n-    archived_object_cache()->put(obj, info);\n+    archived_object_cache()->put_when_absent(obj, info);\n+    archived_object_cache()->maybe_grow();\n@@ -440,1 +441,1 @@\n-bool HeapShared::has_oop_pointers(oop src_obj) {\n+void HeapShared::get_pointer_info(oop src_obj, bool& has_oop_pointers, bool& has_native_pointers) {\n@@ -443,7 +444,2 @@\n-  return info->has_oop_pointers();\n-}\n-\n-bool HeapShared::has_native_pointers(oop src_obj) {\n-  CachedOopInfo* info = archived_object_cache()->get(src_obj);\n-  assert(info != nullptr, \"must be\");\n-  return info->has_native_pointers();\n+  has_oop_pointers = info->has_oop_pointers();\n+  has_native_pointers = info->has_native_pointers();\n@@ -1416,1 +1412,2 @@\n-  _seen_objects_table->put(obj, true);\n+  _seen_objects_table->put_when_absent(obj, true);\n+  _seen_objects_table->maybe_grow();\n@@ -1622,1 +1619,1 @@\n-    _dumped_interned_strings = new (mtClass)DumpedInternedStrings();\n+    _dumped_interned_strings = new (mtClass)DumpedInternedStrings(INITIAL_TABLE_SIZE, MAX_TABLE_SIZE);\n@@ -1688,0 +1685,3 @@\n+  if (created) {\n+    _dumped_interned_strings->maybe_grow();\n+  }\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -218,2 +218,3 @@\n-  typedef ResourceHashtable<oop, CachedOopInfo,\n-      36137, \/\/ prime number\n+  static const int INITIAL_TABLE_SIZE = 15889;\n+  static const int MAX_TABLE_SIZE     = 1000000;\n+  typedef ResizeableResourceHashtable<oop, CachedOopInfo,\n@@ -280,2 +281,1 @@\n-  typedef ResourceHashtable<oop, bool,\n-      15889, \/\/ prime number\n+  typedef ResizeableResourceHashtable<oop, bool,\n@@ -303,1 +303,1 @@\n-    _seen_objects_table = new (mtClass)SeenObjectsTable();\n+    _seen_objects_table = new (mtClass)SeenObjectsTable(INITIAL_TABLE_SIZE, MAX_TABLE_SIZE);\n@@ -358,1 +358,1 @@\n-      new (mtClass)ArchivedObjectCache();\n+      new (mtClass)ArchivedObjectCache(INITIAL_TABLE_SIZE, MAX_TABLE_SIZE);\n@@ -382,3 +382,2 @@\n-  static bool has_oop_pointers(oop obj);\n-  static bool has_native_pointers(oop obj);\n-  static void set_has_native_pointers(oop obj);\n+  static void get_pointer_info(oop src_obj, bool& has_oop_pointers, bool& has_native_pointers);\n+  static void set_has_native_pointers(oop src_obj);\n@@ -438,2 +437,1 @@\n-  public ResourceHashtable<oop, bool,\n-                           15889, \/\/ prime number\n+  public ResizeableResourceHashtable<oop, bool,\n@@ -443,1 +441,8 @@\n-{};\n+{\n+public:\n+  DumpedInternedStrings(unsigned size, unsigned max_size) :\n+    ResizeableResourceHashtable<oop, bool,\n+                                AnyObj::C_HEAP,\n+                                mtClassShared,\n+                                HeapShared::string_oop_hash>(size, max_size) {}\n+};\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":17,"deletions":12,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,1 @@\n+        long start = System.currentTimeMillis();\n@@ -44,1 +45,1 @@\n-\n+        System.out.println(\"findAllClasses = \" + (System.currentTimeMillis() - start) + \"ms\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LotsOfClasses.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -681,2 +681,0 @@\n-    static Pattern pattern;\n-\n@@ -685,1 +683,1 @@\n-        pattern = Pattern.compile(\"\/modules\/[a-z.]*[a-z]+\/([^-]*)[.]class\");\n+        Pattern pattern = Pattern.compile(\"\/modules\/[a-z.]*[a-z]+\/([^-]*)[.]class\");\n@@ -688,1 +686,1 @@\n-        findAllClassesAtPath(base, list);\n+        findAllClassesAtPath(base, pattern, list);\n@@ -691,1 +689,1 @@\n-    private static void findAllClassesAtPath(Path p, ArrayList<String> list) throws Exception {\n+    private static void findAllClassesAtPath(Path p, Pattern pattern, ArrayList<String> list) throws Exception {\n@@ -694,4 +692,8 @@\n-                Matcher matcher = pattern.matcher(entry.toString());\n-                if (matcher.find()) {\n-                    String className = matcher.group(1);\n-                    list.add(className);\n+                if (Files.isDirectory(entry)) {\n+                    findAllClassesAtPath(entry, pattern, list);\n+                } else {\n+                    Matcher matcher = pattern.matcher(entry.toString());\n+                    if (matcher.find()) {\n+                        String className = matcher.group(1);\n+                        list.add(className);\n+                    }\n@@ -699,3 +701,0 @@\n-                try {\n-                    findAllClassesAtPath(entry, list);\n-                } catch (Exception ex) {}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestCommon.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"}]}