{"files":[{"patch":"@@ -1791,1 +1791,1 @@\n-void CodeCache::write_perf_map(const char* filename) {\n+void CodeCache::write_perf_map(const char* filename, outputStream* out) {\n@@ -1797,10 +1797,5 @@\n-  if (filename == nullptr) {\n-    jio_snprintf(fname, sizeof(fname), \"\/tmp\/perf-%d.map\",\n-                 os::current_process_id());\n-  }\n-  \/\/ If the filename contains %p, it will be replaced by the pid.\n-  else if (!Arguments::copy_expand_pid(filename, strlen(filename), fname,\n-                                       JVM_MAXPATHLEN)) {\n-    warning(\"Invalid file path name specified, fall back to default name\");\n-    jio_snprintf(fname, sizeof(fname), \"\/tmp\/perf-%d.map\",\n-                 os::current_process_id());\n+  constexpr char filename_default[] = \"\/tmp\/perf-%p.map\";\n+  const char *src = filename == nullptr ? filename_default : filename;\n+  if (!Arguments::copy_expand_pid(src, strlen(src), fname, sizeof(fname))) {\n+    out->print_cr(\"Invalid file path name specified: %s\", src);\n+    return;\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -226,1 +226,1 @@\n-  LINUX_ONLY(static void write_perf_map(const char* filename = nullptr);)\n+  LINUX_ONLY(static void write_perf_map(const char* filename, outputStream* out);)\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -487,1 +487,1 @@\n-    CodeCache::write_perf_map();\n+    CodeCache::write_perf_map(nullptr, tty);\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -522,4 +522,3 @@\n-                                  fname, JVM_MAXPATHLEN)) {\n-    stringStream msg;\n-    msg.print(\"Invalid file path name specified: %s\", _filename.value());\n-    THROW_MSG(vmSymbols::java_lang_IllegalArgumentException(), msg.base());\n+                                  fname, sizeof(fname))) {\n+    output()->print_cr(\"Invalid file path name specified: %s\", _filename.value());\n+    return;\n@@ -878,1 +877,1 @@\n-  CodeCache::write_perf_map(_filename.is_set() ? _filename.value() : nullptr);\n+  CodeCache::write_perf_map(_filename.is_set() ? _filename.value() : nullptr, output());\n@@ -1055,2 +1054,1 @@\n-    const char *name = _filename.value();\n-    if (Arguments::copy_expand_pid(name, strlen(name), fname, JVM_MAXPATHLEN)) {\n+    if (Arguments::copy_expand_pid(file, strlen(file), fname, sizeof(fname))) {\n@@ -1059,1 +1057,1 @@\n-      warning(\"Invalid file path name specified, fall back to default name\");\n+      output()->print_cr(\"Invalid file path name specified %s, fall back to default name.\", file);\n@@ -1135,4 +1133,4 @@\n-                                  path, JVM_MAXPATHLEN)) {\n-    stringStream msg;\n-    msg.print(\"Invalid file path name specified: %s\", _filepath.value());\n-    THROW_MSG(vmSymbols::java_lang_IllegalArgumentException(), msg.base());\n+                                  path, sizeof(path))) {\n+    output()->print_cr(\"Invalid file path name specified: %s\",\n+                       _filepath.value());\n+    return;\n@@ -1223,10 +1221,5 @@\n-  if (!_filename.is_set()) {\n-    jio_snprintf(fname, sizeof(fname), \"vm_memory_map_%d.txt\",\n-                 os::current_process_id());\n-  } else if (!Arguments::copy_expand_pid(_filename.value(),\n-                                        strlen(_filename.value()), fname,\n-                                        JVM_MAXPATHLEN)) {\n-    \/\/ If the filename contains %p, it will be replaced by the pid.\n-    warning(\"Invalid file path name specified, fall back to default name.\");\n-    jio_snprintf(fname, sizeof(fname), \"vm_memory_map_%d.txt\",\n-                 os::current_process_id());\n+  constexpr char filename_default[] = \"vm_memory_map_%p.txt\";\n+  const char* src = _filename.is_set() ? _filename.value() : filename_default;\n+  if (!Arguments::copy_expand_pid(src, strlen(src), fname, sizeof(fname))) {\n+    output()->print_cr(\"Invalid file path name specified: %s\", src);\n+    return;\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":15,"deletions":22,"binary":false,"changes":37,"status":"modified"}]}