{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,2 @@\n- * GSS-API Utilities for using in conjunction with Sun Microsystem's\n- * implementation of Java GSS-API.\n+ * GSS-API Utilities for use in conjunction with the JDK implementation\n+ * of Java GSS-API.\n@@ -45,6 +45,2 @@\n-     * Use this method to convert a GSSName and GSSCredential into a\n-     * Subject. Typically this would be done by a server that wants to\n-     * impersonate a client thread at the Java level by setting a client\n-     * Subject in the current access control context. If the server is merely\n-     * interested in using a principal based policy in its local JVM, then\n-     * it only needs to provide the GSSName of the client.\n+     * Use this method to convert a {@code GSSName} and {@code GSSCredential}\n+     * into a {@code Subject}.\n@@ -52,5 +48,6 @@\n-     * The elements from the GSSName are placed in the principals set of this\n-     * Subject and those from the GSSCredential are placed in the private\n-     * credentials set of the Subject. Any Kerberos specific elements that\n-     * are added to the subject will be instances of the standard Kerberos\n-     * implementation classes defined in javax.security.auth.kerberos.\n+     * The elements from the {@code GSSName} are placed in the principals set\n+     * of this {@code Subject} and those from the {@code GSSCredential} are\n+     * placed in the private credentials set of the {@code Subject}. Any\n+     * Kerberos specific elements that are added to the subject will be\n+     * instances of the standard Kerberos implementation classes defined in\n+     * {@link javax.security.auth.kerberos}.\n@@ -58,2 +55,2 @@\n-     * @return a Subject with the entries that contain elements from the\n-     * given GSSName and GSSCredential.\n+     * @return a {@code Subject} with the entries that contain elements from\n+     * the given {@code GSSName} and {@code GSSCredential}.\n@@ -61,4 +58,4 @@\n-     * @param principals a GSSName containing one or more mechanism specific\n-     * representations of the same entity. These mechanism specific\n-     * representations will be populated in the returned Subject's principal\n-     * set.\n+     * @param principals a {@code GSSName} containing one or more mechanism\n+     * specific representations of the same entity. These mechanism specific\n+     * representations will be populated in the returned {@code Subject}'s\n+     * principal set.\n@@ -66,5 +63,5 @@\n-     * @param credentials a GSSCredential containing one or more mechanism\n-     * specific credentials for the same entity. These mechanism specific\n-     * credentials will be populated in the returned Subject's private\n-     * credential set. Passing in a value of null will imply that the private\n-     * credential set should be left empty.\n+     * @param credentials a {@code GSSCredential} containing one or more\n+     * mechanism specific credentials for the same entity. These mechanism\n+     * specific credentials will be populated in the returned {@code Subject}'s\n+     * private credential set. Passing in a value of {@code null} will imply\n+     * that the private credential set should be left empty.\n","filename":"src\/jdk.security.jgss\/share\/classes\/com\/sun\/security\/jgss\/GSSUtil.java","additions":22,"deletions":25,"binary":false,"changes":47,"status":"modified"}]}