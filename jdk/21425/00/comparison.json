{"files":[{"patch":"@@ -65,0 +65,9 @@\n+    static final int REPEATS = 40;\n+    static final String[] METHOD_NAMES;\n+    static {\n+        var names = new String[REPEATS];\n+        for (int xi = 0; xi < REPEATS; ++xi) {\n+            names[xi] = \"main\" + ((xi == 0) ? \"\" : \"\" + xi);\n+        }\n+        METHOD_NAMES = names;\n+    }\n@@ -93,2 +102,2 @@\n-        for (int xi = 0; xi < 40; ++xi) {\n-            MethodVisitor mv = cw.visitMethod(Opcodes.ACC_PUBLIC+Opcodes.ACC_STATIC, \"main\"+ ((xi==0)? \"\" : \"\"+xi), \"([Ljava\/lang\/String;)V\", null, null);\n+        for (int xi = 0; xi < REPEATS; ++xi) {\n+            MethodVisitor mv = cw.visitMethod(Opcodes.ACC_PUBLIC+Opcodes.ACC_STATIC, METHOD_NAMES[xi], \"([Ljava\/lang\/String;)V\", null, null);\n@@ -149,2 +158,2 @@\n-            for (int xi = 0; xi < 40; ++xi) {\n-                cb.withMethod(\"main\" + ((xi == 0) ? \"\" : \"\" + xi), MTD_void_StringArray,\n+            for (int xi = 0; xi < REPEATS; ++xi) {\n+                cb.withMethod(METHOD_NAMES[xi], MTD_void_StringArray,\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/Write.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"}]}