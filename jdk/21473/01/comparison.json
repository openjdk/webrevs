{"files":[{"patch":"@@ -278,1 +278,1 @@\n-        __ ldr(rscratch1, Address(OSR_buf, slot_offset + 1*BytesPerWord));\n+        __ ldr(rscratch1, __ form_address(rscratch1, OSR_buf, slot_offset + 1*BytesPerWord, 0));\n@@ -284,2 +284,2 @@\n-      __ ldr(r19, Address(OSR_buf, slot_offset));\n-      __ ldr(r20, Address(OSR_buf, slot_offset + BytesPerWord));\n+      __ ldr(r19, __ form_address(rscratch1, OSR_buf, slot_offset, 0));\n+      __ ldr(r20, __ form_address(rscratch1, OSR_buf, slot_offset + BytesPerWord, 0));\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,194 @@\n+public super class ComplexLockingAndMultiThreading\n+  version 52:0\n+{\n+  private static final Field lock:\"Ljava\/lang\/Object;\";\n+\n+  public Method \"<init>\":\"()V\"\n+    stack  1 locals  1\n+  {\n+         aload_0;\n+         invokespecial     Method java\/lang\/Object.\"<init>\":\"()V\";\n+         return;\n+  }\n+  public static Method main:\"([Ljava\/lang\/String;)V\"\n+    stack  5 locals  7\n+  {\n+         bipush            10;\n+         anewarray         class java\/lang\/Thread;\n+         astore_1;\n+         iconst_0;\n+         istore_2;\n+  L8:    stack_frame_type  append;\n+         locals_map        class \"[Ljava\/lang\/Thread;\", int;\n+         iload_2;\n+         aload_1;\n+         arraylength;\n+         if_icmpge         L41;\n+         aload_1;\n+         iload_2;\n+         new               class java\/lang\/Thread;\n+         dup;\n+         invokedynamic     InvokeDynamic REF_invokeStatic:Method java\/lang\/invoke\/LambdaMetafactory.metafactory:\n+                           \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;Ljava\/lang\/invoke\/MethodType;Ljava\/lang\/invoke\/MethodHandle;Ljava\/lang\/invoke\/MethodType;)Ljava\/lang\/invoke\/CallSite;\":\n+                           run:\"()Ljava\/lang\/Runnable;\" {\n+                             MethodType \"()V\",\n+                             MethodHandle REF_invokeStatic:Method ComplexLockingAndMultiThreading.lambda$main$0:\"()V\",\n+                             MethodType \"()V\"\n+                           };\n+         invokespecial     Method java\/lang\/Thread.\"<init>\":\"(Ljava\/lang\/Runnable;)V\";\n+         aastore;\n+         aload_1;\n+         iload_2;\n+         aaload;\n+         invokevirtual     Method java\/lang\/Thread.start:\"()V\";\n+         iinc              2, 1;\n+         goto              L8;\n+  L41:   stack_frame_type  chop1;\n+         aload_1;\n+         astore_2;\n+         aload_2;\n+         arraylength;\n+         istore_3;\n+         iconst_0;\n+         istore            4;\n+  L49:   stack_frame_type  append;\n+         locals_map        class \"[Ljava\/lang\/Thread;\", int, int;\n+         iload             4;\n+         iload_3;\n+         if_icmpge         L93;\n+         aload_2;\n+         iload             4;\n+         aaload;\n+         astore            5;\n+         try               T0;\n+         aload             5;\n+         invokevirtual     Method java\/lang\/Thread.join:\"()V\";\n+         endtry            T0;\n+         goto              L87;\n+         catch             T0 java\/lang\/InterruptedException;\n+         stack_frame_type  full;\n+         locals_map        class \"[Ljava\/lang\/String;\", class \"[Ljava\/lang\/Thread;\", class \"[Ljava\/lang\/Thread;\", int, int, class java\/lang\/Thread;\n+         stack_map         class java\/lang\/InterruptedException;\n+         astore            6;\n+         getstatic         Field java\/lang\/System.out:\"Ljava\/io\/PrintStream;\";\n+         aload             6;\n+         invokevirtual     Method java\/lang\/InterruptedException.getMessage:\"()Ljava\/lang\/String;\";\n+         invokedynamic     InvokeDynamic REF_invokeStatic:Method java\/lang\/invoke\/StringConcatFactory.makeConcatWithConstants:\n+                           \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/invoke\/MethodType;Ljava\/lang\/String;[Ljava\/lang\/Object;)Ljava\/lang\/invoke\/CallSite;\":\n+                           makeConcatWithConstants:\"(Ljava\/lang\/String;)Ljava\/lang\/String;\" {\n+                             String \"Thread interrupted: \\u0001\"\n+                           };\n+         invokevirtual     Method java\/io\/PrintStream.println:\"(Ljava\/lang\/String;)V\";\n+  L87:   stack_frame_type  chop1;\n+         iinc              4, 1;\n+         goto              L49;\n+  L93:   stack_frame_type  chop3;\n+         getstatic         Field java\/lang\/System.out:\"Ljava\/io\/PrintStream;\";\n+         ldc               String \"All threads completed.\";\n+         invokevirtual     Method java\/io\/PrintStream.println:\"(Ljava\/lang\/String;)V\";\n+         return;\n+  }\n+  private static synchronized Method synchronizedMethod:\"()V\"\n+    stack  2 locals  4100\n+  {\n+         getstatic         Field lock:\"Ljava\/lang\/Object;\";\n+         dup;\n+         astore_0;\n+         monitorenter;\n+         try               T0;\n+         iconst_0;\n+         istore_1;\n+  L8:    stack_frame_type  append;\n+         locals_map        class java\/lang\/Object, int;\n+         iload_1;\n+         sipush            10000;\n+         if_icmpge         L21;\n+         iinc              1, 1;\n+         goto              L8;\n+  L21:   stack_frame_type  chop1;\n+         iconst_0;\n+         istore_1;\n+  L23:   stack_frame_type  append;\n+         locals_map        int;\n+         iload_1;\n+         iinc              1, 1;\n+         ldc               int 93724;\n+         if_icmplt         L23;\n+         aload_0;\n+         monitorexit;\n+         endtry            T0;\n+         goto              L42;\n+         catch             T0 #0;\n+         catch             T1 #0;\n+         try               T1;\n+         stack_frame_type  full;\n+         locals_map        class java\/lang\/Object;\n+         stack_map         class java\/lang\/Throwable;\n+         astore_2;\n+         aload_0;\n+         monitorexit;\n+         endtry            T1;\n+         aload_2;\n+         athrow;\n+  L42:   stack_frame_type  chop1;\n+         getstatic         Field lock:\"Ljava\/lang\/Object;\";\n+         dup;\n+         astore_0;\n+         monitorenter;\n+         try               T2;\n+         iconst_0;\n+         istore_1;\n+  L50:   stack_frame_type  append;\n+         locals_map        class java\/lang\/Object, int;\n+         iload_1;\n+         sipush            27000;\n+         if_icmpge         L63;\n+         iinc              1, 1;\n+         goto              L50;\n+  L63:   stack_frame_type  chop1;\n+         aload_0;\n+         monitorexit;\n+         endtry            T2;\n+         goto              L73;\n+         catch             T2 #0;\n+         catch             T3 #0;\n+         try               T3;\n+         stack_frame_type  stack1;\n+         stack_map         class java\/lang\/Throwable;\n+         astore_3;\n+         aload_0;\n+         monitorexit;\n+         endtry            T3;\n+         aload_3;\n+         athrow;\n+  L73:   stack_frame_type  chop1;\n+         return;\n+  }\n+  private static synthetic Method lambda$main$0:\"()V\"\n+    stack  2 locals  1\n+  {\n+         iconst_0;\n+         istore_0;\n+  L2:    stack_frame_type  append;\n+         locals_map        int;\n+         iload_0;\n+         sipush            10000;\n+         if_icmpge         L18;\n+         invokestatic      Method synchronizedMethod:\"()V\";\n+         iinc              0, 1;\n+         goto              L2;\n+  L18:   stack_frame_type  chop1;\n+         return;\n+  }\n+  static Method \"<clinit>\":\"()V\"\n+    stack  2 locals  0\n+  {\n+         new               class java\/lang\/Object;\n+         dup;\n+         invokespecial     Method java\/lang\/Object.\"<init>\":\"()V\";\n+         putstatic         Field lock:\"Ljava\/lang\/Object;\";\n+         return;\n+  }\n+\n+  public static final InnerClass Lookup = class java\/lang\/invoke\/MethodHandles$Lookup of class java\/lang\/invoke\/MethodHandles;\n+} \/\/ end Class ComplexLockingAndMultiThreading compiled from \"ComplexLockingAndMultiThreading.java\"\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/ComplexLockingAndMultiThreading.jasm","additions":194,"deletions":0,"binary":false,"changes":194,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8335662\n+ * @summary Run test with multi threading and complex locking\n+ *          to trigger OSR with large number of locals\n+ * @compile ComplexLockingAndMultiThreading.jasm\n+ *\n+ * @run main\/othervm -XX:+UseOnStackReplacement -XX:TieredStopAtLevel=1\n+ *      TestComplexLockingAndMultiThreading\n+ *\/\n+\n+public class TestComplexLockingAndMultiThreading {\n+\n+    public static void main(String... argv) throws Exception {\n+        ComplexLockingAndMultiThreading.main(argv);\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestComplexLockingAndMultiThreading.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"}]}