{"files":[{"patch":"@@ -278,1 +278,1 @@\n-        __ ldr(rscratch1, Address(OSR_buf, slot_offset + 1*BytesPerWord));\n+        __ ldr(rscratch1, __ form_address(rscratch1, OSR_buf, slot_offset + 1*BytesPerWord, 0));\n@@ -284,2 +284,2 @@\n-      __ ldr(r19, Address(OSR_buf, slot_offset));\n-      __ ldr(r20, Address(OSR_buf, slot_offset + BytesPerWord));\n+      __ ldr(r19, __ form_address(rscratch1, OSR_buf, slot_offset, 0));\n+      __ ldr(r20, __ form_address(rscratch1, OSR_buf, slot_offset + BytesPerWord, 0));\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"filename":"test\/hotspot\/jtreg\/compiler\/c1\/ComplexLockingAndMultiThreading.class","binary":true,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8335662\n+ * @summary Execute main() method\n+ *\n+ * @run main\/othervm -XX:+UseOnStackReplacement -XX:TieredStopAtLevel=1\n+ *      Test8335662\n+ *\/\n+\n+import java.lang.reflect.Method;\n+\n+public class Test8335662 {\n+\n+    public static void main(String... argv) throws Exception {\n+        Object[] methodArgs = new Object[]{null};\n+        Method m = ComplexLockingAndMultiThreading.class.getMethod(\"main\", String[].class);\n+        m.invoke(null, methodArgs);\n+    }\n+\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/Test8335662.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}