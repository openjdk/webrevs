{"files":[{"patch":"@@ -704,5 +704,4 @@\n-  \/\/ Sort\n-  JVMFlag** array = NEW_C_HEAP_ARRAY_RETURN_NULL(JVMFlag*, length, mtArguments);\n-  if (array != nullptr) {\n-    for (size_t i = 0; i < length; i++) {\n-      array[i] = &flagTable[i];\n+  \/\/ Mark flags clear\n+  for (size_t i = 0; i < length; i++) {\n+    if (flagTable[i].is_unlocked() && !(skipDefaults && flagTable[i].is_default())) {\n+      flagTable[i].clear_iterated();\n@@ -710,2 +709,4 @@\n-    qsort(array, length, sizeof(JVMFlag*), compare_flags);\n-\n+  }\n+  \/\/ Print the flag with highest sort value, then mark it\n+  for (size_t j = 0; j < length; j++) {\n+    JVMFlag* max = nullptr;\n@@ -713,2 +714,7 @@\n-      if (array[i]->is_unlocked() && !(skipDefaults && array[i]->is_default())) {\n-        array[i]->print_on(out, withComments, printRanges);\n+      if (!(flagTable[i].is_iterated()) && flagTable[i].is_unlocked() && !(skipDefaults && flagTable[i].is_default())) {\n+        if (max == nullptr) {\n+          max = &flagTable[i];\n+        }\n+        if (strcmp(max->name(), flagTable[i].name()) > 0) {\n+          max = &flagTable[i];\n+        }\n@@ -717,7 +723,3 @@\n-    FREE_C_HEAP_ARRAY(JVMFlag*, array);\n-  } else {\n-    \/\/ OOM? Print unsorted.\n-    for (size_t i = 0; i < length; i++) {\n-      if (flagTable[i].is_unlocked() && !(skipDefaults && flagTable[i].is_default())) {\n-        flagTable[i].print_on(out, withComments, printRanges);\n-      }\n+    if (max != nullptr) {\n+      max->print_on(out, withComments, printRanges);\n+      max->set_iterated();\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlag.cpp","additions":18,"deletions":16,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -82,0 +82,2 @@\n+    VALUE_ITERATED          = 1 << 18,\n+\n@@ -300,0 +302,4 @@\n+  void clear_iterated()           { _flags = Flags(_flags & ~VALUE_ITERATED);                 }\n+  void set_iterated()             { _flags = Flags(_flags | VALUE_ITERATED);                  }\n+  bool is_iterated()              { return (_flags & VALUE_ITERATED) != 0;                    }\n+\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlag.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}