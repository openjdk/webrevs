{"files":[{"patch":"@@ -34,0 +34,1 @@\n+#include \"utilities\/bitMap.hpp\"\n@@ -539,1 +540,0 @@\n-CHeapBitMap JVMFlag::iteratorMarkers(JVMFlag::numFlags, mtNMT);\n@@ -705,0 +705,3 @@\n+  BitMap::bm_word_t iteratorArray[BitMap::calc_size_in_words(length)];\n+  BitMapView iteratorMarkers(iteratorArray, length);\n+  iteratorMarkers.clear_range(0, length);\n@@ -707,2 +710,2 @@\n-    JVMFlag* best_flag = nullptr;\n-    size_t best_i = 0;\n+    JVMFlag* bestFlag = nullptr;\n+    size_t bestFlagIndex = 0;\n@@ -710,4 +713,6 @@\n-      if (!iteratorMarkers.at(i) && flagTable[i].is_unlocked() && !(skipDefaults && flagTable[i].is_default())) {\n-        if ((best_flag == nullptr) || (strcmp(best_flag->name(), flagTable[i].name()) > 0)) {\n-          best_flag = &flagTable[i];\n-          best_i = i;\n+      const bool skip = (skipDefaults && flagTable[i].is_default());\n+      const bool visited = iteratorMarkers.at(i);\n+      if (!visited && flagTable[i].is_unlocked() && !skip) {\n+        if ((bestFlag == nullptr) || (strcmp(bestFlag->name(), flagTable[i].name()) > 0)) {\n+          bestFlag = &flagTable[i];\n+          bestFlagIndex = i;\n@@ -717,3 +722,3 @@\n-    if (best_flag != nullptr) {\n-      best_flag->print_on(out, withComments, printRanges);\n-      iteratorMarkers.at_put(best_i, true);\n+    if (bestFlag != nullptr) {\n+      bestFlag->print_on(out, withComments, printRanges);\n+      iteratorMarkers.at_put(bestFlagIndex, true);\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlag.cpp","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"utilities\/bitMap.hpp\"\n@@ -156,2 +155,0 @@\n-  static CHeapBitMap iteratorMarkers;\n-\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlag.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}