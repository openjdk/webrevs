{"files":[{"patch":"@@ -539,1 +539,1 @@\n-CHeapBitMap* JVMFlag::iteratorMarkers = new CHeapBitMap(JVMFlag::numFlags, mtNMT);\n+CHeapBitMap JVMFlag::iteratorMarkers(JVMFlag::numFlags, mtNMT);\n@@ -705,3 +705,0 @@\n-  \/\/ Print flags without allocating memory. Start by marking all flags clear.\n-  iteratorMarkers->clear();\n-\n@@ -713,1 +710,1 @@\n-      if (!iteratorMarkers->at(i) && flagTable[i].is_unlocked() && !(skipDefaults && flagTable[i].is_default())) {\n+      if (!iteratorMarkers.at(i) && flagTable[i].is_unlocked() && !(skipDefaults && flagTable[i].is_default())) {\n@@ -722,1 +719,1 @@\n-      iteratorMarkers->at_put(best_i, true);\n+      iteratorMarkers.at_put(best_i, true);\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlag.cpp","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-  static CHeapBitMap* iteratorMarkers;\n+  static CHeapBitMap iteratorMarkers;\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlag.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}