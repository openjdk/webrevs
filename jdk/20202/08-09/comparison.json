{"files":[{"patch":"@@ -200,5 +200,0 @@\n-constexpr void BitMap::verify_size(idx_t size_in_bits) {\n-  assert(size_in_bits <= max_size_in_bits(),\n-         \"out of bounds: \" SIZE_FORMAT, size_in_bits);\n-}\n-\n","filename":"src\/hotspot\/share\/utilities\/bitMap.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -70,2 +70,2 @@\n-  static idx_t max_size_in_words() { return raw_to_words_align_down(~idx_t(0)); }\n-  static idx_t max_size_in_bits() { return max_size_in_words() * BitsPerWord; }\n+  constexpr static idx_t max_size_in_words() { return raw_to_words_align_down(~idx_t(0)); }\n+  constexpr static idx_t max_size_in_bits() { return max_size_in_words() * BitsPerWord; }\n@@ -260,1 +260,7 @@\n-  constexpr static void verify_size(idx_t size_in_bits) NOT_DEBUG_RETURN;\n+  constexpr static void verify_size(idx_t size_in_bits) {\n+#ifdef ASSERT\n+    assert(size_in_bits <= max_size_in_bits(),\n+           \"out of bounds: \" SIZE_FORMAT, size_in_bits);\n+#endif\n+  }\n+\n","filename":"src\/hotspot\/share\/utilities\/bitMap.hpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-const int LogBytesPerWord    = 3;\n+constexpr int LogBytesPerWord    = 3;\n@@ -236,1 +236,1 @@\n-const int LogBitsPerByte     = 3;\n+constexpr int LogBitsPerByte     = 3;\n@@ -239,1 +239,1 @@\n-const int LogBitsPerWord     = LogBitsPerByte + LogBytesPerWord;\n+constexpr int LogBitsPerWord     = LogBitsPerByte + LogBytesPerWord;\n@@ -245,1 +245,1 @@\n-const int BitsPerWord        = 1 << LogBitsPerWord;\n+constexpr int BitsPerWord        = 1 << LogBitsPerWord;\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}