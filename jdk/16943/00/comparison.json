{"files":[{"patch":"@@ -268,1 +268,6 @@\n-        return compilerToVM().getResolvedJavaType(this, config().subklassOffset, false) == null;\n+        \/\/ In general, compilerToVM().getResolvedJavaType should always be used to read a Klass*\n+        \/\/ from HotSpot data structures but that has the side effect of creating a strong reference\n+        \/\/ to the Class which we do not want since it can cause class unloading problems.  Since\n+        \/\/ this code is only checking for null vs non-null so it should be safe to perform this\n+        \/\/ check directly.\n+        return UNSAFE.getLong(this.getKlassPointer() + config().subklassOffset) == 0;\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotResolvedObjectTypeImpl.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}