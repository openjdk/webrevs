{"files":[{"patch":"@@ -34,1 +34,0 @@\n-import java.security.Permission;\n@@ -222,29 +221,1 @@\n-        JarFile result = fileCache.get(urlKey(url));\n-\n-        \/* if the JAR file is cached, the permission will always be there *\/\n-        if (result != null) {\n-            @SuppressWarnings(\"removal\")\n-            SecurityManager sm = System.getSecurityManager();\n-            if (sm != null) {\n-                Permission perm = getPermission(result);\n-                if (perm != null) {\n-                    try {\n-                        sm.checkPermission(perm);\n-                    } catch (SecurityException se) {\n-                        \/\/ fallback to checkRead\/checkConnect for pre 1.2\n-                        \/\/ security managers\n-                        if ((perm instanceof java.io.FilePermission) &&\n-                            perm.getActions().contains(\"read\")) {\n-                            sm.checkRead(perm.getName());\n-                        } else if ((perm instanceof\n-                            java.net.SocketPermission) &&\n-                            perm.getActions().contains(\"connect\")) {\n-                            sm.checkConnect(url.getHost(), url.getPort());\n-                        } else {\n-                            throw se;\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-        return result;\n+        return fileCache.get(urlKey(url));\n@@ -258,12 +229,0 @@\n-\n-    private Permission getPermission(JarFile jarFile) {\n-        try {\n-            URLConnection uc = getConnection(jarFile);\n-            if (uc != null)\n-                return uc.getPermission();\n-        } catch (IOException ioe) {\n-            \/\/ gulp\n-        }\n-\n-        return null;\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/jar\/JarFileFactory.java","additions":1,"deletions":42,"binary":false,"changes":43,"status":"modified"}]}