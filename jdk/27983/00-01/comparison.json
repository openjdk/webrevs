{"files":[{"patch":"@@ -104,1 +104,0 @@\n-#ifdef ASSERT\n@@ -106,1 +105,1 @@\n-    ShenandoahOldGeneration* old_generation = heap->old_generation();\n+    const ShenandoahOldGeneration* old_generation = heap->old_generation();\n@@ -110,0 +109,5 @@\n+    } else {\n+      \/\/ This is still necessary for degenerated cycles because the degeneration point may occur\n+      \/\/ after final mark of the young generation. See ShenandoahConcurrentGC::op_final_update_refs for\n+      \/\/ a more detailed explanation.\n+      old_generation->transfer_pointers_from_satb();\n@@ -121,1 +125,0 @@\n-#endif\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1056,6 +1056,0 @@\n-  if (is_concurrent_old_mark_in_progress()) {\n-    \/\/ This is still necessary for degenerated cycles because the degeneration point may occur\n-    \/\/ after final mark of the young generation. See ShenandoahConcurrentGC::op_final_update_refs for\n-    \/\/ a more detailed explanation.\n-    old_generation()->transfer_pointers_from_satb();\n-  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}