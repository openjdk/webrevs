{"files":[{"patch":"@@ -37,0 +37,13 @@\n+ * <h2 id=\"deflater-usage\">Deflater Usage<\/h2>\n+ * <p>This class uses a {@link Deflater} for compressing the data. Two forms of constructors\n+ * are available for constructing a {@code DeflaterInputStream} - one which accepts\n+ * a {@code Deflater} and one which doesn't. The constructors that don't accept a {@code Deflater}\n+ * will create and use a {@code Deflater} instance of their own. The {@code Deflater} instance\n+ * created in those cases will be {@linkplain Deflater#close() closed} when the\n+ * {@code DeflaterInputStream} instance itself is {@linkplain #close() closed}.\n+ * On the other hand, if a {@code DeflaterInputStream} was\n+ * constructed by passing it a {@code Deflater}, then closing the {@code DeflaterInputStream}\n+ * will not close the passed {@code Deflater}. In those cases, it is the responsibility of\n+ * the caller to close the {@code Deflater} as and when appropriate, after the\n+ * {@code DeflaterInputStream} has been closed.\n+ *\n@@ -86,4 +99,2 @@\n-     * @implSpec {@linkplain #close() Closing} the {@code DeflaterInputStream}\n-     * will not close the given {@code defl}. After the {@code DeflaterInputStream}\n-     * is closed, the caller is responsible for\n-     * {@linkplain Deflater#close() closing the Deflater} if it is no longer needed.\n+     * @apiNote {@linkplain #close() Closing} the {@code DeflaterInputStream}\n+     * {@linkplain ##deflater-usage will not close} the given {@code defl}.\n@@ -103,4 +114,2 @@\n-     * @implSpec {@linkplain #close() Closing} the {@code DeflaterInputStream}\n-     * will not close the given {@code defl}. After the {@code DeflaterInputStream}\n-     * is closed, the caller is responsible for\n-     * {@linkplain Deflater#close() closing the Deflater} if it is no longer needed.\n+     * @apiNote {@linkplain #close() Closing} the {@code DeflaterInputStream}\n+     * {@linkplain ##deflater-usage will not close} the given {@code defl}.\n@@ -134,0 +143,4 @@\n+     * @apiNote If this {@code DeflaterInputStream} was constructed by passing\n+     * a {@code Deflater}, then this method {@linkplain ##deflater-usage does not close}\n+     * that {@code Deflater}.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/DeflaterInputStream.java","additions":21,"deletions":8,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -41,0 +41,13 @@\n+ * <h2 id=\"deflater-usage\">Deflater Usage<\/h2>\n+ * <p>This class uses a {@link Deflater} for compressing the data. Two forms of constructors\n+ * are available for constructing a {@code DeflaterOutputStream} - one which accepts\n+ * a {@code Deflater} and one which doesn't. The constructors that don't accept a {@code Deflater}\n+ * will create and use a {@code Deflater} instance of their own. The {@code Deflater} instance\n+ * created in those cases will be {@linkplain Deflater#close() closed} when the\n+ * {@code DeflaterOutputStream} instance itself is {@linkplain #close() closed}.\n+ * On the other hand, if a {@code DeflaterOutputStream} was\n+ * constructed by passing it a {@code Deflater}, then closing the {@code DeflaterOutputStream}\n+ * will not close the passed {@code Deflater}. In those cases, it is the responsibility of\n+ * the caller to close the {@code Deflater} as and when appropriate, after the\n+ * {@code DeflaterOutputStream} has been closed.\n+ *\n@@ -67,4 +80,2 @@\n-     * @implSpec {@linkplain #close() Closing} the {@code DeflaterOutputStream}\n-     * will not close the given {@code def}. After the {@code DeflaterOutputStream}\n-     * is closed, the caller is responsible for\n-     * {@linkplain Deflater#close() closing the Deflater} if it is no longer needed.\n+     * @apiNote {@linkplain #close() Closing} the {@code DeflaterOutputStream}\n+     * {@linkplain ##deflater-usage will not close} the given {@code def}.\n@@ -108,4 +119,2 @@\n-     * @implSpec {@linkplain #close() Closing} the {@code DeflaterOutputStream}\n-     * will not close the given {@code def}. After the {@code DeflaterOutputStream}\n-     * is closed, the caller is responsible for\n-     * {@linkplain Deflater#close() closing the Deflater} if it is no longer needed.\n+     * @apiNote {@linkplain #close() Closing} the {@code DeflaterOutputStream}\n+     * {@linkplain ##deflater-usage will not close} the given {@code def}.\n@@ -126,4 +135,2 @@\n-     * @implSpec {@linkplain #close() Closing} the {@code DeflaterOutputStream}\n-     * will not close the given {@code def}. After the {@code DeflaterOutputStream}\n-     * is closed, the caller is responsible for\n-     * {@linkplain Deflater#close() closing the Deflater} if it is no longer needed.\n+     * @apiNote {@linkplain #close() Closing} the {@code DeflaterOutputStream}\n+     * {@linkplain ##deflater-usage will not close} the given {@code def}.\n@@ -155,4 +162,2 @@\n-     * @implSpec {@linkplain #close() Closing} the {@code DeflaterOutputStream}\n-     * will not close the given {@code def}. After the {@code DeflaterOutputStream}\n-     * is closed, the caller is responsible for\n-     * {@linkplain Deflater#close() closing the Deflater} if it is no longer needed.\n+     * @apiNote {@linkplain #close() Closing} the {@code DeflaterOutputStream}\n+     * {@linkplain ##deflater-usage will not close} the given {@code def}.\n@@ -264,0 +269,5 @@\n+     *\n+     * @apiNote If this {@code DeflaterOutputStream} was constructed by passing\n+     * a {@code Deflater}, then this method {@linkplain ##deflater-usage does not close}\n+     * that {@code Deflater}.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/DeflaterOutputStream.java","additions":26,"deletions":16,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -41,0 +41,15 @@\n+ *\n+ * <h2 id=\"inflater-usage\">Inflater Usage<\/h2>\n+ * <p>This class uses an {@link Inflater} for uncompressing the data. Two forms of constructors\n+ * are available for constructing an {@code InflaterInputStream} - one which accepts\n+ * an {@code Inflater} and one which doesn't. The constructors that don't accept an\n+ * {@code Inflater} will create and use an {@code Inflater} instance of their own.\n+ * The {@code Inflater} instance created in those cases will be\n+ * {@linkplain Inflater#close() closed} when the {@code InflaterInputStream} instance itself\n+ * is {@linkplain #close() closed}.\n+ * On the other hand, if an {@code InflaterInputStream} was\n+ * constructed by passing it an {@code Inflater}, then closing the {@code InflaterInputStream}\n+ * will not close the passed {@code Inflater}. In those cases, it is the responsibility of\n+ * the caller to close the {@code Inflater} as and when appropriate, after the\n+ * {@code InflaterInputStream} has been closed.\n+ *\n@@ -79,4 +94,2 @@\n-     * @implSpec {@linkplain #close() Closing} the {@code InflaterInputStream}\n-     * will not close the given {@code inf}. After the {@code InflaterInputStream}\n-     * is closed, the caller is responsible for\n-     * {@linkplain Inflater#close() closing the Inflater} if it is no longer needed.\n+     * @apiNote {@linkplain #close() Closing} the {@code InflaterInputStream}\n+     * {@linkplain ##inflater-usage will not close} the given {@code inf}.\n@@ -104,4 +117,2 @@\n-     * @implSpec {@linkplain #close() Closing} the {@code InflaterInputStream}\n-     * will not close the given {@code inf}. After the {@code InflaterInputStream}\n-     * is closed, the caller is responsible for\n-     * {@linkplain Inflater#close() closing the Inflater} if it is no longer needed.\n+     * @apiNote {@linkplain #close() Closing} the {@code InflaterInputStream}\n+     * {@linkplain ##inflater-usage will not close} the given {@code inf}.\n@@ -265,0 +276,5 @@\n+     *\n+     * @apiNote If this {@code InflaterInputStream} was constructed by passing\n+     * an {@code Inflater}, then this method {@linkplain ##inflater-usage does not close}\n+     * that {@code Inflater}.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/InflaterInputStream.java","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -37,0 +37,14 @@\n+ * <h2 id=\"inflater-usage\">Inflater Usage<\/h2>\n+ * <p>This class uses an {@link Inflater} for uncompressing the data. Two forms of constructors\n+ * are available for constructing an {@code InflaterOutputStream} - one which accepts\n+ * an {@code Inflater} and one which doesn't. The constructors that don't accept an\n+ * {@code Inflater} will create and use an {@code Inflater} instance of their own.\n+ * The {@code Inflater} instance created in those cases will be\n+ * {@linkplain Inflater#close() closed} when the {@code InflaterOutputStream} instance itself\n+ * is {@linkplain #close() closed}.\n+ * On the other hand, if an {@code InflaterOutputStream} was\n+ * constructed by passing it an {@code Inflater}, then closing the {@code InflaterOutputStream}\n+ * will not close the passed {@code Inflater}. In those cases, it is the responsibility of\n+ * the caller to close the {@code Inflater} as and when appropriate, after the\n+ * {@code InflaterOutputStream} has been closed.\n+ *\n@@ -86,4 +100,2 @@\n-     * @implSpec {@linkplain #close() Closing} the {@code InflaterOutputStream}\n-     * will not close the given {@code infl}. After the {@code InflaterOutputStream}\n-     * is closed, the caller is responsible for\n-     * {@linkplain Inflater#close() closing the Inflater} if it is no longer needed.\n+     * @apiNote {@linkplain #close() Closing} the {@code InflaterOutputStream}\n+     * {@linkplain ##inflater-usage will not close} the given {@code infl}.\n@@ -103,4 +115,2 @@\n-     * @implSpec {@linkplain #close() Closing} the {@code InflaterOutputStream}\n-     * will not close the given {@code infl}. After the {@code InflaterOutputStream}\n-     * is closed, the caller is responsible for\n-     * {@linkplain Inflater#close() closing the Inflater} if it is no longer needed.\n+     * @apiNote {@linkplain #close() Closing} the {@code InflaterOutputStream}\n+     * {@linkplain ##inflater-usage will not close} the given {@code infl}.\n@@ -134,0 +144,4 @@\n+     * @apiNote If this {@code InflaterOutputStream} was constructed by passing\n+     * an {@code Inflater}, then this method {@linkplain ##inflater-usage does not close}\n+     * that {@code Inflater}.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/InflaterOutputStream.java","additions":22,"deletions":8,"binary":false,"changes":30,"status":"modified"}]}