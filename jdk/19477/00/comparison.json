{"files":[{"patch":"@@ -197,3 +197,5 @@\n-            static final TerminalOp<?, ?> OP_FIND_FIRST = new FindOp<>(true,\n-                    StreamShape.REFERENCE, Optional.empty(),\n-                    Optional::isPresent, FindSink.OfRef::new);\n+            private static final Predicate<Optional<Object>> IS_PRESENT = Optional::isPresent;\n+            private static final Supplier<TerminalSink<Object, Optional<Object>>> NEW\n+                    = FindOps.FindSink.OfRef::new;\n+            static final FindOp<?, ?> OP_FIND_FIRST = new FindOp<>(true,\n+                    StreamShape.REFERENCE, Optional.empty(), IS_PRESENT, NEW);\n@@ -201,3 +203,2 @@\n-            static final TerminalOp<?, ?> OP_FIND_ANY = new FindOp<>(false,\n-                    StreamShape.REFERENCE, Optional.empty(),\n-                    Optional::isPresent, FindSink.OfRef::new);\n+            static final FindOp<?, ?> OP_FIND_ANY = new FindOp<>(false,\n+                    StreamShape.REFERENCE, Optional.empty(), IS_PRESENT, NEW);\n@@ -220,0 +221,3 @@\n+            private static final Predicate<OptionalInt> IS_PRESENT = OptionalInt::isPresent;\n+            private static final Supplier<TerminalSink<Integer, OptionalInt>> NEW\n+                    = FindOps.FindSink.OfInt::new;\n@@ -221,2 +225,1 @@\n-                    StreamShape.INT_VALUE, OptionalInt.empty(),\n-                    OptionalInt::isPresent, FindSink.OfInt::new);\n+                    StreamShape.INT_VALUE, OptionalInt.empty(), IS_PRESENT, NEW);\n@@ -224,2 +227,1 @@\n-                    StreamShape.INT_VALUE, OptionalInt.empty(),\n-                    OptionalInt::isPresent, FindSink.OfInt::new);\n+                    StreamShape.INT_VALUE, OptionalInt.empty(), IS_PRESENT, NEW);\n@@ -242,0 +244,3 @@\n+            private static final Predicate<OptionalLong> IS_PRESENT = OptionalLong::isPresent;\n+            private static final Supplier<TerminalSink<Long, OptionalLong>> NEW\n+                    = FindOps.FindSink.OfLong::new;\n@@ -243,2 +248,1 @@\n-                    StreamShape.LONG_VALUE, OptionalLong.empty(),\n-                    OptionalLong::isPresent, FindSink.OfLong::new);\n+                    StreamShape.LONG_VALUE, OptionalLong.empty(), IS_PRESENT, NEW);\n@@ -246,2 +250,1 @@\n-                    StreamShape.LONG_VALUE, OptionalLong.empty(),\n-                    OptionalLong::isPresent, FindSink.OfLong::new);\n+                    StreamShape.LONG_VALUE, OptionalLong.empty(), IS_PRESENT, NEW);\n@@ -264,0 +267,3 @@\n+            private static final Predicate<OptionalDouble> IS_PRESENT = OptionalDouble::isPresent;\n+            private static final Supplier<TerminalSink<Double, OptionalDouble>> NEW\n+                    = FindOps.FindSink.OfDouble::new;\n@@ -265,2 +271,1 @@\n-                    StreamShape.DOUBLE_VALUE, OptionalDouble.empty(),\n-                    OptionalDouble::isPresent, FindSink.OfDouble::new);\n+                    StreamShape.DOUBLE_VALUE, OptionalDouble.empty(), IS_PRESENT, NEW);\n@@ -268,2 +273,1 @@\n-                    StreamShape.DOUBLE_VALUE, OptionalDouble.empty(),\n-                    OptionalDouble::isPresent, FindSink.OfDouble::new);\n+                    StreamShape.DOUBLE_VALUE, OptionalDouble.empty(), IS_PRESENT, NEW);\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/FindOps.java","additions":22,"deletions":18,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -63,0 +63,6 @@\n+    public static void main(String... args) {\n+        FindAny findAny = new FindAny();\n+        findAny.size = 100000;\n+        findAny.seq_invoke();\n+        findAny.par_invoke();\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/stream\/ops\/ref\/FindAny.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}