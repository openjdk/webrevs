{"files":[{"patch":"@@ -354,17 +354,17 @@\n-        a[1] = AbstractPoolEntry.Utf8EntryImpl.class;\n-        a[3] = AbstractPoolEntry.IntegerEntryImpl.class;\n-        a[4] = AbstractPoolEntry.FloatEntryImpl.class;\n-        a[5] = AbstractPoolEntry.LongEntryImpl.class;\n-        a[6] = AbstractPoolEntry.DoubleEntryImpl.class;\n-        a[7] = AbstractPoolEntry.ClassEntryImpl.class;\n-        a[8] = AbstractPoolEntry.StringEntryImpl.class;\n-        a[9] = AbstractPoolEntry.FieldRefEntryImpl.class;\n-        a[10] = AbstractPoolEntry.MethodRefEntryImpl.class;\n-        a[11] = AbstractPoolEntry.InterfaceMethodRefEntryImpl.class;\n-        a[12] = AbstractPoolEntry.NameAndTypeEntryImpl.class;\n-        a[15] = AbstractPoolEntry.MethodHandleEntryImpl.class;\n-        a[16] = AbstractPoolEntry.MethodTypeEntryImpl.class;\n-        a[17] = AbstractPoolEntry.ConstantDynamicEntryImpl.class;\n-        a[18] = AbstractPoolEntry.InvokeDynamicEntryImpl.class;\n-        a[19] = AbstractPoolEntry.ModuleEntryImpl.class;\n-        a[20] = AbstractPoolEntry.PackageEntryImpl.class;\n+        a[TAG_UTF8] = AbstractPoolEntry.Utf8EntryImpl.class;\n+        a[TAG_INTEGER] = AbstractPoolEntry.IntegerEntryImpl.class;\n+        a[TAG_FLOAT] = AbstractPoolEntry.FloatEntryImpl.class;\n+        a[TAG_LONG] = AbstractPoolEntry.LongEntryImpl.class;\n+        a[TAG_DOUBLE] = AbstractPoolEntry.DoubleEntryImpl.class;\n+        a[TAG_CLASS] = AbstractPoolEntry.ClassEntryImpl.class;\n+        a[TAG_STRING] = AbstractPoolEntry.StringEntryImpl.class;\n+        a[TAG_FIELDREF] = AbstractPoolEntry.FieldRefEntryImpl.class;\n+        a[TAG_METHODREF] = AbstractPoolEntry.MethodRefEntryImpl.class;\n+        a[TAG_INTERFACEMETHODREF] = AbstractPoolEntry.InterfaceMethodRefEntryImpl.class;\n+        a[TAG_NAMEANDTYPE] = AbstractPoolEntry.NameAndTypeEntryImpl.class;\n+        a[TAG_METHODHANDLE] = AbstractPoolEntry.MethodHandleEntryImpl.class;\n+        a[TAG_METHODTYPE] = AbstractPoolEntry.MethodTypeEntryImpl.class;\n+        a[TAG_CONSTANTDYNAMIC] = AbstractPoolEntry.ConstantDynamicEntryImpl.class;\n+        a[TAG_INVOKEDYNAMIC] = AbstractPoolEntry.InvokeDynamicEntryImpl.class;\n+        a[TAG_MODULE] = AbstractPoolEntry.ModuleEntryImpl.class;\n+        a[TAG_PACKAGE] = AbstractPoolEntry.PackageEntryImpl.class;\n@@ -382,0 +382,5 @@\n+    static <T extends PoolEntry> T checkType(PoolEntry e, int index, Class<T> cls) {\n+        if (cls.isInstance(e)) return cls.cast(e);\n+        throw new ConstantPoolException(\"Not a \" + cls.getSimpleName() + \" at index: \" + index);\n+    }\n+\n@@ -457,5 +462,0 @@\n-    static <T extends PoolEntry> T checkType(PoolEntry e, int index, Class<T> cls) {\n-        if (cls.isInstance(e)) return cls.cast(e);\n-        throw new ConstantPoolException(\"Not a \" + cls.getSimpleName() + \" at index: \" + index);\n-    }\n-\n@@ -474,1 +474,1 @@\n-        if (index == 0)\n+        if (index == 0) {\n@@ -476,1 +476,1 @@\n-\n+        }\n@@ -497,1 +497,1 @@\n-        return entryByIndex(readU2(pos), ModuleEntry.class);\n+        return readEntry(pos, ModuleEntry.class);\n@@ -502,1 +502,1 @@\n-        return entryByIndex(readU2(pos), PackageEntry.class);\n+        return readEntry(pos, PackageEntry.class);\n@@ -507,1 +507,1 @@\n-        return entryByIndex(readU2(pos), ClassEntry.class);\n+        return readEntry(pos, ClassEntry.class);\n@@ -512,1 +512,1 @@\n-        return entryByIndex(readU2(pos), NameAndTypeEntry.class);\n+        return readEntry(pos, NameAndTypeEntry.class);\n@@ -517,1 +517,1 @@\n-        return entryByIndex(readU2(pos), MethodHandleEntry.class);\n+        return readEntry(pos, MethodHandleEntry.class);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassReaderImpl.java","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"}]}