{"files":[{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8167143 8174269\n+ * @bug 8167143 8174269 8358170\n@@ -33,1 +33,1 @@\n- * Implicit COMPAT Locales nn-NO, nb-NO are reflected in available locales\n+ * Implicit FALLBACK Locales nn-NO, nb-NO are reflected in available locales\n@@ -41,0 +41,1 @@\n+ * @run main Bug8167143 testFallback\n@@ -67,1 +68,1 @@\n-    private static final List<Locale> COMPAT_IMPLICIT_LOCS = List.of(Locale.forLanguageTag(\"nn-NO\"),\n+    private static final List<Locale> FALLBACK_IMPLICIT_LOCS = List.of(Locale.forLanguageTag(\"nn-NO\"),\n@@ -100,2 +101,2 @@\n-            case \"testCompat\":\n-                testImplicitCompatLocales();\n+            case \"testFallback\":\n+                testImplicitFallbackLocales();\n@@ -233,2 +234,3 @@\n-     * checks that locales nn-NO  and nb-NO should be present in list of supported locales for\n-     * all Providers for COMPAT.\n+     * Checks that locales (nn-NO  and nb-NO) implicitly supported in FALLBACK\n+     * provider should be present in output of getAvailableLocales() for\n+     * BreakIteratorProvider and CollatorProvider.\n@@ -236,26 +238,6 @@\n-    private static void testImplicitCompatLocales() {\n-        LocaleProviderAdapter jre = LocaleProviderAdapter.forJRE();\n-        checkPresenceCompat(\"BreakIteratorProvider\",\n-                jre.getBreakIteratorProvider().getAvailableLocales());\n-        checkPresenceCompat(\"CollatorProvider\",\n-                jre.getCollatorProvider().getAvailableLocales());\n-        checkPresenceCompat(\"DateFormatProvider\",\n-                jre.getDateFormatProvider().getAvailableLocales());\n-        checkPresenceCompat(\"DateFormatSymbolsProvider\",\n-                jre.getDateFormatSymbolsProvider().getAvailableLocales());\n-        checkPresenceCompat(\"DecimalFormatSymbolsProvider\",\n-                jre.getDecimalFormatSymbolsProvider().getAvailableLocales());\n-        checkPresenceCompat(\"NumberFormatProvider\",\n-                jre.getNumberFormatProvider().getAvailableLocales());\n-        checkPresenceCompat(\"CurrencyNameProvider\",\n-                jre.getCurrencyNameProvider().getAvailableLocales());\n-        checkPresenceCompat(\"LocaleNameProvider\",\n-                jre.getLocaleNameProvider().getAvailableLocales());\n-        checkPresenceCompat(\"TimeZoneNameProvider\",\n-                jre.getTimeZoneNameProvider().getAvailableLocales());\n-        checkPresenceCompat(\"CalendarDataProvider\",\n-                jre.getCalendarDataProvider().getAvailableLocales());\n-        checkPresenceCompat(\"CalendarNameProvider\",\n-                jre.getCalendarNameProvider().getAvailableLocales());\n-        checkPresenceCompat(\"CalendarProvider\",\n-                jre.getCalendarProvider().getAvailableLocales());\n+    private static void testImplicitFallbackLocales() {\n+        LocaleProviderAdapter fallback = LocaleProviderAdapter.forType(Type.FALLBACK);\n+        checkPresenceFallback(\"BreakIteratorProvider\",\n+                fallback.getBreakIteratorProvider().getAvailableLocales());\n+        checkPresenceFallback(\"CollatorProvider\",\n+                fallback.getCollatorProvider().getAvailableLocales());\n@@ -264,1 +246,1 @@\n-    private static void checkPresenceCompat(String testName, Locale[] got) {\n+    private static void checkPresenceFallback(String testName, Locale[] got) {\n@@ -267,1 +249,1 @@\n-        if (!gotList.removeAll(COMPAT_IMPLICIT_LOCS)) {\n+        if (!gotList.removeAll(FALLBACK_IMPLICIT_LOCS)) {\n@@ -269,1 +251,1 @@\n-            List<Locale> implicitLocales = new ArrayList<>(COMPAT_IMPLICIT_LOCS);\n+            List<Locale> implicitLocales = new ArrayList<>(FALLBACK_IMPLICIT_LOCS);\n@@ -271,1 +253,1 @@\n-            throw new RuntimeException(\"Locales those not correctly reflected are \"\n+            throw new RuntimeException(\"Locale(s) not correctly reflected are \"\n","filename":"test\/jdk\/java\/util\/TimeZone\/Bug8167143.java","additions":19,"deletions":37,"binary":false,"changes":56,"status":"modified"}]}