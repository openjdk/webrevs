{"files":[{"patch":"@@ -966,13 +966,9 @@\n-  \/\/ T1 = -1\n-  vpcmpeqq(xtmp1, xtmp1, xtmp1, vlen_enc);\n-  \/\/ T1 = -1 << 63\n-  vpsllq(xtmp1, xtmp1, 63, vlen_enc);\n-  \/\/ Convert SRC2 to signed value i.e. T2 = T1 + SRC2\n-  vpaddq(xtmp2, xtmp1, src2, vlen_enc);\n-  \/\/ Convert SRC1 to signed value i.e. T1 = T1 + SRC1\n-  vpaddq(xtmp1, xtmp1, src1, vlen_enc);\n-  \/\/ Mask = T2 > T1\n-  vpcmpgtq(xtmp1, xtmp2, xtmp1, vlen_enc);\n-  if (opcode == Op_UMaxV) {\n-    \/\/ Res = Mask ? Src2 : Src1\n-    vpblendvb(dst, src1, src2, xtmp1, vlen_enc);\n+  \/\/ For optimality, leverage a full vector width of 512 bits\n+  \/\/ for operations over smaller vector sizes on AVX512 targets.\n+  if (VM_Version::supports_evex() && !VM_Version::supports_avx512vl()) {\n+    if (opcode == Op_UMaxV) {\n+      evpmaxuq(dst, k0, src1, src2, false, Assembler::AVX_512bit);\n+    } else {\n+      assert(opcode == Op_UMinV, \"required\");\n+      evpminuq(dst, k0, src1, src2, false, Assembler::AVX_512bit);\n+    }\n@@ -980,2 +976,17 @@\n-    \/\/ Res = Mask ? Src1 : Src2\n-    vpblendvb(dst, src2, src1, xtmp1, vlen_enc);\n+    \/\/ T1 = -1\n+    vpcmpeqq(xtmp1, xtmp1, xtmp1, vlen_enc);\n+    \/\/ T1 = -1 << 63\n+    vpsllq(xtmp1, xtmp1, 63, vlen_enc);\n+    \/\/ Convert SRC2 to signed value i.e. T2 = T1 + SRC2\n+    vpaddq(xtmp2, xtmp1, src2, vlen_enc);\n+    \/\/ Convert SRC1 to signed value i.e. T1 = T1 + SRC1\n+    vpaddq(xtmp1, xtmp1, src1, vlen_enc);\n+    \/\/ Mask = T2 > T1\n+    vpcmpgtq(xtmp1, xtmp2, xtmp1, vlen_enc);\n+    if (opcode == Op_UMaxV) {\n+      \/\/ Res = Mask ? Src2 : Src1\n+      vpblendvb(dst, src1, src2, xtmp1, vlen_enc);\n+    } else {\n+      \/\/ Res = Mask ? Src1 : Src2\n+      vpblendvb(dst, src2, src1, xtmp1, vlen_enc);\n+    }\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":26,"deletions":15,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2141,2 +2141,0 @@\n-    case Op_MaxV:\n-    case Op_MinV:\n@@ -2145,0 +2143,5 @@\n+      if (size_in_bits < 512 && !VM_Version::supports_avx512vl()) {\n+        return false;\n+      } \/\/ fallthrough\n+    case Op_MaxV:\n+    case Op_MinV:\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}