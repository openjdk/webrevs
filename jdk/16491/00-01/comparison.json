{"files":[{"patch":"@@ -829,1 +829,4 @@\n-            return (year%100 != 0) || (year%400 == 0); \/\/ Gregorian\n+            \/\/ A multiple of 100, 200 and 300 is not divisible by 16, but 400 is.\n+            \/\/ So for a year that's divisible by 4, checking that it's also divisible by 16\n+            \/\/ is sufficient to determine it must be a leap year.\n+            return (year & 15) == 0 || (year % 100 != 0); \/\/ Gregorian\n@@ -843,1 +846,1 @@\n-        return gregorian ? (year%100 != 0) || (year%400 == 0) : true;\n+        return !gregorian || (year & 15) == 0 || (year % 100 != 0);\n","filename":"src\/java.base\/share\/classes\/java\/util\/GregorianCalendar.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -43,2 +43,6 @@\n-        return (((gregorianYear % 4) == 0) && (((gregorianYear % 100) != 0)\n-                || ((gregorianYear % 400) == 0)));\n+        \/\/ A year that is a multiple of 100, 200 and 300 is not divisible by 16, but 400 is.\n+        \/\/ So for a year that's divisible by 4, checking that it's also divisible by 16\n+        \/\/ is sufficient to determine it must be a leap year.\n+        return (gregorianYear & 15) == 0\n+                ? (gregorianYear & 3) == 0\n+                : (gregorianYear & 3) == 0 && gregorianYear % 100 != 0;\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/CalendarUtils.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -932,1 +932,1 @@\n-            return ((year & 3) == 0) && ((year % 100) != 0 || (year % 400) == 0);\n+            return CalendarUtils.isGregorianLeapYear(year);\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ZoneInfoFile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import java.time.ZonedDateTime;\n@@ -43,0 +44,1 @@\n+import java.util.GregorianCalendar;\n@@ -60,0 +62,2 @@\n+    private GregorianCalendar calendar;\n+\n@@ -69,0 +73,1 @@\n+        calendar = GregorianCalendar.from(ZonedDateTime.now());\n@@ -85,0 +90,7 @@\n+    @Benchmark\n+    public void isLeapYearGregorian(Blackhole bh) {\n+        for (long year : years) {\n+            bh.consume(calendar.isLeapYear((int)year));\n+        }\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/time\/LeapYearBench.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}