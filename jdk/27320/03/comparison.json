{"files":[{"patch":"@@ -142,1 +142,1 @@\n-    Label detect_486, cpu486, detect_586, std_cpuid1, std_cpuid4, std_cpuid24;\n+    Label detect_486, cpu486, detect_586, std_cpuid1, std_cpuid4, std_cpuid24, std_cpuid29;\n@@ -341,0 +341,10 @@\n+    \/\/\n+    \/\/ cpuid(0x29) APX NCI NDD NF (EAX = 29H, ECX = 0).\n+    \/\/\n+    __ bind(std_cpuid29);\n+    __ movl(rax, 0x29);\n+    __ movl(rcx, 0);\n+    __ cpuid();\n+    __ lea(rsi, Address(rbp, in_bytes(VM_Version::std_cpuid29_offset())));\n+    __ movl(Address(rsi, 0), rbx);\n+\n@@ -2917,1 +2927,2 @@\n-      xem_xcr0_eax.bits.apx_f != 0) {\n+      xem_xcr0_eax.bits.apx_f != 0 &&\n+      std_cpuid29_ebx.bits.apx_nci_ndd_nf != 0) {\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -309,0 +309,8 @@\n+  union StdCpuidEax29Ecx0 {\n+    uint32_t value;\n+    struct {\n+      uint32_t  apx_nci_ndd_nf  : 1,\n+                                : 31;\n+    } bits;\n+  };\n+\n@@ -594,0 +602,4 @@\n+    \/\/ cpuid function 0x29 APX Advanced Performance Extensions Leaf\n+    \/\/ eax = 0x29, ecx = 0\n+    StdCpuidEax29Ecx0 std_cpuid29_ebx;\n+\n@@ -714,0 +726,1 @@\n+  static ByteSize std_cpuid29_offset() { return byte_offset_of(CpuidInfo, std_cpuid29_ebx); }\n@@ -763,1 +776,3 @@\n-  static void set_apx_cpuFeatures() { _features.set_feature(CPU_APX_F); }\n+  static void set_apx_cpuFeatures() {\n+    _features.set_feature(CPU_APX_F);\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"}]}