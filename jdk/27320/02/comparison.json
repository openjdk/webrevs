{"files":[{"patch":"@@ -142,1 +142,1 @@\n-    Label detect_486, cpu486, detect_586, std_cpuid1, std_cpuid4, std_cpuid24;\n+    Label detect_486, cpu486, detect_586, std_cpuid1, std_cpuid4, std_cpuid24, std_cpuid29;\n@@ -341,0 +341,10 @@\n+    \/\/\n+    \/\/ cpuid(0x29) APX NCI NDD NF (EAX = 29H, ECX = 0).\n+    \/\/\n+    __ bind(std_cpuid29);\n+    __ movl(rax, 0x29);\n+    __ movl(rcx, 0);\n+    __ cpuid();\n+    __ lea(rsi, Address(rbp, in_bytes(VM_Version::std_cpuid29_offset())));\n+    __ movl(Address(rsi, 0), rbx);\n+\n@@ -1014,0 +1024,1 @@\n+    _features.clear_feature(CPU_APX_NCI_NDD_NF);\n@@ -1043,0 +1054,1 @@\n+      _features.clear_feature(CPU_APX_NCI_NDD_NF);\n@@ -1063,1 +1075,1 @@\n-  bool apx_supported = os_supports_apx_egprs() && supports_apx_f() && supports_avx512vl();\n+  bool apx_supported = os_supports_apx_egprs() && supports_apx_f() && supports_apx_nci_ndd_nf() && supports_avx512vl();\n@@ -1071,0 +1083,1 @@\n+    _features.clear_feature(CPU_APX_NCI_NDD_NF);\n@@ -2917,1 +2930,2 @@\n-      xem_xcr0_eax.bits.apx_f != 0) {\n+      xem_xcr0_eax.bits.apx_f != 0 &&\n+      std_cpuid29_ebx.bits.apx_nci_ndd_nf != 0) {\n@@ -2919,0 +2933,1 @@\n+    vm_features.set_feature(CPU_APX_NCI_NDD_NF);\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -309,0 +309,8 @@\n+  union StdCpuidEax29Ecx0 {\n+    uint32_t value;\n+    struct {\n+      uint32_t  apx_nci_ndd_nf  : 1,\n+                                : 31;\n+    } bits;\n+  };\n+\n@@ -444,1 +452,1 @@\n-    decl(APX_F,             \"apx_f\",             60) \/* Intel Advanced Performance Extensions*\/ \\\n+    decl(APX_F,             \"apx_f\",             60) \/* Intel Advanced Performance Extensions(APX)*\/ \\\n@@ -449,1 +457,2 @@\n-    decl(HYBRID,            \"hybrid\",            65) \/* Hybrid architecture *\/\n+    decl(HYBRID,            \"hybrid\",            65) \/* Hybrid architecture *\/ \\\n+    decl(APX_NCI_NDD_NF,    \"apx_nci_ndd_nf\",    66) \/* Intel APX New Conditional Instructions(NCI), New Data Destination(NDD) and No Flags(NF)*\/\n@@ -594,0 +603,4 @@\n+    \/\/ cpuid function 0x29 APX Advanced Performance Extensions Leaf\n+    \/\/ eax = 0x29, ecx = 0\n+    StdCpuidEax29Ecx0 std_cpuid29_ebx;\n+\n@@ -714,0 +727,1 @@\n+  static ByteSize std_cpuid29_offset() { return byte_offset_of(CpuidInfo, std_cpuid29_ebx); }\n@@ -763,1 +777,4 @@\n-  static void set_apx_cpuFeatures() { _features.set_feature(CPU_APX_F); }\n+  static void set_apx_cpuFeatures() {\n+    _features.set_feature(CPU_APX_F);\n+    _features.set_feature(CPU_APX_NCI_NDD_NF);\n+  }\n@@ -867,0 +884,1 @@\n+  static bool supports_apx_nci_ndd_nf()  { return _features.supports_feature(CPU_APX_NCI_NDD_NF); }\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":21,"deletions":3,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -287,0 +287,1 @@\n+        APX_NCI_NDD_NF,\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/amd64\/AMD64.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-                    \"apx_f\",        \"avx10_1\",          \"avx10_2\",           \"avx512_fp16\",\n+                    \"apx_f\",        \"apx_nci_ndd_nf\",   \"avx10_1\",           \"avx10_2\",           \"avx512_fp16\",\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/CPUInfoTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}