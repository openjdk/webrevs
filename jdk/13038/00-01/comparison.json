{"files":[{"patch":"@@ -2280,1 +2280,2 @@\n-      assert(false, \"compiler should always document failure\");\n+      assert(ci_env.failure_reason() != nullptr, \"expect failure reason\");\n+      assert(false, \"compiler should always document failure: %s\", ci_env.failure_reason());\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -254,2 +254,5 @@\n-        assert(false, \"illegal oopMap register name\");\n-        regalloc->C->record_method_not_compilable(\"illegal oopMap register name\");\n+        stringStream ss;\n+        ss.print(\"illegal oopMap register name: \");\n+        r->print_on(&ss);\n+        assert(false, \"%s\", ss.as_string());\n+        regalloc->C->record_method_not_compilable(ss.as_string());\n@@ -322,2 +325,5 @@\n-        assert(false, \"illegal oopMap register name\");\n-        regalloc->C->record_method_not_compilable(\"illegal oopMap register name\");\n+        stringStream ss;\n+        ss.print(\"illegal oopMap register name: \");\n+        r->print_on(&ss);\n+        assert(false, \"%s\", ss.as_string());\n+        regalloc->C->record_method_not_compilable(ss.as_string());\n","filename":"src\/hotspot\/share\/opto\/buildOopMap.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -757,1 +757,1 @@\n-      assert(reason != nullptr, \"cannot parse method: why?\");\n+      assert(reason != nullptr, \"expect reason for parse failure\");\n@@ -769,1 +769,1 @@\n-        assert(failure_reason() != nullptr, \"method parse failed: why?\");\n+        assert(failure_reason() != nullptr, \"expect reason for parse failure\");\n@@ -3999,0 +3999,1 @@\n+\n@@ -4001,0 +4002,1 @@\n+        DEBUG_ONLY( n->dump_bfs(1, 0, \"-\"); );\n@@ -4020,0 +4022,2 @@\n+        DEBUG_ONLY( n->fast_out(j)->dump(); );\n+        DEBUG_ONLY( n->dump_bfs(1, 0, \"-\"); );\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2847,1 +2847,2 @@\n-      assert(false, \"too many D-U pinch points\");\n+      DEBUG_ONLY( pinch->dump(); );\n+      assert(false, \"too many D-U pinch points: %d >= %d\", pinch->_idx, _regalloc->node_regs_max_index());\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}