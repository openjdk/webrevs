{"files":[{"patch":"@@ -14730,0 +14730,13 @@\n+void Assembler::esetzucc(Condition cc, Register dst) {\n+  assert(VM_Version::supports_apx_f(), \"\");\n+  assert(0 <= cc && cc < 16, \"illegal cc\");\n+\n+  InstructionAttr attributes(AVX_128bit, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  attributes.set_is_evex_instruction();\n+  attributes.set_extended_context();\n+\n+  \/\/ Encoding Format : eevex_prefix | opcode_cc | modrm\n+  int encode = vex_prefix_and_encode(dst->encoding(), 0, 0, VEX_SIMD_F2, \/* MAP4 *\/VEX_OPCODE_0F_3C, &attributes);\n+  emit_opcode_prefix_and_encoding(0x40 | cc, 0xC0, encode);\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1023,1 +1023,1 @@\n-  \/\/ APX ISA extensions for register save\/restore optimizations.\n+  \/\/ APX ISA Extensions for register save\/restore optimizations.\n@@ -1031,0 +1031,3 @@\n+  \/\/ New Zero Upper setcc instruction.\n+  void esetzucc(Condition cc, Register dst);\n+\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -138,2 +138,1 @@\n-    __ setb(Assembler::equal, $res$$Register);\n-    __ movzbl($res$$Register, $res$$Register);\n+    __ setcc(Assembler::equal, $res$$Register);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/x\/x_x86_64.ad","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -225,2 +225,1 @@\n-    __ setb(Assembler::equal, $res$$Register);\n-    __ movzbl($res$$Register, $res$$Register);\n+    __ setcc(Assembler::equal, $res$$Register);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/z\/z_x86_64.ad","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -10424,0 +10424,9 @@\n+\n+void MacroAssembler::setcc(Assembler::Condition comparison, Register dst) {\n+  if (VM_Version::supports_apx_f()) {\n+    esetzucc(comparison, dst);\n+  } else {\n+    setb(comparison, dst);\n+    movzbl(dst, dst);\n+  }\n+}\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2157,0 +2157,1 @@\n+  void setcc(Assembler::Condition comparison, Register dst);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -660,2 +660,1 @@\n-  __ setb(Assembler::notEqual, dst);\n-  __ movzbl(dst, dst);\n+  __ setcc(Assembler::notEqual, dst);\n@@ -7078,2 +7077,1 @@\n-    __ setb(Assembler::equal, $res$$Register);\n-    __ movzbl($res$$Register, $res$$Register);\n+    __ setcc(Assembler::equal, $res$$Register);\n@@ -7100,2 +7098,1 @@\n-    __ setb(Assembler::equal, $res$$Register);\n-    __ movzbl($res$$Register, $res$$Register);\n+    __ setcc(Assembler::equal, $res$$Register);\n@@ -7122,2 +7119,1 @@\n-    __ setb(Assembler::equal, $res$$Register);\n-    __ movzbl($res$$Register, $res$$Register);\n+    __ setcc(Assembler::equal, $res$$Register);\n@@ -7144,2 +7140,1 @@\n-    __ setb(Assembler::equal, $res$$Register);\n-    __ movzbl($res$$Register, $res$$Register);\n+    __ setcc(Assembler::equal, $res$$Register);\n@@ -7166,2 +7161,1 @@\n-    __ setb(Assembler::equal, $res$$Register);\n-    __ movzbl($res$$Register, $res$$Register);\n+    __ setcc(Assembler::equal, $res$$Register);\n@@ -7187,2 +7181,1 @@\n-    __ setb(Assembler::equal, $res$$Register);\n-    __ movzbl($res$$Register, $res$$Register);\n+    __ setcc(Assembler::equal, $res$$Register);\n@@ -9737,2 +9730,1 @@\n-    __ setb(Assembler::less, $dst$$Register);\n-    __ movzbl($dst$$Register, $dst$$Register);\n+    __ setcc(Assembler::less, $dst$$Register);\n@@ -11871,2 +11863,1 @@\n-    __ setb(Assembler::notZero, $dst$$Register);\n-    __ movzbl($dst$$Register, $dst$$Register);\n+    __ setcc(Assembler::notZero, $dst$$Register);\n@@ -11897,2 +11888,1 @@\n-    __ setb(Assembler::notZero, $dst$$Register);\n-    __ movzbl($dst$$Register, $dst$$Register);\n+    __ setcc(Assembler::notZero, $dst$$Register);\n@@ -11923,2 +11913,1 @@\n-    __ setb(Assembler::notZero, $dst$$Register);\n-    __ movzbl($dst$$Register, $dst$$Register);\n+    __ setcc(Assembler::notZero, $dst$$Register);\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":11,"deletions":22,"binary":false,"changes":33,"status":"modified"}]}