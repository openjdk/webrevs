{"files":[{"patch":"@@ -33,0 +33,1 @@\n+#include \"utilities\/spinYield.hpp\"\n@@ -58,0 +59,2 @@\n+  SpinYield yielder(0, 0, 1000);\n+\n@@ -63,22 +66,27 @@\n-    if ((seqnum != seqnum_initializing) &&\n-        (Atomic::cmpxchg(&_seqnum, seqnum, seqnum_initializing) == seqnum)) {\n-      \/\/ Reset marking information\n-      _live_bytes = 0;\n-      _live_objects = 0;\n-\n-      \/\/ Clear segment claimed\/live bits\n-      segment_live_bits().clear();\n-      segment_claim_bits().clear();\n-\n-      \/\/ We lazily initialize the bitmap the first time the page is marked, i.e.\n-      \/\/ a bit is about to be set for the first time.\n-      initialize_bitmap();\n-\n-      assert(_seqnum == seqnum_initializing, \"Invalid\");\n-\n-      \/\/ Make sure the newly reset marking information is ordered\n-      \/\/ before the update of the page seqnum, such that when the\n-      \/\/ up-to-date seqnum is load acquired, the bit maps will not\n-      \/\/ contain stale information.\n-      Atomic::release_store(&_seqnum, generation->seqnum());\n-      break;\n+\n+    if (seqnum != seqnum_initializing) {\n+      \/\/ No one has claimed initialization of the livemap yet\n+      if (Atomic::cmpxchg(&_seqnum, seqnum, seqnum_initializing) == seqnum) {\n+        \/\/ This thread claimed the initialization\n+\n+        \/\/ Reset marking information\n+        _live_bytes = 0;\n+        _live_objects = 0;\n+\n+        \/\/ Clear segment claimed\/live bits\n+        segment_live_bits().clear();\n+        segment_claim_bits().clear();\n+\n+        \/\/ We lazily initialize the bitmap the first time the page is marked, i.e.\n+        \/\/ a bit is about to be set for the first time.\n+        initialize_bitmap();\n+\n+        assert(_seqnum == seqnum_initializing, \"Invalid\");\n+\n+        \/\/ Make sure the newly reset marking information is ordered\n+        \/\/ before the update of the page seqnum, such that when the\n+        \/\/ up-to-date seqnum is load acquired, the bit maps will not\n+        \/\/ contain stale information.\n+        Atomic::release_store(&_seqnum, generation->seqnum());\n+        break;\n+      }\n@@ -96,0 +104,3 @@\n+\n+    \/\/ \"Yield\" to allow the thread that's resetting the livemap to finish\n+    yielder.wait();\n","filename":"src\/hotspot\/share\/gc\/z\/zLiveMap.cpp","additions":33,"deletions":22,"binary":false,"changes":55,"status":"modified"}]}