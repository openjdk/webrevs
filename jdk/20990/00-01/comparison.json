{"files":[{"patch":"@@ -54,1 +54,0 @@\n-import com.sun.tools.javac.code.Type.UnknownType;\n@@ -476,1 +475,1 @@\n-        unknownType = new UnknownType(unknownSymbol);\n+        unknownType = new ErrorType(unknownSymbol, Type.noType);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2411,19 +2411,0 @@\n-    public static class UnknownType extends ErrorType {\n-\n-        public UnknownType(ClassSymbol unknownSymbol) {\n-            \/\/ Unknown is a synthesized internal type, so it cannot be\n-            \/\/ annotated.\n-            super(unknownSymbol, noType);\n-        }\n-\n-        @Override @DefinedBy(Api.LANGUAGE_MODEL)\n-        public <R, P> R accept(TypeVisitor<R, P> v, P p) {\n-            return v.visitUnknown(this, p);\n-        }\n-\n-        @Override @DefinedBy(Api.LANGUAGE_MODEL)\n-        public TypeKind getKind() {\n-            return TypeKind.OTHER;\n-        }\n-    }\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"}]}