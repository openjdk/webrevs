{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import sun.security.jca.JCAUtil;\n+\n@@ -30,0 +32,1 @@\n+import java.security.SecureRandom;\n@@ -32,1 +35,0 @@\n-import java.util.Random;\n@@ -55,0 +57,4 @@\n+\n+    \/* SecureRandom instance to generate random digits used in challenge *\/\n+    private static final SecureRandom SECURE_RANDOM = JCAUtil.getDefSecureRandom();\n+\n@@ -116,2 +122,1 @@\n-                Random random = new Random();\n-                long rand = random.nextLong();\n+                long rand = SECURE_RANDOM.nextLong();\n","filename":"src\/java.security.sasl\/share\/classes\/com\/sun\/security\/sasl\/CramMD5Server.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import java.util.Random;\n@@ -40,0 +39,1 @@\n+import java.security.SecureRandom;\n@@ -42,1 +42,0 @@\n-import java.security.InvalidAlgorithmParameterException;\n@@ -62,0 +61,1 @@\n+import sun.security.jca.JCAUtil;\n@@ -135,0 +135,3 @@\n+    \/* SecureRandom instance to generate nonce *\/\n+    private static final SecureRandom SECURE_RANDOM = JCAUtil.getDefSecureRandom();\n+\n@@ -272,1 +275,0 @@\n-     * Could use SecureRandom to be more secure but it is very slow.\n@@ -296,2 +298,0 @@\n-        \/\/ SecureRandom random = new SecureRandom();\n-        Random random = new Random();\n@@ -299,1 +299,1 @@\n-        random.nextBytes(randomData);\n+        SECURE_RANDOM.nextBytes(randomData);\n","filename":"src\/java.security.sasl\/share\/classes\/com\/sun\/security\/sasl\/digest\/DigestMD5Base.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}