{"files":[{"patch":"@@ -230,2 +230,2 @@\n-    if (m.is_marked()) {\n-      forwardee = cast_to_oop(m.decode_pointer());\n+    if (m.is_forwarded()) {\n+      forwardee = m.forwardee();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -214,2 +214,2 @@\n-  if (m.is_marked()) {\n-    obj = cast_to_oop(m.decode_pointer());\n+  if (m.is_forwarded()) {\n+    obj = m.forwardee();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-  if (!m.is_marked()) {\n+  if (!m.is_forwarded()) {\n@@ -156,1 +156,1 @@\n-    return cast_to_oop(m.decode_pointer());\n+    return m.forwardee();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-  assert(!m.is_marked(), \"precondition\");\n+  assert(!m.is_forwarded(), \"precondition\");\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -146,0 +146,3 @@\n+  bool is_forwarded()   const {\n+    return (mask_bits(value(), lock_mask_in_place) == marked_value);\n+  }\n@@ -228,1 +231,1 @@\n-  markWord clear_lock_bits() { return markWord(value() & ~lock_mask_in_place); }\n+  markWord clear_lock_bits() const { return markWord(value() & ~lock_mask_in_place); }\n@@ -262,1 +265,5 @@\n-  inline void* decode_pointer() { return (void*)clear_lock_bits().value(); }\n+  inline void* decode_pointer() const { return (void*)clear_lock_bits().value(); }\n+\n+  inline oop forwardee() const {\n+    return cast_to_oop(decode_pointer());\n+  }\n","filename":"src\/hotspot\/share\/oops\/markWord.hpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -265,3 +265,1 @@\n-  \/\/ The extra heap check is needed since the obj might be locked, in which case the\n-  \/\/ mark would point to a stack location and have the sentinel bit cleared\n-  return mark().is_marked();\n+  return mark().is_forwarded();\n@@ -292,2 +290,1 @@\n-  assert(is_forwarded(), \"only decode when actually forwarded\");\n-  return cast_to_oop(mark().decode_pointer());\n+  return mark().forwardee();\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}