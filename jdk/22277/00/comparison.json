{"files":[{"patch":"@@ -2270,1 +2270,5 @@\n-      if (res != JNI_OK) {\n+      if (res == JNI_OK) {\n+        \/\/ Add jdk.patched system property when processing of args was OK\n+        PropertyList_unique_add(&_system_properties, \"jdk.patched\", \"true\",\n+                                AddProperty, UnwriteableProperty, ExternalProperty);\n+      } else {\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2024, Red Hat, Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.lang.reflect.Constructor;\n+\n+\/*\n+ * @test id=unpatched\n+ * @summary Test property jdk.patched for unpatched runtime\n+ * @run main\/othervm ModulePatcherTest false\n+ *\/\n+\n+\/*\n+ * @test id=patched\n+ * @summary Test property jdk.patched for patched runtime\n+ * @compile --patch-module java.base=${test.src}\/patch\/java\/lang\n+ *          ${test.src}\/patch\/java\/lang\/TestInteger.java ModulePatcherTest.java\n+ * @run main\/othervm --patch-module=java.base=${test.classes} ModulePatcherTest true\n+ *\/\n+public class ModulePatcherTest {\n+\n+    private static final String PATCHED_PROPERTY_NAME = \"jdk.patched\";\n+\n+    private final boolean expectPatched;\n+\n+    public ModulePatcherTest(boolean expectPatched) {\n+        this.expectPatched = expectPatched;\n+    }\n+\n+    public void runTest() throws Exception {\n+        boolean actual = Boolean.getBoolean(PATCHED_PROPERTY_NAME);\n+        if (expectPatched) {\n+            \/\/ Verify we find the TestInteger class from the module patch\n+            Class<?> testInt = Class.forName(\"java.lang.TestInteger\");\n+            Constructor<?> cons = testInt.getDeclaredConstructor();\n+            Object i = cons.newInstance();\n+            System.out.println(\"Found integer class from module patch: \" + i.getClass());\n+        }\n+        if (actual != expectPatched) {\n+            String msg = \"Expected \" + (expectPatched ? \"patched\" : \"unpatched\") +\n+                         \" runtime but detected \" + (actual ? \"patched\" : \"unpatched\") +\n+                         \" runtime via property \" + PATCHED_PROPERTY_NAME;\n+            throw new RuntimeException(msg);\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        if (args.length != 1) {\n+            throw new RuntimeException(\"Invalid test setup. Expected a single boolean argument\");\n+        }\n+        boolean expectPatched = Boolean.parseBoolean(args[0]);\n+        ModulePatcherTest t = new ModulePatcherTest(expectPatched);\n+        t.runTest();\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/lang\/System\/patchedModule\/ModulePatcherTest.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2024, Red Hat, Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package java.lang;\n+\n+public class TestInteger {\n+\n+    public static int toInt(String foo) {\n+        return Integer.parseInt(foo);\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/lang\/System\/patchedModule\/patch\/java\/lang\/TestInteger.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"}]}