{"files":[{"patch":"@@ -40,0 +40,1 @@\n+import java.util.concurrent.TimeUnit;\n@@ -44,1 +45,18 @@\n-    static CountDownLatch countDownLatch;\n+    private static final CountDownLatch countDownLatch = new CountDownLatch(1);\n+    static String INSTRUCTIONS = \"\"\"\n+                1. Move mouse to the TextArea.\n+                2. Press the left mouse button.\n+                3. Drag mouse to the list.\n+                4. Release the left mouse button.\n+\n+                The mouse cursor should appear as an I-beam cursor\n+                and should stay the same while dragging across the\n+                components. Once you reach the list, release the\n+                left mouse button. Immediately after, the cursor\n+                should change to a Hand cursor. If true, this test\n+                passes.\n+\n+                The test fails if the cursor updates while dragging\n+                over the components before releasing the left\n+                mouse button.\n+                \"\"\";\n@@ -47,7 +65,13 @@\n-        countDownLatch = new CountDownLatch(1);\n-        EventQueue.invokeAndWait(() -> {\n-            createTestFrame();\n-            createInstructionsFrame();\n-        });\n-        countDownLatch.await();\n-        System.out.println(\"Test Passed\");\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                createInstructionsFrame();\n+                createTestFrame();\n+            });\n+            if (!countDownLatch.await(2, TimeUnit.MINUTES)) {\n+                throw new RuntimeException(\"Test timeout : No action was\"\n+                        + \" taken on the test.\");\n+            }\n+            System.out.println(\"Test passed.\");\n+        } finally {\n+            EventQueue.invokeAndWait(ListDragCursor::disposeFrames);\n+        }\n@@ -57,1 +81,1 @@\n-        Frame frame = new Frame(\"Cursor change after drag\");\n+        testFrame = new Frame(\"Cursor change after drag\");\n@@ -73,4 +97,4 @@\n-        frame.add(panel);\n-        frame.setSize(300, 150);\n-        frame.setLocation(450, 500);\n-        frame.setVisible(true);\n+        testFrame.add(panel);\n+        testFrame.setSize(300, 150);\n+        testFrame.setLocation(450, 500);\n+        testFrame.setVisible(true);\n@@ -80,18 +104,0 @@\n-        String instructions = \"\"\"\n-                1. Move mouse to the TextArea.\n-                2. Press the left mouse button.\n-                3. Drag mouse to the list.\n-                4. Release the left mouse button.\n-\n-                The mouse cursor should appear as an I-beam cursor\n-                and should stay the same while dragging across the\n-                components. Once you reach the list, release the\n-                left mouse button. Immediately after, the cursor\n-                should change to a Hand cursor. If true, this test\n-                passes.\n-\n-                The test fails if the cursor updates while dragging\n-                over the components before releasing the left\n-                mouse button.\n-                \"\"\";\n-\n@@ -100,1 +106,1 @@\n-        TextArea textArea = new TextArea(instructions,\n+        TextArea textArea = new TextArea(INSTRUCTIONS,\n@@ -109,1 +115,3 @@\n-        passBtn.addActionListener(e -> disposeFrames());\n+        passBtn.addActionListener(e -> {\n+            countDownLatch.countDown();\n+        });\n@@ -111,1 +119,0 @@\n-            disposeFrames();\n@@ -120,1 +127,1 @@\n-        instructionsFrame.setLocation(300, 100);\n+        instructionsFrame.setLocationRelativeTo(null);\n@@ -125,1 +132,0 @@\n-        countDownLatch.countDown();\n","filename":"test\/jdk\/java\/awt\/Cursor\/CursorDragTest\/ListDragCursor.java","additions":42,"deletions":36,"binary":false,"changes":78,"status":"modified"}]}