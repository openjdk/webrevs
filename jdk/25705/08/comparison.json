{"files":[{"patch":"@@ -837,0 +837,1 @@\n+java\/awt\/Cursor\/CursorDragTest\/ListDragCursor.java 7177297 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n@@ -33,0 +31,2 @@\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n@@ -34,0 +34,1 @@\n+import java.awt.EventQueue;\n@@ -38,0 +39,2 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -40,2 +43,4 @@\n-    public static void main(String[] args) throws Exception {\n-        String INSTRUCTIONS = \"\"\"\n+    static Frame testFrame;\n+    static Frame instructionsFrame;\n+    private static final CountDownLatch countDownLatch = new CountDownLatch(1);\n+    static String INSTRUCTIONS = \"\"\"\n@@ -47,4 +52,10 @@\n-                If the mouse cursor starts as a Text Line Cursor and changes\n-                to a regular Pointer Cursor, then Hand Cursor when hovering\n-                the list, pass the test. This test fails if the cursor does\n-                not update at all when pointing over the different components.\n+                The mouse cursor should appear as an I-beam cursor\n+                and should stay the same while dragging across the\n+                components. Once you reach the list, release the\n+                left mouse button. Immediately after, the cursor\n+                should change to a Hand cursor. If true, this test\n+                passes.\n+\n+                The test fails if the cursor updates while dragging\n+                over the components before releasing the left\n+                mouse button.\n@@ -53,8 +64,14 @@\n-        PassFailJFrame.builder()\n-                .title(\"Test Instructions\")\n-                .instructions(INSTRUCTIONS)\n-                .rows((int) INSTRUCTIONS.lines().count() + 2)\n-                .columns(35)\n-                .testUI(ListDragCursor::createUI)\n-                .build()\n-                .awaitAndCheck();\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                instructionsFrame = createInstructionsFrame();\n+                testFrame = createTestFrame();\n+            });\n+            if (!countDownLatch.await(5, TimeUnit.MINUTES)) {\n+                throw new RuntimeException(\"Test timeout : No action was\"\n+                        + \" taken on the test.\");\n+            }\n+            System.out.println(\"Test passed.\");\n+        } finally {\n+            EventQueue.invokeAndWait(ListDragCursor::disposeFrames);\n+        }\n@@ -63,1 +80,1 @@\n-    public static Frame createUI() {\n+    static Frame createTestFrame() {\n@@ -81,1 +98,34 @@\n-        frame.setBounds(300, 100, 300, 150);\n+        frame.setSize(300, 150);\n+        frame.setLocation(instructionsFrame.getX()\n+                + instructionsFrame.getWidth(),\n+                instructionsFrame.getY());\n+        frame.setVisible(true);\n+        return frame;\n+    }\n+\n+    static Frame createInstructionsFrame() {\n+        Frame frame = new Frame(\"Test Instructions\");\n+        Panel mainPanel = new Panel(new BorderLayout());\n+        TextArea textArea = new TextArea(INSTRUCTIONS,\n+                15, 35, TextArea.SCROLLBARS_NONE);\n+\n+        Panel btnPanel = new Panel();\n+        Button passBtn = new Button(\"PASS\");\n+        Button failBtn = new Button(\"FAIL\");\n+        btnPanel.add(passBtn);\n+        btnPanel.add(failBtn);\n+\n+        passBtn.addActionListener(e -> {\n+            countDownLatch.countDown();\n+        });\n+        failBtn.addActionListener(e -> {\n+            throw new RuntimeException(\"Test Failed\");\n+        });\n+\n+        mainPanel.add(textArea, BorderLayout.CENTER);\n+        mainPanel.add(btnPanel, BorderLayout.SOUTH);\n+\n+        frame.add(mainPanel);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n@@ -84,0 +134,9 @@\n+\n+    static void disposeFrames() {\n+        if (testFrame != null) {\n+            testFrame.dispose();\n+        }\n+        if (instructionsFrame != null) {\n+            instructionsFrame.dispose();\n+        }\n+    }\n","filename":"test\/jdk\/java\/awt\/Cursor\/CursorDragTest\/ListDragCursor.java","additions":78,"deletions":19,"binary":false,"changes":97,"status":"modified"}]}