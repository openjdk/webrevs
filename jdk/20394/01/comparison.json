{"files":[{"patch":"@@ -2308,1 +2308,3 @@\n-# TODO 308: make a better error message\n+# 0: fragment, 1: symbol, 2: annotated-type\n+compiler.err.type.annotation.inadmissible={0} wurde hier nicht erwartet\\n(Um einen qualifizierten Typ zu annotieren, schreiben Sie {1}.{2})\n+\n@@ -2310,1 +2312,1 @@\n-compiler.err.cant.type.annotate.scoping.1=Scoping-Konstrukt kann nicht mit type-use-Annotation versehen werden: {0}\n+compiler.misc.type.annotation.1=Typannotation {0} ist\n@@ -2312,1 +2314,0 @@\n-# TODO 308: make a better error message\n@@ -2314,1 +2315,1 @@\n-compiler.err.cant.type.annotate.scoping=Scoping-Konstrukt kann nicht mit type-use-Annotationen versehen werden: {0}\n+compiler.misc.type.annotation=Typannotationen {0} sind\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_de.properties","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2308,1 +2308,3 @@\n-# TODO 308: make a better error message\n+# 0: fragment, 1: symbol, 2: annotated-type\n+compiler.err.type.annotation.inadmissible=ここでは{0}は予期されていません\\n(修飾されたタイプに注釈を付けるには、{1}.{2}と記述します)\n+\n@@ -2310,1 +2312,1 @@\n-compiler.err.cant.type.annotate.scoping.1=スコープ・コンストラクトを型使用注釈で注釈付けすることはできません: {0}\n+compiler.misc.type.annotation.1=タイプ注釈{0}は\n@@ -2312,1 +2314,0 @@\n-# TODO 308: make a better error message\n@@ -2314,1 +2315,1 @@\n-compiler.err.cant.type.annotate.scoping=スコープ・コンストラクトを型使用注釈で注釈付けすることはできません: {0}\n+compiler.misc.type.annotation=タイプ注釈{0}は\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_ja.properties","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-compiler.err.already.annotated={0} {1}已进行注释\n+compiler.err.already.annotated={0} {1} 已进行批注\n@@ -645,1 +645,1 @@\n-compiler.err.static.methods.cannot.be.annotated.with.override=不能使用 @Override 注释静态方法\n+compiler.err.static.methods.cannot.be.annotated.with.override=不能使用 @Override 对静态方法进行批注\n@@ -1641,1 +1641,1 @@\n-compiler.warn.missing.deprecated.annotation=未使用 @Deprecated 对已过时的项目进行注释\n+compiler.warn.missing.deprecated.annotation=未使用 @Deprecated 对已过时的项目进行批注\n@@ -2308,1 +2308,3 @@\n-# TODO 308: make a better error message\n+# 0: fragment, 1: symbol, 2: annotated-type\n+compiler.err.type.annotation.inadmissible={0} 不应出现在此处\\n（要对限定类型进行批注，请编写 {1}.{2}）\n+\n@@ -2310,1 +2312,1 @@\n-compiler.err.cant.type.annotate.scoping.1=无法使用 type-use 批注 {0} 来批注确定作用域结构\n+compiler.misc.type.annotation.1=类型批注 {0} 为\n@@ -2312,1 +2314,0 @@\n-# TODO 308: make a better error message\n@@ -2314,1 +2315,1 @@\n-compiler.err.cant.type.annotate.scoping=无法使用 type-use 批注 {0} 来批注确定作用域结构\n+compiler.misc.type.annotation=类型批注 {0} 为\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler_zh_CN.properties","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-launcher.err.invalid.value.for.source=--source 选项的值无效：{0}\\n\n+launcher.err.invalid.value.for.source=--source 选项的值无效：{0}\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/launcher_zh_CN.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-doclet.record_equals_doc.fullbody.tail.both=Referenzkomponenten werden verglichen mit {@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)}; primitive Komponenten werden verglichen mit \"==\".\n+doclet.record_equals_doc.fullbody.tail.both=Referenzkomponenten werden verglichen mit {@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)}. Primitive Komponenten werden mit der <code>compare<\/code>-Methode aus den entsprechenden Wrapper-Klassen verglichen.\n@@ -283,1 +283,1 @@\n-doclet.record_equals_doc.fullbody.tail.primitive=Alle Komponenten in dieser Datensatzklasse werden verglichen mit \"==\".\n+doclet.record_equals_doc.fullbody.tail.primitive=Alle Komponenten dieser Datensatzklasse werden mit der <code>compare<\/code>-Methode aus den entsprechenden Wrapper-Klassen verglichen.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets_de.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-doclet.record_equals_doc.fullbody.tail.both=参照コンポーネントは{@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)}と比較され、プリミティブ・コンポーネントは'=='と比較されます。\n+doclet.record_equals_doc.fullbody.tail.both=参照コンポーネントは{@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)}と比較され、プリミティブ・コンポーネントは対応するラッパー・クラスの<code>compare<\/code>メソッドで比較されます。\n@@ -283,1 +283,1 @@\n-doclet.record_equals_doc.fullbody.tail.primitive=このレコード・クラスのすべてのコンポーネントは'=='と比較されます。\n+doclet.record_equals_doc.fullbody.tail.primitive=このレコード・クラスのすべてのコンポーネントは対応するラッパー・クラスの<code>compare<\/code>メソッドと比較されます。\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets_ja.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-doclet.record_equals_doc.fullbody.tail.both=使用 {@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)} 对参考组件进行比较；使用 '==' 对基元组件进行比较\n+doclet.record_equals_doc.fullbody.tail.both=使用 {@link java.util.Objects#equals(Object,Object) Objects::equals(Object,Object)} 对参考组件进行比较；使用 <code>compare<\/code> 方法从对应的包装类对基元组件进行比较。\n@@ -283,1 +283,1 @@\n-doclet.record_equals_doc.fullbody.tail.primitive=此记录类中的所有组件都使用 '==' 进行比较。\n+doclet.record_equals_doc.fullbody.tail.primitive=此记录类中的所有组件都使用 <code>compare<\/code> 方法从对应的包装类进行比较。\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets_zh_CN.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}