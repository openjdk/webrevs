{"files":[{"patch":"@@ -989,1 +989,6 @@\n-  \/\/ needed in the constructors, and only in three cases:\n+  \/\/ needed in constructors where the object does not have an Initialization\n+  \/\/ node. Macro expansion will emit a trailing barrier for Initialize nodes,\n+  \/\/ so we do not need to emit here.\n+  \/\/\n+  \/\/ Given a constructor without an object Initialize node, the trailing\n+  \/\/ barrier is needed in three cases:\n@@ -1016,2 +1021,4 @@\n-  if (method()->is_object_initializer() &&\n-       (wrote_final() || wrote_stable() ||\n+  Node* recorded_alloc = alloc_with_final_or_stable();\n+  if (method()->is_object_initializer() && (!recorded_alloc ||\n+      !AllocateNode::Ideal_allocation(recorded_alloc)->initialization())\n+       && (wrote_final() || wrote_stable() ||\n@@ -1020,1 +1027,0 @@\n-    Node* recorded_alloc = alloc_with_final_or_stable();\n","filename":"src\/hotspot\/share\/opto\/parse1.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -33,0 +34,1 @@\n+ * @modules java.base\/jdk.internal.vm.annotation\n@@ -53,0 +55,32 @@\n+    private static class PlainExtendsPlain extends PlainPlain {\n+        long f3;\n+        public PlainExtendsPlain(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class PlainExtendsFinal extends FinalFinal {\n+        long f3;\n+        public PlainExtendsFinal(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class PlainExtendsStable extends StableStable {\n+        long f3;\n+        public PlainExtendsStable(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class PlainExtendsVolatile extends VolatileVolatile {\n+        long f3;\n+        public PlainExtendsVolatile(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n@@ -80,0 +114,79 @@\n+    private static class FinalExtendsPlain extends PlainPlain {\n+        final long f3;\n+        public FinalExtendsPlain(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class FinalExtendsFinal extends FinalFinal {\n+        final long f3;\n+        public FinalExtendsFinal(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class FinalExtendsStable extends StableStable {\n+        final long f3;\n+        public FinalExtendsStable(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class FinalExtendsVolatile extends VolatileVolatile {\n+        final long f3;\n+        public FinalExtendsVolatile(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class StableStable {\n+        @Stable\n+        long f1;\n+        @Stable\n+        long f2;\n+        public StableStable(long i) {\n+            f1 = i;\n+            f2 = i;\n+        }\n+    }\n+\n+    private static class StableExtendsPlain extends PlainPlain {\n+        @Stable\n+        long f3;\n+        public StableExtendsPlain(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class StableExtendsFinal extends FinalFinal {\n+        @Stable\n+        long f3;\n+        public StableExtendsFinal(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class StableExtendsStable extends StableStable {\n+        @Stable\n+        long f3;\n+        public StableExtendsStable(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class StableExtendsVolatile extends VolatileVolatile {\n+        @Stable\n+        long f3;\n+        public StableExtendsVolatile(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n@@ -125,0 +238,32 @@\n+    private static class VolatileExtendsPlain extends PlainPlain {\n+        volatile long f3;\n+        public VolatileExtendsPlain(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class VolatileExtendsFinal extends FinalFinal {\n+        volatile long f3;\n+        public VolatileExtendsFinal(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class VolatileExtendsVolatile extends VolatileVolatile {\n+        volatile long f3;\n+        public VolatileExtendsVolatile(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n+    private static class VolatileExtendsStable extends StableStable {\n+        volatile long f3;\n+        public VolatileExtendsStable(long i) {\n+            super(i);\n+            f3 = i;\n+        }\n+    }\n+\n@@ -140,0 +285,40 @@\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    public long escaping_plainExtendsPlain() {\n+        PlainExtendsPlain c = new PlainExtendsPlain(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    public long escaping_plainExtendsFinal() {\n+        PlainExtendsFinal c = new PlainExtendsFinal(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    public long escaping_plainExtendsStable() {\n+        PlainExtendsStable c = new PlainExtendsStable(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(counts = {IRNode.MEMBAR_RELEASE, \"2\"})\n+    @IR(counts = {IRNode.MEMBAR_VOLATILE, \"2\"})\n+    public long escaping_plainExtendsVolatile() {\n+        PlainExtendsVolatile c = new PlainExtendsVolatile(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n@@ -170,0 +355,80 @@\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    public long escaping_finalExtendsPlain() {\n+        FinalExtendsPlain c = new FinalExtendsPlain(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    public long escaping_finalExtendsFinal() {\n+        FinalExtendsFinal c = new FinalExtendsFinal(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    public long escaping_finalExtendsStable() {\n+        FinalExtendsStable c = new FinalExtendsStable(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(counts = {IRNode.MEMBAR_RELEASE, \"2\"})\n+    @IR(counts = {IRNode.MEMBAR_VOLATILE, \"2\"})\n+    public long escaping_finalExtendsVolatile() {\n+        FinalExtendsVolatile c = new FinalExtendsVolatile(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    public long escaping_stableExtendsPlain() {\n+        StableExtendsPlain c = new StableExtendsPlain(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    public long escaping_stableExtendsFinal() {\n+        StableExtendsFinal c = new StableExtendsFinal(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    public long escaping_stableExtendsStable() {\n+        StableExtendsStable c = new StableExtendsStable(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(counts = {IRNode.MEMBAR_RELEASE, \"2\"})\n+    @IR(counts = {IRNode.MEMBAR_VOLATILE, \"2\"})\n+    public long escaping_stableExtendsVolatile() {\n+        StableExtendsVolatile c = new StableExtendsVolatile(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n@@ -200,0 +465,40 @@\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_RELEASE, \"1\"})\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(counts = {IRNode.MEMBAR_VOLATILE, \"1\"})\n+    public long escaping_volatileExtendsPlain() {\n+        VolatileExtendsPlain c = new VolatileExtendsPlain(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_RELEASE, \"1\"})\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(counts = {IRNode.MEMBAR_VOLATILE, \"1\"})\n+    public long escaping_volatileExtendsFinal() {\n+        VolatileExtendsFinal c = new VolatileExtendsFinal(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_RELEASE, \"1\"})\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(counts = {IRNode.MEMBAR_VOLATILE, \"1\"})\n+    public long escaping_volatileExtendsStable() {\n+        VolatileExtendsStable c = new VolatileExtendsStable(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.MEMBAR_RELEASE, \"3\"})\n+    @IR(counts = {IRNode.MEMBAR_STORESTORE, \"1\"})\n+    @IR(counts = {IRNode.MEMBAR_VOLATILE, \"3\"})\n+    public long escaping_volatileExtendsVolatile() {\n+        VolatileExtendsVolatile c = new VolatileExtendsVolatile(l);\n+        consume(c);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n@@ -227,0 +532,31 @@\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR)\n+    public long non_escaping_plainExtendsPlain() {\n+        PlainExtendsPlain c = new PlainExtendsPlain(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR)\n+    public long non_escaping_plainExtendsFinal() {\n+        PlainExtendsFinal c = new PlainExtendsFinal(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR)\n+    public long non_escaping_plainExtendsStable() {\n+        PlainExtendsStable c = new PlainExtendsStable(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_STORESTORE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"2\"})\n+    public long non_escaping_plainExtendsVolatile() {\n+        PlainExtendsVolatile c = new PlainExtendsVolatile(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n@@ -248,0 +584,62 @@\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR)\n+    public long non_escaping_finalExtendsPlain() {\n+        FinalExtendsPlain c = new FinalExtendsPlain(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR)\n+    public long non_escaping_finalExtendsFinal() {\n+        FinalExtendsFinal c = new FinalExtendsFinal(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR)\n+    public long non_escaping_finalExtendsStable() {\n+        FinalExtendsStable c = new FinalExtendsStable(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_STORESTORE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"2\"})\n+    public long non_escaping_finalExtendsVolatile() {\n+        FinalExtendsVolatile c = new FinalExtendsVolatile(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR)\n+    public long non_escaping_stableExtendsPlain() {\n+        StableExtendsPlain c = new StableExtendsPlain(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR)\n+    public long non_escaping_stableExtendsFinal() {\n+        StableExtendsFinal c = new StableExtendsFinal(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR)\n+    public long non_escaping_stableExtendsStable() {\n+        StableExtendsStable c = new StableExtendsStable(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_STORESTORE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"2\"})\n+    public long non_escaping_stableExtendsVolatile() {\n+        StableExtendsVolatile c = new StableExtendsVolatile(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n@@ -280,0 +678,40 @@\n+    @IR(failOn = IRNode.MEMBAR_STORESTORE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"1\"})\n+    public long non_escaping_volatileExtendsPlain() {\n+        VolatileExtendsPlain c = new VolatileExtendsPlain(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_STORESTORE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"1\"})\n+    public long non_escaping_volatileExtendsFinal() {\n+        VolatileExtendsFinal c = new VolatileExtendsFinal(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_STORESTORE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"1\"})\n+    public long non_escaping_volatileExtendsStable() {\n+        VolatileExtendsStable c = new VolatileExtendsStable(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_STORESTORE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"3\"})\n+    public long non_escaping_volatileExtendsVolatile() {\n+        VolatileExtendsVolatile c = new VolatileExtendsVolatile(l);\n+        return c.f1 + c.f2 + c.f3;\n+    }\n+\n+    @Test\n+    @IR(failOn = IRNode.MEMBAR_RELEASE)\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/ConstructorBarriers.java","additions":438,"deletions":0,"binary":false,"changes":438,"status":"modified"}]}