{"files":[{"patch":"@@ -4832,1 +4832,1 @@\n-  void sha1_prepare_w(int round, Register cur_w, Register ws[], Register buf, Register tmp) {\n+  void sha1_prepare_w(int round, Register cur_w, Register ws[], Register buf) {\n@@ -4860,1 +4860,1 @@\n-      __ srli(tmp, ws[(idx-14)\/2], 32);\n+      __ srli(t1, ws[(idx-14)\/2], 32);\n@@ -4862,1 +4862,1 @@\n-      __ xorr(cur_w, cur_w, tmp);\n+      __ xorr(cur_w, cur_w, t1);\n@@ -4883,1 +4883,1 @@\n-    __ mv(tmp, ws[(idx-14)\/2]);\n+    __ mv(t1, ws[(idx-14)\/2]);\n@@ -4885,1 +4885,1 @@\n-    __ xorr(cur_w, cur_w, tmp);\n+    __ xorr(cur_w, cur_w, t1);\n@@ -4951,1 +4951,1 @@\n-      __ rolw_imm(cur_w, a, 5, t1);\n+      __ rolw_imm(cur_w, a, 5, t0);\n@@ -5113,1 +5113,1 @@\n-      sha1_prepare_w(round, cur_w, ws, buf, t2);\n+      sha1_prepare_w(round, cur_w, ws, buf);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-              \/\/ on riscv64, SHA-1 intrinsic is implemented with basic instructions\n+              \/\/ SHA-1 intrinsic is implemented with scalar instructions on riscv64\n","filename":"test\/hotspot\/jtreg\/compiler\/testlibrary\/sha\/predicate\/IntrinsicPredicates.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}