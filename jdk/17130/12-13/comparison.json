{"files":[{"patch":"@@ -4843,1 +4843,1 @@\n-        __ ld(ws[round\/2], Address(buf, round * 4));\n+        __ ld(ws[round\/2], Address(buf, (round\/2) * 8));\n@@ -4854,5 +4854,0 @@\n-    if (round == 16) {\n-      int64_t block_bytes = round * 4;\n-      __ addi(buf, buf, block_bytes);\n-    }\n-\n@@ -4884,2 +4879,2 @@\n-    __ srli(t0, ws[(idx-3)\/2], 32);\n-    __ xorr(t0, t0, ws[(idx-8)\/2]);\n+    __ srli(t1, ws[(idx-3)\/2], 32);\n+    __ xorr(t0, t1, ws[(idx-8)\/2]);\n@@ -4950,6 +4945,0 @@\n-    {\n-      \/\/ reuse e as a temporary register, as we will mv new value into it later\n-      Register tmp3 = e;\n-      __ add(tmp2, cur_k, tmp2);\n-      __ add(tmp3, tmp3, tmp2);\n-      __ rolw_imm(tmp2, a, 5, t0);\n@@ -4957,1 +4946,5 @@\n-      sha1_f(tmp, b, c, d, round);\n+    \/\/ reuse e as a temporary register, as we will mv new value into it later\n+    Register tmp3 = e;\n+    __ add(tmp2, cur_k, tmp2);\n+    __ add(tmp3, tmp3, tmp2);\n+    __ rolw_imm(tmp2, a, 5, t0);\n@@ -4959,3 +4952,4 @@\n-      __ add(tmp2, tmp2, tmp);\n-      __ add(tmp2, tmp2, tmp3);\n-    }\n+    sha1_f(tmp, b, c, d, round);\n+\n+    __ add(tmp2, tmp2, tmp);\n+    __ add(tmp2, tmp2, tmp3);\n@@ -5024,1 +5018,1 @@\n-  \/\/ Outpus:\n+  \/\/ Outputs:\n@@ -5128,0 +5122,3 @@\n+      int64_t block_bytes = 16 * 4;\n+      __ addi(buf, buf, block_bytes);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":16,"deletions":19,"binary":false,"changes":35,"status":"modified"}]}