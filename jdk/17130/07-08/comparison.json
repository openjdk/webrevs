{"files":[{"patch":"@@ -4832,2 +4832,1 @@\n-  void sha1_prepare_w(int round, Register cur_w, Register ws[], Register buf,\n-                      Register tmp1, Register tmp2, Register tmp3) {\n+  void sha1_prepare_w(int round, Register cur_w, Register ws[], Register buf, Register tmp) {\n@@ -4857,3 +4856,3 @@\n-      __ mv(tmp1, ws[(idx-3)\/2]);\n-      __ srli(tmp2, ws[(idx-8)\/2], 32);\n-      __ xorr(tmp1, tmp1, tmp2);\n+      __ mv(t0, ws[(idx-3)\/2]);\n+      __ srli(t1, ws[(idx-8)\/2], 32);\n+      __ xorr(t0, t0, t1);\n@@ -4861,1 +4860,1 @@\n-      __ srli(tmp3, ws[(idx-14)\/2], 32);\n+      __ srli(tmp, ws[(idx-14)\/2], 32);\n@@ -4863,1 +4862,1 @@\n-      __ xorr(cur_w, cur_w, tmp3);\n+      __ xorr(cur_w, cur_w, tmp);\n@@ -4865,2 +4864,2 @@\n-      __ xorr(cur_w, cur_w, tmp1);\n-      __ rolw_imm(cur_w, cur_w, 1, tmp1);\n+      __ xorr(cur_w, cur_w, t0);\n+      __ rolw_imm(cur_w, cur_w, 1, t0);\n@@ -4880,3 +4879,3 @@\n-    __ srli(tmp1, ws[(idx-3)\/2], 32);\n-    __ mv(tmp2, ws[(idx-8)\/2]);\n-    __ xorr(tmp1, tmp1, tmp2);\n+    __ srli(t0, ws[(idx-3)\/2], 32);\n+    __ mv(t1, ws[(idx-8)\/2]);\n+    __ xorr(t0, t0, t1);\n@@ -4884,1 +4883,1 @@\n-    __ mv(tmp3, ws[(idx-14)\/2]);\n+    __ mv(tmp, ws[(idx-14)\/2]);\n@@ -4886,1 +4885,1 @@\n-    __ xorr(cur_w, cur_w, tmp3);\n+    __ xorr(cur_w, cur_w, tmp);\n@@ -4888,2 +4887,2 @@\n-    __ xorr(cur_w, cur_w, tmp1);\n-    __ rolw_imm(cur_w, cur_w, 1, tmp1);\n+    __ xorr(cur_w, cur_w, t0);\n+    __ rolw_imm(cur_w, cur_w, 1, t0);\n@@ -4910,2 +4909,1 @@\n-  void sha1_f(int round, Register dst, Register x, Register y, Register z,\n-              Register tmp1, Register tmp2) {\n+  void sha1_f(int round, Register dst, Register x, Register y, Register z) {\n@@ -4913,1 +4911,1 @@\n-    assert_different_registers(dst, x, y, z, tmp1, tmp2);\n+    assert_different_registers(dst, x, y, z);\n@@ -4917,1 +4915,1 @@\n-      __ andr(tmp1, x, y);\n+      __ andr(t0, x, y);\n@@ -4919,1 +4917,1 @@\n-      __ xorr(dst, dst, tmp1);\n+      __ xorr(dst, dst, t0);\n@@ -4922,2 +4920,2 @@\n-      __ andr(tmp1, x, y);\n-      __ andr(tmp2, x, z);\n+      __ andr(t0, x, y);\n+      __ andr(t1, x, z);\n@@ -4925,2 +4923,2 @@\n-      __ xorr(dst, dst, tmp1);\n-      __ xorr(dst, dst, tmp2);\n+      __ xorr(dst, dst, t0);\n+      __ xorr(dst, dst, t1);\n@@ -4941,2 +4939,1 @@\n-                          Register cur_k, Register cur_w,\n-                          Register tmp1, Register tmp2, Register tmp3) {\n+                          Register cur_k, Register cur_w, Register tmp) {\n@@ -4944,1 +4941,1 @@\n-    assert_different_registers(a, b, c, d, e, cur_w, cur_k, tmp1, tmp2, tmp3);\n+    assert_different_registers(a, b, c, d, e, cur_w, cur_k, tmp);\n@@ -4954,1 +4951,1 @@\n-      __ rolw_imm(tmp1, a, 5, tmp2);\n+      __ rolw_imm(cur_w, a, 5, t1);\n@@ -4956,3 +4953,3 @@\n-      sha1_f(round, tmp3, b, c, d, cur_w, tmp2);\n-      __ add(tmp1, tmp1, tmp3);\n-      __ add(tmp1, tmp1, t);\n+      sha1_f(round, tmp, b, c, d);\n+      __ add(cur_w, cur_w, tmp);\n+      __ add(cur_w, cur_w, t);\n@@ -4969,1 +4966,1 @@\n-    __ rolw_imm(c, b, 30, cur_w);\n+    __ rolw_imm(c, b, 30);\n@@ -4971,1 +4968,1 @@\n-    __ mv(a, tmp1);\n+    __ mv(a, cur_w);\n@@ -4995,3 +4992,2 @@\n-                                Register prev_ab, Register prev_cd, Register prev_e,\n-                                Register tmp) {\n-    assert_different_registers(a, b, c, d, e, prev_ab, prev_cd, prev_e, tmp);\n+                                Register prev_ab, Register prev_cd, Register prev_e) {\n+    assert_different_registers(a, b, c, d, e, prev_ab, prev_cd, prev_e);\n@@ -4999,1 +4995,1 @@\n-    __ slli(tmp, b, 32);\n+    __ slli(t0, b, 32);\n@@ -5001,1 +4997,1 @@\n-    __ orr(prev_ab, prev_ab, tmp);\n+    __ orr(prev_ab, prev_ab, t0);\n@@ -5003,1 +4999,1 @@\n-    __ slli(tmp, d, 32);\n+    __ slli(t0, d, 32);\n@@ -5005,1 +5001,1 @@\n-    __ orr(prev_cd, prev_cd, tmp);\n+    __ orr(prev_cd, prev_cd, t0);\n@@ -5110,1 +5106,1 @@\n-    sha1_preserve_prev_abcde(a, b, c, d, e, prev_ab, prev_cd, prev_e, t0);\n+    sha1_preserve_prev_abcde(a, b, c, d, e, prev_ab, prev_cd, prev_e);\n@@ -5117,1 +5113,1 @@\n-      sha1_prepare_w(round, cur_w, ws, buf, t0, t1, t2);\n+      sha1_prepare_w(round, cur_w, ws, buf, t2);\n@@ -5120,1 +5116,1 @@\n-      sha1_process_round(round, a, b, c, d, e, cur_k, cur_w, t0, t1, t2);\n+      sha1_process_round(round, a, b, c, d, e, cur_k, cur_w, t2);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":40,"deletions":44,"binary":false,"changes":84,"status":"modified"}]}