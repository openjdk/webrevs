{"files":[{"patch":"@@ -246,1 +246,1 @@\n-  const Register mark = t1;\n+  const Register t1_mark = t1;\n@@ -253,2 +253,2 @@\n-    const Register top = t2;\n-    const Register t = t3;\n+    const Register t2_top = t2;\n+    const Register t3_t = t3;\n@@ -257,2 +257,2 @@\n-    ldrw(top, Address(rthread, JavaThread::lock_stack_top_offset()));\n-    cmpw(top, (unsigned)LockStack::end_offset() - 1);\n+    ldrw(t2_top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+    cmpw(t2_top, (unsigned)LockStack::end_offset() - 1);\n@@ -262,3 +262,3 @@\n-    subw(t, top, oopSize);\n-    ldr(t, Address(rthread, t));\n-    cmp(obj, t);\n+    subw(t3_t, t2_top, oopSize);\n+    ldr(t3_t, Address(rthread, t3_t));\n+    cmp(obj, t3_t);\n@@ -268,2 +268,2 @@\n-    ldr(mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n-    tbnz(mark, exact_log2(markWord::monitor_value), inflated);\n+    ldr(t1_mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+    tbnz(t1_mark, exact_log2(markWord::monitor_value), inflated);\n@@ -275,3 +275,3 @@\n-    orr(mark, mark, markWord::unlocked_value);\n-    eor(t, mark, markWord::unlocked_value);\n-    cmpxchg(\/*addr*\/ obj, \/*expected*\/ mark, \/*new*\/ t, Assembler::xword,\n+    orr(t1_mark, t1_mark, markWord::unlocked_value);\n+    eor(t3_t, t1_mark, markWord::unlocked_value);\n+    cmpxchg(\/*addr*\/ obj, \/*expected*\/ t1_mark, \/*new*\/ t3_t, Assembler::xword,\n@@ -283,3 +283,3 @@\n-    str(obj, Address(rthread, top));\n-    addw(top, top, oopSize);\n-    strw(top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+    str(obj, Address(rthread, t2_top));\n+    addw(t2_top, t2_top, oopSize);\n+    strw(t2_top, Address(rthread, JavaThread::lock_stack_top_offset()));\n@@ -293,1 +293,1 @@\n-    const Register tagged_monitor = mark;\n+    const Register t1_tagged_monitor = t1_mark;\n@@ -295,2 +295,2 @@\n-    const Register owner_addr = t2;\n-    const Register owner = t3;\n+    const Register t2_owner_addr = t2;\n+    const Register t3_owner = t3;\n@@ -299,1 +299,1 @@\n-    lea(owner_addr, Address(tagged_monitor, (in_bytes(ObjectMonitor::owner_offset()) - monitor_tag)));\n+    lea(t2_owner_addr, Address(t1_tagged_monitor, (in_bytes(ObjectMonitor::owner_offset()) - monitor_tag)));\n@@ -302,2 +302,2 @@\n-    cmpxchg(owner_addr, zr, rthread, Assembler::xword, \/*acquire*\/ true,\n-            \/*release*\/ false, \/*weak*\/ false, owner);\n+    cmpxchg(t2_owner_addr, zr, rthread, Assembler::xword, \/*acquire*\/ true,\n+            \/*release*\/ false, \/*weak*\/ false, t3_owner);\n@@ -307,1 +307,1 @@\n-    cmp(owner, rthread);\n+    cmp(t3_owner, rthread);\n@@ -311,1 +311,1 @@\n-    increment(Address(tagged_monitor, in_bytes(ObjectMonitor::recursions_offset()) - monitor_tag), 1);\n+    increment(Address(t1_tagged_monitor, in_bytes(ObjectMonitor::recursions_offset()) - monitor_tag), 1);\n@@ -346,3 +346,3 @@\n-  const Register mark = t1;\n-  const Register top = t2;\n-  const Register t = t3;\n+  const Register t1_mark = t1;\n+  const Register t2_top = t2;\n+  const Register t3_t = t3;\n@@ -353,4 +353,4 @@\n-    ldrw(top, Address(rthread, JavaThread::lock_stack_top_offset()));\n-    subw(top, top, oopSize);\n-    ldr(t, Address(rthread, top));\n-    cmp(obj, t);\n+    ldrw(t2_top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+    subw(t2_top, t2_top, oopSize);\n+    ldr(t3_t, Address(rthread, t2_top));\n+    cmp(obj, t3_t);\n@@ -361,2 +361,2 @@\n-    DEBUG_ONLY(str(zr, Address(rthread, top));)\n-    strw(top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+    DEBUG_ONLY(str(zr, Address(rthread, t2_top));)\n+    strw(t2_top, Address(rthread, JavaThread::lock_stack_top_offset()));\n@@ -365,3 +365,3 @@\n-    subw(t, top, oopSize);\n-    ldr(t, Address(rthread, t));\n-    cmp(obj, t);\n+    subw(t3_t, t2_top, oopSize);\n+    ldr(t3_t, Address(rthread, t3_t));\n+    cmp(obj, t3_t);\n@@ -372,1 +372,1 @@\n-    ldr(mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+    ldr(t1_mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n@@ -375,1 +375,1 @@\n-    tbnz(mark, exact_log2(markWord::monitor_value), inflated);\n+    tbnz(t1_mark, exact_log2(markWord::monitor_value), inflated);\n@@ -379,2 +379,2 @@\n-    orr(t, mark, markWord::unlocked_value);\n-    cmpxchg(\/*addr*\/ obj, \/*expected*\/ mark, \/*new*\/ t, Assembler::xword,\n+    orr(t3_t, t1_mark, markWord::unlocked_value);\n+    cmpxchg(\/*addr*\/ obj, \/*expected*\/ t1_mark, \/*new*\/ t3_t, Assembler::xword,\n@@ -386,3 +386,3 @@\n-    DEBUG_ONLY(str(obj, Address(rthread, top));)\n-    addw(top, top, oopSize);\n-    str(top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+    DEBUG_ONLY(str(obj, Address(rthread, t2_top));)\n+    addw(t2_top, t2_top, oopSize);\n+    str(t2_top, Address(rthread, JavaThread::lock_stack_top_offset()));\n@@ -395,1 +395,1 @@\n-    ldr(mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+    ldr(t1_mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n@@ -397,1 +397,1 @@\n-    tbnz(mark, exact_log2(markWord::monitor_value), inflated);\n+    tbnz(t1_mark, exact_log2(markWord::monitor_value), inflated);\n@@ -405,2 +405,2 @@\n-    subw(top, top, oopSize);\n-    cmpw(top, in_bytes(JavaThread::lock_stack_base_offset()));\n+    subw(t2_top, t2_top, oopSize);\n+    cmpw(t2_top, in_bytes(JavaThread::lock_stack_base_offset()));\n@@ -408,2 +408,2 @@\n-    ldr(t, Address(rthread, top));\n-    cmp(obj, t);\n+    ldr(t3_t, Address(rthread, t2_top));\n+    cmp(obj, t3_t);\n@@ -416,1 +416,1 @@\n-    const Register monitor = mark;\n+    const Register t1_monitor = t1_mark;\n@@ -420,1 +420,1 @@\n-    sub(monitor, mark, monitor_tag);\n+    sub(t1_monitor, t1_mark, monitor_tag);\n@@ -422,1 +422,1 @@\n-    const Register recursions = t2;\n+    const Register t2_recursions = t2;\n@@ -426,2 +426,2 @@\n-    ldr(recursions, Address(monitor, ObjectMonitor::recursions_offset()));\n-    cbz(recursions, not_recursive);\n+    ldr(t2_recursions, Address(t1_monitor, ObjectMonitor::recursions_offset()));\n+    cbz(t2_recursions, not_recursive);\n@@ -430,2 +430,2 @@\n-    sub(recursions, recursions, 1u);\n-    str(recursions, Address(monitor, ObjectMonitor::recursions_offset()));\n+    sub(t2_recursions, t2_recursions, 1u);\n+    str(t2_recursions, Address(t1_monitor, ObjectMonitor::recursions_offset()));\n@@ -433,1 +433,1 @@\n-    cmp(recursions, recursions);\n+    cmp(t2_recursions, t2_recursions);\n@@ -439,1 +439,1 @@\n-    const Register owner_addr = t2;\n+    const Register t2_owner_addr = t2;\n@@ -442,1 +442,1 @@\n-    lea(owner_addr, Address(monitor, ObjectMonitor::owner_offset()));\n+    lea(t2_owner_addr, Address(t1_monitor, ObjectMonitor::owner_offset()));\n@@ -445,3 +445,3 @@\n-    ldr(rscratch1, Address(monitor, ObjectMonitor::EntryList_offset()));\n-    ldr(t, Address(monitor, ObjectMonitor::cxq_offset()));\n-    orr(rscratch1, rscratch1, t);\n+    ldr(rscratch1, Address(t1_monitor, ObjectMonitor::EntryList_offset()));\n+    ldr(t3_t, Address(t1_monitor, ObjectMonitor::cxq_offset()));\n+    orr(rscratch1, rscratch1, t3_t);\n@@ -454,1 +454,1 @@\n-    str(rthread, Address(owner_addr));\n+    str(rthread, Address(t2_owner_addr));\n@@ -460,1 +460,1 @@\n-    stlr(zr, owner_addr);\n+    stlr(zr, t2_owner_addr);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":64,"deletions":64,"binary":false,"changes":128,"status":"modified"}]}