{"files":[{"patch":"@@ -70,2 +70,3 @@\n-    \/\/ the starting 3 or 5 bits of the domain separator and 10*1 padding\n-    \/\/ (11111... for the SHAKE functions and 011... for the SHA3-nnn ones)\n+    \/\/ The starting byte combining the 2 or 4-bit domain separator and\n+    \/\/ leading bits of the 10*1 padding, see Table 6 in B.2 of FIPS PUB 202\n+    \/\/ for examples\n@@ -77,1 +78,1 @@\n-    \/\/ The byte offset in the state where the next sqeeze() will start.\n+    \/\/ The byte offset in the state where the next squeeze() will start.\n@@ -79,2 +80,2 @@\n-    \/\/ update() calls were made so far) in an XOF or the class was initialized\n-    \/\/ as a hash.\n+    \/\/ update() calls were made so far) in an extendable-output function (XOF)\n+    \/\/ or the class was initialized as a hash.\n@@ -169,1 +170,1 @@\n-    void implSqueeze(byte[]output, int offset, int numBytes) {\n+    void implSqueeze(byte[] output, int offset, int numBytes) {\n@@ -254,2 +255,3 @@\n-     * pad10*1 algorithm (section 5.1) and the 2-bit suffix \"01\" required\n-     * for SHA-3 hash (section 6.1).\n+     * pad10*1 algorithm (section 5.1) and the 2-bit suffix \"01\" or 4-bit\n+     * suffix \"1111\" required for SHA-3 hash functions (section 6.1) and\n+     * extendable-output functions (section 6.1) respectively.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHA3.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"}]}