[{"commit":{"message":"Merge branch 'master' into cas-alloc-1"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"087b54fb14e3da03a2152fd67d71b12187d507bd"},{"commit":{"message":"Move ShenandoahHeapRegionIterationClosure to shenandoahFreeSet.hpp"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"4aa5893c25db526d43ab2db50191a2476d60e52e"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc-1"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"445b8ee6834fdb9c0ae54547988412c7c2cdd96d"},{"commit":{"message":"Fix errors caused by renaming ofAtomic to AtomicAccess"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"f1c7ff6d4be17aac42b02b37ec52b09793b96fab"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc-1"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"05cad984d016d93c433ad8647909768652027078"},{"commit":{"message":"Remove unused flag"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"0872844f6a9057efac98cab9b86dfdcaf28a6d59"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc-1"},"files":[],"sha":"74acbed3c0aed536c9fd576356839069d1855d7e"},{"commit":{"message":"Merge branch 'cas-alloc-1' into cas-alloc"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"}],"sha":"466116748df0d426fd56cb487500b30f6b53f65c"},{"commit":{"message":"Merge branch 'cas-alloc-1' of https:\/\/github.com\/pengxiaolong\/jdk into cas-alloc-1"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"}],"sha":"94d246d34200ad972d2fca0e24596c7397d6bac7"},{"commit":{"message":"Merge branch 'master' into cas-alloc-1"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"f05131411e2c7cb141c95f147bdf892584a0b3a6"},{"commit":{"message":"Simplify"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"3e625c6e39aa7bcb0aa111b9d00be41c90f3f928"},{"commit":{"message":"SpinPause instead of naked_yield if it is MP system"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"3daf789f4ec02b0994aa3a4dbf52ea0c7f39fc6d"},{"commit":{"message":"Ensure no mutator is allocating in the region when release it directly allocatable regions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"116b74211db7eddf3ab4d9b381b9d61171fd9d45"},{"commit":{"message":"Remove unnecessary fence"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"51b1be9763707174140c3372829ebad9c14d7b60"},{"commit":{"message":"Merge branch 'cas-alloc-1' into cas-alloc"},"files":[],"sha":"d1a7699cf955c9d1f83f49648cb1733b0b507136"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc-1"},"files":[],"sha":"a54bcbd0aa214e85e4a691e5bd7b068b5012fcf2"},{"commit":{"message":"Merge branch 'cas-alloc-1' into cas-alloc"},"files":[],"sha":"36718638be5c2b843b7901ceb9376cc8cd4a2d12"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc-1"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"219caed4b0b5508109f64fcd82b58cfb25249e7c"},{"commit":{"message":"Not eagerly steal allocate memory from directly allocatable regions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"dafd4cc589e3ae7bf5edbc208ac880d0bbd7cd65"},{"commit":{"message":"Yield to safepoint"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"572c6d65d1156922ef14428e0fbfcdf023ff033c"},{"commit":{"message":"Update CAS allocation logic"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"2fe2bf89193ddd8cbb30bc3232e7f8c5cc2f7b20"},{"commit":{"message":"update allocation bias"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"19173f72a03e9f295548467556a21b9e52b8bf36"},{"commit":{"message":"Update start index to next region which has enough space"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"f78fb935efc6a508c76920af163b82834e852b2c"},{"commit":{"message":"Remove some of the code in try_allocate_single_for_mutator which complicates the logic"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"b6103cc4a197fd16b2c89327658f7e479816f1f4"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc-1"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"7fe86e91756988fb50df1629188aa42e0ed77a07"},{"commit":{"message":"Revert the changes made to ShenandoahRegionPartitions::assert_bounds()"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"c5c462cc586b803e20947d6bdb5c534e94bfc1d1"},{"commit":{"message":"Retire region if remaining memory is less than PLAB:min_size_bytes()"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"65b8b5a23fa2d5de5afd5360b17715e517f8d1f5"},{"commit":{"message":"Not use retire_region_from_partition when allocate directly allocatable regions and more accurate used\/available metrics"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"cb8fd66ae05e5a6c15266981ad0834c57171e436"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc-1"},"files":[],"sha":"092f0ee0fc152e6b4c9963f1836c719dad8670da"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc-1"},"files":[],"sha":"a10f157e78d72dd33417f0fff5ba41671c21f629"},{"commit":{"message":"Fix test failures caused by new alloc type _alloc_cds"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"353c5e3cc9aea22b7e21bd7ab31c792777571d94"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc-1"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"c4e59c769fedd356088ea5d205b419b56049e5eb"},{"commit":{"message":"Add is_humongous argument"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"4a4d75df2e4822dcaa9bf5d934319ab74c89b2e7"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc-1"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"97d673dbc75d2de772a703136a4ed78d25df36d7"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc-1"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"e8ac430f35e2e59aff0c5ee9f074ecdd6f319734"},{"commit":{"message":"Bug fix"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"}],"sha":"490e77385bd1c80f8e24031c142a3eecda7cb461"},{"commit":{"message":"Not use Atomic::load in the CAS allocation code to read shared directly allocatable regions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"f3a9d48f7c7ac70d174e40c2c0fefed57ede353b"},{"commit":{"message":"Don't count reserved region w\/o alloc as free"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"}],"sha":"9aafa33952a315d2984a2c8ff27d849033d75814"},{"commit":{"message":"Merge branch 'cas-alloc-1' into cas-alloc-test"},"files":[],"sha":"594334c50e0f308053e17fec3641914111fd553b"},{"commit":{"message":"Don't eagerly steal allocate when GC state is not stable"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"d25aa557ef73d409b3aad06050c154450e1ccb5f"},{"commit":{"message":"retire_region_from_partition from mutator view when reserve it for direct allocation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"7266bab0e9213c3a31176b3b1865b3102f5d757d"},{"commit":{"message":"Don't eagerly steal allocate when GC state is not stable"},"files":[],"sha":"25940a3afd3ba51eac354707f3e8600d81aabe84"},{"commit":{"message":"Count the region free space as used when reserve it for direct allocation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"e9e84f4339986ae2dd436e86545ae3cb8711c147"},{"commit":{"message":"Merge branch 'master' into cas-alloc-test"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"aa268def672c97c0a054e3c74f932825362796d9"},{"commit":{"message":"ShenandoahHeapRegion::_age and _youth must be volatile"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"a007b8a11715307e4b9ea0c13e6628028d066405"},{"commit":{"message":"Always call make_regular_allocation after successful allocation to reset_age"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"7cbc3d27fb76cb92e3729ac0410d28aeb3105e21"},{"commit":{"message":"Add flag ShenandoahDirectAllocationStealingAllowed"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"89f59b23c756e042fb7ff034bd727464d8a232b1"},{"commit":{"message":"retire region from partition when free is less than PLAB::min_size_bytes"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"416d13a4ba50fc257394eeef363242049a2d1e2e"},{"commit":{"message":"1. Add PLAB::min_size_bytes()\n2. Reserve a region for direct alloc when it has more than ShenandoahHeapRegion::max_tlab_size_bytes free space"},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/plab.cpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/plab.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"acbc84d882a4e4dcf2970cdc5302bb780983f20b"},{"commit":{"message":"Remove unnecessary check in find_next_retire_eligible_region"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"b2e498bd3fc72b86dae8d7770868b3ba4b10490e"},{"commit":{"message":"Touch-ups"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"68226bbbbcdb0f198a513976050c516db94ee0c5"},{"commit":{"message":"Missing 'else'"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"c288e16dd642d9f20702067f74a9105e17902b44"},{"commit":{"message":"Only call try_recycle_under_lock when region is empty or trash"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"224a6cdc73ec3fc1b5ac7716d221811e2802feb7"},{"commit":{"message":"Simplify code"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"54d74d60bfff3dd3eadfab8e01910ce2e0c9007b"},{"commit":{"message":"Rename method names to avoid confusions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"a7a4a8752fa9780fa02961d150458c9fc0d814b4"},{"commit":{"message":"Not always check all direct allocation regions when CAS fails"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"fddf25bfe5c40474530611587313978e920b0c38"},{"commit":{"message":"Fix a typo"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"673adac41fcb63ebb76805fea4d3d0cc1a031888"},{"commit":{"message":"Refactors"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"5c3a7386c09d7c7166fcbc8f9c1cfaf18fba48c4"},{"commit":{"message":"Fix jtreg test failure"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"150d443c258d947697a91fe99bff24adaed23fea"},{"commit":{"message":"Add _eligible_for_replacement flag"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"eac1ed030a3fbc9dec0f75021c53a4a20d554d2d"},{"commit":{"message":"Rename ShenandoahHeapRegionAddress to ShenandoahDirectAllocationRegion"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"60f96639ca94ea61d2cc671a06f91a859e2fb7f3"},{"commit":{"message":"Renames"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"35937a7ff1bafb54b0e2e5e06aec4b1c1c57721e"},{"commit":{"message":"Fix build issue"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"9c3984ed4206e0b1284b64fee9474745e8c8ce3c"},{"commit":{"message":"Refactor find_next_retire_eligible_region"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"07df1b4bf3da824ef75bb6073c0306c73d8c2491"},{"commit":{"message":"bug fix"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"19b115467726494f0e8dbcd736b569ee7fee06f8"},{"commit":{"message":"Only refill probing regions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"6f8fbc637204abc7d06419aa2e200fa075a88718"},{"commit":{"message":"Touch-ups"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"30eb3dc6b82ba12dd1eb80d1862079d887737e8d"},{"commit":{"message":"Missing semicolon"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"f6e99978d3eec66c1c257555fe5728f396cee799"},{"commit":{"message":"Fix a dead loop"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"6060534a1a4d5c6aeb7a30cd8908623fd3aca967"},{"commit":{"message":"Check all direct allocatable regions when refill"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"433b51d02708095b2af9060af569ce732d20c742"},{"commit":{"message":"Assert before reserve directly allocatable region"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"ccb4c506c773e48236565152d9bb7fc1d908a627"},{"commit":{"message":"use trash region"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"44684ea0c3ce94e7579005b925d1d36091b02d6c"},{"commit":{"message":"Fix assert"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"01460bd94f0228afb51664af55090ea20db210a1"},{"commit":{"message":"More optimizations"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"c26ee74c03ccbae002eee0c5cfb4337fa1eee1cf"},{"commit":{"message":"retire region from mutator partition more aggressively"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"00b976ebbbe3c13e19ed3faf6a6294f457e97de2"},{"commit":{"message":"Bug fix"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"5927bacf83620b0473bc9fe6368d0262f9c98dac"},{"commit":{"message":"Fix build"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"554d937e8e571c8d8ea3d5d467fab3e41caf369d"},{"commit":{"message":"Add method retire_region_when_eligible"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"4d8cc7efa0c269245edd4cd3f9d714090c274545"},{"commit":{"message":"Always release shared region if it doesn't have enough space for the allocation req"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"e5224a3ad87e6d5d13048ea2efedd0510a841aac"},{"commit":{"message":"Retire if a region has less than PLAB::min_size() free space"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"ef512c59a16d4e6c77df9bd9228b86a2c3e49af5"},{"commit":{"message":"Bug fix"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"fa3e02a43145b1e6f9863a0d7b5eca9f2fb9068f"},{"commit":{"message":"Bug fix"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"c88bccccd0cee229aed5ec4138dfb50555455d1f"},{"commit":{"message":"Fix assert"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"c9b7c5548a2ab6a449f6b8e4ff948174000e3000"},{"commit":{"message":"Stop using allocate_for_mutator in par_allocate_single_for_mutator"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"3ef8b86d04b682cb144597aa8dd8d067a3e77453"},{"commit":{"message":"Use PaddedArray to store directly allocatable regions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"53383462d635a9f4b08d722f9eeab4e25b92ef41"},{"commit":{"message":"Comments to explain ShenandoahDirectlyAllocatableRegionAffinity"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"f4c8e55a148bce193e988509b762f6f371a43a1f"},{"commit":{"message":"Delete ShenandoahCPU"},"files":[],"sha":"ca04034f47c96c16ef5a34fabcd7b7b5d49fadba"},{"commit":{"message":"Use random to decide the start index where mutator starts allocating with CAS"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"c640e68915d2e8ef536eae22e31700114f470c2c"},{"commit":{"message":"Fix wrong include"},"files":[],"sha":"926462f7cb280bbd877d2f5498b0c40ab84bbe5a"},{"commit":{"message":"Fix wrong include"},"files":[],"sha":"1557472b1f640cf7f7a3b03fd46a5ff0da08ea68"},{"commit":{"message":"Add CPU afinity support and use CPU process id instead thread id for CAS allocation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"9340e6e318132e7b94cf45267efd1e3016e3a124"},{"commit":{"message":"Not update allocation bias"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"b3d359229bf173fadc01e0be1943dd6a960ef89f"},{"commit":{"message":"Fix a bug"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"3e80fdce277dbb9a4c35547f6a57ff70883f30a3"},{"commit":{"message":"Fix improper order when release a region from direct allocation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"c93dc012299d4d92328fb66f4605c6aedbb2484a"},{"commit":{"message":"Fix improper order when release a region from direct allocation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"34529958af92d45f2cf44b8c72060779fabdaf2e"},{"commit":{"message":"Fix improper order when release a region from direct allocation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"fccbd0da9b83b3ce3146ef1dc4a614ad92e44b0b"},{"commit":{"message":"Fix typo"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"138acb785586b402d33837f66c1b156c1a1594af"},{"commit":{"message":"Not repeat allocation on the regions already tried before stealing alloc from other shared regions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"dceff3ce3f56d576d247983b81db3c023b620dc0"},{"commit":{"message":"Fix typo"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"e4ddfdc9ed67e7eaea4573fe2085bd9fff0850c3"},{"commit":{"message":"Allocate new obj before storing the new reserved shared region"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"2ea822c98bc94d55b1d5373256afe8ff69f3ab3e"},{"commit":{"message":"touch up"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"d4dcb28fbd19fbac3a159994ca735638781a282c"},{"commit":{"message":"reserve region when non-empty region has enough capacity"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"96db6192aab39f39fea792bbd73c730b4ac93bb9"},{"commit":{"message":"Only reserve empty region for direct allocation, also take the chance to allocate object under lock from the non-empty region with enough capacity"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"d1d71bc8a69e83ecbcd15f83117b65a49035244d"},{"commit":{"message":"Not reserve a region if it is ready for promotion"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"ce5616c513c821a515735041ed75c85baf906306"},{"commit":{"message":"Fix build error for Windows"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"6aa2dbace84d3d9bdb7d7da727e44d0589b5c9cb"},{"commit":{"message":"Use current thread id for hash"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"2f5d8182cf8a7416599369c5a08dfcea4bfae533"},{"commit":{"message":"Steal alloc from other shared regions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"103e42f684fc2af697dcfc6ca317b341026af212"},{"commit":{"message":"Revert \"Duplicate Z's CPUAffinity in gc shared\"\n\nThis reverts commit 66f3919d1b4c31945718494c0ec9d8b960158a2c."},"files":[],"sha":"bc5e72a539ea2b914a622b3962af6c15f838d004"},{"commit":{"message":"Add todo comments"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"970f3ddacec8a4180cd46cd8b2fe79c629f8eb2e"},{"commit":{"message":"More refactors"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"d509856bc5bebd65c7eb4421ab69e6757175f10d"},{"commit":{"message":"Fix build error"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"4faf6182091c921064f335d7a586bbe259d3d149"},{"commit":{"message":"Adjust alloc logic"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"977bebf931f240cbc63e880b0fc292363ac43ca4"},{"commit":{"message":"Remove use of heap lock when update used"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"}],"sha":"37cee1f5e4430ce2ba0e695055c6e954d0912aea"},{"commit":{"message":"Fix build error"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"94e538cb9af82ab6476ad1540adcd8d3fe2fa3c3"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"b9c99264ee3735250ac1bec11e71f970e2cd7ea0"},{"commit":{"message":"Fix more asserts"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"64015b3631d4552ddbbcd97bc575a23fac915469"},{"commit":{"message":"Fix humongous allocation failure"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"4caa8011a4c91a61093fcfb7c3a8ea2644d0ae05"},{"commit":{"message":"Fixes"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"}],"sha":"d3cebfc3ba209f330ad4f0425eb0a8ed44f2df43"},{"commit":{"message":"Fix errors under race conditions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"60e75f23e3003d5938a643530bf21370894b348c"},{"commit":{"message":"increase_used needs to be called with heap lock"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"11da608c25d41c5698380a8451ade5ad3d059bde"},{"commit":{"message":"Merge branch 'openjdk:master' into cas-alloc"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"854ba37b57217757813d1df166c2f627c8b34acf"},{"commit":{"message":"Bug fix"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"8237eb60f0d1a19a2eead60375c55ae2262303fd"},{"commit":{"message":"Bug fix"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"c7ef2ec1c266c8f3a68def0cbba2bde2aecefcdc"},{"commit":{"message":"Humongous allocation and GC shall not use regions reserved for direct allocation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"5d0d37f0083a96b7c10fd1260a80987fce83776e"},{"commit":{"message":"Update allocation bias"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"2da482106e6542a60445a2a59418f5801369ee48"},{"commit":{"message":"CAS allocation for mutators"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"5a6bc1c50f9851ab1c9f00dc71093564e29c733e"},{"commit":{"message":"cas_alloc"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"cd19779f24c4a1075cb884380a51a1821726a20a"},{"commit":{"message":"Touch up"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/vmStructs_shenandoah.hpp"}],"sha":"90f21c7c706d6154946332d3718ec1764ffa5da5"},{"commit":{"message":"Duplicate Z's CPUAffinity in gc shared"},"files":[],"sha":"66f3919d1b4c31945718494c0ec9d8b960158a2c"},{"commit":{"message":"Add allocate_atomic using CAS to ShenandoahHeapRegion"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"a063a1c5b9bd281190d8af87ae6c8fa9226acf0a"}]