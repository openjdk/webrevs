{"files":[{"patch":"@@ -45,1 +45,1 @@\n- * @run main\/othervm -Xmx900m AbsPathsInImage\n+ * @run main AbsPathsInImage\n@@ -54,0 +54,1 @@\n+    private static final int DEFAULT_BUFFER_SIZE = 8192;\n@@ -183,1 +184,8 @@\n-        List<String> matches = scanBytes(Files.readAllBytes(file), searchPatterns);\n+        int bytesRead;\n+        byte[] buffer = new byte[DEFAULT_BUFFER_SIZE];\n+        List<String> matches = new ArrayList<>();\n+        try (InputStream inputStream = Files.newInputStream(file)) {\n+            while ((bytesRead = inputStream.read(buffer)) != -1) {\n+                matches.addAll(scanBytes(buffer, bytesRead, searchPatterns));\n+            }\n+        }\n@@ -195,0 +203,3 @@\n+        ZipEntry zipEntry;\n+        int bytesRead;\n+        byte[] buffer = new byte[DEFAULT_BUFFER_SIZE];\n@@ -196,1 +207,0 @@\n-            ZipEntry zipEntry;\n@@ -198,1 +208,4 @@\n-                List<String> matches = scanBytes(zipInputStream.readAllBytes(), searchPatterns);\n+                List<String> matches = new ArrayList<>();\n+                while ((bytesRead = zipInputStream.read(buffer)) != -1) {\n+                    matches.addAll(scanBytes(buffer, bytesRead, searchPatterns));\n+                }\n@@ -211,1 +224,1 @@\n-    private List<String> scanBytes(byte[] data, List<byte[]> searchPatterns) {\n+    private List<String> scanBytes(byte[] data, int dataLength, List<byte[]> searchPatterns) {\n@@ -213,1 +226,1 @@\n-        for (int i = 0; i < data.length; i++) {\n+        for (int i = 0; i < dataLength; i++) {\n@@ -217,1 +230,1 @@\n-                    if ((i + j >= data.length || data[i + j] != searchPattern[j])) {\n+                    if ((i + j >= dataLength || data[i + j] != searchPattern[j])) {\n@@ -223,1 +236,1 @@\n-                    matches.add(new String(data, charsStart(data, i), charsOffset(data, i, searchPattern.length)));\n+                    matches.add(new String(data, charsStart(data, i), charsOffset(data, dataLength, i, searchPattern.length)));\n@@ -243,1 +256,1 @@\n-    private int charsOffset(byte[] data, int startIndex, int startOffset) {\n+    private int charsOffset(byte[] data, int dataLength, int startIndex, int startOffset) {\n@@ -245,1 +258,1 @@\n-        while (startIndex + ++offset < data.length) {\n+        while (startIndex + ++offset < dataLength) {\n","filename":"test\/jdk\/build\/AbsPathsInImage.java","additions":23,"deletions":10,"binary":false,"changes":33,"status":"modified"}]}