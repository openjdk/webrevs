{"files":[{"patch":"@@ -721,0 +721,1 @@\n+  $1_AOT_JDK_DIR   := $$($1_TEST_SUPPORT_DIR)\/aot\n@@ -724,0 +725,9 @@\n+  # We first execute the training run with make\/test\/SetupAot.java to touch\n+  # a fair number of classes inside the JDK. Note that we don't specify a classpath,\n+  # but the Java launcher will use an implicit class path of \".\", so it can pick up the\n+  # SetupAot class from the current directory.\n+  #\n+  # The SetupAot class (or any other classes that are loaded from \".\"\n+  # will be excluded from the the AOT cache as \".\" is an unsupported\n+  # location. As a result, the AOT cache will contain only classes from the JDK.\n+\n@@ -729,0 +739,2 @@\n+\t    $(CD) $$($1_AOT_JDK_DIR); \\\n+\t    $(JDK_UNDER_TEST)\/bin\/javac -d . $(TOPDIR)\/make\/test\/SetupAot.java; \\\n@@ -730,0 +742,1 @@\n+\t                -Xlog:cds,cds+class=debug:file=$$($1_AOT_JDK_CONF).log \\\n@@ -731,1 +744,1 @@\n-\t                'jdk.internal.misc.CDS$$$$TestTrainingApp' \\\n+\t                SetupAot \\\n","filename":"make\/RunTests.gmk","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.spi.ToolProvider;\n+\n+\/\/ This program is executed by ..\/RunTests.gmk to support running HotSpot jtreg tests\n+\/\/ in the \"AOT mode\", for example:\n+\/\/\n+\/\/     make test JTREG_AOT_JDK=true open\/test\/hotspot\/jtreg\/runtime\/stringtable\n+\/\/\n+\/\/ All JDK classes touched by this program will be stored into a customized AOT cache.\n+\/\/ This is a larger set of classes than those stored in the JDK's default CDS archive.\n+\/\/ This customized cache can also have additional optimizations that are not\n+\/\/ enabled in the default CDS archive. For example, AOT-linked classes and lambda\n+\/\/ expressions. In the future, it can also contain AOT profiles and AOT compiled methods.\n+\/\/\n+\/\/ We can use this customized AOT cache to run various HotSpot tests to improve\n+\/\/ coverage on AOT.\n+\/\/\n+\/\/ Note that ..\/RunTests.gmk loads this class using an implicit classpath of \".\", so\n+\/\/ this class will be excluded from the customized AOT cache. Hence it will cause\n+\/\/ any class name conflicts with the HotSpot tests. The scripts in ..\/RunTests.gmk\n+\/\/ ensure that the customized AOT cache contains *only* classes from the JDK itself.\n+\n+public class SetupAot {\n+    public static void main(String[] args) throws Throwable {\n+        String[] tools = {\n+            \"javac\", \"javap\", \"jlink\", \"jar\",\n+        };\n+        \/\/ TODO: we should do more substantial work than just running with \"--help\".\n+        \/\/ E.g., use javac to compile a program.\n+        for (String tool : tools) {\n+            ToolProvider t  = ToolProvider.findFirst(tool)\n+                .orElseThrow(() -> new RuntimeException(tool + \" not found\"));\n+            t.run(System.out, System.out, \"--help\");\n+        }\n+    }\n+}\n","filename":"make\/test\/SetupAot.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -1074,2 +1074,8 @@\n-        log_error(cds)(\"%s%s\", mismatch_msg, hint_msg);\n-        MetaspaceShared::unrecoverable_loading_error();\n+        if (CDSConfig::is_dumping_final_static_archive()) {\n+          log_error(cds)(\"class path and\/or module path are not compatible with the \"\n+                         \"ones specified when the AOTConfiguration file was recorded%s\", hint_msg);\n+          vm_exit_during_initialization(\"Unable to use create AOT cache.\", nullptr);\n+        } else {\n+          log_error(cds)(\"%s%s\", mismatch_msg, hint_msg);\n+          MetaspaceShared::unrecoverable_loading_error();\n+        }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-import java.util.spi.ToolProvider;\n@@ -453,14 +452,0 @@\n-\n-    public static class TestTrainingApp {\n-        static ClassLoader loader = jdk.internal.loader.ClassLoaders.appClassLoader();\n-        public static void main(String[] args) throws Throwable {\n-            String[] tools = {\n-                \"javac\", \"javap\", \"jlink\", \"jar\",\n-            };\n-            for (String tool : tools) {\n-                ToolProvider t  = ToolProvider.findFirst(tool)\n-                    .orElseThrow(() -> new RuntimeException(tool + \" not found\"));\n-                t.run(System.out, System.out, \"--help\");\n-            }\n-        }\n-    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/CDS.java","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -286,0 +286,15 @@\n+\n+        \/\/----------------------------------------------------------------------\n+        printTestCase(\"Classpath mismatch when creating archive\");\n+\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-XX:AOTMode=create\",\n+            \"-XX:AOTConfiguration=\" + aotConfigFile,\n+            \"-XX:AOTCache=\" + aotCacheFile,\n+            \"-cp\", \"noSuchJar.jar\");\n+\n+        out = CDSTestUtils.executeAndLog(pb, \"neg\");\n+        out.shouldContain(\"class path and\/or module path are not compatible with the ones \" +\n+                          \"specified when the AOTConfiguration file was recorded\");\n+        out.shouldContain(\"Unable to use create AOT cache\");\n+        out.shouldHaveExitValue(1);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/AOTFlags.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}