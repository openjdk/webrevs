{"files":[{"patch":"@@ -0,0 +1,133 @@\n+\/*\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.AWTException;\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import java.awt.SystemTray;\n+import java.awt.TrayIcon;\n+import java.awt.image.BufferedImage;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextArea;\n+\n+import jdk.test.lib.Platform;\n+\n+\/*\n+ * @test\n+ * @bug 6299866 8316931\n+ * @summary Tests that no NPE is thrown when the tray icon is disposed from the\n+ * handler of action event caused by clicking on this icon.\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame jtreg.SkippedException\n+ * @run main\/manual DisposeInActionEventTest\n+ *\/\n+\n+public class DisposeInActionEventTest {\n+    private static JTextArea textArea;\n+    private static SystemTray systemTray;\n+    private static TrayIcon trayIcon;\n+\n+    public static void main(String[] args) throws Exception {\n+        if (!SystemTray.isSupported()) {\n+            throw new jtreg.SkippedException(\"The test cannot be run because \" +\n+                    \"SystemTray is not supported.\");\n+        }\n+        String clickInstruction =\n+                (Platform.isOSX()) ? \"Right-click\" : \"Double click (left mouse button)\";\n+\n+        String instructions = \"When the test starts, it adds an icon to the tray area.\\n\" +\n+                       \"The icon is a red filled square with a white border.\\n\" +\n+                       \"If you don't see this tray icon, please make sure that the tray area\\n\" +\n+                       \"(also called Taskbar Status Area on MS Windows, Notification\\n\" +\n+                       \"Area on Gnome or System Tray on KDE) is visible.\\n\" +\n+                       \"On macOS the default location is the right of the top system bar.\\n\\n\" +\n+                       clickInstruction + \" the tray icon to trigger the action event.\\n\" +\n+                       \"Brief information about action events is printed\\n\" +\n+                       \"in the Event Message Display frame.\\n\" +\n+                       \"After each action event, the tray icon is removed from\\n\" +\n+                       \"the tray and then added back in a second.\\n\\n\" +\n+                       \"The test checks if any exceptions are thrown when removing and\\n\" +\n+                       \"re-adding the icon. If something is wrong, the test will automatically fail.\\n\" +\n+                       \"Repeat clicks several times. Then press PASS button.\";\n+\n+        try {\n+            PassFailJFrame.builder()\n+                    .title(\"DisposeInActionEventTest\")\n+                    .instructions(instructions)\n+                    .rows(18)\n+                    .columns(45)\n+                    .testUI(DisposeInActionEventTest::showFrameAndIcon)\n+                    .build()\n+                    .awaitAndCheck();\n+        } finally {\n+            if (systemTray != null) {\n+                systemTray.remove(trayIcon);\n+            }\n+        }\n+    }\n+\n+    private static JFrame showFrameAndIcon() {\n+        JFrame frame = new JFrame(\"Event Message Display\");\n+        frame.setLayout(new BorderLayout());\n+\n+        textArea = new JTextArea();\n+        frame.getContentPane().add(new JScrollPane(textArea));\n+        frame.setSize(400, 200);\n+\n+        BufferedImage img = new BufferedImage(32, 32, BufferedImage.TYPE_INT_ARGB);\n+        Graphics g = img.createGraphics();\n+        g.setColor(Color.WHITE);\n+        g.fillRect(0, 0, 32, 32);\n+        g.setColor(Color.RED);\n+        g.fillRect(6, 6, 20, 20);\n+        g.dispose();\n+\n+        systemTray = SystemTray.getSystemTray();\n+        trayIcon = new TrayIcon(img);\n+        trayIcon.setImageAutoSize(true);\n+        trayIcon.addActionListener(ev -> {\n+            textArea.append(ev + \"\\n\");\n+            systemTray.remove(trayIcon);\n+            new Thread(() -> {\n+                try {\n+                    Thread.sleep(1000);\n+                    systemTray.add(trayIcon);\n+                } catch (AWTException | InterruptedException e) {\n+                    e.printStackTrace();\n+                    PassFailJFrame.forceFail(\"Exception caught: \" + e.getMessage());\n+                }\n+            }).start();\n+        });\n+\n+        try {\n+            systemTray.add(trayIcon);\n+        } catch (AWTException e) {\n+            e.printStackTrace();\n+            PassFailJFrame.forceFail(\"Exception caught: \" + e.getMessage());\n+        }\n+\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/DisposeInActionEventTest.java","additions":133,"deletions":0,"binary":false,"changes":133,"status":"added"},{"patch":"@@ -1,131 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.awt.AWTException;\n-import java.awt.BorderLayout;\n-import java.awt.Color;\n-import java.awt.Graphics;\n-import java.awt.SystemTray;\n-import java.awt.TrayIcon;\n-import java.awt.image.BufferedImage;\n-import javax.swing.JFrame;\n-import javax.swing.JScrollPane;\n-import javax.swing.JTextArea;\n-\n-import jdk.test.lib.Platform;\n-\n-\/*\n- * @test\n- * @bug 6299866 8316931\n- * @summary Tests that no NPE is thrown when the tray icon is disposed from the\n- * handler of action event caused by clicking on this icon.\n- * @library ..\/..\/regtesthelpers \/test\/lib\n- * @build PassFailJFrame jtreg.SkippedException\n- * @run main\/manual DisposeInActionEventTest\n- *\/\n-\n-public class DisposeInActionEventTest {\n-    private static JTextArea textArea;\n-    private static SystemTray systemTray;\n-    private static TrayIcon trayIcon;\n-\n-    public static void main(String[] args) throws Exception {\n-        if (!SystemTray.isSupported()) {\n-            throw new jtreg.SkippedException(\"The test cannot be run because \" +\n-                    \"SystemTray is not supported.\");\n-        }\n-        String clickInstruction =\n-                (Platform.isOSX()) ? \"Right-click\" : \"Double click (left mouse button)\";\n-\n-        String instructions = \"When the test starts, it adds the icon to the tray area. If you\\n\" +\n-                       \"  don't see a tray icon, please, make sure that the tray area\\n\" +\n-                       \"  (also called Taskbar Status Area on MS Windows, Notification\\n\" +\n-                       \"  Area on Gnome or System Tray on KDE) is visible.\\n\\n\" +\n-                        clickInstruction + \" the tray icon to trigger the\\n\" +\n-                       \"  action event. Brief information about action events is printed\\n\" +\n-                       \"  in the frame. After each action event, the tray icon is removed from\\n\" +\n-                       \"  the tray and then added back in a second.\\n\\n\" +\n-                       \"The test checks if any exceptions are thrown when removing and\\n\" +\n-                       \"  re-adding the icon. If something is wrong, the test will automatically fail.\\n\" +\n-                       \"  Repeat clicks several times Then press PASS button.\";\n-\n-        try {\n-            PassFailJFrame.builder()\n-                    .title(\"DisposeInActionEventTest\")\n-                    .instructions(instructions)\n-                    .testTimeOut(10)\n-                    .rows(15)\n-                    .columns(45)\n-                    .testUI(DisposeInActionEventTest::showFrameAndIcon)\n-                    .build()\n-                    .awaitAndCheck();\n-        } finally {\n-            if (systemTray != null) {\n-                systemTray.remove(trayIcon);\n-            }\n-        }\n-    }\n-\n-    private static JFrame showFrameAndIcon() {\n-        JFrame frame = new JFrame(\"Event Message Display\");\n-        frame.setLayout(new BorderLayout());\n-\n-        textArea = new JTextArea();\n-        frame.getContentPane().add(new JScrollPane(textArea));\n-        frame.setSize(400, 200);\n-\n-        BufferedImage img = new BufferedImage(32, 32, BufferedImage.TYPE_INT_ARGB);\n-        Graphics g = img.createGraphics();\n-        g.setColor(Color.WHITE);\n-        g.fillRect(0, 0, 32, 32);\n-        g.setColor(Color.RED);\n-        g.fillRect(6, 6, 20, 20);\n-        g.dispose();\n-\n-        systemTray = SystemTray.getSystemTray();\n-        trayIcon = new TrayIcon(img);\n-        trayIcon.setImageAutoSize(true);\n-        trayIcon.addActionListener(ev -> {\n-            textArea.append(ev + \"\\n\");\n-            systemTray.remove(trayIcon);\n-            new Thread(() -> {\n-                try {\n-                    Thread.sleep(1000);\n-                    systemTray.add(trayIcon);\n-                } catch (AWTException | InterruptedException e) {\n-                    e.printStackTrace();\n-                    PassFailJFrame.forceFail(\"Exception caught: \" + e.getMessage());\n-                }\n-            }).start();\n-        });\n-\n-        try {\n-            systemTray.add(trayIcon);\n-        } catch (AWTException e) {\n-            e.printStackTrace();\n-            PassFailJFrame.forceFail(\"Exception caught: \" + e.getMessage());\n-        }\n-\n-        return frame;\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/DisposeInActionEventTest\/DisposeInActionEventTest.java","additions":0,"deletions":131,"binary":false,"changes":131,"status":"deleted"}]}