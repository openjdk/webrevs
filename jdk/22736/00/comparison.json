{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-GDIHashtable::BatchDestructionManager GDIHashtable::manager;\n-\n@@ -38,1 +36,1 @@\n-    manager.decrementCounter();\n+    manager().decrementCounter();\n@@ -43,1 +41,1 @@\n-    if (!manager.isBatchingEnabled()) {\n+    if (!manager().isBatchingEnabled()) {\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/GDIHashtable.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,1 +165,1 @@\n-        manager.add(this);\n+        manager().add(this);\n@@ -169,1 +169,1 @@\n-        manager.remove(this);\n+        manager().remove(this);\n@@ -195,1 +195,1 @@\n-    INLINE static void flushAll() { manager.flushAll(); }\n+    INLINE static void flushAll() { manager().flushAll(); }\n@@ -197,1 +197,1 @@\n-    INLINE CriticalSection& getManagerLock() { return manager.getLock(); }\n+    INLINE CriticalSection& getManagerLock() { return manager().getLock(); }\n@@ -201,1 +201,2 @@\n-    static BatchDestructionManager manager;\n+    static BatchDestructionManager& manager() {\n+        static BatchDestructionManager manager;\n@@ -203,0 +204,2 @@\n+        return manager;\n+    }\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/GDIHashtable.h","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"}]}