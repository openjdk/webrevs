{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,0 +148,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/PopFrameTest\/PopFrameTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -52,1 +52,3 @@\n-    rml.wait(0);\n+    while (bp_sync_reached) { \/\/ guard against spurious wakeups\n+      rml.wait(0);\n+    }\n@@ -56,1 +58,1 @@\n-  if (do_pop_frame != 0) {\n+  if (do_pop_frame != JNI_FALSE) {\n@@ -155,2 +157,0 @@\n-  bool need_stop = false;\n-\n@@ -158,4 +158,8 @@\n-  while (!need_stop) {\n-    RawMonitorLocker rml(jvmti, jni, monitor);\n-    need_stop = bp_sync_reached;\n-    sleep_ms(1); \/\/ 1 millisecond\n+  RawMonitorLocker rml(jvmti, jni, monitor);\n+  int attempts = 0;\n+  while (!bp_sync_reached) {\n+    LOG(\"Main: ensureAtBreakpoint: waitig 5 millis\\n\");\n+    if (++attempts > 100) {\n+      fatal(jni, \"Main: ensureAtBreakpoint: waited 1 sec\");\n+    }\n+    rml.wait(10); \/\/ 10 milliseconds\n@@ -169,0 +173,3 @@\n+  if (!bp_sync_reached) { \/\/ better diagnosability\n+    fatal(jni, \"Main: notifyAtBreakpoint: expected: bp_sync_reached==true\");\n+  }\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/PopFrameTest\/libPopFrameTest.cpp","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"}]}