{"files":[{"patch":"@@ -4489,1 +4489,0 @@\n-  \/\/ TBD Add notes about other policies and cpunodebind.\n@@ -4495,1 +4494,1 @@\n-      log_warning(os)(\"NUMA support is disabled as libnuma not initialized\");\n+      log_warning(os)(\"NUMA support is disabled as libnuma failed to initialize\");\n@@ -4501,16 +4500,6 @@\n-    if (Linux::numa_max_node() < 1 ||\n-        Linux::is_bound_to_single_mem_node() ||\n-        Linux::mem_and_cpu_node_mismatch()) {\n-      \/\/ Disable NUMA support if:\n-      \/\/ 1. Only a single NUMA node is available\n-      \/\/ 2. The process is bound to a single NUMA node\n-      \/\/ 3. The process memory and cpu node configuration is misaligned\n-      if ((UseNUMA && FLAG_IS_CMDLINE(UseNUMA)) ||\n-          (UseNUMAInterleaving && FLAG_IS_CMDLINE(UseNUMAInterleaving))) {\n-        \/\/ Only issue a warning if the user explicitly asked for NUMA support\n-       log_warning(os)(\"NUMA support is disabled as the process bound to a single\"\n-                       \" numa node or cpu and memory nodes are not aligned\");\n-      }\n-      FLAG_SET_ERGO(UseNUMA, false);\n-      FLAG_SET_ERGO(UseNUMAInterleaving, false);\n-\n+    if (Linux::numa_max_node() < 1) {\n+      disable_numa(\"Only a single NUMA node is available\");\n+    } else if (Linux::is_bound_to_single_mem_node()) {\n+      disable_numa(\"The process is bound to a single NUMA node\");\n+    } else if (Linux::mem_and_cpu_node_mismatch()) {\n+      disable_numa(\"The process memory and cpu node configuration does not match\");\n@@ -4558,0 +4547,10 @@\n+void os::Linux::disable_numa(const char* reason) {\n+  if ((UseNUMA && FLAG_IS_CMDLINE(UseNUMA)) ||\n+      (UseNUMAInterleaving && FLAG_IS_CMDLINE(UseNUMAInterleaving))) {\n+    \/\/ Only issue a warning if the user explicitly asked for NUMA support\n+    log_warning(os)(\"NUMA support disabled: %s\", reason);\n+  }\n+  FLAG_SET_ERGO(UseNUMA, false);\n+  FLAG_SET_ERGO(UseNUMAInterleaving, false);\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":17,"deletions":18,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -196,0 +196,1 @@\n+  static void disable_numa(const char* reason);\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}