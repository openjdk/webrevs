{"files":[{"patch":"@@ -4492,0 +4492,5 @@\n+    if ((UseNUMA && FLAG_IS_CMDLINE(UseNUMA)) ||\n+        (UseNUMAInterleaving && FLAG_IS_CMDLINE(UseNUMAInterleaving))) {\n+      \/\/ Only issue a warning if the user explicitly asked for NUMA support\n+      log_warning(os)(\"NUMA support is disabled as libnuma not initialized\");\n+    }\n@@ -4496,12 +4501,13 @@\n-    if ((Linux::numa_max_node() < 1) || Linux::is_bound_to_single_node() ||\n-        (!Linux::is_running_in_interleave_mode() && Linux::_numa_membind_bitmask != nullptr &&\n-        Linux::_numa_cpunodebind_bitmask != nullptr &&\n-        !_numa_bitmask_equal(Linux::_numa_membind_bitmask, Linux::_numa_cpunodebind_bitmask)) ||\n-        (Linux::is_running_in_interleave_mode() && Linux::_numa_interleave_bitmask != nullptr &&\n-        Linux::_numa_cpunodebind_bitmask != nullptr &&\n-        !_numa_bitmask_equal(Linux::_numa_interleave_bitmask, Linux::_numa_cpunodebind_bitmask))) {\n-      \/\/ If there's only one node (they start from 0) or if the process\n-      \/\/ is bound explicitly to a single node using membind, disable NUMA\n-      if (UseNUMA && FLAG_IS_CMDLINE(UseNUMA))\n-        warning(\"UseNUMA is disabled as the process bound to a single numa node\"\n-                \" or cpu and memory nodes are not aligned\");\n+    if (Linux::numa_max_node() < 1 ||\n+        Linux::is_bound_to_single_mem_node() ||\n+        Linux::mem_and_cpu_node_mismatch()) {\n+      \/\/ Disable NUMA support if:\n+      \/\/ 1. Only a single NUMA node is available\n+      \/\/ 2. The process is bound to a single NUMA node\n+      \/\/ 3. The process memory and cpu node configuration is misaligned\n+      if ((UseNUMA && FLAG_IS_CMDLINE(UseNUMA)) ||\n+          (UseNUMAInterleaving && FLAG_IS_CMDLINE(UseNUMAInterleaving))) {\n+        \/\/ Only issue a warning if the user explicitly asked for NUMA support\n+       log_warning(os)(\"NUMA support is disabled as the process bound to a single\"\n+                       \" numa node or cpu and memory nodes are not aligned\");\n+      }\n@@ -4509,0 +4515,2 @@\n+      FLAG_SET_ERGO(UseNUMAInterleaving, false);\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":20,"deletions":12,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -371,1 +371,1 @@\n-  static bool is_bound_to_single_node() {\n+  static bool is_bound_to_single_mem_node() {\n@@ -376,1 +376,6 @@\n-    if (_numa_membind_bitmask != nullptr && _numa_max_node != nullptr && _numa_bitmask_isbitset != nullptr) {\n+    struct bitmask* mem_nodes_bitmask = Linux::_numa_membind_bitmask;\n+    if (Linux::is_running_in_interleave_mode()) {\n+      mem_nodes_bitmask = Linux::_numa_interleave_bitmask;\n+    }\n+\n+    if (mem_nodes_bitmask != nullptr && _numa_max_node != nullptr && _numa_bitmask_isbitset != nullptr) {\n@@ -383,1 +388,1 @@\n-      if (_numa_bitmask_isbitset(_numa_membind_bitmask, node)) {\n+      if (_numa_bitmask_isbitset(mem_nodes_bitmask, node)) {\n@@ -394,0 +399,13 @@\n+  \/\/ Check if cpu and memory nodes are aligned, returns true if nodes misalign\n+  static bool mem_and_cpu_node_mismatch() {\n+    struct bitmask* mem_nodes_bitmask = Linux::_numa_membind_bitmask;\n+    if (Linux::is_running_in_interleave_mode()) {\n+      mem_nodes_bitmask = Linux::_numa_interleave_bitmask;\n+    }\n+\n+    if (mem_nodes_bitmask == nullptr || Linux::_numa_cpunodebind_bitmask == nullptr) {\n+      return false;\n+    }\n+\n+    return !_numa_bitmask_equal(mem_nodes_bitmask, Linux::_numa_cpunodebind_bitmask);\n+  }\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":21,"deletions":3,"binary":false,"changes":24,"status":"modified"}]}