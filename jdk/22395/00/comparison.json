{"files":[{"patch":"@@ -3255,0 +3255,2 @@\n+      set_numa_bitmask_equal(CAST_TO_FN_PTR(numa_bitmask_equal_func_t,\n+                                            libnuma_dlsym(handle, \"numa_bitmask_equal\")));\n@@ -3265,0 +3267,2 @@\n+      set_numa_get_run_node_mask(CAST_TO_FN_PTR(numa_get_run_node_mask_func_t,\n+                                                libnuma_v2_dlsym(handle, \"numa_get_run_node_mask\")));\n@@ -3272,0 +3276,1 @@\n+        set_numa_cpunodebind_bitmask(_numa_get_run_node_mask());\n@@ -3448,0 +3453,1 @@\n+os::Linux::numa_bitmask_equal_func_t os::Linux::_numa_bitmask_equal;\n@@ -3451,0 +3457,1 @@\n+os::Linux::numa_get_run_node_mask_func_t os::Linux::_numa_get_run_node_mask;\n@@ -3459,0 +3466,1 @@\n+struct bitmask* os::Linux::_numa_cpunodebind_bitmask;\n@@ -4481,0 +4489,1 @@\n+  \/\/ TBD Add notes about other policies and cpunodebind.\n@@ -4486,1 +4495,8 @@\n-    if ((Linux::numa_max_node() < 1) || Linux::is_bound_to_single_node()) {\n+    Linux::set_configured_numa_policy(Linux::identify_numa_policy());\n+    if ((Linux::numa_max_node() < 1) || Linux::is_bound_to_single_node() ||\n+        (!Linux::is_running_in_interleave_mode() && Linux::_numa_membind_bitmask != nullptr &&\n+        Linux::_numa_cpunodebind_bitmask != nullptr &&\n+        !_numa_bitmask_equal(Linux::_numa_membind_bitmask, Linux::_numa_cpunodebind_bitmask)) ||\n+        (Linux::is_running_in_interleave_mode() && Linux::_numa_interleave_bitmask != nullptr &&\n+        Linux::_numa_cpunodebind_bitmask != nullptr &&\n+        !_numa_bitmask_equal(Linux::_numa_interleave_bitmask, Linux::_numa_cpunodebind_bitmask))) {\n@@ -4489,1 +4505,4 @@\n-      UseNUMA = false;\n+      if (UseNUMA && FLAG_IS_CMDLINE(UseNUMA))\n+        warning(\"UseNUMA is disabled as the process bound to a single numa node\"\n+                \" or cpu and memory nodes are not aligned\");\n+      FLAG_SET_ERGO(UseNUMA, false);\n@@ -4494,2 +4513,0 @@\n-      Linux::set_configured_numa_policy(Linux::identify_numa_policy());\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":21,"deletions":4,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -207,0 +207,1 @@\n+  typedef struct bitmask* (*numa_get_run_node_mask_func_t)(void);\n@@ -211,0 +212,1 @@\n+  typedef int (*numa_bitmask_equal_func_t)(struct bitmask *bmp1, struct bitmask *bmp2);\n@@ -224,0 +226,1 @@\n+  static numa_bitmask_equal_func_t _numa_bitmask_equal;\n@@ -226,0 +229,1 @@\n+  static numa_get_run_node_mask_func_t _numa_get_run_node_mask;\n@@ -234,0 +238,1 @@\n+  static struct bitmask* _numa_cpunodebind_bitmask;\n@@ -246,0 +251,1 @@\n+  static void set_numa_bitmask_equal(numa_bitmask_equal_func_t func) { _numa_bitmask_equal = func; }\n@@ -248,0 +254,1 @@\n+  static void set_numa_get_run_node_mask(numa_get_run_node_mask_func_t func) { _numa_get_run_node_mask = func; }\n@@ -256,0 +263,1 @@\n+  static void set_numa_cpunodebind_bitmask(struct bitmask* ptr)        { _numa_cpunodebind_bitmask = ptr ;      }\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}