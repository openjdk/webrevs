{"files":[{"patch":"@@ -133,0 +133,1 @@\n+            values.add(LintCategory.INCUBATING);\n@@ -218,0 +219,5 @@\n+        \/**\n+         * Warn about use of incubating modules.\n+         *\/\n+        INCUBATING(\"incubating\"),\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Lint.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -120,0 +120,1 @@\n+import com.sun.tools.javac.code.Lint;\n@@ -137,0 +138,1 @@\n+    private final Lint lint;\n@@ -188,0 +190,1 @@\n+        lint = Lint.instance(context);\n@@ -1354,4 +1357,5 @@\n-        String incubatingModules = filterAlreadyWarnedIncubatorModules(result.stream()\n-                .filter(msym -> msym.resolutionFlags.contains(ModuleResolutionFlags.WARN_INCUBATING))\n-                .map(msym -> msym.name.toString()))\n-                .collect(Collectors.joining(\",\"));\n+        if (lint.isEnabled(LintCategory.INCUBATING)) {\n+            String incubatingModules = filterAlreadyWarnedIncubatorModules(result.stream()\n+                    .filter(msym -> msym.resolutionFlags.contains(ModuleResolutionFlags.WARN_INCUBATING))\n+                    .map(msym -> msym.name.toString()))\n+                    .collect(Collectors.joining(\",\"));\n@@ -1359,2 +1363,3 @@\n-        if (!incubatingModules.isEmpty()) {\n-            log.warning(Warnings.IncubatingModules(incubatingModules));\n+            if (!incubatingModules.isEmpty()) {\n+                log.warning(Warnings.IncubatingModules(incubatingModules));\n+            }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Modules.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -216,0 +216,3 @@\n+javac.opt.Xlint.desc.incubating=\\\n+    Warn about use of incubating modules.\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/javac.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -165,0 +165,1 @@\n+ * <tr><th scope=\"row\">{@code incubating}           <td>use of incubating modules\n","filename":"src\/jdk.compiler\/share\/classes\/module-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -728,0 +728,2 @@\n+\\f[V]incubating\\f[R]: Warns about the use of incubating modules.\n+.IP \\[bu] 2\n","filename":"src\/jdk.compiler\/share\/man\/javac.1","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8171177\n+ * @bug 8171177 8187591\n@@ -241,0 +241,10 @@\n+\n+        \/\/test disable lint incubating\n+        new JavacTask(tb)\n+                .options(\"--module-path\", classes.toString(),\n+                         \"-XDrawDiagnostics\",\n+                         \"-Xlint:-incubating\",\n+                         \"-Werror\")\n+                .outdir(testModuleClasses)\n+                .files(findJavaFiles(testModuleSrc))\n+                .run(Expect.SUCCESS);\n","filename":"test\/langtools\/tools\/javac\/modules\/IncubatingTest.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"}]}