{"files":[{"patch":"@@ -63,3 +63,0 @@\n-  } else if (LockingMode == LM_LIGHTWEIGHT) {\n-    \/\/ null check obj. load_klass performs load if DiagnoseSyncOnValueBasedClasses != 0.\n-    testptr(hdr, Address(obj));\n","filename":"src\/hotspot\/cpu\/x86\/c1_MacroAssembler_x86.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -9890,0 +9890,4 @@\n+  \/\/ Preload the markWord. It is important that this is the first\n+  \/\/ instruction emitted as it is part of C1's null check semantics.\n+  movptr(reg_rax, Address(obj, oopDesc::mark_offset_in_bytes()));\n+\n@@ -9902,1 +9906,0 @@\n-  movptr(reg_rax, Address(obj, oopDesc::mark_offset_in_bytes()));\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -13804,1 +13804,1 @@\n-instruct cmpFastLockLightweight(eFlagsReg cr, eRegP object, eBXRegP box, eAXRegI tmp, eRegP scr, eRegP thread) %{\n+instruct cmpFastLockLightweight(eFlagsReg cr, eRegP object, eBXRegP box, eAXRegI eax_reg, eRegP tmp, eRegP thread) %{\n@@ -13807,1 +13807,1 @@\n-  effect(TEMP tmp, TEMP scr, USE_KILL box, TEMP thread);\n+  effect(TEMP eax_reg, TEMP tmp, USE_KILL box, TEMP thread);\n@@ -13809,1 +13809,1 @@\n-  format %{ \"FASTLOCK $object,$box\\t! kills $box,$tmp,$scr\" %}\n+  format %{ \"FASTLOCK $object,$box\\t! kills $box,$eax_reg,$tmp\" %}\n@@ -13812,1 +13812,1 @@\n-    __ fast_lock_lightweight($object$$Register, $box$$Register, $tmp$$Register, $scr$$Register, $thread$$Register);\n+    __ fast_lock_lightweight($object$$Register, $box$$Register, $eax_reg$$Register, $tmp$$Register, $thread$$Register);\n@@ -13817,1 +13817,1 @@\n-instruct cmpFastUnlockLightweight(eFlagsReg cr, eRegP object, eAXRegP box, eRegP tmp, eRegP thread) %{\n+instruct cmpFastUnlockLightweight(eFlagsReg cr, eRegP object, eAXRegP eax_reg, eRegP tmp, eRegP thread) %{\n@@ -13819,2 +13819,2 @@\n-  match(Set cr (FastUnlock object box));\n-  effect(TEMP tmp, USE_KILL box, TEMP thread);\n+  match(Set cr (FastUnlock object eax_reg));\n+  effect(TEMP tmp, USE_KILL eax_reg, TEMP thread);\n@@ -13822,1 +13822,1 @@\n-  format %{ \"FASTUNLOCK $object,$box\\t! kills $box,$tmp\" %}\n+  format %{ \"FASTUNLOCK $object,$eax_reg\\t! kills $eax_reg,$tmp\" %}\n@@ -13825,1 +13825,1 @@\n-    __ fast_unlock_lightweight($object$$Register, $box$$Register, $tmp$$Register, $thread$$Register);\n+    __ fast_unlock_lightweight($object$$Register, $eax_reg$$Register, $tmp$$Register, $thread$$Register);\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -12431,1 +12431,1 @@\n-instruct cmpFastLockLightweight(rFlagsReg cr, rRegP object, rbx_RegP box, rax_RegI tmp, rRegP scr) %{\n+instruct cmpFastLockLightweight(rFlagsReg cr, rRegP object, rbx_RegP box, rax_RegI rax_reg, rRegP tmp) %{\n@@ -12434,1 +12434,1 @@\n-  effect(TEMP tmp, TEMP scr, USE_KILL box);\n+  effect(TEMP rax_reg, TEMP tmp, USE_KILL box);\n@@ -12436,1 +12436,1 @@\n-  format %{ \"fastlock $object,$box\\t! kills $box,$tmp,$scr\" %}\n+  format %{ \"fastlock $object,$box\\t! kills $box,$rax_reg,$tmp\" %}\n@@ -12438,1 +12438,1 @@\n-    __ fast_lock_lightweight($object$$Register, $box$$Register, $tmp$$Register, $scr$$Register, r15_thread);\n+    __ fast_lock_lightweight($object$$Register, $box$$Register, $rax_reg$$Register, $tmp$$Register, r15_thread);\n@@ -12443,1 +12443,1 @@\n-instruct cmpFastUnlockLightweight(rFlagsReg cr, rRegP object, rax_RegP box, rRegP tmp) %{\n+instruct cmpFastUnlockLightweight(rFlagsReg cr, rRegP object, rax_RegP rax_reg, rRegP tmp) %{\n@@ -12445,2 +12445,2 @@\n-  match(Set cr (FastUnlock object box));\n-  effect(TEMP tmp, USE_KILL box);\n+  match(Set cr (FastUnlock object rax_reg));\n+  effect(TEMP tmp, USE_KILL rax_reg);\n@@ -12448,1 +12448,1 @@\n-  format %{ \"fastunlock $object,$box\\t! kills $box,$tmp\" %}\n+  format %{ \"fastunlock $object,$rax_reg\\t! kills $rax_reg,$tmp\" %}\n@@ -12450,1 +12450,1 @@\n-    __ fast_unlock_lightweight($object$$Register, $box$$Register, $tmp$$Register, r15_thread);\n+    __ fast_unlock_lightweight($object$$Register, $rax_reg$$Register, $tmp$$Register, r15_thread);\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}