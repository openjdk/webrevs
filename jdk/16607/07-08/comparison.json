{"files":[{"patch":"@@ -131,0 +131,1 @@\n+    \/\/ Instead of MFENCE we use a dummy locked add of 0 to the top-of-stack.\n@@ -153,22 +154,0 @@\n-#ifdef _LP64\n-int C2HandleAnonOMOwnerStub::max_size() const {\n-  \/\/ Max size of stub has been determined by testing with 0, in which case\n-  \/\/ C2CodeStubList::emit() will throw an assertion and report the actual size that\n-  \/\/ is needed.\n-  return DEBUG_ONLY(36) NOT_DEBUG(21);\n-}\n-\n-void C2HandleAnonOMOwnerStub::emit(C2_MacroAssembler& masm) {\n-  __ bind(entry());\n-  Register mon = monitor();\n-  Register t = tmp();\n-  __ movptr(Address(mon, OM_OFFSET_NO_MONITOR_VALUE_TAG(owner)), r15_thread);\n-  __ subl(Address(r15_thread, JavaThread::lock_stack_top_offset()), oopSize);\n-#ifdef ASSERT\n-  __ movl(t, Address(r15_thread, JavaThread::lock_stack_top_offset()));\n-  __ movptr(Address(r15_thread, t), 0);\n-#endif\n-  __ jmp(continuation());\n-}\n-#endif\n-\n","filename":"src\/hotspot\/cpu\/x86\/c2_CodeStubs_x86.cpp","additions":1,"deletions":22,"binary":false,"changes":23,"status":"modified"}]}