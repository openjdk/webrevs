{"files":[{"patch":"@@ -128,2 +128,2 @@\n-    @IR(failOn = {IRNode.STORE, IRNode.ALLOC, IRNode.COUNTED_LOOP},\n-        counts = {IRNode.STORE, \"3\", IRNode.ALLOC, \"1\", IRNode.COUNTED_LOOP, \"2\"})\n+    @IR(failOn = {IRNode.STORE, IRNode.FIELD_ACCESS, IRNode.COUNTED_LOOP},\n+        counts = {IRNode.STORE, \"3\", IRNode.FIELD_ACCESS, \"2\", IRNode.COUNTED_LOOP, \"2\"})\n@@ -131,1 +131,1 @@\n-    @ExpectedFailure(ruleId = 1, phase = CompilePhase.BEFORE_MACRO_EXPANSION, counts = 2)\n+    @ExpectedFailure(ruleId = 1, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2)\n@@ -133,1 +133,1 @@\n-    @IR(failOn = {IRNode.STORE, IRNode.ALLOC, IRNode.COUNTED_LOOP})\n+    @IR(failOn = {IRNode.STORE, IRNode.FIELD_ACCESS, IRNode.COUNTED_LOOP})\n@@ -135,0 +135,1 @@\n+    @ExpectedFailure(ruleId = 2, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2)\n@@ -136,1 +137,1 @@\n-    @IR(counts = {IRNode.STORE, \"3\", IRNode.ALLOC, \"1\", IRNode.COUNTED_LOOP, \"2\"})\n+    @IR(counts = {IRNode.STORE, \"3\", IRNode.FIELD_ACCESS, \"1\", IRNode.COUNTED_LOOP, \"2\"})\n@@ -138,1 +139,1 @@\n-    @ExpectedFailure(ruleId = 3, phase = CompilePhase.BEFORE_MACRO_EXPANSION, counts = 2)\n+    @ExpectedFailure(ruleId = 3, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, counts = 2)\n@@ -172,4 +173,4 @@\n-    @IR(failOn = {IRNode.STORE, IRNode.ALLOC, IRNode.ALLOC_OF, \"Object\", IRNode.COUNTED_LOOP},\n-        counts = {IRNode.STORE, \"20\", IRNode.ALLOC, \"1\", IRNode.ALLOC_OF, \"Object\", \"1\", IRNode.COUNTED_LOOP, \"2\"})\n-    @ExpectedFailure(ruleId = 1, phase = CompilePhase.BEFORE_MACRO_EXPANSION, failOn = {2, 3})\n-    @ExpectedFailure(ruleId = 1, phase = CompilePhase.PRINT_IDEAL, failOn = 1, counts = {1, 4})\n+    @IR(failOn = {IRNode.STORE, IRNode.FIELD_ACCESS, IRNode.COUNTED_LOOP},\n+        counts = {IRNode.STORE, \"20\", IRNode.FIELD_ACCESS, \"3\", IRNode.COUNTED_LOOP, \"2\"})\n+    @ExpectedFailure(ruleId = 1, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2)\n+    @ExpectedFailure(ruleId = 1, phase = CompilePhase.PRINT_IDEAL, failOn = 1, counts = {1, 3})\n@@ -177,1 +178,1 @@\n-    @IR(failOn = {IRNode.STORE, IRNode.ALLOC, IRNode.ALLOC_OF, \"Object\", IRNode.COUNTED_LOOP})\n+    @IR(failOn = {IRNode.STORE, IRNode.FIELD_ACCESS, IRNode.COUNTED_LOOP})\n@@ -179,1 +180,1 @@\n-    @ExpectedFailure(ruleId = 2, phase = CompilePhase.BEFORE_MACRO_EXPANSION, failOn = {2, 3})\n+    @ExpectedFailure(ruleId = 2, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2)\n@@ -181,3 +182,3 @@\n-    @IR(counts = {IRNode.STORE, \"20\", IRNode.ALLOC, \"1\", IRNode.ALLOC_OF, \"Object\", \"2\", IRNode.COUNTED_LOOP, \"2\"})\n-    @ExpectedFailure(ruleId = 3, phase = CompilePhase.PRINT_IDEAL, counts = {1, 4})\n-    @ExpectedFailure(ruleId = 3, phase = CompilePhase.BEFORE_MACRO_EXPANSION, counts = 3)\n+    @IR(counts = {IRNode.STORE, \"20\", IRNode.FIELD_ACCESS, \"2\", IRNode.COUNTED_LOOP, \"2\"})\n+    @ExpectedFailure(ruleId = 3, phase = CompilePhase.PRINT_IDEAL, counts = {1, 3})\n+    @ExpectedFailure(ruleId = 3, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, counts = 2)\n@@ -185,4 +186,4 @@\n-    @IR(failOn = {IRNode.STORE, IRNode.ALLOC, IRNode.ALLOC_OF, \"Object\", IRNode.COUNTED_LOOP},\n-        counts = {IRNode.STORE, \"20\", IRNode.ALLOC, \"2\", IRNode.ALLOC_OF, \"Object\", \"2\", IRNode.COUNTED_LOOP, \"2\"})\n-    @ExpectedFailure(ruleId = 4, phase = CompilePhase.BEFORE_MACRO_EXPANSION, failOn = {2, 3}, counts = {2, 3})\n-    @ExpectedFailure(ruleId = 4, phase = CompilePhase.PRINT_IDEAL, failOn = 1, counts = {1, 4})\n+    @IR(failOn = {IRNode.STORE, IRNode.FIELD_ACCESS, IRNode.COUNTED_LOOP},\n+        counts = {IRNode.STORE, \"20\", IRNode.FIELD_ACCESS, \"2\", IRNode.COUNTED_LOOP, \"2\"})\n+    @ExpectedFailure(ruleId = 4, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, failOn = 2, counts = 2)\n+    @ExpectedFailure(ruleId = 4, phase = CompilePhase.PRINT_IDEAL, failOn = 1, counts = {1, 3})\n@@ -190,4 +191,6 @@\n-    @IR(counts = {IRNode.ALLOC, \"2\", IRNode.ALLOC_OF, \"Object\", \"1\"})\n-    @ExpectedFailure(ruleId = 5, phase = CompilePhase.BEFORE_MACRO_EXPANSION, counts = 1)\n-    public void defaultOnBoth() {\n-        obj = new Object();\n+    @IR(counts = {IRNode.FIELD_ACCESS, \"2\"})\n+    @ExpectedFailure(ruleId = 5, phase = CompilePhase.PRINT_OPTO_ASSEMBLY, counts = 1)\n+    public Object defaultOnBoth(Helper h) {\n+        i = 34;\n+        l = 34;\n+        return h.getString();\n@@ -215,1 +218,1 @@\n-    @Run(test = {\"removeLoopsWithMultipleCompilations\", \"defaultOnOptoAssembly\"})\n+    @Run(test = {\"removeLoopsWithMultipleCompilations\", \"defaultOnOptoAssembly\", \"defaultOnBoth\"})\n@@ -225,0 +228,1 @@\n+        defaultOnBoth(new Helper(\"a\", 1));\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestPhaseIRMatching.java","additions":28,"deletions":24,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-                           OPTIMIZE_FINISHED, PRINT_IDEAL);\n+                           OPTIMIZE_FINISHED, PRINT_IDEAL, PRINT_OPTO_ASSEMBLY);\n@@ -119,1 +119,1 @@\n-        assertContainsOnly(methodToCompilePhases, testClass, \"mix11\", PHASEIDEALLOOP1, PHASEIDEALLOOP2, BEFORE_MACRO_EXPANSION,\n+        assertContainsOnly(methodToCompilePhases, testClass, \"mix11\", PHASEIDEALLOOP1, PHASEIDEALLOOP2, PRINT_OPTO_ASSEMBLY,\n@@ -121,1 +121,1 @@\n-        assertContainsOnly(methodToCompilePhases, testClass, \"mix12\", PHASEIDEALLOOP1, PHASEIDEALLOOP2,\n+        assertContainsOnly(methodToCompilePhases, testClass, \"mix12\", PHASEIDEALLOOP1, PHASEIDEALLOOP2, PRINT_OPTO_ASSEMBLY,\n@@ -132,1 +132,1 @@\n-                           OPTIMIZE_FINISHED, PRINT_IDEAL);\n+                           OPTIMIZE_FINISHED, PRINT_OPTO_ASSEMBLY);\n@@ -417,1 +417,1 @@\n-        @IR(counts = {IRNode.LOOP, \"3\"}, phase = {FINAL_CODE, OPTIMIZE_FINISHED, DEFAULT})\n+        @IR(counts = {IRNode.FIELD_ACCESS, \"3\"}, phase = {FINAL_CODE, OPTIMIZE_FINISHED, DEFAULT})\n@@ -429,2 +429,2 @@\n-        @IR(failOn = IRNode.ALLOC, phase = {PHASEIDEALLOOP1, PHASEIDEALLOOP2})\n-        @IR(counts = {IRNode.ALLOC, \"3\"}, phase = {FINAL_CODE, OPTIMIZE_FINISHED, DEFAULT})\n+        @IR(failOn = IRNode.FIELD_ACCESS, phase = {PHASEIDEALLOOP1, PRINT_OPTO_ASSEMBLY, PHASEIDEALLOOP2})\n+        @IR(counts = {IRNode.FIELD_ACCESS, \"3\"}, phase = {FINAL_CODE, OPTIMIZE_FINISHED, DEFAULT})\n@@ -435,1 +435,1 @@\n-        @IR(counts = {IRNode.LOOP, \"3\"}, phase = {FINAL_CODE, OPTIMIZE_FINISHED, DEFAULT})\n+        @IR(counts = {IRNode.FIELD_ACCESS, \"3\"}, phase = {FINAL_CODE, OPTIMIZE_FINISHED, DEFAULT})\n@@ -460,1 +460,1 @@\n-        @IR(failOn = IRNode.LOOP, phase = {FINAL_CODE, OPTIMIZE_FINISHED, DEFAULT})\n+        @IR(failOn = IRNode.FIELD_ACCESS, phase = {FINAL_CODE, OPTIMIZE_FINISHED, DEFAULT})\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/flag\/TestCompilePhaseCollector.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}