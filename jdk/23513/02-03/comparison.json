{"files":[{"patch":"@@ -145,1 +145,1 @@\n-  DEBUG_ONLY(log_debug(deathtest)(\"Induce a recursive log for testing\");)\n+  NOT_PRODUCT(log_debug(deathtest)(\"Induce a recursive log for testing\");)\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-  DEBUG_ONLY(LOG_TAG(deathtest)) \\\n+  NOT_PRODUCT(LOG_TAG(deathtest)) \\\n","filename":"src\/hotspot\/share\/logging\/logTag.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @run driver AsyncDeathTest\n+ * @run driver AsyncDeathTestDebug\n@@ -39,1 +39,1 @@\n-public class AsyncDeathTest {\n+public class AsyncDeathTestDebug {\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/AsyncDeathTestDebug.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/hotspot\/jtreg\/runtime\/logging\/AsyncDeathTest.java","status":"renamed"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8349755\n+ * @summary Perform recursive logging in async UL and do NOT observe a crash (as opposed to AsyncDeathTestDebug)\n+ * @requires vm.flagless\n+ * @requires !vm.debug\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run driver AsyncDeathTestDebug\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class AsyncDeathNonProduct {\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb =\n+            ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:async\", \"-Xlog:deathtest=debug\");\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/AsyncDeathTestNonProduct.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"}]}