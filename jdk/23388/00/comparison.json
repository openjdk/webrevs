{"files":[{"patch":"@@ -210,0 +210,6 @@\n+<li><p>Keep the include lines within a section alphabetically sorted.<\/p><\/li>\n+<li><p>Put conditional inclusions (`#if ...`) at the end of the section of HotSpot\n+include lines. This also applies to macro-expanded includes of platform\n+dependent files.<\/p><\/li>\n+<li><p>Put system includes in a section after the HotSpot include lines with a blank\n+line separating the two sections.<\/p><\/li>\n@@ -211,2 +217,2 @@\n-the implementation depends on other .hpp files, put it in a .cpp or a\n-.inline.hpp file.<\/p><\/li>\n+the implementation depends on other .hpp files, put it in a .cpp or\n+a .inline.hpp file.<\/p><\/li>\n@@ -215,5 +221,10 @@\n-<li><p>All .inline.hpp files should include their corresponding .hpp\n-file as the first include line. Declarations needed by other files\n-should be put in the .hpp file, and not in the .inline.hpp file. This\n-rule exists to resolve problems with circular dependencies between\n-.inline.hpp files.<\/p><\/li>\n+<li><p>All .inline.hpp files should include their corresponding .hpp file as\n+the first include line with blank line separating it from the rest of the\n+include lines. Declarations needed by other files should be put in the .hpp\n+file, and not in the .inline.hpp file. This rule exists to resolve problems\n+with circular dependencies between .inline.hpp files.<\/p><\/li>\n+<li><p>Do not include a .hpp file if the corresponding .inline.hpp file is included.<\/p><\/li>\n+<li><p>Use include guards for .hpp and .inline.hpp files. The name of the defined\n+guard should be derived from the full search path of the file relative to the\n+hotspot source directory. The define should be all upper case with all paths\n+separators and periods replaced by underscores.<\/p><\/li>\n@@ -224,3 +235,0 @@\n-<li><p>Keep the include lines alphabetically sorted.<\/p><\/li>\n-<li><p>Put conditional inclusions (<code>#if ...<\/code>) at the end of\n-the include list.<\/p><\/li>\n","filename":"doc\/hotspot-style.html","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-* All source files must have a globally unique basename.  The build\n+* All source files must have a globally unique basename. The build\n@@ -141,0 +141,9 @@\n+* Keep the include lines within a section alphabetically sorted.\n+\n+* Put conditional inclusions (`#if ...`) at the end of the section of HotSpot\n+include lines. This also applies to macro-expanded includes of platform\n+dependent files.\n+\n+* Put system includes in a section after the HotSpot include lines with a blank\n+line separating the two sections.\n+\n@@ -149,3 +158,11 @@\n-the first include line. Declarations needed by other files should be put\n-in the .hpp file, and not in the .inline.hpp file. This rule exists to\n-resolve problems with circular dependencies between .inline.hpp files.\n+the first include line with blank line separating it from the rest of the\n+include lines. Declarations needed by other files should be put in the .hpp\n+file, and not in the .inline.hpp file. This rule exists to resolve problems\n+with circular dependencies between .inline.hpp files.\n+\n+* Do not include a .hpp file if the corresponding .inline.hpp file is included.\n+\n+* Use include guards for .hpp and .inline.hpp files. The name of the defined\n+guard should be derived from the full search path of the file relative to the\n+hotspot source directory. The define should be all upper case with all paths\n+separators and periods replaced by underscores.\n@@ -158,4 +175,0 @@\n-* Keep the include lines alphabetically sorted.\n-\n-* Put conditional inclusions (`#if ...`) at the end of the include list.\n-\n","filename":"doc\/hotspot-style.md","additions":21,"deletions":8,"binary":false,"changes":29,"status":"modified"}]}