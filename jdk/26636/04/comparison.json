{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @key headful\n@@ -28,3 +29,2 @@\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual MouseDraggedOriginatedByScrollBarTest\n+ * @requires os.family == \"linux\"\n+ * @run main MouseDraggedOriginatedByScrollBarTest\n@@ -33,0 +33,1 @@\n+import java.awt.EventQueue;\n@@ -36,1 +37,3 @@\n-import java.awt.event.MouseMotionAdapter;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n@@ -39,0 +42,1 @@\n+import java.awt.event.MouseMotionAdapter;\n@@ -41,5 +45,5 @@\n-\n-    private static final String INSTRUCTIONS = \"\"\"\n-            1) Click and drag the scrollbar of the list.\n-            2) Keep dragging till the mouse pointer goes out the scrollbar.\n-            3) The test failed if you see messages about events. The test passed if you don't.\"\"\";\n+    private static Frame frame;\n+    private static volatile Point loc;\n+    private static volatile List list;\n+    private static final int XOFFSET = 10;\n+    private static final int YOFFSET = 20;\n@@ -48,9 +52,10 @@\n-        PassFailJFrame.builder()\n-                .title(\"MouseDraggedOriginatedByScrollBarTest Instructions\")\n-                .instructions(INSTRUCTIONS)\n-                .rows((int) INSTRUCTIONS.lines().count() + 2)\n-                .columns(35)\n-                .testUI(MouseDraggedOriginatedByScrollBarTest::createTestUI)\n-                .logArea()\n-                .build()\n-                .awaitAndCheck();\n+        try {\n+            createUI();\n+            test();\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n@@ -59,3 +64,3 @@\n-    private static Frame createTestUI() {\n-        Frame frame = new Frame();\n-        List list = new List(4, false);\n+    private static void createUI() {\n+        frame = new Frame();\n+        list = new List(4, false);\n@@ -80,1 +85,2 @@\n-                    PassFailJFrame.log(me.toString());\n+                    System.out.println(me.toString());\n+                    throw new RuntimeException(\"Mouse dragged event detected.\");\n@@ -87,1 +93,2 @@\n-                    PassFailJFrame.log(me.toString());\n+                    System.out.println(me.toString());\n+                    throw new RuntimeException(\"Mouse pressed event detected.\");\n@@ -91,1 +98,2 @@\n-                    PassFailJFrame.log(me.toString());\n+                    System.out.println(me.toString());\n+                    throw new RuntimeException(\"Mouse released event detected.\");\n@@ -95,1 +103,2 @@\n-                    PassFailJFrame.log(me.toString());\n+                    System.out.println(me.toString());\n+                    throw new RuntimeException(\"Mouse clicked event detected.\");\n@@ -101,1 +110,22 @@\n-        return frame;\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void test() throws Exception {\n+        Robot robot = new Robot();\n+        robot.waitForIdle();\n+        robot.delay(1000);\n+        robot.setAutoWaitForIdle(true);\n+\n+        EventQueue.invokeAndWait(() -> {\n+            Point p = list.getLocationOnScreen();\n+            p.translate(list.getWidth() - XOFFSET, 20);\n+            loc = p;\n+        });\n+        robot.mouseMove(loc.x, loc.y);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        for (int i = 0; i < 30; i++) {\n+            robot.mouseMove(loc.x, loc.y + 1);\n+        }\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.delay(100);\n","filename":"test\/jdk\/java\/awt\/List\/MouseDraggedOriginatedByScrollBarTest.java","additions":57,"deletions":27,"binary":false,"changes":84,"status":"modified"}]}