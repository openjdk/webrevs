{"files":[{"patch":"@@ -46,1 +46,25 @@\n- * A class for handling -Xlint suboptions and @SuppressWarnings.\n+ * A class for handling {@code -Xlint} suboptions and {@code @SuppressWarnings} annotations.\n+ *\n+ * <p>\n+ * Each lint category can be in one of three states: enabled, suppressed, or neither. The \"neither\"\n+ * state means it's effectively up to the code doing the check to determine the default behavior, by\n+ * warning when enabled (i.e., default suppressed) or not warning when suppressed (i.e., default enabled).\n+ * Some categories default to enabled; most default to neither and the code warns when enabled.\n+ *\n+ * <p>\n+ * A lint category can be explicitly enabled via the command line flag {@code -Xlint:key}, or explicitly\n+ * disabled via the command line flag {@code -Xlint:-key}. Some lint categories warn at specific\n+ * locations in the code and can be suppressed within the scope of a symbol declaration via the\n+ * {@code @SuppressWarnings} annotation.\n+ *\n+ * <p>\n+ * Further details:\n+ * <ul>\n+ *  <li>To build an instance augmented with any new suppressions from {@code @SuppressWarnings} and\/or\n+ *      {@code @Deprecated} annotations on a symbol declaration, use {@link #augment} to establish a\n+ *      new symbol \"scope\".\n+ *  <li>You can manually check whether a category {@link #isEnabled} or {@link #isSuppressed};\n+ *      the convenience method {@link #logIfEnabled} includes a check for {@link #isEnabled}.\n+ *  <li>The root {@link Lint} singleton initializes itself lazily, so it can be used safely during\n+ *      compiler startup as long as {@link Options} has been initialized.\n+ * <\/ul>\n@@ -55,1 +79,1 @@\n-    \/** The context key for the root Lint object. *\/\n+    \/** The context key for the root {@link Lint} singleton. *\/\n@@ -58,1 +82,1 @@\n-    \/** Get the root Lint instance. *\/\n+    \/** Get the root {@link Lint} singleton. *\/\n@@ -68,1 +92,1 @@\n-     * @SuppressWarnings and\/or @Deprecated annotations on the given symbol.\n+     * {@code @SuppressWarnings} and\/or {@code @Deprecated} annotations on the given symbol.\n@@ -89,1 +113,2 @@\n-     * Returns a new Lint that has the given LintCategorys enabled.\n+     * Returns a new Lint that has the given {@link LintCategory}s enabled.\n+     *\n@@ -100,1 +125,2 @@\n-     * Returns a new Lint that has the given LintCategorys suppressed.\n+     * Returns a new Lint that has the given {@link LintCategory}s suppressed.\n+     *\n@@ -203,2 +229,2 @@\n-         * Warn when code refers to a auxiliary class that is hidden in a source file (ie source file name is\n-         * different from the class name, and the type is not properly nested) and the referring code\n+         * Warn when code refers to an auxiliary class that is hidden in a source file (i.e., the source file\n+         * name is different from the class name, and the type is not properly nested) and the referring code\n@@ -215,1 +241,4 @@\n-         * Warn about issues related to classfile contents\n+         * Warn about issues related to classfile contents.\n+         *\n+         * <p>\n+         * This category is not supported by {@code @SuppressWarnings}.\n@@ -232,1 +261,1 @@\n-         * comment, but which do not have {@code @Deprecated} annotation.\n+         * comment, but which do not have the {@code @Deprecated} annotation.\n@@ -287,1 +316,4 @@\n-         * Warn about issues relating to use of command line options\n+         * Warn about issues relating to use of command line options.\n+         *\n+         * <p>\n+         * This category is not supported by {@code @SuppressWarnings}.\n@@ -293,0 +325,3 @@\n+         *\n+         * <p>\n+         * This category is not supported by {@code @SuppressWarnings}.\n@@ -308,2 +343,3 @@\n-         * Such warnings cannot be suppressed with the SuppressWarnings\n-         * annotation.\n+         *\n+         * <p>\n+         * This category is not supported by {@code @SuppressWarnings}.\n@@ -359,1 +395,4 @@\n-         * Warn about issues relating to use of text blocks\n+         * Warn about issues relating to use of text blocks.\n+         *\n+         * <p>\n+         * This category is not supported by {@code @SuppressWarnings}.\n@@ -369,1 +408,1 @@\n-         * Warn about issues relating to use of try blocks (i.e. try-with-resources)\n+         * Warn about issues relating to use of try blocks (i.e., try-with-resources).\n@@ -385,0 +424,3 @@\n+         *\n+         * <p>\n+         * This category is not supported by {@code @SuppressWarnings}.\n@@ -408,0 +450,3 @@\n+        \/**\n+         * Create a new, empty, mutable set of {@link LintCategory}.\n+         *\/\n@@ -412,1 +457,1 @@\n-        \/** Get the string representing this category in @SuppressAnnotations and -Xlint options. *\/\n+        \/** Get the string representing this category in {@code @SuppressWarnings} and {@code -Xlint:key} flags. *\/\n@@ -419,1 +464,3 @@\n-     * the SuppressWarnings annotation.\n+     * the {@code @SuppressWarnings} annotation.\n+     *\n+     * @param lc lint category\n@@ -427,4 +474,5 @@\n-     * Checks is a warning category has been specifically suppressed, by means\n-     * of the SuppressWarnings annotation, or, in the case of the deprecated\n-     * category, whether it has been implicitly suppressed by virtue of the\n-     * current entity being itself deprecated.\n+     * Checks if a warning category has been specifically suppressed, by means of\n+     * {@code @SuppressWarnings}, {@code @Deprecated} annotations), or {@link #suppress}.\n+     * Note: this does not detect suppressions via {@code -Xlint:-key} flags.\n+     *\n+     * @param lc lint category\n@@ -465,1 +513,4 @@\n-     * @SuppressWarnings or @Deprecated.\n+     * {@code @SuppressWarnings} or {@code @Deprecated}.\n+     *\n+     * <p>\n+     * Note: The result may include categories that don't support suppression via {@code @SuppressWarnings}.\n@@ -478,1 +529,4 @@\n-     * Retrieve the recognized lint categories suppressed by the given @SuppressWarnings annotation.\n+     * Retrieve the recognized lint categories suppressed by the given {@code @SuppressWarnings} annotation.\n+     *\n+     * <p>\n+     * Note: The result may include categories that don't support suppression via {@code @SuppressWarnings}.\n@@ -480,1 +534,1 @@\n-     * @param annotation @SuppressWarnings annotation, or null\n+     * @param annotation {@code @SuppressWarnings} annotation, or null\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Lint.java","additions":78,"deletions":24,"binary":false,"changes":102,"status":"modified"}]}