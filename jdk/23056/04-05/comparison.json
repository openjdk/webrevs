{"files":[{"patch":"@@ -46,25 +46,1 @@\n- * A class for handling {@code -Xlint} suboptions and {@code @SuppressWarnings} annotations.\n- *\n- * <p>\n- * Each lint category can be in one of three states: enabled, suppressed, or neither. The \"neither\"\n- * state means it's effectively up to the code doing the check to determine the default behavior, by\n- * warning when enabled (i.e., default suppressed) or not warning when suppressed (i.e., default enabled).\n- * Some categories default to enabled; most default to neither and the code warns when enabled.\n- *\n- * <p>\n- * A lint category can be explicitly enabled via the command line flag {@code -Xlint:key}, or explicitly\n- * disabled via the command line flag {@code -Xlint:-key}. Some lint categories warn at specific\n- * locations in the code and can be suppressed within the scope of a symbol declaration via the\n- * {@code @SuppressWarnings} annotation.\n- *\n- * <p>\n- * Further details:\n- * <ul>\n- *  <li>To build an instance augmented with any new suppressions from {@code @SuppressWarnings} and\/or\n- *      {@code @Deprecated} annotations on a symbol declaration, use {@link #augment} to establish a\n- *      new symbol \"scope\".\n- *  <li>You can manually check whether a category {@link #isEnabled} or {@link #isSuppressed};\n- *      the convenience method {@link #logIfEnabled} includes a check for {@link #isEnabled}.\n- *  <li>The root {@link Lint} singleton initializes itself lazily, so it can be used safely during\n- *      compiler startup as long as {@link Options} has been initialized.\n- * <\/ul>\n+ * A class for handling -Xlint suboptions and @SuppressWarnings.\n@@ -79,1 +55,1 @@\n-    \/** The context key for the root {@link Lint} singleton. *\/\n+    \/** The context key for the root Lint object. *\/\n@@ -82,1 +58,1 @@\n-    \/** Get the root {@link Lint} singleton. *\/\n+    \/** Get the root Lint instance. *\/\n@@ -92,1 +68,1 @@\n-     * {@code @SuppressWarnings} and\/or {@code @Deprecated} annotations on the given symbol.\n+     * @SuppressWarnings and\/or @Deprecated annotations on the given symbol.\n@@ -113,2 +89,1 @@\n-     * Returns a new Lint that has the given {@link LintCategory}s enabled.\n-     *\n+     * Returns a new Lint that has the given LintCategorys enabled.\n@@ -125,2 +100,1 @@\n-     * Returns a new Lint that has the given {@link LintCategory}s suppressed.\n-     *\n+     * Returns a new Lint that has the given LintCategorys suppressed.\n@@ -136,1 +110,0 @@\n-    \/\/ Compiler context\n@@ -144,3 +117,3 @@\n-    \/\/ For the root instance only, these are initialized lazily\n-    private EnumSet<LintCategory> values;           \/\/ categories enabled by default or \"-Xlint:key\" and not (yet) suppressed\n-    private EnumSet<LintCategory> suppressedValues; \/\/ categories suppressed by augment() or suppress() (but not \"-Xlint:-key\")\n+    \/\/ Invariant: it's never the case that a category is in both \"values\" and \"suppressedValues\"\n+    private EnumSet<LintCategory> values;\n+    private EnumSet<LintCategory> suppressedValues;\n@@ -148,2 +121,1 @@\n-    \/\/ LintCategory lookup by option string\n-    private static final Map<String, LintCategory> map = new ConcurrentHashMap<>(40);\n+    private static final Map<String, LintCategory> map = new ConcurrentHashMap<>(20);\n@@ -151,1 +123,0 @@\n-    \/\/ Instantiate the root instance\n@@ -206,1 +177,1 @@\n-        \/\/ Look for specific overrides via \"-Xlint\" flags\n+        \/\/ Look for specific overrides\n@@ -229,2 +200,2 @@\n-         * Warn when code refers to an auxiliary class that is hidden in a source file (i.e., the source file\n-         * name is different from the class name, and the type is not properly nested) and the referring code\n+         * Warn when code refers to a auxiliary class that is hidden in a source file (ie source file name is\n+         * different from the class name, and the type is not properly nested) and the referring code\n@@ -241,4 +212,1 @@\n-         * Warn about issues related to classfile contents.\n-         *\n-         * <p>\n-         * This category is not supported by {@code @SuppressWarnings}.\n+         * Warn about issues related to classfile contents\n@@ -261,1 +229,1 @@\n-         * comment, but which do not have the {@code @Deprecated} annotation.\n+         * comment, but which do not have {@code @Deprecated} annotation.\n@@ -316,4 +284,1 @@\n-         * Warn about issues relating to use of command line options.\n-         *\n-         * <p>\n-         * This category is not supported by {@code @SuppressWarnings}.\n+         * Warn about issues relating to use of command line options\n@@ -325,3 +290,0 @@\n-         *\n-         * <p>\n-         * This category is not supported by {@code @SuppressWarnings}.\n@@ -343,3 +305,2 @@\n-         *\n-         * <p>\n-         * This category is not supported by {@code @SuppressWarnings}.\n+         * Such warnings cannot be suppressed with the SuppressWarnings\n+         * annotation.\n@@ -395,4 +356,1 @@\n-         * Warn about issues relating to use of text blocks.\n-         *\n-         * <p>\n-         * This category is not supported by {@code @SuppressWarnings}.\n+         * Warn about issues relating to use of text blocks\n@@ -408,1 +366,1 @@\n-         * Warn about issues relating to use of try blocks (i.e., try-with-resources).\n+         * Warn about issues relating to use of try blocks (i.e. try-with-resources)\n@@ -424,3 +382,0 @@\n-         *\n-         * <p>\n-         * This category is not supported by {@code @SuppressWarnings}.\n@@ -450,3 +405,0 @@\n-        \/**\n-         * Create a new, empty, mutable set of {@link LintCategory}.\n-         *\/\n@@ -457,1 +409,1 @@\n-        \/** Get the string representing this category in {@code @SuppressWarnings} and {@code -Xlint:key} flags. *\/\n+        \/** Get the string representing this category in @SuppressAnnotations and -Xlint options. *\/\n@@ -464,3 +416,1 @@\n-     * the {@code @SuppressWarnings} annotation.\n-     *\n-     * @param lc lint category\n+     * the SuppressWarnings annotation.\n@@ -474,5 +424,4 @@\n-     * Checks if a warning category has been specifically suppressed, by means of\n-     * {@code @SuppressWarnings}, {@code @Deprecated} annotations), or {@link #suppress}.\n-     * Note: this does not detect suppressions via {@code -Xlint:-key} flags.\n-     *\n-     * @param lc lint category\n+     * Checks is a warning category has been specifically suppressed, by means\n+     * of the SuppressWarnings annotation, or, in the case of the deprecated\n+     * category, whether it has been implicitly suppressed by virtue of the\n+     * current entity being itself deprecated.\n@@ -513,4 +462,1 @@\n-     * {@code @SuppressWarnings} or {@code @Deprecated}.\n-     *\n-     * <p>\n-     * Note: The result may include categories that don't support suppression via {@code @SuppressWarnings}.\n+     * @SuppressWarnings or @Deprecated.\n@@ -529,4 +475,1 @@\n-     * Retrieve the recognized lint categories suppressed by the given {@code @SuppressWarnings} annotation.\n-     *\n-     * <p>\n-     * Note: The result may include categories that don't support suppression via {@code @SuppressWarnings}.\n+     * Retrieve the recognized lint categories suppressed by the given @SuppressWarnings annotation.\n@@ -534,1 +477,1 @@\n-     * @param annotation {@code @SuppressWarnings} annotation, or null\n+     * @param annotation @SuppressWarnings annotation, or null\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Lint.java","additions":29,"deletions":86,"binary":false,"changes":115,"status":"modified"}]}