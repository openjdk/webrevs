{"files":[{"patch":"@@ -120,1 +120,1 @@\n-    private EnumSet<LintCategory> suppressedValues; \/\/ categories suppressed by @SuppressWarnings, @Deprecated, or suppress()\n+    private EnumSet<LintCategory> suppressedValues; \/\/ categories suppressed by augment() or suppress() (but not \"-Xlint:-key\")\n@@ -122,1 +122,2 @@\n-    private static final Map<String, LintCategory> map = new ConcurrentHashMap<>(20);\n+    \/\/ LintCategory lookup by option string\n+    private static final Map<String, LintCategory> map = new ConcurrentHashMap<>(40);\n@@ -179,1 +180,1 @@\n-        \/\/ Look for specific overrides\n+        \/\/ Look for specific overrides via \"-Xlint\" flags\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Lint.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,1 +180,1 @@\n-        sourcesWithPreviewFeatures.add(log.currentSourceFile());\n+        markUsesPreview(pos);\n@@ -199,0 +199,5 @@\n+    \/**\n+     * Mark the current source file as using a preview feature. The corresponding classfile\n+     * will be generated with minor version {@link ClassFile#PREVIEW_MINOR_VERSION}.\n+     * @param pos the position at which the preview feature was used.\n+     *\/\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Preview.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}