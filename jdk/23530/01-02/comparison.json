{"files":[{"patch":"@@ -230,0 +230,1 @@\n+  int _phase_counter;\n@@ -280,0 +281,2 @@\n+\n+  int advance_phase_counter() { return ++_phase_counter; }\n","filename":"src\/hotspot\/share\/compiler\/compilationMemStatInternals.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -267,1 +267,1 @@\n-    _comp_type(task->compiler()->type()), _comp_id(task->compile_id())\n+    _phase_counter(0), _comp_type(task->compiler()->type()), _comp_id(task->compile_id())\n@@ -895,1 +895,1 @@\n-void CompilationMemoryStatistic::on_arena_chunk_allocation_0(size_t size, int arena_tag, uint64_t* stamp) {\n+void CompilationMemoryStatistic::on_arena_chunk_allocation(size_t size, int arena_tag, uint64_t* stamp) {\n@@ -965,1 +965,1 @@\n-void CompilationMemoryStatistic::on_arena_chunk_deallocation_0(size_t size, uint64_t stamp) {\n+void CompilationMemoryStatistic::on_arena_chunk_deallocation(size_t size, uint64_t stamp) {\n@@ -979,1 +979,1 @@\n-void CompilationMemoryStatistic::on_phase_start_0(int phase_trc_id, int num, const char* text) {\n+void CompilationMemoryStatistic::on_phase_start_0(int phase_trc_id, const char* text) {\n@@ -989,1 +989,1 @@\n-  info.num = num;\n+  info.num = arena_stat->advance_phase_counter();\n","filename":"src\/hotspot\/share\/compiler\/compilationMemoryStatistic.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  static void on_phase_start_0(int phase_trc_id, int num, const char* text);\n+  static void on_phase_start_0(int phase_trc_id, const char* text);\n@@ -42,2 +42,0 @@\n-  static void on_arena_chunk_allocation_0(size_t size, int arenatag, uint64_t* stamp);\n-  static void on_arena_chunk_deallocation_0(size_t size, uint64_t stamp);\n@@ -60,1 +58,1 @@\n-  static inline void on_phase_start(int phase_trc_id, int num, const char* text) {\n+  static inline void on_phase_start(int phase_trc_id, const char* text) {\n@@ -62,1 +60,1 @@\n-      on_phase_start_0(phase_trc_id, num, text);\n+      on_phase_start_0(phase_trc_id, text);\n@@ -72,12 +70,2 @@\n-  static inline void on_arena_chunk_allocation(size_t size, int arena_tag, uint64_t* stamp) {\n-    (*stamp) = 0; \/\/ defaults to \"not tracked\"\n-    if (enabled()) {\n-      on_arena_chunk_allocation_0(size, arena_tag, stamp);\n-    }\n-  }\n-\n-  static inline void on_arena_chunk_deallocation(size_t size, uint64_t stamp) {\n-    if (enabled()) {\n-      on_arena_chunk_deallocation_0(size, stamp);\n-    }\n-  }\n+  static void on_arena_chunk_allocation(size_t size, int arenatag, uint64_t* stamp);\n+  static void on_arena_chunk_deallocation(size_t size, uint64_t stamp);\n","filename":"src\/hotspot\/share\/compiler\/compilationMemoryStatistic.hpp","additions":5,"deletions":17,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -133,0 +133,2 @@\n+static volatile uint64_t xxx = 0;\n+\n@@ -176,1 +178,1 @@\n-  if (on_compiler_thread()) {\n+  if (CompilationMemoryStatistic::enabled() && on_compiler_thread()) {\n@@ -189,1 +191,1 @@\n-    assert(CompilationMemoryStatistic::enabled(), \"we stamped, so memstat was enabled\");\n+    assert(CompilationMemoryStatistic::enabled(), \"we stamped, so memstat was enabled already\");\n","filename":"src\/hotspot\/share\/memory\/arena.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -654,1 +654,0 @@\n-      _phase_num(0),\n@@ -925,1 +924,0 @@\n-      _phase_num(0),\n@@ -4320,3 +4318,1 @@\n-    _dolog(CITimeVerbose),\n-    _id(id),\n-    _num(_compile->advance_phasenum())\n+    _dolog(CITimeVerbose)\n@@ -4336,1 +4332,1 @@\n-  CompilationMemoryStatistic::on_phase_start((int)_id, _num, name);\n+  CompilationMemoryStatistic::on_phase_start((int)id, name);\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -244,2 +244,0 @@\n-    const PhaseTraceId _id;\n-    const int _num; \/\/ sequential number, local to this compilation\n@@ -251,1 +249,0 @@\n-    int num() const { return _num; }\n@@ -385,1 +382,0 @@\n-  int                   _phase_num;             \/\/ current phase number, for TracePhase\n@@ -549,2 +545,0 @@\n-  int               advance_phasenum()          { return ++_phase_num; }\n-\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}