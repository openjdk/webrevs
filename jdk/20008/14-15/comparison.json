{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import org.junit.jupiter.params.provider.Arguments;\n@@ -61,1 +62,1 @@\n-            test(new Object[] { fetchNumber(order), random.nextInt(200) });\n+            test(fetchNumber(order), random.nextInt(200));\n@@ -67,3 +68,1 @@\n-    public void test(Object[] testCase) {\n-        MutableBigIntegerBox x = (MutableBigIntegerBox) testCase[0];\n-        int n = (int) testCase[1];\n+    public void test(MutableBigIntegerBox x, int n) {\n@@ -73,2 +72,2 @@\n-    private static Object[][] pathTargetedCases() {\n-        return new Object[][] {\n+    private static Arguments[] pathTargetedCases() {\n+        return new Arguments[] {\n@@ -76,2 +75,2 @@\n-                { MutableBigIntegerBox.ZERO,\n-                        random.nextInt(33) },\n+                Arguments.of(MutableBigIntegerBox.ZERO,\n+                        random.nextInt(33)),\n@@ -79,2 +78,2 @@\n-                { new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L, 1L << 16) }),\n-                        random.nextInt(1, 17) },\n+                Arguments.of(new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L, 1L << 16) }),\n+                        random.nextInt(1, 17)),\n@@ -82,2 +81,2 @@\n-                { new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L, 1L << 32) }),\n-                        32 },\n+                Arguments.of(new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L, 1L << 32) }),\n+                        32),\n@@ -85,2 +84,2 @@\n-                { new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L, 1L << 16) }),\n-                        32 + random.nextInt(1, 17) },\n+                Arguments.of(new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L, 1L << 16) }),\n+                        32 + random.nextInt(1, 17)),\n@@ -89,2 +88,2 @@\n-                { new MutableBigIntegerBox(new int[] { random.nextInt(), (int) random.nextLong(1L, 1L << 32) }, 1, 1),\n-                        32 },\n+                Arguments.of(new MutableBigIntegerBox(new int[] { random.nextInt(), (int) random.nextLong(1L, 1L << 32) }, 1, 1),\n+                        32),\n@@ -93,2 +92,2 @@\n-                { new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L, 1L << 32), random.nextInt() }, 0, 1),\n-                        32 },\n+                Arguments.of(new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L, 1L << 32), random.nextInt() }, 0, 1),\n+                        32),\n@@ -97,2 +96,2 @@\n-                { new MutableBigIntegerBox(new int[] { random.nextInt(), (int) random.nextLong(1L, 1L << 16) }, 1, 1),\n-                        32 + random.nextInt(1, 17) },\n+                Arguments.of(new MutableBigIntegerBox(new int[] { random.nextInt(), (int) random.nextLong(1L, 1L << 16) }, 1, 1),\n+                        32 + random.nextInt(1, 17)),\n@@ -101,2 +100,2 @@\n-                { new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L, 1L << 16), random.nextInt() }, 0, 1),\n-                        32 + random.nextInt(1, 17) },\n+                Arguments.of(new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L, 1L << 16), random.nextInt() }, 0, 1),\n+                        32 + random.nextInt(1, 17)),\n@@ -104,2 +103,2 @@\n-                { new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L << 15, 1L << 32) }),\n-                        random.nextInt(17, 32) },\n+                Arguments.of(new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L << 15, 1L << 32) }),\n+                        random.nextInt(17, 32)),\n@@ -107,2 +106,2 @@\n-                { new MutableBigIntegerBox(new int[] { random.nextInt(), (int) random.nextLong(1L << 15, 1L << 32) }, 1, 1),\n-                        random.nextInt(17, 32) },\n+                Arguments.of(new MutableBigIntegerBox(new int[] { random.nextInt(), (int) random.nextLong(1L << 15, 1L << 32) }, 1, 1),\n+                        random.nextInt(17, 32)),\n@@ -110,2 +109,2 @@\n-                { new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L << 15, 1L << 32), random.nextInt() }, 0, 1),\n-                        random.nextInt(17, 32) },\n+                Arguments.of(new MutableBigIntegerBox(new int[] { (int) random.nextLong(1L << 15, 1L << 32), random.nextInt() }, 0, 1),\n+                        random.nextInt(17, 32)),\n","filename":"test\/jdk\/java\/math\/BigInteger\/MutableBigIntegerShiftTests.java","additions":27,"deletions":28,"binary":false,"changes":55,"status":"modified"}]}