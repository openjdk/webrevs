{"files":[{"patch":"@@ -709,1 +709,1 @@\n-    private final void primitiveRightShift(int n) {\n+    private void primitiveRightShift(int n) {\n@@ -722,1 +722,1 @@\n-    private final void primitiveRightShift(int n, int[] result, int resPos) {\n+    private void primitiveRightShift(int n, int[] result, int resPos) {\n@@ -740,1 +740,1 @@\n-    private final void primitiveLeftShift(int n) {\n+    private void primitiveLeftShift(int n) {\n@@ -751,1 +751,1 @@\n-     * {@code (resPos <= offset || resPos >= offset + intLen)}.\n+     * {@code (resFrom <= offset || resFrom >= offset + intLen)}.\n@@ -753,1 +753,1 @@\n-    private final void primitiveLeftShift(int n, int[] result, int resPos) {\n+    private void primitiveLeftShift(int n, int[] result, int resFrom) {\n@@ -757,4 +757,5 @@\n-        for (int i = 0, c = val[offset + i]; i < m; i++) {\n-            int b = c;\n-            c = val[offset + i + 1];\n-            result[resPos + i] = (b << n) | (c >>> n2);\n+        int b = val[offset];\n+        for (int i = 0; i < m; i++) {\n+            int c = val[offset + i + 1];\n+            result[resFrom + i] = (b << n) | (c >>> n2);\n+            b = c;\n@@ -762,1 +763,1 @@\n-        result[resPos + m] = val[offset + m] << n;\n+        result[resFrom + m] = b << n;\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -48,2 +48,2 @@\n-    static final int ORDER_SMALL = 60;\n-    static final int ORDER_MEDIUM = 100;\n+    private static final int ORDER_SMALL = 60;\n+    private static final int ORDER_MEDIUM = 100;\n","filename":"test\/jdk\/java\/math\/BigInteger\/MutableBigIntegerShiftTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}