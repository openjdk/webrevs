{"files":[{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023, Red Hat, Inc. and\/or its affiliates.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-\n-#include \"nmt\/memMapPrinter.hpp\"\n-#include \"utilities\/ostream.hpp\"\n-\n-void MemMapPrinter::pd_iterate_all_mappings(MappingPrintClosure& closure) {}\n-void MemMapPrinter::pd_print_header(outputStream* st) {\n-  st->print_cr(\"not available\");\n-}\n","filename":"src\/hotspot\/os\/aix\/memMapPrinter_aix.cpp","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023, Red Hat, Inc. and\/or its affiliates.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-\n-#include \"nmt\/memMapPrinter.hpp\"\n-#include \"utilities\/ostream.hpp\"\n-\n-void MemMapPrinter::pd_iterate_all_mappings(MappingPrintClosure& closure) {}\n-void MemMapPrinter::pd_print_header(outputStream* st) {\n-  st->print_cr(\"not available\");\n-}\n","filename":"src\/hotspot\/os\/bsd\/memMapPrinter_bsd.cpp","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -65,9 +65,0 @@\n-  st->print(\n-#ifdef _LP64\n-  \/\/   0x0000000000000000 - 0x0000000000000000\n-      \"from                 to                 \"\n-#else\n-  \/\/   0x00000000 - 0x00000000\n-      \"from         to         \"\n-#endif\n-  );\n","filename":"src\/hotspot\/os\/linux\/memMapPrinter_linux.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023, Red Hat, Inc. and\/or its affiliates.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-\n-#include \"nmt\/memMapPrinter.hpp\"\n-#include \"utilities\/ostream.hpp\"\n-\n-void MemMapPrinter::pd_iterate_all_mappings(MappingPrintClosure& closure) {}\n-void MemMapPrinter::pd_print_header(outputStream* st) {\n-  st->print_cr(\"not available\");\n-}\n","filename":"src\/hotspot\/os\/windows\/memMapPrinter_windows.cpp","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -6137,18 +6137,0 @@\n-\n-char* os::realpath(const char* filename, char* outbuf, size_t outbuflen) {\n-  const DWORD fattr = GetFileAttributes(filename);\n-  if (fattr == 0xffffffff) {\n-    return nullptr;\n-  }\n-  const DWORD len = GetFullPathName(filename, (DWORD) outbuflen, outbuf, nullptr);\n-  if (len > 0) {\n-    if (len >= outbuflen) {\n-      errno = ENAMETOOLONG;\n-      return nullptr;\n-    }\n-    return outbuf;\n-  }\n-  return nullptr;\n-}\n-\n-\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+#ifdef LINUX\n+\n@@ -270,0 +272,14 @@\n+void MemMapPrinter::print_header(outputStream* st) {\n+  st->print(\n+#ifdef _LP64\n+  \/\/   0x0000000000000000 - 0x0000000000000000\n+      \"from                 to                 \"\n+#else\n+  \/\/   0x00000000 - 0x00000000\n+      \"from         to         \"\n+#endif\n+  );\n+  \/\/ Print platform-specific columns\n+  pd_print_header(st);\n+}\n+\n@@ -292,0 +308,2 @@\n+\n+#endif \/\/ LINUX\n","filename":"src\/hotspot\/share\/nmt\/memMapPrinter.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+#ifdef LINUX\n+\n@@ -64,0 +66,1 @@\n+  static void print_header(outputStream* st);\n@@ -70,0 +73,2 @@\n+#endif \/\/ LINUX\n+\n","filename":"src\/hotspot\/share\/nmt\/memMapPrinter.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -474,1 +474,0 @@\n-    st->print(\"stack=[\" PTR_FORMAT \", \" PTR_FORMAT \")\", p2i(stack_end()), p2i(stack_base()));\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -120,2 +120,1 @@\n-  template(RendezvousGCThreads)                   \\\n-  template(SystemMap)\n+  template(RendezvousGCThreads)\n","filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -72,0 +72,1 @@\n+#include \"os_posix.hpp\"\n@@ -1159,0 +1160,2 @@\n+#ifdef LINUX\n+\n@@ -1189,1 +1192,1 @@\n-    const char* absname = os::realpath(name, tmp, sizeof(tmp));\n+    const char* absname = os::Posix::realpath(name, tmp, sizeof(tmp));\n@@ -1196,0 +1199,2 @@\n+\n+#endif \/\/ LINUX\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -981,0 +981,2 @@\n+#ifdef LINUX\n+\n@@ -988,1 +990,1 @@\n-    return \"Prints an annotated process memory map of the VM process.\";\n+    return \"Prints an annotated process memory map of the VM process (linux only).\";\n@@ -1007,1 +1009,1 @@\n-    return \"Dumps an annotated process memory map to an output file.\";\n+    return \"Dumps an annotated process memory map to an output file (linux only).\";\n@@ -1018,0 +1020,2 @@\n+#endif \/\/ LINUX\n+\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}