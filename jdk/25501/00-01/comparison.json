{"files":[{"patch":"@@ -62,0 +62,17 @@\n+\n+        \/\/ from intel apx specifications EVEX.128.NP.0F38.W0 F3 \/3(opcode extension)\n+        instrMaskAPX = new byte[]{\n+                (byte) 0xFF,\n+                (byte) 0x07,\n+                (byte) 0x00,\n+                (byte) 0x00,\n+                (byte) 0xFF,\n+                (byte) 0x38};\n+\n+        instrPatternAPX = new byte[]{\n+                (byte) 0x62, \/\/ fixed prefix byte 0x62 for extended EVEX instruction\n+                (byte) 0x02, \/\/ 00010 implied 0F 38 leading opcode bytes\n+                (byte) 0x00,\n+                (byte) 0x00,\n+                (byte) 0xF3,\n+                (byte) 0x3};\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/verifycode\/BlsiTestI.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -61,0 +61,17 @@\n+\n+        \/\/ from intel apx specifications EVEX.128.NP.0F38.W1 F3 \/2(opcode extension part of ModRM.REG)\n+        instrMaskAPX = new byte[]{\n+                (byte) 0xFF,\n+                (byte) 0x07,\n+                (byte) 0x00,\n+                (byte) 0x00,\n+                (byte) 0xFF,\n+                (byte) 0x38};\n+\n+        instrPatternAPX = new byte[]{\n+                (byte) 0x62, \/\/ fixed prefix byte 0x62 for extended EVEX instruction\n+                (byte) 0x02, \/\/ 00010 implied 0F 38 leading opcode bytes\n+                (byte) 0x00,\n+                (byte) 0x00,\n+                (byte) 0xF3,\n+                (byte) 0x2};\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/verifycode\/BlsmskTestI.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -62,0 +62,18 @@\n+\n+        \/\/ from intel apx specifications EVEX.128.NP.0F38.W1 F3 \/1(opcode extension part of ModRM.REG)\n+        instrMaskAPX = new byte[]{\n+                (byte) 0xFF,\n+                (byte) 0x07,\n+                (byte) 0x00,\n+                (byte) 0x00,\n+                (byte) 0xFF,\n+                (byte) 0x38};\n+\n+        instrPatternAPX = new byte[]{\n+                (byte) 0x62, \/\/ fixed prefix byte 0x62 for extended EVEX instruction\n+                (byte) 0x02, \/\/ 00010 implied 0F 38 leading opcode bytes\n+                (byte) 0x00,\n+                (byte) 0x00,\n+                (byte) 0xF3,\n+                (byte) 0x1};\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/verifycode\/BlsrTestI.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+        \/\/ REX2 variant\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/verifycode\/LZcntTestI.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+        \/\/ REX2 variant\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/verifycode\/TZcntTestI.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}