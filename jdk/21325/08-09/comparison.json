{"files":[{"patch":"@@ -102,1 +102,1 @@\n-  StringTable::StringWrapper, oop,\n+  StringTable::StringWrapper&, oop,\n@@ -126,0 +126,20 @@\n+enum class StringType {\n+  OopStr, UnicodeStr, SymbolStr, UTF8Str\n+};\n+\n+struct StringWrapperInternal {\n+  union {\n+    const Handle oop_str;\n+    const jchar* unicode_str;\n+    const Symbol* symbol_str;\n+    const char* utf8_str;\n+  };\n+  const StringType type;\n+  const size_t length;\n+  \n+  StringWrapperInternal(const Handle oop_str, const size_t length)     : oop_str(oop_str),         type(StringType::OopStr), length(length)     {}\n+  StringWrapperInternal(const jchar* unicode_str, const size_t length) : unicode_str(unicode_str), type(StringType::UnicodeStr), length(length) {}\n+  StringWrapperInternal(const Symbol* symbol_str, const size_t length) : symbol_str(symbol_str),   type(StringType::SymbolStr), length(length)  {}\n+  StringWrapperInternal(const char* utf8_str, const size_t length)     : utf8_str(utf8_str),       type(StringType::UTF8Str), length(length)    {}\n+};\n+\n@@ -132,1 +152,1 @@\n-const char* StringTable::get_symbol_utf8(StringWrapper symbol) {\n+const char* StringTable::get_symbol_utf8(StringWrapper& symbol) {\n@@ -136,1 +156,1 @@\n-unsigned int StringTable::hash_wrapped_string(StringWrapper wrapped_str) {\n+unsigned int StringTable::hash_wrapped_string(StringWrapper& wrapped_str) {\n@@ -153,1 +173,1 @@\n-bool StringTable::wrapped_string_equals(oop java_string, StringWrapper wrapped_str, int) {\n+bool StringTable::wrapped_string_equals(oop java_string, StringWrapper& wrapped_str, int) {\n@@ -383,1 +403,1 @@\n-oop StringTable::do_lookup(StringWrapper name, uintx hash) {\n+oop StringTable::do_lookup(StringWrapper& name, uintx hash) {\n@@ -418,1 +438,1 @@\n-const jchar* StringTable::to_unicode(StringWrapper wrapped_str, int &len, TRAPS) {\n+const jchar* StringTable::to_unicode(StringWrapper& wrapped_str, int &len, TRAPS) {\n@@ -446,1 +466,1 @@\n-Handle StringTable::handle_from_wrapped_string(StringWrapper wrapped_str, TRAPS) {\n+Handle StringTable::handle_from_wrapped_string(StringWrapper& wrapped_str, TRAPS) {\n@@ -488,1 +508,1 @@\n-oop StringTable::intern(StringWrapper name, TRAPS) {\n+oop StringTable::intern(StringWrapper& name, TRAPS) {\n@@ -511,1 +531,1 @@\n-oop StringTable::do_intern(StringWrapper name, uintx hash, TRAPS) {\n+oop StringTable::do_intern(StringWrapper& name, uintx hash, TRAPS) {\n@@ -895,1 +915,1 @@\n-oop StringTable::lookup_shared(StringWrapper name, unsigned int hash) {\n+oop StringTable::lookup_shared(StringWrapper& name, unsigned int hash) {\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":30,"deletions":10,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -59,20 +59,0 @@\n-  enum class StringType {\n-    OopStr, UnicodeStr, SymbolStr, UTF8Str\n-  };\n-\n-  struct StringWrapperInternal {\n-    union {\n-      const Handle oop_str;\n-      const jchar* unicode_str;\n-      const Symbol* symbol_str;\n-      const char* utf8_str;\n-    };\n-    const StringType type;\n-    const size_t length;\n-\n-    StringWrapperInternal(const Handle oop_str, const size_t length)     : oop_str(oop_str),         type(StringType::OopStr), length(length)     {}\n-    StringWrapperInternal(const jchar* unicode_str, const size_t length) : unicode_str(unicode_str), type(StringType::UnicodeStr), length(length) {}\n-    StringWrapperInternal(const Symbol* symbol_str, const size_t length) : symbol_str(symbol_str),   type(StringType::SymbolStr), length(length)  {}\n-    StringWrapperInternal(const char* utf8_str, const size_t length)     : utf8_str(utf8_str),       type(StringType::UTF8Str), length(length)    {}\n-  };\n-\n@@ -83,1 +63,1 @@\n-  static bool wrapped_string_equals(oop java_string, StringWrapper wrapped_str, int = 0);\n+  static bool wrapped_string_equals(oop java_string, StringWrapper& wrapped_str, int = 0);\n@@ -86,4 +66,4 @@\n-  static const char* get_symbol_utf8(StringWrapper symbol_str);\n-  static unsigned int hash_wrapped_string(StringWrapper wrapped_str);\n-  static const jchar* to_unicode(StringWrapper wrapped_str, int &len, TRAPS);\n-  static Handle handle_from_wrapped_string(StringWrapper wrapped_str, TRAPS);\n+  static const char* get_symbol_utf8(StringWrapper& symbol_str);\n+  static unsigned int hash_wrapped_string(StringWrapper& wrapped_str);\n+  static const jchar* to_unicode(StringWrapper& wrapped_str, int &len, TRAPS);\n+  static Handle handle_from_wrapped_string(StringWrapper& wrapped_str, TRAPS);\n@@ -100,3 +80,3 @@\n-  static oop intern(StringWrapper name, TRAPS);\n-  static oop do_intern(StringWrapper name, uintx hash, TRAPS);\n-  static oop do_lookup(StringWrapper name, uintx hash);\n+  static oop intern(StringWrapper& name, TRAPS);\n+  static oop do_intern(StringWrapper& name, uintx hash, TRAPS);\n+  static oop do_lookup(StringWrapper& name, uintx hash);\n@@ -166,1 +146,1 @@\n-  static oop lookup_shared(StringWrapper name, unsigned int hash) NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n+  static oop lookup_shared(StringWrapper& name, unsigned int hash) NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n","filename":"src\/hotspot\/share\/classfile\/stringTable.hpp","additions":9,"deletions":29,"binary":false,"changes":38,"status":"modified"}]}