[{"commit":{"message":"8303950: addressing artifacts observed in RepaintManagerFPUIScaleTest\n\nWhen I resized the window in the RepaintManagerFPUIScaleTest: I saw lots of random patches of misplaced pixels.\n\nI assume this is because the RepaintManager could now call AWTPaintManager#paint(..) recursively, which means each invocation could grab the cached VolatileImage returned by getVolatileOffscreenBuffer. As a test: I tried making getVolatileOffscreenBuffer always return a new image, and that resolved the artifacts.\n\nThis change avoids the recursion with a new helper method. This logic is similar to checking JComponent#getFlag(ANCESTOR_USING_BUFFER) , except that can't help identify recursion when the outermost call is coming from a Component like a Window.\n\nTo my knowledge this recursion can only ever happen when the outermost call is a non-Swing component and the innermost call is a Swing component. (And there should only ever be one layer of recursion.)"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JComponent.java"},{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/RepaintManager.java"}],"sha":"960fd1761c765c8804acfe29e47f396e506dfe5c"}]