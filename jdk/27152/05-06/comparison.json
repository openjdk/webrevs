{"files":[{"patch":"@@ -38,2 +38,2 @@\n-#define DEF_RV_EXT_FEATURE(NAME, PRETTY, LINUX_BIT, CPU_FEATURE_INDEX, FSTRING, FLAGF)                 \\\n-VM_Version::NAME##RVExtFeatureValue VM_Version::NAME(#PRETTY, LINUX_BIT, CPU_FEATURE_INDEX, FSTRING);\n+#define DEF_RV_EXT_FEATURE(NAME, PRETTY, LINUX_BIT, FSTRING, FLAGF) \\\n+VM_Version::NAME##RVExtFeatureValue VM_Version::NAME;\n@@ -43,2 +43,2 @@\n-#define DEF_RV_NON_EXT_FEATURE(NAME, PRETTY, LINUX_BIT, FSTRING, FLAGF)                 \\\n-VM_Version::NAME##RVNonExtFeatureValue VM_Version::NAME(#PRETTY, LINUX_BIT, FSTRING);\n+#define DEF_RV_NON_EXT_FEATURE(NAME, PRETTY, LINUX_BIT, FSTRING, FLAGF) \\\n+VM_Version::NAME##RVNonExtFeatureValue VM_Version::NAME;\n@@ -48,1 +48,1 @@\n-#define ADD_RV_EXT_FEATURE_IN_LIST(NAME, PRETTY, LINUX_BIT, CPU_FEATURE_INDEX, FSTRING, FLAGF) \\\n+#define ADD_RV_EXT_FEATURE_IN_LIST(NAME, PRETTY, LINUX_BIT, FSTRING, FLAGF) \\\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -204,35 +204,35 @@\n-  \/\/    declaration name, extension name, bit value from linux, cpu feature index, feature string?, mapped flag)\n-  #define RV_EXT_FEATURE_FLAGS(decl)                                                                        \\\n-  decl(ext_I            ,  i           ,     ('I' - 'A'),  0,   true ,  NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_M            ,  m           ,     ('M' - 'A'),  1,   true ,  NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_A            ,  a           ,     ('A' - 'A'),  2,   true ,  NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_F            ,  f           ,     ('F' - 'A'),  3,   true ,  NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_D            ,  d           ,     ('D' - 'A'),  4,   true ,  NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_C            ,  c           ,     ('C' - 'A'),  5,   true ,  UPDATE_DEFAULT(UseRVC))             \\\n-  decl(ext_Q            ,  q           ,     ('Q' - 'A'),  6,   true ,  NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_H            ,  h           ,     ('H' - 'A'),  7,   true ,  NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_V            ,  v           ,     ('V' - 'A'),  8,   true ,  UPDATE_DEFAULT(UseRVV))             \\\n-  decl(ext_Zicbom       ,  Zicbom      ,  RV_NO_FLAG_BIT,  9,   true ,  UPDATE_DEFAULT(UseZicbom))          \\\n-  decl(ext_Zicboz       ,  Zicboz      ,  RV_NO_FLAG_BIT,  10,  true ,  UPDATE_DEFAULT(UseZicboz))          \\\n-  decl(ext_Zicbop       ,  Zicbop      ,  RV_NO_FLAG_BIT,  11,  true ,  UPDATE_DEFAULT(UseZicbop))          \\\n-  decl(ext_Zba          ,  Zba         ,  RV_NO_FLAG_BIT,  12,  true ,  UPDATE_DEFAULT(UseZba))             \\\n-  decl(ext_Zbb          ,  Zbb         ,  RV_NO_FLAG_BIT,  13,  true ,  UPDATE_DEFAULT(UseZbb))             \\\n-  decl(ext_Zbc          ,  Zbc         ,  RV_NO_FLAG_BIT,  14,  true ,  NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_Zbs          ,  Zbs         ,  RV_NO_FLAG_BIT,  15,  true ,  UPDATE_DEFAULT(UseZbs))             \\\n-  decl(ext_Zbkb         ,  Zbkb        ,  RV_NO_FLAG_BIT,  16,  true ,  UPDATE_DEFAULT(UseZbkb))            \\\n-  decl(ext_Zcb          ,  Zcb         ,  RV_NO_FLAG_BIT,  17,  true ,  UPDATE_DEFAULT(UseZcb))             \\\n-  decl(ext_Zfa          ,  Zfa         ,  RV_NO_FLAG_BIT,  18,  true ,  UPDATE_DEFAULT(UseZfa))             \\\n-  decl(ext_Zfh          ,  Zfh         ,  RV_NO_FLAG_BIT,  19,  true ,  UPDATE_DEFAULT(UseZfh))             \\\n-  decl(ext_Zfhmin       ,  Zfhmin      ,  RV_NO_FLAG_BIT,  20,  true ,  UPDATE_DEFAULT(UseZfhmin))          \\\n-  decl(ext_Zicsr        ,  Zicsr       ,  RV_NO_FLAG_BIT,  21,  true ,  NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_Zicntr       ,  Zicntr      ,  RV_NO_FLAG_BIT,  22,  true ,  NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_Zifencei     ,  Zifencei    ,  RV_NO_FLAG_BIT,  23,  true ,  NO_UPDATE_DEFAULT)                  \\\n-  decl(ext_Zic64b       ,  Zic64b      ,  RV_NO_FLAG_BIT,  24,  true ,  UPDATE_DEFAULT(UseZic64b))          \\\n-  decl(ext_Ztso         ,  Ztso        ,  RV_NO_FLAG_BIT,  25,  true ,  UPDATE_DEFAULT(UseZtso))            \\\n-  decl(ext_Zihintpause  ,  Zihintpause ,  RV_NO_FLAG_BIT,  26,  true ,  UPDATE_DEFAULT(UseZihintpause))     \\\n-  decl(ext_Zacas        ,  Zacas       ,  RV_NO_FLAG_BIT,  27,  true ,  UPDATE_DEFAULT(UseZacas))           \\\n-  decl(ext_Zvbb         ,  Zvbb        ,  RV_NO_FLAG_BIT,  28,  true ,  UPDATE_DEFAULT_DEP(UseZvbb, ext_V)) \\\n-  decl(ext_Zvbc         ,  Zvbc        ,  RV_NO_FLAG_BIT,  29,  true ,  UPDATE_DEFAULT_DEP(UseZvbc, ext_V)) \\\n-  decl(ext_Zvfh         ,  Zvfh        ,  RV_NO_FLAG_BIT,  30,  true ,  UPDATE_DEFAULT_DEP(UseZvfh, ext_V)) \\\n-  decl(ext_Zvkn         ,  Zvkn        ,  RV_NO_FLAG_BIT,  31,  true ,  UPDATE_DEFAULT_DEP(UseZvkn, ext_V)) \\\n-  decl(ext_Zicond       ,  Zicond      ,  RV_NO_FLAG_BIT,  32,  true ,  UPDATE_DEFAULT(UseZicond))          \\\n+  \/\/    declaration name, extension name, bit value from linux, feature string?, mapped flag)\n+  #define RV_EXT_FEATURE_FLAGS(decl)                                                                   \\\n+  decl(ext_I            ,  i           ,     ('I' - 'A'),  true ,  NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_M            ,  m           ,     ('M' - 'A'),  true ,  NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_A            ,  a           ,     ('A' - 'A'),  true ,  NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_F            ,  f           ,     ('F' - 'A'),  true ,  NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_D            ,  d           ,     ('D' - 'A'),  true ,  NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_C            ,  c           ,     ('C' - 'A'),  true ,  UPDATE_DEFAULT(UseRVC))             \\\n+  decl(ext_Q            ,  q           ,     ('Q' - 'A'),  true ,  NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_H            ,  h           ,     ('H' - 'A'),  true ,  NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_V            ,  v           ,     ('V' - 'A'),  true ,  UPDATE_DEFAULT(UseRVV))             \\\n+  decl(ext_Zicbom       ,  Zicbom      ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZicbom))          \\\n+  decl(ext_Zicboz       ,  Zicboz      ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZicboz))          \\\n+  decl(ext_Zicbop       ,  Zicbop      ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZicbop))          \\\n+  decl(ext_Zba          ,  Zba         ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZba))             \\\n+  decl(ext_Zbb          ,  Zbb         ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZbb))             \\\n+  decl(ext_Zbc          ,  Zbc         ,  RV_NO_FLAG_BIT,  true ,  NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zbs          ,  Zbs         ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZbs))             \\\n+  decl(ext_Zbkb         ,  Zbkb        ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZbkb))            \\\n+  decl(ext_Zcb          ,  Zcb         ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZcb))             \\\n+  decl(ext_Zfa          ,  Zfa         ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZfa))             \\\n+  decl(ext_Zfh          ,  Zfh         ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZfh))             \\\n+  decl(ext_Zfhmin       ,  Zfhmin      ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZfhmin))          \\\n+  decl(ext_Zicsr        ,  Zicsr       ,  RV_NO_FLAG_BIT,  true ,  NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zicntr       ,  Zicntr      ,  RV_NO_FLAG_BIT,  true ,  NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zifencei     ,  Zifencei    ,  RV_NO_FLAG_BIT,  true ,  NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zic64b       ,  Zic64b      ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZic64b))          \\\n+  decl(ext_Ztso         ,  Ztso        ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZtso))            \\\n+  decl(ext_Zihintpause  ,  Zihintpause ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZihintpause))     \\\n+  decl(ext_Zacas        ,  Zacas       ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZacas))           \\\n+  decl(ext_Zvbb         ,  Zvbb        ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT_DEP(UseZvbb, ext_V)) \\\n+  decl(ext_Zvbc         ,  Zvbc        ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT_DEP(UseZvbc, ext_V)) \\\n+  decl(ext_Zvfh         ,  Zvfh        ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT_DEP(UseZvfh, ext_V)) \\\n+  decl(ext_Zvkn         ,  Zvkn        ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT_DEP(UseZvkn, ext_V)) \\\n+  decl(ext_Zicond       ,  Zicond      ,  RV_NO_FLAG_BIT,  true ,  UPDATE_DEFAULT(UseZicond))          \\\n@@ -240,7 +240,7 @@\n-  #define DECLARE_RV_EXT_FEATURE(NAME, PRETTY, LINUX_BIT, CPU_FEATURE_INDEX, FSTRING, FLAGF)                   \\\n-  struct NAME##RVExtFeatureValue : public RVExtFeatureValue {                                                  \\\n-    NAME##RVExtFeatureValue(const char* pretty, int linux_bit_num, uint32_t cpu_feature_index, bool fstring) : \\\n-      RVExtFeatureValue(pretty, linux_bit_num, cpu_feature_index, fstring) {}                                  \\\n-    FLAGF;                                                                                                     \\\n-  };                                                                                                           \\\n-  static NAME##RVExtFeatureValue NAME;                                                                         \\\n+  #define DECLARE_RV_EXT_FEATURE(NAME, PRETTY, LINUX_BIT, FSTRING, FLAGF)               \\\n+  struct NAME##RVExtFeatureValue : public RVExtFeatureValue {                           \\\n+    NAME##RVExtFeatureValue() :                                                         \\\n+      RVExtFeatureValue(#PRETTY, LINUX_BIT, RVExtFeatures::CPU_##NAME, FSTRING) {}      \\\n+    FLAGF;                                                                              \\\n+  };                                                                                    \\\n+  static NAME##RVExtFeatureValue NAME;                                                  \\\n@@ -252,7 +252,7 @@\n-  #define RV_NON_EXT_FEATURE_FLAGS(decl)                                                                   \\\n-  decl(unaligned_access ,  Unaligned       ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)                  \\\n-  decl(mvendorid        ,  VendorId        ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)                  \\\n-  decl(marchid          ,  ArchId          ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)                  \\\n-  decl(mimpid           ,  ImpId           ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)                  \\\n-  decl(satp_mode        ,  SATP            ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)                  \\\n-  decl(zicboz_block_size,  ZicbozBlockSize ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)                  \\\n+  #define RV_NON_EXT_FEATURE_FLAGS(decl)                                                       \\\n+  decl(unaligned_access ,  Unaligned       ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)      \\\n+  decl(mvendorid        ,  VendorId        ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)      \\\n+  decl(marchid          ,  ArchId          ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)      \\\n+  decl(mimpid           ,  ImpId           ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)      \\\n+  decl(satp_mode        ,  SATP            ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)      \\\n+  decl(zicboz_block_size,  ZicbozBlockSize ,  RV_NO_FLAG_BIT,  false,  NO_UPDATE_DEFAULT)      \\\n@@ -260,7 +260,7 @@\n-  #define DECLARE_RV_NON_EXT_FEATURE(NAME, PRETTY, LINUX_BIT, FSTRING, FLAGF)                  \\\n-  struct NAME##RVNonExtFeatureValue : public RVNonExtFeatureValue {                            \\\n-    NAME##RVNonExtFeatureValue(const char* pretty, int linux_bit_num, bool fstring) :          \\\n-      RVNonExtFeatureValue(pretty, linux_bit_num, fstring) {}                                  \\\n-    FLAGF;                                                                                     \\\n-  };                                                                                           \\\n-  static NAME##RVNonExtFeatureValue NAME;                                                      \\\n+  #define DECLARE_RV_NON_EXT_FEATURE(NAME, PRETTY, LINUX_BIT, FSTRING, FLAGF)      \\\n+  struct NAME##RVNonExtFeatureValue : public RVNonExtFeatureValue {                \\\n+    NAME##RVNonExtFeatureValue() :                                                 \\\n+      RVNonExtFeatureValue(#PRETTY, LINUX_BIT, FSTRING) {}                         \\\n+    FLAGF;                                                                         \\\n+  };                                                                               \\\n+  static NAME##RVNonExtFeatureValue NAME;                                          \\\n@@ -275,1 +275,1 @@\n-      #define DECLARE_RV_FEATURE_ENUM(NAME, PRETTY, LINUX_BIT, CPU_FEATURE_INDEX, FSTRING, FLAGF) CPU_##NAME=(CPU_FEATURE_INDEX),\n+      #define DECLARE_RV_FEATURE_ENUM(NAME, PRETTY, LINUX_BIT, FSTRING, FLAGF) CPU_##NAME,\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":57,"deletions":57,"binary":false,"changes":114,"status":"modified"}]}