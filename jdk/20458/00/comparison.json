{"files":[{"patch":"@@ -4133,2 +4133,2 @@\n-    \/\/ testing if reserved zone needs to be enabled\n-    Label no_reserved_zone_enabling;\n+  \/\/ testing if reserved zone needs to be enabled\n+  Label no_reserved_zone_enabling;\n@@ -4136,2 +4136,2 @@\n-    ld(t0, Address(xthread, JavaThread::reserved_stack_activation_offset()));\n-    bltu(sp, t0, no_reserved_zone_enabling);\n+  ld(t0, Address(xthread, JavaThread::reserved_stack_activation_offset()));\n+  bltu(sp, t0, no_reserved_zone_enabling);\n@@ -4139,4 +4139,4 @@\n-    enter();   \/\/ RA and FP are live.\n-    mv(c_rarg0, xthread);\n-    rt_call(CAST_FROM_FN_PTR(address, SharedRuntime::enable_stack_reserved_zone));\n-    leave();\n+  enter();   \/\/ RA and FP are live.\n+  mv(c_rarg0, xthread);\n+  rt_call(CAST_FROM_FN_PTR(address, SharedRuntime::enable_stack_reserved_zone));\n+  leave();\n@@ -4144,10 +4144,6 @@\n-    \/\/ We have already removed our own frame.\n-    \/\/ throw_delayed_StackOverflowError will think that it's been\n-    \/\/ called by our caller.\n-    RuntimeAddress target(StubRoutines::throw_delayed_StackOverflowError_entry());\n-    relocate(target.rspec(), [&] {\n-      int32_t offset;\n-      movptr(t0, target.target(), offset);\n-      jr(t0, offset);\n-    });\n-    should_not_reach_here();\n+  \/\/ We have already removed our own frame.\n+  \/\/ throw_delayed_StackOverflowError will think that it's been\n+  \/\/ called by our caller.\n+  la(t0, RuntimeAddress(StubRoutines::throw_delayed_StackOverflowError_entry()));\n+  jr(t0);\n+  should_not_reach_here();\n@@ -4155,1 +4151,1 @@\n-    bind(no_reserved_zone_enabling);\n+  bind(no_reserved_zone_enabling);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":15,"deletions":19,"binary":false,"changes":34,"status":"modified"}]}