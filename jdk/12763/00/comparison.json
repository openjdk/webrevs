{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-    private Map<JavaThread, List<Oop>> locksMap = new HashMap<>();\n+    private final Map<JavaThread, List<Oop>> locksMap = new HashMap<>();\n@@ -45,2 +45,1 @@\n-            for (Iterator<Oop> itr = locks.iterator(); itr.hasNext();) {\n-                Oop oop = itr.next();\n+            for (Oop oop : locks) {\n@@ -74,6 +73,2 @@\n-                            List<Oop> locks = locksMap.get(thread);\n-                            if (locks == null) {\n-                                locks = new LinkedList<>();\n-                                locksMap.put(thread, locks);\n-                            }\n-                            locks.add(oop);\n+                            locksMap.computeIfAbsent(thread, t -> new ArrayList<>())\n+                                    .add(oop);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/ConcurrentLocksPrinter.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"}]}