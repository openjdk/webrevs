{"files":[{"patch":"@@ -247,1 +247,3 @@\n-  IsAliveClosure(DefNewGeneration* g): _young_gen_end(g->reserved().end()) {}\n+  void init(DefNewGeneration* g) {\n+    _young_gen_end = g->reserved().end();\n+  }\n@@ -287,0 +289,2 @@\n+    assert(is_in_young_gen(obj), \"in young-gen\");\n+    assert(!_young_gen->to()->is_in_reserved(obj), \"in eden\/from\");\n@@ -288,4 +292,3 @@\n-    if (is_in_young_gen(obj)) {\n-      oop new_obj = obj->is_forwarded() ? obj->forwardee()\n-                                        : _young_gen->copy_to_survivor_space(obj);\n-      RawAccess<IS_NOT_NULL>::oop_store(p, new_obj);\n+    oop new_obj = obj->is_forwarded() ? obj->forwardee()\n+                                      : _young_gen->copy_to_survivor_space(obj);\n+    RawAccess<IS_NOT_NULL>::oop_store(p, new_obj);\n@@ -293,3 +296,2 @@\n-      if (is_in_young_gen(new_obj) && !is_in_young_gen(p)) {\n-        _rs->inline_write_ref_field_gc(p);\n-      }\n+    if (is_in_young_gen(new_obj) && !is_in_young_gen(p)) {\n+      _rs->inline_write_ref_field_gc(p);\n@@ -327,0 +329,2 @@\n+IsAliveClosure DefNewGeneration::_is_alive_closure;\n+\n@@ -624,1 +628,6 @@\n-  _ref_processor = new ReferenceProcessor(&_span_based_discoverer);    \/\/ a vanilla reference processor\n+  _is_alive_closure.init(this);\n+  _ref_processor = new ReferenceProcessor(&_span_based_discoverer,\n+                                          1,                        \/\/ mt processing degree\n+                                          1,                        \/\/ mt discovery degree\n+                                          false,                    \/\/ concurrent_discovery\n+                                          &_is_alive_closure);\n@@ -752,3 +761,0 @@\n-  \/\/ These can be shared for all code paths\n-  IsAliveClosure is_alive(this);\n-\n@@ -791,1 +797,1 @@\n-    SerialGCRefProcProxyTask task(is_alive, keep_alive, evacuate_followers);\n+    SerialGCRefProcProxyTask task(_is_alive_closure, keep_alive, evacuate_followers);\n@@ -801,1 +807,1 @@\n-    WeakProcessor::weak_oops_do(&is_alive, &cl);\n+    WeakProcessor::weak_oops_do(&_is_alive_closure, &cl);\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":20,"deletions":14,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -42,2 +42,0 @@\n-class OldGenScanClosure;\n-class YoungGenScanClosure;\n@@ -45,1 +43,2 @@\n-class ScanWeakRefClosure;\n+class IsAliveClosure;\n+class OldGenScanClosure;\n@@ -48,0 +47,1 @@\n+class YoungGenScanClosure;\n@@ -62,0 +62,2 @@\n+\n+  static IsAliveClosure _is_alive_closure;\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}