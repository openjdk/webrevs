{"files":[{"patch":"@@ -80,0 +80,5 @@\n+static void fill_range(uint8_t* start, uint8_t* end, uint8_t v) {\n+  \/\/ + 1 for inclusive\n+  memset(start, v, pointer_delta(end, start, sizeof(uint8_t)) + 1);\n+}\n+\n@@ -118,1 +123,1 @@\n-  set_offset_array(offset_card, cur_card_boundary, blk_start);\n+  *offset_card = checked_cast<uint8_t>(pointer_delta(cur_card_boundary, blk_start));\n@@ -133,1 +138,1 @@\n-      set_offset_array(start_card_for_region, MIN2(reach, end_card), value);\n+      fill_range(start_card_for_region, MIN2(reach, end_card), value);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialBlockOffsetTable.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -56,4 +56,0 @@\n-  void fill_range(uint8_t* const start, size_t num_cards, uint8_t offset) {\n-    memset(start, offset, num_cards);\n-  }\n-\n@@ -69,0 +65,6 @@\n+  \/\/ Mapping from address to object start array entry\n+  uint8_t* entry_for_addr(const void* const p) const;\n+\n+  \/\/ Mapping from object start array entry to address of first word\n+  HeapWord* addr_for_entry(const uint8_t* const p) const;\n+\n@@ -108,21 +110,0 @@\n-\n-  \/\/ Mapping from address to object start array entry\n-  uint8_t* entry_for_addr(const void* const p) const;\n-\n-  \/\/ Mapping from object start array entry to address of first word\n-  HeapWord* addr_for_entry(const uint8_t* const p) const;\n-\n-  void set_offset_array(uint8_t* const addr, HeapWord* high, HeapWord* low) {\n-    assert(_vs.contains(addr), \"Block offset address out of range\");\n-    assert(high >= low, \"addresses out of order\");\n-    assert(pointer_delta(high, low) < CardTable::card_size_in_words(), \"offset too large\");\n-    *addr = checked_cast<uint8_t>(pointer_delta(high, low));\n-  }\n-\n-  void set_offset_array(uint8_t* const left, uint8_t* const right, uint8_t offset) {\n-    assert(_vs.contains(right), \"right address out of range\");\n-    assert(left <= right, \"precondition\");\n-    size_t num_cards = right - left + 1;\n-\n-    fill_range(left, num_cards, offset);\n-  }\n","filename":"src\/hotspot\/share\/gc\/serial\/serialBlockOffsetTable.hpp","additions":6,"deletions":25,"binary":false,"changes":31,"status":"modified"}]}