{"files":[{"patch":"@@ -81,0 +81,1 @@\n+import com.sun.source.doctree.SeeTree;\n@@ -154,0 +155,1 @@\n+    private boolean inSee;\n@@ -906,0 +908,10 @@\n+    @Override\n+    public Void visitSee(SeeTree node, Void unused) {\n+        try {\n+            inSee = true;\n+            return super.visitSee(node, unused);\n+        } finally {\n+            inSee = false;\n+        }\n+    }\n+\n@@ -987,0 +999,3 @@\n+        } else if ((inLink || inSee)\n+                && e.getKind() == ElementKind.CLASS && e.asType().getKind() != TypeKind.DECLARED) {\n+            reportBadReference(tree);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      8284030 8307377\n+ * @bug      8284030 8307377 8331579\n@@ -91,0 +91,58 @@\n+\n+    @Test\n+    public void testSimpleDocLint(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+\n+        tb.writeJavaFiles(src, \"\"\"\n+                \/**\n+                 * Comment.\n+                 * Double: {@link double}\n+                 * Void: {@link void}\n+                 * @see int\n+                 *\/\n+                public class C {\\s\n+                    private C() { }\n+                }\n+                \"\"\");\n+\n+        javadoc(\"-Xdoclint:reference\",\n+                \"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"C.java\").toString());\n+        checkExit(Exit.ERROR);\n+\n+        checkOutput(Output.OUT, true,\n+                \"C.java:3: error: reference not found\",\n+                \"C.java:4: error: reference not found\",\n+                \"C.java:5: error: reference not found\");\n+\n+        checkOutput(\"C.html\", true,\n+                \"\"\"\n+                    <div class=\"block\">Comment.\n+                     Double:\\s\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid reference<\/summary>\n+                    <pre><code>double<\/code><\/pre>\n+                    <\/details>\n+\n+                     Void:\\s\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid reference<\/summary>\n+                    <pre><code>void<\/code><\/pre>\n+                    <\/details>\n+                    <\/div>\n+                    \"\"\",\n+                \"\"\"\n+                    <dt>See Also:<\/dt>\n+                    <dd>\n+                    <ul class=\"tag-list\">\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid reference<\/summary>\n+                    <pre><code>int<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n+                    <\/ul>\n+                    <\/dd>\"\"\");\n+    }\n+\n@@ -125,0 +183,50 @@\n+\n+    @Test\n+    public void testArrayDocLint(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+\n+        tb.writeJavaFiles(src, \"\"\"\n+                \/**\n+                 * Comment.\n+                 * Double[]: {@link double[]}\n+                 * @see int[]\n+                 *\/\n+                public class C {\\s\n+                    private C() { }\n+                }\n+                \"\"\");\n+\n+        javadoc(\"-Xdoclint:reference\",\n+                \"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"C.java\").toString());\n+        checkExit(Exit.ERROR);\n+\n+        checkOutput(Output.OUT, true,\n+                \"C.java:3: error: reference not found\",\n+                \"C.java:4: error: reference not found\");\n+\n+        checkOutput(\"C.html\", true,\n+                \"\"\"\n+                    <div class=\"block\">Comment.\n+                     Double[]:\\s\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid reference<\/summary>\n+                    <pre><code>double[]<\/code><\/pre>\n+                    <\/details>\n+                    <\/div>\n+                    \"\"\",\n+                \"\"\"\n+                    <dt>See Also:<\/dt>\n+                    <dd>\n+                    <ul class=\"tag-list\">\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid reference<\/summary>\n+                    <pre><code>int[]<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n+                    <\/ul>\n+                    <\/dd>\n+                    \"\"\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLinkTaglet\/TestLinkTagletPrimitive.java","additions":110,"deletions":2,"binary":false,"changes":112,"status":"modified"}]}