{"files":[{"patch":"@@ -1615,0 +1615,6 @@\n+    \/**\n+     * Cached for faster type tests.\n+     *\/\n+    static final Class<?> interruptibleTaskClass;\n+\n+\n@@ -1969,1 +1975,1 @@\n-            for (boolean taken = false;;) {\n+            for (boolean propagated = false;;) {\n@@ -1988,1 +1994,1 @@\n-                                    break;                \/\/ will revisit\n+                                    break scan;           \/\/ end of run\n@@ -2002,2 +2008,1 @@\n-                                boolean propagated = taken;\n-                                rescan = taken = true;\n+                                rescan = true;\n@@ -2005,4 +2010,7 @@\n-                                     ((j & 1) == 0) && t instanceof\n-                                     ForkJoinTask.InterruptibleTask) &&\n-                                    a[(b + 1) & m] != null)\n-                                    signalWork();         \/\/ propagate\n+                                     ((j & 1) == 0 &&\n+                                      t.getClass().getSuperclass() ==\n+                                      interruptibleTaskClass)) &&\n+                                    a[q.base & m] != null) {\n+                                    propagated = true;\n+                                    signalWork();\n+                                }\n@@ -2015,1 +2023,0 @@\n-                    taken = false;\n@@ -2018,0 +2025,1 @@\n+                    propagated = false;\n@@ -2045,1 +2053,1 @@\n-            WorkQueue q; int j;               \/\/ interleave spins and rechecks\n+            WorkQueue q;                      \/\/ interleave spins and rechecks\n@@ -2051,2 +2059,2 @@\n-            if (checks != 0 && ((j = k & (n - 1)) & 1) == 0 &&\n-                (q = qs[j]) != null && q.top - q.base > 0 && --checks == 0)\n+            if (checks != 0 && (k & 1) == 0 && (q = qs[k & (n - 1)]) != null &&\n+                q.top - q.base > 0 && --checks == 0)\n@@ -4011,0 +4019,1 @@\n+        interruptibleTaskClass = ForkJoinTask.InterruptibleTask.class;\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":21,"deletions":12,"binary":false,"changes":33,"status":"modified"}]}