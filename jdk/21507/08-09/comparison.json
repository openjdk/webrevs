{"files":[{"patch":"@@ -1294,4 +1294,1 @@\n-                else if ((room == 0 || a[m & (s - 1)] == null ||\n-                          (!internal && task != null &&\n-                           task.getClass().getSuperclass() == interruptibleTaskClass &&\n-                           a[m & (s - 2)] != null)) &&\n+                else if ((room == 0 || a[m & (s - (internal? 1 : 2))] == null) &&\n@@ -1984,2 +1981,2 @@\n-            int cfg = w.config, nsteals = 0;\n-            for (boolean propagated = false;;) {\n+            int cfg = w.config, nsteals = 0, src = -1;\n+            for (;;) {\n@@ -1997,1 +1994,1 @@\n-                            ForkJoinTask<?> t; int b; long k;\n+                            ForkJoinTask<?> t; int b; long k; Object o;\n@@ -2003,3 +2000,3 @@\n-                                if (rescan)\n-                                    break scan;           \/\/ end of run\n-                                if (U.getReference(a, k) == null) {\n+                                if (a[b & m] == null) {\n+                                    if (rescan)           \/\/ end of run\n+                                        break scan;\n@@ -2015,2 +2012,3 @@\n-                            else if (U.compareAndSetReference(a, k, t, null)) {\n-                                int nk = (q.base = b + 1) & m;\n+                            else if ((o = U.compareAndExchangeReference(\n+                                          a, k, t, null)) == t) {\n+                                int nb = q.base = b + 1;\n@@ -2020,6 +2018,5 @@\n-                                if ((t.getClass().getSuperclass() ==\n-                                     interruptibleTaskClass || !propagated) &&\n-                                    a[nk] != null) {\n-                                    propagated = true;\n-                                    signalWork();\n-                                }\n+                                if ((src != (src = j) ||\n+                                     t.getClass().getSuperclass() ==\n+                                     interruptibleTaskClass) &&\n+                                    a[nb & m] != null)\n+                                    signalWork();         \/\/ propagate\n@@ -2027,0 +2024,6 @@\n+                                if (q.base != nb)         \/\/ reduce interference\n+                                    break scan;\n+                            }\n+                            else if (o == null) {\n+                                rescan = true;            \/\/ move on collision\n+                                break scan;\n@@ -2034,1 +2037,1 @@\n-                    propagated = false;\n+                    src = -1;\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":22,"deletions":19,"binary":false,"changes":41,"status":"modified"}]}