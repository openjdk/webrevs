{"files":[{"patch":"@@ -1037,0 +1037,1 @@\n+    static final int DROPPING         = DROPPED | INVALID_ID;\n@@ -1833,1 +1834,1 @@\n-            dropWaiters();\n+            releaseAll();\n@@ -1839,1 +1840,1 @@\n-            if ((src = w.source) != DROPPED) {\n+            if (((src = w.source) & DROPPED) == 0) {\n@@ -1917,1 +1918,3 @@\n-     * Releases and drops all waiting workers. Called only during shutdown.\n+     * Releases all waiting workers. Called only during shutdown.\n+     *\n+     * @return current ctl\n@@ -1919,2 +1922,3 @@\n-    private void dropWaiters() {\n-        for (long c = ctl;;) {\n+    private long releaseAll() {\n+        long c = ctl;\n+        for (;;) {\n@@ -1926,2 +1930,3 @@\n-                          c, (v.stackPred & LMASK) | (UMASK & (c - TC_UNIT))))) {\n-                v.source = DROPPED;\n+                          c, ((UMASK & (c + RC_UNIT)) | (c & TC_MASK) |\n+                              (v.stackPred & LMASK))))) {\n+                v.source = DROPPING; \/\/ avoid unnecessary shutdown overhead\n@@ -1933,0 +1938,1 @@\n+        return c;\n@@ -2608,1 +2614,0 @@\n-        tryTerminate(false, false);\n@@ -2761,1 +2766,1 @@\n-                dropWaiters();\n+                releaseAll();\n@@ -2767,3 +2772,5 @@\n-        if ((e & (STOP | TERMINATED)) == STOP) {\n-            helpTerminate();\n-            if (((e = runState) & (STOP | TERMINATED)) == STOP && ctl == 0L) {\n+        while ((e & (STOP | TERMINATED)) == STOP) {\n+            boolean clean = helpTerminate();\n+            if (((e = runState) & TERMINATED) != 0L || ctl != 0L)\n+                break;\n+            if (clean) {\n@@ -2778,0 +2785,1 @@\n+                break;\n@@ -2787,0 +2795,2 @@\n+     *\n+     * @return true if all undropped queues are now known to be empty\n@@ -2788,1 +2798,2 @@\n-    private void helpTerminate() {\n+    private boolean helpTerminate() {\n+        boolean clean = true;\n@@ -2796,1 +2807,1 @@\n-            if ((q = qs[r & (n - 1)]) != null) {\n+            if ((q = qs[r & (n - 1)]) != null && (q.source & DROPPED) == 0) {\n@@ -2805,5 +2816,6 @@\n-                    else if (t == null)\n-                        break;                     \/\/ apparently empty\n-                    else if (!U.compareAndSetReference(a, k, t, null))\n-                        break;                     \/\/ contended\n-                    else {\n+                    else if (t == null) {\n+                        if (clean && q.top - b > 0)\n+                            clean = false;\n+                        break;\n+                    }\n+                    else if (U.compareAndSetReference(a, k, t, null)) {\n@@ -2819,0 +2831,1 @@\n+        return clean;\n@@ -2831,1 +2844,1 @@\n-                q.source != DROPPED) {\n+                (q.source & DROPPED) == 0) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":33,"deletions":20,"binary":false,"changes":53,"status":"modified"}]}