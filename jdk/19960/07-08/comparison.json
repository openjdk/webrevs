{"files":[{"patch":"@@ -2279,1 +2279,1 @@\n-  void generate_aes_loadkeys(const Register &key, VectorRegister *working_vregs, int reg_number) {\n+  void generate_aes_loadkeys(const Register &key, VectorRegister *working_vregs, int rounds) {\n@@ -2281,1 +2281,1 @@\n-    for (int i = 0; i < reg_number; i++) {\n+    for (int i = 0; i < rounds; i++) {\n@@ -2289,1 +2289,1 @@\n-    assert(reg_number <= 15, \"reg_number should be less than or equal to working_vregs size\")\n+    assert(reg_number <= 15, \"reg_number should be less than or equal to working_vregs size\");\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -7225,1 +7225,1 @@\n-#if defined(PPC64) || defined(S390) || defined(RISCV)\n+#if defined(PPC64) || defined(S390) || defined(RISCV64)\n@@ -7229,2 +7229,1 @@\n-  \/\/ The ppc64 stubs of encryption and decryption use the same round keys (sessionK[0]).\n-  \/\/ The RISC-V stubs of encryption and decryption use the same round keys (sessionK[0]).\n+  \/\/ The ppc64 and RISCV64 stubs of encryption and decryption use the same round keys (sessionK[0]).\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}