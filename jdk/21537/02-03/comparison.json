{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @library \/test\/lib\n@@ -46,1 +47,1 @@\n-\n+import jdk.test.lib.security.SecurityUtils;\n@@ -58,2 +59,3 @@\n-        KeyPairGenerator kpg = KeyPairGenerator.getInstance(\"RSA\", kfp);\n-        kpg.initialize(2048);\n+        String kpgAlgorithm = \"RSA\";\n+        KeyPairGenerator kpg = KeyPairGenerator.getInstance(kpgAlgorithm, kfp);\n+        kpg.initialize(SecurityUtils.getTestKeySize(kpgAlgorithm));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/RSA\/TestOAEPPadding.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,1 @@\n+import jdk.test.lib.security.SecurityUtils;\n@@ -162,0 +163,1 @@\n+        String kpgAlgorithm = \"RSA\";\n@@ -163,1 +165,1 @@\n-        keyGen.initialize(2048);\n+        keyGen.initialize(SecurityUtils.getTestKeySize(kpgAlgorithm));\n","filename":"test\/jdk\/com\/sun\/org\/apache\/xml\/internal\/security\/SignatureKeyInfo.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @library \/test\/lib\n@@ -32,0 +33,1 @@\n+import jdk.test.lib.security.SecurityUtils;\n@@ -48,0 +50,1 @@\n+        String kpgAlgorithm = \"RSA\";\n@@ -49,1 +52,1 @@\n-            KeyPairGenerator.getInstance(\"RSA\", \"SunRsaSign\");\n+            KeyPairGenerator.getInstance(kpgAlgorithm, \"SunRsaSign\");\n@@ -51,1 +54,1 @@\n-        kpg.initialize(2048, rnd);\n+        kpg.initialize(SecurityUtils.getTestKeySize(kpgAlgorithm), rnd);\n","filename":"test\/jdk\/sun\/security\/rsa\/TestKeyPairGeneratorInit.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import jdk.test.lib.security.SecurityUtils;\n@@ -37,0 +38,1 @@\n+ * @library \/test\/lib\n@@ -45,1 +47,1 @@\n-        kpg.initialize(new RSAKeyGenParameterSpec(2048,\n+        kpg.initialize(new RSAKeyGenParameterSpec(SecurityUtils.getTestKeySize(\"RSA\"),\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/DefaultParamSpec.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,1 @@\n+import jdk.test.lib.security.SecurityUtils;\n@@ -56,0 +57,1 @@\n+ * @library \/test\/lib\n@@ -64,1 +66,1 @@\n-    private static final int KEY_SIZE = 2048;\n+    private static final int KEY_SIZE = SecurityUtils.getTestKeySize(\"RSA\");\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/SerializedPSSKey.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @library \/test\/lib\n@@ -38,0 +39,1 @@\n+import jdk.test.lib.security.SecurityUtils;\n@@ -133,0 +135,1 @@\n+        int keySize = SecurityUtils.getTestKeySize(\"RSA\");\n@@ -137,1 +140,1 @@\n-        kpg.initialize(2048);\n+        kpg.initialize(keySize);\n@@ -145,1 +148,1 @@\n-        kpg.initialize(new RSAKeyGenParameterSpec(2048, pubExp, params));\n+        kpg.initialize(new RSAKeyGenParameterSpec(keySize, pubExp, params));\n@@ -151,1 +154,1 @@\n-        kpg.initialize(new RSAKeyGenParameterSpec(2048, pubExp, params));\n+        kpg.initialize(new RSAKeyGenParameterSpec(keySize, pubExp, params));\n","filename":"test\/jdk\/sun\/security\/rsa\/pss\/TestPSSKeySupport.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"}]}