{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,0 @@\n-import java.nio.file.ProviderMismatchException;\n@@ -129,8 +128,0 @@\n-    UnixPath checkPath(Path obj) {\n-        if (obj == null)\n-            throw new NullPointerException();\n-        if (!(obj instanceof UnixPath))\n-            throw new ProviderMismatchException();\n-        return (UnixPath)obj;\n-    }\n-\n@@ -219,1 +210,1 @@\n-        UnixPath file = checkPath(obj);\n+        UnixPath file = UnixPath.toUnixPath(obj);\n@@ -236,1 +227,1 @@\n-        UnixPath file = checkPath(obj);\n+        UnixPath file = UnixPath.toUnixPath(obj);\n@@ -256,9 +247,1 @@\n-        UnixPath file = UnixPath.toUnixPath(obj);\n-        int mode = UnixFileModeAttribute\n-            .toUnixMode(UnixFileModeAttribute.ALL_READWRITE, attrs);\n-        try {\n-            return UnixChannelFactory.newFileChannel(file, options, mode);\n-        } catch (UnixException x) {\n-            x.rethrowAsIOException(file);\n-            return null;  \/\/ keep compiler happy\n-        }\n+        return newFileChannel(obj, options, attrs);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":4,"deletions":21,"binary":false,"changes":25,"status":"modified"}]}