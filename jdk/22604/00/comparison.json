{"files":[{"patch":"@@ -436,1 +436,1 @@\n-  size_initial = align_up(size_initial, os::vm_page_size());\n+  size_initial = align_up(size_initial, rs.page_size());\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -203,0 +203,1 @@\n+  assert(is_aligned(committed_size, rs.page_size()), \"must be page aligned\");\n@@ -211,7 +212,2 @@\n-  const size_t page_size = rs.page_size();\n-  const size_t granularity = os::vm_allocation_granularity();\n-  const size_t c_size = align_up(committed_size, page_size);\n-  assert(c_size <= rs.size(), \"alignment made committed size to large\");\n-\n-  os::trace_page_sizes(_name, c_size, rs.size(), rs.base(), rs.size(), page_size);\n-  if (!_memory.initialize(rs, c_size)) {\n+  os::trace_page_sizes(_name, committed_size, rs.size(), rs.base(), rs.size(), rs.page_size());\n+  if (!_memory.initialize(rs, committed_size)) {\n@@ -225,1 +221,1 @@\n-  const size_t reserved_segments_alignment = MAX2(os::vm_page_size(), granularity);\n+  const size_t reserved_segments_alignment = MAX2(os::vm_page_size(), os::vm_allocation_granularity());\n","filename":"src\/hotspot\/share\/memory\/heap.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"}]}