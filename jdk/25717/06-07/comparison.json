{"files":[{"patch":"@@ -335,4 +335,4 @@\n-\/\/ Not adding Phis to the outer loop head from the beginning, and only adding them after loop optimizations\n-\/\/ does not conform to C2's IR rules: any variable or memory slice that is mutated in a loop should have a Phi.\n-\/\/ The main motivation for such a design that doesn't conform to C2's IR rules is to allow existing loop optimizations\n-\/\/ to be mostly unaffected by the outer strip mined loop: the only extra step needed in most cases is to step over the\n+\/\/ Not adding Phis to the outer loop head from the beginning, and only adding them after loop optimizations does not\n+\/\/ conform to C2's IR rules: any variable or memory slice that is mutated in a loop should have a Phi. The main\n+\/\/ motivation for such a design that doesn't conform to C2's IR rules is to allow existing loop optimizations to be\n+\/\/ mostly unaffected by the outer strip mined loop: the only extra step needed in most cases is to step over the\n@@ -341,0 +341,5 @@\n+\/\/\n+\/\/ Adding Phis to the outer loop is largely straightforward: there needs to be one Phi in the outer loop for every Phi\n+\/\/ in the inner loop. Things may be more complicated for sunk Store nodes: there may not be any inner loop Phi left\n+\/\/ after sinking for a particular memory slice but the outer loop needs a Phi. See\n+\/\/ OuterStripMinedLoopNode::handle_sunk_stores_when_finishing_construction()\n@@ -3023,3 +3028,3 @@\n-\/\/ 1) If all Stores in the inner loop were sunk for a particular memory slice, there's no Phi left for that memory\n-\/\/    slice in the inner loop any more, and hence we did not yet add a Phi for the outer loop. So an extra Phi\n-\/\/    must now be added for each chain of sunk Stores for a particular memory slice.\n+\/\/ 1) If all Stores in the inner loop were sunk for a particular memory slice, there's no Phi left for that memory slice\n+\/\/    in the inner loop anymore, and hence we did not yet add a Phi for the outer loop. So an extra Phi must now be\n+\/\/    added for each chain of sunk Stores for a particular memory slice.\n@@ -3027,3 +3032,3 @@\n-\/\/    its backedge input wasn't wired correctly to the last Store of the chain. We had wired the memory state at\n-\/\/    the inner loop exit to the Phi backedge, but we should have taken the last Store of the chain instead. We\n-\/\/    will now have to fix that too.\n+\/\/    its backedge input wasn't wired correctly to the last Store of the chain: the backedge input was set to the\n+\/\/    backedge of the inner loop Phi instead, but it needs to be the last Store of the chain in the outer loop. We now\n+\/\/    have to fix that too.\n@@ -3201,2 +3206,3 @@\n-  \/\/ Make a clone of each phi in the inner loop\n-  \/\/ for the outer loop\n+  \/\/ Make a clone of each phi in the inner loop for the outer loop\n+  \/\/ When Stores were Sunk, after this step, a Phi may still be missing or its backedge incorrectly wired. See\n+  \/\/ handle_sunk_stores_when_finishing_construction()\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":18,"deletions":12,"binary":false,"changes":30,"status":"modified"}]}