{"files":[{"patch":"@@ -180,3 +180,4 @@\n-\/\/ the method has changed. If this method is redefined and removed, that's ok because the method passed in won't match, and\n-\/\/ this will print that one.\n-static Method* _current_method = nullptr;\n+\/\/ the method has changed. If this method is redefined and removed, that's ok because the method passed\n+\/\/ in won't match, and this will print the method passed in again. Racing threads changing this global\n+\/\/ will result in reprinting the method passed in again.\n+static Method* _method_currently_being_printed = nullptr;\n@@ -186,1 +187,1 @@\n-    BytecodePrinter printer(_current_method);\n+    BytecodePrinter printer(Atomic::load_acquire(&_method_currently_being_printed));\n@@ -188,2 +189,2 @@\n-    \/\/ Save current method to detect when method printing changes.\n-    Atomic::release_store(&_current_method, method());\n+    \/\/ Save method currently being printed to detect when method printing changes.\n+    Atomic::release_store(&_method_currently_being_printed, method());\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeTracer.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}