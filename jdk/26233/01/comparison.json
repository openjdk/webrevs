{"files":[{"patch":"@@ -38,0 +38,1 @@\n+#include \"memory\/universe.hpp\"\n@@ -436,3 +437,3 @@\n-  Handle hm(JavaThread::current(), klass->java_mirror());\n-  jobject hmj = JNIHandles::make_global(hm);\n-  _holder_mirror = hmj;\n+  \/\/ The OopHandle constructor will allocate a handle. We don't need to ever release it so we don't preserve\n+  \/\/ the handle object.\n+  OopHandle handle(Universe::vm_global(), klass->java_mirror());\n@@ -762,1 +763,0 @@\n-  _holder_mirror = nullptr;\n","filename":"src\/hotspot\/share\/oops\/trainingData.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -434,1 +434,0 @@\n-  jobject _holder_mirror;   \/\/ extra link to prevent unloading by GC\n@@ -457,1 +456,0 @@\n-\n","filename":"src\/hotspot\/share\/oops\/trainingData.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}