{"files":[{"patch":"@@ -38,0 +38,1 @@\n+#include \"oops\/access.hpp\"\n@@ -436,3 +437,5 @@\n-  Handle hm(JavaThread::current(), klass->java_mirror());\n-  jobject hmj = JNIHandles::make_global(hm);\n-  _holder_mirror = hmj;\n+  oop* handle = oop_storage()->allocate();\n+  if (handle == nullptr) {\n+    vm_exit_out_of_memory(sizeof(oop), OOM_MALLOC_ERROR, \"Cannot allocate oop storage for mirror\");\n+  }\n+  NativeAccess<>::oop_store(handle, klass->java_mirror());\n@@ -762,1 +765,0 @@\n-  _holder_mirror = nullptr;\n","filename":"src\/hotspot\/share\/oops\/trainingData.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"memory\/universe.hpp\"\n@@ -434,1 +435,0 @@\n-  jobject _holder_mirror;   \/\/ extra link to prevent unloading by GC\n@@ -457,1 +457,3 @@\n-\n+  static OopStorage* oop_storage() {\n+    return Universe::vm_global();\n+  }\n","filename":"src\/hotspot\/share\/oops\/trainingData.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}