{"files":[{"patch":"@@ -141,12 +141,5 @@\n-        \/*\n-         * Because aix and musl intentionally pollute the LD_LIBRARY_PATH,\n-         * it does not make sense to make this test somehow passing with\n-         * crude workarounds, which even do not work in any case. So we\n-         * skip this sub test for aix and musl.\n-         *\/\n-        if (!IS_EXPANDED_LD_LIBRARY_PATH) {\n-            Map<String, String> env = new HashMap<>();\n-            for (String x : LD_PATH_STRINGS) {\n-                String pairs[] = x.split(\"=\");\n-                env.put(pairs[0], pairs[1]);\n-            }\n+        Map<String, String> env = new HashMap<>();\n+        for (String x : LD_PATH_STRINGS) {\n+            String pairs[] = x.split(\"=\");\n+            env.put(pairs[0], pairs[1]);\n+        }\n@@ -154,2 +147,2 @@\n-            TestResult tr =\n-                doExec(env, javaCmd, \"-jar\", testJarFile.getAbsolutePath());\n+        TestResult tr =\n+            doExec(env, javaCmd, \"-jar\", testJarFile.getAbsolutePath());\n@@ -157,3 +150,3 @@\n-            if (!tr.isNotZeroOutput()) {\n-                flagError(tr, \"Error: No output at all. Did the test execute ?\");\n-            }\n+        if (!tr.isNotZeroOutput()) {\n+            flagError(tr, \"Error: No output at all. Did the test execute ?\");\n+        }\n@@ -161,2 +154,18 @@\n-            for (String x : LD_PATH_STRINGS) {\n-                if (!tr.contains(x)) {\n+        for (String x : LD_PATH_STRINGS) {\n+            if (!tr.contains(x)) {\n+                if (IS_EXPANDED_LD_LIBRARY_PATH && x.startsWith(LD_LIBRARY_PATH)) {\n+                    \/\/ AIX does not support the '-rpath' linker options so the\n+                    \/\/ launchers have to prepend the jdk library path to 'LIBPATH'.\n+                    \/\/ The musl library loader requires LD_LIBRARY_PATH to be set in\n+                    \/\/ order to correctly resolve the dependency libjava.so has on libjvm.so.\n+                    String jvmroot = System.getProperty(\"java.home\");\n+                    String libPath = LD_LIBRARY_PATH + \"=\" +\n+                        jvmroot + \"\/lib\/server\" + System.getProperty(\"path.separator\") +\n+                        jvmroot + \"\/lib\" + System.getProperty(\"path.separator\") +\n+                        jvmroot + \"\/..\/lib\" +\n+                        System.getProperty(\"path.separator\") + LD_LIBRARY_PATH_VALUE;\n+                    if (!tr.matches(libPath)) {\n+                        flagError(tr, \"FAIL: did not get <\" + libPath + \">\");\n+                    }\n+                }\n+                else {\n","filename":"test\/jdk\/tools\/launcher\/ExecutionEnvironment.java","additions":28,"deletions":19,"binary":false,"changes":47,"status":"modified"}]}