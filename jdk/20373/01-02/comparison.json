{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,3 +34,1 @@\n- * @run main\/othervm\/timeout=100 -Djdk.tracePinnedThreads=full TestPinCaseWithTrace\n- * @run main\/othervm\/timeout=100 -javaagent:TestPinCaseWithTrace.jar TestPinCaseWithTrace\n- * @run main\/othervm\/timeout=100 -Djdk.tracePinnedThreads=full -javaagent:TestPinCaseWithTrace.jar TestPinCaseWithTrace\n+ * @run main\/othervm\/timeout=100  -Djdk.virtualThreadScheduler.maxPoolSize=1 -Djdk.tracePinnedThreads=full -javaagent:TestPinCaseWithTrace.jar TestPinCaseWithTrace\n@@ -38,4 +36,0 @@\n-import java.util.concurrent.*;\n-import java.lang.reflect.Constructor;\n-import java.lang.reflect.InvocationTargetException;\n-\n@@ -61,3 +55,1 @@\n-        ExecutorService scheduler = Executors.newFixedThreadPool(1);\n-        Thread.Builder builder = TestPinCaseWithTrace.virtualThreadBuilder(scheduler);\n-        Thread t1 = builder.name(\"vthread-1\").start(() -> {\n+        Thread t1 = Thread.ofVirtual().name(\"vthread-1\").start(() -> {\n@@ -66,0 +58,1 @@\n+        t1.join();\n@@ -70,1 +63,1 @@\n-            Thread.sleep(500); \/\/ try yield, will pin, javaagent+tracePinnedThreads will crash here (because of the class `PinnedThreadPrinter`)\n+            Thread.sleep(500); \/\/ try yield, will pin, javaagent + tracePinnedThreads will crash here (because of the class `PinnedThreadPrinter`)\n@@ -83,18 +76,0 @@\n-\n-    private static Thread.Builder.OfVirtual virtualThreadBuilder(Executor scheduler) {\n-        Thread.Builder.OfVirtual builder = Thread.ofVirtual();\n-        try {\n-            Class<?> clazz = Class.forName(\"java.lang.ThreadBuilders$VirtualThreadBuilder\");\n-            Constructor<?> ctor = clazz.getDeclaredConstructor(Executor.class);\n-            ctor.setAccessible(true);\n-            return (Thread.Builder.OfVirtual) ctor.newInstance(scheduler);\n-        } catch (InvocationTargetException e) {\n-            Throwable cause = e.getCause();\n-            if (cause instanceof RuntimeException re) {\n-                throw re;\n-            }\n-            throw new RuntimeException(e);\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadTraceWithAgent\/TestPinCaseWithTrace.java","additions":5,"deletions":30,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n-    jmethodID nativeBaz = (*env)->GetStaticMethodID(env, klass, \"native2Java\", \"(I)I\");\n-    jint r = (*env)->CallStaticIntMethod(env, klass, nativeBaz, x+1);\n+    jmethodID m = (*env)->GetStaticMethodID(env, klass, \"native2Java\", \"(I)I\");\n+    jint r = (*env)->CallStaticIntMethod(env, klass, m, x+1);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadTraceWithAgent\/libPinJNI.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}