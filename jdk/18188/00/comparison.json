{"files":[{"patch":"@@ -981,4 +981,6 @@\n-    \/\/ Check assumption that an object is not potentially\n-    \/\/ discovered twice except by concurrent collectors that potentially\n-    \/\/ trace the same Reference object twice.\n-    assert(UseG1GC, \"Only possible with a concurrent marking collector\");\n+    \/\/ Encountering an already-discovered non-strong ref because G1 can restart\n+    \/\/ concurrent marking on marking-stack overflow. Must continue to treat\n+    \/\/ this non-strong ref as discovered to avoid keeping the referent\n+    \/\/ unnecessarily alive.\n+    assert(UseG1GC, \"inv\");\n+    assert(_discovery_is_concurrent, \"inv\");\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}