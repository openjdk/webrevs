{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,3 +32,0 @@\n-import java.security.AccessController;\n-import java.security.Permission;\n-import java.security.PrivilegedAction;\n@@ -40,4 +37,0 @@\n- * <p>\n- * ReflectionFactory access is restricted, if a security manager is active,\n- * unless the permission {@code RuntimePermission(\"reflectionFactoryAccess\")}\n- * is granted.\n@@ -48,7 +41,2 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final jdk.internal.reflect.ReflectionFactory delegate = AccessController.doPrivileged(\n-            new PrivilegedAction<jdk.internal.reflect.ReflectionFactory>() {\n-                public jdk.internal.reflect.ReflectionFactory run() {\n-                    return jdk.internal.reflect.ReflectionFactory.getReflectionFactory();\n-                }\n-            });\n+    private static final jdk.internal.reflect.ReflectionFactory delegate =\n+            jdk.internal.reflect.ReflectionFactory.getReflectionFactory();\n@@ -58,3 +46,0 @@\n-    private static final Permission REFLECTION_FACTORY_ACCESS_PERM\n-            = new RuntimePermission(\"reflectionFactoryAccess\");\n-\n@@ -65,5 +50,0 @@\n-     * <p> First, if there is a security manager, its {@code checkPermission}\n-     * method is called with a {@link java.lang.RuntimePermission} with target\n-     * {@code \"reflectionFactoryAccess\"}.  This may result in a security\n-     * exception.\n-     *\n@@ -76,3 +56,0 @@\n-     * @throws SecurityException if a security manager exists and its\n-     *         {@code checkPermission} method doesn't allow access to\n-     *         the RuntimePermission \"reflectionFactoryAccess\".\n@@ -81,5 +58,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n-        if (security != null) {\n-            security.checkPermission(REFLECTION_FACTORY_ACCESS_PERM);\n-        }\n","filename":"src\/jdk.unsupported\/share\/classes\/sun\/reflect\/ReflectionFactory.java","additions":3,"deletions":31,"binary":false,"changes":34,"status":"modified"}]}