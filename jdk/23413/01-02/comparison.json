{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -330,1 +330,1 @@\n-    @IR(counts = {IRNode.STORE_VECTOR, \"= 0\"},\n+    @IR(counts = {IRNode.STORE_VECTOR, \"> 0\"},\n@@ -332,1 +332,2 @@\n-        applyIfCPUFeatureOr = {\"sse4.1\", \"true\", \"asimd\", \"true\"})\n+        applyIf = {\"AlignVector\", \"false\"},\n+        applyIfCPUFeature = {\"avx\", \"true\"})\n@@ -335,1 +336,0 @@\n-    \/\/ Vector code would need a conversion. We may add this in the future.\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestCompatibleUseDefTypeSize.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,3 +255,2 @@\n-    \/\/ Note that right shift operations on subword expressions cannot be\n-    \/\/ vectorized since precise type info about signedness is missing.\n-    @IR(failOn = {IRNode.STORE_VECTOR})\n+    @IR(applyIfCPUFeature = {\"avx\", \"true\"},\n+            counts = {IRNode.RSHIFT_VI, \">0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/runner\/ArrayShiftOpTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}