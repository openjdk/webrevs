{"files":[{"patch":"@@ -312,1 +312,2 @@\n-                                   Float.toHexString(f) + \"\/\" + Integer.toHexString(i) + \" to binary16 and back: \" + Integer.toHexString(0xffff & f_as_bin16) + \" f_prime: \" + Float.toHexString(f_prime));\n+                                   Float.toHexString(f) + \"\/\" + Integer.toHexString(i) + \" to binary16 and back: \" +\n+                                   Integer.toHexString(0xffff & f_as_bin16) + \" f_prime: \" + Float.toHexString(f_prime));\n@@ -329,1 +330,1 @@\n-            short s2 =    testAltFloatToFloat16(f);\n+            short s2 = testAltFloatToFloat16(f);\n@@ -333,1 +334,2 @@\n-                System.out.println(\"Different conversion of float value \" + Float.toHexString(f));\n+                System.out.println(\"Different conversion of float value 1 (\" + f + \"\/\" + Integer.toHexString(Float.floatToRawIntBits(f)) + \"): \" +\n+                                    Integer.toHexString(s1 & 0xffff) + \"(\" + s1 + \")\" + \" != \" + Integer.toHexString(s2 & 0xffff) + \"(\" + s2 + \")\");\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/float16\/Binary16Conversion.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -56,1 +56,2 @@\n-    public static void verify(short sVal, float fVal, short sRes) {\n+    public static int verify(short sVal, float fVal, short sRes, String prefix) {\n+        int errors = 0;\n@@ -59,0 +60,1 @@\n+                errors++;\n@@ -62,1 +64,2 @@\n-              throw new RuntimeException(\"Inconsistent result for Float.floatToFloat16(\" + fVal + \"\/\" + fVal_hex + \"): \" + sRes_hex + \" != \" + sVal_hex);\n+                System.out.println(prefix + \"Inconsistent result for Float.floatToFloat16(\" + fVal + \"\/\" + fVal_hex + \"): \" +\n+                                   sRes_hex + \"(\" + sRes + \")\" + \" != \" + sVal_hex + \"(\" + sVal + \")\");\n@@ -65,0 +68,1 @@\n+        return errors;\n@@ -67,1 +71,2 @@\n-    public static void run() {\n+    public static int run() {\n+        int errors = 0;\n@@ -72,1 +77,1 @@\n-            verify(sVal, fVal, sRes);\n+            errors += verify(sVal, fVal, sRes, \"testFloatToFloat16: \");\n@@ -75,0 +80,1 @@\n+                errors++;\n@@ -78,1 +84,2 @@\n-                throw new RuntimeException(\"Inconsistent result for Float.float16ToFloat(\" + sVal_hex + \"): \" + fRes + \"\/\" + fRes_hex + \" != \" + fVal + \"\/\" + fVal_hex);\n+                System.out.println(\"Non-NaN res: \" + \"Inconsistent result for Float.float16ToFloat(\" + sVal_hex + \"): \" +\n+                                   fRes + \"\/\" + fRes_hex + \" != \" + fVal + \"\/\" + fVal_hex);\n@@ -81,1 +88,1 @@\n-            verify(sVal, fVal, sRes);\n+            errors += verify(sVal, fVal, sRes, \"testRoundTrip: \");\n@@ -83,0 +90,1 @@\n+                errors++;\n@@ -85,2 +93,3 @@\n-                String sfVal_hex = Integer.toHexString(Float.floatToFloat16(fVal)& 0xffff);\n-                throw new RuntimeException(\"Inconsistent result for Float.float16ToFloat(\" + sVal_hex + \"): \" + sfRes_hex + \" != \" + sfVal_hex);\n+                String sfVal_hex = Integer.toHexString(Float.floatToFloat16(fVal) & 0xffff);\n+                System.out.println(\"Float16 not equal: \" + \"Inconsistent result for Float.float16ToFloat(\" + sVal_hex + \"): \" +\n+                                   sfRes_hex + \" != \" + sfVal_hex);\n@@ -89,0 +98,1 @@\n+        return errors;\n@@ -92,0 +102,1 @@\n+        int errors = 0;\n@@ -94,1 +105,4 @@\n-            run();\n+            errors += run();\n+        }\n+        if (errors > 0) {\n+            throw new RuntimeException(errors + \" errors\");\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/float16\/TestAllFloat16ToFloat.java","additions":23,"deletions":9,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -130,1 +130,2 @@\n-    public static void run() {\n+    public static int run() {\n+        int errors = 0;\n@@ -138,0 +139,1 @@\n+                errors++;\n@@ -141,1 +143,2 @@\n-                throw new RuntimeException(\"Inconsistent result for Float.float16ToFloat(\" + cVal_hex + \"): \" + fRes[i] + \"\/\" + fRes_hex + \" != \" + fVal + \"\/\" + fVal_hex);\n+                System.out.println(\"Inconsistent result for Float.float16ToFloat(\" + cVal_hex + \"): \" +\n+                                    fRes[i] + \"\/\" + fRes_hex + \" != \" + fVal + \"\/\" + fVal_hex);\n@@ -151,0 +154,1 @@\n+                errors++;\n@@ -154,1 +158,2 @@\n-                throw new RuntimeException(\"Inconsistent result for Float.floatToFloat16(\" + fCon[i] + \"\/\" + cVal_hex + \"): \" + sRes_hex + \" != \" + sVal_hex);\n+                System.out.println(\"Inconsistent result for Float.floatToFloat16(\" + fCon[i] + \"\/\" + cVal_hex + \"): \" +\n+                                    sRes_hex + \"(\" + sRes + \")\" + \" != \" + sVal_hex + \"(\" + sVal + \")\");\n@@ -157,0 +162,1 @@\n+        return errors;\n@@ -161,0 +167,1 @@\n+        int errors = 0;\n@@ -163,1 +170,4 @@\n-            run();\n+            errors += run();\n+        }\n+        if (errors > 0) {\n+            throw new RuntimeException(errors + \" errors\");\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/float16\/TestConstFloat16ToFloat.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"}]}