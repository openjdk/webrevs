{"files":[{"patch":"@@ -30,1 +30,0 @@\n-#include \"runtime\/os.hpp\"\n@@ -124,18 +123,0 @@\n-#ifndef VENDOR_PADDING\n-# define VENDOR_PADDING 64\n-#endif\n-#ifndef VENDOR\n-# define VENDOR  \"Oracle Corporation\"\n-#endif\n-\n-static const char vm_vendor_string[sizeof(VENDOR) < VENDOR_PADDING ? VENDOR_PADDING : sizeof(VENDOR)] = VENDOR;\n-const char* Abstract_VM_Version::_vm_vendor = vm_vendor_string;\n-\n-const char* Abstract_VM_Version::vm_vendor() {\n-  return _vm_vendor;\n-}\n-\n-void Abstract_VM_Version::set_vm_vendor(const char* vm_vendor) {\n-  _vm_vendor = os::strdup(vm_vendor);\n-}\n-\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.cpp","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -81,3 +81,0 @@\n-  \/\/ Allow Jlink to override vendor from java.lang.VersionProps\n-  static const char*  _vm_vendor;\n-\n@@ -110,3 +107,0 @@\n-  \/\/ Vendor\n-  static const char* vm_vendor();\n-  static void set_vm_vendor(const char* vm_vendor);\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -713,0 +713,1 @@\n+const char* JDK_Version::_runtime_vendor_vm;\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -81,0 +81,1 @@\n+  static const char* _runtime_vendor_vm;\n@@ -162,0 +163,7 @@\n+  static const char* runtime_vendor_vm() {\n+    return _runtime_vendor_vm;\n+  }\n+  static void set_runtime_vendor_vm(const char* vendor_vm) {\n+    _runtime_vendor_vm = os::strdup(vendor_vm);\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/java.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -261,1 +261,1 @@\n-  add_property_constant(JAVA_PROPERTY, \"java.vm.vendor\", VM_Version::vm_vendor(), CHECK);\n+  add_property_constant(JAVA_PROPERTY, \"java.vm.vendor\", JDK_Version::runtime_vendor_vm(), CHECK);\n","filename":"src\/hotspot\/share\/runtime\/statSampler.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -399,1 +399,1 @@\n-    JDK_Version::set_runtime_vendor_vm_bug_url(get_java_version_info(ik, vmSymbols::java_runtime_vendor_vm_bug_url_name()));\n+    JDK_Version::set_runtime_vendor_vm(get_java_version_info(ik, vmSymbols::java_runtime_vendor_vm_name()));\n@@ -401,1 +401,1 @@\n-    VM_Version::set_vm_vendor(get_java_version_info(ik, vmSymbols::java_runtime_vendor_vm_name()));\n+    JDK_Version::set_runtime_vendor_vm_bug_url(get_java_version_info(ik, vmSymbols::java_runtime_vendor_vm_bug_url_name()));\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -82,0 +82,3 @@\n+    private static String VENDOR_VM =\n+        \"@@VENDOR@@\";\n+\n@@ -97,3 +100,0 @@\n-    private static String VENDOR_VM =\n-        \"@@VENDOR@@\";\n-\n@@ -124,0 +124,1 @@\n+        props.put(\"java.vm.vendor\", VENDOR_VM);\n@@ -126,3 +127,0 @@\n-\n-        \/\/ In case VM is not yet set this property\n-        props.putIfAbsent(\"java.vm.vendor\", VENDOR_VM);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/VersionProps.java.template","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * Plugin to set the vendor, by redefining the static field\n- * java.lang.VersionProps.VENDOR\n+ * Plugin to set the vendor for the VM, by redefining the static field\n+ * java.lang.VersionProps.VENDOR_VM\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/VendorVMPlugin.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-Override the vendor bug URL baked into the build.  The value\\n\\\n+Override the vendor URL baked into the build.  The value\\n\\\n@@ -230,1 +230,1 @@\n-\\                            Override the vendor bug URL baked into the build.\\n\\\n+\\                            Override the vendor URL baked into the build.\\n\\\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/plugins.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @bug 8232080\n+ * @bug 8232080 8342035\n","filename":"test\/jdk\/tools\/jlink\/plugins\/VendorInfoPluginsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}