{"files":[{"patch":"@@ -276,10 +276,1 @@\n-  # COMPANY_NAME is set to \"N\/A\" in make\/conf\/branding.conf by default,\n-  # but can be customized with the '--with-vendor-name' configure option.\n-  # Only export \"VENDOR\" to the build if COMPANY_NAME contains a real value.\n-  # Otherwise the default value for VENDOR, which is used to set the \"java.vendor\"\n-  # and \"java.vm.vendor\" properties is hard-coded into the source code (i.e. in\n-  # VersionProps.java.template in the jdk for \"java.vendor\" and\n-  # vm_version.cpp in the VM for \"java.vm.vendor\")\n-  ifneq ($(COMPANY_NAME), N\/A)\n-    VERSION_CFLAGS += -DVENDOR='\"$(COMPANY_NAME)\"'\n-  endif\n+  VERSION_CFLAGS += -DVENDOR='\"$(COMPANY_NAME)\"'\n","filename":"make\/autoconf\/spec.gmk.template","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -158,0 +158,1 @@\n+  template(java_runtime_vendor_vm_name,               \"VENDOR_VM\")                                \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"runtime\/os.hpp\"\n@@ -131,0 +132,1 @@\n+const char* Abstract_VM_Version::_vm_vendor = vm_vendor_string;\n@@ -133,1 +135,1 @@\n-  return vm_vendor_string;\n+  return _vm_vendor;\n@@ -136,0 +138,3 @@\n+void Abstract_VM_Version::set_vm_vendor(const char* vm_vendor) {\n+  _vm_vendor = os::strdup(vm_vendor);\n+}\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -81,0 +81,3 @@\n+  \/\/ Allow Jlink to override vendor from java.lang.VersionProps\n+  static const char*  _vm_vendor;\n+\n@@ -109,0 +112,2 @@\n+  static void set_vm_vendor(const char* vm_vendor);\n+\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -434,2 +434,0 @@\n-  PropertyList_add(&_system_properties,\n-      new SystemProperty(\"java.vm.vendor\", VM_Version::vm_vendor(),  false));\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -204,2 +204,2 @@\n-  assert(strcmp(value, system_value) == 0, \"property value mustn't differ from System.getProperty. Our value is: %s, System.getProperty is: %s\",\n-         value, system_value);\n+  assert(strcmp(value, system_value) == 0, \"property %s value mustn't differ from System.getProperty. Our value is: %s, System.getProperty is: %s\",\n+         name, value, system_value);\n","filename":"src\/hotspot\/share\/runtime\/statSampler.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -400,0 +400,2 @@\n+\n+    VM_Version::set_vm_vendor(get_java_version_info(ik, vmSymbols::java_runtime_vendor_vm_name()));\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,5 +75,0 @@\n-    private static final String VENDOR =\n-        \"@@VENDOR@@\";\n-\n-    private static final String VENDOR_URL =\n-        \"@@VENDOR_URL@@\";\n@@ -84,0 +79,6 @@\n+    private static String VENDOR =\n+        \"@@VENDOR@@\";\n+\n+    private static String VENDOR_URL =\n+        \"@@VENDOR_URL@@\";\n+\n@@ -96,0 +97,3 @@\n+    private static String VENDOR_VM =\n+        \"@@VENDOR@@\";\n+\n@@ -122,0 +126,3 @@\n+\n+        \/\/ In case VM is not yet set this property\n+        props.putIfAbsent(\"java.vm.vendor\", VENDOR_VM);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/VersionProps.java.template","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.tools.jlink.internal.plugins;\n+\n+\/**\n+ * Plugin to set the vendor, by redefining the static field\n+ * java.lang.VersionProps.VENDOR\n+ *\/\n+public final class VendorPlugin extends VersionPropsPlugin {\n+\n+    public VendorPlugin() {\n+        super(\"VENDOR\", \"vendor\");\n+    }\n+\n+}\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/VendorPlugin.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.tools.jlink.internal.plugins;\n+\n+\/**\n+ * Plugin to set the vendor URL, by redefining the static field\n+ * java.lang.VersionProps.VENDOR_URL\n+ *\/\n+public final class VendorURLPlugin extends VersionPropsPlugin {\n+\n+    public VendorURLPlugin() {\n+        super(\"VENDOR_URL\", \"vendor-url\");\n+    }\n+\n+}\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/VendorURLPlugin.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.tools.jlink.internal.plugins;\n+\n+\/**\n+ * Plugin to set the vendor, by redefining the static field\n+ * java.lang.VersionProps.VENDOR\n+ *\/\n+public final class VendorVMPlugin extends VersionPropsPlugin {\n+\n+    public VendorVMPlugin() {\n+        super(\"VENDOR_VM\");\n+    }\n+\n+}\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/VendorVMPlugin.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -210,0 +210,24 @@\n+vendor.argument=<vendor>\n+\n+vendor.description=\\\n+Override the vendor string baked into the build, if any.\\n\\\n+The value of the system property \"java.vendor\" will be <vendor>.\n+\n+vendor.usage=\\\n+\\  --vendor <vendor>\\n\\\n+\\                            Override the vendor string baked into the build,\\n\\\n+\\                            if any. The value of the system property\\n\\\n+\\                            \"java.vendor\" will be <vendor>.\n+\n+vendor-url.argument=<vendor-url>\n+\n+vendor-url.description=\\\n+Override the vendor bug URL baked into the build.  The value\\n\\\n+of the system property \"java.vendor.url\" will be <vendor-url>.\n+\n+vendor-url.usage=\\\n+\\  --vendor-url <vendor-url>\\n\\\n+\\                            Override the vendor bug URL baked into the build.\\n\\\n+\\                            The value of the system property\\n\\\n+\\                            \"java.vendor.url\" will be <vendor-url>.\n+\n@@ -234,0 +258,12 @@\n+vendor-vm.argument=<vendor>\n+\n+vendor-vm.description=\\\n+Override the vendor string baked into the build, if any.\\n\\\n+The value of the system property \"java.vm.vendor\" will be <vendor>.\n+\n+vendor-vm.usage=\\\n+\\  --vendor-vm <vendor>\\n\\\n+\\                            Override the vendor string baked into the build,\\n\\\n+\\                            if any. The value of the system property\\n\\\n+\\                            \"java.vm.vendor\" will be <vendor>.\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/plugins.properties","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -84,0 +84,3 @@\n+        jdk.tools.jlink.internal.plugins.VendorPlugin,\n+        jdk.tools.jlink.internal.plugins.VendorVMPlugin,\n+        jdk.tools.jlink.internal.plugins.VendorURLPlugin,\n","filename":"src\/jdk.jlink\/share\/classes\/module-info.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -61,0 +61,3 @@\n+    private static final String VENDOR = \"Example Corp.\";\n+    private static final String VENDOR_URL = \"https:\/\/example.com\";\n+    private static final String VENDOR_VM = \"Example VM\";\n@@ -76,1 +79,4 @@\n-                \"--vendor-vm-bug-url\", VM_BUG_URL },\n+                \"--vendor-vm-bug-url\", VM_BUG_URL,\n+                \"--vendor\", VENDOR,\n+                \"--vendor-url\", VENDOR_URL,\n+                \"--vendor-vm\", VENDOR_VM },\n@@ -93,0 +99,3 @@\n+        oa.stderrShouldMatch(\"^ +java.vendor = \" + VENDOR + \"$\");\n+        oa.stderrShouldMatch(\"^ +java.vendor.url = \" + VENDOR_URL + \"$\");\n+        oa.stderrShouldMatch(\"^ +java.vm.vendor = \" + VENDOR_VM + \"$\");\n","filename":"test\/jdk\/tools\/jlink\/plugins\/VendorInfoPluginsTest.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}