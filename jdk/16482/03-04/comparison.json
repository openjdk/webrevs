{"files":[{"patch":"@@ -131,1 +131,1 @@\n-            recvtype = msym.implicitReceiverType();\n+            recvtype = null;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/MemberEnter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2336,2 +2336,5 @@\n-            if (mt.recvtype != null) {\n-                mt.recvtype = addTypeAnnotations(mt.recvtype, TargetType.METHOD_RECEIVER);\n+\n+            Type recvtype = mt.recvtype != null ? mt.recvtype : s.implicitReceiverType();\n+            Type annotated = addTypeAnnotations(recvtype, TargetType.METHOD_RECEIVER);\n+            if (annotated != recvtype) {\n+                mt.recvtype = annotated;\n@@ -2643,1 +2646,0 @@\n-        m.type.asMethodType().recvtype = m.implicitReceiverType();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8222369 8225488 8319196\n+ * @bug 8222369 8225488\n@@ -112,0 +112,3 @@\n+@Target(ElementType.TYPE_USE)\n+@interface TA {}\n+\n@@ -122,1 +125,1 @@\n-    @ReceiverTypeKind(value = TypeKind.DECLARED, type = \"MethodHost\")\n+    @ReceiverTypeKind(TypeKind.NONE)\n@@ -125,2 +128,2 @@\n-    @ReceiverTypeKind(value = TypeKind.DECLARED, type = \"MethodHost\")\n-    public void quux(MethodHost this) {return;}\n+    @ReceiverTypeKind(value = TypeKind.DECLARED, type = \"@TA MethodHost\")\n+    public void quux(@TA MethodHost this) {return;}\n@@ -129,2 +132,2 @@\n-        @ReceiverTypeKind(value = TypeKind.DECLARED, type = \"MethodHost\")\n-        public Nested(MethodHost MethodHost.this) {}\n+        @ReceiverTypeKind(value = TypeKind.DECLARED, type = \"@TA MethodHost\")\n+        public Nested(@TA MethodHost MethodHost.this) {}\n@@ -132,1 +135,1 @@\n-        @ReceiverTypeKind(value = TypeKind.DECLARED, type = \"MethodHost\")\n+        @ReceiverTypeKind(TypeKind.NONE)\n@@ -143,2 +146,2 @@\n-        @ReceiverTypeKind(value = TypeKind.DECLARED, type = \"MethodHost.Generic<X>\")\n-        GenericNested(Generic<X> Generic.this) {}\n+        @ReceiverTypeKind(value = TypeKind.DECLARED, type = \"MethodHost.@TA Generic<X>\")\n+        GenericNested(@TA Generic<X> Generic.this) {}\n@@ -146,1 +149,1 @@\n-        @ReceiverTypeKind(value = TypeKind.DECLARED, type = \"MethodHost.Generic<X>\")\n+        @ReceiverTypeKind(TypeKind.NONE)\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/element\/TestExecutableReceiverType.java","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -476,1 +476,1 @@\n-    @Test(posn=8, annoType=TA.class, expect=\"4\")\n+    @Test(posn=3, annoType=TA.class, expect=\"4\")\n@@ -482,1 +482,1 @@\n-    @Test(posn=9, annoType=TA.class, expect=\"6\")\n+    @Test(posn=4, annoType=TA.class, expect=\"6\")\n@@ -486,1 +486,1 @@\n-    @Test(posn=13, annoType=TA.class, expect=\"8\")\n+    @Test(posn=8, annoType=TA.class, expect=\"8\")\n@@ -533,2 +533,2 @@\n-    @Test(posn=11, annoType = TA.class, expect = \"25\")\n-    @Test(posn=11, annoType = TB.class, expect = \"26\")\n+    @Test(posn=6, annoType = TA.class, expect = \"25\")\n+    @Test(posn=6, annoType = TB.class, expect = \"26\")\n@@ -544,1 +544,1 @@\n-    @Test(posn=11, annoType = TB.class, expect = \"41\")\n+    @Test(posn=6, annoType = TB.class, expect = \"41\")\n@@ -553,2 +553,2 @@\n-    @Test(posn=11, annoType = TA.class, expect = \"60\")\n-    @Test(posn=11, annoType = TB.class, expect = \"61\")\n+    @Test(posn=6, annoType = TA.class, expect = \"60\")\n+    @Test(posn=6, annoType = TB.class, expect = \"61\")\n@@ -564,1 +564,1 @@\n-    @Test(posn=11, annoType = TB.class, expect = \"81\")\n+    @Test(posn=6, annoType = TB.class, expect = \"81\")\n@@ -581,0 +581,10 @@\n+\n+        @Test(posn=2, annoType = TA.class, expect = \"111\")\n+        Inner110(@TA(111) BasicAnnoTests BasicAnnoTests.this) {}\n+    }\n+\n+    static class GenericInner120<X> {\n+        private class GenericNested<Y> {\n+            @Test(posn=2, annoType = TA.class, expect = \"120\")\n+            GenericNested(@TA(120) GenericInner120<X> GenericInner120.this) {}\n+        }\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/BasicAnnoTests.java","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -141,4 +141,4 @@\n-        (byte) 0xDD, (byte) 0x66, (byte) 0x1F, (byte) 0x0C,\n-        (byte) 0x64, (byte) 0x71, (byte) 0x62, (byte) 0x1E,\n-        (byte) 0x7E, (byte) 0xBC, (byte) 0x06, (byte) 0x1D,\n-        (byte) 0x5D, (byte) 0x82, (byte) 0x62, (byte) 0x59\n+        (byte) 0x10, (byte) 0xE6, (byte) 0xE8, (byte) 0x11,\n+        (byte) 0xC8, (byte) 0x02, (byte) 0x63, (byte) 0x9B,\n+        (byte) 0xAB, (byte) 0x11, (byte) 0x9E, (byte) 0x4F,\n+        (byte) 0xFA, (byte) 0x00, (byte) 0x6D, (byte) 0x81\n","filename":"test\/langtools\/tools\/javac\/sym\/ElementStructureTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}