{"files":[{"patch":"@@ -41,1 +41,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -177,1 +176,0 @@\n-                ReflectUtil.checkPackageAccess(clazz);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaUtils.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import static sun.reflect.misc.ReflectUtil.checkPackageAccess;\n-\n@@ -59,1 +57,0 @@\n-        checkPackageAccess(name);\n@@ -98,1 +95,0 @@\n-        checkPackageAccess(name);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/beans\/finder\/ClassFinder.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import static sun.reflect.misc.ReflectUtil.isPackageAccessible;\n@@ -84,1 +83,1 @@\n-        if (!Modifier.isPublic(type.getModifiers()) || !isPackageAccessible(type)) {\n+        if (!Modifier.isPublic(type.getModifiers())) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/beans\/finder\/ConstructorFinder.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import static sun.reflect.misc.ReflectUtil.isPackageAccessible;\n-\n@@ -65,1 +63,1 @@\n-        if (!Modifier.isPublic(type.getModifiers()) || !isPackageAccessible(type)) {\n+        if (!Modifier.isPublic(type.getModifiers())) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/beans\/finder\/FieldFinder.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import static sun.reflect.misc.ReflectUtil.isPackageAccessible;\n@@ -82,1 +81,1 @@\n-            return (method == null) || isPackageAccessible(method.getDeclaringClass()) ? method : CACHE.create(signature);\n+            return (method == null) ? method : CACHE.create(signature);\n@@ -141,1 +140,1 @@\n-        if (Modifier.isPublic(type.getModifiers()) && isPackageAccessible(type)) {\n+        if (Modifier.isPublic(type.getModifiers())) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/beans\/finder\/MethodFinder.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,2 +34,0 @@\n-import static sun.reflect.misc.ReflectUtil.checkPackageAccess;\n-\n@@ -51,1 +49,0 @@\n-            checkPackageAccess(type);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/beans\/introspect\/ClassInfo.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,2 +42,0 @@\n-import sun.reflect.misc.ReflectUtil;\n-\n@@ -98,1 +96,0 @@\n-                            ReflectUtil.checkPackageAccess(c);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/JARSoundbankReader.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-import sun.reflect.misc.*;\n+import sun.reflect.misc.MethodUtil;\n@@ -225,3 +225,0 @@\n-            if (!ReflectUtil.isPackageAccessible(field.getDeclaringClass())) {\n-                continue;\n-            }\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/DefaultPersistenceDelegate.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -694,1 +693,0 @@\n-        ReflectUtil.checkPackageAccess(type);\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/EventHandler.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -189,3 +188,0 @@\n-        if (!ReflectUtil.isPackageAccessible(beanClass)) {\n-            return (new Introspector(beanClass, null, USE_ALL_BEANINFO)).getBeanInfo();\n-        }\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/Introspector.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,2 +53,0 @@\n-import static sun.reflect.misc.ReflectUtil.isPackageAccessible;\n-\n@@ -752,1 +750,1 @@\n-        if (Modifier.isPublic(cls.getModifiers()) && isPackageAccessible(cls)) {\n+        if (Modifier.isPublic(cls.getModifiers())) {\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/MetaData.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import static sun.reflect.misc.ReflectUtil.isPackageAccessible;\n-\n@@ -71,1 +69,1 @@\n-        return isPackageAccessible(method.getDeclaringClass()) ? method : null;\n+        return method;\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/MethodRef.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -470,2 +469,1 @@\n-        if (cls != null && PropertyEditor.class.isAssignableFrom(cls)\n-                && ReflectUtil.isPackageAccessible(cls)) {\n+        if (cls != null && PropertyEditor.class.isAssignableFrom(cls)) {\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/PropertyDescriptor.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,2 +38,0 @@\n-import static sun.reflect.misc.ReflectUtil.checkPackageAccess;\n-\n@@ -192,1 +190,0 @@\n-                \/\/ checkPackageAccess(name) will be called by ClassFinder\n@@ -195,4 +192,0 @@\n-            \/\/ The 3 args Class.forName(String className, boolean, classloader)\n-            \/\/ requires getClassLoader permission, but we will be stricter and\n-            \/\/ will require access to the package as well.\n-            checkPackageAccess(name);\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/Statement.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -111,1 +111,0 @@\n-            sun.reflect.misc.ReflectUtil.checkPackageAccess(className);\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/SimpleDoc.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -97,2 +97,0 @@\n-import sun.reflect.misc.ReflectUtil;\n-\n@@ -1241,1 +1239,0 @@\n-                    ReflectUtil.checkPackageAccess(classname);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JEditorPane.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -116,1 +116,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -5588,1 +5587,0 @@\n-                ReflectUtil.checkPackageAccess(type);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTable.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -2036,1 +2035,0 @@\n-        ReflectUtil.checkPackageAccess(className);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/SwingUtilities.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -705,1 +704,0 @@\n-                ReflectUtil.checkPackageAccess(className);\n@@ -1145,1 +1143,0 @@\n-                ReflectUtil.checkPackageAccess(className);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/UIDefaults.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,2 +36,0 @@\n-import sun.reflect.misc.ReflectUtil;\n-\n@@ -306,1 +304,0 @@\n-            ReflectUtil.checkPackageAccess(name);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/event\/EventListenerList.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -70,1 +70,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -649,1 +648,1 @@\n-                            typeClass = ReflectUtil.forName(typeName.substring(\n+                            typeClass = Class.forName(typeName.substring(\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthParser.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -251,1 +250,0 @@\n-                ReflectUtil.checkPackageAccess(vc);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/DefaultFormatter.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -440,1 +439,0 @@\n-                        ReflectUtil.checkPackageAccess(valueClass);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/NumberFormatter.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -103,1 +102,0 @@\n-            ReflectUtil.checkPackageAccess(classname);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/ObjectView.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}