{"files":[{"patch":"@@ -425,1 +425,1 @@\n-        short[][] zeroes = new short[mlKem_k][ML_KEM_N];\n+        short[][] zeroes = shortMatrixAlloc(mlKem_k, ML_KEM_N);\n@@ -514,1 +514,1 @@\n-        byte[][] xofBufArr = new byte[nrPar][XOF_BLOCK_LEN + XOF_PAD];\n+        byte[][] xofBufArr = byteMatrixAlloc(nrPar, XOF_BLOCK_LEN + XOF_PAD);\n@@ -1183,0 +1183,18 @@\n+\n+    \/\/ For multidimensional array initialization, manually allocating each entry is\n+    \/\/ faster than doing the entire initialization in one go\n+    static short[][] shortMatrixAlloc(int first, int second) {\n+        short[][] res = new short[first][];\n+        for (int i = 0; i < first; i++) {\n+            res[i] = new short[second];\n+        }\n+        return res;\n+    }\n+\n+    static byte[][] byteMatrixAlloc(int first, int second) {\n+        byte[][] res = new byte[first][];\n+        for (int i = 0; i < first; i++) {\n+            res[i] = new byte[second];\n+        }\n+        return res;\n+    }\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/ML_KEM.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"}]}