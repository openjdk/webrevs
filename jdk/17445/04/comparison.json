{"files":[{"patch":"@@ -1751,0 +1751,4 @@\n+  julong total_used = 0;\n+  julong total_max_used = 0;\n+  julong total_free = 0;\n+  julong total_size = 0;\n@@ -1759,0 +1763,8 @@\n+    size_t size = total\/K;\n+    size_t used = (total - heap->unallocated_capacity())\/K;\n+    size_t max_used = heap->max_allocated_capacity()\/K;\n+    size_t free = heap->unallocated_capacity()\/K;\n+    total_size += size;\n+    total_used += used;\n+    total_max_used += max_used;\n+    total_free += free;\n@@ -1761,2 +1773,1 @@\n-                 total\/K, (total - heap->unallocated_capacity())\/K,\n-                 heap->max_allocated_capacity()\/K, heap->unallocated_capacity()\/K);\n+                 size, used, max_used, free);\n@@ -1775,4 +1786,11 @@\n-    st->print_cr(\" total_blobs=\" UINT32_FORMAT \" nmethods=\" UINT32_FORMAT\n-                       \" adapters=\" UINT32_FORMAT,\n-                       blob_count(), nmethod_count(), adapter_count());\n-    st->print_cr(\" compilation: %s\", CompileBroker::should_compile_new_jobs() ?\n+    if (SegmentedCodeCache) {\n+      st->print(\"CodeCache:\");\n+      st->print_cr(\" size=\" JULONG_FORMAT \"Kb, used=\" JULONG_FORMAT\n+                   \"Kb, max_used=\" JULONG_FORMAT \"Kb, free=\" JULONG_FORMAT \"Kb\",\n+                   total_size, total_used, total_max_used, total_free);\n+    }\n+    st->print_cr(\" total_blobs=\" UINT32_FORMAT \", nmethods=\" UINT32_FORMAT\n+                 \", adapters=\" UINT32_FORMAT \", full_count=\" UINT32_FORMAT,\n+                 blob_count(), nmethod_count(), adapter_count(), full_count);\n+    st->print_cr(\"Compilation: %s, stopped_count=%d, restarted_count=%d\",\n+                 CompileBroker::should_compile_new_jobs() ?\n@@ -1781,2 +1799,1 @@\n-                 \"disabled (not enough contiguous free space left)\");\n-    st->print_cr(\"              stopped_count=%d, restarted_count=%d\",\n+                 \"disabled (not enough contiguous free space left)\",\n@@ -1785,1 +1802,0 @@\n-    st->print_cr(\" full_count=%d\", full_count);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":25,"deletions":9,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -58,4 +58,4 @@\n-     * CodeCache: size=245760Kb used=4680Kb max_used=4680Kb free=241079Kb\n-     * bounds [0x00007f5bd9000000, 0x00007f5bd94a0000, 0x00007f5be8000000]\n-     * total_blobs=575 nmethods=69 adapters=423\n-     * compilation: enabled\n+     * CodeCache: size=245760Kb used=1366Kb max_used=1935Kb free=244393Kb\n+     *  bounds [0x00007ff4d89f2000, 0x00007ff4d8c62000, 0x00007ff4e79f2000]\n+     *  total_blobs=474, nmethods=87, adapters=293, full_count=0\n+     * Compilation: enabled, stopped_count=0, restarted_count=0\n@@ -65,8 +65,9 @@\n-     * CodeHeap 'non-nmethods': size=5696Kb used=2236Kb max_used=2238Kb free=3459Kb\n-     *  bounds [0x00007fa0f0ffe000, 0x00007fa0f126e000, 0x00007fa0f158e000]\n-     * CodeHeap 'profiled nmethods': size=120036Kb used=8Kb max_used=8Kb free=120027Kb\n-     *  bounds [0x00007fa0f158e000, 0x00007fa0f17fe000, 0x00007fa0f8ac7000]\n-     * CodeHeap 'non-profiled nmethods': size=120036Kb used=2Kb max_used=2Kb free=120034Kb\n-     *  bounds [0x00007fa0f8ac7000, 0x00007fa0f8d37000, 0x00007fa100000000]\n-     * total_blobs=486 nmethods=8 adapters=399\n-     * compilation: enabled\n+     * CodeHeap 'non-profiled nmethods': size=118592Kb used=29Kb max_used=29Kb free=118562Kb\n+     *  bounds [0x00007f09f8622000, 0x00007f09f8892000, 0x00007f09ff9f2000]\n+     * CodeHeap 'profiled nmethods': size=118588Kb used=80Kb max_used=80Kb free=118507Kb\n+     *  bounds [0x00007f09f09f2000, 0x00007f09f0c62000, 0x00007f09f7dc1000]\n+     * CodeHeap 'non-nmethods': size=8580Kb used=1257Kb max_used=1833Kb free=7323Kb\n+     *  bounds [0x00007f09f7dc1000, 0x00007f09f8031000, 0x00007f09f8622000]\n+     * CodeCache: size=245760Kb, used=1366Kb, max_used=1942Kb, free=244392Kb\n+     *  total_blobs=474, nmethods=87, adapters=293, full_count=0\n+     * Compilation: enabled, stopped_count=0, restarted_count=0\n@@ -77,2 +78,2 @@\n-    static Pattern line3 = Pattern.compile(\" total_blobs=(\\\\p{Digit}*) nmethods=(\\\\p{Digit}*) adapters=(\\\\p{Digit}*)\");\n-    static Pattern line4 = Pattern.compile(\" compilation: (.*)\");\n+    static Pattern line3 = Pattern.compile(\" total_blobs=(\\\\p{Digit}*), nmethods=(\\\\p{Digit}*), adapters=(\\\\p{Digit}*), full_count=(\\\\p{Digit}*)\");\n+    static Pattern line4 = Pattern.compile(\"Compilation: (.*?), stopped_count=(\\\\p{Digit}*), restarted_count=(\\\\p{Digit}*)\");\n@@ -160,0 +161,4 @@\n+        if (segmentsCount != 1) {\n+            \/\/ Skip this line CodeCache: size=245760Kb, used=5698Kb, max_used=5735Kb, free=240059Kb\n+            line = lines.next();\n+        }\n@@ -185,1 +190,13 @@\n-        if (!m.matches()) {\n+        if (m.matches()) {\n+            if (!m.group(1).contains(\"enabled\") && !m.group(1).contains(\"disabled\")) {\n+                Assert.fail(\"Failed parsing dcmd codecache output\");\n+            }\n+            int stopped = Integer.parseInt(m.group(2));\n+            if (stopped < 0) {\n+                Assert.fail(\"Failed parsing dcmd codecache output\");\n+            }\n+            int restarted = Integer.parseInt(m.group(3));\n+            if (restarted < 0) {\n+                Assert.fail(\"Failed parsing dcmd codecache output\");\n+            }\n+        } else {\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/compiler\/CodeCacheTest.java","additions":32,"deletions":15,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -59,2 +59,3 @@\n-        String p3 = \" total_blobs=\\\\d+ nmethods=\\\\d+ adapters=\\\\d+\\\\n\";\n-        String p4 = \" compilation: enabled\\\\n\";\n+        String p3 = \"CodeCache:.*\\\\n\";\n+        String p4 = \" total_blobs=\\\\d+, nmethods=\\\\d+, adapters=\\\\d+, full_count=\\\\d+\\\\n\";\n+        String p5 = \"Compilation: enabled.*\\\\n\";\n@@ -65,2 +66,2 @@\n-        SEG_REGEXP = segPrefix + p3 + p4;\n-        NOSEG_REGEXP = nosegPrefix + p3 + p4;\n+        SEG_REGEXP = segPrefix + p3 + p4 + p5;\n+        NOSEG_REGEXP = nosegPrefix + p4 + p5;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/compiler\/CodeCacheInfo\/Test.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}