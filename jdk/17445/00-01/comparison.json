{"files":[{"patch":"@@ -1786,2 +1786,8 @@\n-    st->print_cr(\" total_blobs=\" UINT32_FORMAT \" nmethods=\" UINT32_FORMAT\n-                       \" adapters=\" UINT32_FORMAT,\n+    if (SegmentedCodeCache) {\n+      st->print(\"CodeCache:\");\n+      st->print_cr(\" size=\" JULONG_FORMAT \"Kb, used=\" JULONG_FORMAT\n+                  \"Kb, max_used=\" JULONG_FORMAT \"Kb, free=\" JULONG_FORMAT \"Kb\",\n+                  total_size, total_used, total_max_used, total_free);\n+    }\n+    st->print_cr(\" total_blobs=\" UINT32_FORMAT \", nmethods=\" UINT32_FORMAT\n+                       \", adapters=\" UINT32_FORMAT,\n@@ -1789,5 +1795,1 @@\n-    st->print_cr(\" compilation: %s\", CompileBroker::should_compile_new_jobs() ?\n-                 \"enabled\" : Arguments::mode() == Arguments::_int ?\n-                 \"disabled (interpreter mode)\" :\n-                 \"disabled (not enough contiguous free space left)\");\n-    st->print_cr(\"              stopped_count=%d, restarted_count=%d\",\n+    st->print_cr(\" stopped_count=%d, restarted_count=%d, full_count=%d\",\n@@ -1795,2 +1797,6 @@\n-                 CompileBroker::get_total_compiler_restarted_count());\n-    st->print_cr(\" full_count=%d\", full_count);\n+                 CompileBroker::get_total_compiler_restarted_count(),\n+                 full_count);\n+    st->print_cr(\" compilation=%s\", CompileBroker::should_compile_new_jobs() ?\n+              \"enabled\" : Arguments::mode() == Arguments::_int ?\n+              \"disabled (interpreter mode)\" :\n+              \"disabled (not enough contiguous free space left)\");\n@@ -1798,4 +1804,0 @@\n-  st->print_cr(\"Total CodeHeap:\");\n-  st->print_cr(\" size=\" SIZE_FORMAT \"Kb, used=\" SIZE_FORMAT\n-               \"Kb, max used=\" SIZE_FORMAT \"Kb, free=\" SIZE_FORMAT \"Kb\",\n-               total_size, total_used, total_max_used, total_free);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -58,4 +58,5 @@\n-     * CodeCache: size=245760Kb used=4680Kb max_used=4680Kb free=241079Kb\n-     * bounds [0x00007f5bd9000000, 0x00007f5bd94a0000, 0x00007f5be8000000]\n-     * total_blobs=575 nmethods=69 adapters=423\n-     * compilation: enabled\n+     * CodeCache: size=245760Kb used=1366Kb max_used=1943Kb free=244393Kb\n+     *  bounds [0x00007fe8bc9f2000, 0x00007fe8bcc62000, 0x00007fe8cb9f2000]\n+     *  total_blobs=474, nmethods=87, adapters=293\n+     *  stopped_count=0, restarted_count=0, full_count=0\n+     *  compilation=enabled\n@@ -65,8 +66,10 @@\n-     * CodeHeap 'non-nmethods': size=5696Kb used=2236Kb max_used=2238Kb free=3459Kb\n-     *  bounds [0x00007fa0f0ffe000, 0x00007fa0f126e000, 0x00007fa0f158e000]\n-     * CodeHeap 'profiled nmethods': size=120036Kb used=8Kb max_used=8Kb free=120027Kb\n-     *  bounds [0x00007fa0f158e000, 0x00007fa0f17fe000, 0x00007fa0f8ac7000]\n-     * CodeHeap 'non-profiled nmethods': size=120036Kb used=2Kb max_used=2Kb free=120034Kb\n-     *  bounds [0x00007fa0f8ac7000, 0x00007fa0f8d37000, 0x00007fa100000000]\n-     * total_blobs=486 nmethods=8 adapters=399\n-     * compilation: enabled\n+     * CodeHeap 'non-profiled nmethods': size=118592Kb used=29Kb max_used=29Kb free=118562Kb\n+     *  bounds [0x00007f89c8622000, 0x00007f89c8892000, 0x00007f89cf9f2000]\n+     * CodeHeap 'profiled nmethods': size=118588Kb used=80Kb max_used=80Kb free=118507Kb\n+     *  bounds [0x00007f89c09f2000, 0x00007f89c0c62000, 0x00007f89c7dc1000]\n+     * CodeHeap 'non-nmethods': size=8580Kb used=1258Kb max_used=1834Kb free=7321Kb\n+     *  bounds [0x00007f89c7dc1000, 0x00007f89c8031000, 0x00007f89c8622000]\n+     * CodeCache: size=245760Kb, used=1367Kb, max_used=1943Kb, free=244390Kb\n+     *  total_blobs=474, nmethods=87, adapters=293\n+     *  stopped_count=0, restarted_count=0, full_count=0\n+     *  compilation=enabled\n@@ -77,2 +80,3 @@\n-    static Pattern line3 = Pattern.compile(\" total_blobs=(\\\\p{Digit}*) nmethods=(\\\\p{Digit}*) adapters=(\\\\p{Digit}*)\");\n-    static Pattern line4 = Pattern.compile(\" compilation: (.*)\");\n+    static Pattern line3 = Pattern.compile(\" total_blobs=(\\\\p{Digit}*), nmethods=(\\\\p{Digit}*), adapters=(\\\\p{Digit}*)\");\n+    static Pattern line4 = Pattern.compile(\" stopped_count=(\\\\p{Digit}*), restarted_count=(\\\\p{Digit}*), full_count=(\\\\p{Digit}*)\");\n+    static Pattern line5 = Pattern.compile(\" compilation=(.*)\");\n@@ -160,0 +164,4 @@\n+        if (segmentsCount != 1) {\n+            \/\/ Skip this line CodeCache: size=245760Kb, used=5698Kb, max_used=5735Kb, free=240059Kb\n+            line = lines.next();\n+        }\n@@ -185,0 +193,9 @@\n+        if (m.matches()) {\n+            System.out.println(\"stopped_count=\" + m.group(1));\n+        } else {\n+            Assert.fail(\"Regexp 3 failed to match line: \" + line);\n+        }\n+\n+        \/\/ Validate fifth line\n+        line = lines.next();\n+        m = line5.matcher(line);\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/compiler\/CodeCacheTest.java","additions":31,"deletions":14,"binary":false,"changes":45,"status":"modified"}]}