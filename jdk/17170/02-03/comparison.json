{"files":[{"patch":"@@ -45,1 +45,1 @@\n-import org.testng.annotations.Test;\n+import org.junit.jupiter.api.Test;\n@@ -56,5 +56,5 @@\n-import static org.testng.Assert.assertEquals;\n-import static org.testng.Assert.assertNotNull;\n-import static org.testng.Assert.assertNull;\n-import static org.testng.Assert.assertTrue;\n-import static org.testng.Assert.fail;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -68,2 +68,2 @@\n- * @run testng TestPosix\n- * @run testng\/othervm\/java.security.policy=test.policy.posix TestPosix\n+ * @run junit TestPosix\n+ * @run junit\/othervm\/java.security.policy=test.policy.posix TestPosix\n@@ -360,1 +360,1 @@\n-        assertEquals(Files.isDirectory(file), ei.isDir, \"Unexpected directory attribute for:\" + System.lineSeparator() + attrs);\n+        assertEquals(ei.isDir, Files.isDirectory(file), \"Unexpected directory attribute for:\" + System.lineSeparator() + attrs);\n@@ -398,1 +398,1 @@\n-        assertEquals(entries.get(), entriesCreated, \"File contained wrong number of entries.\");\n+        assertEquals(entriesCreated, entries.get(), \"File contained wrong number of entries.\");\n@@ -425,1 +425,1 @@\n-            assertEquals(actual.size(), expected.size(), \"Unexpected number of permissions (\" +\n+            assertEquals(expected.size(), actual.size(), \"Unexpected number of permissions (\" +\n@@ -605,1 +605,1 @@\n-                assertEquals(owner.getName(), defaultOwner);\n+                assertEquals(defaultOwner, owner.getName());\n@@ -608,1 +608,1 @@\n-            assertEquals(Files.getOwner(entry), DUMMY_USER);\n+            assertEquals(DUMMY_USER, Files.getOwner(entry));\n@@ -613,1 +613,1 @@\n-                assertEquals(group.getName(), defaultGroup);\n+                assertEquals(defaultGroup, group.getName());\n@@ -616,1 +616,1 @@\n-            assertEquals(view.readAttributes().group(), DUMMY_GROUP);\n+            assertEquals(DUMMY_GROUP, view.readAttributes().group());\n@@ -628,1 +628,1 @@\n-            assertEquals(Files.getOwner(entry).getName(), \"auser\");\n+            assertEquals(\"auser\", Files.getOwner(entry).getName());\n@@ -630,1 +630,1 @@\n-            assertEquals(view.readAttributes().group().getName(), \"agroup\");\n+            assertEquals(\"agroup\", view.readAttributes().group().getName());\n@@ -641,1 +641,1 @@\n-            assertEquals(Files.getOwner(entry), DUMMY_USER);\n+            assertEquals(DUMMY_USER, Files.getOwner(entry));\n@@ -643,1 +643,1 @@\n-            assertEquals(view.readAttributes().group(), DUMMY_GROUP);\n+            assertEquals(DUMMY_GROUP, view.readAttributes().group());\n@@ -718,1 +718,1 @@\n-        assertEquals(rc, 0, \"Return code of jar call is \" + rc + \" but expected 0\");\n+        assertEquals(0, rc, \"Return code of jar call is \" + rc + \" but expected 0\");\n@@ -819,1 +819,1 @@\n-        assertEquals(Integer.toBinaryString(externalFileAttr), expectedBits,\n+        assertEquals(expectedBits, Integer.toBinaryString(externalFileAttr),\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/TestPosix.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"}]}