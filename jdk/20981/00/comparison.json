{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1221,2 +1221,1 @@\n-             * Returns the pattern used to create this filter.\n-             * @return the pattern used to create this filter\n+             * {@return the pattern used to create this filter}\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputFilter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3862,2 +3862,1 @@\n-         * Returns the number of bytes read from the input stream.\n-         * @return the number of bytes read from the input stream\n+         * {@return the number of bytes read from the input stream}\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,2 +48,1 @@\n-     * Returns the retention policy.\n-     * @return the retention policy\n+     * {@return the retention policy}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/annotation\/Retention.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,2 +59,1 @@\n-     * Returns the length of the input.\n-     * @return the length of the input\n+     * {@return the length of the input}\n@@ -67,2 +66,1 @@\n-     * Returns the message.\n-     * @return the message\n+     * {@return the message}\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/MalformedInputException.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,2 +59,1 @@\n-     * Returns the length of the input.\n-     * @return the length of the input\n+     * {@return the length of the input}\n@@ -67,2 +66,1 @@\n-     * Returns the message.\n-     * @return the message\n+     * {@return the message}\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/UnmappableCharacterException.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -140,2 +140,1 @@\n-     * Returns the stand-alone style with the same size.\n-     * @return the stand-alone style with the same size\n+     * {@return the stand-alone style with the same size}\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/TextStyle.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -480,2 +480,1 @@\n-     * Returns a zero-length array.\n-     * @return a zero-length array\n+     * {@return a zero-length array}\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/SynchronousQueue.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -179,2 +179,1 @@\n-     * Returns the String representation of the current value.\n-     * @return the String representation of the current value\n+     * {@return the String representation of the current value}\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/atomic\/AtomicBoolean.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -343,2 +343,1 @@\n-     * Returns the String representation of the current value.\n-     * @return the String representation of the current value\n+     * {@return the String representation of the current value}\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/atomic\/AtomicInteger.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -369,2 +369,1 @@\n-     * Returns the String representation of the current values of array.\n-     * @return the String representation of the current values of array\n+     * {@return the String representation of the current values of array}\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/atomic\/AtomicIntegerArray.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -344,2 +344,1 @@\n-     * Returns the String representation of the current value.\n-     * @return the String representation of the current value\n+     * {@return the String representation of the current value}\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/atomic\/AtomicLong.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -369,2 +369,1 @@\n-     * Returns the String representation of the current values of array.\n-     * @return the String representation of the current values of array\n+     * {@return the String representation of the current values of array}\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/atomic\/AtomicLongArray.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -272,2 +272,1 @@\n-     * Returns the String representation of the current value.\n-     * @return the String representation of the current value\n+     * {@return the String representation of the current value}\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/atomic\/AtomicReference.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -300,2 +300,1 @@\n-     * Returns the String representation of the current values of array.\n-     * @return the String representation of the current values of array\n+     * {@return the String representation of the current values of array}\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/atomic\/AtomicReferenceArray.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -192,2 +192,1 @@\n-     * Returns the String representation of the current value.\n-     * @return the String representation of the current value\n+     * {@return the String representation of the current value}\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/atomic\/DoubleAccumulator.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -186,2 +186,1 @@\n-     * Returns the String representation of the current value.\n-     * @return the String representation of the current value\n+     * {@return the String representation of the current value}\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/atomic\/LongAccumulator.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -122,2 +122,1 @@\n-     * Returns the main Attributes for the Manifest.\n-     * @return the main Attributes for the Manifest\n+     * {@return the main Attributes for the Manifest}\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/Manifest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -785,2 +785,1 @@\n-     * Returns the ADLER-32 value of the uncompressed data.\n-     * @return the ADLER-32 value of the uncompressed data\n+     * {@return the ADLER-32 value of the uncompressed data}\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Deflater.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -285,2 +285,1 @@\n-     * Returns true if a preset dictionary is needed for decompression.\n-     * @return true if a preset dictionary is needed for decompression\n+     * {@return true if a preset dictionary is needed for decompression}\n@@ -296,4 +295,2 @@\n-     * Returns true if the end of the compressed data stream has been\n-     * reached.\n-     * @return true if the end of the compressed data stream has been\n-     * reached\n+     * {@return true if the end of the compressed data stream has been\n+     * reached}\n@@ -605,2 +602,1 @@\n-     * Returns the ADLER-32 value of the uncompressed data.\n-     * @return the ADLER-32 value of the uncompressed data\n+     * {@return the ADLER-32 value of the uncompressed data}\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Inflater.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -141,2 +141,1 @@\n-     * Returns the name of the entry.\n-     * @return the name of the entry\n+     * {@return the name of the entry}\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipEntry.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -501,2 +501,1 @@\n-     * Returns the path name of the ZIP file.\n-     * @return the path name of the ZIP file\n+     * {@return the path name of the ZIP file}\n@@ -563,2 +562,1 @@\n-     * Returns an enumeration of the ZIP file entries.\n-     * @return an enumeration of the ZIP file entries\n+     * {@return an enumeration of the ZIP file entries}\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}