{"files":[{"patch":"@@ -116,1 +116,1 @@\n-            throw new SkippedException(\"Some tests failed: \" + skipped);\n+            throw new SkippedException(\"Some tests skipped: \" + skipped);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestCipherMode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-            throw new SkippedException(\"Some tests failed: \" + skippedList);\n+            throw new SkippedException(\"Some tests skipped: \" + skippedList);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestSymmCiphers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import java.util.ArrayList;\n@@ -53,1 +54,1 @@\n-    private static final StringBuffer debugBuf = new StringBuffer();\n+    private record CI (String transformation, String keyAlgo, int dataSize){}  \/\/ record for holding Cipher Information\n@@ -55,3 +56,1 @@\n-    private final String transformation;\n-    private final String keyAlgo;\n-    private final int dataSize;\n+    private static final StringBuffer debugBuf = new StringBuffer();\n@@ -59,7 +58,12 @@\n-    public TestSymmCiphersNoPad(String transformation,\n-                                String keyAlgo,\n-                                int dataSize) {\n-        this.transformation = transformation;\n-        this.keyAlgo = keyAlgo;\n-        this.dataSize = dataSize;\n-    }\n+    private static final CI[] TEST_LIST = {\n+            new CI(\"ARCFOUR\", \"ARCFOUR\", 400),\n+            new CI(\"RC4\", \"RC4\", 401),\n+            new CI(\"DES\/CBC\/NoPadding\", \"DES\", 400),\n+            new CI(\"DESede\/CBC\/NoPadding\", \"DESede\", 160),\n+            new CI(\"AES\/CBC\/NoPadding\", \"AES\", 4800),\n+            new CI(\"Blowfish\/CBC\/NoPadding\", \"Blowfish\", 24),\n+            new CI(\"AES\/CTR\/NoPadding\", \"AES\", 1600),\n+            new CI(\"AES\/CTR\/NoPadding\", \"AES\", 65),\n+            new CI(\"AES\/CTS\/NoPadding\", \"AES\", 1600),\n+            new CI(\"AES\/CTS\/NoPadding\", \"AES\", 65),\n+    };\n@@ -69,0 +73,1 @@\n+        List<CI> skippedList = new ArrayList<>();\n@@ -71,27 +76,30 @@\n-            System.out.println(\"===\" + transformation + \"===\");\n-            try {\n-                KeyGenerator kg =\n-                        KeyGenerator.getInstance(keyAlgo, p);\n-                SecretKey key = kg.generateKey();\n-                Cipher c1 = Cipher.getInstance(transformation, p);\n-                Cipher c2 = Cipher.getInstance(transformation,\n-                        System.getProperty(\"test.provider.name\", \"SunJCE\"));\n-\n-                byte[] plainTxt = new byte[dataSize];\n-                random.nextBytes(plainTxt);\n-                System.out.println(\"Testing inLen = \" + plainTxt.length);\n-\n-                c2.init(Cipher.ENCRYPT_MODE, key);\n-                AlgorithmParameters params = c2.getParameters();\n-                byte[] answer = c2.doFinal(plainTxt);\n-                test(c1, Cipher.ENCRYPT_MODE, key, params,\n-                        plainTxt, answer);\n-                System.out.println(\"Encryption tests: DONE\");\n-                c2.init(Cipher.DECRYPT_MODE, key, params);\n-                byte[] answer2 = c2.doFinal(answer);\n-                test(c1, Cipher.DECRYPT_MODE, key, params,\n-                        answer, answer2);\n-                System.out.println(\"Decryption tests: DONE\");\n-            } catch (NoSuchAlgorithmException nsae) {\n-                throw new SkippedException(\"Skipping unsupported algorithm: \" +\n-                                           nsae);\n+            for (CI currTest : TEST_LIST) {\n+                System.out.println(\"===\" + currTest.transformation + \"===\");\n+                try {\n+                    KeyGenerator kg =\n+                            KeyGenerator.getInstance(currTest.keyAlgo, p);\n+                    SecretKey key = kg.generateKey();\n+                    Cipher c1 = Cipher.getInstance(currTest.transformation, p);\n+                    Cipher c2 = Cipher.getInstance(currTest.transformation,\n+                            System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+\n+                    byte[] plainTxt = new byte[currTest.dataSize];\n+                    random.nextBytes(plainTxt);\n+                    System.out.println(\"Testing inLen = \" + plainTxt.length);\n+\n+                    c2.init(Cipher.ENCRYPT_MODE, key);\n+                    AlgorithmParameters params = c2.getParameters();\n+                    byte[] answer = c2.doFinal(plainTxt);\n+                    test(c1, Cipher.ENCRYPT_MODE, key, params,\n+                            plainTxt, answer);\n+                    System.out.println(\"Encryption tests: DONE\");\n+                    c2.init(Cipher.DECRYPT_MODE, key, params);\n+                    byte[] answer2 = c2.doFinal(answer);\n+                    test(c1, Cipher.DECRYPT_MODE, key, params,\n+                            answer, answer2);\n+                    System.out.println(\"Decryption tests: DONE\");\n+                } catch (NoSuchAlgorithmException nsae) {\n+                    System.out.println(\"Skipping unsupported algorithm: \" +\n+                                       nsae);\n+                    skippedList.add(currTest);\n+                }\n@@ -104,0 +112,4 @@\n+\n+        if (!skippedList.isEmpty()){\n+            throw new SkippedException(\"Some tests skipped: \" + skippedList);\n+        }\n@@ -228,27 +240,1 @@\n-\n-        final List<String[]> tests = List.of(\n-                new String[]{\"ARCFOUR\", \"ARCFOUR\", \"400\"},\n-                new String[]{\"RC4\", \"RC4\", \"401\"},\n-                new String[]{\"DES\/CBC\/NoPadding\", \"DES\", \"400\"},\n-                new String[]{\"DESede\/CBC\/NoPadding\", \"DESede\", \"160\"},\n-                new String[]{\"AES\/CBC\/NoPadding\", \"AES\", \"4800\"},\n-                new String[]{\"Blowfish\/CBC\/NoPadding\", \"Blowfish\", \"24\"},\n-                new String[]{\"AES\/CTR\/NoPadding\", \"AES\", \"1600\"},\n-                new String[]{\"AES\/CTR\/NoPadding\", \"AES\", \"65\"},\n-                new String[]{\"AES\/CTS\/NoPadding\", \"AES\", \"1600\"},\n-                new String[]{\"AES\/CTS\/NoPadding\", \"AES\", \"65\"}\n-        );\n-\n-        boolean skipEncountered = false;\n-        for (final String[] t : tests) {\n-            try {\n-                main(new TestSymmCiphersNoPad(t[0], t[1], Integer.parseInt(t[2])), args);\n-            } catch (SkippedException skippedException) {\n-                skippedException.printStackTrace(System.err);\n-                skipEncountered = true;\n-            }\n-        }\n-\n-        if (skipEncountered) {\n-            throw new SkippedException(\"One or more tests skipped\");\n-        }\n+        main(new TestSymmCiphersNoPad(), args);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestSymmCiphersNoPad.java","additions":51,"deletions":65,"binary":false,"changes":116,"status":"modified"}]}