{"files":[{"patch":"@@ -38,0 +38,21 @@\n+    private final String name;\n+    private final String classListFile;\n+    private final String classListFileLog;\n+    private final String staticArchiveFile;\n+    private final String staticArchiveFileLog;\n+    private final String dynamicArchiveFile;\n+    private final String dynamicArchiveFileLog;\n+    private final String productionRunLog;\n+\n+    public CDSAppTester(String name) {\n+        \/\/ Old workflow\n+        this.name = name;\n+        classListFile = name() + \".classlist\";\n+        classListFileLog = classListFile + \".log\";\n+        staticArchiveFile = name() + \".static.jsa\";\n+        staticArchiveFileLog = staticArchiveFile + \".log\";\n+        dynamicArchiveFile = name() + \".dynamic.jsa\";\n+        dynamicArchiveFileLog = dynamicArchiveFile + \".log\";\n+        productionRunLog = name() + \".production.log\";\n+    }\n+\n@@ -88,25 +109,10 @@\n-    private String classListLog() {\n-        return \"-Xlog:class+load=debug:file=\" + classListFile + \".log\";\n-    }\n-    private String staticDumpLog() {\n-        return \"-Xlog:cds=debug,cds+class=debug,cds+heap=warning,cds+resolve=debug:file=\" + staticArchiveFile + \".log::filesize=0\";\n-    }\n-    private String dynamicDumpLog() {\n-        return \"-Xlog:cds=debug,cds+class=debug,cds+resolve=debug,class+load=debug:file=\" + dynamicArchiveFile + \".log::filesize=0\";\n-    }\n-\n-    private final String name;\n-    private final String classListFile;\n-    private final String staticArchiveFile;\n-    private final String dynamicArchiveFile;\n-\n-    private String productionRunLog() {\n-        return \"-Xlog:cds:file=\" + name() + \".production.log::filesize=0\";\n-    }\n-\n-    public CDSAppTester(String name) {\n-        \/\/ Old workflow\n-        this.name = name;\n-        classListFile = name() + \".classlist\";\n-        staticArchiveFile = name() + \".static.jsa\";\n-        dynamicArchiveFile = name() + \".dynamic.jsa\";\n+    private String logToFile(String logFile, String... logTags) {\n+        StringBuilder sb = new StringBuilder(\"-Xlog:\");\n+        String prefix = \"\";\n+        for (String tag : logTags) {\n+            sb.append(prefix);\n+            sb.append(tag);\n+            prefix = \",\";\n+        }\n+        sb.append(\":file=\" + logFile + \"::filesize=0\");\n+        return sb.toString();\n@@ -124,1 +130,7 @@\n-    private void checkExecutionHelper(OutputAnalyzer output, RunMode runMode) throws Exception {\n+    private OutputAnalyzer executeAndCheck(String[] cmdLine, RunMode runMode, String... logFiles) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmdLine);\n+        Process process = pb.start();\n+        OutputAnalyzer output = CDSTestUtils.executeAndLog(process, runMode.toString());\n+        for (String logFile : logFiles) {\n+            listOutputFile(logFile);\n+        }\n@@ -128,0 +140,1 @@\n+        return output;\n@@ -132,1 +145,1 @@\n-        String[] cmdLine = StringArrayUtils.concat(vmArgs(runMode), classListLog(),\n+        String[] cmdLine = StringArrayUtils.concat(vmArgs(runMode),\n@@ -135,1 +148,3 @@\n-                                                   \"-cp\", classpath(runMode));\n+                                                   \"-cp\", classpath(runMode),\n+                                                   logToFile(classListFileLog,\n+                                                             \"class+load=debug\"));\n@@ -137,8 +152,1 @@\n-\n-        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmdLine);\n-        Process process = pb.start();\n-        OutputAnalyzer output = CDSTestUtils.executeAndLog(process, \"classlist\");\n-        listOutputFile(classListFile);\n-        listOutputFile(classListFile + \".log\");\n-        checkExecutionHelper(output, runMode);\n-        return output;\n+        return executeAndCheck(cmdLine, runMode, classListFile, classListFileLog);\n@@ -149,1 +157,1 @@\n-        String[] cmdLine = StringArrayUtils.concat(vmArgs(runMode), staticDumpLog(),\n+        String[] cmdLine = StringArrayUtils.concat(vmArgs(runMode),\n@@ -155,8 +163,7 @@\n-                                                   \"-cp\", classpath(runMode));\n-        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmdLine);\n-        Process process = pb.start();\n-        OutputAnalyzer output = CDSTestUtils.executeAndLog(process, \"static\");\n-        listOutputFile(staticArchiveFile);\n-        listOutputFile(staticArchiveFile + \".log\");\n-        checkExecutionHelper(output, runMode);\n-        return output;\n+                                                   \"-cp\", classpath(runMode),\n+                                                   logToFile(staticArchiveFileLog,\n+                                                             \"cds=debug\",\n+                                                             \"cds+class=debug\",\n+                                                             \"cds+heap=warning\",\n+                                                             \"cds+resolve=debug\"));\n+        return executeAndCheck(cmdLine, runMode, staticArchiveFile, staticArchiveFileLog);\n@@ -170,1 +177,1 @@\n-          cmdLine = StringArrayUtils.concat(vmArgs(runMode), dynamicDumpLog(),\n+          cmdLine = StringArrayUtils.concat(vmArgs(runMode),\n@@ -173,1 +180,6 @@\n-                                            \"-cp\", classpath(runMode));\n+                                            \"-cp\", classpath(runMode),\n+                                            logToFile(dynamicArchiveFileLog,\n+                                                      \"cds=debug\",\n+                                                      \"cds+class=debug\",\n+                                                      \"cds+resolve=debug\",\n+                                                      \"class+load=debug\"));\n@@ -176,8 +188,1 @@\n-\n-        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmdLine);\n-        Process process = pb.start();\n-        OutputAnalyzer output = CDSTestUtils.executeAndLog(process, \"dynamic\");\n-        listOutputFile(dynamicArchiveFile);\n-        listOutputFile(dynamicArchiveFile + \".log\");\n-        checkExecutionHelper(output, runMode);\n-        return output;\n+        return executeAndCheck(cmdLine, runMode, dynamicArchiveFile, dynamicArchiveFileLog);\n@@ -188,2 +193,4 @@\n-        String[] cmdLine = StringArrayUtils.concat(vmArgs(runMode), productionRunLog(),\n-                                                   \"-cp\", classpath(runMode));\n+        String[] cmdLine = StringArrayUtils.concat(vmArgs(runMode),\n+                                                   \"-cp\", classpath(runMode),\n+                                                   logToFile(productionRunLog, \"cds\"));\n+\n@@ -197,7 +204,1 @@\n-\n-        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmdLine);\n-        Process process = pb.start();\n-        OutputAnalyzer output = CDSTestUtils.executeAndLog(process, \"production\");\n-        listOutputFile(name() + \".production.log\");\n-        checkExecutionHelper(output, runMode);\n-        return output;\n+        return executeAndCheck(cmdLine, runMode, productionRunLog);\n@@ -207,1 +208,7 @@\n-        String err = \"Must have exactly one command line argument: STATIC or DYNAMIC\";\n+        String err = \"Must have exactly one command line argument of the following: \";\n+        String prefix = \"\";\n+        for (Workflow wf : Workflow.values()) {\n+            err += prefix;\n+            err += wf;\n+            prefix = \", \";\n+        }\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSAppTester.java","additions":72,"deletions":65,"binary":false,"changes":137,"status":"modified"}]}