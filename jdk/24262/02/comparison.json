{"files":[{"patch":"@@ -29,1 +29,2 @@\n- * @run main\/othervm -XX:-InlineUnsafeOps -XX:-ReduceInitialCardMarks -XX:+StressReflectiveCode -Xbatch -XX:-TieredCompilation\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:-InlineUnsafeOps -XX:-ReduceInitialCardMarks -XX:+StressReflectiveCode -Xbatch -XX:-TieredCompilation\n@@ -32,1 +33,2 @@\n- * @run main\/othervm -XX:-InlineUnsafeOps -XX:-ReduceInitialCardMarks -XX:+StressReflectiveCode -Xcomp -XX:-TieredCompilation\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:-InlineUnsafeOps -XX:-ReduceInitialCardMarks -XX:+StressReflectiveCode -Xcomp -XX:-TieredCompilation\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestCloneWithStressReflectiveCode.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:-TieredCompilation -Xbatch\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *   -XX:+UnlockDiagnosticVMOptions -XX:-TieredCompilation -Xbatch\n@@ -32,1 +33,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -Xbatch\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *   -XX:+UnlockDiagnosticVMOptions -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -Xbatch\n@@ -34,1 +36,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -Xbatch\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *   -XX:+UnlockDiagnosticVMOptions -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -Xbatch\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/ClearArray.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n- * @run main\/othervm -Xcomp -XX:-TieredCompilation\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -Xcomp -XX:-TieredCompilation\n@@ -32,1 +33,2 @@\n- * @run main\/othervm -Xcomp -XX:-TieredCompilation\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -Xcomp -XX:-TieredCompilation\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestCMoveInfiniteGVN.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n@@ -51,0 +52,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n@@ -54,0 +56,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n@@ -57,0 +60,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestCastX2NotProcessedIGVN.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,2 @@\n- * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileCommand=compileonly,compiler.c2.TestDeadDataLoopCmoveIdentity::*\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -Xcomp -XX:-TieredCompilation -XX:CompileCommand=compileonly,compiler.c2.TestDeadDataLoopCmoveIdentity::*\n@@ -31,1 +32,2 @@\n- * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileCommand=compileonly,compiler.c2.TestDeadDataLoopCmoveIdentity::*\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -Xcomp -XX:-TieredCompilation -XX:CompileCommand=compileonly,compiler.c2.TestDeadDataLoopCmoveIdentity::*\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestDeadDataLoopCmoveIdentity.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,2 +47,2 @@\n-        TestFramework.runWithFlags(\"-XX:-UseDivMod\");\n-        TestFramework.runWithFlags(\"-XX:+UseDivMod\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-UseDivMod\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+UseDivMod\");\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestDivModNodes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+ *   -XX:+IgnoreUnrecognizedVMOptions\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestExHandlerTrap.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @run main\/othervm -Xbatch -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:CompileCommand=compileonly,compiler.c2.TestGVNCrash::test compiler.c2.TestGVNCrash\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:CompileCommand=compileonly,compiler.c2.TestGVNCrash::test compiler.c2.TestGVNCrash\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestGVNCrash.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n- * @run main\/othervm -Xcomp -XX:CompileOnly=TestInfiniteLoopCompilationFailure::test -XX:-UseLoopPredicate -XX:-UseProfiledLoopPredicate\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -Xcomp -XX:CompileOnly=TestInfiniteLoopCompilationFailure::test -XX:-UseLoopPredicate -XX:-UseProfiledLoopPredicate\n@@ -30,1 +31,2 @@\n- * @run main\/othervm -Xcomp -XX:CompileOnly=TestInfiniteLoopCompilationFailure::test -XX:-UseLoopPredicate -XX:-UseProfiledLoopPredicate\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -Xcomp -XX:CompileOnly=TestInfiniteLoopCompilationFailure::test -XX:-UseLoopPredicate -XX:-UseProfiledLoopPredicate\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestInfiniteLoopCompilationFailure.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @run main\/othervm -XX:-BackgroundCompilation -XX:-ReduceFieldZeroing TestLoadSplitThruPhiNull\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-BackgroundCompilation -XX:-ReduceFieldZeroing TestLoadSplitThruPhiNull\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestLoadSplitThruPhiNull.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-            case \"StressIGVN\"  -> { framework.addFlags(\"-XX:+StressIGVN\"); }\n+            case \"StressIGVN\"  -> { framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+StressIGVN\"); }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestMergeStores.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,2 @@\n- * @run main\/othervm -XX:CompileCommand=compileonly,compiler.c2.TestMergeStoresNullAdrType::test\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:CompileCommand=compileonly,compiler.c2.TestMergeStoresNullAdrType::test\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestMergeStoresNullAdrType.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressLCM -XX:+StressGCM -XX:+StressCCP -XX:+StressIGVN\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressLCM -XX:+StressGCM -XX:+StressCCP -XX:+StressIGVN\n@@ -31,1 +32,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressLCM -XX:+StressGCM -XX:+StressCCP -XX:+StressIGVN\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressLCM -XX:+StressGCM -XX:+StressCCP -XX:+StressIGVN\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestModDivTopInput.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,3 +30,3 @@\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestByteVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestByteVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestByteVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestByteVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestByteVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestByteVect\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestByteVect.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,3 +30,3 @@\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestDoubleVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestDoubleVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestDoubleVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestDoubleVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestDoubleVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestDoubleVect\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestDoubleVect.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,3 +30,3 @@\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestFloatVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestFloatVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestFloatVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestFloatVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestFloatVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:+UnlockDiagnosticVMOptions -XX:+UseSignumIntrinsic -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestFloatVect\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestFloatVect.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,3 +30,3 @@\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestIntVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestIntVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestIntVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestIntVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestIntVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestIntVect\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestIntVect.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,3 +30,3 @@\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestIntVectRotate\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestIntVectRotate\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestIntVectRotate\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestIntVectRotate\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestIntVectRotate\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestIntVectRotate\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestIntVectRotate.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,3 +30,3 @@\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestLongVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestLongVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestLongVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestLongVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestLongVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestLongVect\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestLongVect.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,3 +30,3 @@\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestLongVectRotate\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestLongVectRotate\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestLongVectRotate\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestLongVectRotate\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestLongVectRotate\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestLongVectRotate\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestLongVectRotate.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,3 +30,3 @@\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestShortVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestShortVect\n- * @run main\/othervm -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestShortVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=8 compiler.c2.cr6340864.TestShortVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=16 compiler.c2.cr6340864.TestShortVect\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:CompileCommand=exclude,*::test() -Xmx128m -XX:MaxVectorSize=32 compiler.c2.cr6340864.TestShortVect\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestShortVect.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        TestFramework.runWithFlags(\"--add-modules=jdk.incubator.vector\", \"-XX:-UseSuperWord\");\n+        TestFramework.runWithFlags(\"--add-modules=jdk.incubator.vector\", \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-UseSuperWord\");\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/ConvF2HFIdealizationTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        TestFramework.runWithFlags(\"--add-modules\", \"java.base\", \"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\", \"-XX:LoopMaxUnroll=0\", \"-XX:-UseCountedLoopSafepoints\");\n+        TestFramework.runWithFlags(\"--add-modules\", \"java.base\", \"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\", \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:LoopMaxUnroll=0\", \"-XX:-UseCountedLoopSafepoints\");\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestConvI2LCastLongLoop.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-        TestFramework.runWithFlags(\"-XX:LoopUnrollLimit=0\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:LoopUnrollLimit=0\");\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestCountedLoopPhiValue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,2 @@\n-        TestFramework.runWithFlags(\"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\",\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                                   \"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\",\n@@ -49,1 +50,2 @@\n-        TestFramework.runWithFlags(\"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\",\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                                   \"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\",\n@@ -51,1 +53,2 @@\n-        TestFramework.runWithFlags(\"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\",\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                                   \"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\",\n@@ -53,1 +56,2 @@\n-        TestFramework.runWithFlags(\"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\",\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                                   \"-XX:+UseCMoveUnconditionally\", \"-XX:+UseVectorCmov\",\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestVectorConditionalMove.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n@@ -58,0 +59,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n@@ -61,0 +63,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n@@ -64,0 +67,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestVectorizationMismatchedAccess.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n@@ -49,0 +50,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n@@ -52,0 +54,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n@@ -55,0 +58,1 @@\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\",\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestVectorizationNotRun.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        TestFramework.runWithFlags(\"-XX:-SplitIfBlocks\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-SplitIfBlocks\");\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/igvn\/TestIntegerMulRing.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:+UnlockDiagnosticVMOptions\n","filename":"test\/hotspot\/jtreg\/compiler\/ccp\/TestShiftConvertAndNotification.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,2 @@\n- * @run main\/othervm -XX:CompileCommand=compileonly,*Test*::test\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:CompileCommand=compileonly,*Test*::test\n@@ -35,1 +36,2 @@\n- * @run main\/othervm -XX:CompileCommand=compileonly,*Test*::test\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:CompileCommand=compileonly,*Test*::test\n@@ -42,1 +44,2 @@\n- * @run main\/othervm -XX:LoopMaxUnroll=0\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:LoopMaxUnroll=0\n@@ -47,1 +50,2 @@\n- * @run main\/othervm -XX:LoopMaxUnroll=0\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:LoopMaxUnroll=0\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/TestGCMLoadPlacement.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n- * @run main\/othervm -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:+StressCCP -Xcomp\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+                     -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:+StressCCP -Xcomp\n@@ -30,1 +31,2 @@\n- * @run main\/othervm -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:+StressCCP -Xcomp\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+                     -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:+StressCCP -Xcomp\n","filename":"test\/hotspot\/jtreg\/compiler\/controldependency\/TestAddPChainMismatchedBase2.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -Xcomp -XX:+ReduceAllocationMerges TestInvalidLocation\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions -Xcomp -XX:+ReduceAllocationMerges TestInvalidLocation\n","filename":"test\/hotspot\/jtreg\/compiler\/escapeAnalysis\/TestInvalidLocation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -105,0 +105,1 @@\n+                                 \"-XX:+IgnoreUnrecognizedVMOptions\",\n","filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestG1BarrierGeneration.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -102,1 +102,2 @@\n-        test.addFlags(\"-XX:+UseZGC\", \"-XX:+UnlockExperimentalVMOptions\",\n+        test.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                      \"-XX:+UseZGC\", \"-XX:+UnlockExperimentalVMOptions\",\n","filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestZGCBarrierElision.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -58,1 +58,2 @@\n-        TestFramework.runWithFlags(\"-XX:+UseZGC\", \"-XX:LoopUnrollLimit=24\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\",\n+                                   \"-XX:+UseZGC\", \"-XX:LoopUnrollLimit=24\");\n","filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestZGCUnrolling.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+ * @requires vm.compiler2.enabled\n","filename":"test\/hotspot\/jtreg\/compiler\/inlining\/LateInlinePrinting.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n@@ -49,0 +50,1 @@\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/unsafe\/HeapByteBufferTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/othervm -XX:+OptimizeFill compiler.loopopts.FillArrayWithUnsafe\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+OptimizeFill compiler.loopopts.FillArrayWithUnsafe\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/FillArrayWithUnsafe.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-                               new Scenario(1, \"-XX:LoopUnrollLimit=0\", \"-XX:+OptimizeFill\"));\n+                               new Scenario(1, \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:LoopUnrollLimit=0\", \"-XX:+OptimizeFill\"));\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestArrayFillIntrinsic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:-TieredCompilation\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:-TieredCompilation\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestCMoveLimitType.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n@@ -45,0 +46,1 @@\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n@@ -59,0 +61,1 @@\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n@@ -73,0 +76,1 @@\n+ *      -XX:+IgnoreUnrecognizedVMOptions\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestDeadIrreducibleLoopsMain.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:-BackgroundCompilation -XX:+StressIGVN -XX:StressSeed=4232417824 TestOverUnrolling2\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:-BackgroundCompilation -XX:+StressIGVN TestOverUnrolling2\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions -XX:-BackgroundCompilation -XX:+StressIGVN -XX:StressSeed=4232417824 TestOverUnrolling2\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions -XX:-BackgroundCompilation -XX:+StressIGVN TestOverUnrolling2\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestOverUnrolling2.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressLCM -XX:+StressGCM -XX:+StressCCP -XX:+StressIGVN\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressLCM -XX:+StressGCM -XX:+StressCCP -XX:+StressIGVN\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPeelingSkeletonPredicateInitialization.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/othervm -XX:-BackgroundCompilation -XX:-UseCountedLoopSafepoints TestPredicateInputBelowLoopPredicate\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-BackgroundCompilation -XX:-UseCountedLoopSafepoints TestPredicateInputBelowLoopPredicate\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPredicateInputBelowLoopPredicate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,2 @@\n- * @run main\/othervm -XX:-TieredCompilation -Xcomp -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:-TieredCompilation -Xcomp -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM\n@@ -33,1 +34,2 @@\n- * @run main\/othervm -XX:-TieredCompilation -Xcomp -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM -XX:StressSeed=2160808391\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:-TieredCompilation -Xcomp -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM -XX:StressSeed=2160808391\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestRemoveEmptyCountedLoop.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-        TestFramework.runWithFlags(\"-XX:-PartialPeelLoop\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-PartialPeelLoop\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestSplitThruPhiInfinitely.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -486,2 +486,2 @@\n-            case \"vanilla-A\" -> new String[] {\"-XX:+AlignVector\"};\n-            case \"vanilla-U\" -> new String[] {\"-XX:-AlignVector\"};\n+            case \"vanilla-A\" -> new String[] {\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+AlignVector\"};\n+            case \"vanilla-U\" -> new String[] {\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-AlignVector\"};\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestDependencyOffsets.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,2 @@\n- * @run main\/othervm -Xbatch\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -Xbatch\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestEliminateAllocationWithCastP2XUse.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-                                   \"-XX:-AlignVector\");\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-AlignVector\");\n@@ -72,1 +72,1 @@\n-                                   \"-XX:+AlignVector\");\n+                                   \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+AlignVector\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestEquivalentInvariants.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-            framework.addFlags(\"-XX:+AlignVector\");\n+            framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+AlignVector\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestMemorySegment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-                case \"AlignVector\" ->       { framework.addFlags(\"-XX:+AlignVector\"); }\n+                case \"AlignVector\" ->       { framework.addFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+AlignVector\"); }\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestMemorySegmentUnalignedAddress.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,2 @@\n- * @run main\/othervm -Xcomp -XX:CompileOnly=compiler.loopopts.superword.TestPickLastMemoryState::*\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -Xcomp -XX:CompileOnly=compiler.loopopts.superword.TestPickLastMemoryState::*\n@@ -33,1 +34,2 @@\n- * @run main\/othervm -Xcomp -XX:CompileOnly=compiler.loopopts.superword.TestPickLastMemoryState::*\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -Xcomp -XX:CompileOnly=compiler.loopopts.superword.TestPickLastMemoryState::*\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestPickLastMemoryState.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -42,4 +42,4 @@\n-        TestFramework.runWithFlags(\"-XX:-UseCompactObjectHeaders\", \"-XX:-AlignVector\");\n-        TestFramework.runWithFlags(\"-XX:-UseCompactObjectHeaders\", \"-XX:+AlignVector\");\n-        TestFramework.runWithFlags(\"-XX:+UseCompactObjectHeaders\", \"-XX:-AlignVector\");\n-        TestFramework.runWithFlags(\"-XX:+UseCompactObjectHeaders\", \"-XX:+AlignVector\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-UseCompactObjectHeaders\", \"-XX:-AlignVector\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-UseCompactObjectHeaders\", \"-XX:+AlignVector\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+UseCompactObjectHeaders\", \"-XX:-AlignVector\");\n+        TestFramework.runWithFlags(\"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+UseCompactObjectHeaders\", \"-XX:+AlignVector\");\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestUnorderedReductionPartialVectorization.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:-UseOnStackReplacement -XX:LoopMaxUnroll=0 AntiDependentLoadInOuterStripMinedLoop\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:-UseOnStackReplacement -XX:LoopMaxUnroll=0 AntiDependentLoadInOuterStripMinedLoop\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/AntiDependentLoadInOuterStripMinedLoop.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main\/othervm -XX:-TieredCompilation -XX:-UseOnStackReplacement -XX:-BackgroundCompilation -XX:LoopMaxUnroll=0 -XX:CompileCommand=dontinline,LoadDependsOnIfIdenticalToLoopExit::not_inlined -XX:CompileCommand=compileonly,LoadDependsOnIfIdenticalToLoopExit::test1 LoadDependsOnIfIdenticalToLoopExit\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -XX:-UseOnStackReplacement -XX:-BackgroundCompilation -XX:LoopMaxUnroll=0 -XX:CompileCommand=dontinline,LoadDependsOnIfIdenticalToLoopExit::not_inlined -XX:CompileCommand=compileonly,LoadDependsOnIfIdenticalToLoopExit::test1 LoadDependsOnIfIdenticalToLoopExit\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/LoadDependsOnIfIdenticalToLoopExit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main\/othervm -XX:-BackgroundCompilation -XX:LoopMaxUnroll=0 TestConservativeAntiDep\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-BackgroundCompilation -XX:LoopMaxUnroll=0 TestConservativeAntiDep\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/TestConservativeAntiDep.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main\/othervm -XX:LoopUnrollLimit=0 -XX:-UseOnStackReplacement -XX:-BackgroundCompilation -XX:CompileCommand=dontinline,TestEliminatedLoadPinnedOnBackedge::notInlined\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:LoopUnrollLimit=0 -XX:-UseOnStackReplacement -XX:-BackgroundCompilation -XX:CompileCommand=dontinline,TestEliminatedLoadPinnedOnBackedge::notInlined\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/TestEliminatedLoadPinnedOnBackedge.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main\/othervm -XX:-BackgroundCompilation -XX:LoopUnrollLimit=0 TestPinnedUseInOuterLSMUnusedBySfpt\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-BackgroundCompilation -XX:LoopUnrollLimit=0 TestPinnedUseInOuterLSMUnusedBySfpt\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/TestPinnedUseInOuterLSMUnusedBySfpt.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+PrintIntrinsics\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xcomp -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+PrintIntrinsics\n","filename":"test\/hotspot\/jtreg\/compiler\/print\/PrintInlining.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:-UseOnStackReplacement -XX:-UseLoopPredicate RangeCheckEliminationScaleNotOne\n- * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:-UseOnStackReplacement -XX:+UseLoopPredicate RangeCheckEliminationScaleNotOne\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:-UseOnStackReplacement -XX:-UseLoopPredicate RangeCheckEliminationScaleNotOne\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:-UseOnStackReplacement -XX:+UseLoopPredicate RangeCheckEliminationScaleNotOne\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/RangeCheckEliminationScaleNotOne.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @run main\/othervm -XX:-TieredCompilation -XX:-UseOnStackReplacement -XX:-BackgroundCompilation\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -XX:-UseOnStackReplacement -XX:-BackgroundCompilation\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestArrayAccessAboveRCAfterRCCastIIEliminated.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:CompileOnly=TestArrayAccessAboveRCAfterUnswitching::test\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:CompileOnly=TestArrayAccessAboveRCAfterUnswitching::test\n@@ -30,1 +30,1 @@\n- * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:CompileOnly=TestArrayAccessAboveRCAfterUnswitching::test\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:CompileOnly=TestArrayAccessAboveRCAfterUnswitching::test\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestArrayAccessAboveRCAfterUnswitching.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -Xcomp -XX:-TieredCompilation\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -Xcomp -XX:-TieredCompilation\n","filename":"test\/hotspot\/jtreg\/compiler\/rangechecks\/TestRangeCheckCmpUUnderflow.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,2 +59,2 @@\n-        TestFramework.runWithFlags(inlineCmd, \"-XX:+StressGCM\", \"-XX:+StressLCM\", \"-XX:StressSeed=1\");\n-        TestFramework.runWithFlags(inlineCmd, \"-XX:+StressGCM\", \"-XX:+StressLCM\");\n+        TestFramework.runWithFlags(inlineCmd, \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+StressGCM\", \"-XX:+StressLCM\", \"-XX:StressSeed=1\");\n+        TestFramework.runWithFlags(inlineCmd, \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:+StressGCM\", \"-XX:+StressLCM\");\n","filename":"test\/hotspot\/jtreg\/compiler\/runtime\/safepoints\/TestMachTempsAcrossSafepoints.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,2 @@\n- * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:StressSeed=598200189 TestCrashAtIGVNSplitIfSubType\n- * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN TestCrashAtIGVNSplitIfSubType\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:StressSeed=598200189 TestCrashAtIGVNSplitIfSubType\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -XX:-BackgroundCompilation -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN TestCrashAtIGVNSplitIfSubType\n","filename":"test\/hotspot\/jtreg\/compiler\/splitif\/TestCrashAtIGVNSplitIfSubType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/othervm -XX:-BackgroundCompilation -XX:-TieredCompilation -XX:-UseOnStackReplacement\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-BackgroundCompilation -XX:-TieredCompilation -XX:-UseOnStackReplacement\n@@ -30,1 +30,1 @@\n- * @run main\/othervm -XX:-BackgroundCompilation -XX:-TieredCompilation -XX:-UseOnStackReplacement\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-BackgroundCompilation -XX:-TieredCompilation -XX:-UseOnStackReplacement\n@@ -32,1 +32,1 @@\n- * @run main\/othervm -XX:-BackgroundCompilation -XX:-TieredCompilation\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-BackgroundCompilation -XX:-TieredCompilation\n","filename":"test\/hotspot\/jtreg\/compiler\/splitif\/TestLongCountedLoopConvL2I.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @run main\/othervm -XX:-TieredCompilation -XX:-UseOnStackReplacement -XX:-BackgroundCompilation\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-TieredCompilation -XX:-UseOnStackReplacement -XX:-BackgroundCompilation\n","filename":"test\/hotspot\/jtreg\/compiler\/types\/TestCheckCastPPBecomesTOP.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,2 @@\n- * @run main\/othervm -XX:-TieredCompilation -XX:+AlwaysIncrementalInline -Xbatch\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ *                   -XX:-TieredCompilation -XX:+AlwaysIncrementalInline -Xbatch\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestLongVectorNeg.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @run main\/othervm -Xbatch -XX:-IncrementalInline compiler.vectorapi.TestNoInline\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:-IncrementalInline compiler.vectorapi.TestNoInline\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestNoInline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main\/othervm -XX:CompileCommand=compileonly,TestReplicateAtConv::test -Xcomp -XX:MaxVectorSize=8 TestReplicateAtConv\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:CompileCommand=compileonly,TestReplicateAtConv::test -Xcomp -XX:MaxVectorSize=8 TestReplicateAtConv\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestReplicateAtConv.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main\/othervm -Xbatch -XX:MaxVectorSize=16 compiler.vectorization.TestReplicateLoopIV\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xbatch -XX:MaxVectorSize=16 compiler.vectorization.TestReplicateLoopIV\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestReplicateLoopIV.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}