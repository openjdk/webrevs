{"files":[{"patch":"@@ -321,1 +321,1 @@\n-        if (value <= -65_520L) {  \/\/ -(Float16.MAX_VALUE + Float16.ulp(Float16.MAX_VALUE) \/ 2)\n+        if (value <= -65_520L) {  \/\/ -(MAX_VALUE + ulp(MAX_VALUE) \/ 2)\n@@ -324,1 +324,1 @@\n-            if (value >= 65_520L) {  \/\/ Float16.MAX_VALUE + Float16.ulp(Float16.MAX_VALUE) \/ 2\n+            if (value >= 65_520L) {  \/\/ MAX_VALUE + ulp(MAX_VALUE) \/ 2\n@@ -472,1 +472,1 @@\n-            || Math.abs(trialResult) > (65504.0 + 32.0) || \/\/ Float.MAX_VALUE + ulp(MAX_VALUE),\n+            || Math.abs(trialResult) > (65504.0 + 32.0) || \/\/ MAX_VALUE + ulp(MAX_VALUE),\n@@ -903,1 +903,1 @@\n-        Float16 f16 = isNaN(value) ? Float16.NaN : value;\n+        Float16 f16 = isNaN(value) ? NaN : value;\n@@ -950,1 +950,1 @@\n-            return Float16.NaN.value;\n+            return NaN.value;\n@@ -1567,2 +1567,2 @@\n-        case MAX_EXPONENT + 1 -> abs(f16);          \/\/ NaN or infinity\n-        case MIN_EXPONENT - 1 -> Float16.MIN_VALUE; \/\/ zero or subnormal\n+        case MAX_EXPONENT + 1 -> abs(f16);  \/\/ NaN or infinity\n+        case MIN_EXPONENT - 1 -> MIN_VALUE; \/\/ zero or subnormal\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float16.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}