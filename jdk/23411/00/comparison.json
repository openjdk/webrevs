{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,4 +94,1 @@\n-    KP_TimeStamping(\"1.3.6.1.5.5.7.3.8\", \"timeStamping\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n+    KP_TimeStamping(\"1.3.6.1.5.5.7.3.8\", \"timeStamping\", false),\n@@ -105,4 +102,1 @@\n-    AD_TimeStamping(\"1.3.6.1.5.5.7.48.3\", \"timeStamping\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n+    AD_TimeStamping(\"1.3.6.1.5.5.7.48.3\", \"timeStamping\", false),\n@@ -192,4 +186,1 @@\n-    PKCS1(\"1.2.840.113549.1.1\", \"RSA\") { \/\/ RSA KeyPairGenerator and KeyFactory\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n+    PKCS1(\"1.2.840.113549.1.1\", \"RSA\", false), \/\/ RSA KeyPairGenerator and KeyFactory\n@@ -325,4 +316,1 @@\n-    X942_DH(\"1.2.840.10046.2.1\", \"DiffieHellman\") { \/\/ unused by JDK providers\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n+    X942_DH(\"1.2.840.10046.2.1\", \"DiffieHellman\", false), \/\/ unused by JDK providers\n@@ -378,4 +366,1 @@\n-    OIW_DSA(\"1.3.14.3.2.12\", \"DSA\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n+    OIW_DSA(\"1.3.14.3.2.12\", \"DSA\", false),\n@@ -383,4 +368,1 @@\n-    OIW_JDK_SHA1withDSA(\"1.3.14.3.2.13\", \"SHA1withDSA\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n+    OIW_JDK_SHA1withDSA(\"1.3.14.3.2.13\", \"SHA1withDSA\", false),\n@@ -388,4 +370,1 @@\n-    OIW_SHA1withRSA_Odd(\"1.3.14.3.2.15\", \"SHA1withRSA\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n+    OIW_SHA1withRSA_Odd(\"1.3.14.3.2.15\", \"SHA1withRSA\", false),\n@@ -397,4 +376,1 @@\n-    OIW_SHA1withDSA(\"1.3.14.3.2.27\", \"SHA1withDSA\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n+    OIW_SHA1withDSA(\"1.3.14.3.2.27\", \"SHA1withDSA\", false),\n@@ -402,4 +378,1 @@\n-    OIW_SHA1withRSA(\"1.3.14.3.2.29\", \"SHA1withRSA\") {\n-        @Override\n-        boolean registerNames() { return false; }\n-    },\n+    OIW_SHA1withRSA(\"1.3.14.3.2.29\", \"SHA1withRSA\", false),\n@@ -429,5 +402,3 @@\n-    ITUX509_RSA(\"2.5.8.1.1\", \"RSA\") { \/\/ unused by JDK providers\n-                                      \/\/ defined in X.509 for RSA keys\n-        @Override                     \/\/ with modulus length as its parameter\n-        boolean registerNames() { return false; }\n-    },\n+    ITUX509_RSA(\"2.5.8.1.1\", \"RSA\", false), \/\/ unused by JDK providers\n+                                            \/\/ defined in X.509 for RSA keys\n+                                            \/\/ with modulus length as its parameter\n@@ -445,0 +416,1 @@\n+    private final boolean registerNames;\n@@ -479,1 +451,1 @@\n-        \/\/ only register the stdName and aliases if o.registerNames()\n+        \/\/ only register the stdName and aliases if o.registerNames\n@@ -481,1 +453,1 @@\n-        if (o.registerNames()) {\n+        if (o.registerNames) {\n@@ -508,0 +480,1 @@\n+        this.registerNames = true;\n@@ -513,0 +486,1 @@\n+        this.registerNames = true;\n@@ -516,0 +490,7 @@\n+    KnownOIDs(String oid, String stdName, boolean registerNames) {\n+        this.oid = oid;\n+        this.stdName = stdName;\n+        this.registerNames = registerNames;\n+        this.aliases = new String[0];\n+    }\n+\n@@ -530,4 +511,0 @@\n-\n-    boolean registerNames() {\n-        return true;\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KnownOIDs.java","additions":25,"deletions":48,"binary":false,"changes":73,"status":"modified"}]}