{"files":[{"patch":"@@ -48,1 +48,1 @@\n-  heap->assert_pinned_region_status();\n+  heap->assert_pinned_region_status(_generation);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2415,1 +2415,5 @@\n-void ShenandoahHeap::assert_pinned_region_status() {\n+void ShenandoahHeap::assert_pinned_region_status() const {\n+  assert_pinned_region_status(global_generation());\n+}\n+\n+void ShenandoahHeap::assert_pinned_region_status(ShenandoahGeneration* generation) const {\n@@ -2418,2 +2422,4 @@\n-    assert((r->is_pinned() && r->pin_count() > 0) || (!r->is_pinned() && r->pin_count() == 0),\n-           \"Region %zu pinning status is inconsistent\", i);\n+    if (generation->contains(r)) {\n+      assert((r->is_pinned() && r->pin_count() > 0) || (!r->is_pinned() && r->pin_count() == 0),\n+             \"Region %zu pinning status is inconsistent\", i);\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -672,1 +672,2 @@\n-  void assert_pinned_region_status() NOT_DEBUG_RETURN;\n+  void assert_pinned_region_status() const NOT_DEBUG_RETURN;\n+  void assert_pinned_region_status(ShenandoahGeneration* generation) const NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -497,1 +497,1 @@\n-    heap->assert_pinned_region_status();\n+    heap->assert_pinned_region_status(this);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}