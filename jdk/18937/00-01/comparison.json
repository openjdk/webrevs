{"files":[{"patch":"@@ -1636,3 +1636,3 @@\n-  \/\/ Iterates over all JavaThread's, counts VTMS transitions and restores\n-  \/\/ jt->jvmti_thread_state() and jt->jvmti_vthread() for VTMS transition protocol.\n-  void count_transitions_and_correct_jvmti_thread_states() {\n+  \/\/ Iterates over all JavaThread's, restores jt->jvmti_thread_state() and\n+  \/\/ jt->jvmti_vthread() for VTMS transition protocol.\n+  void correct_jvmti_thread_states() {\n@@ -1656,1 +1656,1 @@\n-      count_transitions_and_correct_jvmti_thread_states();\n+      correct_jvmti_thread_states();\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -501,1 +501,1 @@\n-  assert(thread->VTMS_transition_mark(), \"sanity ed_heck\");\n+  assert(thread->VTMS_transition_mark(), \"sanity check\");\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -668,1 +668,1 @@\n-  bool VTMS_transition_mark()                    { return Atomic::load(&_VTMS_transition_mark); }\n+  bool VTMS_transition_mark() const              { return Atomic::load(&_VTMS_transition_mark); }\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}