{"files":[{"patch":"@@ -24,1 +24,0 @@\n-import javax.swing.JFrame;\n@@ -31,0 +30,1 @@\n+import java.awt.Rectangle;\n@@ -32,0 +32,1 @@\n+import java.awt.Toolkit;\n@@ -34,1 +35,0 @@\n-import java.awt.dnd.DragGestureEvent;\n@@ -46,1 +46,0 @@\n-import java.awt.event.MouseEvent;\n@@ -49,0 +48,5 @@\n+import java.awt.event.MouseEvent;\n+import java.io.File;\n+import java.util.concurrent.atomic.AtomicReference;\n+import javax.imageio.ImageIO;\n+import javax.swing.JFrame;\n@@ -59,2 +63,3 @@\n-    Robot robot;\n-    Frame frame;\n+    private static Robot robot;\n+    private static Frame frame;\n+    private static DropActionChangeTest test;\n@@ -66,1 +71,0 @@\n-    static final int FRAME_ACTIVATION_TIMEOUT = 3000;\n@@ -71,1 +75,1 @@\n-        DropActionChangeTest test = new DropActionChangeTest();\n+        test = new DropActionChangeTest();\n@@ -76,5 +80,1 @@\n-            EventQueue.invokeAndWait(() -> {\n-                if (test.frame != null) {\n-                    test.frame.dispose();\n-                }\n-            });\n+            EventQueue.invokeAndWait(DropActionChangeTest::disposeFrame);\n@@ -103,1 +103,3 @@\n-                    System.err.println(\"FAILURE: wrong drop action:\" + e.getDropAction());\n+                    System.err.println(\"FAILURE: wrong drop action:\"\n+                                       + e.getDropAction()+\", It should be \"\n+                                       +DnDConstants.ACTION_MOVE);\n@@ -113,5 +115,1 @@\n-        DragGestureListener dgl = new DragGestureListener() {\n-            public void dragGestureRecognized(DragGestureEvent dge) {\n-                dge.startDrag(null, new StringSelection(\"test\"), dsl);\n-            }\n-        };\n+        DragGestureListener dgl = dge -> dge.startDrag(null, new StringSelection(\"test\"), dsl);\n@@ -148,0 +146,1 @@\n+            robot.setAutoDelay(100);\n@@ -149,1 +148,3 @@\n-            Point startPoint = panel.getLocationOnScreen();\n+            AtomicReference<Point> startPointRef = new AtomicReference<>();\n+            EventQueue.invokeAndWait(()-> startPointRef.set(panel.getLocationOnScreen()));\n+            Point startPoint = startPointRef.get();\n@@ -166,1 +167,1 @@\n-                robot.mousePress(InputEvent.BUTTON1_MASK);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -170,1 +171,1 @@\n-                robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -174,0 +175,1 @@\n+                captureScreen();\n@@ -182,1 +184,2 @@\n-            throw new RuntimeException(\"wrong drop action!\");\n+            captureScreen();\n+            throw new RuntimeException(\"Wrong drop action!\");\n@@ -185,1 +188,19 @@\n-        System.err.println(\"test passed!\");\n+        System.err.println(\"Test passed!\");\n+    }\n+    private static void disposeFrame() {\n+        if(frame != null) {\n+            frame.dispose();\n+        }\n+        if(test != null) {\n+            test.dispose();\n+        }\n+    }\n+    private static void captureScreen() {\n+        try {\n+            final Rectangle screenBounds = new Rectangle(\n+                    Toolkit.getDefaultToolkit().getScreenSize());\n+            ImageIO.write(robot.createScreenCapture(screenBounds),\n+                          \"png\", new File(\"Failure_Screen.png\"));\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n@@ -187,1 +208,0 @@\n-\n@@ -206,1 +226,1 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -208,1 +228,1 @@\n-            robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -241,1 +261,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/awt\/dnd\/DropActionChangeTest.java","additions":47,"deletions":27,"binary":false,"changes":74,"status":"modified"}]}