{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -86,17 +84,11 @@\n-\n-    @SuppressWarnings(\"removal\")\n-    private static IOException create(IOException e, String msg) {\n-        return AccessController.doPrivileged(new PrivilegedAction<IOException>() {\n-            public IOException run() {\n-                try {\n-                    Class<?> clazz = e.getClass();\n-                    Constructor<?> ctor = clazz.getConstructor(String.class);\n-                    IOException e1 = (IOException)(ctor.newInstance(msg));\n-                    e1.setStackTrace(e.getStackTrace());\n-                    return e1;\n-                } catch (Exception e0) {\n-                    \/\/ Some eg AsynchronousCloseException have no detail msg\n-                    return e;\n-                }\n-            }\n-        });\n+    private static IOException create(final IOException e, final String msg) {\n+        try {\n+            Class<?> clazz = e.getClass();\n+            Constructor<?> ctor = clazz.getConstructor(String.class);\n+            IOException e1 = (IOException)(ctor.newInstance(msg));\n+            e1.setStackTrace(e.getStackTrace());\n+            return e1;\n+        } catch (Exception e0) {\n+            \/\/ Some eg AsynchronousCloseException have no detail msg\n+            return e;\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/net\/util\/SocketExceptions.java","additions":12,"deletions":20,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -39,3 +39,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedExceptionAction;\n-import java.security.PrivilegedActionException;\n@@ -162,1 +159,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -164,1 +160,0 @@\n-        JarFile result = null;\n@@ -168,2 +163,0 @@\n-\n-        \/* get the stream before asserting privileges *\/\n@@ -171,21 +164,14 @@\n-            result = AccessController.doPrivileged(\n-                new PrivilegedExceptionAction<>() {\n-                    public JarFile run() throws IOException {\n-                        Path tmpFile = Files.createTempFile(\"jar_cache\", null);\n-                        try {\n-                            Files.copy(in, tmpFile, StandardCopyOption.REPLACE_EXISTING);\n-                            JarFile jarFile = new URLJarFile(tmpFile.toFile(), closeController, version);\n-                            tmpFile.toFile().deleteOnExit();\n-                            return jarFile;\n-                        } catch (Throwable thr) {\n-                            try {\n-                                Files.delete(tmpFile);\n-                            } catch (IOException ioe) {\n-                                thr.addSuppressed(ioe);\n-                            }\n-                            throw thr;\n-                        }\n-                    }\n-                });\n-        } catch (PrivilegedActionException pae) {\n-            throw (IOException) pae.getException();\n+            Path tmpFile = Files.createTempFile(\"jar_cache\", null);\n+            try {\n+                Files.copy(in, tmpFile, StandardCopyOption.REPLACE_EXISTING);\n+                JarFile jarFile = new URLJarFile(tmpFile.toFile(), closeController, version);\n+                tmpFile.toFile().deleteOnExit();\n+                return jarFile;\n+            } catch (Throwable thr) {\n+                try {\n+                    Files.delete(tmpFile);\n+                } catch (IOException ioe) {\n+                    thr.addSuppressed(ioe);\n+                }\n+                throw thr;\n+            }\n@@ -193,2 +179,0 @@\n-\n-        return result;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/jar\/URLJarFile.java","additions":14,"deletions":30,"binary":false,"changes":44,"status":"modified"}]}