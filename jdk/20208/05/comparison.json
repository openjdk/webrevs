{"files":[{"patch":"@@ -257,0 +257,16 @@\n+#if defined(__linux__) && defined(__arm__)\n+\/**\n+ * Lookup functions with time_t parameter. Try to use 64 bit symbol\n+ * if sizeof(time_t) exceeds 32 bit.\n+ *\/\n+static void* lookup_time_t_function(const char* symbol, const char* symbol64) {\n+    void *func_ptr = NULL;\n+    if (sizeof(time_t) > 4) {\n+        func_ptr =  dlsym(RTLD_DEFAULT, symbol64);\n+    }\n+    if (func_ptr == NULL)\n+        return dlsym(RTLD_DEFAULT, symbol);\n+   return func_ptr;\n+}\n+#endif\n+\n@@ -354,0 +370,8 @@\n+#if defined(__linux__) && defined(__arm__)\n+    my_futimesat_func = (futimesat_func*) lookup_time_t_function(\"futimesat\",\n+        \"__futimesat64\");\n+    my_lutimes_func = (lutimes_func*) lookup_time_t_function(\"lutimes\",\n+        \"__lutimes64\");\n+    my_futimens_func = (futimens_func*) lookup_time_t_function(\"futimens\",\n+        \"__futimens64\");\n+#else\n@@ -359,0 +383,1 @@\n+#endif\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixNativeDispatcher.c","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"}]}