{"files":[{"patch":"@@ -71,0 +71,1 @@\n+\n@@ -72,0 +73,18 @@\n+            \/\/ try up to 20 times to avoid failures on slow environment\n+            for (int iter = 20; iter > 0; iter--) {\n+                try {\n+                    verify(vthread2);\n+                    break;\n+                } catch (RuntimeException ex) {\n+                    if (iter == 0) {\n+                        throw ex;\n+                    }\n+                    System.out.println(\"Failed with: \" + ex.getMessage() + \", retrying...\");\n+                    System.out.println();\n+                }\n+                Thread.sleep(1000);\n+            }\n+        } finally {\n+            longInitClass_wait = false;\n+        }\n+    }\n@@ -73,10 +92,11 @@\n-            boolean silent = true;\n-            OutputAnalyzer output = new PidJcmdExecutor().execute(\"Thread.print -l\", silent);\n-            String out = output.getStdout();\n-            String carrierPrefix = \"Carrying virtual thread #\" + vthread2.threadId();\n-            String vthreadPrefix = \"Mounted virtual thread \" + \"#\" + vthread2.threadId();\n-            int carrierStart = out.indexOf(carrierPrefix);\n-            int vthreadStart = out.indexOf(vthreadPrefix);\n-            int vthreadEnd = out.indexOf(\"\\n\\n\", vthreadStart);\n-            String carrierOut = out.substring(carrierStart, vthreadStart);\n-            String vthreadOut = out.substring(vthreadStart, vthreadEnd);\n+    static void verify(Thread vthread2) {\n+        boolean silent = true;\n+        OutputAnalyzer output = new PidJcmdExecutor().execute(\"Thread.print -l\", silent);\n+        String out = output.getStdout();\n+        String carrierPrefix = \"Carrying virtual thread #\" + vthread2.threadId();\n+        String vthreadPrefix = \"Mounted virtual thread \" + \"#\" + vthread2.threadId();\n+        int carrierStart = out.indexOf(carrierPrefix);\n+        int vthreadStart = out.indexOf(vthreadPrefix);\n+        int vthreadEnd = out.indexOf(\"\\n\\n\", vthreadStart);\n+        String carrierOut = out.substring(carrierStart, vthreadStart);\n+        String vthreadOut = out.substring(vthreadStart, vthreadEnd);\n@@ -84,2 +104,2 @@\n-            System.out.println(\"carrier: \" + carrierOut);\n-            System.out.println(\"vthread: \" + vthreadOut);\n+        System.out.println(\"carrier: \" + carrierOut);\n+        System.out.println(\"vthread: \" + vthreadOut);\n@@ -87,1 +107,1 @@\n-            String waitText = \"- waiting on the Class initialization monitor for LongInitClass\";\n+        String waitText = \"- waiting on the Class initialization monitor for LongInitClass\";\n@@ -89,8 +109,5 @@\n-            if (!vthreadOut.contains(waitText)) {\n-                throw new RuntimeException(\"Vthread does not contain the lock\");\n-            }\n-            if (carrierOut.contains(waitText)) {\n-                throw new RuntimeException(\"Carrier does contain the lock\");\n-            }\n-        } finally {\n-            longInitClass_wait = false;\n+        if (!vthreadOut.contains(waitText)) {\n+            throw new RuntimeException(\"Vthread does not contain the lock\");\n+        }\n+        if (carrierOut.contains(waitText)) {\n+            throw new RuntimeException(\"Carrier does contain the lock\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/thread\/ClassInitMonitorVThread.java","additions":38,"deletions":21,"binary":false,"changes":59,"status":"modified"}]}