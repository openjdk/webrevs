{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,2 +63,3 @@\n-        Content desc = tagletWriter.htmlWriter.commentTagsToContent(element, indexTree.getDescription(), context.within(indexTree));\n-        String descText = extractText(desc);\n+        Content desc = tagletWriter.htmlWriter.commentTagsToContent(element, indexTree.getDescription(),\n+                context.within(indexTree));\n+        String descText = desc.stripTags().toString();\n@@ -68,6 +69,0 @@\n-\n-    \/\/ ugly but simple;\n-    \/\/ alternatives would be to walk the Content's tree structure, or to add new functionality to Content\n-    private String extractText(Content c) {\n-        return c.toString().replaceAll(\"<[^>]+>\", \"\");\n-    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/IndexTaglet.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import jdk.javadoc.internal.html.Entity;\n@@ -51,1 +50,0 @@\n-import jdk.javadoc.internal.html.RawHtml;\n@@ -53,1 +51,0 @@\n-import jdk.javadoc.internal.html.TextBuilder;\n@@ -126,29 +123,1 @@\n-                textOf(label).replaceAll(\"\\\\s+\", \" \"), label);\n-    }\n-\n-    \/\/ this is here, for now, but might be a useful addition elsewhere,\n-    \/\/ perhaps as a method on Content\n-    private String textOf(Content c) {\n-        return appendText(new StringBuilder(), c).toString();\n-    }\n-\n-    private StringBuilder appendText(StringBuilder sb, Content c) {\n-        if (c instanceof ContentBuilder cb) {\n-            appendText(sb, cb.getContents());\n-        } else if (c instanceof HtmlTree ht) {\n-            appendText(sb, ht.getContents());\n-        } else if (c instanceof RawHtml rh) {\n-            sb.append(rh.toString().replaceAll(\"<[^>]*>\", \"\"));\n-        } else if (c instanceof TextBuilder tb) {\n-            sb.append(tb.toString());\n-        } else if (c instanceof Text t) {\n-            sb.append(t.toString());\n-        } else if (c instanceof Entity e) {\n-            sb.append(e.toString());\n-        }\n-        return sb;\n-    }\n-\n-    private StringBuilder appendText(StringBuilder sb, List<? extends Content> contents) {\n-        contents.forEach(c -> appendText(sb, c));\n-        return sb;\n+                label.stripTags().toString().replaceAll(\"\\\\s+\", \" \"), label);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SpecTaglet.java","additions":1,"deletions":32,"binary":false,"changes":33,"status":"modified"}]}