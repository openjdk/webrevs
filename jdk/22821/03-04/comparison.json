{"files":[{"patch":"@@ -602,1 +602,1 @@\n-            return getSpace0(f, t);\n+            return getSpace0(getFileForWin32Calls(f), t);\n","filename":"src\/java.base\/windows\/classes\/java\/io\/WinNTFileSystem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.nio.file.FileStore;\n@@ -101,0 +102,10 @@\n+    private void checkSpace(long expected, long actual) {\n+        if (expected == 0) {\n+            assertEquals(actual, 0L);\n+        } else {\n+            assertTrue(actual > 0);\n+            long ds = Math.abs(expected - actual);\n+            assertTrue((double)ds\/expected < 0.05);\n+        }\n+    }\n+\n@@ -103,2 +114,3 @@\n-    public void getFreeSpace() {\n-        assertTrue(f.getFreeSpace() > 0);\n+    public void getFreeSpace() throws IOException {\n+        FileStore fs = Files.getFileStore(f.toPath());\n+        checkSpace(fs.getUnallocatedSpace(), f.getFreeSpace());\n@@ -109,2 +121,3 @@\n-    public void getTotalSpace() {\n-        assertTrue(f.getTotalSpace() > 0);\n+    public void getTotalSpace() throws IOException {\n+        FileStore fs = Files.getFileStore(f.toPath());\n+        checkSpace(fs.getTotalSpace(), f.getTotalSpace());\n@@ -115,2 +128,3 @@\n-    public void getUsableSpace() {\n-        assertTrue(f.getUsableSpace() > 0);\n+    public void getUsableSpace() throws IOException {\n+        FileStore fs = Files.getFileStore(f.toPath());\n+        checkSpace(fs.getUsableSpace(), f.getUsableSpace());\n","filename":"test\/jdk\/java\/io\/File\/EmptyPath.java","additions":20,"deletions":6,"binary":false,"changes":26,"status":"modified"}]}