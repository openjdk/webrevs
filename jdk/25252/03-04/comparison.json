{"files":[{"patch":"@@ -3801,1 +3801,1 @@\n-                                   enum operand_size size,\n+                                   Assembler::operand_size size,\n@@ -3822,1 +3822,1 @@\n-                                       enum operand_size size,\n+                                       Assembler::operand_size size,\n@@ -3839,1 +3839,1 @@\n-                                                 enum operand_size size,\n+                                                 Assembler::operand_size size,\n@@ -3869,1 +3869,1 @@\n-                                          enum operand_size size,\n+                                          Assembler::operand_size size,\n@@ -3944,1 +3944,1 @@\n-                                               enum operand_size size,\n+                                               Assembler::operand_size size,\n@@ -4139,1 +4139,1 @@\n-                                enum operand_size size, Assembler::Aqrl acquire, Assembler::Aqrl release) {\n+                                Assembler::operand_size size, Assembler::Aqrl acquire, Assembler::Aqrl release) {\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1190,1 +1190,1 @@\n-               enum operand_size size,\n+               Assembler::operand_size size,\n@@ -1195,1 +1195,1 @@\n-                    enum operand_size size,\n+                    Assembler::operand_size size,\n@@ -1199,1 +1199,1 @@\n-                                   enum operand_size size,\n+                                   Assembler::operand_size size,\n@@ -1203,1 +1203,1 @@\n-                            enum operand_size size,\n+                            Assembler::operand_size size,\n@@ -1209,1 +1209,1 @@\n-                                 enum operand_size size,\n+                                 Assembler::operand_size size,\n@@ -1226,1 +1226,1 @@\n-  void atomic_cas(Register prev, Register newv, Register addr, enum operand_size size,\n+  void atomic_cas(Register prev, Register newv, Register addr, Assembler::operand_size size,\n@@ -1639,2 +1639,2 @@\n-  void load_reserved(Register dst, Register addr, enum operand_size size, Assembler::Aqrl acquire);\n-  void store_conditional(Register dst, Register new_val, Register addr, enum operand_size size, Assembler::Aqrl release);\n+  void load_reserved(Register dst, Register addr, Assembler::operand_size size, Assembler::Aqrl acquire);\n+  void store_conditional(Register dst, Register new_val, Register addr, Assembler::operand_size size, Assembler::Aqrl release);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -5245,1 +5245,1 @@\n-    \"mv $res, $res == $oldval\\t# $res <-- ($res == $oldval ? 1 : 0), #@compareAndSwapB\"\n+    \"mv $res, $res == $oldval\\t# $res <-- ($res == $oldval ? 1 : 0), #@compareAndSwapB_narrow\"\n@@ -5265,2 +5265,0 @@\n-  effect(TEMP_DEF res, USE_KILL oldval, USE_KILL newval, KILL cr);\n-\n@@ -5294,1 +5292,1 @@\n-    \"mv $res, $res == $oldval\\t# $res <-- ($res == $oldval ? 1 : 0), #@compareAndSwapS\"\n+    \"mv $res, $res == $oldval\\t# $res <-- ($res == $oldval ? 1 : 0), #@compareAndSwapS_narrow\"\n@@ -5314,2 +5312,0 @@\n-  effect(TEMP_DEF res, USE_KILL oldval, USE_KILL newval, KILL cr);\n-\n@@ -5395,0 +5391,1 @@\n+\n@@ -5427,1 +5424,1 @@\n-    \"mv $res, $res == $oldval\\t# $res <-- ($res == $oldval ? 1 : 0), #@compareAndSwapBAcq\"\n+    \"mv $res, $res == $oldval\\t# $res <-- ($res == $oldval ? 1 : 0), #@compareAndSwapBAcq_narrow\"\n@@ -5447,2 +5444,0 @@\n-  effect(TEMP_DEF res, USE_KILL oldval, USE_KILL newval, KILL cr);\n-\n@@ -5476,1 +5471,1 @@\n-    \"mv $res, $res == $oldval\\t# $res <-- ($res == $oldval ? 1 : 0), #@compareAndSwapSAcq\"\n+    \"mv $res, $res == $oldval\\t# $res <-- ($res == $oldval ? 1 : 0), #@compareAndSwapSAcq_narrow\"\n@@ -5496,2 +5491,0 @@\n-  effect(TEMP_DEF res, USE_KILL oldval, USE_KILL newval, KILL cr);\n-\n@@ -5618,1 +5611,1 @@\n-    \"cmpxchg $res = $mem, $oldval, $newval\\t# (byte, weak) if $mem == $oldval then $mem <-- $newval, #@compareAndExchangeB\"\n+    \"cmpxchg $res = $mem, $oldval, $newval\\t# (byte, weak) if $mem == $oldval then $mem <-- $newval, #@compareAndExchangeB_narrow\"\n@@ -5638,2 +5631,0 @@\n-  effect(TEMP_DEF res, KILL cr, USE_KILL oldval, USE_KILL newval);\n-\n@@ -5664,1 +5655,1 @@\n-    \"cmpxchg $res = $mem, $oldval, $newval\\t# (short, weak) if $mem == $oldval then $mem <-- $newval, #@compareAndExchangeS\"\n+    \"cmpxchg $res = $mem, $oldval, $newval\\t# (short, weak) if $mem == $oldval then $mem <-- $newval, #@compareAndExchangeS_narrow\"\n@@ -5684,2 +5675,0 @@\n-  effect(TEMP_DEF res, KILL cr, USE_KILL oldval, USE_KILL newval);\n-\n@@ -5704,2 +5693,0 @@\n-  effect(TEMP_DEF res);\n-\n@@ -5724,2 +5711,0 @@\n-  effect(TEMP_DEF res);\n-\n@@ -5741,0 +5726,1 @@\n+\n@@ -5745,2 +5731,0 @@\n-  effect(TEMP_DEF res);\n-\n@@ -5762,0 +5746,1 @@\n+\n@@ -5766,2 +5751,0 @@\n-  effect(TEMP_DEF res);\n-\n@@ -5792,1 +5775,1 @@\n-    \"cmpxchg_acq $res = $mem, $oldval, $newval\\t# (byte, weak) if $mem == $oldval then $mem <-- $newval, #@compareAndExchangeBAcq\"\n+    \"cmpxchg_acq $res = $mem, $oldval, $newval\\t# (byte, weak) if $mem == $oldval then $mem <-- $newval, #@compareAndExchangeBAcq_narrow\"\n@@ -5812,2 +5795,0 @@\n-  effect(TEMP_DEF res, KILL cr, USE_KILL oldval, USE_KILL newval);\n-\n@@ -5820,1 +5801,1 @@\n-              \/*acquire*\/ Assembler::aq, \/*release*\/ Assembler::rl, $res$$Register);\n+               \/*acquire*\/ Assembler::aq, \/*release*\/ Assembler::rl, $res$$Register);\n@@ -5838,1 +5819,1 @@\n-    \"cmpxchg_acq $res = $mem, $oldval, $newval\\t# (short, weak) if $mem == $oldval then $mem <-- $newval, #@compareAndExchangeSAcq\"\n+    \"cmpxchg_acq $res = $mem, $oldval, $newval\\t# (short, weak) if $mem == $oldval then $mem <-- $newval, #@compareAndExchangeSAcq_narrow\"\n@@ -5858,2 +5839,0 @@\n-  effect(TEMP_DEF res, KILL cr, USE_KILL oldval, USE_KILL newval);\n-\n@@ -5880,2 +5859,0 @@\n-  effect(TEMP_DEF res);\n-\n@@ -5902,2 +5879,0 @@\n-  effect(TEMP_DEF res);\n-\n@@ -5924,2 +5899,0 @@\n-  effect(TEMP_DEF res);\n-\n@@ -5946,2 +5919,0 @@\n-  effect(TEMP_DEF res);\n-\n@@ -5973,1 +5944,1 @@\n-    \"# $res == 1 when success, #@weakCompareAndSwapB\"\n+    \"# $res == 1 when success, #@weakCompareAndSwapB_narrow\"\n@@ -5993,2 +5964,0 @@\n-  effect(TEMP_DEF res, KILL cr, USE_KILL oldval, USE_KILL newval);\n-\n@@ -6021,1 +5990,1 @@\n-    \"# $res == 1 when success, #@weakCompareAndSwapS\"\n+    \"# $res == 1 when success, #@weakCompareAndSwapS_narrow\"\n@@ -6041,2 +6010,0 @@\n-  effect(TEMP_DEF res, KILL cr, USE_KILL oldval, USE_KILL newval);\n-\n@@ -6097,0 +6064,1 @@\n+\n@@ -6117,0 +6085,1 @@\n+\n@@ -6147,1 +6116,1 @@\n-    \"# $res == 1 when success, #@weakCompareAndSwapBAcq\"\n+    \"# $res == 1 when success, #@weakCompareAndSwapBAcq_narrow\"\n@@ -6167,2 +6136,0 @@\n-  effect(TEMP_DEF res, KILL cr, USE_KILL oldval, USE_KILL newval);\n-\n@@ -6195,1 +6162,1 @@\n-    \"# $res == 1 when success, #@weakCompareAndSwapSAcq\"\n+    \"# $res == 1 when success, #@weakCompareAndSwapSAcq_narrow\"\n@@ -6215,2 +6182,0 @@\n-  effect(TEMP_DEF res, KILL cr, USE_KILL oldval, USE_KILL newval);\n-\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":18,"deletions":53,"binary":false,"changes":71,"status":"modified"}]}