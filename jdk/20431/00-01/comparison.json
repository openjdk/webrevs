{"files":[{"patch":"@@ -71,1 +71,1 @@\n-    size_t hs = length_offset_in_bytes() + sizeof(int);\n+    int hs = length_offset_in_bytes() + (int)sizeof(int);\n@@ -74,1 +74,1 @@\n-    static size_t arrayoopdesc_hs = 0;\n+    static int arrayoopdesc_hs = 0;\n@@ -86,1 +86,1 @@\n-                               sizeof(arrayOopDesc);\n+                               (int)sizeof(arrayOopDesc);\n@@ -91,2 +91,2 @@\n-    size_t hs = header_size_in_bytes();\n-    return (int)(element_type_should_be_aligned(type) ? align_up(hs, BytesPerLong) : hs);\n+    int hs = header_size_in_bytes();\n+    return element_type_should_be_aligned(type) ? align_up(hs, BytesPerLong) : hs;\n@@ -142,1 +142,1 @@\n-      align_down((SIZE_MAX\/HeapWordSize - hdr_size_in_words), MinObjAlignment);\n+      align_down((SIZE_MAX\/HeapWordSize - (size_t)hdr_size_in_words), MinObjAlignment);\n@@ -144,1 +144,1 @@\n-      HeapWordSize * max_element_words_per_size_t \/ type2aelembytes(type);\n+      HeapWordSize * max_element_words_per_size_t \/ (size_t)type2aelembytes(type);\n","filename":"src\/hotspot\/share\/oops\/arrayOop.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1121,1 +1121,1 @@\n-  size_t offset = pointer_delta(dest, aligned_dest, 1);\n+  uint32_t offset = checked_cast<uint32_t>(pointer_delta(dest, aligned_dest, 1));\n","filename":"src\/hotspot\/share\/runtime\/atomic.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    return (((x & UINT16_C(0x00ff)) << 8) | ((x & UINT16_C(0xff00)) >> 8));\n+    return checked_cast<uint16_t>(((x & UINT16_C(0x00ff)) << 8) | ((x & UINT16_C(0xff00)) >> 8));\n","filename":"src\/hotspot\/share\/utilities\/byteswap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}