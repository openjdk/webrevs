{"files":[{"patch":"@@ -379,7 +379,0 @@\n-\n-  \/\/ Set next compaction spaces.\n-  eden()->set_next_compaction_space(from());\n-  \/\/ The to-space is normally empty before a compaction so need\n-  \/\/ not be considered.  The exception is during promotion\n-  \/\/ failure handling when to-space can contain live objects.\n-  from()->set_next_compaction_space(nullptr);\n@@ -392,5 +385,0 @@\n-  eden()->set_next_compaction_space(from());\n-  \/\/ The to-space is normally empty before a compaction so need\n-  \/\/ not be considered.  The exception is during promotion\n-  \/\/ failure handling when to-space can contain live objects.\n-  from()->set_next_compaction_space(nullptr);\n@@ -777,1 +765,0 @@\n-    from()->set_next_compaction_space(to());\n@@ -798,1 +785,0 @@\n-  from()->set_next_compaction_space(nullptr);\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -74,1 +74,0 @@\n-  bool   promotion_failed() { return _promotion_failed; }\n@@ -165,0 +164,2 @@\n+  bool promotion_failed() { return _promotion_failed; }\n+\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -268,2 +268,1 @@\n-    bool is_promotion_failed = (heap->young_gen()->from()->next_compaction_space() != nullptr);\n-    if (is_promotion_failed) {\n+    if (heap->young_gen()->promotion_failed()) {\n","filename":"src\/hotspot\/share\/gc\/serial\/serialFullGC.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-  _next_compaction_space(nullptr),\n@@ -67,1 +66,0 @@\n-  _next_compaction_space = nullptr;\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,3 +67,0 @@\n-\n-  ContiguousSpace* _next_compaction_space;\n-\n@@ -126,12 +123,0 @@\n-  \/\/ Returns the next space (in the current generation) to be compacted in\n-  \/\/ the global compaction order.  Also is used to select the next\n-  \/\/ space into which to compact.\n-\n-  ContiguousSpace* next_compaction_space() const {\n-    return _next_compaction_space;\n-  }\n-\n-  void set_next_compaction_space(ContiguousSpace* csp) {\n-    _next_compaction_space = csp;\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"}]}