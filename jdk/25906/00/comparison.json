{"files":[{"patch":"@@ -1019,2 +1019,1 @@\n-void InterpreterMacroAssembler::profile_taken_branch(Register mdp,\n-                                                     Register bumped_count) {\n+void InterpreterMacroAssembler::profile_taken_branch(Register mdp) {\n@@ -1025,1 +1024,0 @@\n-    \/\/ Otherwise, assign to mdp\n@@ -1029,15 +1027,2 @@\n-    \/\/ We inline increment_mdp_data_at to return bumped_count in a register\n-    \/\/increment_mdp_data_at(mdp, in_bytes(JumpData::taken_offset()));\n-    Address data(mdp, in_bytes(JumpData::taken_offset()));\n-    ldr(bumped_count, data);\n-    assert(DataLayout::counter_increment == 1,\n-            \"flow-free idiom only works with 1\");\n-    \/\/ Intel does this to catch overflow\n-    \/\/ addptr(bumped_count, DataLayout::counter_increment);\n-    \/\/ sbbptr(bumped_count, 0);\n-    \/\/ so we do this\n-    adds(bumped_count, bumped_count, DataLayout::counter_increment);\n-    Label L;\n-    br(Assembler::CS, L);       \/\/ skip store if counter overflow\n-    str(bumped_count, data);\n-    bind(L);\n+    increment_mdp_data_at(mdp, in_bytes(JumpData::taken_offset()));\n+\n@@ -1058,1 +1043,1 @@\n-    \/\/ We are taking a branch.  Increment the not taken count.\n+    \/\/ We are not taking a branch.  Increment the not taken count.\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":4,"deletions":19,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-  void profile_taken_branch(Register mdp, Register bumped_count);\n+  void profile_taken_branch(Register mdp);\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1762,1 +1762,1 @@\n-  __ profile_taken_branch(r0, r1);\n+  __ profile_taken_branch(r0);\n@@ -1812,1 +1812,0 @@\n-    \/\/ w1: MDO bumped taken-count\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}