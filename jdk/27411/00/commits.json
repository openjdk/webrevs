[{"commit":{"message":"JDK-8266431: Dual-Pivot Quicksort improvements (Radix sort)\n\nFix CRLF to LF"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/DualPivotQuicksort.java"},{"filename":"test\/jdk\/java\/util\/Arrays\/Sorting.java"},{"filename":"test\/jdk\/java\/util\/Arrays\/java.base\/java\/util\/SortingHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysSort.java"}],"sha":"496b89df5d8444843cdf6ac1be7d78681c19053a"},{"commit":{"message":"JDK-8266431: Dual-Pivot Quicksort improvements (Radix sort)\n\nThe main achievements\n\n- introduced Radix in parallel sorting which shows several times boost of performance and has linear complexity instead of n*ln(n)\n- improved mixed insertion sort (makes whole sorting faster)\n- improved merging sort for almost sorted data\n- optimized parallel sorting\n- improved step for pivot candidates and pivot partitioning\n- suggested better buffer allocation: if no memory, it is switched to in-place sorting with no OutOfMemoryError\n- minor javadoc and comment changes\n\n- extended existing tests\n- added tests for radix sort, heap sort, insertion sort\n- added benchmarking JMH tests\n- improved test coverage"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/DualPivotQuicksort.java"},{"filename":"test\/jdk\/java\/util\/Arrays\/Sorting.java"},{"filename":"test\/jdk\/java\/util\/Arrays\/java.base\/java\/util\/SortingHelper.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysSort.java"}],"sha":"a040fa64aba5bb210f882986052b88bc812986a5"}]