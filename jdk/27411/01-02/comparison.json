{"files":[{"patch":"@@ -64,1 +64,1 @@\n-     * Max size of array to use insertion sort.\n+     * Max size of array to use insertion sort (the best for shuffle data).\n@@ -71,1 +71,1 @@\n-     * Min size of array to use merging sort.\n+     * Min size of array to use merging sort (the best for stagger data).\n@@ -76,1 +76,1 @@\n-     * Min size of run to continue scanning.\n+     * Min size of run to continue scanning (the best for stagger data).\n@@ -88,1 +88,1 @@\n-     * Min size of array to use counting sort.\n+     * Min size of array to use counting sort (the best for random data).\n@@ -93,1 +93,1 @@\n-     * Min size of array to use numerical sort.\n+     * Min size of array to use numerical sort (the best for repeated data).\n@@ -100,1 +100,1 @@\n-     * Min size of array to perform sorting in parallel.\n+     * Min size of array to perform sorting in parallel (the best for stagger data).\n@@ -138,0 +138,3 @@\n+     * The signature of this method is in sync with native implementation\n+     * based on AVX512 instructions from linux\/native\/libsimdsort package,\n+     * don't change the signature.\n@@ -180,0 +183,3 @@\n+     * The signature of this method is in sync with native implementation\n+     * based on AVX512 instructions from linux\/native\/libsimdsort package,\n+     * don't change the signature.\n@@ -4472,0 +4478,1 @@\n+        @java.io.Serial\n@@ -4548,0 +4555,1 @@\n+        @java.io.Serial\n","filename":"src\/java.base\/share\/classes\/java\/util\/DualPivotQuicksort.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"}]}