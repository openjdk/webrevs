{"files":[{"patch":"@@ -267,0 +267,1 @@\n+    private JMenuBar customDefaultMenuBar;\n@@ -982,0 +983,1 @@\n+            customDefaultMenuBar = menuBar;\n@@ -987,0 +989,2 @@\n+        } else {\n+            customDefaultMenuBar = null;\n@@ -992,0 +996,10 @@\n+    \/**\n+     * Returns a previously set DefaultMenuBar. Returns null if\n+     * no previous DefaultMenuBar has been set.\n+     *\n+     * @return customDefaultMenuBar The DefaultMenuBar\n+     *\/\n+    public JMenuBar getCustomDefaultMenuBar() {\n+        return customDefaultMenuBar;\n+    }\n+\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Desktop.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -305,0 +305,17 @@\n+         \/\/ also check if a customDefaultMenuBar wants the event\n+        JMenuBar customDefaultMenuBar = Desktop.getDesktop().getCustomDefaultMenuBar();\n+        if (customDefaultMenuBar != null) {\n+            if (customDefaultMenuBar.isEnabled()) {\n+                boolean extended = (ksE != null) && !ksE.equals(ks);\n+                if (extended) {\n+                    fireBinding(customDefaultMenuBar, ksE, e, pressed);\n+                }\n+                if (!extended || !e.isConsumed()) {\n+                    fireBinding(customDefaultMenuBar, ks, e, pressed);\n+                }\n+                if (e.isConsumed()) {\n+                    return true;\n+                }\n+            }\n+        }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/KeyboardManager.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,121 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Desktop;\n+import java.awt.Toolkit;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.KeyEvent;\n+import javax.swing.AbstractAction;\n+import javax.swing.Action;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JTextArea;\n+import javax.swing.KeyStroke;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 8333589\n+ * @key headful\n+ * @summary Check menu item actions work with Desktop.setDefaultMenuBar()\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual SetDefaultMenuBarTest\n+ *\/\n+\n+public class SetDefaultMenuBarTest {\n+    static JFrame frame;\n+    static JTextArea text;\n+    final static boolean useDefaultMenuBar = true;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            String INSTRUCTIONS = \"\"\"\n+                    Press cmd + Backspace.\n+                    If a \"Delete pressed\" message appears, pass the test.\n+                    Otherwise, fail the test.\"\"\";\n+\n+            PassFailJFrame.builder()\n+                    .title(\"SetDefaultMenuBarTest\")\n+                    .instructions(INSTRUCTIONS)\n+                    .rows(5)\n+                    .columns(35)\n+                    .testUI(SetDefaultMenuBarTest::createAndShowGUI)\n+                    .build()\n+                    .awaitAndCheck();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static JFrame createAndShowGUI() {\n+        frame = new JFrame(\"SetDefaultMenuBarTest\");\n+\n+        if (!useDefaultMenuBar) {\n+            System.setProperty(\"apple.laf.useScreenMenuBar\", \"true\");\n+        }\n+\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setSize(300, 300);\n+\n+        JMenuBar menuBar = new JMenuBar();\n+\n+        if (!useDefaultMenuBar) {\n+            Desktop.getDesktop().setDefaultMenuBar(menuBar);\n+        } else {\n+            frame.setJMenuBar(menuBar);\n+        }\n+\n+        JMenu menu = new JMenu(\"Test\");\n+        menuBar.add(menu);\n+\n+        var action = new DeleteAction();\n+        menu.add(action);\n+\n+        text = new JTextArea();\n+        frame.add(text);\n+\n+        return frame;\n+    }\n+\n+    static class DeleteAction extends AbstractAction {\n+        public DeleteAction() {\n+            putValue(Action.NAME, \"Delete\");\n+            var keystroke = KeyStroke.getKeyStroke(\n+                    KeyEvent.VK_BACK_SPACE,\n+                    Toolkit.getDefaultToolkit().getMenuShortcutKeyMaskEx()\n+            );\n+            putValue(Action.ACCELERATOR_KEY, keystroke);\n+        }\n+\n+        @Override\n+        public void actionPerformed(ActionEvent e) {\n+            text.append(\"Delete pressed\\n\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuBar\/SetDefaultMenuBarTest.java","additions":121,"deletions":0,"binary":false,"changes":121,"status":"added"}]}