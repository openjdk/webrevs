{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -477,1 +477,1 @@\n-  case vmIntrinsics::_isConstantExpression:     return inline_is_constant_expression();\n+  case vmIntrinsics::_isConstantExpression:     return inline_isCompileConstant();\n@@ -2755,8 +2755,0 @@\n-bool LibraryCallKit::inline_is_constant_expression() {\n-  Node* expr = argument(0);\n-  const Type* t = gvn().type(expr);\n-  int res = t->isa_long() && t->is_long()->is_con() ? 1 : 0;\n-  set_result(gvn().intcon(res));\n-  return true;\n-}\n-\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -286,1 +286,0 @@\n-  bool inline_is_constant_expression();\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}