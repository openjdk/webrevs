{"files":[{"patch":"@@ -1223,4 +1223,0 @@\n-void java_lang_Class::set_signers(oop java_class, objArrayOop signers) {\n-  assert(_signers_offset != 0, \"must be set\");\n-  java_class->obj_field_put(_signers_offset, signers);\n-}\n@@ -1421,6 +1417,7 @@\n-  macro(_classRedefinedCount_offset, k, \"classRedefinedCount\", int_signature,         false); \\\n-  macro(_class_loader_offset,        k, \"classLoader\",         classloader_signature, false); \\\n-  macro(_component_mirror_offset,    k, \"componentType\",       class_signature,       false); \\\n-  macro(_module_offset,              k, \"module\",              module_signature,      false); \\\n-  macro(_name_offset,                k, \"name\",                string_signature,      false); \\\n-  macro(_classData_offset,           k, \"classData\",           object_signature,      false);\n+  macro(_classRedefinedCount_offset, k, \"classRedefinedCount\", int_signature,          false); \\\n+  macro(_class_loader_offset,        k, \"classLoader\",         classloader_signature,  false); \\\n+  macro(_component_mirror_offset,    k, \"componentType\",       class_signature,        false); \\\n+  macro(_module_offset,              k, \"module\",              module_signature,       false); \\\n+  macro(_name_offset,                k, \"name\",                string_signature,       false); \\\n+  macro(_classData_offset,           k, \"classData\",           object_signature,       false); \\\n+  macro(_signers_offset,             k, \"signers\",             object_array_signature, false);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -211,1 +211,0 @@\n-  macro(java_lang_Class, signers,                object_signature,  false) \\\n@@ -302,2 +301,1 @@\n-  static objArrayOop  signers(oop java_class);\n-  static void set_signers(oop java_class, objArrayOop signers);\n+  static objArrayOop signers(oop java_class);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -555,6 +555,0 @@\n-JNIEXPORT jobjectArray JNICALL\n-JVM_GetClassSigners(JNIEnv *env, jclass cls);\n-\n-JNIEXPORT void JNICALL\n-JVM_SetClassSigners(JNIEnv *env, jclass cls, jobjectArray signers);\n-\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1255,39 +1255,0 @@\n-JVM_ENTRY(jobjectArray, JVM_GetClassSigners(JNIEnv *env, jclass cls))\n-  JvmtiVMObjectAllocEventCollector oam;\n-  oop mirror = JNIHandles::resolve_non_null(cls);\n-  if (java_lang_Class::is_primitive(mirror)) {\n-    \/\/ There are no signers for primitive types\n-    return nullptr;\n-  }\n-\n-  objArrayHandle signers(THREAD, java_lang_Class::signers(mirror));\n-\n-  \/\/ If there are no signers set in the class, or if the class\n-  \/\/ is an array, return null.\n-  if (signers == nullptr) return nullptr;\n-\n-  \/\/ copy of the signers array\n-  Klass* element = ObjArrayKlass::cast(signers->klass())->element_klass();\n-  objArrayOop signers_copy = oopFactory::new_objArray(element, signers->length(), CHECK_NULL);\n-  for (int index = 0; index < signers->length(); index++) {\n-    signers_copy->obj_at_put(index, signers->obj_at(index));\n-  }\n-\n-  \/\/ return the copy\n-  return (jobjectArray) JNIHandles::make_local(THREAD, signers_copy);\n-JVM_END\n-\n-\n-JVM_ENTRY(void, JVM_SetClassSigners(JNIEnv *env, jclass cls, jobjectArray signers))\n-  oop mirror = JNIHandles::resolve_non_null(cls);\n-  if (!java_lang_Class::is_primitive(mirror)) {\n-    \/\/ This call is ignored for primitive types and arrays.\n-    \/\/ Signers are only set once, ClassLoader.java, and thus shouldn't\n-    \/\/ be called with an array.  Only the bootstrap loader creates arrays.\n-    Klass* k = java_lang_Class::as_Klass(mirror);\n-    if (k->is_instance_klass()) {\n-      java_lang_Class::set_signers(k->java_mirror(), objArrayOop(JNIHandles::resolve(signers)));\n-    }\n-  }\n-JVM_END\n-\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":0,"deletions":39,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -1113,2 +1113,2 @@\n-    \/\/ Set by VM\n-    private transient Object classData;\n+    private transient Object classData; \/\/ Set by VM\n+    private transient Object[] signers; \/\/ Read by VM, mutable\n@@ -1513,2 +1513,4 @@\n-    public native Object[] getSigners();\n-\n+    public Object[] getSigners() {\n+        var signers = this.signers;\n+        return signers == null ? null : signers.clone();\n+    }\n@@ -1519,2 +1521,5 @@\n-    native void setSigners(Object[] signers);\n-\n+    void setSigners(Object[] signers) {\n+        if (!isPrimitive() && !isArray()) {\n+            this.signers = signers;\n+        }\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -61,2 +61,0 @@\n-    {\"getSigners\",       \"()[\" OBJ,         (void *)&JVM_GetClassSigners},\n-    {\"setSigners\",       \"([\" OBJ \")V\",     (void *)&JVM_SetClassSigners},\n","filename":"src\/java.base\/share\/native\/libjava\/Class.c","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}