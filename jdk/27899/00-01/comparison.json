{"files":[{"patch":"@@ -161,0 +161,4 @@\n+  ifeq ($(SHIP_DEBUG_SYMBOLS), public)\n+    JVM_CFLAGS += -DHAS_STRIPPED_DEBUGINFO\n+  endif\n+\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -512,0 +512,8 @@\n+WB_ENTRY(jboolean, WB_HasExternalSymbolsStripped(JNIEnv* env, jobject o))\n+#if defined(HAS_STRIPPED_DEBUGINFO)\n+  return true;\n+#else\n+  return false;\n+#endif\n+WB_END\n+\n@@ -2816,0 +2824,1 @@\n+  {CC\"hasExternalSymbolsStripped\",       CC\"()Z\",                   (void*)&WB_HasExternalSymbolsStripped},\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+ * @library \/\n@@ -32,0 +33,1 @@\n+ * @build jdk.test.whitebox.WhiteBox\n@@ -33,1 +35,2 @@\n- * @run driver CheckForProperDetailStackTrace\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI CheckForProperDetailStackTrace\n@@ -43,0 +46,1 @@\n+import jdk.test.whitebox.WhiteBox;\n@@ -63,1 +67,3 @@\n-    private static final boolean expectSourceInformation = Platform.isLinux();\n+    private static boolean expectSourceInformation = Platform.isLinux() || Platform.isWindows();\n+\n+    static WhiteBox wb = WhiteBox.getWhiteBox();\n@@ -142,0 +148,2 @@\n+        if (wb.hasExternalSymbolsStripped()) { expectSourceInformation = false; }\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/CheckForProperDetailStackTrace.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -81,0 +81,2 @@\n+  public native boolean  hasExternalSymbolsStripped();\n+\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}