{"files":[{"patch":"@@ -44,1 +44,1 @@\n- * @bug 8343110 8361299\n+ * @bug 8343110 8361299 8364345\n@@ -64,0 +64,3 @@\n+    \/**\n+     * Randomly adjusts the position and limit such that the position will be in the first 1\/4th and the limit in the last half.\n+     *\/\n@@ -66,2 +69,2 @@\n-        int start = RAND.nextInt(mid - 3); \/\/ from 0 to mid\n-        int end = RAND.nextInt(mid + 3, cb.capacity()); \/\/ from mid to capacity\n+        int start = RAND.nextInt(mid >> 1); \/\/ from 0 to 1\/4\n+        int end = RAND.nextInt(mid + 1, cb.capacity()); \/\/ from mid to capacity\n@@ -73,0 +76,6 @@\n+    \/**\n+     * Generates random content to use for populating <i>cb<\/i> then calling through to {@code addCases(String, char[], CharBuffer, List)}\n+     * @param type String description of the type of CharBuffer under test.\n+     * @param cb CharBuffer instance to populate as base of creating cases.\n+     * @param cases The {@code List} to populate with the cases for use from {@link #charBufferArguments()}.\n+     *\/\n@@ -81,0 +90,9 @@\n+    \/**\n+     * Adds 4 cases to <i>cases<\/i>.\n+     * <ul>\n+     * <li>Full use of cb<\/li>.\n+     * <li>A duplicate of <i>cb<\/i> with a randomized position and limit. See {@code randomizeRange(CharBuffer)}<li>\n+     * <li>A {@link CharBuffer#slice() sliced} copy of randomized range.<\/li>\n+     * <li>A {@link CharBuffer#slice() sliced} copy of randomized range with a randomized position and limit.<\/li>\n+     * <\/ul>\n+     *\/\n@@ -104,0 +122,23 @@\n+     *\n+     * Generates the following sets of arguments\/test cases.\n+     * <ul>\n+     * <li>Randomly generated content\n+     *   <ul>\n+     *     <li>See {@code populateAndAddCases(String, CharBuffer, List)} for the following types:\n+     *       <ul>\n+     *         <li>HeapCharBuffer<\/i>\n+     *         <li>HeapByteBuffer Big Endian<\/i>\n+     *         <li>HeapByteBuffer Little Endian<\/i>\n+     *         <li>DirectByteBuffer Big Endian<\/i>\n+     *         <li>DirectByteBuffer Little Endian<\/i>\n+     *       <\/ul>\n+     *     <\/li>\n+     *     <li>Randomly generated content into {@link CharBuffer#wrap(CharSequence) StringCharBuffer} - see {@code addCases(String, char[], CharBuffer, List)}.\n+     *       <ul>\n+     *         <li>StringCharBuffer wrapping a {@code CharBuffer} created from {@link CharBuffer#wrap(char[])}<\/li>\n+     *         <li>StringCharBuffer wrapping a {@code String}<\/li>\n+     *       <\/ul>\n+     *     <\/li>\n+     *   <\/ul>\n+     * <\/li>\n+     * <\/ul>\n","filename":"test\/jdk\/java\/nio\/Buffer\/CharBufferAsCharSequenceTest.java","additions":44,"deletions":3,"binary":false,"changes":47,"status":"modified"}]}