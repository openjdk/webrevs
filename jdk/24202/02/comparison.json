{"files":[{"patch":"@@ -1893,1 +1893,1 @@\n-            String tagText = headingContent.replaceAll(\"\\\\s+\", \" \");\n+            String tagText = utils.normalizeWhitespace(headingContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        tagText = tagText.replaceAll(\"\\\\s+\", \" \");\n+        tagText = utils.normalizeWhitespace(tagText);\n@@ -64,1 +64,1 @@\n-        String descText = extractText(desc);\n+        String descText = utils.normalizeWhitespace(extractText(desc));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/IndexTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -126,1 +126,1 @@\n-                textOf(label).replaceAll(\"\\\\s+\", \" \"), label);\n+                utils.normalizeWhitespace(textOf(label)), label);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SpecTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1135,0 +1135,9 @@\n+    \/**\n+     * Replaces each group of one or more whitespace characters with a single canonical space\n+     * @param s the string to be normalized\n+     * @return normalized string\n+     *\/\n+    public String normalizeWhitespace(String s) {\n+        return s.replaceAll(\"\\\\s+\", \" \");\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8351332\n+ * @summary Line breaks in the description of `{@index}` tags may corrupt JSON search index\n+ * @library \/tools\/lib ..\/..\/lib\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build toolbox.ToolBox javadoc.tester.*\n+ * @run main TestIndexLineBreaks\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+public class TestIndexLineBreaks extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        var tester = new TestIndexLineBreaks ();\n+        tester.runTests();\n+    }\n+\n+    ToolBox tb = new ToolBox();\n+\n+    @Test\n+    public void test() throws IOException {\n+        Path src = Path.of(\"src\");\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                            package p;\n+                            public interface I {\n+                                \/**\n+                                 *\n+                                 * The {@index \"phrase1\n+                                 * phrase2\" description1\n+                                 * description2 }\n+                                 *\/\n+                                int a();\n+                            }\n+                        \"\"\");\n+\n+        javadoc(\"-d\",\n+                \"out\",\n+                \"-sourcepath\",\n+                src.toString(),\n+                \"p\");\n+\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"tag-search-index.js\", true,\n+                \"\"\"\n+                        {\"l\":\"phrase1 phrase2\",\"h\":\"p.I.a()\",\"d\":\"description1 description2 \",\"u\":\"p\/I.html#phrase1phrase2\"},{\"l\":\"Search Tags\",\"h\":\"\",\"k\":\"18\",\"u\":\"search-tags.html\"}\"\"\");\n+\n+        checkOutput(\"tag-search-index.js\", false,\n+                \"\"\"\n+                        {\"l\":\"phrase1 phrase2\",\"h\":\"p.I.a()\",\"d\":\"description1\n+                        description2 \",\"u\":\"p\/I.html#phrase1phrase2\"},{\"l\":\"Search Tags\",\"h\":\"\",\"k\":\"18\",\"u\":\"search-tags.html\"}\"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testIndexLineBreaks\/TestIndexLineBreaks.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"}]}