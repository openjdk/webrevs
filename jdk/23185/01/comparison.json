{"files":[{"patch":"@@ -58,1 +58,1 @@\n-    private HashMap<XMLReader, Boolean> m_inUse;\n+    private volatile HashMap<XMLReader, Boolean> m_inUse;\n@@ -96,1 +96,1 @@\n-    public synchronized XMLReader getXMLReader() throws SAXException {\n+    public XMLReader getXMLReader() throws SAXException {\n@@ -99,8 +99,12 @@\n-        if (m_readers == null) {\n-            \/\/ When the m_readers.get() method is called for the first time\n-            \/\/ on a thread, a new XMLReader will automatically be created.\n-            m_readers = new ThreadLocal<>();\n-        }\n-\n-        if (m_inUse == null) {\n-            m_inUse = new HashMap<>();\n+        if (m_readers == null || m_inUse == null) {\n+            synchronized (this) {\n+                if (m_readers == null) {\n+                    \/\/ When the m_readers.get() method is called for the first time\n+                    \/\/ on a thread, a new XMLReader will automatically be created.\n+                    m_readers = new ThreadLocal<>();\n+                }\n+\n+                if (m_inUse == null) {\n+                    m_inUse = new HashMap<>();\n+                }\n+            }\n@@ -108,1 +112,0 @@\n-\n@@ -122,14 +125,5 @@\n-        if (threadHasReader && m_inUse.get(reader) != Boolean.TRUE &&\n-                (rw.overrideDefaultParser == m_overrideDefaultParser) &&\n-                ( factory == null || reader.getClass().getName().equals(factory))) {\n-            m_inUse.put(reader, Boolean.TRUE);\n-            JdkXmlUtils.setReaderProperty(reader, _xmlSecurityManager, _useCatalog,\n-                    _catalogFeatures);\n-        } else {\n-            reader = JdkXmlUtils.getXMLReader(_xmlSecurityManager, m_overrideDefaultParser,\n-                    _secureProcessing, _useCatalog, _catalogFeatures);\n-\n-            \/\/ Cache the XMLReader if this is the first time we've created\n-            \/\/ a reader for this thread.\n-            if (!threadHasReader) {\n-                m_readers.set(new ReaderWrapper(reader, m_overrideDefaultParser));\n+\n+        synchronized (this) {\n+            if (threadHasReader && m_inUse.get(reader) != Boolean.TRUE &&\n+                    (rw.overrideDefaultParser == m_overrideDefaultParser) &&\n+                    ( factory == null || reader.getClass().getName().equals(factory))) {\n@@ -137,0 +131,12 @@\n+                JdkXmlUtils.setReaderProperty(reader, _xmlSecurityManager, _useCatalog,\n+                        _catalogFeatures);\n+            } else {\n+                reader = JdkXmlUtils.getXMLReader(_xmlSecurityManager, m_overrideDefaultParser,\n+                        _secureProcessing, _useCatalog, _catalogFeatures);\n+\n+                \/\/ Cache the XMLReader if this is the first time we've created\n+                \/\/ a reader for this thread.\n+                if (!threadHasReader) {\n+                    m_readers.set(new ReaderWrapper(reader, m_overrideDefaultParser));\n+                    m_inUse.put(reader, Boolean.TRUE);\n+                }\n@@ -138,1 +144,0 @@\n-        }\n@@ -140,3 +145,3 @@\n-        \/\/reader is cached, but this property might have been reset\n-        JdkXmlUtils.setXMLReaderPropertyIfSupport(reader, XMLConstants.ACCESS_EXTERNAL_DTD,\n-                _accessExternalDTD, true);\n+            \/\/reader is cached, but this property might have been reset\n+                JdkXmlUtils.setXMLReaderPropertyIfSupport(reader, XMLConstants.ACCESS_EXTERNAL_DTD,\n+                        _accessExternalDTD, true);\n@@ -144,2 +149,3 @@\n-        JdkXmlUtils.setXMLReaderPropertyIfSupport(reader, JdkConstants.CDATA_CHUNK_SIZE,\n-                _cdataChunkSize, false);\n+                JdkXmlUtils.setXMLReaderPropertyIfSupport(reader, JdkConstants.CDATA_CHUNK_SIZE,\n+                        _cdataChunkSize, false);\n+        }\n@@ -156,1 +162,1 @@\n-    public synchronized void releaseXMLReader(XMLReader reader) {\n+    public void releaseXMLReader(XMLReader reader) {\n@@ -170,1 +176,3 @@\n-            m_inUse.remove(reader);\n+            synchronized (this) {\n+                m_inUse.remove(reader);\n+            }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/utils\/XMLReaderManager.java","additions":41,"deletions":33,"binary":false,"changes":74,"status":"modified"}]}