{"files":[{"patch":"@@ -55,5 +55,0 @@\n-    \/**\n-     * Keeps track of whether an XMLReader object is in use.\n-     *\/\n-    private volatile HashMap<XMLReader, Boolean> m_inUse;\n-\n@@ -99,12 +94,4 @@\n-        if (m_readers == null || m_inUse == null) {\n-            synchronized (this) {\n-                if (m_readers == null) {\n-                    \/\/ When the m_readers.get() method is called for the first time\n-                    \/\/ on a thread, a new XMLReader will automatically be created.\n-                    m_readers = new ThreadLocal<>();\n-                }\n-\n-                if (m_inUse == null) {\n-                    m_inUse = new HashMap<>();\n-                }\n-            }\n+        if (m_readers == null) {\n+            \/\/ When the m_readers.get() method is called for the first time\n+            \/\/ on a thread, a new XMLReader will automatically be created.\n+            m_readers = new ThreadLocal<>();\n@@ -126,17 +113,13 @@\n-        synchronized (this) {\n-            if (threadHasReader && m_inUse.get(reader) != Boolean.TRUE &&\n-                    (rw.overrideDefaultParser == m_overrideDefaultParser) &&\n-                    ( factory == null || reader.getClass().getName().equals(factory))) {\n-                m_inUse.put(reader, Boolean.TRUE);\n-                JdkXmlUtils.setReaderProperty(reader, _xmlSecurityManager, _useCatalog,\n-                        _catalogFeatures);\n-            } else {\n-                reader = JdkXmlUtils.getXMLReader(_xmlSecurityManager, m_overrideDefaultParser,\n-                        _secureProcessing, _useCatalog, _catalogFeatures);\n-\n-                \/\/ Cache the XMLReader if this is the first time we've created\n-                \/\/ a reader for this thread.\n-                if (!threadHasReader) {\n-                    m_readers.set(new ReaderWrapper(reader, m_overrideDefaultParser));\n-                    m_inUse.put(reader, Boolean.TRUE);\n-                }\n+        if (threadHasReader &&\n+                (rw.overrideDefaultParser == m_overrideDefaultParser) &&\n+                ( factory == null || reader.getClass().getName().equals(factory))) {\n+            JdkXmlUtils.setReaderProperty(reader, _xmlSecurityManager, _useCatalog,\n+                    _catalogFeatures);\n+        } else {\n+            reader = JdkXmlUtils.getXMLReader(_xmlSecurityManager, m_overrideDefaultParser,\n+                    _secureProcessing, _useCatalog, _catalogFeatures);\n+\n+            \/\/ Cache the XMLReader if this is the first time we've created\n+            \/\/ a reader for this thread.\n+            if (!threadHasReader) {\n+                m_readers.set(new ReaderWrapper(reader, m_overrideDefaultParser));\n@@ -146,2 +129,2 @@\n-                JdkXmlUtils.setXMLReaderPropertyIfSupport(reader, XMLConstants.ACCESS_EXTERNAL_DTD,\n-                        _accessExternalDTD, true);\n+            JdkXmlUtils.setXMLReaderPropertyIfSupport(reader, XMLConstants.ACCESS_EXTERNAL_DTD,\n+                    _accessExternalDTD, true);\n@@ -149,2 +132,2 @@\n-                JdkXmlUtils.setXMLReaderPropertyIfSupport(reader, JdkConstants.CDATA_CHUNK_SIZE,\n-                        _cdataChunkSize, false);\n+            JdkXmlUtils.setXMLReaderPropertyIfSupport(reader, JdkConstants.CDATA_CHUNK_SIZE,\n+                    _cdataChunkSize, false);\n@@ -164,1 +147,1 @@\n-        \/\/ for this thread, remove it from the m_inUse list.\n+        \/\/ for this thread, remove it.\n@@ -176,3 +159,0 @@\n-            synchronized (this) {\n-                m_inUse.remove(reader);\n-            }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/utils\/XMLReaderManager.java","additions":22,"deletions":42,"binary":false,"changes":64,"status":"modified"}]}