{"files":[{"patch":"@@ -0,0 +1,103 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.TextLayout;\n+\n+import javax.swing.JPanel;\n+\n+\/*\n+ * @test\n+ * @bug 4427483\n+ * @summary Arabic text followed by newline should have no missing glyphs\n+ * @library \/open\/test\/jdk\/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ArabicBox\n+ *\/\n+public final class ArabicBox {\n+\n+    private static final String TEXT =\n+            \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\\n\";\n+\n+    private static final String FONT_NAME = Font.DIALOG;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            In the below panel, you should see the following text:\n+\n+            \"\"\"\n+            + TEXT + \"\"\"\n+            (It's \\u2018Arabic\\u2019 in Arabic.)\n+\n+            If there are no 'box glyphs' for missing glyphs,\n+            press Pass; otherwise, press Fail.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        final Font font = new Font(FONT_NAME, Font.PLAIN, 24);\n+        System.out.println(\"asked for \" + FONT_NAME + \" and got: \" + font.getFontName());\n+\n+        PassFailJFrame.builder()\n+                      .title(\"Arabic Box\")\n+                      .instructions(INSTRUCTIONS)\n+                      .rows(7)\n+                      .columns(40)\n+                      .splitUIBottom(() -> createPanel(font))\n+                      .build()\n+                      .awaitAndCheck();\n+    }\n+\n+    private static JPanel createPanel(Font font) {\n+        return new TextPanel(font);\n+    }\n+\n+    private static final class TextPanel extends JPanel {\n+        private TextLayout layout;\n+\n+        private TextPanel(Font font) {\n+            setForeground(Color.black);\n+            setBackground(Color.white);\n+            setFont(font);\n+            setPreferredSize(new Dimension(300, 150));\n+        }\n+\n+        @Override\n+        public void paint(Graphics g) {\n+            super.paint(g);\n+            Graphics2D g2d = (Graphics2D)g;\n+            if (layout == null) {\n+                Font font = g2d.getFont();\n+                FontRenderContext frc = g2d.getFontRenderContext();\n+\n+                layout = new TextLayout(TEXT, font, frc);\n+                System.out.println(layout.getBounds());\n+            }\n+\n+            layout.draw(g2d, 10, 50);\n+            g2d.drawString(TEXT, 10, 100);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/font\/TextLayout\/ArabicBox.java","additions":103,"deletions":0,"binary":false,"changes":103,"status":"added"}]}