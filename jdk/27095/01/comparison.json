{"files":[{"patch":"@@ -324,1 +324,2 @@\n-            System.out.println(\"Exception occured using \" + p.getName() + \" version \" + p.getVersionStr());\n+            System.out.println(\"Exception occured using \" + p.getName()\n+                    + \" version \" + p.getVersionStr());\n@@ -327,1 +328,1 @@\n-                double ver = getNSSInfo(\"nss\");\n+                Version ver = getNSSInfo(\"nss\");\n@@ -329,1 +330,4 @@\n-                if (ver > 3.139 && ver < 3.15 && osName.equals(\"Linux\")) {\n+\n+                if (osName.equals(\"Linux\") &&\n+                        ver.major() == 3 && ver.minor() < 15\n+                        && (ver.minor() > 13 && ver.patch() >= 9)) {\n@@ -331,1 +335,2 @@\n-                    System.out.println(\"Warning: old NSS \" + ver + \" might be problematic, consider upgrading it\");\n+                    System.out.println(\"Warning: old NSS \" + ver\n+                            + \" might be problematic, consider upgrading it\");\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestKATForGCM.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,5 +119,8 @@\n-        if (isNSS(provider) && expected.getAlgorithm().equals(\"AES\") &&\n-                (getNSSVersion() >= 3.12 && getNSSVersion() <= 3.122)) {\n-            System.out.println(\"NSS 3.12 bug returns incorrect AES key \"+\n-                    \"length breaking key storage. Aborting...\");\n-            return true;\n+        if (isNSS(provider) && expected.getAlgorithm().equals(\"AES\")) {\n+            Version version = getNSSVersion();\n+            if (version.major() == 3 && version.minor() == 12\n+                    && version.patch() <= 2) {\n+                System.out.println(\"NSS 3.12 bug returns incorrect AES key \" +\n+                        \"length breaking key storage. Aborting...\");\n+                return true;\n+            }\n@@ -171,1 +174,1 @@\n-                (getLibsoftokn3Version() != getLibnss3Version())) {\n+                (!getLibsoftokn3Version().equals(getLibnss3Version()))) {\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyStore\/SecretKeysBasic.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    static double nss_version = -1;\n+    static Version nss_version = null;\n@@ -96,2 +96,2 @@\n-    static double softoken3_version = -1;\n-    static double nss3_version = -1;\n+    static Version softoken3_version = null;\n+    static Version nss3_version = null;\n@@ -261,5 +261,21 @@\n-        double nssVersion = getNSSVersion();\n-        if (isNSS(p) && nssVersion >= 3.11 && nssVersion < 3.12) {\n-            System.out.println(\"NSS 3.11 has a DER issue that recent \" +\n-                    \"version do not, skipping\");\n-            return true;\n+        Version nssVersion = getNSSVersion();\n+        if (isNSS(p)) {\n+            \/\/ bad version is just between [3.11,3.12)\n+            return nssVersion.major == 3 && 11 == nssVersion.minor;\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    public record Version(int major, int minor, int patch) {}\n+\n+    protected static Version parseVersionString(String version) {\n+        String [] parts = version.split(\"\\\\.\");\n+        int major = Integer.parseInt(parts[0]);\n+        int minor = 0;\n+        int patch = 0;\n+        if (parts.length >= 2) {\n+            minor = Integer.parseInt(parts[1]);\n+        }\n+        if (parts.length >= 3) {\n+            patch = Integer.parseInt(parts[2]);\n@@ -267,1 +283,1 @@\n-        return false;\n+        return new Version(major, minor, patch);\n@@ -296,2 +312,2 @@\n-    static double getNSSVersion() {\n-        if (nss_version == -1)\n+    static Version getNSSVersion() {\n+        if (nss_version == null)\n@@ -303,1 +319,1 @@\n-        if (nss_version == -1)\n+        if (nss_version == null)\n@@ -308,2 +324,2 @@\n-    public static double getLibsoftokn3Version() {\n-        if (softoken3_version == -1)\n+    public static Version getLibsoftokn3Version() {\n+        if (softoken3_version == null)\n@@ -314,2 +330,2 @@\n-    public static double getLibnss3Version() {\n-        if (nss3_version == -1)\n+    public static Version getLibnss3Version() {\n+        if (nss3_version == null)\n@@ -330,1 +346,1 @@\n-    static double getNSSInfo(String library) {\n+    static Version getNSSInfo(String library) {\n@@ -339,1 +355,1 @@\n-        if (library.compareTo(\"softokn3\") == 0 && softoken3_version > -1)\n+        if (library.compareTo(\"softokn3\") == 0 && softoken3_version != null)\n@@ -341,1 +357,1 @@\n-        if (library.compareTo(\"nss3\") == 0 && nss3_version > -1)\n+        if (library.compareTo(\"nss3\") == 0 && nss3_version != null)\n@@ -347,1 +363,1 @@\n-                return 0.0;\n+                return parseVersionString(\"0.0\");\n@@ -383,1 +399,1 @@\n-            nss_version = 0.0;\n+            nss_version = parseVersionString(\"0.0\");\n@@ -396,20 +412,1 @@\n-        \/\/ If a \"dot dot\" release, strip the extra dots for double parsing\n-        String[] dot = version.toString().split(\"\\\\.\");\n-        if (dot.length > 2) {\n-            version = new StringBuilder(dot[0] + \".\" + dot[1]);\n-            for (int j = 2; dot.length > j; j++) {\n-                version.append(dot[j]);\n-            }\n-        }\n-\n-        \/\/ Convert to double for easier version value checking\n-        try {\n-            nss_version = Double.parseDouble(version.toString());\n-        } catch (NumberFormatException e) {\n-            System.out.println(\"===== Content start =====\");\n-            System.out.println(s);\n-            System.out.println(\"===== Content end =====\");\n-            System.out.println(\"Failed to parse lib\" + library +\n-                    \" version. Set to 0.0\");\n-            e.printStackTrace();\n-        }\n+        nss_version = parseVersionString(version.toString());\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":38,"deletions":41,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -124,4 +124,4 @@\n-        double nssVersion = getNSSVersion();\n-        if (p.getName().equalsIgnoreCase(\"SunPKCS11-NSSKeyStore\")\n-                && nssVersion >= 3.28 && nssVersion < 3.35) {\n-            return true;\n+        Version nssVersion = getNSSVersion();\n+        if (p.getName().equalsIgnoreCase(\"SunPKCS11-NSSKeyStore\")) {\n+            return nssVersion.major() == 3 &&\n+                    (nssVersion.minor() >= 28 && nssVersion.minor() < 35);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Secmod\/AddTrustedCert.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,7 +50,9 @@\n-        double version = getNSSVersion();\n-        String[] versionStrs = Double.toString(version).split(\"\\\\.\");\n-        int major = Integer.parseInt(versionStrs[0]);\n-        int minor = Integer.parseInt(versionStrs[1]);\n-        if (isNSS(provider) && (version == 0.0 || (major >= 3 && minor >= 14))) {\n-            System.out.println(\"Skip testing NSS \" + version);\n-            return true;\n+        if (isNSS(provider)) {\n+            Version version = getNSSVersion();\n+            if (version == null) {\n+                return true;\n+            }\n+            if (version.major() >= 3 && version.minor() >= 14){\n+                System.out.println(\"Skip testing NSS \" + version);\n+                return true;\n+            }\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Signature\/TestDSAKeyLength.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -114,0 +114,1 @@\n+        System.out.println(\"Testing provider \" + p.getName());\n","filename":"test\/jdk\/sun\/security\/pkcs11\/ec\/TestECDH.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}