{"files":[{"patch":"@@ -324,1 +324,2 @@\n-            System.out.println(\"Exception occured using \" + p.getName() + \" version \" + p.getVersionStr());\n+            System.out.println(\"Exception occured using \" + p.getName()\n+                    + \" version \" + p.getVersionStr());\n@@ -327,1 +328,1 @@\n-                String ver = getNSSInfo(\"nss\");\n+                Version ver = getNSSInfo(\"nss\");\n@@ -329,4 +330,4 @@\n-                int idx = ver.indexOf(\".\");\n-                double major = Double.parseDouble(ver.substring(0, idx));\n-                double minor = Double.parseDouble(ver.substring(idx+1));\n-                if (major == 3 && minor > 13.9 && minor < 15 && osName.equals(\"Linux\")) {\n+\n+                if (osName.equals(\"Linux\") &&\n+                        ver.major() == 3 && ver.minor() < 15\n+                        && (ver.minor() > 13 && ver.patch() >= 9)) {\n@@ -334,1 +335,2 @@\n-                    System.out.println(\"Warning: old NSS \" + ver + \" might be problematic, consider upgrading it\");\n+                    System.out.println(\"Warning: old NSS \" + ver\n+                            + \" might be problematic, consider upgrading it\");\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/TestKATForGCM.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -120,3 +120,3 @@\n-            String version = getNSSVersion();\n-            if (version.equals(\"3.12\") || version.equals(\"3.12.1\")\n-                    || version.equals(\"3.12.2\")) {\n+            Version version = getNSSVersion();\n+            if (version.major() == 3 && version.minor() == 12\n+                    && version.patch() <= 2) {\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyStore\/SecretKeysBasic.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -55,2 +55,0 @@\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n@@ -88,1 +86,1 @@\n-    static String nss_version = null;\n+    static Version nss_version = null;\n@@ -98,2 +96,2 @@\n-    static String softoken3_version = null;\n-    static String nss3_version = null;\n+    static Version softoken3_version = null;\n+    static Version nss3_version = null;\n@@ -263,1 +261,1 @@\n-        String nssVersion = getNSSVersion();\n+        Version nssVersion = getNSSVersion();\n@@ -266,11 +264,1 @@\n-            \/\/ strings may include a trailing dash e.g., 3.111-debug\n-            Pattern  pattern = Pattern.compile(\"^(\\\\d+)(?:\\\\.(.*?))?(?:-.*)?$\");\n-            Matcher m = pattern.matcher(nssVersion);\n-            if (m.matches()) {\n-                int major = Integer.parseInt(m.group(1));\n-                String tmp = m.group(2);\n-                double minor = tmp == null ? 0 : Double.parseDouble(tmp);\n-                return major == 3 && (11 <= minor && minor < 12);\n-            } else {\n-                throw new RuntimeException(\"Unexpected version format: \" + nssVersion);\n-            }\n+            return nssVersion.major == 3 && 11 == nssVersion.minor;\n@@ -282,0 +270,16 @@\n+    public record Version(int major, int minor, int patch) {}\n+\n+    protected static Version parseVersionString(String version) {\n+        String [] parts = version.split(\"\\\\.\");\n+        int major = Integer.parseInt(parts[0]);\n+        int minor = 0;\n+        int patch = 0;\n+        if (parts.length >= 2) {\n+            minor = Integer.parseInt(parts[1]);\n+        }\n+        if (parts.length >= 3) {\n+            patch = Integer.parseInt(parts[2]);\n+        }\n+        return new Version(major, minor, patch);\n+    }\n+\n@@ -308,1 +312,1 @@\n-    static String getNSSVersion() {\n+    static Version getNSSVersion() {\n@@ -320,1 +324,1 @@\n-    public static String getLibsoftokn3Version() {\n+    public static Version getLibsoftokn3Version() {\n@@ -326,1 +330,1 @@\n-    public static String getLibnss3Version() {\n+    public static Version getLibnss3Version() {\n@@ -342,1 +346,1 @@\n-    static String getNSSInfo(String library) {\n+    static Version getNSSInfo(String library) {\n@@ -359,1 +363,1 @@\n-                return \"0.0\";\n+                return parseVersionString(\"0.0\");\n@@ -395,1 +399,1 @@\n-            nss_version = \"0.0\";\n+            nss_version = parseVersionString(\"0.0\");\n@@ -408,1 +412,1 @@\n-        nss_version = version.toString();\n+        nss_version = parseVersionString(version.toString());\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":28,"deletions":24,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-        String nssVersion = getNSSVersion();\n+        Version nssVersion = getNSSVersion();\n@@ -126,4 +126,2 @@\n-            int idx = nssVersion.indexOf(\".\");\n-            double major = Double.parseDouble(nssVersion.substring(0, idx));\n-            double minor = Double.parseDouble(nssVersion.substring(idx+1));\n-            return major == 3 && (minor >= 28 && minor < 35);\n+            return nssVersion.major() == 3 &&\n+                    (nssVersion.minor() >= 28 && nssVersion.minor() < 35);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Secmod\/AddTrustedCert.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-            String version = getNSSVersion();\n+            Version version = getNSSVersion();\n@@ -55,4 +55,1 @@\n-            int idx = version.indexOf(\".\");\n-            double major = Double.parseDouble(version.substring(0, idx));\n-            double minor = Double.parseDouble(version.substring(idx+1));\n-            if (major >= 3 && minor >= 14){\n+            if (version.major() >= 3 && version.minor() >= 14){\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Signature\/TestDSAKeyLength.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}