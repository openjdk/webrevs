{"files":[{"patch":"@@ -834,5 +834,2 @@\n-      if (StubRoutines::dlog() != nullptr) {\n-        __ call_runtime_leaf(StubRoutines::dlog(), getThreadTemp(), result_reg, cc->args());\n-      } else {\n-        __ call_runtime_leaf(CAST_FROM_FN_PTR(address, SharedRuntime::dlog), getThreadTemp(), result_reg, cc->args());\n-      }\n+      assert(StubRoutines::dlog() == nullptr, \"no Math.log intrinsic on AArch64\");\n+      __ call_runtime_leaf(CAST_FROM_FN_PTR(address, SharedRuntime::dlog), getThreadTemp(), result_reg, cc->args());\n@@ -841,5 +838,2 @@\n-      if (StubRoutines::dlog10() != nullptr) {\n-        __ call_runtime_leaf(StubRoutines::dlog10(), getThreadTemp(), result_reg, cc->args());\n-      } else {\n-        __ call_runtime_leaf(CAST_FROM_FN_PTR(address, SharedRuntime::dlog10), getThreadTemp(), result_reg, cc->args());\n-      }\n+      assert(StubRoutines::dlog10() == nullptr, \"no Math.log10 intrinsic on AArch64\");\n+      __ call_runtime_leaf(CAST_FROM_FN_PTR(address, SharedRuntime::dlog10), getThreadTemp(), result_reg, cc->args());\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRGenerator_aarch64.cpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -8336,5 +8336,0 @@\n-    \/\/ Disabled until JDK-8210858 is fixed\n-    \/\/ if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dlog)) {\n-    \/\/   StubRoutines::_dlog = generate_dlog();\n-    \/\/ }\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}