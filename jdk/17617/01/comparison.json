{"files":[{"patch":"@@ -1061,3 +1061,3 @@\n-    int64_t off_low = (int64_t)target_addr - ((int64_t)CodeCache::low_bound() + sizeof(int));\n-    int64_t off_high = (int64_t)target_addr - ((int64_t)CodeCache::high_bound() + sizeof(int));\n-    return MAX2(ABS(off_low), ABS(off_high));\n+    jlong off_low = (jlong)target_addr - ((jlong)CodeCache::low_bound() + sizeof(int));\n+    jlong off_high = (jlong)target_addr - ((jlong)CodeCache::high_bound() + sizeof(int));\n+    return MAX2(uabs(off_low), uabs(off_high));\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-  ad = ABS(d);\n+  ad = uabs(d);\n@@ -225,1 +225,1 @@\n-  ad = ABS(d);\n+  ad = uabs(d);\n","filename":"src\/hotspot\/share\/opto\/divnode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1978,1 +1978,1 @@\n-          if (ABS(diff) < maximum_number_of_min_max_interval_indices) {\n+          if (uabs(diff) < maximum_number_of_min_max_interval_indices) {\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -960,1 +960,1 @@\n-          float worst_case_trip_cnt = ((float)t->_hi - t->_lo) \/ ABS(cl->stride_con());\n+          float worst_case_trip_cnt = ((float)t->_hi - t->_lo) \/ uabs(cl->stride_con());\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2489,1 +2489,1 @@\n-  bool round = ABS(scale_con) > 1;\n+  bool round = uabs(scale_con) > 1;\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -805,1 +805,1 @@\n-  int iters_limit = max_jint - ABS(stride_con) - 1;\n+  int iters_limit = max_jint - uabs(stride_con) - 1;\n@@ -812,1 +812,1 @@\n-  if (iters_limit\/ABS(stride_con) < 2) {\n+  if (iters_limit\/uabs(stride_con) < 2) {\n@@ -1109,2 +1109,2 @@\n-            original_iters_limit \/ ABS(scale * stride_con) >= min_iters) {\n-          reduced_iters_limit = MIN2(reduced_iters_limit, original_iters_limit\/ABS(scale));\n+            original_iters_limit \/ uabs(scale * stride_con) >= min_iters) {\n+          reduced_iters_limit = MIN2(reduced_iters_limit, original_iters_limit \/ checked_cast<jlong>(uabs(scale)));\n@@ -2344,1 +2344,1 @@\n-  if (ABS(cl->stride_con()) == 1 ||\n+  if (uabs(cl->stride_con()) == 1 ||\n@@ -2562,1 +2562,0 @@\n-  int stride_p;\n@@ -2566,1 +2565,0 @@\n-    stride_p = stride_con;\n@@ -2571,1 +2569,0 @@\n-    stride_p = -stride_con;\n@@ -2576,0 +2573,1 @@\n+  uint stride_p = uabs(stride_con);\n@@ -2954,1 +2952,1 @@\n-  jlong scaled_iters_long = ((jlong)LoopStripMiningIter) * ABS(stride);\n+  jlong scaled_iters_long = ((jlong)LoopStripMiningIter) * uabs(stride);\n@@ -2956,1 +2954,1 @@\n-  int short_scaled_iters = LoopStripMiningIterShortLoop* ABS(stride);\n+  int short_scaled_iters = LoopStripMiningIterShortLoop * uabs(stride);\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -349,1 +349,1 @@\n-    return MIN2(ABS(iv_stride()), Matcher::max_vector_size(bt));\n+    return MIN2(checked_cast<int>(uabs(iv_stride())), Matcher::max_vector_size(bt));\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1109,2 +1109,0 @@\n-template<class T> inline T ABS(T x)                 { return (x > 0) ? x : -x; }\n-\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}