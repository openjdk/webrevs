{"files":[{"patch":"@@ -248,2 +248,1 @@\n-static const int NINFLATIONLOCKS = 256;\n-static PlatformMutex* gInflationLocks[NINFLATIONLOCKS];\n+static PlatformMutex gInflationLocks[256];\n@@ -252,2 +251,2 @@\n-  for (int i = 0; i < NINFLATIONLOCKS; i++) {\n-    gInflationLocks[i] = new PlatformMutex();\n+  for (size_t i = 0; i < ARRAY_SIZE(gInflationLocks); i++) {\n+    ::new(static_cast<void*>(&gInflationLocks[i])) PlatformMutex();\n@@ -743,2 +742,2 @@\n-        static_assert(is_power_of_2(NINFLATIONLOCKS), \"must be\");\n-        int ix = (cast_from_oop<intptr_t>(obj) >> 5) & (NINFLATIONLOCKS-1);\n+        static_assert(is_power_of_2(ARRAY_SIZE(gInflationLocks)), \"must be\");\n+        size_t ix = (cast_from_oop<intptr_t>(obj) >> 5) & (ARRAY_SIZE(gInflationLocks)-1);\n@@ -746,2 +745,2 @@\n-        assert(ix >= 0 && ix < NINFLATIONLOCKS, \"invariant\");\n-        gInflationLocks[ix]->lock();\n+        assert(ix < ARRAY_SIZE(gInflationLocks), \"invariant\");\n+        gInflationLocks[ix].lock();\n@@ -758,1 +757,1 @@\n-        gInflationLocks[ix]->unlock();\n+        gInflationLocks[ix].unlock();\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"}]}