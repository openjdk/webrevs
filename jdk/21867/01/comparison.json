{"files":[{"patch":"@@ -37,0 +37,4 @@\n+\/\/ None of the error routines below take in a free-form, potentially unbounded\n+\/\/ string, and names are all limited to < 64K, so we know that all formatted\n+\/\/ strings passed to fthrow will not be excessively large.\n+\n","filename":"src\/hotspot\/share\/classfile\/classFileError.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1798,0 +1798,1 @@\n+  \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4077,0 +4078,2 @@\n+\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4125,0 +4128,2 @@\n+\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4221,0 +4226,2 @@\n+\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4240,0 +4247,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4263,0 +4271,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4299,0 +4308,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4314,0 +4324,1 @@\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4366,0 +4377,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4449,0 +4461,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4690,0 +4703,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4723,0 +4737,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4760,0 +4775,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -5557,0 +5573,1 @@\n+        \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -326,0 +326,3 @@\n+\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n+\n@@ -619,0 +622,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -972,0 +976,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -1191,0 +1196,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1184,0 +1184,1 @@\n+        \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -821,0 +821,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -841,0 +842,1 @@\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -3146,0 +3148,1 @@\n+        \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -700,0 +700,1 @@\n+  \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -118,1 +118,0 @@\n-    const int maxprint = 64;\n@@ -120,4 +119,6 @@\n-      \"Integer parsing error in command argument '%s'. Could not parse: %.*s%s.\\n\", _name,\n-      MIN2((int)len, maxprint),\n-      (str == nullptr ? \"<null>\" : str),\n-      (len > maxprint ? \"...\" : \"\"));\n+                       \"Integer parsing error in command argument '%.*s'. Could not parse: %.*s%s.\\n\",\n+                       maxprint,\n+                       _name,\n+                       maxprint > len ? (int)len : maxprint,\n+                       (str == nullptr ? \"<null>\" : str),\n+                       (len > maxprint ? \"...\" : \"\"));\n@@ -163,1 +164,5 @@\n-        \"Boolean parsing error in command argument '%s'. Could not parse: %s.\\n\", _name, buf);\n+                         \"Boolean parsing error in command argument '%.*s'. Could not parse: %.*s.\\n\",\n+                         maxprint,\n+                         _name,\n+                         maxprint,\n+                         buf);\n","filename":"src\/hotspot\/share\/services\/diagnosticArgument.cpp","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+  static const int maxprint = 64;\n","filename":"src\/hotspot\/share\/services\/diagnosticArgument.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -261,0 +261,4 @@\n+\/\/ All callers are expected to have ensured that the incoming expanded format string\n+\/\/ will be within reasonable limits - specifically we will never hit the INT_MAX limit\n+\/\/ of os::vsnprintf when it tries to report how big a buffer is needed. Even so we\n+\/\/ further limit the formatted output to 1024 characters.\n@@ -276,0 +280,1 @@\n+  assert(ret != -1, \"Caller should have ensured the incoming format string is size limited!\");\n","filename":"src\/hotspot\/share\/utilities\/exceptions.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}