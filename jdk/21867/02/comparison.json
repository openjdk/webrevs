{"files":[{"patch":"@@ -37,0 +37,4 @@\n+\/\/ None of the error routines below take in a free-form, potentially unbounded\n+\/\/ string, and names are all limited to < 64K, so we know that all formatted\n+\/\/ strings passed to fthrow will not be excessively large.\n+\n","filename":"src\/hotspot\/share\/classfile\/classFileError.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1797,0 +1797,1 @@\n+  \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4076,0 +4077,2 @@\n+\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4124,0 +4127,2 @@\n+\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4220,0 +4225,2 @@\n+\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4239,0 +4246,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4262,0 +4270,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4298,0 +4307,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4313,0 +4323,1 @@\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4365,0 +4376,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4448,0 +4460,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4689,0 +4702,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4722,0 +4736,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -4759,0 +4774,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -5530,0 +5546,1 @@\n+        \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -326,0 +326,3 @@\n+\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n+\n@@ -618,0 +621,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -971,0 +975,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -1190,0 +1195,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1269,0 +1269,1 @@\n+        \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -902,0 +902,1 @@\n+    \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -922,0 +923,1 @@\n+      \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n@@ -3289,0 +3291,1 @@\n+        \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -700,0 +700,1 @@\n+  \/\/ Names are all known to be < 64k so we know this formatted message is not excessively large.\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -118,1 +118,0 @@\n-    const int maxprint = 64;\n@@ -120,4 +119,6 @@\n-      \"Integer parsing error in command argument '%s'. Could not parse: %.*s%s.\\n\", _name,\n-      MIN2((int)len, maxprint),\n-      (str == nullptr ? \"<null>\" : str),\n-      (len > maxprint ? \"...\" : \"\"));\n+                       \"Integer parsing error in command argument '%.*s'. Could not parse: %.*s%s.\\n\",\n+                       maxprint,\n+                       _name,\n+                       maxprint > len ? (int)len : maxprint,\n+                       (str == nullptr ? \"<null>\" : str),\n+                       (len > maxprint ? \"...\" : \"\"));\n@@ -163,1 +164,5 @@\n-        \"Boolean parsing error in command argument '%s'. Could not parse: %s.\\n\", _name, buf);\n+                         \"Boolean parsing error in command argument '%.*s'. Could not parse: %.*s.\\n\",\n+                         maxprint,\n+                         _name,\n+                         maxprint,\n+                         buf);\n","filename":"src\/hotspot\/share\/services\/diagnosticArgument.cpp","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+  static const int maxprint = 64;\n","filename":"src\/hotspot\/share\/services\/diagnosticArgument.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -261,0 +261,4 @@\n+\/\/ All callers are expected to have ensured that the incoming expanded format string\n+\/\/ will be within reasonable limits - specifically we will never hit the INT_MAX limit\n+\/\/ of os::vsnprintf when it tries to report how big a buffer is needed. Even so we\n+\/\/ further limit the formatted output to 1024 characters.\n@@ -276,0 +280,1 @@\n+  assert(ret != -1, \"Caller should have ensured the incoming format string is size limited!\");\n","filename":"src\/hotspot\/share\/utilities\/exceptions.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}