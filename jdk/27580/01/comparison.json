{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -611,5 +611,7 @@\n-        Point2D pt = getGlyphPosition(ix);\n-        vb.setRect(vb.getMinX() - pt.getX(),\n-                   vb.getMinY() - pt.getY(),\n-                   vb.getWidth(),\n-                   vb.getHeight());\n+        if (!vb.isEmpty()) {\n+            Point2D pt = getGlyphPosition(ix);\n+            vb.setRect(vb.getMinX() - pt.getX(),\n+                       vb.getMinY() - pt.getY(),\n+                       vb.getWidth(),\n+                       vb.getHeight());\n+        }\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/StandardGlyphVector.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8167268\n+ * @summary Checks behavior of GlyphVector.getGlyphMetrics(int).\n+ *\/\n+\n+import java.awt.Font;\n+import java.awt.Rectangle;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphMetrics;\n+import java.awt.font.GlyphVector;\n+import java.awt.font.TextLayout;\n+import java.awt.geom.Rectangle2D;\n+\n+public class GlyphMetricsTest {\n+\n+    public static void main(String[] args) {\n+\n+        String text = \"The quick brown \\r\\n fox JUMPS over \\t the lazy dog.\";\n+        Font font = new Font(Font.DIALOG, Font.PLAIN, 60);\n+        FontRenderContext frc = new FontRenderContext(null, true, true);\n+        GlyphVector gv = font.createGlyphVector(frc, text);\n+\n+        for (int i = 0; i < gv.getNumGlyphs(); i++) {\n+\n+            GlyphMetrics gm = gv.getGlyphMetrics(i);\n+            Rectangle2D bounds = gm.getBounds2D();\n+            assertEqual(gm.getAdvance(), gm.getAdvanceX(), 0, \"advance x\", i);\n+            assertEqual(0, gm.getAdvanceY(), 0, \"advance y\", i);\n+\n+            \/\/ assumes one glyph per char in the test text\n+            String character = text.substring(i, i + 1);\n+            TextLayout layout = new TextLayout(character, font, frc);\n+            Rectangle pixelBounds = layout.getPixelBounds(frc, 0, 0);\n+            assertEqual(pixelBounds.getWidth(), bounds.getWidth(), 2, \"width\", i);\n+            assertEqual(pixelBounds.getHeight(), bounds.getHeight(), 2, \"height\", i);\n+            assertEqual(pixelBounds.getX(), bounds.getX(), 2, \"x\", i);\n+            assertEqual(pixelBounds.getY(), bounds.getY(), 2, \"y\", i);\n+        }\n+    }\n+\n+    private static void assertEqual(double d1, double d2, double variance,\n+                                    String scenario, int index) {\n+        if (Math.abs(d1 - d2) > variance) {\n+            String msg = String.format(\"%s for index %d: %f != %f\", scenario, index, d1, d2);\n+            throw new RuntimeException(msg);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/font\/GlyphVector\/GlyphMetricsTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"}]}