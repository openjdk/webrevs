{"files":[{"patch":"@@ -55,1 +55,1 @@\n-instruct xLoadP(iRegPNoSp dst, memory mem)\n+instruct xLoadP(iRegPNoSp dst, memory mem, rFlagsReg cr)\n@@ -59,1 +59,1 @@\n-  effect(TEMP dst);\n+  effect(KILL cr, TEMP dst);\n@@ -68,1 +68,1 @@\n-    x_load_barrier(_masm, this, ref_addr, $dst$$Register, t0 \/* tmp *\/, barrier_data());\n+    x_load_barrier(_masm, this, ref_addr, $dst$$Register, t1 \/* tmp *\/, barrier_data());\n@@ -89,5 +89,3 @@\n-               Assembler::relaxed \/* acquire *\/, Assembler::rl \/* release *\/, $res$$Register,\n-               true \/* result_as_bool *\/);\n-    __ beqz($res$$Register, failed);\n-    __ mv(t0, $oldval$$Register);\n-    __ bind(failed);\n+               Assembler::relaxed \/* acquire *\/, Assembler::rl \/* release *\/, t1);\n+    __ sub(t0, t1, $oldval$$Register);\n+    __ seqz($res$$Register, t0);\n@@ -96,4 +94,4 @@\n-      __ ld(t1, Address(xthread, XThreadLocalData::address_bad_mask_offset()), t1 \/* tmp *\/);\n-      __ andr(t1, t1, t0);\n-      __ beqz(t1, good);\n-      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), t0 \/* ref *\/, t1 \/* tmp *\/);\n+      __ ld(t0, Address(xthread, XThreadLocalData::address_bad_mask_offset()));\n+      __ andr(t0, t0, t1);\n+      __ beqz(t0, good);\n+      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), t1 \/* ref *\/, $res$$Register \/* tmp *\/);\n@@ -125,5 +123,3 @@\n-               Assembler::aq \/* acquire *\/, Assembler::rl \/* release *\/, $res$$Register,\n-               true \/* result_as_bool *\/);\n-    __ beqz($res$$Register, failed);\n-    __ mv(t0, $oldval$$Register);\n-    __ bind(failed);\n+               Assembler::aq \/* acquire *\/, Assembler::rl \/* release *\/, t1);\n+    __ sub(t0, t1, $oldval$$Register);\n+    __ seqz($res$$Register, t0);\n@@ -132,4 +128,4 @@\n-      __ ld(t1, Address(xthread, XThreadLocalData::address_bad_mask_offset()), t1 \/* tmp *\/);\n-      __ andr(t1, t1, t0);\n-      __ beqz(t1, good);\n-      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), t0 \/* ref *\/, t1 \/* tmp *\/);\n+      __ ld(t0, Address(xthread, XThreadLocalData::address_bad_mask_offset()));\n+      __ andr(t0, t0, t1);\n+      __ beqz(t0, good);\n+      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), t1 \/* ref *\/, $res$$Register \/* tmp *\/);\n@@ -146,1 +142,1 @@\n-instruct xCompareAndExchangeP(iRegPNoSp res, indirect mem, iRegP oldval, iRegP newval) %{\n+instruct xCompareAndExchangeP(iRegPNoSp res, indirect mem, iRegP oldval, iRegP newval, rFlagsReg cr) %{\n@@ -149,1 +145,1 @@\n-  effect(TEMP_DEF res);\n+  effect(KILL cr, TEMP_DEF res);\n@@ -164,1 +160,1 @@\n-      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), $res$$Register \/* ref *\/, t0 \/* tmp *\/);\n+      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), $res$$Register \/* ref *\/, t1 \/* tmp *\/);\n@@ -174,1 +170,1 @@\n-instruct xCompareAndExchangePAcq(iRegPNoSp res, indirect mem, iRegP oldval, iRegP newval) %{\n+instruct xCompareAndExchangePAcq(iRegPNoSp res, indirect mem, iRegP oldval, iRegP newval, rFlagsReg cr) %{\n@@ -177,1 +173,1 @@\n-  effect(TEMP_DEF res);\n+  effect(KILL cr, TEMP_DEF res);\n@@ -192,1 +188,1 @@\n-      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), $res$$Register \/* ref *\/, t0 \/* tmp *\/);\n+      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), $res$$Register \/* ref *\/, t1 \/* tmp *\/);\n@@ -213,1 +209,1 @@\n-    x_load_barrier(_masm, this, Address(noreg, 0), $prev$$Register, t0 \/* tmp *\/, barrier_data());\n+    x_load_barrier(_masm, this, Address(noreg, 0), $prev$$Register, t1 \/* tmp *\/, barrier_data());\n@@ -230,1 +226,1 @@\n-    x_load_barrier(_masm, this, Address(noreg, 0), $prev$$Register, t0 \/* tmp *\/, barrier_data());\n+    x_load_barrier(_masm, this, Address(noreg, 0), $prev$$Register, t1 \/* tmp *\/, barrier_data());\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/x\/x_riscv.ad","additions":25,"deletions":29,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-    z_color(_masm, node, rnew_zpointer, rnew_zaddress, t0);\n+    z_color(_masm, node, rnew_zpointer, rnew_zaddress, tmp);\n@@ -143,1 +143,1 @@\n-    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t0);\n+    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t1);\n@@ -165,1 +165,1 @@\n-    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t0);\n+    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t1);\n@@ -185,1 +185,1 @@\n-    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t0);\n+    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t1);\n@@ -206,1 +206,1 @@\n-    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t0);\n+    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t1);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/z_riscv.ad","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -780,1 +780,1 @@\n-      cmpxchg_obj_header(swap_reg, lock_reg, obj_reg, t0, count, \/*fallthrough*\/nullptr);\n+      cmpxchg_obj_header(swap_reg, lock_reg, obj_reg, tmp, count, \/*fallthrough*\/nullptr);\n@@ -894,1 +894,1 @@\n-      cmpxchg_obj_header(swap_reg, header_reg, obj_reg, t0, count, \/*fallthrough*\/nullptr);\n+      cmpxchg_obj_header(swap_reg, header_reg, obj_reg, tmp_reg, count, \/*fallthrough*\/nullptr);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2706,3 +2706,3 @@\n-  assert_different_registers(addr, tmp);\n-  assert_different_registers(newv, tmp);\n-  assert_different_registers(oldv, tmp);\n+  assert_different_registers(addr, tmp, t0);\n+  assert_different_registers(newv, tmp, t0);\n+  assert_different_registers(oldv, tmp, t0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1683,1 +1683,1 @@\n-      __ cmpxchg_obj_header(x10, lock_reg, obj_reg, t0, count, \/*fallthrough*\/nullptr);\n+      __ cmpxchg_obj_header(x10, lock_reg, obj_reg, lock_tmp, count, \/*fallthrough*\/nullptr);\n@@ -1823,1 +1823,1 @@\n-      __ cmpxchg_obj_header(x10, old_hdr, obj_reg, t0, count, &slow_path_unlock);\n+      __ cmpxchg_obj_header(x10, old_hdr, obj_reg, lock_tmp, count, &slow_path_unlock);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}