{"files":[{"patch":"@@ -55,1 +55,1 @@\n-instruct xLoadP(iRegPNoSp dst, memory mem, rFlagsReg cr)\n+instruct xLoadP(iRegPNoSp dst, memory mem, iRegINoSp tmp)\n@@ -59,1 +59,1 @@\n-  effect(KILL cr, TEMP dst);\n+  effect(TEMP dst, TEMP tmp);\n@@ -68,1 +68,1 @@\n-    x_load_barrier(_masm, this, ref_addr, $dst$$Register, t1 \/* tmp *\/, barrier_data());\n+    x_load_barrier(_masm, this, ref_addr, $dst$$Register, $tmp$$Register \/* tmp *\/, barrier_data());\n@@ -74,1 +74,1 @@\n-instruct xCompareAndSwapP(iRegINoSp res, indirect mem, iRegP oldval, iRegP newval, rFlagsReg cr) %{\n+instruct xCompareAndSwapP(iRegINoSp res, indirect mem, iRegP oldval, iRegP newval, iRegINoSp tmp, rFlagsReg cr) %{\n@@ -78,1 +78,1 @@\n-  effect(KILL cr, TEMP_DEF res);\n+  effect(KILL cr, TEMP_DEF res, TEMP tmp);\n@@ -89,2 +89,2 @@\n-               Assembler::relaxed \/* acquire *\/, Assembler::rl \/* release *\/, t1);\n-    __ sub(t0, t1, $oldval$$Register);\n+               Assembler::relaxed \/* acquire *\/, Assembler::rl \/* release *\/, $tmp$$Register);\n+    __ sub(t0, $tmp$$Register, $oldval$$Register);\n@@ -95,1 +95,1 @@\n-      __ andr(t0, t0, t1);\n+      __ andr(t0, t0, $tmp$$Register);\n@@ -97,1 +97,1 @@\n-      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), t1 \/* ref *\/, $res$$Register \/* tmp *\/);\n+      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), $tmp$$Register \/* ref *\/, $res$$Register \/* tmp *\/);\n@@ -108,1 +108,1 @@\n-instruct xCompareAndSwapPAcq(iRegINoSp res, indirect mem, iRegP oldval, iRegP newval, rFlagsReg cr) %{\n+instruct xCompareAndSwapPAcq(iRegINoSp res, indirect mem, iRegP oldval, iRegP newval, iRegINoSp tmp, rFlagsReg cr) %{\n@@ -112,1 +112,1 @@\n-  effect(KILL cr, TEMP_DEF res);\n+  effect(KILL cr, TEMP_DEF res, TEMP tmp);\n@@ -123,2 +123,2 @@\n-               Assembler::aq \/* acquire *\/, Assembler::rl \/* release *\/, t1);\n-    __ sub(t0, t1, $oldval$$Register);\n+               Assembler::aq \/* acquire *\/, Assembler::rl \/* release *\/, $tmp$$Register);\n+    __ sub(t0, $tmp$$Register, $oldval$$Register);\n@@ -129,1 +129,1 @@\n-      __ andr(t0, t0, t1);\n+      __ andr(t0, t0, $tmp$$Register);\n@@ -131,1 +131,1 @@\n-      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), t1 \/* ref *\/, $res$$Register \/* tmp *\/);\n+      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), $tmp$$Register \/* ref *\/, $res$$Register \/* tmp *\/);\n@@ -142,1 +142,1 @@\n-instruct xCompareAndExchangeP(iRegPNoSp res, indirect mem, iRegP oldval, iRegP newval, rFlagsReg cr) %{\n+instruct xCompareAndExchangeP(iRegPNoSp res, indirect mem, iRegP oldval, iRegP newval, iRegINoSp tmp, rFlagsReg cr) %{\n@@ -145,1 +145,1 @@\n-  effect(KILL cr, TEMP_DEF res);\n+  effect(KILL cr, TEMP_DEF res, TEMP tmp);\n@@ -160,1 +160,1 @@\n-      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), $res$$Register \/* ref *\/, t1 \/* tmp *\/);\n+      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), $res$$Register \/* ref *\/, $tmp$$Register \/* tmp *\/);\n@@ -170,1 +170,1 @@\n-instruct xCompareAndExchangePAcq(iRegPNoSp res, indirect mem, iRegP oldval, iRegP newval, rFlagsReg cr) %{\n+instruct xCompareAndExchangePAcq(iRegPNoSp res, indirect mem, iRegP oldval, iRegP newval, iRegINoSp tmp, rFlagsReg cr) %{\n@@ -173,1 +173,1 @@\n-  effect(KILL cr, TEMP_DEF res);\n+  effect(KILL cr, TEMP_DEF res, TEMP tmp);\n@@ -188,1 +188,1 @@\n-      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), $res$$Register \/* ref *\/, t1 \/* tmp *\/);\n+      x_load_barrier_slow_path(_masm, this, Address($mem$$Register), $res$$Register \/* ref *\/, $tmp$$Register \/* tmp *\/);\n@@ -198,1 +198,1 @@\n-instruct xGetAndSetP(indirect mem, iRegP newv, iRegPNoSp prev, rFlagsReg cr) %{\n+instruct xGetAndSetP(indirect mem, iRegP newv, iRegPNoSp prev, iRegINoSp tmp, rFlagsReg cr) %{\n@@ -201,1 +201,1 @@\n-  effect(TEMP_DEF prev, KILL cr);\n+  effect(TEMP_DEF prev, KILL cr, TEMP tmp);\n@@ -209,1 +209,1 @@\n-    x_load_barrier(_masm, this, Address(noreg, 0), $prev$$Register, t1 \/* tmp *\/, barrier_data());\n+    x_load_barrier(_masm, this, Address(noreg, 0), $prev$$Register, $tmp$$Register \/* tmp *\/, barrier_data());\n@@ -215,1 +215,1 @@\n-instruct xGetAndSetPAcq(indirect mem, iRegP newv, iRegPNoSp prev, rFlagsReg cr) %{\n+instruct xGetAndSetPAcq(indirect mem, iRegP newv, iRegPNoSp prev, iRegINoSp tmp, rFlagsReg cr) %{\n@@ -218,1 +218,1 @@\n-  effect(TEMP_DEF prev, KILL cr);\n+  effect(TEMP_DEF prev, KILL cr, TEMP tmp);\n@@ -226,1 +226,1 @@\n-    x_load_barrier(_masm, this, Address(noreg, 0), $prev$$Register, t1 \/* tmp *\/, barrier_data());\n+    x_load_barrier(_masm, this, Address(noreg, 0), $prev$$Register, $tmp$$Register \/* tmp *\/, barrier_data());\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/x\/x_riscv.ad","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t1);\n+    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, $newval_tmp$$Register);\n@@ -165,1 +165,1 @@\n-    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t1);\n+    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, $newval_tmp$$Register);\n@@ -185,1 +185,1 @@\n-    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t1);\n+    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, $newval_tmp$$Register);\n@@ -206,1 +206,1 @@\n-    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, t1);\n+    z_color(_masm, this, $oldval_tmp$$Register, $oldval$$Register, $newval_tmp$$Register);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/z_riscv.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}