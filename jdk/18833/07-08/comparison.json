{"files":[{"patch":"@@ -289,1 +289,1 @@\n-    DEBUG_ONLY(_buffer = (char*)0xdeadbeef); \/\/ sanity\n+    DEBUG_ONLY(_buffer = (char*)((uintptr_t)0xdeadbeef)); \/\/ sanity\n","filename":"src\/hotspot\/share\/utilities\/istream.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -593,53 +593,0 @@\n-#ifdef _WINDOWS\n-#define ftello _ftelli64\n-#define fseeko _fseeki64\n-#define OFF_T  __int64\n-#endif\n-\n-#ifndef OFF_T\n-#define OFF_T off_t\n-#endif\n-\n-size_t fileStream::position() {\n-  if (_file == nullptr)  return NO_SIZE;\n-#if _LP64\n-  typedef OFF_T position_t;\n-  position_t p = ::ftello(_file);\n-#else\n-  typedef long position_t;\n-  position_t p = ::ftell(_file);\n-#endif\n-  if (p == (position_t) -1)  return NO_SIZE;\n-  size_t result = (size_t) p;\n-  if (p != (position_t) result)  return NO_SIZE;\n-  return (size_t) p;\n-}\n-\n-size_t fileStream::set_position(size_t position) {\n-  if (_file == nullptr)  return NO_SIZE;\n-  int res = -1;\n-#if _LP64\n-  res = ::fseeko(_file, (OFF_T) position, SEEK_SET);\n-#else\n-  res = ::fseek(_file, (long) position, SEEK_SET);\n-#endif\n-  if (res != 0)  return NO_SIZE;\n-  \/\/ re-read position; why not...\n-  return this->position();\n-}\n-\n-size_t fileStream::remaining() {\n-  if (_file == nullptr)  return -1;\n-  size_t p1 = position();\n-  if (p1 == NO_SIZE)  return p1;\n-  if (::fseek(_file, 0, SEEK_END) != 0) {\n-    return NO_SIZE;\n-  }\n-  size_t p2 = position();\n-  p1 = set_position(p1);\n-  if (p2 == NO_SIZE || p1 == NO_SIZE) {\n-    return NO_SIZE;\n-  }\n-  return (p2 < p1) ? 0 : p2 - p1;\n-}\n-\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":0,"deletions":53,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -238,1 +238,0 @@\n-  static constexpr size_t NO_SIZE = (size_t) -1;  \/\/ sentinel for query gone wrong\n@@ -261,3 +260,0 @@\n-  size_t position();  \/\/ return NO_SIZE on failure\n-  size_t set_position(size_t position);  \/\/ return new position or NO_SIZE on failure\n-  size_t remaining();  \/\/ return remaining file size or NO_SIZE on failure\n","filename":"src\/hotspot\/share\/utilities\/ostream.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}