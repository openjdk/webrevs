{"files":[{"patch":"@@ -46,0 +46,24 @@\n+void G1BlockOffsetTable::set_offset_array_raw(uint8_t* addr, uint8_t offset) {\n+  Atomic::store(addr, offset);\n+}\n+\n+void G1BlockOffsetTable::set_offset_array(uint8_t* addr, uint8_t offset) {\n+  check_address(addr, \"Block offset table address out of range\");\n+  set_offset_array_raw(addr, offset);\n+}\n+\n+void G1BlockOffsetTable::set_offset_array(uint8_t* addr, HeapWord* high, HeapWord* low) {\n+  check_address(addr, \"Block offset table address out of range\");\n+  assert(high >= low, \"addresses out of order\");\n+  size_t offset = pointer_delta(high, low);\n+  check_offset(offset, \"offset too large\");\n+  set_offset_array(addr, (uint8_t)offset);\n+}\n+\n+void G1BlockOffsetTable::set_offset_array(uint8_t* left, uint8_t* right, uint8_t offset) {\n+  check_address(right, \"Right block offset table address out of range\");\n+  assert(left <= right, \"indexes out of order\");\n+  size_t num_cards = right - left + 1;\n+  memset_with_concurrent_readers(left, offset, num_cards);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.cpp","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-  uint8_t* entry_for_addr(const void* const p) const;\n+  inline uint8_t* entry_for_addr(const void* const p) const;\n@@ -73,1 +73,1 @@\n-  HeapWord* addr_for_entry(const uint8_t* const p) const;\n+  inline HeapWord* addr_for_entry(const uint8_t* const p) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,24 +57,0 @@\n-void G1BlockOffsetTable::set_offset_array_raw(uint8_t* addr, uint8_t offset) {\n-  Atomic::store(addr, offset);\n-}\n-\n-void G1BlockOffsetTable::set_offset_array(uint8_t* addr, uint8_t offset) {\n-  check_address(addr, \"Block offset table address out of range\");\n-  set_offset_array_raw(addr, offset);\n-}\n-\n-void G1BlockOffsetTable::set_offset_array(uint8_t* addr, HeapWord* high, HeapWord* low) {\n-  check_address(addr, \"Block offset table address out of range\");\n-  assert(high >= low, \"addresses out of order\");\n-  size_t offset = pointer_delta(high, low);\n-  check_offset(offset, \"offset too large\");\n-  set_offset_array(addr, (uint8_t)offset);\n-}\n-\n-void G1BlockOffsetTable::set_offset_array(uint8_t* left, uint8_t* right, uint8_t offset) {\n-  check_address(right, \"Right block offset table address out of range\");\n-  assert(left <= right, \"indexes out of order\");\n-  size_t num_cards = right - left + 1;\n-  memset_with_concurrent_readers(left, offset, num_cards);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.inline.hpp","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"}]}