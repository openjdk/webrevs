{"files":[{"patch":"@@ -694,2 +694,2 @@\n-            var attrName=name.toString();\n-            if (!attrName.startsWith(\"on\") && !attrName.matches(\"data-[a-z]+(-[a-z]+)*\")){\n+            var attrName = name.toString();\n+            if (!attrName.startsWith(\"on\") && !attrName.startsWith(\"data-\")) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -437,0 +437,1 @@\n+        ACCESSKEY(true),\n@@ -440,15 +441,17 @@\n-        ARIA_ACTIVEDESCENDANT,\n-        ARIA_CONTROLS,\n-        ARIA_DESCRIBEDBY,\n-        ARIA_EXPANDED,\n-        ARIA_LABEL,\n-        ARIA_LABELLEDBY,\n-        ARIA_LEVEL,\n-        ARIA_MULTISELECTABLE,\n-        ARIA_OWNS,\n-        ARIA_POSINSET,\n-        ARIA_SETSIZE,\n-        ARIA_READONLY,\n-        ARIA_REQUIRED,\n-        ARIA_SELECTED,\n-        ARIA_SORT,\n+        ARIA_ACTIVEDESCENDANT(true),\n+        ARIA_CONTROLS(true),\n+        ARIA_DESCRIBEDBY(true),\n+        ARIA_EXPANDED(true),\n+        ARIA_LABEL(true),\n+        ARIA_LABELLEDBY(true),\n+        ARIA_LEVEL(true),\n+        ARIA_MULTISELECTABLE(true),\n+        ARIA_OWNS(true),\n+        ARIA_POSINSET(true),\n+        ARIA_READONLY(true),\n+        ARIA_REQUIRED(true),\n+        ARIA_SELECTED(true),\n+        ARIA_SETSIZE(true),\n+        ARIA_SORT(true),\n+        AUTOCAPITALIZE(true),\n+        AUTOFOCUS(true),\n@@ -459,1 +462,0 @@\n-        CELLSPACING,\n@@ -461,0 +463,1 @@\n+        CELLSPACING,\n@@ -465,0 +468,1 @@\n+        CLASS(true),\n@@ -466,1 +470,0 @@\n-        CLASS,\n@@ -470,0 +473,1 @@\n+        CONTENTEDITABLE(true),\n@@ -473,0 +477,3 @@\n+        DIR(true),\n+        DRAGGABLE(true),\n+        ENTERKEYHINT(true),\n@@ -478,0 +485,1 @@\n+        HIDDEN(true),\n@@ -480,1 +488,10 @@\n-        ID,\n+        ID(true),\n+        INERT(true),\n+        INPUTMODE(true),\n+        IS(true),\n+        ITEMID(true),\n+        ITEMPROP(true),\n+        ITEMREF(true),\n+        ITEMSCOPE(true),\n+        ITEMTYPE(true),\n+        LANG(true),\n@@ -486,0 +503,1 @@\n+        NONCE(true),\n@@ -488,0 +506,1 @@\n+        POPOVER(true),\n@@ -500,0 +519,1 @@\n+        SPELLCHECK(true),\n@@ -502,1 +522,1 @@\n-        STYLE,\n+        STYLE(true),\n@@ -504,0 +524,1 @@\n+        TABINDEX(true),\n@@ -506,0 +527,2 @@\n+        TITLE(true),\n+        TRANSLATE(true),\n@@ -513,24 +536,1 @@\n-        ACCESSKEY,\n-        AUTOCAPITALIZE,\n-        AUTOFOCUS,\n-        CONTENTEDITABLE,\n-        DIR,\n-        DRAGGABLE,\n-        ENTERKEYHINT,\n-        HIDDEN,\n-        INERT,\n-        INPUTMODE,\n-        IS,\n-        ITEMID,\n-        ITEMPROP,\n-        ITEMREF,\n-        ITEMSCOPE,\n-        ITEMTYPE,\n-        LANG,\n-        NONCE,\n-        POPOVER,\n-        SPELLCHECK,\n-        TABINDEX,\n-        TITLE,\n-        TRANSLATE,\n-        WRITINGSUGGESTIONS;\n+        WRITINGSUGGESTIONS(true);\n@@ -539,0 +539,1 @@\n+        private final boolean isGlobal;\n@@ -541,0 +542,4 @@\n+            this(false);\n+        }\n+\n+        Attr(boolean flag) {\n@@ -542,0 +547,5 @@\n+            isGlobal = flag;\n+        }\n+\n+        public boolean isGlobal() {\n+            return isGlobal;\n@@ -556,26 +566,0 @@\n-    private final EnumSet<Attr> GLOBAL_ATTRS = EnumSet.of(\n-            Attr.ACCESSKEY,\n-            Attr.AUTOCAPITALIZE,\n-            Attr.AUTOFOCUS,\n-            Attr.CONTENTEDITABLE,\n-            Attr.DIR,\n-            Attr.DRAGGABLE,\n-            Attr.ENTERKEYHINT,\n-            Attr.HIDDEN,\n-            Attr.INERT,\n-            Attr.INPUTMODE,\n-            Attr.IS,\n-            Attr.ITEMID,\n-            Attr.ITEMPROP,\n-            Attr.ITEMREF,\n-            Attr.ITEMSCOPE,\n-            Attr.ITEMTYPE,\n-            Attr.LANG,\n-            Attr.NONCE,\n-            Attr.POPOVER,\n-            Attr.SPELLCHECK,\n-            Attr.TABINDEX,\n-            Attr.TITLE,\n-            Attr.TRANSLATE,\n-            Attr.WRITINGSUGGESTIONS);\n-\n@@ -645,4 +629,0 @@\n-        \/\/this is to allow global attributes\n-        for (Attr attr : GLOBAL_ATTRS) {\n-            this.attrs.put(attr, AttrKind.OK);\n-        }\n@@ -689,2 +669,8 @@\n-        AttrKind k = attrs.get(getAttr(attrName)); \/\/ null-safe\n-        return (k == null) ? AttrKind.INVALID : k;\n+        Attr attr = getAttr(attrName);\n+        AttrKind kind = null;\n+\n+        if (attr != null) {\n+            kind = attr.isGlobal() ? AttrKind.OK : attrs.get(attr);  \/\/ get is null-safe\n+        }\n+\n+        return (kind != null) ? kind : AttrKind.INVALID;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/HtmlTag.java","additions":61,"deletions":75,"binary":false,"changes":136,"status":"modified"},{"patch":"@@ -35,0 +35,3 @@\n+import toolbox.ToolBox;\n+\n+import java.nio.file.Path;\n@@ -37,0 +40,1 @@\n+    ToolBox tb = new ToolBox();\n@@ -41,1 +45,0 @@\n-        tester.printSummary();\n@@ -53,0 +56,1 @@\n+    }\n@@ -54,1 +58,4 @@\n-        checkOutput(\"pkg1\/C1.html\", true,\n+    @Test\n+    public void testNegative(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src,\n@@ -56,2 +63,26 @@\n-                        <p contenteditable=\"true\" draggable=\"true\" spellcheck=\"true\" data-status=\"deprecated\">\n-                        \"\"\");\n+                package p;\n+                \/**\n+                 * class comment\n+                 * <a href=\"https:\/\/openjdk.org\/\">Hyperlink to the OpenJDK website<\/a>\n+                 *\/\n+                public class C {\n+                    \/**\n+                     * <form>\n+                     *   <label for=\"methodname\">Method name:<\/label><br>\n+                     *   <input type=\"text\" id=\"methodname\" name=\"methodname\"><br>\n+                     *   <label for=\"paramname\">Method Parameter:<\/label><br>\n+                     *   <input type=\"text\" id=\"paramname\" name=\"paramname\">\n+                     * <\/form>\n+                     *\/\n+                    public C() {\n+                    }\n+                }\n+                \"\"\");\n+\n+        javadoc(\"--allow-script-in-comments\",\n+                \"-d\",\n+                \"out-negative\",\n+                \"-sourcepath\",\n+                src.toString(),\n+                \"p\");\n+        checkExit(Exit.ERROR);\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/TestGlobalHtml\/TestGlobalHtml.java","additions":35,"deletions":4,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -26,5 +26,0 @@\n-import java.io.IOException;\n-import java.io.Serializable;\n-import java.text.*;\n-import java.time.format.DateTimeFormatter;\n-import java.util.Locale;\n@@ -33,1 +28,6 @@\n- * A class comment for testing.\n+ * <div inert>\n+ * <p> This content is inert and not interactable.<\/p>\n+ * <a href=\"https:\/\/openjdk.org\/\" title=\"OpenJDK's Website\" tabindex=\"0\">\n+ * Visit OpenJDK's Website!\n+ * <\/a>\n+ * <\/div>\n@@ -35,204 +35,6 @@\n- * <p accesskey=\"C\" autocapitalize=\"sentences\" dir=\"ltr\" lang=\"en\" data-purpose=\"documentation\">\n- * This class is used to demonstrate the use of various HTML global attributes in Javadoc comments.\n- * <\/p>\n- * <table class=\"plain\" id=\"format-table\" data-description=\"FormatType to FormatStyle mapping\">\n- * <caption style=\"display:none\">Shows how FormatType and FormatStyle values map to Format instances<\/caption>\n- * <thead>\n- *    <tr>\n- *       <th scope=\"col\" class=\"TableHeadingColor\">FormatType\n- *       <th scope=\"col\" class=\"TableHeadingColor\">FormatStyle\n- *       <th scope=\"col\" class=\"TableHeadingColor\">Subformat Created\n- * <\/thead>\n- * <tbody>\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n- *       <td>{@code null}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=7>{@code number}\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n- *       <td>{@link NumberFormat#getInstance(Locale) NumberFormat.getInstance}{@code (getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code integer}\n- *       <td>{@link NumberFormat#getIntegerInstance(Locale) NumberFormat.getIntegerInstance}{@code (getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code currency}\n- *       <td>{@link NumberFormat#getCurrencyInstance(Locale) NumberFormat.getCurrencyInstance}{@code (getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code percent}\n- *       <td>{@link NumberFormat#getPercentInstance(Locale) NumberFormat.getPercentInstance}{@code (getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code compact_short}\n- *       <td>{@link NumberFormat#getCompactNumberInstance(Locale, NumberFormat.Style)\n- *       NumberFormat.getCompactNumberInstance}{@code (getLocale(),} {@link NumberFormat.Style#SHORT})\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code compact_long}\n- *       <td>{@link NumberFormat#getCompactNumberInstance(Locale, NumberFormat.Style)\n- *       NumberFormat.getCompactNumberInstance}{@code (getLocale(),} {@link NumberFormat.Style#LONG})\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n- *       <td>{@code new} {@link DecimalFormat#DecimalFormat(String, DecimalFormatSymbols)\n- *       DecimalFormat}{@code (subformatPattern,} {@link DecimalFormatSymbols#getInstance(Locale)\n- *       DecimalFormatSymbols.getInstance}{@code (getLocale()))}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code dtf_date}\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n- *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n- *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#SHORT}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n- *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n- *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#LONG}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n- *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#FULL}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n- *       <td>{@link DateTimeFormatter#ofPattern(String, Locale)\n- *       DateTimeFormatter.ofPattern}{@code (subformatPattern, getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code dtf_time}\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n- *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n- *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#SHORT}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n- *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n- *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#LONG}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n- *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#FULL}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n- *       <td>{@link DateTimeFormatter#ofPattern(String, Locale)   DateTimeFormatter.ofPattern}{@code (subformatPattern, getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code dtf_datetime}\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n- *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n- *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#SHORT}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n- *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n- *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#LONG}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n- *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n- *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#FULL}{@code ).withLocale(getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n- *       <td>{@link DateTimeFormatter#ofPattern(String, Locale)\n- *       DateTimeFormatter.ofPattern}{@code (subformatPattern, getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=1>{@code pre-defined DateTimeFormatter(s)}\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n- *       <td>The {@code pre-defined DateTimeFormatter(s)} are used as a {@code FormatType} :\n- *       {@link DateTimeFormatter#BASIC_ISO_DATE BASIC_ISO_DATE},\n- *       {@link DateTimeFormatter#ISO_LOCAL_DATE ISO_LOCAL_DATE},\n- *       {@link DateTimeFormatter#ISO_OFFSET_DATE ISO_OFFSET_DATE},\n- *       {@link DateTimeFormatter#ISO_DATE ISO_DATE},\n- *       {@link DateTimeFormatter#ISO_LOCAL_TIME ISO_LOCAL_TIME},\n- *       {@link DateTimeFormatter#ISO_OFFSET_TIME ISO_OFFSET_TIME},\n- *       {@link DateTimeFormatter#ISO_TIME ISO_TIME},\n- *       {@link DateTimeFormatter#ISO_LOCAL_DATE_TIME ISO_LOCAL_DATE_TIME},\n- *       {@link DateTimeFormatter#ISO_OFFSET_DATE_TIME ISO_OFFSET_DATE_TIME},\n- *       {@link DateTimeFormatter#ISO_ZONED_DATE_TIME ISO_ZONED_DATE_TIME},\n- *       {@link DateTimeFormatter#ISO_DATE_TIME ISO_DATE_TIME},\n- *       {@link DateTimeFormatter#ISO_ORDINAL_DATE ISO_ORDINAL_DATE},\n- *       {@link DateTimeFormatter#ISO_WEEK_DATE ISO_WEEK_DATE},\n- *       {@link DateTimeFormatter#ISO_INSTANT ISO_INSTANT},\n- *       {@link DateTimeFormatter#RFC_1123_DATE_TIME RFC_1123_DATE_TIME}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code date}\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n- *       <td>{@link DateFormat#getDateInstance(int, Locale)\n- *       DateFormat.getDateInstance}{@code (}{@link DateFormat#DEFAULT}{@code , getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n- *       <td>{@link DateFormat#getDateInstance(int, Locale)\n- *       DateFormat.getDateInstance}{@code (}{@link DateFormat#SHORT}{@code , getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n- *       <td>{@link DateFormat#getDateInstance(int, Locale)\n- *       DateFormat.getDateInstance}{@code (}{@link DateFormat#MEDIUM}{@code , getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n- *       <td>{@link DateFormat#getDateInstance(int, Locale)\n- *       DateFormat.getDateInstance}{@code (}{@link DateFormat#LONG}{@code , getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n- *       <td>{@link DateFormat#getDateInstance(int, Locale)\n- *       DateFormat.getDateInstance}{@code (}{@link DateFormat#FULL}{@code , getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n- *       <td>{@code new} {@link SimpleDateFormat#SimpleDateFormat(String, Locale)\n- *       SimpleDateFormat}{@code (subformatPattern, getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code time}\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n- *       <td>{@link DateFormat#getTimeInstance(int, Locale)\n- *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#DEFAULT}{@code , getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n- *       <td>{@link DateFormat#getTimeInstance(int, Locale)\n- *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#SHORT}{@code , getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n- *       <td>{@link DateFormat#getTimeInstance(int, Locale)\n- *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#MEDIUM}{@code , getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n- *       <td>{@link DateFormat#getTimeInstance(int, Locale)\n- *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#LONG}{@code , getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n- *       <td>{@link DateFormat#getTimeInstance(int, Locale)\n- *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#FULL}{@code , getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n- *       <td>{@code new} {@link SimpleDateFormat#SimpleDateFormat(String, Locale)\n- *       SimpleDateFormat}{@code (subformatPattern, getLocale())}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code choice}\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n- *       <td>{@code new} {@link ChoiceFormat#ChoiceFormat(String) ChoiceFormat}{@code (subformatPattern)}\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=3>{@code list}\n- *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n- *       <td>{@link ListFormat#getInstance(Locale, ListFormat.Type, ListFormat.Style)\n- *       ListFormat.getInstance}{@code (getLocale()}, {@link ListFormat.Type#STANDARD}, {@link ListFormat.Style#FULL})\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code or}\n- *       <td>{@link ListFormat#getInstance(Locale, ListFormat.Type, ListFormat.Style)\n- *       ListFormat.getInstance}{@code (getLocale()}, {@link ListFormat.Type#OR}, {@link ListFormat.Style#FULL})\n- *    <tr>\n- *       <th scope=\"row\" style=\"font-weight:normal\">{@code unit}\n- *       <td>{@link ListFormat#getInstance(Locale, ListFormat.Type, ListFormat.Style)\n- *       ListFormat.getInstance}{@code (getLocale()}, {@link ListFormat.Type#UNIT}, {@link ListFormat.Style#FULL}}\n- * <\/tbody>\n- * <\/table>\n+ * <div>\n+ *   <p autocapitalize=\"on\">This content is interactable.<\/p>\n+ *   <a href=\"https:\/\/openjdk.org\/\" title=\"OpenJDK's Website\" tabindex=\"0\">\n+ *     Visit OpenJDK's Website!\n+ *   <\/a>\n+ * <\/div>\n@@ -240,1 +42,21 @@\n- * @since JDK1.0\n+ *\n+ * <div dir=\"ltr\" lang=\"en\">\n+ *   <p itemprop=\"description\">This is used in a jtreg test to check that global HTML tags are allowed<\/p>\n+ *   <ul spellcheck=\"true\">\n+ *     <li>Class C<\/li>\n+ *     <li>Has a default constructor<\/li>\n+ *   <\/ul>\n+ * <\/div>\n+ *\n+ * <p contenteditable=\"true\" inputmode=\"text\">Here is a description of the class and methods:<\/p>\n+ *\n+ * <ol draggable=\"true\" tabindex=\"0\">\n+ *   <li><p accesskey=\"1\" data-element-type=\"constructor\" title=\"Class Details\">Has a default constructor<\/p><\/li>\n+ *   <li><p accesskey=\"2\" data-element-type=\"toString\" title=\"Methods Summary\">Overrides toString method<\/p><\/li>\n+ *   <li><p accesskey=\"3\" data-element-type=\"other\" title=\"Usage Example\">Is used for testing<\/p><\/li>\n+ * <\/ol>\n+ *\n+ * <div itemscope>\n+ *   <p itemprop=\"name\">C1<\/p>\n+ *   <p itemprop=\"description\">C1<\/p>\n+ * <\/div>\n@@ -242,1 +64,1 @@\n-public class C1 implements Serializable {\n+public class C1 {\n@@ -245,35 +67,6 @@\n-     * This field indicates whether the C1 is undecorated.\n-     *\n-     * <p contenteditable=\"true\" draggable=\"true\" spellcheck=\"true\" data-status=\"deprecated\">\n-     * Use this field to check if the window is undecorated.\n-     * <\/p>\n-     *\n-     * @serial\n-     * @see #setUndecorated(boolean)\n-     * @since 1.4\n-     * @deprecated As of JDK version 1.5, replaced by\n-     * {@link C1#setUndecorated(boolean) setUndecorated(boolean)}.\n-     *\/\n-    @Deprecated\n-    public boolean undecorated = false;\n-\n-    \/**\n-     * Constructor.\n-     *\n-     * <p style=\"color:blue;\" itemprop=\"constructor\" itemtype=\"http:\/\/schema.org\/Person\">\n-     * Initializes a new instance of the C1 class with the specified title and test flag.\n-     * <\/p>\n-     *\n-     * @param title the title\n-     * @param test  boolean value\n-     * @throws IllegalArgumentException if the <code>owner<\/code>'s\n-     *                                  <code>GraphicsConfiguration<\/code> is not from a screen device\n-     *\/\n-    public C1(String title, boolean test) {\n-    }\n-\n-\n-    \/**\n-     * <p lang=\"en\"> This is a Constructor<\/p>\n-     *\n-     * @param title title\n+     * <p lang=\"en\" accesskey=\"D\" autocapitalize=\"on\" draggable=\"true\" spellcheck=\"false\">\n+     * Default constructor for the {@code C1} class. (this content is draggable!) <\/p>\n+     * <div lang=\"en\" contenteditable=\"true\">\n+     *   <p itemprop=\"creator\">Author: try editing this content!<\/p>\n+     *   <p title=\"Creation Date\">Created on: June 14 2024<\/p>\n+     * <\/div>\n@@ -281,2 +74,1 @@\n-\n-    public C1(String title) {\n+    public C1() {\n@@ -286,1 +78,1 @@\n-     * Method comments.\n+     * A method in C1\n@@ -288,3 +80,1 @@\n-     * <p dir=\"rtl\" enterkeyhint=\"next\" data-method=\"setter\">\n-     * Sets the undecorated property of the window.\n-     * <\/p>\n+     * <p lang=\"en\" inputmode=\"numeric\">simple method.<\/p>\n@@ -292,5 +82,4 @@\n-     * @param undecorated <code>true<\/code> if no decorations are\n-     *                    to be enabled;\n-     *                    <code>false<\/code> if decorations are to be enabled.\n-     * @see #readObject()\n-     * @since 1.4\n+     * <div itemprop=\"method\" itemscope>\n+     *   <p itemprop=\"name\">method m<\/p>\n+     *   <p itemprop=\"description\">the method m does nothing<\/p>\n+     * <\/div>\n@@ -298,2 +87,1 @@\n-    public void setUndecorated(boolean undecorated) {\n-        \/* Make sure we don't run in the middle of peer creation.*\/\n+    public void m() {\n@@ -303,1 +91,1 @@\n-     * Can throw an exception\n+     * A toString Override.\n@@ -305,2 +93,1 @@\n-     * @throws java.io.IOException on error\n-     * @see #setUndecorated(boolean)\n+     * <p dir=\"ltr\" spellcheck=\"true\">returns a String Object.<\/p>\n@@ -308,11 +95,2 @@\n-     * <p itemid=\"#readObject\" tabindex=\"0\" inputmode=\"text\" data-method=\"deserializer\">\n-     * Reads the object from a stream.\n-     * <\/p>\n-     *\/\n-    public void readObject() throws IOException {\n-    }\n-\n-    \/**\n-     * This enum specifies the possible modal exclusion types.\n-     * <div inert>\n-     * Modal exclusion types determine how the application handles modal dialogs.\n+     * <div itemprop=\"method\" itemscope>\n+     *   <p itemprop=\"name\">toString<\/p>\n@@ -321,1 +99,1 @@\n-     * @since 1.6\n+     * @return a string.\n@@ -323,15 +101,3 @@\n-    public static enum ModalExclusionType {\n-\n-        \/**\n-         * No modal exclusion.\n-         * <span title=\"No exclusion\" data-tooltip=\"No exclusion applied\">No modal exclusion is applied.<\/span>\n-         *\/\n-        NO_EXCLUDE,\n-        \/**\n-         * <code>APPLICATION_EXCLUDE<\/code> indicates that a top-level window\n-         * won't be blocked by any application-modal dialogs. Also, it isn't\n-         * blocked by document-modal dialogs from outside of its child hierarchy.\n-         * <p>\n-         * <span hidden>This exclusion type ensures the top-level window remains interactive.<\/span>\n-         *\/\n-        APPLICATION_EXCLUDE\n+    @Override\n+    public String toString() {\n+        return \"C1\";\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/TestGlobalHtml\/pkg1\/C1.java","additions":56,"deletions":290,"binary":false,"changes":346,"status":"modified"},{"patch":"@@ -1,151 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package pkg1;\n-\n-import java.io.IOException;\n-\n-\/**\n- * <div inert>\n- *   <p>This content is inert and not interactable.<\/p>\n- *   <a href=\"https:\/\/openjdk.org\/\" accesskey=\"O\" title=\"OpenJDK's Website\" tabindex=\"0\">\n- *     Visit OpenJDK's Website\n- *   <\/a>\n- * <\/div>\n- *\n- * <div>\n- *   <p>This content is interactable.<\/p>\n- *   <a href=\"https:\/\/openjdk.org\/\" accesskey=\"O\" title=\"OpenJDK's Website\" tabindex=\"0\">\n- *     Visit OpenJDK's Website\n- *   <\/a>\n- * <\/div>\n- *\n- * A class comment for testing.\n- *\n- * <p lang=\"en\" accesskey=\"D\" autocapitalize=\"none\" draggable=\"true\" spellcheck=\"false\">\n- * This class extends C1 and provides additional functionalities.\n- * <\/p>\n- *\n- * <table class=\"plain\">\n- * <caption>Examples of methods in C2<\/caption>\n- * <thead>\n- *    <tr>\n- *       <th scope=\"col\">Method Name\n- *       <th scope=\"col\">Description\n- * <\/thead>\n- * <tbody>\n- *    <tr>\n- *       <td>performAction\n- *       <td>Performs a specified action.\n- *    <tr>\n- *       <td>calculateResult\n- *       <td>Calculates a result based on input.\n- * <\/tbody>\n- * <\/table>\n- *\n- * @since JDK 8\n- *\/\n-public class C2 extends C1 {\n-\n-    \/**\n-     * Constructor with title and test flag.\n-     *\n-     * <p itemprop=\"constructor\" itemtype=\"http:\/\/schema.org\/Person\">\n-     * Initializes a new instance of the C2 class with the specified title and test flag.\n-     * <\/p>\n-     *\n-     * @param title the title\n-     * @param test  boolean value\n-     *\/\n-    public C2(String title, boolean test) {\n-        super(title, test);\n-    }\n-\n-    \/**\n-     * Constructor with title only.\n-     *\n-     * <p lang=\"en\"> Initializes a new instance of the C2 class with the specified title.<\/p>\n-     *\n-     * @param title the title\n-     *\/\n-    public C2(String title) {\n-        super(title);\n-    }\n-\n-    \/**\n-     * Perform a specified action.\n-     *\n-     * <p contenteditable=\"true\" draggable=\"true\" spellcheck=\"true\" data-method=\"action\">\n-     * This method performs an action and returns a status.\n-     * <\/p>\n-     *\n-     * <ul>\n-     *   <li>Item 1\n-     *   <li>Item 2\n-     *   <li>Item 3\n-     * <\/ul>\n-     *\n-     * @param action a string representing the action to be performed\n-     * @return a boolean indicating success or failure\n-     * @see #calculateResult(int, int)\n-     *\/\n-    public boolean performAction(String action) {\n-        return true;\n-    }\n-\n-    \/**\n-     * Calculates a result based on two integer inputs.\n-     *\n-     * <p enterkeyhint=\"done\" data-method=\"calculation\">\n-     * This method takes two integers, performs a calculation, and returns the result.\n-     * <\/p>\n-     *\n-     * <ol>\n-     *   <li>Step 1: Input validation\n-     *   <li>Step 2: Calculation\n-     *   <li>Step 3: Return result\n-     * <\/ol>\n-     *\n-     * @param a the first integer\n-     * @param b the second integer\n-     * @return the result of the calculation\n-     * @throws ArithmeticException if a division by zero occurs\n-     *\/\n-    public int calculateResult(int a, int b) throws ArithmeticException {\n-        return a + b;\n-    }\n-\n-    \/**\n-     * Reads the object from a stream.\n-     *\n-     * <p itemid=\"#readObject\" tabindex=\"0\" inputmode=\"text\" data-method=\"deserializer\">\n-     * This method deserializes an object from the input stream.\n-     * <\/p>\n-     *\n-     * @throws IOException if an I\/O error occurs\n-     *\/\n-    @Override\n-    public void readObject() throws IOException {\n-        super.readObject();\n-    }\n-}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/TestGlobalHtml\/pkg1\/C2.java","additions":0,"deletions":151,"binary":false,"changes":151,"status":"deleted"}]}