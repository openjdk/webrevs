{"files":[{"patch":"@@ -693,1 +693,3 @@\n-            if (!name.toString().startsWith(\"on\")) {\n+            \/\/ custom \"data-*\" attributes are also accepted\n+            var attrName=name.toString();\n+            if (!attrName.startsWith(\"on\") && !attrName.matches(\"data-[a-z]+(-[a-z]+)*\")){\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -512,1 +512,25 @@\n-        WIDTH;\n+        WIDTH,\n+        ACCESSKEY,\n+        AUTOCAPITALIZE,\n+        AUTOFOCUS,\n+        CONTENTEDITABLE,\n+        DIR,\n+        DRAGGABLE,\n+        ENTERKEYHINT,\n+        HIDDEN,\n+        INERT,\n+        INPUTMODE,\n+        IS,\n+        ITEMID,\n+        ITEMPROP,\n+        ITEMREF,\n+        ITEMSCOPE,\n+        ITEMTYPE,\n+        LANG,\n+        NONCE,\n+        POPOVER,\n+        SPELLCHECK,\n+        TABINDEX,\n+        TITLE,\n+        TRANSLATE,\n+        WRITINGSUGGESTIONS;\n@@ -532,0 +556,26 @@\n+    private final EnumSet<Attr> GLOBAL_ATTRS = EnumSet.of(\n+            Attr.ACCESSKEY,\n+            Attr.AUTOCAPITALIZE,\n+            Attr.AUTOFOCUS,\n+            Attr.CONTENTEDITABLE,\n+            Attr.DIR,\n+            Attr.DRAGGABLE,\n+            Attr.ENTERKEYHINT,\n+            Attr.HIDDEN,\n+            Attr.INERT,\n+            Attr.INPUTMODE,\n+            Attr.IS,\n+            Attr.ITEMID,\n+            Attr.ITEMPROP,\n+            Attr.ITEMREF,\n+            Attr.ITEMSCOPE,\n+            Attr.ITEMTYPE,\n+            Attr.LANG,\n+            Attr.NONCE,\n+            Attr.POPOVER,\n+            Attr.SPELLCHECK,\n+            Attr.TABINDEX,\n+            Attr.TITLE,\n+            Attr.TRANSLATE,\n+            Attr.WRITINGSUGGESTIONS);\n+\n@@ -595,0 +645,4 @@\n+        \/\/this is to allow global attributes\n+        for (Attr attr : GLOBAL_ATTRS) {\n+            this.attrs.put(attr, AttrKind.OK);\n+        }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/HtmlTag.java","additions":56,"deletions":2,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug      8322708\n+ * @summary  Test to make sure global tags work properly\n+ * @library  \/tools\/lib ..\/..\/lib\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    toolbox.ToolBox javadoc.tester.*\n+ * @run main TestGlobalHtml\n+ *\/\n+\n+import javadoc.tester.JavadocTester;\n+\n+public class TestGlobalHtml extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        var tester = new TestGlobalHtml();\n+        tester.runTests();\n+        tester.printSummary();\n+    }\n+\n+    @Test\n+    public void testGlobalTags() {\n+        javadoc(\"--allow-script-in-comments\",\n+                \"-d\",\n+                \"out-global\",\n+                \"-sourcepath\",\n+                testSrc,\n+                \"pkg1\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"pkg1\/C1.html\", true,\n+                \"\"\"\n+                        <p contenteditable=\"true\" draggable=\"true\" spellcheck=\"true\" data-status=\"deprecated\">\n+                        \"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/TestGlobalHtml\/TestGlobalHtml.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,339 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package pkg1;\n+\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.text.*;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Locale;\n+\n+\/**\n+ * A class comment for testing.\n+ *\n+ * <p accesskey=\"C\" autocapitalize=\"sentences\" dir=\"ltr\" lang=\"en\" data-purpose=\"documentation\">\n+ * This class is used to demonstrate the use of various HTML global attributes in Javadoc comments.\n+ * <\/p>\n+ * <table class=\"plain\" id=\"format-table\" data-description=\"FormatType to FormatStyle mapping\">\n+ * <caption style=\"display:none\">Shows how FormatType and FormatStyle values map to Format instances<\/caption>\n+ * <thead>\n+ *    <tr>\n+ *       <th scope=\"col\" class=\"TableHeadingColor\">FormatType\n+ *       <th scope=\"col\" class=\"TableHeadingColor\">FormatStyle\n+ *       <th scope=\"col\" class=\"TableHeadingColor\">Subformat Created\n+ * <\/thead>\n+ * <tbody>\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@code null}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=7>{@code number}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@link NumberFormat#getInstance(Locale) NumberFormat.getInstance}{@code (getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code integer}\n+ *       <td>{@link NumberFormat#getIntegerInstance(Locale) NumberFormat.getIntegerInstance}{@code (getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code currency}\n+ *       <td>{@link NumberFormat#getCurrencyInstance(Locale) NumberFormat.getCurrencyInstance}{@code (getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code percent}\n+ *       <td>{@link NumberFormat#getPercentInstance(Locale) NumberFormat.getPercentInstance}{@code (getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code compact_short}\n+ *       <td>{@link NumberFormat#getCompactNumberInstance(Locale, NumberFormat.Style)\n+ *       NumberFormat.getCompactNumberInstance}{@code (getLocale(),} {@link NumberFormat.Style#SHORT})\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code compact_long}\n+ *       <td>{@link NumberFormat#getCompactNumberInstance(Locale, NumberFormat.Style)\n+ *       NumberFormat.getCompactNumberInstance}{@code (getLocale(),} {@link NumberFormat.Style#LONG})\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n+ *       <td>{@code new} {@link DecimalFormat#DecimalFormat(String, DecimalFormatSymbols)\n+ *       DecimalFormat}{@code (subformatPattern,} {@link DecimalFormatSymbols#getInstance(Locale)\n+ *       DecimalFormatSymbols.getInstance}{@code (getLocale()))}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code dtf_date}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#SHORT}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#LONG}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDate(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDate(}{@link java.time.format.FormatStyle#FULL}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n+ *       <td>{@link DateTimeFormatter#ofPattern(String, Locale)\n+ *       DateTimeFormatter.ofPattern}{@code (subformatPattern, getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code dtf_time}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#SHORT}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#LONG}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedTime(}{@link java.time.format.FormatStyle#FULL}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n+ *       <td>{@link DateTimeFormatter#ofPattern(String, Locale)   DateTimeFormatter.ofPattern}{@code (subformatPattern, getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code dtf_datetime}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#SHORT}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#MEDIUM}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#LONG}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n+ *       <td>{@link DateTimeFormatter#ofLocalizedDateTime(java.time.format.FormatStyle)\n+ *       DateTimeFormatter.ofLocalizedDateTime(}{@link java.time.format.FormatStyle#FULL}{@code ).withLocale(getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n+ *       <td>{@link DateTimeFormatter#ofPattern(String, Locale)\n+ *       DateTimeFormatter.ofPattern}{@code (subformatPattern, getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=1>{@code pre-defined DateTimeFormatter(s)}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>The {@code pre-defined DateTimeFormatter(s)} are used as a {@code FormatType} :\n+ *       {@link DateTimeFormatter#BASIC_ISO_DATE BASIC_ISO_DATE},\n+ *       {@link DateTimeFormatter#ISO_LOCAL_DATE ISO_LOCAL_DATE},\n+ *       {@link DateTimeFormatter#ISO_OFFSET_DATE ISO_OFFSET_DATE},\n+ *       {@link DateTimeFormatter#ISO_DATE ISO_DATE},\n+ *       {@link DateTimeFormatter#ISO_LOCAL_TIME ISO_LOCAL_TIME},\n+ *       {@link DateTimeFormatter#ISO_OFFSET_TIME ISO_OFFSET_TIME},\n+ *       {@link DateTimeFormatter#ISO_TIME ISO_TIME},\n+ *       {@link DateTimeFormatter#ISO_LOCAL_DATE_TIME ISO_LOCAL_DATE_TIME},\n+ *       {@link DateTimeFormatter#ISO_OFFSET_DATE_TIME ISO_OFFSET_DATE_TIME},\n+ *       {@link DateTimeFormatter#ISO_ZONED_DATE_TIME ISO_ZONED_DATE_TIME},\n+ *       {@link DateTimeFormatter#ISO_DATE_TIME ISO_DATE_TIME},\n+ *       {@link DateTimeFormatter#ISO_ORDINAL_DATE ISO_ORDINAL_DATE},\n+ *       {@link DateTimeFormatter#ISO_WEEK_DATE ISO_WEEK_DATE},\n+ *       {@link DateTimeFormatter#ISO_INSTANT ISO_INSTANT},\n+ *       {@link DateTimeFormatter#RFC_1123_DATE_TIME RFC_1123_DATE_TIME}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code date}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@link DateFormat#getDateInstance(int, Locale)\n+ *       DateFormat.getDateInstance}{@code (}{@link DateFormat#DEFAULT}{@code , getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n+ *       <td>{@link DateFormat#getDateInstance(int, Locale)\n+ *       DateFormat.getDateInstance}{@code (}{@link DateFormat#SHORT}{@code , getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n+ *       <td>{@link DateFormat#getDateInstance(int, Locale)\n+ *       DateFormat.getDateInstance}{@code (}{@link DateFormat#MEDIUM}{@code , getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n+ *       <td>{@link DateFormat#getDateInstance(int, Locale)\n+ *       DateFormat.getDateInstance}{@code (}{@link DateFormat#LONG}{@code , getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n+ *       <td>{@link DateFormat#getDateInstance(int, Locale)\n+ *       DateFormat.getDateInstance}{@code (}{@link DateFormat#FULL}{@code , getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n+ *       <td>{@code new} {@link SimpleDateFormat#SimpleDateFormat(String, Locale)\n+ *       SimpleDateFormat}{@code (subformatPattern, getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=6>{@code time}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@link DateFormat#getTimeInstance(int, Locale)\n+ *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#DEFAULT}{@code , getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code short}\n+ *       <td>{@link DateFormat#getTimeInstance(int, Locale)\n+ *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#SHORT}{@code , getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code medium}\n+ *       <td>{@link DateFormat#getTimeInstance(int, Locale)\n+ *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#MEDIUM}{@code , getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code long}\n+ *       <td>{@link DateFormat#getTimeInstance(int, Locale)\n+ *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#LONG}{@code , getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code full}\n+ *       <td>{@link DateFormat#getTimeInstance(int, Locale)\n+ *       DateFormat.getTimeInstance}{@code (}{@link DateFormat#FULL}{@code , getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n+ *       <td>{@code new} {@link SimpleDateFormat#SimpleDateFormat(String, Locale)\n+ *       SimpleDateFormat}{@code (subformatPattern, getLocale())}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code choice}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>SubformatPattern<\/i>\n+ *       <td>{@code new} {@link ChoiceFormat#ChoiceFormat(String) ChoiceFormat}{@code (subformatPattern)}\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\" rowspan=3>{@code list}\n+ *       <th scope=\"row\" style=\"font-weight:normal\"><i>(none)<\/i>\n+ *       <td>{@link ListFormat#getInstance(Locale, ListFormat.Type, ListFormat.Style)\n+ *       ListFormat.getInstance}{@code (getLocale()}, {@link ListFormat.Type#STANDARD}, {@link ListFormat.Style#FULL})\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code or}\n+ *       <td>{@link ListFormat#getInstance(Locale, ListFormat.Type, ListFormat.Style)\n+ *       ListFormat.getInstance}{@code (getLocale()}, {@link ListFormat.Type#OR}, {@link ListFormat.Style#FULL})\n+ *    <tr>\n+ *       <th scope=\"row\" style=\"font-weight:normal\">{@code unit}\n+ *       <td>{@link ListFormat#getInstance(Locale, ListFormat.Type, ListFormat.Style)\n+ *       ListFormat.getInstance}{@code (getLocale()}, {@link ListFormat.Type#UNIT}, {@link ListFormat.Style#FULL}}\n+ * <\/tbody>\n+ * <\/table>\n+ *\n+ * @since JDK1.0\n+ *\/\n+public class C1 implements Serializable {\n+\n+    \/**\n+     * This field indicates whether the C1 is undecorated.\n+     *\n+     * <p contenteditable=\"true\" draggable=\"true\" spellcheck=\"true\" data-status=\"deprecated\">\n+     * Use this field to check if the window is undecorated.\n+     * <\/p>\n+     *\n+     * @serial\n+     * @see #setUndecorated(boolean)\n+     * @since 1.4\n+     * @deprecated As of JDK version 1.5, replaced by\n+     * {@link C1#setUndecorated(boolean) setUndecorated(boolean)}.\n+     *\/\n+    @Deprecated\n+    public boolean undecorated = false;\n+\n+    \/**\n+     * Constructor.\n+     *\n+     * <p style=\"color:blue;\" itemprop=\"constructor\" itemtype=\"http:\/\/schema.org\/Person\">\n+     * Initializes a new instance of the C1 class with the specified title and test flag.\n+     * <\/p>\n+     *\n+     * @param title the title\n+     * @param test  boolean value\n+     * @throws IllegalArgumentException if the <code>owner<\/code>'s\n+     *                                  <code>GraphicsConfiguration<\/code> is not from a screen device\n+     *\/\n+    public C1(String title, boolean test) {\n+    }\n+\n+\n+    \/**\n+     * <p lang=\"en\"> This is a Constructor<\/p>\n+     *\n+     * @param title title\n+     *\/\n+\n+    public C1(String title) {\n+    }\n+\n+    \/**\n+     * Method comments.\n+     *\n+     * <p dir=\"rtl\" enterkeyhint=\"next\" data-method=\"setter\">\n+     * Sets the undecorated property of the window.\n+     * <\/p>\n+     *\n+     * @param undecorated <code>true<\/code> if no decorations are\n+     *                    to be enabled;\n+     *                    <code>false<\/code> if decorations are to be enabled.\n+     * @see #readObject()\n+     * @since 1.4\n+     *\/\n+    public void setUndecorated(boolean undecorated) {\n+        \/* Make sure we don't run in the middle of peer creation.*\/\n+    }\n+\n+    \/**\n+     * Can throw an exception\n+     *\n+     * @throws java.io.IOException on error\n+     * @see #setUndecorated(boolean)\n+     *\n+     * <p itemid=\"#readObject\" tabindex=\"0\" inputmode=\"text\" data-method=\"deserializer\">\n+     * Reads the object from a stream.\n+     * <\/p>\n+     *\/\n+    public void readObject() throws IOException {\n+    }\n+\n+    \/**\n+     * This enum specifies the possible modal exclusion types.\n+     * <div inert>\n+     * Modal exclusion types determine how the application handles modal dialogs.\n+     * <\/div>\n+     *\n+     * @since 1.6\n+     *\/\n+    public static enum ModalExclusionType {\n+\n+        \/**\n+         * No modal exclusion.\n+         * <span title=\"No exclusion\" data-tooltip=\"No exclusion applied\">No modal exclusion is applied.<\/span>\n+         *\/\n+        NO_EXCLUDE,\n+        \/**\n+         * <code>APPLICATION_EXCLUDE<\/code> indicates that a top-level window\n+         * won't be blocked by any application-modal dialogs. Also, it isn't\n+         * blocked by document-modal dialogs from outside of its child hierarchy.\n+         * <p>\n+         * <span hidden>This exclusion type ensures the top-level window remains interactive.<\/span>\n+         *\/\n+        APPLICATION_EXCLUDE\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/TestGlobalHtml\/pkg1\/C1.java","additions":339,"deletions":0,"binary":false,"changes":339,"status":"added"},{"patch":"@@ -0,0 +1,156 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package pkg1;\n+\n+import java.io.IOException;\n+\n+\/**\n+ * <div inert>\n+ *   <p>This content is inert and not interactable.<\/p>\n+ *   <a href=\"https:\/\/openjdk.org\/\" accesskey=\"O\" title=\"OpenJDK's Website\" tabindex=\"0\">\n+ *     Visit OpenJDK's Website\n+ *   <\/a>\n+ * <\/div>\n+ *\n+ * <div>\n+ *   <p>This content is interactable.<\/p>\n+ *   <a href=\"https:\/\/openjdk.org\/\" accesskey=\"O\" title=\"OpenJDK's Website\" tabindex=\"0\">\n+ *     Visit OpenJDK's Website\n+ *   <\/a>\n+ * <\/div>\n+ *\n+ * A class comment for testing.\n+ *\n+ * <p lang=\"en\" accesskey=\"D\" autocapitalize=\"none\" draggable=\"true\" spellcheck=\"false\">\n+ * This class extends C1 and provides additional functionalities.\n+ * <\/p>\n+ *\n+ * <table class=\"plain\">\n+ * <caption>Examples of methods in C2<\/caption>\n+ * <thead>\n+ *    <tr>\n+ *       <th scope=\"col\">Method Name\n+ *       <th scope=\"col\">Description\n+ * <\/thead>\n+ * <tbody>\n+ *    <tr>\n+ *       <td>performAction\n+ *       <td>Performs a specified action.\n+ *    <tr>\n+ *       <td>calculateResult\n+ *       <td>Calculates a result based on input.\n+ * <\/tbody>\n+ * <\/table>\n+ *\n+ * @since JDK 8\n+ *\/\n+public class C2 extends C1 {\n+\n+    \/**\n+     * Constructor with title and test flag.\n+     *\n+     * <p itemprop=\"constructor\" itemtype=\"http:\/\/schema.org\/Person\">\n+     * Initializes a new instance of the C2 class with the specified title and test flag.\n+     * <\/p>\n+     *\n+     * @param title the title\n+     * @param test  boolean value\n+     *\/\n+    public C2(String title, boolean test) {\n+        super(title, test);\n+    }\n+\n+    \/**\n+     * Constructor with title only.\n+     *\n+     * <p lang=\"en\"> Initializes a new instance of the C2 class with the specified title.<\/p>\n+     *\n+     * @param title the title\n+     *\/\n+    public C2(String title) {\n+        super(title);\n+    }\n+\n+    \/**\n+     * Perform a specified action.\n+     *\n+     * <p contenteditable=\"true\" draggable=\"true\" spellcheck=\"true\" data-method=\"action\">\n+     * This method performs an action and returns a status.\n+     * <\/p>\n+     *\n+     * <ul>\n+     *   <li>Item 1\n+     *   <li>Item 2\n+     *   <li>Item 3\n+     * <\/ul>\n+     *\n+     * @param action a string representing the action to be performed\n+     * @return a boolean indicating success or failure\n+     * @see #calculateResult(int, int)\n+     *\/\n+    public boolean performAction(String action) {\n+        \/\/ Placeholder implementation\n+        return true;\n+    }\n+\n+    \/**\n+     * Calculates a result based on two integer inputs.\n+     *\n+     * <p enterkeyhint=\"done\" data-method=\"calculation\">\n+     * This method takes two integers, performs a calculation, and returns the result.\n+     * <\/p>\n+     *\n+     * <ol>\n+     *   <li>Step 1: Input validation\n+     *   <li>Step 2: Calculation\n+     *   <li>Step 3: Return result\n+     * <\/ol>\n+     *\n+     * @param a the first integer\n+     * @param b the second integer\n+     * @return the result of the calculation\n+     * @throws ArithmeticException if a division by zero occurs\n+     *\/\n+    public int calculateResult(int a, int b) throws ArithmeticException {\n+        \/\/ Placeholder implementation\n+        return a + b;\n+    }\n+\n+    \/**\n+     * Reads the object from a stream.\n+     *\n+     * <p itemid=\"#readObject\" tabindex=\"0\" inputmode=\"text\" data-method=\"deserializer\">\n+     * This method deserializes an object from the input stream.\n+     * <\/p>\n+     *\n+     * @throws IOException if an I\/O error occurs\n+     *\/\n+    @Override\n+    public void readObject() throws IOException {\n+        \/\/ Placeholder implementation\n+        super.readObject();\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/TestGlobalHtml\/pkg1\/C2.java","additions":156,"deletions":0,"binary":false,"changes":156,"status":"added"}]}