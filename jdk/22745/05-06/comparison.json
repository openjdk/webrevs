{"files":[{"patch":"@@ -55,1 +55,1 @@\n-bool MemTracker::_done_bootstrap;\n+bool MemTracker::_bootstrapping_done;\n","filename":"src\/hotspot\/share\/nmt\/memTracker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,2 +65,2 @@\n-  static inline bool is_done_bootstrap()  {\n-    return _done_bootstrap;\n+  static inline bool is_bootstrapping_done()  {\n+    return _bootstrapping_done;\n@@ -69,2 +69,8 @@\n-  static inline void set_done_bootstrap()  {\n-    _done_bootstrap = true;\n+  static inline void set_bootstrapping_done()  {\n+    _bootstrapping_done = true;\n+  }\n+\n+  \/\/ This may be called on a detached thread during VM init, so we should check is_bootstrapping_done() first.\n+  static inline void assert_locked() {\n+    assert(!is_bootstrapping_done() || NmtVirtualMemory_lock->owned_by_self(),\n+           \"should have acquired NmtVirtualMemory_lock\");\n@@ -283,1 +289,1 @@\n-      ConditionalMutexLocker _cml;\n+    ConditionalMutexLocker _cml;\n@@ -285,1 +291,1 @@\n-      NmtVirtualMemoryLocker(): _cml(NmtVirtualMemory_lock, _done_bootstrap, Mutex::_no_safepoint_check_flag){}\n+    NmtVirtualMemoryLocker(): _cml(NmtVirtualMemory_lock, _bootstrapping_done, Mutex::_no_safepoint_check_flag){}\n@@ -296,1 +302,1 @@\n-  static bool             _done_bootstrap;\n+  static bool             _bootstrapping_done;\n","filename":"src\/hotspot\/share\/nmt\/memTracker.hpp","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-  assert(!MemTracker::is_done_bootstrap() || NmtVirtualMemory_lock->owned_by_self() , \"Should have acquired NmtVirtualMemory_lock\");\n+  MemTracker::assert_locked();\n@@ -420,1 +420,1 @@\n-  assert(!MemTracker::is_done_bootstrap() || NmtVirtualMemory_lock->owned_by_self() , \"Should have acquired NmtVirtualMemory_lock\");\n+  assert(!MemTracker::is_bootstrapping_done() || NmtVirtualMemory_lock->owned_by_self() , \"Should have acquired NmtVirtualMemory_lock\");\n@@ -439,2 +439,1 @@\n-  \/\/ This may be called on a detached thread during VM init, so we should check is_done_bootstrap() first.\n-  assert(!MemTracker::is_done_bootstrap() || NmtVirtualMemory_lock->owned_by_self() , \"Should have acquired NmtVirtualMemory_lock\");\n+  MemTracker::assert_locked();\n@@ -461,1 +460,1 @@\n-  assert(!MemTracker::is_done_bootstrap() || NmtVirtualMemory_lock->owned_by_self() , \"Should have acquired NmtVirtualMemory_lock\");\n+  MemTracker::assert_locked();\n@@ -477,1 +476,1 @@\n-  assert(!MemTracker::is_done_bootstrap() || NmtVirtualMemory_lock->owned_by_self() , \"Should have acquired NmtVirtualMemory_lock\");\n+  MemTracker::assert_locked();\n@@ -499,1 +498,1 @@\n-  assert(!MemTracker::is_done_bootstrap() || NmtVirtualMemory_lock->owned_by_self() , \"Should have acquired NmtVirtualMemory_lock\");\n+  MemTracker::assert_locked();\n@@ -631,1 +630,3 @@\n-    assert_lock_strong(NmtVirtualMemory_lock);\n+    if (MemTracker::is_bootstrapping_done()) {\n+      assert_lock_strong(NmtVirtualMemory_lock);\n+    }\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -546,1 +546,1 @@\n-  MemTracker::set_done_bootstrap();\n+  MemTracker::set_bootstrapping_done();\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -652,1 +652,3 @@\n-  if (MemTracker::enabled() && NmtVirtualMemory_lock != nullptr  && MemTracker::is_done_bootstrap() && NmtVirtualMemory_lock->owned_by_self()) {\n+  if (MemTracker::enabled() &&\n+      MemTracker::is_bootstrapping_done() &&\n+      NmtVirtualMemory_lock->owned_by_self()) {\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}