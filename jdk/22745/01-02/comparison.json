{"files":[{"patch":"@@ -64,0 +64,1 @@\n+  \/\/ We need this to avoid attempting to lock NmtVirtualMemory_lock during VM init (before mutexes are ready or current thread has been assigned).\n@@ -279,9 +280,0 @@\n-  \/\/ Same as MutexLocker but can be used during VM init while single threaded and before mutexes are ready or current thread has been assigned.\n-  \/\/ Performs no action during VM init.\n-  class NmtVirtualMemoryLocker: public ConditionalMutexLocker {\n-  public:\n-      NmtVirtualMemoryLocker() :\n-              ConditionalMutexLocker(NmtVirtualMemory_lock, _done_bootstrap, Mutex::_no_safepoint_check_flag) {\n-      }\n-  };\n-\n","filename":"src\/hotspot\/share\/nmt\/memTracker.hpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-    MemTracker::NmtVirtualMemoryLocker ml;\n+    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n@@ -175,1 +175,1 @@\n-    MemTracker::NmtVirtualMemoryLocker ml;\n+    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n@@ -265,1 +265,1 @@\n-    MemTracker::NmtVirtualMemoryLocker ml;\n+    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n@@ -438,1 +438,1 @@\n-    MemTracker::NmtVirtualMemoryLocker ml;\n+    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n","filename":"test\/hotspot\/gtest\/runtime\/test_virtualMemoryTracker.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}