{"files":[{"patch":"@@ -1089,1 +1089,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3623,1 +3623,1 @@\n-      fileStream fs(stdout);\n+      fileStream fs(defaultStream::output_stream());\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1806,1 +1806,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n","filename":"src\/hotspot\/os\/windows\/perfMemory_windows.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n","filename":"src\/hotspot\/share\/nmt\/memBaseline.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -469,1 +469,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n","filename":"src\/hotspot\/share\/nmt\/memReporter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-      ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+      NmtVirtualMemoryLocker nvml;\n@@ -162,1 +162,1 @@\n-      ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+      NmtVirtualMemoryLocker nvml;\n@@ -173,1 +173,1 @@\n-      ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+      NmtVirtualMemoryLocker nvml;\n@@ -181,1 +181,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    NmtVirtualMemoryLocker nvml;\n@@ -189,1 +189,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    NmtVirtualMemoryLocker nvml;\n@@ -198,1 +198,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    NmtVirtualMemoryLocker nvml;\n@@ -207,1 +207,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    NmtVirtualMemoryLocker nvml;\n@@ -221,1 +221,1 @@\n-      ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+      NmtVirtualMemoryLocker nvml;\n@@ -230,1 +230,1 @@\n-      ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+      NmtVirtualMemoryLocker nvml;\n@@ -280,0 +280,8 @@\n+  \/\/ Same as MutexLocker but can be used during VM init while single threaded and before mutexes are ready or current thread has been assigned.\n+  \/\/ Performs no action during VM init.\n+  class NmtVirtualMemoryLocker: StackObj {\n+      ConditionalMutexLocker _cml;\n+  public:\n+      NmtVirtualMemoryLocker(): _cml(NmtVirtualMemory_lock, _done_bootstrap, Mutex::_no_safepoint_check_flag){}\n+  };\n+\n","filename":"src\/hotspot\/share\/nmt\/memTracker.hpp","additions":17,"deletions":9,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n","filename":"src\/hotspot\/share\/nmt\/nmtUsage.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+  MemTracker::MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -65,1 +65,1 @@\n-  ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+  MemTracker::NmtVirtualMemoryLocker nvml;\n","filename":"src\/hotspot\/share\/nmt\/threadStackTracker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -672,1 +672,1 @@\n-  ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+  MemTracker::NmtVirtualMemoryLocker nvml;\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -288,1 +288,0 @@\n-  MUTEX_DEFN(SharedDecoder_lock              , PaddedMutex  , service-5); \/\/ Must be lower than NmtVirtualMemory_lock due to MemTracker::print_containing_region\n@@ -292,1 +291,1 @@\n-  MUTEX_DEFN(NmtVirtualMemory_lock           , PaddedMutex  , service-4);\n+  MUTEX_DEFN(NmtVirtualMemory_lock           , PaddedMutex  , service-4); \/\/ Must be lower than G1Mapper_lock used from G1RegionsSmallerThanCommitSizeMapper::commit_regions\n@@ -350,0 +349,1 @@\n+  MUTEX_DEFL(SharedDecoder_lock             , PaddedMutex  , NmtVirtualMemory_lock); \/\/ Must be lower than NmtVirtualMemory_lock due to MemTracker::print_containing_region\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2206,1 +2206,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -2228,1 +2228,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -2313,1 +2313,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -2352,1 +2352,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -174,1 +174,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -264,1 +264,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -437,1 +437,1 @@\n-    ConditionalMutexLocker cml(NmtVirtualMemory_lock, MemTracker::is_done_bootstrap(), Mutex::_no_safepoint_check_flag);\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n","filename":"test\/hotspot\/gtest\/runtime\/test_virtualMemoryTracker.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}