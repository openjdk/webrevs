{"files":[{"patch":"@@ -3051,0 +3051,8 @@\n+void TypeNode::make_path_dead(PhaseIterGVN* igvn, PhaseIdealLoop* loop, Node* ctrl_use, uint j) {\n+  Node* c = ctrl_use->in(j);\n+  if (igvn->type(c) != Type::TOP) {\n+    igvn->replace_input_of(ctrl_use, j, igvn->C->top());\n+    create_halt_path(igvn, c, loop);\n+  }\n+}\n+\n@@ -3067,5 +3075,1 @@\n-        Node* c = u->in(0);\n-        if (igvn->type(c) != Type::TOP) {\n-          igvn->replace_input_of(u, 0, igvn->C->top());\n-          create_halt_path(igvn, c, loop);\n-        }\n+        make_path_dead(igvn, loop, u, 0);\n@@ -3076,7 +3080,3 @@\n-          for (uint k = 1; k < u->req(); ++k) {\n-            if (u->in(k) == n) {\n-              Node* c = r->in(k);\n-              if (igvn->type(c) != Type::TOP) {\n-                igvn->replace_input_of(r, k, igvn->C->top());\n-                create_halt_path(igvn, c, loop);\n-              }\n+          for (uint j = 1; j < u->req(); ++j) {\n+            if (u->in(j) == n) {\n+              make_path_dead(igvn, loop, r, j);\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2043,0 +2043,2 @@\n+\n+  void make_path_dead(PhaseIterGVN* igvn, PhaseIdealLoop* loop, Node* ctrl_use, uint j);\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}