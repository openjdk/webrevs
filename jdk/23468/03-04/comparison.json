{"files":[{"patch":"@@ -47,4 +47,1 @@\n-      const size_t len = ss.size();\n-      char* store = NEW_ARENA_ARRAY(&_text_storage, char, len + 1);\n-      memcpy(store, ss.base(), len + 1);\n-      (*cached_frame_text) = store;\n+      (*cached_frame_text) = ss.as_string(&_text_storage);\n","filename":"src\/hotspot\/share\/nmt\/nativeCallStackPrinter.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3132,3 +3132,0 @@\n-  size_t len = ss.size() + 1;\n-  char* arena_str = NEW_ARENA_ARRAY(igvn->C->comp_arena(), char, len);\n-  memcpy(arena_str, ss.base(), len);\n@@ -3136,1 +3133,1 @@\n-  Node* halt = new HaltNode(c, frame, arena_str);\n+  Node* halt = new HaltNode(c, frame, ss.as_string(igvn->C->comp_arena()));\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -440,0 +440,7 @@\n+char* stringStream::as_string(Arena* arena) const {\n+  char* copy = NEW_ARENA_ARRAY(arena, char, _written + 1);\n+  ::memcpy(copy, _buffer, _written);\n+  copy[_written] = '\\0';  \/\/ terminating null\n+  return copy;\n+}\n+\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -273,0 +273,1 @@\n+  char* as_string(Arena* arena) const;\n","filename":"src\/hotspot\/share\/utilities\/ostream.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}