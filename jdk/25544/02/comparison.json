{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.nio.charset.Charset;\n@@ -1476,1 +1477,1 @@\n-        BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n+        BufferedReader reader = stdinAwareReader(in);\n@@ -2831,1 +2832,1 @@\n-        BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n+        BufferedReader reader = stdinAwareReader(in);\n@@ -3536,2 +3537,1 @@\n-        return (new BufferedReader(new InputStreamReader(\n-                                        System.in))).readLine();\n+        return stdinAwareReader(System.in).readLine();\n@@ -3547,2 +3547,8 @@\n-        return (new BufferedReader(new InputStreamReader(\n-                                        System.in))).readLine();\n+        return stdinAwareReader(System.in).readLine();\n+    }\n+\n+    private static BufferedReader stdinAwareReader(InputStream in) {\n+        InputStreamReader reader = in == System.in\n+                ? new InputStreamReader(in, Charset.forName(System.getProperty(\"stdin.encoding\"), Charset.defaultCharset()))\n+                : new InputStreamReader(in);\n+        return new BufferedReader(reader);\n@@ -3735,1 +3741,1 @@\n-        in = new BufferedReader(new InputStreamReader(System.in));\n+        in = stdinAwareReader(System.in);\n@@ -4241,2 +4247,1 @@\n-            reply = (new BufferedReader(new InputStreamReader\n-                                        (System.in))).readLine();\n+            reply = stdinAwareReader(System.in).readLine();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import java.nio.charset.Charset;\n@@ -133,2 +134,3 @@\n-        String result = new BufferedReader\n-            (new InputStreamReader(System.in)).readLine();\n+        Charset charset = Charset.forName(System.getProperty(\"stdin.encoding\"), Charset.defaultCharset());\n+        InputStreamReader reader = new InputStreamReader(System.in, charset);\n+        String result = new BufferedReader(reader).readLine();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ConsoleCallbackHandler.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.nio.charset.Charset;\n@@ -258,2 +259,2 @@\n-            BufferedReader in = new BufferedReader\n-                    (new InputStreamReader(getIn()));\n+            Charset charset = Charset.forName(System.getProperty(\"stdin.encoding\"), Charset.defaultCharset());\n+            BufferedReader in = new BufferedReader(new InputStreamReader(System.in, charset));\n@@ -405,5 +406,0 @@\n-    \/\/ input stream from where we will read\n-    private static InputStream getIn() {\n-        return System.in;\n-    }\n-\n","filename":"src\/java.scripting\/share\/classes\/com\/sun\/tools\/script\/shell\/Main.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.nio.charset.Charset;\n@@ -89,1 +90,1 @@\n-        this(new InputStreamReader(System.in),\n+        this(stdinReader(),\n@@ -96,0 +97,5 @@\n+    private static InputStreamReader stdinReader() {\n+        Charset charset = Charset.forName(System.getProperty(\"stdin.encoding\"), Charset.defaultCharset());\n+        return new InputStreamReader(System.in, charset);\n+    }\n+\n","filename":"src\/java.scripting\/share\/classes\/javax\/script\/SimpleScriptContext.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import java.nio.charset.Charset;\n@@ -307,2 +308,1 @@\n-                BufferedReader cis =\n-                    new BufferedReader(new InputStreamReader(System.in));\n+                BufferedReader cis = stdinReader();\n@@ -406,0 +406,6 @@\n+    private static BufferedReader stdinReader() {\n+        Charset charset = Charset.forName(System.getProperty(\"stdin.encoding\"), Charset.defaultCharset());\n+        Reader reader = new InputStreamReader(System.in, charset);\n+        return new BufferedReader(reader);\n+    }\n+\n@@ -415,2 +421,1 @@\n-                BufferedReader cis =\n-                    new BufferedReader(new InputStreamReader(System.in));\n+                BufferedReader cis = stdinReader();\n","filename":"src\/java.security.jgss\/windows\/classes\/sun\/security\/krb5\/internal\/tools\/Ktab.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+import java.nio.charset.Charset;\n@@ -799,2 +800,2 @@\n-            BufferedReader in =\n-                    new BufferedReader(new InputStreamReader(System.in));\n+            Charset charset = Charset.forName(System.getProperty(\"stdin.encoding\"), Charset.defaultCharset());\n+            BufferedReader in = new BufferedReader(new InputStreamReader(System.in, charset));\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/TTY.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,2 +53,0 @@\n-import java.util.*;\n-\n@@ -57,3 +55,0 @@\n-import java.io.*;\n-import java.text.*;\n-\n@@ -139,3 +134,0 @@\n-        final InputStreamReader isr = new InputStreamReader(System.in);\n-        final BufferedReader    br  = new BufferedReader(isr);\n-\n@@ -147,49 +139,38 @@\n-                    synchronized( isr ) {\n-                        boolean done = false;\n-                        try {\n-                            \/\/ For each thread, run until numHits bkpts have been hit\n-                            for( int i = 0; i < nhits; i++ ) {\n-                                \/\/ This is a tendril from the original jdb test.\n-                                \/\/ It could probably be deleted.\n-                                System.out.println(\"Thread \" + threadName + \" Enter a string: \");\n-                                String s = \"test\" + num;\n-                                switch (num) {\n-                                case 0: bkpt0(); break;\n-                                case 1: bkpt1(); break;\n-                                case 2: bkpt2(); break;\n-                                case 3: bkpt3(); break;\n-                                case 4: bkpt4(); break;\n-                                case 5: bkpt5(); break;\n-                                case 6: bkpt6(); break;\n-                                case 7: bkpt7(); break;\n-                                case 8: bkpt8(); break;\n-                                case 9: bkpt9(); break;\n-                                case 10: bkpt10(); break;\n-                                case 11: bkpt11(); break;\n-                                case 12: bkpt12(); break;\n-                                case 13: bkpt13(); break;\n-                                case 14: bkpt14(); break;\n-                                case 15: bkpt15(); break;\n-                                case 16: bkpt16(); break;\n-                                case 17: bkpt17(); break;\n-                                case 18: bkpt18(); break;\n-                                case 19: bkpt19(); break;\n-                                case 20: bkpt20(); break;\n-                                case 21: bkpt21(); break;\n-                                case 22: bkpt22(); break;\n-                                case 23: bkpt23(); break;\n-                                case 24: bkpt24(); break;\n-                                case 25: bkpt25(); break;\n-                                case 26: bkpt26(); break;\n-                                case 27: bkpt27(); break;\n-                                case 28: bkpt28(); break;\n-                                case 29: bkpt29(); break;\n-                                }\n-                                System.out.println(\"Thread \" + threadName + \" You entered : \" + s);\n-\n-                                if( s.compareTo( \"quit\" ) == 0 )\n-                                    done = true;\n-                            }\n-                        } catch(Exception e) {\n-                            System.out.println(\"WOOPS\");\n-                        }\n+            try {\n+                \/\/ For each thread, run until numHits bkpts have been hit\n+                for( int i = 0; i < nhits; i++ ) {\n+                    \/\/ This is a tendril from the original jdb test.\n+                    \/\/ It could probably be deleted.\n+                    System.out.println(\"Thread \" + threadName + \" Enter a string: \");\n+                    String s = \"test\" + num;\n+                    switch (num) {\n+                    case 0: bkpt0(); break;\n+                    case 1: bkpt1(); break;\n+                    case 2: bkpt2(); break;\n+                    case 3: bkpt3(); break;\n+                    case 4: bkpt4(); break;\n+                    case 5: bkpt5(); break;\n+                    case 6: bkpt6(); break;\n+                    case 7: bkpt7(); break;\n+                    case 8: bkpt8(); break;\n+                    case 9: bkpt9(); break;\n+                    case 10: bkpt10(); break;\n+                    case 11: bkpt11(); break;\n+                    case 12: bkpt12(); break;\n+                    case 13: bkpt13(); break;\n+                    case 14: bkpt14(); break;\n+                    case 15: bkpt15(); break;\n+                    case 16: bkpt16(); break;\n+                    case 17: bkpt17(); break;\n+                    case 18: bkpt18(); break;\n+                    case 19: bkpt19(); break;\n+                    case 20: bkpt20(); break;\n+                    case 21: bkpt21(); break;\n+                    case 22: bkpt22(); break;\n+                    case 23: bkpt23(); break;\n+                    case 24: bkpt24(); break;\n+                    case 25: bkpt25(); break;\n+                    case 26: bkpt26(); break;\n+                    case 27: bkpt27(); break;\n+                    case 28: bkpt28(); break;\n+                    case 29: bkpt29(); break;\n@@ -197,0 +178,2 @@\n+                    System.out.println(\"Thread \" + threadName + \" You entered : \" + s);\n+\n@@ -198,1 +181,4 @@\n-            );\n+            } catch(Exception e) {\n+                System.out.println(\"WOOPS\");\n+            }\n+        });\n","filename":"test\/jdk\/com\/sun\/jdi\/MultiBreakpointsTest.java","additions":45,"deletions":59,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,1 +133,1 @@\n-            (new InputStreamReader(System.in)).readLine();\n+            (new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\"))).readLine();\n","filename":"test\/jdk\/com\/sun\/security\/sasl\/ClientCallbackHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,1 +133,1 @@\n-            (new InputStreamReader(System.in)).readLine();\n+            (new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\"))).readLine();\n","filename":"test\/jdk\/com\/sun\/security\/sasl\/digest\/ClientCallbackHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-                int n = new InputStreamReader(System.in).read(buf,0,buf.length);\n+                int n = new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\")).read(buf,0,buf.length);\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/Basic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import java.io.ByteArrayInputStream;\n@@ -75,2 +76,4 @@\n-        out.println(\"Default: \"\n-                    + new InputStreamReader(System.in).getEncoding());\n+        for (String property : new String[]{\"stdin.encoding\", \"stdout.encoding\", \"stderr.encoding\"}) {\n+            String name = System.getProperty(property);\n+            out.printf(\"%s: %s (%s)%n\", property, name, Charset.forName(name));\n+        }\n","filename":"test\/jdk\/java\/nio\/charset\/spi\/CharsetTest.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        reader = new InputStreamReader(System.in);\n+        reader = new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\"));\n","filename":"test\/jdk\/javax\/script\/MyContext.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,2 +79,2 @@\n-                nc.setName((new BufferedReader\n-                        (new InputStreamReader(System.in))).readLine());\n+                Reader stdinReader = new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\"));\n+                nc.setName(new BufferedReader(stdinReader).readLine());\n","filename":"test\/jdk\/javax\/security\/auth\/login\/LoginContext\/DefaultHandlerImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}