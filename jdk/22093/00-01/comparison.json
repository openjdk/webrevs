{"files":[{"patch":"@@ -80,10 +80,10 @@\n-            ServerSocket ss = new ServerSocket(0, 0, lh);\n-            s.connect( new InetSocketAddress(lh, ss.getLocalPort()) );\n-            try (Socket s2 = ss.accept()) {\n-                Thread thr = new Thread(this);\n-                thr.start();\n-                latch.await();\n-                Thread.sleep(5000); \/\/sleep, so Socket.getInputStream().read() can block\n-                s.close();\n-                thr.join();\n-            }\n+            try (ServerSocket ss = new ServerSocket(0, 0, lh)) {\n+                s.connect(new InetSocketAddress(lh, ss.getLocalPort()));\n+                try (Socket s2 = ss.accept()) {\n+                    Thread thr = new Thread(this);\n+                    thr.start();\n+                    latch.await();\n+                    Thread.sleep(5000); \/\/sleep, so Socket.getInputStream().read() can block\n+                    s.close();\n+                    thr.join();\n+                }\n@@ -91,4 +91,5 @@\n-            if (isClosed()) {\n-                return passed();\n-            } else {\n-                return failed(\"Socket.getInputStream().read() wasn't preempted\");\n+                if (isClosed()) {\n+                    return passed();\n+                } else {\n+                    return failed(\"Socket.getInputStream().read() wasn't preempted\");\n+                }\n","filename":"test\/jdk\/java\/net\/Socket\/asyncClose\/Socket_getInputStream_read.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -69,10 +69,10 @@\n-            ServerSocket ss = new ServerSocket(0, 0, lh);\n-            s.connect( new InetSocketAddress(lh, ss.getLocalPort()) );\n-            try (Socket s2 = ss.accept()) {\n-                Thread thr = new Thread(this);\n-                thr.start();\n-                latch.await();\n-                Thread.sleep(1000);\n-                s.close();\n-                thr.join();\n-            }\n+            try (ServerSocket ss = new ServerSocket(0, 0, lh)) {\n+                s.connect(new InetSocketAddress(lh, ss.getLocalPort()));\n+                try (Socket s2 = ss.accept()) {\n+                    Thread thr = new Thread(this);\n+                    thr.start();\n+                    latch.await();\n+                    Thread.sleep(1000);\n+                    s.close();\n+                    thr.join();\n+                }\n@@ -80,4 +80,5 @@\n-            if (isClosed()) {\n-                return passed();\n-            } else {\n-                return failed(\"Socket.getOutputStream().write() wasn't preempted\");\n+                if (isClosed()) {\n+                    return passed();\n+                } else {\n+                    return failed(\"Socket.getOutputStream().write() wasn't preempted\");\n+                }\n","filename":"test\/jdk\/java\/net\/Socket\/asyncClose\/Socket_getOutputStream_write.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"}]}