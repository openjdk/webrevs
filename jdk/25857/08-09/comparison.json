{"files":[{"patch":"@@ -80,2 +80,2 @@\n-     * Replace class name in bytecodes to the class we're trying to redefine, so that both\n-     * old and new classes can be compiled with jtreg for the test.\n+     * Copy the class defined by `bytes`, replacing the nameof the class with `newClassName`,\n+     * so that both old and new classes can be compiled by jtreg for the test.\n@@ -83,3 +83,3 @@\n-     * @param bytes in original class file.\n-     * @param oldClassName old class name.\n-     * @param newClassName new class name to replace the old class name.\n+     * @param bytes read from the original class file.\n+     * @param newClassName new class name for the returned class representation\n+     * @return a copy of the class representated by `bytes` but with the name `newClassName`\n@@ -87,1 +87,1 @@\n-    public static byte[] replaceClassName(byte[] bytes, String oldClassName, String newClassName) throws Exception {\n+    public static byte[] replaceClassName(byte[] bytes, String newClassName) throws Exception {\n@@ -96,1 +96,1 @@\n-     * @param loader ClassLoader to find the bytes for the class.\n+     * @param loader ClassLoader to find the bytes for the old class.\n@@ -99,0 +99,1 @@\n+     * @return a copy of the class representated by `bytes` but with the name `newClassName`\n@@ -102,1 +103,1 @@\n-        return replaceClassName(buf, oldClassName, newClassName);\n+        return replaceClassName(buf, newClassName);\n","filename":"test\/lib\/RedefineClassHelper.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}