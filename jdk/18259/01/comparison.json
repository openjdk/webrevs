{"files":[{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4132993\n+ * @summary JDesktopPane.getAllFramesInLayer(..) return iconified frame\n+ * @run main bug4132993\n+ *\/\n+\n+import javax.swing.JDesktopPane;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JLayeredPane;\n+\n+\n+public class bug4132993 {\n+    public static void main(String[] args) throws Exception {\n+        JDesktopPane mDesktop = new JDesktopPane();\n+        JInternalFrame jif = new JInternalFrame(\"My Frame\");\n+        jif.setIconifiable(true);\n+        mDesktop.add(jif);\n+        jif.setIcon(true);\n+        JInternalFrame[] ji =\n+                mDesktop.getAllFramesInLayer(JLayeredPane.DEFAULT_LAYER);\n+        for (int i = 0; i < ji.length; i++) {\n+            if (jif == ji[i]) {\n+                return;\n+            }\n+        }\n+        throw new RuntimeException(\"JDesktopPane.getAllFramesInLayer() failed...\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JDesktopPane\/bug4132993.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4773378\n+ * @summary BasicDesktopPaneUI.desktopManager nulled after JDesktopPane.updateUI()\n+ * @key headful\n+ * @run main bug4773378\n+ *\/\n+\n+import java.awt.AWTException;\n+import java.awt.BorderLayout;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.beans.PropertyVetoException;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.concurrent.CountDownLatch;\n+import javax.swing.DefaultDesktopManager;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.InternalFrameAdapter;\n+import javax.swing.event.InternalFrameEvent;\n+\n+public class bug4773378 {\n+    JFrame frame;\n+\n+    JDesktopPane desktop;\n+    DefaultDesktopManager desktopManager;\n+    JInternalFrame jif;\n+\n+    Robot robot;\n+    private final CountDownLatch frameActivated = new CountDownLatch(1);\n+    public void setupGUI() {\n+        frame = new JFrame(\"bug4773378\");\n+        frame.setLayout(new BorderLayout());\n+        desktop = new JDesktopPane();\n+        frame.add(desktop, BorderLayout.CENTER);\n+\n+        jif = new JInternalFrame(\"jif\", true, false, true, true);\n+        jif.setSize(150, 100);\n+        jif.setVisible(true);\n+        desktop.add(jif);\n+\n+        jif.addInternalFrameListener(new InternalFrameAdapter() {\n+                public void internalFrameActivated(InternalFrameEvent e) {\n+                    frameActivated.countDown();\n+                }\n+            });\n+\n+        desktopManager = new MyDesktopManager();\n+        desktop.setDesktopManager(desktopManager);\n+        desktop.updateUI();\n+\n+        frame.setSize(200, 200);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+        jif.requestFocus();\n+    }\n+\n+    public void performTest() throws InterruptedException,\n+            InvocationTargetException, AWTException {\n+        SwingUtilities.invokeAndWait(() -> {\n+            try {\n+                jif.setSelected(true);\n+            } catch (PropertyVetoException e) {\n+                e.printStackTrace();\n+            }\n+        });\n+\n+        frameActivated.await();\n+\n+        robot = new Robot();\n+        robot.keyPress(KeyEvent.VK_CONTROL);\n+        robot.keyPress(KeyEvent.VK_F6);\n+        robot.keyRelease(KeyEvent.VK_F6);\n+        robot.keyRelease(KeyEvent.VK_CONTROL);\n+\n+        robot.waitForIdle();\n+    }\n+\n+    public void cleanupGUI() {\n+        if (frame != null) {\n+            frame.setVisible(false);\n+            frame.dispose();\n+        }\n+    }\n+\n+    private static class MyDesktopManager extends DefaultDesktopManager {\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException, AWTException {\n+        bug4773378 b = new bug4773378();\n+        SwingUtilities.invokeAndWait(b::setupGUI);\n+        b.performTest();\n+        SwingUtilities.invokeAndWait(b::cleanupGUI);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JDesktopPane\/bug4773378.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,123 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4325606\n+ * @summary Tests getting row start\n+ * @key headful\n+ * @run main bug4325606\n+ *\/\n+\n+import java.awt.AWTException;\n+import java.awt.BorderLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.Utilities;\n+\n+public class bug4325606 {\n+\n+    public volatile boolean passed = true;\n+    private JFrame frame;\n+    private JEditorPane pane;\n+\n+    public void setupGUI() {\n+        frame = new JFrame(\"Click Bug\");\n+        frame.setLayout(new BorderLayout());\n+\n+        pane = new JEditorPane();\n+        pane.addMouseListener(new ClickListener());\n+        pane.setContentType(\"text\/html\");\n+        pane.setText(\"<html><body>\" +\n+                \"<p>Here is line one<\/p>\" +\n+                \"<p>Here is line two<\/p>\" +\n+                \"<\/body><\/html>\");\n+\n+        frame.add(new JScrollPane(pane), BorderLayout.CENTER);\n+\n+        frame.addWindowListener(new TestStateListener());\n+        frame.setLocation(50, 50);\n+        frame.setSize(400, 300);\n+        frame.setVisible(true);\n+    }\n+\n+    class TestStateListener extends WindowAdapter {\n+        public void windowOpened(WindowEvent ev) {\n+            Robot robo;\n+            try {\n+                robo = new Robot();\n+            } catch (AWTException e) {\n+                throw new RuntimeException(\"Robot could not be created\", e);\n+            }\n+            robo.setAutoDelay(100);\n+            robo.delay(1000);\n+            Point p = frame.getLocationOnScreen();\n+            robo.mouseMove(p.x + 50, p.y + 50);\n+            robo.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robo.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robo.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robo.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robo.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robo.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        }\n+    }\n+\n+    class ClickListener extends MouseAdapter {\n+        public void mouseClicked(MouseEvent event) {\n+            try {\n+                Utilities.getRowStart(pane, pane.getCaretPosition());\n+            } catch (BadLocationException blex) {\n+                throw new RuntimeException(\"Test failed.\");\n+            }\n+        }\n+    }\n+\n+    public void cleanupGUI() {\n+        if (frame != null) {\n+            frame.setVisible(false);\n+            frame.dispose();\n+        }\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException, AWTException {\n+        bug4325606 b = new bug4325606();\n+        try {\n+            Robot robot = new Robot();\n+            SwingUtilities.invokeAndWait(b::setupGUI);\n+            robot.waitForIdle();\n+        } finally {\n+            SwingUtilities.invokeAndWait(b::cleanupGUI);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JEditorPane\/bug4325606.java","additions":123,"deletions":0,"binary":false,"changes":123,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4330998\n+ * @summary JEditorPane.setText(null) throws NullPointerException.\n+ * @run main bug4330998\n+ *\/\n+\n+import javax.swing.JEditorPane;\n+\n+public class bug4330998 {\n+    public static void main(String[] args) {\n+        JEditorPane jep = new JEditorPane();\n+        jep.setText(null);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JEditorPane\/bug4330998.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,119 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4694598\n+ * @key headful\n+ * @summary JEditor pane throws NullPointerException on mouse movement.\n+ * @run main bug4694598\n+ *\/\n+\n+import java.awt.AWTException;\n+import java.awt.Robot;\n+import java.io.IOException;\n+import java.io.Writer;\n+import java.lang.reflect.InvocationTargetException;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4694598 {\n+    JFrame frame;\n+    volatile int bottom;\n+    final Path frameContentFile = Path.of(\"FrameContent.html\");\n+\n+    public void setupGUI() {\n+        frame = new JFrame(\"Test 4694598\");\n+        JEditorPane jep = new JEditorPane();\n+        jep.setEditable(false);\n+        frame.getContentPane().add(jep);\n+        frame.setLocation(50, 50);\n+        frame.setSize(400, 400);\n+\n+        String frameContentString = \"<HTML><BODY>\\n\" +\n+                \"    Frame content.\\n\" +\n+                \"<\/BODY><\/HTML>\";\n+        try (Writer writer = Files.newBufferedWriter(frameContentFile)) {\n+            writer.write(frameContentString);\n+        } catch (IOException ioe){\n+            throw new RuntimeException(\"Could not create html file to embed\", ioe);\n+        }\n+        URL frameContentUrl;\n+        try {\n+            frameContentUrl = frameContentFile.toUri().toURL();\n+        } catch (MalformedURLException mue) {\n+            throw new RuntimeException(\"Can not convert path to URL\", mue);\n+        }\n+        jep.setContentType(\"text\/html\");\n+        String html = \"<HTML> <BODY>\" +\n+                \"<FRAMESET cols=\\\"100%\\\">\" +\n+                \"<FRAME src=\\\"\" + frameContentUrl + \"\\\">\" +\n+                \"<\/FRAMESET>\" +\n+                \/\/ ! Without <noframes> bug is not reproducable\n+                \"<NOFRAMES>\" +\n+                \"<\/NOFRAMES>\" +\n+                \"<\/BODY> <\/HTML>\";\n+        jep.setText(html);\n+\n+        frame.setVisible(true);\n+    }\n+\n+    public void performTest() throws InterruptedException,\n+            InvocationTargetException, AWTException {\n+        Robot robo = new Robot();\n+        robo.waitForIdle();\n+\n+        final int range = 20;\n+        SwingUtilities.invokeAndWait(() -> {\n+            bottom = frame.getLocationOnScreen().y\n+                    + frame.getSize().height - range;\n+        });\n+        for (int i = 0; i < range; i++) {\n+            robo.mouseMove(300, bottom + i);\n+            robo.waitForIdle();\n+            robo.delay(50);\n+        }\n+    }\n+\n+    public void cleanupGUI() {\n+        if (frame != null) {\n+            frame.setVisible(false);\n+            frame.dispose();\n+        }\n+        try {\n+            Files.deleteIfExists(frameContentFile);\n+        } catch (IOException ignore) {}\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException, AWTException {\n+        bug4694598 app = new bug4694598();\n+        SwingUtilities.invokeAndWait(app::setupGUI);\n+        app.performTest();\n+        SwingUtilities.invokeAndWait(app::cleanupGUI);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JEditorPane\/bug4694598.java","additions":119,"deletions":0,"binary":false,"changes":119,"status":"added"}]}