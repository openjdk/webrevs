{"files":[{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2024 IBM Corporation. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.bench.vm.compiler;\n+\n+import org.openjdk.jmh.annotations.*;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@State(Scope.Thread)\n+@Warmup(iterations = 3, time = 1)\n+@Measurement(iterations = 4, time = 1)\n+@Fork(value = 5)\n+public class PopCount {\n+    int numTests = 100_000;\n+\n+    @Setup\n+    public void warmup() {\n+        long l1 = 1, l2 = 2, l3 = 3, l4 = 4, l5 = 5;\n+        for (long i = 0; i < numTests \/ 2; i++) {\n+            l1 ^= Long.bitCount(l1) + i;\n+            l2 ^= Long.bitCount(l2) + i;\n+            l3 ^= Long.bitCount(l3) + i;\n+            l4 ^= Long.bitCount(l4) + i;\n+            l5 ^= Long.bitCount(l5) + i;\n+        }\n+        long x =  l1 + l2 + l3 + l4 + l5;\n+    }\n+\n+    @Benchmark\n+    public long test() {\n+        long l1 = 1, l2 = 2, l3 = 3, l4 = 4, l5 = 5, l6 = 6, l7 = 7, l8 = 9, l9 = 9, l10 = 10;\n+        for (long i = 0; i < numTests; i++) {\n+            l1 ^= Long.bitCount(l1) + i;\n+            l2 ^= Long.bitCount(l2) + i;\n+            l3 ^= Long.bitCount(l3) + i;\n+            l4 ^= Long.bitCount(l4) + i;\n+            l5 ^= Long.bitCount(l5) + i;\n+            l6 ^= Long.bitCount(l6) + i;\n+            l7 ^= Long.bitCount(l7) + i;\n+            l8 ^= Long.bitCount(l8) + i;\n+            l9 ^= Long.bitCount(l9) + i;\n+            l10 ^= Long.bitCount(l10) + i;\n+        }\n+        return l1 + l2 + l3 + l4 + l5 + l6 + l7 + l8 + l9 + l10;\n+    }\n+\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/PopCount.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"}]}