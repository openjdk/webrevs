{"files":[{"patch":"@@ -28,0 +28,10 @@\n+import jdk.internal.foreign.abi.Binding.Allocate;\n+import jdk.internal.foreign.abi.Binding.BoxAddress;\n+import jdk.internal.foreign.abi.Binding.BufferLoad;\n+import jdk.internal.foreign.abi.Binding.BufferStore;\n+import jdk.internal.foreign.abi.Binding.Cast;\n+import jdk.internal.foreign.abi.Binding.Copy;\n+import jdk.internal.foreign.abi.Binding.Dup;\n+import jdk.internal.foreign.abi.Binding.UnboxAddress;\n+import jdk.internal.foreign.abi.Binding.VMLoad;\n+import jdk.internal.foreign.abi.Binding.VMStore;\n@@ -128,1 +138,1 @@\n-        return computeTypeHelper(Binding.VMLoad.class, Binding.VMStore.class);\n+        return computeTypeHelper(VMLoad.class, VMStore.class);\n@@ -132,1 +142,1 @@\n-        return computeTypeHelper(Binding.VMStore.class, Binding.VMLoad.class);\n+        return computeTypeHelper(VMStore.class, VMLoad.class);\n@@ -159,1 +169,1 @@\n-                if (b instanceof Binding.Copy copy) {\n+                if (b instanceof Copy copy) {\n@@ -162,1 +172,1 @@\n-                } else if (b instanceof Binding.Allocate allocate) {\n+                } else if (b instanceof Allocate allocate) {\n@@ -208,10 +218,11 @@\n-            case Binding.VMStore unused -> true;\n-            case Binding.VMLoad unused -> false;\n-            case Binding.BufferStore unused -> false;\n-            case Binding.BufferLoad unused -> true;\n-            case Binding.Copy unused -> true;\n-            case Binding.Allocate unused -> false;\n-            case Binding.BoxAddress unused -> false;\n-            case Binding.UnboxAddress unused -> true;\n-            case Binding.Dup unused -> true;\n-            case Binding.Cast unused-> true;\n+            case VMStore      unused -> true;\n+            case BufferLoad   unused -> true;\n+            case Copy         unused -> true;\n+            case UnboxAddress unused -> true;\n+            case Dup          unused -> true;\n+            case Cast         unused -> true;\n+\n+            case VMLoad       unused -> false;\n+            case BufferStore  unused -> false;\n+            case Allocate     unused -> false;\n+            case BoxAddress   unused -> false;\n@@ -240,10 +251,11 @@\n-            case Binding.VMStore unused -> false;\n-            case Binding.VMLoad unused -> true;\n-            case Binding.BufferStore unused -> true;\n-            case Binding.BufferLoad unused -> false;\n-            case Binding.Copy unused -> true;\n-            case Binding.Allocate unused -> true;\n-            case Binding.BoxAddress unused -> true;\n-            case Binding.UnboxAddress unused -> false;\n-            case Binding.Dup unused -> true;\n-            case Binding.Cast unused-> true;\n+            case VMLoad       unused -> true;\n+            case BufferStore  unused -> true;\n+            case Copy         unused -> true;\n+            case Allocate     unused -> true;\n+            case BoxAddress   unused -> true;\n+            case Dup          unused -> true;\n+            case Cast         unused -> true;\n+\n+            case VMStore      unused -> false;\n+            case BufferLoad   unused -> false;\n+            case UnboxAddress unused -> false;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequenceBuilder.java","additions":36,"deletions":24,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-                case null, default -> throw new IllegalStateException(\"Cannot get here: \" + layout);\n+                default -> throw new IllegalStateException(\"Cannot get here: \" + layout);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/riscv64\/linux\/TypeClass.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}