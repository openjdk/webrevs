{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @run main\/othervm -Djava.security.manager=allow OpenLeak\n+ * @run junit\/othervm OpenLeak\n@@ -32,0 +32,1 @@\n+import java.net.ConnectException;\n@@ -36,0 +37,3 @@\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.api.Test;\n+\n@@ -38,3 +42,6 @@\n-    public static void main(String[] args) throws Exception {\n-        InetAddress lh = InetAddress.getLocalHost();\n-        InetSocketAddress isa = new InetSocketAddress(lh, 12345);\n+    @Test\n+    public void test() throws Exception {\n+        InetAddress lo = InetAddress.getLoopbackAddress();\n+\n+        \/\/ Try to find a suitable port that will cause a\n+        \/\/ Connection Rejected exception\n@@ -42,1 +49,16 @@\n-        System.setSecurityManager( new SecurityManager() );\n+        \/\/ port 47 is reserved - there should be nothing there...\n+        InetSocketAddress isa = new InetSocketAddress(lo, 47);\n+        try (SocketChannel sc1 = SocketChannel.open(isa)) {\n+            \/\/ If we manage to connect, let's try to use some other\n+            \/\/ port.\n+            \/\/ port 51 is reserved too - there should be nothing there...\n+            isa = new InetSocketAddress(lo, 51);\n+            try (SocketChannel sc2 = SocketChannel.open(isa)) {};\n+            \/\/ OK, last attempt...\n+            \/\/ port 61 is reserved too - there should be nothing there...\n+            isa = new InetSocketAddress(lo, 61);\n+            try (SocketChannel sc3 = SocketChannel.open(isa)) {};\n+            Assumptions.abort(\"Could not find a suitable port\");\n+        } catch (ConnectException x) { }\n+\n+        System.out.println(\"Expecting Connection Refused for \" + isa);\n@@ -47,1 +69,1 @@\n-            } catch (SecurityException x) { }\n+            } catch (ConnectException x) { }\n@@ -49,1 +71,0 @@\n-\n","filename":"test\/jdk\/java\/nio\/channels\/SocketChannel\/OpenLeak.java","additions":29,"deletions":8,"binary":false,"changes":37,"status":"modified"}]}