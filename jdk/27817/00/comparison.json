{"files":[{"patch":"@@ -1270,1 +1270,1 @@\n-    _ANY_REG32_mask.Remove(OptoReg::as_OptoReg(r31_sp->as_VMReg()));\n+    _ANY_REG32_mask.remove(OptoReg::as_OptoReg(r31_sp->as_VMReg()));\n@@ -1277,1 +1277,1 @@\n-    _NO_SPECIAL_REG32_mask.SUBTRACT(_NON_ALLOCATABLE_REG32_mask);\n+    _NO_SPECIAL_REG32_mask.subtract(_NON_ALLOCATABLE_REG32_mask);\n@@ -1280,1 +1280,1 @@\n-    _NO_SPECIAL_REG_mask.SUBTRACT(_NON_ALLOCATABLE_REG_mask);\n+    _NO_SPECIAL_REG_mask.subtract(_NON_ALLOCATABLE_REG_mask);\n@@ -1283,1 +1283,1 @@\n-    _NO_SPECIAL_PTR_REG_mask.SUBTRACT(_NON_ALLOCATABLE_REG_mask);\n+    _NO_SPECIAL_PTR_REG_mask.subtract(_NON_ALLOCATABLE_REG_mask);\n@@ -1288,3 +1288,3 @@\n-      _NO_SPECIAL_REG32_mask.Remove(OptoReg::as_OptoReg(r27->as_VMReg()));\n-      _NO_SPECIAL_REG_mask.Remove(OptoReg::as_OptoReg(r27->as_VMReg()));\n-      _NO_SPECIAL_PTR_REG_mask.Remove(OptoReg::as_OptoReg(r27->as_VMReg()));\n+      _NO_SPECIAL_REG32_mask.remove(OptoReg::as_OptoReg(r27->as_VMReg()));\n+      _NO_SPECIAL_REG_mask.remove(OptoReg::as_OptoReg(r27->as_VMReg()));\n+      _NO_SPECIAL_PTR_REG_mask.remove(OptoReg::as_OptoReg(r27->as_VMReg()));\n@@ -1295,3 +1295,3 @@\n-      _NO_SPECIAL_REG32_mask.Remove(OptoReg::as_OptoReg(r29->as_VMReg()));\n-      _NO_SPECIAL_REG_mask.Remove(OptoReg::as_OptoReg(r29->as_VMReg()));\n-      _NO_SPECIAL_PTR_REG_mask.Remove(OptoReg::as_OptoReg(r29->as_VMReg()));\n+      _NO_SPECIAL_REG32_mask.remove(OptoReg::as_OptoReg(r29->as_VMReg()));\n+      _NO_SPECIAL_REG_mask.remove(OptoReg::as_OptoReg(r29->as_VMReg()));\n+      _NO_SPECIAL_PTR_REG_mask.remove(OptoReg::as_OptoReg(r29->as_VMReg()));\n@@ -1301,1 +1301,1 @@\n-    _NO_SPECIAL_NO_RFP_PTR_REG_mask.Remove(OptoReg::as_OptoReg(r29->as_VMReg()));\n+    _NO_SPECIAL_NO_RFP_PTR_REG_mask.remove(OptoReg::as_OptoReg(r29->as_VMReg()));\n@@ -1737,1 +1737,1 @@\n-const RegMask& MachConstantBaseNode::_out_RegMask = RegMask::Empty;\n+const RegMask& MachConstantBaseNode::_out_RegMask = RegMask::EMPTY;\n@@ -2523,1 +2523,1 @@\n-  \/\/ (_NO_SPECIAL_REG32_mask.Size() minus 1) forces CallNode to become\n+  \/\/ (_NO_SPECIAL_REG32_mask.size() minus 1) forces CallNode to become\n@@ -2526,1 +2526,1 @@\n-  uint default_int_pressure_threshold = _NO_SPECIAL_REG32_mask.Size() - 1;\n+  uint default_int_pressure_threshold = _NO_SPECIAL_REG32_mask.size() - 1;\n@@ -2541,1 +2541,1 @@\n-  return (FLOATPRESSURE == -1) ? _FLOAT_REG_mask.Size() : FLOATPRESSURE;\n+  return (FLOATPRESSURE == -1) ? _FLOAT_REG_mask.size() : FLOATPRESSURE;\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1096,1 +1096,1 @@\n-  _ANY_REG32_mask.Remove(OptoReg::as_OptoReg(x0->as_VMReg()));\n+  _ANY_REG32_mask.remove(OptoReg::as_OptoReg(x0->as_VMReg()));\n@@ -1099,1 +1099,1 @@\n-  _ANY_REG_mask.SUBTRACT(_ZR_REG_mask);\n+  _ANY_REG_mask.subtract(_ZR_REG_mask);\n@@ -1102,1 +1102,1 @@\n-  _PTR_REG_mask.SUBTRACT(_ZR_REG_mask);\n+  _PTR_REG_mask.subtract(_ZR_REG_mask);\n@@ -1105,1 +1105,1 @@\n-  _NO_SPECIAL_REG32_mask.SUBTRACT(_NON_ALLOCATABLE_REG32_mask);\n+  _NO_SPECIAL_REG32_mask.subtract(_NON_ALLOCATABLE_REG32_mask);\n@@ -1108,1 +1108,1 @@\n-  _NO_SPECIAL_REG_mask.SUBTRACT(_NON_ALLOCATABLE_REG_mask);\n+  _NO_SPECIAL_REG_mask.subtract(_NON_ALLOCATABLE_REG_mask);\n@@ -1111,1 +1111,1 @@\n-  _NO_SPECIAL_PTR_REG_mask.SUBTRACT(_NON_ALLOCATABLE_REG_mask);\n+  _NO_SPECIAL_PTR_REG_mask.subtract(_NON_ALLOCATABLE_REG_mask);\n@@ -1115,3 +1115,3 @@\n-    _NO_SPECIAL_REG32_mask.Remove(OptoReg::as_OptoReg(x27->as_VMReg()));\n-    _NO_SPECIAL_REG_mask.Remove(OptoReg::as_OptoReg(x27->as_VMReg()));\n-    _NO_SPECIAL_PTR_REG_mask.Remove(OptoReg::as_OptoReg(x27->as_VMReg()));\n+    _NO_SPECIAL_REG32_mask.remove(OptoReg::as_OptoReg(x27->as_VMReg()));\n+    _NO_SPECIAL_REG_mask.remove(OptoReg::as_OptoReg(x27->as_VMReg()));\n+    _NO_SPECIAL_PTR_REG_mask.remove(OptoReg::as_OptoReg(x27->as_VMReg()));\n@@ -1122,3 +1122,3 @@\n-    _NO_SPECIAL_REG32_mask.Remove(OptoReg::as_OptoReg(x8->as_VMReg()));\n-    _NO_SPECIAL_REG_mask.Remove(OptoReg::as_OptoReg(x8->as_VMReg()));\n-    _NO_SPECIAL_PTR_REG_mask.Remove(OptoReg::as_OptoReg(x8->as_VMReg()));\n+    _NO_SPECIAL_REG32_mask.remove(OptoReg::as_OptoReg(x8->as_VMReg()));\n+    _NO_SPECIAL_REG_mask.remove(OptoReg::as_OptoReg(x8->as_VMReg()));\n+    _NO_SPECIAL_PTR_REG_mask.remove(OptoReg::as_OptoReg(x8->as_VMReg()));\n@@ -1128,1 +1128,1 @@\n-  _NO_SPECIAL_NO_FP_PTR_REG_mask.Remove(OptoReg::as_OptoReg(x8->as_VMReg()));\n+  _NO_SPECIAL_NO_FP_PTR_REG_mask.remove(OptoReg::as_OptoReg(x8->as_VMReg()));\n@@ -1329,1 +1329,1 @@\n-const RegMask& MachConstantBaseNode::_out_RegMask = RegMask::Empty;\n+const RegMask& MachConstantBaseNode::_out_RegMask = RegMask::EMPTY;\n@@ -2107,1 +2107,1 @@\n-  \/\/ (_NO_SPECIAL_REG32_mask.Size() minus 1) forces CallNode to become\n+  \/\/ (_NO_SPECIAL_REG32_mask.size() minus 1) forces CallNode to become\n@@ -2110,1 +2110,1 @@\n-  uint default_int_pressure_threshold = _NO_SPECIAL_REG32_mask.Size() - 1;\n+  uint default_int_pressure_threshold = _NO_SPECIAL_REG32_mask.size() - 1;\n@@ -2125,1 +2125,1 @@\n-  return (FLOATPRESSURE == -1) ? _FLOAT_REG_mask.Size() : FLOATPRESSURE;\n+  return (FLOATPRESSURE == -1) ? _FLOAT_REG_mask.size() : FLOATPRESSURE;\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -474,9 +474,9 @@\n-  caller_saved.Insert(OptoReg::as_OptoReg(rax->as_VMReg()));\n-  caller_saved.Insert(OptoReg::as_OptoReg(rcx->as_VMReg()));\n-  caller_saved.Insert(OptoReg::as_OptoReg(rdx->as_VMReg()));\n-  caller_saved.Insert(OptoReg::as_OptoReg(rsi->as_VMReg()));\n-  caller_saved.Insert(OptoReg::as_OptoReg(rdi->as_VMReg()));\n-  caller_saved.Insert(OptoReg::as_OptoReg(r8->as_VMReg()));\n-  caller_saved.Insert(OptoReg::as_OptoReg(r9->as_VMReg()));\n-  caller_saved.Insert(OptoReg::as_OptoReg(r10->as_VMReg()));\n-  caller_saved.Insert(OptoReg::as_OptoReg(r11->as_VMReg()));\n+  caller_saved.insert(OptoReg::as_OptoReg(rax->as_VMReg()));\n+  caller_saved.insert(OptoReg::as_OptoReg(rcx->as_VMReg()));\n+  caller_saved.insert(OptoReg::as_OptoReg(rdx->as_VMReg()));\n+  caller_saved.insert(OptoReg::as_OptoReg(rsi->as_VMReg()));\n+  caller_saved.insert(OptoReg::as_OptoReg(rdi->as_VMReg()));\n+  caller_saved.insert(OptoReg::as_OptoReg(r8->as_VMReg()));\n+  caller_saved.insert(OptoReg::as_OptoReg(r9->as_VMReg()));\n+  caller_saved.insert(OptoReg::as_OptoReg(r10->as_VMReg()));\n+  caller_saved.insert(OptoReg::as_OptoReg(r11->as_VMReg()));\n@@ -485,16 +485,16 @@\n-    caller_saved.Insert(OptoReg::as_OptoReg(r16->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r17->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r18->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r19->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r20->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r21->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r22->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r23->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r24->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r25->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r26->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r27->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r28->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r29->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r30->as_VMReg()));\n-    caller_saved.Insert(OptoReg::as_OptoReg(r31->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r16->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r17->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r18->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r19->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r20->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r21->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r22->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r23->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r24->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r25->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r26->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r27->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r28->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r29->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r30->as_VMReg()));\n+    caller_saved.insert(OptoReg::as_OptoReg(r31->as_VMReg()));\n@@ -514,1 +514,1 @@\n-      if (caller_saved.Member(opto_reg)) {\n+      if (caller_saved.member(opto_reg)) {\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shared\/barrierSetAssembler_x86.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -503,2 +503,2 @@\n-    _ANY_REG_mask.Remove(OptoReg::as_OptoReg(rbp->as_VMReg()));\n-    _ANY_REG_mask.Remove(OptoReg::as_OptoReg(rbp->as_VMReg()->next()));\n+    _ANY_REG_mask.remove(OptoReg::as_OptoReg(rbp->as_VMReg()));\n+    _ANY_REG_mask.remove(OptoReg::as_OptoReg(rbp->as_VMReg()->next()));\n@@ -507,2 +507,2 @@\n-    _ANY_REG_mask.Remove(OptoReg::as_OptoReg(r12->as_VMReg()));\n-    _ANY_REG_mask.Remove(OptoReg::as_OptoReg(r12->as_VMReg()->next()));\n+    _ANY_REG_mask.remove(OptoReg::as_OptoReg(r12->as_VMReg()));\n+    _ANY_REG_mask.remove(OptoReg::as_OptoReg(r12->as_VMReg()->next()));\n@@ -512,4 +512,4 @@\n-  _PTR_REG_mask.Remove(OptoReg::as_OptoReg(rsp->as_VMReg()));\n-  _PTR_REG_mask.Remove(OptoReg::as_OptoReg(rsp->as_VMReg()->next()));\n-  _PTR_REG_mask.Remove(OptoReg::as_OptoReg(r15->as_VMReg()));\n-  _PTR_REG_mask.Remove(OptoReg::as_OptoReg(r15->as_VMReg()->next()));\n+  _PTR_REG_mask.remove(OptoReg::as_OptoReg(rsp->as_VMReg()));\n+  _PTR_REG_mask.remove(OptoReg::as_OptoReg(rsp->as_VMReg()->next()));\n+  _PTR_REG_mask.remove(OptoReg::as_OptoReg(r15->as_VMReg()));\n+  _PTR_REG_mask.remove(OptoReg::as_OptoReg(r15->as_VMReg()->next()));\n@@ -518,2 +518,2 @@\n-      _PTR_REG_mask.Remove(OptoReg::as_OptoReg(egprs[i]->as_VMReg()));\n-      _PTR_REG_mask.Remove(OptoReg::as_OptoReg(egprs[i]->as_VMReg()->next()));\n+      _PTR_REG_mask.remove(OptoReg::as_OptoReg(egprs[i]->as_VMReg()));\n+      _PTR_REG_mask.remove(OptoReg::as_OptoReg(egprs[i]->as_VMReg()->next()));\n@@ -524,1 +524,1 @@\n-  _STACK_OR_PTR_REG_mask.OR(STACK_OR_STACK_SLOTS_mask());\n+  _STACK_OR_PTR_REG_mask.or_with(STACK_OR_STACK_SLOTS_mask());\n@@ -527,2 +527,2 @@\n-  _PTR_REG_NO_RBP_mask.Remove(OptoReg::as_OptoReg(rbp->as_VMReg()));\n-  _PTR_REG_NO_RBP_mask.Remove(OptoReg::as_OptoReg(rbp->as_VMReg()->next()));\n+  _PTR_REG_NO_RBP_mask.remove(OptoReg::as_OptoReg(rbp->as_VMReg()));\n+  _PTR_REG_NO_RBP_mask.remove(OptoReg::as_OptoReg(rbp->as_VMReg()->next()));\n@@ -531,2 +531,2 @@\n-  _PTR_NO_RAX_REG_mask.Remove(OptoReg::as_OptoReg(rax->as_VMReg()));\n-  _PTR_NO_RAX_REG_mask.Remove(OptoReg::as_OptoReg(rax->as_VMReg()->next()));\n+  _PTR_NO_RAX_REG_mask.remove(OptoReg::as_OptoReg(rax->as_VMReg()));\n+  _PTR_NO_RAX_REG_mask.remove(OptoReg::as_OptoReg(rax->as_VMReg()->next()));\n@@ -535,2 +535,2 @@\n-  _PTR_NO_RAX_RBX_REG_mask.Remove(OptoReg::as_OptoReg(rbx->as_VMReg()));\n-  _PTR_NO_RAX_RBX_REG_mask.Remove(OptoReg::as_OptoReg(rbx->as_VMReg()->next()));\n+  _PTR_NO_RAX_RBX_REG_mask.remove(OptoReg::as_OptoReg(rbx->as_VMReg()));\n+  _PTR_NO_RAX_RBX_REG_mask.remove(OptoReg::as_OptoReg(rbx->as_VMReg()->next()));\n@@ -541,1 +541,1 @@\n-  _STACK_OR_LONG_REG_mask.OR(STACK_OR_STACK_SLOTS_mask());\n+  _STACK_OR_LONG_REG_mask.or_with(STACK_OR_STACK_SLOTS_mask());\n@@ -544,4 +544,4 @@\n-  _LONG_NO_RAX_RDX_REG_mask.Remove(OptoReg::as_OptoReg(rax->as_VMReg()));\n-  _LONG_NO_RAX_RDX_REG_mask.Remove(OptoReg::as_OptoReg(rax->as_VMReg()->next()));\n-  _LONG_NO_RAX_RDX_REG_mask.Remove(OptoReg::as_OptoReg(rdx->as_VMReg()));\n-  _LONG_NO_RAX_RDX_REG_mask.Remove(OptoReg::as_OptoReg(rdx->as_VMReg()->next()));\n+  _LONG_NO_RAX_RDX_REG_mask.remove(OptoReg::as_OptoReg(rax->as_VMReg()));\n+  _LONG_NO_RAX_RDX_REG_mask.remove(OptoReg::as_OptoReg(rax->as_VMReg()->next()));\n+  _LONG_NO_RAX_RDX_REG_mask.remove(OptoReg::as_OptoReg(rdx->as_VMReg()));\n+  _LONG_NO_RAX_RDX_REG_mask.remove(OptoReg::as_OptoReg(rdx->as_VMReg()->next()));\n@@ -550,2 +550,2 @@\n-  _LONG_NO_RCX_REG_mask.Remove(OptoReg::as_OptoReg(rcx->as_VMReg()));\n-  _LONG_NO_RCX_REG_mask.Remove(OptoReg::as_OptoReg(rcx->as_VMReg()->next()));\n+  _LONG_NO_RCX_REG_mask.remove(OptoReg::as_OptoReg(rcx->as_VMReg()));\n+  _LONG_NO_RCX_REG_mask.remove(OptoReg::as_OptoReg(rcx->as_VMReg()->next()));\n@@ -554,4 +554,4 @@\n-  _LONG_NO_RBP_R13_REG_mask.Remove(OptoReg::as_OptoReg(rbp->as_VMReg()));\n-  _LONG_NO_RBP_R13_REG_mask.Remove(OptoReg::as_OptoReg(rbp->as_VMReg()->next()));\n-  _LONG_NO_RBP_R13_REG_mask.Remove(OptoReg::as_OptoReg(r13->as_VMReg()));\n-  _LONG_NO_RBP_R13_REG_mask.Remove(OptoReg::as_OptoReg(r13->as_VMReg()->next()));\n+  _LONG_NO_RBP_R13_REG_mask.remove(OptoReg::as_OptoReg(rbp->as_VMReg()));\n+  _LONG_NO_RBP_R13_REG_mask.remove(OptoReg::as_OptoReg(rbp->as_VMReg()->next()));\n+  _LONG_NO_RBP_R13_REG_mask.remove(OptoReg::as_OptoReg(r13->as_VMReg()));\n+  _LONG_NO_RBP_R13_REG_mask.remove(OptoReg::as_OptoReg(r13->as_VMReg()->next()));\n@@ -562,1 +562,1 @@\n-      _INT_REG_mask.Remove(OptoReg::as_OptoReg(egprs[i]->as_VMReg()));\n+      _INT_REG_mask.remove(OptoReg::as_OptoReg(egprs[i]->as_VMReg()));\n@@ -567,1 +567,1 @@\n-    _INT_REG_mask.Remove(OptoReg::as_OptoReg(rbp->as_VMReg()));\n+    _INT_REG_mask.remove(OptoReg::as_OptoReg(rbp->as_VMReg()));\n@@ -570,1 +570,1 @@\n-    _INT_REG_mask.Remove(OptoReg::as_OptoReg(r12->as_VMReg()));\n+    _INT_REG_mask.remove(OptoReg::as_OptoReg(r12->as_VMReg()));\n@@ -574,1 +574,1 @@\n-  _STACK_OR_INT_REG_mask.OR(STACK_OR_STACK_SLOTS_mask());\n+  _STACK_OR_INT_REG_mask.or_with(STACK_OR_STACK_SLOTS_mask());\n@@ -577,2 +577,2 @@\n-  _INT_NO_RAX_RDX_REG_mask.Remove(OptoReg::as_OptoReg(rax->as_VMReg()));\n-  _INT_NO_RAX_RDX_REG_mask.Remove(OptoReg::as_OptoReg(rdx->as_VMReg()));\n+  _INT_NO_RAX_RDX_REG_mask.remove(OptoReg::as_OptoReg(rax->as_VMReg()));\n+  _INT_NO_RAX_RDX_REG_mask.remove(OptoReg::as_OptoReg(rdx->as_VMReg()));\n@@ -581,1 +581,1 @@\n-  _INT_NO_RCX_REG_mask.Remove(OptoReg::as_OptoReg(rcx->as_VMReg()));\n+  _INT_NO_RCX_REG_mask.remove(OptoReg::as_OptoReg(rcx->as_VMReg()));\n@@ -584,2 +584,2 @@\n-  _INT_NO_RBP_R13_REG_mask.Remove(OptoReg::as_OptoReg(rbp->as_VMReg()));\n-  _INT_NO_RBP_R13_REG_mask.Remove(OptoReg::as_OptoReg(r13->as_VMReg()));\n+  _INT_NO_RBP_R13_REG_mask.remove(OptoReg::as_OptoReg(rbp->as_VMReg()));\n+  _INT_NO_RBP_R13_REG_mask.remove(OptoReg::as_OptoReg(r13->as_VMReg()));\n@@ -759,1 +759,1 @@\n-const RegMask& MachConstantBaseNode::_out_RegMask = RegMask::Empty;\n+const RegMask& MachConstantBaseNode::_out_RegMask = RegMask::EMPTY;\n@@ -1661,1 +1661,1 @@\n-  return (INTPRESSURE == -1) ? _INT_REG_mask.Size() : INTPRESSURE;\n+  return (INTPRESSURE == -1) ? _INT_REG_mask.size() : INTPRESSURE;\n@@ -1669,1 +1669,1 @@\n-  uint default_float_pressure_threshold = _FLOAT_REG_mask.Size() - dec_count;\n+  uint default_float_pressure_threshold = _FLOAT_REG_mask.size() - dec_count;\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":40,"deletions":40,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -902,1 +902,3 @@\n-  if( reg_class_name == nullptr ) return \"RegMask::Empty\";\n+  if (reg_class_name == nullptr) {\n+    return \"RegMask::EMPTY\";\n+  }\n@@ -905,1 +907,1 @@\n-    return \"RegMask::Empty\";\n+    return \"RegMask::EMPTY\";\n@@ -923,1 +925,1 @@\n-  const char *reg_mask = \"RegMask::Empty\";\n+  const char* reg_mask = \"RegMask::EMPTY\";\n@@ -942,1 +944,1 @@\n-  const char *regMask      = \"RegMask::Empty\";\n+  const char* regMask = \"RegMask::EMPTY\";\n@@ -971,1 +973,1 @@\n-  \/\/ Instructions producing 'Universe' use RegMask::Empty\n+  \/\/ Instructions producing 'Universe' use RegMask::EMPTY\n@@ -973,1 +975,1 @@\n-    return \"RegMask::Empty\";\n+    return \"RegMask::EMPTY\";\n","filename":"src\/hotspot\/share\/adlc\/archDesc.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2425,1 +2425,1 @@\n-  const char *reg_class = nullptr; \/\/ \"RegMask::Empty\";\n+  const char* reg_class = nullptr; \/\/ \"RegMask::EMPTY\";\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2840,1 +2840,1 @@\n-        fprintf(fp,\"  return &RegMask::Empty;\\n\");\n+        fprintf(fp, \"  return &RegMask::EMPTY;\\n\");\n","filename":"src\/hotspot\/share\/adlc\/output_c.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-  _preserve.Insert(OptoReg::as_OptoReg(vm_reg));\n+  _preserve.insert(OptoReg::as_OptoReg(vm_reg));\n@@ -127,1 +127,1 @@\n-    _preserve.Remove(OptoReg::as_OptoReg(vm_reg));\n+    _preserve.remove(OptoReg::as_OptoReg(vm_reg));\n@@ -1174,1 +1174,1 @@\n-      new_live.OR(live[succ_id]);\n+      new_live.or_with(live[succ_id]);\n@@ -1185,1 +1185,1 @@\n-          regs->OR(new_live);\n+          regs->or_with(new_live);\n@@ -1193,1 +1193,1 @@\n-        new_live.Remove(first);\n+        new_live.remove(first);\n@@ -1196,1 +1196,1 @@\n-        new_live.Remove(second);\n+        new_live.remove(second);\n@@ -1205,1 +1205,1 @@\n-          new_live.Insert(first);\n+          new_live.insert(first);\n@@ -1208,1 +1208,1 @@\n-          new_live.Insert(second);\n+          new_live.insert(second);\n@@ -1216,1 +1216,1 @@\n-          regs->OR(new_live);\n+          regs->or_with(new_live);\n@@ -1222,2 +1222,2 @@\n-    new_live.SUBTRACT(old_live);\n-    if (!new_live.is_Empty()) {\n+    new_live.subtract(old_live);\n+    if (!new_live.is_empty()) {\n@@ -1225,1 +1225,1 @@\n-      old_live.OR(new_live);\n+      old_live.or_with(new_live);\n","filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n@@ -85,1 +85,1 @@\n-    return new MachProjNode(this,proj->_con,RegMask::Empty,MachProjNode::unmatched_proj);\n+    return new MachProjNode(this,proj->_con,RegMask::EMPTY,MachProjNode::unmatched_proj);\n@@ -780,1 +780,1 @@\n-    return new MachProjNode(this,proj->_con,RegMask::Empty,MachProjNode::unmatched_proj);\n+    return new MachProjNode(this,proj->_con,RegMask::EMPTY,MachProjNode::unmatched_proj);\n@@ -785,1 +785,1 @@\n-    return new MachProjNode(this,proj->_con, RegMask::Empty, (uint)OptoReg::Bad);\n+    return new MachProjNode(this,proj->_con, RegMask::EMPTY, (uint)OptoReg::Bad);\n@@ -801,1 +801,1 @@\n-            rm.Insert(r);\n+            rm.insert(r);\n@@ -808,1 +808,1 @@\n-      rm.Insert( regs.second() );\n+      rm.insert(regs.second());\n@@ -1495,1 +1495,3 @@\n-  if( idx < TypeFunc::Parms ) return RegMask::Empty;\n+  if (idx < TypeFunc::Parms) {\n+    return RegMask::EMPTY;\n+  }\n@@ -1500,1 +1502,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n@@ -1611,1 +1613,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n@@ -1662,1 +1664,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1017,1 +1017,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n@@ -2862,1 +2862,1 @@\n-  return i ? out_RegMask() : RegMask::Empty;\n+  return i ? out_RegMask() : RegMask::EMPTY;\n@@ -2868,1 +2868,3 @@\n-  if( ideal_reg == 0 ) return RegMask::Empty;\n+  if (ideal_reg == 0) {\n+    return RegMask::EMPTY;\n+  }\n@@ -2895,1 +2897,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n@@ -2900,1 +2902,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n@@ -2905,1 +2907,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n@@ -2910,1 +2912,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -744,1 +744,1 @@\n-    return RegMask::All;\n+    return RegMask::ALL;\n","filename":"src\/hotspot\/share\/opto\/cfgnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,3 @@\n-    else tty->print(\", #!!!_%d_vs_%d \",_mask_size,_mask.Size());\n+    else {\n+      tty->print(\", #!!!_%d_vs_%d \", _mask_size, _mask.size());\n+    }\n@@ -54,1 +56,1 @@\n-    tty->print(\", #?(%d) \",_mask.Size());\n+    tty->print(\", #?(%d) \", _mask.size());\n@@ -744,1 +746,1 @@\n-          lrg.Remove(hi);       \/\/ Yank from mask\n+          lrg.remove(hi);               \/\/ Yank from mask\n@@ -776,1 +778,1 @@\n-      _lrg_map.map(n->_idx, !rm.is_Empty() ? lr_counter++ : 0);\n+      _lrg_map.map(n->_idx, !rm.is_empty() ? lr_counter++ : 0);\n@@ -797,1 +799,1 @@\n-      _lrg_map.map(n->_idx, !rm.is_Empty() ? n->_idx : 0);\n+      _lrg_map.map(n->_idx, !rm.is_empty() ? n->_idx : 0);\n@@ -882,1 +884,1 @@\n-        lrg.AND( rm );\n+        lrg.and_with(rm);\n@@ -938,1 +940,1 @@\n-          lrg.set_num_regs(rm.Size());\n+          lrg.set_num_regs(rm.size());\n@@ -1129,1 +1131,1 @@\n-          lrg.AND( rm );\n+          lrg.and_with(rm);\n@@ -1167,1 +1169,1 @@\n-          lrg.Clear();\n+          lrg.clear();\n@@ -1408,1 +1410,1 @@\n-  if (lrg.mask().can_represent(reg) && lrg.mask().Member(reg)) {\n+  if (lrg.mask().can_represent(reg) && lrg.mask().member(reg)) {\n@@ -1462,1 +1464,1 @@\n-          mask.Remove(assigned - num_regs + 1); \/\/ Unmask the lowest reg\n+          mask.remove(assigned - num_regs + 1);      \/\/ Unmask the lowest reg\n@@ -1513,1 +1515,1 @@\n-      tempmask.AND(lrgs(copy_lrg).mask());\n+      tempmask.and_with(lrgs(copy_lrg).mask());\n@@ -1536,1 +1538,1 @@\n-    lrg.Remove(reg);\n+    lrg.remove(reg);\n@@ -1538,1 +1540,1 @@\n-    lrg.Insert(reg);\n+    lrg.insert(reg);\n@@ -1548,2 +1550,2 @@\n-  assert(C->in_preserve_stack_slots() == 0 || lrg.mask().is_offset() || lrg._is_bound || lrg.mask().is_bound1() || !lrg.mask().Member(OptoReg::Name(_matcher._old_SP - 1)), \"must not allocate stack0 (inside preserve area)\");\n-  assert(C->out_preserve_stack_slots() == 0 || lrg.mask().is_offset() || lrg._is_bound || lrg.mask().is_bound1() || !lrg.mask().Member(OptoReg::Name(_matcher._old_SP + 0)), \"must not allocate stack0 (inside preserve area)\");\n+  assert(C->in_preserve_stack_slots() == 0 || lrg.mask().is_offset() || lrg._is_bound || lrg.mask().is_bound1() || !lrg.mask().member(OptoReg::Name(_matcher._old_SP - 1)), \"must not allocate stack0 (inside preserve area)\");\n+  assert(C->out_preserve_stack_slots() == 0 || lrg.mask().is_offset() || lrg._is_bound || lrg.mask().is_bound1() || !lrg.mask().member(OptoReg::Name(_matcher._old_SP + 0)), \"must not allocate stack0 (inside preserve area)\");\n@@ -1625,1 +1627,1 @@\n-          uint size = lrg->mask().Size();\n+          uint size = lrg->mask().size();\n@@ -1629,1 +1631,1 @@\n-          lrg->SUBTRACT_inner(nlrg.mask());\n+          lrg->subtract_inner(nlrg.mask());\n@@ -1631,1 +1633,1 @@\n-          if (trace_spilling() && lrg->mask().Size() != size) {\n+          if (trace_spilling() && lrg->mask().size() != size) {\n@@ -1638,1 +1640,1 @@\n-            trace_mask.SUBTRACT(lrg->mask());\n+            trace_mask.subtract(lrg->mask());\n@@ -1704,2 +1706,2 @@\n-        lrg->Clear();           \/\/ Clear the mask\n-        lrg->Insert(reg);       \/\/ Set regmask to match selected reg\n+        lrg->clear();     \/\/ Clear the mask\n+        lrg->insert(reg); \/\/ Set regmask to match selected reg\n@@ -1712,1 +1714,1 @@\n-          lrg->Insert(OptoReg::add(reg,-i));\n+          lrg->insert(OptoReg::add(reg, -i));\n","filename":"src\/hotspot\/share\/opto\/chaitin.cpp","additions":25,"deletions":23,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-  uint _mask_size;              \/\/ cache of _mask.Size();\n+  uint _mask_size;              \/\/ cache of _mask.size();\n@@ -108,1 +108,1 @@\n-  int compute_mask_size() const { return _mask.is_infinite_stack() ? INFINITE_STACK_SIZE : _mask.Size(); }\n+  int compute_mask_size() const { return _mask.is_infinite_stack() ? INFINITE_STACK_SIZE : _mask.size(); }\n@@ -110,1 +110,1 @@\n-    assert((size == (int)INFINITE_STACK_SIZE) || (size == (int)_mask.Size()), \"\");\n+    assert((size == (int)INFINITE_STACK_SIZE) || (size == (int)_mask.size()), \"\");\n@@ -133,5 +133,5 @@\n-  void AND( const RegMask &rm ) { _mask.AND(rm); DEBUG_ONLY(_msize_valid=0;)}\n-  void SUBTRACT( const RegMask &rm ) { _mask.SUBTRACT(rm); DEBUG_ONLY(_msize_valid=0;)}\n-  void SUBTRACT_inner(const RegMask& rm) { _mask.SUBTRACT_inner(rm); DEBUG_ONLY(_msize_valid = 0;) }\n-  void Clear()   { _mask.Clear()  ; DEBUG_ONLY(_msize_valid=1); _mask_size = 0; }\n-  void Set_All() { _mask.Set_All(); DEBUG_ONLY(_msize_valid = 1); _mask_size = _mask.rm_size_in_bits(); }\n+  void and_with( const RegMask &rm ) { _mask.and_with(rm); DEBUG_ONLY(_msize_valid=0;)}\n+  void subtract( const RegMask &rm ) { _mask.subtract(rm); DEBUG_ONLY(_msize_valid=0;)}\n+  void subtract_inner(const RegMask& rm) { _mask.subtract_inner(rm); DEBUG_ONLY(_msize_valid = 0;) }\n+  void clear()   { _mask.clear()  ; DEBUG_ONLY(_msize_valid=1); _mask_size = 0; }\n+  void set_all() { _mask.set_all(); DEBUG_ONLY(_msize_valid = 1); _mask_size = _mask.rm_size_in_bits(); }\n@@ -140,2 +140,2 @@\n-  void Insert( OptoReg::Name reg ) { _mask.Insert(reg);  DEBUG_ONLY(_msize_valid=0;) }\n-  void Remove( OptoReg::Name reg ) { _mask.Remove(reg);  DEBUG_ONLY(_msize_valid=0;) }\n+  void insert( OptoReg::Name reg ) { _mask.insert(reg);  DEBUG_ONLY(_msize_valid=0;) }\n+  void remove( OptoReg::Name reg ) { _mask.remove(reg);  DEBUG_ONLY(_msize_valid=0;) }\n@@ -627,1 +627,1 @@\n-        uint new_pressure = current_pressure() + fatproj_mask.Size();\n+        uint new_pressure = current_pressure() + fatproj_mask.size();\n","filename":"src\/hotspot\/share\/opto\/chaitin.hpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-      lrg1->AND(lrg2->mask());\n+      lrg1->and_with(lrg2->mask());\n@@ -506,2 +506,2 @@\n-  lrgs(lr2).Clear();        \/\/ Force empty mask for LRG 2\n-  \/\/lrgs(lr2)._size = 0;      \/\/ Live-range 2 goes dead\n+  lrgs(lr2).clear();           \/\/ Force empty mask for LRG 2\n+  \/\/ lrgs(lr2)._size = 0;      \/\/ Live-range 2 goes dead\n@@ -573,1 +573,1 @@\n-        rm.SUBTRACT( lrgs(lidx).mask() );\n+        rm.subtract(lrgs(lidx).mask());\n@@ -575,1 +575,1 @@\n-        rm_size = rm.Size();\n+        rm_size = rm.size();\n@@ -698,1 +698,1 @@\n-  mask.AND(lrgs(lr2).mask());\n+  mask.and_with(lrgs(lr2).mask());\n@@ -700,1 +700,1 @@\n-  uint rm_size = mask.Size();\n+  uint rm_size = mask.size();\n","filename":"src\/hotspot\/share\/opto\/coalesce.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n-  virtual const RegMask &out_RegMask() const { return RegMask::Empty; }\n-  virtual const RegMask &in_RegMask(uint) const { return RegMask::Empty; }\n+  virtual const RegMask& out_RegMask() const { return RegMask::EMPTY; }\n+  virtual const RegMask& in_RegMask(uint) const { return RegMask::EMPTY; }\n","filename":"src\/hotspot\/share\/opto\/connode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1452,1 +1452,1 @@\n-  if (mach != nullptr && mach->out_RegMask().is_bound1() && !mach->out_RegMask().is_Empty())\n+  if (mach != nullptr && mach->out_RegMask().is_bound1() && !mach->out_RegMask().is_empty()) {\n@@ -1454,0 +1454,1 @@\n+  }\n","filename":"src\/hotspot\/share\/opto\/gcm.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    _lrgs[i].Set_All();\n+    _lrgs[i].set_all();\n@@ -658,1 +658,1 @@\n-  mask_tmp.AND(*Matcher::idealreg2regmask[op_regtype]);\n+  mask_tmp.and_with(*Matcher::idealreg2regmask[op_regtype]);\n@@ -745,1 +745,1 @@\n-      interfering_lrg.SUBTRACT(r2mask);\n+      interfering_lrg.subtract(r2mask);\n@@ -749,1 +749,1 @@\n-      interfering_lrg.SUBTRACT(mask);\n+      interfering_lrg.subtract(mask);\n@@ -754,2 +754,2 @@\n-      if (interfering_lrg.mask().Member(r_reg)) {\n-        interfering_lrg.Remove(r_reg);\n+      if (interfering_lrg.mask().member(r_reg)) {\n+        interfering_lrg.remove(r_reg);\n@@ -936,1 +936,1 @@\n-        if (lrg.is_bound() && !n->rematerialize() && !lrg.mask().is_Empty()) {\n+        if (lrg.is_bound() && !n->rematerialize() && !lrg.mask().is_empty()) {\n","filename":"src\/hotspot\/share\/opto\/ifg.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -858,1 +858,1 @@\n-    if( !regs.Member(r) ) {     \/\/ Not already defined by the call\n+    if (!regs.member(r)) { \/\/ Not already defined by the call\n@@ -863,1 +863,1 @@\n-        proj->_rout.Insert(r);\n+        proj->_rout.insert(r);\n@@ -887,1 +887,1 @@\n-    regs.OR(n->out_RegMask());\n+    regs.or_with(n->out_RegMask());\n@@ -910,1 +910,1 @@\n-  regs.Insert(_matcher.c_frame_pointer());\n+  regs.insert(_matcher.c_frame_pointer());\n@@ -915,1 +915,1 @@\n-  MachProjNode *proj = new MachProjNode( mcall, r_cnt+1, RegMask::Empty, MachProjNode::fat_proj );\n+  MachProjNode* proj = new MachProjNode(mcall, r_cnt + 1, RegMask::EMPTY, MachProjNode::fat_proj);\n@@ -1167,2 +1167,2 @@\n-      regs.Insert(_matcher.c_frame_pointer());\n-      regs.OR(n->out_RegMask());\n+      regs.insert(_matcher.c_frame_pointer());\n+      regs.or_with(n->out_RegMask());\n@@ -1170,1 +1170,1 @@\n-      MachProjNode *proj = new MachProjNode( n, 1, RegMask::Empty, MachProjNode::fat_proj );\n+      MachProjNode* proj = new MachProjNode(n, 1, RegMask::EMPTY, MachProjNode::fat_proj);\n","filename":"src\/hotspot\/share\/opto\/lcm.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -528,1 +528,1 @@\n-    if (!rm.is_Empty() && rm.is_bound(ideal_reg())) {\n+    if (!rm.is_empty() && rm.is_bound(ideal_reg())) {\n@@ -622,2 +622,5 @@\n-  if( idx == 0 ) return RegMask::Empty;\n-  else return in(1)->as_Mach()->out_RegMask();\n+  if (idx == 0) {\n+    return RegMask::EMPTY;\n+  } else {\n+    return in(1)->as_Mach()->out_RegMask();\n+  }\n","filename":"src\/hotspot\/share\/opto\/machnode.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -740,1 +740,1 @@\n-  virtual const RegMask &out_RegMask() const { return RegMask::Empty; }\n+  virtual const RegMask& out_RegMask() const { return RegMask::EMPTY; }\n@@ -772,1 +772,1 @@\n-  virtual const RegMask &in_RegMask(uint) const { return RegMask::Empty; }\n+  virtual const RegMask& in_RegMask(uint) const { return RegMask::EMPTY; }\n","filename":"src\/hotspot\/share\/opto\/machnode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-  assert(_return_addr_mask.is_Empty(),\n+  assert(_return_addr_mask.is_empty(),\n@@ -181,1 +181,1 @@\n-  _return_addr_mask.Insert(return_addr());\n+  _return_addr_mask.insert(return_addr());\n@@ -184,1 +184,1 @@\n-  _return_addr_mask.Insert(OptoReg::add(return_addr(),1));\n+  _return_addr_mask.insert(OptoReg::add(return_addr(), 1));\n@@ -200,1 +200,1 @@\n-      _return_value_mask.Insert(regs.second());\n+      _return_value_mask.insert(regs.second());\n@@ -264,1 +264,1 @@\n-    _calling_convention_mask[i].Clear();\n+    _calling_convention_mask[i].clear();\n@@ -276,1 +276,1 @@\n-      _calling_convention_mask[i].Insert(reg1);\n+      _calling_convention_mask[i].insert(reg1);\n@@ -280,1 +280,1 @@\n-      _calling_convention_mask[i].Insert(reg2);\n+      _calling_convention_mask[i].insert(reg2);\n@@ -425,3 +425,3 @@\n-  rms[TypeFunc::Control  ] = RegMask::Empty;\n-  rms[TypeFunc::I_O      ] = RegMask::Empty;\n-  rms[TypeFunc::Memory   ] = RegMask::Empty;\n+  rms[TypeFunc::Control  ] = RegMask::EMPTY;\n+  rms[TypeFunc::I_O      ] = RegMask::EMPTY;\n+  rms[TypeFunc::Memory   ] = RegMask::EMPTY;\n@@ -474,1 +474,1 @@\n-  C->FIRST_STACK_mask().Clear();\n+  C->FIRST_STACK_mask().clear();\n@@ -479,1 +479,1 @@\n-    C->FIRST_STACK_mask().Insert(i);\n+    C->FIRST_STACK_mask().insert(i);\n@@ -482,1 +482,1 @@\n-  C->FIRST_STACK_mask().Set_All_From(_out_arg_limit);\n+  C->FIRST_STACK_mask().set_all_from(_out_arg_limit);\n@@ -494,2 +494,2 @@\n-   idealreg2spillmask[Op_RegN]->OR(C->FIRST_STACK_mask());\n-   idealreg2spillmask[Op_RegP]->OR(aligned_stack_mask);\n+   idealreg2spillmask[Op_RegN]->or_with(C->FIRST_STACK_mask());\n+   idealreg2spillmask[Op_RegP]->or_with(aligned_stack_mask);\n@@ -497,1 +497,1 @@\n-   idealreg2spillmask[Op_RegP]->OR(C->FIRST_STACK_mask());\n+   idealreg2spillmask[Op_RegP]->or_with(C->FIRST_STACK_mask());\n@@ -500,1 +500,1 @@\n-   idealreg2spillmask[Op_RegI]->OR(C->FIRST_STACK_mask());\n+   idealreg2spillmask[Op_RegI]->or_with(C->FIRST_STACK_mask());\n@@ -502,1 +502,1 @@\n-   idealreg2spillmask[Op_RegL]->OR(aligned_stack_mask);\n+   idealreg2spillmask[Op_RegL]->or_with(aligned_stack_mask);\n@@ -504,1 +504,1 @@\n-   idealreg2spillmask[Op_RegF]->OR(C->FIRST_STACK_mask());\n+   idealreg2spillmask[Op_RegF]->or_with(C->FIRST_STACK_mask());\n@@ -506,1 +506,1 @@\n-   idealreg2spillmask[Op_RegD]->OR(aligned_stack_mask);\n+   idealreg2spillmask[Op_RegD]->or_with(aligned_stack_mask);\n@@ -510,1 +510,1 @@\n-     idealreg2spillmask[Op_RegVectMask]->OR(aligned_stack_mask);\n+     idealreg2spillmask[Op_RegVectMask]->or_with(aligned_stack_mask);\n@@ -512,1 +512,1 @@\n-    *idealreg2spillmask[Op_RegVectMask] = RegMask::Empty;\n+    *idealreg2spillmask[Op_RegVectMask] = RegMask::EMPTY;\n@@ -517,1 +517,1 @@\n-     idealreg2spillmask[Op_VecS]->OR(C->FIRST_STACK_mask());\n+     idealreg2spillmask[Op_VecS]->or_with(C->FIRST_STACK_mask());\n@@ -519,1 +519,1 @@\n-    *idealreg2spillmask[Op_VecS] = RegMask::Empty;\n+    *idealreg2spillmask[Op_VecS] = RegMask::EMPTY;\n@@ -526,1 +526,1 @@\n-     idealreg2spillmask[Op_VecD]->OR(aligned_stack_mask);\n+     idealreg2spillmask[Op_VecD]->or_with(aligned_stack_mask);\n@@ -528,1 +528,1 @@\n-    *idealreg2spillmask[Op_VecD] = RegMask::Empty;\n+    *idealreg2spillmask[Op_VecD] = RegMask::EMPTY;\n@@ -541,1 +541,1 @@\n-      aligned_stack_mask.Remove(in);\n+      aligned_stack_mask.remove(in);\n@@ -547,1 +547,1 @@\n-     idealreg2spillmask[Op_VecX]->OR(aligned_stack_mask);\n+     idealreg2spillmask[Op_VecX]->or_with(aligned_stack_mask);\n@@ -549,1 +549,1 @@\n-    *idealreg2spillmask[Op_VecX] = RegMask::Empty;\n+    *idealreg2spillmask[Op_VecX] = RegMask::EMPTY;\n@@ -556,1 +556,1 @@\n-      aligned_stack_mask.Remove(in);\n+      aligned_stack_mask.remove(in);\n@@ -562,1 +562,1 @@\n-     idealreg2spillmask[Op_VecY]->OR(aligned_stack_mask);\n+     idealreg2spillmask[Op_VecY]->or_with(aligned_stack_mask);\n@@ -564,1 +564,1 @@\n-    *idealreg2spillmask[Op_VecY] = RegMask::Empty;\n+    *idealreg2spillmask[Op_VecY] = RegMask::EMPTY;\n@@ -571,1 +571,1 @@\n-      aligned_stack_mask.Remove(in);\n+      aligned_stack_mask.remove(in);\n@@ -577,1 +577,1 @@\n-     idealreg2spillmask[Op_VecZ]->OR(aligned_stack_mask);\n+     idealreg2spillmask[Op_VecZ]->or_with(aligned_stack_mask);\n@@ -579,1 +579,1 @@\n-    *idealreg2spillmask[Op_VecZ] = RegMask::Empty;\n+    *idealreg2spillmask[Op_VecZ] = RegMask::EMPTY;\n@@ -589,1 +589,1 @@\n-        scalable_stack_mask.Remove(in);\n+        scalable_stack_mask.remove(in);\n@@ -597,1 +597,1 @@\n-      idealreg2spillmask[Op_RegVectMask]->OR(scalable_stack_mask);\n+      idealreg2spillmask[Op_RegVectMask]->or_with(scalable_stack_mask);\n@@ -603,1 +603,1 @@\n-      scalable_stack_mask.Remove(in);\n+      scalable_stack_mask.remove(in);\n@@ -611,1 +611,1 @@\n-     idealreg2spillmask[Op_VecA]->OR(scalable_stack_mask);\n+     idealreg2spillmask[Op_VecA]->or_with(scalable_stack_mask);\n@@ -613,1 +613,1 @@\n-    *idealreg2spillmask[Op_VecA] = RegMask::Empty;\n+    *idealreg2spillmask[Op_VecA] = RegMask::EMPTY;\n@@ -621,2 +621,2 @@\n-    idealreg2spillmask[Op_RegI]->OR(*idealreg2regmask[Op_RegF]);\n-    idealreg2spillmask[Op_RegF]->OR(*idealreg2regmask[Op_RegI]);\n+    idealreg2spillmask[Op_RegI]->or_with(*idealreg2regmask[Op_RegF]);\n+    idealreg2spillmask[Op_RegF]->or_with(*idealreg2regmask[Op_RegI]);\n@@ -624,4 +624,4 @@\n-    idealreg2spillmask[Op_RegN]->OR(*idealreg2regmask[Op_RegF]);\n-    idealreg2spillmask[Op_RegL]->OR(*idealreg2regmask[Op_RegD]);\n-    idealreg2spillmask[Op_RegD]->OR(*idealreg2regmask[Op_RegL]);\n-    idealreg2spillmask[Op_RegP]->OR(*idealreg2regmask[Op_RegD]);\n+    idealreg2spillmask[Op_RegN]->or_with(*idealreg2regmask[Op_RegF]);\n+    idealreg2spillmask[Op_RegL]->or_with(*idealreg2regmask[Op_RegD]);\n+    idealreg2spillmask[Op_RegD]->or_with(*idealreg2regmask[Op_RegL]);\n+    idealreg2spillmask[Op_RegP]->or_with(*idealreg2regmask[Op_RegD]);\n@@ -629,1 +629,1 @@\n-    idealreg2spillmask[Op_RegP]->OR(*idealreg2regmask[Op_RegF]);\n+    idealreg2spillmask[Op_RegP]->or_with(*idealreg2regmask[Op_RegF]);\n@@ -633,2 +633,2 @@\n-    idealreg2spillmask[Op_RegL]->OR(*idealreg2regmask[Op_RegD]);\n-    idealreg2spillmask[Op_RegD]->OR(*idealreg2regmask[Op_RegL]);\n+    idealreg2spillmask[Op_RegL]->or_with(*idealreg2regmask[Op_RegD]);\n+    idealreg2spillmask[Op_RegD]->or_with(*idealreg2regmask[Op_RegL]);\n@@ -662,14 +662,14 @@\n-  idealreg2debugmask[Op_RegN]->SUBTRACT(*caller_save_mask);\n-  idealreg2debugmask[Op_RegI]->SUBTRACT(*caller_save_mask);\n-  idealreg2debugmask[Op_RegL]->SUBTRACT(*caller_save_mask);\n-  idealreg2debugmask[Op_RegF]->SUBTRACT(*caller_save_mask);\n-  idealreg2debugmask[Op_RegD]->SUBTRACT(*caller_save_mask);\n-  idealreg2debugmask[Op_RegP]->SUBTRACT(*caller_save_mask);\n-  idealreg2debugmask[Op_RegVectMask]->SUBTRACT(*caller_save_mask);\n-\n-  idealreg2debugmask[Op_VecA]->SUBTRACT(*caller_save_mask);\n-  idealreg2debugmask[Op_VecS]->SUBTRACT(*caller_save_mask);\n-  idealreg2debugmask[Op_VecD]->SUBTRACT(*caller_save_mask);\n-  idealreg2debugmask[Op_VecX]->SUBTRACT(*caller_save_mask);\n-  idealreg2debugmask[Op_VecY]->SUBTRACT(*caller_save_mask);\n-  idealreg2debugmask[Op_VecZ]->SUBTRACT(*caller_save_mask);\n+  idealreg2debugmask[Op_RegN]->subtract(*caller_save_mask);\n+  idealreg2debugmask[Op_RegI]->subtract(*caller_save_mask);\n+  idealreg2debugmask[Op_RegL]->subtract(*caller_save_mask);\n+  idealreg2debugmask[Op_RegF]->subtract(*caller_save_mask);\n+  idealreg2debugmask[Op_RegD]->subtract(*caller_save_mask);\n+  idealreg2debugmask[Op_RegP]->subtract(*caller_save_mask);\n+  idealreg2debugmask[Op_RegVectMask]->subtract(*caller_save_mask);\n+\n+  idealreg2debugmask[Op_VecA]->subtract(*caller_save_mask);\n+  idealreg2debugmask[Op_VecS]->subtract(*caller_save_mask);\n+  idealreg2debugmask[Op_VecD]->subtract(*caller_save_mask);\n+  idealreg2debugmask[Op_VecX]->subtract(*caller_save_mask);\n+  idealreg2debugmask[Op_VecY]->subtract(*caller_save_mask);\n+  idealreg2debugmask[Op_VecZ]->subtract(*caller_save_mask);\n@@ -721,1 +721,1 @@\n-    reth_rms[TypeFunc::Parms].Insert(OptoReg::add(OptoReg::Name(reg), 1));\n+    reth_rms[TypeFunc::Parms].insert(OptoReg::add(OptoReg::Name(reg), 1));\n@@ -805,6 +805,6 @@\n-        ret_rms      [      ret_edge_cnt].Insert(OptoReg::Name(i+1));\n-        reth_rms     [     reth_edge_cnt].Insert(OptoReg::Name(i+1));\n-        tail_call_rms[tail_call_edge_cnt].Insert(OptoReg::Name(i+1));\n-        tail_jump_rms[tail_jump_edge_cnt].Insert(OptoReg::Name(i+1));\n-        forw_exc_rms [ forw_exc_edge_cnt].Insert(OptoReg::Name(i+1));\n-        halt_rms     [     halt_edge_cnt].Insert(OptoReg::Name(i+1));\n+        ret_rms      [      ret_edge_cnt].insert(OptoReg::Name(i+1));\n+        reth_rms     [     reth_edge_cnt].insert(OptoReg::Name(i+1));\n+        tail_call_rms[tail_call_edge_cnt].insert(OptoReg::Name(i+1));\n+        tail_jump_rms[tail_jump_edge_cnt].insert(OptoReg::Name(i+1));\n+        forw_exc_rms [ forw_exc_edge_cnt].insert(OptoReg::Name(i+1));\n+        halt_rms     [     halt_edge_cnt].insert(OptoReg::Name(i+1));\n@@ -818,6 +818,6 @@\n-        ret_rms      [      ret_edge_cnt] = RegMask::Empty;\n-        reth_rms     [     reth_edge_cnt] = RegMask::Empty;\n-        tail_call_rms[tail_call_edge_cnt] = RegMask::Empty;\n-        tail_jump_rms[tail_jump_edge_cnt] = RegMask::Empty;\n-        forw_exc_rms [ forw_exc_edge_cnt] = RegMask::Empty;\n-        halt_rms     [     halt_edge_cnt] = RegMask::Empty;\n+        ret_rms      [      ret_edge_cnt] = RegMask::EMPTY;\n+        reth_rms     [     reth_edge_cnt] = RegMask::EMPTY;\n+        tail_call_rms[tail_call_edge_cnt] = RegMask::EMPTY;\n+        tail_jump_rms[tail_jump_edge_cnt] = RegMask::EMPTY;\n+        forw_exc_rms [ forw_exc_edge_cnt] = RegMask::EMPTY;\n+        halt_rms     [     halt_edge_cnt] = RegMask::EMPTY;\n@@ -833,6 +833,6 @@\n-        ret_rms      [      ret_edge_cnt].Insert(OptoReg::Name(i+1));\n-        reth_rms     [     reth_edge_cnt].Insert(OptoReg::Name(i+1));\n-        tail_call_rms[tail_call_edge_cnt].Insert(OptoReg::Name(i+1));\n-        tail_jump_rms[tail_jump_edge_cnt].Insert(OptoReg::Name(i+1));\n-        forw_exc_rms [ forw_exc_edge_cnt].Insert(OptoReg::Name(i+1));\n-        halt_rms     [     halt_edge_cnt].Insert(OptoReg::Name(i+1));\n+        ret_rms      [      ret_edge_cnt].insert(OptoReg::Name(i+1));\n+        reth_rms     [     reth_edge_cnt].insert(OptoReg::Name(i+1));\n+        tail_call_rms[tail_call_edge_cnt].insert(OptoReg::Name(i+1));\n+        tail_jump_rms[tail_jump_edge_cnt].insert(OptoReg::Name(i+1));\n+        forw_exc_rms [ forw_exc_edge_cnt].insert(OptoReg::Name(i+1));\n+        halt_rms     [     halt_edge_cnt].insert(OptoReg::Name(i+1));\n@@ -846,6 +846,6 @@\n-        ret_rms      [      ret_edge_cnt] = RegMask::Empty;\n-        reth_rms     [     reth_edge_cnt] = RegMask::Empty;\n-        tail_call_rms[tail_call_edge_cnt] = RegMask::Empty;\n-        tail_jump_rms[tail_jump_edge_cnt] = RegMask::Empty;\n-        forw_exc_rms [ forw_exc_edge_cnt] = RegMask::Empty;\n-        halt_rms     [     halt_edge_cnt] = RegMask::Empty;\n+        ret_rms      [      ret_edge_cnt] = RegMask::EMPTY;\n+        reth_rms     [     reth_edge_cnt] = RegMask::EMPTY;\n+        tail_call_rms[tail_call_edge_cnt] = RegMask::EMPTY;\n+        tail_jump_rms[tail_jump_edge_cnt] = RegMask::EMPTY;\n+        forw_exc_rms [ forw_exc_edge_cnt] = RegMask::EMPTY;\n+        halt_rms     [     halt_edge_cnt] = RegMask::EMPTY;\n@@ -881,1 +881,1 @@\n-  c_frame_ptr_mask.Insert(OptoReg::add(c_frame_pointer(),1));\n+  c_frame_ptr_mask.insert(OptoReg::add(c_frame_pointer(), 1));\n@@ -885,1 +885,1 @@\n-  STACK_ONLY_mask.Clear();\n+  STACK_ONLY_mask.clear();\n@@ -887,1 +887,1 @@\n-  STACK_ONLY_mask.Set_All_From(OptoReg::stack2reg(0));\n+  STACK_ONLY_mask.set_all_from(OptoReg::stack2reg(0));\n@@ -894,1 +894,1 @@\n-    mreg2regmask[i].Insert(i);\n+    mreg2regmask[i].insert(i);\n@@ -899,1 +899,1 @@\n-      caller_save_regmask.Insert(i);\n+      caller_save_regmask.insert(i);\n@@ -905,1 +905,1 @@\n-      caller_save_regmask_exclude_soe.Insert(i);\n+      caller_save_regmask_exclude_soe.insert(i);\n@@ -1318,1 +1318,1 @@\n-          rm->Insert(r);\n+          rm->insert(r);\n@@ -1324,1 +1324,1 @@\n-        rm->Insert( reg1 );\n+        rm->insert(reg1);\n@@ -1328,1 +1328,1 @@\n-        rm->Insert( reg2 );\n+        rm->insert(reg2);\n@@ -1345,1 +1345,1 @@\n-    MachProjNode *proj = new MachProjNode( mcall, r_cnt+10000, RegMask::Empty, MachProjNode::fat_proj );\n+    MachProjNode* proj = new MachProjNode(mcall, r_cnt + 10000, RegMask::EMPTY, MachProjNode::fat_proj);\n@@ -1347,1 +1347,1 @@\n-      proj->_rout.Insert(OptoReg::Name(i));\n+      proj->_rout.insert(OptoReg::Name(i));\n@@ -1349,1 +1349,1 @@\n-    if (!proj->_rout.is_Empty()) {\n+    if (!proj->_rout.is_empty()) {\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":100,"deletions":100,"binary":false,"changes":200,"status":"modified"},{"patch":"@@ -4328,1 +4328,1 @@\n-    return new MachProjNode(this,proj->_con,RegMask::Empty,MachProjNode::unmatched_proj);\n+    return new MachProjNode(this, proj->_con, RegMask::EMPTY, MachProjNode::unmatched_proj);\n@@ -4575,1 +4575,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n@@ -5787,1 +5787,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n@@ -188,1 +188,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n","filename":"src\/hotspot\/share\/opto\/multnode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2803,1 +2803,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n@@ -2808,1 +2808,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-  bool can_use = use_mask.Member(def_reg);\n+  bool can_use = use_mask.member(def_reg);\n@@ -681,1 +681,1 @@\n-              bool is_adjacent = lrgs(useidx).mask().Member(ureg_lo);\n+              bool is_adjacent = lrgs(useidx).mask().member(ureg_lo);\n@@ -765,1 +765,1 @@\n-        bool is_adjacent = lrgs(lidx).mask().Member(nreg_lo);\n+        bool is_adjacent = lrgs(lidx).mask().member(nreg_lo);\n@@ -771,1 +771,1 @@\n-          tmp.Remove(nreg);\n+          tmp.remove(nreg);\n","filename":"src\/hotspot\/share\/opto\/postaloc.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -479,1 +479,1 @@\n-    if (!n->out_RegMask().is_Empty()) {\n+    if (!n->out_RegMask().is_empty()) {\n@@ -1041,1 +1041,1 @@\n-                (int)umask.Size() <= lrgs(useidx).num_regs() &&\n+                (int)umask.size() <= lrgs(useidx).num_regs() &&\n@@ -1131,1 +1131,1 @@\n-                  tmp_rm.SUBTRACT(Matcher::STACK_ONLY_mask);\n+                  tmp_rm.subtract(Matcher::STACK_ONLY_mask);\n","filename":"src\/hotspot\/share\/opto\/reg_split.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-const RegMask RegMask::Empty;\n+const RegMask RegMask::EMPTY;\n@@ -52,1 +52,1 @@\n-const RegMask RegMask::All(\n+const RegMask RegMask::ALL(\n@@ -129,1 +129,1 @@\n-  return Size() == 2 && !is_aligned_pairs();\n+  return size() == 2 && !is_aligned_pairs();\n@@ -230,1 +230,1 @@\n-    if (!Member(reg - i)) {\n+    if (!member(reg - i)) {\n","filename":"src\/hotspot\/share\/opto\/regmask.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -452,1 +452,1 @@\n-    Insert(reg);\n+    insert(reg);\n@@ -476,1 +476,1 @@\n-  bool Member(OptoReg::Name reg) const {\n+  bool member(OptoReg::Name reg) const {\n@@ -489,1 +489,1 @@\n-  bool is_Empty() const {\n+  bool is_empty() const {\n@@ -645,1 +645,1 @@\n-  void Clear() {\n+  void clear() {\n@@ -654,1 +654,1 @@\n-  void Set_All() {\n+  void set_all() {\n@@ -656,1 +656,1 @@\n-    Set_All_From_Offset();\n+    set_all_from_offset();\n@@ -660,1 +660,1 @@\n-  void Set_All_From_Offset() {\n+  void set_all_from_offset() {\n@@ -669,1 +669,1 @@\n-  void Set_All_From(OptoReg::Name reg) {\n+  void set_all_from(OptoReg::Name reg) {\n@@ -692,1 +692,1 @@\n-  void Insert(OptoReg::Name reg) {\n+  void insert(OptoReg::Name reg) {\n@@ -709,1 +709,1 @@\n-  void Remove(OptoReg::Name reg) {\n+  void remove(OptoReg::Name reg) {\n@@ -717,2 +717,2 @@\n-  \/\/ OR 'rm' into 'this'\n-  void OR(const RegMask &rm) {\n+  \/\/ Or 'rm' into 'this'\n+  void or_with(const RegMask& rm) {\n@@ -739,2 +739,2 @@\n-  \/\/ AND 'rm' into 'this'\n-  void AND(const RegMask &rm) {\n+  \/\/ And 'rm' into 'this'\n+  void and_with(const RegMask& rm) {\n@@ -771,1 +771,1 @@\n-  void SUBTRACT(const RegMask &rm) {\n+  void subtract(const RegMask& rm) {\n@@ -794,1 +794,1 @@\n-  void SUBTRACT_inner(const RegMask& rm) {\n+  void subtract_inner(const RegMask& rm) {\n@@ -824,1 +824,1 @@\n-    Set_All_From_Offset();\n+    set_all_from_offset();\n@@ -829,1 +829,1 @@\n-  uint Size() const {\n+  uint size() const {\n@@ -898,2 +898,2 @@\n-  static const RegMask Empty;   \/\/ Common empty mask\n-  static const RegMask All;     \/\/ Common all mask\n+  static const RegMask EMPTY; \/\/ Common empty mask\n+  static const RegMask ALL;   \/\/ Common all mask\n","filename":"src\/hotspot\/share\/opto\/regmask.hpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-  return RegMask::Empty;\n+  return RegMask::EMPTY;\n","filename":"src\/hotspot\/share\/opto\/rootnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  ASSERT_TRUE(rm.Size() == expected);\n+  ASSERT_TRUE(rm.size() == expected);\n@@ -38,1 +38,1 @@\n-    ASSERT_TRUE(!rm.is_Empty());\n+    ASSERT_TRUE(!rm.is_empty());\n@@ -40,1 +40,1 @@\n-    ASSERT_TRUE(rm.is_Empty());\n+    ASSERT_TRUE(rm.is_empty());\n@@ -63,8 +63,8 @@\n-  rm.Insert(30);\n-  rm.Insert(31);\n-  rm.Insert(32);\n-  rm.Insert(33);\n-  rm.Insert(62);\n-  rm.Insert(63);\n-  rm.Insert(64);\n-  rm.Insert(65);\n+  rm.insert(30);\n+  rm.insert(31);\n+  rm.insert(32);\n+  rm.insert(33);\n+  rm.insert(62);\n+  rm.insert(63);\n+  rm.insert(64);\n+  rm.insert(65);\n@@ -85,1 +85,1 @@\n-  \/\/ Check that Set_All doesn't add bits outside of rm.rm_size_bits()\n+  \/\/ Check that set_all doesn't add bits outside of rm.rm_size_bits()\n@@ -87,4 +87,4 @@\n-  rm.Set_All();\n-  ASSERT_TRUE(rm.Size() == rm.rm_size_in_bits());\n-  ASSERT_TRUE(!rm.is_Empty());\n-  \/\/ Set_All sets infinite_stack\n+  rm.set_all();\n+  ASSERT_TRUE(rm.size() == rm.rm_size_in_bits());\n+  ASSERT_TRUE(!rm.is_empty());\n+  \/\/ set_all sets infinite_stack\n@@ -98,2 +98,2 @@\n-  rm.Set_All();\n-  rm.Clear();\n+  rm.set_all();\n+  rm.clear();\n@@ -103,1 +103,1 @@\n-TEST_VM(RegMask, AND) {\n+TEST_VM(RegMask, and_with) {\n@@ -105,1 +105,1 @@\n-  rm1.Insert(OptoReg::Name(1));\n+  rm1.insert(OptoReg::Name(1));\n@@ -107,1 +107,1 @@\n-  ASSERT_TRUE(rm1.Member(OptoReg::Name(1)));\n+  ASSERT_TRUE(rm1.member(OptoReg::Name(1)));\n@@ -109,1 +109,1 @@\n-  rm1.AND(rm1);\n+  rm1.and_with(rm1);\n@@ -113,1 +113,1 @@\n-  rm1.AND(rm2);\n+  rm1.and_with(rm2);\n@@ -118,1 +118,1 @@\n-TEST_VM(RegMask, OR) {\n+TEST_VM(RegMask, or_with) {\n@@ -120,1 +120,1 @@\n-  rm1.Insert(OptoReg::Name(1));\n+  rm1.insert(OptoReg::Name(1));\n@@ -122,1 +122,1 @@\n-  ASSERT_TRUE(rm1.Member(OptoReg::Name(1)));\n+  ASSERT_TRUE(rm1.member(OptoReg::Name(1)));\n@@ -124,1 +124,1 @@\n-  rm1.OR(rm1);\n+  rm1.or_with(rm1);\n@@ -128,1 +128,1 @@\n-  rm1.OR(rm2);\n+  rm1.or_with(rm2);\n@@ -133,1 +133,1 @@\n-TEST_VM(RegMask, SUBTRACT) {\n+TEST_VM(RegMask, subtract) {\n@@ -137,1 +137,1 @@\n-  rm2.Set_All();\n+  rm2.set_all();\n@@ -139,1 +139,1 @@\n-    rm1.Insert(i);\n+    rm1.insert(i);\n@@ -143,1 +143,1 @@\n-  rm2.SUBTRACT(rm1);\n+  rm2.subtract(rm1);\n@@ -148,1 +148,1 @@\n-TEST_VM(RegMask, SUBTRACT_inner) {\n+TEST_VM(RegMask, subtract_inner) {\n@@ -151,1 +151,1 @@\n-  rm2.Set_All();\n+  rm2.set_all();\n@@ -153,1 +153,1 @@\n-    rm1.Insert(i);\n+    rm1.insert(i);\n@@ -155,1 +155,1 @@\n-  rm2.SUBTRACT_inner(rm1);\n+  rm2.subtract_inner(rm1);\n@@ -164,1 +164,1 @@\n-    rm.Insert(i);\n+    rm.insert(i);\n@@ -168,1 +168,1 @@\n-    rm.Remove(i);\n+    rm.remove(i);\n@@ -179,2 +179,2 @@\n-    rm.Insert(i);\n-    rm.Insert(i + 1);\n+    rm.insert(i);\n+    rm.insert(i + 1);\n@@ -185,1 +185,1 @@\n-    rm.Clear();\n+    rm.clear();\n@@ -188,3 +188,3 @@\n-  rm.Clear();\n-  rm.Insert(rm.rm_size_in_bits() - 2);\n-  rm.Insert(rm.rm_size_in_bits() - 1);\n+  rm.clear();\n+  rm.insert(rm.rm_size_in_bits() - 2);\n+  rm.insert(rm.rm_size_in_bits() - 1);\n@@ -201,1 +201,1 @@\n-        rm.Insert(j);\n+        rm.insert(j);\n@@ -205,1 +205,1 @@\n-      rm.Clear();\n+      rm.clear();\n@@ -209,1 +209,1 @@\n-      rm.Insert(j);\n+      rm.insert(j);\n@@ -213,1 +213,1 @@\n-    rm.Clear();\n+    rm.clear();\n@@ -220,1 +220,1 @@\n-  ASSERT_FALSE(rm.Member(OptoReg::Name(rm.rm_size_in_bits())));\n+  ASSERT_FALSE(rm.member(OptoReg::Name(rm.rm_size_in_bits())));\n@@ -222,1 +222,1 @@\n-  ASSERT_TRUE(rm.Member(OptoReg::Name(rm.rm_size_in_bits())));\n+  ASSERT_TRUE(rm.member(OptoReg::Name(rm.rm_size_in_bits())));\n@@ -227,3 +227,3 @@\n-  rm.Insert(OptoReg::Name(44));\n-  rm.Insert(OptoReg::Name(30));\n-  rm.Insert(OptoReg::Name(54));\n+  rm.insert(OptoReg::Name(44));\n+  rm.insert(OptoReg::Name(30));\n+  rm.insert(OptoReg::Name(54));\n@@ -234,1 +234,1 @@\n-  rm.Clear();\n+  rm.clear();\n@@ -245,8 +245,8 @@\n-  rm.Insert(OptoReg::Name(24));\n-  rm.Insert(OptoReg::Name(25));\n-  rm.Insert(OptoReg::Name(26));\n-  rm.Insert(OptoReg::Name(27));\n-  rm.Insert(OptoReg::Name(16));\n-  rm.Insert(OptoReg::Name(17));\n-  rm.Insert(OptoReg::Name(18));\n-  rm.Insert(OptoReg::Name(19));\n+  rm.insert(OptoReg::Name(24));\n+  rm.insert(OptoReg::Name(25));\n+  rm.insert(OptoReg::Name(26));\n+  rm.insert(OptoReg::Name(27));\n+  rm.insert(OptoReg::Name(16));\n+  rm.insert(OptoReg::Name(17));\n+  rm.insert(OptoReg::Name(18));\n+  rm.insert(OptoReg::Name(19));\n@@ -258,2 +258,2 @@\n-  rm.Insert(OptoReg::Name(30));\n-  rm.Insert(OptoReg::Name(31));\n+  rm.insert(OptoReg::Name(30));\n+  rm.insert(OptoReg::Name(31));\n@@ -261,6 +261,6 @@\n-  rm.Insert(OptoReg::Name(32));\n-  rm.Insert(OptoReg::Name(37));\n-  rm.Insert(OptoReg::Name(62));\n-  rm.Insert(OptoReg::Name(71));\n-  rm.Insert(OptoReg::Name(74));\n-  rm.Insert(OptoReg::Name(75));\n+  rm.insert(OptoReg::Name(32));\n+  rm.insert(OptoReg::Name(37));\n+  rm.insert(OptoReg::Name(62));\n+  rm.insert(OptoReg::Name(71));\n+  rm.insert(OptoReg::Name(74));\n+  rm.insert(OptoReg::Name(75));\n@@ -272,4 +272,4 @@\n-  ASSERT_TRUE(rm.Member(OptoReg::Name(30)));\n-  ASSERT_TRUE(rm.Member(OptoReg::Name(31)));\n-  ASSERT_TRUE(rm.Member(OptoReg::Name(74)));\n-  ASSERT_TRUE(rm.Member(OptoReg::Name(75)));\n+  ASSERT_TRUE(rm.member(OptoReg::Name(30)));\n+  ASSERT_TRUE(rm.member(OptoReg::Name(31)));\n+  ASSERT_TRUE(rm.member(OptoReg::Name(74)));\n+  ASSERT_TRUE(rm.member(OptoReg::Name(75)));\n@@ -277,2 +277,2 @@\n-  rm.Remove(OptoReg::Name(30));\n-  rm.Remove(OptoReg::Name(74));\n+  rm.remove(OptoReg::Name(30));\n+  rm.remove(OptoReg::Name(74));\n@@ -284,13 +284,13 @@\n-  rm.Insert(OptoReg::Name(3));\n-  rm.Insert(OptoReg::Name(20));\n-  rm.Insert(OptoReg::Name(21));\n-  rm.Insert(OptoReg::Name(22));\n-  rm.Insert(OptoReg::Name(23));\n-  rm.Insert(OptoReg::Name(25));\n-  rm.Insert(OptoReg::Name(26));\n-  rm.Insert(OptoReg::Name(27));\n-  rm.Insert(OptoReg::Name(40));\n-  rm.Insert(OptoReg::Name(42));\n-  rm.Insert(OptoReg::Name(43));\n-  rm.Insert(OptoReg::Name(44));\n-  rm.Insert(OptoReg::Name(45));\n+  rm.insert(OptoReg::Name(3));\n+  rm.insert(OptoReg::Name(20));\n+  rm.insert(OptoReg::Name(21));\n+  rm.insert(OptoReg::Name(22));\n+  rm.insert(OptoReg::Name(23));\n+  rm.insert(OptoReg::Name(25));\n+  rm.insert(OptoReg::Name(26));\n+  rm.insert(OptoReg::Name(27));\n+  rm.insert(OptoReg::Name(40));\n+  rm.insert(OptoReg::Name(42));\n+  rm.insert(OptoReg::Name(43));\n+  rm.insert(OptoReg::Name(44));\n+  rm.insert(OptoReg::Name(45));\n@@ -310,1 +310,1 @@\n-  rm.Insert(OptoReg::Name(3));\n+  rm.insert(OptoReg::Name(3));\n@@ -330,5 +330,5 @@\n-  rm1.Insert(OptoReg::Name(23));\n-  rm1.Insert(OptoReg::Name(2));\n-  rm1.Insert(OptoReg::Name(12));\n-  rm2.Insert(OptoReg::Name(1));\n-  rm2.Insert(OptoReg::Name(4));\n+  rm1.insert(OptoReg::Name(23));\n+  rm1.insert(OptoReg::Name(2));\n+  rm1.insert(OptoReg::Name(12));\n+  rm2.insert(OptoReg::Name(1));\n+  rm2.insert(OptoReg::Name(4));\n@@ -337,1 +337,1 @@\n-  rm1.Insert(OptoReg::Name(4));\n+  rm1.insert(OptoReg::Name(4));\n@@ -345,4 +345,4 @@\n-  rm.Insert(OptoReg::Name(3));\n-  rm.Insert(OptoReg::Name(5));\n-  rm.Insert(OptoReg::Name(6));\n-  rm.Insert(OptoReg::Name(7));\n+  rm.insert(OptoReg::Name(3));\n+  rm.insert(OptoReg::Name(5));\n+  rm.insert(OptoReg::Name(6));\n+  rm.insert(OptoReg::Name(7));\n@@ -358,1 +358,1 @@\n-  ASSERT_TRUE(rm.Member(reg1));\n+  ASSERT_TRUE(rm.member(reg1));\n@@ -360,5 +360,5 @@\n-  rm.Clear();\n-  rm.Insert(reg1);\n-  ASSERT_TRUE(rm.Member(reg1));\n-  rm.Remove(reg1);\n-  ASSERT_FALSE(rm.Member(reg1));\n+  rm.clear();\n+  rm.insert(reg1);\n+  ASSERT_TRUE(rm.member(reg1));\n+  rm.remove(reg1);\n+  ASSERT_FALSE(rm.member(reg1));\n@@ -367,4 +367,4 @@\n-  rm.Clear();\n-  rm.Insert(reg2);\n-  ASSERT_FALSE(rm.Member(reg1));\n-  ASSERT_TRUE(rm.Member(reg2));\n+  rm.clear();\n+  rm.insert(reg2);\n+  ASSERT_FALSE(rm.member(reg1));\n+  ASSERT_TRUE(rm.member(reg2));\n@@ -379,1 +379,1 @@\n-  rm.Clear();\n+  rm.clear();\n@@ -382,2 +382,2 @@\n-  rm.Insert(reg1);\n-  rm.Insert(reg2);\n+  rm.insert(reg1);\n+  rm.insert(reg2);\n@@ -403,1 +403,1 @@\n-  rm.Clear();\n+  rm.clear();\n@@ -405,8 +405,8 @@\n-  rm.Insert(reg1);\n-  rm.Insert(reg2);\n-  rm.Insert(reg3);\n-  rm.Insert(reg4);\n-  rm.Insert(reg5);\n-  rm.Insert(reg6);\n-  rm.Insert(reg7);\n-  rm.Insert(reg8);\n+  rm.insert(reg1);\n+  rm.insert(reg2);\n+  rm.insert(reg3);\n+  rm.insert(reg4);\n+  rm.insert(reg5);\n+  rm.insert(reg6);\n+  rm.insert(reg7);\n+  rm.insert(reg8);\n@@ -416,1 +416,1 @@\n-TEST_VM(RegMask, rollover_and_Set_All_From) {\n+TEST_VM(RegMask, rollover_and_set_all_from) {\n@@ -421,2 +421,2 @@\n-  rm.Clear();\n-  rm.Set_All_From(reg1);\n+  rm.clear();\n+  rm.set_all_from(reg1);\n@@ -426,1 +426,1 @@\n-TEST_VM(RegMask, rollover_and_Set_All_From_Offset) {\n+TEST_VM(RegMask, rollover_and_set_all_from_offset) {\n@@ -430,2 +430,2 @@\n-  rm.Clear();\n-  rm.Set_All_From_Offset();\n+  rm.clear();\n+  rm.set_all_from_offset();\n@@ -443,5 +443,5 @@\n-  rm.Clear();\n-  rm.Insert(reg1);\n-  rm.Insert(reg2);\n-  rm.Insert(reg3);\n-  rm.Insert(reg4);\n+  rm.clear();\n+  rm.insert(reg1);\n+  rm.insert(reg2);\n+  rm.insert(reg3);\n+  rm.insert(reg4);\n@@ -456,1 +456,1 @@\n-TEST_VM(RegMask, rollover_and_SUBTRACT_inner_disjoint) {\n+TEST_VM(RegMask, rollover_and_subtract_inner_disjoint) {\n@@ -462,2 +462,2 @@\n-  rm1.Clear();\n-  rm1.SUBTRACT_inner(rm2);\n+  rm1.clear();\n+  rm1.subtract_inner(rm2);\n@@ -465,1 +465,1 @@\n-  rm2.SUBTRACT_inner(rm1);\n+  rm2.subtract_inner(rm1);\n@@ -467,3 +467,3 @@\n-  rm1.Insert(reg1);\n-  rm2.Insert(42);\n-  rm1.SUBTRACT_inner(rm2);\n+  rm1.insert(reg1);\n+  rm2.insert(42);\n+  rm1.subtract_inner(rm2);\n@@ -471,1 +471,1 @@\n-  rm2.SUBTRACT_inner(rm1);\n+  rm2.subtract_inner(rm1);\n@@ -475,1 +475,1 @@\n-TEST_VM(RegMask, rollover_and_SUBTRACT_inner_overlap) {\n+TEST_VM(RegMask, rollover_and_subtract_inner_overlap) {\n@@ -481,1 +481,1 @@\n-  rm1.Clear();\n+  rm1.clear();\n@@ -484,2 +484,2 @@\n-  rm2.Clear();\n-  rm1.SUBTRACT_inner(rm2);\n+  rm2.clear();\n+  rm1.subtract_inner(rm2);\n@@ -487,1 +487,1 @@\n-  rm2.SUBTRACT_inner(rm1);\n+  rm2.subtract_inner(rm1);\n@@ -489,3 +489,3 @@\n-  rm1.Insert(reg1);\n-  rm2.Insert(reg1);\n-  rm1.SUBTRACT_inner(rm2);\n+  rm1.insert(reg1);\n+  rm2.insert(reg1);\n+  rm1.subtract_inner(rm2);\n@@ -493,2 +493,2 @@\n-  rm1.Insert(reg1);\n-  rm2.SUBTRACT_inner(rm1);\n+  rm1.insert(reg1);\n+  rm2.subtract_inner(rm1);\n@@ -505,1 +505,1 @@\n-  rm2.Member(0); \/\/ Safeguard in RegMask must catch this.\n+  rm2.member(0); \/\/ Safeguard in RegMask must catch this.\n@@ -511,1 +511,1 @@\n-  rm.Insert(std::numeric_limits<OptoReg::Name>::max());\n+  rm.insert(std::numeric_limits<OptoReg::Name>::max());\n@@ -518,1 +518,1 @@\n-  rm.Insert(rm.rm_size_in_bits());\n+  rm.insert(rm.rm_size_in_bits());\n@@ -552,2 +552,2 @@\n-  rm.Insert(OptoReg::Name(first_extended() + (BitsPerWord * n) - 1));\n-  rm.Clear();\n+  rm.insert(OptoReg::Name(first_extended() + (BitsPerWord * n) - 1));\n+  rm.clear();\n@@ -565,8 +565,8 @@\n-  rm.Insert(30);\n-  rm.Insert(31);\n-  rm.Insert(33);\n-  rm.Insert(62);\n-  rm.Insert(first_extended());\n-  rm.Insert(first_extended() + 42);\n-  rm.Insert(first_extended() + 55);\n-  rm.Insert(first_extended() + 456);\n+  rm.insert(30);\n+  rm.insert(31);\n+  rm.insert(33);\n+  rm.insert(62);\n+  rm.insert(first_extended());\n+  rm.insert(first_extended() + 42);\n+  rm.insert(first_extended() + 55);\n+  rm.insert(first_extended() + 456);\n@@ -587,1 +587,1 @@\n-  \/\/ Check that Set_All doesn't add bits outside of rm.rm_size_bits() on\n+  \/\/ Check that set_all doesn't add bits outside of rm.rm_size_bits() on\n@@ -591,4 +591,4 @@\n-  rm.Set_All();\n-  ASSERT_EQ(rm.Size(), rm.rm_size_in_bits());\n-  ASSERT_TRUE(!rm.is_Empty());\n-  \/\/ Set_All sets infinite_stack bit\n+  rm.set_all();\n+  ASSERT_EQ(rm.size(), rm.rm_size_in_bits());\n+  ASSERT_TRUE(!rm.is_empty());\n+  \/\/ set_all sets infinite_stack bit\n@@ -602,1 +602,1 @@\n-  rm.Set_All_From(OptoReg::Name(42));\n+  rm.set_all_from(OptoReg::Name(42));\n@@ -608,1 +608,1 @@\n-  rm.Set_All_From(first_extended() + OptoReg::Name(42));\n+  rm.set_all_from(first_extended() + OptoReg::Name(42));\n@@ -616,1 +616,1 @@\n-  rm.Insert(first_extended());\n+  rm.insert(first_extended());\n@@ -618,2 +618,2 @@\n-  rm.Set_All();\n-  rm.Clear();\n+  rm.set_all();\n+  rm.clear();\n@@ -623,1 +623,1 @@\n-TEST_VM(RegMask, AND_extended_basic) {\n+TEST_VM(RegMask, and_with_extended_basic) {\n@@ -625,1 +625,1 @@\n-  rm1.Insert(OptoReg::Name(first_extended()));\n+  rm1.insert(OptoReg::Name(first_extended()));\n@@ -628,1 +628,1 @@\n-  ASSERT_TRUE(rm1.Member(OptoReg::Name(first_extended())));\n+  ASSERT_TRUE(rm1.member(OptoReg::Name(first_extended())));\n@@ -630,1 +630,1 @@\n-  rm1.AND(rm1);\n+  rm1.and_with(rm1);\n@@ -635,1 +635,1 @@\n-  rm1.AND(rm2);\n+  rm1.and_with(rm2);\n@@ -640,1 +640,1 @@\n-TEST_VM(RegMask, AND_extended_extended) {\n+TEST_VM(RegMask, and_with_extended_extended) {\n@@ -642,1 +642,1 @@\n-  rm1.Insert(OptoReg::Name(first_extended()));\n+  rm1.insert(OptoReg::Name(first_extended()));\n@@ -645,1 +645,1 @@\n-  ASSERT_TRUE(rm1.Member(OptoReg::Name(first_extended())));\n+  ASSERT_TRUE(rm1.member(OptoReg::Name(first_extended())));\n@@ -647,1 +647,1 @@\n-  rm1.AND(rm1);\n+  rm1.and_with(rm1);\n@@ -652,1 +652,1 @@\n-  rm1.AND(rm2);\n+  rm1.and_with(rm2);\n@@ -657,1 +657,1 @@\n-TEST_VM(RegMask, OR_extended_basic) {\n+TEST_VM(RegMask, or_with_extended_basic) {\n@@ -659,1 +659,1 @@\n-  rm1.Insert(OptoReg::Name(first_extended()));\n+  rm1.insert(OptoReg::Name(first_extended()));\n@@ -662,1 +662,1 @@\n-  ASSERT_TRUE(rm1.Member(OptoReg::Name(first_extended())));\n+  ASSERT_TRUE(rm1.member(OptoReg::Name(first_extended())));\n@@ -664,1 +664,1 @@\n-  rm1.OR(rm1);\n+  rm1.or_with(rm1);\n@@ -669,1 +669,1 @@\n-  rm1.OR(rm2);\n+  rm1.or_with(rm2);\n@@ -674,1 +674,1 @@\n-TEST_VM(RegMask, OR_extended_extended) {\n+TEST_VM(RegMask, or_with_extended_extended) {\n@@ -676,1 +676,1 @@\n-  rm1.Insert(OptoReg::Name(first_extended()));\n+  rm1.insert(OptoReg::Name(first_extended()));\n@@ -679,1 +679,1 @@\n-  ASSERT_TRUE(rm1.Member(OptoReg::Name(first_extended())));\n+  ASSERT_TRUE(rm1.member(OptoReg::Name(first_extended())));\n@@ -681,1 +681,1 @@\n-  rm1.OR(rm1);\n+  rm1.or_with(rm1);\n@@ -686,1 +686,1 @@\n-  rm1.OR(rm2);\n+  rm1.or_with(rm2);\n@@ -691,1 +691,1 @@\n-TEST_VM(RegMask, SUBTRACT_extended) {\n+TEST_VM(RegMask, subtract_extended) {\n@@ -697,1 +697,1 @@\n-  rm2.Set_All();\n+  rm2.set_all();\n@@ -700,1 +700,1 @@\n-    rm1.Insert(i);\n+    rm1.insert(i);\n@@ -704,1 +704,1 @@\n-  rm2.SUBTRACT(rm1);\n+  rm2.subtract(rm1);\n@@ -713,1 +713,1 @@\n-  ASSERT_FALSE(rm.Member(OptoReg::Name(rm.rm_size_in_bits())));\n+  ASSERT_FALSE(rm.member(OptoReg::Name(rm.rm_size_in_bits())));\n@@ -715,1 +715,1 @@\n-  ASSERT_TRUE(rm.Member(OptoReg::Name(rm.rm_size_in_bits())));\n+  ASSERT_TRUE(rm.member(OptoReg::Name(rm.rm_size_in_bits())));\n@@ -725,5 +725,5 @@\n-  rm1.Insert(OptoReg::Name(23));\n-  rm1.Insert(OptoReg::Name(2));\n-  rm1.Insert(OptoReg::Name(first_extended() + 12));\n-  rm2.Insert(OptoReg::Name(1));\n-  rm2.Insert(OptoReg::Name(first_extended() + 4));\n+  rm1.insert(OptoReg::Name(23));\n+  rm1.insert(OptoReg::Name(2));\n+  rm1.insert(OptoReg::Name(first_extended() + 12));\n+  rm2.insert(OptoReg::Name(1));\n+  rm2.insert(OptoReg::Name(first_extended() + 4));\n@@ -732,1 +732,1 @@\n-  rm1.Insert(OptoReg::Name(first_extended() + 4));\n+  rm1.insert(OptoReg::Name(first_extended() + 4));\n@@ -741,1 +741,1 @@\n-  rm.Insert(OptoReg::Name(1));\n+  rm.insert(OptoReg::Name(1));\n@@ -743,1 +743,1 @@\n-  rm.Insert(OptoReg::Name(first_extended()));\n+  rm.insert(OptoReg::Name(first_extended()));\n@@ -745,1 +745,1 @@\n-  rm.Clear();\n+  rm.clear();\n@@ -750,1 +750,1 @@\n-TEST_VM(RegMask, SUBTRACT_inner_basic_extended) {\n+TEST_VM(RegMask, subtract_inner_basic_extended) {\n@@ -753,2 +753,2 @@\n-  rm1.Insert(OptoReg::Name(1));\n-  rm1.Insert(OptoReg::Name(42));\n+  rm1.insert(OptoReg::Name(1));\n+  rm1.insert(OptoReg::Name(42));\n@@ -756,2 +756,2 @@\n-  rm2.Insert(OptoReg::Name(1));\n-  rm2.Insert(OptoReg::Name(first_extended() + 20));\n+  rm2.insert(OptoReg::Name(1));\n+  rm2.insert(OptoReg::Name(first_extended() + 20));\n@@ -759,1 +759,1 @@\n-  rm1.SUBTRACT_inner(rm2);\n+  rm1.subtract_inner(rm2);\n@@ -762,1 +762,1 @@\n-  ASSERT_TRUE(rm1.Member(OptoReg::Name(42)));\n+  ASSERT_TRUE(rm1.member(OptoReg::Name(42)));\n@@ -765,1 +765,1 @@\n-TEST_VM(RegMask, SUBTRACT_inner_extended_basic) {\n+TEST_VM(RegMask, subtract_inner_extended_basic) {\n@@ -768,3 +768,3 @@\n-  rm1.Insert(OptoReg::Name(1));\n-  rm1.Insert(OptoReg::Name(42));\n-  rm1.Insert(OptoReg::Name(first_extended() + 20));\n+  rm1.insert(OptoReg::Name(1));\n+  rm1.insert(OptoReg::Name(42));\n+  rm1.insert(OptoReg::Name(first_extended() + 20));\n@@ -772,1 +772,1 @@\n-  rm2.Insert(OptoReg::Name(1));\n+  rm2.insert(OptoReg::Name(1));\n@@ -774,1 +774,1 @@\n-  rm1.SUBTRACT_inner(rm2);\n+  rm1.subtract_inner(rm2);\n@@ -776,2 +776,2 @@\n-  ASSERT_TRUE(rm1.Member(OptoReg::Name(42)));\n-  ASSERT_TRUE(rm1.Member(OptoReg::Name(first_extended() + 20)));\n+  ASSERT_TRUE(rm1.member(OptoReg::Name(42)));\n+  ASSERT_TRUE(rm1.member(OptoReg::Name(first_extended() + 20)));\n@@ -787,2 +787,2 @@\n-  rm.Insert(reg1);\n-  ASSERT_TRUE(rm.Member(reg1));\n+  rm.insert(reg1);\n+  ASSERT_TRUE(rm.member(reg1));\n@@ -791,1 +791,1 @@\n-TEST_VM(RegMask, rollover_and_SUBTRACT_inner_disjoint_extended) {\n+TEST_VM(RegMask, rollover_and_subtract_inner_disjoint_extended) {\n@@ -798,2 +798,2 @@\n-  rm1.Clear();\n-  rm1.SUBTRACT_inner(rm2);\n+  rm1.clear();\n+  rm1.subtract_inner(rm2);\n@@ -801,1 +801,1 @@\n-  rm2.SUBTRACT_inner(rm1);\n+  rm2.subtract_inner(rm1);\n@@ -803,3 +803,3 @@\n-  rm1.Insert(reg1);\n-  rm2.Insert(42);\n-  rm1.SUBTRACT_inner(rm2);\n+  rm1.insert(reg1);\n+  rm2.insert(42);\n+  rm1.subtract_inner(rm2);\n@@ -807,1 +807,1 @@\n-  rm2.SUBTRACT_inner(rm1);\n+  rm2.subtract_inner(rm1);\n@@ -811,1 +811,1 @@\n-TEST_VM(RegMask, rollover_and_SUBTRACT_inner_overlap_extended) {\n+TEST_VM(RegMask, rollover_and_subtract_inner_overlap_extended) {\n@@ -818,2 +818,2 @@\n-  rm2.Clear();\n-  rm1.SUBTRACT_inner(rm2);\n+  rm2.clear();\n+  rm1.subtract_inner(rm2);\n@@ -821,1 +821,1 @@\n-  rm2.SUBTRACT_inner(rm1);\n+  rm2.subtract_inner(rm1);\n@@ -823,3 +823,3 @@\n-  rm1.Insert(reg1);\n-  rm2.Insert(reg1);\n-  rm1.SUBTRACT_inner(rm2);\n+  rm1.insert(reg1);\n+  rm2.insert(reg1);\n+  rm1.subtract_inner(rm2);\n@@ -827,2 +827,2 @@\n-  rm1.Insert(reg1);\n-  rm2.SUBTRACT_inner(rm1);\n+  rm1.insert(reg1);\n+  rm2.subtract_inner(rm1);\n@@ -858,1 +858,1 @@\n-  ASSERT_EQ(mask_ref.count_one_bits(), mask.Size());\n+  ASSERT_EQ(mask_ref.count_one_bits(), mask.size());\n@@ -873,1 +873,1 @@\n-  mask_aux.Clear();\n+  mask_aux.clear();\n@@ -939,1 +939,1 @@\n-    mask_aux.Insert(reg);\n+    mask_aux.insert(reg);\n@@ -997,1 +997,1 @@\n-      mask.Insert(reg);\n+      mask.insert(reg);\n@@ -1013,1 +1013,1 @@\n-      mask.Remove(reg);\n+      mask.remove(reg);\n@@ -1020,1 +1020,1 @@\n-      mask.Clear();\n+      mask.clear();\n@@ -1026,1 +1026,1 @@\n-        \/\/ Set_All expects a zero-offset.\n+        \/\/ set_all expects a zero-offset.\n@@ -1030,1 +1030,1 @@\n-        tty->print_cr(\"action: Set_All\");\n+        tty->print_cr(\"action: set_all\");\n@@ -1032,1 +1032,1 @@\n-      mask.Set_All();\n+      mask.set_all();\n@@ -1038,1 +1038,1 @@\n-        tty->print_cr(\"action: AND\");\n+        tty->print_cr(\"action: and_with\");\n@@ -1042,1 +1042,1 @@\n-      mask.AND(mask_aux);\n+      mask.and_with(mask_aux);\n@@ -1051,1 +1051,1 @@\n-        tty->print_cr(\"action: OR\");\n+        tty->print_cr(\"action: or_with\");\n@@ -1055,1 +1055,1 @@\n-      mask.OR(mask_aux);\n+      mask.or_with(mask_aux);\n@@ -1064,1 +1064,1 @@\n-        tty->print_cr(\"action: SUBTRACT\");\n+        tty->print_cr(\"action: subtract\");\n@@ -1068,1 +1068,1 @@\n-      mask.SUBTRACT(mask_aux);\n+      mask.subtract(mask_aux);\n@@ -1079,1 +1079,1 @@\n-        tty->print_cr(\"action: SUBTRACT_inner\");\n+        tty->print_cr(\"action: subtract_inner\");\n@@ -1083,1 +1083,1 @@\n-      \/\/ SUBTRACT_inner expects an argument register mask with infinite_stack =\n+      \/\/ subtract_inner expects an argument register mask with infinite_stack =\n@@ -1086,2 +1086,2 @@\n-      mask.SUBTRACT_inner(mask_aux);\n-      \/\/ SUBTRACT_inner does not have \"stack-extension semantics\".\n+      mask.subtract_inner(mask_aux);\n+      \/\/ subtract_inner does not have \"stack-extension semantics\".\n@@ -1109,1 +1109,1 @@\n-      mask.Clear();\n+      mask.clear();\n@@ -1123,1 +1123,1 @@\n-      mask.Clear();\n+      mask.clear();\n@@ -1130,1 +1130,1 @@\n-        tty->print_cr(\"action: Set_All_From_Offset\");\n+        tty->print_cr(\"action: set_all_from_offset\");\n@@ -1132,1 +1132,1 @@\n-      mask.Set_All_From_Offset();\n+      mask.set_all_from_offset();\n@@ -1139,1 +1139,1 @@\n-        tty->print_cr(\"action: Set_All_From\");\n+        tty->print_cr(\"action: set_all_from\");\n@@ -1144,1 +1144,1 @@\n-      mask.Set_All_From(reg);\n+      mask.set_all_from(reg);\n@@ -1157,1 +1157,1 @@\n-  rm.Clear();\n+  rm.clear();\n@@ -1162,1 +1162,1 @@\n-    rm.Insert(reg);\n+    rm.insert(reg);\n@@ -1178,1 +1178,1 @@\n-    rm.Insert(reg);\n+    rm.insert(reg);\n@@ -1181,1 +1181,1 @@\n-      rm.Remove(reg);\n+      rm.remove(reg);\n","filename":"test\/hotspot\/gtest\/opto\/test_regmask.cpp","additions":272,"deletions":272,"binary":false,"changes":544,"status":"modified"}]}