{"files":[{"patch":"@@ -224,1 +224,2 @@\n-            writer.tableOfContents.addLink(HtmlIds.forMemberSummary(kind), getSummaryLabel());\n+            writer.tableOfContents.addLink(HtmlIds.forMemberSummary(kind), getSummaryLabel(),\n+                    TableOfContents.Level.FIRST);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -94,2 +94,2 @@\n-            writer.tableOfContents.addLink(HtmlIds.ANNOTATION_TYPE_ELEMENT_DETAIL, contents.annotationTypeDetailsLabel);\n-            writer.tableOfContents.pushNestedList();\n+            writer.tableOfContents.addLink(HtmlIds.ANNOTATION_TYPE_ELEMENT_DETAIL,\n+                    contents.annotationTypeDetailsLabel, TableOfContents.Level.FIRST);\n@@ -105,1 +105,1 @@\n-                        Text.of(name(member)));\n+                        Text.of(name(member)), TableOfContents.Level.SECOND);\n@@ -109,1 +109,0 @@\n-            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeMemberWriter.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -519,1 +519,2 @@\n-        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, contents.descriptionLabel);\n+        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, contents.descriptionLabel,\n+                TableOfContents.Level.FIRST);\n@@ -523,1 +524,0 @@\n-                tableOfContents.pushNestedList();\n@@ -525,1 +525,0 @@\n-                tableOfContents.popNestedList();\n@@ -537,1 +536,0 @@\n-            tableOfContents.pushNestedList();\n@@ -539,1 +537,0 @@\n-            tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriter.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -147,2 +147,2 @@\n-        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, Text.of(resources.getText(\"doclet.Constants_Summary\")))\n-                .pushNestedList();\n+        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, Text.of(resources.getText(\"doclet.Constants_Summary\")),\n+                TableOfContents.Level.FIRST);\n@@ -157,1 +157,0 @@\n-        tableOfContents.popNestedList();\n@@ -344,1 +343,2 @@\n-            tableOfContents.addLink(HtmlIds.UNNAMED_PACKAGE_ANCHOR, contents.defaultPackageLabel);\n+            tableOfContents.addLink(HtmlIds.UNNAMED_PACKAGE_ANCHOR, contents.defaultPackageLabel,\n+                    TableOfContents.Level.SECOND);\n@@ -346,1 +346,2 @@\n-            tableOfContents.addLink(HtmlId.of(abbrevPackageName), Text.of(abbrevPackageName + \".*\"));\n+            tableOfContents.addLink(HtmlId.of(abbrevPackageName), Text.of(abbrevPackageName + \".*\"),\n+                    TableOfContents.Level.SECOND);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriter.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -109,2 +109,2 @@\n-            writer.tableOfContents.addLink(HtmlIds.CONSTRUCTOR_DETAIL, contents.constructorDetailsLabel);\n-            writer.tableOfContents.pushNestedList();\n+            writer.tableOfContents.addLink(HtmlIds.CONSTRUCTOR_DETAIL, contents.constructorDetailsLabel,\n+                    TableOfContents.Level.FIRST);\n@@ -125,1 +125,2 @@\n-                                + utils.makeSignature(currentConstructor, typeElement, false, true)));\n+                                + utils.makeSignature(currentConstructor, typeElement, false, true)),\n+                        TableOfContents.Level.SECOND);\n@@ -129,1 +130,0 @@\n-            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstructorWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -238,0 +238,5 @@\n+        @Override\n+        protected TableOfContents createTableOfContents() {\n+            return null;\n+        }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DocFilesHandler.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -73,2 +73,2 @@\n-            writer.tableOfContents.addLink(HtmlIds.ENUM_CONSTANT_DETAIL, contents.enumConstantDetailLabel);\n-            writer.tableOfContents.pushNestedList();\n+            writer.tableOfContents.addLink(HtmlIds.ENUM_CONSTANT_DETAIL, contents.enumConstantDetailLabel,\n+                    TableOfContents.Level.FIRST);\n@@ -87,1 +87,2 @@\n-                writer.tableOfContents.addLink(htmlIds.forMember(currentElement), Text.of(name(currentElement)));\n+                writer.tableOfContents.addLink(htmlIds.forMember(currentElement), Text.of(name(currentElement)),\n+                        TableOfContents.Level.SECOND);\n@@ -92,1 +93,0 @@\n-            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/EnumConstantWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -84,2 +84,2 @@\n-            writer.tableOfContents.addLink(HtmlIds.FIELD_DETAIL, contents.fieldDetailsLabel);\n-            writer.tableOfContents.pushNestedList();\n+            writer.tableOfContents.addLink(HtmlIds.FIELD_DETAIL, contents.fieldDetailsLabel,\n+                    TableOfContents.Level.FIRST);\n@@ -98,1 +98,2 @@\n-                writer.tableOfContents.addLink(htmlIds.forMember(currentElement), Text.of(name(element)));\n+                writer.tableOfContents.addLink(htmlIds.forMember(currentElement), Text.of(name(element)),\n+                        TableOfContents.Level.SECOND);\n@@ -102,1 +103,0 @@\n-            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/FieldWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -105,2 +105,1 @@\n-        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, mainHeading);\n-        tableOfContents.pushNestedList();\n+        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, mainHeading, TableOfContents.Level.FIRST);\n@@ -119,1 +118,0 @@\n-        tableOfContents.popNestedList();\n@@ -152,2 +150,1 @@\n-        tableOfContents.addLink(HtmlIds.HELP_NAVIGATION, navHeading);\n-        tableOfContents.pushNestedList();\n+        tableOfContents.addLink(HtmlIds.HELP_NAVIGATION, navHeading, TableOfContents.Level.SECOND);\n@@ -197,2 +194,0 @@\n-        tableOfContents.popNestedList();\n-\n@@ -223,2 +218,1 @@\n-        tableOfContents.addLink(HtmlIds.HELP_PAGES, pageKindsHeading);\n-        tableOfContents.pushNestedList();\n+        tableOfContents.addLink(HtmlIds.HELP_PAGES, pageKindsHeading, TableOfContents.Level.SECOND);\n@@ -430,1 +424,0 @@\n-        tableOfContents.popNestedList();\n@@ -447,3 +440,1 @@\n-        tableOfContents.addLink(HtmlIds.HELP_RELEASES, releasesHeading);\n-        tableOfContents.pushNestedList();\n-        tableOfContents.popNestedList();\n+        tableOfContents.addLink(HtmlIds.HELP_RELEASES, releasesHeading, TableOfContents.Level.SECOND);\n@@ -468,1 +459,1 @@\n-        tableOfContents.addLink(id, headingContent);\n+        tableOfContents.addLink(id, headingContent, TableOfContents.Level.THIRD);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -240,1 +240,1 @@\n-        this.tableOfContents = new TableOfContents(this);\n+        this.tableOfContents = createTableOfContents();\n@@ -1566,1 +1566,2 @@\n-                    tableOfContents.addLink(id, Text.of(headingContent));\n+                    tableOfContents.addLink(id, Text.of(headingContent),\n+                            TableOfContents.Level.forHeading(htag));\n@@ -1836,0 +1837,10 @@\n+    \/**\n+     * Creates table of contents for this writer. Can be overridden to return {@code null} in\n+     * subclasses that don't require a table of contents.\n+     *\n+     * @return a table of contents\n+     *\/\n+    protected TableOfContents createTableOfContents() {\n+        return new TableOfContents(this);\n+    }\n+\n@@ -1889,2 +1900,3 @@\n-        if (includeHeadingInTableOfContents(node.getName())) {\n-            tableOfContents.addLink(HtmlId.of(id), Text.of(headingContent));\n+        if (includeHeadingInTableOfContents(tagName)) {\n+            tableOfContents.addLink(HtmlId.of(id), Text.of(headingContent),\n+                    TableOfContents.Level.forHeading(tagName));\n@@ -1894,5 +1906,3 @@\n-    private boolean includeHeadingInTableOfContents(CharSequence tag) {\n-        \/\/ Record second-level headings for use in table of contents\n-        \/\/ TODO: maybe extend this to all headings up to a given level\n-        return tableOfContents != null\n-                && tag.toString().equalsIgnoreCase(\"h2\");\n+    private boolean includeHeadingInTableOfContents(String tag) {\n+        \/\/ Record second- and third-level headings for use in table of contents\n+        return tableOfContents != null &&  (\"h2\".equals(tag) || \"h3\".equals(tag));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -104,2 +104,2 @@\n-            writer.tableOfContents.addLink(HtmlIds.METHOD_DETAIL, contents.methodDetailLabel);\n-            writer.tableOfContents.pushNestedList();\n+            writer.tableOfContents.addLink(HtmlIds.METHOD_DETAIL, contents.methodDetailLabel,\n+                    TableOfContents.Level.FIRST);\n@@ -121,1 +121,2 @@\n-                                + utils.makeSignature(currentMethod, typeElement, false, true)));\n+                                + utils.makeSignature(currentMethod, typeElement, false, true)),\n+                        TableOfContents.Level.SECOND);\n@@ -125,1 +126,0 @@\n-            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -259,1 +259,2 @@\n-        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, contents.navDescription);\n+        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, contents.navDescription,\n+                TableOfContents.Level.FIRST);\n@@ -261,1 +262,0 @@\n-            tableOfContents.pushNestedList();\n@@ -263,1 +263,0 @@\n-            tableOfContents.popNestedList();\n@@ -532,1 +531,1 @@\n-            tableOfContents.addLink(HtmlIds.MODULES, contents.navModules);\n+            tableOfContents.addLink(HtmlIds.MODULES, contents.navModules, TableOfContents.Level.FIRST);\n@@ -577,1 +576,1 @@\n-            tableOfContents.addLink(HtmlIds.PACKAGES, contents.navPackages);\n+            tableOfContents.addLink(HtmlIds.PACKAGES, contents.navPackages, TableOfContents.Level.FIRST);\n@@ -791,1 +790,1 @@\n-            tableOfContents.addLink(HtmlIds.SERVICES, contents.navServices);\n+            tableOfContents.addLink(HtmlIds.SERVICES, contents.navServices, TableOfContents.Level.FIRST);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriter.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -182,1 +182,2 @@\n-        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, contents.navDescription);\n+        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, contents.navDescription,\n+                TableOfContents.Level.FIRST);\n@@ -186,1 +187,0 @@\n-        tableOfContents.pushNestedList();\n@@ -188,1 +188,0 @@\n-        tableOfContents.popNestedList();\n@@ -342,1 +341,2 @@\n-            tableOfContents.addLink(HtmlIds.CLASS_SUMMARY, contents.navClassesAndInterfaces);\n+            tableOfContents.addLink(HtmlIds.CLASS_SUMMARY, contents.navClassesAndInterfaces,\n+                    TableOfContents.Level.FIRST);\n@@ -350,1 +350,2 @@\n-            tableOfContents.addLink(HtmlIds.RELATED_PACKAGE_SUMMARY, contents.relatedPackages);\n+            tableOfContents.addLink(HtmlIds.RELATED_PACKAGE_SUMMARY, contents.relatedPackages,\n+                    TableOfContents.Level.FIRST);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriter.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -78,2 +78,2 @@\n-            writer.tableOfContents.addLink(HtmlIds.PROPERTY_DETAIL, contents.propertyDetailsLabel);\n-            writer.tableOfContents.pushNestedList();\n+            writer.tableOfContents.addLink(HtmlIds.PROPERTY_DETAIL, contents.propertyDetailsLabel,\n+                    TableOfContents.Level.FIRST);\n@@ -93,1 +93,1 @@\n-                        Text.of(utils.getPropertyLabel(name(property))));\n+                        Text.of(utils.getPropertyLabel(name(property))), TableOfContents.Level.SECOND);\n@@ -97,1 +97,0 @@\n-            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PropertyWriter.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+import java.util.Locale;\n+\n@@ -45,0 +47,21 @@\n+    \/**\n+     * Supported hierarchy levels for entries in the table of contents.\n+     *\/\n+    public enum Level {\n+        FIRST,\n+        SECOND,\n+        THIRD;\n+\n+        \/**\n+         * {@return the appropriate level to represent the given HTML heading}\n+         *\/\n+        public static Level forHeading(String tag) {\n+            return switch (tag.toLowerCase(Locale.ROOT)) {\n+                case \"h1\" -> FIRST;\n+                case \"h2\" -> SECOND;\n+                case \"h3\" -> THIRD;\n+                default -> throw new IllegalArgumentException(tag);\n+            };\n+        }\n+    }\n+\n@@ -51,2 +74,1 @@\n-        listBuilder = new ListBuilder(HtmlTree.OL(HtmlStyles.tocList)\n-                .put(HtmlAttr.TABINDEX, \"-1\"));\n+        listBuilder = new ListBuilder(HtmlTag.OL, HtmlStyles.tocList);\n@@ -56,1 +78,2 @@\n-     * Adds a link to the table of contents.\n+     * Adds a link to the table of contents at the given level.\n+     *\n@@ -59,16 +82,1 @@\n-     * @return this object\n-     *\/\n-    public TableOfContents addLink(HtmlId id, Content label) {\n-        listBuilder.add(writer.links.createLink(id, label).put(HtmlAttr.TABINDEX, \"0\"));\n-        return this;\n-    }\n-\n-    \/**\n-     * Adds a new nested list to add new items to.\n-     *\/\n-    public void pushNestedList() {\n-        listBuilder.pushNestedList(HtmlTree.OL(HtmlStyles.tocList));\n-    }\n-\n-    \/**\n-     * Closes the current nested list and go back to the parent list.\n+     * @param level the hierarchical level of the link\n@@ -76,2 +84,3 @@\n-    public void popNestedList() {\n-        listBuilder.popNestedList();\n+    public void addLink(HtmlId id, Content label, Level level) {\n+        listBuilder.addItem(writer.links.createLink(id, label).put(HtmlAttr.TABINDEX, \"0\"),\n+                level.ordinal());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TableOfContents.java","additions":30,"deletions":21,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -470,1 +470,2 @@\n-        sections = [{ id: \"\", top: 0 }].concat(Array.from(main.querySelectorAll(\"section[id], h2[id], h2 a[id], div[id]\"))\n+        sections = [{ id: \"\", top: 0 }].concat(Array.from(main.querySelectorAll(\n+                \"section[id], h2[id], h2 a[id], h3[id], h3 a[id], div[id]\"))\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/script.js.template","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+    private final HtmlTag listTag;\n+    private final HtmlStyle listStyle;\n@@ -45,0 +47,1 @@\n+\n@@ -47,0 +50,1 @@\n+\n@@ -50,0 +54,2 @@\n+    final static int MAX_LEVEL = 5;\n+\n@@ -53,1 +59,2 @@\n-     * @param list the root list element\n+     * @param listTag the tag to use for the list elements\n+     * @param listStyle the style to use for list elements\n@@ -55,3 +62,5 @@\n-    public ListBuilder(HtmlTree list) {\n-        Objects.requireNonNull(list, \"Root list element is required\");\n-        root = currentList = list;\n+    public ListBuilder(HtmlTag listTag, HtmlStyle listStyle) {\n+        Objects.requireNonNull(listTag, \"List tag is required\");\n+        this.listTag = listTag;\n+        this.listStyle = listStyle;\n+        root = currentList = createList().put(HtmlAttr.TABINDEX, \"-1\");\n@@ -61,2 +70,5 @@\n-     * Adds a new list item with the given content to the current list. The last added list item\n-     * will also be used as container when pushing a new nested list.\n+     * Adds a new list item with the given content to the current list at the given nesting level,\n+     * which must be greater than or equal to 0 and less than or equal to {@code MAX_LEVEL}.\n+     * If {@code level} is greater than the current nesting level new sublists are added\n+     * until the level is reached. If {@code level} is less than the current level, sublists\n+     * are closed to reach the level.\n@@ -65,1 +77,1 @@\n-     * @return this list builder\n+     * @param level the level on which to add the item.\n@@ -67,1 +79,10 @@\n-    public ListBuilder add(Content listItemContent) {\n+    public void addItem(Content listItemContent, int level) {\n+        if (level < 0 || level > MAX_LEVEL) {\n+            throw new IllegalArgumentException(String.valueOf(level));\n+        }\n+        while (level > stack.size()) {\n+            pushNestedList();\n+        }\n+        while (level < stack.size()) {\n+            popNestedList();\n+        }\n@@ -70,1 +91,0 @@\n-        return this;\n@@ -78,1 +98,0 @@\n-     * @param list the nested list\n@@ -81,2 +100,4 @@\n-    public ListBuilder pushNestedList(HtmlTree list) {\n-        Objects.requireNonNull(currentItem, \"List item required for nested list\");\n+    public ListBuilder pushNestedList() {\n+        if (currentItem == null) {\n+            currentItem = HtmlTree.LI();\n+        }\n@@ -84,1 +105,1 @@\n-        currentList = list;\n+        currentList = createList();\n@@ -106,0 +127,3 @@\n+        while (!stack.isEmpty()) {\n+            popNestedList();\n+        }\n@@ -113,0 +137,8 @@\n+\n+    private HtmlTree createList() {\n+        var list = HtmlTree.of(listTag);\n+        if (listStyle != null) {\n+            list.setStyle(listStyle);\n+        }\n+        return list;\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/html\/ListBuilder.java","additions":45,"deletions":13,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug      8298405\n+ * @bug      8298405 8352511\n@@ -290,0 +290,4 @@\n+                    \/\/\/ ### ATX Level 3 Heading\n+                    \/\/\/\n+                    \/\/\/ Lorem ipsum\n+                    \/\/\/\n@@ -315,1 +319,1 @@\n-                \/\/ note only the level 1 headings in the class description\n+                \/\/ note only the level 1 and 2 headings in the class description\n@@ -320,2 +324,10 @@\n-                    <li><a href=\"#atx-heading-code-underline-text-heading\" tabindex=\"0\">ATX heading code underline text<\/a><\/li>\n-                    <li><a href=\"#setext-heading-heading\" tabindex=\"0\">Setext heading<\/a><\/li>\n+                    <li><a href=\"#atx-heading-code-underline-text-heading\" tabindex=\"0\">ATX heading code underline text<\/a>\n+                    <ol class=\"toc-list\">\n+                    <li><a href=\"#atx-subheading-heading\" tabindex=\"0\">ATX Subheading<\/a><\/li>\n+                    <\/ol>\n+                    <\/li>\n+                    <li><a href=\"#setext-heading-heading\" tabindex=\"0\">Setext heading<\/a>\n+                    <ol class=\"toc-list\">\n+                    <li><a href=\"#setext-subheading-heading\" tabindex=\"0\">Setext subheading<\/a><\/li>\n+                    <\/ol>\n+                    <\/li>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMarkdown\/TestMarkdownHeadings.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug      8352511\n+ * @summary  Show additional level of headings in table of contents\n+ * @library  \/tools\/lib ..\/..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    toolbox.ToolBox javadoc.tester.*\n+ * @run main TestTOCHeadings\n+ *\/\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+import java.nio.file.Path;\n+\n+public class TestTOCHeadings extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        var tester = new TestTOCHeadings();\n+        tester.runTests();\n+    }\n+\n+    ToolBox tb = new ToolBox();\n+\n+    @Test\n+    public void testHeadings(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                    package p;\n+                    \/**\n+                     * <h1>First Level Heading<\/h1>\n+                     *\n+                     * Lorem ipsum\n+                     *\n+                     * <h2>Second Level Heading<\/h2>\n+                     *\n+                     * Lorem ipsum\n+                     *\n+                     * <h3>Third Level Heading<\/h3>\n+                     *\n+                     * Lorem ipsum\n+                     *\n+                     * <h2>Other Second Level Heading<\/h2>\n+                     *\n+                     * Lorem ipsum\n+                     *\n+                     * <h3>Other Third Level Heading<\/h3>\n+                     *\n+                     * Lorem ipsum\n+                     *\n+                     * <h4>Fourth Level Heading<\/h4>\n+                     *\n+                     * Lorem ipsum\n+                     *\n+                     * <h5>Fifth Level Heading<\/h5>\n+                     *\n+                     * Lorem ipsum\n+                     *\n+                     * <h6>Sixth Level Heading<\/h6>\n+                     *\n+                     * Lorem ipsum\n+                     *\/\n+                    public class C {\n+                        \/**\n+                         * Method m.\n+                         *\n+                         * <h4>Subheading in m()<\/h4>\n+                         *\n+                         * Lorem ipsum\n+                         *\/\n+                        public void m() { }\n+                    }\"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-Xdoclint:none\",\n+                \"--no-platform-links\",\n+                \"--source-path\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \/\/ note only the level 2 and 3 headings in the class description\n+                \"\"\"\n+                    <ol class=\"toc-list\" tabindex=\"-1\">\n+                    <li><a href=\"#\" tabindex=\"0\">Description<\/a>\n+                    <ol class=\"toc-list\">\n+                    <li><a href=\"#second-level-heading-heading\" tabindex=\"0\">Second Level Heading<\/a>\n+                    <ol class=\"toc-list\">\n+                    <li><a href=\"#third-level-heading-heading\" tabindex=\"0\">Third Level Heading<\/a><\/li>\n+                    <\/ol>\n+                    <\/li>\n+                    <li><a href=\"#other-second-level-heading-heading\" tabindex=\"0\">Other Second Level Heading<\/a>\n+                    <ol class=\"toc-list\">\n+                    <li><a href=\"#other-third-level-heading-heading\" tabindex=\"0\">Other Third Level Heading<\/a><\/li>\n+                    <\/ol>\n+                    <\/li>\n+                    <\/ol>\n+                    <\/li>\n+                    <li><a href=\"#constructor-summary\" tabindex=\"0\">Constructor Summary<\/a><\/li>\n+                    <li><a href=\"#method-summary\" tabindex=\"0\">Method Summary<\/a><\/li>\n+                    <li><a href=\"#constructor-detail\" tabindex=\"0\">Constructor Details<\/a>\n+                    <ol class=\"toc-list\">\n+                    <li><a href=\"#%3Cinit%3E()\" tabindex=\"0\">C()<\/a><\/li>\n+                    <\/ol>\n+                    <\/li>\n+                    <li><a href=\"#method-detail\" tabindex=\"0\">Method Details<\/a>\n+                    <ol class=\"toc-list\">\n+                    <li><a href=\"#m()\" tabindex=\"0\">m()<\/a><\/li>\n+                    <\/ol>\n+                    <\/li>\n+                    <\/ol>\n+                    \"\"\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testTOCHeadings\/TestTOCHeadings.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"}]}