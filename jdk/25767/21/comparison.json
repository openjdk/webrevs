{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,0 +64,5 @@\n+ * If the image source parameter to a constructor or method is non-null,\n+ * but does not reference valid accessible image data,\n+ * no exceptions will be thrown but the image will be unset,\n+ * as it will have no dimensions and never be drawn, and\n+ * {@code getImageLoadStatus()} will report {@see java.awt.MediaTracker#ERRORED}.\n@@ -181,0 +186,1 @@\n+     * @throws {@code NullPointerException} if (@code null) URL is passed.\n@@ -200,0 +206,1 @@\n+     * @throws {@code NullPointerException} if (@code null) URL is passed.\n@@ -210,0 +217,1 @@\n+     * @throws {@code NullPointerException} if (@code null) Image is passed.\n@@ -221,0 +229,1 @@\n+     * @throws {@code NullPointerException} if (@code null) Image is passed.\n@@ -244,0 +253,1 @@\n+     * @throws {@code NullPointerException} if (@code null) imageData is passed.\n@@ -267,0 +277,1 @@\n+     * @throws {@code NullPointerException} if (@code null) imageData is passed.\n@@ -371,0 +382,1 @@\n+     * @throws {@code NullPointerException} if (@code null) Image is passed.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/ImageIcon.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,123 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8159055\n+ * @summary Verifies ImageIcon.setImage handles null parameter\n+ * @run main ImageIconTest\n+ *\/\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.net.URL;\n+import java.util.Random;\n+import java.awt.Image;\n+import java.awt.Toolkit;\n+import javax.swing.ImageIcon;\n+\n+public class ImageIconTest {\n+\n+    static enum ArgType { FILE, URL, BYTE_ARRAY, IMAGE, SET_IMAGE };\n+    static enum ArgVal { NULL, INVALID_DATA };\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        String imgName = \"invalid.gif\";\n+        byte[] invalidData = new byte[100];\n+        new Random().nextBytes(invalidData);\n+        try (FileOutputStream fos = new FileOutputStream(imgName)) {\n+            fos.write(invalidData);\n+        }\n+        String fileName = (new File(System.getProperty(\"test.src\", \".\"), imgName)).getName();\n+\n+        for (ArgType a : ArgType.values()) {\n+            for (final ArgVal v : ArgVal.values()) {\n+                System.out.println(\"Testing for ArgType \" + a + \" for case \" + v);\n+                boolean expected = true;\n+                boolean passed = false;\n+                try {\n+                    switch (a) {\n+                       case FILE :\n+                           expected = false;\n+                           String s = (v == ArgVal.NULL) ? null : fileName;\n+                           new ImageIcon(s);\n+                           passed = true; \/\/ no exception expected for this case\n+                           break;\n+                       case URL :\n+                           if (v == ArgVal.NULL) {\n+                               new ImageIcon((URL)null);\n+                           } else if (v == ArgVal.INVALID_DATA) {\n+                               expected = false;\n+                               new ImageIcon(\"file:\/\/\" + imgName, \"gif\");\n+                               passed = true; \/\/ no exception expected for this case\n+                           }\n+                           break;\n+                       case BYTE_ARRAY :\n+                           if (v == ArgVal.NULL) {\n+                               byte[] bytes = null;\n+                               new ImageIcon(bytes);\n+                           } else if (v == ArgVal.INVALID_DATA) {\n+                               expected = false;\n+                               new ImageIcon(new byte[0], \"gif\");\n+                               passed = true; \/\/ no exception expected for this case\n+                           }\n+                           break;\n+                       case IMAGE :\n+                           if (v == ArgVal.NULL) {\n+                               new ImageIcon((Image)null);\n+                           } else if (v == ArgVal.INVALID_DATA) {\n+                               expected = false;\n+                               new ImageIcon((Image)Toolkit.getDefaultToolkit().createImage(fileName), \"gif\");\n+                               passed = true; \/\/ no exception expected for this case\n+                           }\n+                           break;\n+                        case SET_IMAGE :\n+                            ImageIcon ii = new ImageIcon();\n+                            if (v == ArgVal.NULL) {\n+                                ii.setImage((Image)null);\n+                            } else if (v == ArgVal.INVALID_DATA) {\n+                                expected = false;\n+                                ii.setImage((Image)Toolkit.getDefaultToolkit().createImage(fileName));\n+                                passed = true; \/\/ no exception expected for this case\n+                            }\n+                            break;\n+                    }\n+                } catch (NullPointerException e) {\n+                    if (expected) {\n+                        passed = true;\n+                    }\n+                }\n+                if (expected && !passed) {\n+                   System.err.println(\"Did not receive expected exception for : \" + a);\n+                   throw new RuntimeException(\"Test failed\");\n+                }\n+                if (!expected && !passed) {\n+                   System.err.println(\"Received unexpected exception for : \" + a);\n+                   throw new RuntimeException(\"Test failed\");\n+                }\n+            }\n+        }\n+\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/ImageIcon\/ImageIconTest.java","additions":123,"deletions":0,"binary":false,"changes":123,"status":"added"}]}