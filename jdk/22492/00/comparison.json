{"files":[{"patch":"@@ -102,1 +102,0 @@\n-    public static final int TGS_DEFAULT_NT = KRB_NT_SRV_INST;\n@@ -110,1 +109,0 @@\n-    public static final String REALM_COMPONENT_SEPARATOR_STR = \".\";\n@@ -138,6 +136,0 @@\n-    \/**\n-     * When constructing a PrincipalName, whether the realm is included in\n-     * the input, or deduced from default realm or domain-realm mapping.\n-     *\/\n-    private final boolean realmDeduced;\n-\n@@ -164,1 +156,0 @@\n-        this.realmDeduced = false;\n@@ -254,1 +245,0 @@\n-        realmDeduced = false;\n@@ -408,3 +398,0 @@\n-        \/\/ No realm info from parameter and string, must deduce later\n-        realmDeduced = realm == null;\n-\n@@ -440,2 +427,2 @@\n-                    } catch (UnknownHostException | SecurityException e) {\n-                        \/\/ not canonicalized or no permission to do so, use old\n+                    } catch (UnknownHostException e) {\n+                        \/\/ not canonicalized, use old\n@@ -729,4 +716,0 @@\n-\n-    public boolean isRealmDeduced() {\n-        return realmDeduced;\n-    }\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/PrincipalName.java","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -50,3 +50,0 @@\n-    public static final boolean AUTODEDUCEREALM =\n-            Boolean.getBoolean(\"sun.security.krb5.autodeducerealm\");\n-\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/Realm.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,6 +44,6 @@\n-        checkName(\"a\", type, \"R\", \"R\", false, \"a\");\n-        checkName(\"a@R2\", type, \"R\", \"R\", false, \"a\");\n-        checkName(\"a\/b\", type, \"R\", \"R\", false, \"a\", \"b\");\n-        checkName(\"a\/b@R2\", type, \"R\", \"R\", false, \"a\", \"b\");\n-        checkName(\"a\/b\/c\", type, \"R\", \"R\", false, \"a\", \"b\", \"c\");\n-        checkName(\"a\/b\/c@R2\", type, \"R\", \"R\", false, \"a\", \"b\", \"c\");\n+        checkName(\"a\", type, \"R\", \"R\", \"a\");\n+        checkName(\"a@R2\", type, \"R\", \"R\", \"a\");\n+        checkName(\"a\/b\", type, \"R\", \"R\", \"a\", \"b\");\n+        checkName(\"a\/b@R2\", type, \"R\", \"R\", \"a\", \"b\");\n+        checkName(\"a\/b\/c\", type, \"R\", \"R\", \"a\", \"b\", \"c\");\n+        checkName(\"a\/b\/c@R2\", type, \"R\", \"R\", \"a\", \"b\", \"c\");\n@@ -51,3 +51,3 @@\n-        checkName(\"a\\\\\/b\", type, \"R\", \"R\", false, \"a\/b\");\n-        checkName(\"a\\\\\/b\\\\\/c\", type, \"R\", \"R\", false, \"a\/b\/c\");\n-        checkName(\"a\\\\\/b\\\\@R2\", type, \"R\", \"R\", false, \"a\/b@R2\");\n+        checkName(\"a\\\\\/b\", type, \"R\", \"R\", \"a\/b\");\n+        checkName(\"a\\\\\/b\\\\\/c\", type, \"R\", \"R\", \"a\/b\/c\");\n+        checkName(\"a\\\\\/b\\\\@R2\", type, \"R\", \"R\", \"a\/b@R2\");\n@@ -55,6 +55,5 @@\n-        checkName(\"a\", type, \"\", null, false);\n-        checkName(\"a\/\", type, \"R\", null, false);\n-        checkName(\"\/a\", type, \"R\", null, false);\n-        checkName(\"a\/\/b\", type, \"R\", null, false);\n-        checkName(\"a@\", type, null, null, false);\n-        type = PrincipalName.KRB_NT_SRV_HST;\n+        checkName(\"a\", type, \"\", null);\n+        checkName(\"a\/\", type, \"R\", null);\n+        checkName(\"\/a\", type, \"R\", null);\n+        checkName(\"a\/\/b\", type, \"R\", null);\n+        checkName(\"a@\", type, null, null);\n@@ -81,5 +80,5 @@\n-            checkName(\"a\", type, \"R1\", \"R1\", false, \"a\");      \/\/ arg\n-            checkName(\"a@R1\", type, null, \"R1\", false, \"a\");   \/\/ or r in name\n-            checkName(\"a@R2\", type, \"R1\", \"R1\", false, \"a\");   \/\/ arg over r\n-            checkName(\"a\", type, null, null, false);      \/\/ fail if none\n-            checkName(\"a\/b@R1\", type, null, \"R1\", false, \"a\", \"b\");\n+            checkName(\"a\", type, \"R1\", \"R1\", \"a\");      \/\/ arg\n+            checkName(\"a@R1\", type, null, \"R1\", \"a\");   \/\/ or r in name\n+            checkName(\"a@R2\", type, \"R1\", \"R1\", \"a\");   \/\/ arg over r\n+            checkName(\"a\", type, null, null);      \/\/ fail if none\n+            checkName(\"a\/b@R1\", type, null, \"R1\", \"a\", \"b\");\n@@ -88,4 +87,4 @@\n-            checkName(\"a\/b.h\", type, \"R1\", \"R1\", false, \"a\", \"b.h\");    \/\/ arg\n-            checkName(\"a\/b.h@R1\", type, null, \"R1\", false, \"a\", \"b.h\"); \/\/ or r in name\n-            checkName(\"a\/b.h@R1\", type, \"R2\", \"R2\", false, \"a\", \"b.h\"); \/\/ arg over r\n-            checkName(\"a\/b.h\", type, null, null, false);    \/\/ fail if none\n+            checkName(\"a\/b.h\", type, \"R1\", \"R1\", \"a\", \"b.h\");    \/\/ arg\n+            checkName(\"a\/b.h@R1\", type, null, \"R1\", \"a\", \"b.h\"); \/\/ or r in name\n+            checkName(\"a\/b.h@R1\", type, \"R2\", \"R2\", \"a\", \"b.h\"); \/\/ arg over r\n+            checkName(\"a\/b.h\", type, null, null);    \/\/ fail if none\n@@ -100,5 +99,5 @@\n-        checkName(\"a\", type, \"R1\", \"R1\", false, \"a\");      \/\/ arg\n-        checkName(\"a@R1\", type, null, \"R1\", false, \"a\");   \/\/ or r in name\n-        checkName(\"a@R2\", type, \"R1\", \"R1\", false, \"a\");   \/\/ arg over r\n-        checkName(\"a\", type, null, \"R\", true, \"a\");       \/\/ default\n-        checkName(\"a\/b\", type, null, \"R\", true, \"a\", \"b\");\n+        checkName(\"a\", type, \"R1\", \"R1\", \"a\");      \/\/ arg\n+        checkName(\"a@R1\", type, null, \"R1\", \"a\");   \/\/ or r in name\n+        checkName(\"a@R2\", type, \"R1\", \"R1\", \"a\");   \/\/ arg over r\n+        checkName(\"a\", type, null, \"R\", \"a\");       \/\/ default\n+        checkName(\"a\/b\", type, null, \"R\", \"a\", \"b\");\n@@ -106,7 +105,7 @@\n-        checkName(\"a\/b.h3\", type, \"R1\", \"R1\", false, \"a\", \"b.h3\");     \/\/ arg\n-        checkName(\"a\/b.h@R1\", type, null, \"R1\", false, \"a\", \"b.h\");    \/\/ or r in name\n-        checkName(\"a\/b.h3@R2\", type, \"R1\", \"R1\", false, \"a\", \"b.h3\");  \/\/ arg over r\n-        checkName(\"a\/b.h2\", type, \"R1\", \"R1\", false, \"a\", \"b.h2\");     \/\/ arg over map\n-        checkName(\"a\/b.h2@R1\", type, null, \"R1\", false, \"a\", \"b.h2\");  \/\/ r over map\n-        checkName(\"a\/b.h2\", type, null, \"R2\", true, \"a\", \"b.h2\");     \/\/ map\n-        checkName(\"a\/b.h\", type, null, \"R\", true, \"a\", \"b.h\");        \/\/ default\n+        checkName(\"a\/b.h3\", type, \"R1\", \"R1\", \"a\", \"b.h3\");     \/\/ arg\n+        checkName(\"a\/b.h@R1\", type, null, \"R1\", \"a\", \"b.h\");    \/\/ or r in name\n+        checkName(\"a\/b.h3@R2\", type, \"R1\", \"R1\", \"a\", \"b.h3\");  \/\/ arg over r\n+        checkName(\"a\/b.h2\", type, \"R1\", \"R1\", \"a\", \"b.h2\");     \/\/ arg over map\n+        checkName(\"a\/b.h2@R1\", type, null, \"R1\", \"a\", \"b.h2\");  \/\/ r over map\n+        checkName(\"a\/b.h2\", type, null, \"R2\", \"a\", \"b.h2\");     \/\/ map\n+        checkName(\"a\/b.h\", type, null, \"R\", \"a\", \"b.h\");        \/\/ default\n@@ -118,1 +117,1 @@\n-            String realm, boolean deduced, String... parts)\n+            String realm, String... parts)\n@@ -135,3 +134,0 @@\n-        if (deduced != pn.isRealmDeduced()) {\n-            throw new Exception(\"pn.realmDeduced is \" + pn.isRealmDeduced());\n-        }\n","filename":"test\/jdk\/sun\/security\/krb5\/name\/Constructors.java","additions":37,"deletions":41,"binary":false,"changes":78,"status":"modified"}]}