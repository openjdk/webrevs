{"files":[{"patch":"@@ -792,0 +792,4 @@\n+                                                                            \\\n+  develop(bool, UseStoreStoreForCtor, true,                                 \\\n+          \"Use storestore barrier instead of release barrier for\"           \\\n+          \"on constructor exit\")                                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -264,0 +264,1 @@\n+    MemBarNode::print_statistics();\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -139,0 +139,9 @@\n+int MemBarNode::_barriers_generated = 0;\n+int MemBarNode::_barriers_eliminated = 0;\n+\n+void MemBarNode::print_statistics() {\n+  tty->print_cr(\"Barriers generated = %d, Barriers eliminated = %d\",\n+                Atomic::load(&_barriers_generated),\n+                Atomic::load(&_barriers_eliminated));\n+}\n+\n@@ -3345,0 +3354,1 @@\n+  NOT_PRODUCT(Atomic::inc(&MemBarNode::_barriers_generated));\n@@ -3380,0 +3390,1 @@\n+  NOT_PRODUCT(Atomic::inc(&MemBarNode::_barriers_eliminated));\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1202,0 +1202,5 @@\n+#ifndef PRODUCT\n+  static int _barriers_generated;\n+  static int _barriers_eliminated;\n+  static void print_statistics();\n+#endif\n","filename":"src\/hotspot\/share\/opto\/memnode.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1019,1 +1019,3 @@\n-    _exits.insert_mem_bar(Op_MemBarStoreStore, alloc_with_final());\n+    _exits.insert_mem_bar(UseStoreStoreForCtor ? Op_MemBarStoreStore\n+                                               : Op_MemBarRelease,\n+                          alloc_with_final());\n","filename":"src\/hotspot\/share\/opto\/parse1.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -242,3 +242,1 @@\n-    @IR(failOn = IRNode.MEMBAR_RELEASE)\n-    @IR(failOn = IRNode.MEMBAR_STORESTORE)\n-    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR)\n@@ -253,1 +251,2 @@\n-    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"1\"})\n@@ -262,1 +261,2 @@\n-    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"1\"})\n@@ -271,1 +271,2 @@\n-    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"2\"})\n@@ -280,1 +281,2 @@\n-    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"1\"})\n@@ -289,1 +291,2 @@\n-    @IR(failOn = IRNode.MEMBAR_RELEASE)\n+    @IR(failOn = IRNode.MEMBAR_VOLATILE)\n+    @IR(counts = {IRNode.MEMBAR_ACQUIRE, \"1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/ConstructorBarriers.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -880,0 +880,5 @@\n+    public static final String MEMBAR_ACQUIRE = PREFIX + \"MEMBAR_ACQUIRE\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(MEMBAR_ACQUIRE, \"MemBarAcquire\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}