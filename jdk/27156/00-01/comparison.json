{"files":[{"patch":"@@ -103,0 +103,6 @@\n+        inactiveFrame.addWindowListener(new WindowAdapter() {\n+            public void windowActivated(WindowEvent e) {\n+                System.err.println(\"inactive Window activated\");\n+                sema.raise();\n+            }\n+        });\n@@ -110,1 +116,0 @@\n-        activeFrame.setVisible(true);\n@@ -116,0 +121,17 @@\n+        \/\/ Wait for inactive frame to become active\n+        try {\n+            sema.doWait(TIMEOUT);\n+        } catch (InterruptedException ie) {\n+            throw new RuntimeException(\"Wait was interrupted\");\n+        }\n+        if (!sema.getState()) {\n+            throw new RuntimeException(\"Frame doesn't become active on show\");\n+        }\n+        sema.setState(false);\n+\n+        try {\n+            EventQueue.invokeAndWait(() -> activeFrame.setVisible(true));\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"Interrupted active frame rendering\");\n+        }\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/InactiveFocusRace.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"}]}