{"files":[{"patch":"@@ -1554,6 +1554,1 @@\n-                \/* it could be that a record erroneously declares two record components with the same name, in that\n-                 * case we need to use the position to disambiguate, but if we loaded the record from a class file\n-                 * all positions will be -1, in that case we have to ignore the position and match only based on the\n-                 * name\n-                 *\/\n-                if (rc.name == var.name && (var.pos == rc.pos || rc.pos == -1)) {\n+                if (rc.name == var.name) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1142,1 +1142,2 @@\n-                                    (recordComponents.head.isVarargs() != paramIsVarArgs)) {\n+                                    (recordComponents.head != null &&\n+                                            recordComponents.head.isVarargs() != paramIsVarArgs)) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1066,1 +1066,1 @@\n-                     *  First, we find the record component by comparing its name and position with current field,\n+                     *  First, we find the record component by comparing its name with current field,\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+ *      8332600\n","filename":"test\/langtools\/tools\/javac\/records\/RecordCompilationTests.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}