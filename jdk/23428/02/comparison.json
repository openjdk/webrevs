{"files":[{"patch":"@@ -116,0 +116,3 @@\n+\n+  ShenandoahThreadLocalData::set_gc_state(thread, _heap->gc_state());\n+\n@@ -117,1 +120,0 @@\n-    ShenandoahThreadLocalData::set_gc_state(thread, _heap->gc_state());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1265,5 +1265,12 @@\n-  \/\/ It's possible that evacuation succeeded, but we could still be cancelled when we get here.\n-  \/\/ A cancellation at this point means the degenerated cycle must resume from update-refs.\n-  set_gc_state_concurrent(EVACUATION, false);\n-  set_gc_state_concurrent(WEAK_ROOTS, false);\n-  set_gc_state_concurrent(UPDATE_REFS, true);\n+  {\n+    \/\/ Java threads take this lock while they are being attached and added to the list of thread.\n+    \/\/ If another thread holds this lock before we update the gc state, it will receive a stale\n+    \/\/ gc state, but they will have been added to the list of java threads and so will be corrected\n+    \/\/ by the following handshake.\n+    MutexLocker lock(Threads_lock);\n+\n+    \/\/ A cancellation at this point means the degenerated cycle must resume from update-refs.\n+    set_gc_state_concurrent(EVACUATION, false);\n+    set_gc_state_concurrent(WEAK_ROOTS, false);\n+    set_gc_state_concurrent(UPDATE_REFS, true);\n+  }\n@@ -2028,0 +2035,6 @@\n+  \/\/ Holding the thread lock here assures that any thread created after we change the gc\n+  \/\/ state will have the correct state. It also prevents attaching threads from seeing\n+  \/\/ an inconsistent state. See ShenandoahBarrierSet::on_thread_attach for reference. Established\n+  \/\/ threads will use their thread local copy of the gc state (changed by a handshake, or on a\n+  \/\/ safepoint).\n+  assert(Threads_lock->is_locked(), \"Must hold thread lock for concurrent gc state change\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"}]}