{"files":[{"patch":"@@ -196,4 +196,4 @@\n-void G1CollectedHeap::reset_humongous_metadata(HeapRegion* first_hr,\n-                                               uint num_regions,\n-                                               size_t word_size,\n-                                               bool update_remsets) {\n+void G1CollectedHeap::set_humongous_metadata(HeapRegion* first_hr,\n+                                             uint num_regions,\n+                                             size_t word_size,\n+                                             bool update_remsets) {\n@@ -318,1 +318,1 @@\n-  reset_humongous_metadata(first_hr, num_regions, word_size, true);\n+  set_humongous_metadata(first_hr, num_regions, word_size, true);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -609,4 +609,4 @@\n-  void reset_humongous_metadata(HeapRegion* first_hr,\n-                                uint num_regions,\n-                                size_t word_size,\n-                                bool update_remsets);\n+  void set_humongous_metadata(HeapRegion* first_hr,\n+                              uint num_regions,\n+                              size_t word_size,\n+                              bool update_remsets);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-  _g1h->reset_humongous_metadata(_g1h->region_at(dest_start_idx), num_regions, word_size, false);\n+  _g1h->set_humongous_metadata(_g1h->region_at(dest_start_idx), num_regions, word_size, false);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,3 +160,1 @@\n-  Pair<uint, uint> range = find_contiguous_before(hr, num_regions);\n-  uint range_begin = range.first;\n-  uint range_end = range.second;\n+  uint range_begin = find_contiguous_before(hr, num_regions);\n@@ -164,1 +162,1 @@\n-  if (range_begin == range_end) {\n+  if (range_begin == UINT_MAX) {\n@@ -185,1 +183,1 @@\n-Pair<uint, uint> G1FullGCCompactionPoint::find_contiguous_before(HeapRegion* hr, uint num_regions) {\n+uint G1FullGCCompactionPoint::find_contiguous_before(HeapRegion* hr, uint num_regions) {\n@@ -191,1 +189,1 @@\n-    return Pair<uint, uint> (0, 1);\n+    return 0;\n@@ -209,4 +207,4 @@\n-      hr->hrm_index() -  _compaction_regions->at(range_end-1)->hrm_index() != 1) {\n-    \/\/ We reached the end but the final region is not contiguous with the target region,\n-    \/\/ reset the length to 1.\n-    contiguous_region_count = 1;\n+      hr->hrm_index() - _compaction_regions->at(range_end-1)->hrm_index() != 1) {\n+    \/\/ We reached the end but the final region is not contiguous with the target region;\n+    \/\/ no contiguous regions to move to.\n+    return UINT_MAX;\n@@ -214,2 +212,2 @@\n-  \/\/ Return the indices of the first and last contiguous regions.\n-  return Pair<uint, uint> (range_end - contiguous_region_count, range_end - 1);\n+  \/\/ Return the index of the first region in the range of contiguous regions.\n+  return range_end - contiguous_region_count;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.cpp","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  Pair<uint, uint> find_contiguous_before(HeapRegion* hr, uint num_regions);\n+  uint find_contiguous_before(HeapRegion* hr, uint num_regions);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}