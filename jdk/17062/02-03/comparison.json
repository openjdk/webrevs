{"files":[{"patch":"@@ -223,1 +223,1 @@\n-            writer.addToTableOfContents(HtmlIds.forMemberSummary(kind), getSummaryLabel());\n+            writer.tableOfContents.addLink(HtmlIds.forMemberSummary(kind), getSummaryLabel());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,2 +93,2 @@\n-            writer.addToTableOfContents(HtmlIds.ANNOTATION_TYPE_ELEMENT_DETAIL, contents.annotationTypeDetailsLabel);\n-            writer.tocBuilder.pushNested(HtmlTree.OL(HtmlStyle.tocList));\n+            writer.tableOfContents.addLink(HtmlIds.ANNOTATION_TYPE_ELEMENT_DETAIL, contents.annotationTypeDetailsLabel);\n+            writer.tableOfContents.pushNestedList();\n@@ -103,1 +103,1 @@\n-                writer.addToTableOfContents(htmlIds.forMember(typeElement, (ExecutableElement) member),\n+                writer.tableOfContents.addLink(htmlIds.forMember(typeElement, (ExecutableElement) member),\n@@ -108,1 +108,1 @@\n-            writer.tocBuilder.popNested();\n+            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AnnotationTypeMemberWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,1 +54,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ListBuilder;\n@@ -100,1 +99,1 @@\n-        tocBuilder = new ListBuilder(HtmlTree.OL(HtmlStyle.tocList));\n+        tableOfContents = new TableOfContents(this);\n@@ -501,1 +500,1 @@\n-        addToTableOfContents(HtmlIds.TOP_OF_PAGE, contents.descriptionLabel);\n+        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, contents.descriptionLabel);\n@@ -505,0 +504,1 @@\n+                tableOfContents.pushNestedList();\n@@ -506,1 +506,1 @@\n-                addToTableOfContents(headings);\n+                tableOfContents.popNestedList();\n@@ -518,0 +518,1 @@\n+            tableOfContents.pushNestedList();\n@@ -519,0 +520,1 @@\n+            tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriter.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ListBuilder;\n@@ -54,1 +53,0 @@\n-import jdk.javadoc.internal.doclets.toolkit.util.DocLink;\n@@ -114,1 +112,1 @@\n-        this.tocBuilder = new ListBuilder(HtmlTree.OL(HtmlStyle.tocList));\n+        this.tableOfContents = new TableOfContents(this);\n@@ -149,3 +147,2 @@\n-        tocBuilder.add(links.createLink(DocLink.fragment(\"\"),\n-                        Text.of(resources.getText(\"doclet.Constants_Summary\"))))\n-                .pushNested(HtmlTree.OL(HtmlStyle.tocList));\n+        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, Text.of(resources.getText(\"doclet.Constants_Summary\")))\n+                .pushNestedList();\n@@ -156,1 +153,1 @@\n-                addLinkToPackageContent(abbrevPackageName);\n+                addLinkToTableOfContents(abbrevPackageName);\n@@ -160,1 +157,2 @@\n-        bodyContents.setSideContent(getSideBar(tocBuilder, true));\n+        tableOfContents.popNestedList();\n+        bodyContents.setSideContent(tableOfContents.getSideBar(true));\n@@ -340,1 +338,1 @@\n-     Content getContentsHeader() {\n+    Content getContentsHeader() {\n@@ -344,3 +342,1 @@\n-     void addLinkToPackageContent(String abbrevPackageName) {\n-        \/\/add link to summary\n-        Content link;\n+    void addLinkToTableOfContents(String abbrevPackageName) {\n@@ -348,2 +344,1 @@\n-            link = links.createLink(HtmlIds.UNNAMED_PACKAGE_ANCHOR,\n-                    contents.defaultPackageLabel, \"\");\n+            tableOfContents.addLink(HtmlIds.UNNAMED_PACKAGE_ANCHOR, contents.defaultPackageLabel);\n@@ -351,3 +346,1 @@\n-            Content packageNameContent = Text.of(abbrevPackageName + \".*\");\n-            link = links.createLink(DocLink.fragment(abbrevPackageName),\n-                    packageNameContent, \"\");\n+            tableOfContents.addLink(HtmlId.of(abbrevPackageName), Text.of(abbrevPackageName + \".*\"));\n@@ -355,1 +348,0 @@\n-        tocBuilder.add(link);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriter.java","additions":10,"deletions":18,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -105,2 +105,2 @@\n-            writer.addToTableOfContents(HtmlIds.CONSTRUCTOR_DETAIL, contents.constructorDetailsLabel);\n-            writer.tocBuilder.pushNested(HtmlTree.OL(HtmlStyle.tocList));\n+            writer.tableOfContents.addLink(HtmlIds.CONSTRUCTOR_DETAIL, contents.constructorDetailsLabel);\n+            writer.tableOfContents.pushNestedList();\n@@ -119,1 +119,1 @@\n-                writer.addToTableOfContents(htmlIds.forMember(currentConstructor),\n+                writer.tableOfContents.addLink(htmlIds.forMember(currentConstructor),\n@@ -125,1 +125,1 @@\n-            writer.tocBuilder.popNested();\n+            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstructorWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -72,2 +72,2 @@\n-            writer.addToTableOfContents(HtmlIds.ENUM_CONSTANT_DETAIL, contents.enumConstantDetailLabel);\n-            writer.tocBuilder.pushNested(HtmlTree.OL(HtmlStyle.tocList));\n+            writer.tableOfContents.addLink(HtmlIds.ENUM_CONSTANT_DETAIL, contents.enumConstantDetailLabel);\n+            writer.tableOfContents.pushNestedList();\n@@ -86,1 +86,1 @@\n-                writer.addToTableOfContents(htmlIds.forMember(currentElement), Text.of(name(currentElement)));\n+                writer.tableOfContents.addLink(htmlIds.forMember(currentElement), Text.of(name(currentElement)));\n@@ -91,1 +91,1 @@\n-            writer.tocBuilder.popNested();\n+            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/EnumConstantWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -82,2 +82,2 @@\n-            writer.addToTableOfContents(HtmlIds.FIELD_DETAIL, contents.fieldDetailsLabel);\n-            writer.tocBuilder.pushNested(HtmlTree.OL(HtmlStyle.tocList));\n+            writer.tableOfContents.addLink(HtmlIds.FIELD_DETAIL, contents.fieldDetailsLabel);\n+            writer.tableOfContents.pushNestedList();\n@@ -96,1 +96,1 @@\n-                writer.addToTableOfContents(htmlIds.forMember(currentElement), Text.of(name(element)));\n+                writer.tableOfContents.addLink(htmlIds.forMember(currentElement), Text.of(name(element)));\n@@ -100,1 +100,1 @@\n-            writer.tocBuilder.popNested();\n+            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/FieldWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ListBuilder;\n@@ -40,1 +39,0 @@\n-import jdk.javadoc.internal.doclets.toolkit.util.DocLink;\n@@ -77,1 +75,1 @@\n-        tocBuilder = new ListBuilder(HtmlTree.OL(HtmlStyle.tocList));\n+        tableOfContents = new TableOfContents(this);\n@@ -89,1 +87,1 @@\n-                .setSideContent(getSideBar(tocBuilder, false))\n+                .setSideContent(tableOfContents.getSideBar(false))\n@@ -107,2 +105,2 @@\n-        tocBuilder.add(links.createLink(DocLink.fragment(\"\"), mainHeading));\n-        tocBuilder.pushNested(HtmlTree.OL(HtmlStyle.tocList));\n+        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, mainHeading);\n+        tableOfContents.pushNestedList();\n@@ -117,0 +115,1 @@\n+        tableOfContents.popNestedList();\n@@ -149,2 +148,2 @@\n-        tocBuilder.add(links.createLink(DocLink.fragment(HtmlIds.HELP_NAVIGATION.name()), navHeading));\n-        tocBuilder.pushNested(HtmlTree.OL(HtmlStyle.tocList));\n+        tableOfContents.addLink(HtmlIds.HELP_NAVIGATION, navHeading);\n+        tableOfContents.pushNestedList();\n@@ -173,1 +172,1 @@\n-        tocBuilder.popNested();\n+        tableOfContents.popNestedList();\n@@ -199,2 +198,2 @@\n-        tocBuilder.add(links.createLink(DocLink.fragment(HtmlIds.HELP_PAGES.name()), pageKindsHeading));\n-        tocBuilder.pushNested(HtmlTree.OL(HtmlStyle.tocList));\n+        tableOfContents.addLink(HtmlIds.HELP_PAGES, pageKindsHeading);\n+        tableOfContents.pushNestedList();\n@@ -397,1 +396,1 @@\n-        tocBuilder.popNested();\n+        tableOfContents.popNestedList();\n@@ -415,1 +414,1 @@\n-        tocBuilder.add(links.createLink(DocLink.fragment(id.name()), headingContent));\n+        tableOfContents.addLink(id, headingContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -169,3 +169,1 @@\n-    protected final Map<String, String> headings = new LinkedHashMap<>();\n-\n-    protected ListBuilder tocBuilder;\n+    protected TableOfContents tableOfContents;\n@@ -562,55 +560,0 @@\n-    \/**\n-     * Returns a sidebar content object containing a header with various controls as well as\n-     * the given {@code content}.\n-     *\n-     * @param content the sidebar content\n-     * @param hasFilterInput whether or not to add a filter text input\n-     * @return a content builder\n-     *\/\n-    protected Content getSideBar(Content content, boolean hasFilterInput) {\n-        var sidebar = HtmlTree.NAV()\n-                .setStyle(HtmlStyle.toc)\n-                .put(HtmlAttr.ARIA_LABEL, resources.getText(\"doclet.table_of_contents\"));\n-        var sidebarHeader = HtmlTree.DIV(HtmlStyle.tocHeader, contents.contentsHeading);\n-        if (hasFilterInput) {\n-            sidebarHeader.add(Entity.NO_BREAK_SPACE)\n-                    .add(HtmlTree.INPUT(HtmlAttr.InputType.TEXT, HtmlStyle.filterInput)\n-                            .put(HtmlAttr.PLACEHOLDER, resources.getText(\"doclet.filter_label\"))\n-                            .put(HtmlAttr.ARIA_LABEL, resources.getText(\"doclet.filter_table_of_contents\"))\n-                            .put(HtmlAttr.AUTOCOMPLETE, \"off\")\n-                            .put(HtmlAttr.AUTOCAPITALIZE, \"off\"))\n-                    .add(HtmlTree.INPUT(HtmlAttr.InputType.RESET, HtmlStyle.resetFilter)\n-                            .put(HtmlAttr.VALUE, resources.getText(\"doclet.filter_reset\")));\n-        }\n-        sidebar.add(sidebarHeader);\n-        sidebar.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.hideSidebar)\n-                .add(HtmlTree.SPAN(contents.hideSidebar).add(Entity.NO_BREAK_SPACE))\n-                .add(Entity.LEFT_POINTING_ANGLE));\n-        sidebar.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.showSidebar)\n-                .add(Entity.RIGHT_POINTING_ANGLE)\n-                .add(HtmlTree.SPAN(Entity.NO_BREAK_SPACE).add(contents.showSidebar)));\n-        return sidebar.add(content);\n-    }\n-\n-    \/**\n-     * Adds a link to the table of contents.\n-     * @param id the link fragment\n-     * @param label the link label\n-     *\/\n-    public void addToTableOfContents(HtmlId id, Content label) {\n-        tocBuilder.add(links.createLink(id, label).put(HtmlAttr.TABINDEX, \"0\"));\n-    }\n-\n-    \/**\n-     * Adds all entries in {@code sections} to the table of contents where keys represent\n-     * fragment ids and values represent link labels.\n-     * @param sections a map containing id -> label pairs\n-     *\/\n-    public void addToTableOfContents(Map<String, String> sections) {\n-        if (!sections.isEmpty()) {\n-            tocBuilder.addNested(HtmlTree.UL(HtmlStyle.tocList, sections.keySet(),\n-                    id -> HtmlTree.LI(links.createLink(HtmlId.of(id), Text.of(sections.get(id)))\n-                            .put(HtmlAttr.TABINDEX, \"0\"))));\n-        }\n-    }\n-\n@@ -1571,2 +1514,2 @@\n-        if (node.getName().toString().equalsIgnoreCase(\"h2\")) {\n-            headings.put(id, headingContent);\n+        if (tableOfContents != null && node.getName().toString().equalsIgnoreCase(\"h2\")) {\n+            tableOfContents.addLink(HtmlId.of(id), Text.of(headingContent));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":3,"deletions":60,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -104,2 +104,2 @@\n-            writer.addToTableOfContents(HtmlIds.METHOD_DETAIL, contents.methodDetailLabel);\n-            writer.tocBuilder.pushNested(HtmlTree.OL(HtmlStyle.tocList));\n+            writer.tableOfContents.addLink(HtmlIds.METHOD_DETAIL, contents.methodDetailLabel);\n+            writer.tableOfContents.pushNestedList();\n@@ -119,1 +119,1 @@\n-                writer.addToTableOfContents(htmlIds.forMember(currentMethod),\n+                writer.tableOfContents.addLink(htmlIds.forMember(currentMethod),\n@@ -125,1 +125,1 @@\n-            writer.tocBuilder.popNested();\n+            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/MethodWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ListBuilder;\n@@ -166,1 +165,1 @@\n-        this.tocBuilder = new ListBuilder(HtmlTree.OL(HtmlStyle.tocList));\n+        this.tableOfContents = new TableOfContents(this);\n@@ -256,1 +255,1 @@\n-        addToTableOfContents(HtmlIds.TOP_OF_PAGE, contents.navDescription);\n+        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, contents.navDescription);\n@@ -258,0 +257,1 @@\n+            tableOfContents.pushNestedList();\n@@ -259,1 +259,1 @@\n-            addToTableOfContents(headings);\n+            tableOfContents.popNestedList();\n@@ -537,1 +537,1 @@\n-            addToTableOfContents(HtmlIds.MODULES, contents.navModules);\n+            tableOfContents.addLink(HtmlIds.MODULES, contents.navModules);\n@@ -582,1 +582,1 @@\n-            addToTableOfContents(HtmlIds.PACKAGES, contents.navPackages);\n+            tableOfContents.addLink(HtmlIds.PACKAGES, contents.navPackages);\n@@ -753,1 +753,1 @@\n-            addToTableOfContents(HtmlIds.SERVICES, contents.navServices);\n+            tableOfContents.addLink(HtmlIds.SERVICES, contents.navServices);\n@@ -893,1 +893,1 @@\n-        bodyContents.setSideContent(getSideBar(tocBuilder, false));\n+        bodyContents.setSideContent(tableOfContents.getSideBar(false));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.ListBuilder;\n@@ -100,1 +99,1 @@\n-        this.tocBuilder = new ListBuilder(HtmlTree.OL(HtmlStyle.tocList));\n+        this.tableOfContents = new TableOfContents(this);\n@@ -183,1 +182,1 @@\n-        addToTableOfContents(HtmlIds.TOP_OF_PAGE, contents.navDescription);\n+        tableOfContents.addLink(HtmlIds.TOP_OF_PAGE, contents.navDescription);\n@@ -187,0 +186,1 @@\n+        tableOfContents.pushNestedList();\n@@ -188,1 +188,1 @@\n-        addToTableOfContents(headings);\n+        tableOfContents.popNestedList();\n@@ -355,1 +355,1 @@\n-            addToTableOfContents(HtmlIds.CLASS_SUMMARY, contents.navClassesAndInterfaces);\n+            tableOfContents.addLink(HtmlIds.CLASS_SUMMARY, contents.navClassesAndInterfaces);\n@@ -363,1 +363,1 @@\n-            addToTableOfContents(HtmlIds.RELATED_PACKAGE_SUMMARY, contents.relatedPackages);\n+            tableOfContents.addLink(HtmlIds.RELATED_PACKAGE_SUMMARY, contents.relatedPackages);\n@@ -424,1 +424,1 @@\n-        bodyContents.setSideContent(getSideBar(tocBuilder, false));\n+        bodyContents.setSideContent(tableOfContents.getSideBar(false));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriter.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -77,2 +77,2 @@\n-            writer.addToTableOfContents(HtmlIds.PROPERTY_DETAIL, contents.propertyDetailsLabel);\n-            writer.tocBuilder.pushNested(HtmlTree.OL(HtmlStyle.tocList));\n+            writer.tableOfContents.addLink(HtmlIds.PROPERTY_DETAIL, contents.propertyDetailsLabel);\n+            writer.tableOfContents.pushNestedList();\n@@ -91,1 +91,1 @@\n-                writer.addToTableOfContents(htmlIds.forProperty(currentProperty),\n+                writer.tableOfContents.addLink(htmlIds.forProperty(currentProperty),\n@@ -96,1 +96,1 @@\n-            writer.tocBuilder.popNested();\n+            writer.tableOfContents.popNestedList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PropertyWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-        bodyContents.setSideContent(getSideBar(tocBuilder, true));\n+        bodyContents.setSideContent(tableOfContents.getSideBar(true));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SubWriterHolderWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.javadoc.internal.doclets.formats.html;\n+\n+import jdk.javadoc.internal.doclets.formats.html.markup.Entity;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlAttr;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlId;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlStyle;\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.ListBuilder;\n+import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n+\n+\/**\n+ * A class used by various {@link HtmlDocletWriter} subclasses to build tables of contents.\n+ *\/\n+public class TableOfContents {\n+    private final ListBuilder listBuilder;\n+    private final HtmlDocletWriter writer;\n+\n+    \/**\n+     * Constructor\n+     * @param writer the writer\n+     *\/\n+    public TableOfContents(HtmlDocletWriter writer) {\n+        this.writer = writer;\n+        listBuilder = new ListBuilder(HtmlTree.OL(HtmlStyle.tocList));\n+    }\n+\n+    \/**\n+     * Adds a link to the table of contents.\n+     * @param id the link fragment\n+     * @param label the link label\n+     * @return this object\n+     *\/\n+    public TableOfContents addLink(HtmlId id, Content label) {\n+        listBuilder.add(writer.links.createLink(id, label).put(HtmlAttr.TABINDEX, \"0\"));\n+        return this;\n+    }\n+\n+    \/**\n+     * Adds a new nested list to add new items to.\n+     *\/\n+    public void pushNestedList() {\n+        listBuilder.pushNestedList(HtmlTree.OL(HtmlStyle.tocList));\n+    }\n+\n+    \/**\n+     * Closes the current nested list and go back to the parent list.\n+     *\/\n+    public void popNestedList() {\n+        listBuilder.popNestedList();\n+    }\n+\n+    \/**\n+     * Returns a sidebar content object containing a header with various controls as well as\n+     * the given {@code content}.\n+     *\n+     * @param hasFilterInput whether to add a filter text input\n+     * @return a content object\n+     *\/\n+    protected Content getSideBar(boolean hasFilterInput) {\n+        var sidebar = HtmlTree.NAV()\n+                .setStyle(HtmlStyle.toc)\n+                .put(HtmlAttr.ARIA_LABEL, writer.resources.getText(\"doclet.table_of_contents\"));\n+        var sidebarHeader = HtmlTree.DIV(HtmlStyle.tocHeader, writer.contents.contentsHeading);\n+        if (hasFilterInput) {\n+            sidebarHeader.add(Entity.NO_BREAK_SPACE)\n+                    .add(HtmlTree.INPUT(HtmlAttr.InputType.TEXT, HtmlStyle.filterInput)\n+                            .put(HtmlAttr.PLACEHOLDER, writer.resources.getText(\"doclet.filter_label\"))\n+                            .put(HtmlAttr.ARIA_LABEL, writer.resources.getText(\"doclet.filter_table_of_contents\"))\n+                            .put(HtmlAttr.AUTOCOMPLETE, \"off\")\n+                            .put(HtmlAttr.AUTOCAPITALIZE, \"off\"))\n+                    .add(HtmlTree.INPUT(HtmlAttr.InputType.RESET, HtmlStyle.resetFilter)\n+                            .put(HtmlAttr.VALUE, writer.resources.getText(\"doclet.filter_reset\")));\n+        }\n+        sidebar.add(sidebarHeader);\n+        sidebar.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.hideSidebar)\n+                .add(HtmlTree.SPAN(writer.contents.hideSidebar).add(Entity.NO_BREAK_SPACE))\n+                .add(Entity.LEFT_POINTING_ANGLE));\n+        sidebar.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.showSidebar)\n+                .add(Entity.RIGHT_POINTING_ANGLE)\n+                .add(HtmlTree.SPAN(Entity.NO_BREAK_SPACE).add(writer.contents.showSidebar)));\n+        return sidebar.add(listBuilder);\n+    }\n+\n+}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TableOfContents.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -39,3 +39,4 @@\n- * stack of nested list elements where list items are added to the inner-most\n- * list. Lists can be added to and removed from the stack using the {@code pushNested}\n- * and {@code popNested} methods.\n+ * stack of nested list\/item pairs where list items are added to the inner-most\n+ * list and nested lists are added to the current list item of the inner-most list.\n+ * Lists can be added to and removed from the stack using the {@link #pushNestedList}\n+ * and {@link #popNestedList} methods.\n@@ -46,1 +47,1 @@\n-    private final Deque<HtmlTree> stack = new ArrayDeque<>();\n+    private final Deque<HtmlTree[]> stack = new ArrayDeque<>();\n@@ -73,12 +74,0 @@\n-    \/**\n-     * Adds a new nested list to the current list item without pushing it to the list stack and\n-     * making it the recipient for new list items.\n-     * @param list the nested list\n-     * @return this list builder\n-     *\/\n-    public ListBuilder addNested(HtmlTree list) {\n-        Objects.requireNonNull(currentItem, \"List item required for nested list\");\n-        currentItem.add(list);\n-        return this;\n-    }\n-\n@@ -93,1 +82,1 @@\n-    public ListBuilder pushNested(HtmlTree list) {\n+    public ListBuilder pushNestedList(HtmlTree list) {\n@@ -95,2 +84,1 @@\n-        currentItem.addUnchecked(list);\n-        stack.push(currentList);\n+        stack.push(new HtmlTree[] {currentList, currentItem});\n@@ -108,3 +96,6 @@\n-    public ListBuilder popNested() {\n-        currentList = stack.pop();\n-        currentItem = null;\n+    public ListBuilder popNestedList() {\n+        HtmlTree[] listAndItem = stack.pop();\n+        \/\/ First restore currentItem and add nested list to it before restoring currentList to outer list.\n+        currentItem = listAndItem[1];\n+        currentItem.add(currentList);\n+        currentList = listAndItem[0];\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/ListBuilder.java","additions":13,"deletions":22,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-                    <li><a href=\"#\">Constant Field Values<\/a>\n+                    <li><a href=\"#\" tabindex=\"0\">Constant Field Values<\/a>\n@@ -115,2 +115,2 @@\n-                    <li><a href=\"#p1.p2a\">p1.p2a.*<\/a><\/li>\n-                    <li><a href=\"#p1.p2b\">p1.p2b.*<\/a><\/li>\n+                    <li><a href=\"#p1.p2a\" tabindex=\"0\">p1.p2a.*<\/a><\/li>\n+                    <li><a href=\"#p1.p2b\" tabindex=\"0\">p1.p2b.*<\/a><\/li>\n@@ -150,1 +150,1 @@\n-                    <li><a href=\"#\">Constant Field Values<\/a>\n+                    <li><a href=\"#\" tabindex=\"0\">Constant Field Values<\/a>\n@@ -152,1 +152,1 @@\n-                    <li><a href=\"#unnamed-package\">Unnamed Package<\/a><\/li>\n+                    <li><a href=\"#unnamed-package\" tabindex=\"0\">Unnamed Package<\/a><\/li>\n@@ -193,1 +193,1 @@\n-                   <li><a href=\"#\">Constant Field Values<\/a>\n+                   <li><a href=\"#\" tabindex=\"0\">Constant Field Values<\/a>\n@@ -195,2 +195,2 @@\n-                   <li><a href=\"#unnamed-package\">Unnamed Package<\/a><\/li>\n-                   <li><a href=\"#p1.p2a\">p1.p2a.*<\/a><\/li>\n+                   <li><a href=\"#unnamed-package\" tabindex=\"0\">Unnamed Package<\/a><\/li>\n+                   <li><a href=\"#p1.p2a\" tabindex=\"0\">p1.p2a.*<\/a><\/li>\n@@ -263,1 +263,1 @@\n-                    <li><a href=\"#\">Constant Field Values<\/a>\n+                    <li><a href=\"#\" tabindex=\"0\">Constant Field Values<\/a>\n@@ -265,3 +265,3 @@\n-                    <li><a href=\"#p.a\">p.a.*<\/a><\/li>\n-                    <li><a href=\"#p.b\">p.b.*<\/a><\/li>\n-                    <li><a href=\"#p.q\">p.q.*<\/a><\/li>\n+                    <li><a href=\"#p.a\" tabindex=\"0\">p.a.*<\/a><\/li>\n+                    <li><a href=\"#p.b\" tabindex=\"0\">p.b.*<\/a><\/li>\n+                    <li><a href=\"#p.q\" tabindex=\"0\">p.q.*<\/a><\/li>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testConstantValuesPage\/TestConstantValuesPage.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}