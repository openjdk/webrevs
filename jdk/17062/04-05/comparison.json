{"files":[{"patch":"@@ -99,1 +99,0 @@\n-        tableOfContents = new TableOfContents(this);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriter.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -112,1 +112,0 @@\n-        this.tableOfContents = new TableOfContents(this);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriter.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -75,1 +75,0 @@\n-        tableOfContents = new TableOfContents(this);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-    protected TableOfContents tableOfContents;\n+    protected final TableOfContents tableOfContents;\n@@ -226,0 +226,1 @@\n+        this.tableOfContents = new TableOfContents(this);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -165,1 +165,0 @@\n-        this.tableOfContents = new TableOfContents(this);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriter.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -99,1 +99,0 @@\n-        this.tableOfContents = new TableOfContents(this);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriter.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -77,1 +78,3 @@\n-     * Returns a content object containing the complete table of contents.\n+     * Returns a content object containing the table of contents, consisting\n+     * of a header and the contents list itself. If the contents list is empty,\n+     * an empty content object is returned.\n@@ -83,1 +86,4 @@\n-        var sidebar = HtmlTree.NAV()\n+        if (listBuilder.isEmpty()) {\n+            return Text.EMPTY;\n+        }\n+        var content = HtmlTree.NAV()\n@@ -86,1 +92,1 @@\n-        var sidebarHeader = HtmlTree.DIV(HtmlStyle.tocHeader, writer.contents.contentsHeading);\n+        var header = HtmlTree.DIV(HtmlStyle.tocHeader, writer.contents.contentsHeading);\n@@ -88,1 +94,1 @@\n-            sidebarHeader.add(Entity.NO_BREAK_SPACE)\n+            header.add(Entity.NO_BREAK_SPACE)\n@@ -97,2 +103,2 @@\n-        sidebar.add(sidebarHeader);\n-        sidebar.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.hideSidebar)\n+        content.add(header);\n+        content.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.hideSidebar)\n@@ -101,1 +107,1 @@\n-        sidebar.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.showSidebar)\n+        content.add(new HtmlTree(TagName.BUTTON).addStyle(HtmlStyle.showSidebar)\n@@ -104,1 +110,1 @@\n-        return sidebar.add(listBuilder);\n+        return content.add(listBuilder);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TableOfContents.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"}]}