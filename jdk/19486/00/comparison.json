{"files":[{"patch":"@@ -5016,1 +5016,7 @@\n-  if (ReduceBulkZeroing) {\n+  if (ReduceBulkZeroing &&\n+      \/\/ If we are implementing an array clone without knowing its source type\n+      \/\/ (can happen when compiling the array-guarded branch of a reflective\n+      \/\/ Object.clone() invocation), initialize the array within the allocation.\n+      \/\/ This is needed because some GCs (e.g. ZGC) might fall back in this case\n+      \/\/ to a runtime clone call that assumes fully initialized source arrays.\n+      (!is_array || obj->get_ptr_type()->isa_aryptr() != nullptr)) {\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8155643 8268125 8270461 8270098\n+ * @bug 8155643 8268125 8270461 8270098 8332959\n@@ -44,0 +44,1 @@\n+ *                   -XX:CompileCommand=compileonly,*::invokeVirtual\n@@ -191,1 +192,5 @@\n-    public static void main(String[] args) throws Exception {\n+    public static Object testCloneObjectWithMethodHandle(MethodHandle clone, Object obj) throws Throwable {\n+        return clone.invokeExact(obj);\n+    }\n+\n+    public static void main(String[] args) throws Throwable {\n@@ -195,0 +200,4 @@\n+        MethodHandles.Lookup privateLookup = MethodHandles.privateLookupIn(Object.class, MethodHandles.lookup());\n+        MethodType mt = MethodType.methodType(Object.class);\n+        MethodHandle mh = privateLookup.findVirtual(Object.class, \"clone\", mt);\n+\n@@ -261,0 +270,11 @@\n+        for (int i = 0; i < 50_000; i++) {\n+            String[] arr2 = (String[]) testCloneObjectWithMethodHandle(mh, (Object)arr1);\n+            verifyStr(arr1, arr2);\n+            String[] arr3 = (String[]) testCloneObjectWithMethodHandle(mh, (Object)arr1);\n+            verifyStr(arr1, arr3);\n+            String[] arr4 = (String[]) testCloneObjectWithMethodHandle(mh, (Object)arr1);\n+            verifyStr(arr1, arr4);\n+            verifyStr(arr1, arr3);\n+            verifyStr(arr1, arr2);\n+        }\n+\n@@ -323,0 +343,11 @@\n+\n+        for (int i = 0; i < 50_000; i++) {\n+            Payload2 p1 = (Payload2) testCloneObjectWithMethodHandle(mh, ref2);\n+            verifyPayload2(ref2, p1);\n+            Payload2 p2 = (Payload2) testCloneObjectWithMethodHandle(mh, ref2);\n+            verifyPayload2(ref2, p2);\n+            Payload2 p3 = (Payload2) testCloneObjectWithMethodHandle(mh, ref2);\n+            verifyPayload2(ref2, p3);\n+            verifyPayload2(p2, p3);\n+            verifyPayload2(p1, p3);\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestObjectArrayClone.java","additions":34,"deletions":3,"binary":false,"changes":37,"status":"modified"}]}