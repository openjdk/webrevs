{"files":[{"patch":"@@ -857,4 +857,1 @@\n-    bool is_multi_release = ClassLoaderExt::process_jar_manifest(current, entry);\n-    if (is_multi_release) {\n-      entry->set_multi_release_jar();\n-    }\n+    ClassLoaderExt::process_jar_manifest(current, entry);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-bool ClassLoaderExt::process_jar_manifest(JavaThread* current, ClassPathEntry* entry) {\n+void ClassLoaderExt::process_jar_manifest(JavaThread* current, ClassPathEntry* entry) {\n@@ -240,1 +240,1 @@\n-    return false;\n+    return;\n@@ -247,1 +247,3 @@\n-  bool is_multi_release = (strstr(manifest, \"Multi-Release: true\") != nullptr);\n+  if (strstr(manifest, \"Multi-Release: true\") != nullptr) {\n+    entry->set_multi_release_jar();\n+  }\n@@ -304,1 +306,1 @@\n-  return is_multi_release;\n+  return;\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-  static bool process_jar_manifest(JavaThread* current, ClassPathEntry* entry);\n+  static void process_jar_manifest(JavaThread* current, ClassPathEntry* entry);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}