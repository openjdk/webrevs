{"files":[{"patch":"@@ -350,0 +350,1 @@\n+        _is_multi_release = cpe->is_multi_release_jar();\n@@ -2683,1 +2684,1 @@\n-      ent = ClassLoader::create_class_path_entry(THREAD, path, &st, false, false);\n+      ent = ClassLoader::create_class_path_entry(THREAD, path, &st, false, false, scpe->is_multi_release());\n@@ -2718,1 +2719,1 @@\n-  if (class_loader() != nullptr && !cpe->is_modules_image()) {\n+  if (class_loader() != nullptr && !cpe->is_modules_image() && cpe->is_multi_release_jar()) {\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+  bool   _is_multi_release;\n@@ -74,1 +75,1 @@\n-                           _from_class_path_attr(false), _timestamp(0),\n+                           _from_class_path_attr(false), _is_multi_release(false), _timestamp(0),\n@@ -95,0 +96,1 @@\n+  bool is_multi_release()     { return _is_multi_release; }\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -306,1 +306,1 @@\n-                                     bool is_boot_append, bool from_class_path_attr) : ClassPathEntry() {\n+                                     bool is_boot_append, bool from_class_path_attr, bool multi_release) : ClassPathEntry() {\n@@ -310,0 +310,1 @@\n+  _multi_release = multi_release;\n@@ -753,1 +754,2 @@\n-                                                     bool from_class_path_attr) {\n+                                                     bool from_class_path_attr,\n+                                                     bool is_multi_release) {\n@@ -766,1 +768,1 @@\n-      new_entry = new ClassPathZipEntry(zip, path, is_boot_append, from_class_path_attr);\n+      new_entry = new ClassPathZipEntry(zip, path, is_boot_append, from_class_path_attr, is_multi_release);\n@@ -799,1 +801,1 @@\n-          return new ClassPathZipEntry(zip, canonical_path, is_boot_append, false);\n+          return new ClassPathZipEntry(zip, canonical_path, is_boot_append, false, false);\n@@ -855,1 +857,4 @@\n-    ClassLoaderExt::process_jar_manifest(current, entry);\n+    bool is_multi_release = ClassLoaderExt::process_jar_manifest(current, entry);\n+    if (is_multi_release) {\n+      entry->set_multi_release_jar();\n+    }\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -61,0 +61,2 @@\n+  virtual bool is_multi_release_jar() const { return false; }\n+  virtual void set_multi_release_jar() {}\n@@ -94,0 +96,1 @@\n+  bool _multi_release;       \/\/ multi-release jar\n@@ -96,0 +99,2 @@\n+  bool is_multi_release_jar() const { return _multi_release; }\n+  void set_multi_release_jar() { _multi_release = true; }\n@@ -98,1 +103,1 @@\n-  ClassPathZipEntry(jzfile* zip, const char* zip_name, bool is_boot_append, bool from_class_path_attr);\n+  ClassPathZipEntry(jzfile* zip, const char* zip_name, bool is_boot_append, bool from_class_path_attr, bool multi_release);\n@@ -263,1 +268,2 @@\n-                                                 bool from_class_path_attr);\n+                                                 bool from_class_path_attr,\n+                                                 bool is_multi_release = false);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-void ClassLoaderExt::process_jar_manifest(JavaThread* current, ClassPathEntry* entry) {\n+bool ClassLoaderExt::process_jar_manifest(JavaThread* current, ClassPathEntry* entry) {\n@@ -240,1 +240,1 @@\n-    return;\n+    return false;\n@@ -247,0 +247,2 @@\n+  bool is_multi_release = (strstr(manifest, \"Multi-Release: true\") != nullptr);\n+\n@@ -302,0 +304,1 @@\n+  return is_multi_release;\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-  static void process_jar_manifest(JavaThread* current, ClassPathEntry* entry);\n+  static bool process_jar_manifest(JavaThread* current, ClassPathEntry* entry);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}