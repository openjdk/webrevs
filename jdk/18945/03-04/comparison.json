{"files":[{"patch":"@@ -163,1 +163,1 @@\n-               ? Wrapper.forPrimitiveType(descriptor.charAt(0)).primitiveClassDescriptor()\n+               ? Wrapper.forPrimitiveType(descriptor.charAt(0)).classDescriptor()\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/ClassDesc.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -229,1 +229,1 @@\n-            return Wrapper.forBasicType(descriptor.charAt(start)).primitiveClassDescriptor();\n+            return Wrapper.forPrimitiveType(descriptor.charAt(start)).classDescriptor();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/ConstantUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import java.util.StringJoiner;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/MethodTypeDescImpl.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    \/\/        wrapperType      simple     primitiveType  simple     char  emptyArray     format               numericClass  superClass\n+    \/\/        wrapperType      simple     primitiveType  simple     char  emptyArray     format               numericClass  superClass  classDescriptor\n@@ -63,1 +63,1 @@\n-    private final ClassDesc primitiveTypeDesc;\n+    private final ClassDesc classDesc;\n@@ -65,1 +65,10 @@\n-    private Wrapper(Class<?> wtype, String wtypeName, Class<?> ptype, String ptypeName, char tchar, Object emptyArray, int format, int numericClass, int superClasses, ClassDesc primitiveTypeDesc) {\n+    private Wrapper(Class<?> wtype,\n+                    String wtypeName,\n+                    Class<?> ptype,\n+                    String ptypeName,\n+                    char tchar,\n+                    Object emptyArray,\n+                    int format,\n+                    int numericClass,\n+                    int superClasses,\n+                    ClassDesc classDesc) {\n@@ -76,1 +85,1 @@\n-        this.primitiveTypeDesc = primitiveTypeDesc;\n+        this.classDesc = classDesc;\n@@ -383,2 +392,2 @@\n-    \/** A nominal descriptor of the primitive type *\/\n-    public ClassDesc primitiveClassDescriptor() { return primitiveTypeDesc; }\n+    \/** A nominal descriptor of the wrapped type *\/\n+    public ClassDesc classDescriptor() { return classDesc; }\n","filename":"src\/java.base\/share\/classes\/sun\/invoke\/util\/Wrapper.java","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/constant\/MethodTypeDescFactories.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}