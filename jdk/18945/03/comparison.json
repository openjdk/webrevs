{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,3 +173,3 @@\n-        var sj = new StringJoiner(\"\", \"(\", \")\" + returnType().descriptorString());\n-        for (int i = 0; i < parameterCount(); i++) {\n-            sj.add(parameterType(i).descriptorString());\n+        int len = 2 + returnType.descriptorString().length();\n+        for (ClassDesc argType : argTypes) {\n+            len += argType.descriptorString().length();\n@@ -177,1 +177,7 @@\n-        return cachedDescriptorString = sj.toString();\n+        StringBuilder sb = new StringBuilder(len).append('(');\n+        for (ClassDesc argType : argTypes) {\n+            sb.append(argType.descriptorString());\n+        }\n+        desc = sb.append(')').append(returnType.descriptorString()).toString();\n+        cachedDescriptorString = desc;\n+        return desc;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/MethodTypeDescImpl.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+    \/** Dots will be replaced by the descriptor of this benchmark class. *\/\n@@ -61,1 +62,3 @@\n-            \"()[Ljava\/lang\/String;\"\n+            \"()[Ljava\/lang\/String;\",\n+            \"(..IIJ)V\",\n+            \"(.....................).\"\n@@ -71,0 +74,1 @@\n+        descString = descString.replaceAll(\"\\\\.\", MethodTypeDescFactories.class.descriptorString());\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/constant\/MethodTypeDescFactories.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}