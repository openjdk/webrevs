{"files":[{"patch":"@@ -419,0 +419,7 @@\n+            \/\/\n+            \/\/ Below we see the standard use of \"let\", where we add a hashtag replacement for \"a\"\n+            \/\/ for the rest of the enclosing scope. We then also use a lambda version of \"let\"\n+            \/\/ with a transparent scope, which means that \"b\" escapes that scope and is also\n+            \/\/ available in the enclosing scope. In the implementation of the framework, we\n+            \/\/ actually use a \"transparentScope\", so the standard \"let\" is really just syntactic\n+            \/\/ sugar for the lambda \"let\" with \"transparentScope\".\n@@ -469,2 +476,7 @@\n-    \/\/ The choice of transparency of an insertion scope is quite important. A common use case\n-    \/\/ is to insert a DataName.\n+    \/\/ When we insert to a hook, we have 3 relevant scopes:\n+    \/\/ - Anchor scope: the scope defined at \"hook.anchor(scope(...))\"\n+    \/\/ - Insertion scope: the scope that is inserted, see \"hook.insert(scope(...))\"\n+    \/\/ - Caller scope: the scope we insert from.\n+    \/\/\n+    \/\/ The choice of transparency of an insertion scope (the scope that is inserted) is quite\n+    \/\/ important. A common use case is to insert a DataName.\n@@ -489,1 +501,1 @@\n-            myHook.insert(scope(\n+            myHook.insert(scope( \/\/ <- insertion scope\n@@ -503,0 +515,1 @@\n+            \/\/ <- caller scope\n@@ -519,4 +532,5 @@\n-            \/\/ Anchoring a Hook creates a scope, spanning the braces of the\n-            \/\/ \"anchor\" call. Any Hook.insert that happens inside this scope\n-            \/\/ goes to the top of that scope.\n-            myHook.anchor(scope(\n+            \/\/ Anchoring a Hook requires the definition of an inner scope,\n+            \/\/ aka the \"anchor scope\", spanning the braces of the \"anchor\" call.\n+            \/\/ Any Hook.insert that happens inside this scope goes to the top of\n+            \/\/ that scope.\n+            myHook.anchor(scope( \/\/ <- anchor scope\n@@ -573,1 +587,0 @@\n-                let(\"value\", 5),\n@@ -576,1 +589,1 @@\n-                public static int $field = #value;\n+                public static int $field = 5;\n@@ -583,1 +596,1 @@\n-                int $var = #value;\n+                int $var = 11;\n@@ -832,0 +845,4 @@\n+        \/\/       (We could also use \"hashtagScope\", since those are also transparent for\n+        \/\/        names. But it is not great style, because template boundaries are\n+        \/\/        non-transparent for hashtags and setFuelCost anyway. So we might as\n+        \/\/        well just use \"transparentScope\".)\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestTutorial.java","additions":27,"deletions":10,"binary":false,"changes":37,"status":"modified"}]}