{"files":[{"patch":"@@ -48,1 +48,1 @@\n-import static compiler.lib.template_framework.Template.body;\n+import static compiler.lib.template_framework.Template.scope;\n@@ -102,1 +102,1 @@\n-        var bodyTemplate = Template.make(\"expression\", \"arguments\", \"checksum\", (Expression expression, List<Object> arguments, String checksum) -> body(\n+        var bodyTemplate = Template.make(\"expression\", \"arguments\", \"checksum\", (Expression expression, List<Object> arguments, String checksum) -> scope(\n@@ -170,1 +170,1 @@\n-            return body(\n+            return scope(\n@@ -177,1 +177,1 @@\n-        var checksumTemplate = Template.make(\"expression\", \"checksum\", (Expression expression, String checksum) -> body(\n+        var checksumTemplate = Template.make(\"expression\", \"checksum\", (Expression expression, String checksum) -> scope(\n@@ -204,1 +204,1 @@\n-        var valueTemplate = Template.make(\"name\", \"type\", (String name, CodeGenerationDataNameType type) -> body(\n+        var valueTemplate = Template.make(\"name\", \"type\", (String name, CodeGenerationDataNameType type) -> scope(\n@@ -216,1 +216,1 @@\n-        var constrainArgumentMethodTemplate = Template.make(\"name\", \"type\", (String name, CodeGenerationDataNameType type) -> body(\n+        var constrainArgumentMethodTemplate = Template.make(\"name\", \"type\", (String name, CodeGenerationDataNameType type) -> scope(\n@@ -250,1 +250,1 @@\n-        var constrainArgumentTemplate = Template.make(\"name\", (String name) -> body(\n+        var constrainArgumentTemplate = Template.make(\"name\", (String name) -> scope(\n@@ -282,1 +282,1 @@\n-            return body(\n+            return scope(\n","filename":"test\/hotspot\/jtreg\/compiler\/igvn\/ExpressionFuzzer.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-import static compiler.lib.template_framework.Template.body;\n+import static compiler.lib.template_framework.Template.scope;\n@@ -360,1 +360,1 @@\n-        var template = Template.make(() -> body(\n+        var template = Template.make(() -> scope(\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/library\/Expression.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-import static compiler.lib.template_framework.Template.body;\n+import static compiler.lib.template_framework.Template.scope;\n@@ -193,1 +193,1 @@\n-        var template = Template.make(() -> body(\n+        var template = Template.make(() -> scope(\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/library\/PrimitiveType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-import static compiler.lib.template_framework.Template.body;\n+import static compiler.lib.template_framework.Template.scope;\n@@ -74,1 +74,1 @@\n-            return body(\n+            return scope(\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestExpressions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -180,1 +180,1 @@\n-        var libraryRNGWithTypeTemplate = Template.make(\"type\", (PrimitiveType type) -> body(\n+        var libraryRNGWithTypeTemplate = Template.make(\"type\", (PrimitiveType type) -> scope(\n@@ -204,1 +204,1 @@\n-        var libraryRNGTemplate = Template.make(() -> body(\n+        var libraryRNGTemplate = Template.make(() -> scope(\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestPrimitiveTypes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-import static compiler.lib.template_framework.Template.body;\n+import static compiler.lib.template_framework.Template.scope;\n@@ -96,1 +96,1 @@\n-        var template = Template.make(() -> body(\n+        var template = Template.make(() -> scope(\n@@ -144,1 +144,1 @@\n-        var template = Template.make(() -> body(\n+        var template = Template.make(() -> scope(\n@@ -187,1 +187,1 @@\n-        var template = Template.make(() -> body(\n+        var template = Template.make(() -> scope(\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/tests\/TestExpression.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}