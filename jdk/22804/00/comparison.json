{"files":[{"patch":"@@ -214,1 +214,1 @@\n-    __ addi(sp, sp, -2 * wordSize);                      \\\n+    __ subi(sp, sp, 2 * wordSize);                       \\\n@@ -340,1 +340,1 @@\n-  __ add(c_rarg0, c_rarg0, arrayOopDesc::base_offset_in_bytes(basic_type));\n+  __ addi(c_rarg0, c_rarg0, arrayOopDesc::base_offset_in_bytes(basic_type));\n@@ -343,1 +343,1 @@\n-  __ add(c_rarg1, c_rarg1, arrayOopDesc::base_offset_in_bytes(basic_type));\n+  __ addi(c_rarg1, c_rarg1, arrayOopDesc::base_offset_in_bytes(basic_type));\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_arraycopy_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1087,1 +1087,1 @@\n-      __ addi(sp, sp, -2 * wordSize); \/\/ 2: store k_RInfo and klass_RInfo\n+      __ subi(sp, sp, 2 * wordSize); \/\/ 2: store k_RInfo and klass_RInfo\n@@ -1102,1 +1102,1 @@\n-    __ addi(sp, sp, -2 * wordSize); \/\/ 2: store k_RInfo and klass_RInfo\n+    __ subi(sp, sp, 2 * wordSize); \/\/ 2: store k_RInfo and klass_RInfo\n@@ -2142,1 +2142,1 @@\n-  __ addi(sp, sp, -2 * wordSize); \/\/ 2: store k_RInfo and klass_RInfo\n+  __ subi(sp, sp, 2 * wordSize); \/\/ 2: store k_RInfo and klass_RInfo\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-  sub(len_in_bytes, len_in_bytes, hdr_size_in_bytes);\n+  subi(len_in_bytes, len_in_bytes, hdr_size_in_bytes);\n@@ -207,1 +207,1 @@\n-    add(obj, obj, hdr_size_in_bytes);\n+    addi(obj, obj, hdr_size_in_bytes);\n@@ -211,1 +211,1 @@\n-    sub(obj, obj, hdr_size_in_bytes);\n+    subi(obj, obj, hdr_size_in_bytes);\n@@ -265,1 +265,1 @@\n-      sub(index, index, 1);\n+      subi(index, index, 1);\n@@ -275,1 +275,1 @@\n-      add(t0, t0, unroll * wordSize);\n+      addi(t0, t0, unroll * wordSize);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-    addi(sp, sp, -(arg_num + 1) * wordSize);\n+    subi(sp, sp, (arg_num + 1) * wordSize);\n@@ -304,1 +304,1 @@\n-    __ addi(sp, sp, -(FrameMap::nof_fpu_regs * wordSize));\n+    __ subi(sp, sp, FrameMap::nof_fpu_regs * wordSize);\n@@ -311,1 +311,1 @@\n-    __ addi(sp, sp, -32 * wordSize);\n+    __ subi(sp, sp, 32 * wordSize);\n@@ -546,1 +546,1 @@\n-  __ addi(sp, sp, -2 * wordSize);\n+  __ subi(sp, sp, 2 * wordSize);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_Runtime1_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -214,3 +214,1 @@\n-  STATIC_ASSERT(markWord::monitor_value <= INT_MAX);\n-  add(tmp, tmp, -(int)markWord::monitor_value); \/\/ monitor\n-\n+  subi(tmp, tmp, (int)markWord::monitor_value); \/\/ monitor\n@@ -223,1 +221,1 @@\n-  addi(disp_hdr, disp_hdr, -1);\n+  subi(disp_hdr, disp_hdr, 1);\n@@ -540,1 +538,1 @@\n-      add(tmp1_monitor, tmp1_mark, -(int)markWord::monitor_value);\n+      subi(tmp1_monitor, tmp1_mark, (int)markWord::monitor_value);\n@@ -556,1 +554,1 @@\n-    addi(tmp2_recursions, tmp2_recursions, -1);\n+    subi(tmp2_recursions, tmp2_recursions, 1);\n@@ -735,1 +733,1 @@\n-  addi(t0, cnt1, isL ? -32 : -16);\n+  subi(t0, cnt1, isL ? 32 : 16);\n@@ -783,1 +781,1 @@\n-  addi(cnt1, cnt1, -8);\n+  subi(cnt1, cnt1, 8);\n@@ -959,1 +957,1 @@\n-  sub(sp, sp, ASIZE);\n+  subi(sp, sp, ASIZE);\n@@ -978,2 +976,2 @@\n-  add(ch1, ch1, 32);\n-  sub(tmp6, tmp6, 4);\n+  addi(ch1, ch1, 32);\n+  subi(tmp6, tmp6, 4);\n@@ -982,1 +980,1 @@\n-  sub(nlen_tmp, needle_len, 1); \/\/ m - 1, index of the last element in pattern\n+  subi(nlen_tmp, needle_len, 1); \/\/ m - 1, index of the last element in pattern\n@@ -987,1 +985,1 @@\n-  sub(ch2, needle_len, 1); \/\/ bc offset init value, ch2 is t1\n+  subi(ch2, needle_len, 1); \/\/ bc offset init value, ch2 is t1\n@@ -1002,1 +1000,1 @@\n-  add(tmp3, tmp3, needle_chr_size);\n+  addi(tmp3, tmp3, needle_chr_size);\n@@ -1012,1 +1010,1 @@\n-  sub(ch2, ch2, 1); \/\/ for next pattern element, skip distance -1\n+  subi(ch2, ch2, 1); \/\/ for next pattern element, skip distance -1\n@@ -1049,1 +1047,1 @@\n-  sub(nlen_tmp, nlen_tmp, firstStep); \/\/ nlen_tmp is positive here, because needle_len >= 8\n+  subi(nlen_tmp, nlen_tmp, firstStep); \/\/ nlen_tmp is positive here, because needle_len >= 8\n@@ -1068,1 +1066,1 @@\n-    sub(nlen_tmp, nlen_tmp, 1); \/\/ no need to branch for UU\/UL case. cnt1 >= 8\n+    subi(nlen_tmp, nlen_tmp, 1); \/\/ no need to branch for UU\/UL case. cnt1 >= 8\n@@ -1079,1 +1077,1 @@\n-  sub(nlen_tmp, nlen_tmp, 1);\n+  subi(nlen_tmp, nlen_tmp, 1);\n@@ -1101,1 +1099,1 @@\n-  sub(nlen_tmp, needle_len, 1);\n+  subi(nlen_tmp, needle_len, 1);\n@@ -1105,1 +1103,1 @@\n-  add(sp, sp, ASIZE);\n+  addi(sp, sp, ASIZE);\n@@ -1116,1 +1114,1 @@\n-  add(sp, sp, ASIZE);\n+  addi(sp, sp, ASIZE);\n@@ -1120,1 +1118,1 @@\n-  sub(t0, needle_len, 16); \/\/ small patterns still should be handled by simple algorithm\n+  subi(t0, needle_len, 16); \/\/ small patterns still should be handled by simple algorithm\n@@ -1199,1 +1197,1 @@\n-    sub(t0, needle_len, needle_isL == haystack_isL ? 4 : 2);\n+    subi(t0, needle_len, needle_isL == haystack_isL ? 4 : 2);\n@@ -1216,1 +1214,1 @@\n-    add(hlen_neg, hlen_neg, haystack_chr_size);\n+    addi(hlen_neg, hlen_neg, haystack_chr_size);\n@@ -1221,2 +1219,2 @@\n-    add(nlen_tmp, nlen_neg, needle_chr_size);\n-    add(hlen_tmp, hlen_neg, haystack_chr_size);\n+    addi(nlen_tmp, nlen_neg, needle_chr_size);\n+    addi(hlen_tmp, hlen_neg, haystack_chr_size);\n@@ -1231,2 +1229,2 @@\n-    add(nlen_tmp, nlen_tmp, needle_chr_size);\n-    add(hlen_tmp, hlen_tmp, haystack_chr_size);\n+    addi(nlen_tmp, nlen_tmp, needle_chr_size);\n+    addi(hlen_tmp, hlen_tmp, haystack_chr_size);\n@@ -1238,1 +1236,1 @@\n-      sub(t0, needle_len, 2);\n+      subi(t0, needle_len, 2);\n@@ -1247,1 +1245,1 @@\n-    sub(result_tmp, haystack_len, 4);\n+    subi(result_tmp, haystack_len, 4);\n@@ -1276,1 +1274,1 @@\n-    add(hlen_neg, hlen_neg, haystack_chr_size);\n+    addi(hlen_neg, hlen_neg, haystack_chr_size);\n@@ -1287,1 +1285,1 @@\n-      sub(result_tmp, haystack_len, 2);\n+      subi(result_tmp, haystack_len, 2);\n@@ -1310,1 +1308,1 @@\n-    add(hlen_neg, hlen_neg, haystack_chr_size);\n+    addi(hlen_neg, hlen_neg, haystack_chr_size);\n@@ -1324,1 +1322,1 @@\n-      sub(result_tmp, haystack_len, 3);\n+      subi(result_tmp, haystack_len, 3);\n@@ -1343,1 +1341,1 @@\n-    add(hlen_neg, hlen_neg, haystack_chr_size);\n+    addi(hlen_neg, hlen_neg, haystack_chr_size);\n@@ -1348,1 +1346,1 @@\n-    add(hlen_tmp, hlen_neg, 2 * haystack_chr_size);\n+    addi(hlen_tmp, hlen_neg, 2 * haystack_chr_size);\n@@ -1362,1 +1360,1 @@\n-    sub(result_tmp, haystack_len, 1);\n+    subi(result_tmp, haystack_len, 1);\n@@ -1371,1 +1369,1 @@\n-    add(hlen_neg, hlen_neg, haystack_chr_size);\n+    addi(hlen_neg, hlen_neg, haystack_chr_size);\n@@ -1446,1 +1444,1 @@\n-      sub(cnt2, cnt2, minCharsInWord);\n+      subi(cnt2, cnt2, minCharsInWord);\n@@ -1460,1 +1458,1 @@\n-      addi(cnt2, cnt2, -4);\n+      subi(cnt2, cnt2, 4);\n@@ -1587,1 +1585,1 @@\n-  addi(cnt2, cnt2, -1);\n+  subi(cnt2, cnt2, 1);\n@@ -1593,1 +1591,1 @@\n-  addi(cnt2, cnt2, -1);\n+  subi(cnt2, cnt2, 1);\n@@ -1601,1 +1599,1 @@\n-  addi(cnt2, cnt2, -1);\n+  subi(cnt2, cnt2, 1);\n@@ -1636,1 +1634,1 @@\n-  int elem_per_word = wordSize\/elem_size;\n+  int elem_per_word = wordSize \/ elem_size;\n@@ -1665,1 +1663,1 @@\n-  addi(cnt1, cnt1, -elem_per_word);\n+  subi(cnt1, cnt1, elem_per_word);\n@@ -1672,1 +1670,1 @@\n-    addi(cnt1, cnt1, -elem_per_word);\n+    subi(cnt1, cnt1, elem_per_word);\n@@ -1744,1 +1742,1 @@\n-  addi(cnt1, cnt1, -wordSize);\n+  subi(cnt1, cnt1, wordSize);\n@@ -1751,1 +1749,1 @@\n-    addi(cnt1, cnt1, -wordSize);\n+    subi(cnt1, cnt1, wordSize);\n@@ -1839,1 +1837,1 @@\n-  andi(chunks, cnt, ~(stride-1));\n+  andi(chunks, cnt, ~(stride - 1));\n@@ -1848,1 +1846,1 @@\n-  andi(cnt, cnt, stride-1);      \/\/ don't forget about tail!\n+  andi(cnt, cnt, stride - 1);    \/\/ don't forget about tail!\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":48,"deletions":50,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-  __ sub(tmp1, tmp1, wordSize);                           \/\/ tmp1 := next index\n+  __ subi(tmp1, tmp1, wordSize);                           \/\/ tmp1 := next index\n@@ -493,1 +493,1 @@\n-  __ sub(tmp, tmp, wordSize);\n+  __ subi(tmp, tmp, wordSize);\n@@ -560,1 +560,1 @@\n-  __ sub(t0, t0, wordSize);\n+  __ subi(t0, t0, wordSize);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1BarrierSetAssembler_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-  __ sub(end, end, BytesPerHeapOop); \/\/ last element address to make inclusive\n+  __ subi(end, end, BytesPerHeapOop); \/\/ last element address to make inclusive\n@@ -84,1 +84,1 @@\n-  __ sub(count, count, 1);\n+  __ subi(count, count, 1);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/cardTableBarrierSetAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-  __ sub(tmp1, tmp1, wordSize);        \/\/ tmp := tmp - wordSize\n+  __ subi(tmp1, tmp1, wordSize);       \/\/ tmp := tmp - wordSize\n@@ -565,1 +565,1 @@\n-  __ sub(end, end, BytesPerHeapOop);\n+  __ subi(end, end, BytesPerHeapOop);\n@@ -578,1 +578,1 @@\n-  __ sub(count, count, 1);\n+  __ subi(count, count, 1);\n@@ -693,1 +693,1 @@\n-  __ sub(tmp, tmp, wordSize);\n+  __ subi(tmp, tmp, wordSize);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shenandoah\/shenandoahBarrierSetAssembler_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -244,1 +244,1 @@\n-  __ sub(tmp2, tmp2, sizeof(ZStoreBarrierEntry));\n+  __ subi(tmp2, tmp2, sizeof(ZStoreBarrierEntry));\n@@ -851,1 +851,1 @@\n-     __ sub(sp, sp, 32);\n+     __ subi(sp, sp, 32);\n@@ -854,1 +854,1 @@\n-     __ sub(sp, sp, 16);\n+     __ subi(sp, sp, 16);\n@@ -966,1 +966,1 @@\n-  __ sub(sp, sp, 16);\n+  __ subi(sp, sp, 16);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/zBarrierSetAssembler_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -269,1 +269,1 @@\n-  addi(esp, esp, 2 * Interpreter::stackElementSize);\n+  add(esp, esp, 2 * Interpreter::stackElementSize);\n@@ -273,1 +273,1 @@\n-  addi(esp, esp, -wordSize);\n+  subi(esp, esp, wordSize);\n@@ -278,1 +278,1 @@\n-  addi(esp, esp, -wordSize);\n+  subi(esp, esp, wordSize);\n@@ -284,1 +284,1 @@\n-  addi(esp, esp, -2 * wordSize);\n+  subi(esp, esp, 2 * wordSize);\n@@ -296,1 +296,1 @@\n-  addi(esp, esp, 2 * Interpreter::stackElementSize);\n+  add(esp, esp, 2 * Interpreter::stackElementSize);\n@@ -300,1 +300,1 @@\n-  addi(esp, esp, -wordSize);\n+  subi(esp, esp, wordSize);\n@@ -305,1 +305,1 @@\n-  addi(esp, esp, -2 * wordSize);\n+  subi(esp, esp, 2 * wordSize);\n@@ -898,1 +898,1 @@\n-  add(sp, sp, -4 * wordSize);\n+  subi(sp, sp, 4 * wordSize);\n@@ -923,1 +923,1 @@\n-  add(sp, sp, 4 * wordSize);\n+  addi(sp, sp, 4 * wordSize);\n@@ -964,1 +964,1 @@\n-    addi(t0, t0, -DataLayout::counter_increment);\n+    subi(t0, t0, DataLayout::counter_increment);\n@@ -1031,1 +1031,1 @@\n-  addi(mdp_in, mdp_in, (unsigned)constant);\n+  add(mdp_in, mdp_in, (unsigned)constant);\n@@ -1040,1 +1040,1 @@\n-  addi(sp, sp, -2 * wordSize);\n+  subi(sp, sp, 2 * wordSize);\n@@ -1742,1 +1742,1 @@\n-      addi(tmp, tmp, -1);\n+      subi(tmp, tmp, 1);\n@@ -1755,1 +1755,1 @@\n-      addi(off_to_args, off_to_args, to_add);\n+      add(off_to_args, off_to_args, to_add);\n@@ -1765,1 +1765,1 @@\n-        addi(tmp, tmp, -TypeProfileArgsLimit*TypeStackSlotEntries::per_arg_count());\n+        sub(tmp, tmp, TypeProfileArgsLimit * TypeStackSlotEntries::per_arg_count());\n@@ -1852,1 +1852,1 @@\n-    add(tmp1, tmp1, - TypeStackSlotEntries::per_arg_count());\n+    sub(tmp1, tmp1, TypeStackSlotEntries::per_arg_count());\n@@ -1878,1 +1878,1 @@\n-    add(tmp1, tmp1, - TypeStackSlotEntries::per_arg_count());\n+    sub(tmp1, tmp1, TypeStackSlotEntries::per_arg_count());\n@@ -1893,1 +1893,1 @@\n-  add(cache, cache, Array<ResolvedIndyEntry>::base_offset_in_bytes());\n+  addi(cache, cache, Array<ResolvedIndyEntry>::base_offset_in_bytes());\n@@ -1909,1 +1909,1 @@\n-  add(cache, cache, Array<ResolvedIndyEntry>::base_offset_in_bytes());\n+  addi(cache, cache, Array<ResolvedIndyEntry>::base_offset_in_bytes());\n@@ -1935,1 +1935,1 @@\n-  add(cache, cache, Array<ResolvedMethodEntry>::base_offset_in_bytes());\n+  addi(cache, cache, Array<ResolvedMethodEntry>::base_offset_in_bytes());\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-    __ addi(c_rarg1, from(), Interpreter::local_offset_in_bytes(offset()));\n+    __ add(c_rarg1, from(), Interpreter::local_offset_in_bytes(offset()));\n@@ -144,1 +144,1 @@\n-      __ addi(x10, from(), Interpreter::local_offset_in_bytes(offset()));\n+      __ add(x10, from(), Interpreter::local_offset_in_bytes(offset()));\n@@ -153,1 +153,1 @@\n-    __ addi(x10, from(), Interpreter::local_offset_in_bytes(offset()));\n+    __ add(x10, from(), Interpreter::local_offset_in_bytes(offset()));\n","filename":"src\/hotspot\/cpu\/riscv\/interpreterRT_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-  addi(tmp, tmp, -1);\n+  subi(tmp, tmp, 1);\n@@ -1433,1 +1433,1 @@\n-  addi(esp, esp, 0 - wordSize);\n+  subi(esp, esp, wordSize);\n@@ -1465,1 +1465,1 @@\n-    addi(stack, stack, -count * wordSize - offset);\n+    sub(stack, stack, count * wordSize + offset);\n@@ -1490,1 +1490,1 @@\n-    addi(stack, stack, count * wordSize + offset);\n+    add(stack, stack, count * wordSize + offset);\n@@ -1506,1 +1506,1 @@\n-    addi(stack, stack, -push_slots * wordSize);\n+    subi(stack, stack, push_slots * wordSize);\n@@ -1635,1 +1635,1 @@\n-    add(tableN16, table3, 1*single_table_size*sizeof(juint), tmp1);\n+    add(tableN16, table3, 1 * single_table_size * sizeof(juint), tmp1);\n@@ -1654,1 +1654,1 @@\n-    sub(blks, blks, 1);\n+    subi(blks, blks, 1);\n@@ -1686,1 +1686,1 @@\n-      sub(blks, blks, 1);\n+      subi(blks, blks, 1);\n@@ -2049,1 +2049,1 @@\n-  add(vclmul_table, vclmul_table, table_num*single_table_size*sizeof(juint), tmp1);\n+  add(vclmul_table, vclmul_table, table_num * single_table_size * sizeof(juint), tmp1);\n@@ -2095,3 +2095,3 @@\n-  add(table1, table0, 1*single_table_size*sizeof(juint), tmp1);\n-  add(table2, table0, 2*single_table_size*sizeof(juint), tmp1);\n-  add(table3, table2, 1*single_table_size*sizeof(juint), tmp1);\n+  add(table1, table0, 1 * single_table_size * sizeof(juint), tmp1);\n+  add(table2, table0, 2 * single_table_size * sizeof(juint), tmp1);\n+  add(table3, table2, 1 * single_table_size * sizeof(juint), tmp1);\n@@ -2104,1 +2104,1 @@\n-    subw(len, len, 1);\n+    subiw(len, len, 1);\n@@ -2106,1 +2106,1 @@\n-    add(buf, buf, 1);\n+    addi(buf, buf, 1);\n@@ -2111,1 +2111,1 @@\n-    subw(len, len, 2);\n+    subiw(len, len, 2);\n@@ -2113,1 +2113,1 @@\n-    add(buf, buf, 2);\n+    addi(buf, buf, 2);\n@@ -2137,2 +2137,2 @@\n-    add(loop_buf_end, buf, len);    \/\/ loop_buf_end will be used as endpoint for loop below\n-    andi(len, len, unroll_words-1); \/\/ len = (len % unroll_words)\n+    add(loop_buf_end, buf, len); \/\/ loop_buf_end will be used as endpoint for loop below\n+    andi(len, len, unroll_words - 1); \/\/ len = (len % unroll_words)\n@@ -2165,1 +2165,1 @@\n-    subw(len, len, 1);\n+    subiw(len, len, 1);\n@@ -2170,1 +2170,1 @@\n-    subw(len, len, 1);\n+    subiw(len, len, 1);\n@@ -2175,1 +2175,1 @@\n-    subw(len, len, 1);\n+    subiw(len, len, 1);\n@@ -2241,1 +2241,1 @@\n-  addi(sp, sp, - wordSize * 20);\n+  subi(sp, sp, wordSize * 20);\n@@ -2267,1 +2267,1 @@\n-  addi(sp, sp, - 32 * wordSize);\n+  subi(sp, sp, 32 * wordSize);\n@@ -2608,1 +2608,1 @@\n-void MacroAssembler::add(Register Rd, Register Rn, int64_t increment, Register temp) {\n+void MacroAssembler::add(Register Rd, Register Rn, int64_t increment, Register tmp) {\n@@ -2612,3 +2612,3 @@\n-    assert_different_registers(Rn, temp);\n-    li(temp, increment);\n-    add(Rd, Rn, temp);\n+    assert_different_registers(Rn, tmp);\n+    mv(tmp, increment);\n+    add(Rd, Rn, tmp);\n@@ -2618,1 +2618,5 @@\n-void MacroAssembler::addw(Register Rd, Register Rn, int32_t increment, Register temp) {\n+void MacroAssembler::sub(Register Rd, Register Rn, int64_t decrement, Register tmp) {\n+  add(Rd, Rn, -decrement, tmp);\n+}\n+\n+void MacroAssembler::addw(Register Rd, Register Rn, int32_t increment, Register tmp) {\n@@ -2622,3 +2626,3 @@\n-    assert_different_registers(Rn, temp);\n-    li(temp, increment);\n-    addw(Rd, Rn, temp);\n+    assert_different_registers(Rn, tmp);\n+    mv(tmp, increment);\n+    addw(Rd, Rn, tmp);\n@@ -2628,6 +2632,2 @@\n-void MacroAssembler::sub(Register Rd, Register Rn, int64_t decrement, Register temp) {\n-  add(Rd, Rn, -decrement, temp);\n-}\n-\n-void MacroAssembler::subw(Register Rd, Register Rn, int32_t decrement, Register temp) {\n-  addw(Rd, Rn, -decrement, temp);\n+void MacroAssembler::subw(Register Rd, Register Rn, int32_t decrement, Register tmp) {\n+  addw(Rd, Rn, -decrement, tmp);\n@@ -4156,2 +4156,2 @@\n-  add(addr, addr, wordSize);\n-  sub(count, count, 1);\n+  addi(addr, addr, wordSize);\n+  subi(count, count, 1);\n@@ -4225,1 +4225,1 @@\n-  add(x15, x15, Array<Klass*>::base_offset_in_bytes());\n+  addi(x15, x15, Array<Klass*>::base_offset_in_bytes());\n@@ -4917,1 +4917,1 @@\n-    sub(in, in, BytesPerInt);\n+    subi(in, in, BytesPerInt);\n@@ -4921,1 +4921,1 @@\n-    sub(offset, offset, BytesPerInt);\n+    subi(offset, offset, BytesPerInt);\n@@ -4932,1 +4932,1 @@\n-  sub(in, in, BytesPerInt);\n+  subi(in, in, BytesPerInt);\n@@ -4936,1 +4936,1 @@\n-  sub(offset, offset, BytesPerInt);\n+  subi(offset, offset, BytesPerInt);\n@@ -4941,1 +4941,1 @@\n-  subw(len, len, 1);\n+  subiw(len, len, 1);\n@@ -5018,1 +5018,1 @@\n-  subw(idx, idx, 1);\n+  subiw(idx, idx, 1);\n@@ -5024,1 +5024,1 @@\n-  subw(kdx, kdx, 1);\n+  subiw(kdx, kdx, 1);\n@@ -5052,1 +5052,1 @@\n-  subw(xstart, xstart, 1);\n+  subiw(xstart, xstart, 1);\n@@ -5060,1 +5060,1 @@\n-  subw(idx, idx, 1);\n+  subiw(idx, idx, 1);\n@@ -5062,1 +5062,1 @@\n-  subw(idx, idx, 1);\n+  subiw(idx, idx, 1);\n@@ -5075,1 +5075,1 @@\n-  subw(kdx, kdx, 2);\n+  subiw(kdx, kdx, 2);\n@@ -5173,1 +5173,1 @@\n-  subw(idx, idx, 2);\n+  subiw(idx, idx, 2);\n@@ -5195,1 +5195,1 @@\n-  subw(idx, idx, 1);\n+  subiw(idx, idx, 1);\n@@ -5255,1 +5255,1 @@\n-  subw(xstart, xlen, 1);\n+  subiw(xstart, xlen, 1);\n@@ -5274,1 +5274,1 @@\n-    subw(xstart, xstart, 1);\n+    subiw(xstart, xstart, 1);\n@@ -5276,1 +5276,1 @@\n-    sub(sp, sp, 2 * wordSize);\n+    subi(sp, sp, 2 * wordSize);\n@@ -5288,1 +5288,1 @@\n-    subw(jdx, jdx, 1);\n+    subiw(jdx, jdx, 1);\n@@ -5316,1 +5316,1 @@\n-  subw(kdx, kdx, 1);\n+  subiw(kdx, kdx, 1);\n@@ -5322,1 +5322,1 @@\n-  subw(kdx, kdx, 1);\n+  subiw(kdx, kdx, 1);\n@@ -5347,1 +5347,1 @@\n-  subw(xstart, xstart, 1); \/\/ i = xstart-1;\n+  subiw(xstart, xstart, 1); \/\/ i = xstart-1;\n@@ -5350,1 +5350,1 @@\n-  sub(sp, sp, 4 * wordSize);\n+  subi(sp, sp, 4 * wordSize);\n@@ -5356,1 +5356,1 @@\n-  subw(xstart, xstart, 1); \/\/ i = xstart-1;\n+  subiw(xstart, xstart, 1); \/\/ i = xstart-1;\n@@ -5381,1 +5381,1 @@\n-  subw(tmp3, tmp3, 1);\n+  subiw(tmp3, tmp3, 1);\n@@ -5541,1 +5541,1 @@\n-    add(loop_base, base, remainder * wordSize);\n+    addi(loop_base, base, remainder * wordSize);\n@@ -5547,1 +5547,1 @@\n-    add(loop_base, loop_base, unroll * wordSize);\n+    addi(loop_base, loop_base, unroll * wordSize);\n@@ -5598,1 +5598,1 @@\n-  add(base, base, unroll * 8);\n+  addi(base, base, unroll * wordSize);\n@@ -5603,1 +5603,1 @@\n-  sub(cnt, cnt, unroll);\n+  subi(cnt, cnt, unroll);\n@@ -5642,1 +5642,1 @@\n-  add(base, base, CacheLineSize);\n+  addi(base, base, CacheLineSize);\n@@ -5728,1 +5728,1 @@\n-    addi(result, result, -1);                                                           \\\n+    subi(result, result, 1);                                                            \\\n@@ -5739,1 +5739,1 @@\n-    addi(result, result, -1);                                                           \\\n+    subi(result, result, 1);                                                            \\\n@@ -6147,1 +6147,1 @@\n-    and_imm12(Rd, Rs, imm);\n+    andi(Rd, Rs, imm);\n@@ -6150,1 +6150,1 @@\n-    and_imm12(Rd, Rd, 1);\n+    andi(Rd, Rd, 1);\n@@ -6203,1 +6203,1 @@\n-  addw(top, top, oopSize);\n+  addiw(top, top, oopSize);\n@@ -6235,1 +6235,1 @@\n-  subw(top, top, oopSize);\n+  subiw(top, top, oopSize);\n@@ -6275,1 +6275,1 @@\n-  addw(top, top, oopSize);\n+  addiw(top, top, oopSize);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":75,"deletions":75,"binary":false,"changes":150,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    addi(sp, sp, - 2 * wordSize);\n+    subi(sp, sp, 2 * wordSize);\n@@ -70,1 +70,1 @@\n-    addi(sp, fp, - 2 * wordSize);\n+    subi(sp, fp, 2 * wordSize);\n@@ -889,4 +889,14 @@\n-  void add (Register Rd, Register Rn, int64_t increment, Register temp = t0);\n-  void addw(Register Rd, Register Rn, int32_t increment, Register temp = t0);\n-  void sub (Register Rd, Register Rn, int64_t decrement, Register temp = t0);\n-  void subw(Register Rd, Register Rn, int32_t decrement, Register temp = t0);\n+  void add(Register Rd, Register Rn, int64_t increment, Register tmp = t0);\n+  void sub(Register Rd, Register Rn, int64_t decrement, Register tmp = t0);\n+  void addw(Register Rd, Register Rn, int32_t increment, Register tmp = t0);\n+  void subw(Register Rd, Register Rn, int32_t decrement, Register tmp = t0);\n+\n+  void subi(Register Rd, Register Rn, int32_t decrement) {\n+    assert(is_simm12(-decrement), \"Must be\");\n+    addi(Rd, Rn, -decrement);\n+  }\n+\n+  void subiw(Register Rd, Register Rn, int32_t decrement) {\n+    assert(is_simm12(-decrement), \"Must be\");\n+    addiw(Rd, Rn, -decrement);\n+  }\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -6485,3 +6485,3 @@\n-    __ add(as_Register($dst$$reg),\n-           as_Register($src1$$reg),\n-           $src2$$constant);\n+    __ addi(as_Register($dst$$reg),\n+            as_Register($src1$$reg),\n+            $src2$$constant);\n@@ -6516,3 +6516,3 @@\n-    __ add(as_Register($dst$$reg),\n-           as_Register($src1$$reg),\n-           $src2$$constant);\n+    __ addi(as_Register($dst$$reg),\n+            as_Register($src1$$reg),\n+            $src2$$constant);\n@@ -6549,3 +6549,3 @@\n-    __ subw(as_Register($dst$$reg),\n-            as_Register($src1$$reg),\n-            $src2$$constant);\n+    __ subiw(as_Register($dst$$reg),\n+             as_Register($src1$$reg),\n+             $src2$$constant);\n@@ -6580,3 +6580,3 @@\n-    __ sub(as_Register($dst$$reg),\n-           as_Register($src1$$reg),\n-           $src2$$constant);\n+    __ subi(as_Register($dst$$reg),\n+            as_Register($src1$$reg),\n+            $src2$$constant);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-  __ addi(sp, sp, -2 * wordSize);\n+  __ subi(sp, sp, 2 * wordSize);\n@@ -143,1 +143,1 @@\n-  __ sub(x12, x12, 2 * wordSize);\n+  __ subi(x12, x12, 2 * wordSize);\n@@ -191,1 +191,1 @@\n-  __ sub(x11, x11, 2 * wordSize);    \/\/ We'll push pc and fp by hand\n+  __ subi(x11, x11, 2 * wordSize);   \/\/ We'll push pc and fp by hand\n@@ -199,3 +199,3 @@\n-  __ add(x15, x15, wordSize);        \/\/ Bump array pointer (sizes)\n-  __ add(x12, x12, wordSize);        \/\/ Bump array pointer (pcs)\n-  __ subw(x13, x13, 1);              \/\/ Decrement counter\n+  __ addi(x15, x15, wordSize);       \/\/ Bump array pointer (sizes)\n+  __ addi(x12, x12, wordSize);       \/\/ Bump array pointer (pcs)\n+  __ subiw(x13, x13, 1);             \/\/ Decrement counter\n@@ -295,1 +295,1 @@\n-  __ addi(sp, sp, -2 * wordSize);\n+  __ subi(sp, sp, 2 * wordSize);\n@@ -349,1 +349,1 @@\n-  __ addi(sp, sp , 2 * wordSize);\n+  __ addi(sp, sp, 2 * wordSize);\n","filename":"src\/hotspot\/cpu\/riscv\/runtime_riscv.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -805,1 +805,1 @@\n-      __ addi(sp, sp, -2 * wordSize);\n+      __ subi(sp, sp, 2 * wordSize);\n@@ -827,1 +827,1 @@\n-      __ add(sp, sp, 2 * wordSize);\n+      __ addi(sp, sp, 2 * wordSize);\n@@ -2339,1 +2339,1 @@\n-  __ sub(x12, x12, 2 * wordSize);\n+  __ subi(x12, x12, 2 * wordSize);\n@@ -2382,1 +2382,1 @@\n-  __ sub(x9, x9, 2 * wordSize);        \/\/ We'll push pc and fp by hand\n+  __ subi(x9, x9, 2 * wordSize);       \/\/ We'll push pc and fp by hand\n@@ -2391,1 +2391,1 @@\n-  __ addi(x13, x13, -1);               \/\/ Decrement counter\n+  __ subi(x13, x13, 1);                \/\/ Decrement counter\n@@ -2569,1 +2569,1 @@\n-    __ add(x18, x18, NativeInstruction::instruction_size);\n+    __ addi(x18, x18, NativeInstruction::instruction_size);\n@@ -2739,1 +2739,1 @@\n-  __ addi(sp, fp, 0 - ((unsigned)framesize << LogBytesPerInt)); \/\/ prolog\n+  __ subi(sp, fp, (unsigned)framesize << LogBytesPerInt); \/\/ prolog\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -344,1 +344,1 @@\n-    __ addi(c_rarg6, c_rarg6, -1);\n+    __ subi(c_rarg6, c_rarg6, 1);\n@@ -626,1 +626,1 @@\n-    __ add(c_rarg3, c_rarg3, 1);\n+    __ addi(c_rarg3, c_rarg3, 1);\n@@ -701,2 +701,2 @@\n-      __ add(base, base, MacroAssembler::zero_words_block_size * wordSize);\n-      __ sub(cnt, cnt, MacroAssembler::zero_words_block_size);\n+      __ addi(base, base, MacroAssembler::zero_words_block_size * wordSize);\n+      __ subi(cnt, cnt, MacroAssembler::zero_words_block_size);\n@@ -782,1 +782,1 @@\n-    __ sub(count, count, 16);\n+    __ subi(count, count, 16);\n@@ -808,1 +808,1 @@\n-    __ sub(count, count, 8);\n+    __ subi(count, count, 8);\n@@ -962,1 +962,1 @@\n-      __ addi(t0, cnt, -32);\n+      __ subi(t0, cnt, 32);\n@@ -964,1 +964,1 @@\n-      __ addi(t0, cnt, -8);\n+      __ subi(t0, cnt, 8);\n@@ -988,1 +988,1 @@\n-      __ addi(cnt, cnt, -granularity);\n+      __ subi(cnt, cnt, granularity);\n@@ -999,2 +999,2 @@\n-      __ addi(src, src, -wordSize * 4);\n-      __ addi(dst, dst, -wordSize * 4);\n+      __ subi(src, src, wordSize * 4);\n+      __ subi(dst, dst, wordSize * 4);\n@@ -1017,2 +1017,2 @@\n-    __ addi(t0, cnt, -(32 + wordSize * 4));\n-    __ addi(cnt, cnt, -wordSize * 4);\n+    __ subi(t0, cnt, 32 + wordSize * 4);\n+    __ subi(cnt, cnt, wordSize * 4);\n@@ -1023,1 +1023,1 @@\n-    __ addi(t0, cnt, -8); \/\/ if not - copy the reminder\n+    __ subi(t0, cnt, 8); \/\/ if not - copy the reminder\n@@ -1028,2 +1028,2 @@\n-      __ addi(src, src, -wordSize);\n-      __ addi(dst, dst, -wordSize);\n+      __ subi(src, src, wordSize);\n+      __ subi(dst, dst, wordSize);\n@@ -1038,2 +1038,2 @@\n-    __ addi(t0, cnt, -(8 + wordSize));\n-    __ addi(cnt, cnt, -wordSize);\n+    __ subi(t0, cnt, 8 + wordSize);\n+    __ subi(cnt, cnt, wordSize);\n@@ -1057,1 +1057,1 @@\n-    __ addi(cnt, cnt, -granularity);\n+    __ subi(cnt, cnt, granularity);\n@@ -1581,2 +1581,2 @@\n-    __ add(to, to, UseCompressedOops ? 4 : 8);\n-    __ sub(count, count, 1);\n+    __ addi(to, to, UseCompressedOops ? 4 : 8);\n+    __ subi(count, count, 1);\n@@ -1590,1 +1590,1 @@\n-    __ add(from, from, UseCompressedOops ? 4 : 8);\n+    __ addi(from, from, UseCompressedOops ? 4 : 8);\n@@ -1932,1 +1932,1 @@\n-    __ add(from, from, arrayOopDesc::base_offset_in_bytes(T_OBJECT));\n+    __ addi(from, from, arrayOopDesc::base_offset_in_bytes(T_OBJECT));\n@@ -1934,1 +1934,1 @@\n-    __ add(to, to, arrayOopDesc::base_offset_in_bytes(T_OBJECT));\n+    __ addi(to, to, arrayOopDesc::base_offset_in_bytes(T_OBJECT));\n@@ -1955,1 +1955,1 @@\n-      __ add(from, from, arrayOopDesc::base_offset_in_bytes(T_OBJECT));\n+      __ addi(from, from, arrayOopDesc::base_offset_in_bytes(T_OBJECT));\n@@ -1957,1 +1957,1 @@\n-      __ add(to, to, arrayOopDesc::base_offset_in_bytes(T_OBJECT));\n+      __ addi(to, to, arrayOopDesc::base_offset_in_bytes(T_OBJECT));\n@@ -2071,1 +2071,1 @@\n-          __ addiw(count, count, -1);\n+          __ subiw(count, count, 1);\n@@ -2080,1 +2080,1 @@\n-          __ addiw(count, count, -(2 >> shift));\n+          __ subiw(count, count, 2 >> shift);\n@@ -2089,1 +2089,1 @@\n-          __ addiw(count, count, -(4 >> shift));\n+          __ subiw(count, count, 4 >> shift);\n@@ -2503,1 +2503,1 @@\n-    __ sub(cnt2, cnt2, wordSize \/ 2); \/\/ Already loaded 4 symbols\n+    __ subi(cnt2, cnt2, wordSize \/ 2); \/\/ Already loaded 4 symbols\n@@ -2526,1 +2526,1 @@\n-    __ sub(cnt2, cnt2, wordSize * 2);\n+    __ subi(cnt2, cnt2, wordSize * 2);\n@@ -2529,1 +2529,1 @@\n-      __ sub(cnt2, cnt2, wordSize * 2);\n+      __ subi(cnt2, cnt2, wordSize * 2);\n@@ -2543,1 +2543,1 @@\n-      __ addi(cnt2, cnt2, -wordSize);\n+      __ subi(cnt2, cnt2, wordSize);\n@@ -2547,1 +2547,1 @@\n-      __ addi(cnt2, cnt2, -wordSize); \/\/ cnt2 is now an offset in strL which points to last 8 bytes\n+      __ subi(cnt2, cnt2, wordSize); \/\/ cnt2 is now an offset in strL which points to last 8 bytes\n@@ -2612,1 +2612,1 @@\n-    __ add(t1, sp, wordSize);\n+    __ addi(t1, sp, wordSize);\n@@ -2614,1 +2614,1 @@\n-    __ sub(sp, sp, 4 * wordSize);\n+    __ subi(sp, sp, 4 * wordSize);\n@@ -2667,1 +2667,1 @@\n-    __ sub(cnt2, cnt2, wordSize \/ (isLL ? 1 : 2));\n+    __ subi(cnt2, cnt2, wordSize \/ (isLL ? 1 : 2));\n@@ -2669,2 +2669,2 @@\n-    __ add(str1, str1, wordSize);\n-    __ add(str2, str2, wordSize);\n+    __ addi(str1, str1, wordSize);\n+    __ addi(str2, str2, wordSize);\n@@ -2672,1 +2672,1 @@\n-    __ sub(cnt2, cnt2, isLL ? 16 : 8);\n+    __ subi(cnt2, cnt2, isLL ? 16 : 8);\n@@ -2677,1 +2677,1 @@\n-      __ sub(cnt2, cnt2, isLL ? 16 : 8);\n+      __ subi(cnt2, cnt2, isLL ? 16 : 8);\n@@ -2682,1 +2682,1 @@\n-      __ sub(cnt2, cnt2, isLL ? 8 : 4);\n+      __ subi(cnt2, cnt2, isLL ? 8 : 4);\n@@ -2690,1 +2690,1 @@\n-      __ sub(cnt2, cnt2, isLL ? 8 : 4);\n+      __ subi(cnt2, cnt2, isLL ? 8 : 4);\n@@ -2801,1 +2801,1 @@\n-    __ sub(haystack_len, haystack_len, wordSize \/ haystack_chr_size - 1);\n+    __ subi(haystack_len, haystack_len, wordSize \/ haystack_chr_size - 1);\n@@ -2817,3 +2817,3 @@\n-    __ sub(haystack_len, haystack_len, wordSize \/ haystack_chr_size);\n-    __ add(result, result, wordSize \/ haystack_chr_size);\n-    __ add(haystack, haystack, wordSize);\n+    __ subi(haystack_len, haystack_len, wordSize \/ haystack_chr_size);\n+    __ addi(result, result, wordSize \/ haystack_chr_size);\n+    __ addi(haystack, haystack, wordSize);\n@@ -2828,3 +2828,3 @@\n-    __ sub(haystack_len, haystack_len, wordSize \/ haystack_chr_size);\n-    __ add(haystack, haystack, wordSize);\n-    __ add(result, result, wordSize \/ haystack_chr_size);\n+    __ subi(haystack_len, haystack_len, wordSize \/ haystack_chr_size);\n+    __ addi(haystack, haystack, wordSize);\n+    __ addi(result, result, wordSize \/ haystack_chr_size);\n@@ -2878,1 +2878,1 @@\n-    __ add(trailing_zeros, trailing_zeros, 1);\n+    __ addi(trailing_zeros, trailing_zeros, 1);\n@@ -2886,2 +2886,2 @@\n-    __ add(result, result, 1);\n-    __ add(haystack, haystack, haystack_chr_size);\n+    __ addi(result, result, 1);\n+    __ addi(haystack, haystack, haystack_chr_size);\n@@ -2907,1 +2907,1 @@\n-    __ sub(result, result, 1); \/\/ array index from 0, so result -= 1\n+    __ subi(result, result, 1); \/\/ array index from 0, so result -= 1\n@@ -2915,1 +2915,1 @@\n-    __ add(result, result, 1);\n+    __ addi(result, result, 1);\n@@ -2925,1 +2925,1 @@\n-    __ add(trailing_zeros, trailing_zeros, 1); \/\/ next char index\n+    __ addi(trailing_zeros, trailing_zeros, 1); \/\/ next char index\n@@ -2934,1 +2934,1 @@\n-    __ add(haystack, haystack, haystack_chr_size);\n+    __ addi(haystack, haystack, haystack_chr_size);\n@@ -2945,1 +2945,1 @@\n-    __ add(result, result, 1);\n+    __ addi(result, result, 1);\n@@ -3306,1 +3306,1 @@\n-      addi(count, count, -2);\n+      subi(count, count, 2);\n@@ -3322,1 +3322,1 @@\n-      addi(count, count, -2);\n+      subi(count, count, 2);\n@@ -3374,1 +3374,1 @@\n-      addi(Pb, Pb, -wordSize);\n+      subi(Pb, Pb, wordSize);\n@@ -3385,1 +3385,1 @@\n-      addi(Pn, Pn, -wordSize);\n+      subi(Pn, Pn, wordSize);\n@@ -3429,1 +3429,1 @@\n-      addi(t0, tmp0, -1);\n+      subi(t0, tmp0, 1);\n@@ -3458,1 +3458,1 @@\n-      add(Pa, Pa, wordSize);\n+      addi(Pa, Pa, wordSize);\n@@ -3460,1 +3460,1 @@\n-      add(Pb, Pb, -wordSize);\n+      subi(Pb, Pb, wordSize);\n@@ -3462,1 +3462,1 @@\n-      add(Pm, Pm, wordSize);\n+      addi(Pm, Pm, wordSize);\n@@ -3464,1 +3464,1 @@\n-      add(Pn, Pn, -wordSize);\n+      subi(Pn, Pn, wordSize);\n@@ -3519,1 +3519,1 @@\n-            add(i, i, 1);\n+            addi(i, i, 1);\n@@ -3525,1 +3525,1 @@\n-            sub(cnt, cnt, 1);\n+            subi(cnt, cnt, 1);\n@@ -3527,1 +3527,1 @@\n-          addi(tmp0, tmp0, -1);\n+          subi(tmp0, tmp0, 1);\n@@ -3550,1 +3550,1 @@\n-      addi(s, s, -wordSize);\n+      subi(s, s, wordSize);\n@@ -3587,1 +3587,1 @@\n-      addi(Pn, Pn, -wordSize);\n+      subi(Pn, Pn, wordSize);\n@@ -3622,1 +3622,1 @@\n-      addi(t0, tmp0, -1);\n+      subi(t0, tmp0, 1);\n@@ -3728,1 +3728,1 @@\n-        addw(Ri, Ri, 1);\n+        addiw(Ri, Ri, 1);\n@@ -3746,1 +3746,1 @@\n-          subw(Rj, Rj, 1);\n+          subiw(Rj, Rj, 1);\n@@ -3751,1 +3751,1 @@\n-        addw(Ri, Ri, 1);\n+        addiw(Ri, Ri, 1);\n@@ -3862,1 +3862,1 @@\n-          sub(Rj, Rj, 1);\n+          subi(Rj, Rj, 1);\n@@ -3924,1 +3924,1 @@\n-      __ sub(sp, sp, 2 * wordSize);\n+      __ subi(sp, sp, 2 * wordSize);\n@@ -3937,1 +3937,1 @@\n-      __ add(sp, sp, 2 * wordSize);\n+      __ addi(sp, sp, 2 * wordSize);\n@@ -3962,1 +3962,1 @@\n-      __ sub(sp, sp, 2 * wordSize);\n+      __ subi(sp, sp, 2 * wordSize);\n@@ -3977,1 +3977,1 @@\n-      __ add(sp, sp, 2 * wordSize);\n+      __ addi(sp, sp, 2 * wordSize);\n@@ -3984,1 +3984,1 @@\n-    __ sub(sp, t1, 2 * wordSize); \/\/ now pointing to fp spill\n+    __ subi(sp, t1, 2 * wordSize); \/\/ now pointing to fp spill\n@@ -4441,1 +4441,1 @@\n-        __ add(ofs, ofs, vset_sew == Assembler::e32 ? 64 : 128);\n+        __ addi(ofs, ofs, vset_sew == Assembler::e32 ? 64 : 128);\n@@ -4935,1 +4935,1 @@\n-      __ sub(loop, loop, 1);\n+      __ subi(loop, loop, 1);\n@@ -5515,1 +5515,1 @@\n-        __ sub(length, length, 3);\n+        __ subi(length, length, 3);\n@@ -5792,1 +5792,1 @@\n-      __ sub(length, length, 4);\n+      __ subi(length, length, 4);\n@@ -5975,1 +5975,1 @@\n-    __ sub(len, len, step_1);\n+    __ subi(len, len, step_1);\n@@ -5980,1 +5980,1 @@\n-    __ sub(count, nmax, 16);\n+    __ subi(count, nmax, 16);\n@@ -5985,1 +5985,1 @@\n-    __ sub(count, count, 32);\n+    __ subi(count, count, 32);\n@@ -5991,1 +5991,1 @@\n-    __ sub(count, count, step_64);\n+    __ subi(count, count, step_64);\n@@ -6008,1 +6008,1 @@\n-    __ sub(count, nmax, 16);\n+    __ subi(count, nmax, 16);\n@@ -6022,1 +6022,1 @@\n-    __ sub(len, len, step_64);\n+    __ subi(len, len, step_64);\n@@ -6030,1 +6030,1 @@\n-    __ sub(len, len, step_16);\n+    __ subi(len, len, step_16);\n@@ -6034,1 +6034,1 @@\n-    __ add(len, len, 15);\n+    __ addi(len, len, 15);\n@@ -6042,1 +6042,1 @@\n-    __ sub(len, len, step_1);\n+    __ subi(len, len, step_1);\n@@ -6224,1 +6224,1 @@\n-      __ sub(length, length, BLOCK_LENGTH);\n+      __ subi(length, length, BLOCK_LENGTH);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":96,"deletions":96,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -88,2 +88,2 @@\n-  __ addi(sp, c_rarg3, -18 * wordSize);\n-  __ addi(sp, sp, -2 * wordSize);\n+  __ subi(sp, c_rarg3, 18 * wordSize);\n+  __ subi(sp, sp, 2 * wordSize);\n@@ -745,2 +745,2 @@\n-  __ add(sp, sp, - entry_size); \/\/ add space for a monitor entry\n-  __ add(esp, esp, - entry_size);\n+  __ sub(sp, sp, entry_size); \/\/ add space for a monitor entry\n+  __ sub(esp, esp, entry_size);\n@@ -771,1 +771,1 @@\n-    __ add(esp, sp, - 14 * wordSize);\n+    __ subi(esp, sp, 14 * wordSize);\n@@ -773,1 +773,1 @@\n-    __ add(sp, sp, - 14 * wordSize);\n+    __ subi(sp, sp, 14 * wordSize);\n@@ -778,1 +778,1 @@\n-    __ add(esp, sp, - 12 * wordSize);\n+    __ subi(esp, sp, 12 * wordSize);\n@@ -781,1 +781,1 @@\n-    __ add(sp, sp, - 12 * wordSize);\n+    __ subi(sp, sp, 12 * wordSize);\n@@ -836,1 +836,1 @@\n-    __ sub(t0, sp, 2 * wordSize);\n+    __ subi(t0, sp, 2 * wordSize);\n@@ -1021,1 +1021,1 @@\n-  __ addi(xlocals, xlocals, -wordSize);\n+  __ subi(xlocals, xlocals, wordSize);\n@@ -1178,1 +1178,1 @@\n-    __ addi(t0, zr, (u1)_thread_in_Java);\n+    __ mv(t0, (u1)_thread_in_Java);\n@@ -1205,1 +1205,1 @@\n-  __ sub(t0, esp, 4 * wordSize);\n+  __ subi(t0, esp, 4 * wordSize);\n@@ -1311,1 +1311,1 @@\n-    __ addi(t1, zr, (u1)StackOverflow::stack_guard_yellow_reserved_disabled);\n+    __ mv(t1, (u1)StackOverflow::stack_guard_yellow_reserved_disabled);\n@@ -1443,1 +1443,1 @@\n-  __ add(xlocals, xlocals, -wordSize);\n+  __ subi(xlocals, xlocals, wordSize);\n@@ -1461,2 +1461,2 @@\n-    __ add(t0, t0, wordSize);\n-    __ add(x13, x13, -1); \/\/ until everything initialized\n+    __ addi(t0, t0, wordSize);\n+    __ subi(x13, x13, 1); \/\/ until everything initialized\n@@ -1653,1 +1653,1 @@\n-    __ add(xlocals, xlocals, wordSize);\n+    __ addi(xlocals, xlocals, wordSize);\n@@ -1748,1 +1748,1 @@\n-  __ sub(sp, sp, 2 * wordSize);\n+  __ subi(sp, sp, 2 * wordSize);\n@@ -1757,1 +1757,1 @@\n-  __ add(sp, sp, 2 * wordSize);\n+  __ addi(sp, sp, 2 * wordSize);\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -200,1 +200,1 @@\n-    __ addi(temp_reg, temp_reg, -Bytecodes::_breakpoint); \/\/ temp_reg is temporary register.\n+    __ sub(temp_reg, temp_reg, Bytecodes::_breakpoint); \/\/ temp_reg is temporary register.\n@@ -212,1 +212,1 @@\n-  __ addi(temp_reg, temp_reg, -(int) Bytecodes::java_code(bc));\n+  __ sub(temp_reg, temp_reg, (int)Bytecodes::java_code(bc));\n@@ -740,1 +740,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_INT) >> 2);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_INT) >> 2);\n@@ -753,1 +753,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_LONG) >> 3);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_LONG) >> 3);\n@@ -765,1 +765,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_FLOAT) >> 2);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_FLOAT) >> 2);\n@@ -777,1 +777,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_DOUBLE) >> 3);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_DOUBLE) >> 3);\n@@ -789,1 +789,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_OBJECT) >> LogBytesPerHeapOop);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_OBJECT) >> LogBytesPerHeapOop);\n@@ -801,1 +801,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_BYTE) >> 0);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_BYTE) >> 0);\n@@ -813,1 +813,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_CHAR) >> 1);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_CHAR) >> 1);\n@@ -829,1 +829,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_CHAR) >> 1); \/\/ addi, max imm is 2^11\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_CHAR) >> 1); \/\/ addi, max imm is 2^11\n@@ -841,1 +841,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_SHORT) >> 1);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_SHORT) >> 1);\n@@ -1020,1 +1020,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_INT) >> 2);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_INT) >> 2);\n@@ -1033,1 +1033,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_LONG) >> 3);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_LONG) >> 3);\n@@ -1046,1 +1046,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_FLOAT) >> 2);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_FLOAT) >> 2);\n@@ -1059,1 +1059,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_DOUBLE) >> 3);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_DOUBLE) >> 3);\n@@ -1073,1 +1073,1 @@\n-  __ add(x14, x12, arrayOopDesc::base_offset_in_bytes(T_OBJECT) >> LogBytesPerHeapOop);\n+  __ addi(x14, x12, arrayOopDesc::base_offset_in_bytes(T_OBJECT) >> LogBytesPerHeapOop);\n@@ -1137,1 +1137,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_BYTE) >> 0);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_BYTE) >> 0);\n@@ -1151,1 +1151,1 @@\n-  __ add(x11, x11, arrayOopDesc::base_offset_in_bytes(T_CHAR) >> 1);\n+  __ addi(x11, x11, arrayOopDesc::base_offset_in_bytes(T_CHAR) >> 1);\n@@ -1188,1 +1188,1 @@\n-  __ addi(esp, esp, Interpreter::stackElementSize);\n+  __ add(esp, esp, Interpreter::stackElementSize);\n@@ -1193,1 +1193,1 @@\n-  __ addi(esp, esp, 2 * Interpreter::stackElementSize);\n+  __ add(esp, esp, 2 * Interpreter::stackElementSize);\n@@ -1886,1 +1886,1 @@\n-  __ addi(xbcp, xbcp, in_bytes(ConstMethod::codes_offset()));\n+  __ add(xbcp, xbcp, in_bytes(ConstMethod::codes_offset()));\n@@ -1961,1 +1961,1 @@\n-  __ addi(x11, x11, -1);\n+  __ subi(x11, x11, 1);\n@@ -2547,1 +2547,1 @@\n-  __ sub(t0, tos_state, (u1)ztos);\n+  __ subi(t0, tos_state, (u1)ztos);\n@@ -2561,1 +2561,1 @@\n-  __ sub(t0, tos_state, (u1)atos);\n+  __ subi(t0, tos_state, (u1)atos);\n@@ -2572,1 +2572,1 @@\n-  __ sub(t0, tos_state, (u1)itos);\n+  __ subi(t0, tos_state, (u1)itos);\n@@ -2585,1 +2585,1 @@\n-  __ sub(t0, tos_state, (u1)ctos);\n+  __ subi(t0, tos_state, (u1)ctos);\n@@ -2597,1 +2597,1 @@\n-  __ sub(t0, tos_state, (u1)stos);\n+  __ subi(t0, tos_state, (u1)stos);\n@@ -2609,1 +2609,1 @@\n-  __ sub(t0, tos_state, (u1)ltos);\n+  __ subi(t0, tos_state, (u1)ltos);\n@@ -2621,1 +2621,1 @@\n-  __ sub(t0, tos_state, (u1)ftos);\n+  __ subi(t0, tos_state, (u1)ftos);\n@@ -2634,1 +2634,1 @@\n-  __ sub(t0, tos_state, (u1)dtos);\n+  __ subi(t0, tos_state, (u1)dtos);\n@@ -2699,1 +2699,1 @@\n-      __ sub(t0, c_rarg3, ltos);\n+      __ subi(t0, c_rarg3, (u1)ltos);\n@@ -2701,1 +2701,1 @@\n-      __ sub(t0, c_rarg3, dtos);\n+      __ subi(t0, c_rarg3, (u1)dtos);\n@@ -2775,1 +2775,1 @@\n-  __ sub(t0, tos_state, (u1)ztos);\n+  __ subi(t0, tos_state, (u1)ztos);\n@@ -2795,1 +2795,1 @@\n-  __ sub(t0, tos_state, (u1)atos);\n+  __ subi(t0, tos_state, (u1)atos);\n@@ -2816,1 +2816,1 @@\n-  __ sub(t0, tos_state, (u1)itos);\n+  __ subi(t0, tos_state, (u1)itos);\n@@ -2836,1 +2836,1 @@\n-  __ sub(t0, tos_state, (u1)ctos);\n+  __ subi(t0, tos_state, (u1)ctos);\n@@ -2856,1 +2856,1 @@\n-  __ sub(t0, tos_state, (u1)stos);\n+  __ subi(t0, tos_state, (u1)stos);\n@@ -2876,1 +2876,1 @@\n-  __ sub(t0, tos_state, (u1)ltos);\n+  __ subi(t0, tos_state, (u1)ltos);\n@@ -2896,1 +2896,1 @@\n-  __ sub(t0, tos_state, (u1)ftos);\n+  __ subi(t0, tos_state, (u1)ftos);\n@@ -2917,1 +2917,1 @@\n-  __ sub(t0, tos_state, (u1)dtos);\n+  __ subi(t0, tos_state, (u1)dtos);\n@@ -3210,1 +3210,1 @@\n-  __ sub(xbcp, xbcp, 1);\n+  __ subi(xbcp, xbcp, 1);\n@@ -3524,1 +3524,1 @@\n-  __ sub(t1, t0, (u1)JVM_CONSTANT_Class);\n+  __ subi(t1, t0, (u1)JVM_CONSTANT_Class);\n@@ -3561,1 +3561,1 @@\n-      __ sub(x13, x13, oopDesc::base_offset_in_bytes());\n+      __ subi(x13, x13, oopDesc::base_offset_in_bytes());\n@@ -3563,1 +3563,1 @@\n-      __ sub(x13, x13, sizeof(oopDesc));\n+      __ subi(x13, x13, sizeof(oopDesc));\n@@ -3571,1 +3571,1 @@\n-        __ add(x12, x10, oopDesc::base_offset_in_bytes());\n+        __ addi(x12, x10, oopDesc::base_offset_in_bytes());\n@@ -3573,1 +3573,1 @@\n-        __ add(x12, x10, sizeof(oopDesc));\n+        __ addi(x12, x10, sizeof(oopDesc));\n@@ -3578,2 +3578,2 @@\n-      __ add(x12, x12, BytesPerLong);\n-      __ sub(x13, x13, BytesPerLong);\n+      __ addi(x12, x12, BytesPerLong);\n+      __ subi(x13, x13, BytesPerLong);\n@@ -3652,1 +3652,1 @@\n-  __ add(t0, x13, Array<u1>::base_offset_in_bytes());\n+  __ addi(t0, x13, Array<u1>::base_offset_in_bytes());\n@@ -3656,1 +3656,1 @@\n-  __ sub(t0, x11, (u1)JVM_CONSTANT_Class);\n+  __ subi(t0, x11, (u1)JVM_CONSTANT_Class);\n@@ -3707,1 +3707,1 @@\n-  __ add(t0, x13, Array<u1>::base_offset_in_bytes());\n+  __ addi(t0, x13, Array<u1>::base_offset_in_bytes());\n@@ -3711,1 +3711,1 @@\n-  __ sub(t0, x11, (u1)JVM_CONSTANT_Class);\n+  __ subi(t0, x11, (u1)JVM_CONSTANT_Class);\n@@ -3887,1 +3887,1 @@\n-     __ add(c_rarg3, c_rarg3, wordSize);           \/\/ advance to next word\n+     __ addi(c_rarg3, c_rarg3, wordSize);          \/\/ advance to next word\n@@ -3982,1 +3982,1 @@\n-  __ sub(c_rarg1, c_rarg1, wordSize);\n+  __ subi(c_rarg1, c_rarg1, wordSize);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":54,"deletions":54,"binary":false,"changes":108,"status":"modified"}]}