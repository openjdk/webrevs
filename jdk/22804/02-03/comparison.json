{"files":[{"patch":"@@ -2018,4 +2018,4 @@\n-  INSN(rol,       0b0110011, 0b001, 0b0110000);\n-  INSN(rolw,      0b0111011, 0b001, 0b0110000);\n-  INSN(ror,       0b0110011, 0b101, 0b0110000);\n-  INSN(rorw,      0b0111011, 0b101, 0b0110000);\n+  INSN(rolr,      0b0110011, 0b001, 0b0110000);\n+  INSN(rolrw,     0b0111011, 0b001, 0b0110000);\n+  INSN(rorr,      0b0110011, 0b101, 0b0110000);\n+  INSN(rorrw,     0b0111011, 0b101, 0b0110000);\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2873,1 +2873,1 @@\n-void MacroAssembler::ror_imm(Register dst, Register src, uint32_t shift, Register tmp)\n+void MacroAssembler::ror(Register dst, Register src, uint32_t shift, Register tmp)\n@@ -2889,1 +2889,1 @@\n-void MacroAssembler::rolw_imm(Register dst, Register src, uint32_t shift, Register tmp) {\n+void MacroAssembler::rolw(Register dst, Register src, uint32_t shift, Register tmp) {\n@@ -4362,1 +4362,1 @@\n-    ror_imm(r_bitmap, r_bitmap, bit);\n+    ror(r_bitmap, r_bitmap, bit);\n@@ -4443,1 +4443,1 @@\n-    ror_imm(r_bitmap, r_bitmap, 1);\n+    ror(r_bitmap, r_bitmap, 1);\n@@ -5057,1 +5057,1 @@\n-  ror_imm(x_xstart, x_xstart, 32); \/\/ convert big-endian to little-endian\n+  ror(x_xstart, x_xstart, 32); \/\/ convert big-endian to little-endian\n@@ -5067,1 +5067,1 @@\n-  ror_imm(y_idx, y_idx, 32); \/\/ convert big-endian to little-endian\n+  ror(y_idx, y_idx, 32); \/\/ convert big-endian to little-endian\n@@ -5076,1 +5076,1 @@\n-  ror_imm(product, product, 32); \/\/ back to big-endian\n+  ror(product, product, 32); \/\/ back to big-endian\n@@ -5137,2 +5137,2 @@\n-  ror_imm(yz_idx1, yz_idx1, 32); \/\/ convert big-endian to little-endian\n-  ror_imm(yz_idx2, yz_idx2, 32);\n+  ror(yz_idx1, yz_idx1, 32); \/\/ convert big-endian to little-endian\n+  ror(yz_idx2, yz_idx2, 32);\n@@ -5146,2 +5146,2 @@\n-  ror_imm(t0, t0, 32, tmp); \/\/ convert big-endian to little-endian\n-  ror_imm(t1, t1, 32, tmp);\n+  ror(t0, t0, 32, tmp); \/\/ convert big-endian to little-endian\n+  ror(t1, t1, 32, tmp);\n@@ -5160,2 +5160,2 @@\n-  ror_imm(tmp3, tmp3, 32); \/\/ convert little-endian to big-endian\n-  ror_imm(tmp4, tmp4, 32);\n+  ror(tmp3, tmp3, 32); \/\/ convert little-endian to big-endian\n+  ror(tmp4, tmp4, 32);\n@@ -5178,1 +5178,1 @@\n-  ror_imm(yz_idx1, yz_idx1, 32);\n+  ror(yz_idx1, yz_idx1, 32);\n@@ -5185,1 +5185,1 @@\n-  ror_imm(yz_idx2, yz_idx2, 32, tmp);\n+  ror(yz_idx2, yz_idx2, 32, tmp);\n@@ -5189,1 +5189,1 @@\n-  ror_imm(tmp3, tmp3, 32, tmp);\n+  ror(tmp3, tmp3, 32, tmp);\n@@ -5361,1 +5361,1 @@\n-  ror_imm(product_hi, product_hi, 32); \/\/ convert big-endian to little-endian\n+  ror(product_hi, product_hi, 32); \/\/ convert big-endian to little-endian\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -929,2 +929,2 @@\n-  void ror_imm(Register dst, Register src, uint32_t shift, Register tmp = t0);\n-  void rolw_imm(Register dst, Register src, uint32_t, Register tmp = t0);\n+  void ror(Register dst, Register src, uint32_t shift, Register tmp = t0);\n+  void rolw(Register dst, Register src, uint32_t shift, Register tmp = t0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    __ rorw(as_Register($dst$$reg), as_Register($src$$reg), as_Register($shift$$reg));\n+    __ rorrw(as_Register($dst$$reg), as_Register($src$$reg), as_Register($shift$$reg));\n@@ -75,1 +75,1 @@\n-    __ ror(as_Register($dst$$reg), as_Register($src$$reg), as_Register($shift$$reg));\n+    __ rorr(as_Register($dst$$reg), as_Register($src$$reg), as_Register($shift$$reg));\n@@ -87,1 +87,1 @@\n-    __ rolw(as_Register($dst$$reg), as_Register($src$$reg), as_Register($shift$$reg));\n+    __ rolrw(as_Register($dst$$reg), as_Register($src$$reg), as_Register($shift$$reg));\n@@ -99,1 +99,1 @@\n-    __ rol(as_Register($dst$$reg), as_Register($src$$reg), as_Register($shift$$reg));\n+    __ rolr(as_Register($dst$$reg), as_Register($src$$reg), as_Register($shift$$reg));\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_b.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3559,1 +3559,1 @@\n-      ror_imm(tmp, tmp, 32, t0);\n+      ror(tmp, tmp, 32, t0);\n@@ -4526,1 +4526,1 @@\n-    __ rolw_imm(a, a, s);\n+    __ rolw(a, a, s);\n@@ -5031,1 +5031,1 @@\n-      __ rolw_imm(cur_w, cur_w, 1, t0);\n+      __ rolw(cur_w, cur_w, 1, t0);\n@@ -5051,1 +5051,1 @@\n-    __ rolw_imm(cur_w, cur_w, 1, t0);\n+    __ rolw(cur_w, cur_w, 1, t0);\n@@ -5116,1 +5116,1 @@\n-    __ rolw_imm(tmp2, a, 5, t0);\n+    __ rolw(tmp2, a, 5, t0);\n@@ -5131,1 +5131,1 @@\n-    __ rolw_imm(c, b, 30);\n+    __ rolw(c, b, 30);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}