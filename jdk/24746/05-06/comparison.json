{"files":[{"patch":"@@ -265,0 +265,5 @@\n+        \/**\n+         * Warn about uses of @ValueBased classes where an identity class is expected.\n+         *\/\n+        IDENTITY(\"identity\"),\n+\n@@ -370,6 +375,1 @@\n-        SYNCHRONIZATION(\"synchronization\"),\n-\n-        \/**\n-         * Warn about uses of @ValueBased classes where an identity class is expected.\n-         *\/\n-        IDENTITY(\"identity\"),\n+        SYNCHRONIZATION(\"synchronization\", IDENTITY),\n@@ -420,0 +420,8 @@\n+            this(option, annotationSuppression, null);\n+        }\n+\n+        LintCategory(String option, LintCategory alias) {\n+            this(option, true, alias);\n+        }\n+\n+        LintCategory(String option, boolean annotationSuppression, LintCategory alias) {\n@@ -422,0 +430,1 @@\n+            this.alias = alias;\n@@ -423,0 +432,4 @@\n+            \/\/ we need to do this as forward references are not allowed\n+            if (alias != null) {\n+                alias.alias = this;\n+            }\n@@ -444,0 +457,2 @@\n+\n+        public LintCategory alias;\n@@ -453,1 +468,1 @@\n-        return values.contains(lc);\n+        return values.contains(lc) || (lc.alias != null && values.contains(lc.alias));\n@@ -464,1 +479,1 @@\n-        return suppressedValues.contains(lc);\n+        return suppressedValues.contains(lc) || (lc.alias != null && suppressedValues.contains(lc.alias));\n@@ -505,14 +520,0 @@\n-    \/**\n-     * Retrieve the recognized lint categories suppressed by the given @SuppressWarnings annotation.\n-     *\n-     * @param annotation @SuppressWarnings annotation, or null\n-     * @return set of lint categories, possibly empty but never null\n-     *\/\n-    private EnumSet<LintCategory> suppressionsFrom(JCAnnotation annotation) {\n-        initializeSymbolsIfNeeded();\n-        if (annotation == null)\n-            return LintCategory.newEmptySet();\n-        Assert.check(annotation.attribute.type.tsym == syms.suppressWarningsType.tsym);\n-        return suppressionsFrom(Stream.of(annotation).map(anno -> anno.attribute));\n-    }\n-\n@@ -540,0 +541,5 @@\n+        for (LintCategory lc : result) {\n+            if (lc.alias != null) {\n+                result.add(lc.alias);\n+            }\n+        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Lint.java","additions":28,"deletions":22,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -1952,5 +1952,1 @@\n-            if (env.info.lint.isEnabled(LintCategory.SYNCHRONIZATION)) {\n-                env.info.lint.logIfEnabled(tree.pos(), LintWarnings.AttemptToSynchronizeOnInstanceOfValueBasedClass);\n-            } else {\n-                env.info.lint.logIfEnabled(tree.pos(), LintWarnings.AttemptToSynchronizeOnInstanceOfValueBasedClass2);\n-            }\n+            env.info.lint.logIfEnabled(tree.pos(), LintWarnings.AttemptToSynchronizeOnInstanceOfValueBasedClass);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4248,4 +4248,0 @@\n-# lint: synchronization\n-compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class=\\\n-    attempt to synchronize on an instance of a value-based class\n-\n@@ -4253,1 +4249,1 @@\n-compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class2=\\\n+compiler.warn.attempt.to.synchronize.on.instance.of.value.based.class=\\\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -167,0 +167,1 @@\n+ * <tr><th scope=\"row\">{@code identity}             <td>use of a value-based class where an identity class is expected\n","filename":"src\/jdk.compiler\/share\/classes\/module-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -599,0 +599,3 @@\n+    -   `identity`: Warns about use of a value-based class where an identity\n+        class is expected\n+\n","filename":"src\/jdk.compiler\/share\/man\/javac.md","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -96,0 +96,1 @@\n+        ignore(\"com\/sun\/tools\/javac\/code\/Lint$LintCategory\", \"alias\");\n","filename":"test\/langtools\/tools\/javac\/T8003967\/DetectMutableStaticFields.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,0 +7,1 @@\n+ * @compile\/ref=RequiresIdentityTest2.out --patch-module java.base=${test.src} -Werror -XDrawDiagnostics -Xlint:-identity RequiresIdentityTest.java\n@@ -8,0 +9,1 @@\n+ * @compile\/ref=RequiresIdentityTest2.out --patch-module java.base=${test.src} -Werror -XDrawDiagnostics -Xlint:-identity RequiresIdentityHelper.java RequiresIdentityTest.java\n@@ -12,0 +14,1 @@\n+@SuppressWarnings(\"deprecation\")\n","filename":"test\/langtools\/tools\/javac\/lint\/RequiresIdentityTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,27 +1,26 @@\n-RequiresIdentityTest.java:12:65: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:13:88: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:16:27: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:17:36: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:18:8: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:19:8: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:20:72: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:20:27: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:24:15: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:27:32: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:28:31: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:29:40: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:31:16: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:32:16: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:33:16: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:34:15: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:37:67: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:40:63: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:43:27: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:48:6: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:48:49: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:50:21: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:52:36: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:55:32: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:56:46: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:60:54: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:65:37: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:15:65: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:16:88: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:19:27: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:20:36: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:21:8: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:22:8: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:23:72: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:23:27: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:27:15: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:30:32: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:31:31: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:32:40: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:34:16: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:35:16: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:36:16: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:37:15: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:40:67: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:43:63: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:46:27: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:51:6: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:51:49: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:53:21: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:55:36: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:58:32: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:59:46: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:63:54: compiler.warn.attempt.to.use.value.based.where.identity.expected\n@@ -29,6 +28,7 @@\n-RequiresIdentityTest.java:68:18: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:75:32: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:79:90: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:80:52: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:81:82: compiler.warn.attempt.to.use.value.based.where.identity.expected\n-RequiresIdentityTest.java:81:31: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:71:37: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:71:18: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:78:32: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:82:90: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:83:52: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:84:82: compiler.warn.attempt.to.use.value.based.where.identity.expected\n+RequiresIdentityTest.java:84:31: compiler.warn.attempt.to.use.value.based.where.identity.expected\n","filename":"test\/langtools\/tools\/javac\/lint\/RequiresIdentityTest.out","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -0,0 +1,2 @@\n+- compiler.note.unchecked.filename: RequiresIdentityTest.java\n+- compiler.note.unchecked.recompile\n","filename":"test\/langtools\/tools\/javac\/lint\/RequiresIdentityTest2.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"}]}