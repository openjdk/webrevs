{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import java.util.function.Function;\n@@ -5814,7 +5815,6 @@\n-                    for (Attribute.TypeCompound ta: sm.getTypeAttributes().stream()\n-                            .filter(ta -> ta.type.tsym == syms.requiresIdentityType.tsym).toList()) {\n-                        Type type = t.getTypeArguments().get(ta.position.parameter_index);\n-                        if (type != null && type.isValueBased()) {\n-                            requiresWarning = true;\n-                            return null;\n-                        }\n+                    if (sm.getTypeAttributes().stream()\n+                            .filter(ta -> ta.type.tsym == syms.requiresIdentityType.tsym &&\n+                                    t.getTypeArguments().get(ta.position.parameter_index) != null &&\n+                                    t.getTypeArguments().get(ta.position.parameter_index).isValueBased()).findAny().isPresent()) {\n+                        requiresWarning = true;\n+                        return null;\n@@ -5840,9 +5840,6 @@\n-                for (Attribute.TypeCompound ta : sm.getTypeAttributes().stream()\n-                        .filter(ta -> ta.type.tsym == syms.requiresIdentityType.tsym).toList()) {\n-                    Type paramType = typeParamTrees.get(ta.position.parameter_index).type;\n-                    if (paramType != null && paramType.isValueBased())\n-                        lint.logIfEnabled(\n-                                typeParamTrees.get(ta.position.parameter_index).pos(),\n-                                CompilerProperties.LintWarnings.AttemptToUseValueBasedWhereIdentityExpected\n-                        );\n-                }\n+                sm.getTypeAttributes().stream()\n+                        .filter(ta -> (ta.type.tsym == syms.requiresIdentityType.tsym) &&\n+                                typeParamTrees.get(ta.position.parameter_index).type != null &&\n+                                typeParamTrees.get(ta.position.parameter_index).type.isValueBased())\n+                        .forEach(ta -> lint.logIfEnabled(typeParamTrees.get(ta.position.parameter_index).pos(),\n+                                CompilerProperties.LintWarnings.AttemptToUseValueBasedWhereIdentityExpected));\n@@ -5851,1 +5848,1 @@\n-}\n+ }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":14,"deletions":17,"binary":false,"changes":31,"status":"modified"}]}