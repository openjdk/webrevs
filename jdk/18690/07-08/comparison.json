{"files":[{"patch":"@@ -1065,1 +1065,2 @@\n-        static final ClassFileDumper DUMPER;\n+        static final ClassFileDumper DUMPER =\n+                ClassFileDumper.getInstance(\"java.lang.invoke.StringConcatFactory.dump\", \"stringConcatClasses\");\n@@ -1074,1 +1075,2 @@\n-        static final MethodTypeDesc INT_VOID_TYPE = MethodTypeDesc.of(ConstantDescs.CD_void, ConstantDescs.CD_int);\n+        static final MethodTypeDesc INT_CONSTRUCTOR_TYPE = MethodTypeDesc.of(ConstantDescs.CD_void, ConstantDescs.CD_int);\n+        static final MethodTypeDesc TO_STRING_TYPE = MethodTypeDesc.of(ConstantDescs.CD_String);\n@@ -1077,2 +1079,2 @@\n-         * Ensure a capacity in the initial StringBuilder to accommodate all constants plus this factor times the number\n-         * of arguments.\n+         * Ensure a capacity in the initial StringBuilder to accommodate all\n+         * constants plus this factor times the number of arguments.\n@@ -1084,4 +1086,0 @@\n-        static {\n-            DUMPER = ClassFileDumper.getInstance(\"java.lang.invoke.StringConcatFactory.dump\", \"stringConcatClasses\");\n-        }\n-\n@@ -1112,1 +1110,0 @@\n-                DUMPER.dumpFailedClass(className, classBytes);\n@@ -1132,1 +1129,1 @@\n-                    cb.invokespecial(STRING_BUILDER, \"<init>\", INT_VOID_TYPE);\n+                    cb.invokespecial(STRING_BUILDER, \"<init>\", INT_CONSTRUCTOR_TYPE);\n@@ -1155,1 +1152,1 @@\n-                    cb.invokevirtual(STRING_BUILDER, \"toString\", MethodTypeDesc.ofDescriptor(\"()Ljava\/lang\/String;\"));\n+                    cb.invokevirtual(STRING_BUILDER, \"toString\", TO_STRING_TYPE);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"}]}