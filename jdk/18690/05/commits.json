[{"commit":{"message":"Minor SimpleStringBuilderStrategy::<clinit> overhead reduction"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java"}],"sha":"83f4048f5dc0ebf1ab7188e2ef42d13d4bbf2bdd"},{"commit":{"message":"Merge master, resolve conflicts due pr\/18688"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java"}],"sha":"fd9c40d2fd1ad8b9c8659ce4a92d15c8c68b7ca5"},{"commit":{"message":"Dump using the hidden class name"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java"}],"sha":"9eed6609774d1efc89e58f4894fb020ca454361a"},{"commit":{"message":"Pre-size stringbuilders based on constant size and a small argument factor"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringConcat.java"}],"sha":"796d968becc0b802a185a0bb6c11a5e3ad957ab4"},{"commit":{"message":"@liach feedback"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java"}],"sha":"1c3d354ccd6c5763fa144848224e877e73ba8aca"},{"commit":{"message":"Bump threshold after experiments"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java"}],"sha":"b592899466a1567271cc3a5cd02c6c1377ba53b0"},{"commit":{"message":"Port ASM to CFA"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java"}],"sha":"d99b1596c5ca57b110c1db88be430c6c54c3d599"},{"commit":{"message":"Lower compilation overhead for large concat expressions, initial ASM-based version based on pre-existing implementation"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringConcat.java"}],"sha":"7c52a9f4000e6ce23cc64223b1b11e942768a200"}]