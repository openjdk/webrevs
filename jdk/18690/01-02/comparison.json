{"files":[{"patch":"@@ -1391,0 +1391,7 @@\n+        static final MethodTypeDesc INT_VOID_TYPE = MethodTypeDesc.ofDescriptor(\"(I)V\");\n+\n+        \/**\n+         * Ensure a capacity in the initial StringBuilder to accommodate all constants plus this factor times the number\n+         * of arguments.\n+         *\/\n+        static final int ARGUMENT_SIZE_FACTOR = 4;\n@@ -1432,1 +1439,9 @@\n-                    cb.invokespecial(STRING_BUILDER, \"<init>\", MethodTypeDesc.ofDescriptor(\"()V\"));\n+\n+                    int len = 0;\n+                    for (int c = 0; c < constants.length; c++) {\n+                        if (constants[c] != null)\n+                            len += constants[c].length();\n+                    }\n+                    len += args.parameterCount() * ARGUMENT_SIZE_FACTOR;\n+                    cb.constantInstruction(len);\n+                    cb.invokespecial(STRING_BUILDER, \"<init>\", INT_VOID_TYPE);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -195,0 +195,27 @@\n+\n+    @Benchmark\n+    public String concat23StringConst() {\n+        return f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + f0 + \"\"\"\n+                A really long constant string. Such as a copyright header:\n+                 * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+                 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+                 *\n+                 * This code is free software; you can redistribute it and\/or modify it\n+                 * under the terms of the GNU General Public License version 2 only, as\n+                 * published by the Free Software Foundation.\n+                 *\n+                 * This code is distributed in the hope that it will be useful, but WITHOUT\n+                 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+                 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+                 * version 2 for more details (a copy is included in the LICENSE file that\n+                 * accompanied this code).\n+                 *\n+                 * You should have received a copy of the GNU General Public License version\n+                 * 2 along with this work; if not, write to the Free Software Foundation,\n+                 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+                 *\n+                 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+                 * or visit www.oracle.com if you need additional information or have any\n+                 * questions.\n+                \"\"\";\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringConcat.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"}]}