{"files":[{"patch":"@@ -2624,1 +2624,1 @@\n-                                    BasicType bt, bool is_min, int vector_length) {\n+                                    BasicType bt, bool is_min, uint vector_length) {\n@@ -2643,1 +2643,1 @@\n-                                           BasicType bt, bool is_min, int vector_length) {\n+                                           BasicType bt, bool is_min, uint vector_length) {\n@@ -2666,1 +2666,1 @@\n-                                           bool is_double, bool is_min, int vector_length, VectorMask vm) {\n+                                           bool is_double, bool is_min, uint vector_length, VectorMask vm) {\n@@ -2711,1 +2711,1 @@\n-                                          int opc, BasicType bt, int vector_length, VectorMask vm) {\n+                                          int opc, BasicType bt, uint vector_length, VectorMask vm) {\n@@ -2743,1 +2743,1 @@\n-void C2_MacroAssembler::vsetvli_helper(BasicType bt, int vector_length, LMUL vlmul, Register tmp) {\n+void C2_MacroAssembler::vsetvli_helper(BasicType bt, uint vector_length, LMUL vlmul, Register tmp) {\n@@ -2756,1 +2756,1 @@\n-                                           int cond, BasicType bt, int vector_length, VectorMask vm) {\n+                                           int cond, BasicType bt, uint vector_length, VectorMask vm) {\n@@ -2775,1 +2775,1 @@\n-                                     int cond, BasicType bt, int vector_length, VectorMask vm) {\n+                                     int cond, BasicType bt, uint vector_length, VectorMask vm) {\n@@ -2793,1 +2793,1 @@\n-void C2_MacroAssembler::integer_extend_v(VectorRegister dst, BasicType dst_bt, int vector_length,\n+void C2_MacroAssembler::integer_extend_v(VectorRegister dst, BasicType dst_bt, uint vector_length,\n@@ -2831,1 +2831,1 @@\n-void C2_MacroAssembler::integer_narrow_v(VectorRegister dst, BasicType dst_bt, int vector_length,\n+void C2_MacroAssembler::integer_narrow_v(VectorRegister dst, BasicType dst_bt, uint vector_length,\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-  void spill_copy_vector_stack_to_stack(int src_offset, int dst_offset, int vector_length_in_bytes) {\n+  void spill_copy_vector_stack_to_stack(int src_offset, int dst_offset, uint vector_length_in_bytes) {\n@@ -161,1 +161,1 @@\n-    for (int i = 0; i < vector_length_in_bytes \/ 8; i++) {\n+    for (int i = 0; i < (int)vector_length_in_bytes \/ 8; i++) {\n@@ -230,1 +230,1 @@\n-                  BasicType bt, bool is_min, int vector_length);\n+                  BasicType bt, bool is_min, uint vector_length);\n@@ -234,1 +234,1 @@\n-                          BasicType bt, bool is_min, int vector_length);\n+                          BasicType bt, bool is_min, uint vector_length);\n@@ -239,1 +239,1 @@\n-                          bool is_double, bool is_min, int vector_length,\n+                          bool is_double, bool is_min, uint vector_length,\n@@ -244,1 +244,1 @@\n-                        int opc, BasicType bt, int vector_length,\n+                        int opc, BasicType bt, uint vector_length,\n@@ -247,1 +247,1 @@\n-  void vsetvli_helper(BasicType bt, int vector_length, LMUL vlmul = Assembler::m1, Register tmp = t0);\n+  void vsetvli_helper(BasicType bt, uint vector_length, LMUL vlmul = Assembler::m1, Register tmp = t0);\n@@ -250,1 +250,1 @@\n-                          BasicType bt, int vector_length, VectorMask vm = Assembler::unmasked);\n+                          BasicType bt, uint vector_length, VectorMask vm = Assembler::unmasked);\n@@ -253,1 +253,1 @@\n-                    BasicType bt, int vector_length, VectorMask vm = Assembler::unmasked);\n+                    BasicType bt, uint vector_length, VectorMask vm = Assembler::unmasked);\n@@ -270,1 +270,1 @@\n-  void spill_copy_vmask_stack_to_stack(int src_offset, int dst_offset, int vector_length_in_bytes) {\n+  void spill_copy_vmask_stack_to_stack(int src_offset, int dst_offset, uint vector_length_in_bytes) {\n@@ -272,1 +272,1 @@\n-    for (int i = 0; i < vector_length_in_bytes \/ 4; i++) {\n+    for (int i = 0; i < (int)vector_length_in_bytes \/ 4; i++) {\n@@ -278,1 +278,1 @@\n-  void integer_extend_v(VectorRegister dst, BasicType dst_bt, int vector_length,\n+  void integer_extend_v(VectorRegister dst, BasicType dst_bt, uint vector_length,\n@@ -281,1 +281,1 @@\n-  void integer_narrow_v(VectorRegister dst, BasicType dst_bt, int vector_length,\n+  void integer_narrow_v(VectorRegister dst, BasicType dst_bt, uint vector_length,\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-                        int vector_length, Assembler::VectorMask vm = Assembler::unmasked) {\n+                        uint vector_length, Assembler::VectorMask vm = Assembler::unmasked) {\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}