{"files":[{"patch":"@@ -151,6 +151,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -204,0 +212,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -255,0 +271,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/AlgorithmParameterGenerator.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -138,6 +138,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -191,0 +199,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -242,0 +258,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/AlgorithmParameters.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -160,6 +160,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -202,0 +210,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -245,0 +261,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyFactory.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -207,6 +207,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -272,0 +280,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -315,0 +331,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyPairGenerator.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -845,6 +845,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified type.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its type implementation available.<\/li>\n+     * <\/ul>.\n@@ -892,0 +900,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its type implementation available.\n+     *\n@@ -939,0 +955,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its type implementation available.\n+     *\n@@ -1681,0 +1705,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its type implementation available.\n+     *\n@@ -1734,0 +1766,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its type implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyStore.java","additions":46,"deletions":6,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -158,6 +158,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -219,0 +227,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -274,0 +290,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/MessageDigest.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,6 +131,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different than the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified type.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its type implementation available.<\/li>\n+     * <\/ul>\n@@ -186,0 +194,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its type implementation available.\n+     *\n@@ -246,0 +262,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its type implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/Policy.java","additions":31,"deletions":7,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -1866,0 +1866,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its described implementation available.\n+     *\n@@ -1913,0 +1921,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not be included in the Set.\n+     *\n@@ -1944,0 +1960,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not be added.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -375,6 +375,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -422,0 +430,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -467,0 +483,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -516,5 +540,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -573,0 +606,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -626,0 +667,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -953,0 +1002,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/SecureRandom.java","additions":68,"deletions":11,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -244,6 +244,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -373,0 +381,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -427,0 +443,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/Signature.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -145,6 +145,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -191,0 +199,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -235,0 +251,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/CertPathBuilder.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -146,6 +146,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -192,0 +200,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -237,0 +253,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/CertPathValidator.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -205,6 +205,15 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified {@code CertStore} type.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its {@code CertStore} type implementation\n+     * available.<\/li>\n+     * <\/ul>\n@@ -277,0 +286,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its {@code CertStore} type implementation available.\n+     *\n@@ -339,0 +356,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its {@code CertStore} type implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/CertStore.java","additions":31,"deletions":6,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -167,6 +167,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified certificate type.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its certificate type implementation available.<\/li>\n+     * <\/ul>\n@@ -216,0 +224,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its certificate type implementation available.\n+     *\n@@ -264,0 +280,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its certificate type implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/CertificateFactory.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -507,6 +507,15 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different than the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified transformation.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its transformation implementation available.<\/li>\n+     * <\/ul>\n+     * <p>\n@@ -605,0 +614,7 @@\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its transformation implementation available.\n+     * <p>\n@@ -678,0 +694,7 @@\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its transformation implementation available.\n+     * <p>\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":29,"deletions":6,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -117,6 +117,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -165,0 +173,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -210,0 +226,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/ExemptionMechanism.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -212,6 +212,14 @@\n-     *         {@code jdk.security.provider.preferred}\n-     *         {@link Security#getProperty(String) Security} property to\n-     *         determine the preferred provider order for the specified\n-     *         algorithm. This may be different than the order of providers\n-     *         returned by\n-     *         {@link Security#getProviders() Security.getProviders()}.\n+     *         following properties to customize the behavior of this method:\n+     *         <ul>\n+     *         <li> The {@code jdk.security.provider.preferred}\n+     *         {@link Security#getProperty(String) Security} property determines\n+     *         the preferred provider order for the specified algorithm.\n+     *         This may be different from the order of providers returned by\n+     *         {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     *         <li> The {@code jdk.security.providers.filter}\n+     *         {@link System#getProperty(String) System} and\n+     *         {@link Security#getProperty(String) Security} properties\n+     *         determine which services are enabled. A service that is\n+     *         not enabled by the filter will not make its algorithm\n+     *         implementation available.<\/li>\n+     *         <\/ul>\n@@ -252,0 +260,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -288,0 +304,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -322,6 +346,14 @@\n-     *         {@code jdk.security.provider.preferred}\n-     *         {@link Security#getProperty(String) Security} property to\n-     *         determine the preferred provider order for the specified\n-     *         algorithm. This may be different than the order of providers\n-     *         returned by\n-     *         {@link Security#getProviders() Security.getProviders()}.\n+     *         following properties to customize the behavior of this method:\n+     *         <ul>\n+     *         <li> The {@code jdk.security.provider.preferred}\n+     *         {@link Security#getProperty(String) Security} property determines\n+     *         the preferred provider order for the specified algorithm.\n+     *         This may be different from the order of providers returned by\n+     *         {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     *         <li> The {@code jdk.security.providers.filter}\n+     *         {@link System#getProperty(String) System} and\n+     *         {@link Security#getProperty(String) Security} properties\n+     *         determine which services are enabled. A service that is\n+     *         not enabled by the filter will not make its algorithm\n+     *         implementation available.<\/li>\n+     *         <\/ul>\n@@ -371,0 +403,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -425,0 +465,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":60,"deletions":12,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -543,0 +543,16 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n+     *\n@@ -579,0 +595,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -611,0 +635,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KEM.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -160,6 +160,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -213,0 +221,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -258,0 +274,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KeyAgreement.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -217,6 +217,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -259,0 +267,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -303,0 +319,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KeyGenerator.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -156,6 +156,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -207,0 +215,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -249,0 +265,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Mac.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -136,6 +136,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -179,0 +187,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -224,0 +240,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/SecretKeyFactory.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -113,6 +113,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -160,0 +168,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -206,0 +222,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/KeyManagerFactory.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -152,6 +152,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified protocol.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its protocol implementation available.<\/li>\n+     * <\/ul>\n@@ -197,0 +205,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its protocol implementation available.\n+     *\n@@ -240,0 +256,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its protocol implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLContext.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -128,6 +128,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -175,0 +183,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -221,0 +237,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/TrustManagerFactory.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -257,6 +257,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different from the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified type.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its type implementation available.<\/li>\n+     * <\/ul>\n@@ -319,0 +327,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its type implementation available.\n+     *\n@@ -383,0 +399,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its type implementation available.\n+     *\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/login\/Configuration.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -342,6 +342,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different than the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified SASL mechanism(s).\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its SASL mechanism(s) implementation available.<\/li>\n+     * <\/ul>\n@@ -498,6 +506,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different than the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified SASL mechanism(s).\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its SASL mechanism(s) implementation available.<\/li>\n+     * <\/ul>\n","filename":"src\/java.security.sasl\/share\/classes\/javax\/security\/sasl\/Sasl.java","additions":28,"deletions":12,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -235,6 +235,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different than the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified type.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its type implementation available.<\/li>\n+     * <\/ul>\n@@ -275,0 +283,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its type implementation available.\n+     *\n@@ -311,0 +327,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its type implementation available.\n+     *\n","filename":"src\/java.smartcardio\/share\/classes\/javax\/smartcardio\/TerminalFactory.java","additions":31,"deletions":7,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -139,6 +139,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different than the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified algorithm.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its algorithm implementation available.<\/li>\n+     * <\/ul>\n@@ -208,0 +216,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n@@ -271,0 +287,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its algorithm implementation available.\n+     *\n","filename":"src\/java.xml.crypto\/share\/classes\/javax\/xml\/crypto\/dsig\/TransformService.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -178,6 +178,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different than the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified mechanism type.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its mechanism type implementation available.<\/li>\n+     * <\/ul>\n@@ -233,0 +241,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its mechanism type implementation available.\n+     *\n@@ -287,0 +303,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its mechanism type implementation available.\n+     *\n@@ -354,0 +378,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its mechanism type implementation available.\n+     *\n","filename":"src\/java.xml.crypto\/share\/classes\/javax\/xml\/crypto\/dsig\/XMLSignatureFactory.java","additions":38,"deletions":6,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -134,6 +134,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different than the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified mechanism type.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its mechanism type implementation available.<\/li>\n+     * <\/ul>\n@@ -188,0 +196,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its mechanism type implementation available.\n+     *\n@@ -241,0 +257,8 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties to determine\n+     * which services are enabled. A service that is not enabled by the filter\n+     * will not make its mechanism type implementation available.\n+     *\n@@ -308,6 +332,14 @@\n-     * The JDK Reference Implementation additionally uses the\n-     * {@code jdk.security.provider.preferred}\n-     * {@link Security#getProperty(String) Security} property to determine\n-     * the preferred provider order for the specified algorithm. This\n-     * may be different than the order of providers returned by\n-     * {@link Security#getProviders() Security.getProviders()}.\n+     * The JDK Reference Implementation additionally uses the following\n+     * properties to customize the behavior of this method:\n+     * <ul>\n+     * <li> The {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property determines\n+     * the preferred provider order for the specified mechanism type.\n+     * This may be different from the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.<\/li>\n+     * <li> The {@code jdk.security.providers.filter}\n+     * {@link System#getProperty(String) System} and\n+     * {@link Security#getProperty(String) Security} properties determine\n+     * which services are enabled. A service that is not enabled by the\n+     * filter will not make its mechanism type implementation available.<\/li>\n+     * <\/ul>\n","filename":"src\/java.xml.crypto\/share\/classes\/javax\/xml\/crypto\/dsig\/keyinfo\/KeyInfoFactory.java","additions":44,"deletions":12,"binary":false,"changes":56,"status":"modified"}]}