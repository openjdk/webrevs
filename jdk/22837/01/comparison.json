{"files":[{"patch":"@@ -1100,8 +1100,8 @@\n-     * If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser\n-     * expects an offset-based zone and will not match region-based zones.\n-     * The offset ID, such as '+02:30', may be at the start of the parse,\n-     * or prefixed by  'UT', 'UTC' or 'GMT'. The offset ID parsing is\n-     * equivalent to using {@link #appendOffset(String, String)} using the\n-     * arguments 'HH:MM:ss' and the no offset string '0'.\n-     * If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot\n-     * match a following offset ID, then {@link ZoneOffset#UTC} is selected.\n+     * If the parse starts with '+' or '-', then the parser expects an\n+     * offset-based zone and will not match region-based zones. The offset\n+     * ID parsing is equivalent to using {@link #appendOffset(String, String)}\n+     * using the arguments 'HH:MM:ss' and the no offset string '0'.\n+     * If the parse starts with 'UT', 'UTC' or 'GMT', and the parser can\n+     * match a following offset, then a region-based zone with the parsed\n+     * offset will be returned, or else if the parser cannot match a following\n+     * offset, then {@link ZoneOffset#UTC} is selected.\n@@ -1121,3 +1121,3 @@\n-     *   \"UT+01:30\"                -- ZoneOffset.of(\"+01:30\")\n-     *   \"UTC+01:30\"               -- ZoneOffset.of(\"+01:30\")\n-     *   \"GMT+01:30\"               -- ZoneOffset.of(\"+01:30\")\n+     *   \"UT+01:30\"                -- ZoneId.of(\"UT+01:30\")\n+     *   \"UTC+01:30\"               -- ZoneId.of(\"UTC+01:30\")\n+     *   \"GMT+01:30\"               -- ZoneId.of(\"GMT+01:30\")\n@@ -1138,2 +1138,1 @@\n-     * This appends an instruction to format\/parse the zone ID to the builder\n-     * only if it is a region-based ID.\n+     * This appends an instruction to format only region-based zone IDs to the builder.\n@@ -1151,8 +1150,8 @@\n-     * If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser\n-     * expects an offset-based zone and will not match region-based zones.\n-     * The offset ID, such as '+02:30', may be at the start of the parse,\n-     * or prefixed by  'UT', 'UTC' or 'GMT'. The offset ID parsing is\n-     * equivalent to using {@link #appendOffset(String, String)} using the\n-     * arguments 'HH:MM:ss' and the no offset string '0'.\n-     * If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot\n-     * match a following offset ID, then {@link ZoneOffset#UTC} is selected.\n+     * If the parse starts with '+' or '-', then the parser expects an\n+     * offset-based zone and will not match region-based zones. The offset\n+     * ID parsing is equivalent to using {@link #appendOffset(String, String)}\n+     * using the arguments 'HH:MM:ss' and the no offset string '0'.\n+     * If the parse starts with 'UT', 'UTC' or 'GMT', and the parser can\n+     * match a following offset, then a region-based zone with the parsed\n+     * offset will be returned, or else if the parser cannot match a following\n+     * offset, then {@link ZoneOffset#UTC} is selected.\n@@ -1172,3 +1171,3 @@\n-     *   \"UT+01:30\"                -- ZoneOffset.of(\"+01:30\")\n-     *   \"UTC+01:30\"               -- ZoneOffset.of(\"+01:30\")\n-     *   \"GMT+01:30\"               -- ZoneOffset.of(\"+01:30\")\n+     *   \"UT+01:30\"                -- ZoneId.of(\"UT+01:30\")\n+     *   \"UTC+01:30\"               -- ZoneId.of(\"UTC+01:30\")\n+     *   \"GMT+01:30\"               -- ZoneId.of(\"GMT+01:30\")\n@@ -1209,8 +1208,8 @@\n-     * If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser\n-     * expects an offset-based zone and will not match region-based zones.\n-     * The offset ID, such as '+02:30', may be at the start of the parse,\n-     * or prefixed by  'UT', 'UTC' or 'GMT'. The offset ID parsing is\n-     * equivalent to using {@link #appendOffset(String, String)} using the\n-     * arguments 'HH:MM:ss' and the no offset string '0'.\n-     * If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot\n-     * match a following offset ID, then {@link ZoneOffset#UTC} is selected.\n+     * If the parse starts with '+' or '-', then the parser expects an\n+     * offset-based zone and will not match region-based zones. The offset\n+     * ID parsing is equivalent to using {@link #appendOffset(String, String)}\n+     * using the arguments 'HH:MM:ss' and the no offset string '0'.\n+     * If the parse starts with 'UT', 'UTC' or 'GMT', and the parser can\n+     * match a following offset, then a region-based zone with the parsed\n+     * offset will be returned, or else if the parser cannot match a following\n+     * offset, then {@link ZoneOffset#UTC} is selected.\n@@ -1230,3 +1229,3 @@\n-     *   \"UT+01:30\"                -- ZoneOffset.of(\"UT+01:30\")\n-     *   \"UTC+01:30\"               -- ZoneOffset.of(\"UTC+01:30\")\n-     *   \"GMT+01:30\"               -- ZoneOffset.of(\"GMT+01:30\")\n+     *   \"UT+01:30\"                -- ZoneId.of(\"UT+01:30\")\n+     *   \"UTC+01:30\"               -- ZoneId.of(\"UTC+01:30\")\n+     *   \"GMT+01:30\"               -- ZoneId.of(\"GMT+01:30\")\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":34,"deletions":35,"binary":false,"changes":69,"status":"modified"}]}