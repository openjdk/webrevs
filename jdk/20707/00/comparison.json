{"files":[{"patch":"@@ -144,1 +144,1 @@\n-                    delegate.combine(Collections.unmodifiableSet(values));\n+                    return delegate.combine(Collections.unmodifiableSet(values));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Control.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,0 +73,1 @@\n+        assertEquals(2, makeCombineControl());\n@@ -97,0 +98,28 @@\n+    private static int makeCombineControl() throws Exception {\n+        try (Recording r1 = new Recording()) {\n+            r1.enable(HTTPPostEvent.class).with(\"uriFilter\", \"https:\/\/www.example.com\/list\");\n+            r1.start();\n+\n+            try (Recording r2 = new Recording()) {\n+                r2.enable(HTTPPostEvent.class).with(\"uriFilter\", \"https:\/\/www.example.com\/get\");\n+                r2.start();\n+\n+                HTTPPostEvent e1 = new HTTPPostEvent();\n+                e1.uri = \"https:\/\/www.example.com\/list\";\n+                e1.commit();\n+\n+                HTTPPostEvent e2 = new HTTPPostEvent();\n+                e2.uri = \"https:\/\/www.example.com\/get\";\n+                e2.commit();\n+\n+                HTTPPostEvent e3 = new HTTPPostEvent();\n+                e3.uri = \"https:\/\/www.example.com\/put\";\n+                e3.commit();\n+            }\n+\n+            r1.stop();\n+\n+            return Events.fromRecording(r1).size();\n+        }\n+    }\n+\n","filename":"test\/jdk\/jdk\/jfr\/api\/settings\/TestFilterEvents.java","additions":30,"deletions":1,"binary":false,"changes":31,"status":"modified"}]}