{"files":[{"patch":"@@ -50,0 +50,2 @@\n+\n+import static java.lang.classfile.TypeKind.ReferenceType;\n@@ -95,1 +97,4 @@\n-    private static final String NAME_LOOKUP_ACCESSOR = \"proxyClassLookup\";\n+    private static final String\n+            NAME_LOOKUP_ACCESSOR = \"proxyClassLookup\",\n+            NAME_CLASS_LOADER = \"LOADER\";\n+\n@@ -132,1 +137,1 @@\n-    private final FieldRefEntry handlerField;\n+    private final FieldRefEntry handlerField, classLoaderField;\n@@ -178,0 +183,1 @@\n+        this.classLoaderField = cp.fieldRefEntry(classEntry.asSymbol(), NAME_CLASS_LOADER, CD_ClassLoader);\n@@ -476,0 +482,1 @@\n+            generateClassInitializer(clb);\n@@ -545,0 +552,27 @@\n+    \/**\n+     * Generate the class initializer, called in AccessController.doPrivileged\n+     * to obtain the class loader.\n+     *\/\n+    private void generateClassInitializer(ClassBuilder clb) {\n+        clb.withField(classLoaderField.name(), classLoaderField.type(), ACC_PRIVATE | ACC_STATIC | ACC_FINAL);\n+        clb.withMethodBody(CLASS_INIT_NAME, MTD_void, ACC_STATIC, cob -> {\n+            cob.ldc(classEntry)\n+               .invokevirtual(CD_Class, \"getClassLoader\", MTD_ClassLoader)\n+               .astore(0);\n+            var endIf = cob.newLabel();\n+            cob.aload(0)\n+               .if_nonnull(endIf)\n+               .invokestatic(CD_ClassLoader, \"getPlatformClassLoader\", MTD_ClassLoader)\n+               .astore(0)\n+               .labelBinding(endIf)\n+               .aload(0)\n+               .putstatic(classLoaderField)\n+               .return_()\n+               .with(StackMapTableAttribute.of(List.of(\n+                    StackMapFrameInfo.of(endIf,\n+                            List.of(StackMapFrameInfo.ObjectVerificationTypeInfo.of(CD_ClassLoader)),\n+                            List.of()))));\n+        });\n+\n+    }\n+\n@@ -553,2 +587,1 @@\n-               .ldc(classEntry)\n-               .invokevirtual(CD_Class, \"getClassLoader\", MTD_ClassLoader)\n+               .getstatic(classLoaderField)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ProxyGenerator.java","additions":37,"deletions":4,"binary":false,"changes":41,"status":"modified"}]}