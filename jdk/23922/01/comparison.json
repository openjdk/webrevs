{"files":[{"patch":"@@ -29,4 +29,1 @@\n-}\n-\n-uint32_t ZNUMA::count() {\n-  return 1;\n+  _count = 1;\n","filename":"src\/hotspot\/os\/bsd\/gc\/z\/zNUMA_bsd.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,9 +35,3 @@\n-}\n-\n-uint32_t ZNUMA::count() {\n-  if (!_enabled) {\n-    \/\/ NUMA support not enabled\n-    return 1;\n-  }\n-\n-  return os::Linux::numa_max_node() + 1;\n+  _count = UseNUMA\n+      ? os::Linux::numa_max_node() + 1\n+      : 1;\n@@ -68,1 +62,1 @@\n-  assert(id < count(), \"Invalid NUMA id\");\n+  assert(id < _count, \"Invalid NUMA id\");\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zNUMA_linux.cpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -28,4 +28,1 @@\n-}\n-\n-uint32_t ZNUMA::count() {\n-  return 1;\n+  _count = 1;\n","filename":"src\/hotspot\/os\/windows\/gc\/z\/zNUMA_windows.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+uint32_t ZNUMA::_count;\n@@ -34,1 +35,1 @@\n-    log_info_p(gc, init)(\"NUMA Nodes: %u\", count());\n+    log_info_p(gc, init)(\"NUMA Nodes: %u\", _count);\n","filename":"src\/hotspot\/share\/gc\/z\/zNUMA.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,1 +32,2 @@\n-  static bool _enabled;\n+  static bool     _enabled;\n+  static uint32_t _count;\n","filename":"src\/hotspot\/share\/gc\/z\/zNUMA.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,4 @@\n+inline uint32_t ZNUMA::count() {\n+  return _count;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zNUMA.inline.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"gc\/z\/zNUMA.hpp\"\n+#include \"gc\/z\/zNUMA.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zPageCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}