{"files":[{"patch":"@@ -94,1 +94,0 @@\n-        final boolean isArgumentOptional;\n@@ -103,1 +102,0 @@\n-                      boolean isArgumentOptional,\n@@ -119,1 +117,0 @@\n-            this.isArgumentOptional = isArgumentOptional;\n@@ -134,1 +131,1 @@\n-            this(hasArg, false, processing, hidden, name, shortname, \"\", isTerminal);\n+            this(hasArg, processing, hidden, name, shortname, \"\", isTerminal);\n@@ -138,1 +135,1 @@\n-            this(hasArg, false, processing, false, name, shortname, \"\", isTerminal);\n+            this(hasArg, processing, false, name, shortname, \"\", isTerminal);\n@@ -142,1 +139,1 @@\n-            this(hasArg, false, processing, false, name, shortname, shortname2, false);\n+            this(hasArg, processing, false, name, shortname, shortname2, false);\n@@ -146,1 +143,1 @@\n-            this(hasArg, false, processing, false, name, shortname, \"\", false);\n+            this(hasArg, processing, false, name, shortname, \"\", false);\n@@ -150,1 +147,1 @@\n-            this(hasArg, false, processing, hidden, name, \"\", \"\", false);\n+            this(hasArg, processing, hidden, name, \"\", \"\", false);\n@@ -157,4 +154,0 @@\n-        public boolean isArgumentOptional() {\n-            return isArgumentOptional;\n-        }\n-\n@@ -219,6 +212,0 @@\n-        public PluginOption(boolean hasArg, boolean isArgumentOptional,\n-                            Processing<PluginsHelper> processing,\n-                            boolean hidden, String name) {\n-            super(hasArg, isArgumentOptional, processing, hidden, name, \"\", \"\", false);\n-        }\n-\n@@ -318,1 +305,1 @@\n-                    = new PluginOption(plugin.hasArguments(), plugin.isArgumentOptional(),\n+                    = new PluginOption(plugin.hasArguments(),\n@@ -458,2 +445,2 @@\n-                    if (plugin instanceof DefaultStripDebugPlugin) {\n-                        defaultStripDebugPlugin = (DefaultStripDebugPlugin) plugin;\n+                    if (plugin instanceof DefaultStripDebugPlugin p) {\n+                        defaultStripDebugPlugin = p;\n@@ -573,1 +560,1 @@\n-                        if (!opt.isArgumentOptional() && (param == null || param.isEmpty())) {\n+                        if (param == null || param.isEmpty()) {\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/TaskHelper.java","additions":9,"deletions":22,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.lang.IllegalArgumentException;\n@@ -36,1 +35,0 @@\n-import java.util.Map;\n@@ -45,2 +43,0 @@\n- *\n- * Usage: --strip-java-debug-attributes(=+parameter_names)\n@@ -49,3 +45,0 @@\n-    public static final String NAME = \"strip-java-debug-attributes\";\n-    public static final String DROP_METHOD_PARAMETER_NAMES = \"+parameter-names\";\n-\n@@ -53,1 +46,1 @@\n-    private boolean isDroppingMethodNames;\n+    public static final String NAME = \"strip-java-debug-attributes\";\n@@ -62,32 +55,0 @@\n-        isDroppingMethodNames = false;\n-    }\n-\n-    @Override\n-    public boolean hasArguments() {\n-        return true;\n-    }\n-\n-    @Override\n-    public boolean hasRawArgument() {\n-        return true;\n-    }\n-\n-    @Override\n-    public boolean isArgumentOptional() {\n-        return true;\n-    }\n-\n-    @Override\n-    public void configure(Map<String, String> config) {\n-        var rawArg = config.get(NAME);\n-        if (rawArg != null) {\n-            if (rawArg.isEmpty()) {\n-                return;\n-            } else if (rawArg.equals(DROP_METHOD_PARAMETER_NAMES)) {\n-                isDroppingMethodNames = true;\n-            } else {\n-                \/\/ We only support one value for now, other values is illegal.\n-                throw new IllegalArgumentException(\n-                        PluginsResourceBundle.getMessage(\"err.illegal.argument\", rawArg));\n-            }\n-        }\n@@ -110,9 +71,0 @@\n-\n-                        MethodTransform mt;\n-                        if (isDroppingMethodNames) {\n-                            mt = MethodTransform.dropping(me -> me instanceof MethodParametersAttribute)\n-                                    .andThen(MethodTransform.transformingCode(CodeTransform.ACCEPT_ALL));\n-                        } else {\n-                            mt = MethodTransform.transformingCode(CodeTransform.ACCEPT_ALL);\n-                        }\n-\n@@ -121,2 +73,3 @@\n-                                                            || cle instanceof SourceDebugExtensionAttribute)\n-                                              .andThen(ClassTransform.transformingMethods(mt)));\n+                                                        || cle instanceof SourceDebugExtensionAttribute)\n+                                        .andThen(ClassTransform.transformingMethods(MethodTransform\n+                                                .transformingCode(CodeTransform.ACCEPT_ALL))));\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/StripJavaDebugAttributesPlugin.java","additions":5,"deletions":52,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -169,4 +169,0 @@\n-    public default boolean isArgumentOptional() {\n-        return false;\n-    }\n-\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/plugin\/Plugin.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -195,2 +195,0 @@\n-strip-java-debug-attributes.argument=[+parameter-names]\n-\n@@ -201,1 +199,1 @@\n-\\  --strip-java-debug-attributes [+parameter-names]\\n\\\n+\\  --strip-java-debug-attributes \\n\\\n@@ -203,3 +201,1 @@\n-\\                            classes in the output image.\n-\\                            Use +parameter-names to strip method parameters\n-\\                            name.\n+\\                            classes in the output image\n@@ -374,1 +370,1 @@\n-err.illegal.argument=Illegal argument: \\\"{0}\\\"\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/plugins.properties","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -219,30 +219,0 @@\n-    @ParameterizedTest\n-    @FieldSource(\"testJmods\")\n-    public void testStripParameterNames(Jmod jmod) throws Exception {\n-        var imageDir = Paths.get(\"img\");\n-        buildImage(jmod.moduleDir(), imageDir,\n-                \"--strip-debug\", \"--strip-java-debug-attributes=+parameter-names\")\n-            .assertSuccess();\n-        assertHasParameterNames(imageDir, false);\n-    }\n-\n-    @Test\n-    public void testWithoutNative() throws Exception {\n-        var imageDir = Paths.get(\"img\");\n-        var jmod = testJmods.get(0);\n-        buildImage(jmod.moduleDir(), imageDir,\n-                \"--strip-java-debug-attributes=+parameter-names\")\n-            .assertSuccess();\n-        assertHasParameterNames(imageDir, false);\n-    }\n-\n-    @Test\n-    public void testAlternativeFormOfArgument() throws Exception {\n-        var imageDir = Paths.get(\"img\");\n-        var jmod = testJmods.get(0);\n-        buildImage(jmod.moduleDir(), imageDir,\n-                \"--strip-debug\", \"--strip-java-debug-attributes\", \"+parameter-names\")\n-            .assertSuccess();\n-        assertHasParameterNames(imageDir, false);\n-    }\n-\n@@ -258,9 +228,0 @@\n-\n-    @Test\n-    public void testInvalidArgument() throws Exception {\n-        var imageDir = Paths.get(\"img\");\n-        var jmod = testJmods.get(0);\n-        buildImage(jmod.moduleDir(), imageDir,\n-                \"--strip-debug\", \"--strip-java-debug-attributes=+parameter_names\")\n-            .assertFailure(\"Illegal argument: \\\"+parameter_names\\\"\");\n-    }\n","filename":"test\/jdk\/tools\/jlink\/plugins\/StripParameterNamesTest.java","additions":0,"deletions":39,"binary":false,"changes":39,"status":"modified"}]}