{"files":[{"patch":"@@ -94,0 +94,1 @@\n+        final boolean isArgumentOptional;\n@@ -102,0 +103,1 @@\n+                      boolean isArgumentOptional,\n@@ -117,0 +119,1 @@\n+            this.isArgumentOptional = isArgumentOptional;\n@@ -131,1 +134,1 @@\n-            this(hasArg, processing, hidden, name, shortname, \"\", isTerminal);\n+            this(hasArg, false, processing, hidden, name, shortname, \"\", isTerminal);\n@@ -135,1 +138,1 @@\n-            this(hasArg, processing, false, name, shortname, \"\", isTerminal);\n+            this(hasArg, false, processing, false, name, shortname, \"\", isTerminal);\n@@ -139,1 +142,1 @@\n-            this(hasArg, processing, false, name, shortname, shortname2, false);\n+            this(hasArg, false, processing, false, name, shortname, shortname2, false);\n@@ -143,1 +146,1 @@\n-            this(hasArg, processing, false, name, shortname, \"\", false);\n+            this(hasArg, false, processing, false, name, shortname, \"\", false);\n@@ -147,1 +150,1 @@\n-            this(hasArg, processing, hidden, name, \"\", \"\", false);\n+            this(hasArg, false, processing, hidden, name, \"\", \"\", false);\n@@ -154,0 +157,4 @@\n+        public boolean isArgumentOptional() {\n+            return isArgumentOptional;\n+        }\n+\n@@ -212,0 +219,6 @@\n+        public PluginOption(boolean hasArg, boolean isArgumentOptional,\n+                            Processing<PluginsHelper> processing,\n+                            boolean hidden, String name) {\n+            super(hasArg, isArgumentOptional, processing, hidden, name, \"\", \"\", false);\n+        }\n+\n@@ -305,1 +318,1 @@\n-                    = new PluginOption(plugin.hasArguments(),\n+                    = new PluginOption(plugin.hasArguments(), plugin.isArgumentOptional(),\n@@ -560,1 +573,1 @@\n-                        if (param == null || param.isEmpty()) {\n+                        if (!opt.isArgumentOptional() && (param == null || param.isEmpty())) {\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/TaskHelper.java","additions":20,"deletions":7,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -75,0 +75,5 @@\n+    @Override\n+    public boolean isArgumentOptional() {\n+        return true;\n+    }\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/StripJavaDebugAttributesPlugin.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -169,0 +169,4 @@\n+    public default boolean isArgumentOptional() {\n+        return false;\n+    }\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/plugin\/Plugin.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -131,1 +131,0 @@\n-                    .peek(System.out::println)\n@@ -249,0 +248,11 @@\n+\n+    @Test\n+    public void testWithoutStripParameterName() throws Exception {\n+        var imageDir = Paths.get(\"img\");\n+        var jmod = testJmods.get(0);\n+        buildImage(jmod.moduleDir(), imageDir,\n+                \"--strip-debug\", \"--strip-java-debug-attributes\")\n+            .assertSuccess();\n+        assertHasParameterNames(imageDir, jmod.withParameterNames());\n+    }\n+\n","filename":"test\/jdk\/tools\/jlink\/plugins\/StripParameterNamesTest.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"}]}