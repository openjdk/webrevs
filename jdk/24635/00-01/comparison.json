{"files":[{"patch":"@@ -368,0 +368,7 @@\n+        \/\/ Invalid if the pathname has a trailing space\n+        String pathname = f.getPath();\n+        int len = pathname.length();\n+        if (len > 0 && pathname.charAt(len - 1) == ' ')\n+            return true;\n+\n+        \/\/ The remaining checks are irrelevant for alternate data streams (ADS)\n@@ -373,1 +380,0 @@\n-        String pathname = f.getPath();\n@@ -379,2 +385,1 @@\n-        \/\/ Invalid if path creation fails\n-        Path path = null;\n+        \/\/ Invalid if the path string cannot be converted to a Path\n@@ -382,1 +387,1 @@\n-            path = sun.nio.fs.DefaultFileSystemProvider.theFileSystem().getPath(pathname);\n+            Path path = sun.nio.fs.DefaultFileSystemProvider.theFileSystem().getPath(pathname);\n","filename":"src\/java.base\/windows\/classes\/java\/io\/WinNTFileSystem.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -35,2 +35,0 @@\n- * @run junit\/othervm -Djdk.io.File.enableADS WinTrailingSpace\n- * @run junit\/othervm -Djdk.io.File.enableADS=false  WinTrailingSpace\n@@ -39,1 +37,0 @@\n-    private static final boolean FAILURE_EXPECTED;\n@@ -43,9 +40,0 @@\n-    static {\n-        final String enableADS = System.getProperty(\"jdk.io.File.enableADS\");\n-        if (enableADS != null) {\n-            FAILURE_EXPECTED = enableADS.equalsIgnoreCase(Boolean.FALSE.toString());\n-        } else {\n-            FAILURE_EXPECTED = false;\n-        }\n-    }\n-\n@@ -73,4 +61,2 @@\n-            assertEquals(FAILURE_EXPECTED, !f.exists());\n-        } catch (IOException e) {\n-            if (!FAILURE_EXPECTED)\n-                throw e;\n+            assertFalse(f.exists()); \/\/ should not reach here\n+        } catch (IOException expected) {\n","filename":"test\/jdk\/java\/io\/File\/WinTrailingSpace.java","additions":2,"deletions":16,"binary":false,"changes":18,"status":"modified"}]}