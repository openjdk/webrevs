{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -124,1 +124,1 @@\n-                     boolean interactive) throws Exception {\n+                     boolean interactive, Size size) throws Exception {\n@@ -146,1 +146,0 @@\n-                Size size = null;\n@@ -1315,0 +1314,1 @@\n+        protected static final int DEFAULT_WIDTH = 80;\n@@ -1323,1 +1323,1 @@\n-                 size != null ? size : new Size(80, DEFAULT_HEIGHT),\n+                 size != null ? size : new Size(DEFAULT_WIDTH, DEFAULT_HEIGHT),\n@@ -1325,1 +1325,1 @@\n-                              : interactive ? new Size(80, DEFAULT_HEIGHT)\n+                              : interactive ? new Size(DEFAULT_WIDTH, DEFAULT_HEIGHT)\n@@ -1369,1 +1369,1 @@\n-            return new Size(80, h);\n+            return new Size(DEFAULT_WIDTH, h);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/ConsoleIOContext.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -83,0 +83,1 @@\n+import jdk.internal.org.jline.terminal.Size;\n@@ -169,0 +170,1 @@\n+    final Size windowSize;\n@@ -184,0 +186,1 @@\n+     * @param windowSize window size hint, or null\n@@ -189,1 +192,1 @@\n-            boolean interactiveTerminal) {\n+            boolean interactiveTerminal, Size windowSize) {\n@@ -206,0 +209,1 @@\n+        this.windowSize = windowSize;\n@@ -1001,1 +1005,1 @@\n-            try (IOContext in = new ConsoleIOContext(this, cmdin, console, interactiveTerminal)) {\n+            try (IOContext in = new ConsoleIOContext(this, cmdin, console, interactiveTerminal, windowSize)) {\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellTool.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024 Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import jdk.internal.org.jline.terminal.Size;\n@@ -56,0 +57,1 @@\n+    private Size windowSize = null;\n@@ -218,0 +220,10 @@\n+    @Override\n+    public JavaShellToolBuilder windowSize(int columns, int rows) {\n+        if (columns <= 0)\n+            throw new IllegalArgumentException(\"columns = \" + columns);\n+        if (rows <= 0)\n+            throw new IllegalArgumentException(\"rows = \" + rows);\n+        this.windowSize = new Size(columns, rows);\n+        return this;\n+    }\n+\n@@ -231,1 +243,1 @@\n-                userOut, userErr, prefs, vars, locale, interactiveTerminal);\n+                userOut, userErr, prefs, vars, locale, interactiveTerminal, windowSize);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellToolBuilder.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024 Oracle and\/or its affiliates. All rights reserved.\n@@ -212,0 +212,18 @@\n+    \/**\n+     * Provide a hint of the display window's dimensions when using an interactive terminal.\n+     *\n+     * <p>\n+     * When the input stream for this Java Shell is {@code System.in}, this setting is ignored.\n+     *\n+     * @implSpec Implementations may choose to ignore this method. The default implementation\n+     * of this method returns {@code this}.\n+     *\n+     * @param columns number of displayed columns\n+     * @param rows number of displayed rows\n+     * @return the {@code JavaShellToolBuilder} instance\n+     * @since 24\n+     *\/\n+    default JavaShellToolBuilder windowSize(int columns, int rows) {\n+        return this;\n+    }\n+\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/tool\/JavaShellToolBuilder.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"}]}