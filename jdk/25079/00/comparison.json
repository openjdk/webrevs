{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -980,1 +980,9 @@\n-            pendingBytes = String.valueOf(userChar).getBytes();\n+            StringBuilder dataToConvert = new StringBuilder();\n+            dataToConvert.append(userChar);\n+            if (Character.isHighSurrogate(userChar)) {\n+                if (pendingLine.length() > pendingLinePointer &&\n+                    Character.isLowSurrogate(pendingLine.charAt(pendingLinePointer))) {\n+                    dataToConvert.append(readUserInputChar());\n+                }\n+            }\n+            pendingBytes = dataToConvert.toString().getBytes();\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/ConsoleIOContext.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8356165\n+ * @summary Check user input works properly\n+ * @modules\n+ *     jdk.compiler\/com.sun.tools.javac.api\n+ *     jdk.compiler\/com.sun.tools.javac.main\n+ *     jdk.jshell\/jdk.internal.jshell.tool:open\n+ *     jdk.jshell\/jdk.internal.jshell.tool.resources:open\n+ *     jdk.jshell\/jdk.jshell:open\n+ * @library \/tools\/lib\n+ * @build toolbox.ToolBox toolbox.JarTask toolbox.JavacTask\n+ * @build Compiler UITesting\n+ * @compile InputUITest.java\n+ * @run testng InputUITest\n+ *\/\n+\n+import org.testng.annotations.Test;\n+\n+@Test\n+public class InputUITest extends UITesting {\n+\n+    public InputUITest() {\n+        super(true);\n+    }\n+\n+    public void testUserInputWithSurrogates() throws Exception {\n+        doRunTest((inputSink, out) -> {\n+            inputSink.write(\"new String(System.in.readNBytes(4))\\n\\uD83D\\uDE03\\n\");\n+            waitOutput(out, \"\\\"\\uD83D\\uDE03\\\"\");\n+        }, false);\n+    }\n+\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/jdk\/jshell\/InputUITest.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import java.io.ByteArrayOutputStream;\n@@ -65,0 +66,4 @@\n+        doRunTest(test, true);\n+    }\n+\n+    protected void doRunTest(Test test, boolean setUserInput) throws Exception {\n@@ -90,1 +95,1 @@\n-                        .in(input, input)\n+                        .in(input, setUserInput ? input : null)\n","filename":"test\/langtools\/jdk\/jshell\/UITesting.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}