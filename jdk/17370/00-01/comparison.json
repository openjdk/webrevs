{"files":[{"patch":"@@ -47,1 +47,1 @@\n-  if (!RegMask::can_represent_arg(reg)) {\n+  if (!can_represent_sync(reg)) {\n","filename":"src\/hotspot\/share\/opto\/locknode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,0 +60,7 @@\n+  \/\/ Check if a RegMask is big enough to represent a synchronization entry at\n+  \/\/ the index reg. Analogous to can_represent and can_represent_arg in\n+  \/\/ regmask.hpp.\n+  static bool can_represent_sync(OptoReg::Name reg) {\n+    return (int)reg < (int)(RegMask::CHUNK_SIZE - 1 - Compile::current()->sync_stack_slots());\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/locknode.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @requires vm.debug\n@@ -30,1 +29,0 @@\n- *\n","filename":"test\/hotspot\/jtreg\/compiler\/locks\/TestNestedSynchronize.java","additions":0,"deletions":2,"binary":false,"changes":2,"previous_filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestNestedSynchronize.java","status":"renamed"}]}