{"files":[{"patch":"@@ -92,3 +92,0 @@\n-    private static final int MULT_MIN_10 = Integer.MIN_VALUE \/ 10;\n-    private static final int MULT_MIN_100 = Integer.MIN_VALUE \/ 100;\n-\n@@ -527,13 +524,6 @@\n-        int result = 0, c, digit;\n-        boolean inRange;\n-        int neg;\n-        if ((neg = (c = value[0]) - '-') != 0\n-                && neg + 2 != 0 \/\/ firstChar != '+'\n-        ) {\n-            if (inRange = isDigitLatin1(c)) {\n-                result = '0' - c;\n-            }\n-        } else {\n-            inRange = len != 1;\n-        }\n-        int limit = MIN_VALUE + (neg != 0 ? 1 : 0);\n+        int fc = value[0];\n+        int result = Integer.isDigitLatin1(fc)\n+                ? '0' - fc\n+                : len != 1 && (fc == '-' || fc == '+')\n+                ? 0\n+                : 1;  \/\/ or any value > 0\n@@ -541,9 +531,6 @@\n-        while (inRange\n-                && i + 1 < len\n-                && (digit = DecimalDigits.digit2(value, i)) != -1\n-        ) {\n-            \/\/ max digits is 19, no need to check inRange (result == MULT_MIN_100 && digit <= (MULT_MIN_100 * 100 - limit))\n-            if (inRange = (result >= MULT_MIN_100)) {\n-                result = result * 100 - digit;\n-                i += 2;\n-            }\n+        int d;\n+        while (i + 1 < len\n+                && (d = DecimalDigits.digit2(value, i)) != -1\n+                && MIN_VALUE \/ 100 <= result && result <= 0) {\n+            result = result * 100 - d;  \/\/ overflow from d => result > 0\n+            i += 2;\n@@ -551,11 +538,10 @@\n-        if (inRange && result <= 0) {\n-            if (i + 1 == len && isDigitLatin1((c = value[i]))) {\n-                digit = c - '0';\n-                if (result > MULT_MIN_10 || (result == MULT_MIN_10 && digit <= (MULT_MIN_10 * 10 - limit))) {\n-                    result = result * 10 - digit;\n-                    i++;\n-                }\n-            }\n-            if (i == len) {\n-                return neg != 0 ? -result : result;\n-            }\n+        if (i < len\n+                && Integer.isDigitLatin1(d = value[i])\n+                && MIN_VALUE \/ 10 <= result && result <= 0) {\n+            result = result * 10 + '0' - d;  \/\/ overflow from '0' - d => result > 0\n+            i += 1;\n+        }\n+        if (i == len\n+                & result <= 0\n+                & (MIN_VALUE < result || fc == '-')) {\n+            return fc == '-' ? result : -result;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":22,"deletions":36,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -92,3 +92,0 @@\n-    private static final long MULT_MIN_10 = MIN_VALUE \/ 10;\n-    private static final long MULT_MIN_100 = MIN_VALUE \/ 100;\n-\n@@ -563,14 +560,6 @@\n-        int c, digit;\n-        long result = 0;\n-        boolean inRange;\n-        int neg;\n-        if ((neg = (c = value[0]) - '-') != 0\n-                && neg + 2 != 0 \/\/ firstChar != '+'\n-        ) {\n-            if (inRange = Integer.isDigitLatin1(c)) {\n-                result = '0' - c;\n-            }\n-        } else {\n-            inRange = len != 1;\n-        }\n-        long limit = MIN_VALUE + (neg != 0 ? 1L : 0L);\n+        int fc = value[0];\n+        long result = Integer.isDigitLatin1(fc)\n+                ? '0' - fc\n+                : len != 1 && (fc == '-' || fc == '+')\n+                ? 0\n+                : 1;  \/\/ or any value > 0\n@@ -578,8 +567,6 @@\n-        while (inRange\n-                && i + 1 < len\n-                && (digit = DecimalDigits.digit2(value, i)) != -1\n-        ) {\n-            if (inRange = (result > MULT_MIN_100 || (result == MULT_MIN_100 && digit <= (MULT_MIN_100 * 100 - limit)))) {\n-                result = result * 100 - digit;\n-                i += 2;\n-            }\n+        int d;\n+        while (i + 1 < len\n+                && (d = DecimalDigits.digit2(value, i)) != -1\n+                && MIN_VALUE \/ 100 <= result && result <= 0) {\n+            result = result * 100 - d;  \/\/ overflow from d => result > 0\n+            i += 2;\n@@ -587,12 +574,10 @@\n-        if (inRange) {\n-            if (i + 1 == len && Integer.isDigitLatin1((c = value[i]))) {\n-                digit = c - '0';\n-                \/\/ max digits is 20, no need to check inRange (result == MULT_MIN_10 && digit <= (MULT_MIN_10 * 10 - limit))\n-                if (result >= MULT_MIN_10) {\n-                    result = result * 10 - digit;\n-                    i++;\n-                }\n-            }\n-            if (i == len && result <= 0) {\n-                return neg != 0 ? -result : result;\n-            }\n+        if (i < len\n+                && Integer.isDigitLatin1(d = value[i])\n+                && MIN_VALUE \/ 10 <= result && result <= 0) {\n+            result = result * 10 + '0' - d;  \/\/ overflow from '0' - d => result > 0\n+            i += 1;\n+        }\n+        if (i == len\n+                & result <= 0\n+                & (MIN_VALUE < result || fc == '-')) {\n+            return fc == '-' ? result : -result;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":22,"deletions":37,"binary":false,"changes":59,"status":"modified"}]}