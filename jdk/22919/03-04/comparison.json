{"files":[{"patch":"@@ -527,1 +527,1 @@\n-        int result = 0, c, c1, digit;\n+        int result = 0, c, digit;\n@@ -543,2 +543,1 @@\n-                && isDigitLatin1((c = value[i]))\n-                && isDigitLatin1(c1 = value[i + 1])\n+                && (digit = DecimalDigits.digit2(value, i)) != -1\n@@ -546,1 +545,0 @@\n-            digit = c * 10 + c1 - 528; \/\/ 528 = 48 * 11 = '0' * 10 + '0'\n@@ -583,0 +581,4 @@\n+    static boolean isDigitLatin2(int ch) {\n+        return CharacterDataLatin1.instance.isDigit(ch);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -563,1 +563,1 @@\n-        int c, c1;\n+        int c, digit;\n@@ -580,2 +580,1 @@\n-                && Integer.isDigitLatin1((c = value[i]))\n-                && Integer.isDigitLatin1(c1 = value[i + 1])\n+                && (digit = DecimalDigits.digit2(value, i)) != -1\n@@ -583,1 +582,0 @@\n-            int digit = c * 10 + c1 - 528; \/\/ 528 = 48 * 11 = '0' * 10 + '0'\n@@ -591,1 +589,1 @@\n-                int digit = c - '0';\n+                digit = c - '0';\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import jdk.internal.misc.Unsafe;\n+import jdk.internal.vm.annotation.ForceInline;\n@@ -36,0 +38,1 @@\n+    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n@@ -139,0 +142,48 @@\n+\n+    \/**\n+     * Determine whether the two strings in bytes are both numbers. If they are, return d0 * 10 + d1, otherwise return -1\n+     * @param str The input LATIN1 encoded String value\n+     * @param offset the offset\n+     * @return If both characters are numbers, return d0 * 10 + d1, otherwise return -1\n+     *\/\n+    @ForceInline\n+    public static int digit2(byte[] str, int offset) {\n+        \/*\n+            Here we are doing a 2-Byte Vector operation on the short type.\n+\n+            x & 0xF0 != 0xC0\n+            ---------------\n+            0 0b0011_0000 & 0b1111_0000 = 0b0011_0000\n+            1 0b0011_0001 & 0b1111_0000 = 0b0011_0000\n+            2 0b0011_0010 & 0b1111_0000 = 0b0011_0000\n+            3 0b0011_0011 & 0b1111_0000 = 0b0011_0000\n+            4 0b0011_0100 & 0b1111_0000 = 0b0011_0000\n+            5 0b0011_0101 & 0b1111_0000 = 0b0011_0000\n+            6 0b0011_0110 & 0b1111_0000 = 0b0011_0000\n+            7 0b0011_0111 & 0b1111_0000 = 0b0011_0000\n+            8 0b0011_1000 & 0b1111_0000 = 0b0011_0000\n+            9 0b0011_1001 & 0b1111_0000 = 0b0011_0000\n+\n+            (((d = x & 0x0F) + 0x06) & 0xF0) != 0\n+            ---------------\n+            0 ((0b0011_0000) & 0b0000_1111 + 0b0110_0000) & 0b1111_0000 = 0b0110_0000\n+            1 ((0b0011_0001) & 0b0000_1111 + 0b0110_0000) & 0b1111_0000 = 0b0110_0000\n+            2 ((0b0011_0010) & 0b0000_1111 + 0b0110_0000) & 0b1111_0000 = 0b0110_0000\n+            3 ((0b0011_0011) & 0b0000_1111 + 0b0110_0000) & 0b1111_0000 = 0b0110_0000\n+            4 ((0b0011_0100) & 0b0000_1111 + 0b0110_0000) & 0b1111_0000 = 0b0110_0000\n+            5 ((0b0011_0101) & 0b0000_1111 + 0b0110_0000) & 0b1111_0000 = 0b0110_0000\n+            6 ((0b0011_0110) & 0b0000_1111 + 0b0110_0000) & 0b1111_0000 = 0b0110_0000\n+            7 ((0b0011_0111) & 0b0000_1111 + 0b0110_0000) & 0b1111_0000 = 0b0110_0000\n+            8 ((0b0011_1000) & 0b0000_1111 + 0b0110_0000) & 0b1111_0000 = 0b0110_0000\n+            9 ((0b0011_1001) & 0b0000_1111 + 0b0110_0000) & 0b1111_0000 = 0b0110_0000\n+         *\/\n+        int d;\n+        short x = UNSAFE.getShortUnaligned(str, Unsafe.ARRAY_BYTE_BASE_OFFSET + offset, false);\n+        if ((((x & 0xF0F0) - 0x3030)\n+                | (((d = x & 0x0F0F) + 0x0606) & 0xF0F0)) != 0\n+        ) {\n+            return -1;\n+        }\n+        return ((d & 0xF) << 3) + ((d & 0xF) << 1)  \/\/ (d & 0xF) * 10\n+                + (d >> 8);\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/DecimalDigits.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"modified"}]}