{"files":[{"patch":"@@ -92,2 +92,2 @@\n-    private static final int MULT_MIN = Integer.MIN_VALUE \/ 10;\n-    private static final int MULT_MIN_2 = Integer.MIN_VALUE \/ 100;\n+    private static final int MULT_MIN_10 = Integer.MIN_VALUE \/ 10;\n+    private static final int MULT_MIN_100 = Integer.MIN_VALUE \/ 100;\n@@ -527,4 +527,4 @@\n-        int result = 0, c = value[0], c1, digit;\n-        boolean inRange = true, isDigit = false;\n-        int neg = c - '-';\n-        if (neg != 0\n+        int result = 0, c, c1, digit;\n+        boolean inRange;\n+        int neg;\n+        if ((neg = (c = value[0]) - '-') != 0\n@@ -533,1 +533,1 @@\n-            if (isDigit(c)) {\n+            if (inRange = isDigitLatin1(c)) {\n@@ -535,2 +535,0 @@\n-            } else {\n-                inRange = false;\n@@ -538,0 +536,2 @@\n+        } else {\n+            inRange = len != 1;\n@@ -541,1 +541,5 @@\n-        while (i + 1 < len && (isDigit = isDigit((c = value[i]))) && isDigit(c1 = value[i + 1])) {\n+        while (inRange\n+                && i + 1 < len\n+                && isDigitLatin1((c = value[i]))\n+                && isDigitLatin1(c1 = value[i + 1])\n+        ) {\n@@ -543,2 +547,4 @@\n-            if (!(inRange = (result > MULT_MIN_2))) {\n-                break;\n+            \/\/ max digits is 19, no need to check inRange (result == MULT_MIN_100 && digit <= (MULT_MIN_100 * 100 - limit))\n+            if (inRange = (result >= MULT_MIN_100)) {\n+                result = result * 100 - digit;\n+                i += 2;\n@@ -546,2 +552,0 @@\n-            result = result * 100 - digit;\n-            i += 2;\n@@ -549,5 +553,2 @@\n-        if (inRange) {\n-            if (i + 1 == len) {\n-                isDigit = isDigit((c = value[i]));\n-            }\n-            if (i != len && isDigit) {\n+        if (inRange && result <= 0) {\n+            if (i + 1 == len && isDigitLatin1((c = value[i]))) {\n@@ -555,3 +556,4 @@\n-                inRange = result > MULT_MIN || (result == MULT_MIN && digit <= (MULT_MIN * 10 - limit));\n-                result = result * 10 - digit;\n-                i++;\n+                if (result > MULT_MIN_10 || (result == MULT_MIN_10 && digit <= (MULT_MIN_10 * 10 - limit))) {\n+                    result = result * 10 - digit;\n+                    i++;\n+                }\n@@ -559,1 +561,1 @@\n-            if (inRange && i == len && result <= 0) {\n+            if (i == len) {\n@@ -568,1 +570,1 @@\n-            throw NumberFormatException.emptyInput();\n+            throw NumberFormatException.nullInput();\n@@ -577,2 +579,2 @@\n-    static boolean isDigit(int ch) {\n-        return ch >= '0' && ch <= '9';\n+    static boolean isDigitLatin1(int ch) {\n+        return CharacterDataLatin1.instance.isDigit(ch);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":28,"deletions":26,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -92,1 +92,2 @@\n-    private static final long MULT_MIN_2 = -92233720368547758L;\n+    private static final long MULT_MIN_10 = MIN_VALUE \/ 10;\n+    private static final long MULT_MIN_100 = MIN_VALUE \/ 100;\n@@ -562,1 +563,1 @@\n-        int c = value[0], c1, digit;\n+        int c, c1;\n@@ -564,3 +565,3 @@\n-        boolean inRange = true, isDigit = false;\n-        int neg = c - '-';\n-        if (neg != 0\n+        boolean inRange;\n+        int neg;\n+        if ((neg = (c = value[0]) - '-') != 0\n@@ -569,1 +570,1 @@\n-            if (Integer.isDigit(c)) {\n+            if (inRange = Integer.isDigitLatin1(c)) {\n@@ -571,2 +572,0 @@\n-            } else {\n-                inRange = false;\n@@ -574,0 +573,2 @@\n+        } else {\n+            inRange = len != 1;\n@@ -577,4 +578,9 @@\n-        while (i + 1 < len && (isDigit = Integer.isDigit((c = value[i]))) && Integer.isDigit(c1 = value[i + 1])) {\n-            digit = c * 10 + c1 - 528; \/\/ 528 = 48 * 11 = '0' * 10 + '0'\n-            if (!(inRange = (result > MULT_MIN_2 || (result == MULT_MIN_2 && digit <= (MULT_MIN_2 * 100 - limit))))) {\n-                break;\n+        while (inRange\n+                && i + 1 < len\n+                && Integer.isDigitLatin1((c = value[i]))\n+                && Integer.isDigitLatin1(c1 = value[i + 1])\n+        ) {\n+            int digit = c * 10 + c1 - 528; \/\/ 528 = 48 * 11 = '0' * 10 + '0'\n+            if (inRange = (result > MULT_MIN_100 || (result == MULT_MIN_100 && digit <= (MULT_MIN_100 * 100 - limit)))) {\n+                result = result * 100 - digit;\n+                i += 2;\n@@ -582,2 +588,0 @@\n-            result = result * 100 - digit;\n-            i += 2;\n@@ -586,8 +590,7 @@\n-            if (i + 1 == len) {\n-                isDigit = Integer.isDigit((c = value[i]));\n-            }\n-            if (i != len && isDigit) {\n-                digit = c - '0';\n-                result = result * 10 - digit;\n-                i++;\n-                \/\/ max len is 20, No need to check inRange\n+            if (i + 1 == len && Integer.isDigitLatin1((c = value[i]))) {\n+                int digit = c - '0';\n+                \/\/ max digits is 20, no need to check inRange (result == MULT_MIN_10 && digit <= (MULT_MIN_10 * 10 - limit))\n+                if (result >= MULT_MIN_10) {\n+                    result = result * 10 - digit;\n+                    i++;\n+                }\n@@ -604,1 +607,1 @@\n-            throw NumberFormatException.emptyInput();\n+            throw NumberFormatException.nullInput();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":26,"deletions":23,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-    static NumberFormatException emptyInput() {\n+    static NumberFormatException nullInput() {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/NumberFormatException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}