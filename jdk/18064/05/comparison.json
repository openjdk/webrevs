{"files":[{"patch":"@@ -160,1 +160,0 @@\n-  static_assert(sizeof(NULL) == sizeof(char*), \"NULL must be same size as pointer\");\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,16 +96,2 @@\n-\/\/ type so we define NULL_WORD to use in those contexts. For xlc they are the same.\n-#define NULL_WORD  NULL\n-\n-\/\/ AIX also needs a 64 bit NULL to work as a null address pointer.\n-\/\/ Most system includes on AIX would define it as an int 0 if not already defined with one\n-\/\/ exception: \/usr\/include\/dirent.h will unconditionally redefine NULL to int 0 again.\n-\/\/ In this case you need to copy the following defines to a position after #include <dirent.h>\n-#include <dirent.h>\n-#ifdef _LP64\n-  #undef NULL\n-  #define NULL 0L\n-#else\n-  #ifndef NULL\n-    #define NULL 0\n-  #endif\n-#endif\n+\/\/ type so we define NULL_WORD to use in those contexts.\n+#define NULL_WORD  0L\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions_xlc.hpp","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"}]}