{"files":[{"patch":"@@ -172,1 +172,1 @@\n-  __ cmp(lir_cond_notEqual, xor_shift_res, LIR_OprFact::intptrConst(NULL_WORD));\n+  __ cmp(lir_cond_notEqual, xor_shift_res, LIR_OprFact::intptrConst(nullptr));\n","filename":"src\/hotspot\/share\/gc\/g1\/c1\/g1BarrierSetC1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-  static_assert(sizeof(NULL) == sizeof(char*), \"NULL must be same size as pointer\");\n+  static_assert(sizeof(nullptr) == sizeof(char*), \"NULL must be same size as pointer\");\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -97,15 +97,1 @@\n-#define NULL_WORD  NULL\n-\n-\/\/ AIX also needs a 64 bit NULL to work as a null address pointer.\n-\/\/ Most system includes on AIX would define it as an int 0 if not already defined with one\n-\/\/ exception: \/usr\/include\/dirent.h will unconditionally redefine NULL to int 0 again.\n-\/\/ In this case you need to copy the following defines to a position after #include <dirent.h>\n-#include <dirent.h>\n-#ifdef _LP64\n-  #undef NULL\n-  #define NULL 0L\n-#else\n-  #ifndef NULL\n-    #define NULL 0\n-  #endif\n-#endif\n+#define NULL_WORD  0L\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions_xlc.hpp","additions":1,"deletions":15,"binary":false,"changes":16,"status":"modified"}]}