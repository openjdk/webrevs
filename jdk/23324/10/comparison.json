{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -662,0 +662,11 @@\n+        if (UIManager.getLookAndFeel().getName().equals(\"Windows\")\n+            && System.getProperty(\"os.name\").equals(\"Windows 11\")\n+            && lh.getCheckIcon() != null && lh.useCheckAndArrow()) {\n+            Rectangle rect = lr.getTextRect();\n+            if (menuItem.getIcon() != null) {\n+                rect.x = rect.x + checkIcon.getIconWidth() \/ 2;\n+            } else {\n+                rect.x = rect.x - checkIcon.getIconWidth() \/ 2;\n+            }\n+            lr.setTextRect(rect);\n+        }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicMenuItemUI.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -851,0 +851,3 @@\n+                int skinWidth = -1;\n+                boolean isWindows11 = System.getProperty(\"os.name\").\n+                                                         equals(\"Windows 11\");\n@@ -876,3 +879,11 @@\n-                            skin.paintSkin(g, x, y,\n-                                getIconWidth(), getIconHeight(), backgroundState);\n-                            if (icon == null) {\n+                            if (!isWindows11) {\n+                                skin.paintSkin(g, x, y,\n+                                        getIconWidth(), getIconHeight(), backgroundState);\n+                                if (icon == null) {\n+                                    skin = xp.getSkin(c, part);\n+                                    skin.paintSkin(g, x - OFFSET, y + OFFSET, state);\n+                                }\n+                            } else {\n+                                skin.paintSkin(g, x - 2 * OFFSET, y,\n+                                        getIconWidth(), getIconHeight(), backgroundState);\n+                                skinWidth = getIconWidth();\n@@ -880,1 +891,1 @@\n-                                skin.paintSkin(g, x + OFFSET, y + OFFSET, state);\n+                                skin.paintSkin(g, x - OFFSET, y + OFFSET, state);\n@@ -886,1 +897,7 @@\n-                    icon.paintIcon(c, g, x + OFFSET, y + OFFSET);\n+                    if (!isWindows11) {\n+                        icon.paintIcon(c, g, x + OFFSET, y + OFFSET);\n+                    } else {\n+                        icon.paintIcon(c, g, x - OFFSET +\n+                                        ((skinWidth != -1) ? skinWidth : 16 + 2 * OFFSET),\n+                                y + OFFSET);\n+                    }\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/WindowsIconFactory.java","additions":23,"deletions":6,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -0,0 +1,136 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8348760\n+ * @summary Verify if RadioButton is shown if JRadioButtonMenuItem\n+ *          is rendered with ImageIcon in WindowsLookAndFeel\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TestImageIconWithJRadioButtonMenuItemAndJCheckBoxMenuItem\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import java.awt.image.BufferedImage;\n+import javax.swing.AbstractButton;\n+import javax.swing.ButtonGroup;\n+import javax.swing.ImageIcon;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JRadioButtonMenuItem;\n+import javax.swing.UIManager;\n+\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.JCheckBoxMenuItem;\n+\n+\n+import java.io.File;\n+\n+public class TestImageIconWithJRadioButtonMenuItemAndJCheckBoxMenuItem {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        A top level Menu will be shown.\n+\n+        Clicking on the Menu will show a\n+        RadioButtonMenuItem group with 3 radiobutton menuitems\n+        and a JCheckBoxMenuItem group with 3 checkbox menuitems\n+\n+        First radio button menuitem is selected with imageicon of a red square.\n+        Second radiobutton menuitem is unselected with imageicon.\n+        Third radiobutton menuItem is unselected without imageicon.\n+\n+        First checkbox menuitem is selected with imageicon.\n+        Second checkbox menuitem is unselected with imageicon.\n+        Third checkbox menuItem is unselected without imageicon.\n+\n+        Verify that for first JRadioButtonMenuItem with image icon,\n+        a bullet is shown alongside the imageicon and\n+        for first JCheckBoxMenuItem with imageicon\n+        a checkmark is shown alongside the image icon.\n+\n+        If bullet and checkmark is shown, test passes else fails.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n+        PassFailJFrame.builder()\n+                .title(\"JRadioButtonMenuItem Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(60)\n+                .testUI(\n+                 TestImageIconWithJRadioButtonMenuItemAndJCheckBoxMenuItem::doTest)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame doTest() {\n+        BufferedImage img = new BufferedImage(16, 16, BufferedImage.TYPE_INT_ARGB);\n+        Graphics g = img.getGraphics();\n+        g.setColor(Color.red);\n+        g.fillRect(0, 0, img.getWidth(), img.getHeight());\n+        g.dispose();\n+\n+        JFrame frame = new JFrame(\"RadioButtonWithImageIcon\");\n+        ImageIcon imageIcon1 = new ImageIcon(img);\n+        AbstractButton button1 = new JRadioButtonMenuItem(\"JRadioButtonMenuItem 1\",\n+                imageIcon1);\n+        button1.setSelected(true);\n+        AbstractButton button2 = new JRadioButtonMenuItem(\"JRadioButtonMenuItem 2\", imageIcon1);\n+        AbstractButton button3 = new JRadioButtonMenuItem(\"JRadioButtonMenuItem 3\");\n+\n+        ButtonGroup buttonGroup = new ButtonGroup();\n+        buttonGroup.add(button1);\n+        buttonGroup.add(button2);\n+        buttonGroup.add(button3);\n+\n+        AbstractButton check1 = new JCheckBoxMenuItem(\"JCheckBoxMenuItem 1\",\n+                imageIcon1);\n+        check1.setSelected(true);\n+        AbstractButton check2 = new JCheckBoxMenuItem(\"JCheckBoxMenuItem 2\", imageIcon1);\n+        AbstractButton check3 = new JCheckBoxMenuItem(\"JCheckBoxMenuItem 3\");\n+\n+        JMenu topLevel = new JMenu(\"Menus\");\n+\n+        topLevel.add(button1);\n+        topLevel.add(button2);\n+        topLevel.add(button3);\n+\n+        topLevel.addSeparator();\n+\n+        topLevel.add(check1);\n+        topLevel.add(check2);\n+        topLevel.add(check3);\n+\n+        JMenuBar menuBar = new JMenuBar();\n+        menuBar.add(topLevel);\n+\n+        frame.setJMenuBar(menuBar);\n+        frame.setSize(300, 300);\n+        return frame;\n+\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/TestImageIconWithJRadioButtonMenuItemAndJCheckBoxMenuItem.java","additions":136,"deletions":0,"binary":false,"changes":136,"status":"added"}]}