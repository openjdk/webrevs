{"files":[{"patch":"@@ -379,1 +379,1 @@\n-            Diags d = (text, pos) -> {\n+            Diags d = (key, pos) -> {\n@@ -382,0 +382,1 @@\n+                var text = resources.getText(key);\n@@ -400,1 +401,1 @@\n-            Diags d = (text, pos) -> messages.warning(finalFileObject, pos, pos, pos, text);\n+            Diags d = (key, pos) -> messages.warning(finalFileObject, pos, pos, pos, key);\n@@ -487,1 +488,1 @@\n-        void warn(String text, int pos);\n+        void warn(String key, int pos);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SnippetTaglet.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -164,1 +164,1 @@\n-                    diags.warn(resources.getText(\"doclet.snippet.markup.spurious\"), next.offset() + markedUpLine.start(\"markup\"));\n+                    diags.warn(\"doclet.snippet.markup.spurious\", next.offset() + markedUpLine.start(\"markup\"));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/snippet\/Parser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8266666 8281969\n+ * @bug 8266666 8281969 8319339\n@@ -262,0 +262,4 @@\n+        \/\/ use two files that differ in name but not content, to work around\n+        \/\/ error deduplication, whereby an error related to coordinates\n+        \/\/ (file, pos) reported before is suppressed; see:\n+        \/\/ com.sun.tools.javac.util.Log.shouldReport(JavaFileObject, int)\n@@ -263,1 +267,1 @@\n-        var badFile2 = \"bad2.txt\"; \/\/ to workaround error deduplication\n+        var badFile2 = \"bad2.txt\";\n@@ -628,1 +632,1 @@\n-    public void testPositiveInlineTagMarkup_FalseMarkup(Path base) throws Exception {\n+    public void testPositiveInlineTagMarkup_SpuriousMarkup(Path base) throws Exception {\n@@ -664,0 +668,128 @@\n+        checkOutput(Output.OUT, true, \"\"\"\n+                A.java:6: warning: spurious markup\n+                \/\/ @formatter:off\n+                  ^\"\"\",\"\"\"\n+                A.java:9: warning: spurious markup\n+                    \/\/ @formatter:on\n+                      ^\"\"\",\"\"\"\n+                A.java:17: warning: spurious markup\n+                \/\/ @formatter:off\n+                  ^\"\"\",\"\"\"\n+                A.java:22: warning: spurious markup\n+                    \/\/ @formatter:on\n+                      ^\"\"\");\n+    }\n+\n+    \/*\n+     * If spurious markup appears in an external snippet or either side of a\n+     * hybrid snippet, then all of the below is true:\n+     *\n+     *   - no error is raised\n+     *   - relevant warnings are emitted\n+     *   - spurious markup is output literally\n+     *\/\n+    @Test\n+    public void testPositiveExternalHybridTagMarkup_SpuriousMarkup(Path base) throws Exception {\n+        Path srcDir = base.resolve(\"src\");\n+        Path outDir = base.resolve(\"out\");\n+        var plain = \"plain.txt\";\n+        var withRegion = \"withRegion.txt\";\n+        new ClassBuilder(tb, \"pkg.A\")\n+                .setModifiers(\"public\", \"class\")\n+                .addMembers(\n+                        ClassBuilder.MethodBuilder\n+                                .parse(\"public void external() { }\")\n+                                .setComments(\"\"\"\n+                                             {@snippet file=\"%s\"}\n+                                             \"\"\".formatted(plain)))\n+                .addMembers(\n+                        ClassBuilder.MethodBuilder\n+                                .parse(\"public void hybrid1() { }\")\n+                                .setComments(\"\"\"\n+                                             {@snippet file=\"%s\":\n+                                                First line\n+                                                \/\/ @formatter:off\n+                                                  Second Line\n+                                                    Third line\n+                                                    \/\/ @formatter:on\n+                                                      Fourth line\n+                                             }\n+                                             \"\"\".formatted(plain)))\n+                .addMembers(\n+                        ClassBuilder.MethodBuilder\n+                                .parse(\"public void hybrid2() { }\")\n+                                .setComments(\"\"\"\n+                                             {@snippet file=\"%s\" region=\"showThis\" :\n+                                             Second Line\n+                                               Third line\n+                                             }\n+                                             \"\"\".formatted(withRegion)))\n+                .addMembers(\n+                        ClassBuilder.MethodBuilder\n+                                .parse(\"public void hybrid3() { }\")\n+                                .setComments(\"\"\"\n+                                             {@snippet file=\"%s\" region=\"showThis\" :\n+                                                First line\n+                                                \/\/ @formatter:off\n+                                                  Second Line \/\/ @start region=showThis\n+                                                    Third line\n+                                                    \/\/ @end\n+                                                    \/\/ @formatter:on\n+                                                      Fourth line\n+                                             }\n+                                             \"\"\".formatted(withRegion)))\n+                .write(srcDir);\n+\n+        addSnippetFile(srcDir, \"pkg\", plain, \"\"\"\n+   First line\n+   \/\/ @formatter:off\n+     Second Line\n+       Third line\n+       \/\/ @formatter:on\n+         Fourth line\n+\"\"\");\n+        addSnippetFile(srcDir, \"pkg\", withRegion, \"\"\"\n+   First line\n+   \/\/ @formatter:off\n+     Second Line \/\/ @start region=showThis\n+       Third line\n+     \/\/ @end\n+       \/\/ @formatter:on\n+         Fourth line\n+\"\"\");\n+        javadoc(\"-d\", outDir.toString(),\n+                \"-sourcepath\", srcDir.toString(),\n+                \"pkg\");\n+        checkExit(Exit.OK);\n+        checkNoCrashes();\n+        checkOutput(Output.OUT, true, \"\"\"\n+                %s:2: warning: spurious markup\n+                   \/\/ @formatter:off\n+                     ^\"\"\".formatted(plain), \"\"\"\n+                %s:5: warning: spurious markup\n+                       \/\/ @formatter:on\n+                         ^\"\"\".formatted(plain), \"\"\"\n+                A.java:11: warning: spurious markup\n+                   \/\/ @formatter:off\n+                     ^\"\"\", \"\"\"\n+                A.java:14: warning: spurious markup\n+                       \/\/ @formatter:on\n+                         ^\"\"\", \"\"\"\n+                %s:2: warning: spurious markup\n+                   \/\/ @formatter:off\n+                     ^\"\"\".formatted(plain), \"\"\"\n+                %s:5: warning: spurious markup\n+                       \/\/ @formatter:on\n+                         ^\"\"\".formatted(plain), \"\"\"\n+                %s:2: warning: spurious markup\n+                   \/\/ @formatter:off\n+                     ^\"\"\".formatted(withRegion), \"\"\"\n+                %s:6: warning: spurious markup\n+                       \/\/ @formatter:on\n+                         ^\"\"\".formatted(withRegion), \"\"\"\n+                A.java:31: warning: spurious markup\n+                   \/\/ @formatter:off\n+                     ^\"\"\", \"\"\"\n+                A.java:35: warning: spurious markup\n+                       \/\/ @formatter:on\n+                         ^\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java","additions":136,"deletions":4,"binary":false,"changes":140,"status":"modified"}]}