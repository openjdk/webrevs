{"files":[{"patch":"@@ -3072,1 +3072,1 @@\n-  Node* xbic = igvn().intcon(is_sub ? -con : con);\n+  Node* xbic = phase()->intcon(is_sub ? -con : con);\n@@ -3089,1 +3089,1 @@\n-    Node* invar_scale_con = igvn().intcon(invar_scale);\n+    Node* invar_scale_con = phase()->intcon(invar_scale);\n@@ -3141,1 +3141,1 @@\n-  Node* log2_abs_iv_scale = igvn().intcon(exact_log2(abs(iv_scale)));\n+  Node* log2_abs_iv_scale = phase()->intcon(exact_log2(abs(iv_scale)));\n@@ -3166,1 +3166,1 @@\n-  Node* mask_AW = igvn().intcon(AW-1);\n+  Node* mask_AW = phase()->intcon(AW-1);\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-  Node* mask_alignment = igvn().intcon(alignment-1);\n+  Node* mask_alignment = phase()->intcon(alignment-1);\n@@ -212,1 +212,1 @@\n-  Node* zero = igvn().intcon(0);\n+  Node* zero = phase()->intcon(0);\n@@ -737,1 +737,1 @@\n-  Node* shift_count_masked = new AndINode(shift_count_in, phase->igvn().intcon(_mask));\n+  Node* shift_count_masked = new AndINode(shift_count_in, phase->intcon(_mask));\n@@ -752,1 +752,1 @@\n-  VectorNode* vn = new PopulateIndexNode(val, phase->igvn().intcon(1), vt);\n+  VectorNode* vn = new PopulateIndexNode(val, phase->intcon(1), vt);\n@@ -830,1 +830,1 @@\n-  ConINode* mask_node  = phase->igvn().intcon((int)mask);\n+  ConINode* mask_node  = phase->intcon((int)mask);\n","filename":"src\/hotspot\/share\/opto\/vtransform.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}