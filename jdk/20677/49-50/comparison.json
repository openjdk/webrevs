{"files":[{"patch":"@@ -104,1 +104,1 @@\n-        \/\/ On all platforms we expect the VM to chose the smallest possible shift value needed to cover\n+        \/\/ On aarch64 and x64 we expect the VM to chose the smallest possible shift value needed to cover\n@@ -107,1 +107,2 @@\n-        long forceAddress = 32 * G;\n+        if (Platform.isAArch64() || Platform.isX64()) {\n+            long forceAddress = 32 * G;\n@@ -109,3 +110,3 @@\n-        long ccsSize = 128 * M;\n-        int expectedShift = 6;\n-        test(forceAddress, true, ccsSize, forceAddress, expectedShift);\n+            long ccsSize = 128 * M;\n+            int expectedShift = 6;\n+            test(forceAddress, true, ccsSize, forceAddress, expectedShift);\n@@ -113,3 +114,3 @@\n-        ccsSize = 512 * M;\n-        expectedShift = 8;\n-        test(forceAddress, true, ccsSize, forceAddress, expectedShift);\n+            ccsSize = 512 * M;\n+            expectedShift = 8;\n+            test(forceAddress, true, ccsSize, forceAddress, expectedShift);\n@@ -117,3 +118,3 @@\n-        ccsSize = G;\n-        expectedShift = 9;\n-        test(forceAddress, true, ccsSize, forceAddress, expectedShift);\n+            ccsSize = G;\n+            expectedShift = 9;\n+            test(forceAddress, true, ccsSize, forceAddress, expectedShift);\n@@ -121,3 +122,4 @@\n-        ccsSize = 3 * G;\n-        expectedShift = 10;\n-        test(forceAddress, true, ccsSize, forceAddress, expectedShift);\n+            ccsSize = 3 * G;\n+            expectedShift = 10;\n+            test(forceAddress, true, ccsSize, forceAddress, expectedShift);\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedClassPointersEncodingScheme.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"}]}