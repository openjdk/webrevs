{"files":[{"patch":"@@ -364,1 +364,1 @@\n-  if (!UseCompactObjectHeaders) {\n+  if (oopDesc::has_klass_gap()) {\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,10 +35,0 @@\n- public:\n-  static int base_offset_in_bytes() {\n-    if (UseCompactObjectHeaders) {\n-      return oopDesc::base_offset_in_bytes();\n-    } else if (UseCompressedClassPointers) {\n-      return klass_gap_offset_in_bytes();\n-    } else {\n-      return sizeof(instanceOopDesc);\n-    }\n-  }\n","filename":"src\/hotspot\/share\/oops\/instanceOop.hpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -171,1 +171,0 @@\n-\n","filename":"src\/hotspot\/share\/oops\/markWord.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"oops\/markWord.hpp\"\n@@ -30,0 +29,1 @@\n+#include \"oops\/markWord.hpp\"\n","filename":"src\/hotspot\/share\/oops\/markWord.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -146,1 +146,3 @@\n-  \/\/ In this assert, we cannot safely access the Klass* with compact headers.\n+  \/\/ In this assert, we cannot safely access the Klass* with compact headers,\n+  \/\/ because size_given_klass() calls oop_size() on objects that might be\n+  \/\/ concurrently forwarded, which would overwrite the Klass*.\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -156,2 +156,0 @@\n-  \/\/ Only has a klass gap when compressed class pointers are used and not\n-  \/\/ using compact headers.\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-      return 4;\n+      return mark_offset_in_bytes() + 4;\n@@ -349,1 +349,0 @@\n-    assert(!UseCompactObjectHeaders, \"don't use klass_gap_offset_in_bytes() with compact headers\");\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -161,4 +161,2 @@\n-  assert(!UseCompactObjectHeaders, \"don't set Klass* gap with compact headers\");\n-  if (UseCompressedClassPointers) {\n-    *(int*)(((char*)mem) + klass_gap_offset_in_bytes()) = v;\n-  }\n+  assert(has_klass_gap(), \"precondition\");\n+  *(int*)(((char*)mem) + klass_gap_offset_in_bytes()) = v;\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}