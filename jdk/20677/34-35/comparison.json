{"files":[{"patch":"@@ -6462,1 +6462,1 @@\n-  format %{ \"load_nklass_compact  $dst, $mem\\t# compressed class ptr\" %}\n+  format %{ \"load_narrow_klass_compact  $dst, $mem\\t# compressed class ptr\" %}\n@@ -6465,1 +6465,1 @@\n-    __ load_nklass_compact_c2($dst$$Register, $mem$$base$$Register, $mem$$disp);\n+    __ load_narrow_klass_compact_c2($dst$$Register, $mem$$base$$Register, $mem$$disp);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2597,1 +2597,1 @@\n-void C2_MacroAssembler::load_nklass_compact_c2(Register dst, Register obj, int disp) {\n+void C2_MacroAssembler::load_narrow_klass_compact_c2(Register dst, Register obj, int disp) {\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n-  void load_nklass_compact_c2(Register dst, Register obj, int disp);\n+  void load_narrow_klass_compact_c2(Register dst, Register obj, int disp);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1028,1 +1028,1 @@\n-    load_nklass_compact(tmp1, receiver);\n+    load_narrow_klass_compact(tmp1, receiver);\n@@ -4850,2 +4850,2 @@\n-\/\/ dst - output nklass.\n-void MacroAssembler::load_nklass_compact(Register dst, Register src) {\n+\/\/ dst - output narrow klass.\n+void MacroAssembler::load_narrow_klass_compact(Register dst, Register src) {\n@@ -4859,1 +4859,1 @@\n-    load_nklass_compact(dst, src);\n+    load_narrow_klass_compact(dst, src);\n@@ -4920,1 +4920,1 @@\n-      load_nklass_compact(tmp, obj);\n+      load_narrow_klass_compact(tmp, obj);\n@@ -4942,2 +4942,2 @@\n-    load_nklass_compact(tmp1, obj1);\n-    load_nklass_compact(tmp2,  obj2);\n+    load_narrow_klass_compact(tmp1, obj1);\n+    load_narrow_klass_compact(tmp2,  obj2);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -878,1 +878,1 @@\n-  void load_nklass_compact(Register dst, Register src);\n+  void load_narrow_klass_compact(Register dst, Register src);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4010,1 +4010,1 @@\n-  if ((UseAVX == 2) && EnableX86ECoreOpts && !UseCompactObjectHeaders) {\n+  if ((UseAVX == 2) && EnableX86ECoreOpts) {\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -777,1 +777,1 @@\n-  \/\/ because both Klass* gets encoded in the mark-word.\n+  \/\/ because the Klass* gets encoded in the mark-word.\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1288,1 +1288,0 @@\n-    assert(arrayOopDesc::base_offset_in_bytes(T_BYTE) >= 16, \"Needed for indexOf\");\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}