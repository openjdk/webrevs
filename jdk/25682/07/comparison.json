{"files":[{"patch":"@@ -61,0 +61,3 @@\n+  product(bool, StressMacroElimination, false, DIAGNOSTIC,                  \\\n+          \"Randomize macro node elimination order\")                         \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -739,2 +739,3 @@\n-      StressIncrementalInlining || StressMacroExpansion || StressUnstableIfTraps || StressBailout ||\n-      StressLoopPeeling) {\n+      StressIncrementalInlining || StressMacroExpansion ||\n+      StressMacroElimination || StressUnstableIfTraps ||\n+      StressBailout || StressLoopPeeling) {\n@@ -2434,0 +2435,1 @@\n+        print_method(PHASE_AFTER_MACRO_ELIMINATION, 2);\n@@ -2533,0 +2535,12 @@\n+    \/\/ Do not allow new macro nodes once we start to eliminate and expand\n+    C->reset_allow_macro_nodes();\n+    \/\/ Last attempt to eliminate macro nodes before expand\n+    mex.eliminate_macro_nodes();\n+    if (failing()) {\n+      return;\n+    }\n+    mex.eliminate_opaque_looplimit_macro_nodes();\n+    if (failing()) {\n+      return;\n+    }\n+    print_method(PHASE_AFTER_MACRO_ELIMINATION, 2);\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2368,0 +2368,4 @@\n+\n+  if (StressMacroElimination) {\n+    C->shuffle_macro_nodes();\n+  }\n@@ -2407,0 +2411,3 @@\n+      if (success) {\n+        C->print_method(PHASE_AFTER_MACRO_ELIMINATION_STEP, 5, n);\n+      }\n@@ -2455,0 +2462,3 @@\n+      if (success) {\n+        C->print_method(PHASE_AFTER_MACRO_ELIMINATION_STEP, 5, n);\n+      }\n@@ -2465,8 +2475,3 @@\n-\/\/------------------------------expand_macro_nodes----------------------\n-\/\/  Returns true if a failure occurred.\n-bool PhaseMacroExpand::expand_macro_nodes() {\n-  refine_strip_mined_loop_macro_nodes();\n-  \/\/ Do not allow new macro nodes once we started to expand\n-  C->reset_allow_macro_nodes();\n-  if (StressMacroExpansion) {\n-    C->shuffle_macro_nodes();\n+void PhaseMacroExpand::eliminate_opaque_looplimit_macro_nodes() {\n+  if (C->macro_count() == 0) {\n+    return;\n@@ -2474,4 +2479,1 @@\n-  \/\/ Last attempt to eliminate macro nodes.\n-  eliminate_macro_nodes();\n-  if (C->failing())  return true;\n-\n+  refine_strip_mined_loop_macro_nodes();\n@@ -2539,1 +2541,1 @@\n-        C->print_method(PHASE_AFTER_MACRO_EXPANSION_STEP, 5, n);\n+        C->print_method(PHASE_AFTER_MACRO_ELIMINATION_STEP, 5, n);\n@@ -2543,0 +2545,8 @@\n+}\n+\n+\/\/------------------------------expand_macro_nodes----------------------\n+\/\/  Returns true if a failure occurred.\n+bool PhaseMacroExpand::expand_macro_nodes() {\n+  if (StressMacroExpansion) {\n+    C->shuffle_macro_nodes();\n+  }\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":23,"deletions":13,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -206,0 +206,1 @@\n+  void eliminate_opaque_looplimit_macro_nodes();\n","filename":"src\/hotspot\/share\/opto\/macro.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -94,0 +94,2 @@\n+  flags(AFTER_MACRO_ELIMINATION_STEP,   \"After Macro Elimination Step\") \\\n+  flags(AFTER_MACRO_ELIMINATION,        \"After Macro Elimination\") \\\n","filename":"src\/hotspot\/share\/opto\/phasetype.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-* `N=5`: additionally, after every effective IGVN and every macro expansion step (slow)\n+* `N=5`: additionally, after every effective IGVN, macro elimination, and macro expansion step (slow)\n","filename":"src\/utils\/IdealGraphVisualizer\/README.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @bug 8252219 8256535 8317349 8319879 8335334\n+ * @bug 8252219 8256535 8317349 8319879 8335334 8325478\n@@ -59,0 +59,4 @@\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressMacroElimination\n+ *      compiler.arguments.TestStressOptions\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressMacroElimination -XX:StressSeed=42\n+ *      compiler.arguments.TestStressOptions\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestStressOptions.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- * @bug 8252219 8256535\n+ * @bug 8252219 8256535 8325478\n@@ -43,0 +43,1 @@\n+ * @run driver compiler.debug.TestGenerateStressSeed StressMacroElimination\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestGenerateStressSeed.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @bug 8252219 8256535 8317349\n+ * @bug 8252219 8256535 8317349 8325478\n@@ -37,1 +37,1 @@\n- *          IGVN, CCP, and macro expansion traces.\n+ *          IGVN, CCP, macro elimination, and macro expansion traces.\n@@ -72,0 +72,6 @@\n+    static String macroEliminationTrace(int stressSeed) throws Exception {\n+        return phaseTrace(\"StressMacroElimination\",\n+                          \"CompileCommand=PrintIdealPhase,*::*,AFTER_MACRO_ELIMINATION_STEP\",\n+                          stressSeed);\n+    }\n+\n@@ -87,0 +93,2 @@\n+                Asserts.assertEQ(macroEliminationTrace(s), macroEliminationTrace(s),\n+                    \"got different macro elimination traces for the same seed\");\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestStress.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -102,0 +102,2 @@\n+    AFTER_MACRO_ELIMINATION_STEP(   \"After Macro Elimination Step\"),\n+    AFTER_MACRO_ELIMINATION(        \"After Macro Elimination\"),\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/CompilePhase.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -319,0 +319,1 @@\n+                \"-XX:+StressMacroElimination\",\n","filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/src\/sun\/hotspot\/tools\/ctw\/CtwRunner.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}