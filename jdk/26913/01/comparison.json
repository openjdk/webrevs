{"files":[{"patch":"@@ -1905,1 +1905,1 @@\n-                printerParser.format(context, (StringBuilder) appendable);\n+                printerParser.format(context, (StringBuilder) appendable, false);\n@@ -1909,1 +1909,1 @@\n-                printerParser.format(context, buf);\n+                printerParser.format(context, buf, false);\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2025, Alibaba Group Holding Limited. All Rights Reserved.\n@@ -2478,0 +2479,1 @@\n+         * @param optional  whether this printer is optional, true if formatting is optional\n@@ -2481,1 +2483,1 @@\n-        boolean format(DateTimePrintContext context, StringBuilder buf);\n+        boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional);\n@@ -2531,1 +2533,1 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n@@ -2533,13 +2535,5 @@\n-            if (optional) {\n-                context.startOptional();\n-            }\n-            try {\n-                for (DateTimePrinterParser pp : printerParsers) {\n-                    if (pp.format(context, buf) == false) {\n-                        buf.setLength(length);  \/\/ reset buffer\n-                        return true;\n-                    }\n-                }\n-            } finally {\n-                if (optional) {\n-                    context.endOptional();\n+            boolean effectiveOptional = optional | this.optional;\n+            for (DateTimePrinterParser pp : printerParsers) {\n+                if (pp.format(context, buf, effectiveOptional) == false) {\n+                    buf.setLength(length);  \/\/ reset buffer\n+                    return true;\n@@ -2614,1 +2608,1 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n@@ -2616,1 +2610,1 @@\n-            if (printerParser.format(context, buf) == false) {\n+            if (printerParser.format(context, buf, optional) == false) {\n@@ -2683,1 +2677,1 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n@@ -2725,1 +2719,1 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n@@ -2751,1 +2745,1 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n@@ -2801,1 +2795,1 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n@@ -2913,2 +2907,2 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n-            Long valueLong = context.getValue(field);\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n+            Long valueLong = context.getValue(field, optional);\n@@ -3368,2 +3362,2 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n-            Long value = context.getValue(field);\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n+            Long value = context.getValue(field, optional);\n@@ -3557,2 +3551,2 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n-            Long value = context.getValue(field);\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n+            Long value = context.getValue(field, optional);\n@@ -3705,2 +3699,2 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n-            Long value = context.getValue(field);\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n+            Long value = context.getValue(field, optional);\n@@ -3718,1 +3712,1 @@\n-                return numberPrinterParser().format(context, buf);\n+                return numberPrinterParser().format(context, buf, optional);\n@@ -3800,1 +3794,1 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n@@ -3802,1 +3796,1 @@\n-            Long inSecs = context.getValue(INSTANT_SECONDS);\n+            Long inSecs = context.getValue(INSTANT_SECONDS, optional);\n@@ -3985,2 +3979,2 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n-            Long offsetSecs = context.getValue(OFFSET_SECONDS);\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n+            Long offsetSecs = context.getValue(OFFSET_SECONDS, optional);\n@@ -4284,2 +4278,2 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n-            Long offsetSecs = context.getValue(OFFSET_SECONDS);\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n+            Long offsetSecs = context.getValue(OFFSET_SECONDS, optional);\n@@ -4498,2 +4492,2 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n-            ZoneId zone = context.getValue(TemporalQueries.zoneId());\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n+            ZoneId zone = context.getValue(TemporalQueries.zoneId(), optional);\n@@ -4620,2 +4614,2 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n-            ZoneId zone = context.getValue(query);\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n+            ZoneId zone = context.getValue(query, optional);\n@@ -5045,2 +5039,2 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n-            Chronology chrono = context.getValue(TemporalQueries.chronology());\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n+            Chronology chrono = context.getValue(TemporalQueries.chronology(), optional);\n@@ -5142,1 +5136,1 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n@@ -5144,1 +5138,1 @@\n-            return formatter(context.getLocale(), chrono).toPrinterParser(false).format(context, buf);\n+            return formatter(context.getLocale(), chrono).toPrinterParser(false).format(context, buf, optional);\n@@ -5253,2 +5247,2 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n-            return printerParser(context.getLocale()).format(context, buf);\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n+            return printerParser(context.getLocale()).format(context, buf, optional);\n@@ -5357,2 +5351,2 @@\n-        public boolean format(DateTimePrintContext context, StringBuilder buf) {\n-            Long hod = context.getValue(HOUR_OF_DAY);\n+        public boolean format(DateTimePrintContext context, StringBuilder buf, boolean optional) {\n+            Long hod = context.getValue(HOUR_OF_DAY, optional);\n@@ -5362,1 +5356,1 @@\n-            Long moh = context.getValue(MINUTE_OF_HOUR);\n+            Long moh = context.getValue(MINUTE_OF_HOUR, optional);\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":43,"deletions":49,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2025, Alibaba Group Holding Limited. All Rights Reserved.\n@@ -89,5 +90,0 @@\n- * @implSpec\n- * This class is a mutable context intended for use from a single thread.\n- * Usage of the class is thread-safe within standard printing as the framework creates\n- * a new instance of the class for each format and printing is single-threaded.\n- *\n@@ -106,4 +102,0 @@\n-    \/**\n-     * Whether the current formatter is optional.\n-     *\/\n-    private int optional;\n@@ -118,1 +110,0 @@\n-        super();\n@@ -351,14 +342,0 @@\n-    \/**\n-     * Starts the printing of an optional segment of the input.\n-     *\/\n-    void startOptional() {\n-        this.optional++;\n-    }\n-\n-    \/**\n-     * Ends the printing of an optional segment of the input.\n-     *\/\n-    void endOptional() {\n-        this.optional--;\n-    }\n-\n@@ -369,0 +346,1 @@\n+     * @param optional  whether the query is optional, true if the query may be missing\n@@ -372,1 +350,1 @@\n-    <R> R getValue(TemporalQuery<R> query) {\n+    <R> R getValue(TemporalQuery<R> query, boolean optional) {\n@@ -374,1 +352,1 @@\n-        if (result == null && optional == 0) {\n+        if (result == null && !optional) {\n@@ -387,0 +365,1 @@\n+     * @param optional  whether the field is optional, true if the field may be missing\n@@ -390,2 +369,2 @@\n-    Long getValue(TemporalField field) {\n-        if (optional > 0 && !temporal.isSupported(field)) {\n+    Long getValue(TemporalField field, boolean optional) {\n+        if (optional && !temporal.isSupported(field)) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimePrintContext.java","additions":7,"deletions":28,"binary":false,"changes":35,"status":"modified"}]}