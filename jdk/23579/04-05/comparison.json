{"files":[{"patch":"@@ -35,0 +35,1 @@\n+* @modules jdk.incubator.vector\n@@ -40,0 +41,1 @@\n+import jdk.incubator.vector.*;\n@@ -54,2 +56,2 @@\n-    public static void main(String args[]) {\n-        TestFramework.run();\n+    public static void main(String[] args) {\n+        TestFramework.runWithFlags(\"--add-modules=jdk.incubator.vector\");\n@@ -164,0 +166,37 @@\n+\n+    private static final VectorSpecies<Integer> SPECIES = IntVector.SPECIES_PREFERRED;\n+\n+    @Test\n+    @IR(counts = {IRNode.COUNT_LEADING_ZEROS_VI, \"> 0\"})\n+    @Arguments(setup = \"setupSpecialIntArray\")\n+    public Object[] checkSpecialIntLeadingZerosVector(int[] ints) {\n+        int[] res = new int[LEN];\n+\n+        for (int i = 0; i < ints.length; i += SPECIES.length()) {\n+            IntVector av = IntVector.fromArray(SPECIES, ints, i);\n+            av.lanewise(VectorOperators.LEADING_ZEROS_COUNT).intoArray(res, i);\n+        }\n+\n+        return new Object[] { ints, res };\n+    }\n+\n+    @Check(test = \"checkSpecialIntLeadingZerosVector\")\n+    public void checkSpecialIntLeadingZerosVector(Object[] vals) {\n+        int[] ints = (int[]) vals[0];\n+        int[] res = (int[]) vals[1];\n+\n+        \/\/ Verification\n+\n+        int[] check = new int[LEN];\n+\n+        for (int i = 0; i < ints.length; i += SPECIES.length()) {\n+            IntVector av = IntVector.fromArray(SPECIES, ints, i);\n+            av.lanewise(VectorOperators.LEADING_ZEROS_COUNT).intoArray(check, i);\n+        }\n+\n+        for (int i = 0; i < LEN; i++) {\n+            if (res[i] != check[i]) {\n+                throw new IllegalStateException(\"Expected \" + check[i] + \" but got \" + res[i]);\n+            }\n+        }\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestNumberOfContinuousZeros.java","additions":41,"deletions":2,"binary":false,"changes":43,"status":"modified"}]}