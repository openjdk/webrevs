{"files":[{"patch":"@@ -63,2 +63,0 @@\n-\/\/ Address of apx state restore error handler.\n-address VM_Version::_apx_state_restore_warning_handler = (address)VM_Version::report_apx_state_restore_warning;\n@@ -455,1 +453,0 @@\n-    \/\/ Validate the contents of r16 and r31\n@@ -457,5 +454,3 @@\n-    __ mov64(rax, VM_Version::egpr_test_value());\n-    __ cmpq(rax, r16);\n-    __ jccb(Assembler::notEqual, apx_save_restore_warning);\n-    __ cmpq(rax, r31);\n-    __ jccb(Assembler::equal, vector_save_restore);\n+    __ lea(rsi, Address(rbp, in_bytes(VM_Version::apx_save_offset())));\n+    __ movq(Address(rsi, 0), r16);\n+    __ movq(Address(rsi, 8), r31);\n@@ -464,4 +459,0 @@\n-\n-    __ bind(apx_save_restore_warning);\n-    __ lea(rax, ExternalAddress(VM_Version::_apx_state_restore_warning_handler));\n-    __ call(rax);\n@@ -881,5 +872,0 @@\n-void VM_Version::report_apx_state_restore_warning() {\n-  tty->print(\"warning: Unsuccessful EGPRs state restoration across signal handling, setting UseAPX to false.\\n\");\n-  _cpuid_info.sefsl1_cpuid7_edx.bits.apx_f = 0;\n-}\n-\n@@ -1058,1 +1044,2 @@\n-  if (UseAPX && (!supports_apx_f() || !supports_avx512vl())) {\n+  bool apx_supported = os_supports_apx_egprs() && supports_apx_f() && supports_avx512vl();\n+  if (UseAPX && !apx_supported) {\n@@ -1062,1 +1049,1 @@\n-    FLAG_SET_DEFAULT(UseAPX, (supports_apx_f() && supports_avx512vl()) ? true : false);\n+    FLAG_SET_DEFAULT(UseAPX, apx_supported ? true : false);\n@@ -3244,0 +3231,11 @@\n+bool VM_Version::os_supports_apx_egprs() {\n+  if (!supports_apx_f()) {\n+    return false;\n+  }\n+  if (_cpuid_info.apx_save[0] != egpr_test_value() ||\n+      _cpuid_info.apx_save[1] != egpr_test_value()) {\n+    return false;\n+  }\n+  return true;\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":17,"deletions":19,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -558,0 +558,3 @@\n+    \/\/ Space to save apx registers after signal handle\n+    jlong        apx_save[2]; \/\/ Save r16 and r31\n+\n@@ -597,0 +600,1 @@\n+  static bool os_supports_apx_egprs();\n@@ -617,0 +621,1 @@\n+  static ByteSize apx_save_offset() { return byte_offset_of(CpuidInfo, apx_save); }\n@@ -620,2 +625,2 @@\n-  static long long egpr_test_value()   { return 0xCAFEBABECAFEBABEULL; }\n-  static void report_apx_state_restore_warning();\n+  static jlong egpr_test_value()   { return 0xCAFEBABECAFEBABELL; }\n+\n@@ -632,2 +637,0 @@\n-  \/\/ address of apx state restore error handler.\n-  static address _apx_state_restore_warning_handler;\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"}]}