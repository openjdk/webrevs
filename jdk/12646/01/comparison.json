{"files":[{"patch":"@@ -4177,0 +4177,2 @@\n+            UnaryOperator<JCDiagnostic> rewriter = compactMethodDiags ?\n+              d -> MethodResolutionDiagHelper.rewrite(diags, pos, log.currentSource(), dkind, c.snd) : null;\n@@ -4185,2 +4187,1 @@\n-                              compactMethodDiags ?\n-                                      d -> MethodResolutionDiagHelper.rewrite(diags, pos, log.currentSource(), dkind, c.snd) : null,\n+                              rewriter,\n@@ -4193,0 +4194,9 @@\n+                    \/\/ Avoid saying \"constructor Array in class Array\"\n+                    if (ws.owner == syms.arrayClass && ws.name == names.init) {\n+                        return diags.create(dkind, log.currentSource(), pos,\n+                                  \"cant.apply.array.ctor\",\n+                                  rewriter,\n+                                  methodArguments(ws.type.getParameterTypes()),\n+                                  methodArguments(argtypes),\n+                                  c.snd);\n+                    }\n@@ -4195,2 +4205,1 @@\n-                              compactMethodDiags ?\n-                                      d -> MethodResolutionDiagHelper.rewrite(diags, pos, log.currentSource(), dkind, c.snd) : null,\n+                              rewriter,\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -263,0 +263,7 @@\n+# 0: list of type or message segment, 1: list of type or message segment, 2: message segment\n+compiler.misc.cant.apply.array.ctor=\\\n+    cannot create array from given types\\n\\\n+    required: {0}\\n\\\n+    found:    {1}\\n\\\n+    reason:   {2}\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+\/\/ key: compiler.misc.cant.apply.array.ctor\n+\/\/ key: compiler.misc.arg.length.mismatch\n@@ -41,0 +43,4 @@\n+\n+    void test2() {\n+        Runnable x = String[]::new;\n+    }\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/CantApplySymbolFragment.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,3 +1,3 @@\n-MethodReference60.java:26:44: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.symbol: kindname.constructor, Array, int, compiler.misc.no.args, kindname.class, Array, (compiler.misc.arg.length.mismatch)))\n-MethodReference60.java:27:44: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.symbol: kindname.constructor, Array, int, int,int, kindname.class, Array, (compiler.misc.arg.length.mismatch)))\n-MethodReference60.java:28:44: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.symbol: kindname.constructor, Array, int, java.lang.String, kindname.class, Array, (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: java.lang.String, int))))\n+MethodReference60.java:26:44: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.array.ctor: int, compiler.misc.no.args, (compiler.misc.arg.length.mismatch)))\n+MethodReference60.java:27:44: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.array.ctor: int, int,int, (compiler.misc.arg.length.mismatch)))\n+MethodReference60.java:28:44: compiler.err.prob.found.req: (compiler.misc.invalid.mref: kindname.constructor, (compiler.misc.cant.apply.array.ctor: int, java.lang.String, (compiler.misc.no.conforming.assignment.exists: (compiler.misc.inconvertible.types: java.lang.String, int))))\n","filename":"test\/langtools\/tools\/javac\/lambda\/MethodReference60.out","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}