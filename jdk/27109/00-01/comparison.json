{"files":[{"patch":"@@ -45,0 +45,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -62,1 +63,1 @@\n-    private String stringValue;\n+    private @Stable String stringValue;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixPath.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -24,0 +24,15 @@\n+\/* @test\n+ * @bug 7130915 8289689 8366911\n+ * @summary Tests file path names with standard encoding on macOS\n+ * @requires (os.family == \"mac\")\n+ * @library \/test\/lib ..\n+ * @build jdk.test.lib.Utils\n+ *        jdk.test.lib.Asserts\n+ *        jdk.test.lib.JDKToolFinder\n+ *        jdk.test.lib.JDKToolLauncher\n+ *        jdk.test.lib.Platform\n+ *        jdk.test.lib.process.*\n+ *        TestUtil MacPath\n+ * @run main MacPath\n+ *\/\n+\n@@ -29,2 +44,0 @@\n-import java.text.Normalizer;\n-import java.text.Normalizer.Form;\n@@ -35,3 +48,0 @@\n-    private static final String PROPERTY_NORMALIZE_FILE_PATHS =\n-        \"jdk.nio.path.useNormalizationFormD\";\n-\n@@ -86,5 +96,2 @@\n-        String fname = null;\n-        Normalizer.Form form = Boolean.getBoolean(PROPERTY_NORMALIZE_FILE_PATHS)\n-            ? Normalizer.Form.NFD : Normalizer.Form.NFC;\n-        String dname_nfd = Normalizer.normalize(dname, form);\n-        String fname_nfd = Normalizer.normalize(fname_nfc, form);\n+        String dname_nfd = dname;\n+        String fname_nfd = fname_nfc;\n@@ -103,1 +110,1 @@\n-        fname = dpath.toString();\n+        String fname = dpath.toString();\n@@ -145,3 +152,1 @@\n-        if (!found_dir || !found_file_nfc\n-            || (!found_file_nfd && form == Normalizer.Form.NFD\n-                && !Normalizer.normalize(fname_nfc, form).equals(fname_nfd)))\n+        if (!found_dir || !found_file_nfc || !found_file_nfd)\n","filename":"test\/jdk\/java\/nio\/file\/Path\/MacPath.java","additions":19,"deletions":14,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -1,62 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/* @test\n- * @bug 7130915 8289689 8366911\n- * @summary Tests file path with nfc\/nfd forms on MacOSX\n- * @requires (os.family == \"mac\")\n- * @library \/test\/lib ..\n- * @build jdk.test.lib.Utils\n- *        jdk.test.lib.Asserts\n- *        jdk.test.lib.JDKToolFinder\n- *        jdk.test.lib.JDKToolLauncher\n- *        jdk.test.lib.Platform\n- *        jdk.test.lib.process.*\n- *        TestUtil MacPath\n- * @run main MacPathTest\n- * @run main\/othervm -Djdk.nio.path.useNormalizationFormD=true MacPathTest\n- *\/\n-\n-import jdk.test.lib.process.ProcessTools;\n-\n-public class MacPathTest {\n-    private static final String PROPERTY_NORMALIZE_FILE_PATHS =\n-        \"jdk.nio.path.useNormalizationFormD\";\n-    private static final boolean NORMALIZE_FILE_PATHS =\n-        Boolean.getBoolean(PROPERTY_NORMALIZE_FILE_PATHS);\n-\n-    public static void main(String args[]) throws Exception {\n-        ProcessBuilder pb;\n-        if (NORMALIZE_FILE_PATHS) {\n-            String option = \"-D\" + PROPERTY_NORMALIZE_FILE_PATHS + \"=true\";\n-            pb = ProcessTools.createTestJavaProcessBuilder(option, MacPath.class.getName());\n-        } else {\n-            pb = ProcessTools.createTestJavaProcessBuilder(MacPath.class.getName());\n-        }\n-        pb.environment().put(\"LC_ALL\", \"en_US.UTF-8\");\n-        ProcessTools.executeProcess(pb)\n-                    .outputTo(System.out)\n-                    .errorTo(System.err)\n-                    .shouldHaveExitValue(0);\n-    }\n-}\n","filename":"test\/jdk\/java\/nio\/file\/Path\/MacPathTest.java","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"}]}