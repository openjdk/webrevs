{"files":[{"patch":"@@ -78,9 +78,2 @@\n-  \/\/ Ensure that we are only incrementing atomically by using Atomic::cmpxchg\n-  \/\/ to set the value to zero after we obtain the new CPU time difference.\n-  jlong old_value;\n-  jlong fetched_value = Atomic::load(&(instance->_gc_total_cpu_time_diff));\n-  jlong new_value = 0;\n-  do {\n-    old_value = fetched_value;\n-    fetched_value = Atomic::cmpxchg(&(instance->_gc_total_cpu_time_diff), old_value, new_value);\n-  } while (old_value != fetched_value);\n+  \/\/ Atomically fetch the current _gc_total_cpu_time_diff and reset it to zero.\n+  jlong fetched_value = Atomic::xchg(&(instance->_gc_total_cpu_time_diff), 0);\n","filename":"src\/hotspot\/share\/runtime\/cpuTimeCounters.cpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"}]}