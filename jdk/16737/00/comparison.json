{"files":[{"patch":"@@ -55,2 +55,2 @@\n-  has one repository per update release, e.g. https:\/\/git.openjdk.org\/jdk17u for\n-  JDK 17.\n+  has one repository per update release, e.g. https:\/\/git.openjdk.org\/jdk17u\n+  for JDK 17.\n@@ -64,2 +64,2 @@\n-Git](https:\/\/git-scm.com\/book\/en\/v2). The rest of this document\n-assumes a working knowledge of Git.\n+Git](https:\/\/git-scm.com\/book\/en\/v2). The rest of this document assumes a\n+working knowledge of Git.\n@@ -72,2 +72,2 @@\n-* Do not check out the source code in a path which contains spaces. Chances\n-  are the build will not work. This is most likely to be an issue on Windows\n+* Do not check out the source code in a path which contains spaces. Chances are\n+  the build will not work. This is most likely to be an issue on Windows\n@@ -77,2 +77,2 @@\n-  nested many levels deep. Chances are you will hit an OS limitation during\n-  the build.\n+  nested many levels deep. Chances are you will hit an OS limitation during the\n+  build.\n@@ -80,5 +80,5 @@\n-* Put the source code on a local disk, not a network share. If possible, use\n-  an SSD. The build process is very disk intensive, and having slow disk\n-  access will significantly increase build times. If you need to use a\n-  network share for the source code, see below for suggestions on how to keep\n-  the build artifacts on a local disk.\n+* Put the source code on a local disk, not a network share. If possible, use an\n+  SSD. The build process is very disk intensive, and having slow disk access\n+  will significantly increase build times. If you need to use a network share\n+  for the source code, see below for suggestions on how to keep the build\n+  artifacts on a local disk.\n@@ -90,5 +90,5 @@\n-  * Create the directory that is going to contain the top directory of the\n-    JDK clone by using the `mkdir` command in the Cygwin bash shell.\n-    That is, do *not* create it using Windows Explorer. This will ensure\n-    that it will have proper Cygwin attributes, and that it's children will\n-    inherit those attributes.\n+  * Create the directory that is going to contain the top directory of the JDK\n+    clone by using the `mkdir` command in the Cygwin bash shell. That is, do\n+    *not* create it using Windows Explorer. This will ensure that it will have\n+    proper Cygwin attributes, and that it's children will inherit those\n+    attributes.\n@@ -96,3 +96,3 @@\n-  * Do not put the JDK clone in a path under your Cygwin home\n-    directory. This is especially important if your user name contains\n-    spaces and\/or mixed upper and lower case letters.\n+  * Do not put the JDK clone in a path under your Cygwin home directory. This\n+    is especially important if your user name contains spaces and\/or mixed\n+    upper and lower case letters.\n@@ -100,2 +100,2 @@\n-  * You need to install a git client. You have two choices, Cygwin git or\n-    Git for Windows. Unfortunately there are pros and cons with each choice.\n+  * You need to install a git client. You have two choices, Cygwin git or Git\n+    for Windows. Unfortunately there are pros and cons with each choice.\n@@ -103,6 +103,6 @@\n-    * The Cygwin `git` client has no line ending issues and understands\n-      Cygwin paths (which are used throughout the JDK build system).\n-      However, it does not currently work well with the Skara CLI tooling.\n-      Please see the [Skara wiki on Git clients](\n-      https:\/\/wiki.openjdk.org\/display\/SKARA\/Skara#Skara-Git) for\n-      up-to-date information about the Skara git client support.\n+    * The Cygwin `git` client has no line ending issues and understands Cygwin\n+      paths (which are used throughout the JDK build system). However, it does\n+      not currently work well with the Skara CLI tooling. Please see the [Skara\n+      wiki on Git clients](\n+      https:\/\/wiki.openjdk.org\/display\/SKARA\/Skara#Skara-Git) for up-to-date\n+      information about the Skara git client support.\n@@ -110,5 +110,5 @@\n-    * The [Git for Windows](https:\/\/gitforwindows.org) client has issues\n-      with line endings, and do not understand Cygwin paths. It does work\n-      well with the Skara CLI tooling, however. To alleviate the line ending\n-      problems, make sure you set `core.autocrlf` to `false` (this is asked\n-      during installation).\n+    * The [Git for Windows](https:\/\/gitforwindows.org) client has issues with\n+      line endings, and do not understand Cygwin paths. It does work well with\n+      the Skara CLI tooling, however. To alleviate the line ending problems,\n+      make sure you set `core.autocrlf` to `false` (this is asked during\n+      installation).\n@@ -137,1 +137,2 @@\n-Note: The Windows 32-bit x86 port is deprecated and may be removed in a future release.\n+Note: The Windows 32-bit x86 port is deprecated and may be removed in a future\n+release.\n@@ -141,3 +142,3 @@\n-At a minimum, a machine with 8 cores is advisable, as well as 8 GB of RAM.\n-(The more cores to use, the more memory you need.) At least 6 GB of free disk\n-space is required.\n+At a minimum, a machine with 8 cores is advisable, as well as 8 GB of RAM. (The\n+more cores to use, the more memory you need.) At least 6 GB of free disk space\n+is required.\n@@ -150,5 +151,5 @@\n-In order to use Branch Protection features in the VM, `--enable-branch-protection`\n-must be used. This option requires C++ compiler support (GCC 9.1.0+ or Clang\n-10+). The resulting build can be run on both machines with and without support\n-for branch protection in hardware. Branch Protection is only supported for\n-Linux targets.\n+In order to use Branch Protection features in the VM,\n+`--enable-branch-protection` must be used. This option requires C++ compiler\n+support (GCC 9.1.0+ or Clang 10+). The resulting build can be run on both\n+machines with and without support for branch protection in hardware. Branch\n+Protection is only supported for Linux targets.\n@@ -163,3 +164,2 @@\n-The mainline JDK project supports Linux, macOS, AIX and Windows.\n-Support for other operating system, e.g. BSD, exists in separate \"port\"\n-projects.\n+The mainline JDK project supports Linux, macOS, AIX and Windows. Support for\n+other operating system, e.g. BSD, exists in separate \"port\" projects.\n@@ -187,3 +187,3 @@\n-https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms). From\n-time to time, this is updated by contributors to list successes or failures of\n-building on different platforms.\n+https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms). From time to\n+time, this is updated by contributors to list successes or failures of building\n+on different platforms.\n@@ -201,3 +201,3 @@\n-Currently, the supported such layers are Cygwin, MSYS2 and Windows Subsystem for\n-Linux (WSL). Of these, Cygwin is the one that has received the most real-world\n-testing and is likely to cause least trouble.\n+Currently, the supported such layers are Cygwin, MSYS2 and Windows Subsystem\n+for Linux (WSL). Of these, Cygwin is the one that has received the most\n+real-world testing and is likely to cause least trouble.\n@@ -209,2 +209,2 @@\n-`--with-msvcr-dll=c:\\msvcr100.dll`. For details on this conversion, see the section\n-on [Fixpath](#fixpath).\n+`--with-msvcr-dll=c:\\msvcr100.dll`. For details on this conversion, see the\n+section on [Fixpath](#fixpath).\n@@ -212,1 +212,2 @@\n-Note: The Windows 32-bit x86 port is deprecated and may be removed in a future release.\n+Note: The Windows 32-bit x86 port is deprecated and may be removed in a future\n+release.\n@@ -283,3 +284,3 @@\n-boot JDK. The default behavior is to build for Windows. To build for Linux, pass\n-`--build=x86_64-unknown-linux-gnu --openjdk-target=x86_64-unknown-linux-gnu`\n-to `configure`.\n+boot JDK. The default behavior is to build for Windows. To build for Linux,\n+pass `--build=x86_64-unknown-linux-gnu\n+--openjdk-target=x86_64-unknown-linux-gnu` to `configure`.\n@@ -288,6 +289,6 @@\n-accessible directory. This is because Windows executables (such as Visual Studio\n-and the boot JDK) must be able to access the source code. Also, the drive where\n-the source is stored must be mounted as case-insensitive by changing either\n-\/etc\/fstab or \/etc\/wsl.conf in WSL. Individual directories may be corrected\n-using the fsutil tool in case the source was cloned before changing the mount\n-options.\n+accessible directory. This is because Windows executables (such as Visual\n+Studio and the boot JDK) must be able to access the source code. Also, the\n+drive where the source is stored must be mounted as case-insensitive by\n+changing either \/etc\/fstab or \/etc\/wsl.conf in WSL. Individual directories may\n+be corrected using the fsutil tool in case the source was cloned before\n+changing the mount options.\n@@ -302,3 +303,3 @@\n-difficult for a project such as the JDK to keep pace with a continuously updated\n-machine running macOS. See the section on [Apple Xcode](#apple-xcode) on some\n-strategies to deal with this.\n+difficult for a project such as the JDK to keep pace with a continuously\n+updated machine running macOS. See the section on [Apple Xcode](#apple-xcode)\n+on some strategies to deal with this.\n@@ -306,2 +307,2 @@\n-It is recommended that you use at least macOS 13 (Ventura) and Xcode\n-14, but earlier versions may also work.\n+It is recommended that you use at least macOS 13 (Ventura) and Xcode 14, but\n+earlier versions may also work.\n@@ -345,2 +346,2 @@\n-https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms) OpenJDK\n-Build Wiki page for details about which versions of AIX are supported.\n+https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms) OpenJDK Build\n+Wiki page for details about which versions of AIX are supported.\n@@ -380,2 +381,2 @@\n-The minimum accepted version of gcc is 6.0. Older versions will not be\n-accepted by `configure`.\n+The minimum accepted version of gcc is 6.0. Older versions will not be accepted\n+by `configure`.\n@@ -399,3 +400,3 @@\n-You will need the Xcode command line developer tools to be able to build\n-the JDK. (Actually, *only* the command line tools are needed, not the IDE.)\n-The simplest way to install these is to run:\n+You will need the Xcode command line developer tools to be able to build the\n+JDK. (Actually, *only* the command line tools are needed, not the IDE.) The\n+simplest way to install these is to run:\n@@ -407,2 +408,2 @@\n-When updating Xcode, it is advisable to keep an older version for building the JDK.\n-To use a specific version of Xcode you have multiple options:\n+When updating Xcode, it is advisable to keep an older version for building the\n+JDK. To use a specific version of Xcode you have multiple options:\n@@ -410,4 +411,7 @@\n-* Use `xcode-select -s` before running `configure`, e.g. `xcode-select -s \/Applications\/Xcode13.1.app`. The drawback is that the setting\n-  is system wide and you may have to revert it after a JDK build.\n-* Use configure option `--with-xcode-path`, e.g. `configure --with-xcode-path=\/Applications\/Xcode13.1.app`\n-  This allows using a specific Xcode version for a JDK build, independently of the active Xcode version by `xcode-select`.\n+* Use `xcode-select -s` before running `configure`, e.g.\n+`xcode-select -s \/Applications\/Xcode13.1.app`. The drawback is that the setting\n+is system wide and you may have to revert it after a JDK build.\n+* Use configure option `--with-xcode-path`, e.g.\n+`configure --with-xcode-path=\/Applications\/Xcode13.1.app` This allows using a\n+specific Xcode version for a JDK build, independently of the active Xcode\n+version by `xcode-select`.\n@@ -423,4 +427,4 @@\n-The minimum accepted version is Visual Studio 2019 version 16.8. (Note that this\n-version is often presented as \"MSVC 14.28\", and reported by cl.exe as 19.28.)\n-Older versions will not be accepted by `configure` and will not work. The\n-maximum accepted version of Visual Studio is 2022.\n+The minimum accepted version is Visual Studio 2019 version 16.8. (Note that\n+this version is often presented as \"MSVC 14.28\", and reported by cl.exe as\n+19.28.) Older versions will not be accepted by `configure` and will not work.\n+The maximum accepted version of Visual Studio is 2022.\n@@ -438,2 +442,2 @@\n-https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms) OpenJDK\n-Build Wiki page for details about which versions of XLC are supported.\n+https:\/\/wiki.openjdk.org\/display\/Build\/Supported+Build+Platforms) OpenJDK Build\n+Wiki page for details about which versions of XLC are supported.\n@@ -444,4 +448,4 @@\n-\"boot JDK\". The boot JDK does not, however, have to be a JDK built directly from\n-the source code available in the OpenJDK Community. If you are porting the JDK\n-to a new platform, chances are that there already exists another JDK for that\n-platform that is usable as boot JDK.\n+\"boot JDK\". The boot JDK does not, however, have to be a JDK built directly\n+from the source code available in the OpenJDK Community. If you are porting the\n+JDK to a new platform, chances are that there already exists another JDK for\n+that platform that is usable as boot JDK.\n@@ -450,3 +454,3 @@\n-should be a JDK of major version *N-1*, so for building JDK 18 a JDK 17 would be\n-suitable as boot JDK. However, the JDK should be able to \"build itself\", so an\n-up-to-date build of the current JDK source is an acceptable alternative. If\n+should be a JDK of major version *N-1*, so for building JDK 18 a JDK 17 would\n+be suitable as boot JDK. However, the JDK should be able to \"build itself\", so\n+an up-to-date build of the current JDK source is an acceptable alternative. If\n@@ -457,2 +461,2 @@\n-that case, the preferred boot JDK will be version *N-2* until version *N-1*\n-is available.\n+that case, the preferred boot JDK will be version *N-2* until version *N-1* is\n+available.\n@@ -468,3 +472,3 @@\n-An overview of common ways to download and install prebuilt JDK binaries\n-can be found on https:\/\/openjdk.org\/install. An alternative is to download the\n-[Oracle JDK](https:\/\/www.oracle.com\/java\/technologies\/downloads). Another is\n+An overview of common ways to download and install prebuilt JDK binaries can be\n+found on https:\/\/openjdk.org\/install. An alternative is to download the [Oracle\n+JDK](https:\/\/www.oracle.com\/java\/technologies\/downloads). Another is\n@@ -496,4 +500,4 @@\n-FreeType2 from [The FreeType Project](https:\/\/www.freetype.org\/) is not required\n-on any platform. The exception is on Unix-based platforms when configuring such\n-that the build artifacts will reference a system installed library,\n-rather than bundling the JDK's own copy.\n+FreeType2 from [The FreeType Project](https:\/\/www.freetype.org\/) is not\n+required on any platform. The exception is on Unix-based platforms when\n+configuring such that the build artifacts will reference a system installed\n+library, rather than bundling the JDK's own copy.\n@@ -508,2 +512,2 @@\n-Use `--with-freetype-include=<path>` and `--with-freetype-lib=<path>`\n-if `configure` does not automatically locate the platform FreeType files.\n+Use `--with-freetype-include=<path>` and `--with-freetype-lib=<path>` if\n+`configure` does not automatically locate the platform FreeType files.\n@@ -513,2 +517,2 @@\n-Fontconfig from [freedesktop.org Fontconfig](https:\/\/fontconfig.org) is required\n-on all platforms except Windows and macOS.\n+Fontconfig from [freedesktop.org Fontconfig](https:\/\/fontconfig.org) is\n+required on all platforms except Windows and macOS.\n@@ -521,2 +525,2 @@\n-Use `--with-fontconfig-include=<path>` and `--with-fontconfig=<path>`\n-if `configure` does not automatically locate the platform Fontconfig files.\n+Use `--with-fontconfig-include=<path>` and `--with-fontconfig=<path>` if\n+`configure` does not automatically locate the platform Fontconfig files.\n@@ -532,2 +536,1 @@\n-* To install on an rpm-based Linux, try running `sudo yum install\n-cups-devel`.\n+* To install on an rpm-based Linux, try running `sudo yum install cups-devel`.\n@@ -546,4 +549,4 @@\n-* To install on an rpm-based Linux, try running `sudo yum install\n-libXtst-devel libXt-devel libXrender-devel libXrandr-devel libXi-devel`.\n-* To install on Alpine Linux, try running `sudo apk add libx11-dev\n-libxext-dev libxrender-dev libxrandr-dev libxtst-dev libxt-dev`.\n+* To install on an rpm-based Linux, try running `sudo yum install libXtst-devel\n+libXt-devel libXrender-devel libXrandr-devel libXi-devel`.\n+* To install on Alpine Linux, try running `sudo apk add libx11-dev libxext-dev\n+libxrender-dev libxrandr-dev libxtst-dev libxt-dev`.\n@@ -591,2 +594,1 @@\n-* To install on an rpm-based Linux, try running `sudo yum install\n-autoconf`.\n+* To install on an rpm-based Linux, try running `sudo yum install autoconf`.\n@@ -595,2 +597,2 @@\n-* To install on Windows, try running `<path to Cygwin setup>\/setup-x86_64 -q\n--P autoconf`.\n+* To install on Windows, try running `<path to Cygwin setup>\/setup-x86_64 -q -P\n+autoconf`.\n@@ -693,2 +695,2 @@\n-  `fastdebug`, `slowdebug` or `optimized`. Default is `release`. `optimized`\n-  is variant of `release` with additional Hotspot debug code.\n+  `fastdebug`, `slowdebug` or `optimized`. Default is `release`. `optimized` is\n+  variant of `release` with additional Hotspot debug code.\n@@ -697,4 +699,4 @@\n-  `external`, `zipped`. Default behavior depends on platform. See [Native\n-  Debug Symbols](#native-debug-symbols) for more details.\n-* `--with-version-string=<string>` - Specify the version string this build\n-  will be identified with.\n+  `external`, `zipped`. Default behavior depends on platform. See [Native Debug\n+  Symbols](#native-debug-symbols) for more details.\n+* `--with-version-string=<string>` - Specify the version string this build will\n+  be identified with.\n@@ -706,3 +708,3 @@\n-  (or variants) of Hotspot. Valid variants are: `server`, `client`,\n-  `minimal`, `core`, `zero`, `custom`. Note that not all\n-  variants are possible to combine in a single build.\n+  (or variants) of Hotspot. Valid variants are: `server`, `client`, `minimal`,\n+  `core`, `zero`, `custom`. Note that not all variants are possible to combine\n+  in a single build.\n@@ -715,4 +717,4 @@\n-  variant, the default list is empty. A complete list of valid JVM features\n-  can be found using `bash configure --help`.\n-* `--with-target-bits=<bits>` - Create a target binary suitable for running\n-  on a `<bits>` platform. Use this to create 32-bit output on a 64-bit build\n+  variant, the default list is empty. A complete list of valid JVM features can\n+  be found using `bash configure --help`.\n+* `--with-target-bits=<bits>` - Create a target binary suitable for running on\n+  a `<bits>` platform. Use this to create 32-bit output on a 64-bit build\n@@ -724,2 +726,2 @@\n-there is a special shared directory for system JNI libraries. This setting\n-can in turn be overridden at runtime by setting the `java.library.path` property.\n+there is a special shared directory for system JNI libraries. This setting can\n+in turn be overridden at runtime by setting the `java.library.path` property.\n@@ -727,2 +729,2 @@\n-* `--with-jni-libpath=<path>` - Use the specified path as a default\n-when searching for runtime libraries.\n+* `--with-jni-libpath=<path>` - Use the specified path as a default when\n+searching for runtime libraries.\n@@ -738,2 +740,1 @@\n-* `--with-extra-cflags=<flags>` - Append these flags when compiling JDK C\n-  files\n+* `--with-extra-cflags=<flags>` - Append these flags when compiling JDK C files\n@@ -758,7 +759,6 @@\n-and zlib) are included in the JDK repository. The default behavior of the\n-JDK build is to use the included (\"bundled\") versions of libjpeg, giflib,\n-libpng and lcms.\n-For zlib, the system lib (if present) is used except on Windows and AIX.\n-However the bundled libraries may be replaced by an external version.\n-To do so, specify `system` as the `<source>` option in these arguments.\n-(The default is `bundled`).\n+and zlib) are included in the JDK repository. The default behavior of the JDK\n+build is to use the included (\"bundled\") versions of libjpeg, giflib, libpng\n+and lcms. For zlib, the system lib (if present) is used except on Windows and\n+AIX. However the bundled libraries may be replaced by an external version. To\n+do so, specify `system` as the `<source>` option in these arguments. (The\n+default is `bundled`).\n@@ -791,3 +791,3 @@\n-that are supposed to be overridden on the command line. These are variables that\n-describe the location of tools needed by the build, like `MAKE` or `GREP`. If\n-any such variable is specified, `configure` will use that value instead of\n+that are supposed to be overridden on the command line. These are variables\n+that describe the location of tools needed by the build, like `MAKE` or `GREP`.\n+If any such variable is specified, `configure` will use that value instead of\n@@ -848,2 +848,2 @@\n-* `<module>-<phase>` - Compile the specified phase for the specified module\n-  and everything it depends on\n+* `<module>-<phase>` - Compile the specified phase for the specified module and\n+  everything it depends on\n@@ -855,2 +855,1 @@\n-* `clean-<phase>` - Remove all build results related to a certain build\n-  phase\n+* `clean-<phase>` - Remove all build results related to a certain build phase\n@@ -871,2 +870,2 @@\n-are supposed to be overridden on the command line. These make up the \"make time\"\n-configuration, as opposed to the \"configure time\" configuration.\n+are supposed to be overridden on the command line. These make up the \"make\n+time\" configuration, as opposed to the \"configure time\" configuration.\n@@ -878,2 +877,2 @@\n-* `LOG` - Specify the logging level and functionality. See [Checking the\n-  Build Log File](#checking-the-build-log-file)\n+* `LOG` - Specify the logging level and functionality. See [Checking the Build\n+  Log File](#checking-the-build-log-file)\n@@ -910,2 +909,2 @@\n-Most of the JDK tests are using the [JTReg](https:\/\/openjdk.org\/jtreg)\n-test framework. Make sure that your configuration knows where to find your\n+Most of the JDK tests are using the [JTReg](https:\/\/openjdk.org\/jtreg) test\n+framework. Make sure that your configuration knows where to find your\n@@ -917,2 +916,2 @@\n-The [Adoption Group](https:\/\/wiki.openjdk.org\/display\/Adoption) provides\n-recent builds of jtreg [here](\n+The [Adoption Group](https:\/\/wiki.openjdk.org\/display\/Adoption) provides recent\n+builds of jtreg [here](\n@@ -923,5 +922,4 @@\n-Building of Hotspot Gtest suite requires the source code of Google\n-Test framework. The top directory, which contains both `googletest`\n-and `googlemock` directories, should be specified via `--with-gtest`.\n-The minimum supported version of Google Test is 1.14.0, whose source\n-code can be obtained:\n+Building of Hotspot Gtest suite requires the source code of Google Test\n+framework. The top directory, which contains both `googletest` and `googlemock`\n+directories, should be specified via `--with-gtest`. The minimum supported\n+version of Google Test is 1.14.0, whose source code can be obtained:\n@@ -929,2 +927,4 @@\n-* by downloading and unpacking the source bundle from [here](https:\/\/github.com\/google\/googletest\/releases\/tag\/v1.14.0), or\n-* by checking out `v1.14.0` tag of `googletest` project: `git clone -b v1.14.0 https:\/\/github.com\/google\/googletest`\n+* by downloading and unpacking the source bundle from\n+  [here](https:\/\/github.com\/google\/googletest\/releases\/tag\/v1.14.0), or\n+* by checking out `v1.14.0` tag of `googletest` project:\n+  `git clone -b v1.14.0 https:\/\/github.com\/google\/googletest`\n@@ -948,6 +948,7 @@\n-automatically sign all native binaries, and the JDK bundle, with all the options\n-needed for successful notarization, as well as all the entitlements required by\n-the JDK. To enable `hardened` signing, use configure parameter\n-`--with-macosx-codesign=hardened` and configure the signing identity you wish to\n-use with `--with-macosx-codesign-identity=<identity>`. The identity refers to a\n-signing identity from Apple that needs to be preinstalled on the build host.\n+automatically sign all native binaries, and the JDK bundle, with all the\n+options needed for successful notarization, as well as all the entitlements\n+required by the JDK. To enable `hardened` signing, use configure parameter\n+`--with-macosx-codesign=hardened` and configure the signing identity you wish\n+to use with `--with-macosx-codesign-identity=<identity>`. The identity refers\n+to a signing identity from Apple that needs to be preinstalled on the build\n+host.\n@@ -957,6 +958,6 @@\n-`com.apple.security.get-task-allow` to each binary. This entitlement is required\n-to be able to dump core files from a process. Note that adding this entitlement\n-makes the build invalid for notarization, so it is only added when signing in\n-`debug` mode. To explicitly enable this kind of ad hoc signing, use configure\n-parameter `--with-macosx-codesign=debug`. It will be enabled by default in most\n-cases.\n+`com.apple.security.get-task-allow` to each binary. This entitlement is\n+required to be able to dump core files from a process. Note that adding this\n+entitlement makes the build invalid for notarization, so it is only added when\n+signing in `debug` mode. To explicitly enable this kind of ad hoc signing, use\n+configure parameter `--with-macosx-codesign=debug`. It will be enabled by\n+default in most cases.\n@@ -965,3 +966,3 @@\n-by the JDK build using the configure parameter `--without-macosx-codesign`.\n-The exact behavior then depends on the architecture. For macOS on x64, it (at\n-least at the time of this writing) results in completely unsigned binaries that\n+by the JDK build using the configure parameter `--without-macosx-codesign`. The\n+exact behavior then depends on the architecture. For macOS on x64, it (at least\n+at the time of this writing) results in completely unsigned binaries that\n@@ -1015,4 +1016,3 @@\n-This will automatically set the `--host` and `--target` options for\n-autoconf, which can otherwise be confusing. (In autoconf terminology, the\n-\"target\" is known as \"host\", and \"target\" is used for building a Canadian\n-cross-compiler.)\n+This will automatically set the `--host` and `--target` options for autoconf,\n+which can otherwise be confusing. (In autoconf terminology, the \"target\" is\n+known as \"host\", and \"target\" is used for building a Canadian cross-compiler.)\n@@ -1074,2 +1074,2 @@\n-Make sure that the libraries you point to (ALSA, X11, etc) are for the\n-*target* platform, not the *build* platform.\n+Make sure that the libraries you point to (ALSA, X11, etc) are for the *target*\n+platform, not the *build* platform.\n@@ -1151,2 +1151,2 @@\n-* If the X11 libraries are not properly detected by `configure`, you can\n-  point them out by `--with-x`.\n+* If the X11 libraries are not properly detected by `configure`, you can point\n+  them out by `--with-x`.\n@@ -1179,2 +1179,2 @@\n-The JDK build system provides out-of-the box support for creating and using\n-so called devkits. A `devkit` is basically a collection of a cross-compiling\n+The JDK build system provides out-of-the box support for creating and using so\n+called devkits. A `devkit` is basically a collection of a cross-compiling\n@@ -1182,2 +1182,2 @@\n-`--with-devkit` configure option to cross compile the JDK. On Linux\/x86_64,\n-the following command:\n+`--with-devkit` configure option to cross compile the JDK. On Linux\/x86_64, the\n+following command:\n@@ -1198,5 +1198,5 @@\n-where `TARGETS` contains one or more `TARGET_TRIPLET`s of the form\n-described in [section 3.4 of the GNU Autobook](\n-https:\/\/sourceware.org\/autobook\/autobook\/autobook_17.html). If no\n-targets are given, a native toolchain for the current platform will be\n-created. Currently, at least the following targets are known to work:\n+where `TARGETS` contains one or more `TARGET_TRIPLET`s of the form described in\n+[section 3.4 of the GNU Autobook](\n+https:\/\/sourceware.org\/autobook\/autobook\/autobook_17.html). If no targets are\n+given, a native toolchain for the current platform will be created. Currently,\n+at least the following targets are known to work:\n@@ -1213,6 +1213,6 @@\n-`BASE_OS` must be one of \"OEL6\" for Oracle Enterprise Linux 6 or\n-\"Fedora\" (if not specified \"OEL6\" will be the default). If the base OS\n-is \"Fedora\" the corresponding Fedora release can be specified with the\n-help of the `BASE_OS_VERSION` option (with \"27\" as default version).\n-If the build is successful, the new devkits can be found in the\n-`build\/devkit\/result` subdirectory:\n+`BASE_OS` must be one of \"OEL6\" for Oracle Enterprise Linux 6 or \"Fedora\" (if\n+not specified \"OEL6\" will be the default). If the base OS is \"Fedora\" the\n+corresponding Fedora release can be specified with the help of the\n+`BASE_OS_VERSION` option (with \"27\" as default version). If the build is\n+successful, the new devkits can be found in the `build\/devkit\/result`\n+subdirectory:\n@@ -1229,8 +1229,7 @@\n-platforms. Because they contain the full build dependencies for a\n-system (i.e. compiler and root file system), they can easily be used\n-to build well-known, reliable and reproducible build environments. You\n-can for example create and use a devkit with GCC 7.3 and a Fedora 12\n-sysroot environment (with glibc 2.11) on Ubuntu 14.04 (which doesn't\n-have GCC 7.3 by default) to produce JDK binaries which will run on\n-all Linux systems with runtime libraries newer than the ones from\n-Fedora 12 (e.g. Ubuntu 16.04, SLES 11 or RHEL 6).\n+platforms. Because they contain the full build dependencies for a system (i.e.\n+compiler and root file system), they can easily be used to build well-known,\n+reliable and reproducible build environments. You can for example create and\n+use a devkit with GCC 7.3 and a Fedora 12 sysroot environment (with glibc 2.11)\n+on Ubuntu 14.04 (which doesn't have GCC 7.3 by default) to produce JDK binaries\n+which will run on all Linux systems with runtime libraries newer than the ones\n+from Fedora 12 (e.g. Ubuntu 16.04, SLES 11 or RHEL 6).\n@@ -1288,1 +1287,2 @@\n-* Make sure the symlinks inside the newly created chroot point to proper locations:\n+* Make sure the symlinks inside the newly created chroot point to proper\n+  locations:\n@@ -1304,2 +1304,2 @@\n-The build does not create new files in that chroot, so it can be reused for multiple builds\n-without additional cleanup.\n+The build does not create new files in that chroot, so it can be reused for\n+multiple builds without additional cleanup.\n@@ -1307,2 +1307,2 @@\n-The build system should automatically detect the toolchain paths and dependencies, but sometimes\n-it might require a little nudge with:\n+The build system should automatically detect the toolchain paths and\n+dependencies, but sometimes it might require a little nudge with:\n@@ -1312,1 +1312,2 @@\n-* Freetype lib location: override `--with-freetype-lib`, for example `${sysroot}\/usr\/lib\/${target}\/`\n+* Freetype lib location: override `--with-freetype-lib`, for example\n+  `${sysroot}\/usr\/lib\/${target}\/`\n@@ -1314,1 +1315,2 @@\n-* Freetype includes location: override `--with-freetype-include` for example `${sysroot}\/usr\/include\/freetype2\/`\n+* Freetype includes location: override `--with-freetype-include` for example\n+  `${sysroot}\/usr\/include\/freetype2\/`\n@@ -1316,1 +1318,2 @@\n-* X11 libraries location: override `--x-libraries`, for example `${sysroot}\/usr\/lib\/${target}\/`\n+* X11 libraries location: override `--x-libraries`, for example\n+  `${sysroot}\/usr\/lib\/${target}\/`\n@@ -1344,2 +1347,2 @@\n-`arm-sflt`, `armv5-vfp-sflt` and `armv6-vfp-hflt`. Note that soft-float ABIs are\n-no longer properly supported by the JDK.\n+`arm-sflt`, `armv5-vfp-sflt` and `armv6-vfp-hflt`. Note that soft-float ABIs\n+are no longer properly supported by the JDK.\n@@ -1349,5 +1352,5 @@\n-The RISC-V community provides a basic\n-[GNU compiler toolchain](https:\/\/github.com\/riscv-collab\/riscv-gnu-toolchain),\n-but the [external libraries](#external-library-requirements) required by the JDK\n-complicate the building process. The placeholder `<toolchain-installed-path>`\n-shown below is the path where you want to install the toolchain.\n+The RISC-V community provides a basic [GNU compiler toolchain](\n+https:\/\/github.com\/riscv-collab\/riscv-gnu-toolchain), but the [external\n+libraries](#external-library-requirements) required by the JDK complicate the\n+building process. The placeholder `<toolchain-installed-path>` shown below is\n+the path where you want to install the toolchain.\n@@ -1391,2 +1394,2 @@\n-cross-compile for `musl` libc on a glibc-based *build* system.\n-A devkit suitable for most target CPU architectures can be obtained from\n+cross-compile for `musl` libc on a glibc-based *build* system. A devkit\n+suitable for most target CPU architectures can be obtained from\n@@ -1703,5 +1706,5 @@\n-    Sometimes the Git repository gets in a state that causes the product\n-    to be un-buildable. In such a case, the simplest solution is often the\n-    \"sledgehammer approach\": delete the entire repository, and re-clone it.\n-    If you have local changes, save them first to a different location using\n-    `git format-patch`.\n+    Sometimes the Git repository gets in a state that causes the product to be\n+    un-buildable. In such a case, the simplest solution is often the\n+    \"sledgehammer approach\": delete the entire repository, and re-clone it. If\n+    you have local changes, save them first to a different location using `git\n+    format-patch`.\n@@ -1745,3 +1748,3 @@\n-On Windows, when configuring, `fixpath.sh` may report that some directory\n-names have spaces. Usually, it assumes those directories have\n-[short paths](https:\/\/docs.microsoft.com\/en-us\/windows-server\/administration\/windows-commands\/fsutil-8dot3name).\n+On Windows, when configuring, `fixpath.sh` may report that some directory names\n+have spaces. Usually, it assumes those directories have [short\n+paths](https:\/\/docs.microsoft.com\/en-us\/windows-server\/administration\/windows-commands\/fsutil-8dot3name).\n@@ -1756,2 +1759,2 @@\n-a mail to [build-dev@openjdk.org](mailto:build-dev@openjdk.org).\n-Please include the relevant parts of the configure and\/or build log.\n+a mail to [build-dev@openjdk.org](mailto:build-dev@openjdk.org). Please include\n+the relevant parts of the configure and\/or build log.\n@@ -1767,4 +1770,4 @@\n-for many reasons a harder goal than it initially appears, but it is an important\n-goal, for security reasons and others. Please see [Reproducible Builds](\n-https:\/\/reproducible-builds.org) for more information about the background and\n-reasons for reproducible builds.\n+for many reasons a harder goal than it initially appears, but it is an\n+important goal, for security reasons and others. Please see [Reproducible\n+Builds]( https:\/\/reproducible-builds.org) for more information about the\n+background and reasons for reproducible builds.\n@@ -1782,2 +1785,2 @@\n-To generate reproducible builds, you must set `SOURCE_DATE_EPOCH` before running\n-`configure`. The value in `SOURCE_DATE_EPOCH` will be stored in the\n+To generate reproducible builds, you must set `SOURCE_DATE_EPOCH` before\n+running `configure`. The value in `SOURCE_DATE_EPOCH` will be stored in the\n@@ -1787,3 +1790,3 @@\n-You must also make sure your build does not rely on `configure`'s default ad hoc\n-version strings. Default ad hoc version strings `OPT` segment include user name\n-and source directory. You can either override just the `OPT` segment using\n+You must also make sure your build does not rely on `configure`'s default ad\n+hoc version strings. Default ad hoc version strings `OPT` segment include user\n+name and source directory. You can either override just the `OPT` segment using\n@@ -1808,2 +1811,2 @@\n-adjusted by `configure` arguments. If any of these are given, they will override\n-the value derived from `SOURCE_DATE_EPOCH`. These arguments are:\n+adjusted by `configure` arguments. If any of these are given, they will\n+override the value derived from `SOURCE_DATE_EPOCH`. These arguments are:\n@@ -1813,3 +1816,3 @@\n- This option controls how the JDK build sets `SOURCE_DATE_EPOCH` when\n- building. It can be set to a value describing a date, either an epoch based\n- timestamp as an integer, or a valid ISO-8601 date.\n+ This option controls how the JDK build sets `SOURCE_DATE_EPOCH` when building.\n+ It can be set to a value describing a date, either an epoch based timestamp as\n+ an integer, or a valid ISO-8601 date.\n@@ -1818,5 +1821,5 @@\n- `version`. `current` means that the time of running `configure` will be\n- used. `version` will use the nominal release date for the current JDK\n- version. `updated`, which means that `SOURCE_DATE_EPOCH` will be set to the\n- current time each time you are running `make`. All choices, except for\n- `updated`, will set a fixed value for the source date timestamp.\n+ `version`. `current` means that the time of running `configure` will be used.\n+ `version` will use the nominal release date for the current JDK version.\n+ `updated`, which means that `SOURCE_DATE_EPOCH` will be set to the current\n+ time each time you are running `make`. All choices, except for `updated`, will\n+ set a fixed value for the source date timestamp.\n@@ -1831,2 +1834,2 @@\n- hotspot library (`libjvm.so` or `jvm.dll`). If the source date is fixed\n- (e.g. by setting `SOURCE_DATE_EPOCH`), the default value for\n+ hotspot library (`libjvm.so` or `jvm.dll`). If the source date is fixed (e.g.\n+ by setting `SOURCE_DATE_EPOCH`), the default value for\n@@ -1839,5 +1842,5 @@\n- This option controls the copyright year in some generated text files. When\n- the source date is fixed (e.g. by setting `SOURCE_DATE_EPOCH`), the default\n- value for `--with-copyright-year` will be the year of that time stamp.\n- Otherwise the default is the current year at the time of running configure.\n- This can be overridden by `--with-copyright-year=<year>`.\n+ This option controls the copyright year in some generated text files. When the\n+ source date is fixed (e.g. by setting `SOURCE_DATE_EPOCH`), the default value\n+ for `--with-copyright-year` will be the year of that time stamp. Otherwise the\n+ default is the current year at the time of running configure. This can be\n+ overridden by `--with-copyright-year=<year>`.\n@@ -1990,4 +1993,4 @@\n-To use this, set the make control variable `JDK_FILTER` to specify a\n-pattern that will be used to limit the set of files being recompiled. For\n-instance, `make java.base JDK_FILTER=javax\/crypto` will limit the compilation\n-to files in the `javax.crypto` package.\n+To use this, set the make control variable `JDK_FILTER` to specify a pattern\n+that will be used to limit the set of files being recompiled. For instance,\n+`make java.base JDK_FILTER=javax\/crypto` will limit the compilation to files in\n+the `javax.crypto` package.\n@@ -2032,2 +2035,2 @@\n-* `images`: This is the directory were the output of the `*-image` make\n-  targets end up. For instance, `make jdk-image` ends up in `images\/jdk`.\n+* `images`: This is the directory were the output of the `*-image` make targets\n+  end up. For instance, `make jdk-image` ends up in `images\/jdk`.\n@@ -2044,2 +2047,2 @@\n-  per-module hierarchy that will later be collapsed into the `jdk` directory\n-  of the exploded image.\n+  per-module hierarchy that will later be collapsed into the `jdk` directory of\n+  the exploded image.\n@@ -2047,2 +2050,2 @@\n-* `buildtools`: This is an area for tools compiled for the build platform\n-  that are used during the rest of the build.\n+* `buildtools`: This is an area for tools compiled for the build platform that\n+  are used during the rest of the build.\n@@ -2054,2 +2057,2 @@\n-  contain files that are needed by the build system for `configure`, `make`\n-  and for running tests.\n+  contain files that are needed by the build system for `configure`, `make` and\n+  for running tests.\n@@ -2121,3 +2124,3 @@\n-The JDK supports different methods on how to handle debug symbols. The\n-method used is selected by `--with-native-debug-symbols`, and available methods\n-are `none`, `internal`, `external`, `zipped`.\n+The JDK supports different methods on how to handle debug symbols. The method\n+used is selected by `--with-native-debug-symbols`, and available methods are\n+`none`, `internal`, `external`, `zipped`.\n@@ -2134,2 +2137,2 @@\n-* `zipped` is like `external`, but the .debuginfo file will also be zipped\n-  into a `.diz` file.\n+* `zipped` is like `external`, but the .debuginfo file will also be zipped into\n+  a `.diz` file.\n@@ -2204,2 +2207,2 @@\n-To analyze build performance, run with `LOG=trace` and check `$BUILD\/build-trace-time.log`.\n-Use `JOBS=1` to avoid parallelism.\n+To analyze build performance, run with `LOG=trace` and check\n+`$BUILD\/build-trace-time.log`. Use `JOBS=1` to avoid parallelism.\n@@ -2208,2 +2211,2 @@\n-https:\/\/openjdk.org\/groups\/build\/doc\/code-conventions.html) before\n-submitting patches.\n+https:\/\/openjdk.org\/groups\/build\/doc\/code-conventions.html) before submitting\n+patches.\n@@ -2216,3 +2219,3 @@\n-First of all: Thank you! We gladly welcome your contribution.\n-However, please bear in mind that the JDK is a massive project, and we must ask\n-you to follow our rules and guidelines to be able to accept your contribution.\n+First of all: Thank you! We gladly welcome your contribution. However, please\n+bear in mind that the JDK is a massive project, and we must ask you to follow\n+our rules and guidelines to be able to accept your contribution.\n@@ -2220,1 +2223,2 @@\n-The official place to start is the [OpenJDK Developers’ Guide](https:\/\/openjdk.org\/guide\/).\n+The official place to start is the [OpenJDK Developers’ Guide](\n+https:\/\/openjdk.org\/guide\/).\n","filename":"doc\/building.md","additions":296,"deletions":292,"binary":false,"changes":588,"status":"modified"}]}