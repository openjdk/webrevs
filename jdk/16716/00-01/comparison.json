{"files":[{"patch":"@@ -1109,0 +1109,6 @@\n+\n+  void (MacroAssembler::*vblend)(XMMRegister, XMMRegister, XMMRegister, XMMRegister, int, bool, XMMRegister);\n+  void (MacroAssembler::*vmaxmin)(XMMRegister, XMMRegister, XMMRegister, int);\n+  void (MacroAssembler::*vcmp)(XMMRegister, XMMRegister, XMMRegister, int, int);\n+  XMMRegister mask;\n+\n@@ -1110,10 +1116,4 @@\n-    XMMRegister mask = a;\n-    if (EnableX86ECoreOpts) {\n-      vpsrad(tmp, mask, 32, vlen_enc);\n-      mask = tmp;\n-    }\n-    vblendvps(atmp, a, b, mask, vlen_enc, true, btmp);\n-    vblendvps(btmp, b, a, mask, vlen_enc, true, tmp);\n-    vminps(tmp, atmp, btmp, vlen_enc);\n-    vcmpps(btmp, atmp, atmp, Assembler::UNORD_Q, vlen_enc);\n-    vblendvps(dst, tmp, atmp, btmp, vlen_enc, true, btmp);\n+    mask = a;\n+    vblend = &MacroAssembler::vblendvps;\n+    vmaxmin = &MacroAssembler::vminps;\n+    vcmp = &MacroAssembler::vcmpps;\n@@ -1121,10 +1121,4 @@\n-    XMMRegister mask = b;\n-    if (EnableX86ECoreOpts) {\n-      vpsrad(tmp, mask, 32, vlen_enc);\n-      mask = tmp;\n-    }\n-    vblendvps(btmp, b, a, mask, vlen_enc, true, atmp);\n-    vblendvps(atmp, a, b, mask, vlen_enc, true, tmp);\n-    vmaxps(tmp, atmp, btmp, vlen_enc);\n-    vcmpps(btmp, atmp, atmp, Assembler::UNORD_Q, vlen_enc);\n-    vblendvps(dst, tmp, atmp, btmp, vlen_enc, true, btmp);\n+    mask = b;\n+    vblend = &MacroAssembler::vblendvps;\n+    vmaxmin = &MacroAssembler::vmaxps;\n+    vcmp = &MacroAssembler::vcmpps;\n@@ -1132,11 +1126,4 @@\n-    XMMRegister mask = a;\n-    if (EnableX86ECoreOpts) {\n-      vpxor(tmp, tmp, tmp, vlen_enc);\n-      vpcmpgtq(tmp, tmp, mask, vlen_enc);\n-      mask = tmp;\n-    }\n-    vblendvpd(atmp, a, b, mask, vlen_enc, true, btmp);\n-    vblendvpd(btmp, b, a, mask, vlen_enc, true, tmp);\n-    vminpd(tmp, atmp, btmp, vlen_enc);\n-    vcmppd(btmp, atmp, atmp, Assembler::UNORD_Q, vlen_enc);\n-    vblendvpd(dst, tmp, atmp, btmp, vlen_enc, true, btmp);\n+    mask = a;\n+    vblend = &MacroAssembler::vblendvpd;\n+    vmaxmin = &MacroAssembler::vminpd;\n+    vcmp = &MacroAssembler::vcmppd;\n@@ -1145,11 +1132,22 @@\n-    XMMRegister mask = b;\n-    if (EnableX86ECoreOpts) {\n-      vpxor(tmp, tmp, tmp, vlen_enc);\n-      vpcmpgtq(tmp, tmp, mask, vlen_enc);\n-      mask = tmp;\n-    }\n-    vblendvpd(btmp, b, a, mask, vlen_enc, true, atmp);\n-    vblendvpd(atmp, a, b, mask, vlen_enc, true, tmp);\n-    vmaxpd(tmp, atmp, btmp, vlen_enc);\n-    vcmppd(btmp, atmp, atmp, Assembler::UNORD_Q, vlen_enc);\n-    vblendvpd(dst, tmp, atmp, btmp, vlen_enc, true, btmp);\n+    mask = b;\n+    vblend = &MacroAssembler::vblendvpd;\n+    vmaxmin = &MacroAssembler::vmaxpd;\n+    vcmp = &MacroAssembler::vcmppd;\n+  }\n+\n+  XMMRegister maxmin, scratch;\n+  if (dst == btmp) {\n+    maxmin = btmp;\n+    scratch = tmp;\n+  } else {\n+    maxmin = tmp;\n+    scratch = btmp;\n+  }\n+\n+  if (EnableX86ECoreOpts && !is_double_word) {\n+    vpsrad(tmp, mask, 32, vlen_enc);\n+    mask = tmp;\n+  } else if (EnableX86ECoreOpts && is_double_word) {\n+    vpxor(tmp, tmp, tmp, vlen_enc);\n+    vpcmpgtq(tmp, tmp, mask, vlen_enc);\n+    mask = tmp;\n@@ -1157,0 +1155,5 @@\n+  (this->*vblend)(atmp, a, b, mask, vlen_enc, true, btmp);\n+  (this->*vblend)(btmp, b, a, mask, vlen_enc, true, tmp);\n+  (this->*vmaxmin)(maxmin, atmp, btmp, vlen_enc);\n+  (this->*vcmp)(scratch, atmp, atmp, Assembler::UNORD_Q, vlen_enc);\n+  (this->*vblend)(dst, tmp, atmp, scratch, vlen_enc, true, scratch);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":45,"deletions":42,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -3574,1 +3574,1 @@\n-  bool dst_available = dst != src1 || dst != src2;\n+  bool dst_available = dst != mask && (dst != src1 || dst != src2);\n@@ -3589,1 +3589,0 @@\n-    \/\/ CASE dst==src1==src2\n@@ -3599,1 +3598,1 @@\n-  bool dst_available = dst != src1 || dst != src2;\n+  bool dst_available = dst != mask && (dst != src1 || dst != src2);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -7844,2 +7844,2 @@\n-    __ vpand($dst$$XMMRegister, $src2$$XMMRegister, $mask$$XMMRegister, vlen_enc);\n-    __ vpor($dst$$XMMRegister, $dst$$XMMRegister, $vtmp$$XMMRegister, vlen_enc);\n+    __ vpand ($dst$$XMMRegister,  $mask$$XMMRegister, $src2$$XMMRegister, vlen_enc);\n+    __ vpor  ($dst$$XMMRegister,  $dst$$XMMRegister,  $vtmp$$XMMRegister, vlen_enc);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4510,3 +4510,10 @@\n-    __ vmaxss($tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n-    __ vcmpps($btmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n-    __ vblendvps($dst$$XMMRegister, $tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister, vector_len, true, $btmp$$XMMRegister);\n+\n+    if ($dst$$XMMRegister == $btmp$$XMMRegister) {\n+      __ vmaxss($btmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n+      __ vcmpps($tmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n+      __ vblendvps($dst$$XMMRegister, $btmp$$XMMRegister, $atmp$$XMMRegister, $tmp$$XMMRegister, vector_len, true, $tmp$$XMMRegister);\n+    } else {\n+      __ vmaxss($tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n+      __ vcmpps($btmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n+      __ vblendvps($dst$$XMMRegister, $tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister, vector_len, true, $btmp$$XMMRegister);\n+    }\n@@ -4552,3 +4559,10 @@\n-    __ vmaxsd($tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n-    __ vcmppd($btmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n-    __ vblendvpd($dst$$XMMRegister, $tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister, vector_len, true, $btmp$$XMMRegister);\n+\n+    if ($dst$$XMMRegister == $btmp$$XMMRegister) {\n+      __ vmaxsd($btmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n+      __ vcmppd($tmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n+      __ vblendvpd($dst$$XMMRegister, $btmp$$XMMRegister, $atmp$$XMMRegister, $tmp$$XMMRegister, vector_len, true, $tmp$$XMMRegister);\n+    } else {\n+      __ vmaxsd($tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n+      __ vcmppd($btmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n+      __ vblendvpd($dst$$XMMRegister, $tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister, vector_len, true, $btmp$$XMMRegister);\n+    }\n@@ -4593,3 +4607,10 @@\n-    __ vminss($tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n-    __ vcmpps($btmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n-    __ vblendvps($dst$$XMMRegister, $tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister, vector_len, true, $btmp$$XMMRegister);\n+\n+    if ($dst$$XMMRegister == $btmp$$XMMRegister) {\n+      __ vminss($btmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n+      __ vcmpps($tmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n+      __ vblendvps($dst$$XMMRegister, $btmp$$XMMRegister, $atmp$$XMMRegister, $tmp$$XMMRegister, vector_len, true, $tmp$$XMMRegister);\n+    } else {\n+      __ vminss($tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n+      __ vcmpps($btmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n+      __ vblendvps($dst$$XMMRegister, $tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister, vector_len, true, $btmp$$XMMRegister);\n+    }\n@@ -4635,3 +4656,10 @@\n-    __ vminsd($tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n-    __ vcmppd($btmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n-    __ vblendvpd($dst$$XMMRegister, $tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister, vector_len, true, $btmp$$XMMRegister);\n+\n+    if ($dst$$XMMRegister == $btmp$$XMMRegister) {\n+      __ vminsd($btmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n+      __ vcmppd($tmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n+      __ vblendvpd($dst$$XMMRegister, $btmp$$XMMRegister, $atmp$$XMMRegister, $tmp$$XMMRegister, vector_len, true, $tmp$$XMMRegister);\n+    } else {\n+      __ vminsd($tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister);\n+      __ vcmppd($btmp$$XMMRegister, $atmp$$XMMRegister, $atmp$$XMMRegister, Assembler::_false, vector_len);\n+      __ vblendvpd($dst$$XMMRegister, $tmp$$XMMRegister, $atmp$$XMMRegister, $btmp$$XMMRegister, vector_len, true, $btmp$$XMMRegister);\n+    }\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":40,"deletions":12,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-          dinp[i] = (double)(i-ARRLEN\/2)*rnd.nextDouble();\n+          dinp[i] = (i-ARRLEN\/2)*rnd.nextDouble();\n@@ -99,1 +99,1 @@\n-          finp[i] = (i-ARRLEN\/2)*(float)rnd.nextDouble();\n+          finp[i] = (i-ARRLEN\/2)*rnd.nextFloat();\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestSignumVector.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}