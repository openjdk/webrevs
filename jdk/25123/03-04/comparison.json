{"files":[{"patch":"@@ -59,0 +59,1 @@\n+import java.util.stream.Collectors;\n@@ -291,3 +292,3 @@\n-        List<ExecutableElement> localMethods = getMembers(Kind.METHODS).stream()\n-                .map(ExecutableElement.class::cast)\n-                .toList();\n+        Set<ExecutableElement> localMethods = overriddenMethodTable.values().stream()\n+                .map(info -> info.overriddenMethod)\n+                .collect(Collectors.toSet());\n@@ -300,16 +301,6 @@\n-    private boolean shouldKeepInheritedMethod(Element e, List<ExecutableElement> localMethods) {\n-        TypeElement encl = utils.getEnclosingTypeElement(e);\n-\n-        boolean isHiddenInterfaceMethod =\n-                !Objects.equals(encl, te) && utils.isUndocumentedEnclosure(encl)\n-                        && e instanceof ExecutableElement;\n-\n-        if (isHiddenInterfaceMethod) {\n-            ExecutableElement inherited = (ExecutableElement) e;\n-            for (var local : localMethods) {\n-                if (utils.elementUtils.overrides(local, inherited, te)) {\n-                    return false;\n-                }\n-            }\n-        }\n-        return true;\n+    private boolean shouldKeepInheritedMethod(Element e, Set<ExecutableElement> overridden) {\n+        if (!(e instanceof ExecutableElement ee)) return true;\n+        TypeElement encl = utils.getEnclosingTypeElement(ee);\n+        boolean hiddenInterface = !Objects.equals(encl, te)\n+                && utils.isUndocumentedEnclosure(encl);\n+        return !hiddenInterface || !overridden.contains(ee);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":10,"deletions":19,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @run main TestDuplicateMethodsWarn\n+ * @run main TestDuplicateMethods\n@@ -40,1 +40,1 @@\n-public class TestDuplicateMethodsWarn extends JavadocTester {\n+public class TestDuplicateMethods extends JavadocTester {\n@@ -43,1 +43,1 @@\n-        var tester = new TestDuplicateMethodsWarn();\n+        var tester = new TestDuplicateMethods();\n@@ -51,1 +51,1 @@\n-    TestDuplicateMethodsWarn() throws IOException {\n+    TestDuplicateMethods() throws IOException {\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDuplicateMethodsWarn\/TestDuplicateMethods.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDuplicateMethodsWarn\/TestDuplicateMethodsWarn.java","status":"renamed"}]}