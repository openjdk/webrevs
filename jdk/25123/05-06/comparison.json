{"files":[{"patch":"@@ -27,1 +27,1 @@\n- * @summary Test to check for duplicate methods\n+ * @summary Test to check for duplicate methods across different inheritance patterns\n@@ -52,0 +52,1 @@\n+        \/\/ Diamond class inheritance\n@@ -54,1 +55,1 @@\n-                 interface A {\n+                interface A {\n@@ -56,6 +57,6 @@\n-                    * JavaDoc for method in class A.\n-                    *\/\n-                    abstract void testA ( );\n-                 }\"\"\",\"\"\"\n-                 package p;\n-                 interface B extends A {\n+                     * JavaDoc for method in interface A.\n+                     *\/\n+                    abstract void testA( );\n+                }\"\"\", \"\"\"\n+                package p;\n+                interface B extends A {\n@@ -63,6 +64,6 @@\n-                    * JavaDoc for method in class B.\n-                    *\/\n-                    abstract void testB ( );\n-                 }\"\"\", \"\"\"\n-                 package p;\n-                 abstract class C implements A {\n+                     * JavaDoc for method in interface B.\n+                     *\/\n+                    abstract void testB( );\n+                }\"\"\", \"\"\"\n+                package p;\n+                abstract class C implements A {\n@@ -70,4 +71,4 @@\n-                    * Inherited JavaDoc for method in class C.\n-                    *\/\n-                    public final void testA ( ) {\n-                       \/\/ Do nothing.\n+                     * Inherited JavaDoc for method in class C.\n+                     *\/\n+                    public final void testA( ) {\n+                        \/\/ Do nothing.\n@@ -75,3 +76,25 @@\n-                 }\"\"\",\"\"\"\n-                 package p;\n-                 public final class D extends C implements B {\n+                }\"\"\",\"\"\"\n+                package p;\n+                public final class D extends C implements B {\n+                    \/**\n+                     * Inherited JavaDoc.\n+                     *\/\n+                    public final void testB() {\n+                        \/\/ Do nothing.\n+                    }\n+                }\n+                \"\"\");\n+\n+        \/\/ Mirrors the implementation of StringBuilder\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                package sb;\n+                public interface I {\n+                    \/**\n+                     * JavaDoc for method in public interface I.\n+                     *\/\n+                    void testI();\n+                }\n+                \"\"\", \"\"\"\n+                package sb;\n+                abstract class P implements I {\n@@ -79,4 +102,4 @@\n-                    * Inherited JavaDoc\n-                    *\/\n-                    public final void testB ( ) {\n-                       \/\/ Do nothing.\n+                     * Inherited JavaDoc for method in class P.\n+                     *\/\n+                    public final void testI() {\n+                        \/\/ Do nothing.\n@@ -84,2 +107,8 @@\n-                 }\n-                 \"\"\");\n+                }\n+                \"\"\", \"\"\"\n+                package sb;\n+                public class U extends P implements I {\n+                    \/\/ No overrides\n+                }\n+                \"\"\"\n+        );\n@@ -87,0 +116,29 @@\n+        \/\/ Mirrors the implementation of HashMap\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                package hm;\n+                public interface J {\n+                    \/**\n+                     * JavaDoc for method in public interface J.\n+                     *\/\n+                    void testJ();\n+                }\n+                \"\"\",\n+                \"\"\"\n+                package hm;\n+                public abstract class PubJ implements J {\n+                    \/**\n+                     * Inherited JavaDoc for method in public abstract class PubJ.\n+                     *\/\n+                    public final void testJ() {\n+                        \/\/ Do nothing.\n+                    }\n+                }\n+                \"\"\",\n+                \"\"\"\n+                package hm;\n+                public class V extends PubJ implements J {\n+                    \/\/ No override\n+                }\n+                \"\"\"\n+        );\n@@ -90,1 +148,1 @@\n-    public void testDuplicateMethodWarning(Path base) {\n+    public void testDiamondInheritance(Path base) {\n@@ -95,3 +153,4 @@\n-        checkOutput(\"p\/D.html\", true, \"\"\"\n-                <div class=\"block\">Inherited JavaDoc for method in class C.<\/div>\"\"\",\"\"\"\n-                <div class=\"horizontal-scroll\">\n+        checkOutput(\"p\/D.html\", true,\n+                \"\"\"\n+                <div class=\"block\">Inherited JavaDoc for method in class C.<\/div>\n+                \"\"\", \"\"\"\n@@ -99,1 +158,4 @@\n-                <div class=\"block\">Inherited JavaDoc for method in class C.<\/div>\"\"\");\n+                <div class=\"block\">Inherited JavaDoc for method in class C.<\/div>\n+                \"\"\"\n+        );\n+\n@@ -101,1 +163,1 @@\n-                <div class=\"block\">JavaDoc for method in class A.<\/div>\"\"\", \"\"\"\n+                <div class=\"block\">JavaDoc for method in Interface A.<\/div>\"\"\", \"\"\"\n@@ -103,1 +165,36 @@\n-                <div class=\"block\">JavaDoc for method in class A.<\/div>\"\"\");\n+                <div class=\"block\">JavaDoc for method in Interface A.<\/div>\"\"\");\n+\n+\n+        checkOutput(\"p\/D.html\", false,\n+                \"\"\"\n+                <div class=\"block\">JavaDoc for method in interface A.<\/div>\n+                \"\"\");\n+    }\n+\n+    @Test\n+    public void testStringBuilderInheritance(Path base) {\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                \"sb\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"sb\/U.html\", false,\n+                \"\"\"\n+                <div class=\"inherited-list\">\n+                <h3 id=\"methods-inherited-from-class-sb.I\">Methods inherited from interface&nbsp;<a href=\"I.html#method-summary\" title=\"interface in sb\">I<\/a><\/h3>\n+                <code><a href=\"I.html#testI()\" title=\"testI()\">testI<\/a><\/code><\/div>\n+                \"\"\");\n+    }\n+\n+    @Test\n+    public void testHashMapInheritance(Path base) {\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                \"hm\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"hm\/V.html\", false,\n+                \"\"\"\n+                <div class=\"inherited-list\">\n+                <h3 id=\"methods-inherited-from-class-hm.J\">Methods inherited from interface&nbsp;<a href=\"J.html#method-summary\" title=\"interface in hm\">J<\/a><\/h3>\n+                <code><a href=\"J.html#testJ()\" title=\"testJ()\">testJ<\/a><\/code><\/div>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDuplicateMethodsWarn\/TestDuplicateMethods.java","additions":131,"deletions":34,"binary":false,"changes":165,"status":"modified"}]}