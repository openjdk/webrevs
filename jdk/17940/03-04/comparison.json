{"files":[{"patch":"@@ -24,0 +24,3 @@\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n@@ -25,1 +28,0 @@\n-import java.io.InputStream;\n@@ -34,1 +36,2 @@\n-import java.security.KeyManagementException;\n+import java.nio.file.Path;\n+import java.security.AccessController;\n@@ -36,3 +39,1 @@\n-import java.security.KeyStoreException;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.cert.CertificateException;\n+import java.security.PrivilegedExceptionAction;\n@@ -318,23 +319,7 @@\n-    private static SSLContext onlyTrustStoreContext() throws IOException {\n-        final SimpleSSLContext trustStoreOnly = new SimpleSSLContext() {\n-            @Override\n-            protected SSLContext init(final InputStream i, final String protocol)\n-                    throws IOException {\n-                try {\n-                    final char[] passphrase = \"passphrase\".toCharArray();\n-                    final KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-                    ks.load(i, passphrase);\n-                    final TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"PKIX\");\n-                    tmf.init(ks);\n-                    final SSLContext ctx = SSLContext.getInstance(protocol);\n-                    \/\/ initialize with only trust managers\n-                    ctx.init(null, tmf.getTrustManagers(), null);\n-                    return ctx;\n-                } catch (KeyManagementException | KeyStoreException | CertificateException |\n-                         NoSuchAlgorithmException e) {\n-                    throw new IOException(e.getMessage());\n-                }\n-            }\n-        };\n-        final SSLContext ctx = trustStoreOnly.get();\n-        assertNotNull(ctx, \"could not create a SSLContext\");\n+    private static SSLContext onlyTrustStoreContext() throws Exception {\n+        final KeyStore keyStore = loadTestKeyStore();\n+        final TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"PKIX\");\n+        tmf.init(keyStore);\n+        final SSLContext ctx = SSLContext.getInstance(\"TLS\");\n+        \/\/ initialize with only trust managers\n+        ctx.init(null, tmf.getTrustManagers(), null);\n@@ -344,0 +329,18 @@\n+    private static KeyStore loadTestKeyStore() throws Exception {\n+        return AccessController.doPrivileged(\n+                new PrivilegedExceptionAction<KeyStore>() {\n+                    @Override\n+                    public KeyStore run() throws Exception {\n+                        final String testKeys = System.getProperty(\"test.src\")\n+                                + \"\/\"\n+                                + \"..\/..\/..\/..\/..\/..\/test\/lib\/jdk\/test\/lib\/net\/testkeys\";\n+                        try (final FileInputStream fis = new FileInputStream(testKeys)) {\n+                            final char[] passphrase = \"passphrase\".toCharArray();\n+                            final KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n+                            ks.load(fis, passphrase);\n+                            return ks;\n+                        }\n+                    }\n+                });\n+    }\n+\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/HttpsParametersClientAuthTest.java","additions":31,"deletions":28,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-                                    ssl = init(fis, proto);\n+                                    init(fis, proto);\n@@ -107,1 +107,1 @@\n-            ssl = init(fis, \"TLS\");\n+            init(fis, \"TLS\");\n@@ -111,5 +111,1 @@\n-    protected SSLContext init(InputStream i, String protocol) throws IOException {\n-        return doInit(i, protocol);\n-    }\n-\n-    private static SSLContext doInit(InputStream i, String protocol) throws IOException {\n+    private void init(InputStream i, String protocol) throws IOException {\n@@ -127,3 +123,2 @@\n-            SSLContext ctx = SSLContext.getInstance(protocol);\n-            ctx.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n-            return ctx;\n+            ssl = SSLContext.getInstance(protocol);\n+            ssl.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n","filename":"test\/lib\/jdk\/test\/lib\/net\/SimpleSSLContext.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"}]}