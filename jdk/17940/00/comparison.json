{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,0 +146,1 @@\n+        this.needClientAuth = false;\n@@ -165,0 +166,1 @@\n+        this.wantClientAuth = false;\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/HttpsParameters.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,2 +88,6 @@\n-                engine.setNeedClientAuth (params.getNeedClientAuth());\n-                engine.setWantClientAuth (params.getWantClientAuth());\n+                if (params.getNeedClientAuth()) {\n+                    engine.setNeedClientAuth(true);\n+                }\n+                if (params.getWantClientAuth()) {\n+                    engine.setWantClientAuth(true);\n+                }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/SSLStreams.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.net.InetSocketAddress;\n+\n+import javax.net.ssl.SSLParameters;\n+\n+import com.sun.net.httpserver.HttpsConfigurator;\n+import com.sun.net.httpserver.HttpsParameters;\n+import org.junit.jupiter.api.Test;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+\/*\n+ * @test\n+ * @bug 8326381\n+ * @summary verifies that the setNeedClientAuth() and setWantClientAuth()\n+ *          methods on HttpsParameters class work as expected\n+ * @run junit HttpsParametersClientAuthTest\n+ *\/\n+public class HttpsParametersClientAuthTest {\n+\n+    \/**\n+     * verifies that {@link HttpsParameters#setNeedClientAuth(boolean)}\n+     * and {@link HttpsParameters#setWantClientAuth(boolean)} methods work\n+     * as expected\n+     *\/\n+    @Test\n+    public void testClientAuth() throws Exception {\n+        \/\/ test default values\n+        HttpsParameters defaultParams = new Params();\n+        assertFalse(defaultParams.getNeedClientAuth(),\n+                \"needClientAuth was expected to be false but wasn't\");\n+        assertFalse(defaultParams.getWantClientAuth(),\n+                \"wantClientAuth was expected to be false but wasn't\");\n+\n+        \/\/ needClientAuth = true and thus wantClientAuth = false\n+        HttpsParameters needClientAuthParams = new Params();\n+        needClientAuthParams.setNeedClientAuth(true);\n+        assertTrue(needClientAuthParams.getNeedClientAuth(),\n+                \"needClientAuth was expected to be true but wasn't\");\n+        assertFalse(needClientAuthParams.getWantClientAuth(),\n+                \"wantClientAuth was expected to be false but wasn't\");\n+\n+        \/\/ wantClientAuth = true and thus needClientAuth = false\n+        HttpsParameters wantClientAuthParams = new Params();\n+        wantClientAuthParams.setWantClientAuth(true);\n+        assertTrue(wantClientAuthParams.getWantClientAuth(),\n+                \"wantClientAuth was expected to be true but wasn't\");\n+        assertFalse(wantClientAuthParams.getNeedClientAuth(),\n+                \"needClientAuth was expected to be false but wasn't\");\n+    }\n+\n+\n+    private static final class Params extends HttpsParameters {\n+\n+        @Override\n+        public HttpsConfigurator getHttpsConfigurator() {\n+            \/\/ no-op\n+            return null;\n+        }\n+\n+        @Override\n+        public InetSocketAddress getClientAddress() {\n+            \/\/ no-op\n+            return null;\n+        }\n+\n+        @Override\n+        public void setSSLParameters(SSLParameters params) {\n+            \/\/ no-op\n+        }\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/HttpsParametersClientAuthTest.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"}]}