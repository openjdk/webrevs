{"files":[{"patch":"@@ -30,3 +30,3 @@\n- * The Verify class provides a single Verify.checkEQ static method, which recursively compares\n- * the two Objects by value. It deconstructs Object[], compares boxed primitive types, and\n- * compares the content of arrays and MemorySegments.\n+ * The {@link Verify} class provides a single {@link Verify#checkEQ} static method, which recursively\n+ * compares the two {@link Object}s by value. It deconstructs {@link Object[]}, compares boxed primitive\n+ * types, and compares the content of arrays and {@link MemorySegment}s.\n@@ -34,1 +34,1 @@\n- * When a comparison fail, then methods print helpful messages, before throwing a VerifyException.\n+ * When a comparison fail, then methods print helpful messages, before throwing a {@link VerifyException}.\n@@ -37,0 +37,3 @@\n+\n+    private Verify() {}\n+\n@@ -39,0 +42,4 @@\n+     *\n+     * @param a First object to be recursively compared with the second.\n+     * @param b Second object to be recursively compared with the first.\n+     * @throws VerifyException If the comparison fails.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/verify\/Verify.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -30,0 +30,6 @@\n+\n+    \/**\n+     * Creates a new verification exception.\n+     *\n+     * @param message Exception message for context when debugging.\n+     *\/\n@@ -33,4 +39,0 @@\n-\n-    public VerifyException(String message, Throwable e) {\n-        super(\"Value verification failed:\" + System.lineSeparator() + message, e);\n-    }\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/verify\/VerifyException.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}