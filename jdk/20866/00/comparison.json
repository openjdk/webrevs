{"files":[{"patch":"@@ -34,2 +34,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -59,3 +57,1 @@\n-    private static final MethodType DESCRIPTOR_MT = MethodType.methodType(MethodType.class);\n-    private static final MethodType NAMES_MT = MethodType.methodType(List.class);\n-    private static final MethodHandle FALSE = MethodHandles.constant(boolean.class, false);\n+    private static final MethodHandle FALSE = MethodHandles.zero(boolean.class);\n@@ -63,1 +59,1 @@\n-    private static final MethodHandle ZERO = MethodHandles.constant(int.class, 0);\n+    private static final MethodHandle ZERO = MethodHandles.zero(int.class);\n@@ -65,1 +61,0 @@\n-    private static final MethodHandle OBJECT_EQUALS;\n@@ -70,3 +65,0 @@\n-    private static final MethodHandle OBJECT_HASHCODE;\n-    private static final MethodHandle OBJECT_TO_STRING;\n-    private static final MethodHandle STRING_FORMAT;\n@@ -85,5 +77,0 @@\n-            @SuppressWarnings(\"removal\")\n-            ClassLoader loader = AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() {\n-                @Override public ClassLoader run() { return ClassLoader.getPlatformClassLoader(); }\n-            });\n-\n@@ -92,8 +79,0 @@\n-            OBJECT_EQUALS = publicLookup.findVirtual(Object.class, \"equals\",\n-                                                     MethodType.methodType(boolean.class, Object.class));\n-            OBJECT_HASHCODE = publicLookup.findVirtual(Object.class, \"hashCode\",\n-                                                       MethodType.fromMethodDescriptorString(\"()I\", loader));\n-            OBJECT_TO_STRING = publicLookup.findVirtual(Object.class, \"toString\",\n-                                                        MethodType.methodType(String.class));\n-            STRING_FORMAT = publicLookup.findStatic(String.class, \"format\",\n-                                                    MethodType.methodType(String.class, String.class, Object[].class));\n@@ -110,1 +89,1 @@\n-                                              MethodType.fromMethodDescriptorString(\"(II)I\", loader));\n+                                              MethodType.methodType(int.class, int.class, int.class));\n@@ -113,1 +92,1 @@\n-                                                              MethodType.fromMethodDescriptorString(\"(BB)Z\", loader)));\n+                                                              MethodType.methodType(boolean.class, byte.class, byte.class)));\n@@ -115,1 +94,1 @@\n-                                                               MethodType.fromMethodDescriptorString(\"(SS)Z\", loader)));\n+                                                               MethodType.methodType(boolean.class, short.class, short.class)));\n@@ -117,1 +96,1 @@\n-                                                              MethodType.fromMethodDescriptorString(\"(CC)Z\", loader)));\n+                                                              MethodType.methodType(boolean.class, char.class, char.class)));\n@@ -119,1 +98,1 @@\n-                                                             MethodType.fromMethodDescriptorString(\"(II)Z\", loader)));\n+                                                             MethodType.methodType(boolean.class, int.class, int.class)));\n@@ -121,1 +100,1 @@\n-                                                              MethodType.fromMethodDescriptorString(\"(JJ)Z\", loader)));\n+                                                              MethodType.methodType(boolean.class, long.class, long.class)));\n@@ -123,1 +102,1 @@\n-                                                               MethodType.fromMethodDescriptorString(\"(FF)Z\", loader)));\n+                                                               MethodType.methodType(boolean.class, float.class, float.class)));\n@@ -125,1 +104,1 @@\n-                                                                MethodType.fromMethodDescriptorString(\"(DD)Z\", loader)));\n+                                                                MethodType.methodType(boolean.class, double.class, double.class)));\n@@ -127,1 +106,1 @@\n-                                                                 MethodType.fromMethodDescriptorString(\"(ZZ)Z\", loader)));\n+                                                                 MethodType.methodType(boolean.class, boolean.class, boolean.class)));\n@@ -130,1 +109,1 @@\n-                                                               MethodType.fromMethodDescriptorString(\"(B)I\", loader)));\n+                                                               MethodType.methodType(int.class, byte.class)));\n@@ -132,1 +111,1 @@\n-                                                                MethodType.fromMethodDescriptorString(\"(S)I\", loader)));\n+                                                                MethodType.methodType(int.class, short.class)));\n@@ -134,1 +113,1 @@\n-                                                               MethodType.fromMethodDescriptorString(\"(C)I\", loader)));\n+                                                               MethodType.methodType(int.class, char.class)));\n@@ -136,1 +115,1 @@\n-                                                              MethodType.fromMethodDescriptorString(\"(I)I\", loader)));\n+                                                              MethodType.methodType(int.class, int.class)));\n@@ -138,1 +117,1 @@\n-                                                               MethodType.fromMethodDescriptorString(\"(J)I\", loader)));\n+                                                               MethodType.methodType(int.class, long.class)));\n@@ -140,1 +119,1 @@\n-                                                                MethodType.fromMethodDescriptorString(\"(F)I\", loader)));\n+                                                                MethodType.methodType(int.class, float.class)));\n@@ -142,1 +121,1 @@\n-                                                                 MethodType.fromMethodDescriptorString(\"(D)I\", loader)));\n+                                                                 MethodType.methodType(int.class, double.class)));\n@@ -144,1 +123,1 @@\n-                                                                  MethodType.fromMethodDescriptorString(\"(Z)I\", loader)));\n+                                                                  MethodType.methodType(int.class, boolean.class)));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/ObjectMethods.java","additions":19,"deletions":40,"binary":false,"changes":59,"status":"modified"}]}