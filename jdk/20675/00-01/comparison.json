{"files":[{"patch":"@@ -32,1 +32,0 @@\n-import jdk.internal.constant.MethodTypeDescImpl;\n@@ -1170,1 +1169,1 @@\n-            return changed ? MethodType.methodType(args.returnType(), paramTypes, true) : args;\n+            return changed ? MethodType.methodType(args.returnType(), paramTypes) : args;\n@@ -1199,1 +1198,1 @@\n-            return MethodTypeDescImpl.ofValidated(CD_int, paramTypes);\n+            return MethodTypeDesc.of(CD_int, paramTypes);\n@@ -1203,1 +1202,1 @@\n-         * Construct the MethodType of the coder method, if there are no parameters it may be UTF16, return null.\n+         * Construct the MethodType of the coder method,\n@@ -1206,1 +1205,1 @@\n-        private static MethodTypeDesc coderArgsIfMaybeUTF16(MethodType concatArgs) {\n+        private static MethodTypeDesc coderArgs(MethodType concatArgs) {\n@@ -1208,2 +1207,2 @@\n-\n-            int maybeUTF16Count = 0;\n+            List<ClassDesc> paramTypes = new ArrayList<>();\n+            paramTypes.add(CD_int); \/\/ init coder\n@@ -1211,12 +1210,0 @@\n-                if (maybeUTF16(concatArgs.parameterType(i))) {\n-                    maybeUTF16Count++;\n-                }\n-            }\n-\n-            if (maybeUTF16Count == 0) {\n-                return null;\n-            }\n-\n-            var paramTypes = new ClassDesc[maybeUTF16Count + 1];\n-            paramTypes[0] = CD_int; \/\/ init coder\n-            for (int i = 0, paramIndex = 1; i < parameterCount; i++) {\n@@ -1225,1 +1212,1 @@\n-                    paramTypes[paramIndex++] = cl == char.class ? CD_char : CD_String;\n+                    paramTypes.add(cl == char.class ? CD_char : CD_String);\n@@ -1228,1 +1215,1 @@\n-            return MethodTypeDescImpl.ofValidated(CD_int, paramTypes);\n+            return MethodTypeDesc.of(CD_int, paramTypes);\n@@ -1243,1 +1230,1 @@\n-            return MethodTypeDescImpl.ofValidated(CD_int, paramTypes);\n+            return MethodTypeDesc.of(CD_int, paramTypes);\n@@ -1276,1 +1263,1 @@\n-                           coderArgs   = coderArgsIfMaybeUTF16(concatArgs),\n+                           coderArgs   = parameterMaybeUTF16(concatArgs) ? coderArgs(concatArgs) : null,\n@@ -1771,0 +1758,9 @@\n+\n+        static boolean parameterMaybeUTF16(MethodType args) {\n+            for (int i = 0; i < args.parameterCount(); i++) {\n+                if (maybeUTF16(args.parameterType(i))) {\n+                    return true;\n+                }\n+            }\n+            return false;\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":19,"deletions":23,"binary":false,"changes":42,"status":"modified"}]}