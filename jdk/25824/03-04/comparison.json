{"files":[{"patch":"@@ -269,2 +269,0 @@\n-    static native String getTempDir();\n-\n","filename":"src\/jdk.attach\/macosx\/classes\/sun\/tools\/attach\/VirtualMachineImpl.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -338,24 +338,0 @@\n-\n-\/*\n- * Class:     sun_tools_attach_BSDVirtualMachine\n- * Method:    getTempDir\n- * Signature: (V)Ljava.lang.String;\n- *\/\n-JNIEXPORT jstring JNICALL Java_sun_tools_attach_VirtualMachineImpl_getTempDir(JNIEnv *env, jclass cls)\n-{\n-    \/\/ This must be hard coded because it's the system's temporary\n-    \/\/ directory not the java application's temp directory, ala java.io.tmpdir.\n-\n-#ifdef __APPLE__\n-    \/\/ macosx has a secure per-user temporary directory.\n-    \/\/ Don't cache the result as this is only called once.\n-    char path[PATH_MAX];\n-    int pathSize = confstr(_CS_DARWIN_USER_TEMP_DIR, path, PATH_MAX);\n-    if (pathSize == 0 || pathSize > PATH_MAX) {\n-        strlcpy(path, \"\/tmp\", sizeof(path));\n-    }\n-    return JNU_NewStringPlatform(env, path);\n-#else \/* __APPLE__ *\/\n-    return (*env)->NewStringUTF(env, \"\/tmp\");\n-#endif \/* __APPLE__ *\/\n-}\n","filename":"src\/jdk.attach\/macosx\/native\/libattach\/VirtualMachineImpl.c","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"}]}