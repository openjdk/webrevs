{"files":[{"patch":"@@ -190,1 +190,3 @@\n-        task.call();\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/g1\/unloading\/GenClassPoolJar.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -90,1 +90,3 @@\n-        task.call();\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/T6358024.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,1 +78,3 @@\n-        task.call();\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/T6358166.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,2 @@\n-        Iterable<String> flags = Arrays.asList(\"-processorpath\", testClassDir,\n+        Iterable<String> flags = Arrays.asList(\"--add-exports\", \"jdk.compiler\/com.sun.tools.javac.api=ALL-UNNAMED\",\n+                                               \"-processorpath\", testClassDir,\n@@ -72,1 +73,3 @@\n-            task.call();\n+            if (!task.call()) {\n+                throw new AssertionError(\"test failed due to a compilation error\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/T6361619.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -66,1 +66,3 @@\n-            task.call();\n+            if (task.call()) {\n+                throw new AssertionError(\"test compilation was expected to fail\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/T6395974.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+                \/\/ no need to check the result of JavacTask::call, reevaluate if the test is modified\n","filename":"test\/langtools\/tools\/javac\/T6397286.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -69,1 +69,3 @@\n-            task.call();\n+            if (!task.call()) {\n+                throw new AssertionError(\"test failed due to a compilation error\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/T6458823\/T6458823.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,1 +79,3 @@\n-        task.call();\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrAvoidNullCheck.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -92,1 +92,3 @@\n-            task.call();\n+            if (!task.call()) {\n+                throw new AssertionError(\"test failed due to a compilation error\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/TryWithResources\/TwrSimpleClose.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -93,1 +93,3 @@\n-        task.call();\n+        if (task.call()) {\n+            throw new AssertionError(\"test compilation was expected to fail\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/api\/6406133\/T6406133.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+            \/\/ no need to check the result of JavacTask::call, reevaluate if the test is modified\n","filename":"test\/langtools\/tools\/javac\/api\/6410643\/T6410643.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -50,1 +50,3 @@\n-        task.call();\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/api\/6412656\/T6412656.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+            \/\/ no need to check the result of JavacTask::call, reevaluate if the test is modified\n@@ -45,0 +46,1 @@\n+            throw new AssertionError(\"Expected IllegalStateException not thrown\");\n@@ -48,1 +50,0 @@\n-        throw new AssertionError(\"Expected IllegalStateException not thrown\");\n","filename":"test\/langtools\/tools\/javac\/api\/6423003\/T6423003.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -96,1 +96,3 @@\n-        task.call();\n+        if (task.call()) {\n+            throw new AssertionError(\"test compilation was expected to fail\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/api\/6731573\/T6731573.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,1 +74,3 @@\n-            task.call();\n+            if (task.call()) {\n+                throw new AssertionError(\"test compilation was expected to fail\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/api\/7086261\/T7086261.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import java.util.List;\n@@ -78,0 +79,6 @@\n+    static final List<String> OPTIONS = List.of(\n+            \"--add-exports\", \"jdk.compiler\/com.sun.tools.javac.api=ALL-UNNAMED\",\n+            \"--add-exports\", \"jdk.compiler\/com.sun.tools.javac.file=ALL-UNNAMED\",\n+            \"--add-exports\", \"jdk.compiler\/com.sun.tools.javac.tree=ALL-UNNAMED\",\n+            \"--add-exports\", \"jdk.compiler\/com.sun.tools.javac.util=ALL-UNNAMED\");\n+\n@@ -105,1 +112,1 @@\n-        JavacTask task = javac.getTask(out, fm, null, null, null, files);\n+        JavacTask task = javac.getTask(out, fm, null, OPTIONS, null, files);\n@@ -108,1 +115,3 @@\n-        task.call();\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n@@ -116,1 +125,1 @@\n-        JavacTask task = javac.getTask(out, fm, null, null, null, files);\n+        JavacTask task = javac.getTask(out, fm, null, OPTIONS, null, files);\n@@ -119,1 +128,3 @@\n-        task.call();\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/api\/8007344\/Test.java","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -75,1 +75,2 @@\n-                        '^');\n+                        '^',\n+                        false);\n@@ -90,1 +91,2 @@\n-                        '^');\n+                        '^',\n+                        false);\n@@ -105,1 +107,2 @@\n-                        '^');\n+                        '^',\n+                        false);\n@@ -121,1 +124,2 @@\n-                        '^');\n+                        '^',\n+                        false);\n@@ -137,1 +141,2 @@\n-                        '^');\n+                        '^',\n+                        false);\n@@ -161,1 +166,2 @@\n-                        '^');\n+                        '^',\n+                        true);\n@@ -178,1 +184,2 @@\n-                        '^');\n+                        '^',\n+                        false);\n@@ -195,1 +202,2 @@\n-                        '^');\n+                        '^',\n+                        false);\n@@ -198,1 +206,1 @@\n-    private void runDiagSpanTest(String code, char spanMarker, char prefMarker) throws Exception {\n+    private void runDiagSpanTest(String code, char spanMarker, char prefMarker, boolean succCompilationExpected) throws Exception {\n@@ -241,1 +249,3 @@\n-        task.call();\n+        if (task.call() != succCompilationExpected) {\n+            throw new AssertionError(\"unexpected compilation result\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/api\/DiagSpans.java","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -56,1 +56,3 @@\n-            task.call();\n+            if (!task.call()) {\n+                throw new AssertionError(\"test failed due to a compilation error\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/api\/T6357331.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,1 +119,3 @@\n-            task.call();\n+            if (!task.call()) {\n+                throw new AssertionError(\"test failed due to a compilation error\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/api\/TestTreePath.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -82,1 +82,3 @@\n-        task.call();\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/api\/taskListeners\/EventsBalancedTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,1 +79,3 @@\n-        task.call();\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/fatalErrors\/ImproveFatalErrorHandling.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1605,1 +1605,3 @@\n-            task.call();\n+            if (!task.call()) {\n+                throw new AssertionError(\"compilation failed at DPrinter.Main::run\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/lib\/DPrinter.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -362,1 +362,3 @@\n-            task.call();\n+            if (!task.call()) {\n+                throw new AssertionError(\"test failed due to a compilation error\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/modules\/QueryBeforeEnter.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    static final int NESTING_DEPTH = 1000;\n+    static final int NESTING_DEPTH = 500;\n@@ -51,1 +51,3 @@\n-        task.call();\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/patterns\/SOEDeeplyNestedBlocksTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -177,1 +177,3 @@\n-            task.call();\n+            if (task.call()) {\n+                throw new AssertionError(\"test compilation was expected to fail\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/positions\/TreeEndPosTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,3 @@\n-            task.call();\n+            if (task.call()) {\n+                throw new AssertionError(\"test compilation was expected to fail\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/processing\/6348499\/T6348499.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,1 +63,3 @@\n-            task.call();\n+            if (task.call()) {\n+                throw new AssertionError(\"test compilation was expected to fail\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/processing\/6414633\/T6414633.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -69,1 +69,3 @@\n-            task.call();\n+            if (task.call()) {\n+                throw new AssertionError(\"test compilation was expected to fail\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/processing\/6430209\/T6430209.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,3 @@\n-            task.call();\n+            if (task.call()) {\n+                throw new AssertionError(\"test compilation was expected to fail\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/processing\/T6439826.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,3 @@\n-            task.call();\n+            if (!task.call()) {\n+                throw new AssertionError(\"test failed due to a compilation error\");\n+            }\n","filename":"test\/langtools\/tools\/javac\/processing\/T8142931.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -84,1 +84,3 @@\n-        task.call();\n+        if (!task.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n@@ -106,1 +108,3 @@\n-        task2.call();\n+        if (!task2.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n@@ -115,1 +119,3 @@\n-        task3.call();\n+        if (!task3.call()) {\n+            throw new AssertionError(\"test failed due to a compilation error\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/LocalInAnonymous.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -326,1 +326,3 @@\n-                task.call();\n+                if (!task.call()) {\n+                    throw new AssertionError(\"test failed due to a compilation error\");\n+                }\n@@ -338,1 +340,3 @@\n-                task.call();\n+                if (!task.call()) {\n+                    throw new AssertionError(\"test failed due to a compilation error\");\n+                }\n","filename":"test\/langtools\/tools\/javac\/processing\/options\/TestNoteOnImplicitProcessing.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -59,1 +59,3 @@\n-        task.call();\n+        if (task.call()) {\n+            throw new AssertionError(\"test compilation was expected to fail\");\n+        }\n","filename":"test\/langtools\/tools\/javac\/processing\/rounds\/CompleteOnClosed.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}