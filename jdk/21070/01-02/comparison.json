{"files":[{"patch":"@@ -91,1 +91,0 @@\n-#include <string>\n@@ -4094,1 +4093,1 @@\n-std::string GetWindowsInstallationType() {\n+void GetWindowsInstallationType(char* buffer, int bufferSize) {\n@@ -4098,2 +4097,5 @@\n-  char value[256];\n-  DWORD valueLength = sizeof(value);\n+\n+  DWORD valueLength = bufferSize;\n+\n+  \/\/ Initialize buffer with empty string\n+  buffer[0] = '\\0';\n@@ -4103,1 +4105,2 @@\n-      return \"\";\n+    \/\/ Return empty buffer if key cannot be opened\n+    return;\n@@ -4107,3 +4110,4 @@\n-  if (RegQueryValueExA(hKey, valueName, NULL, NULL, (LPBYTE)value, &valueLength) != ERROR_SUCCESS) {\n-      RegCloseKey(hKey);\n-      return \"\";\n+  if (RegQueryValueExA(hKey, valueName, NULL, NULL, (LPBYTE)buffer, &valueLength) != ERROR_SUCCESS) {\n+    RegCloseKey(hKey);\n+    buffer[0] = '\\0';\n+    return;\n@@ -4113,1 +4117,0 @@\n-  return std::string(value, valueLength - 1); \/\/ Exclude null terminator\n@@ -4117,2 +4120,4 @@\n-  std::string installationType = GetWindowsInstallationType();\n-  return installationType == \"Nano Server\";\n+  const int BUFFER_SIZE = 256;\n+  char installationType[BUFFER_SIZE];\n+  GetWindowsInstallationType(installationType, BUFFER_SIZE);\n+  return (lstrcmpA(installationType, \"Nano Server\") == 0);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"}]}