{"files":[{"patch":"@@ -45,0 +45,1 @@\n+import java.util.Collections;\n@@ -56,1 +57,1 @@\n-    private static int DELAY = 500;\n+    private static final int DELAY = 500;\n@@ -58,5 +59,5 @@\n-    private volatile static Component[] components;\n-    private volatile static boolean componentHidden = false;\n-    private volatile static boolean componentShown = false;\n-    private volatile static boolean componentMoved = false;\n-    private volatile static boolean componentResized = false;\n+    private static Component[] components;\n+    private volatile static boolean componentHidden;\n+    private volatile static boolean componentShown;\n+    private volatile static boolean componentMoved;\n+    private volatile static boolean componentResized;\n@@ -65,2 +66,2 @@\n-    private volatile static ArrayList<ComponentEvent> events =\n-        new ArrayList<>();\n+    private volatile static java.util.List<ComponentEvent> events =\n+        Collections.synchronizedList(new ArrayList<ComponentEvent>());\n@@ -140,1 +141,0 @@\n-            robot.delay(DELAY);\n@@ -142,0 +142,2 @@\n+            robot.delay(DELAY);\n+\n@@ -164,1 +166,0 @@\n-        \/\/ Hide all components and check if the ComponentEvent is triggered\n@@ -166,1 +167,3 @@\n-            doTestForComponent(i);\n+            for (boolean state : new boolean[] { true, false }) {\n+                doTest(i, state);\n+            }\n@@ -179,6 +182,1 @@\n-            System.err.print(\"Events triggered are: \");\n-            for (int j = 0; j < events.size();\n-                System.err.print(events.get(j) + \"; \"), j++);\n-            System.err.println();\n-            throw new RuntimeException(\n-                \"FAIL: ComponentEvent triggered when frame is iconified\");\n+            printErrEvents(\"ComponentEvent triggered when frame is iconified\");\n@@ -194,6 +192,1 @@\n-            System.err.print(\"Events triggered are: \");\n-            for (int j = 0; j < events.size();\n-                System.err.print(events.get(j) + \"; \"), j++);\n-            System.err.println();\n-            throw new RuntimeException(\n-                \"FAIL: ComponentEvent triggered when frame is set to normal state\");\n+            printErrEvents(\"ComponentEvent triggered when frame set to normal\");\n@@ -203,1 +196,10 @@\n-    private static void doTestForComponent(int i)\n+    private static void printErrEvents(String errorMsg) {\n+        System.err.print(\"Events triggered are: \");\n+        for (int j = 0; j < events.size(); j++) {\n+            System.err.print(events.get(j) + \"; \");\n+        }\n+        System.err.println();\n+        throw new RuntimeException(\"FAIL: \" + errorMsg);\n+    }\n+\n+    private static void doTest(int i, boolean enable)\n@@ -205,0 +207,1 @@\n+\n@@ -207,0 +210,7 @@\n+        EventQueue.invokeAndWait(() -> {\n+            currentComponent.setEnabled(enable);\n+            revalidateFrame();\n+        });\n+\n+        robot.delay(DELAY);\n+\n@@ -210,1 +220,1 @@\n-            resetFrame();\n+            revalidateFrame();\n@@ -215,3 +225,2 @@\n-            throw new RuntimeException(\n-                \"FAIL: ComponentHidden not triggered for \"\n-                    + currentComponent.getClass());\n+            throw new RuntimeException(\"FAIL: ComponentHidden not triggered for\"\n+                + components[i].getClass());\n@@ -223,1 +232,1 @@\n-            resetFrame();\n+            revalidateFrame();\n@@ -228,3 +237,3 @@\n-            throw new RuntimeException(\n-                \"FAIL: ComponentHidden triggered when setVisible(false) \"\n-                    + \"called for a hidden \" + components[i].getClass());\n+            throw new RuntimeException(\"FAIL: ComponentHidden triggered when \"\n+                + \"setVisible(false) called for a hidden \"\n+                + components[i].getClass());\n@@ -236,1 +245,1 @@\n-            resetFrame();\n+            revalidateFrame();\n@@ -248,1 +257,1 @@\n-            resetFrame();\n+            revalidateFrame();\n@@ -253,3 +262,3 @@\n-            throw new RuntimeException(\n-                \"FAIL: ComponentShown triggered when setVisible(true) \"\n-                    + \"called for a shown \" + components[i].getClass());\n+            throw new RuntimeException(\"FAIL: ComponentShown triggered when \"\n+                + \"setVisible(true) called for a shown \"\n+                + components[i].getClass());\n@@ -262,1 +271,1 @@\n-            resetFrame();\n+            revalidateFrame();\n@@ -275,1 +284,1 @@\n-            resetFrame();\n+            revalidateFrame();\n@@ -280,79 +289,2 @@\n-            throw new RuntimeException(\n-                \"FAIL: ComponentResized not triggered for \"\n-                    + components[i].getClass());\n-        }\n-\n-        \/\/ Disable the components and do the same set of operations\n-\n-        EventQueue.invokeAndWait(() -> {\n-            currentComponent.setEnabled(false);\n-            resetFrame();\n-        });\n-        robot.delay(DELAY);\n-\n-        resetValues();\n-        EventQueue.invokeAndWait(() -> {\n-            currentComponent.setVisible(false);\n-            resetFrame();\n-        });\n-\n-        robot.delay(DELAY);\n-        if (!componentHidden) {\n-            throw new RuntimeException(\n-                \"FAIL: ComponentHidden not triggered for disabled \"\n-                    + components[i].getClass());\n-        }\n-\n-        resetValues();\n-        EventQueue.invokeAndWait(() -> {\n-            currentComponent.setVisible(false);\n-            resetFrame();\n-        });\n-\n-        robot.delay(DELAY);\n-        if (componentHidden) {\n-            throw new RuntimeException(\n-                \"FAIL: ComponentHidden triggered when setVisible(false) \"\n-                    + \"called for a hidden disabled \"\n-                    + components[i].getClass());\n-        }\n-\n-        resetValues();\n-        EventQueue.invokeAndWait(() -> {\n-            currentComponent.setVisible(true);\n-            resetFrame();\n-        });\n-\n-        robot.delay(DELAY);\n-        if (!componentShown) {\n-            throw new RuntimeException(\n-                \"FAIL: ComponentShown not triggered for disabled \"\n-                    + components[i].getClass());\n-        }\n-\n-        resetValues();\n-        EventQueue.invokeAndWait(() -> {\n-            currentComponent.setVisible(true);\n-            resetFrame();\n-        });\n-\n-        robot.delay(DELAY);\n-        if (componentShown) {\n-            throw new RuntimeException(\n-                \"FAIL: ComponentShown triggered when setVisible(true) \"\n-                    + \"called for a shown disabled \"\n-                    + components[i].getClass());\n-        }\n-\n-        resetValues();\n-        EventQueue.invokeAndWait(() -> {\n-            currentComponent.setLocation(currentComponent.getLocation().x - 1,\n-                currentComponent.getLocation().y);\n-            resetFrame();\n-        });\n-\n-        robot.delay(DELAY);\n-        if (!componentMoved) {\n-            throw new RuntimeException(\n-                \"FAIL: ComponentMoved not triggered for disabled \"\n-                    + components[i].getClass());\n+            throw new RuntimeException(\"FAIL: ComponentResized not triggered \"\n+                + \"when size increase for \" + components[i].getClass());\n@@ -365,1 +297,1 @@\n-            resetFrame();\n+            revalidateFrame();\n@@ -370,3 +302,2 @@\n-            throw new RuntimeException(\n-                \"FAIL: ComponentResized not triggered for disabled \"\n-                    + components[i].getClass());\n+            throw new RuntimeException(\"FAIL: ComponentResized not triggered \"\n+                + \"when size decrease for \" + components[i].getClass());\n@@ -374,1 +305,0 @@\n-\n@@ -377,1 +307,1 @@\n-    private static void resetFrame() {\n+    private static void revalidateFrame() {\n","filename":"test\/jdk\/java\/awt\/event\/ComponentEvent\/ComponentEventTest.java","additions":54,"deletions":124,"binary":false,"changes":178,"status":"modified"}]}