{"files":[{"patch":"@@ -3629,1 +3629,1 @@\n-      VMError::controlled_crash(ErrorHandlerTest);\n+      VMError::controlled_crash(ErrorHandlerTest, ErrorHandlerTestDelay);\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -507,0 +507,5 @@\n+  develop(int, ErrorHandlerTestDelay, 0,                                    \\\n+          \"If ErrorHandlerTest > 0, delay, in ms, after which the JVM is\"   \\\n+          \"ended abnormally.\")                                              \\\n+          range(0, 60000)                                                   \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+#include \"runtime\/task.hpp\"\n@@ -67,0 +68,1 @@\n+#include \"utilities\/deferredStatic.hpp\"\n@@ -236,1 +238,1 @@\n-  controlled_crash(14);\n+  controlled_crash(14, 0);\n@@ -694,1 +696,1 @@\n-    controlled_crash(TestCrashInErrorHandler);\n+    controlled_crash(TestCrashInErrorHandler, 0);\n@@ -699,1 +701,1 @@\n-    controlled_crash(TestCrashInErrorHandler);\n+    controlled_crash(TestCrashInErrorHandler, 0);\n@@ -706,1 +708,1 @@\n-    controlled_crash(14);\n+    controlled_crash(14, 0);\n@@ -2119,0 +2121,13 @@\n+class DelayedCrashTask: public PeriodicTask {\n+  const int _how;\n+public:\n+  DelayedCrashTask(int how, int delay) :\n+    PeriodicTask(delay), _how(how) {\n+    enroll();\n+  }\n+  void task() override {\n+    VMError::controlled_crash(_how, 0);\n+  }\n+};\n+DeferredStatic<DelayedCrashTask> g_delayed_crash_task;\n+\n@@ -2124,1 +2139,6 @@\n-void VMError::controlled_crash(int how) {\n+void VMError::controlled_crash(int how, int delay) {\n+\n+  if (delay > 0) {\n+    g_delayed_crash_task.initialize(how, delay);\n+    return;\n+  }\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":25,"deletions":5,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -204,1 +204,1 @@\n-  DEBUG_ONLY(static void controlled_crash(int how);)\n+  DEBUG_ONLY(static void controlled_crash(int how, int delay);)\n","filename":"src\/hotspot\/share\/utilities\/vmError.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,0 +48,5 @@\n+        if (args.length > 0 && args[0].equals(\"sleep\")) {\n+            Thread.sleep(20000);\n+            throw new RuntimeException(\"Was not killed?\");\n+        }\n+\n@@ -50,2 +55,2 @@\n-            \"-XX:ErrorHandlerTest=2\",\n-            \"-version\");\n+            \"-XX:ErrorHandlerTest=2\", \"-XX:ErrorHandlerTestDelay=1000\",\n+            ShowEventsOnCrashTest.class.getName(), \"sleep\");\n@@ -66,0 +71,1 @@\n+            Pattern.compile(\".*Loaded shared library.*java.*\"),\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ShowEventsOnCrashTest.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"}]}