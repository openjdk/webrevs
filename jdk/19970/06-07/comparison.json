{"files":[{"patch":"@@ -2780,2 +2780,2 @@\n-  PhaseGVN* _phase;\n-  StoreNode* _store;\n+  PhaseGVN* const _phase;\n+  StoreNode* const _store;\n@@ -2881,1 +2881,1 @@\n-  NOT_PRODUCT( if(is_trace_basic()) { tty->print(\"[TraceMergeStores] MergePrimitiveStores::run: \"); _store->dump(); })\n+  NOT_PRODUCT( if (is_trace_basic()) { tty->print(\"[TraceMergeStores] MergePrimitiveStores::run: \"); _store->dump(); })\n@@ -2886,1 +2886,1 @@\n-  NOT_PRODUCT( if(is_trace_basic()) { tty->print(\"[TraceMergeStores] expect no use: \"); status_use.print_on(tty); })\n+  NOT_PRODUCT( if (is_trace_basic()) { tty->print(\"[TraceMergeStores] expect no use: \"); status_use.print_on(tty); })\n@@ -2893,1 +2893,1 @@\n-  NOT_PRODUCT( if(is_trace_basic()) { tty->print(\"[TraceMergeStores] expect def: \"); status_def.print_on(tty); })\n+  NOT_PRODUCT( if (is_trace_basic()) { tty->print(\"[TraceMergeStores] expect def: \"); status_def.print_on(tty); })\n@@ -2907,1 +2907,1 @@\n-  NOT_PRODUCT( if(is_trace_success()) { trace(merge_list, merged_input_value, merged_store); } )\n+  NOT_PRODUCT( if (is_trace_success()) { trace(merge_list, merged_input_value, merged_store); } )\n@@ -3143,1 +3143,1 @@\n-    NOT_PRODUCT( if(is_trace_basic()) { tty->print(\"[TraceMergeStores] find def: \"); status.print_on(tty); })\n+    NOT_PRODUCT( if (is_trace_basic()) { tty->print(\"[TraceMergeStores] find def: \"); status.print_on(tty); })\n@@ -3151,1 +3151,1 @@\n-        NOT_PRODUCT( if(is_trace_basic()) { tty->print_cr(\"[TraceMergeStores] found RangeCheck, stop traversal.\"); })\n+        NOT_PRODUCT( if (is_trace_basic()) { tty->print_cr(\"[TraceMergeStores] found RangeCheck, stop traversal.\"); })\n@@ -3157,1 +3157,1 @@\n-  NOT_PRODUCT( if(is_trace_basic()) { tty->print_cr(\"[TraceMergeStores] found:\"); merge_list.dump(); })\n+  NOT_PRODUCT( if (is_trace_basic()) { tty->print_cr(\"[TraceMergeStores] found:\"); merge_list.dump(); })\n@@ -3164,1 +3164,1 @@\n-  NOT_PRODUCT( if(is_trace_basic()) { tty->print_cr(\"[TraceMergeStores] truncated:\"); merge_list.dump(); })\n+  NOT_PRODUCT( if (is_trace_basic()) { tty->print_cr(\"[TraceMergeStores] truncated:\"); merge_list.dump(); })\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-\/\/   Example1: byte array access:\n+\/\/   Example 1: byte array access:\n@@ -63,2 +63,2 @@\n-\/\/     pointer =           array_base + ARRAY_INT_BASE_OFFSET + 4 * 5 + 4       * j          + 4       * 3 * j\n-\/\/             = 1       * array_base + ARRAY_INT_BASE_OFFSET + 20    + 4       * j          + 12      * j\n+\/\/     pointer =           array_base + ARRAY_INT_BASE_OFFSET + 4 * 5 + 4       * i          + 4       * 3 * j\n+\/\/             = 1       * array_base + ARRAY_INT_BASE_OFFSET + 20    + 4       * i          + 12      * j\n@@ -75,0 +75,1 @@\n+\/\/               --------------------   ---------------------   --------------------\n@@ -85,0 +86,1 @@\n+\/\/               --------------------   ---   --------------------\n@@ -119,2 +121,2 @@\n-\/\/     pointer =           array_base + ARRAY_INT_BASE_OFFSET + 4 * 5 + 4       * j          + 4       * j * k\n-\/\/             = 1       * array_base + ARRAY_INT_BASE_OFFSET + 20    + 4       * j          + 4       * j * k\n+\/\/     pointer =           array_base + ARRAY_INT_BASE_OFFSET + 4 * 5 + 4       * i          + 4       * j * k\n+\/\/             = 1       * array_base + ARRAY_INT_BASE_OFFSET + 20    + 4       * i          + 4       * j * k\n@@ -143,1 +145,1 @@\n-\/\/   When the pointer is parsed, it is decomposed into sum of summands plus a constant:\n+\/\/   When the pointer is parsed, it is decomposed into a SUM of summands plus a constant:\n@@ -145,1 +147,1 @@\n-\/\/     pointer = sum(summands) + con\n+\/\/     pointer = SUM(summands) + con\n@@ -153,1 +155,1 @@\n-\/\/     pointer = sum_i(scale_i * variable_i) + con\n+\/\/     pointer = SUM(scale_i * variable_i) + con\n@@ -157,1 +159,1 @@\n-\/\/   On 64bit systems, this decomposed form is computed with long-add\/mul, on 32bit systems\n+\/\/   On 64-bit systems, this decomposed form is computed with long-add\/mul, on 32-bit systems\n@@ -164,2 +166,2 @@\n-\/\/     pointer1 = sum(summands) + con1\n-\/\/     pointer2 = sum(summands) + con2\n+\/\/     pointer1 = SUM(summands) + con1\n+\/\/     pointer2 = SUM(summands) + con2\n@@ -184,2 +186,3 @@\n-\/\/     At first, computing aliasing is difficult because the distance is hidden inside the\n-\/\/     ConvI2L. we can convert this (with array_int_base_offset = 16) into these decomposed forms:\n+\/\/     At first, computing the aliasing is not immediately straight-forward in the general case because \n+\/\/     the distance is hidden inside the ConvI2L. We can convert this (with array_int_base_offset = 16) \n+\/\/     into these decomposed forms:\n@@ -200,1 +203,1 @@\n-\/\/   We have to be careful on 64bit systems with ConvI2L: decomposing its input is not\n+\/\/   We have to be careful on 64-bit systems with ConvI2L: decomposing its input is not\n@@ -222,1 +225,1 @@\n-\/\/      mp_i     = con + summand                     + sum(other_summands)\n+\/\/      mp_i     = con + summand                     + SUM(other_summands)\n@@ -224,2 +227,2 @@\n-\/\/      mp_{i+1} = con + dec_con + sum(dec_summands) + sum(other_summands)\n-\/\/               = new_con + sum(new_summands)\n+\/\/      mp_{i+1} = con + dec_con + SUM(dec_summands) + SUM(other_summands)\n+\/\/               = new_con + SUM(new_summands)\n@@ -250,1 +253,1 @@\n-\/\/    Then the ponter difference between p1 and p2 is identical to the difference between\n+\/\/    Then the pointer difference between p1 and p2 is identical to the difference between\n@@ -267,1 +270,1 @@\n-\/\/      the trivial decompoisition:\n+\/\/      the trivial decomposition:\n@@ -303,0 +306,2 @@\n+\/\/      where\n+\/\/        x = x1 - x2\n@@ -314,0 +319,1 @@\n+\/\/                        -- apply array_element_size_in_bytes > 0 --\n","filename":"src\/hotspot\/share\/opto\/mempointer.hpp","additions":25,"deletions":19,"binary":false,"changes":44,"status":"modified"}]}