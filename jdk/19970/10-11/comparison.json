{"files":[{"patch":"@@ -48,1 +48,1 @@\n-  \/\/ Check for constant overflow.\n+  \/\/ Bail out if there is a constant overflow.\n@@ -58,1 +58,1 @@\n-    MemPointerSummand summand = _summands.at(pos_get++);\n+    const MemPointerSummand& summand = _summands.at(pos_get++);\n@@ -303,2 +303,3 @@\n-\/\/   We assume that both pointers are in-bounds of their respective memory object.\n-\/\/\n+\/\/   We assume that both pointers are in-bounds of their respective memory object. If this does\n+\/\/   not hold, for example, with the use of Unsafe, then we would already have undefined behavior,\n+\/\/   and we are allowed to do anything.\n","filename":"src\/hotspot\/share\/opto\/mempointer.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -39,1 +39,3 @@\n-\/\/     pointer = sum_i(scale_i * variable_i) + con\n+\/\/     pointer = SUM(scale_i * variable_i) + con\n+\/\/\n+\/\/   where SUM() adds all \"scale_i * variable_i\" for each i together.\n@@ -404,0 +406,1 @@\n+\/\/ where variable is a C2 node.\n@@ -458,1 +461,1 @@\n-\/\/   pointer = sum(summands) + con\n+\/\/   pointer = SUM(summands) + con\n","filename":"src\/hotspot\/share\/opto\/mempointer.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}