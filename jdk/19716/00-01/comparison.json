{"files":[{"patch":"@@ -6084,3 +6084,3 @@\n-\/\/ true if CFG node d dominates CFG node n\n-bool PhaseIdealLoop::is_dominator(Node *d, Node *n) {\n-  if (d == n)\n+\/\/ Is CFG node 'dominator' dominating node 'n'?\n+bool PhaseIdealLoop::is_dominator(Node* dominator, Node* n) {\n+  if (dominator == n) {\n@@ -6088,2 +6088,3 @@\n-  assert(d->is_CFG() && n->is_CFG(), \"must have CFG nodes\");\n-  uint dd = dom_depth(d);\n+  }\n+  assert(dominator->is_CFG() && n->is_CFG(), \"must have CFG nodes\");\n+  uint dd = dom_depth(dominator);\n@@ -6091,1 +6092,1 @@\n-    if (n == d)\n+    if (n == dominator) {\n@@ -6093,0 +6094,1 @@\n+    }\n@@ -6098,0 +6100,5 @@\n+\/\/ Is CFG node 'dominator' strictly dominating node 'n'?\n+bool PhaseIdealLoop::is_strict_dominator(Node* dominator, Node* n) {\n+  return dominator != n && is_dominator(dominator, n);\n+}\n+\n@@ -6385,1 +6392,1 @@\n-      if (is_dominator(next_predicate_entry, early) && next_predicate_entry != early) {\n+      if (is_strict_dominator(next_predicate_entry, early)) {\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1014,2 +1014,4 @@\n-  \/\/ true if CFG node d dominates CFG node n\n-  bool is_dominator(Node *d, Node *n);\n+\n+  bool is_dominator(Node* dominator, Node* n);\n+  bool is_strict_dominator(Node* dominator, Node* n);\n+\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4297,1 +4297,1 @@\n-    assert(!is_dominator(c, region) || c == region, \"shouldn't go above region\");\n+    assert(!is_strict_dominator(c, region), \"shouldn't go above region\");\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}