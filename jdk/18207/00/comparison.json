{"files":[{"patch":"@@ -52,1 +52,2 @@\n-            ClassLoader cl = ClassUnloadCommon.newClassLoader();\n+            String classPath = args[0];\n+            ClassLoader cl = ClassUnloadCommon.newClassLoader(classPath);\n@@ -73,0 +74,2 @@\n+        String classPath = System.getProperty(\"test.class.path\", \".\");\n+\n@@ -76,1 +79,1 @@\n-                           \"-XX:+WhiteBoxAPI\", \"-XX:+ClassUnloading\", ClassUnloadTestMain.class.getName());\n+                           \"-XX:+WhiteBoxAPI\", \"-XX:+ClassUnloading\", ClassUnloadTestMain.class.getName(), classPath);\n@@ -89,1 +92,1 @@\n-        checkFor(output, \"[class,unload]\", \"unloading class\");\n+        checkFor(output, \"[class,unload]\", \"unloading class test.Empty\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassLoadUnloadTest.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -76,0 +76,8 @@\n+        return newClassLoader(cp);\n+    }\n+\n+    \/**\n+     * Creates a class loader that loads classes from the provided class path\n+     * before delegating to the system class loader.\n+     *\/\n+    public static ClassLoader newClassLoader(String cp) {\n","filename":"test\/lib\/jdk\/test\/lib\/classloader\/ClassUnloadCommon.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}