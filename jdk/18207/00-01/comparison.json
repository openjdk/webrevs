{"files":[{"patch":"@@ -52,2 +52,1 @@\n-            String classPath = args[0];\n-            ClassLoader cl = ClassUnloadCommon.newClassLoader(classPath);\n+            ClassLoader cl = ClassUnloadCommon.newClassLoader();\n@@ -76,0 +75,1 @@\n+        \/\/ Sub-process does not get all the properties automatically, so the test class path needs to be passed explicitly\n@@ -79,2 +79,2 @@\n-                           \"-XX:+WhiteBoxAPI\", \"-XX:+ClassUnloading\", ClassUnloadTestMain.class.getName(), classPath);\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(argsList);\n+                           \"-XX:+WhiteBoxAPI\", \"-XX:+ClassUnloading\", \"-Dtest.class.path=\" + classPath, ClassUnloadTestMain.class.getName());\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(argsList);\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassLoadUnloadTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import jdk.test.whitebox.WhiteBox;\n-\n@@ -43,0 +41,2 @@\n+import jdk.test.whitebox.WhiteBox;\n+\n@@ -76,8 +76,0 @@\n-        return newClassLoader(cp);\n-    }\n-\n-    \/**\n-     * Creates a class loader that loads classes from the provided class path\n-     * before delegating to the system class loader.\n-     *\/\n-    public static ClassLoader newClassLoader(String cp) {\n","filename":"test\/lib\/jdk\/test\/lib\/classloader\/ClassUnloadCommon.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"}]}