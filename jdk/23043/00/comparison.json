{"files":[{"patch":"@@ -34,1 +34,7 @@\n-  return (_obj == nullptr) ? (oop)nullptr : NativeAccess<>::oop_load(_obj);\n+  if (_obj == nullptr) {\n+    return (oop) nullptr;\n+  } else {\n+    oop oop = NativeAccess<>::oop_load(_obj);\n+    assert(oopDesc::is_oop_or_null(oop), \"Should be oop: \" PTR_FORMAT, p2i(oop));\n+    return oop;\n+  }\n@@ -38,1 +44,7 @@\n-  return (_obj == nullptr) ? (oop)nullptr : NativeAccess<AS_NO_KEEPALIVE>::oop_load(_obj);\n+  if (_obj == nullptr) {\n+    return (oop) nullptr;\n+  } else {\n+    oop obj = NativeAccess<AS_NO_KEEPALIVE>::oop_load(_obj);\n+    assert(oopDesc::is_oop_or_null(obj), \"Should be oop: \" PTR_FORMAT, p2i(obj));\n+    return obj;\n+  }\n@@ -47,0 +59,1 @@\n+  assert(oopDesc::is_oop_or_null(obj), \"Should be oop: \" PTR_FORMAT, p2i(obj));\n@@ -61,0 +74,1 @@\n+  assert(oopDesc::is_oop_or_null(obj), \"Should be oop: \" PTR_FORMAT, p2i(obj));\n@@ -65,1 +79,4 @@\n-  return NativeAccess<MO_SEQ_CST>::oop_atomic_xchg(_obj, new_value);\n+  assert(oopDesc::is_oop_or_null(new_value), \"Should be oop: \" PTR_FORMAT, p2i(new_value));\n+  oop obj = NativeAccess<MO_SEQ_CST>::oop_atomic_xchg(_obj, new_value);\n+  assert(oopDesc::is_oop_or_null(obj), \"Should be oop: \" PTR_FORMAT, p2i(obj));\n+  return obj;\n@@ -69,1 +86,4 @@\n-  return NativeAccess<MO_SEQ_CST>::oop_atomic_cmpxchg(_obj, old_value, new_value);\n+  assert(oopDesc::is_oop_or_null(new_value), \"Should be oop: \" PTR_FORMAT, p2i(new_value));\n+  oop obj = NativeAccess<MO_SEQ_CST>::oop_atomic_cmpxchg(_obj, old_value, new_value);\n+  assert(oopDesc::is_oop_or_null(obj), \"Should be oop: \" PTR_FORMAT, p2i(obj));\n+  return obj;\n","filename":"src\/hotspot\/share\/oops\/oopHandle.inline.hpp","additions":24,"deletions":4,"binary":false,"changes":28,"status":"modified"}]}