{"files":[{"patch":"@@ -576,2 +576,1 @@\n-    MutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-    NoSafepointVerifier no_safepoint;\n+    NoSafepointMutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n@@ -604,2 +603,1 @@\n-    MutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-    NoSafepointVerifier no_safepoint;\n+    NoSafepointMutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -598,2 +598,1 @@\n-    MutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-    NoSafepointVerifier no_safepoint;\n+    NoSafepointMutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeTracer.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -553,2 +553,1 @@\n-    MutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-    NoSafepointVerifier no_safepoint;\n+    NoSafepointMutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -61,2 +61,1 @@\n-  MutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-  NoSafepointVerifier no_safepoint;\n+  NoSafepointMutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrMethodData.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1894,2 +1894,1 @@\n-  MutexLocker mu(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-  NoSafepointVerifier no_safepoint;\n+  NoSafepointMutexLocker mu(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1854,2 +1854,1 @@\n-  MutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-  NoSafepointVerifier no_safepoint;\n+  NoSafepointMutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n@@ -1868,2 +1867,1 @@\n-  MutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-  NoSafepointVerifier no_safepoint;\n+  NoSafepointMutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2316,2 +2316,1 @@\n-                                                   MutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-                                                   NoSafepointVerifier no_safepoint;\n+                                                   NoSafepointMutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n@@ -2328,2 +2327,1 @@\n-                                                   MutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-                                                   NoSafepointVerifier no_safepoint;\n+                                                   NoSafepointMutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/oops\/methodData.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1801,2 +1801,1 @@\n-    MutexLocker ml(imm_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-    NoSafepointVerifier no_safepoint;\n+    NoSafepointMutexLocker ml(imm_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n@@ -2113,2 +2112,1 @@\n-      MutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-      NoSafepointVerifier no_safepoint;\n+      NoSafepointMutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n@@ -2332,1 +2330,1 @@\n-    ConditionalMutexLocker ml((trap_mdo != nullptr) ? trap_mdo->extra_data_lock() : nullptr,\n+    NoSafepointMutexLocker ml((trap_mdo != nullptr) ? trap_mdo->extra_data_lock() : nullptr,\n@@ -2335,1 +2333,0 @@\n-    NoSafepointVerifier no_safepoint;\n@@ -2584,2 +2581,1 @@\n-  MutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-  NoSafepointVerifier no_safepoint;\n+  NoSafepointMutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"runtime\/safepointVerifiers.hpp\"\n@@ -257,0 +258,14 @@\n+\/\/ Mutex locker with NoSafePointVerifyer\n+\/\/ At Safepoints locks can be broken. The verifier checks that there is no Safepoint in the scope\n+\/\/ where the lock is held, and therefore the lock is not broken.\n+class NoSafepointMutexLocker : public StackObj {\n+  NoSafepointVerifier _nsv;\n+  ConditionalMutexLocker _ml;\n+\n+public:\n+  NoSafepointMutexLocker(Mutex* mutex, bool condition, Mutex::SafepointCheckFlag flag = Mutex::_safepoint_check_flag) :\n+    _ml(mutex, condition, flag) {}\n+  NoSafepointMutexLocker(Mutex* mutex, Mutex::SafepointCheckFlag flag = Mutex::_safepoint_check_flag) :\n+    NoSafepointMutexLocker(mutex, true, flag) {}\n+};\n+\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -620,2 +620,1 @@\n-        MutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n-        NoSafepointVerifier no_safepoint;\n+        NoSafepointMutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}