{"files":[{"patch":"@@ -580,1 +580,1 @@\n-    NoSafepointMutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+    MutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n@@ -607,1 +607,1 @@\n-    NoSafepointMutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+    MutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -598,1 +598,1 @@\n-    NoSafepointMutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+    MutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeTracer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -553,1 +553,1 @@\n-    NoSafepointMutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+    MutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-  NoSafepointMutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+  MutexLocker ml(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrMethodData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1894,1 +1894,1 @@\n-  NoSafepointMutexLocker mu(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+  MutexLocker mu(mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1854,1 +1854,1 @@\n-  NoSafepointMutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+  MutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n@@ -1867,1 +1867,1 @@\n-  NoSafepointMutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+  MutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2316,1 +2316,1 @@\n-                                                   NoSafepointMutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+                                                   MutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n@@ -2327,1 +2327,1 @@\n-                                                   NoSafepointMutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+                                                   MutexLocker ml(extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/oops\/methodData.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1801,1 +1801,1 @@\n-    NoSafepointMutexLocker ml(imm_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+    MutexLocker ml(imm_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n@@ -2112,1 +2112,1 @@\n-      NoSafepointMutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+      MutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n@@ -2330,1 +2330,1 @@\n-    NoSafepointMutexLocker ml((trap_mdo != nullptr) ? trap_mdo->extra_data_lock() : nullptr,\n+    ConditionalMutexLocker ml((trap_mdo != nullptr) ? trap_mdo->extra_data_lock() : nullptr,\n@@ -2581,1 +2581,1 @@\n-  NoSafepointMutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+  MutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -258,14 +258,0 @@\n-\/\/ Mutex locker with NoSafePointVerifyer\n-\/\/ At Safepoints locks can be broken. The verifier checks that there is no Safepoint in the scope\n-\/\/ where the lock is held, and therefore the lock is not broken.\n-class NoSafepointMutexLocker : public StackObj {\n-  NoSafepointVerifier _nsv;\n-  ConditionalMutexLocker _ml;\n-\n-public:\n-  NoSafepointMutexLocker(Mutex* mutex, bool condition, Mutex::SafepointCheckFlag flag = Mutex::_safepoint_check_flag) :\n-    _ml(mutex, condition, flag) {}\n-  NoSafepointMutexLocker(Mutex* mutex, Mutex::SafepointCheckFlag flag = Mutex::_safepoint_check_flag) :\n-    NoSafepointMutexLocker(mutex, true, flag) {}\n-};\n-\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -620,1 +620,1 @@\n-        NoSafepointMutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n+        MutexLocker ml(trap_mdo->extra_data_lock(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}