{"files":[{"patch":"@@ -31,2 +31,2 @@\n- * @run main\/othervm CloseKeepAliveCached false\n- * @run main\/othervm CloseKeepAliveCached true\n+ * @run main\/othervm -Dtest.separateThreads=true CloseKeepAliveCached false\n+ * @run main\/othervm -Dtest.separateThreads=true CloseKeepAliveCached true\n@@ -42,4 +42,15 @@\n-import java.net.*;\n-import java.util.*;\n-import java.io.*;\n-import javax.net.ssl.*;\n+import java.io.BufferedOutputStream;\n+import java.io.BufferedReader;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.PrintStream;\n+import java.net.URI;\n+import java.net.URL;\n+import javax.net.ssl.HostnameVerifier;\n+import javax.net.ssl.HttpsURLConnection;\n+import javax.net.ssl.SSLServerSocket;\n+import javax.net.ssl.SSLServerSocketFactory;\n+import javax.net.ssl.SSLSession;\n+import javax.net.ssl.SSLSocket;\n@@ -61,1 +72,1 @@\n-    static boolean separateServerThread = true;\n+    static boolean separateServerThread = Boolean.getBoolean(\"test.separateThreads\");\n@@ -85,1 +96,1 @@\n-        SSLServerSocketFactory sslssf =\n+        SSLServerSocketFactory sslSsf =\n@@ -88,1 +99,1 @@\n-                (SSLServerSocket) sslssf.createServerSocket(serverPort);\n+                (SSLServerSocket) sslSsf.createServerSocket(serverPort);\n@@ -109,1 +120,1 @@\n-                if (x.length() == 0) {\n+                if (x.isEmpty()) {\n@@ -147,1 +158,1 @@\n-            HttpsURLConnection http = null;\n+            HttpsURLConnection http;\n@@ -150,1 +161,1 @@\n-            URL url = new URL(\"https:\/\/localhost:\" + serverPort+\"\/\");\n+            URL url = new URI(\"https:\/\/localhost:\" + serverPort + \"\/\").toURL();\n@@ -152,3 +163,3 @@\n-            http = (HttpsURLConnection)url.openConnection();\n-            InputStream is = http.getInputStream ();\n-            while (is.read() != -1);\n+            http = (HttpsURLConnection) url.openConnection();\n+            InputStream is = http.getInputStream();\n+            while (is.read() != -1) ;\n@@ -157,4 +168,4 @@\n-            url = new URL(\"https:\/\/localhost:\" + serverPort+\"\/\");\n-            http = (HttpsURLConnection)url.openConnection();\n-            is = http.getInputStream ();\n-            while (is.read() != -1);\n+            url = new URI(\"https:\/\/localhost:\" + serverPort + \"\/\").toURL();\n+            http = (HttpsURLConnection) url.openConnection();\n+            is = http.getInputStream();\n+            while (is.read() != -1) ;\n@@ -164,1 +175,1 @@\n-            \/\/ wanna close the keep-alive cached connection immediately\n+            \/\/ want to close the keep-alive cached connection immediately\n@@ -174,1 +185,0 @@\n-            \/\/ Thread.sleep(5000);\n@@ -176,1 +186,1 @@\n-            if (sslServerSocket != null)\n+            if (sslServerSocket != null) {\n@@ -178,0 +188,1 @@\n+            }\n@@ -201,1 +212,1 @@\n-    public static void main(String args[]) throws Exception {\n+    public static void main(String[] args) throws Exception {\n@@ -207,1 +218,1 @@\n-                        \"\/\" + keyStoreFile;\n+                \"\/\" + keyStoreFile;\n@@ -210,1 +221,1 @@\n-                        \"\/\" + trustStoreFile;\n+                \"\/\" + trustStoreFile;\n@@ -242,1 +253,1 @@\n-        for (final var line : errorCapture.toString().split(\"\\n\")) {\n+        for (final String line : errorCapture.toString().split(\"\\n\")) {\n@@ -244,1 +255,1 @@\n-                    line.contains(\"MainThread\")) {\n+                line.contains(\"MainThread\")) {\n@@ -252,1 +263,1 @@\n-                    line.contains(\"Keep-Alive-Timer\")) {\n+                       line.contains(\"Keep-Alive-Timer\")) {\n@@ -266,0 +277,1 @@\n+\n@@ -304,14 +316,12 @@\n-            serverThread = new Thread() {\n-                public void run() {\n-                    try {\n-                        doServerSide();\n-                    } catch (Exception e) {\n-                        \/*\n-                         * Our server thread just died.\n-                         *\n-                         * Release the client, if not active already...\n-                         *\/\n-                        System.err.println(\"Server died...\");\n-                        serverReady = true;\n-                        serverException = e;\n-                    }\n+            serverThread = new Thread(() -> {\n+                try {\n+                    doServerSide();\n+                } catch (Exception e) {\n+                    \/*\n+                     * Our server thread just died.\n+                     *\n+                     * Release the client, if not active already...\n+                     *\/\n+                    System.err.println(\"Server died...\");\n+                    serverReady = true;\n+                    serverException = e;\n@@ -319,1 +329,1 @@\n-            };\n+            });\n@@ -328,11 +338,9 @@\n-            clientThread = new Thread() {\n-                public void run() {\n-                    try {\n-                        doClientSide();\n-                    } catch (Exception e) {\n-                        \/*\n-                         * Our client thread just died.\n-                         *\/\n-                        System.err.println(\"Client died...\");\n-                        clientException = e;\n-                    }\n+            clientThread = new Thread(() -> {\n+                try {\n+                    doClientSide();\n+                } catch (Exception e) {\n+                    \/*\n+                     * Our client thread just died.\n+                     *\/\n+                    System.err.println(\"Client died...\");\n+                    clientException = e;\n@@ -340,1 +348,1 @@\n-            };\n+            });\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/CloseKeepAliveCached.java","additions":63,"deletions":55,"binary":false,"changes":118,"status":"modified"}]}