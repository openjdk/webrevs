{"files":[{"patch":"@@ -1,38 +0,0 @@\n-<!--\n- Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-Verify that Chinese full stop symbol can be entered in JTextArea with Pinyin input method (IM).\n-\n-This test is for OS X only. For other platforms please simply press \"Pass\".\n-\n-1. Go to \"System Preferences -> Keyboard -> Input Sources\" and add \"Pinyin – Traditional\" or \"Pinyin – Simplified\" IM from Chinese language group.\n-2. Set current IM to \"Pinyin\".\n-3. Set focus to the text area of the test and press \"dot\" character on the keyboard.\n-4. Set current IM to the IM used before \"Pinyin\" was set.\n-5. If \"。\" character is displayed in the text area, press \"Pass\", if \".\" character is displayed, press \"Fail\".\n-\n-<applet  code=\"bug8132503.class\" width=400 height=400><\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/im\/8132503\/bug8132503.html","additions":0,"deletions":38,"binary":false,"changes":38,"status":"deleted"},{"patch":"@@ -1,47 +0,0 @@\n-\/*\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/* @test\n-   @bug 8132503\n-   @summary [macosx] Chinese full stop symbol cannot be entered with Pinyin IM on OS X\n-   @author Anton Litvinov\n-   @run applet\/manual=yesno bug8132503.html\n- *\/\n-\n-import javax.swing.JApplet;\n-import javax.swing.JScrollPane;\n-import javax.swing.JTextArea;\n-import javax.swing.SwingUtilities;\n-\n-public class bug8132503 extends JApplet {\n-    @Override\n-    public void init() {\n-        SwingUtilities.invokeLater(new Runnable() {\n-            @Override\n-            public void run() {\n-                JTextArea textArea = new JTextArea(\"Text area of the test.\", 40, 40);\n-                add(new JScrollPane(textArea));\n-            }\n-        });\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/im\/8132503\/bug8132503.java","additions":0,"deletions":47,"binary":false,"changes":47,"status":"deleted"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JComponent;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+\n+import jtreg.SkippedException;\n+import sun.awt.OSInfo;\n+\n+\/*\n+ * @test\n+ * @bug 8132503\n+ * @summary [macosx] Chinese full stop symbol cannot be entered with Pinyin IM on OS X\n+ * @requires (os.family == \"mac\")\n+ * @modules java.desktop\/sun.awt\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame jtreg.SkippedException\n+ * @run main\/manual PinyinIMFullstopTest\n+ *\/\n+\n+public class PinyinIMFullstopTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This test is for OS X only. It verifies if Chinese full stop symbol can be entered\n+            in JTextField with Pinyin input method (IM)\n+\n+            Test settings:\n+            Go to \"System Preferences -> Keyboard -> Input Sources\" and\n+            add \"Pinyin – Traditional\" or \"Pinyin – Simplified\" IM from Chinese language group.\n+            Set current IM to \"Pinyin\".\n+\n+            1. Set focus to the text field below and press \"dot\" character\n+               on the keyboard.\n+            2. Now change the current IM to the IM used before \"Pinyin\" or to \"U.S\".\n+               Press dot character again.\n+            3. You should notice a difference in the dot. Pinyin IM should output\n+               \"。\" and the other IM should output \".\"\n+\n+            If above is true press \"PASS\", if normal fullstop \".\" character is displayed\n+            for Pinyin IM, press \"FAIL\".\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        if (OSInfo.getOSType() != OSInfo.OSType.MACOSX) {\n+            throw new SkippedException(\"This test is for MacOS only\");\n+        }\n+        PassFailJFrame.builder()\n+                      .title(\"Test Dot using Pinyin Input Method\")\n+                      .instructions(INSTRUCTIONS)\n+                      .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                      .columns(45)\n+                      .splitUIBottom(PinyinIMFullstopTest::createUI)\n+                      .testTimeOut(10)\n+                      .build()\n+                      .awaitAndCheck();\n+    }\n+\n+    private static JComponent createUI() {\n+        JPanel panel = new JPanel();\n+        JTextField input = new JTextField(20);\n+        panel.add(new JLabel(\"Text field:\"));\n+        panel.add(input);\n+        return panel;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/im\/PinyinIMFullstopTest.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"}]}