{"files":[{"patch":"@@ -426,0 +426,6 @@\n+  assert(!thread->is_in_VTMS_transition(), \"VTMS_transition sanity check\");\n+\n+  \/\/ Avoid using MonitorLocker on performance critical path, use\n+  \/\/ two-level synchronization with lock-free operations on counters.\n+  Atomic::inc(&_VTMS_transition_count); \/\/ Try to enter VTMS transition section optmistically.\n+  java_lang_Thread::set_is_in_VTMS_transition(vt, true);\n@@ -428,1 +434,0 @@\n-    assert(!thread->is_in_VTMS_transition(), \"VTMS_transition sanity check\");\n@@ -430,2 +435,0 @@\n-    java_lang_Thread::set_is_in_VTMS_transition(vt, true);\n-    Atomic::inc(&_VTMS_transition_count);\n@@ -438,5 +441,0 @@\n-  \/\/ Avoid using MonitorLocker on performance critical path, use\n-  \/\/ two-level synchronization with lock-free operations on counters.\n-  Atomic::inc(&_VTMS_transition_count); \/\/ Try to enter VTMS transition section optmistically.\n-  java_lang_Thread::set_is_in_VTMS_transition(vth(), true);\n-\n@@ -488,1 +486,0 @@\n-  assert(!thread->is_in_VTMS_transition(), \"VTMS_transition sanity check\");\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.cpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"}]}