{"files":[{"patch":"@@ -404,1 +404,1 @@\n-                handleFlowResults(compiler.flow(compiler.attribute(compiler.todo)), results);\n+                handleFlowResults(compiler.warn(compiler.flow(compiler.attribute(compiler.todo))), results);\n@@ -409,1 +409,1 @@\n-                        handleFlowResults(compiler.flow(compiler.attribute(env)), results);\n+                        handleFlowResults(compiler.warn(compiler.flow(compiler.attribute(env))), results);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/api\/JavacTaskImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug     8348212\n+ * @summary Ensure the warn() phase executes when the compiler is invoked via the API\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *\/\n+\n+import com.sun.tools.javac.api.JavacTaskImpl;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.PrintStream;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.util.List;\n+\n+import javax.tools.JavaCompiler;\n+import javax.tools.JavaFileObject;\n+import javax.tools.StandardJavaFileManager;\n+import javax.tools.ToolProvider;\n+\n+public class TestJavacTaskWithWarning {\n+\n+    static final JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();\n+    static final StandardJavaFileManager fm = compiler.getStandardFileManager(null, null, null);\n+\n+    public static void warningTest() throws Exception {\n+\n+        \/\/ Create a source file that will generate a warning\n+        String srcdir = System.getProperty(\"test.src\");\n+        File file = new File(srcdir, \"GeneratesWarning.java\");\n+        try (PrintStream out = new PrintStream(new FileOutputStream(file))) {\n+            out.print(\n+                \"\"\"\n+                public class GeneratesWarning {\n+                    public GeneratesWarning() {\n+                        hashCode();     \/\/ generates a \"this-escape\" warning\n+                    }\n+                }\n+                \"\"\");\n+        }\n+\n+        \/\/ Compile it using API\n+        Iterable<? extends JavaFileObject> files = fm.getJavaFileObjectsFromFiles(List.of(file));\n+        StringWriter buf = new StringWriter();\n+        List<String> options = List.of(\n+          \"-Xlint:this-escape\",\n+          \"-XDrawDiagnostics\"\n+        );\n+        JavacTaskImpl task = (JavacTaskImpl)compiler.getTask(new PrintWriter(buf), fm, null, options, null, files);\n+        task.analyze();\n+\n+        \/\/ Verify warning was generated\n+        if (!buf.toString().contains(\"compiler.warn.possible.this.escape\"))\n+            throw new AssertionError(\"warning not found in:\\n\" + buf);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            warningTest();\n+        } finally {\n+            fm.close();\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/api\/TestJavacTaskWithWarning.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}