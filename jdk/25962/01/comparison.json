{"files":[{"patch":"@@ -49,0 +49,6 @@\n+\/* Represents 0x7FFFFFFFFFFFFFFF double precision in lower 64 bits*\/\n+ATTRIBUTE_ALIGNED(16) static const juint _ABS_MASK[] =\n+{\n+    4294967295, 2147483647, 0, 0\n+};\n+\n@@ -191,2 +197,1 @@\n-  Label L_2TAG_PACKET_0_0_1, L_2TAG_PACKET_1_0_1, L_2TAG_PACKET_2_0_1, L_2TAG_PACKET_3_0_1;\n-  Label L_2TAG_PACKET_4_0_1, L_2TAG_PACKET_5_0_1, L_2TAG_PACKET_6_0_1;\n+  Label L_2TAG_PACKET_0_0_1, L_2TAG_PACKET_1_0_1, L_2TAG_PACKET_2_0_1;\n@@ -195,0 +200,1 @@\n+  address ABS_MASK        = (address)_ABS_MASK;\n@@ -211,2 +217,6 @@\n-  __ subq(rsp, 24);\n-  __ movsd(Address(rsp), xmm0);\n+  __ ucomisd(xmm0, ExternalAddress(ZERON), r11 \/*rscratch*\/);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_1_0_1); \/\/ Branch only if x is +\/- zero or NaN\n+  __ movq(xmm1, xmm0);\n+  __ andpd(xmm1, ExternalAddress(ABS_MASK), r11 \/*rscratch*\/);\n+  __ ucomisd(xmm1, ExternalAddress(INF), r11 \/*rscratch*\/);\n+  __ jcc(Assembler::equal, B1_4); \/\/ Branch only if x is +\/- INF\n@@ -231,2 +241,0 @@\n-  __ cmpl(rdx, 524032);\n-  __ jcc(Assembler::equal, L_2TAG_PACKET_1_0_1); \/\/ Branch only if |x| is INF or NaN\n@@ -300,2 +308,0 @@\n-  __ cmpl(rdx, 0);\n-  __ jcc(Assembler::equal, L_2TAG_PACKET_3_0_1); \/\/ Branch only if |x| is zero\n@@ -325,10 +331,0 @@\n-  __ bind(L_2TAG_PACKET_3_0_1);\n-  __ cmpq(r9, 0);\n-  __ jcc(Assembler::notEqual, L_2TAG_PACKET_4_0_1); \/\/ Branch only if x is negative zero\n-  __ xorpd(xmm0, xmm0);\n-  __ jmp(B1_4);\n-\n-  __ bind(L_2TAG_PACKET_4_0_1);\n-  __ movsd(xmm0, ExternalAddress(ZERON), r11 \/*rscratch*\/);\n-  __ jmp(B1_4);\n-\n@@ -336,19 +332,0 @@\n-  __ movl(rax, Address(rsp, 4));\n-  __ movl(rdx, Address(rsp));\n-  __ movl(rcx, rax);\n-  __ andl(rcx, 2147483647);\n-  __ cmpl(rcx, 2146435072);\n-  __ jcc(Assembler::above, L_2TAG_PACKET_5_0_1); \/\/ Branch only if |x| is NaN\n-  __ cmpl(rdx, 0);\n-  __ jcc(Assembler::notEqual, L_2TAG_PACKET_5_0_1); \/\/ Branch only if |x| is NaN\n-  __ cmpl(rax, 2146435072);\n-  __ jcc(Assembler::notEqual, L_2TAG_PACKET_6_0_1); \/\/ Branch only if x is negative INF\n-  __ movsd(xmm0, ExternalAddress(INF), r11 \/*rscratch*\/);\n-  __ jmp(B1_4);\n-\n-  __ bind(L_2TAG_PACKET_6_0_1);\n-  __ movsd(xmm0, ExternalAddress(NEG_INF), r11 \/*rscratch*\/);\n-  __ jmp(B1_4);\n-\n-  __ bind(L_2TAG_PACKET_5_0_1);\n-  __ movsd(xmm0, Address(rsp));\n@@ -356,1 +333,0 @@\n-  __ movq(Address(rsp, 8), xmm0);\n@@ -359,1 +335,0 @@\n-  __ addq(rsp, 24);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_cbrt.cpp","additions":14,"deletions":39,"binary":false,"changes":53,"status":"modified"}]}