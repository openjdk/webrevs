{"files":[{"patch":"@@ -34,0 +34,1 @@\n+import jdk.internal.util.ArraysSupport;\n@@ -453,1 +454,1 @@\n-        char[] cb = new char[TRANSFER_BUFFER_SIZE];\n+        char[] cb = new char[1024];\n@@ -455,3 +456,3 @@\n-        int writePos = 0;\n-        boolean hasFrag = false;\n-        int fragLen = 0;\n+        int start = 0;\n+        int pos = 0;\n+        int limit = 0;\n@@ -459,1 +460,0 @@\n-\n@@ -461,3 +461,2 @@\n-        while ((n = read(cb, writePos, cb.length - writePos)) != -1) {\n-            int pos = writePos;\n-            int limit = pos + n;\n+        while ((n = read(cb, pos, cb.length - pos)) != -1) {\n+            limit = pos + n;\n@@ -465,24 +464,2 @@\n-                \/\/ find next line terminator\n-                int term = pos;\n-                while (term < limit) {\n-                    char c = cb[term];\n-                    if (c == '\\n' || c == '\\r')\n-                        break;\n-                    term++;\n-                }\n-\n-                if (term < limit) { \/\/ line terminator\n-                    boolean isCR = (cb[term] == '\\r');\n-                    if (isCR || !(skipLF && term == pos)) {\n-                        \/\/ line terminator is a CR or an LF not just after a CR\n-                        if (hasFrag) {\n-                            lines.add(new String(cb, 0, term));\n-                            hasFrag = false;\n-                        } else {\n-                            lines.add(new String(cb, pos, term - pos));\n-                        }\n-                    }\n-                    pos = term + 1;\n-                    if (pos == limit)\n-                        writePos = 0;\n-                    else if (isCR && cb[pos] == '\\n') { \/\/ pos < limit\n+                if (skipLF) {\n+                    if (cb[pos] == '\\n') {\n@@ -490,1 +467,1 @@\n-                        isCR = false;\n+                        start++;\n@@ -492,10 +469,9 @@\n-                    skipLF = isCR;\n-                } else { \/\/ no line terminator before reaching end of buffer\n-                    int len = limit - pos;\n-                    int fragPos;\n-                    if (hasFrag) {\n-                        fragPos = 0;\n-                        fragLen += len;\n-                    } else {\n-                        fragPos = pos;\n-                        fragLen = len;\n+                    skipLF = false;\n+                }\n+                while (pos < limit) {\n+                    char c = cb[pos++];\n+                    if (c == '\\n' || c == '\\r') {\n+                        lines.add(new String(cb, start, pos - 1 - start));\n+                        skipLF = (c == '\\r');\n+                        start = pos;\n+                        break;\n@@ -503,1 +479,4 @@\n-                    if (fragLen >= cb.length\/2) {\n+                }\n+                if (pos == limit) {\n+                    int len = limit - start;\n+                    if (len >= cb.length) {\n@@ -505,2 +484,5 @@\n-                        char[] tmp = new char[2*cb.length];\n-                        System.arraycopy(cb, fragPos, tmp, 0, fragLen);\n+                        int newLength = ArraysSupport.newLength(cb.length,\n+                                                                cb.length >>> 1,\n+                                                                cb.length);\n+                        char[] tmp = new char[newLength];\n+                        System.arraycopy(cb, start, tmp, 0, len);\n@@ -508,1 +490,1 @@\n-                    } else if (fragPos != 0) {\n+                    } else if (start != 0 && len != 0) {\n@@ -510,1 +492,1 @@\n-                        System.arraycopy(cb, fragPos, cb, 0, fragLen);\n+                        System.arraycopy(cb, start, cb, 0, len);\n@@ -512,4 +494,3 @@\n-                    writePos = fragLen;\n-                    hasFrag = true;\n-                    pos = limit;\n-                    skipLF = false;\n+                    pos = limit = len;\n+                    start = 0;\n+                    break;\n@@ -519,1 +500,0 @@\n-\n@@ -521,2 +501,2 @@\n-        if (hasFrag)\n-            lines.add(new String(cb, 0, fragLen));\n+        if (limit > start)\n+            lines.add(new String(cb, start, limit - start));\n","filename":"src\/java.base\/share\/classes\/java\/io\/Reader.java","additions":35,"deletions":55,"binary":false,"changes":90,"status":"modified"}]}