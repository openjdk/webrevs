{"files":[{"patch":"@@ -59,0 +59,1 @@\n+import java.util.Arrays;\n@@ -74,1 +75,6 @@\n-    private final List<CharacterRange> characterRanges = new ArrayList<>();\n+    private static final CharacterRange[] EMPTY_CHARACTER_RANGE = new CharacterRange[0];\n+    private static final DeferredLabel[] EMPTY_LABEL_ARRAY = new DeferredLabel[0];\n+    private static final LocalVariable[] EMPTY_LOCAL_VARIABLE_ARRAY = new LocalVariable[0];\n+    private static final LocalVariableType[] EMPTY_LOCAL_VARIABLE_TYPE_ARRAY = new LocalVariableType[0];\n+    private static final AbstractPseudoInstruction.ExceptionCatchImpl[] EMPTY_HANDLER_ARRAY = new AbstractPseudoInstruction.ExceptionCatchImpl[0];\n+\n@@ -76,2 +82,6 @@\n-    private final List<LocalVariable> localVariables = new ArrayList<>();\n-    private final List<LocalVariableType> localVariableTypes = new ArrayList<>();\n+    private CharacterRange[] characterRanges = EMPTY_CHARACTER_RANGE;\n+    private LocalVariable[] localVariables = EMPTY_LOCAL_VARIABLE_ARRAY;\n+    private LocalVariableType[] localVariableTypes = EMPTY_LOCAL_VARIABLE_TYPE_ARRAY;\n+    private int characterRangesCount = 0;\n+    private int localVariablesCount = 0;\n+    private int localVariableTypesCount = 0;\n@@ -231,1 +241,1 @@\n-            if (!characterRanges.isEmpty()) {\n+            if (characterRangesCount > 0) {\n@@ -237,1 +247,1 @@\n-                        int crSize = characterRanges.size();\n+                        int crSize = characterRangesCount;\n@@ -239,1 +249,2 @@\n-                        for (CharacterRange cr : characterRanges) {\n+                        for (int i = 0; i < characterRangesCount; i++) {\n+                            CharacterRange cr = characterRanges[i];\n@@ -255,1 +266,1 @@\n-                        if (crSize < characterRanges.size())\n+                        if (crSize < characterRangesCount)\n@@ -262,1 +273,1 @@\n-            if (!localVariables.isEmpty()) {\n+            if (localVariablesCount > 0) {\n@@ -267,1 +278,1 @@\n-                        int lvSize = localVariables.size();\n+                        int lvSize = localVariablesCount;\n@@ -269,1 +280,2 @@\n-                        for (LocalVariable l : localVariables) {\n+                        for (int i = 0; i < localVariablesCount; i++) {\n+                            LocalVariable l = localVariables[i];\n@@ -278,1 +290,1 @@\n-                        if (lvSize < localVariables.size())\n+                        if (lvSize < localVariablesCount)\n@@ -285,1 +297,1 @@\n-            if (!localVariableTypes.isEmpty()) {\n+            if (localVariableTypesCount > 0) {\n@@ -290,3 +302,4 @@\n-                        int lvtSize = localVariableTypes.size();\n-                        b.writeU2(localVariableTypes.size());\n-                        for (LocalVariableType l : localVariableTypes) {\n+                        int lvtSize = localVariableTypesCount;\n+                        b.writeU2(lvtSize);\n+                        for (int i = 0; i < localVariableTypesCount; i++) {\n+                            LocalVariableType l = localVariableTypes[i];\n@@ -301,1 +314,1 @@\n-                        if (lvtSize < localVariableTypes.size())\n+                        if (lvtSize < localVariableTypesCount)\n@@ -740,1 +753,5 @@\n-        characterRanges.add(element);\n+        if (characterRangesCount >= characterRanges.length) {\n+            int newCapacity = characterRangesCount + 8;\n+            this.characterRanges = Arrays.copyOf(characterRanges, newCapacity);\n+        }\n+        characterRanges[characterRangesCount++] = element;\n@@ -752,1 +769,5 @@\n-        localVariables.add(element);\n+        if (localVariablesCount >= localVariables.length) {\n+            int newCapacity = localVariablesCount + 8;\n+            this.localVariables = Arrays.copyOf(localVariables, newCapacity);\n+        }\n+        localVariables[localVariablesCount++] = element;\n@@ -756,1 +777,5 @@\n-        localVariableTypes.add(element);\n+        if (localVariableTypesCount >= localVariableTypes.length) {\n+            int newCapacity = localVariableTypesCount + 8;\n+            this.localVariableTypes = Arrays.copyOf(localVariableTypes, newCapacity);\n+        }\n+        localVariableTypes[localVariableTypesCount++] = element;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":44,"deletions":19,"binary":false,"changes":63,"status":"modified"}]}