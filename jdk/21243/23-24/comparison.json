{"files":[{"patch":"@@ -464,1 +464,0 @@\n-            pool.writeU1(TAG_UTF8);\n@@ -466,1 +465,1 @@\n-                pool.writeU2(rawLen);\n+                pool.writeU1U2(TAG_UTF8, rawLen);\n@@ -471,1 +470,1 @@\n-                pool.writeUTF(stringValue);\n+                pool.writeUtfEntry(stringValue);\n@@ -505,2 +504,1 @@\n-            pool.writeU1(tag());\n-            pool.writeU2(ref1.index());\n+            pool.writeU1U2(tag(), ref1.index());\n@@ -535,3 +533,1 @@\n-            pool.writeU1(tag());\n-            pool.writeU2(ref1.index());\n-            pool.writeU2(ref2.index());\n+            pool.writeU1U2U2(tag(), ref1.index(), ref2.index());\n@@ -867,3 +863,1 @@\n-            pool.writeU1(tag());\n-            pool.writeU2(bsmIndex);\n-            pool.writeU2(nameAndType.index());\n+            pool.writeU1U2U2(tag(), bsmIndex, nameAndType.index());\n@@ -987,3 +981,1 @@\n-            pool.writeU1(TAG_METHOD_HANDLE);\n-            pool.writeU1(refKind);\n-            pool.writeU2(reference.index());\n+            pool.writeU1U1U2(TAG_METHOD_HANDLE, refKind, reference.index());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry.java","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -318,2 +318,1 @@\n-                buf.writeU1(tpbt.typeParameterIndex());\n-                buf.writeU1(tpbt.boundIndex());\n+                buf.writeU1U1(tpbt.typeParameterIndex(), tpbt.boundIndex());\n@@ -330,3 +329,1 @@\n-                    buf.writeU2(startPc);\n-                    buf.writeU2(labelToBci(lr, e.endLabel(), ta) - startPc);\n-                    buf.writeU2(e.index());\n+                    buf.writeU2U2U2(startPc, labelToBci(lr, e.endLabel(), ta) - startPc, e.index());\n@@ -346,2 +343,1 @@\n-            buf.writeU1(component.typePathKind().tag());\n-            buf.writeU1(component.typeArgumentIndex());\n+            buf.writeU1U1(component.typePathKind().tag(), component.typeArgumentIndex());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AnnotationReader.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import static java.lang.classfile.constantpool.PoolEntry.TAG_UTF8;\n@@ -158,0 +159,12 @@\n+    public void writeU1U2U2(int x1, int x2, int x3) {\n+        reserveSpace(5);\n+        byte[] elems = this.elems;\n+        int offset = this.offset;\n+        elems[offset    ] = (byte) x1;\n+        elems[offset + 1] = (byte) (x2 >> 8);\n+        elems[offset + 2] = (byte) x2;\n+        elems[offset + 3] = (byte) (x3 >> 8);\n+        elems[offset + 4] = (byte) x3;\n+        this.offset = offset + 5;\n+    }\n+\n@@ -230,1 +243,1 @@\n-    void writeUTF(String str) {\n+    void writeUtfEntry(String str) {\n@@ -237,1 +250,1 @@\n-        reserveSpace(utflen + 2);\n+        reserveSpace(utflen + 3);\n@@ -242,3 +255,4 @@\n-        elems[offset    ] = (byte) (utflen >> 8);\n-        elems[offset + 1] = (byte)  utflen;\n-        offset += 2;\n+        elems[offset    ] = (byte) TAG_UTF8;\n+        elems[offset + 1] = (byte) (utflen >> 8);\n+        elems[offset + 2] = (byte)  utflen;\n+        offset += 3;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufWriterImpl.java","additions":19,"deletions":5,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -713,1 +713,1 @@\n-        bytecodesBufWriter.writeU1(opcode.bytecode());\n+        assert !opcode.isWide();\n@@ -715,1 +715,1 @@\n-            bytecodesBufWriter.writeU2(index);\n+            bytecodesBufWriter.writeU1U2(opcode.bytecode(), index);\n@@ -717,1 +717,1 @@\n-            bytecodesBufWriter.writeU1(index);\n+            bytecodesBufWriter.writeU1U1(opcode.bytecode(), index);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}