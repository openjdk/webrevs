{"files":[{"patch":"@@ -0,0 +1,3 @@\n+# JDK Vulnerabilities\n+\n+Please follow the process outlined in the [OpenJDK Vulnerability Policy](https:\/\/openjdk.org\/groups\/vulnerability\/report) to disclose vulnerabilities in the JDK.\n","filename":"SECURITY.md","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -276,1 +276,1 @@\n-                 int regionIndex = Arrays.binarySearch(regionArray, entry.getKey());\n+                 int regionIndex = findRegionIndex(regionArray, entry.getKey());\n@@ -284,2 +284,2 @@\n-                 int aliasIndex = Arrays.binarySearch(regionArray, entry.getKey());\n-                 int regionIndex = Arrays.binarySearch(regionArray, entry.getValue());\n+                 int aliasIndex = findRegionIndex(regionArray, entry.getKey());\n+                 int regionIndex = findRegionIndex(regionArray, entry.getValue());\n@@ -297,0 +297,8 @@\n+    private static int findRegionIndex(String[] regionArray, String region) {\n+        int index = Arrays.binarySearch(regionArray, region);\n+        if (index < 0) {\n+            throw new IllegalArgumentException(\"Unknown region: \" + region);\n+        }\n+        return index;\n+    }\n+\n","filename":"make\/jdk\/src\/classes\/build\/tools\/tzdb\/TzdbZoneRulesCompiler.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2237,1 +2237,1 @@\n-  if (EnableJVMCI && UseJVMCICompiler) {\n+  if (UseJVMCICompiler) {\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -178,0 +178,1 @@\n+  case Interpreter::java_lang_math_tanh:\n","filename":"src\/hotspot\/cpu\/arm\/templateInterpreterGenerator_arm.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -6601,1 +6601,1 @@\n-            CompressedOops::base() ==0);\n+            CompressedOops::base() == nullptr);\n@@ -6698,1 +6698,1 @@\n-            CompressedOops::base() != 0);\n+            CompressedOops::base() != nullptr);\n@@ -6710,1 +6710,1 @@\n-            CompressedOops::base() == 0);\n+            CompressedOops::base() == nullptr);\n@@ -6828,1 +6828,1 @@\n-            CompressedOops::base() != 0);\n+            CompressedOops::base() != nullptr);\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2113,1 +2113,1 @@\n-  if (EnableJVMCI && UseJVMCICompiler) {\n+  if (UseJVMCICompiler) {\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4631,1 +4631,1 @@\n-            (CompressedOops::base() == 0 ||\n+            (CompressedOops::base() == nullptr ||\n@@ -4654,1 +4654,1 @@\n-            (CompressedOops::base() == 0 ||\n+            (CompressedOops::base() == nullptr ||\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2677,1 +2677,1 @@\n-  if (EnableJVMCI && UseJVMCICompiler) {\n+  if (UseJVMCICompiler) {\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,2 +66,0 @@\n-    \/\/ clear out this chunk (to detect allocation bugs)\n-    memset(k, 0xBE, k->_len);\n","filename":"src\/hotspot\/share\/adlc\/adlArena.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -511,1 +511,3 @@\n-  InstanceKlass* k = UnregisteredClasses::load_class(class_name, _source, CHECK_NULL);\n+  ResourceMark rm;\n+  char * source_path = os::strdup_check_oom(ClassLoader::uri_to_path(_source));\n+  InstanceKlass* k = UnregisteredClasses::load_class(class_name, source_path, CHECK_NULL);\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -177,0 +177,2 @@\n+    \/\/ NB: the string following \"source: \" is not really a proper file name, but rather\n+    \/\/ a truncated URI referring to a file. It must be decoded after reading.\n","filename":"src\/hotspot\/share\/cds\/classListWriter.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -584,1 +584,1 @@\n-  const char* file = ClassLoader::skip_uri_protocol(location->as_C_string());\n+  const char* file = ClassLoader::uri_to_path(location->as_C_string());\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,0 +84,3 @@\n+#include <stdlib.h>\n+#include <ctype.h>\n+\n@@ -1212,1 +1215,1 @@\n-char* ClassLoader::skip_uri_protocol(char* source) {\n+static const char* skip_uri_protocol(const char* source) {\n@@ -1231,0 +1234,41 @@\n+static char decode_percent_encoded(const char *str, size_t& index) {\n+  if (str[index] == '%'\n+      && isxdigit(str[index + 1])\n+      && isxdigit(str[index + 2])) {\n+    char hex[3];\n+    hex[0] = str[index + 1];\n+    hex[1] = str[index + 2];\n+    hex[2] = '\\0';\n+    index += 2;\n+    return (char) strtol(hex, NULL, 16);\n+  }\n+  return str[index];\n+}\n+\n+char* ClassLoader::uri_to_path(const char* uri) {\n+  const size_t len = strlen(uri) + 1;\n+  char* path = NEW_RESOURCE_ARRAY(char, len);\n+\n+  uri = skip_uri_protocol(uri);\n+\n+  if (strncmp(uri, \"\/\/\", 2) == 0) {\n+    \/\/ Skip the empty \"authority\" part\n+    uri += 2;\n+  }\n+\n+#ifdef _WINDOWS\n+  if (uri[0] == '\/') {\n+    \/\/ Absolute path name on Windows does not begin with a slash\n+    uri += 1;\n+  }\n+#endif\n+\n+  size_t path_index = 0;\n+  for (size_t i = 0; i < strlen(uri); ++i) {\n+    char decoded = decode_percent_encoded(uri, i);\n+    path[path_index++] = decoded;\n+  }\n+  path[path_index] = '\\0';\n+  return path;\n+}\n+\n@@ -1264,1 +1308,1 @@\n-    char* path = skip_uri_protocol(src);\n+    const char* path = ClassLoader::uri_to_path(src);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":46,"deletions":2,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -385,1 +385,1 @@\n-  static char* skip_uri_protocol(char* source);\n+  static char* uri_to_path(const char* uri);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,6 +103,4 @@\n-      char* path = m->location()->as_C_string();\n-      if (strncmp(path, \"file:\", 5) == 0) {\n-        path = ClassLoader::skip_uri_protocol(path);\n-        char* path_copy = NEW_RESOURCE_ARRAY(char, strlen(path) + 1);\n-        strcpy(path_copy, path);\n-        _module_paths->append(path_copy);\n+      char* uri = m->location()->as_C_string();\n+      if (strncmp(uri, \"file:\", 5) == 0) {\n+        char* path = ClassLoader::uri_to_path(uri);\n+        _module_paths->append(path);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3055,1 +3055,1 @@\n-  if (m->is_initializer()) {\n+  if (m->is_object_initializer()) {\n@@ -3058,0 +3058,1 @@\n+    \/\/ Note: Static initializers can be here. Record them as plain methods.\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1072,1 +1072,1 @@\n-                                                    class_loader, protection_domain, is_superclass, CHECK_0);\n+                                                    class_loader, protection_domain, is_superclass, CHECK_false);\n@@ -1091,4 +1091,7 @@\n-  if (ik->super() != nullptr &&\n-      !check_shared_class_super_type(ik, InstanceKlass::cast(ik->super()),\n-                                     class_loader, protection_domain, true, THREAD)) {\n-    return false;\n+  if (ik->super() != nullptr) {\n+    bool check_super = check_shared_class_super_type(ik, InstanceKlass::cast(ik->super()),\n+                                                     class_loader, protection_domain, true,\n+                                                     CHECK_false);\n+    if (!check_super) {\n+      return false;\n+    }\n@@ -1100,1 +1103,3 @@\n-    if (!check_shared_class_super_type(ik, interfaces->at(index), class_loader, protection_domain, false, THREAD)) {\n+    bool check_interface = check_shared_class_super_type(ik, interfaces->at(index), class_loader, protection_domain, false,\n+                                                         CHECK_false);\n+    if (!check_interface) {\n@@ -1156,1 +1161,2 @@\n-  if (!check_shared_class_super_types(ik, class_loader, protection_domain, THREAD)) {\n+  bool check = check_shared_class_super_types(ik, class_loader, protection_domain, CHECK_NULL);\n+  if (!check) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -296,7 +296,0 @@\n-protected:\n-  static InstanceKlass* _well_known_klasses[];\n-\n-private:\n-  \/\/ table of box klasses (int_klass, etc.)\n-  static InstanceKlass* _box_klasses[T_VOID+1];\n-\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -48,8 +48,0 @@\n-\n-\/\/ CDS: scan and relocate all classes referenced by _klasses[].\n-void vmClasses::metaspace_pointers_do(MetaspaceClosure* it) {\n-  for (auto id : EnumRange<vmClassID>{}) {\n-    it->push(klass_addr_at(id));\n-  }\n-}\n-\n@@ -208,2 +200,0 @@\n-  \/\/_box_klasses[T_OBJECT]  = vmClasses::object_klass();\n-  \/\/_box_klasses[T_ARRAY]   = vmClasses::object_klass();\n","filename":"src\/hotspot\/share\/classfile\/vmClasses.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-class MetaspaceClosure;\n@@ -98,1 +97,0 @@\n-  static void metaspace_pointers_do(MetaspaceClosure* it);\n","filename":"src\/hotspot\/share\/classfile\/vmClasses.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -230,0 +230,4 @@\n+bool DependencyContext::is_empty() {\n+  return dependencies() == nullptr;\n+}\n+\n","filename":"src\/hotspot\/share\/code\/dependencyContext.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,0 +127,1 @@\n+  bool is_empty();\n","filename":"src\/hotspot\/share\/code\/dependencyContext.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -69,1 +69,0 @@\n-      COMPILER1_PRESENT(ShouldNotReachHere();)\n@@ -71,3 +70,1 @@\n-      if (UseJVMCICompiler) {\n-        ShouldNotReachHere();\n-      }\n+      if (!EnableJVMCI)\n@@ -75,0 +72,1 @@\n+        ShouldNotReachHere();\n","filename":"src\/hotspot\/share\/compiler\/oopMap.inline.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -89,1 +89,3 @@\n-      if (storage->print_containing((oop*) aligned_addr, st)) {\n+      \/\/ Check for null for extra safety: might get here while handling error\n+      \/\/ before storage initialization.\n+      if ((storage != nullptr) && storage->print_containing((oop*) aligned_addr, st)) {\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorageSet.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -696,1 +696,1 @@\n-      pacer()->claim_for_alloc(words, true);\n+      pacer()->claim_for_alloc<true>(words);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -192,1 +192,2 @@\n-bool ShenandoahPacer::claim_for_alloc(size_t words, bool force) {\n+template<bool FORCE>\n+bool ShenandoahPacer::claim_for_alloc(size_t words) {\n@@ -201,1 +202,1 @@\n-    if (cur < tax && !force) {\n+    if (cur < tax && !FORCE) {\n@@ -210,0 +211,3 @@\n+template bool ShenandoahPacer::claim_for_alloc<true>(size_t words);\n+template bool ShenandoahPacer::claim_for_alloc<false>(size_t words);\n+\n@@ -230,1 +234,1 @@\n-  bool claimed = claim_for_alloc(words, false);\n+  bool claimed = claim_for_alloc<false>(words);\n@@ -235,7 +239,0 @@\n-  \/\/ Forcefully claim the budget: it may go negative at this point, and\n-  \/\/ GC should replenish for this and subsequent allocations. After this claim,\n-  \/\/ we would wait a bit until our claim is matched by additional progress,\n-  \/\/ or the time budget depletes.\n-  claimed = claim_for_alloc(words, true);\n-  assert(claimed, \"Should always succeed\");\n-\n@@ -252,0 +249,1 @@\n+    claim_for_alloc<true>(words);\n@@ -255,6 +253,3 @@\n-  double start = os::elapsedTime();\n-\n-  size_t max_ms = ShenandoahPacingMaxDelay;\n-  size_t total_ms = 0;\n-\n-  while (true) {\n+  jlong const max_delay = ShenandoahPacingMaxDelay * NANOSECS_PER_MILLISEC;\n+  jlong const start_time = os::elapsed_counter();\n+  while (!claimed && (os::elapsed_counter() - start_time) < max_delay) {\n@@ -262,15 +257,9 @@\n-    size_t cur_ms = (max_ms > total_ms) ? (max_ms - total_ms) : 1;\n-    wait(cur_ms);\n-\n-    double end = os::elapsedTime();\n-    total_ms = (size_t)((end - start) * 1000);\n-\n-    if (total_ms > max_ms || Atomic::load(&_budget) >= 0) {\n-      \/\/ Exiting if either:\n-      \/\/  a) Spent local time budget to wait for enough GC progress.\n-      \/\/     Breaking out and allocating anyway, which may mean we outpace GC,\n-      \/\/     and start Degenerated GC cycle.\n-      \/\/  b) The budget had been replenished, which means our claim is satisfied.\n-      ShenandoahThreadLocalData::add_paced_time(JavaThread::current(), end - start);\n-      break;\n-    }\n+    wait(1);\n+    claimed = claim_for_alloc<false>(words);\n+  }\n+  if (!claimed) {\n+    \/\/ Spent local time budget to wait for enough GC progress.\n+    \/\/ Force allocating anyway, which may mean we outpace GC,\n+    \/\/ and start Degenerated GC cycle.\n+    claimed = claim_for_alloc<true>(words);\n+    assert(claimed, \"Should always succeed\");\n@@ -278,0 +267,1 @@\n+  ShenandoahThreadLocalData::add_paced_time(current, (double)(os::elapsed_counter() - start_time) \/ NANOSECS_PER_SEC);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp","additions":21,"deletions":31,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -110,1 +110,3 @@\n-  bool claim_for_alloc(size_t words, bool force);\n+  template<bool FORCE>\n+  bool claim_for_alloc(size_t words);\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -487,0 +487,3 @@\n+  if (klass->is_instance_klass() && InstanceKlass::cast(klass)->is_scratch_class()) {\n+    return;\n+  }\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSet.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"jvmci\/jvmci.hpp\"\n@@ -93,2 +94,1 @@\n-      char path[JVM_MAXPATHLEN];\n-      if (os::dll_locate_lib(path, sizeof(path), Arguments::get_dll_dir(), JVMCI_SHARED_LIBRARY_NAME)) {\n+      if (JVMCI::shared_library_exists()) {\n","filename":"src\/hotspot\/share\/jvmci\/jvmci_globals.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-          \"Enable JVMCI\")                                                   \\\n+          \"Enable JVMCI. Defaults to true if UseJVMCICompiler is true.\")    \\\n@@ -143,2 +143,2 @@\n-          \"on the HotSpot heap. Defaults to true if EnableJVMCI is \"        \\\n-          \"true and a JVMCI native library is available.\")                  \\\n+          \"on the HotSpot heap. Defaults to true if UseJVMCICompiler or \"   \\\n+          \"EnableJVMCI is true and a JVMCI native library is available.\")   \\\n","filename":"src\/hotspot\/share\/jvmci\/jvmci_globals.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-LogSelection::LogSelection() : _ntags(0), _wildcard(false), _level(LogLevel::Invalid), _tag_sets_selected(0) {\n+LogSelection::LogSelection() : _ntags(0), _tags(), _wildcard(false), _level(LogLevel::Invalid), _tag_sets_selected(0) {\n@@ -40,1 +40,1 @@\n-    : _ntags(0), _wildcard(wildcard), _level(level), _tag_sets_selected(0) {\n+  : _ntags(0), _tags(), _wildcard(wildcard), _level(level), _tag_sets_selected(0) {\n","filename":"src\/hotspot\/share\/logging\/logSelection.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -130,0 +130,1 @@\n+  inline static size_t malloc_overhead() { return sizeof(MallocHeader) + sizeof(uint16_t); }\n","filename":"src\/hotspot\/share\/nmt\/mallocHeader.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -169,1 +169,1 @@\n-    return _all_mallocs.count() * sizeof(MallocHeader);\n+    return _all_mallocs.count() * MallocHeader::malloc_overhead();\n@@ -272,1 +272,1 @@\n-  static const size_t overhead_per_malloc = sizeof(MallocHeader) + sizeof(uint16_t);\n+  static inline size_t overhead_per_malloc() { return MallocHeader::malloc_overhead(); }\n","filename":"src\/hotspot\/share\/nmt\/mallocTracker.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    return enabled() ? MallocTracker::overhead_per_malloc : 0;\n+    return enabled() ? MallocTracker::overhead_per_malloc() : 0;\n","filename":"src\/hotspot\/share\/nmt\/memTracker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-    set_base(0);\n+    set_base(nullptr);\n@@ -118,1 +118,1 @@\n-  if (base() != 0) {\n+  if (base() != nullptr) {\n@@ -169,1 +169,1 @@\n-  if (base() != 0) {\n+  if (base() != nullptr) {\n","filename":"src\/hotspot\/share\/oops\/compressedOops.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2724,0 +2724,7 @@\n+\n+  if (ik->is_scratch_class()) {\n+    assert(ik->dependencies().is_empty(), \"dependencies should be empty for scratch classes\");\n+    return;\n+  }\n+  assert(ik->is_loaded(), \"class should be loaded \" PTR_FORMAT, p2i(ik));\n+\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -447,1 +447,1 @@\n-  if (m->is_initializer()) {\n+  if (m->is_object_initializer()) {\n@@ -450,0 +450,2 @@\n+    \/\/ Note: Static initializers can theoretically be here, if JNI users manage\n+    \/\/ to get their jmethodID. Record them as plain methods.\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1829,8 +1829,0 @@\n-static bool select_method(const methodHandle& method, bool want_constructor) {\n-  if (want_constructor) {\n-    return (method->is_initializer() && !method->is_static());\n-  } else {\n-    return  (!method->is_initializer() && !method->is_overpass());\n-  }\n-}\n-\n@@ -1869,0 +1861,1 @@\n+  \/\/ Select methods matching the criteria.\n@@ -1870,6 +1863,8 @@\n-    methodHandle method(THREAD, methods->at(i));\n-    if (select_method(method, want_constructor)) {\n-      if (!publicOnly || method->is_public()) {\n-        idnums->push(method->method_idnum());\n-        ++num_methods;\n-      }\n+    Method* method = methods->at(i);\n+    if (want_constructor && !method->is_object_initializer()) {\n+      continue;\n+    }\n+    if (!want_constructor &&\n+        (method->is_object_initializer() || method->is_static_initializer() ||\n+         method->is_overpass())) {\n+      continue;\n@@ -1877,0 +1872,5 @@\n+    if (publicOnly && !method->is_public()) {\n+      continue;\n+    }\n+    idnums->push(method->method_idnum());\n+    ++num_methods;\n@@ -2178,3 +2178,1 @@\n-  if (!m->is_initializer() || m->is_static()) {\n-    method = Reflection::new_method(m, true, CHECK_NULL);\n-  } else {\n+  if (m->is_object_initializer()) {\n@@ -2182,0 +2180,3 @@\n+  } else {\n+    \/\/ new_method accepts <clinit> as Method here\n+    method = Reflection::new_method(m, true, CHECK_NULL);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":18,"deletions":17,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -316,0 +316,1 @@\n+      assert(!m->is_static_initializer(), \"Cannot be static initializer\");\n@@ -317,1 +318,1 @@\n-    } else if (m->is_initializer()) {\n+    } else if (m->is_object_initializer()) {\n","filename":"src\/hotspot\/share\/prims\/methodHandles.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -450,1 +450,1 @@\n-  bool const jvmci_enabled = JVMCI_ONLY(UseJVMCICompiler) NOT_JVMCI(false);\n+  bool const jvmci_enabled = JVMCI_ONLY(EnableJVMCI) NOT_JVMCI(false);\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-      _barrier_active(barrier_active && (JVMCI_ONLY(UseJVMCICompiler) NOT_JVMCI(false)\n+      _barrier_active(barrier_active && (JVMCI_ONLY(EnableJVMCI) NOT_JVMCI(false)\n@@ -83,1 +83,1 @@\n-      _barrier_active(barrier_active && (JVMCI_ONLY(UseJVMCICompiler) NOT_JVMCI(false)\n+      _barrier_active(barrier_active && (JVMCI_ONLY(EnableJVMCI) NOT_JVMCI(false)\n","filename":"src\/hotspot\/share\/runtime\/escapeBarrier.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -769,4 +769,4 @@\n-  \/\/ Allow sun.reflect.ConstantPool to refer to <clinit> methods as java.lang.reflect.Methods.\n-  assert(!method()->is_initializer() ||\n-         (for_constant_pool_access && method()->is_static()),\n-         \"should call new_constructor instead\");\n+  \/\/ Allow jdk.internal.reflect.ConstantPool to refer to <clinit> methods as java.lang.reflect.Methods.\n+  assert(!method()->is_object_initializer() &&\n+         (for_constant_pool_access || !method()->is_static_initializer()),\n+         \"Should not be the initializer\");\n@@ -820,1 +820,1 @@\n-  assert(method()->is_initializer(), \"should call new_method instead\");\n+  assert(method()->is_object_initializer(), \"Should be the initializer\");\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -654,1 +654,1 @@\n-  if (EnableJVMCI && UseJVMCICompiler) {\n+  if (EnableJVMCI) {\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -300,0 +300,1 @@\n+    int rc;\n@@ -312,2 +313,3 @@\n-    if (pthread_create(&main_thr, NULL, &apple_main, &args) != 0) {\n-        JLI_ReportErrorMessageSys(\"Could not create main thread: %s\\n\", strerror(errno));\n+    rc = pthread_create(&main_thr, NULL, &apple_main, &args);\n+    if (rc != 0) {\n+        JLI_ReportErrorMessageSys(\"Could not create main thread, return code: %s\\n\", rc);\n@@ -316,2 +318,3 @@\n-    if (pthread_detach(main_thr)) {\n-        JLI_ReportErrorMessageSys(\"pthread_detach() failed: %s\\n\", strerror(errno));\n+    rc = pthread_detach(main_thr);\n+    if (rc != 0) {\n+        JLI_ReportErrorMessage(\"pthread_detach() failed, return code: %s\\n\", rc);\n","filename":"src\/java.base\/macosx\/native\/libjli\/java_md_macosx.m","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -53,0 +53,5 @@\n+ * @apiNote\n+ * Once wrapped in a {@code BufferedInputStream}, the underlying\n+ * {@code InputStream} should not be used directly nor wrapped with\n+ * another stream.\n+ *\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedInputStream.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,5 @@\n+ * @apiNote\n+ * Once wrapped in a {@code BufferedOutputStream}, the underlying\n+ * {@code OutputStream} should not be used directly nor wrapped with\n+ * another stream.\n+ *\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedOutputStream.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,2 +46,3 @@\n- * therefore advisable to wrap a BufferedReader around any Reader whose read()\n- * operations may be costly, such as FileReaders and InputStreamReaders.  For\n+ * therefore advisable to wrap a {@code BufferedReader} around any\n+ * {@code Reader} whose {@code read()} operations may be costly, such as\n+ * {@code FileReader}s and {@code InputStreamReader}s.  For\n@@ -55,3 +56,3 @@\n- * invocation of read() or readLine() could cause bytes to be read from the\n- * file, converted into characters, and then returned, which can be very\n- * inefficient.\n+ * invocation of {@code read()} or {@code readLine()} could cause bytes to be\n+ * read from the file, converted into characters, and then returned, which can\n+ * be very inefficient.\n@@ -59,2 +60,8 @@\n- * <p> Programs that use DataInputStreams for textual input can be localized by\n- * replacing each DataInputStream with an appropriate BufferedReader.\n+ * <p> Programs that use {@code DataInputStream}s for textual input can be\n+ * localized by replacing each {@code DataInputStream} with an appropriate\n+ * {@code BufferedReader}.\n+ *\n+ * @apiNote\n+ * Once wrapped in a {@code BufferedReader}, the underlying\n+ * {@code Reader} should not be used directly nor wrapped with\n+ * another reader.\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedReader.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,5 +40,5 @@\n- * <p> A newLine() method is provided, which uses the platform's own notion of\n- * line separator as defined by the system property {@code line.separator}.\n- * Not all platforms use the newline character ('\\n') to terminate lines.\n- * Calling this method to terminate each output line is therefore preferred to\n- * writing a newline character directly.\n+ * <p> A {@code newLine()} method is provided, which uses the platform's own\n+ * notion of line separator as defined by the system property\n+ * {@linkplain System#lineSeparator() line.separator}. Not all platforms use the newline character ('\\n')\n+ * to terminate lines. Calling this method to terminate each output line is\n+ * therefore preferred to writing a newline character directly.\n@@ -46,4 +46,5 @@\n- * <p> In general, a Writer sends its output immediately to the underlying\n- * character or byte stream.  Unless prompt output is required, it is advisable\n- * to wrap a BufferedWriter around any Writer whose write() operations may be\n- * costly, such as FileWriters and OutputStreamWriters.  For example,\n+ * <p> In general, a {@code Writer} sends its output immediately to the\n+ * underlying character or byte stream.  Unless prompt output is required, it\n+ * is advisable to wrap a {@code BufferedWriter} around any {@code Writer} whose\n+ * {@code write()} operations may be costly, such as {@code FileWriter}s and\n+ * {@code OutputStreamWriter}s.  For example,\n@@ -55,4 +56,9 @@\n- * will buffer the PrintWriter's output to the file.  Without buffering, each\n- * invocation of a print() method would cause characters to be converted into\n- * bytes that would then be written immediately to the file, which can be very\n- * inefficient.\n+ * will buffer the {@code PrintWriter}'s output to the file.  Without buffering,\n+ * each invocation of a {@code print()} method would cause characters to be\n+ * converted into bytes that would then be written immediately to the file,\n+ * which can be very inefficient.\n+ *\n+ * @apiNote\n+ * Once wrapped in a {@code BufferedWriter}, the underlying\n+ * {@code Writer} should not be used directly nor wrapped with\n+ * another writer.\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedWriter.java","additions":20,"deletions":14,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n- * <dt><a id=fpNumericalEq><i>numerical equality<\/i><\/a> ({@code ==}\n+ * <dt><a id=fpNumericalEq><\/a><dfn>{@index \"numerical equality\"}<\/dfn> ({@code ==}\n@@ -161,1 +161,1 @@\n- * <dt><i>bit-wise equivalence<\/i>:<\/dt>\n+ * <dt><dfn>{@index \"bit-wise equivalence\"}<\/dfn>:<\/dt>\n@@ -171,1 +171,1 @@\n- * <dt><i><a id=repEquivalence>representation equivalence<\/a><\/i>:<\/dt>\n+ * <dt><dfn><a id=repEquivalence><\/a>{@index \"representation equivalence\"}<\/dfn>:<\/dt>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,3 @@\n- * based on material from Henry S. Warren, Jr.'s <i>Hacker's\n- * Delight<\/i>, (Addison Wesley, 2002).\n+ * based on material from Henry S. Warren, Jr.'s <cite>Hacker's\n+ * Delight<\/cite>, (Addison Wesley, 2002) and <cite>Hacker's\n+ * Delight, Second Edition<\/cite>, (Pearson Education, 2013).\n@@ -1739,1 +1740,1 @@\n-     * The Sheep And Goats (SAG) operation (see Hacker's Delight, section 7.7)\n+     * The Sheep And Goats (SAG) operation (see Hacker's Delight, Second Edition, section 7.7)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,3 @@\n- * based on material from Henry S. Warren, Jr.'s <i>Hacker's\n- * Delight<\/i>, (Addison Wesley, 2002).\n+ * based on material from Henry S. Warren, Jr.'s <cite>Hacker's\n+ * Delight<\/cite>, (Addison Wesley, 2002) and <cite>Hacker's\n+ * Delight, Second Edition<\/cite>, (Pearson Education, 2013).\n@@ -1752,1 +1753,1 @@\n-     * The Sheep And Goats (SAG) operation (see Hacker's Delight, section 7.7)\n+     * The Sheep And Goats (SAG) operation (see Hacker's Delight, Second Edition, section 7.7)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-     * The {@code equals} method implements an equivalence relation\n+     * The {@code equals} method implements an <dfn>{@index \"equivalence relation\"}<\/dfn>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Object.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_ANNOTATION}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_ANNOTATION}.\n@@ -76,1 +76,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_ARRAY}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_ARRAY}.\n@@ -134,1 +134,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_STRING}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_STRING}.\n@@ -162,1 +162,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_DOUBLE}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_DOUBLE}.\n@@ -190,1 +190,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_FLOAT}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_FLOAT}.\n@@ -218,1 +218,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_LONG}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_LONG}.\n@@ -246,1 +246,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_INT}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_INT}.\n@@ -274,1 +274,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_SHORT}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_SHORT}.\n@@ -305,1 +305,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_CHAR}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_CHAR}.\n@@ -336,1 +336,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_BYTE}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_BYTE}.\n@@ -367,1 +367,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_BOOLEAN}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_BOOLEAN}.\n@@ -398,1 +398,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_CLASS}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_CLASS}.\n@@ -416,1 +416,1 @@\n-     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_ENUM}.\n+     * The {@linkplain #tag tag} of this value is {@value TAG_ENUM}.\n@@ -435,0 +435,39 @@\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfByte}. *\/\n+    int TAG_BYTE = 'B';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfChar}. *\/\n+    int TAG_CHAR = 'C';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfDouble}. *\/\n+    int TAG_DOUBLE = 'D';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfFloat}. *\/\n+    int TAG_FLOAT = 'F';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfInt}. *\/\n+    int TAG_INT = 'I';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfLong}. *\/\n+    int TAG_LONG = 'J';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfShort}. *\/\n+    int TAG_SHORT = 'S';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfBoolean}. *\/\n+    int TAG_BOOLEAN = 'Z';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfString}. *\/\n+    int TAG_STRING = 's';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfEnum}. *\/\n+    int TAG_ENUM = 'e';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfClass}. *\/\n+    int TAG_CLASS = 'c';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfAnnotation}. *\/\n+    int TAG_ANNOTATION = '@';\n+\n+    \/** The {@link #tag() tag} indicating the value of an element-value pair is {@link OfArray}. *\/\n+    int TAG_ARRAY = '[';\n+\n@@ -438,0 +477,4 @@\n+     *\n+     * @apiNote\n+     * {@code TAG_}-prefixed constants in this class, such as {@link #TAG_INT},\n+     * describe the possible return values of this method.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/AnnotationValue.java","additions":56,"deletions":13,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -515,607 +515,1 @@\n-    \/** The integer value used to encode the NOP instruction. *\/\n-    int NOP             = 0;\n-\n-    \/** The integer value used to encode the ACONST_NULL instruction. *\/\n-    int ACONST_NULL     = 1;\n-\n-    \/** The integer value used to encode the ICONST_M1 instruction. *\/\n-    int ICONST_M1       = 2;\n-\n-    \/** The integer value used to encode the ICONST_0 instruction. *\/\n-    int ICONST_0        = 3;\n-\n-    \/** The integer value used to encode the ICONST_1 instruction. *\/\n-    int ICONST_1        = 4;\n-\n-    \/** The integer value used to encode the ICONST_2 instruction. *\/\n-    int ICONST_2        = 5;\n-\n-    \/** The integer value used to encode the ICONST_3 instruction. *\/\n-    int ICONST_3        = 6;\n-\n-    \/** The integer value used to encode the ICONST_4 instruction. *\/\n-    int ICONST_4        = 7;\n-\n-    \/** The integer value used to encode the ICONST_5 instruction. *\/\n-    int ICONST_5        = 8;\n-\n-    \/** The integer value used to encode the LCONST_0 instruction. *\/\n-    int LCONST_0        = 9;\n-\n-    \/** The integer value used to encode the LCONST_1 instruction. *\/\n-    int LCONST_1        = 10;\n-\n-    \/** The integer value used to encode the FCONST_0 instruction. *\/\n-    int FCONST_0        = 11;\n-\n-    \/** The integer value used to encode the FCONST_1 instruction. *\/\n-    int FCONST_1        = 12;\n-\n-    \/** The integer value used to encode the FCONST_2 instruction. *\/\n-    int FCONST_2        = 13;\n-\n-    \/** The integer value used to encode the DCONST_0 instruction. *\/\n-    int DCONST_0        = 14;\n-\n-    \/** The integer value used to encode the DCONST_1 instruction. *\/\n-    int DCONST_1        = 15;\n-\n-    \/** The integer value used to encode the BIPUSH instruction. *\/\n-    int BIPUSH          = 16;\n-\n-    \/** The integer value used to encode the SIPUSH instruction. *\/\n-    int SIPUSH          = 17;\n-\n-    \/** The integer value used to encode the LDC instruction. *\/\n-    int LDC             = 18;\n-\n-    \/** The integer value used to encode the LDC_W instruction. *\/\n-    int LDC_W           = 19;\n-\n-    \/** The integer value used to encode the LDC2_W instruction. *\/\n-    int LDC2_W          = 20;\n-\n-    \/** The integer value used to encode the ILOAD instruction. *\/\n-    int ILOAD           = 21;\n-\n-    \/** The integer value used to encode the LLOAD instruction. *\/\n-    int LLOAD           = 22;\n-\n-    \/** The integer value used to encode the FLOAD instruction. *\/\n-    int FLOAD           = 23;\n-\n-    \/** The integer value used to encode the DLOAD instruction. *\/\n-    int DLOAD           = 24;\n-\n-    \/** The integer value used to encode the ALOAD instruction. *\/\n-    int ALOAD           = 25;\n-\n-    \/** The integer value used to encode the ILOAD_0 instruction. *\/\n-    int ILOAD_0         = 26;\n-\n-    \/** The integer value used to encode the ILOAD_1 instruction. *\/\n-    int ILOAD_1         = 27;\n-\n-    \/** The integer value used to encode the ILOAD_2 instruction. *\/\n-    int ILOAD_2         = 28;\n-\n-    \/** The integer value used to encode the ILOAD_3 instruction. *\/\n-    int ILOAD_3         = 29;\n-\n-    \/** The integer value used to encode the LLOAD_0 instruction. *\/\n-    int LLOAD_0         = 30;\n-\n-    \/** The integer value used to encode the LLOAD_1 instruction. *\/\n-    int LLOAD_1         = 31;\n-\n-    \/** The integer value used to encode the LLOAD_2 instruction. *\/\n-    int LLOAD_2         = 32;\n-\n-    \/** The integer value used to encode the LLOAD_3 instruction. *\/\n-    int LLOAD_3         = 33;\n-\n-    \/** The integer value used to encode the FLOAD_0 instruction. *\/\n-    int FLOAD_0         = 34;\n-\n-    \/** The integer value used to encode the FLOAD_1 instruction. *\/\n-    int FLOAD_1         = 35;\n-\n-    \/** The integer value used to encode the FLOAD_2 instruction. *\/\n-    int FLOAD_2         = 36;\n-\n-    \/** The integer value used to encode the FLOAD_3 instruction. *\/\n-    int FLOAD_3         = 37;\n-\n-    \/** The integer value used to encode the DLOAD_0 instruction. *\/\n-    int DLOAD_0         = 38;\n-\n-    \/** The integer value used to encode the DLOAD_1 instruction. *\/\n-    int DLOAD_1         = 39;\n-\n-    \/** The integer value used to encode the DLOAD_2 instruction. *\/\n-    int DLOAD_2         = 40;\n-\n-    \/** The integer value used to encode the DLOAD_3 instruction. *\/\n-    int DLOAD_3         = 41;\n-\n-    \/** The integer value used to encode the ALOAD_0 instruction. *\/\n-    int ALOAD_0         = 42;\n-\n-    \/** The integer value used to encode the ALOAD_1 instruction. *\/\n-    int ALOAD_1         = 43;\n-\n-    \/** The integer value used to encode the ALOAD_2 instruction. *\/\n-    int ALOAD_2         = 44;\n-\n-    \/** The integer value used to encode the ALOAD_3 instruction. *\/\n-    int ALOAD_3         = 45;\n-\n-    \/** The integer value used to encode the IALOAD instruction. *\/\n-    int IALOAD          = 46;\n-\n-    \/** The integer value used to encode the LALOAD instruction. *\/\n-    int LALOAD          = 47;\n-\n-    \/** The integer value used to encode the FALOAD instruction. *\/\n-    int FALOAD          = 48;\n-\n-    \/** The integer value used to encode the DALOAD instruction. *\/\n-    int DALOAD          = 49;\n-\n-    \/** The integer value used to encode the AALOAD instruction. *\/\n-    int AALOAD          = 50;\n-\n-    \/** The integer value used to encode the BALOAD instruction. *\/\n-    int BALOAD          = 51;\n-\n-    \/** The integer value used to encode the CALOAD instruction. *\/\n-    int CALOAD          = 52;\n-\n-    \/** The integer value used to encode the SALOAD instruction. *\/\n-    int SALOAD          = 53;\n-\n-    \/** The integer value used to encode the ISTORE instruction. *\/\n-    int ISTORE          = 54;\n-\n-    \/** The integer value used to encode the LSTORE instruction. *\/\n-    int LSTORE          = 55;\n-\n-    \/** The integer value used to encode the FSTORE instruction. *\/\n-    int FSTORE          = 56;\n-\n-    \/** The integer value used to encode the DSTORE instruction. *\/\n-    int DSTORE          = 57;\n-\n-    \/** The integer value used to encode the ASTORE instruction. *\/\n-    int ASTORE          = 58;\n-\n-    \/** The integer value used to encode the ISTORE_0 instruction. *\/\n-    int ISTORE_0        = 59;\n-\n-    \/** The integer value used to encode the ISTORE_1 instruction. *\/\n-    int ISTORE_1        = 60;\n-\n-    \/** The integer value used to encode the ISTORE_2 instruction. *\/\n-    int ISTORE_2        = 61;\n-\n-    \/** The integer value used to encode the ISTORE_3 instruction. *\/\n-    int ISTORE_3        = 62;\n-\n-    \/** The integer value used to encode the LSTORE_0 instruction. *\/\n-    int LSTORE_0        = 63;\n-\n-    \/** The integer value used to encode the LSTORE_1 instruction. *\/\n-    int LSTORE_1        = 64;\n-\n-    \/** The integer value used to encode the LSTORE_2 instruction. *\/\n-    int LSTORE_2        = 65;\n-\n-    \/** The integer value used to encode the LSTORE_3 instruction. *\/\n-    int LSTORE_3        = 66;\n-\n-    \/** The integer value used to encode the FSTORE_0 instruction. *\/\n-    int FSTORE_0        = 67;\n-\n-    \/** The integer value used to encode the FSTORE_1 instruction. *\/\n-    int FSTORE_1        = 68;\n-\n-    \/** The integer value used to encode the FSTORE_2 instruction. *\/\n-    int FSTORE_2        = 69;\n-\n-    \/** The integer value used to encode the FSTORE_3 instruction. *\/\n-    int FSTORE_3        = 70;\n-\n-    \/** The integer value used to encode the DSTORE_0 instruction. *\/\n-    int DSTORE_0        = 71;\n-\n-    \/** The integer value used to encode the DSTORE_1 instruction. *\/\n-    int DSTORE_1        = 72;\n-\n-    \/** The integer value used to encode the DSTORE_2 instruction. *\/\n-    int DSTORE_2        = 73;\n-\n-    \/** The integer value used to encode the DSTORE_3 instruction. *\/\n-    int DSTORE_3        = 74;\n-\n-    \/** The integer value used to encode the ASTORE_0 instruction. *\/\n-    int ASTORE_0        = 75;\n-\n-    \/** The integer value used to encode the ASTORE_1 instruction. *\/\n-    int ASTORE_1        = 76;\n-\n-    \/** The integer value used to encode the ASTORE_2 instruction. *\/\n-    int ASTORE_2        = 77;\n-\n-    \/** The integer value used to encode the ASTORE_3 instruction. *\/\n-    int ASTORE_3        = 78;\n-\n-    \/** The integer value used to encode the IASTORE instruction. *\/\n-    int IASTORE         = 79;\n-\n-    \/** The integer value used to encode the LASTORE instruction. *\/\n-    int LASTORE         = 80;\n-\n-    \/** The integer value used to encode the FASTORE instruction. *\/\n-    int FASTORE         = 81;\n-\n-    \/** The integer value used to encode the DASTORE instruction. *\/\n-    int DASTORE         = 82;\n-\n-    \/** The integer value used to encode the AASTORE instruction. *\/\n-    int AASTORE         = 83;\n-\n-    \/** The integer value used to encode the BASTORE instruction. *\/\n-    int BASTORE         = 84;\n-\n-    \/** The integer value used to encode the CASTORE instruction. *\/\n-    int CASTORE         = 85;\n-\n-    \/** The integer value used to encode the SASTORE instruction. *\/\n-    int SASTORE         = 86;\n-\n-    \/** The integer value used to encode the POP instruction. *\/\n-    int POP             = 87;\n-\n-    \/** The integer value used to encode the POP2 instruction. *\/\n-    int POP2            = 88;\n-\n-    \/** The integer value used to encode the DUP instruction. *\/\n-    int DUP             = 89;\n-\n-    \/** The integer value used to encode the DUP_X1 instruction. *\/\n-    int DUP_X1          = 90;\n-\n-    \/** The integer value used to encode the DUP_X2 instruction. *\/\n-    int DUP_X2          = 91;\n-\n-    \/** The integer value used to encode the DUP2 instruction. *\/\n-    int DUP2            = 92;\n-\n-    \/** The integer value used to encode the DUP2_X1 instruction. *\/\n-    int DUP2_X1         = 93;\n-\n-    \/** The integer value used to encode the DUP2_X2 instruction. *\/\n-    int DUP2_X2         = 94;\n-\n-    \/** The integer value used to encode the SWAP instruction. *\/\n-    int SWAP            = 95;\n-\n-    \/** The integer value used to encode the IADD instruction. *\/\n-    int IADD            = 96;\n-\n-    \/** The integer value used to encode the LADD instruction. *\/\n-    int LADD            = 97;\n-\n-    \/** The integer value used to encode the FADD instruction. *\/\n-    int FADD            = 98;\n-\n-    \/** The integer value used to encode the DADD instruction. *\/\n-    int DADD            = 99;\n-\n-    \/** The integer value used to encode the ISUB instruction. *\/\n-    int ISUB            = 100;\n-\n-    \/** The integer value used to encode the LSUB instruction. *\/\n-    int LSUB            = 101;\n-\n-    \/** The integer value used to encode the FSUB instruction. *\/\n-    int FSUB            = 102;\n-\n-    \/** The integer value used to encode the DSUB instruction. *\/\n-    int DSUB            = 103;\n-\n-    \/** The integer value used to encode the IMUL instruction. *\/\n-    int IMUL            = 104;\n-\n-    \/** The integer value used to encode the LMUL instruction. *\/\n-    int LMUL            = 105;\n-\n-    \/** The integer value used to encode the FMUL instruction. *\/\n-    int FMUL            = 106;\n-\n-    \/** The integer value used to encode the DMUL instruction. *\/\n-    int DMUL            = 107;\n-\n-    \/** The integer value used to encode the IDIV instruction. *\/\n-    int IDIV            = 108;\n-\n-    \/** The integer value used to encode the LDIV instruction. *\/\n-    int LDIV            = 109;\n-\n-    \/** The integer value used to encode the FDIV instruction. *\/\n-    int FDIV            = 110;\n-\n-    \/** The integer value used to encode the DDIV instruction. *\/\n-    int DDIV            = 111;\n-\n-    \/** The integer value used to encode the IREM instruction. *\/\n-    int IREM            = 112;\n-\n-    \/** The integer value used to encode the LREM instruction. *\/\n-    int LREM            = 113;\n-\n-    \/** The integer value used to encode the FREM instruction. *\/\n-    int FREM            = 114;\n-\n-    \/** The integer value used to encode the DREM instruction. *\/\n-    int DREM            = 115;\n-\n-    \/** The integer value used to encode the INEG instruction. *\/\n-    int INEG            = 116;\n-\n-    \/** The integer value used to encode the LNEG instruction. *\/\n-    int LNEG            = 117;\n-\n-    \/** The integer value used to encode the FNEG instruction. *\/\n-    int FNEG            = 118;\n-\n-    \/** The integer value used to encode the DNEG instruction. *\/\n-    int DNEG            = 119;\n-\n-    \/** The integer value used to encode the ISHL instruction. *\/\n-    int ISHL            = 120;\n-\n-    \/** The integer value used to encode the LSHL instruction. *\/\n-    int LSHL            = 121;\n-\n-    \/** The integer value used to encode the ISHR instruction. *\/\n-    int ISHR            = 122;\n-\n-    \/** The integer value used to encode the LSHR instruction. *\/\n-    int LSHR            = 123;\n-\n-    \/** The integer value used to encode the IUSHR instruction. *\/\n-    int IUSHR           = 124;\n-\n-    \/** The integer value used to encode the LUSHR instruction. *\/\n-    int LUSHR           = 125;\n-\n-    \/** The integer value used to encode the IAND instruction. *\/\n-    int IAND            = 126;\n-\n-    \/** The integer value used to encode the LAND instruction. *\/\n-    int LAND            = 127;\n-\n-    \/** The integer value used to encode the IOR instruction. *\/\n-    int IOR             = 128;\n-\n-    \/** The integer value used to encode the LOR instruction. *\/\n-    int LOR             = 129;\n-\n-    \/** The integer value used to encode the IXOR instruction. *\/\n-    int IXOR            = 130;\n-\n-    \/** The integer value used to encode the LXOR instruction. *\/\n-    int LXOR            = 131;\n-\n-    \/** The integer value used to encode the IINC instruction. *\/\n-    int IINC            = 132;\n-\n-    \/** The integer value used to encode the I2L instruction. *\/\n-    int I2L             = 133;\n-\n-    \/** The integer value used to encode the I2F instruction. *\/\n-    int I2F             = 134;\n-\n-    \/** The integer value used to encode the I2D instruction. *\/\n-    int I2D             = 135;\n-\n-    \/** The integer value used to encode the L2I instruction. *\/\n-    int L2I             = 136;\n-\n-    \/** The integer value used to encode the L2F instruction. *\/\n-    int L2F             = 137;\n-\n-    \/** The integer value used to encode the L2D instruction. *\/\n-    int L2D             = 138;\n-\n-    \/** The integer value used to encode the F2I instruction. *\/\n-    int F2I             = 139;\n-\n-    \/** The integer value used to encode the F2L instruction. *\/\n-    int F2L             = 140;\n-\n-    \/** The integer value used to encode the F2D instruction. *\/\n-    int F2D             = 141;\n-\n-    \/** The integer value used to encode the D2I instruction. *\/\n-    int D2I             = 142;\n-\n-    \/** The integer value used to encode the D2L instruction. *\/\n-    int D2L             = 143;\n-\n-    \/** The integer value used to encode the D2F instruction. *\/\n-    int D2F             = 144;\n-\n-    \/** The integer value used to encode the I2B instruction. *\/\n-    int I2B             = 145;\n-\n-    \/** The integer value used to encode the I2C instruction. *\/\n-    int I2C             = 146;\n-\n-    \/** The integer value used to encode the I2S instruction. *\/\n-    int I2S             = 147;\n-\n-    \/** The integer value used to encode the LCMP instruction. *\/\n-    int LCMP            = 148;\n-\n-    \/** The integer value used to encode the FCMPL instruction. *\/\n-    int FCMPL           = 149;\n-\n-    \/** The integer value used to encode the FCMPG instruction. *\/\n-    int FCMPG           = 150;\n-\n-    \/** The integer value used to encode the DCMPL instruction. *\/\n-    int DCMPL           = 151;\n-\n-    \/** The integer value used to encode the DCMPG instruction. *\/\n-    int DCMPG           = 152;\n-\n-    \/** The integer value used to encode the IFEQ instruction. *\/\n-    int IFEQ            = 153;\n-\n-    \/** The integer value used to encode the IFNE instruction. *\/\n-    int IFNE            = 154;\n-\n-    \/** The integer value used to encode the IFLT instruction. *\/\n-    int IFLT            = 155;\n-\n-    \/** The integer value used to encode the IFGE instruction. *\/\n-    int IFGE            = 156;\n-\n-    \/** The integer value used to encode the IFGT instruction. *\/\n-    int IFGT            = 157;\n-\n-    \/** The integer value used to encode the IFLE instruction. *\/\n-    int IFLE            = 158;\n-\n-    \/** The integer value used to encode the IF_ICMPEQ instruction. *\/\n-    int IF_ICMPEQ       = 159;\n-\n-    \/** The integer value used to encode the IF_ICMPNE instruction. *\/\n-    int IF_ICMPNE       = 160;\n-\n-    \/** The integer value used to encode the IF_ICMPLT instruction. *\/\n-    int IF_ICMPLT       = 161;\n-\n-    \/** The integer value used to encode the IF_ICMPGE instruction. *\/\n-    int IF_ICMPGE       = 162;\n-\n-    \/** The integer value used to encode the IF_ICMPGT instruction. *\/\n-    int IF_ICMPGT       = 163;\n-\n-    \/** The integer value used to encode the IF_ICMPLE instruction. *\/\n-    int IF_ICMPLE       = 164;\n-\n-    \/** The integer value used to encode the IF_ACMPEQ instruction. *\/\n-    int IF_ACMPEQ       = 165;\n-\n-    \/** The integer value used to encode the IF_ACMPNE instruction. *\/\n-    int IF_ACMPNE       = 166;\n-\n-    \/** The integer value used to encode the GOTO instruction. *\/\n-    int GOTO            = 167;\n-\n-    \/** The integer value used to encode the JSR instruction. *\/\n-    int JSR             = 168;\n-\n-    \/** The integer value used to encode the RET instruction. *\/\n-    int RET             = 169;\n-\n-    \/** The integer value used to encode the TABLESWITCH instruction. *\/\n-    int TABLESWITCH     = 170;\n-\n-    \/** The integer value used to encode the LOOKUPSWITCH instruction. *\/\n-    int LOOKUPSWITCH    = 171;\n-\n-    \/** The integer value used to encode the IRETURN instruction. *\/\n-    int IRETURN         = 172;\n-\n-    \/** The integer value used to encode the LRETURN instruction. *\/\n-    int LRETURN         = 173;\n-\n-    \/** The integer value used to encode the FRETURN instruction. *\/\n-    int FRETURN         = 174;\n-\n-    \/** The integer value used to encode the DRETURN instruction. *\/\n-    int DRETURN         = 175;\n-\n-    \/** The integer value used to encode the ARETURN instruction. *\/\n-    int ARETURN         = 176;\n-\n-    \/** The integer value used to encode the RETURN instruction. *\/\n-    int RETURN          = 177;\n-\n-    \/** The integer value used to encode the GETSTATIC instruction. *\/\n-    int GETSTATIC       = 178;\n-\n-    \/** The integer value used to encode the PUTSTATIC instruction. *\/\n-    int PUTSTATIC       = 179;\n-\n-    \/** The integer value used to encode the GETFIELD instruction. *\/\n-    int GETFIELD        = 180;\n-\n-    \/** The integer value used to encode the PUTFIELD instruction. *\/\n-    int PUTFIELD        = 181;\n-\n-    \/** The integer value used to encode the INVOKEVIRTUAL instruction. *\/\n-    int INVOKEVIRTUAL   = 182;\n-\n-    \/** The integer value used to encode the INVOKESPECIAL instruction. *\/\n-    int INVOKESPECIAL   = 183;\n-\n-    \/** The integer value used to encode the INVOKESTATIC instruction. *\/\n-    int INVOKESTATIC    = 184;\n-\n-    \/** The integer value used to encode the INVOKEINTERFACE instruction. *\/\n-    int INVOKEINTERFACE = 185;\n-\n-    \/** The integer value used to encode the INVOKEDYNAMIC instruction. *\/\n-    int INVOKEDYNAMIC   = 186;\n-\n-    \/** The integer value used to encode the NEW instruction. *\/\n-    int NEW             = 187;\n-\n-    \/** The integer value used to encode the NEWARRAY instruction. *\/\n-    int NEWARRAY        = 188;\n-\n-    \/** The integer value used to encode the ANEWARRAY instruction. *\/\n-    int ANEWARRAY       = 189;\n-\n-    \/** The integer value used to encode the ARRAYLENGTH instruction. *\/\n-    int ARRAYLENGTH     = 190;\n-\n-    \/** The integer value used to encode the ATHROW instruction. *\/\n-    int ATHROW          = 191;\n-\n-    \/** The integer value used to encode the CHECKCAST instruction. *\/\n-    int CHECKCAST       = 192;\n-\n-    \/** The integer value used to encode the INSTANCEOF instruction. *\/\n-    int INSTANCEOF      = 193;\n-\n-    \/** The integer value used to encode the MONITORENTER instruction. *\/\n-    int MONITORENTER    = 194;\n-\n-    \/** The integer value used to encode the MONITOREXIT instruction. *\/\n-    int MONITOREXIT     = 195;\n-\n-    \/** The integer value used to encode the WIDE instruction. *\/\n-    int WIDE            = 196;\n-\n-    \/** The integer value used to encode the MULTIANEWARRAY instruction. *\/\n-    int MULTIANEWARRAY  = 197;\n-\n-    \/** The integer value used to encode the IFNULL instruction. *\/\n-    int IFNULL          = 198;\n-\n-    \/** The integer value used to encode the IFNONNULL instruction. *\/\n-    int IFNONNULL       = 199;\n-\n-    \/** The integer value used to encode the GOTO_W instruction. *\/\n-    int GOTO_W          = 200;\n-\n-    \/** The integer value used to encode the JSR_W instruction. *\/\n-    int JSR_W           = 201;\n-\n-    \/** The value of PUBLIC access and property modifier. *\/\n+    \/** The bit mask of PUBLIC access and property modifier. *\/\n@@ -1124,1 +518,1 @@\n-    \/** The value of PROTECTED access and property modifier. *\/\n+    \/** The bit mask of PROTECTED access and property modifier. *\/\n@@ -1127,1 +521,1 @@\n-    \/** The value of PRIVATE access and property modifier. *\/\n+    \/** The bit mask of PRIVATE access and property modifier. *\/\n@@ -1130,1 +524,1 @@\n-    \/** The value of INTERFACE access and property modifier. *\/\n+    \/** The bit mask of INTERFACE access and property modifier. *\/\n@@ -1133,1 +527,1 @@\n-    \/** The value of ENUM access and property modifier. *\/\n+    \/** The bit mask of ENUM access and property modifier. *\/\n@@ -1136,1 +530,1 @@\n-    \/** The value of ANNOTATION access and property modifier. *\/\n+    \/** The bit mask of ANNOTATION access and property modifier. *\/\n@@ -1139,1 +533,1 @@\n-    \/** The value of SUPER access and property modifier. *\/\n+    \/** The bit mask of SUPER access and property modifier. *\/\n@@ -1142,1 +536,1 @@\n-    \/** The value of ABSTRACT access and property modifier. *\/\n+    \/** The bit mask of ABSTRACT access and property modifier. *\/\n@@ -1145,1 +539,1 @@\n-    \/** The value of VOLATILE access and property modifier. *\/\n+    \/** The bit mask of VOLATILE access and property modifier. *\/\n@@ -1148,1 +542,1 @@\n-    \/** The value of TRANSIENT access and property modifier. *\/\n+    \/** The bit mask of TRANSIENT access and property modifier. *\/\n@@ -1151,1 +545,1 @@\n-    \/** The value of SYNTHETIC access and property modifier. *\/\n+    \/** The bit mask of SYNTHETIC access and property modifier. *\/\n@@ -1154,1 +548,1 @@\n-    \/** The value of STATIC access and property modifier. *\/\n+    \/** The bit mask of STATIC access and property modifier. *\/\n@@ -1157,1 +551,1 @@\n-    \/** The value of FINAL access and property modifier. *\/\n+    \/** The bit mask of FINAL access and property modifier. *\/\n@@ -1160,1 +554,1 @@\n-    \/** The value of SYNCHRONIZED access and property modifier. *\/\n+    \/** The bit mask of SYNCHRONIZED access and property modifier. *\/\n@@ -1163,1 +557,1 @@\n-    \/** The value of BRIDGE access and property modifier. *\/\n+    \/** The bit mask of BRIDGE access and property modifier. *\/\n@@ -1166,1 +560,1 @@\n-    \/** The value of VARARGS access and property modifier. *\/\n+    \/** The bit mask of VARARGS access and property modifier. *\/\n@@ -1169,1 +563,1 @@\n-    \/** The value of NATIVE access and property modifier. *\/\n+    \/** The bit mask of NATIVE access and property modifier. *\/\n@@ -1172,1 +566,1 @@\n-    \/** The value of STRICT access and property modifier. *\/\n+    \/** The bit mask of STRICT access and property modifier. *\/\n@@ -1175,1 +569,1 @@\n-    \/** The value of MODULE access and property modifier. *\/\n+    \/** The bit mask of MODULE access and property modifier. *\/\n@@ -1178,1 +572,1 @@\n-    \/** The value of OPEN access and property modifier. *\/\n+    \/** The bit mask of OPEN access and property modifier. *\/\n@@ -1181,1 +575,1 @@\n-    \/** The value of MANDATED access and property modifier. *\/\n+    \/** The bit mask of MANDATED access and property modifier. *\/\n@@ -1184,1 +578,1 @@\n-    \/** The value of TRANSITIVE access and property modifier. *\/\n+    \/** The bit mask of TRANSITIVE access and property modifier. *\/\n@@ -1187,1 +581,1 @@\n-    \/** The value of STATIC_PHASE access and property modifier. *\/\n+    \/** The bit mask of STATIC_PHASE access and property modifier. *\/\n@@ -1190,222 +584,0 @@\n-    \/** The value of STATEMENT {@link CharacterRangeInfo} kind. *\/\n-    int CRT_STATEMENT       = 0x0001;\n-\n-    \/** The value of BLOCK {@link CharacterRangeInfo} kind. *\/\n-    int CRT_BLOCK           = 0x0002;\n-\n-    \/** The value of ASSIGNMENT {@link CharacterRangeInfo} kind. *\/\n-    int CRT_ASSIGNMENT      = 0x0004;\n-\n-    \/** The value of FLOW_CONTROLLER {@link CharacterRangeInfo} kind. *\/\n-    int CRT_FLOW_CONTROLLER = 0x0008;\n-\n-    \/** The value of FLOW_TARGET {@link CharacterRangeInfo} kind. *\/\n-    int CRT_FLOW_TARGET     = 0x0010;\n-\n-    \/** The value of INVOKE {@link CharacterRangeInfo} kind. *\/\n-    int CRT_INVOKE          = 0x0020;\n-\n-    \/** The value of CREATE {@link CharacterRangeInfo} kind. *\/\n-    int CRT_CREATE          = 0x0040;\n-\n-    \/** The value of BRANCH_TRUE {@link CharacterRangeInfo} kind. *\/\n-    int CRT_BRANCH_TRUE     = 0x0080;\n-\n-    \/** The value of BRANCH_FALSE {@link CharacterRangeInfo} kind. *\/\n-    int CRT_BRANCH_FALSE    = 0x0100;\n-\n-    \/** The value of constant pool tag CLASS. *\/\n-    int TAG_CLASS = 7;\n-\n-    \/** The value of constant pool tag CONSTANTDYNAMIC. *\/\n-    int TAG_CONSTANTDYNAMIC = 17;\n-\n-    \/** The value of constant pool tag DOUBLE. *\/\n-    int TAG_DOUBLE = 6;\n-\n-    \/** The value of constant pool tag FIELDREF. *\/\n-    int TAG_FIELDREF = 9;\n-\n-    \/** The value of constant pool tag FLOAT. *\/\n-    int TAG_FLOAT = 4;\n-\n-    \/** The value of constant pool tag INTEGER. *\/\n-    int TAG_INTEGER = 3;\n-\n-    \/** The value of constant pool tag INTERFACEMETHODREF. *\/\n-    int TAG_INTERFACEMETHODREF = 11;\n-\n-    \/** The value of constant pool tag INVOKEDYNAMIC. *\/\n-    int TAG_INVOKEDYNAMIC = 18;\n-\n-    \/** The value of constant pool tag LONG. *\/\n-    int TAG_LONG = 5;\n-\n-    \/** The value of constant pool tag METHODHANDLE. *\/\n-    int TAG_METHODHANDLE = 15;\n-\n-    \/** The value of constant pool tag METHODREF. *\/\n-    int TAG_METHODREF = 10;\n-\n-    \/** The value of constant pool tag METHODTYPE. *\/\n-    int TAG_METHODTYPE = 16;\n-\n-    \/** The value of constant pool tag MODULE. *\/\n-    int TAG_MODULE = 19;\n-\n-    \/** The value of constant pool tag NAMEANDTYPE. *\/\n-    int TAG_NAMEANDTYPE = 12;\n-\n-    \/** The value of constant pool tag PACKAGE. *\/\n-    int TAG_PACKAGE = 20;\n-\n-    \/** The value of constant pool tag STRING. *\/\n-    int TAG_STRING = 8;\n-\n-    \/** The value of constant pool tag UNICODE. *\/\n-    int TAG_UNICODE = 2;\n-\n-    \/** The value of constant pool tag UTF8. *\/\n-    int TAG_UTF8 = 1;\n-\n-    \/\/ annotation element values\n-\n-    \/** The value of annotation element value type AEV_BYTE. *\/\n-    int AEV_BYTE = 'B';\n-\n-    \/** The value of annotation element value type AEV_CHAR. *\/\n-    int AEV_CHAR = 'C';\n-\n-    \/** The value of annotation element value type AEV_DOUBLE. *\/\n-    int AEV_DOUBLE = 'D';\n-\n-    \/** The value of annotation element value type AEV_FLOAT. *\/\n-    int AEV_FLOAT = 'F';\n-\n-    \/** The value of annotation element value type AEV_INT. *\/\n-    int AEV_INT = 'I';\n-\n-    \/** The value of annotation element value type AEV_LONG. *\/\n-    int AEV_LONG = 'J';\n-\n-    \/** The value of annotation element value type AEV_SHORT. *\/\n-    int AEV_SHORT = 'S';\n-\n-    \/** The value of annotation element value type AEV_BOOLEAN. *\/\n-    int AEV_BOOLEAN = 'Z';\n-\n-    \/** The value of annotation element value type AEV_STRING. *\/\n-    int AEV_STRING = 's';\n-\n-    \/** The value of annotation element value type AEV_ENUM. *\/\n-    int AEV_ENUM = 'e';\n-\n-    \/** The value of annotation element value type AEV_CLASS. *\/\n-    int AEV_CLASS = 'c';\n-\n-    \/** The value of annotation element value type AEV_ANNOTATION. *\/\n-    int AEV_ANNOTATION = '@';\n-\n-    \/** The value of annotation element value type AEV_ARRAY. *\/\n-    int AEV_ARRAY = '[';\n-\n-    \/\/type annotations\n-\n-    \/** The value of type annotation target type CLASS_TYPE_PARAMETER. *\/\n-    int TAT_CLASS_TYPE_PARAMETER = 0x00;\n-\n-    \/** The value of type annotation target type METHOD_TYPE_PARAMETER. *\/\n-    int TAT_METHOD_TYPE_PARAMETER = 0x01;\n-\n-    \/** The value of type annotation target type CLASS_EXTENDS. *\/\n-    int TAT_CLASS_EXTENDS = 0x10;\n-\n-    \/** The value of type annotation target type CLASS_TYPE_PARAMETER_BOUND. *\/\n-    int TAT_CLASS_TYPE_PARAMETER_BOUND = 0x11;\n-\n-    \/** The value of type annotation target type METHOD_TYPE_PARAMETER_BOUND. *\/\n-    int TAT_METHOD_TYPE_PARAMETER_BOUND = 0x12;\n-\n-    \/** The value of type annotation target type FIELD. *\/\n-    int TAT_FIELD = 0x13;\n-\n-    \/** The value of type annotation target type METHOD_RETURN. *\/\n-    int TAT_METHOD_RETURN = 0x14;\n-\n-    \/** The value of type annotation target type METHOD_RECEIVER. *\/\n-    int TAT_METHOD_RECEIVER = 0x15;\n-\n-    \/** The value of type annotation target type METHOD_FORMAL_PARAMETER. *\/\n-    int TAT_METHOD_FORMAL_PARAMETER = 0x16;\n-\n-    \/** The value of type annotation target type THROWS. *\/\n-    int TAT_THROWS = 0x17;\n-\n-    \/** The value of type annotation target type LOCAL_VARIABLE. *\/\n-    int TAT_LOCAL_VARIABLE = 0x40;\n-\n-    \/** The value of type annotation target type RESOURCE_VARIABLE. *\/\n-    int TAT_RESOURCE_VARIABLE = 0x41;\n-\n-    \/** The value of type annotation target type EXCEPTION_PARAMETER. *\/\n-    int TAT_EXCEPTION_PARAMETER = 0x42;\n-\n-    \/** The value of type annotation target type INSTANCEOF. *\/\n-    int TAT_INSTANCEOF = 0x43;\n-\n-    \/** The value of type annotation target type NEW. *\/\n-    int TAT_NEW = 0x44;\n-\n-    \/** The value of type annotation target type CONSTRUCTOR_REFERENCE. *\/\n-    int TAT_CONSTRUCTOR_REFERENCE = 0x45;\n-\n-    \/** The value of type annotation target type METHOD_REFERENCE. *\/\n-    int TAT_METHOD_REFERENCE = 0x46;\n-\n-    \/** The value of type annotation target type CAST. *\/\n-    int TAT_CAST = 0x47;\n-\n-    \/** The value of type annotation target type CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT. *\/\n-    int TAT_CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT = 0x48;\n-\n-    \/** The value of type annotation target type METHOD_INVOCATION_TYPE_ARGUMENT. *\/\n-    int TAT_METHOD_INVOCATION_TYPE_ARGUMENT = 0x49;\n-\n-    \/** The value of type annotation target type CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT. *\/\n-    int TAT_CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT = 0x4A;\n-\n-    \/** The value of type annotation target type METHOD_REFERENCE_TYPE_ARGUMENT. *\/\n-    int TAT_METHOD_REFERENCE_TYPE_ARGUMENT = 0x4B;\n-\n-    \/\/stackmap verification types\n-\n-    \/** The value of verification type TOP. *\/\n-    int VT_TOP = 0;\n-\n-    \/** The value of verification type INTEGER. *\/\n-    int VT_INTEGER = 1;\n-\n-    \/** The value of verification type FLOAT. *\/\n-    int VT_FLOAT = 2;\n-\n-    \/** The value of verification type DOUBLE. *\/\n-    int VT_DOUBLE = 3;\n-\n-    \/** The value of verification type LONG. *\/\n-    int VT_LONG = 4;\n-\n-    \/** The value of verification type NULL. *\/\n-    int VT_NULL = 5;\n-\n-    \/** The value of verification type UNINITIALIZED_THIS. *\/\n-    int VT_UNINITIALIZED_THIS = 6;\n-\n-    \/** The value of verification type OBJECT. *\/\n-    int VT_OBJECT = 7;\n-\n-    \/** The value of verification type UNINITIALIZED. *\/\n-    int VT_UNINITIALIZED = 8;\n-\n-    \/** The value of default class access flags *\/\n-    int DEFAULT_CLASS_FLAGS = ACC_PUBLIC;\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/ClassFile.java","additions":23,"deletions":851,"binary":false,"changes":874,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import jdk.internal.classfile.impl.RawBytecodeHelper;\n@@ -43,1 +44,1 @@\n-    NOP(ClassFile.NOP, 1, Kind.NOP),\n+    NOP(RawBytecodeHelper.NOP, 1, Kind.NOP),\n@@ -46,1 +47,1 @@\n-    ACONST_NULL(ClassFile.ACONST_NULL, 1, Kind.CONSTANT),\n+    ACONST_NULL(RawBytecodeHelper.ACONST_NULL, 1, Kind.CONSTANT),\n@@ -49,1 +50,1 @@\n-    ICONST_M1(ClassFile.ICONST_M1, 1, Kind.CONSTANT),\n+    ICONST_M1(RawBytecodeHelper.ICONST_M1, 1, Kind.CONSTANT),\n@@ -52,1 +53,1 @@\n-    ICONST_0(ClassFile.ICONST_0, 1, Kind.CONSTANT),\n+    ICONST_0(RawBytecodeHelper.ICONST_0, 1, Kind.CONSTANT),\n@@ -55,1 +56,1 @@\n-    ICONST_1(ClassFile.ICONST_1, 1, Kind.CONSTANT),\n+    ICONST_1(RawBytecodeHelper.ICONST_1, 1, Kind.CONSTANT),\n@@ -58,1 +59,1 @@\n-    ICONST_2(ClassFile.ICONST_2, 1, Kind.CONSTANT),\n+    ICONST_2(RawBytecodeHelper.ICONST_2, 1, Kind.CONSTANT),\n@@ -61,1 +62,1 @@\n-    ICONST_3(ClassFile.ICONST_3, 1, Kind.CONSTANT),\n+    ICONST_3(RawBytecodeHelper.ICONST_3, 1, Kind.CONSTANT),\n@@ -64,1 +65,1 @@\n-    ICONST_4(ClassFile.ICONST_4, 1, Kind.CONSTANT),\n+    ICONST_4(RawBytecodeHelper.ICONST_4, 1, Kind.CONSTANT),\n@@ -67,1 +68,1 @@\n-    ICONST_5(ClassFile.ICONST_5, 1, Kind.CONSTANT),\n+    ICONST_5(RawBytecodeHelper.ICONST_5, 1, Kind.CONSTANT),\n@@ -70,1 +71,1 @@\n-    LCONST_0(ClassFile.LCONST_0, 1, Kind.CONSTANT),\n+    LCONST_0(RawBytecodeHelper.LCONST_0, 1, Kind.CONSTANT),\n@@ -73,1 +74,1 @@\n-    LCONST_1(ClassFile.LCONST_1, 1, Kind.CONSTANT),\n+    LCONST_1(RawBytecodeHelper.LCONST_1, 1, Kind.CONSTANT),\n@@ -76,1 +77,1 @@\n-    FCONST_0(ClassFile.FCONST_0, 1, Kind.CONSTANT),\n+    FCONST_0(RawBytecodeHelper.FCONST_0, 1, Kind.CONSTANT),\n@@ -79,1 +80,1 @@\n-    FCONST_1(ClassFile.FCONST_1, 1, Kind.CONSTANT),\n+    FCONST_1(RawBytecodeHelper.FCONST_1, 1, Kind.CONSTANT),\n@@ -82,1 +83,1 @@\n-    FCONST_2(ClassFile.FCONST_2, 1, Kind.CONSTANT),\n+    FCONST_2(RawBytecodeHelper.FCONST_2, 1, Kind.CONSTANT),\n@@ -85,1 +86,1 @@\n-    DCONST_0(ClassFile.DCONST_0, 1, Kind.CONSTANT),\n+    DCONST_0(RawBytecodeHelper.DCONST_0, 1, Kind.CONSTANT),\n@@ -88,1 +89,1 @@\n-    DCONST_1(ClassFile.DCONST_1, 1, Kind.CONSTANT),\n+    DCONST_1(RawBytecodeHelper.DCONST_1, 1, Kind.CONSTANT),\n@@ -91,1 +92,1 @@\n-    BIPUSH(ClassFile.BIPUSH, 2, Kind.CONSTANT),\n+    BIPUSH(RawBytecodeHelper.BIPUSH, 2, Kind.CONSTANT),\n@@ -94,1 +95,1 @@\n-    SIPUSH(ClassFile.SIPUSH, 3, Kind.CONSTANT),\n+    SIPUSH(RawBytecodeHelper.SIPUSH, 3, Kind.CONSTANT),\n@@ -97,1 +98,1 @@\n-    LDC(ClassFile.LDC, 2, Kind.CONSTANT),\n+    LDC(RawBytecodeHelper.LDC, 2, Kind.CONSTANT),\n@@ -100,1 +101,1 @@\n-    LDC_W(ClassFile.LDC_W, 3, Kind.CONSTANT),\n+    LDC_W(RawBytecodeHelper.LDC_W, 3, Kind.CONSTANT),\n@@ -103,1 +104,1 @@\n-    LDC2_W(ClassFile.LDC2_W, 3, Kind.CONSTANT),\n+    LDC2_W(RawBytecodeHelper.LDC2_W, 3, Kind.CONSTANT),\n@@ -106,1 +107,1 @@\n-    ILOAD(ClassFile.ILOAD, 2, Kind.LOAD),\n+    ILOAD(RawBytecodeHelper.ILOAD, 2, Kind.LOAD),\n@@ -109,1 +110,1 @@\n-    LLOAD(ClassFile.LLOAD, 2, Kind.LOAD),\n+    LLOAD(RawBytecodeHelper.LLOAD, 2, Kind.LOAD),\n@@ -112,1 +113,1 @@\n-    FLOAD(ClassFile.FLOAD, 2, Kind.LOAD),\n+    FLOAD(RawBytecodeHelper.FLOAD, 2, Kind.LOAD),\n@@ -115,1 +116,1 @@\n-    DLOAD(ClassFile.DLOAD, 2, Kind.LOAD),\n+    DLOAD(RawBytecodeHelper.DLOAD, 2, Kind.LOAD),\n@@ -118,1 +119,1 @@\n-    ALOAD(ClassFile.ALOAD, 2, Kind.LOAD),\n+    ALOAD(RawBytecodeHelper.ALOAD, 2, Kind.LOAD),\n@@ -121,1 +122,1 @@\n-    ILOAD_0(ClassFile.ILOAD_0, 1, Kind.LOAD),\n+    ILOAD_0(RawBytecodeHelper.ILOAD_0, 1, Kind.LOAD),\n@@ -124,1 +125,1 @@\n-    ILOAD_1(ClassFile.ILOAD_1, 1, Kind.LOAD),\n+    ILOAD_1(RawBytecodeHelper.ILOAD_1, 1, Kind.LOAD),\n@@ -127,1 +128,1 @@\n-    ILOAD_2(ClassFile.ILOAD_2, 1, Kind.LOAD),\n+    ILOAD_2(RawBytecodeHelper.ILOAD_2, 1, Kind.LOAD),\n@@ -130,1 +131,1 @@\n-    ILOAD_3(ClassFile.ILOAD_3, 1, Kind.LOAD),\n+    ILOAD_3(RawBytecodeHelper.ILOAD_3, 1, Kind.LOAD),\n@@ -133,1 +134,1 @@\n-    LLOAD_0(ClassFile.LLOAD_0, 1, Kind.LOAD),\n+    LLOAD_0(RawBytecodeHelper.LLOAD_0, 1, Kind.LOAD),\n@@ -136,1 +137,1 @@\n-    LLOAD_1(ClassFile.LLOAD_1, 1, Kind.LOAD),\n+    LLOAD_1(RawBytecodeHelper.LLOAD_1, 1, Kind.LOAD),\n@@ -139,1 +140,1 @@\n-    LLOAD_2(ClassFile.LLOAD_2, 1, Kind.LOAD),\n+    LLOAD_2(RawBytecodeHelper.LLOAD_2, 1, Kind.LOAD),\n@@ -142,1 +143,1 @@\n-    LLOAD_3(ClassFile.LLOAD_3, 1, Kind.LOAD),\n+    LLOAD_3(RawBytecodeHelper.LLOAD_3, 1, Kind.LOAD),\n@@ -145,1 +146,1 @@\n-    FLOAD_0(ClassFile.FLOAD_0, 1, Kind.LOAD),\n+    FLOAD_0(RawBytecodeHelper.FLOAD_0, 1, Kind.LOAD),\n@@ -148,1 +149,1 @@\n-    FLOAD_1(ClassFile.FLOAD_1, 1, Kind.LOAD),\n+    FLOAD_1(RawBytecodeHelper.FLOAD_1, 1, Kind.LOAD),\n@@ -151,1 +152,1 @@\n-    FLOAD_2(ClassFile.FLOAD_2, 1, Kind.LOAD),\n+    FLOAD_2(RawBytecodeHelper.FLOAD_2, 1, Kind.LOAD),\n@@ -154,1 +155,1 @@\n-    FLOAD_3(ClassFile.FLOAD_3, 1, Kind.LOAD),\n+    FLOAD_3(RawBytecodeHelper.FLOAD_3, 1, Kind.LOAD),\n@@ -157,1 +158,1 @@\n-    DLOAD_0(ClassFile.DLOAD_0, 1, Kind.LOAD),\n+    DLOAD_0(RawBytecodeHelper.DLOAD_0, 1, Kind.LOAD),\n@@ -160,1 +161,1 @@\n-    DLOAD_1(ClassFile.DLOAD_1, 1, Kind.LOAD),\n+    DLOAD_1(RawBytecodeHelper.DLOAD_1, 1, Kind.LOAD),\n@@ -163,1 +164,1 @@\n-    DLOAD_2(ClassFile.DLOAD_2, 1, Kind.LOAD),\n+    DLOAD_2(RawBytecodeHelper.DLOAD_2, 1, Kind.LOAD),\n@@ -166,1 +167,1 @@\n-    DLOAD_3(ClassFile.DLOAD_3, 1, Kind.LOAD),\n+    DLOAD_3(RawBytecodeHelper.DLOAD_3, 1, Kind.LOAD),\n@@ -169,1 +170,1 @@\n-    ALOAD_0(ClassFile.ALOAD_0, 1, Kind.LOAD),\n+    ALOAD_0(RawBytecodeHelper.ALOAD_0, 1, Kind.LOAD),\n@@ -172,1 +173,1 @@\n-    ALOAD_1(ClassFile.ALOAD_1, 1, Kind.LOAD),\n+    ALOAD_1(RawBytecodeHelper.ALOAD_1, 1, Kind.LOAD),\n@@ -175,1 +176,1 @@\n-    ALOAD_2(ClassFile.ALOAD_2, 1, Kind.LOAD),\n+    ALOAD_2(RawBytecodeHelper.ALOAD_2, 1, Kind.LOAD),\n@@ -178,1 +179,1 @@\n-    ALOAD_3(ClassFile.ALOAD_3, 1, Kind.LOAD),\n+    ALOAD_3(RawBytecodeHelper.ALOAD_3, 1, Kind.LOAD),\n@@ -181,1 +182,1 @@\n-    IALOAD(ClassFile.IALOAD, 1, Kind.ARRAY_LOAD),\n+    IALOAD(RawBytecodeHelper.IALOAD, 1, Kind.ARRAY_LOAD),\n@@ -184,1 +185,1 @@\n-    LALOAD(ClassFile.LALOAD, 1, Kind.ARRAY_LOAD),\n+    LALOAD(RawBytecodeHelper.LALOAD, 1, Kind.ARRAY_LOAD),\n@@ -187,1 +188,1 @@\n-    FALOAD(ClassFile.FALOAD, 1, Kind.ARRAY_LOAD),\n+    FALOAD(RawBytecodeHelper.FALOAD, 1, Kind.ARRAY_LOAD),\n@@ -190,1 +191,1 @@\n-    DALOAD(ClassFile.DALOAD, 1, Kind.ARRAY_LOAD),\n+    DALOAD(RawBytecodeHelper.DALOAD, 1, Kind.ARRAY_LOAD),\n@@ -193,1 +194,1 @@\n-    AALOAD(ClassFile.AALOAD, 1, Kind.ARRAY_LOAD),\n+    AALOAD(RawBytecodeHelper.AALOAD, 1, Kind.ARRAY_LOAD),\n@@ -196,1 +197,1 @@\n-    BALOAD(ClassFile.BALOAD, 1, Kind.ARRAY_LOAD),\n+    BALOAD(RawBytecodeHelper.BALOAD, 1, Kind.ARRAY_LOAD),\n@@ -199,1 +200,1 @@\n-    CALOAD(ClassFile.CALOAD, 1, Kind.ARRAY_LOAD),\n+    CALOAD(RawBytecodeHelper.CALOAD, 1, Kind.ARRAY_LOAD),\n@@ -202,1 +203,1 @@\n-    SALOAD(ClassFile.SALOAD, 1, Kind.ARRAY_LOAD),\n+    SALOAD(RawBytecodeHelper.SALOAD, 1, Kind.ARRAY_LOAD),\n@@ -205,1 +206,1 @@\n-    ISTORE(ClassFile.ISTORE, 2, Kind.STORE),\n+    ISTORE(RawBytecodeHelper.ISTORE, 2, Kind.STORE),\n@@ -208,1 +209,1 @@\n-    LSTORE(ClassFile.LSTORE, 2, Kind.STORE),\n+    LSTORE(RawBytecodeHelper.LSTORE, 2, Kind.STORE),\n@@ -211,1 +212,1 @@\n-    FSTORE(ClassFile.FSTORE, 2, Kind.STORE),\n+    FSTORE(RawBytecodeHelper.FSTORE, 2, Kind.STORE),\n@@ -214,1 +215,1 @@\n-    DSTORE(ClassFile.DSTORE, 2, Kind.STORE),\n+    DSTORE(RawBytecodeHelper.DSTORE, 2, Kind.STORE),\n@@ -217,1 +218,1 @@\n-    ASTORE(ClassFile.ASTORE, 2, Kind.STORE),\n+    ASTORE(RawBytecodeHelper.ASTORE, 2, Kind.STORE),\n@@ -220,1 +221,1 @@\n-    ISTORE_0(ClassFile.ISTORE_0, 1, Kind.STORE),\n+    ISTORE_0(RawBytecodeHelper.ISTORE_0, 1, Kind.STORE),\n@@ -223,1 +224,1 @@\n-    ISTORE_1(ClassFile.ISTORE_1, 1, Kind.STORE),\n+    ISTORE_1(RawBytecodeHelper.ISTORE_1, 1, Kind.STORE),\n@@ -226,1 +227,1 @@\n-    ISTORE_2(ClassFile.ISTORE_2, 1, Kind.STORE),\n+    ISTORE_2(RawBytecodeHelper.ISTORE_2, 1, Kind.STORE),\n@@ -229,1 +230,1 @@\n-    ISTORE_3(ClassFile.ISTORE_3, 1, Kind.STORE),\n+    ISTORE_3(RawBytecodeHelper.ISTORE_3, 1, Kind.STORE),\n@@ -232,1 +233,1 @@\n-    LSTORE_0(ClassFile.LSTORE_0, 1, Kind.STORE),\n+    LSTORE_0(RawBytecodeHelper.LSTORE_0, 1, Kind.STORE),\n@@ -235,1 +236,1 @@\n-    LSTORE_1(ClassFile.LSTORE_1, 1, Kind.STORE),\n+    LSTORE_1(RawBytecodeHelper.LSTORE_1, 1, Kind.STORE),\n@@ -238,1 +239,1 @@\n-    LSTORE_2(ClassFile.LSTORE_2, 1, Kind.STORE),\n+    LSTORE_2(RawBytecodeHelper.LSTORE_2, 1, Kind.STORE),\n@@ -241,1 +242,1 @@\n-    LSTORE_3(ClassFile.LSTORE_3, 1, Kind.STORE),\n+    LSTORE_3(RawBytecodeHelper.LSTORE_3, 1, Kind.STORE),\n@@ -244,1 +245,1 @@\n-    FSTORE_0(ClassFile.FSTORE_0, 1, Kind.STORE),\n+    FSTORE_0(RawBytecodeHelper.FSTORE_0, 1, Kind.STORE),\n@@ -247,1 +248,1 @@\n-    FSTORE_1(ClassFile.FSTORE_1, 1, Kind.STORE),\n+    FSTORE_1(RawBytecodeHelper.FSTORE_1, 1, Kind.STORE),\n@@ -250,1 +251,1 @@\n-    FSTORE_2(ClassFile.FSTORE_2, 1, Kind.STORE),\n+    FSTORE_2(RawBytecodeHelper.FSTORE_2, 1, Kind.STORE),\n@@ -253,1 +254,1 @@\n-    FSTORE_3(ClassFile.FSTORE_3, 1, Kind.STORE),\n+    FSTORE_3(RawBytecodeHelper.FSTORE_3, 1, Kind.STORE),\n@@ -256,1 +257,1 @@\n-    DSTORE_0(ClassFile.DSTORE_0, 1, Kind.STORE),\n+    DSTORE_0(RawBytecodeHelper.DSTORE_0, 1, Kind.STORE),\n@@ -259,1 +260,1 @@\n-    DSTORE_1(ClassFile.DSTORE_1, 1, Kind.STORE),\n+    DSTORE_1(RawBytecodeHelper.DSTORE_1, 1, Kind.STORE),\n@@ -262,1 +263,1 @@\n-    DSTORE_2(ClassFile.DSTORE_2, 1, Kind.STORE),\n+    DSTORE_2(RawBytecodeHelper.DSTORE_2, 1, Kind.STORE),\n@@ -265,1 +266,1 @@\n-    DSTORE_3(ClassFile.DSTORE_3, 1, Kind.STORE),\n+    DSTORE_3(RawBytecodeHelper.DSTORE_3, 1, Kind.STORE),\n@@ -268,1 +269,1 @@\n-    ASTORE_0(ClassFile.ASTORE_0, 1, Kind.STORE),\n+    ASTORE_0(RawBytecodeHelper.ASTORE_0, 1, Kind.STORE),\n@@ -271,1 +272,1 @@\n-    ASTORE_1(ClassFile.ASTORE_1, 1, Kind.STORE),\n+    ASTORE_1(RawBytecodeHelper.ASTORE_1, 1, Kind.STORE),\n@@ -274,1 +275,1 @@\n-    ASTORE_2(ClassFile.ASTORE_2, 1, Kind.STORE),\n+    ASTORE_2(RawBytecodeHelper.ASTORE_2, 1, Kind.STORE),\n@@ -277,1 +278,1 @@\n-    ASTORE_3(ClassFile.ASTORE_3, 1, Kind.STORE),\n+    ASTORE_3(RawBytecodeHelper.ASTORE_3, 1, Kind.STORE),\n@@ -280,1 +281,1 @@\n-    IASTORE(ClassFile.IASTORE, 1, Kind.ARRAY_STORE),\n+    IASTORE(RawBytecodeHelper.IASTORE, 1, Kind.ARRAY_STORE),\n@@ -283,1 +284,1 @@\n-    LASTORE(ClassFile.LASTORE, 1, Kind.ARRAY_STORE),\n+    LASTORE(RawBytecodeHelper.LASTORE, 1, Kind.ARRAY_STORE),\n@@ -286,1 +287,1 @@\n-    FASTORE(ClassFile.FASTORE, 1, Kind.ARRAY_STORE),\n+    FASTORE(RawBytecodeHelper.FASTORE, 1, Kind.ARRAY_STORE),\n@@ -289,1 +290,1 @@\n-    DASTORE(ClassFile.DASTORE, 1, Kind.ARRAY_STORE),\n+    DASTORE(RawBytecodeHelper.DASTORE, 1, Kind.ARRAY_STORE),\n@@ -292,1 +293,1 @@\n-    AASTORE(ClassFile.AASTORE, 1, Kind.ARRAY_STORE),\n+    AASTORE(RawBytecodeHelper.AASTORE, 1, Kind.ARRAY_STORE),\n@@ -295,1 +296,1 @@\n-    BASTORE(ClassFile.BASTORE, 1, Kind.ARRAY_STORE),\n+    BASTORE(RawBytecodeHelper.BASTORE, 1, Kind.ARRAY_STORE),\n@@ -298,1 +299,1 @@\n-    CASTORE(ClassFile.CASTORE, 1, Kind.ARRAY_STORE),\n+    CASTORE(RawBytecodeHelper.CASTORE, 1, Kind.ARRAY_STORE),\n@@ -301,1 +302,1 @@\n-    SASTORE(ClassFile.SASTORE, 1, Kind.ARRAY_STORE),\n+    SASTORE(RawBytecodeHelper.SASTORE, 1, Kind.ARRAY_STORE),\n@@ -304,1 +305,1 @@\n-    POP(ClassFile.POP, 1, Kind.STACK),\n+    POP(RawBytecodeHelper.POP, 1, Kind.STACK),\n@@ -307,1 +308,1 @@\n-    POP2(ClassFile.POP2, 1, Kind.STACK),\n+    POP2(RawBytecodeHelper.POP2, 1, Kind.STACK),\n@@ -310,1 +311,1 @@\n-    DUP(ClassFile.DUP, 1, Kind.STACK),\n+    DUP(RawBytecodeHelper.DUP, 1, Kind.STACK),\n@@ -313,1 +314,1 @@\n-    DUP_X1(ClassFile.DUP_X1, 1, Kind.STACK),\n+    DUP_X1(RawBytecodeHelper.DUP_X1, 1, Kind.STACK),\n@@ -316,1 +317,1 @@\n-    DUP_X2(ClassFile.DUP_X2, 1, Kind.STACK),\n+    DUP_X2(RawBytecodeHelper.DUP_X2, 1, Kind.STACK),\n@@ -319,1 +320,1 @@\n-    DUP2(ClassFile.DUP2, 1, Kind.STACK),\n+    DUP2(RawBytecodeHelper.DUP2, 1, Kind.STACK),\n@@ -322,1 +323,1 @@\n-    DUP2_X1(ClassFile.DUP2_X1, 1, Kind.STACK),\n+    DUP2_X1(RawBytecodeHelper.DUP2_X1, 1, Kind.STACK),\n@@ -325,1 +326,1 @@\n-    DUP2_X2(ClassFile.DUP2_X2, 1, Kind.STACK),\n+    DUP2_X2(RawBytecodeHelper.DUP2_X2, 1, Kind.STACK),\n@@ -328,1 +329,1 @@\n-    SWAP(ClassFile.SWAP, 1, Kind.STACK),\n+    SWAP(RawBytecodeHelper.SWAP, 1, Kind.STACK),\n@@ -331,1 +332,1 @@\n-    IADD(ClassFile.IADD, 1, Kind.OPERATOR),\n+    IADD(RawBytecodeHelper.IADD, 1, Kind.OPERATOR),\n@@ -334,1 +335,1 @@\n-    LADD(ClassFile.LADD, 1, Kind.OPERATOR),\n+    LADD(RawBytecodeHelper.LADD, 1, Kind.OPERATOR),\n@@ -337,1 +338,1 @@\n-    FADD(ClassFile.FADD, 1, Kind.OPERATOR),\n+    FADD(RawBytecodeHelper.FADD, 1, Kind.OPERATOR),\n@@ -340,1 +341,1 @@\n-    DADD(ClassFile.DADD, 1, Kind.OPERATOR),\n+    DADD(RawBytecodeHelper.DADD, 1, Kind.OPERATOR),\n@@ -343,1 +344,1 @@\n-    ISUB(ClassFile.ISUB, 1, Kind.OPERATOR),\n+    ISUB(RawBytecodeHelper.ISUB, 1, Kind.OPERATOR),\n@@ -346,1 +347,1 @@\n-    LSUB(ClassFile.LSUB, 1, Kind.OPERATOR),\n+    LSUB(RawBytecodeHelper.LSUB, 1, Kind.OPERATOR),\n@@ -349,1 +350,1 @@\n-    FSUB(ClassFile.FSUB, 1, Kind.OPERATOR),\n+    FSUB(RawBytecodeHelper.FSUB, 1, Kind.OPERATOR),\n@@ -352,1 +353,1 @@\n-    DSUB(ClassFile.DSUB, 1, Kind.OPERATOR),\n+    DSUB(RawBytecodeHelper.DSUB, 1, Kind.OPERATOR),\n@@ -355,1 +356,1 @@\n-    IMUL(ClassFile.IMUL, 1, Kind.OPERATOR),\n+    IMUL(RawBytecodeHelper.IMUL, 1, Kind.OPERATOR),\n@@ -358,1 +359,1 @@\n-    LMUL(ClassFile.LMUL, 1, Kind.OPERATOR),\n+    LMUL(RawBytecodeHelper.LMUL, 1, Kind.OPERATOR),\n@@ -361,1 +362,1 @@\n-    FMUL(ClassFile.FMUL, 1, Kind.OPERATOR),\n+    FMUL(RawBytecodeHelper.FMUL, 1, Kind.OPERATOR),\n@@ -364,1 +365,1 @@\n-    DMUL(ClassFile.DMUL, 1, Kind.OPERATOR),\n+    DMUL(RawBytecodeHelper.DMUL, 1, Kind.OPERATOR),\n@@ -367,1 +368,1 @@\n-    IDIV(ClassFile.IDIV, 1, Kind.OPERATOR),\n+    IDIV(RawBytecodeHelper.IDIV, 1, Kind.OPERATOR),\n@@ -370,1 +371,1 @@\n-    LDIV(ClassFile.LDIV, 1, Kind.OPERATOR),\n+    LDIV(RawBytecodeHelper.LDIV, 1, Kind.OPERATOR),\n@@ -373,1 +374,1 @@\n-    FDIV(ClassFile.FDIV, 1, Kind.OPERATOR),\n+    FDIV(RawBytecodeHelper.FDIV, 1, Kind.OPERATOR),\n@@ -376,1 +377,1 @@\n-    DDIV(ClassFile.DDIV, 1, Kind.OPERATOR),\n+    DDIV(RawBytecodeHelper.DDIV, 1, Kind.OPERATOR),\n@@ -379,1 +380,1 @@\n-    IREM(ClassFile.IREM, 1, Kind.OPERATOR),\n+    IREM(RawBytecodeHelper.IREM, 1, Kind.OPERATOR),\n@@ -382,1 +383,1 @@\n-    LREM(ClassFile.LREM, 1, Kind.OPERATOR),\n+    LREM(RawBytecodeHelper.LREM, 1, Kind.OPERATOR),\n@@ -385,1 +386,1 @@\n-    FREM(ClassFile.FREM, 1, Kind.OPERATOR),\n+    FREM(RawBytecodeHelper.FREM, 1, Kind.OPERATOR),\n@@ -388,1 +389,1 @@\n-    DREM(ClassFile.DREM, 1, Kind.OPERATOR),\n+    DREM(RawBytecodeHelper.DREM, 1, Kind.OPERATOR),\n@@ -391,1 +392,1 @@\n-    INEG(ClassFile.INEG, 1, Kind.OPERATOR),\n+    INEG(RawBytecodeHelper.INEG, 1, Kind.OPERATOR),\n@@ -394,1 +395,1 @@\n-    LNEG(ClassFile.LNEG, 1, Kind.OPERATOR),\n+    LNEG(RawBytecodeHelper.LNEG, 1, Kind.OPERATOR),\n@@ -397,1 +398,1 @@\n-    FNEG(ClassFile.FNEG, 1, Kind.OPERATOR),\n+    FNEG(RawBytecodeHelper.FNEG, 1, Kind.OPERATOR),\n@@ -400,1 +401,1 @@\n-    DNEG(ClassFile.DNEG, 1, Kind.OPERATOR),\n+    DNEG(RawBytecodeHelper.DNEG, 1, Kind.OPERATOR),\n@@ -403,1 +404,1 @@\n-    ISHL(ClassFile.ISHL, 1, Kind.OPERATOR),\n+    ISHL(RawBytecodeHelper.ISHL, 1, Kind.OPERATOR),\n@@ -406,1 +407,1 @@\n-    LSHL(ClassFile.LSHL, 1, Kind.OPERATOR),\n+    LSHL(RawBytecodeHelper.LSHL, 1, Kind.OPERATOR),\n@@ -409,1 +410,1 @@\n-    ISHR(ClassFile.ISHR, 1, Kind.OPERATOR),\n+    ISHR(RawBytecodeHelper.ISHR, 1, Kind.OPERATOR),\n@@ -412,1 +413,1 @@\n-    LSHR(ClassFile.LSHR, 1, Kind.OPERATOR),\n+    LSHR(RawBytecodeHelper.LSHR, 1, Kind.OPERATOR),\n@@ -415,1 +416,1 @@\n-    IUSHR(ClassFile.IUSHR, 1, Kind.OPERATOR),\n+    IUSHR(RawBytecodeHelper.IUSHR, 1, Kind.OPERATOR),\n@@ -418,1 +419,1 @@\n-    LUSHR(ClassFile.LUSHR, 1, Kind.OPERATOR),\n+    LUSHR(RawBytecodeHelper.LUSHR, 1, Kind.OPERATOR),\n@@ -421,1 +422,1 @@\n-    IAND(ClassFile.IAND, 1, Kind.OPERATOR),\n+    IAND(RawBytecodeHelper.IAND, 1, Kind.OPERATOR),\n@@ -424,1 +425,1 @@\n-    LAND(ClassFile.LAND, 1, Kind.OPERATOR),\n+    LAND(RawBytecodeHelper.LAND, 1, Kind.OPERATOR),\n@@ -427,1 +428,1 @@\n-    IOR(ClassFile.IOR, 1, Kind.OPERATOR),\n+    IOR(RawBytecodeHelper.IOR, 1, Kind.OPERATOR),\n@@ -430,1 +431,1 @@\n-    LOR(ClassFile.LOR, 1, Kind.OPERATOR),\n+    LOR(RawBytecodeHelper.LOR, 1, Kind.OPERATOR),\n@@ -433,1 +434,1 @@\n-    IXOR(ClassFile.IXOR, 1, Kind.OPERATOR),\n+    IXOR(RawBytecodeHelper.IXOR, 1, Kind.OPERATOR),\n@@ -436,1 +437,1 @@\n-    LXOR(ClassFile.LXOR, 1, Kind.OPERATOR),\n+    LXOR(RawBytecodeHelper.LXOR, 1, Kind.OPERATOR),\n@@ -439,1 +440,1 @@\n-    IINC(ClassFile.IINC, 3, Kind.INCREMENT),\n+    IINC(RawBytecodeHelper.IINC, 3, Kind.INCREMENT),\n@@ -442,1 +443,1 @@\n-    I2L(ClassFile.I2L, 1, Kind.CONVERT),\n+    I2L(RawBytecodeHelper.I2L, 1, Kind.CONVERT),\n@@ -445,1 +446,1 @@\n-    I2F(ClassFile.I2F, 1, Kind.CONVERT),\n+    I2F(RawBytecodeHelper.I2F, 1, Kind.CONVERT),\n@@ -448,1 +449,1 @@\n-    I2D(ClassFile.I2D, 1, Kind.CONVERT),\n+    I2D(RawBytecodeHelper.I2D, 1, Kind.CONVERT),\n@@ -451,1 +452,1 @@\n-    L2I(ClassFile.L2I, 1, Kind.CONVERT),\n+    L2I(RawBytecodeHelper.L2I, 1, Kind.CONVERT),\n@@ -454,1 +455,1 @@\n-    L2F(ClassFile.L2F, 1, Kind.CONVERT),\n+    L2F(RawBytecodeHelper.L2F, 1, Kind.CONVERT),\n@@ -457,1 +458,1 @@\n-    L2D(ClassFile.L2D, 1, Kind.CONVERT),\n+    L2D(RawBytecodeHelper.L2D, 1, Kind.CONVERT),\n@@ -460,1 +461,1 @@\n-    F2I(ClassFile.F2I, 1, Kind.CONVERT),\n+    F2I(RawBytecodeHelper.F2I, 1, Kind.CONVERT),\n@@ -463,1 +464,1 @@\n-    F2L(ClassFile.F2L, 1, Kind.CONVERT),\n+    F2L(RawBytecodeHelper.F2L, 1, Kind.CONVERT),\n@@ -466,1 +467,1 @@\n-    F2D(ClassFile.F2D, 1, Kind.CONVERT),\n+    F2D(RawBytecodeHelper.F2D, 1, Kind.CONVERT),\n@@ -469,1 +470,1 @@\n-    D2I(ClassFile.D2I, 1, Kind.CONVERT),\n+    D2I(RawBytecodeHelper.D2I, 1, Kind.CONVERT),\n@@ -472,1 +473,1 @@\n-    D2L(ClassFile.D2L, 1, Kind.CONVERT),\n+    D2L(RawBytecodeHelper.D2L, 1, Kind.CONVERT),\n@@ -475,1 +476,1 @@\n-    D2F(ClassFile.D2F, 1, Kind.CONVERT),\n+    D2F(RawBytecodeHelper.D2F, 1, Kind.CONVERT),\n@@ -478,1 +479,1 @@\n-    I2B(ClassFile.I2B, 1, Kind.CONVERT),\n+    I2B(RawBytecodeHelper.I2B, 1, Kind.CONVERT),\n@@ -481,1 +482,1 @@\n-    I2C(ClassFile.I2C, 1, Kind.CONVERT),\n+    I2C(RawBytecodeHelper.I2C, 1, Kind.CONVERT),\n@@ -484,1 +485,1 @@\n-    I2S(ClassFile.I2S, 1, Kind.CONVERT),\n+    I2S(RawBytecodeHelper.I2S, 1, Kind.CONVERT),\n@@ -487,1 +488,1 @@\n-    LCMP(ClassFile.LCMP, 1, Kind.OPERATOR),\n+    LCMP(RawBytecodeHelper.LCMP, 1, Kind.OPERATOR),\n@@ -490,1 +491,1 @@\n-    FCMPL(ClassFile.FCMPL, 1, Kind.OPERATOR),\n+    FCMPL(RawBytecodeHelper.FCMPL, 1, Kind.OPERATOR),\n@@ -493,1 +494,1 @@\n-    FCMPG(ClassFile.FCMPG, 1, Kind.OPERATOR),\n+    FCMPG(RawBytecodeHelper.FCMPG, 1, Kind.OPERATOR),\n@@ -496,1 +497,1 @@\n-    DCMPL(ClassFile.DCMPL, 1, Kind.OPERATOR),\n+    DCMPL(RawBytecodeHelper.DCMPL, 1, Kind.OPERATOR),\n@@ -499,1 +500,1 @@\n-    DCMPG(ClassFile.DCMPG, 1, Kind.OPERATOR),\n+    DCMPG(RawBytecodeHelper.DCMPG, 1, Kind.OPERATOR),\n@@ -502,1 +503,1 @@\n-    IFEQ(ClassFile.IFEQ, 3, Kind.BRANCH),\n+    IFEQ(RawBytecodeHelper.IFEQ, 3, Kind.BRANCH),\n@@ -505,1 +506,1 @@\n-    IFNE(ClassFile.IFNE, 3, Kind.BRANCH),\n+    IFNE(RawBytecodeHelper.IFNE, 3, Kind.BRANCH),\n@@ -508,1 +509,1 @@\n-    IFLT(ClassFile.IFLT, 3, Kind.BRANCH),\n+    IFLT(RawBytecodeHelper.IFLT, 3, Kind.BRANCH),\n@@ -511,1 +512,1 @@\n-    IFGE(ClassFile.IFGE, 3, Kind.BRANCH),\n+    IFGE(RawBytecodeHelper.IFGE, 3, Kind.BRANCH),\n@@ -514,1 +515,1 @@\n-    IFGT(ClassFile.IFGT, 3, Kind.BRANCH),\n+    IFGT(RawBytecodeHelper.IFGT, 3, Kind.BRANCH),\n@@ -517,1 +518,1 @@\n-    IFLE(ClassFile.IFLE, 3, Kind.BRANCH),\n+    IFLE(RawBytecodeHelper.IFLE, 3, Kind.BRANCH),\n@@ -520,1 +521,1 @@\n-    IF_ICMPEQ(ClassFile.IF_ICMPEQ, 3, Kind.BRANCH),\n+    IF_ICMPEQ(RawBytecodeHelper.IF_ICMPEQ, 3, Kind.BRANCH),\n@@ -523,1 +524,1 @@\n-    IF_ICMPNE(ClassFile.IF_ICMPNE, 3, Kind.BRANCH),\n+    IF_ICMPNE(RawBytecodeHelper.IF_ICMPNE, 3, Kind.BRANCH),\n@@ -526,1 +527,1 @@\n-    IF_ICMPLT(ClassFile.IF_ICMPLT, 3, Kind.BRANCH),\n+    IF_ICMPLT(RawBytecodeHelper.IF_ICMPLT, 3, Kind.BRANCH),\n@@ -529,1 +530,1 @@\n-    IF_ICMPGE(ClassFile.IF_ICMPGE, 3, Kind.BRANCH),\n+    IF_ICMPGE(RawBytecodeHelper.IF_ICMPGE, 3, Kind.BRANCH),\n@@ -532,1 +533,1 @@\n-    IF_ICMPGT(ClassFile.IF_ICMPGT, 3, Kind.BRANCH),\n+    IF_ICMPGT(RawBytecodeHelper.IF_ICMPGT, 3, Kind.BRANCH),\n@@ -535,1 +536,1 @@\n-    IF_ICMPLE(ClassFile.IF_ICMPLE, 3, Kind.BRANCH),\n+    IF_ICMPLE(RawBytecodeHelper.IF_ICMPLE, 3, Kind.BRANCH),\n@@ -538,1 +539,1 @@\n-    IF_ACMPEQ(ClassFile.IF_ACMPEQ, 3, Kind.BRANCH),\n+    IF_ACMPEQ(RawBytecodeHelper.IF_ACMPEQ, 3, Kind.BRANCH),\n@@ -541,1 +542,1 @@\n-    IF_ACMPNE(ClassFile.IF_ACMPNE, 3, Kind.BRANCH),\n+    IF_ACMPNE(RawBytecodeHelper.IF_ACMPNE, 3, Kind.BRANCH),\n@@ -544,1 +545,1 @@\n-    GOTO(ClassFile.GOTO, 3, Kind.BRANCH),\n+    GOTO(RawBytecodeHelper.GOTO, 3, Kind.BRANCH),\n@@ -550,1 +551,1 @@\n-    JSR(ClassFile.JSR, 3, Kind.DISCONTINUED_JSR),\n+    JSR(RawBytecodeHelper.JSR, 3, Kind.DISCONTINUED_JSR),\n@@ -556,1 +557,1 @@\n-    RET(ClassFile.RET, 2, Kind.DISCONTINUED_RET),\n+    RET(RawBytecodeHelper.RET, 2, Kind.DISCONTINUED_RET),\n@@ -559,1 +560,1 @@\n-    TABLESWITCH(ClassFile.TABLESWITCH, -1, Kind.TABLE_SWITCH),\n+    TABLESWITCH(RawBytecodeHelper.TABLESWITCH, -1, Kind.TABLE_SWITCH),\n@@ -562,1 +563,1 @@\n-    LOOKUPSWITCH(ClassFile.LOOKUPSWITCH, -1, Kind.LOOKUP_SWITCH),\n+    LOOKUPSWITCH(RawBytecodeHelper.LOOKUPSWITCH, -1, Kind.LOOKUP_SWITCH),\n@@ -565,1 +566,1 @@\n-    IRETURN(ClassFile.IRETURN, 1, Kind.RETURN),\n+    IRETURN(RawBytecodeHelper.IRETURN, 1, Kind.RETURN),\n@@ -568,1 +569,1 @@\n-    LRETURN(ClassFile.LRETURN, 1, Kind.RETURN),\n+    LRETURN(RawBytecodeHelper.LRETURN, 1, Kind.RETURN),\n@@ -571,1 +572,1 @@\n-    FRETURN(ClassFile.FRETURN, 1, Kind.RETURN),\n+    FRETURN(RawBytecodeHelper.FRETURN, 1, Kind.RETURN),\n@@ -574,1 +575,1 @@\n-    DRETURN(ClassFile.DRETURN, 1, Kind.RETURN),\n+    DRETURN(RawBytecodeHelper.DRETURN, 1, Kind.RETURN),\n@@ -577,1 +578,1 @@\n-    ARETURN(ClassFile.ARETURN, 1, Kind.RETURN),\n+    ARETURN(RawBytecodeHelper.ARETURN, 1, Kind.RETURN),\n@@ -580,1 +581,1 @@\n-    RETURN(ClassFile.RETURN, 1, Kind.RETURN),\n+    RETURN(RawBytecodeHelper.RETURN, 1, Kind.RETURN),\n@@ -583,1 +584,1 @@\n-    GETSTATIC(ClassFile.GETSTATIC, 3, Kind.FIELD_ACCESS),\n+    GETSTATIC(RawBytecodeHelper.GETSTATIC, 3, Kind.FIELD_ACCESS),\n@@ -586,1 +587,1 @@\n-    PUTSTATIC(ClassFile.PUTSTATIC, 3, Kind.FIELD_ACCESS),\n+    PUTSTATIC(RawBytecodeHelper.PUTSTATIC, 3, Kind.FIELD_ACCESS),\n@@ -589,1 +590,1 @@\n-    GETFIELD(ClassFile.GETFIELD, 3, Kind.FIELD_ACCESS),\n+    GETFIELD(RawBytecodeHelper.GETFIELD, 3, Kind.FIELD_ACCESS),\n@@ -592,1 +593,1 @@\n-    PUTFIELD(ClassFile.PUTFIELD, 3, Kind.FIELD_ACCESS),\n+    PUTFIELD(RawBytecodeHelper.PUTFIELD, 3, Kind.FIELD_ACCESS),\n@@ -595,1 +596,1 @@\n-    INVOKEVIRTUAL(ClassFile.INVOKEVIRTUAL, 3, Kind.INVOKE),\n+    INVOKEVIRTUAL(RawBytecodeHelper.INVOKEVIRTUAL, 3, Kind.INVOKE),\n@@ -601,1 +602,1 @@\n-    INVOKESPECIAL(ClassFile.INVOKESPECIAL, 3, Kind.INVOKE),\n+    INVOKESPECIAL(RawBytecodeHelper.INVOKESPECIAL, 3, Kind.INVOKE),\n@@ -604,1 +605,1 @@\n-    INVOKESTATIC(ClassFile.INVOKESTATIC, 3, Kind.INVOKE),\n+    INVOKESTATIC(RawBytecodeHelper.INVOKESTATIC, 3, Kind.INVOKE),\n@@ -607,1 +608,1 @@\n-    INVOKEINTERFACE(ClassFile.INVOKEINTERFACE, 5, Kind.INVOKE),\n+    INVOKEINTERFACE(RawBytecodeHelper.INVOKEINTERFACE, 5, Kind.INVOKE),\n@@ -610,1 +611,1 @@\n-    INVOKEDYNAMIC(ClassFile.INVOKEDYNAMIC, 5, Kind.INVOKE_DYNAMIC),\n+    INVOKEDYNAMIC(RawBytecodeHelper.INVOKEDYNAMIC, 5, Kind.INVOKE_DYNAMIC),\n@@ -613,1 +614,1 @@\n-    NEW(ClassFile.NEW, 3, Kind.NEW_OBJECT),\n+    NEW(RawBytecodeHelper.NEW, 3, Kind.NEW_OBJECT),\n@@ -616,1 +617,1 @@\n-    NEWARRAY(ClassFile.NEWARRAY, 2, Kind.NEW_PRIMITIVE_ARRAY),\n+    NEWARRAY(RawBytecodeHelper.NEWARRAY, 2, Kind.NEW_PRIMITIVE_ARRAY),\n@@ -619,1 +620,1 @@\n-    ANEWARRAY(ClassFile.ANEWARRAY, 3, Kind.NEW_REF_ARRAY),\n+    ANEWARRAY(RawBytecodeHelper.ANEWARRAY, 3, Kind.NEW_REF_ARRAY),\n@@ -622,1 +623,1 @@\n-    ARRAYLENGTH(ClassFile.ARRAYLENGTH, 1, Kind.OPERATOR),\n+    ARRAYLENGTH(RawBytecodeHelper.ARRAYLENGTH, 1, Kind.OPERATOR),\n@@ -625,1 +626,1 @@\n-    ATHROW(ClassFile.ATHROW, 1, Kind.THROW_EXCEPTION),\n+    ATHROW(RawBytecodeHelper.ATHROW, 1, Kind.THROW_EXCEPTION),\n@@ -628,1 +629,1 @@\n-    CHECKCAST(ClassFile.CHECKCAST, 3, Kind.TYPE_CHECK),\n+    CHECKCAST(RawBytecodeHelper.CHECKCAST, 3, Kind.TYPE_CHECK),\n@@ -631,1 +632,1 @@\n-    INSTANCEOF(ClassFile.INSTANCEOF, 3, Kind.TYPE_CHECK),\n+    INSTANCEOF(RawBytecodeHelper.INSTANCEOF, 3, Kind.TYPE_CHECK),\n@@ -634,1 +635,1 @@\n-    MONITORENTER(ClassFile.MONITORENTER, 1, Kind.MONITOR),\n+    MONITORENTER(RawBytecodeHelper.MONITORENTER, 1, Kind.MONITOR),\n@@ -637,1 +638,1 @@\n-    MONITOREXIT(ClassFile.MONITOREXIT, 1, Kind.MONITOR),\n+    MONITOREXIT(RawBytecodeHelper.MONITOREXIT, 1, Kind.MONITOR),\n@@ -640,1 +641,1 @@\n-    MULTIANEWARRAY(ClassFile.MULTIANEWARRAY, 4, Kind.NEW_MULTI_ARRAY),\n+    MULTIANEWARRAY(RawBytecodeHelper.MULTIANEWARRAY, 4, Kind.NEW_MULTI_ARRAY),\n@@ -643,1 +644,1 @@\n-    IFNULL(ClassFile.IFNULL, 3, Kind.BRANCH),\n+    IFNULL(RawBytecodeHelper.IFNULL, 3, Kind.BRANCH),\n@@ -646,1 +647,1 @@\n-    IFNONNULL(ClassFile.IFNONNULL, 3, Kind.BRANCH),\n+    IFNONNULL(RawBytecodeHelper.IFNONNULL, 3, Kind.BRANCH),\n@@ -649,1 +650,1 @@\n-    GOTO_W(ClassFile.GOTO_W, 5, Kind.BRANCH),\n+    GOTO_W(RawBytecodeHelper.GOTO_W, 5, Kind.BRANCH),\n@@ -655,1 +656,1 @@\n-    JSR_W(ClassFile.JSR_W, 5, Kind.DISCONTINUED_JSR),\n+    JSR_W(RawBytecodeHelper.JSR_W, 5, Kind.DISCONTINUED_JSR),\n@@ -658,1 +659,1 @@\n-    ILOAD_W((ClassFile.WIDE << 8) | ClassFile.ILOAD, 4, Kind.LOAD),\n+    ILOAD_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.ILOAD, 4, Kind.LOAD),\n@@ -661,1 +662,1 @@\n-    LLOAD_W((ClassFile.WIDE << 8) | ClassFile.LLOAD, 4, Kind.LOAD),\n+    LLOAD_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.LLOAD, 4, Kind.LOAD),\n@@ -664,1 +665,1 @@\n-    FLOAD_W((ClassFile.WIDE << 8) | ClassFile.FLOAD, 4, Kind.LOAD),\n+    FLOAD_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.FLOAD, 4, Kind.LOAD),\n@@ -667,1 +668,1 @@\n-    DLOAD_W((ClassFile.WIDE << 8) | ClassFile.DLOAD, 4, Kind.LOAD),\n+    DLOAD_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.DLOAD, 4, Kind.LOAD),\n@@ -670,1 +671,1 @@\n-    ALOAD_W((ClassFile.WIDE << 8) | ClassFile.ALOAD, 4, Kind.LOAD),\n+    ALOAD_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.ALOAD, 4, Kind.LOAD),\n@@ -673,1 +674,1 @@\n-    ISTORE_W((ClassFile.WIDE << 8) | ClassFile.ISTORE, 4, Kind.STORE),\n+    ISTORE_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.ISTORE, 4, Kind.STORE),\n@@ -676,1 +677,1 @@\n-    LSTORE_W((ClassFile.WIDE << 8) | ClassFile.LSTORE, 4, Kind.STORE),\n+    LSTORE_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.LSTORE, 4, Kind.STORE),\n@@ -679,1 +680,1 @@\n-    FSTORE_W((ClassFile.WIDE << 8) | ClassFile.FSTORE, 4, Kind.STORE),\n+    FSTORE_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.FSTORE, 4, Kind.STORE),\n@@ -682,1 +683,1 @@\n-    DSTORE_W((ClassFile.WIDE << 8) | ClassFile.DSTORE, 4, Kind.STORE),\n+    DSTORE_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.DSTORE, 4, Kind.STORE),\n@@ -685,1 +686,1 @@\n-    ASTORE_W((ClassFile.WIDE << 8) | ClassFile.ASTORE, 4, Kind.STORE),\n+    ASTORE_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.ASTORE, 4, Kind.STORE),\n@@ -691,1 +692,1 @@\n-    RET_W((ClassFile.WIDE << 8) | ClassFile.RET, 4, Kind.DISCONTINUED_RET),\n+    RET_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.RET, 4, Kind.DISCONTINUED_RET),\n@@ -694,1 +695,1 @@\n-    IINC_W((ClassFile.WIDE << 8) | ClassFile.IINC, 6, Kind.INCREMENT);\n+    IINC_W((RawBytecodeHelper.WIDE << 8) | RawBytecodeHelper.IINC, 6, Kind.INCREMENT);\n@@ -1088,2 +1089,2 @@\n-     * first 2 bytes of the instruction, which are the {@code wide} opcode and the functional\n-     * local variable opcode, as a U2 value.\n+     * first 2 bytes of the instruction, which are the wide opcode {@code 196} ({@code 0xC4})\n+     * and the functional opcode, as a U2 value.\n@@ -1094,1 +1095,1 @@\n-     * {@return true if this is a pseudo-opcode modified by {@code wide}}\n+     * {@return true if this is a pseudo-opcode modified by wide opcode}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/Opcode.java","additions":217,"deletions":216,"binary":false,"changes":433,"status":"modified"},{"patch":"@@ -34,23 +34,0 @@\n-\n-import static java.lang.classfile.ClassFile.TAT_CAST;\n-import static java.lang.classfile.ClassFile.TAT_CLASS_EXTENDS;\n-import static java.lang.classfile.ClassFile.TAT_CLASS_TYPE_PARAMETER;\n-import static java.lang.classfile.ClassFile.TAT_CLASS_TYPE_PARAMETER_BOUND;\n-import static java.lang.classfile.ClassFile.TAT_CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT;\n-import static java.lang.classfile.ClassFile.TAT_CONSTRUCTOR_REFERENCE;\n-import static java.lang.classfile.ClassFile.TAT_CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT;\n-import static java.lang.classfile.ClassFile.TAT_EXCEPTION_PARAMETER;\n-import static java.lang.classfile.ClassFile.TAT_FIELD;\n-import static java.lang.classfile.ClassFile.TAT_INSTANCEOF;\n-import static java.lang.classfile.ClassFile.TAT_LOCAL_VARIABLE;\n-import static java.lang.classfile.ClassFile.TAT_METHOD_FORMAL_PARAMETER;\n-import static java.lang.classfile.ClassFile.TAT_METHOD_INVOCATION_TYPE_ARGUMENT;\n-import static java.lang.classfile.ClassFile.TAT_METHOD_RECEIVER;\n-import static java.lang.classfile.ClassFile.TAT_METHOD_REFERENCE;\n-import static java.lang.classfile.ClassFile.TAT_METHOD_REFERENCE_TYPE_ARGUMENT;\n-import static java.lang.classfile.ClassFile.TAT_METHOD_RETURN;\n-import static java.lang.classfile.ClassFile.TAT_METHOD_TYPE_PARAMETER;\n-import static java.lang.classfile.ClassFile.TAT_METHOD_TYPE_PARAMETER_BOUND;\n-import static java.lang.classfile.ClassFile.TAT_NEW;\n-import static java.lang.classfile.ClassFile.TAT_RESOURCE_VARIABLE;\n-import static java.lang.classfile.ClassFile.TAT_THROWS;\n@@ -59,0 +36,2 @@\n+import static java.lang.classfile.TypeAnnotation.TargetInfo.*;\n+\n@@ -90,1 +69,1 @@\n-        CLASS_TYPE_PARAMETER(TAT_CLASS_TYPE_PARAMETER, 1),\n+        CLASS_TYPE_PARAMETER(TARGET_CLASS_TYPE_PARAMETER, 1),\n@@ -93,1 +72,1 @@\n-        METHOD_TYPE_PARAMETER(TAT_METHOD_TYPE_PARAMETER, 1),\n+        METHOD_TYPE_PARAMETER(TARGET_METHOD_TYPE_PARAMETER, 1),\n@@ -96,1 +75,1 @@\n-        CLASS_EXTENDS(TAT_CLASS_EXTENDS, 2),\n+        CLASS_EXTENDS(TARGET_CLASS_EXTENDS, 2),\n@@ -99,1 +78,1 @@\n-        CLASS_TYPE_PARAMETER_BOUND(TAT_CLASS_TYPE_PARAMETER_BOUND, 2),\n+        CLASS_TYPE_PARAMETER_BOUND(TARGET_CLASS_TYPE_PARAMETER_BOUND, 2),\n@@ -102,1 +81,1 @@\n-        METHOD_TYPE_PARAMETER_BOUND(TAT_METHOD_TYPE_PARAMETER_BOUND, 2),\n+        METHOD_TYPE_PARAMETER_BOUND(TARGET_METHOD_TYPE_PARAMETER_BOUND, 2),\n@@ -105,1 +84,1 @@\n-        FIELD(TAT_FIELD, 0),\n+        FIELD(TARGET_FIELD, 0),\n@@ -108,1 +87,1 @@\n-        METHOD_RETURN(TAT_METHOD_RETURN, 0),\n+        METHOD_RETURN(TARGET_METHOD_RETURN, 0),\n@@ -111,1 +90,1 @@\n-        METHOD_RECEIVER(TAT_METHOD_RECEIVER, 0),\n+        METHOD_RECEIVER(TARGET_METHOD_RECEIVER, 0),\n@@ -114,1 +93,1 @@\n-        METHOD_FORMAL_PARAMETER(TAT_METHOD_FORMAL_PARAMETER, 1),\n+        METHOD_FORMAL_PARAMETER(TARGET_METHOD_FORMAL_PARAMETER, 1),\n@@ -117,1 +96,1 @@\n-        THROWS(TAT_THROWS, 2),\n+        THROWS(TARGET_THROWS, 2),\n@@ -120,1 +99,1 @@\n-        LOCAL_VARIABLE(TAT_LOCAL_VARIABLE, -1),\n+        LOCAL_VARIABLE(TARGET_LOCAL_VARIABLE, -1),\n@@ -123,1 +102,1 @@\n-        RESOURCE_VARIABLE(TAT_RESOURCE_VARIABLE, -1),\n+        RESOURCE_VARIABLE(TARGET_RESOURCE_VARIABLE, -1),\n@@ -126,1 +105,1 @@\n-        EXCEPTION_PARAMETER(TAT_EXCEPTION_PARAMETER, 2),\n+        EXCEPTION_PARAMETER(TARGET_EXCEPTION_PARAMETER, 2),\n@@ -129,1 +108,1 @@\n-        INSTANCEOF(TAT_INSTANCEOF, 2),\n+        INSTANCEOF(TARGET_INSTANCEOF, 2),\n@@ -132,1 +111,1 @@\n-        NEW(TAT_NEW, 2),\n+        NEW(TARGET_NEW, 2),\n@@ -135,1 +114,1 @@\n-        CONSTRUCTOR_REFERENCE(TAT_CONSTRUCTOR_REFERENCE, 2),\n+        CONSTRUCTOR_REFERENCE(TARGET_CONSTRUCTOR_REFERENCE, 2),\n@@ -138,1 +117,1 @@\n-        METHOD_REFERENCE(TAT_METHOD_REFERENCE, 2),\n+        METHOD_REFERENCE(TARGET_METHOD_REFERENCE, 2),\n@@ -141,1 +120,1 @@\n-        CAST(TAT_CAST, 3),\n+        CAST(TARGET_CAST, 3),\n@@ -144,1 +123,1 @@\n-        CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT(TAT_CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT, 3),\n+        CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT(TARGET_CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT, 3),\n@@ -147,1 +126,1 @@\n-        METHOD_INVOCATION_TYPE_ARGUMENT(TAT_METHOD_INVOCATION_TYPE_ARGUMENT, 3),\n+        METHOD_INVOCATION_TYPE_ARGUMENT(TARGET_METHOD_INVOCATION_TYPE_ARGUMENT, 3),\n@@ -150,1 +129,1 @@\n-        CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT(TAT_CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT, 3),\n+        CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT(TARGET_CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT, 3),\n@@ -153,1 +132,1 @@\n-        METHOD_REFERENCE_TYPE_ARGUMENT(TAT_METHOD_REFERENCE_TYPE_ARGUMENT, 3);\n+        METHOD_REFERENCE_TYPE_ARGUMENT(TARGET_METHOD_REFERENCE_TYPE_ARGUMENT, 3);\n@@ -165,0 +144,5 @@\n+         *\n+         * @apiNote\n+         * {@code TARGET_}-prefixed constants in {@link TargetInfo}, such as {@link\n+         * TargetInfo#TARGET_CLASS_TYPE_PARAMETER}, describe the possible return\n+         * values of this method.\n@@ -217,0 +201,140 @@\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#CLASS_TYPE_PARAMETER CLASS_TYPE_PARAMETER}.\n+         *\/\n+        int TARGET_CLASS_TYPE_PARAMETER = 0x00;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#METHOD_TYPE_PARAMETER METHOD_TYPE_PARAMETER}.\n+         *\/\n+        int TARGET_METHOD_TYPE_PARAMETER = 0x01;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#CLASS_EXTENDS CLASS_EXTENDS}.\n+         *\/\n+        int TARGET_CLASS_EXTENDS = 0x10;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#CLASS_TYPE_PARAMETER_BOUND\n+         * CLASS_TYPE_PARAMETER_BOUND}.\n+         *\/\n+        int TARGET_CLASS_TYPE_PARAMETER_BOUND = 0x11;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#METHOD_TYPE_PARAMETER_BOUND\n+         * METHOD_TYPE_PARAMETER_BOUND}.\n+         *\/\n+        int TARGET_METHOD_TYPE_PARAMETER_BOUND = 0x12;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#FIELD FIELD}.\n+         *\/\n+        int TARGET_FIELD = 0x13;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#METHOD_RETURN METHOD_RETURN}.\n+         *\/\n+        int TARGET_METHOD_RETURN = 0x14;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#METHOD_RECEIVER METHOD_RECEIVER}.\n+         *\/\n+        int TARGET_METHOD_RECEIVER = 0x15;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#METHOD_FORMAL_PARAMETER\n+         * METHOD_FORMAL_PARAMETER}.\n+         *\/\n+        int TARGET_METHOD_FORMAL_PARAMETER = 0x16;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#THROWS THROWS}.\n+         *\/\n+        int TARGET_THROWS = 0x17;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#LOCAL_VARIABLE LOCAL_VARIABLE}.\n+         *\/\n+        int TARGET_LOCAL_VARIABLE = 0x40;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#RESOURCE_VARIABLE RESOURCE_VARIABLE}.\n+         *\/\n+        int TARGET_RESOURCE_VARIABLE = 0x41;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#EXCEPTION_PARAMETER EXCEPTION_PARAMETER}.\n+         *\/\n+        int TARGET_EXCEPTION_PARAMETER = 0x42;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#INSTANCEOF INSTANCEOF}.\n+         *\/\n+        int TARGET_INSTANCEOF = 0x43;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#NEW NEW}.\n+         *\/\n+        int TARGET_NEW = 0x44;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#CONSTRUCTOR_REFERENCE\n+         * CONSTRUCTOR_REFERENCE}.\n+         *\/\n+        int TARGET_CONSTRUCTOR_REFERENCE = 0x45;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#METHOD_REFERENCE METHOD_REFERENCE}.\n+         *\/\n+        int TARGET_METHOD_REFERENCE = 0x46;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#CAST CAST}.\n+         *\/\n+        int TARGET_CAST = 0x47;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT\n+         * CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT}.\n+         *\/\n+        int TARGET_CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT = 0x48;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#METHOD_INVOCATION_TYPE_ARGUMENT\n+         * METHOD_INVOCATION_TYPE_ARGUMENT}.\n+         *\/\n+        int TARGET_METHOD_INVOCATION_TYPE_ARGUMENT = 0x49;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT\n+         * CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT}.\n+         *\/\n+        int TARGET_CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT = 0x4A;\n+\n+        \/**\n+         * The {@linkplain TargetType#targetTypeValue() value} of type annotation {@linkplain\n+         * #targetType target type} {@link TargetType#METHOD_REFERENCE_TYPE_ARGUMENT\n+         * METHOD_REFERENCE_TYPE_ARGUMENT}.\n+         *\/\n+        int TARGET_METHOD_REFERENCE_TYPE_ARGUMENT = 0x4B;\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/TypeAnnotation.java","additions":169,"deletions":45,"binary":false,"changes":214,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,2 @@\n+import java.lang.classfile.instruction.CharacterRange;\n+\n@@ -73,1 +75,1 @@\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_STATEMENT} Range is a Statement\n+     * <li>{@link CharacterRange#FLAG_STATEMENT} Range is a Statement\n@@ -78,1 +80,1 @@\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_BLOCK} Range is a Block in the\n+     * <li>{@link CharacterRange#FLAG_BLOCK} Range is a Block in the\n@@ -80,1 +82,1 @@\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_ASSIGNMENT} Range is an assignment\n+     * <li>{@link CharacterRange#FLAG_ASSIGNMENT} Range is an assignment\n@@ -83,1 +85,1 @@\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_FLOW_CONTROLLER} An expression\n+     * <li>{@link CharacterRange#FLAG_FLOW_CONTROLLER} An expression\n@@ -95,1 +97,1 @@\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_FLOW_TARGET} Statement or\n+     * <li>{@link CharacterRange#FLAG_FLOW_TARGET} Statement or\n@@ -106,1 +108,1 @@\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_INVOKE} Method invocation. For\n+     * <li>{@link CharacterRange#FLAG_INVOKE} Method invocation. For\n@@ -108,1 +110,1 @@\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_CREATE} New object creation. For\n+     * <li>{@link CharacterRange#FLAG_CREATE} New object creation. For\n@@ -110,1 +112,1 @@\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_BRANCH_TRUE} A condition encoded\n+     * <li>{@link CharacterRange#FLAG_BRANCH_TRUE} A condition encoded\n@@ -122,1 +124,1 @@\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_BRANCH_FALSE} A condition encoded\n+     * <li>{@link CharacterRange#FLAG_BRANCH_FALSE} A condition encoded\n@@ -137,0 +139,1 @@\n+     * @see CharacterRange#flags()\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/CharacterRangeInfo.java","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import static java.lang.classfile.ClassFile.*;\n@@ -88,0 +87,27 @@\n+        \/** The {@link #tag() tag} for verification type info {@link SimpleVerificationTypeInfo#TOP TOP}. *\/\n+        int ITEM_TOP = 0;\n+\n+        \/** The {@link #tag() tag} for verification type info {@link SimpleVerificationTypeInfo#INTEGER INTEGER}. *\/\n+        int ITEM_INTEGER = 1;\n+\n+        \/** The {@link #tag() tag} for verification type info {@link SimpleVerificationTypeInfo#FLOAT FLOAT}. *\/\n+        int ITEM_FLOAT = 2;\n+\n+        \/** The {@link #tag() tag} for verification type info {@link SimpleVerificationTypeInfo#DOUBLE DOUBLE}. *\/\n+        int ITEM_DOUBLE = 3;\n+\n+        \/** The {@link #tag() tag} for verification type info {@link SimpleVerificationTypeInfo#LONG LONG}. *\/\n+        int ITEM_LONG = 4;\n+\n+        \/** The {@link #tag() tag} for verification type info {@link SimpleVerificationTypeInfo#NULL NULL}. *\/\n+        int ITEM_NULL = 5;\n+\n+        \/** The {@link #tag() tag} for verification type info {@link SimpleVerificationTypeInfo#UNINITIALIZED_THIS UNINITIALIZED_THIS}. *\/\n+        int ITEM_UNINITIALIZED_THIS = 6;\n+\n+        \/** The {@link #tag() tag} for verification type info {@link ObjectVerificationTypeInfo OBJECT}. *\/\n+        int ITEM_OBJECT = 7;\n+\n+        \/** The {@link #tag() tag} for verification type info {@link UninitializedVerificationTypeInfo UNINITIALIZED}. *\/\n+        int ITEM_UNINITIALIZED = 8;\n+\n@@ -90,0 +116,4 @@\n+         *\n+         * @apiNote\n+         * {@code ITEM_}-prefixed constants in this class, such as {@link #ITEM_TOP}, describe the\n+         * possible return values of this method.\n@@ -103,1 +133,1 @@\n-        ITEM_TOP(VT_TOP),\n+        TOP(ITEM_TOP),\n@@ -106,1 +136,1 @@\n-        ITEM_INTEGER(VT_INTEGER),\n+        INTEGER(ITEM_INTEGER),\n@@ -109,1 +139,1 @@\n-        ITEM_FLOAT(VT_FLOAT),\n+        FLOAT(ITEM_FLOAT),\n@@ -112,1 +142,1 @@\n-        ITEM_DOUBLE(VT_DOUBLE),\n+        DOUBLE(ITEM_DOUBLE),\n@@ -115,1 +145,1 @@\n-        ITEM_LONG(VT_LONG),\n+        LONG(ITEM_LONG),\n@@ -118,1 +148,1 @@\n-        ITEM_NULL(VT_NULL),\n+        NULL(ITEM_NULL),\n@@ -121,1 +151,1 @@\n-        ITEM_UNINITIALIZED_THIS(VT_UNINITIALIZED_THIS);\n+        UNINITIALIZED_THIS(ITEM_UNINITIALIZED_THIS);\n@@ -137,1 +167,1 @@\n-     * A stack value for an object type.\n+     * A stack value for an object type. Its {@link #tag() tag} is {@value #ITEM_OBJECT}.\n@@ -176,1 +206,1 @@\n-     * An uninitialized stack value.\n+     * An uninitialized stack value. Its {@link #tag() tag} is {@value #ITEM_UNINITIALIZED}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/StackMapFrameInfo.java","additions":40,"deletions":10,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -41,0 +41,51 @@\n+    \/** The {@linkplain #tag tag} for {@link ClassEntry CONSTANT_Class} constant kind. *\/\n+    int TAG_CLASS = 7;\n+\n+    \/** The {@linkplain #tag tag} for {@link DoubleEntry CONSTANT_Double} constant kind. *\/\n+    int TAG_DOUBLE = 6;\n+\n+    \/** The {@linkplain #tag tag} for {@link ConstantDynamicEntry CONSTANT_Dynamic} constant kind. *\/\n+    int TAG_DYNAMIC = 17;\n+\n+    \/** The {@linkplain #tag tag} for {@link FieldRefEntry CONSTANT_Fieldref} constant kind. *\/\n+    int TAG_FIELDREF = 9;\n+\n+    \/** The {@linkplain #tag tag} for {@link FloatEntry CONSTANT_Float} constant kind. *\/\n+    int TAG_FLOAT = 4;\n+\n+    \/** The {@linkplain #tag tag} for {@link IntegerEntry CONSTANT_Integer} constant kind. *\/\n+    int TAG_INTEGER = 3;\n+\n+    \/** The {@linkplain #tag tag} for {@link InterfaceMethodRefEntry CONSTANT_InterfaceMethodref} constant kind. *\/\n+    int TAG_INTERFACE_METHODREF = 11;\n+\n+    \/** The {@linkplain #tag tag} for {@link InvokeDynamicEntry CONSTANT_InvokeDynamic} constant kind. *\/\n+    int TAG_INVOKE_DYNAMIC = 18;\n+\n+    \/** The {@linkplain #tag tag} for {@link LongEntry CONSTANT_Long} constant kind. *\/\n+    int TAG_LONG = 5;\n+\n+    \/** The {@linkplain #tag tag} for {@link MethodHandleEntry CONSTANT_MethodHandle} constant kind. *\/\n+    int TAG_METHOD_HANDLE = 15;\n+\n+    \/** The {@linkplain #tag tag} for {@link MethodRefEntry CONSTANT_Methodref} constant kind. *\/\n+    int TAG_METHODREF = 10;\n+\n+    \/** The {@linkplain #tag tag} for {@link MethodTypeEntry CONSTANT_MethodType} constant kind. *\/\n+    int TAG_METHOD_TYPE = 16;\n+\n+    \/** The {@linkplain #tag tag} for {@link ModuleEntry CONSTANT_Module} constant kind. *\/\n+    int TAG_MODULE = 19;\n+\n+    \/** The {@linkplain #tag tag} for {@link NameAndTypeEntry CONSTANT_NameAndType} constant kind. *\/\n+    int TAG_NAME_AND_TYPE = 12;\n+\n+    \/** The {@linkplain #tag tag} for {@link PackageEntry CONSTANT_Package} constant kind. *\/\n+    int TAG_PACKAGE = 20;\n+\n+    \/** The {@linkplain #tag tag} for {@link StringEntry CONSTANT_String} constant kind. *\/\n+    int TAG_STRING = 8;\n+\n+    \/** The {@linkplain #tag tag} for {@link Utf8Entry CONSTANT_Utf8} constant kind. *\/\n+    int TAG_UTF8 = 1;\n+\n@@ -48,0 +99,4 @@\n+     *\n+     * @apiNote\n+     * {@code TAG_}-prefixed constants in this class, such as {@link #TAG_UTF8},\n+     * describe the possible return values of this method.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/constantpool\/PoolEntry.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.lang.classfile.attribute.CharacterRangeInfo;\n@@ -48,0 +49,28 @@\n+\n+    \/** The bit mask of STATEMENT {@link CharacterRangeInfo} kind. *\/\n+    int FLAG_STATEMENT = 0x0001;\n+\n+    \/** The bit mask of BLOCK {@link CharacterRangeInfo} kind. *\/\n+    int FLAG_BLOCK = 0x0002;\n+\n+    \/** The bit mask of ASSIGNMENT {@link CharacterRangeInfo} kind. *\/\n+    int FLAG_ASSIGNMENT = 0x0004;\n+\n+    \/** The bit mask of FLOW_CONTROLLER {@link CharacterRangeInfo} kind. *\/\n+    int FLAG_FLOW_CONTROLLER = 0x0008;\n+\n+    \/** The bit mask of FLOW_TARGET {@link CharacterRangeInfo} kind. *\/\n+    int FLAG_FLOW_TARGET = 0x0010;\n+\n+    \/** The bit mask of INVOKE {@link CharacterRangeInfo} kind. *\/\n+    int FLAG_INVOKE = 0x0020;\n+\n+    \/** The bit mask of CREATE {@link CharacterRangeInfo} kind. *\/\n+    int FLAG_CREATE = 0x0040;\n+\n+    \/** The bit mask of BRANCH_TRUE {@link CharacterRangeInfo} kind. *\/\n+    int FLAG_BRANCH_TRUE = 0x0080;\n+\n+    \/** The bit mask of BRANCH_FALSE {@link CharacterRangeInfo} kind. *\/\n+    int FLAG_BRANCH_FALSE = 0x0100;\n+\n@@ -78,9 +107,9 @@\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_STATEMENT}\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_BLOCK}\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_ASSIGNMENT}\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_FLOW_CONTROLLER}\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_FLOW_TARGET}\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_INVOKE}\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_CREATE}\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_BRANCH_TRUE}\n-     * <li>{@link java.lang.classfile.ClassFile#CRT_BRANCH_FALSE}\n+     * <li>{@link #FLAG_STATEMENT}\n+     * <li>{@link #FLAG_BLOCK}\n+     * <li>{@link #FLAG_ASSIGNMENT}\n+     * <li>{@link #FLAG_FLOW_CONTROLLER}\n+     * <li>{@link #FLAG_FLOW_TARGET}\n+     * <li>{@link #FLAG_INVOKE}\n+     * <li>{@link #FLAG_CREATE}\n+     * <li>{@link #FLAG_BRANCH_TRUE}\n+     * <li>{@link #FLAG_BRANCH_FALSE}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/instruction\/CharacterRange.java","additions":39,"deletions":10,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1882,2 +1882,1 @@\n-                    UNSAFE.putReference(this, FORM_OFFSET, newForm);\n-                    UNSAFE.fullFence();\n+                    UNSAFE.putReferenceRelease(this, FORM_OFFSET, newForm); \/\/ properly publish newForm\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandle.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import java.lang.classfile.ClassFile;\n@@ -43,0 +44,1 @@\n+import java.lang.constant.ClassDesc;\n@@ -2245,8 +2247,12 @@\n-        static class ClassFile {\n-            final String name;  \/\/ internal name\n-            final int accessFlags;\n-            final byte[] bytes;\n-            ClassFile(String name, int accessFlags, byte[] bytes) {\n-                this.name = name;\n-                this.accessFlags = accessFlags;\n-                this.bytes = bytes;\n+        \/**\n+         * This method checks the class file version and the structure of `this_class`.\n+         * and checks if the bytes is a class or interface (ACC_MODULE flag not set)\n+         * that is in the named package.\n+         *\n+         * @throws IllegalArgumentException if ACC_MODULE flag is set in access flags\n+         * or the class is not in the given package name.\n+         *\/\n+        static String validateAndFindInternalName(byte[] bytes, String pkgName) {\n+            int magic = readInt(bytes, 0);\n+            if (magic != ClassFile.MAGIC_NUMBER) {\n+                throw new ClassFormatError(\"Incompatible magic value: \" + magic);\n@@ -2254,0 +2260,4 @@\n+            \/\/ We have to read major and minor this way as ClassFile API throws IAE\n+            \/\/ yet we want distinct ClassFormatError and UnsupportedClassVersionError\n+            int minor = readUnsignedShort(bytes, 4);\n+            int major = readUnsignedShort(bytes, 6);\n@@ -2255,2 +2265,2 @@\n-            static ClassFile newInstanceNoCheck(String name, byte[] bytes) {\n-                return new ClassFile(name, 0, bytes);\n+            if (!VM.isSupportedClassFileVersion(major, minor)) {\n+                throw new UnsupportedClassVersionError(\"Unsupported class file version \" + major + \".\" + minor);\n@@ -2259,18 +2269,17 @@\n-            \/**\n-             * This method checks the class file version and the structure of `this_class`.\n-             * and checks if the bytes is a class or interface (ACC_MODULE flag not set)\n-             * that is in the named package.\n-             *\n-             * @throws IllegalArgumentException if ACC_MODULE flag is set in access flags\n-             * or the class is not in the given package name.\n-             *\/\n-            static ClassFile newInstance(byte[] bytes, String pkgName) {\n-                var cf = readClassFile(bytes);\n-\n-                \/\/ check if it's in the named package\n-                int index = cf.name.lastIndexOf('\/');\n-                String pn = (index == -1) ? \"\" : cf.name.substring(0, index).replace('\/', '.');\n-                if (!pn.equals(pkgName)) {\n-                    throw newIllegalArgumentException(cf.name + \" not in same package as lookup class\");\n-                }\n-                return cf;\n+            String name;\n+            ClassDesc sym;\n+            int accessFlags;\n+            try {\n+                ClassModel cm = ClassFile.of().parse(bytes);\n+                var thisClass = cm.thisClass();\n+                name = thisClass.asInternalName();\n+                sym = thisClass.asSymbol();\n+                accessFlags = cm.flags().flagsMask();\n+            } catch (IllegalArgumentException e) {\n+                ClassFormatError cfe = new ClassFormatError();\n+                cfe.initCause(e);\n+                throw cfe;\n+            }\n+            \/\/ must be a class or interface\n+            if ((accessFlags & ACC_MODULE) != 0) {\n+                throw newIllegalArgumentException(\"Not a class or interface: ACC_MODULE flag is set\");\n@@ -2279,27 +2288,3 @@\n-            private static ClassFile readClassFile(byte[] bytes) {\n-                int magic = readInt(bytes, 0);\n-                if (magic != 0xCAFEBABE) {\n-                    throw new ClassFormatError(\"Incompatible magic value: \" + magic);\n-                }\n-                int minor = readUnsignedShort(bytes, 4);\n-                int major = readUnsignedShort(bytes, 6);\n-                if (!VM.isSupportedClassFileVersion(major, minor)) {\n-                    throw new UnsupportedClassVersionError(\"Unsupported class file version \" + major + \".\" + minor);\n-                }\n-\n-                String name;\n-                int accessFlags;\n-                try {\n-                    ClassModel cm = java.lang.classfile.ClassFile.of().parse(bytes);\n-                    name = cm.thisClass().asInternalName();\n-                    accessFlags = cm.flags().flagsMask();\n-                } catch (IllegalArgumentException e) {\n-                    ClassFormatError cfe = new ClassFormatError();\n-                    cfe.initCause(e);\n-                    throw cfe;\n-                }\n-                \/\/ must be a class or interface\n-                if ((accessFlags & ACC_MODULE) != 0) {\n-                    throw newIllegalArgumentException(\"Not a class or interface: ACC_MODULE flag is set\");\n-                }\n-                return new ClassFile(name, accessFlags, bytes);\n+            String pn = sym.packageName();\n+            if (!pn.equals(pkgName)) {\n+                throw newIllegalArgumentException(name + \" not in same package as lookup class\");\n@@ -2308,8 +2293,6 @@\n-            private static int readInt(byte[] bytes, int offset) {\n-                if ((offset+4) > bytes.length) {\n-                    throw new ClassFormatError(\"Invalid ClassFile structure\");\n-                }\n-                return ((bytes[offset] & 0xFF) << 24)\n-                        | ((bytes[offset + 1] & 0xFF) << 16)\n-                        | ((bytes[offset + 2] & 0xFF) << 8)\n-                        | (bytes[offset + 3] & 0xFF);\n+            return name;\n+        }\n+\n+        private static int readInt(byte[] bytes, int offset) {\n+            if ((offset + 4) > bytes.length) {\n+                throw new ClassFormatError(\"Invalid ClassFile structure\");\n@@ -2317,0 +2300,5 @@\n+            return ((bytes[offset] & 0xFF) << 24)\n+                    | ((bytes[offset + 1] & 0xFF) << 16)\n+                    | ((bytes[offset + 2] & 0xFF) << 8)\n+                    | (bytes[offset + 3] & 0xFF);\n+        }\n@@ -2318,5 +2306,3 @@\n-            private static int readUnsignedShort(byte[] bytes, int offset) {\n-                if ((offset+2) > bytes.length) {\n-                    throw new ClassFormatError(\"Invalid ClassFile structure\");\n-                }\n-                return ((bytes[offset] & 0xFF) << 8) | (bytes[offset + 1] & 0xFF);\n+        private static int readUnsignedShort(byte[] bytes, int offset) {\n+            if ((offset+2) > bytes.length) {\n+                throw new ClassFormatError(\"Invalid ClassFile structure\");\n@@ -2324,0 +2310,1 @@\n+            return ((bytes[offset] & 0xFF) << 8) | (bytes[offset + 1] & 0xFF);\n@@ -2337,2 +2324,2 @@\n-            ClassFile cf = ClassFile.newInstance(bytes, lookupClass().getPackageName());\n-            return new ClassDefiner(this, cf, STRONG_LOADER_LINK, defaultDumper());\n+            var internalName = validateAndFindInternalName(bytes, lookupClass().getPackageName());\n+            return new ClassDefiner(this, internalName, bytes, STRONG_LOADER_LINK, defaultDumper());\n@@ -2345,1 +2332,1 @@\n-         * @param name    internal name\n+         * @param internalName internal name\n@@ -2350,1 +2337,1 @@\n-        ClassDefiner makeClassDefiner(String name, byte[] bytes, ClassFileDumper dumper) {\n+        ClassDefiner makeClassDefiner(String internalName, byte[] bytes, ClassFileDumper dumper) {\n@@ -2352,2 +2339,1 @@\n-            ClassFile cf = ClassFile.newInstanceNoCheck(name, bytes);\n-            return new ClassDefiner(this, cf, STRONG_LOADER_LINK, dumper);\n+            return new ClassDefiner(this, internalName, bytes, STRONG_LOADER_LINK, dumper);\n@@ -2371,2 +2357,2 @@\n-            ClassFile cf = ClassFile.newInstance(bytes, lookupClass().getPackageName());\n-            return makeHiddenClassDefiner(cf, false, dumper, 0);\n+            var internalName = validateAndFindInternalName(bytes, lookupClass().getPackageName());\n+            return makeHiddenClassDefiner(internalName, bytes, false, dumper, 0);\n@@ -2394,2 +2380,2 @@\n-            ClassFile cf = ClassFile.newInstance(bytes, lookupClass().getPackageName());\n-            return makeHiddenClassDefiner(cf, accessVmAnnotations, defaultDumper(), flags);\n+            var internalName = validateAndFindInternalName(bytes, lookupClass().getPackageName());\n+            return makeHiddenClassDefiner(internalName, bytes, accessVmAnnotations, defaultDumper(), flags);\n@@ -2402,1 +2388,1 @@\n-         * @param name    internal name that specifies the prefix of the hidden class\n+         * @param internalName internal name that specifies the prefix of the hidden class\n@@ -2407,1 +2393,1 @@\n-        ClassDefiner makeHiddenClassDefiner(String name, byte[] bytes, ClassFileDumper dumper) {\n+        ClassDefiner makeHiddenClassDefiner(String internalName, byte[] bytes, ClassFileDumper dumper) {\n@@ -2410,1 +2396,1 @@\n-            return makeHiddenClassDefiner(ClassFile.newInstanceNoCheck(name, bytes), false, dumper, 0);\n+            return makeHiddenClassDefiner(internalName, bytes, false, dumper, 0);\n@@ -2417,1 +2403,1 @@\n-         * @param name    internal name that specifies the prefix of the hidden class\n+         * @param internalName internal name that specifies the prefix of the hidden class\n@@ -2423,1 +2409,1 @@\n-        ClassDefiner makeHiddenClassDefiner(String name, byte[] bytes, ClassFileDumper dumper, int flags) {\n+        ClassDefiner makeHiddenClassDefiner(String internalName, byte[] bytes, ClassFileDumper dumper, int flags) {\n@@ -2426,1 +2412,1 @@\n-            return makeHiddenClassDefiner(ClassFile.newInstanceNoCheck(name, bytes), false, dumper, flags);\n+            return makeHiddenClassDefiner(internalName, bytes, false, dumper, flags);\n@@ -2433,1 +2419,2 @@\n-         * @param cf ClassFile\n+         * @param internalName internal name\n+         * @param bytes Class byte array\n@@ -2438,1 +2425,2 @@\n-        private ClassDefiner makeHiddenClassDefiner(ClassFile cf,\n+        private ClassDefiner makeHiddenClassDefiner(String internalName,\n+                                                    byte[] bytes,\n@@ -2449,1 +2437,1 @@\n-            return new ClassDefiner(this, cf, flags, dumper);\n+            return new ClassDefiner(this, internalName, bytes, flags, dumper);\n@@ -2452,18 +2440,3 @@\n-        static class ClassDefiner {\n-            private final Lookup lookup;\n-            private final String name;  \/\/ internal name\n-            private final byte[] bytes;\n-            private final int classFlags;\n-            private final ClassFileDumper dumper;\n-\n-            private ClassDefiner(Lookup lookup, ClassFile cf, int flags, ClassFileDumper dumper) {\n-                assert ((flags & HIDDEN_CLASS) != 0 || (flags & STRONG_LOADER_LINK) == STRONG_LOADER_LINK);\n-                this.lookup = lookup;\n-                this.bytes = cf.bytes;\n-                this.name = cf.name;\n-                this.classFlags = flags;\n-                this.dumper = dumper;\n-            }\n-\n-            String internalName() {\n-                return name;\n+        record ClassDefiner(Lookup lookup, String internalName, byte[] bytes, int classFlags, ClassFileDumper dumper) {\n+            ClassDefiner {\n+                assert ((classFlags & HIDDEN_CLASS) != 0 || (classFlags & STRONG_LOADER_LINK) == STRONG_LOADER_LINK);\n@@ -2498,1 +2471,1 @@\n-                            .defineClass(loader, lookupClass, name, bytes, pd, initialize, classFlags, classData);\n+                            .defineClass(loader, lookupClass, internalName, bytes, pd, initialize, classFlags, classData);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":79,"deletions":106,"binary":false,"changes":185,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,2 @@\n-import java.util.concurrent.atomic.AtomicInteger;\n+\n+import static java.lang.invoke.MethodHandleStatics.UNSAFE;\n@@ -277,1 +278,1 @@\n-        STORE_BARRIER.lazySet(0);\n+        UNSAFE.storeFence();\n@@ -283,1 +284,0 @@\n-    private static final AtomicInteger STORE_BARRIER = new AtomicInteger();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MutableCallSite.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,11 +36,23 @@\n- * zero-argument constructor and some number of associated charset\n- * implementation classes.  Charset providers may be installed in an instance\n- * of the Java platform as extensions.  Providers may also be made available by\n- * adding them to the application class path or by some other\n- * platform-specific means.  Charset providers are looked up via the current\n- * thread's {@link java.lang.Thread#getContextClassLoader() context class\n- * loader}.\n- *\n- * <p> A charset provider identifies itself with a provider-configuration file\n- * named {@code java.nio.charset.spi.CharsetProvider} in the resource\n- * directory {@code META-INF\/services}.  The file should contain a list of\n+ * zero-argument constructor and some number of associated {@code Charset}\n+ * implementation classes.  Charset providers are deployed on the application\n+ * module path or the application class path. In order to be looked up, charset\n+ * providers must be visible to the {@link ClassLoader#getSystemClassLoader() system\n+ * class loader}. See {@link java.util.ServiceLoader##developing-service-providers\n+ * Deploying Service Providers} for further detail on deploying a charset\n+ * provider as a module or on the class path.\n+ *\n+ * <p> For a charset provider deployed in a module, the <i>provides<\/i>\n+ * directive must be specified in the module declaration. The provides directive\n+ * specifies both the service and the service provider. In this case, the service\n+ * is {@code java.nio.charset.spi.CharsetProvider}.\n+ *\n+ * <p> As an example, a charset provider deployed as a module might specify the\n+ * following directive:\n+ * <pre>{@code\n+ *     provides java.nio.charset.spi.CharsetProvider with com.example.ExternalCharsetProvider;\n+ * }<\/pre>\n+ *\n+ * <p> For a charset provider deployed on the class path, it identifies itself\n+ * with a provider-configuration file named {@code\n+ * java.nio.charset.spi.CharsetProvider} in the resource directory\n+ * {@code META-INF\/services}.  The file should contain a list of\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/spi\/CharsetProvider.java","additions":23,"deletions":11,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-     * This enum represents the three possible return values for\n+     * Constants representing the three possible return values for\n@@ -64,2 +64,2 @@\n-    enum Comparison {\n-        \/**\n+    static final byte\n+        \/*\n@@ -68,3 +68,3 @@\n-          *\/\n-        EXACT_MATCH,\n-        \/**\n+         *\/\n+        EXACT_MATCH = 0,\n+        \/*\n@@ -74,2 +74,2 @@\n-        DIRECTORY_MATCH,\n-        \/**\n+        DIRECTORY_MATCH = 1,\n+        \/*\n@@ -79,2 +79,1 @@\n-        NO_MATCH\n-    }\n+        NO_MATCH = 2;\n@@ -200,1 +199,1 @@\n-     * {@link Comparison#EXACT_MATCH}.\n+     * {@link EXACT_MATCH}.\n@@ -204,1 +203,1 @@\n-     * trailing '\/' character, then return {@link Comparison#DIRECTORY_MATCH}.\n+     * trailing '\/' character, then return {@link DIRECTORY_MATCH}.\n@@ -206,1 +205,1 @@\n-     * Otherwise, return {@link Comparison#NO_MATCH}\n+     * Otherwise, return {@link NO_MATCH}\n@@ -220,1 +219,1 @@\n-    Comparison compare(String str, byte[] b, int off, int len, boolean matchDirectory) {\n+    byte compare(String str, byte[] b, int off, int len, boolean matchDirectory) {\n@@ -224,1 +223,1 @@\n-                return Comparison.EXACT_MATCH;\n+                return EXACT_MATCH;\n@@ -228,1 +227,1 @@\n-                return Comparison.DIRECTORY_MATCH;\n+                return DIRECTORY_MATCH;\n@@ -231,1 +230,1 @@\n-        return Comparison.NO_MATCH;\n+        return NO_MATCH;\n@@ -281,1 +280,1 @@\n-        Comparison compare(String str, byte[] b, int off, int len, boolean matchDirectory) {\n+        byte compare(String str, byte[] b, int off, int len, boolean matchDirectory) {\n@@ -286,1 +285,1 @@\n-                    return Comparison.EXACT_MATCH;\n+                    return EXACT_MATCH;\n@@ -288,1 +287,1 @@\n-                    return Comparison.DIRECTORY_MATCH;\n+                    return DIRECTORY_MATCH;\n@@ -290,1 +289,1 @@\n-                    return Comparison.NO_MATCH;\n+                    return NO_MATCH;\n@@ -293,1 +292,1 @@\n-                return Comparison.NO_MATCH;\n+                return NO_MATCH;\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java","additions":21,"deletions":22,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -1872,1 +1872,1 @@\n-                        case EXACT_MATCH:\n+                        case ZipCoder.EXACT_MATCH:\n@@ -1875,1 +1875,1 @@\n-                        case DIRECTORY_MATCH:\n+                        case ZipCoder.DIRECTORY_MATCH:\n@@ -1880,1 +1880,1 @@\n-                        case NO_MATCH:\n+                        case ZipCoder.NO_MATCH:\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.lang.classfile.constantpool.PoolEntry;\n@@ -31,1 +32,0 @@\n-import java.lang.classfile.ClassFile;\n@@ -424,1 +424,1 @@\n-            return method().tag() == ClassFile.TAG_INTERFACEMETHODREF;\n+            return method().tag() == PoolEntry.TAG_INTERFACE_METHODREF;\n@@ -804,8 +804,5 @@\n-            int slot = this.slot;\n-            switch (op) {\n-                case ALOAD_0, ALOAD_1, ALOAD_2, ALOAD_3, ALOAD, ALOAD_W -> writer.aload(slot);\n-                case ILOAD_0, ILOAD_1, ILOAD_2, ILOAD_3, ILOAD, ILOAD_W -> writer.iload(slot);\n-                case LLOAD_0, LLOAD_1, LLOAD_2, LLOAD_3, LLOAD, LLOAD_W -> writer.lload(slot);\n-                case FLOAD_0, FLOAD_1, FLOAD_2, FLOAD_3, FLOAD, FLOAD_W -> writer.fload(slot);\n-                case DLOAD_0, DLOAD_1, DLOAD_2, DLOAD_3, DLOAD, DLOAD_W -> writer.dload(slot);\n-                default    -> throw new AssertionError();\n+            var op = this.op;\n+            if (op.sizeIfFixed() == 1) {\n+                writer.writeBytecode(op);\n+            } else {\n+                writer.writeLocalVar(op, slot);\n@@ -843,8 +840,5 @@\n-            int slot = this.slot;\n-            switch (op) {\n-                case ASTORE_0, ASTORE_1, ASTORE_2, ASTORE_3, ASTORE, ASTORE_W -> writer.astore(slot);\n-                case ISTORE_0, ISTORE_1, ISTORE_2, ISTORE_3, ISTORE, ISTORE_W -> writer.istore(slot);\n-                case LSTORE_0, LSTORE_1, LSTORE_2, LSTORE_3, LSTORE, LSTORE_W -> writer.lstore(slot);\n-                case FSTORE_0, FSTORE_1, FSTORE_2, FSTORE_3, FSTORE, FSTORE_W -> writer.fstore(slot);\n-                case DSTORE_0, DSTORE_1, DSTORE_2, DSTORE_3, DSTORE, DSTORE_W -> writer.dstore(slot);\n-                default    -> throw new AssertionError();\n+            var op = this.op;\n+            if (op.sizeIfFixed() == 1) {\n+                writer.writeBytecode(op);\n+            } else {\n+                writer.writeLocalVar(op, slot);\n@@ -1449,5 +1443,1 @@\n-            switch (op) {\n-                case RET   -> writer.ret(slot);\n-                case RET_W -> writer.retW(slot);\n-                default    -> throw new AssertionError();\n-            }\n+            writer.writeLocalVar(op, slot);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractInstruction.java","additions":13,"deletions":23,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.lang.classfile.ClassFile;\n@@ -60,2 +59,0 @@\n-import static java.lang.classfile.ClassFile.*;\n-\n@@ -95,1 +92,1 @@\n-        return hash1(ClassFile.TAG_CLASS, descriptorHash);\n+        return hash1(PoolEntry.TAG_CLASS, descriptorHash);\n@@ -573,5 +570,0 @@\n-        @Override\n-        public byte tag() {\n-            return TAG_CLASS;\n-        }\n-\n@@ -579,1 +571,1 @@\n-            super(cpm, ClassFile.TAG_CLASS, index, name);\n+            super(cpm, TAG_CLASS, index, name);\n@@ -584,0 +576,5 @@\n+        @Override\n+        public byte tag() {\n+            return TAG_CLASS;\n+        }\n+\n@@ -699,1 +696,1 @@\n-            super(cpm, TAG_NAMEANDTYPE, index, name, type);\n+            super(cpm, TAG_NAME_AND_TYPE, index, name, type);\n@@ -704,1 +701,1 @@\n-            return TAG_NAMEANDTYPE;\n+            return TAG_NAME_AND_TYPE;\n@@ -791,1 +788,1 @@\n-            super(cpm, ClassFile.TAG_METHODREF, index, owner, nameAndType);\n+            super(cpm, TAG_METHODREF, index, owner, nameAndType);\n@@ -809,1 +806,1 @@\n-            super(cpm, ClassFile.TAG_INTERFACEMETHODREF, index, owner, nameAndType);\n+            super(cpm, TAG_INTERFACE_METHODREF, index, owner, nameAndType);\n@@ -814,1 +811,1 @@\n-            return TAG_INTERFACEMETHODREF;\n+            return TAG_INTERFACE_METHODREF;\n@@ -904,1 +901,1 @@\n-            super(cpm, index, hash2(TAG_INVOKEDYNAMIC, bsmIndex, nameAndType.index()),\n+            super(cpm, index, hash2(TAG_INVOKE_DYNAMIC, bsmIndex, nameAndType.index()),\n@@ -910,1 +907,1 @@\n-            return TAG_INVOKEDYNAMIC;\n+            return TAG_INVOKE_DYNAMIC;\n@@ -929,1 +926,1 @@\n-            super(cpm, index, hash2(TAG_CONSTANTDYNAMIC, bsmIndex, nameAndType.index()),\n+            super(cpm, index, hash2(TAG_DYNAMIC, bsmIndex, nameAndType.index()),\n@@ -935,1 +932,1 @@\n-            return TAG_CONSTANTDYNAMIC;\n+            return TAG_DYNAMIC;\n@@ -959,1 +956,1 @@\n-            super(cpm, index, hash2(ClassFile.TAG_METHODHANDLE, refKind, reference.index()));\n+            super(cpm, index, hash2(TAG_METHOD_HANDLE, refKind, reference.index()));\n@@ -966,1 +963,1 @@\n-            return TAG_METHODHANDLE;\n+            return TAG_METHOD_HANDLE;\n@@ -990,1 +987,1 @@\n-            pool.writeU1(TAG_METHODHANDLE);\n+            pool.writeU1(TAG_METHOD_HANDLE);\n@@ -1022,1 +1019,1 @@\n-            super(cpm, TAG_METHODTYPE, index, descriptor);\n+            super(cpm, TAG_METHOD_TYPE, index, descriptor);\n@@ -1027,1 +1024,1 @@\n-            return TAG_METHODTYPE;\n+            return TAG_METHOD_TYPE;\n@@ -1111,1 +1108,1 @@\n-            super(cpm, index, hash1(ClassFile.TAG_INTEGER, Integer.hashCode(i)));\n+            super(cpm, index, hash1(TAG_INTEGER, Integer.hashCode(i)));\n@@ -1157,1 +1154,1 @@\n-            super(cpm, index, hash1(ClassFile.TAG_FLOAT, Float.hashCode(f)));\n+            super(cpm, index, hash1(TAG_FLOAT, Float.hashCode(f)));\n@@ -1202,1 +1199,1 @@\n-            super(cpm, index, hash1(ClassFile.TAG_LONG, Long.hashCode(l)));\n+            super(cpm, index, hash1(TAG_LONG, Long.hashCode(l)));\n@@ -1252,1 +1249,1 @@\n-            super(cpm, index, hash1(ClassFile.TAG_DOUBLE, Double.hashCode(d)));\n+            super(cpm, index, hash1(TAG_DOUBLE, Double.hashCode(d)));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry.java","additions":25,"deletions":28,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import static java.lang.classfile.ClassFile.*;\n-\n@@ -65,1 +63,1 @@\n-            return AEV_STRING;\n+            return TAG_STRING;\n@@ -78,1 +76,1 @@\n-            return AEV_DOUBLE;\n+            return TAG_DOUBLE;\n@@ -91,1 +89,1 @@\n-            return AEV_FLOAT;\n+            return TAG_FLOAT;\n@@ -104,1 +102,1 @@\n-            return AEV_LONG;\n+            return TAG_LONG;\n@@ -117,1 +115,1 @@\n-            return AEV_INT;\n+            return TAG_INT;\n@@ -130,1 +128,1 @@\n-            return AEV_SHORT;\n+            return TAG_SHORT;\n@@ -143,1 +141,1 @@\n-            return AEV_CHAR;\n+            return TAG_CHAR;\n@@ -156,1 +154,1 @@\n-            return AEV_BYTE;\n+            return TAG_BYTE;\n@@ -169,1 +167,1 @@\n-            return AEV_BOOLEAN;\n+            return TAG_BOOLEAN;\n@@ -186,1 +184,1 @@\n-            return AEV_ARRAY;\n+            return TAG_ARRAY;\n@@ -194,1 +192,1 @@\n-            return AEV_ENUM;\n+            return TAG_ENUM;\n@@ -202,1 +200,1 @@\n-            return AEV_ANNOTATION;\n+            return TAG_ANNOTATION;\n@@ -210,1 +208,1 @@\n-            return AEV_CLASS;\n+            return TAG_CLASS;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AnnotationImpl.java","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -35,1 +35,2 @@\n-import static java.lang.classfile.ClassFile.*;\n+\n+import static java.lang.classfile.AnnotationValue.*;\n@@ -62,10 +63,10 @@\n-            case AEV_BYTE -> new AnnotationImpl.OfByteImpl(classReader.readEntry(p, IntegerEntry.class));\n-            case AEV_CHAR -> new AnnotationImpl.OfCharImpl(classReader.readEntry(p, IntegerEntry.class));\n-            case AEV_DOUBLE -> new AnnotationImpl.OfDoubleImpl(classReader.readEntry(p, DoubleEntry.class));\n-            case AEV_FLOAT -> new AnnotationImpl.OfFloatImpl(classReader.readEntry(p, FloatEntry.class));\n-            case AEV_INT -> new AnnotationImpl.OfIntImpl(classReader.readEntry(p, IntegerEntry.class));\n-            case AEV_LONG -> new AnnotationImpl.OfLongImpl(classReader.readEntry(p, LongEntry.class));\n-            case AEV_SHORT -> new AnnotationImpl.OfShortImpl(classReader.readEntry(p, IntegerEntry.class));\n-            case AEV_BOOLEAN -> new AnnotationImpl.OfBooleanImpl(classReader.readEntry(p, IntegerEntry.class));\n-            case AEV_STRING -> new AnnotationImpl.OfStringImpl(classReader.readEntry(p, Utf8Entry.class));\n-            case AEV_ENUM -> new AnnotationImpl.OfEnumImpl(classReader.readEntry(p, Utf8Entry.class),\n+            case TAG_BYTE -> new AnnotationImpl.OfByteImpl(classReader.readEntry(p, IntegerEntry.class));\n+            case TAG_CHAR -> new AnnotationImpl.OfCharImpl(classReader.readEntry(p, IntegerEntry.class));\n+            case TAG_DOUBLE -> new AnnotationImpl.OfDoubleImpl(classReader.readEntry(p, DoubleEntry.class));\n+            case TAG_FLOAT -> new AnnotationImpl.OfFloatImpl(classReader.readEntry(p, FloatEntry.class));\n+            case TAG_INT -> new AnnotationImpl.OfIntImpl(classReader.readEntry(p, IntegerEntry.class));\n+            case TAG_LONG -> new AnnotationImpl.OfLongImpl(classReader.readEntry(p, LongEntry.class));\n+            case TAG_SHORT -> new AnnotationImpl.OfShortImpl(classReader.readEntry(p, IntegerEntry.class));\n+            case TAG_BOOLEAN -> new AnnotationImpl.OfBooleanImpl(classReader.readEntry(p, IntegerEntry.class));\n+            case TAG_STRING -> new AnnotationImpl.OfStringImpl(classReader.readEntry(p, Utf8Entry.class));\n+            case TAG_ENUM -> new AnnotationImpl.OfEnumImpl(classReader.readEntry(p, Utf8Entry.class),\n@@ -73,3 +74,3 @@\n-            case AEV_CLASS -> new AnnotationImpl.OfClassImpl(classReader.readEntry(p, Utf8Entry.class));\n-            case AEV_ANNOTATION -> new AnnotationImpl.OfAnnotationImpl(readAnnotation(classReader, p));\n-            case AEV_ARRAY -> {\n+            case TAG_CLASS -> new AnnotationImpl.OfClassImpl(classReader.readEntry(p, Utf8Entry.class));\n+            case TAG_ANNOTATION -> new AnnotationImpl.OfAnnotationImpl(readAnnotation(classReader, p));\n+            case TAG_ARRAY -> {\n@@ -182,1 +183,1 @@\n-            case TAT_CLASS_TYPE_PARAMETER ->\n+            case TARGET_CLASS_TYPE_PARAMETER ->\n@@ -184,1 +185,1 @@\n-            case TAT_METHOD_TYPE_PARAMETER ->\n+            case TARGET_METHOD_TYPE_PARAMETER ->\n@@ -186,1 +187,1 @@\n-            case TAT_CLASS_EXTENDS ->\n+            case TARGET_CLASS_EXTENDS ->\n@@ -188,1 +189,1 @@\n-            case TAT_CLASS_TYPE_PARAMETER_BOUND ->\n+            case TARGET_CLASS_TYPE_PARAMETER_BOUND ->\n@@ -190,1 +191,1 @@\n-            case TAT_METHOD_TYPE_PARAMETER_BOUND ->\n+            case TARGET_METHOD_TYPE_PARAMETER_BOUND ->\n@@ -192,1 +193,1 @@\n-            case TAT_FIELD ->\n+            case TARGET_FIELD ->\n@@ -194,1 +195,1 @@\n-            case TAT_METHOD_RETURN ->\n+            case TARGET_METHOD_RETURN ->\n@@ -196,1 +197,1 @@\n-            case TAT_METHOD_RECEIVER ->\n+            case TARGET_METHOD_RECEIVER ->\n@@ -198,1 +199,1 @@\n-            case TAT_METHOD_FORMAL_PARAMETER ->\n+            case TARGET_METHOD_FORMAL_PARAMETER ->\n@@ -200,1 +201,1 @@\n-            case TAT_THROWS ->\n+            case TARGET_THROWS ->\n@@ -202,1 +203,1 @@\n-            case TAT_LOCAL_VARIABLE ->\n+            case TARGET_LOCAL_VARIABLE ->\n@@ -204,1 +205,1 @@\n-            case TAT_RESOURCE_VARIABLE ->\n+            case TARGET_RESOURCE_VARIABLE ->\n@@ -206,1 +207,1 @@\n-            case TAT_EXCEPTION_PARAMETER ->\n+            case TARGET_EXCEPTION_PARAMETER ->\n@@ -208,1 +209,1 @@\n-            case TAT_INSTANCEOF ->\n+            case TARGET_INSTANCEOF ->\n@@ -210,1 +211,1 @@\n-            case TAT_NEW ->\n+            case TARGET_NEW ->\n@@ -212,1 +213,1 @@\n-            case TAT_CONSTRUCTOR_REFERENCE ->\n+            case TARGET_CONSTRUCTOR_REFERENCE ->\n@@ -214,1 +215,1 @@\n-            case TAT_METHOD_REFERENCE ->\n+            case TARGET_METHOD_REFERENCE ->\n@@ -216,1 +217,1 @@\n-            case TAT_CAST ->\n+            case TARGET_CAST ->\n@@ -218,1 +219,1 @@\n-            case TAT_CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT ->\n+            case TARGET_CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT ->\n@@ -220,1 +221,1 @@\n-            case TAT_METHOD_INVOCATION_TYPE_ARGUMENT ->\n+            case TARGET_METHOD_INVOCATION_TYPE_ARGUMENT ->\n@@ -222,1 +223,1 @@\n-            case TAT_CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT ->\n+            case TARGET_CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT ->\n@@ -224,1 +225,1 @@\n-            case TAT_METHOD_REFERENCE_TYPE_ARGUMENT ->\n+            case TARGET_METHOD_REFERENCE_TYPE_ARGUMENT ->\n@@ -365,1 +366,1 @@\n-            case AEV_BOOLEAN, AEV_BYTE, AEV_CHAR, AEV_DOUBLE, AEV_FLOAT, AEV_INT, AEV_LONG, AEV_SHORT, AEV_STRING ->\n+            case TAG_BOOLEAN, TAG_BYTE, TAG_CHAR, TAG_DOUBLE, TAG_FLOAT, TAG_INT, TAG_LONG, TAG_SHORT, TAG_STRING ->\n@@ -367,2 +368,2 @@\n-            case AEV_CLASS -> buf.writeIndex(((AnnotationValue.OfClass) value).className());\n-            case AEV_ENUM -> {\n+            case TAG_CLASS -> buf.writeIndex(((AnnotationValue.OfClass) value).className());\n+            case TAG_ENUM -> {\n@@ -373,2 +374,2 @@\n-            case AEV_ANNOTATION -> writeAnnotation(buf, ((AnnotationValue.OfAnnotation) value).annotation());\n-            case AEV_ARRAY -> {\n+            case TAG_ANNOTATION -> writeAnnotation(buf, ((AnnotationValue.OfAnnotation) value).annotation());\n+            case TAG_ARRAY -> {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AnnotationReader.java","additions":42,"deletions":41,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -144,0 +144,11 @@\n+    public void writeU1U1U2(int x1, int x2, int x3) {\n+        reserveSpace(4);\n+        byte[] elems = this.elems;\n+        int offset = this.offset;\n+        elems[offset    ] = (byte) x1;\n+        elems[offset + 1] = (byte) x2;\n+        elems[offset + 2] = (byte) (x3 >> 8);\n+        elems[offset + 3] = (byte) x3;\n+        this.offset = offset + 4;\n+    }\n+\n@@ -329,3 +340,1 @@\n-    @ForceInline\n-    @Override\n-    public void writeIndex(PoolEntry entry) {\n+    public int cpIndex(PoolEntry entry) {\n@@ -335,1 +344,1 @@\n-        writeU2(idx);\n+        return idx;\n@@ -338,5 +347,4 @@\n-    public void writeIndex(int bytecode, PoolEntry entry) {\n-        int idx = AbstractPoolEntry.maybeClone(constantPool, entry).index();\n-        if (idx < 1 || idx > Character.MAX_VALUE)\n-            throw invalidIndex(idx, entry);\n-        writeU1U2(bytecode, idx);\n+    @ForceInline\n+    @Override\n+    public void writeIndex(PoolEntry entry) {\n+        writeU2(cpIndex(entry));\n@@ -345,0 +353,3 @@\n+    public void writeIndex(int bytecode, PoolEntry entry) {\n+        writeU1U2(bytecode, cpIndex(entry));\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufWriterImpl.java","additions":20,"deletions":9,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-import static java.lang.classfile.ClassFile.*;\n+import static jdk.internal.classfile.impl.RawBytecodeHelper.*;\n@@ -199,8 +199,2 @@\n-        return switch (tk) {\n-            case BYTE, SHORT, INT, CHAR, BOOLEAN -> IRETURN;\n-            case FLOAT -> FRETURN;\n-            case LONG -> LRETURN;\n-            case DOUBLE -> DRETURN;\n-            case REFERENCE -> ARETURN;\n-            case VOID -> RETURN;\n-        };\n+        int kind = Math.max(0, tk.ordinal() - 4); \/\/ BYTE, SHORT, CHAR, BOOLEAN becomes INT\n+        return IRETURN + kind;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BytecodeHelpers.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+import static java.lang.classfile.constantpool.PoolEntry.*;\n@@ -177,4 +178,4 @@\n-                        case TAG_STRING, TAG_METHODTYPE, TAG_MODULE, TAG_PACKAGE -> in.skipBytes(2);\n-                        case TAG_METHODHANDLE -> in.skipBytes(3);\n-                        case TAG_INTEGER, TAG_FLOAT, TAG_FIELDREF, TAG_METHODREF, TAG_INTERFACEMETHODREF,\n-                                TAG_NAMEANDTYPE, TAG_CONSTANTDYNAMIC, TAG_INVOKEDYNAMIC -> in.skipBytes(4);\n+                        case TAG_STRING, TAG_METHOD_TYPE, TAG_MODULE, TAG_PACKAGE -> in.skipBytes(2);\n+                        case TAG_METHOD_HANDLE -> in.skipBytes(3);\n+                        case TAG_INTEGER, TAG_FLOAT, TAG_FIELDREF, TAG_METHODREF, TAG_INTERFACE_METHODREF,\n+                             TAG_NAME_AND_TYPE, TAG_DYNAMIC, TAG_INVOKE_DYNAMIC -> in.skipBytes(4);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassHierarchyImpl.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -61,1 +61,0 @@\n-import static java.lang.classfile.ClassFile.*;\n@@ -64,0 +63,1 @@\n+import static java.lang.classfile.constantpool.PoolEntry.*;\n@@ -539,1 +539,1 @@\n-                        case ITEM_DOUBLE -> {\n+                        case DOUBLE -> {\n@@ -543,1 +543,1 @@\n-                        case ITEM_FLOAT ->\n+                        case FLOAT ->\n@@ -545,1 +545,1 @@\n-                        case ITEM_INTEGER ->\n+                        case INTEGER ->\n@@ -547,1 +547,1 @@\n-                        case ITEM_LONG ->  {\n+                        case LONG ->  {\n@@ -551,3 +551,3 @@\n-                        case ITEM_NULL -> ret.accept(\"null\");\n-                        case ITEM_TOP -> ret.accept(\"?\");\n-                        case ITEM_UNINITIALIZED_THIS -> ret.accept(\"THIS\");\n+                        case NULL -> ret.accept(\"null\");\n+                        case TOP -> ret.accept(\"?\");\n+                        case UNINITIALIZED_THIS -> ret.accept(\"THIS\");\n@@ -606,6 +606,6 @@\n-                            case TAG_INTERFACEMETHODREF -> \"InterfaceMethodref\";\n-                            case TAG_NAMEANDTYPE -> \"NameAndType\";\n-                            case TAG_METHODHANDLE -> \"MethodHandle\";\n-                            case TAG_METHODTYPE -> \"MethodType\";\n-                            case TAG_CONSTANTDYNAMIC -> \"Dynamic\";\n-                            case TAG_INVOKEDYNAMIC -> \"InvokeDynamic\";\n+                            case TAG_INTERFACE_METHODREF -> \"InterfaceMethodref\";\n+                            case TAG_NAME_AND_TYPE -> \"NameAndType\";\n+                            case TAG_METHOD_HANDLE -> \"MethodHandle\";\n+                            case TAG_METHOD_TYPE -> \"MethodType\";\n+                            case TAG_DYNAMIC -> \"Dynamic\";\n+                            case TAG_INVOKE_DYNAMIC -> \"InvokeDynamic\";\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassPrinterImpl.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -39,17 +39,1 @@\n-import static java.lang.classfile.ClassFile.TAG_CLASS;\n-import static java.lang.classfile.ClassFile.TAG_CONSTANTDYNAMIC;\n-import static java.lang.classfile.ClassFile.TAG_DOUBLE;\n-import static java.lang.classfile.ClassFile.TAG_FIELDREF;\n-import static java.lang.classfile.ClassFile.TAG_FLOAT;\n-import static java.lang.classfile.ClassFile.TAG_INTEGER;\n-import static java.lang.classfile.ClassFile.TAG_INTERFACEMETHODREF;\n-import static java.lang.classfile.ClassFile.TAG_INVOKEDYNAMIC;\n-import static java.lang.classfile.ClassFile.TAG_LONG;\n-import static java.lang.classfile.ClassFile.TAG_METHODHANDLE;\n-import static java.lang.classfile.ClassFile.TAG_METHODREF;\n-import static java.lang.classfile.ClassFile.TAG_METHODTYPE;\n-import static java.lang.classfile.ClassFile.TAG_MODULE;\n-import static java.lang.classfile.ClassFile.TAG_NAMEANDTYPE;\n-import static java.lang.classfile.ClassFile.TAG_PACKAGE;\n-import static java.lang.classfile.ClassFile.TAG_STRING;\n-import static java.lang.classfile.ClassFile.TAG_UTF8;\n+import static java.lang.classfile.constantpool.PoolEntry.*;\n@@ -101,1 +85,1 @@\n-                case TAG_CLASS, TAG_METHODTYPE, TAG_MODULE, TAG_STRING, TAG_PACKAGE -> p += 2;\n+                case TAG_CLASS, TAG_METHOD_TYPE, TAG_MODULE, TAG_STRING, TAG_PACKAGE -> p += 2;\n@@ -104,1 +88,1 @@\n-                case TAG_METHODHANDLE -> p += 3;\n+                case TAG_METHOD_HANDLE -> p += 3;\n@@ -107,3 +91,3 @@\n-                case TAG_CONSTANTDYNAMIC, TAG_FIELDREF, TAG_FLOAT, TAG_INTEGER,\n-                     TAG_INTERFACEMETHODREF, TAG_INVOKEDYNAMIC, TAG_METHODREF,\n-                     TAG_NAMEANDTYPE -> p += 4;\n+                case TAG_DYNAMIC, TAG_FIELDREF, TAG_FLOAT, TAG_INTEGER,\n+                     TAG_INTERFACE_METHODREF, TAG_INVOKE_DYNAMIC, TAG_METHODREF,\n+                     TAG_NAME_AND_TYPE -> p += 4;\n@@ -357,6 +341,6 @@\n-            case TAG_INTERFACEMETHODREF -> AbstractPoolEntry.InterfaceMethodRefEntryImpl.class;\n-            case TAG_NAMEANDTYPE -> AbstractPoolEntry.NameAndTypeEntryImpl.class;\n-            case TAG_METHODHANDLE -> AbstractPoolEntry.MethodHandleEntryImpl.class;\n-            case TAG_METHODTYPE -> AbstractPoolEntry.MethodTypeEntryImpl.class;\n-            case TAG_CONSTANTDYNAMIC -> AbstractPoolEntry.ConstantDynamicEntryImpl.class;\n-            case TAG_INVOKEDYNAMIC -> AbstractPoolEntry.InvokeDynamicEntryImpl.class;\n+            case TAG_INTERFACE_METHODREF -> AbstractPoolEntry.InterfaceMethodRefEntryImpl.class;\n+            case TAG_NAME_AND_TYPE -> AbstractPoolEntry.NameAndTypeEntryImpl.class;\n+            case TAG_METHOD_HANDLE -> AbstractPoolEntry.MethodHandleEntryImpl.class;\n+            case TAG_METHOD_TYPE -> AbstractPoolEntry.MethodTypeEntryImpl.class;\n+            case TAG_DYNAMIC -> AbstractPoolEntry.ConstantDynamicEntryImpl.class;\n+            case TAG_INVOKE_DYNAMIC -> AbstractPoolEntry.InvokeDynamicEntryImpl.class;\n@@ -405,1 +389,1 @@\n-                case TAG_INTERFACEMETHODREF -> new AbstractPoolEntry.InterfaceMethodRefEntryImpl(this, index, readEntry(q, AbstractPoolEntry.ClassEntryImpl.class),\n+                case TAG_INTERFACE_METHODREF -> new AbstractPoolEntry.InterfaceMethodRefEntryImpl(this, index, readEntry(q, AbstractPoolEntry.ClassEntryImpl.class),\n@@ -407,1 +391,1 @@\n-                case TAG_NAMEANDTYPE -> new AbstractPoolEntry.NameAndTypeEntryImpl(this, index, readEntry(q, AbstractPoolEntry.Utf8EntryImpl.class),\n+                case TAG_NAME_AND_TYPE -> new AbstractPoolEntry.NameAndTypeEntryImpl(this, index, readEntry(q, AbstractPoolEntry.Utf8EntryImpl.class),\n@@ -409,1 +393,1 @@\n-                case TAG_METHODHANDLE -> new AbstractPoolEntry.MethodHandleEntryImpl(this, index, readU1(q),\n+                case TAG_METHOD_HANDLE -> new AbstractPoolEntry.MethodHandleEntryImpl(this, index, readU1(q),\n@@ -411,3 +395,3 @@\n-                case TAG_METHODTYPE -> new AbstractPoolEntry.MethodTypeEntryImpl(this, index, readEntry(q, AbstractPoolEntry.Utf8EntryImpl.class));\n-                case TAG_CONSTANTDYNAMIC -> new AbstractPoolEntry.ConstantDynamicEntryImpl(this, index, readU2(q), readEntry(q + 2, AbstractPoolEntry.NameAndTypeEntryImpl.class));\n-                case TAG_INVOKEDYNAMIC -> new AbstractPoolEntry.InvokeDynamicEntryImpl(this, index, readU2(q), readEntry(q + 2, AbstractPoolEntry.NameAndTypeEntryImpl.class));\n+                case TAG_METHOD_TYPE -> new AbstractPoolEntry.MethodTypeEntryImpl(this, index, readEntry(q, AbstractPoolEntry.Utf8EntryImpl.class));\n+                case TAG_DYNAMIC -> new AbstractPoolEntry.ConstantDynamicEntryImpl(this, index, readU2(q), readEntry(q + 2, AbstractPoolEntry.NameAndTypeEntryImpl.class));\n+                case TAG_INVOKE_DYNAMIC -> new AbstractPoolEntry.InvokeDynamicEntryImpl(this, index, readU2(q), readEntry(q + 2, AbstractPoolEntry.NameAndTypeEntryImpl.class));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassReaderImpl.java","additions":18,"deletions":34,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-import static java.lang.classfile.ClassFile.*;\n+import static jdk.internal.classfile.impl.RawBytecodeHelper.*;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/CodeImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,0 +55,2 @@\n+    \/** The value of default class access flags *\/\n+    static final int DEFAULT_CLASS_FLAGS = ClassFile.ACC_PUBLIC;\n@@ -70,1 +72,1 @@\n-        this.flags = ClassFile.DEFAULT_CLASS_FLAGS;\n+        this.flags = DEFAULT_CLASS_FLAGS;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectClassBuilder.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,0 @@\n-import java.lang.constant.ConstantDesc;\n@@ -68,2 +67,0 @@\n-import static java.lang.classfile.ClassFile.*;\n-\n@@ -71,0 +68,1 @@\n+import static jdk.internal.classfile.impl.RawBytecodeHelper.*;\n@@ -512,3 +510,21 @@\n-        if (opcode.isWide())\n-            bytecodesBufWriter.writeU1(ClassFile.WIDE);\n-        bytecodesBufWriter.writeU1(opcode.bytecode() & 0xFF);\n+        assert !opcode.isWide();\n+        bytecodesBufWriter.writeU1(opcode.bytecode());\n+    }\n+\n+    \/\/ Instruction version, refer to opcode\n+    public void writeLocalVar(Opcode opcode, int slot) {\n+        if (opcode.isWide()) {\n+            bytecodesBufWriter.writeU2U2(opcode.bytecode(), slot);\n+        } else {\n+            bytecodesBufWriter.writeU1U1(opcode.bytecode(), slot);\n+        }\n+    }\n+\n+    \/\/ Shortcut version, refer to and validate slot\n+    private void writeLocalVar(int bytecode, int slot) {\n+        \/\/ TODO validation like (slot & 0xFFFF) == slot\n+        if (slot < 256) {\n+            bytecodesBufWriter.writeU1U1(bytecode, slot);\n+        } else {\n+            bytecodesBufWriter.writeU1U1U2(WIDE, bytecode, slot);\n+        }\n@@ -529,0 +545,1 @@\n+        boolean sizeFixed3 = op.sizeIfFixed() == 3;\n@@ -530,18 +547,4 @@\n-        if (op.sizeIfFixed() == 3 && (targetBci == -1\n-                                      ? transformFwdJumps\n-                                      : (transformBackJumps\n-                                         && targetBci - instructionPc < Short.MIN_VALUE))) {\n-            if (op == Opcode.GOTO) {\n-                bytecodesBufWriter.writeU1(GOTO_W);\n-                writeLabelOffset(4, instructionPc, target);\n-            } else if (op == Opcode.JSR) {\n-                bytecodesBufWriter.writeU1(JSR_W);\n-                writeLabelOffset(4, instructionPc, target);\n-            } else {\n-                writeBytecode(BytecodeHelpers.reverseBranchOpcode(op));\n-                Label bypassJump = newLabel();\n-                writeLabelOffset(2, instructionPc, bypassJump);\n-                bytecodesBufWriter.writeU1(GOTO_W);\n-                writeLabelOffset(4, instructionPc + 3, target);\n-                labelBinding(bypassJump);\n-            }\n+        if (sizeFixed3 && (targetBci == -1\n+                ? transformFwdJumps\n+                : (transformBackJumps && targetBci - instructionPc < Short.MIN_VALUE))) {\n+            writeBranchTransform(op, target, instructionPc, targetBci);\n@@ -550,1 +553,18 @@\n-            writeLabelOffset(op.sizeIfFixed() == 3 ? 2 : 4, instructionPc, target);\n+            writeLabelOffset(sizeFixed3 ? 2 : 4, instructionPc, target, targetBci);\n+        }\n+    }\n+\n+    private void writeBranchTransform(Opcode op, Label target, int instructionPc, int targetBci) {\n+        if (op == Opcode.GOTO) {\n+            bytecodesBufWriter.writeU1(GOTO_W);\n+            writeLabelOffset(4, instructionPc, target, targetBci);\n+        } else if (op == Opcode.JSR) {\n+            bytecodesBufWriter.writeU1(JSR_W);\n+            writeLabelOffset(4, instructionPc, target, targetBci);\n+        } else {\n+            writeBytecode(BytecodeHelpers.reverseBranchOpcode(op));\n+            Label bypassJump = newLabel();\n+            writeLabelOffset(2, instructionPc, bypassJump);\n+            bytecodesBufWriter.writeU1(GOTO_W);\n+            writeLabelOffset(4, instructionPc + 3, target);\n+            labelBinding(bypassJump);\n@@ -635,1 +655,0 @@\n-        writeBytecode(opcode);\n@@ -637,1 +656,1 @@\n-            bytecodesBufWriter.writeU2(value);\n+            bytecodesBufWriter.writeU1U2(opcode.bytecode(), value);\n@@ -639,1 +658,1 @@\n-            bytecodesBufWriter.writeU1(value);\n+            bytecodesBufWriter.writeU1U1(opcode.bytecode(), value);\n@@ -819,12 +838,0 @@\n-    public CodeBuilder ret(int slot) {\n-        bytecodesBufWriter.writeU1(RET);\n-        bytecodesBufWriter.writeU1(slot);\n-        return this;\n-    }\n-\n-    public CodeBuilder retW(int slot) {\n-        bytecodesBufWriter.writeU1U1(WIDE, RET);\n-        bytecodesBufWriter.writeU2(slot);\n-        return this;\n-    }\n-\n@@ -844,8 +851,0 @@\n-    private void withLocal(int bytecode, int slot) {\n-        if (slot < 256) {\n-            bytecodesBufWriter.writeU1U1(bytecode, slot);\n-        } else {\n-            bytecodesBufWriter.writeU2U2((WIDE << 8) | bytecode, slot);\n-        }\n-    }\n-\n@@ -947,1 +946,1 @@\n-            withLocal(ALOAD, slot);\n+            writeLocalVar(ALOAD, slot);\n@@ -975,1 +974,1 @@\n-            withLocal(ASTORE, slot);\n+            writeLocalVar(ASTORE, slot);\n@@ -1058,1 +1057,1 @@\n-            withLocal(DLOAD, slot);\n+            writeLocalVar(DLOAD, slot);\n@@ -1092,1 +1091,1 @@\n-            withLocal(DSTORE, slot);\n+            writeLocalVar(DSTORE, slot);\n@@ -1204,1 +1203,1 @@\n-            withLocal(FLOAD, slot);\n+            writeLocalVar(FLOAD, slot);\n@@ -1238,1 +1237,1 @@\n-            withLocal(FSTORE, slot);\n+            writeLocalVar(FSTORE, slot);\n@@ -1380,1 +1379,1 @@\n-            withLocal(ILOAD, slot);\n+            writeLocalVar(ILOAD, slot);\n@@ -1480,1 +1479,1 @@\n-            withLocal(ISTORE, slot);\n+            writeLocalVar(ISTORE, slot);\n@@ -1574,1 +1573,1 @@\n-            withLocal(LLOAD, slot);\n+            writeLocalVar(LLOAD, slot);\n@@ -1626,1 +1625,1 @@\n-            withLocal(LSTORE, slot);\n+            writeLocalVar(LSTORE, slot);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":57,"deletions":58,"binary":false,"changes":115,"status":"modified"},{"patch":"@@ -35,2 +35,0 @@\n-import static java.lang.classfile.ClassFile.*;\n-\n@@ -46,0 +44,204 @@\n+    public static final int\n+            ILLEGAL = -1,\n+            NOP = 0,\n+            ACONST_NULL = 1,\n+            ICONST_M1 = 2,\n+            ICONST_0 = 3,\n+            ICONST_1 = 4,\n+            ICONST_2 = 5,\n+            ICONST_3 = 6,\n+            ICONST_4 = 7,\n+            ICONST_5 = 8,\n+            LCONST_0 = 9,\n+            LCONST_1 = 10,\n+            FCONST_0 = 11,\n+            FCONST_1 = 12,\n+            FCONST_2 = 13,\n+            DCONST_0 = 14,\n+            DCONST_1 = 15,\n+            BIPUSH = 16,\n+            SIPUSH = 17,\n+            LDC = 18,\n+            LDC_W = 19,\n+            LDC2_W = 20,\n+            ILOAD = 21,\n+            LLOAD = 22,\n+            FLOAD = 23,\n+            DLOAD = 24,\n+            ALOAD = 25,\n+            ILOAD_0 = 26,\n+            ILOAD_1 = 27,\n+            ILOAD_2 = 28,\n+            ILOAD_3 = 29,\n+            LLOAD_0 = 30,\n+            LLOAD_1 = 31,\n+            LLOAD_2 = 32,\n+            LLOAD_3 = 33,\n+            FLOAD_0 = 34,\n+            FLOAD_1 = 35,\n+            FLOAD_2 = 36,\n+            FLOAD_3 = 37,\n+            DLOAD_0 = 38,\n+            DLOAD_1 = 39,\n+            DLOAD_2 = 40,\n+            DLOAD_3 = 41,\n+            ALOAD_0 = 42,\n+            ALOAD_1 = 43,\n+            ALOAD_2 = 44,\n+            ALOAD_3 = 45,\n+            IALOAD = 46,\n+            LALOAD = 47,\n+            FALOAD = 48,\n+            DALOAD = 49,\n+            AALOAD = 50,\n+            BALOAD = 51,\n+            CALOAD = 52,\n+            SALOAD = 53,\n+            ISTORE = 54,\n+            LSTORE = 55,\n+            FSTORE = 56,\n+            DSTORE = 57,\n+            ASTORE = 58,\n+            ISTORE_0 = 59,\n+            ISTORE_1 = 60,\n+            ISTORE_2 = 61,\n+            ISTORE_3 = 62,\n+            LSTORE_0 = 63,\n+            LSTORE_1 = 64,\n+            LSTORE_2 = 65,\n+            LSTORE_3 = 66,\n+            FSTORE_0 = 67,\n+            FSTORE_1 = 68,\n+            FSTORE_2 = 69,\n+            FSTORE_3 = 70,\n+            DSTORE_0 = 71,\n+            DSTORE_1 = 72,\n+            DSTORE_2 = 73,\n+            DSTORE_3 = 74,\n+            ASTORE_0 = 75,\n+            ASTORE_1 = 76,\n+            ASTORE_2 = 77,\n+            ASTORE_3 = 78,\n+            IASTORE = 79,\n+            LASTORE = 80,\n+            FASTORE = 81,\n+            DASTORE = 82,\n+            AASTORE = 83,\n+            BASTORE = 84,\n+            CASTORE = 85,\n+            SASTORE = 86,\n+            POP = 87,\n+            POP2 = 88,\n+            DUP = 89,\n+            DUP_X1 = 90,\n+            DUP_X2 = 91,\n+            DUP2 = 92,\n+            DUP2_X1 = 93,\n+            DUP2_X2 = 94,\n+            SWAP = 95,\n+            IADD = 96,\n+            LADD = 97,\n+            FADD = 98,\n+            DADD = 99,\n+            ISUB = 100,\n+            LSUB = 101,\n+            FSUB = 102,\n+            DSUB = 103,\n+            IMUL = 104,\n+            LMUL = 105,\n+            FMUL = 106,\n+            DMUL = 107,\n+            IDIV = 108,\n+            LDIV = 109,\n+            FDIV = 110,\n+            DDIV = 111,\n+            IREM = 112,\n+            LREM = 113,\n+            FREM = 114,\n+            DREM = 115,\n+            INEG = 116,\n+            LNEG = 117,\n+            FNEG = 118,\n+            DNEG = 119,\n+            ISHL = 120,\n+            LSHL = 121,\n+            ISHR = 122,\n+            LSHR = 123,\n+            IUSHR = 124,\n+            LUSHR = 125,\n+            IAND = 126,\n+            LAND = 127,\n+            IOR = 128,\n+            LOR = 129,\n+            IXOR = 130,\n+            LXOR = 131,\n+            IINC = 132,\n+            I2L = 133,\n+            I2F = 134,\n+            I2D = 135,\n+            L2I = 136,\n+            L2F = 137,\n+            L2D = 138,\n+            F2I = 139,\n+            F2L = 140,\n+            F2D = 141,\n+            D2I = 142,\n+            D2L = 143,\n+            D2F = 144,\n+            I2B = 145,\n+            I2C = 146,\n+            I2S = 147,\n+            LCMP = 148,\n+            FCMPL = 149,\n+            FCMPG = 150,\n+            DCMPL = 151,\n+            DCMPG = 152,\n+            IFEQ = 153,\n+            IFNE = 154,\n+            IFLT = 155,\n+            IFGE = 156,\n+            IFGT = 157,\n+            IFLE = 158,\n+            IF_ICMPEQ = 159,\n+            IF_ICMPNE = 160,\n+            IF_ICMPLT = 161,\n+            IF_ICMPGE = 162,\n+            IF_ICMPGT = 163,\n+            IF_ICMPLE = 164,\n+            IF_ACMPEQ = 165,\n+            IF_ACMPNE = 166,\n+            GOTO = 167,\n+            JSR = 168,\n+            RET = 169,\n+            TABLESWITCH = 170,\n+            LOOKUPSWITCH = 171,\n+            IRETURN = 172,\n+            LRETURN = 173,\n+            FRETURN = 174,\n+            DRETURN = 175,\n+            ARETURN = 176,\n+            RETURN = 177,\n+            GETSTATIC = 178,\n+            PUTSTATIC = 179,\n+            GETFIELD = 180,\n+            PUTFIELD = 181,\n+            INVOKEVIRTUAL = 182,\n+            INVOKESPECIAL = 183,\n+            INVOKESTATIC = 184,\n+            INVOKEINTERFACE = 185,\n+            INVOKEDYNAMIC = 186,\n+            NEW = 187,\n+            NEWARRAY = 188,\n+            ANEWARRAY = 189,\n+            ARRAYLENGTH = 190,\n+            ATHROW = 191,\n+            CHECKCAST = 192,\n+            INSTANCEOF = 193,\n+            MONITORENTER = 194,\n+            MONITOREXIT = 195,\n+            WIDE = 196,\n+            MULTIANEWARRAY = 197,\n+            IFNULL = 198,\n+            IFNONNULL = 199,\n+            GOTO_W = 200,\n+            JSR_W = 201;\n@@ -53,2 +255,0 @@\n-    public static final int ILLEGAL = -1;\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/RawBytecodeHelper.java","additions":204,"deletions":4,"binary":false,"changes":208,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import java.lang.classfile.ClassFile;\n@@ -42,16 +41,1 @@\n-import static java.lang.classfile.ClassFile.TAG_CLASS;\n-import static java.lang.classfile.ClassFile.TAG_CONSTANTDYNAMIC;\n-import static java.lang.classfile.ClassFile.TAG_DOUBLE;\n-import static java.lang.classfile.ClassFile.TAG_FIELDREF;\n-import static java.lang.classfile.ClassFile.TAG_FLOAT;\n-import static java.lang.classfile.ClassFile.TAG_INTEGER;\n-import static java.lang.classfile.ClassFile.TAG_INTERFACEMETHODREF;\n-import static java.lang.classfile.ClassFile.TAG_INVOKEDYNAMIC;\n-import static java.lang.classfile.ClassFile.TAG_LONG;\n-import static java.lang.classfile.ClassFile.TAG_METHODHANDLE;\n-import static java.lang.classfile.ClassFile.TAG_METHODREF;\n-import static java.lang.classfile.ClassFile.TAG_METHODTYPE;\n-import static java.lang.classfile.ClassFile.TAG_MODULE;\n-import static java.lang.classfile.ClassFile.TAG_NAMEANDTYPE;\n-import static java.lang.classfile.ClassFile.TAG_PACKAGE;\n-import static java.lang.classfile.ClassFile.TAG_STRING;\n+import static java.lang.classfile.constantpool.PoolEntry.*;\n@@ -374,1 +358,1 @@\n-            if (e.tag() == ClassFile.TAG_UTF8\n+            if (e.tag() == TAG_UTF8\n@@ -390,1 +374,1 @@\n-            if (e.tag() == ClassFile.TAG_UTF8\n+            if (e.tag() == TAG_UTF8\n@@ -407,1 +391,1 @@\n-                if (e.tag() == ClassFile.TAG_UTF8\n+                if (e.tag() == TAG_UTF8\n@@ -474,1 +458,1 @@\n-            if (e.tag() == ClassFile.TAG_CLASS\n+            if (e.tag() == TAG_CLASS\n@@ -570,1 +554,1 @@\n-        var e = (AbstractPoolEntry.NameAndTypeEntryImpl) findEntry(TAG_NAMEANDTYPE, ne, te);\n+        var e = (AbstractPoolEntry.NameAndTypeEntryImpl) findEntry(TAG_NAME_AND_TYPE, ne, te);\n@@ -594,1 +578,1 @@\n-        var e = (AbstractPoolEntry.InterfaceMethodRefEntryImpl) findEntry(TAG_INTERFACEMETHODREF, oe, ne);\n+        var e = (AbstractPoolEntry.InterfaceMethodRefEntryImpl) findEntry(TAG_INTERFACE_METHODREF, oe, ne);\n@@ -606,1 +590,1 @@\n-        var e = (AbstractPoolEntry.MethodTypeEntryImpl) findEntry(TAG_METHODTYPE, de);\n+        var e = (AbstractPoolEntry.MethodTypeEntryImpl) findEntry(TAG_METHOD_TYPE, de);\n@@ -613,1 +597,1 @@\n-        int hash = AbstractPoolEntry.hash2(TAG_METHODHANDLE, refKind, reference.index());\n+        int hash = AbstractPoolEntry.hash2(TAG_METHOD_HANDLE, refKind, reference.index());\n@@ -617,1 +601,1 @@\n-            if (e.tag() == TAG_METHODHANDLE\n+            if (e.tag() == TAG_METHOD_HANDLE\n@@ -637,1 +621,1 @@\n-        int hash = AbstractPoolEntry.hash2(TAG_INVOKEDYNAMIC,\n+        int hash = AbstractPoolEntry.hash2(TAG_INVOKE_DYNAMIC,\n@@ -642,1 +626,1 @@\n-            if (e.tag() == TAG_INVOKEDYNAMIC\n+            if (e.tag() == TAG_INVOKE_DYNAMIC\n@@ -667,1 +651,1 @@\n-        int hash = AbstractPoolEntry.hash2(TAG_CONSTANTDYNAMIC,\n+        int hash = AbstractPoolEntry.hash2(TAG_DYNAMIC,\n@@ -672,1 +656,1 @@\n-            if (e.tag() == TAG_CONSTANTDYNAMIC\n+            if (e.tag() == TAG_DYNAMIC\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/SplitConstantPool.java","additions":14,"deletions":30,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+import static java.lang.classfile.constantpool.PoolEntry.*;\n+import static jdk.internal.classfile.impl.RawBytecodeHelper.*;\n@@ -123,2 +125,2 @@\n-                    if (vti == StackMapFrameInfo.SimpleVerificationTypeInfo.ITEM_LONG\n-                     || vti == StackMapFrameInfo.SimpleVerificationTypeInfo.ITEM_DOUBLE) frameStack++;\n+                    if (vti == StackMapFrameInfo.SimpleVerificationTypeInfo.LONG\n+                     || vti == StackMapFrameInfo.SimpleVerificationTypeInfo.DOUBLE) frameStack++;\n@@ -379,1 +381,1 @@\n-            case TAG_UTF8, TAG_STRING, TAG_CLASS, TAG_INTEGER, TAG_FLOAT, TAG_METHODHANDLE, TAG_METHODTYPE ->\n+            case TAG_UTF8, TAG_STRING, TAG_CLASS, TAG_INTEGER, TAG_FLOAT, TAG_METHOD_HANDLE, TAG_METHOD_TYPE ->\n@@ -383,1 +385,1 @@\n-            case TAG_CONSTANTDYNAMIC ->\n+            case TAG_DYNAMIC ->\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackCounter.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import static java.lang.classfile.attribute.StackMapFrameInfo.VerificationTypeInfo.*;\n@@ -78,1 +79,1 @@\n-                vtis[i++] = SimpleVerificationTypeInfo.ITEM_UNINITIALIZED_THIS;\n+                vtis[i++] = SimpleVerificationTypeInfo.UNINITIALIZED_THIS;\n@@ -88,4 +89,4 @@\n-                case 'I', 'S', 'C' ,'B', 'Z' -> SimpleVerificationTypeInfo.ITEM_INTEGER;\n-                case 'J' -> SimpleVerificationTypeInfo.ITEM_LONG;\n-                case 'F' -> SimpleVerificationTypeInfo.ITEM_FLOAT;\n-                case 'D' -> SimpleVerificationTypeInfo.ITEM_DOUBLE;\n+                case 'I', 'S', 'C' ,'B', 'Z' -> SimpleVerificationTypeInfo.INTEGER;\n+                case 'J' -> SimpleVerificationTypeInfo.LONG;\n+                case 'F' -> SimpleVerificationTypeInfo.FLOAT;\n+                case 'D' -> SimpleVerificationTypeInfo.DOUBLE;\n@@ -172,1 +173,2 @@\n-            case VT_TOP, VT_INTEGER, VT_FLOAT, VT_DOUBLE, VT_LONG, VT_NULL, VT_UNINITIALIZED_THIS ->\n+            case ITEM_TOP, ITEM_INTEGER, ITEM_FLOAT, ITEM_DOUBLE, ITEM_LONG, ITEM_NULL,\n+                 ITEM_UNINITIALIZED_THIS ->\n@@ -174,1 +176,1 @@\n-            case VT_OBJECT ->\n+            case ITEM_OBJECT ->\n@@ -176,1 +178,1 @@\n-            case VT_UNINITIALIZED ->\n+            case ITEM_UNINITIALIZED ->\n@@ -235,9 +237,9 @@\n-            case VT_TOP -> SimpleVerificationTypeInfo.ITEM_TOP;\n-            case VT_INTEGER -> SimpleVerificationTypeInfo.ITEM_INTEGER;\n-            case VT_FLOAT -> SimpleVerificationTypeInfo.ITEM_FLOAT;\n-            case VT_DOUBLE -> SimpleVerificationTypeInfo.ITEM_DOUBLE;\n-            case VT_LONG -> SimpleVerificationTypeInfo.ITEM_LONG;\n-            case VT_NULL -> SimpleVerificationTypeInfo.ITEM_NULL;\n-            case VT_UNINITIALIZED_THIS -> SimpleVerificationTypeInfo.ITEM_UNINITIALIZED_THIS;\n-            case VT_OBJECT -> new ObjectVerificationTypeInfoImpl(classReader.entryByIndex(u2(), ClassEntry.class));\n-            case VT_UNINITIALIZED -> new UninitializedVerificationTypeInfoImpl(ctx.getLabel(u2()));\n+            case ITEM_TOP -> SimpleVerificationTypeInfo.TOP;\n+            case ITEM_INTEGER -> SimpleVerificationTypeInfo.INTEGER;\n+            case ITEM_FLOAT -> SimpleVerificationTypeInfo.FLOAT;\n+            case ITEM_DOUBLE -> SimpleVerificationTypeInfo.DOUBLE;\n+            case ITEM_LONG -> SimpleVerificationTypeInfo.LONG;\n+            case ITEM_NULL -> SimpleVerificationTypeInfo.NULL;\n+            case ITEM_UNINITIALIZED_THIS -> SimpleVerificationTypeInfo.UNINITIALIZED_THIS;\n+            case ITEM_OBJECT -> new ObjectVerificationTypeInfoImpl(classReader.entryByIndex(u2(), ClassEntry.class));\n+            case ITEM_UNINITIALIZED -> new UninitializedVerificationTypeInfoImpl(ctx.getLabel(u2()));\n@@ -252,1 +254,1 @@\n-        public int tag() { return VT_OBJECT; }\n+        public int tag() { return ITEM_OBJECT; }\n@@ -277,1 +279,1 @@\n-        public int tag() { return VT_UNINITIALIZED; }\n+        public int tag() { return ITEM_UNINITIALIZED; }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapDecoder.java","additions":21,"deletions":19,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.lang.classfile.ClassFile;\n@@ -51,0 +50,1 @@\n+import static java.lang.classfile.constantpool.PoolEntry.*;\n@@ -52,0 +52,1 @@\n+import static jdk.internal.classfile.impl.RawBytecodeHelper.*;\n@@ -699,1 +700,1 @@\n-            case TAG_METHODHANDLE ->\n+            case TAG_METHOD_HANDLE ->\n@@ -701,1 +702,1 @@\n-            case TAG_METHODTYPE ->\n+            case TAG_METHOD_TYPE ->\n@@ -703,1 +704,1 @@\n-            case TAG_CONSTANTDYNAMIC ->\n+            case TAG_DYNAMIC ->\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-import static java.lang.classfile.ClassFile.*;\n+\n@@ -50,1 +50,1 @@\n-            this.targetType = checkValid(targetType, TAT_CLASS_TYPE_PARAMETER, TAT_METHOD_TYPE_PARAMETER);\n+            this.targetType = checkValid(targetType, TARGET_CLASS_TYPE_PARAMETER, TARGET_METHOD_TYPE_PARAMETER);\n@@ -66,1 +66,1 @@\n-            this.targetType = checkValid(targetType, TAT_CLASS_TYPE_PARAMETER_BOUND, TAT_METHOD_TYPE_PARAMETER_BOUND);\n+            this.targetType = checkValid(targetType, TARGET_CLASS_TYPE_PARAMETER_BOUND, TARGET_METHOD_TYPE_PARAMETER_BOUND);\n@@ -75,1 +75,1 @@\n-            this.targetType = checkValid(targetType, TAT_FIELD, TAT_METHOD_RECEIVER);\n+            this.targetType = checkValid(targetType, TARGET_FIELD, TARGET_METHOD_RECEIVER);\n@@ -97,1 +97,1 @@\n-            this.targetType = checkValid(targetType, TAT_LOCAL_VARIABLE, TAT_RESOURCE_VARIABLE);\n+            this.targetType = checkValid(targetType, TARGET_LOCAL_VARIABLE, TARGET_RESOURCE_VARIABLE);\n@@ -125,1 +125,1 @@\n-            this.targetType = checkValid(targetType, TAT_INSTANCEOF, TAT_METHOD_REFERENCE);\n+            this.targetType = checkValid(targetType, TARGET_INSTANCEOF, TARGET_METHOD_REFERENCE);\n@@ -134,1 +134,1 @@\n-            this.targetType = checkValid(targetType, TAT_CAST, TAT_METHOD_REFERENCE_TYPE_ARGUMENT);\n+            this.targetType = checkValid(targetType, TARGET_CAST, TARGET_METHOD_REFERENCE_TYPE_ARGUMENT);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/TargetInfoImpl.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import java.lang.classfile.ClassFile;\n+import static jdk.internal.classfile.impl.RawBytecodeHelper.*;\n@@ -86,1 +86,1 @@\n-        return (ClassFile.ISTORE <= code && code <= ClassFile.ASTORE_3);\n+        return (ISTORE <= code && code <= ASTORE_3);\n@@ -107,202 +107,202 @@\n-        def(ClassFile.NOP, \"nop\", \"b\", null, T_VOID, 0);\n-        def(ClassFile.ACONST_NULL, \"aconst_null\", \"b\", null, T_OBJECT, 1);\n-        def(ClassFile.ICONST_M1, \"iconst_m1\", \"b\", null, T_INT, 1);\n-        def(ClassFile.ICONST_0, \"iconst_0\", \"b\", null, T_INT, 1);\n-        def(ClassFile.ICONST_1, \"iconst_1\", \"b\", null, T_INT, 1);\n-        def(ClassFile.ICONST_2, \"iconst_2\", \"b\", null, T_INT, 1);\n-        def(ClassFile.ICONST_3, \"iconst_3\", \"b\", null, T_INT, 1);\n-        def(ClassFile.ICONST_4, \"iconst_4\", \"b\", null, T_INT, 1);\n-        def(ClassFile.ICONST_5, \"iconst_5\", \"b\", null, T_INT, 1);\n-        def(ClassFile.LCONST_0, \"lconst_0\", \"b\", null, T_LONG, 2);\n-        def(ClassFile.LCONST_1, \"lconst_1\", \"b\", null, T_LONG, 2);\n-        def(ClassFile.FCONST_0, \"fconst_0\", \"b\", null, T_FLOAT, 1);\n-        def(ClassFile.FCONST_1, \"fconst_1\", \"b\", null, T_FLOAT, 1);\n-        def(ClassFile.FCONST_2, \"fconst_2\", \"b\", null, T_FLOAT, 1);\n-        def(ClassFile.DCONST_0, \"dconst_0\", \"b\", null, T_DOUBLE, 2);\n-        def(ClassFile.DCONST_1, \"dconst_1\", \"b\", null, T_DOUBLE, 2);\n-        def(ClassFile.BIPUSH, \"bipush\", \"bc\", null, T_INT, 1);\n-        def(ClassFile.SIPUSH, \"sipush\", \"bcc\", null, T_INT, 1);\n-        def(ClassFile.LDC, \"ldc\", \"bk\", null, T_ILLEGAL, 1);\n-        def(ClassFile.LDC_W, \"ldc_w\", \"bkk\", null, T_ILLEGAL, 1);\n-        def(ClassFile.LDC2_W, \"ldc2_w\", \"bkk\", null, T_ILLEGAL, 2);\n-        def(ClassFile.ILOAD, \"iload\", \"bi\", \"wbii\", T_INT, 1);\n-        def(ClassFile.LLOAD, \"lload\", \"bi\", \"wbii\", T_LONG, 2);\n-        def(ClassFile.FLOAD, \"fload\", \"bi\", \"wbii\", T_FLOAT, 1);\n-        def(ClassFile.DLOAD, \"dload\", \"bi\", \"wbii\", T_DOUBLE, 2);\n-        def(ClassFile.ALOAD, \"aload\", \"bi\", \"wbii\", T_OBJECT, 1);\n-        def(ClassFile.ILOAD_0, \"iload_0\", \"b\", null, T_INT, 1);\n-        def(ClassFile.ILOAD_1, \"iload_1\", \"b\", null, T_INT, 1);\n-        def(ClassFile.ILOAD_2, \"iload_2\", \"b\", null, T_INT, 1);\n-        def(ClassFile.ILOAD_3, \"iload_3\", \"b\", null, T_INT, 1);\n-        def(ClassFile.LLOAD_0, \"lload_0\", \"b\", null, T_LONG, 2);\n-        def(ClassFile.LLOAD_1, \"lload_1\", \"b\", null, T_LONG, 2);\n-        def(ClassFile.LLOAD_2, \"lload_2\", \"b\", null, T_LONG, 2);\n-        def(ClassFile.LLOAD_3, \"lload_3\", \"b\", null, T_LONG, 2);\n-        def(ClassFile.FLOAD_0, \"fload_0\", \"b\", null, T_FLOAT, 1);\n-        def(ClassFile.FLOAD_1, \"fload_1\", \"b\", null, T_FLOAT, 1);\n-        def(ClassFile.FLOAD_2, \"fload_2\", \"b\", null, T_FLOAT, 1);\n-        def(ClassFile.FLOAD_3, \"fload_3\", \"b\", null, T_FLOAT, 1);\n-        def(ClassFile.DLOAD_0, \"dload_0\", \"b\", null, T_DOUBLE, 2);\n-        def(ClassFile.DLOAD_1, \"dload_1\", \"b\", null, T_DOUBLE, 2);\n-        def(ClassFile.DLOAD_2, \"dload_2\", \"b\", null, T_DOUBLE, 2);\n-        def(ClassFile.DLOAD_3, \"dload_3\", \"b\", null, T_DOUBLE, 2);\n-        def(ClassFile.ALOAD_0, \"aload_0\", \"b\", null, T_OBJECT, 1);\n-        def(ClassFile.ALOAD_1, \"aload_1\", \"b\", null, T_OBJECT, 1);\n-        def(ClassFile.ALOAD_2, \"aload_2\", \"b\", null, T_OBJECT, 1);\n-        def(ClassFile.ALOAD_3, \"aload_3\", \"b\", null, T_OBJECT, 1);\n-        def(ClassFile.IALOAD, \"iaload\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LALOAD, \"laload\", \"b\", null, T_LONG, 0);\n-        def(ClassFile.FALOAD, \"faload\", \"b\", null, T_FLOAT, -1);\n-        def(ClassFile.DALOAD, \"daload\", \"b\", null, T_DOUBLE, 0);\n-        def(ClassFile.AALOAD, \"aaload\", \"b\", null, T_OBJECT, -1);\n-        def(ClassFile.BALOAD, \"baload\", \"b\", null, T_INT, -1);\n-        def(ClassFile.CALOAD, \"caload\", \"b\", null, T_INT, -1);\n-        def(ClassFile.SALOAD, \"saload\", \"b\", null, T_INT, -1);\n-        def(ClassFile.ISTORE, \"istore\", \"bi\", \"wbii\", T_VOID, -1);\n-        def(ClassFile.LSTORE, \"lstore\", \"bi\", \"wbii\", T_VOID, -2);\n-        def(ClassFile.FSTORE, \"fstore\", \"bi\", \"wbii\", T_VOID, -1);\n-        def(ClassFile.DSTORE, \"dstore\", \"bi\", \"wbii\", T_VOID, -2);\n-        def(ClassFile.ASTORE, \"astore\", \"bi\", \"wbii\", T_VOID, -1);\n-        def(ClassFile.ISTORE_0, \"istore_0\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.ISTORE_1, \"istore_1\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.ISTORE_2, \"istore_2\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.ISTORE_3, \"istore_3\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.LSTORE_0, \"lstore_0\", \"b\", null, T_VOID, -2);\n-        def(ClassFile.LSTORE_1, \"lstore_1\", \"b\", null, T_VOID, -2);\n-        def(ClassFile.LSTORE_2, \"lstore_2\", \"b\", null, T_VOID, -2);\n-        def(ClassFile.LSTORE_3, \"lstore_3\", \"b\", null, T_VOID, -2);\n-        def(ClassFile.FSTORE_0, \"fstore_0\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.FSTORE_1, \"fstore_1\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.FSTORE_2, \"fstore_2\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.FSTORE_3, \"fstore_3\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.DSTORE_0, \"dstore_0\", \"b\", null, T_VOID, -2);\n-        def(ClassFile.DSTORE_1, \"dstore_1\", \"b\", null, T_VOID, -2);\n-        def(ClassFile.DSTORE_2, \"dstore_2\", \"b\", null, T_VOID, -2);\n-        def(ClassFile.DSTORE_3, \"dstore_3\", \"b\", null, T_VOID, -2);\n-        def(ClassFile.ASTORE_0, \"astore_0\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.ASTORE_1, \"astore_1\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.ASTORE_2, \"astore_2\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.ASTORE_3, \"astore_3\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.IASTORE, \"iastore\", \"b\", null, T_VOID, -3);\n-        def(ClassFile.LASTORE, \"lastore\", \"b\", null, T_VOID, -4);\n-        def(ClassFile.FASTORE, \"fastore\", \"b\", null, T_VOID, -3);\n-        def(ClassFile.DASTORE, \"dastore\", \"b\", null, T_VOID, -4);\n-        def(ClassFile.AASTORE, \"aastore\", \"b\", null, T_VOID, -3);\n-        def(ClassFile.BASTORE, \"bastore\", \"b\", null, T_VOID, -3);\n-        def(ClassFile.CASTORE, \"castore\", \"b\", null, T_VOID, -3);\n-        def(ClassFile.SASTORE, \"sastore\", \"b\", null, T_VOID, -3);\n-        def(ClassFile.POP, \"pop\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.POP2, \"pop2\", \"b\", null, T_VOID, -2);\n-        def(ClassFile.DUP, \"dup\", \"b\", null, T_VOID, 1);\n-        def(ClassFile.DUP_X1, \"dup_x1\", \"b\", null, T_VOID, 1);\n-        def(ClassFile.DUP_X2, \"dup_x2\", \"b\", null, T_VOID, 1);\n-        def(ClassFile.DUP2, \"dup2\", \"b\", null, T_VOID, 2);\n-        def(ClassFile.DUP2_X1, \"dup2_x1\", \"b\", null, T_VOID, 2);\n-        def(ClassFile.DUP2_X2, \"dup2_x2\", \"b\", null, T_VOID, 2);\n-        def(ClassFile.SWAP, \"swap\", \"b\", null, T_VOID, 0);\n-        def(ClassFile.IADD, \"iadd\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LADD, \"ladd\", \"b\", null, T_LONG, -2);\n-        def(ClassFile.FADD, \"fadd\", \"b\", null, T_FLOAT, -1);\n-        def(ClassFile.DADD, \"dadd\", \"b\", null, T_DOUBLE, -2);\n-        def(ClassFile.ISUB, \"isub\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LSUB, \"lsub\", \"b\", null, T_LONG, -2);\n-        def(ClassFile.FSUB, \"fsub\", \"b\", null, T_FLOAT, -1);\n-        def(ClassFile.DSUB, \"dsub\", \"b\", null, T_DOUBLE, -2);\n-        def(ClassFile.IMUL, \"imul\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LMUL, \"lmul\", \"b\", null, T_LONG, -2);\n-        def(ClassFile.FMUL, \"fmul\", \"b\", null, T_FLOAT, -1);\n-        def(ClassFile.DMUL, \"dmul\", \"b\", null, T_DOUBLE, -2);\n-        def(ClassFile.IDIV, \"idiv\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LDIV, \"ldiv\", \"b\", null, T_LONG, -2);\n-        def(ClassFile.FDIV, \"fdiv\", \"b\", null, T_FLOAT, -1);\n-        def(ClassFile.DDIV, \"ddiv\", \"b\", null, T_DOUBLE, -2);\n-        def(ClassFile.IREM, \"irem\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LREM, \"lrem\", \"b\", null, T_LONG, -2);\n-        def(ClassFile.FREM, \"frem\", \"b\", null, T_FLOAT, -1);\n-        def(ClassFile.DREM, \"drem\", \"b\", null, T_DOUBLE, -2);\n-        def(ClassFile.INEG, \"ineg\", \"b\", null, T_INT, 0);\n-        def(ClassFile.LNEG, \"lneg\", \"b\", null, T_LONG, 0);\n-        def(ClassFile.FNEG, \"fneg\", \"b\", null, T_FLOAT, 0);\n-        def(ClassFile.DNEG, \"dneg\", \"b\", null, T_DOUBLE, 0);\n-        def(ClassFile.ISHL, \"ishl\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LSHL, \"lshl\", \"b\", null, T_LONG, -1);\n-        def(ClassFile.ISHR, \"ishr\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LSHR, \"lshr\", \"b\", null, T_LONG, -1);\n-        def(ClassFile.IUSHR, \"iushr\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LUSHR, \"lushr\", \"b\", null, T_LONG, -1);\n-        def(ClassFile.IAND, \"iand\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LAND, \"land\", \"b\", null, T_LONG, -2);\n-        def(ClassFile.IOR, \"ior\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LOR, \"lor\", \"b\", null, T_LONG, -2);\n-        def(ClassFile.IXOR, \"ixor\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LXOR, \"lxor\", \"b\", null, T_LONG, -2);\n-        def(ClassFile.IINC, \"iinc\", \"bic\", \"wbiicc\", T_VOID, 0);\n-        def(ClassFile.I2L, \"i2l\", \"b\", null, T_LONG, 1);\n-        def(ClassFile.I2F, \"i2f\", \"b\", null, T_FLOAT, 0);\n-        def(ClassFile.I2D, \"i2d\", \"b\", null, T_DOUBLE, 1);\n-        def(ClassFile.L2I, \"l2i\", \"b\", null, T_INT, -1);\n-        def(ClassFile.L2F, \"l2f\", \"b\", null, T_FLOAT, -1);\n-        def(ClassFile.L2D, \"l2d\", \"b\", null, T_DOUBLE, 0);\n-        def(ClassFile.F2I, \"f2i\", \"b\", null, T_INT, 0);\n-        def(ClassFile.F2L, \"f2l\", \"b\", null, T_LONG, 1);\n-        def(ClassFile.F2D, \"f2d\", \"b\", null, T_DOUBLE, 1);\n-        def(ClassFile.D2I, \"d2i\", \"b\", null, T_INT, -1);\n-        def(ClassFile.D2L, \"d2l\", \"b\", null, T_LONG, 0);\n-        def(ClassFile.D2F, \"d2f\", \"b\", null, T_FLOAT, -1);\n-        def(ClassFile.I2B, \"i2b\", \"b\", null, T_BYTE, 0);\n-        def(ClassFile.I2C, \"i2c\", \"b\", null, T_CHAR, 0);\n-        def(ClassFile.I2S, \"i2s\", \"b\", null, T_SHORT, 0);\n-        def(ClassFile.LCMP, \"lcmp\", \"b\", null, T_VOID, -3);\n-        def(ClassFile.FCMPL, \"fcmpl\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.FCMPG, \"fcmpg\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.DCMPL, \"dcmpl\", \"b\", null, T_VOID, -3);\n-        def(ClassFile.DCMPG, \"dcmpg\", \"b\", null, T_VOID, -3);\n-        def(ClassFile.IFEQ, \"ifeq\", \"boo\", null, T_VOID, -1);\n-        def(ClassFile.IFNE, \"ifne\", \"boo\", null, T_VOID, -1);\n-        def(ClassFile.IFLT, \"iflt\", \"boo\", null, T_VOID, -1);\n-        def(ClassFile.IFGE, \"ifge\", \"boo\", null, T_VOID, -1);\n-        def(ClassFile.IFGT, \"ifgt\", \"boo\", null, T_VOID, -1);\n-        def(ClassFile.IFLE, \"ifle\", \"boo\", null, T_VOID, -1);\n-        def(ClassFile.IF_ICMPEQ, \"if_icmpeq\", \"boo\", null, T_VOID, -2);\n-        def(ClassFile.IF_ICMPNE, \"if_icmpne\", \"boo\", null, T_VOID, -2);\n-        def(ClassFile.IF_ICMPLT, \"if_icmplt\", \"boo\", null, T_VOID, -2);\n-        def(ClassFile.IF_ICMPGE, \"if_icmpge\", \"boo\", null, T_VOID, -2);\n-        def(ClassFile.IF_ICMPGT, \"if_icmpgt\", \"boo\", null, T_VOID, -2);\n-        def(ClassFile.IF_ICMPLE, \"if_icmple\", \"boo\", null, T_VOID, -2);\n-        def(ClassFile.IF_ACMPEQ, \"if_acmpeq\", \"boo\", null, T_VOID, -2);\n-        def(ClassFile.IF_ACMPNE, \"if_acmpne\", \"boo\", null, T_VOID, -2);\n-        def(ClassFile.GOTO, \"goto\", \"boo\", null, T_VOID, 0);\n-        def(ClassFile.JSR, \"jsr\", \"boo\", null, T_INT, 0);\n-        def(ClassFile.RET, \"ret\", \"bi\", \"wbii\", T_VOID, 0);\n-        def(ClassFile.TABLESWITCH, \"tableswitch\", \"\", null, T_VOID, -1); \/\/ may have backward branches\n-        def(ClassFile.LOOKUPSWITCH, \"lookupswitch\", \"\", null, T_VOID, -1); \/\/ rewriting in interpreter\n-        def(ClassFile.IRETURN, \"ireturn\", \"b\", null, T_INT, -1);\n-        def(ClassFile.LRETURN, \"lreturn\", \"b\", null, T_LONG, -2);\n-        def(ClassFile.FRETURN, \"freturn\", \"b\", null, T_FLOAT, -1);\n-        def(ClassFile.DRETURN, \"dreturn\", \"b\", null, T_DOUBLE, -2);\n-        def(ClassFile.ARETURN, \"areturn\", \"b\", null, T_OBJECT, -1);\n-        def(ClassFile.RETURN, \"return\", \"b\", null, T_VOID, 0);\n-        def(ClassFile.GETSTATIC, \"getstatic\", \"bJJ\", null, T_ILLEGAL, 1);\n-        def(ClassFile.PUTSTATIC, \"putstatic\", \"bJJ\", null, T_ILLEGAL, -1);\n-        def(ClassFile.GETFIELD, \"getfield\", \"bJJ\", null, T_ILLEGAL, 0);\n-        def(ClassFile.PUTFIELD, \"putfield\", \"bJJ\", null, T_ILLEGAL, -2);\n-        def(ClassFile.INVOKEVIRTUAL, \"invokevirtual\", \"bJJ\", null, T_ILLEGAL, -1);\n-        def(ClassFile.INVOKESPECIAL, \"invokespecial\", \"bJJ\", null, T_ILLEGAL, -1);\n-        def(ClassFile.INVOKESTATIC, \"invokestatic\", \"bJJ\", null, T_ILLEGAL, 0);\n-        def(ClassFile.INVOKEINTERFACE, \"invokeinterface\", \"bJJ__\", null, T_ILLEGAL, -1);\n-        def(ClassFile.INVOKEDYNAMIC, \"invokedynamic\", \"bJJJJ\", null, T_ILLEGAL, 0);\n-        def(ClassFile.NEW, \"new\", \"bkk\", null, T_OBJECT, 1);\n-        def(ClassFile.NEWARRAY, \"newarray\", \"bc\", null, T_OBJECT, 0);\n-        def(ClassFile.ANEWARRAY, \"anewarray\", \"bkk\", null, T_OBJECT, 0);\n-        def(ClassFile.ARRAYLENGTH, \"arraylength\", \"b\", null, T_VOID, 0);\n-        def(ClassFile.ATHROW, \"athrow\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.CHECKCAST, \"checkcast\", \"bkk\", null, T_OBJECT, 0);\n-        def(ClassFile.INSTANCEOF, \"instanceof\", \"bkk\", null, T_INT, 0);\n-        def(ClassFile.MONITORENTER, \"monitorenter\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.MONITOREXIT, \"monitorexit\", \"b\", null, T_VOID, -1);\n-        def(ClassFile.WIDE, \"wide\", \"\", null, T_VOID, 0);\n-        def(ClassFile.MULTIANEWARRAY, \"multianewarray\", \"bkkc\", null, T_OBJECT, 1);\n-        def(ClassFile.IFNULL, \"ifnull\", \"boo\", null, T_VOID, -1);\n-        def(ClassFile.IFNONNULL, \"ifnonnull\", \"boo\", null, T_VOID, -1);\n-        def(ClassFile.GOTO_W, \"goto_w\", \"boooo\", null, T_VOID, 0);\n-        def(ClassFile.JSR_W, \"jsr_w\", \"boooo\", null, T_INT, 0);\n+        def(NOP, \"nop\", \"b\", null, T_VOID, 0);\n+        def(ACONST_NULL, \"aconst_null\", \"b\", null, T_OBJECT, 1);\n+        def(ICONST_M1, \"iconst_m1\", \"b\", null, T_INT, 1);\n+        def(ICONST_0, \"iconst_0\", \"b\", null, T_INT, 1);\n+        def(ICONST_1, \"iconst_1\", \"b\", null, T_INT, 1);\n+        def(ICONST_2, \"iconst_2\", \"b\", null, T_INT, 1);\n+        def(ICONST_3, \"iconst_3\", \"b\", null, T_INT, 1);\n+        def(ICONST_4, \"iconst_4\", \"b\", null, T_INT, 1);\n+        def(ICONST_5, \"iconst_5\", \"b\", null, T_INT, 1);\n+        def(LCONST_0, \"lconst_0\", \"b\", null, T_LONG, 2);\n+        def(LCONST_1, \"lconst_1\", \"b\", null, T_LONG, 2);\n+        def(FCONST_0, \"fconst_0\", \"b\", null, T_FLOAT, 1);\n+        def(FCONST_1, \"fconst_1\", \"b\", null, T_FLOAT, 1);\n+        def(FCONST_2, \"fconst_2\", \"b\", null, T_FLOAT, 1);\n+        def(DCONST_0, \"dconst_0\", \"b\", null, T_DOUBLE, 2);\n+        def(DCONST_1, \"dconst_1\", \"b\", null, T_DOUBLE, 2);\n+        def(BIPUSH, \"bipush\", \"bc\", null, T_INT, 1);\n+        def(SIPUSH, \"sipush\", \"bcc\", null, T_INT, 1);\n+        def(LDC, \"ldc\", \"bk\", null, T_ILLEGAL, 1);\n+        def(LDC_W, \"ldc_w\", \"bkk\", null, T_ILLEGAL, 1);\n+        def(LDC2_W, \"ldc2_w\", \"bkk\", null, T_ILLEGAL, 2);\n+        def(ILOAD, \"iload\", \"bi\", \"wbii\", T_INT, 1);\n+        def(LLOAD, \"lload\", \"bi\", \"wbii\", T_LONG, 2);\n+        def(FLOAD, \"fload\", \"bi\", \"wbii\", T_FLOAT, 1);\n+        def(DLOAD, \"dload\", \"bi\", \"wbii\", T_DOUBLE, 2);\n+        def(ALOAD, \"aload\", \"bi\", \"wbii\", T_OBJECT, 1);\n+        def(ILOAD_0, \"iload_0\", \"b\", null, T_INT, 1);\n+        def(ILOAD_1, \"iload_1\", \"b\", null, T_INT, 1);\n+        def(ILOAD_2, \"iload_2\", \"b\", null, T_INT, 1);\n+        def(ILOAD_3, \"iload_3\", \"b\", null, T_INT, 1);\n+        def(LLOAD_0, \"lload_0\", \"b\", null, T_LONG, 2);\n+        def(LLOAD_1, \"lload_1\", \"b\", null, T_LONG, 2);\n+        def(LLOAD_2, \"lload_2\", \"b\", null, T_LONG, 2);\n+        def(LLOAD_3, \"lload_3\", \"b\", null, T_LONG, 2);\n+        def(FLOAD_0, \"fload_0\", \"b\", null, T_FLOAT, 1);\n+        def(FLOAD_1, \"fload_1\", \"b\", null, T_FLOAT, 1);\n+        def(FLOAD_2, \"fload_2\", \"b\", null, T_FLOAT, 1);\n+        def(FLOAD_3, \"fload_3\", \"b\", null, T_FLOAT, 1);\n+        def(DLOAD_0, \"dload_0\", \"b\", null, T_DOUBLE, 2);\n+        def(DLOAD_1, \"dload_1\", \"b\", null, T_DOUBLE, 2);\n+        def(DLOAD_2, \"dload_2\", \"b\", null, T_DOUBLE, 2);\n+        def(DLOAD_3, \"dload_3\", \"b\", null, T_DOUBLE, 2);\n+        def(ALOAD_0, \"aload_0\", \"b\", null, T_OBJECT, 1);\n+        def(ALOAD_1, \"aload_1\", \"b\", null, T_OBJECT, 1);\n+        def(ALOAD_2, \"aload_2\", \"b\", null, T_OBJECT, 1);\n+        def(ALOAD_3, \"aload_3\", \"b\", null, T_OBJECT, 1);\n+        def(IALOAD, \"iaload\", \"b\", null, T_INT, -1);\n+        def(LALOAD, \"laload\", \"b\", null, T_LONG, 0);\n+        def(FALOAD, \"faload\", \"b\", null, T_FLOAT, -1);\n+        def(DALOAD, \"daload\", \"b\", null, T_DOUBLE, 0);\n+        def(AALOAD, \"aaload\", \"b\", null, T_OBJECT, -1);\n+        def(BALOAD, \"baload\", \"b\", null, T_INT, -1);\n+        def(CALOAD, \"caload\", \"b\", null, T_INT, -1);\n+        def(SALOAD, \"saload\", \"b\", null, T_INT, -1);\n+        def(ISTORE, \"istore\", \"bi\", \"wbii\", T_VOID, -1);\n+        def(LSTORE, \"lstore\", \"bi\", \"wbii\", T_VOID, -2);\n+        def(FSTORE, \"fstore\", \"bi\", \"wbii\", T_VOID, -1);\n+        def(DSTORE, \"dstore\", \"bi\", \"wbii\", T_VOID, -2);\n+        def(ASTORE, \"astore\", \"bi\", \"wbii\", T_VOID, -1);\n+        def(ISTORE_0, \"istore_0\", \"b\", null, T_VOID, -1);\n+        def(ISTORE_1, \"istore_1\", \"b\", null, T_VOID, -1);\n+        def(ISTORE_2, \"istore_2\", \"b\", null, T_VOID, -1);\n+        def(ISTORE_3, \"istore_3\", \"b\", null, T_VOID, -1);\n+        def(LSTORE_0, \"lstore_0\", \"b\", null, T_VOID, -2);\n+        def(LSTORE_1, \"lstore_1\", \"b\", null, T_VOID, -2);\n+        def(LSTORE_2, \"lstore_2\", \"b\", null, T_VOID, -2);\n+        def(LSTORE_3, \"lstore_3\", \"b\", null, T_VOID, -2);\n+        def(FSTORE_0, \"fstore_0\", \"b\", null, T_VOID, -1);\n+        def(FSTORE_1, \"fstore_1\", \"b\", null, T_VOID, -1);\n+        def(FSTORE_2, \"fstore_2\", \"b\", null, T_VOID, -1);\n+        def(FSTORE_3, \"fstore_3\", \"b\", null, T_VOID, -1);\n+        def(DSTORE_0, \"dstore_0\", \"b\", null, T_VOID, -2);\n+        def(DSTORE_1, \"dstore_1\", \"b\", null, T_VOID, -2);\n+        def(DSTORE_2, \"dstore_2\", \"b\", null, T_VOID, -2);\n+        def(DSTORE_3, \"dstore_3\", \"b\", null, T_VOID, -2);\n+        def(ASTORE_0, \"astore_0\", \"b\", null, T_VOID, -1);\n+        def(ASTORE_1, \"astore_1\", \"b\", null, T_VOID, -1);\n+        def(ASTORE_2, \"astore_2\", \"b\", null, T_VOID, -1);\n+        def(ASTORE_3, \"astore_3\", \"b\", null, T_VOID, -1);\n+        def(IASTORE, \"iastore\", \"b\", null, T_VOID, -3);\n+        def(LASTORE, \"lastore\", \"b\", null, T_VOID, -4);\n+        def(FASTORE, \"fastore\", \"b\", null, T_VOID, -3);\n+        def(DASTORE, \"dastore\", \"b\", null, T_VOID, -4);\n+        def(AASTORE, \"aastore\", \"b\", null, T_VOID, -3);\n+        def(BASTORE, \"bastore\", \"b\", null, T_VOID, -3);\n+        def(CASTORE, \"castore\", \"b\", null, T_VOID, -3);\n+        def(SASTORE, \"sastore\", \"b\", null, T_VOID, -3);\n+        def(POP, \"pop\", \"b\", null, T_VOID, -1);\n+        def(POP2, \"pop2\", \"b\", null, T_VOID, -2);\n+        def(DUP, \"dup\", \"b\", null, T_VOID, 1);\n+        def(DUP_X1, \"dup_x1\", \"b\", null, T_VOID, 1);\n+        def(DUP_X2, \"dup_x2\", \"b\", null, T_VOID, 1);\n+        def(DUP2, \"dup2\", \"b\", null, T_VOID, 2);\n+        def(DUP2_X1, \"dup2_x1\", \"b\", null, T_VOID, 2);\n+        def(DUP2_X2, \"dup2_x2\", \"b\", null, T_VOID, 2);\n+        def(SWAP, \"swap\", \"b\", null, T_VOID, 0);\n+        def(IADD, \"iadd\", \"b\", null, T_INT, -1);\n+        def(LADD, \"ladd\", \"b\", null, T_LONG, -2);\n+        def(FADD, \"fadd\", \"b\", null, T_FLOAT, -1);\n+        def(DADD, \"dadd\", \"b\", null, T_DOUBLE, -2);\n+        def(ISUB, \"isub\", \"b\", null, T_INT, -1);\n+        def(LSUB, \"lsub\", \"b\", null, T_LONG, -2);\n+        def(FSUB, \"fsub\", \"b\", null, T_FLOAT, -1);\n+        def(DSUB, \"dsub\", \"b\", null, T_DOUBLE, -2);\n+        def(IMUL, \"imul\", \"b\", null, T_INT, -1);\n+        def(LMUL, \"lmul\", \"b\", null, T_LONG, -2);\n+        def(FMUL, \"fmul\", \"b\", null, T_FLOAT, -1);\n+        def(DMUL, \"dmul\", \"b\", null, T_DOUBLE, -2);\n+        def(IDIV, \"idiv\", \"b\", null, T_INT, -1);\n+        def(LDIV, \"ldiv\", \"b\", null, T_LONG, -2);\n+        def(FDIV, \"fdiv\", \"b\", null, T_FLOAT, -1);\n+        def(DDIV, \"ddiv\", \"b\", null, T_DOUBLE, -2);\n+        def(IREM, \"irem\", \"b\", null, T_INT, -1);\n+        def(LREM, \"lrem\", \"b\", null, T_LONG, -2);\n+        def(FREM, \"frem\", \"b\", null, T_FLOAT, -1);\n+        def(DREM, \"drem\", \"b\", null, T_DOUBLE, -2);\n+        def(INEG, \"ineg\", \"b\", null, T_INT, 0);\n+        def(LNEG, \"lneg\", \"b\", null, T_LONG, 0);\n+        def(FNEG, \"fneg\", \"b\", null, T_FLOAT, 0);\n+        def(DNEG, \"dneg\", \"b\", null, T_DOUBLE, 0);\n+        def(ISHL, \"ishl\", \"b\", null, T_INT, -1);\n+        def(LSHL, \"lshl\", \"b\", null, T_LONG, -1);\n+        def(ISHR, \"ishr\", \"b\", null, T_INT, -1);\n+        def(LSHR, \"lshr\", \"b\", null, T_LONG, -1);\n+        def(IUSHR, \"iushr\", \"b\", null, T_INT, -1);\n+        def(LUSHR, \"lushr\", \"b\", null, T_LONG, -1);\n+        def(IAND, \"iand\", \"b\", null, T_INT, -1);\n+        def(LAND, \"land\", \"b\", null, T_LONG, -2);\n+        def(IOR, \"ior\", \"b\", null, T_INT, -1);\n+        def(LOR, \"lor\", \"b\", null, T_LONG, -2);\n+        def(IXOR, \"ixor\", \"b\", null, T_INT, -1);\n+        def(LXOR, \"lxor\", \"b\", null, T_LONG, -2);\n+        def(IINC, \"iinc\", \"bic\", \"wbiicc\", T_VOID, 0);\n+        def(I2L, \"i2l\", \"b\", null, T_LONG, 1);\n+        def(I2F, \"i2f\", \"b\", null, T_FLOAT, 0);\n+        def(I2D, \"i2d\", \"b\", null, T_DOUBLE, 1);\n+        def(L2I, \"l2i\", \"b\", null, T_INT, -1);\n+        def(L2F, \"l2f\", \"b\", null, T_FLOAT, -1);\n+        def(L2D, \"l2d\", \"b\", null, T_DOUBLE, 0);\n+        def(F2I, \"f2i\", \"b\", null, T_INT, 0);\n+        def(F2L, \"f2l\", \"b\", null, T_LONG, 1);\n+        def(F2D, \"f2d\", \"b\", null, T_DOUBLE, 1);\n+        def(D2I, \"d2i\", \"b\", null, T_INT, -1);\n+        def(D2L, \"d2l\", \"b\", null, T_LONG, 0);\n+        def(D2F, \"d2f\", \"b\", null, T_FLOAT, -1);\n+        def(I2B, \"i2b\", \"b\", null, T_BYTE, 0);\n+        def(I2C, \"i2c\", \"b\", null, T_CHAR, 0);\n+        def(I2S, \"i2s\", \"b\", null, T_SHORT, 0);\n+        def(LCMP, \"lcmp\", \"b\", null, T_VOID, -3);\n+        def(FCMPL, \"fcmpl\", \"b\", null, T_VOID, -1);\n+        def(FCMPG, \"fcmpg\", \"b\", null, T_VOID, -1);\n+        def(DCMPL, \"dcmpl\", \"b\", null, T_VOID, -3);\n+        def(DCMPG, \"dcmpg\", \"b\", null, T_VOID, -3);\n+        def(IFEQ, \"ifeq\", \"boo\", null, T_VOID, -1);\n+        def(IFNE, \"ifne\", \"boo\", null, T_VOID, -1);\n+        def(IFLT, \"iflt\", \"boo\", null, T_VOID, -1);\n+        def(IFGE, \"ifge\", \"boo\", null, T_VOID, -1);\n+        def(IFGT, \"ifgt\", \"boo\", null, T_VOID, -1);\n+        def(IFLE, \"ifle\", \"boo\", null, T_VOID, -1);\n+        def(IF_ICMPEQ, \"if_icmpeq\", \"boo\", null, T_VOID, -2);\n+        def(IF_ICMPNE, \"if_icmpne\", \"boo\", null, T_VOID, -2);\n+        def(IF_ICMPLT, \"if_icmplt\", \"boo\", null, T_VOID, -2);\n+        def(IF_ICMPGE, \"if_icmpge\", \"boo\", null, T_VOID, -2);\n+        def(IF_ICMPGT, \"if_icmpgt\", \"boo\", null, T_VOID, -2);\n+        def(IF_ICMPLE, \"if_icmple\", \"boo\", null, T_VOID, -2);\n+        def(IF_ACMPEQ, \"if_acmpeq\", \"boo\", null, T_VOID, -2);\n+        def(IF_ACMPNE, \"if_acmpne\", \"boo\", null, T_VOID, -2);\n+        def(GOTO, \"goto\", \"boo\", null, T_VOID, 0);\n+        def(JSR, \"jsr\", \"boo\", null, T_INT, 0);\n+        def(RET, \"ret\", \"bi\", \"wbii\", T_VOID, 0);\n+        def(TABLESWITCH, \"tableswitch\", \"\", null, T_VOID, -1); \/\/ may have backward branches\n+        def(LOOKUPSWITCH, \"lookupswitch\", \"\", null, T_VOID, -1); \/\/ rewriting in interpreter\n+        def(IRETURN, \"ireturn\", \"b\", null, T_INT, -1);\n+        def(LRETURN, \"lreturn\", \"b\", null, T_LONG, -2);\n+        def(FRETURN, \"freturn\", \"b\", null, T_FLOAT, -1);\n+        def(DRETURN, \"dreturn\", \"b\", null, T_DOUBLE, -2);\n+        def(ARETURN, \"areturn\", \"b\", null, T_OBJECT, -1);\n+        def(RETURN, \"return\", \"b\", null, T_VOID, 0);\n+        def(GETSTATIC, \"getstatic\", \"bJJ\", null, T_ILLEGAL, 1);\n+        def(PUTSTATIC, \"putstatic\", \"bJJ\", null, T_ILLEGAL, -1);\n+        def(GETFIELD, \"getfield\", \"bJJ\", null, T_ILLEGAL, 0);\n+        def(PUTFIELD, \"putfield\", \"bJJ\", null, T_ILLEGAL, -2);\n+        def(INVOKEVIRTUAL, \"invokevirtual\", \"bJJ\", null, T_ILLEGAL, -1);\n+        def(INVOKESPECIAL, \"invokespecial\", \"bJJ\", null, T_ILLEGAL, -1);\n+        def(INVOKESTATIC, \"invokestatic\", \"bJJ\", null, T_ILLEGAL, 0);\n+        def(INVOKEINTERFACE, \"invokeinterface\", \"bJJ__\", null, T_ILLEGAL, -1);\n+        def(INVOKEDYNAMIC, \"invokedynamic\", \"bJJJJ\", null, T_ILLEGAL, 0);\n+        def(NEW, \"new\", \"bkk\", null, T_OBJECT, 1);\n+        def(NEWARRAY, \"newarray\", \"bc\", null, T_OBJECT, 0);\n+        def(ANEWARRAY, \"anewarray\", \"bkk\", null, T_OBJECT, 0);\n+        def(ARRAYLENGTH, \"arraylength\", \"b\", null, T_VOID, 0);\n+        def(ATHROW, \"athrow\", \"b\", null, T_VOID, -1);\n+        def(CHECKCAST, \"checkcast\", \"bkk\", null, T_OBJECT, 0);\n+        def(INSTANCEOF, \"instanceof\", \"bkk\", null, T_INT, 0);\n+        def(MONITORENTER, \"monitorenter\", \"b\", null, T_VOID, -1);\n+        def(MONITOREXIT, \"monitorexit\", \"b\", null, T_VOID, -1);\n+        def(WIDE, \"wide\", \"\", null, T_VOID, 0);\n+        def(MULTIANEWARRAY, \"multianewarray\", \"bkkc\", null, T_OBJECT, 1);\n+        def(IFNULL, \"ifnull\", \"boo\", null, T_VOID, -1);\n+        def(IFNONNULL, \"ifnonnull\", \"boo\", null, T_VOID, -1);\n+        def(GOTO_W, \"goto_w\", \"boooo\", null, T_VOID, 0);\n+        def(JSR_W, \"jsr_w\", \"boooo\", null, T_INT, 0);\n@@ -310,35 +310,35 @@\n-        def(_fast_agetfield, \"fast_agetfield\", \"bJJ\", null, T_OBJECT, 0, ClassFile.GETFIELD);\n-        def(_fast_bgetfield, \"fast_bgetfield\", \"bJJ\", null, T_INT, 0, ClassFile.GETFIELD);\n-        def(_fast_cgetfield, \"fast_cgetfield\", \"bJJ\", null, T_CHAR, 0, ClassFile.GETFIELD);\n-        def(_fast_dgetfield, \"fast_dgetfield\", \"bJJ\", null, T_DOUBLE, 0, ClassFile.GETFIELD);\n-        def(_fast_fgetfield, \"fast_fgetfield\", \"bJJ\", null, T_FLOAT, 0, ClassFile.GETFIELD);\n-        def(_fast_igetfield, \"fast_igetfield\", \"bJJ\", null, T_INT, 0, ClassFile.GETFIELD);\n-        def(_fast_lgetfield, \"fast_lgetfield\", \"bJJ\", null, T_LONG, 0, ClassFile.GETFIELD);\n-        def(_fast_sgetfield, \"fast_sgetfield\", \"bJJ\", null, T_SHORT, 0, ClassFile.GETFIELD);\n-        def(_fast_aputfield, \"fast_aputfield\", \"bJJ\", null, T_OBJECT, 0, ClassFile.PUTFIELD);\n-        def(_fast_bputfield, \"fast_bputfield\", \"bJJ\", null, T_INT, 0, ClassFile.PUTFIELD);\n-        def(_fast_zputfield, \"fast_zputfield\", \"bJJ\", null, T_INT, 0, ClassFile.PUTFIELD);\n-        def(_fast_cputfield, \"fast_cputfield\", \"bJJ\", null, T_CHAR, 0, ClassFile.PUTFIELD);\n-        def(_fast_dputfield, \"fast_dputfield\", \"bJJ\", null, T_DOUBLE, 0, ClassFile.PUTFIELD);\n-        def(_fast_fputfield, \"fast_fputfield\", \"bJJ\", null, T_FLOAT, 0, ClassFile.PUTFIELD);\n-        def(_fast_iputfield, \"fast_iputfield\", \"bJJ\", null, T_INT, 0, ClassFile.PUTFIELD);\n-        def(_fast_lputfield, \"fast_lputfield\", \"bJJ\", null, T_LONG, 0, ClassFile.PUTFIELD);\n-        def(_fast_sputfield, \"fast_sputfield\", \"bJJ\", null, T_SHORT, 0, ClassFile.PUTFIELD);\n-        def(_fast_aload_0, \"fast_aload_0\", \"b\", null, T_OBJECT, 1, ClassFile.ALOAD_0);\n-        def(_fast_iaccess_0, \"fast_iaccess_0\", \"b_JJ\", null, T_INT, 1, ClassFile.ALOAD_0);\n-        def(_fast_aaccess_0, \"fast_aaccess_0\", \"b_JJ\", null, T_OBJECT, 1, ClassFile.ALOAD_0);\n-        def(_fast_faccess_0, \"fast_faccess_0\", \"b_JJ\", null, T_OBJECT, 1, ClassFile.ALOAD_0);\n-        def(_fast_iload, \"fast_iload\", \"bi\", null, T_INT, 1, ClassFile.ILOAD);\n-        def(_fast_iload2, \"fast_iload2\", \"bi_i\", null, T_INT, 2, ClassFile.ILOAD);\n-        def(_fast_icaload, \"fast_icaload\", \"bi_\", null, T_INT, 0, ClassFile.ILOAD);\n-        def(_fast_invokevfinal, \"fast_invokevfinal\", \"bJJ\", null, T_ILLEGAL, -1, ClassFile.INVOKEVIRTUAL);\n-        def(_fast_linearswitch, \"fast_linearswitch\", \"\", null, T_VOID, -1, ClassFile.LOOKUPSWITCH);\n-        def(_fast_binaryswitch, \"fast_binaryswitch\", \"\", null, T_VOID, -1, ClassFile.LOOKUPSWITCH);\n-        def(_return_register_finalizer, \"return_register_finalizer\", \"b\", null, T_VOID, 0, ClassFile.RETURN);\n-        def(_invokehandle, \"invokehandle\", \"bJJ\", null, T_ILLEGAL, -1, ClassFile.INVOKEVIRTUAL);\n-        def(_fast_aldc, \"fast_aldc\", \"bj\", null, T_OBJECT, 1, ClassFile.LDC);\n-        def(_fast_aldc_w, \"fast_aldc_w\", \"bJJ\", null, T_OBJECT, 1, ClassFile.LDC_W);\n-        def(_nofast_getfield, \"nofast_getfield\", \"bJJ\", null, T_ILLEGAL, 0, ClassFile.GETFIELD);\n-        def(_nofast_putfield, \"nofast PUTFIELD\", \"bJJ\", null, T_ILLEGAL, -2, ClassFile.PUTFIELD);\n-        def(_nofast_aload_0, \"nofast_aload_0\", \"b\", null, T_ILLEGAL, 1, ClassFile.ALOAD_0);\n-        def(_nofast_iload, \"nofast_iload\", \"bi\", null, T_ILLEGAL, 1, ClassFile.ILOAD);\n+        def(_fast_agetfield, \"fast_agetfield\", \"bJJ\", null, T_OBJECT, 0, GETFIELD);\n+        def(_fast_bgetfield, \"fast_bgetfield\", \"bJJ\", null, T_INT, 0, GETFIELD);\n+        def(_fast_cgetfield, \"fast_cgetfield\", \"bJJ\", null, T_CHAR, 0, GETFIELD);\n+        def(_fast_dgetfield, \"fast_dgetfield\", \"bJJ\", null, T_DOUBLE, 0, GETFIELD);\n+        def(_fast_fgetfield, \"fast_fgetfield\", \"bJJ\", null, T_FLOAT, 0, GETFIELD);\n+        def(_fast_igetfield, \"fast_igetfield\", \"bJJ\", null, T_INT, 0, GETFIELD);\n+        def(_fast_lgetfield, \"fast_lgetfield\", \"bJJ\", null, T_LONG, 0, GETFIELD);\n+        def(_fast_sgetfield, \"fast_sgetfield\", \"bJJ\", null, T_SHORT, 0, GETFIELD);\n+        def(_fast_aputfield, \"fast_aputfield\", \"bJJ\", null, T_OBJECT, 0, PUTFIELD);\n+        def(_fast_bputfield, \"fast_bputfield\", \"bJJ\", null, T_INT, 0, PUTFIELD);\n+        def(_fast_zputfield, \"fast_zputfield\", \"bJJ\", null, T_INT, 0, PUTFIELD);\n+        def(_fast_cputfield, \"fast_cputfield\", \"bJJ\", null, T_CHAR, 0, PUTFIELD);\n+        def(_fast_dputfield, \"fast_dputfield\", \"bJJ\", null, T_DOUBLE, 0, PUTFIELD);\n+        def(_fast_fputfield, \"fast_fputfield\", \"bJJ\", null, T_FLOAT, 0, PUTFIELD);\n+        def(_fast_iputfield, \"fast_iputfield\", \"bJJ\", null, T_INT, 0, PUTFIELD);\n+        def(_fast_lputfield, \"fast_lputfield\", \"bJJ\", null, T_LONG, 0, PUTFIELD);\n+        def(_fast_sputfield, \"fast_sputfield\", \"bJJ\", null, T_SHORT, 0, PUTFIELD);\n+        def(_fast_aload_0, \"fast_aload_0\", \"b\", null, T_OBJECT, 1, ALOAD_0);\n+        def(_fast_iaccess_0, \"fast_iaccess_0\", \"b_JJ\", null, T_INT, 1, ALOAD_0);\n+        def(_fast_aaccess_0, \"fast_aaccess_0\", \"b_JJ\", null, T_OBJECT, 1, ALOAD_0);\n+        def(_fast_faccess_0, \"fast_faccess_0\", \"b_JJ\", null, T_OBJECT, 1, ALOAD_0);\n+        def(_fast_iload, \"fast_iload\", \"bi\", null, T_INT, 1, ILOAD);\n+        def(_fast_iload2, \"fast_iload2\", \"bi_i\", null, T_INT, 2, ILOAD);\n+        def(_fast_icaload, \"fast_icaload\", \"bi_\", null, T_INT, 0, ILOAD);\n+        def(_fast_invokevfinal, \"fast_invokevfinal\", \"bJJ\", null, T_ILLEGAL, -1, INVOKEVIRTUAL);\n+        def(_fast_linearswitch, \"fast_linearswitch\", \"\", null, T_VOID, -1, LOOKUPSWITCH);\n+        def(_fast_binaryswitch, \"fast_binaryswitch\", \"\", null, T_VOID, -1, LOOKUPSWITCH);\n+        def(_return_register_finalizer, \"return_register_finalizer\", \"b\", null, T_VOID, 0, RETURN);\n+        def(_invokehandle, \"invokehandle\", \"bJJ\", null, T_ILLEGAL, -1, INVOKEVIRTUAL);\n+        def(_fast_aldc, \"fast_aldc\", \"bj\", null, T_OBJECT, 1, LDC);\n+        def(_fast_aldc_w, \"fast_aldc_w\", \"bJJ\", null, T_OBJECT, 1, LDC_W);\n+        def(_nofast_getfield, \"nofast_getfield\", \"bJJ\", null, T_ILLEGAL, 0, GETFIELD);\n+        def(_nofast_putfield, \"nofast PUTFIELD\", \"bJJ\", null, T_ILLEGAL, -2, PUTFIELD);\n+        def(_nofast_aload_0, \"nofast_aload_0\", \"b\", null, T_ILLEGAL, 1, ALOAD_0);\n+        def(_nofast_iload, \"nofast_iload\", \"bi\", null, T_ILLEGAL, 1, ILOAD);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/VerificationBytecodes.java","additions":239,"deletions":239,"binary":false,"changes":478,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import java.lang.classfile.ClassFile;\n@@ -37,1 +36,1 @@\n-import static jdk.internal.classfile.impl.RawBytecodeHelper.ILLEGAL;\n+import static jdk.internal.classfile.impl.RawBytecodeHelper.*;\n@@ -343,6 +342,6 @@\n-                    if (opcode != ClassFile.IINC && opcode != ClassFile.ILOAD\n-                        && opcode != ClassFile.ALOAD && opcode != ClassFile.LLOAD\n-                        && opcode != ClassFile.ISTORE && opcode != ClassFile.ASTORE\n-                        && opcode != ClassFile.LSTORE && opcode != ClassFile.FLOAD\n-                        && opcode != ClassFile.DLOAD && opcode != ClassFile.FSTORE\n-                        && opcode != ClassFile.DSTORE) {\n+                    if (opcode != IINC && opcode != ILOAD\n+                        && opcode != ALOAD && opcode != LLOAD\n+                        && opcode != ISTORE && opcode != ASTORE\n+                        && opcode != LSTORE && opcode != FLOAD\n+                        && opcode != DLOAD && opcode != FSTORE\n+                        && opcode != DSTORE) {\n@@ -357,1 +356,1 @@\n-                    case ClassFile.NOP :\n+                    case NOP :\n@@ -359,1 +358,1 @@\n-                    case ClassFile.ACONST_NULL :\n+                    case ACONST_NULL :\n@@ -363,7 +362,7 @@\n-                    case ClassFile.ICONST_M1 :\n-                    case ClassFile.ICONST_0 :\n-                    case ClassFile.ICONST_1 :\n-                    case ClassFile.ICONST_2 :\n-                    case ClassFile.ICONST_3 :\n-                    case ClassFile.ICONST_4 :\n-                    case ClassFile.ICONST_5 :\n+                    case ICONST_M1 :\n+                    case ICONST_0 :\n+                    case ICONST_1 :\n+                    case ICONST_2 :\n+                    case ICONST_3 :\n+                    case ICONST_4 :\n+                    case ICONST_5 :\n@@ -373,2 +372,2 @@\n-                    case ClassFile.LCONST_0 :\n-                    case ClassFile.LCONST_1 :\n+                    case LCONST_0 :\n+                    case LCONST_1 :\n@@ -379,3 +378,3 @@\n-                    case ClassFile.FCONST_0 :\n-                    case ClassFile.FCONST_1 :\n-                    case ClassFile.FCONST_2 :\n+                    case FCONST_0 :\n+                    case FCONST_1 :\n+                    case FCONST_2 :\n@@ -385,2 +384,2 @@\n-                    case ClassFile.DCONST_0 :\n-                    case ClassFile.DCONST_1 :\n+                    case DCONST_0 :\n+                    case DCONST_1 :\n@@ -391,2 +390,2 @@\n-                    case ClassFile.SIPUSH :\n-                    case ClassFile.BIPUSH :\n+                    case SIPUSH :\n+                    case BIPUSH :\n@@ -396,1 +395,1 @@\n-                    case ClassFile.LDC :\n+                    case LDC :\n@@ -401,2 +400,2 @@\n-                    case ClassFile.LDC_W :\n-                    case ClassFile.LDC2_W :\n+                    case LDC_W :\n+                    case LDC2_W :\n@@ -407,1 +406,1 @@\n-                    case ClassFile.ILOAD :\n+                    case ILOAD :\n@@ -410,5 +409,5 @@\n-                    case ClassFile.ILOAD_0 :\n-                    case ClassFile.ILOAD_1 :\n-                    case ClassFile.ILOAD_2 :\n-                    case ClassFile.ILOAD_3 :\n-                        index = opcode - ClassFile.ILOAD_0;\n+                    case ILOAD_0 :\n+                    case ILOAD_1 :\n+                    case ILOAD_2 :\n+                    case ILOAD_3 :\n+                        index = opcode - ILOAD_0;\n@@ -417,1 +416,1 @@\n-                    case ClassFile.LLOAD :\n+                    case LLOAD :\n@@ -420,5 +419,5 @@\n-                    case ClassFile.LLOAD_0 :\n-                    case ClassFile.LLOAD_1 :\n-                    case ClassFile.LLOAD_2 :\n-                    case ClassFile.LLOAD_3 :\n-                        index = opcode - ClassFile.LLOAD_0;\n+                    case LLOAD_0 :\n+                    case LLOAD_1 :\n+                    case LLOAD_2 :\n+                    case LLOAD_3 :\n+                        index = opcode - LLOAD_0;\n@@ -427,1 +426,1 @@\n-                    case ClassFile.FLOAD :\n+                    case FLOAD :\n@@ -430,5 +429,5 @@\n-                    case ClassFile.FLOAD_0 :\n-                    case ClassFile.FLOAD_1 :\n-                    case ClassFile.FLOAD_2 :\n-                    case ClassFile.FLOAD_3 :\n-                        index = opcode - ClassFile.FLOAD_0;\n+                    case FLOAD_0 :\n+                    case FLOAD_1 :\n+                    case FLOAD_2 :\n+                    case FLOAD_3 :\n+                        index = opcode - FLOAD_0;\n@@ -437,1 +436,1 @@\n-                    case ClassFile.DLOAD :\n+                    case DLOAD :\n@@ -440,5 +439,5 @@\n-                    case ClassFile.DLOAD_0 :\n-                    case ClassFile.DLOAD_1 :\n-                    case ClassFile.DLOAD_2 :\n-                    case ClassFile.DLOAD_3 :\n-                        index = opcode - ClassFile.DLOAD_0;\n+                    case DLOAD_0 :\n+                    case DLOAD_1 :\n+                    case DLOAD_2 :\n+                    case DLOAD_3 :\n+                        index = opcode - DLOAD_0;\n@@ -447,1 +446,1 @@\n-                    case ClassFile.ALOAD :\n+                    case ALOAD :\n@@ -450,5 +449,5 @@\n-                    case ClassFile.ALOAD_0 :\n-                    case ClassFile.ALOAD_1 :\n-                    case ClassFile.ALOAD_2 :\n-                    case ClassFile.ALOAD_3 :\n-                        index = opcode - ClassFile.ALOAD_0;\n+                    case ALOAD_0 :\n+                    case ALOAD_1 :\n+                    case ALOAD_2 :\n+                    case ALOAD_3 :\n+                        index = opcode - ALOAD_0;\n@@ -457,1 +456,1 @@\n-                    case ClassFile.IALOAD :\n+                    case IALOAD :\n@@ -468,1 +467,1 @@\n-                    case ClassFile.BALOAD :\n+                    case BALOAD :\n@@ -479,1 +478,1 @@\n-                    case ClassFile.CALOAD :\n+                    case CALOAD :\n@@ -490,1 +489,1 @@\n-                    case ClassFile.SALOAD :\n+                    case SALOAD :\n@@ -501,1 +500,1 @@\n-                    case ClassFile.LALOAD :\n+                    case LALOAD :\n@@ -513,1 +512,1 @@\n-                    case ClassFile.FALOAD :\n+                    case FALOAD :\n@@ -524,1 +523,1 @@\n-                    case ClassFile.DALOAD :\n+                    case DALOAD :\n@@ -536,1 +535,1 @@\n-                    case ClassFile.AALOAD : {\n+                    case AALOAD : {\n@@ -554,1 +553,1 @@\n-                    case ClassFile.ISTORE :\n+                    case ISTORE :\n@@ -557,5 +556,5 @@\n-                    case ClassFile.ISTORE_0 :\n-                    case ClassFile.ISTORE_1 :\n-                    case ClassFile.ISTORE_2 :\n-                    case ClassFile.ISTORE_3 :\n-                        index = opcode - ClassFile.ISTORE_0;\n+                    case ISTORE_0 :\n+                    case ISTORE_1 :\n+                    case ISTORE_2 :\n+                    case ISTORE_3 :\n+                        index = opcode - ISTORE_0;\n@@ -564,1 +563,1 @@\n-                    case ClassFile.LSTORE :\n+                    case LSTORE :\n@@ -567,5 +566,5 @@\n-                    case ClassFile.LSTORE_0 :\n-                    case ClassFile.LSTORE_1 :\n-                    case ClassFile.LSTORE_2 :\n-                    case ClassFile.LSTORE_3 :\n-                        index = opcode - ClassFile.LSTORE_0;\n+                    case LSTORE_0 :\n+                    case LSTORE_1 :\n+                    case LSTORE_2 :\n+                    case LSTORE_3 :\n+                        index = opcode - LSTORE_0;\n@@ -574,1 +573,1 @@\n-                    case ClassFile.FSTORE :\n+                    case FSTORE :\n@@ -577,5 +576,5 @@\n-                    case ClassFile.FSTORE_0 :\n-                    case ClassFile.FSTORE_1 :\n-                    case ClassFile.FSTORE_2 :\n-                    case ClassFile.FSTORE_3 :\n-                        index = opcode - ClassFile.FSTORE_0;\n+                    case FSTORE_0 :\n+                    case FSTORE_1 :\n+                    case FSTORE_2 :\n+                    case FSTORE_3 :\n+                        index = opcode - FSTORE_0;\n@@ -584,1 +583,1 @@\n-                    case ClassFile.DSTORE :\n+                    case DSTORE :\n@@ -587,5 +586,5 @@\n-                    case ClassFile.DSTORE_0 :\n-                    case ClassFile.DSTORE_1 :\n-                    case ClassFile.DSTORE_2 :\n-                    case ClassFile.DSTORE_3 :\n-                        index = opcode - ClassFile.DSTORE_0;\n+                    case DSTORE_0 :\n+                    case DSTORE_1 :\n+                    case DSTORE_2 :\n+                    case DSTORE_3 :\n+                        index = opcode - DSTORE_0;\n@@ -594,1 +593,1 @@\n-                    case ClassFile.ASTORE :\n+                    case ASTORE :\n@@ -597,5 +596,5 @@\n-                    case ClassFile.ASTORE_0 :\n-                    case ClassFile.ASTORE_1 :\n-                    case ClassFile.ASTORE_2 :\n-                    case ClassFile.ASTORE_3 :\n-                        index = opcode - ClassFile.ASTORE_0;\n+                    case ASTORE_0 :\n+                    case ASTORE_1 :\n+                    case ASTORE_2 :\n+                    case ASTORE_3 :\n+                        index = opcode - ASTORE_0;\n@@ -604,1 +603,1 @@\n-                    case ClassFile.IASTORE :\n+                    case IASTORE :\n@@ -615,1 +614,1 @@\n-                    case ClassFile.BASTORE :\n+                    case BASTORE :\n@@ -626,1 +625,1 @@\n-                    case ClassFile.CASTORE :\n+                    case CASTORE :\n@@ -637,1 +636,1 @@\n-                    case ClassFile.SASTORE :\n+                    case SASTORE :\n@@ -648,1 +647,1 @@\n-                    case ClassFile.LASTORE :\n+                    case LASTORE :\n@@ -660,1 +659,1 @@\n-                    case ClassFile.FASTORE :\n+                    case FASTORE :\n@@ -671,1 +670,1 @@\n-                    case ClassFile.DASTORE :\n+                    case DASTORE :\n@@ -683,1 +682,1 @@\n-                    case ClassFile.AASTORE :\n+                    case AASTORE :\n@@ -695,1 +694,1 @@\n-                    case ClassFile.POP :\n+                    case POP :\n@@ -699,1 +698,1 @@\n-                    case ClassFile.POP2 :\n+                    case POP2 :\n@@ -711,1 +710,1 @@\n-                    case ClassFile.DUP :\n+                    case DUP :\n@@ -717,1 +716,1 @@\n-                    case ClassFile.DUP_X1 :\n+                    case DUP_X1 :\n@@ -726,1 +725,1 @@\n-                    case ClassFile.DUP_X2 :\n+                    case DUP_X2 :\n@@ -747,1 +746,1 @@\n-                    case ClassFile.DUP2 :\n+                    case DUP2 :\n@@ -763,1 +762,1 @@\n-                    case ClassFile.DUP2_X1 :\n+                    case DUP2_X1 :\n@@ -785,1 +784,1 @@\n-                    case ClassFile.DUP2_X2 :\n+                    case DUP2_X2 :\n@@ -814,1 +813,1 @@\n-                    case ClassFile.SWAP :\n+                    case SWAP :\n@@ -822,11 +821,11 @@\n-                    case ClassFile.IADD :\n-                    case ClassFile.ISUB :\n-                    case ClassFile.IMUL :\n-                    case ClassFile.IDIV :\n-                    case ClassFile.IREM :\n-                    case ClassFile.ISHL :\n-                    case ClassFile.ISHR :\n-                    case ClassFile.IUSHR :\n-                    case ClassFile.IOR :\n-                    case ClassFile.IXOR :\n-                    case ClassFile.IAND :\n+                    case IADD :\n+                    case ISUB :\n+                    case IMUL :\n+                    case IDIV :\n+                    case IREM :\n+                    case ISHL :\n+                    case ISHR :\n+                    case IUSHR :\n+                    case IOR :\n+                    case IXOR :\n+                    case IAND :\n@@ -836,1 +835,1 @@\n-                    case ClassFile.INEG :\n+                    case INEG :\n@@ -842,8 +841,8 @@\n-                    case ClassFile.LADD :\n-                    case ClassFile.LSUB :\n-                    case ClassFile.LMUL :\n-                    case ClassFile.LDIV :\n-                    case ClassFile.LREM :\n-                    case ClassFile.LAND :\n-                    case ClassFile.LOR :\n-                    case ClassFile.LXOR :\n+                    case LADD :\n+                    case LSUB :\n+                    case LMUL :\n+                    case LDIV :\n+                    case LREM :\n+                    case LAND :\n+                    case LOR :\n+                    case LXOR :\n@@ -854,1 +853,1 @@\n-                    case ClassFile.LNEG :\n+                    case LNEG :\n@@ -862,3 +861,3 @@\n-                    case ClassFile.LSHL :\n-                    case ClassFile.LSHR :\n-                    case ClassFile.LUSHR :\n+                    case LSHL :\n+                    case LSHR :\n+                    case LUSHR :\n@@ -874,5 +873,5 @@\n-                    case ClassFile.FADD :\n-                    case ClassFile.FSUB :\n-                    case ClassFile.FMUL :\n-                    case ClassFile.FDIV :\n-                    case ClassFile.FREM :\n+                    case FADD :\n+                    case FSUB :\n+                    case FMUL :\n+                    case FDIV :\n+                    case FREM :\n@@ -882,1 +881,1 @@\n-                    case ClassFile.FNEG :\n+                    case FNEG :\n@@ -888,5 +887,5 @@\n-                    case ClassFile.DADD :\n-                    case ClassFile.DSUB :\n-                    case ClassFile.DMUL :\n-                    case ClassFile.DDIV :\n-                    case ClassFile.DREM :\n+                    case DADD :\n+                    case DSUB :\n+                    case DMUL :\n+                    case DDIV :\n+                    case DREM :\n@@ -897,1 +896,1 @@\n-                    case ClassFile.DNEG :\n+                    case DNEG :\n@@ -905,1 +904,1 @@\n-                                case ClassFile.IINC :\n+                                case IINC :\n@@ -908,1 +907,1 @@\n-                                case ClassFile.I2L :\n+                                case I2L :\n@@ -915,1 +914,1 @@\n-                             case ClassFile.L2I :\n+                             case L2I :\n@@ -922,1 +921,1 @@\n-                                case ClassFile.I2F :\n+                                case I2F :\n@@ -928,1 +927,1 @@\n-                    case ClassFile.I2D :\n+                    case I2D :\n@@ -935,1 +934,1 @@\n-                    case ClassFile.L2F :\n+                    case L2F :\n@@ -942,1 +941,1 @@\n-                    case ClassFile.L2D :\n+                    case L2D :\n@@ -950,1 +949,1 @@\n-                    case ClassFile.F2I :\n+                    case F2I :\n@@ -956,1 +955,1 @@\n-                    case ClassFile.F2L :\n+                    case F2L :\n@@ -963,1 +962,1 @@\n-                    case ClassFile.F2D :\n+                    case F2D :\n@@ -970,1 +969,1 @@\n-                    case ClassFile.D2I :\n+                    case D2I :\n@@ -977,1 +976,1 @@\n-                    case ClassFile.D2L :\n+                    case D2L :\n@@ -985,1 +984,1 @@\n-                    case ClassFile.D2F :\n+                    case D2F :\n@@ -992,3 +991,3 @@\n-                    case ClassFile.I2B :\n-                    case ClassFile.I2C :\n-                    case ClassFile.I2S :\n+                    case I2B :\n+                    case I2C :\n+                    case I2S :\n@@ -1000,1 +999,1 @@\n-                    case ClassFile.LCMP :\n+                    case LCMP :\n@@ -1010,2 +1009,2 @@\n-                    case ClassFile.FCMPL :\n-                    case ClassFile.FCMPG :\n+                    case FCMPL :\n+                    case FCMPG :\n@@ -1019,2 +1018,2 @@\n-                    case ClassFile.DCMPL :\n-                    case ClassFile.DCMPG :\n+                    case DCMPL :\n+                    case DCMPG :\n@@ -1030,6 +1029,6 @@\n-                    case ClassFile.IF_ICMPEQ:\n-                    case ClassFile.IF_ICMPNE:\n-                    case ClassFile.IF_ICMPLT:\n-                    case ClassFile.IF_ICMPGE:\n-                    case ClassFile.IF_ICMPGT:\n-                    case ClassFile.IF_ICMPLE:\n+                    case IF_ICMPEQ:\n+                    case IF_ICMPNE:\n+                    case IF_ICMPLT:\n+                    case IF_ICMPGE:\n+                    case IF_ICMPGT:\n+                    case IF_ICMPLE:\n@@ -1039,6 +1038,6 @@\n-                    case ClassFile.IFEQ:\n-                    case ClassFile.IFNE:\n-                    case ClassFile.IFLT:\n-                    case ClassFile.IFGE:\n-                    case ClassFile.IFGT:\n-                    case ClassFile.IFLE:\n+                    case IFEQ:\n+                    case IFNE:\n+                    case IFLT:\n+                    case IFGE:\n+                    case IFGT:\n+                    case IFLE:\n@@ -1051,2 +1050,2 @@\n-                    case ClassFile.IF_ACMPEQ :\n-                    case ClassFile.IF_ACMPNE :\n+                    case IF_ACMPEQ :\n+                    case IF_ACMPNE :\n@@ -1056,2 +1055,2 @@\n-                    case ClassFile.IFNULL :\n-                    case ClassFile.IFNONNULL :\n+                    case IFNULL :\n+                    case IFNONNULL :\n@@ -1064,1 +1063,1 @@\n-                    case ClassFile.GOTO :\n+                    case GOTO :\n@@ -1069,1 +1068,1 @@\n-                    case ClassFile.GOTO_W :\n+                    case GOTO_W :\n@@ -1074,2 +1073,2 @@\n-                    case ClassFile.TABLESWITCH :\n-                    case ClassFile.LOOKUPSWITCH :\n+                    case TABLESWITCH :\n+                    case LOOKUPSWITCH :\n@@ -1080,1 +1079,1 @@\n-                    case ClassFile.IRETURN :\n+                    case IRETURN :\n@@ -1086,1 +1085,1 @@\n-                    case ClassFile.LRETURN :\n+                    case LRETURN :\n@@ -1094,1 +1093,1 @@\n-                    case ClassFile.FRETURN :\n+                    case FRETURN :\n@@ -1100,1 +1099,1 @@\n-                    case ClassFile.DRETURN :\n+                    case DRETURN :\n@@ -1108,1 +1107,1 @@\n-                    case ClassFile.ARETURN :\n+                    case ARETURN :\n@@ -1114,1 +1113,1 @@\n-                    case ClassFile.RETURN:\n+                    case RETURN:\n@@ -1123,2 +1122,2 @@\n-                    case ClassFile.GETSTATIC :\n-                    case ClassFile.PUTSTATIC :\n+                    case GETSTATIC :\n+                    case PUTSTATIC :\n@@ -1127,2 +1126,2 @@\n-                    case ClassFile.GETFIELD :\n-                    case ClassFile.PUTFIELD :\n+                    case GETFIELD :\n+                    case PUTFIELD :\n@@ -1131,3 +1130,3 @@\n-                    case ClassFile.INVOKEVIRTUAL :\n-                    case ClassFile.INVOKESPECIAL :\n-                    case ClassFile.INVOKESTATIC :\n+                    case INVOKEVIRTUAL :\n+                    case INVOKESPECIAL :\n+                    case INVOKESTATIC :\n@@ -1136,2 +1135,2 @@\n-                    case ClassFile.INVOKEINTERFACE :\n-                    case ClassFile.INVOKEDYNAMIC :\n+                    case INVOKEINTERFACE :\n+                    case INVOKEDYNAMIC :\n@@ -1140,1 +1139,1 @@\n-                    case ClassFile.NEW :\n+                    case NEW :\n@@ -1153,1 +1152,1 @@\n-                    case ClassFile.NEWARRAY :\n+                    case NEWARRAY :\n@@ -1159,1 +1158,1 @@\n-                    case ClassFile.ANEWARRAY :\n+                    case ANEWARRAY :\n@@ -1162,1 +1161,1 @@\n-                    case ClassFile.ARRAYLENGTH :\n+                    case ARRAYLENGTH :\n@@ -1171,1 +1170,1 @@\n-                    case ClassFile.CHECKCAST :\n+                    case CHECKCAST :\n@@ -1181,1 +1180,1 @@\n-                    case ClassFile.INSTANCEOF : {\n+                    case INSTANCEOF : {\n@@ -1189,2 +1188,2 @@\n-                    case ClassFile.MONITORENTER :\n-                    case ClassFile.MONITOREXIT :\n+                    case MONITORENTER :\n+                    case MONITOREXIT :\n@@ -1194,1 +1193,1 @@\n-                    case ClassFile.MULTIANEWARRAY :\n+                    case MULTIANEWARRAY :\n@@ -1214,1 +1213,1 @@\n-                    case ClassFile.ATHROW :\n+                    case ATHROW :\n@@ -1238,1 +1237,1 @@\n-                if (bcs.opcode() == ClassFile.NEW) {\n+                if (bcs.opcode() == NEW) {\n@@ -1371,1 +1370,1 @@\n-        if (opcode == ClassFile.LDC || opcode == ClassFile.LDC_W) {\n+        if (opcode == LDC || opcode == LDC_W) {\n@@ -1378,1 +1377,1 @@\n-            if (opcode != ClassFile.LDC2_W) verifyError(\"must be ldc2_w\");\n+            if (opcode != LDC2_W) verifyError(\"must be ldc2_w\");\n@@ -1398,1 +1397,1 @@\n-                int opcode_n = (opcode == ClassFile.LDC2_W ? 2 : 1);\n+                int opcode_n = (opcode == LDC2_W ? 2 : 1);\n@@ -1427,1 +1426,1 @@\n-        if (bcs.opcode() == ClassFile.TABLESWITCH) {\n+        if (bcs.opcode() == TABLESWITCH) {\n@@ -1480,1 +1479,1 @@\n-            case ClassFile.GETSTATIC ->  {\n+            case GETSTATIC ->  {\n@@ -1485,1 +1484,1 @@\n-            case ClassFile.PUTSTATIC ->  {\n+            case PUTSTATIC ->  {\n@@ -1490,1 +1489,1 @@\n-            case ClassFile.GETFIELD ->  {\n+            case GETFIELD ->  {\n@@ -1497,1 +1496,1 @@\n-            case ClassFile.PUTFIELD ->  {\n+            case PUTFIELD ->  {\n@@ -1551,1 +1550,1 @@\n-            if (new_offset > (code_length - 3) || (_method.codeArray()[new_offset] & 0xff) != ClassFile.NEW) {\n+            if (new_offset > (code_length - 3) || (_method.codeArray()[new_offset] & 0xff) != NEW) {\n@@ -1588,1 +1587,1 @@\n-            case ClassFile.INVOKEINTERFACE:\n+            case INVOKEINTERFACE:\n@@ -1591,1 +1590,1 @@\n-            case ClassFile.INVOKEDYNAMIC:\n+            case INVOKEDYNAMIC:\n@@ -1594,2 +1593,2 @@\n-            case ClassFile.INVOKESPECIAL:\n-            case ClassFile.INVOKESTATIC:\n+            case INVOKESPECIAL:\n+            case INVOKESTATIC:\n@@ -1608,1 +1607,1 @@\n-        if (opcode == ClassFile.INVOKEDYNAMIC) {\n+        if (opcode == INVOKEDYNAMIC) {\n@@ -1622,1 +1621,1 @@\n-        if (opcode == ClassFile.INVOKEINTERFACE) {\n+        if (opcode == INVOKEINTERFACE) {\n@@ -1630,1 +1629,1 @@\n-        if (opcode == ClassFile.INVOKEDYNAMIC) {\n+        if (opcode == INVOKEDYNAMIC) {\n@@ -1636,1 +1635,1 @@\n-            if (opcode != ClassFile.INVOKESPECIAL ||\n+            if (opcode != INVOKESPECIAL ||\n@@ -1640,1 +1639,1 @@\n-        } else if (opcode == ClassFile.INVOKESPECIAL\n+        } else if (opcode == INVOKESPECIAL\n@@ -1658,2 +1657,2 @@\n-        if (opcode != ClassFile.INVOKESTATIC &&\n-            opcode != ClassFile.INVOKEDYNAMIC) {\n+        if (opcode != INVOKESTATIC &&\n+            opcode != INVOKEDYNAMIC) {\n@@ -1665,1 +1664,1 @@\n-                    case ClassFile.INVOKESPECIAL ->\n+                    case INVOKESPECIAL ->\n@@ -1667,1 +1666,1 @@\n-                    case ClassFile.INVOKEVIRTUAL -> {\n+                    case INVOKEVIRTUAL -> {\n@@ -1675,1 +1674,1 @@\n-                        if (opcode != ClassFile.INVOKEINTERFACE)\n+                        if (opcode != INVOKEINTERFACE)\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/VerifierImpl.java","additions":239,"deletions":240,"binary":false,"changes":479,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.lang.classfile.ClassFile;\n@@ -161,4 +162,0 @@\n-    private static int classFileMajorVersion;\n-    private static int classFileMinorVersion;\n-    private static final int PREVIEW_MINOR_VERSION = 65535;\n-\n@@ -178,1 +175,1 @@\n-        if (major < 45 || major > classFileMajorVersion) return false;\n+        if (major < ClassFile.JAVA_1_VERSION || major > ClassFile.latestMajorVersion()) return false;\n@@ -180,1 +177,1 @@\n-        if (major < 56) return true;\n+        if (major < ClassFile.JAVA_12_VERSION) return true;\n@@ -182,1 +179,1 @@\n-        return minor == 0 || minor == PREVIEW_MINOR_VERSION;\n+        return minor == 0 || (minor == ClassFile.PREVIEW_MINOR_VERSION && major == ClassFile.latestMajorVersion());\n@@ -192,6 +189,2 @@\n-        if (major < 53 || major > classFileMajorVersion) return false;\n-        \/\/ for major version is between 45 and 55 inclusive, the minor version may be any value\n-        if (major < 56) return true;\n-        \/\/ otherwise, the minor version must be 0 or 65535\n-        \/\/ preview features do not apply to module-info.class but JVMS allows it\n-        return minor == 0 || minor == PREVIEW_MINOR_VERSION;\n+        if (major < ClassFile.JAVA_9_VERSION) return false;\n+        return isSupportedClassFileVersion(major, minor);\n@@ -274,9 +267,0 @@\n-\n-        s = props.get(\"java.class.version\");\n-        int index = s.indexOf('.');\n-        try {\n-            classFileMajorVersion = Integer.parseInt(s.substring(0, index));\n-            classFileMinorVersion = Integer.parseInt(s.substring(index + 1));\n-        } catch (NumberFormatException e) {\n-            throw new InternalError(e);\n-        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/VM.java","additions":6,"deletions":22,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-     * issued after October 31, 2024. If enabled, this policy is currently\n+     * issued after November 11, 2024. If enabled, this policy is currently\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/CADistrustPolicy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,2 +91,2 @@\n-    private static final LocalDate OCTOBER_31_2024 =\n-        LocalDate.of(2024, Month.OCTOBER, 31);\n+    private static final LocalDate NOVEMBER_11_2024 =\n+        LocalDate.of(2024, Month.NOVEMBER, 11);\n@@ -114,2 +114,2 @@\n-            \/\/ reject if certificate is issued after October 31, 2024\n-            checkNotBefore(ldNotBefore, OCTOBER_31_2024, anchor);\n+            \/\/ reject if certificate is issued after November 11, 2024\n+            checkNotBefore(ldNotBefore, NOVEMBER_11_2024, anchor);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/validator\/EntrustTLSPolicy.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1361,1 +1361,1 @@\n-#   an Entrust root CA and issued after October 31, 2024.\n+#   an Entrust root CA and issued after November 11, 2024.\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,21 @@\n+Owner: CN=SSL.com TLS ECC Root CA 2022, O=SSL Corporation, C=US\n+Issuer: CN=SSL.com TLS ECC Root CA 2022, O=SSL Corporation, C=US\n+Serial number: 1403f5abfb378b17405be243b2a5d1c4\n+Valid from: Thu Aug 25 16:33:48 GMT 2022 until: Sun Aug 19 16:33:47 GMT 2046\n+Signature algorithm name: SHA384withECDSA\n+Subject Public Key Algorithm: 384-bit EC (secp384r1) key\n+Version: 3\n+-----BEGIN CERTIFICATE-----\n+MIICOjCCAcCgAwIBAgIQFAP1q\/s3ixdAW+JDsqXRxDAKBggqhkjOPQQDAzBOMQsw\n+CQYDVQQGEwJVUzEYMBYGA1UECgwPU1NMIENvcnBvcmF0aW9uMSUwIwYDVQQDDBxT\n+U0wuY29tIFRMUyBFQ0MgUm9vdCBDQSAyMDIyMB4XDTIyMDgyNTE2MzM0OFoXDTQ2\n+MDgxOTE2MzM0N1owTjELMAkGA1UEBhMCVVMxGDAWBgNVBAoMD1NTTCBDb3Jwb3Jh\n+dGlvbjElMCMGA1UEAwwcU1NMLmNvbSBUTFMgRUNDIFJvb3QgQ0EgMjAyMjB2MBAG\n+ByqGSM49AgEGBSuBBAAiA2IABEUpNXP6wrgjzhR9qLFNoFs27iosU8NgCTWyJGYm\n+acCzldZdkkAZDsalE3D07xJRKF3nzL35PIXBz5SQySvOkkJYWWf9lCcQZIxPBLFN\n+SeR7T5v15wj4A4j3p8OSSxlUgaNjMGEwDwYDVR0TAQH\/BAUwAwEB\/zAfBgNVHSME\n+GDAWgBSJjy+j6CugFFR781a4Jl9nOAuc0DAdBgNVHQ4EFgQUiY8vo+groBRUe\/NW\n+uCZfZzgLnNAwDgYDVR0PAQH\/BAQDAgGGMAoGCCqGSM49BAMDA2gAMGUCMFXjIlbp\n+15IkWE8elDIPDAI2wv2sdDJO4fscgIijzPvX6yv\/N33w7deedWo1dlJF4AIxAMeN\n+b0Igj762TVntd00pxCAgRWSGOlDGxK0tk\/UYfXLtqc\/ErFc2KAhl3zx5Zn6g6g==\n+-----END CERTIFICATE-----\n","filename":"src\/java.base\/share\/data\/cacerts\/ssltlsrootecc2022","additions":21,"deletions":0,"binary":false,"changes":21,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+Owner: CN=SSL.com TLS RSA Root CA 2022, O=SSL Corporation, C=US\n+Issuer: CN=SSL.com TLS RSA Root CA 2022, O=SSL Corporation, C=US\n+Serial number: 6fbedaad73bd0840e28b4dbed4f75b91\n+Valid from: Thu Aug 25 16:34:22 GMT 2022 until: Sun Aug 19 16:34:21 GMT 2046\n+Signature algorithm name: SHA256withRSA\n+Subject Public Key Algorithm: 4096-bit RSA key\n+Version: 3\n+-----BEGIN CERTIFICATE-----\n+MIIFiTCCA3GgAwIBAgIQb77arXO9CEDii02+1PdbkTANBgkqhkiG9w0BAQsFADBO\n+MQswCQYDVQQGEwJVUzEYMBYGA1UECgwPU1NMIENvcnBvcmF0aW9uMSUwIwYDVQQD\n+DBxTU0wuY29tIFRMUyBSU0EgUm9vdCBDQSAyMDIyMB4XDTIyMDgyNTE2MzQyMloX\n+DTQ2MDgxOTE2MzQyMVowTjELMAkGA1UEBhMCVVMxGDAWBgNVBAoMD1NTTCBDb3Jw\n+b3JhdGlvbjElMCMGA1UEAwwcU1NMLmNvbSBUTFMgUlNBIFJvb3QgQ0EgMjAyMjCC\n+AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANCkCXJPQIgSYT41I57u9nTP\n+L3tYPc48DRAokC+X94xI2KDYJbFMsBFMF3NQ0CJKY7uB0ylu1bUJPiYYf7ISf5OY\n+t6\/wNr\/y7hienDtSxUcZXXTzZGbVXcdotL8bHAajvI9AI7YexoS9UcQbOcGV0ins\n+S657Lb85\/bRi3pZ7QcacoOAGcvvwB5cJOYF0r\/c0WRFXCsJbwST0MXMwgsadugL3\n+PnxEX4MN8\/HdIGkWCVDi1FW24IBydm5MR7d1VVm0U3TZlMZBrViKMWYPHqIbKUBO\n+L9975hYsLfy\/7PO0+r4Y9ptJ1O4Fbtk085zx7AGL0SDGD6C1vBdOSHtRwvzpXGk3\n+R2azaPgVKPC506QVzFpPulJwoxJF3ca6TvvC0PeoUidtbnm1jPx7jMEWTO6Af77w\n+dr5BUxIzrlo4QqvXDz5BjXYHMtWrifZOZ9mxQnUjbvPNQrL8VfVThxc7wDNY8VLS\n++YCk8OjwO4s4zKTGkH8PnP2L0aPP2oOnaclQNtVcBdIKQXTbYxE3waWglksejBYS\n+d66UNHsef8JmAOSqg+qKkK3ONkRN0VHpvB\/zagX9wHQfJRlAUW7qglFA35u5CCoG\n+AtUjHBPW6dvbxrB6y3snm\/vg1UYk7RBLY0ulBY+6uB0rpvqR4pJSvezrZ5dtmi2f\n+gTIFZzL7SAg\/2SW4BCUvAgMBAAGjYzBhMA8GA1UdEwEB\/wQFMAMBAf8wHwYDVR0j\n+BBgwFoAU+y437uOEeicuzRk1sTN8\/9REQrkwHQYDVR0OBBYEFPsuN+7jhHonLs0Z\n+NbEzfP\/UREK5MA4GA1UdDwEB\/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOCAgEAjYlt\n+hEUY8U+zoO9opMAdrDC8Z2awms22qyIZZtM7QbUQnRC6cm4pJCAcAZli05bg4vsM\n+QtfhWsSWTVTNj8pDU\/0quOr4ZcoBwq1gaAafORpR2eCNJvkLTqVTJXojpBzOCBvf\n+R4iyrT7gJ4eLSYwfqUdYe5byiB0YrrPRpgqU+tvT5TgKa3kSM\/tKWTcWQA673vWJ\n+DPFs0\/dRa1419dvAJuoSc06pkZCmF8NsLzjUo3KUQyxi4U5cMj29TH0ZR6LDSeeW\n+P4+a0zvkEdiLA9z2tmBVGKaBUfPhqBVq6+AL8BQx1rmMRTqoENjwuSfr98t67wVy\n+lrXEj5ZzxOhWc5y8aVFjvO9nHEMaX3cZHxj4HCUp+UmZKbaSPaKDN7EgkaibMOlq\n+bLQjk2UEqxHzDh1TJElTHaE\/nUiSEeJ9DU\/1172iWD54nR4fK\/4huxoTtrEoZP2w\n+AgDHbICivRZQIA9ygV\/MlP+7mea6kMvq+cYMwq7FGc4zoWtcu358NFcXrfA\/rs3q\n+r5nsLFR+jM4uElZI7xc7P0peYNLcdDa8pUNjyw9bowJWCZ4kLOGGgYz+qxcs+sji\n+Mho6\/4UIyYOf8kpIEFR3N+2ivEC+5BB09+Rbu7nzifmPQdjH5FCQNYA+HLhNkNPU\n+98OwoX6EyneSMSy4kLGCenROmxMmtNVQZlR4rmA=\n+-----END CERTIFICATE-----\n","filename":"src\/java.base\/share\/data\/cacerts\/ssltlsrootrsa2022","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -246,7 +246,1 @@\n-    char *emsg;\n-\n-    \/*\n-     * TODO: its safer to use strerror_r but is not available on\n-     * Solaris 8. Until then....\n-     *\/\n-    emsg = strerror(errno);\n+    char *emsg = strerror(errno);\n","filename":"src\/java.base\/unix\/native\/libjli\/java_md_common.c","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -53,0 +53,5 @@\n+ * @apiNote\n+ * In the reference implementation, handling {@linkplain ErrorType\n+ * error types} generally does not cause an {@code\n+ * IllegalArgumentException} from the methods in this interface.\n+ *\n@@ -201,0 +206,1 @@\n+     *\n@@ -202,1 +208,2 @@\n-     *          unboxing conversion\n+     *         unboxing conversion. Only types for the wrapper classes\n+     *         have an unboxing conversion.\n@@ -271,1 +278,4 @@\n-     * @throws IllegalArgumentException if bounds are not valid\n+     *\n+     * @throws IllegalArgumentException if bounds are not valid. Invalid bounds\n+     * include all types that are not {@linkplain ReferenceType\n+     * reference types}.\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Types.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -274,1 +274,0 @@\n-    int rc;\n@@ -278,1 +277,4 @@\n-    rc = pthread_create(&thr, &attr, SplashScreenThread, (void *) splash);\n+    rslt = pthread_create(&thr, &attr, SplashScreenThread, (void *) splash);\n+    if (rslt != 0) {\n+        fprintf(stderr, \"Could not create SplashScreen thread, error number:%d\\n\", rslt);\n+    }\n","filename":"src\/java.desktop\/macosx\/native\/libsplashscreen\/splashscreen_sys.m","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,0 +26,6 @@\n+---------------------------------\n+The below applies to the following file(s):\n+giflib\/openbsd-reallocarray.c\n+\n+Copyright (C) 2008 Otto Moerbeek <otto@drijf.net>\n+SPDX-License-Identifier: MIT\n@@ -27,1 +33,0 @@\n-tree\/README\n@@ -41,9 +46,0 @@\n-There have been many other contributors; see the attributions in the\n-version-control history to learn more.\n-\n-\n-tree\/openbsd-reallocarray.c\n-\n-Copyright (C) 2008 Otto Moerbeek <otto@drijf.net>\n-SPDX-License-Identifier: MIT\n-\n","filename":"src\/java.desktop\/share\/legal\/giflib.md","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -744,1 +744,4 @@\n-    pthread_create(&thr, &attr, SplashScreenThread, (void *) splash);\n+    rslt = pthread_create(&thr, &attr, SplashScreenThread, (void *) splash);\n+    if (rslt != 0) {\n+        fprintf(stderr, \"Could not create SplashScreen thread, error number:%d\\n\", rslt);\n+    }\n","filename":"src\/java.desktop\/unix\/native\/libsplashscreen\/splashscreen_sys.c","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2355,0 +2355,6 @@\n+        \/**\n+         * A supertype_index value of 65535 specifies that the annotation appears on the superclass\n+         * in an extends clause of a class declaration, see JVMS 4.7.20.1\n+         *\/\n+        public static final int SUPERCLASS_INDEX = 65535;\n+\n@@ -2364,1 +2370,1 @@\n-            t.supertype_field = addTypeAnnotations(t.supertype_field, classExtends(65535));\n+            t.supertype_field = addTypeAnnotations(t.supertype_field, classExtends(SUPERCLASS_INDEX));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1470,1 +1470,1 @@\n-                    print(Convert.quote(String.valueOf((char)((Number)tree.value).intValue())));\n+                    print(Convert.quote((char)((Number)tree.value).intValue(), true));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/Pretty.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -363,2 +363,5 @@\n-section[id$=-description] :is(dl, ol, ul, p, div, blockquote, pre):last-child,\n-section[id$=-description] :is(dl, ol, ul):last-child > :is(li, dd):last-child {\n+\/* Compensate for non-collapsing margins between element description and summary tables *\/\n+div.horizontal-scroll > section[id$=-description] > :is(dl, ol, ul, p, div, blockquote, pre):last-child,\n+div.horizontal-scroll > section[id$=-description] > :last-child > :is(li, dd):last-child,\n+section.class-description > div.horizontal-scroll > :is(dl, ol, ul, p, div, blockquote, pre):last-child,\n+section.class-description > div.horizontal-scroll > :last-child > :is(li, dd):last-child {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/stylesheet.css","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -873,4 +873,6 @@\n-            for (ModuleSymbol msym : modules.allModules()) {\n-                PackageSymbol p = syms.getPackage(msym, pack);\n-                if (p != null && !p.members().isEmpty()) {\n-                    return msym;\n+            if (modules.modulesInitialized()) {\n+                for (ModuleSymbol msym : modules.allModules()) {\n+                    PackageSymbol p = syms.getPackage(msym, pack);\n+                    if (p != null && !p.members().isEmpty()) {\n+                        return msym;\n+                    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/ElementsTable.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import static java.lang.classfile.instruction.CharacterRange.*;\n@@ -147,1 +148,1 @@\n-                    if ((e.flags() & CRT_STATEMENT) != 0)\n+                    if ((e.flags() & FLAG_STATEMENT) != 0)\n@@ -149,1 +150,1 @@\n-                    if ((e.flags() & CRT_BLOCK) != 0)\n+                    if ((e.flags() & FLAG_BLOCK) != 0)\n@@ -151,1 +152,1 @@\n-                    if ((e.flags() & CRT_ASSIGNMENT) != 0)\n+                    if ((e.flags() & FLAG_ASSIGNMENT) != 0)\n@@ -153,1 +154,1 @@\n-                    if ((e.flags() & CRT_FLOW_CONTROLLER) != 0)\n+                    if ((e.flags() & FLAG_FLOW_CONTROLLER) != 0)\n@@ -155,1 +156,1 @@\n-                    if ((e.flags() & CRT_FLOW_TARGET) != 0)\n+                    if ((e.flags() & FLAG_FLOW_TARGET) != 0)\n@@ -157,1 +158,1 @@\n-                    if ((e.flags() & CRT_INVOKE) != 0)\n+                    if ((e.flags() & FLAG_INVOKE) != 0)\n@@ -159,1 +160,1 @@\n-                    if ((e.flags() & CRT_CREATE) != 0)\n+                    if ((e.flags() & FLAG_CREATE) != 0)\n@@ -161,1 +162,1 @@\n-                    if ((e.flags() & CRT_BRANCH_TRUE) != 0)\n+                    if ((e.flags() & FLAG_BRANCH_TRUE) != 0)\n@@ -163,1 +164,1 @@\n-                    if ((e.flags() & CRT_BRANCH_FALSE) != 0)\n+                    if ((e.flags() & FLAG_BRANCH_FALSE) != 0)\n@@ -708,7 +709,7 @@\n-            case ITEM_TOP -> \"top\";\n-            case ITEM_INTEGER -> \"int\";\n-            case ITEM_FLOAT -> \"float\";\n-            case ITEM_LONG -> \"long\";\n-            case ITEM_DOUBLE -> \"double\";\n-            case ITEM_NULL -> \"null\";\n-            case ITEM_UNINITIALIZED_THIS -> \"this\";\n+            case TOP -> \"top\";\n+            case INTEGER -> \"int\";\n+            case FLOAT -> \"float\";\n+            case LONG -> \"long\";\n+            case DOUBLE -> \"double\";\n+            case NULL -> \"null\";\n+            case UNINITIALIZED_THIS -> \"this\";\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/AttributeWriter.java","additions":17,"deletions":16,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -744,1 +744,1 @@\n-            case ClassFile.TAG_INTEGER: {\n+            case PoolEntry.TAG_INTEGER: {\n@@ -758,1 +758,1 @@\n-            case ClassFile.TAG_STRING:\n+            case PoolEntry.TAG_STRING:\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/ClassWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,2 @@\n-import static java.lang.classfile.ClassFile.*;\n+\n+import static java.lang.classfile.constantpool.PoolEntry.*;\n@@ -159,2 +160,2 @@\n-            case TAG_METHODHANDLE -> \"MethodHandle\";\n-            case TAG_METHODTYPE -> \"MethodType\";\n+            case TAG_METHOD_HANDLE -> \"MethodHandle\";\n+            case TAG_METHOD_TYPE -> \"MethodType\";\n@@ -162,4 +163,4 @@\n-            case TAG_INTERFACEMETHODREF -> \"InterfaceMethodref\";\n-            case TAG_INVOKEDYNAMIC -> \"InvokeDynamic\";\n-            case TAG_CONSTANTDYNAMIC -> \"Dynamic\";\n-            case TAG_NAMEANDTYPE -> \"NameAndType\";\n+            case TAG_INTERFACE_METHODREF -> \"InterfaceMethodref\";\n+            case TAG_INVOKE_DYNAMIC -> \"InvokeDynamic\";\n+            case TAG_DYNAMIC -> \"Dynamic\";\n+            case TAG_NAME_AND_TYPE -> \"NameAndType\";\n@@ -180,2 +181,2 @@\n-            case TAG_METHODHANDLE -> \"MethodHandle\";\n-            case TAG_METHODTYPE -> \"MethodType\";\n+            case TAG_METHOD_HANDLE -> \"MethodHandle\";\n+            case TAG_METHOD_TYPE -> \"MethodType\";\n@@ -183,4 +184,4 @@\n-            case TAG_INTERFACEMETHODREF -> \"InterfaceMethod\";\n-            case TAG_INVOKEDYNAMIC -> \"InvokeDynamic\";\n-            case TAG_CONSTANTDYNAMIC -> \"Dynamic\";\n-            case TAG_NAMEANDTYPE -> \"NameAndType\";\n+            case TAG_INTERFACE_METHODREF -> \"InterfaceMethod\";\n+            case TAG_INVOKE_DYNAMIC -> \"InvokeDynamic\";\n+            case TAG_DYNAMIC -> \"Dynamic\";\n+            case TAG_NAME_AND_TYPE -> \"NameAndType\";\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/ConstantWriter.java","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-                    case ITEM_TOP ->\n+                    case TOP ->\n@@ -128,1 +128,1 @@\n-                    case ITEM_INTEGER ->\n+                    case INTEGER ->\n@@ -131,1 +131,1 @@\n-                    case ITEM_FLOAT ->\n+                    case FLOAT ->\n@@ -134,1 +134,1 @@\n-                    case ITEM_LONG ->\n+                    case LONG ->\n@@ -137,1 +137,1 @@\n-                    case ITEM_DOUBLE ->\n+                    case DOUBLE ->\n@@ -140,1 +140,1 @@\n-                    case ITEM_NULL ->\n+                    case NULL ->\n@@ -143,1 +143,1 @@\n-                    case ITEM_UNINITIALIZED_THIS ->\n+                    case UNINITIALIZED_THIS ->\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/StackMapWriter.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+\n+import static java.lang.classfile.constantpool.PoolEntry.*;\n@@ -44,1 +46,1 @@\n-import static java.lang.classfile.ClassFile.*;\n+\n@@ -303,1 +305,1 @@\n-                     TAG_METHODTYPE,\n+                     TAG_METHOD_TYPE,\n@@ -306,1 +308,1 @@\n-                case TAG_METHODHANDLE -> offset += 4;\n+                case TAG_METHOD_HANDLE -> offset += 4;\n@@ -311,4 +313,4 @@\n-                     TAG_INTERFACEMETHODREF,\n-                     TAG_NAMEANDTYPE,\n-                     TAG_CONSTANTDYNAMIC,\n-                     TAG_INVOKEDYNAMIC -> offset += 5;\n+                     TAG_INTERFACE_METHODREF,\n+                     TAG_NAME_AND_TYPE,\n+                     TAG_DYNAMIC,\n+                     TAG_INVOKE_DYNAMIC -> offset += 5;\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/IncludeLocalesPlugin.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -54,0 +54,2 @@\n+import static java.lang.classfile.constantpool.PoolEntry.*;\n+\n@@ -217,1 +219,1 @@\n-                    case ClassFile.TAG_UTF8: {\n+                    case TAG_UTF8: {\n@@ -241,2 +243,2 @@\n-                    case ClassFile.TAG_LONG:\n-                    case ClassFile.TAG_DOUBLE:\n+                    case TAG_LONG:\n+                    case TAG_DOUBLE:\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/StringSharingPlugin.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -53,0 +53,2 @@\n+compiler\/cha\/TypeProfileFinalMethod.java 8341039 generic-all\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList-Xcomp.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,0 +177,1 @@\n+vmTestbase\/gc\/memory\/Nio\/Nio.java 8340728 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-    vm.libgraal.enabled \\\n+    vm.libgraal.jit \\\n","filename":"test\/hotspot\/jtreg\/TEST.ROOT","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -438,0 +438,1 @@\n+ -runtime\/cds\/appcds\/complexURI \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -182,1 +182,3 @@\n-                                                              \"-XX:NonNMethodCodeHeapSize=5M\",\n+                                                              \/\/ After fixing a round_down issue with large page sizes (JDK-8334564),\n+                                                              \/\/ 5M is a bit too small for NonNMethodCodeHeap\n+                                                              \"-XX:NonNMethodCodeHeapSize=6M\",\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckSegmentedCodeCache.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -150,1 +150,2 @@\n-                unsafe.copySwapMemory(null, mapAddr + pageSize, new byte[4000], 16, 2000, 2);\n+                int destOffset = Unsafe.ARRAY_BYTE_BASE_OFFSET;\n+                unsafe.copySwapMemory(null, mapAddr + pageSize, new byte[4000], destOffset, 2000, 2);\n","filename":"test\/hotspot\/jtreg\/runtime\/Unsafe\/InternalErrorTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,167 @@\n+\/* Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024 JetBrains s.r.o.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Verifies that CDS works with jar located in directories\n+ *          with names that need escaping\n+ * @bug 8339460\n+ * @requires vm.cds\n+ * @requires vm.cds.custom.loaders\n+ * @requires vm.flagless\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @compile mypackage\/Main.java mypackage\/Another.java\n+ * @run main\/othervm ComplexURITest\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.Platform;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+public class ComplexURITest {\n+    final static String moduleName = \"mymodule\";\n+\n+    public static void main(String[] args) throws Exception {\n+        System.setProperty(\"test.noclasspath\", \"true\");\n+        String jarFile = JarBuilder.build(moduleName, \"mypackage\/Main\", \"mypackage\/Another\");\n+\n+        Path subDir = Path.of(\".\", \"dir with space\");\n+        Files.createDirectory(subDir);\n+        Path newJarFilePath = subDir.resolve(moduleName + \".jar\");\n+        Files.move(Path.of(jarFile), newJarFilePath);\n+        jarFile = newJarFilePath.toString();\n+\n+        final String listFileName = \"test-classlist.txt\";\n+        final String staticArchiveName = \"test-static.jsa\";\n+        final String dynamicArchiveName = \"test-dynamic.jsa\";\n+\n+        \/\/ Verify static archive creation and use\n+        File fileList = new File(listFileName);\n+        delete(fileList.toPath());\n+        File staticArchive = new File(staticArchiveName);\n+        delete(staticArchive.toPath());\n+\n+        createClassList(jarFile, listFileName);\n+        if (!fileList.exists()) {\n+            throw new RuntimeException(\"No class list created at \" + fileList);\n+        }\n+\n+        createArchive(jarFile, listFileName, staticArchiveName);\n+        if (!staticArchive.exists()) {\n+            throw new RuntimeException(\"No shared classes archive created at \" + staticArchive);\n+        }\n+\n+        useArchive(jarFile, staticArchiveName);\n+\n+        \/\/ Verify dynamic archive creation and use\n+        File dynamicArchive = new File(dynamicArchiveName);\n+        delete(dynamicArchive.toPath());\n+\n+        createDynamicArchive(jarFile, dynamicArchiveName);\n+        if (!dynamicArchive.exists()) {\n+            throw new RuntimeException(\"No dynamic archive created at \" + dynamicArchive);\n+        }\n+\n+        testDynamicArchive(jarFile, dynamicArchiveName);\n+    }\n+\n+    private static void delete(Path path) throws Exception {\n+        if (Files.exists(path)) {\n+            if (Platform.isWindows()) {\n+                Files.setAttribute(path, \"dos:readonly\", false);\n+            }\n+            Files.delete(path);\n+        }\n+    }\n+\n+    private static void createClassList(String jarFile, String list) throws Exception {\n+        String[] launchArgs  = {\n+                \"-XX:DumpLoadedClassList=\" + list,\n+                \"--module-path\",\n+                jarFile,\n+                \"--module\",\n+                moduleName + \"\/mypackage.Main\"};\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(launchArgs);\n+        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"create-list\");\n+        output.shouldHaveExitValue(0);\n+    }\n+\n+    private static void createArchive(String jarFile, String list, String archive) throws Exception {\n+        String[] launchArgs  = {\n+                \"-Xshare:dump\",\n+                \"-XX:SharedClassListFile=\" + list,\n+                \"-XX:SharedArchiveFile=\" + archive,\n+                \"--module-path\",\n+                jarFile,\n+                \"--module\",\n+                moduleName + \"\/mypackage.Main\"};\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(launchArgs);\n+        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dump-archive\");\n+        output.shouldHaveExitValue(0);\n+    }\n+\n+    private static void useArchive(String jarFile, String archive) throws Exception {\n+        String[] launchArgs  = {\n+                \"-Xshare:on\",\n+                \"-XX:SharedArchiveFile=\" + archive,\n+                \"--module-path\",\n+                jarFile,\n+                \"--module\",\n+                moduleName + \"\/mypackage.Main\"};\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(launchArgs);\n+        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"use-archive\");\n+        output.shouldHaveExitValue(0);\n+    }\n+\n+    private static void createDynamicArchive(String jarFile, String archive) throws Exception {\n+        String[] launchArgs  = {\n+                \"-XX:ArchiveClassesAtExit=\" + archive,\n+                \"--module-path\",\n+                jarFile,\n+                \"--module\",\n+                moduleName + \"\/mypackage.Main\"};\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(launchArgs);\n+        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dynamic-archive\");\n+        output.shouldHaveExitValue(0);\n+    }\n+\n+    private static void testDynamicArchive(String jarFile, String archive) throws Exception {\n+        String[] launchArgs  = {\n+                \"-XX:SharedArchiveFile=\" + archive,\n+                \"-XX:+PrintSharedArchiveAndExit\",\n+                \"--module-path\",\n+                jarFile,\n+                \"--module\",\n+                moduleName + \"\/mypackage.Main\"};\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(launchArgs);\n+        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"dynamic-archive\");\n+        output.shouldHaveExitValue(0);\n+        output.shouldContain(\"archive is valid\");\n+        output.shouldContain(\": mypackage.Main app_loader\");\n+        output.shouldContain(\": mypackage.Another unregistered_loader\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/complexURI\/ComplexURITest.java","additions":167,"deletions":0,"binary":false,"changes":167,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+\/* Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024 JetBrains s.r.o.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package mypackage;\n+\n+public class Another {\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/complexURI\/mypackage\/Another.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/* Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024 JetBrains s.r.o.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package mypackage;\n+\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+\n+public class Main {\n+    public static void main(String[] args) throws Exception {\n+        URL url1 = Main.class.getProtectionDomain().getCodeSource().getLocation();\n+        System.out.println(\"Will load Another from \" + url1);\n+        ClassLoader cl = URLClassLoader.newInstance(new URL[] { url1 }, null);\n+        var anotherClass = cl.loadClass(\"mypackage.Another\");\n+        System.out.println(\"Class \" + anotherClass + \" loaded successfully\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/complexURI\/mypackage\/Main.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -566,0 +566,2 @@\n+java\/nio\/Buffer\/LimitDirectMemory.java                          8340728 generic-all\n+\n@@ -570,1 +572,1 @@\n-java\/nio\/channels\/DatagramChannel\/AdaptorMulticasting.java      8308807 aix-ppc64\n+java\/nio\/channels\/DatagramChannel\/AdaptorMulticasting.java      8308807,8144003 aix-ppc64,macosx-all\n@@ -574,0 +576,3 @@\n+java\/nio\/channels\/DatagramChannel\/BasicMulticastTests.java      8144003 macosx-all\n+java\/nio\/channels\/DatagramChannel\/MulticastSendReceiveTests.java 8144003 macosx-all\n+java\/nio\/channels\/DatagramChannel\/Promiscuous.java              8144003 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,357 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Checkbox;\n+import java.awt.Choice;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.List;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.Scrollbar;\n+import java.awt.TextArea;\n+import java.awt.TextField;\n+import java.awt.event.ComponentEvent;\n+import java.awt.event.ComponentListener;\n+import java.awt.event.InputEvent;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import jdk.test.lib.Platform;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8333403\n+ * @summary Test performs various operations to check components events are triggered properly.\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.Platform\n+ * @run main ComponentEventTest\n+ *\/\n+public class ComponentEventTest {\n+\n+    private static final int DELAY = 500;\n+\n+    private static Frame frame;\n+    private static Robot robot;\n+\n+    private static Component[] components;\n+\n+    private static volatile Point centerPoint;\n+\n+    private static volatile boolean componentHidden;\n+    private static volatile boolean componentShown;\n+    private static volatile boolean componentMoved;\n+    private static volatile boolean componentResized;\n+\n+    private static final ComponentListener componentListener =\n+        new ComponentListener() {\n+\n+            @Override\n+            public void componentShown(ComponentEvent e) {\n+                System.out.println(\"ComponentShown: \" + e.getSource());\n+                componentShown = true;\n+            }\n+\n+            @Override\n+            public void componentResized(ComponentEvent e) {\n+                System.out.println(\"ComponentResized: \" + e.getSource());\n+                componentResized = true;\n+            }\n+\n+            @Override\n+            public void componentMoved(ComponentEvent e) {\n+                System.out.println(\"ComponentMoved: \" + e.getSource());\n+                componentMoved = true;\n+            }\n+\n+            @Override\n+            public void componentHidden(ComponentEvent e) {\n+                System.out.println(\"ComponentHidden: \" + e.getSource());\n+                componentHidden = true;\n+            }\n+        };\n+\n+    private static void initializeGUI() {\n+        frame = new Frame(\"Component Event Test\");\n+        frame.setLayout(new FlowLayout());\n+\n+        Panel panel = new Panel();\n+        Button button = new Button(\"Button\");\n+        Label label = new Label(\"Label\");\n+        List list = new List();\n+        list.add(\"One\");\n+        list.add(\"Two\");\n+        list.add(\"Three\");\n+        Choice choice = new Choice();\n+        choice.add(\"Red\");\n+        choice.add(\"Orange\");\n+        choice.add(\"Yellow\");\n+        Checkbox checkbox = new Checkbox(\"Checkbox\");\n+        Scrollbar scrollbar = new Scrollbar(Scrollbar.HORIZONTAL, 0, 1, 0, 255);\n+        TextField textfield = new TextField(15);\n+        TextArea textarea = new TextArea(5, 15);\n+\n+        components = new Component[] { panel, button, label, list, choice,\n+            checkbox, scrollbar, textfield, textarea, frame };\n+\n+        for (int i = 0; i < components.length - 1; i++) {\n+            components[i].addComponentListener(componentListener);\n+            frame.add(components[i]);\n+        }\n+        frame.addComponentListener(componentListener);\n+\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            robot.setAutoWaitForIdle(true);\n+\n+            EventQueue.invokeAndWait(ComponentEventTest::initializeGUI);\n+            robot.waitForIdle();\n+            robot.delay(DELAY);\n+\n+            doTest();\n+\n+            System.out.println(\"Test PASSED\");\n+        } finally {\n+            EventQueue.invokeAndWait(ComponentEventTest::disposeFrame);\n+        }\n+    }\n+\n+    private static void doTest()\n+        throws InvocationTargetException, InterruptedException {\n+        \/\/ Click the frame to ensure it gains focus\n+        clickFrame();\n+\n+        robot.delay(DELAY);\n+\n+        for (int i = 0; i < components.length; i++) {\n+            for (boolean state : new boolean[] { true, false }) {\n+                doTest(components[i], state);\n+            }\n+        }\n+\n+        robot.delay(DELAY);\n+\n+        System.out.println(\"Iconify frame\");\n+        resetValues();\n+        testIconifyFrame();\n+\n+        System.out.println(\"Deiconify frame\");\n+        resetValues();\n+        testDeiconifyFrame();\n+    }\n+\n+    private static void clickFrame()\n+        throws InvocationTargetException, InterruptedException {\n+        EventQueue.invokeAndWait(() -> {\n+            Point location = frame.getLocationOnScreen();\n+            Dimension size = frame.getSize();\n+            centerPoint = new Point(location.x + size.width \/ 2,\n+                location.y + size.height \/ 2);\n+        });\n+\n+        robot.mouseMove(centerPoint.x, centerPoint.y);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+    }\n+\n+    private static void testIconifyFrame()\n+        throws InvocationTargetException, InterruptedException {\n+        EventQueue.invokeAndWait(() -> frame.setExtendedState(Frame.ICONIFIED));\n+\n+        robot.waitForIdle();\n+        robot.delay(DELAY);\n+        if (componentShown || componentHidden || componentMoved\n+            || componentResized) {\n+            throw new RuntimeException(\n+                \"ComponentEvent triggered when frame is iconified\");\n+        }\n+    }\n+\n+    private static void testDeiconifyFrame()\n+        throws InvocationTargetException, InterruptedException {\n+        EventQueue.invokeAndWait(() -> frame.setExtendedState(Frame.NORMAL));\n+\n+        robot.waitForIdle();\n+        robot.delay(DELAY);\n+\n+        \/*\n+         * Because of the different behavior between MS Windows and other OS, we\n+         * receive native events WM_SIZE and WM_MOVE on Windows when the frame\n+         * state changes from iconified to normal. AWT sends these events to\n+         * components when it receives the events from the native system. See\n+         * JDK-6754618 for more information.\n+         *\/\n+\n+        if (componentShown || componentHidden) {\n+            throw new RuntimeException(\n+                \"FAIL: componentShown or componentHidden triggered \"\n+                    + \"when frame set to normal\");\n+        }\n+\n+        if (Platform.isWindows() && (!componentMoved || !componentResized)) {\n+            throw new RuntimeException(\n+                \"FAIL: componentMoved or componentResized wasn't triggered \"\n+                    + \"when frame set to normal\");\n+        }\n+        if (!Platform.isWindows() && (componentMoved || componentResized)) {\n+            throw new RuntimeException(\n+                \"FAIL: componentMoved or componentResized triggered \"\n+                    + \"when frame set to normal\");\n+        }\n+    }\n+\n+    private static void doTest(final Component currentComponent, boolean enable)\n+        throws InvocationTargetException, InterruptedException {\n+\n+        System.out.println(\"Component \" + currentComponent);\n+        System.out.println(\"  enabled \" + enable);\n+\n+        EventQueue.invokeAndWait(() -> {\n+            currentComponent.setEnabled(enable);\n+            revalidateFrame();\n+        });\n+\n+        robot.delay(DELAY);\n+\n+        resetValues();\n+        EventQueue.invokeAndWait(() -> {\n+            currentComponent.setVisible(false);\n+            revalidateFrame();\n+        });\n+\n+        robot.delay(DELAY);\n+        if (!componentHidden) {\n+            throw new RuntimeException(\"FAIL: ComponentHidden not triggered for\"\n+                + currentComponent.getClass());\n+        }\n+\n+        resetValues();\n+        EventQueue.invokeAndWait(() -> {\n+            currentComponent.setVisible(false);\n+            revalidateFrame();\n+        });\n+\n+        robot.delay(DELAY);\n+        if (componentHidden) {\n+            throw new RuntimeException(\"FAIL: ComponentHidden triggered when \"\n+                + \"setVisible(false) called for a hidden \"\n+                + currentComponent.getClass());\n+        }\n+\n+        resetValues();\n+        EventQueue.invokeAndWait(() -> {\n+            currentComponent.setVisible(true);\n+            revalidateFrame();\n+        });\n+\n+        robot.delay(DELAY);\n+        if (!componentShown) {\n+            throw new RuntimeException(\"FAIL: ComponentShown not triggered for \"\n+                + currentComponent.getClass());\n+        }\n+\n+        resetValues();\n+        EventQueue.invokeAndWait(() -> {\n+            currentComponent.setVisible(true);\n+            revalidateFrame();\n+        });\n+\n+        robot.delay(DELAY);\n+        if (componentShown) {\n+            throw new RuntimeException(\"FAIL: ComponentShown triggered when \"\n+                + \"setVisible(true) called for a shown \"\n+                + currentComponent.getClass());\n+        }\n+\n+        resetValues();\n+        EventQueue.invokeAndWait(() -> {\n+            currentComponent.setLocation(currentComponent.getLocation().x + 1,\n+                currentComponent.getLocation().y);\n+            revalidateFrame();\n+        });\n+\n+        robot.delay(DELAY);\n+        if (!componentMoved) {\n+            throw new RuntimeException(\"FAIL: ComponentMoved not triggered for \"\n+                + currentComponent.getClass());\n+        }\n+\n+        resetValues();\n+        EventQueue.invokeAndWait(() -> {\n+            currentComponent.setSize(currentComponent.getSize().width + 1,\n+                currentComponent.getSize().height);\n+            revalidateFrame();\n+        });\n+\n+        robot.delay(DELAY);\n+        if (!componentResized) {\n+            throw new RuntimeException(\"FAIL: ComponentResized not triggered \"\n+                + \"when size increases for \" + currentComponent.getClass());\n+        }\n+\n+        resetValues();\n+        EventQueue.invokeAndWait(() -> {\n+            currentComponent.setSize(currentComponent.getSize().width - 1,\n+                currentComponent.getSize().height);\n+            revalidateFrame();\n+        });\n+\n+        robot.delay(DELAY);\n+        if (!componentResized) {\n+            throw new RuntimeException(\"FAIL: ComponentResized not triggered \"\n+                + \"when size decreases for \" + currentComponent.getClass());\n+        }\n+\n+        System.out.println(\"\\n\");\n+    }\n+\n+    private static void revalidateFrame() {\n+        frame.invalidate();\n+        frame.validate();\n+    }\n+\n+    private static void resetValues() {\n+        componentShown = false;\n+        componentHidden = false;\n+        componentMoved = false;\n+        componentResized = false;\n+    }\n+\n+    private static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Component\/ComponentEventTest.java","additions":357,"deletions":0,"binary":false,"changes":357,"status":"added"},{"patch":"@@ -0,0 +1,152 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key printer\n+ * @bug 6255196\n+ * @summary  Verifies the function of methods edit(java.io.File file) and\n+ *           print(java.io.File file)\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual EditAndPrintTest\n+ *\/\n+\n+import java.awt.Desktop;\n+import java.awt.Desktop.Action;\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JPanel;\n+\n+public class EditAndPrintTest extends JPanel {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+            This test tries to edit and print a directory, which will expectedly raise IOException.\n+            Then this test would edit and print a .txt file, which should be successful.\n+            After test execution close the editor if it was launched by test.\n+            If you see any EXCEPTION messages in the output press FAIL.\n+            \"\"\";\n+\n+    public EditAndPrintTest() {\n+        if (!Desktop.isDesktopSupported()) {\n+            PassFailJFrame.log(\"Class java.awt.Desktop is not supported on \" +\n+                    \"current platform. Further testing will not be performed\");\n+            PassFailJFrame.forcePass();\n+        }\n+\n+        Desktop desktop = Desktop.getDesktop();\n+\n+        if (!desktop.isSupported(Action.PRINT) && !desktop.isSupported(Action.EDIT)) {\n+            PassFailJFrame.log(\"Neither EDIT nor PRINT actions are supported. Nothing to test.\");\n+            PassFailJFrame.forcePass();\n+        }\n+\n+        \/*\n+         * Part 1: print or edit a directory, which should throw an IOException.\n+         *\/\n+        File userHome = new File(System.getProperty(\"user.home\"));\n+        try {\n+            if (desktop.isSupported(Action.EDIT)) {\n+                PassFailJFrame.log(\"Trying to edit \" + userHome);\n+                desktop.edit(userHome);\n+                PassFailJFrame.log(\"No exception has been thrown for editing \" +\n+                        \"directory \" + userHome.getPath());\n+                PassFailJFrame.log(\"Test failed.\");\n+            } else {\n+                PassFailJFrame.log(\"Action EDIT is unsupported.\");\n+            }\n+        } catch (IOException e) {\n+            PassFailJFrame.log(\"Expected IOException is caught.\");\n+        }\n+\n+        try {\n+            if (desktop.isSupported(Action.PRINT)) {\n+                PassFailJFrame.log(\"Trying to print \" + userHome);\n+                desktop.print(userHome);\n+                PassFailJFrame.log(\"No exception has been thrown for printing \" +\n+                        \"directory \" + userHome.getPath());\n+                PassFailJFrame.log(\"Test failed.\");\n+            } else {\n+                PassFailJFrame.log(\"Action PRINT is unsupported.\\n\");\n+            }\n+        } catch (IOException e) {\n+            PassFailJFrame.log(\"Expected IOException is caught.\");\n+        }\n+\n+        \/*\n+         * Part 2: print or edit a normal .txt file, which may succeed if there\n+         * is associated application to print or edit the given file. It fails\n+         * otherwise.\n+         *\/\n+        \/\/ Create a temp .txt file for test.\n+        String testFilePath = System.getProperty(\"java.io.tmpdir\") + File.separator + \"JDIC-test.txt\";\n+        File testFile = null;\n+        try {\n+            PassFailJFrame.log(\"Creating temporary file.\");\n+            testFile = File.createTempFile(\"JDIC-test\", \".txt\", new File(System.getProperty(\"java.io.tmpdir\")));\n+            testFile.deleteOnExit();\n+            FileWriter writer = new FileWriter(testFile);\n+            writer.write(\"This is a temp file used to test print() method of Desktop.\");\n+            writer.flush();\n+            writer.close();\n+        } catch (java.io.IOException ioe){\n+            PassFailJFrame.log(\"EXCEPTION: \" + ioe.getMessage());\n+            PassFailJFrame.forceFail(\"Failed to create temp file for testing.\");\n+        }\n+\n+        try {\n+            if (desktop.isSupported(Action.EDIT)) {\n+                PassFailJFrame.log(\"Try to edit \" + testFile);\n+                desktop.edit(testFile);\n+                PassFailJFrame.log(\"Succeed.\");\n+            }\n+        } catch (IOException e) {\n+            PassFailJFrame.log(\"EXCEPTION: \" + e.getMessage());\n+        }\n+\n+        try {\n+            if (desktop.isSupported(Action.PRINT)) {\n+                PassFailJFrame.log(\"Trying to print \" + testFile);\n+                desktop.print(testFile);\n+                PassFailJFrame.log(\"Succeed.\");\n+            }\n+        } catch (IOException e) {\n+            PassFailJFrame.log(\"EXCEPTION: \" + e.getMessage());\n+        }\n+    }\n+\n+    public static void main(String args[]) throws InterruptedException,\n+            InvocationTargetException {\n+        PassFailJFrame.builder()\n+                .title(\"Edit and Print test\")\n+                .splitUI(EditAndPrintTest::new)\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 1)\n+                .columns(60)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Desktop\/EditAndPrintTest\/EditAndPrintTest.java","additions":152,"deletions":0,"binary":false,"changes":152,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Dialog;\n+import java.awt.Frame;\n+import java.awt.Window;\n+import java.util.List;\n+\n+\/*\n+ * @test\n+ * @bug 4240766 8259023\n+ * @summary Frame Icon is wrong - should be Coffee Cup or Duke image icon\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual DefaultFrameIconTest\n+*\/\n+\n+public class DefaultFrameIconTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            You should see a dialog and a frame.\n+            If both have Coffee Cup or Duke image icon in the upper left corner,\n+            the test passes, otherwise it fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"DefaultFrameIconTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .testUI(DefaultFrameIconTest::createAndShowUI)\n+                .positionTestUI(DefaultFrameIconTest::positionTestWindows)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static void positionTestWindows(List<? extends Window> testWindows,\n+                                            PassFailJFrame.InstructionUI instructionUI) {\n+        int gap = 5;\n+        int x = instructionUI.getLocation().x + instructionUI.getSize().width + gap;\n+        for (Window w : testWindows) {\n+            w.setLocation(x, instructionUI.getLocation().y);\n+            x += w.getWidth() + gap;\n+        }\n+    }\n+\n+    private static List<Window> createAndShowUI() {\n+        Frame testFrame = new Frame(\"Frame DefaultFrameIconTest\");\n+        Dialog testDialog = new Dialog(testFrame, \"Dialog DefaultFrameIconTest\");\n+\n+        testDialog.setSize(250, 100);\n+\n+        testFrame.setSize(250, 100);\n+        return List.of(testFrame, testDialog);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/DefaultFrameIconTest.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.imageio.ImageIO;\n+import java.awt.Color;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4127271\n+ * @summary Tests that disposing of a Frame with MenuBar removes all traces\n+ *          of the Frame from the screen.\n+ *\/\n+\n+public class DisposeTest {\n+    private static Frame backgroundFrame;\n+    private static Frame testedFrame;\n+\n+    private static final Rectangle backgroundFrameBounds =\n+            new Rectangle(100, 100, 200, 200);\n+    private static final Rectangle testedFrameBounds =\n+            new Rectangle(150, 150, 100, 100);\n+\n+    private static Robot robot;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        try {\n+            EventQueue.invokeAndWait(DisposeTest::initAndShowGui);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            EventQueue.invokeAndWait(testedFrame::dispose);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            test();\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                backgroundFrame.dispose();\n+                testedFrame.dispose();\n+            });\n+        }\n+    }\n+\n+    private static void test() {\n+        BufferedImage bi = robot.createScreenCapture(backgroundFrameBounds);\n+        int redPix = Color.RED.getRGB();\n+\n+        for (int x = 0; x < bi.getWidth(); x++) {\n+            for (int y = 0; y < bi.getHeight(); y++) {\n+                if (bi.getRGB(x, y) != redPix) {\n+                    try {\n+                        ImageIO.write(bi, \"png\",\n+                                new File(\"failure.png\"));\n+                    } catch (IOException ignored) {}\n+                    throw new RuntimeException(\"Test failed\");\n+                }\n+            }\n+        }\n+    }\n+\n+    private static void initAndShowGui() {\n+        backgroundFrame = new Frame(\"DisposeTest background\");\n+        backgroundFrame.setUndecorated(true);\n+        backgroundFrame.setBackground(Color.RED);\n+        backgroundFrame.setBounds(backgroundFrameBounds);\n+        backgroundFrame.setVisible(true);\n+\n+        testedFrame = new UglyFrame();\n+    }\n+\n+    static class UglyFrame extends Frame {\n+        public UglyFrame() {\n+            super(\"DisposeTest\");\n+            MenuBar mb = new MenuBar();\n+            Menu m = new Menu(\"menu\");\n+            mb.add(m);\n+            setMenuBar(mb);\n+            setBounds(testedFrameBounds);\n+            setVisible(true);\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Frame\/DisposeTest.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+\n+\/*\n+ * @test\n+ * @bug 4023385\n+ * @summary resizing a frame causes too many repaints\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FramePaintTest\n+*\/\n+\n+public class FramePaintTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            You should see a Frame titled \"Repaint Test\", filled with colored blocks.\n+\n+            Resize the frame several times, both inward as well as outward.\n+\n+            The blocks should move to fill the window without any flashes or\n+            glitches which ensures that repaint is not done excessively\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"FramePaintTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .testUI(ResizeLW::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static class ResizeLW extends Frame {\n+\n+        public ResizeLW() {\n+            super(\"Repaint Test\");\n+            setBackground(Color.red);\n+            setLayout(new FlowLayout());\n+            setSize(300, 300);\n+\n+            for (int i = 0; i < 10; i++) {\n+                add(new ColorComp(Color.blue));\n+                add(new ColorComp(Color.green));\n+            }\n+        }\n+\n+        private static class ColorComp extends Component {\n+            public ColorComp(Color c) {\n+                super();\n+                setBackground(c);\n+            }\n+\n+            public void paint(Graphics g) {\n+                g.setColor(getBackground());\n+                g.fillRect(0, 0, getWidth(), getHeight());\n+            }\n+\n+            public Dimension getPreferredSize() {\n+                return new Dimension(50, 50);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/FramePaintTest.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"},{"patch":"@@ -0,0 +1,178 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.CheckboxMenuItem;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.TextField;\n+import java.awt.Window;\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.util.List;\n+\n+\/*\n+ * @test\n+ * @bug 4133279\n+ * @summary  Clicking in menu in inactive frame crashes application\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MenuCrash\n+ *\/\n+public class MenuCrash {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Two frames will appear, alternate between frames by clicking on the\n+            menubar of the currently deactivated frame and verify no crash occurs.\n+\n+            Try mousing around the menus and choosing various items to see the menu\n+            item name reflected in the text field. Note that CheckBoxMenuItems do\n+            not fire action events so the check menu item (Item 03) will not change\n+            the field.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"MenuCrash Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .testUI(MenuCrash::createAndShowUI)\n+                .positionTestUI(MenuCrash::positionTestWindows)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+\n+    private static List<Window> createAndShowUI() {\n+        Frame frame1 = new MenuFrame(\"Frame 1 MenuCrash\");\n+        Frame frame2 = new MenuFrame(\"Frame 2 MenuCrash\");\n+\n+        frame1.setSize(300, 200);\n+        frame2.setSize(300, 200);\n+\n+        frame1.validate();\n+        frame2.validate();\n+\n+        return List.of(frame1, frame2);\n+    }\n+\n+    private static void positionTestWindows(List<? extends Window> testWindows,\n+                                            PassFailJFrame.InstructionUI instructionUI) {\n+        int gap = 5;\n+        int x = instructionUI.getLocation().x + instructionUI.getSize().width + gap;\n+        for (Window w : testWindows) {\n+            w.setLocation(x, instructionUI.getLocation().y);\n+            x += w.getWidth() + gap;\n+        }\n+    }\n+\n+    static class MenuFrame extends Frame {\n+        private final TextField  field;\n+\n+        MenuFrame(String name) {\n+            super(name);\n+            setLayout(new FlowLayout());\n+\n+            Button removeMenus = new Button(\"Remove Menus\");\n+            removeMenus.addActionListener(ev -> remove(getMenuBar()));\n+\n+            Button addMenus = new Button(\"Add Menus\");\n+            addMenus.addActionListener(ev -> setupMenus());\n+\n+            add(removeMenus);\n+            add(addMenus);\n+            field = new TextField(20);\n+            add(field);\n+\n+            addWindowListener(\n+                    new WindowAdapter() {\n+                        public void windowActivated(WindowEvent e) {\n+                            setupMenus();\n+                        }\n+                    }\n+            );\n+\n+            addComponentListener(\n+                    new ComponentAdapter() {\n+                        public void componentResized(ComponentEvent e) {\n+                            System.out.println(MenuFrame.this);\n+                        }\n+                    }\n+            );\n+\n+            pack();\n+        }\n+\n+        private void addMenuListeners() {\n+            MenuBar menuBar = getMenuBar();\n+\n+            for (int nMenu = 0; nMenu < menuBar.getMenuCount(); nMenu++) {\n+                Menu menu = menuBar.getMenu(nMenu);\n+                for (int nMenuItem = 0; nMenuItem < menu.getItemCount(); nMenuItem++) {\n+                    MenuItem item = menu.getItem(nMenuItem);\n+                    item.addActionListener(ev -> field.setText(ev.getActionCommand()));\n+                }\n+            }\n+        }\n+\n+        private void setupMenus() {\n+            MenuItem miSetLabel = new MenuItem(\"Item 01\");\n+            MenuItem miSetEnabled = new MenuItem(\"Item 02\");\n+            CheckboxMenuItem miSetState = new CheckboxMenuItem(\"Item 03\");\n+            MenuItem miAdded = new MenuItem(\"Item 04 Added\");\n+\n+            MenuBar menuBar = new MenuBar();\n+            Menu menu1 = new Menu(\"Menu 01\");\n+            menu1.add(miSetLabel);\n+            menu1.add(miSetEnabled);\n+            menu1.add(miSetState);\n+            menuBar.add(menu1);\n+            setMenuBar(menuBar);\n+\n+            \/\/ now that the peers are created, screw\n+            \/\/ around with the menu items\n+            miSetLabel.setLabel(\"Menu 01 - SetLabel\");\n+            miSetEnabled.setEnabled(false);\n+            miSetState.setState(true);\n+            menu1.add(miAdded);\n+            menu1.remove(miAdded);\n+            menu1.addSeparator();\n+            menu1.add(miAdded);\n+\n+            Menu menu2 = new Menu(\"Menu 02\");\n+            menuBar.add(menu2);\n+            menuBar.remove(menu2);\n+            menuBar.add(menu2);\n+            menu2.add(new MenuItem(\"Foo\"));\n+            menu1.setLabel(\"Menu Number 1\");\n+            menu2.setLabel(\"Menu Number 2\");\n+\n+            addMenuListeners();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/MenuCrash.java","additions":178,"deletions":0,"binary":false,"changes":178,"status":"added"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6354810\n+ * @summary Items in the list are not grayed out when disabled, XToolkit\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual DisabledListIsGreyTest\n+*\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.List;\n+\n+public class DisabledListIsGreyTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1) After the test started you will see two lists.\n+            2) One of them is enabled, and the second is disabled.\n+            3) Check that the items of the disabled list are grayed.\n+            4) If so, the test passed. Otherwise, failed.\"\"\";\n+\n+\n+    public static void main(String[] args) throws Exception {\n+         PassFailJFrame.builder()\n+                .title(\"DisabledListIsGreyTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(DisabledListIsGreyTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"DisabledListIsGreyTest Frame\");\n+        frame.setLayout(new FlowLayout());\n+\n+        List list1 = new List(3);\n+        List list2 = new List(3);\n+        for (int i = 0; i < 5; i++) {\n+            list1.addItem(\"Item \" + i);\n+            list2.addItem(\"Item \" + i);\n+        }\n+        frame.add(list1);\n+\n+        list2.setEnabled(false);\n+        frame.add(list2);\n+        frame.pack();\n+        return frame;\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/awt\/List\/DisabledListIsGreyTest.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6355467\n+ * @summary Horizontal scroll bar thumb of a List does not stay at the end\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @requires (os.family == \"linux\")\n+ * @run main\/manual HorizScrollWorkTest\n+*\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.List;\n+\n+public class HorizScrollWorkTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This is a linux only test.\n+            Drag and drop the horizontal scroll bar thumb at the right end.\n+            If the thumb does not stay at the right end, then the test failed. Otherwise passed.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"HorizScrollWorkTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int)INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(HorizScrollWorkTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"HorizScrollWorkTest Frame\");\n+        List list = new List(4);\n+\n+        frame.setLayout (new FlowLayout());\n+\n+        list.add(\"veryyyyyyyyyyyyyyyyyyyyyyyyyy longgggggggggggggggggggggg stringggggggggggggggggggggg\");\n+\n+        frame.add(list);\n+        frame.pack();\n+\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/HorizScrollWorkTest.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4895367\n+ * @summary List scrolling w\/ down arrow keys obscures horizontal scrollbar\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @requires (os.family == \"linux\")\n+ * @run main\/manual HorizScrollbarEraseTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.List;\n+import java.awt.Panel;\n+import java.awt.TextArea;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class HorizScrollbarEraseTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This is a Unix-only test.\n+            Do the four mini-tests below.\n+            If the horizontal scrollbar is ever erased by a rectangle\n+            of the background color, the test FAILS.\n+            If the horizontal scrollbars remain painted, test passes.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"HorizScrollbarEraseTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(HorizScrollbarEraseTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"HorizScrollbarEraseTest\");\n+        Panel borderPanel = new Panel();\n+        borderPanel.setLayout(new BorderLayout());\n+        Button focusedButton = new Button(\"Focus starts here\");\n+        borderPanel.add(focusedButton, BorderLayout.NORTH);\n+\n+        Panel gridPanel = new Panel();\n+        gridPanel.setLayout(new GridLayout(0, 4));\n+        borderPanel.add(gridPanel, BorderLayout.CENTER);\n+\n+        InstructionList il1 = new InstructionList(\"Tab to Item 2, then \\n\" +\n+                                                   \"press the down\" +\n+                                                    \"arrow key to scroll down\");\n+        il1.list.select(2);\n+        il1.list.makeVisible(0);\n+        gridPanel.add(il1);\n+\n+        InstructionList il2 = new InstructionList(\"Tab to the next List,\\n\" +\n+                                                  \"then press the down\\n\" +\n+                                                  \"arrow key to select\\n\" +\n+                                                  \"the last item.\");\n+        il2.list.select(3);\n+        il2.list.makeVisible(0);\n+        gridPanel.add(il2);\n+\n+        InstructionList il3 = new InstructionList(\"Click the button to\\n\" +\n+                                                  \"programmatically\\n\" +\n+                                                  \"select item 3 (not showing)\");\n+        Button selectBtn = new Button(\"Click Me\");\n+        final List selectList = il3.list;\n+        selectBtn.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                selectList.select(3);\n+            }\n+        });\n+        il3.add(selectBtn, BorderLayout.CENTER);\n+        gridPanel.add(il3);\n+\n+        InstructionList il4 = new InstructionList(\"Click the button to\\nprogrammatically\\ndeselect item 3\\n(not showing)\");\n+        Button deselectBtn = new Button(\"Click Me\");\n+        final List deselectList = il4.list;\n+        deselectBtn.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                deselectList.deselect(3);\n+            }\n+        });\n+        il4.add(deselectBtn, BorderLayout.CENTER);\n+        il4.list.select(3);\n+        il4.list.makeVisible(0);\n+        gridPanel.add(il4);\n+\n+        frame.add(borderPanel);\n+        frame.pack();\n+        return frame;\n+\n+    }\n+}\n+\n+class InstructionList extends Panel {\n+    TextArea ta;\n+    public List list;\n+\n+    public InstructionList(String instructions) {\n+        super();\n+        setLayout(new BorderLayout());\n+        ta = new TextArea(instructions, 6, 25, TextArea.SCROLLBARS_NONE);\n+        ta.setFocusable(false);\n+        list = new List();\n+        for (int i = 0; i < 5; i++) {\n+            list.add(\"Item \" + i + \", a long, long, long, long item\");\n+        }\n+        add(ta, BorderLayout.NORTH);\n+        add(list, BorderLayout.SOUTH);\n+     }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/HorizScrollbarEraseTest.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4085379\n+ * @summary List component not properly \"resized\" with GridBagLayout\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ListFrameResizeTest\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Frame;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import java.awt.List;\n+\n+public class ListFrameResizeTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        This test is for windows only.\n+\n+        1. A Frame will appear with a List\n+           (the List occupies the whole Frame)\n+        2. Minimize the Frame, the Frame is now in the Task Bar (ie.,iconified)\n+        3. Right click (right mouse button) the icon in the task bar\n+           and click on the 'maximize' menuitem to maximize the Frame\n+        4. If you notice the List has not been resized\n+           (ie.,if it partly occupies the Frame), then press FAIL else press PASS\".\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ListFrameResizeTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(ListFrameResizeTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        wintest client = new wintest(\"ListFrameResizeTest Frame\");\n+        client.resize(500, 300);\n+        client.setBackground(Color.blue);\n+        return client;\n+    }\n+\n+}\n+\n+class wintest extends Frame {\n+    private List msg;\n+\n+    public wintest(String title) {\n+        super(title);\n+        msg = new List();\n+        for (int i = 0; i < 100; i++) {\n+            msg.add(\"\" + i);\n+        }\n+\n+        GridBagLayout gridbag = new GridBagLayout();\n+        GridBagConstraints constraints = new GridBagConstraints();\n+\n+        setLayout(gridbag);\n+\n+        constraints.fill = GridBagConstraints.BOTH;\n+\n+        constraints.anchor = GridBagConstraints.CENTER;\n+        constraints.insets = new Insets(10, 10, 10, 10);\n+        constraints.ipadx = 0;\n+        constraints.ipady = 0;\n+        constraints.weightx = 1;\n+        constraints.weighty = 1;\n+        constraints.gridx = 0;\n+        constraints.gridy = 0;\n+        constraints.gridwidth = GridBagConstraints.REMAINDER;\n+        constraints.gridheight = GridBagConstraints.REMAINDER;\n+        gridbag.setConstraints(msg, constraints);\n+        add(msg);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/ListFrameResizeTest.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4201967\n+ * @summary tests that a multiselection list doesn't causes crash when FileDialog is invoked\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MultiSelectionListCrashTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.FileDialog;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.List;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class MultiSelectionListCrashTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+         Press \"Invoke dialog\" button to invoke a FileDialog.\n+         When it appears close it by pressing cancel button.\n+         If all remaining frames are enabled and\n+         page fault didn't occur the test passed. Otherwise the test failed.\n+\n+         Try to invoke a FileDialog several times to verify that the bug doesn't exist.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"MultiSelectionListCrashTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(MultiSelectionListCrashTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+\n+        Frame frame = new Frame(\"MultiSelectionListCrashTest frame\");\n+        Button button = new Button(\"Invoke dialog\");\n+        button.addActionListener(new FileDialogInvoker(frame));\n+        List list = new List(4, true);\n+        list.add(\"Item1\");\n+        list.add(\"Item2\");\n+        frame.setLayout(new FlowLayout());\n+        frame.add(button);\n+        frame.add(list);\n+        frame.setSize(200, 200);\n+        return frame;\n+    }\n+}\n+\n+class FileDialogInvoker implements ActionListener {\n+     FileDialog fileDialog;\n+\n+     public FileDialogInvoker(Frame frame) {\n+         fileDialog = new FileDialog(frame);\n+     }\n+\n+     public void actionPerformed(ActionEvent e) {\n+         fileDialog.setVisible(true);\n+     }\n+\n+}\n","filename":"test\/jdk\/java\/awt\/List\/MultiSelectionListCrashTest.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4024943\n+ * @summary  Test for position of List scrollbar when it is added\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ScrollbarPositionTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.List;\n+import java.awt.Panel;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class ScrollbarPositionTest {\n+    static int item = 0;\n+    static List list;\n+    static Button addButton, delButton;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Click on the \"Add List Item\" button many times\n+        until the vertical scrollbar appears.\n+        Verify that the displayed vertical scrollbar does not take the space\n+        that was occupied by buttons before the scrollbar is shown.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ScrollbarPositionTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(ScrollbarPositionTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Panel pan;\n+\n+        Frame frame = new Frame(\"ScrollbarPositionTest Frame\");\n+        frame.setLayout(new GridLayout(1, 2));\n+        list = new List();\n+        frame.add(list);\n+        frame.add(pan = new Panel());\n+        pan.setLayout(new GridLayout(4, 1));\n+\n+        MyListener listener = new MyListener();\n+        addButton = new Button(\"Add List Item\");\n+        addButton.addActionListener(listener);\n+        pan.add(addButton);\n+\n+        delButton = new Button(\"Delete List Item\");\n+        delButton.addActionListener(listener);\n+        pan.add(delButton);\n+\n+        frame.pack();\n+        return frame;\n+    }\n+\n+    static class MyListener implements ActionListener {\n+        public void actionPerformed(ActionEvent evt) {\n+            if (evt.getSource() == addButton) {\n+                String s = \"item\";\n+                for (int i = 0; i <= item; i++) {\n+                    s = s +\" \"+Integer.toString(i);\n+                }\n+                item++;\n+                list.addItem(s);\n+            } else if (evt.getSource() == delButton) {\n+                int i;\n+                if ((i = list.countItems()) > 0) {\n+                    list.delItem(i - 1);\n+                    --item;\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/ScrollbarPositionTest.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6336384\n+ * @summary ScrollBar does not show up correctly\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ScrollbarPresenceTest\n+*\/\n+\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.List;\n+\n+public class ScrollbarPresenceTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        You will see a list,\n+        If a vertical scrollbar appears on the list and the list is big enough\n+        to show all items then the test failed else the test passed.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ScrollbarPresenceTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(ScrollbarPresenceTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"ScrollbarPresenceTest Frame\");\n+        List list = new List();\n+\n+        for (int i = 0; i < 6; i++) {\n+            list.addItem(\"Row \" + i);\n+        }\n+\n+        list.setFont(new Font(\"MonoSpaced\", Font.PLAIN, 12));\n+        list.setBounds(30, 30, 128, 104);\n+        frame.add(list);\n+\n+        frame.pack();\n+        return frame;\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/awt\/List\/ScrollbarPresenceTest.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,128 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4676536\n+ * @summary REGRESSION: makeVisible() method of List Component does not perform\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual SelectedItemVisibilityTest\n+ *\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.List;\n+\n+public class SelectedItemVisibilityTest {\n+\n+    static List list1, list2;\n+    static int visibleItem = 4;\n+    static int selectedItems[] = {6, 7, 8};\n+    static String selectedItemsStr = \"\";\n+\n+    static {\n+        for (int i = 0 ; i < selectedItems.length ; i++) {\n+            selectedItemsStr += \"\"+selectedItems[i]+\" \";\n+        }\n+    }\n+\n+    private static final String INSTRUCTIONS =\n+            \"You should see two lists.\\n\" +\n+            \"\\n\" +\n+            \"list1: \\n\" +\n+            \"\\t1. the first visible item should be \" + visibleItem +\n+            \"\\n\\t2. the selected item should be \" + selectedItems[0] +\n+            \"\\n\" +\n+            \"list2:\\n\" +\n+            \"\\t1. the first visible item should be \" + visibleItem +\n+            \"\\n\\t2. the selected items should be \" + selectedItemsStr +\n+            \"\\n\" +\n+            \"\\nIf it is so the test passed else failed.\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"SelectedItemVisibilityTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(SelectedItemVisibilityTest::createTestUI)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+\n+        Frame frame = new Frame(\"SelectedItemVisibilityTest Frame\");\n+        frame.setLayout(new FlowLayout());\n+\n+        \/\/ list1\n+        list1 = new List(4);\n+        for (int i = 0; i < 20; i++) {\n+            list1.add(\"\"+i);\n+        }\n+        list1.makeVisible(visibleItem);\n+        list1.select(selectedItems[0]);\n+        frame.add(new Label(\"list1:\"));\n+        frame.add(list1);\n+\n+        \/\/ list2\n+        list2 = new List(4);\n+        list2.setMultipleMode(true);\n+        for (int i = 0; i < 20; i++) {\n+            list2.add(\"\"+i);\n+        }\n+        list2.makeVisible(visibleItem);\n+        for (int i = 0 ; i < selectedItems.length ; i++) {\n+            list2.select(selectedItems[i]);\n+        }\n+        frame.add(new Label(\"list2:\"));\n+        frame.add(list2);\n+        frame.setSize(200, 200);\n+\n+        \/\/ common output\n+        String s;\n+        int sel[];\n+\n+        PassFailJFrame.log(\"list1: \");\n+        PassFailJFrame.log(\"\\tgetVisibleIndex=\"+list1.getVisibleIndex());\n+        sel = list1.getSelectedIndexes();\n+        s = \"\\tgetSelectedIndexes=\";\n+        for (int i = 0 ; i < sel.length ; i++) {\n+            s += \"\" + sel[i] + \" \";\n+        }\n+        PassFailJFrame.log(s);\n+\n+        PassFailJFrame.log(\"list2: \");\n+        PassFailJFrame.log(\"\\tgetVisibleIndex=\"+list2.getVisibleIndex());\n+        sel = list2.getSelectedIndexes();\n+        s = \"\\tgetSelectedIndexes=\";\n+        for (int i = 0 ; i < sel.length ; i++) {\n+            s += \"\" + sel[i] + \" \";\n+        }\n+        PassFailJFrame.log(s);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/SelectedItemVisibilityTest.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"added"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6246467\n+ * @summary Tests that list works correctly if user specified foreground colors on XToolkit\/Motif\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual SetForegroundTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Component;\n+import java.awt.Checkbox;\n+import java.awt.Choice;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.List;\n+import java.awt.Panel;\n+import java.awt.TextArea;\n+import java.awt.TextField;\n+import java.awt.ScrollPane;\n+\n+public class SetForegroundTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        To make sure, that for each component\n+        (Button, Checkbox, Label, List, TextArea, TextField, Choice)\n+        in the frame,\n+        the title exist and the color of the title is red.\n+        If not, the test failed.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"SetForegroundTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(SetForegroundTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame();\n+        ScrollPane sp = new ScrollPane() {\n+            public Dimension getPreferredSize() {\n+                return new Dimension(180, 180);\n+            }\n+        };\n+        Panel p = new Panel();\n+        Component childs[] = new Component[] {new Button(\"button\"),\n+                                              new Checkbox(\"checkbox\"),\n+                                              new Label(\"label\"),\n+                                              new List(3, false),\n+                                              new TextArea(\"text area\"),\n+                                              new TextField(\"text field\"),\n+                                              new Choice()};\n+\n+        p.setLayout (new FlowLayout ());\n+\n+        sp.add(p);\n+\n+        sp.validate();\n+\n+        frame.add(sp);\n+        for (int i = 0; i < childs.length; i++){\n+            childs[i].setForeground(Color.red);\n+        }\n+\n+        for (int i = 0; i < childs.length; i++) {\n+            p.add(childs[i]);\n+            if (childs[i] instanceof List) {\n+                ((List)childs[i]).add(\"list1\");\n+                ((List)childs[i]).add(\"list2\");\n+            } else if (childs[i] instanceof Choice) {\n+                ((Choice)childs[i]).add(\"choice1\");\n+                ((Choice)childs[i]).add(\"choice2\");\n+            }\n+        }\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/SetForegroundTest.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4100188\n+ * @key headful\n+ * @summary Make sure that TextFields contain all of,\n+ * and exactly, the text that was entered into them.\n+ * @run main GetTextTest\n+ *\/\n+\n+import java.awt.AWTException;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.TextField;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class GetTextTest extends Frame implements ActionListener {\n+    private final String s = \"test string\";\n+    private volatile String ac;\n+    private TextField t;\n+    private Point location;\n+    private Dimension size;\n+\n+    public void setupGUI() {\n+        setLayout(new FlowLayout(FlowLayout.LEFT));\n+\n+        t = new TextField(s, 32);\n+        add(new Label(\"Hit <CR> after text\"));\n+        add(t);\n+        t.addActionListener(this);\n+        setLocationRelativeTo(null);\n+        pack();\n+        setVisible(true);\n+    }\n+\n+    public void actionPerformed(ActionEvent evt) {\n+        ac = evt.getActionCommand();\n+    }\n+\n+    public void performTest() throws AWTException, InterruptedException,\n+            InvocationTargetException {\n+        EventQueue.invokeAndWait(() -> {\n+            location = t.getLocationOnScreen();\n+            size = t.getSize();\n+        });\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(50);\n+        robot.delay(1000);\n+        robot.waitForIdle();\n+        robot.mouseMove(location.x + size.width - 3, location.y + (size.height \/ 2));\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.delay(1000);\n+        robot.waitForIdle();\n+        robot.keyPress(KeyEvent.VK_ENTER);\n+        robot.keyRelease(KeyEvent.VK_ENTER);\n+        robot.delay(1000);\n+        if (!s.equals(ac)) {\n+            throw new RuntimeException(\"Action command should be the same as text field content\");\n+        }\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException, AWTException {\n+        GetTextTest test = new GetTextTest();\n+        EventQueue.invokeAndWait(test::setupGUI);\n+        try {\n+            test.performTest();\n+        } finally {\n+            EventQueue.invokeAndWait(test::dispose);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextField\/GetTextTest\/GetTextTest.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4222122\n+ * @summary TextField.setEchoCharacter() seems to be broken\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual SetEchoCharTest3\n+ *\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.TextField;\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class SetEchoCharTest3 extends Frame {\n+    static String INSTRUCTIONS = \"\"\"\n+             Type in the text field and \"*\" characters should echo.\n+             If only one \"*\" echoes and then the system beeps after\n+             the second character is typed, then press Fail, otherwise press Pass.\n+             \"\"\";\n+    public SetEchoCharTest3() {\n+        setLayout(new FlowLayout());\n+        add(new Label(\"Enter text:\"));\n+        TextField tf = new TextField(15);\n+        tf.setEchoChar('*');\n+        add(tf);\n+        pack();\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        PassFailJFrame.builder()\n+                .title(\"Set Echo Char Test 3\")\n+                .testUI(SetEchoCharTest3::new)\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 1)\n+                .columns(40)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextField\/SetEchoCharTest3\/SetEchoCharTest3.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -216,2 +216,20 @@\n-    public PassFailJFrame(String instructions) throws InterruptedException,\n-            InvocationTargetException {\n+    \/**\n+     * Constructs a frame which displays test instructions and\n+     * the <i>Pass<\/i> \/ <i>Fail<\/i> buttons with the given instructions, and\n+     * the default timeout of {@value #TEST_TIMEOUT} minutes,\n+     * the default title of {@value #TITLE} and\n+     * the default values of {@value #ROWS} and {@value #COLUMNS}\n+     * for rows and columns.\n+     * <p>\n+     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n+     * more details.\n+     *\n+     * @param instructions the instructions for the tester\n+     *\n+     * @throws InterruptedException if the current thread is interrupted\n+     *              while waiting for EDT to finish creating UI components\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *              creating UI components on EDT\n+     *\/\n+    public PassFailJFrame(String instructions)\n+            throws InterruptedException, InvocationTargetException {\n@@ -221,2 +239,21 @@\n-    public PassFailJFrame(String instructions, long testTimeOut) throws\n-            InterruptedException, InvocationTargetException {\n+    \/**\n+     * Constructs a frame which displays test instructions and\n+     * the <i>Pass<\/i> \/ <i>Fail<\/i> buttons\n+     * with the given instructions and timeout as well as\n+     * the default title of {@value #TITLE}\n+     * and the default values of {@value #ROWS} and {@value #COLUMNS}\n+     * for rows and columns.\n+     * <p>\n+     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n+     * more details.\n+     *\n+     * @param instructions the instructions for the tester\n+     * @param testTimeOut  the test timeout in minutes\n+     *\n+     * @throws InterruptedException if the current thread is interrupted\n+     *              while waiting for EDT to finish creating UI components\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *              creating UI components on EDT\n+     *\/\n+    public PassFailJFrame(String instructions, long testTimeOut)\n+            throws InterruptedException, InvocationTargetException {\n@@ -226,0 +263,20 @@\n+    \/**\n+     * Constructs a frame which displays test instructions and\n+     * the <i>Pass<\/i> \/ <i>Fail<\/i> buttons\n+     * with the given title, instructions and timeout as well as\n+     * the default values of {@value #ROWS} and {@value #COLUMNS}\n+     * for rows and columns.\n+     * The screenshot feature is not enabled, if you use this constructor.\n+     * <p>\n+     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n+     * more details.\n+     *\n+     * @param title        the title of the instruction frame\n+     * @param instructions the instructions for the tester\n+     * @param testTimeOut  the test timeout in minutes\n+     *\n+     * @throws InterruptedException if the current thread is interrupted\n+     *              while waiting for EDT to finish creating UI components\n+     * @throws InvocationTargetException if an exception is thrown while\n+     *              creating UI components on EDT\n+     *\/\n@@ -227,2 +284,2 @@\n-                          long testTimeOut) throws InterruptedException,\n-            InvocationTargetException {\n+                          long testTimeOut)\n+            throws InterruptedException, InvocationTargetException {\n@@ -233,6 +290,7 @@\n-     * Constructs a JFrame with a given title & serves as test instructional\n-     * frame where the user follows the specified test instruction in order\n-     * to test the test case & mark the test pass or fail. If the expected\n-     * result is seen then the user click on the 'Pass' button else click\n-     * on the 'Fail' button and the reason for the failure should be\n-     * specified in the JDialog JTextArea.\n+     * Constructs a frame which displays test instructions and\n+     * the <i>Pass<\/i> \/ <i>Fail<\/i> buttons\n+     * with the given title, instructions, timeout, number of rows and columns.\n+     * The screenshot feature is not enabled, if you use this constructor.\n+     * <p>\n+     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n+     * more details.\n@@ -240,11 +298,10 @@\n-     * @param title        title of the Frame.\n-     * @param instructions the instruction for the tester on how to test\n-     *                     and what is expected (pass) and what is not\n-     *                     expected (fail).\n-     * @param testTimeOut  test timeout where time is specified in minutes.\n-     * @param rows         number of visible rows of the JTextArea where the\n-     *                     instruction is show.\n-     * @param columns      Number of columns of the instructional\n-     *                     JTextArea\n-     * @throws InterruptedException      exception thrown when thread is\n-     *                                   interrupted\n+     * @param title        the title of the instruction frame\n+     * @param instructions the instructions for the tester\n+     * @param testTimeOut  the test timeout in minutes\n+     * @param rows         the number of rows for the text component\n+     *                     which displays test instructions\n+     * @param columns      the number of columns for the text component\n+     *                     which displays test instructions\n+     *\n+     * @throws InterruptedException if the current thread is interrupted\n+     *              while waiting for EDT to finish creating UI components\n@@ -252,2 +309,1 @@\n-     *                                   creating the test instruction frame on\n-     *                                   EDT\n+     *              creating UI components on EDT\n@@ -255,3 +311,4 @@\n-    public PassFailJFrame(String title, String instructions, long testTimeOut,\n-                          int rows, int columns) throws InterruptedException,\n-            InvocationTargetException {\n+    public PassFailJFrame(String title, String instructions,\n+                          long testTimeOut,\n+                          int rows, int columns)\n+            throws InterruptedException, InvocationTargetException {\n@@ -262,6 +319,24 @@\n-     * Constructs a JFrame with a given title & serves as test instructional\n-     * frame where the user follows the specified test instruction in order\n-     * to test the test case & mark the test pass or fail. If the expected\n-     * result is seen then the user click on the 'Pass' button else click\n-     * on the 'Fail' button and the reason for the failure should be\n-     * specified in the JDialog JTextArea.\n+     * Constructs a frame which displays test instructions and\n+     * the <i>Pass<\/i> \/ <i>Fail<\/i> buttons\n+     * as well as supporting UI components with the given title, instructions,\n+     * timeout, number of rows and columns,\n+     * and screen capture functionality.\n+     * All the UI components are created on the EDT, so it is safe to call\n+     * the constructor on the main thread.\n+     * <p>\n+     * After you create a test UI window, register the window using\n+     * {@link #addTestWindow(Window) addTestWindow} for disposal, and\n+     * position it close to the instruction frame using\n+     * {@link #positionTestWindow(Window, Position) positionTestWindow}.\n+     * As the last step, make your test UI window visible.\n+     * <p>\n+     * Call the {@link #awaitAndCheck() awaitAndCheck} method on the instance\n+     * of {@code PassFailJFrame} when you set up the testing environment.\n+     * <p>\n+     * If the tester clicks the <i>Fail<\/i> button, a dialog prompting for\n+     * a description of the problem is displayed, and then an exception\n+     * is thrown which fails the test.\n+     * If the tester clicks the <i>Pass<\/i> button, the test completes\n+     * successfully.\n+     * If the timeout occurs or the instruction frame is closed,\n+     * the test fails.\n@@ -269,4 +344,20 @@\n-     * The test instruction frame also provides a way for the tester to take\n-     * a screenshot (full screen or individual frame) if this feature\n-     * is enabled by passing {@code true} as {@code  enableScreenCapture}\n-     * parameter.\n+     * The {@code rows} and {@code columns} parameters control\n+     * the size of a text component which displays the instructions.\n+     * The preferred size of the instructions is calculated by\n+     * creating {@code new JTextArea(rows, columns)}.\n+     * <p>\n+     * If you enable screenshots by setting the {@code screenCapture}\n+     * parameter to {@code true}, a <i>Screenshot<\/i> button is added.\n+     * Clicking the <i>Screenshot<\/i> button takes screenshots of\n+     * all the monitors or all the windows registered with\n+     * {@code PassFailJFrame}.\n+     *\n+     * @param title        the title of the instruction frame\n+     * @param instructions the instructions for the tester\n+     * @param testTimeOut  the test timeout in minutes\n+     * @param rows         the number of rows for the text component\n+     *                     which displays test instructions\n+     * @param columns      the number of columns for the text component\n+     *                     which displays test instructions\n+     * @param screenCapture if set to {@code true}, enables screen capture\n+     *                      functionality\n@@ -274,14 +365,2 @@\n-     * @param title        title of the Frame.\n-     * @param instructions the instruction for the tester on how to test\n-     *                     and what is expected (pass) and what is not\n-     *                     expected (fail).\n-     * @param testTimeOut  test timeout where time is specified in minutes.\n-     * @param rows         number of visible rows of the JTextArea where the\n-     *                     instruction is show.\n-     * @param columns      Number of columns of the instructional\n-     *                     JTextArea\n-     * @param enableScreenCapture if set to true, 'Capture Screen' button & its\n-     *                            associated UIs are added to test instruction\n-     *                            frame\n-     * @throws InterruptedException      exception thrown when thread is\n-     *                                   interrupted\n+     * @throws InterruptedException if the current thread is interrupted\n+     *              while waiting for EDT to finish creating UI components\n@@ -289,2 +368,4 @@\n-     *                                   creating the test instruction frame on\n-     *                                   EDT\n+     *              creating UI components on EDT\n+     *\n+     * @see JTextArea#JTextArea(int,int) JTextArea(int rows, int columns)\n+     * @see Builder Builder\n@@ -292,1 +373,2 @@\n-    public PassFailJFrame(String title, String instructions, long testTimeOut,\n+    public PassFailJFrame(String title, String instructions,\n+                          long testTimeOut,\n@@ -294,1 +376,1 @@\n-                          boolean enableScreenCapture)\n+                          boolean screenCapture)\n@@ -299,1 +381,1 @@\n-                                   enableScreenCapture));\n+                                   screenCapture));\n@@ -590,1 +672,1 @@\n-        void positionTestWindows(List<? extends Window> testWindows,\n+        void positionTestWindows(List<Window> testWindows,\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":140,"deletions":58,"binary":false,"changes":198,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.VarHandle;\n+import java.util.ArrayList;\n+\n+\/**\n+  * @test\n+  * @bug 8340812\n+  * @summary Verify that LambdaForm customization via MethodHandle::updateForm is thread safe.\n+  * @run main TestLambdaFormCustomization\n+  * @run main\/othervm -Djava.lang.invoke.MethodHandle.CUSTOMIZE_THRESHOLD=0 TestLambdaFormCustomization\n+  *\/\n+public class TestLambdaFormCustomization {\n+\n+    String str = \"test\";\n+    static final String value = \"test\" + 42;\n+\n+    \/\/ Trigger concurrent LambdaForm customization for VarHandle invokers\n+    void test() throws NoSuchFieldException, IllegalAccessException {\n+        VarHandle varHandle = MethodHandles.lookup().in(getClass()).findVarHandle(getClass(), \"str\", String.class);\n+\n+        ArrayList<Thread> threads = new ArrayList<>();\n+        for (int threadIdx = 0; threadIdx < 10; threadIdx++) {\n+            threads.add(new Thread(() -> {\n+                for (int i = 0; i < 1000; i++) {\n+                    varHandle.compareAndExchange(this, value, value);\n+                    varHandle.compareAndExchange(this, value, value);\n+                    varHandle.compareAndExchange(this, value, value);\n+                }\n+            }));\n+        }\n+        threads.forEach(Thread::start);\n+        threads.forEach(t -> {\n+            try {\n+                t.join();\n+            } catch (Throwable e) {\n+                throw new IllegalStateException(e);\n+            }\n+        });\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        TestLambdaFormCustomization t = new TestLambdaFormCustomization();\n+        for (int i = 0; i < 4000; ++i) {\n+            t.test();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/invoke\/TestLambdaFormCustomization.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8340404\n+ * @summary Check that a CharsetProvider SPI can be deployed as a module\n+ * @build provider\/*\n+ * @run main\/othervm CharsetProviderAsModuleTest\n+ *\/\n+\n+import java.nio.charset.Charset;\n+\n+public class CharsetProviderAsModuleTest {\n+\n+    \/\/ Basic test ensures that our BAZ charset is loaded via the BazProvider\n+    public static void main(String[] args) {\n+        var cs = Charset.availableCharsets();\n+        Charset bazCs;\n+        \/\/ check provider is providing BAZ via charsets()\n+        if (!cs.containsKey(\"BAZ\")) {\n+            throw new RuntimeException(\"SPI BazProvider did not provide BAZ Charset\");\n+        } else {\n+            bazCs = cs.get(\"BAZ\");\n+            \/\/ check provider is in a named module\n+            if (!bazCs.getClass().getModule().isNamed()) {\n+                throw new RuntimeException(\"BazProvider is not a named module\");\n+            }\n+            var aliases = bazCs.aliases();\n+            \/\/ check BAZ cs aliases were loaded correctly\n+            if (!aliases.contains(\"BAZ-1\") || !aliases.contains(\"BAZ-2\")) {\n+                throw new RuntimeException(\"BAZ Charset did not provide correct aliases\");\n+            }\n+            \/\/ check provider implements charsetForName()\n+            if (!bazCs.equals(Charset.forName(\"BAZ\"))) {\n+                throw new RuntimeException(\"SPI BazProvider provides bad charsetForName()\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/charset\/spi\/CharsetProviderAsModuleTest.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+module provider {\n+    provides java.nio.charset.spi.CharsetProvider with spi.BazProvider;\n+}\n","filename":"test\/jdk\/java\/nio\/charset\/spi\/provider\/module-info.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package spi;\n+\n+import java.nio.charset.Charset;\n+import java.nio.charset.CharsetDecoder;\n+import java.nio.charset.CharsetEncoder;\n+import java.nio.charset.spi.CharsetProvider;\n+import java.util.Collections;\n+import java.util.Iterator;\n+\n+\/\/ Provides some simple BAZ related attributes to our provider\n+public class BazProvider extends CharsetProvider {\n+\n+    @Override\n+    public Iterator charsets() {\n+        return Collections.singleton(new BazCharset()).iterator();\n+    }\n+\n+    @Override\n+    public Charset charsetForName(String charsetName) {\n+        if (charsetName.equals(\"BAZ\")) {\n+            return new BazCharset();\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static class BazCharset extends Charset {\n+\n+        public BazCharset() {\n+            super(\"BAZ\", new String[] { \"BAZ-1\", \"BAZ-2\" });\n+        }\n+\n+        \/\/ Overrides to satisfy Charset\n+        @Override\n+        public boolean contains(Charset cs) {\n+            return false;\n+        }\n+\n+        @Override\n+        public CharsetDecoder newDecoder() {\n+            return null;\n+        }\n+\n+        @Override\n+        public CharsetEncoder newEncoder() {\n+            return null;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/charset\/spi\/provider\/spi\/BazProvider.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,128 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 8340684\n+   @summary Verify unspecified, but long-standing behavior when reading\n+   from an input stream obtained using ZipFile::getInputStream after\n+   the ZipFile has been closed.\n+   @run junit ReadAfterClose\n+ *\/\n+\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.stream.Stream;\n+import java.util.zip.CRC32;\n+import java.util.zip.ZipEntry;\n+import java.util.zip.ZipFile;\n+import java.util.zip.ZipOutputStream;\n+\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+public class ReadAfterClose {\n+\n+    \/\/ ZIP file used in this test\n+    private Path zip = Path.of(\"read-after-close.zip\");\n+\n+    \/**\n+     * Create a sample ZIP file for use by this test\n+     * @throws IOException if an unexpected IOException occurs\n+     *\/\n+    @BeforeEach\n+    public void setUp() throws IOException {\n+        byte[] content = \"hello\".repeat(1000).getBytes(StandardCharsets.UTF_8);\n+        try (OutputStream out = Files.newOutputStream(zip);\n+             ZipOutputStream zo = new ZipOutputStream(out)) {\n+            {\n+                zo.putNextEntry(new ZipEntry(\"deflated.txt\"));\n+                zo.write(content);\n+            }\n+            {\n+                ZipEntry entry = new ZipEntry(\"stored.txt\");\n+                entry.setMethod(ZipEntry.STORED);\n+                CRC32 crc = new CRC32();\n+                crc.update(content);\n+                entry.setCrc(crc.getValue());\n+                entry.setSize(content.length);\n+                zo.putNextEntry(entry);\n+                zo.write(content);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Delete the ZIP file produced by this test\n+     * @throws IOException if an unexpected IOException occurs\n+     *\/\n+    @AfterEach\n+    public void cleanup() throws IOException {\n+        Files.deleteIfExists(zip);\n+    }\n+\n+    \/**\n+     * Produce arguments with a variation of stored \/ deflated entries,\n+     * and read behavior before closing the ZipFile.\n+     * @return\n+     *\/\n+    public static Stream<Arguments> arguments() {\n+        return Stream.of(\n+                Arguments.of(\"stored.txt\",   true),\n+                Arguments.of(\"stored.txt\",   false),\n+                Arguments.of(\"deflated.txt\", true),\n+                Arguments.of(\"deflated.txt\", false)\n+        );\n+    }\n+    \/**\n+     * Attempting to read from an InputStream obtained by ZipFile.getInputStream\n+     * after the backing ZipFile is closed should throw IOException\n+     *\n+     * @throws IOException if an unexpected IOException occurs\n+     *\/\n+    @ParameterizedTest\n+    @MethodSource(\"arguments\")\n+    public void readAfterClose(String entryName, boolean readFirst) throws IOException {\n+        \/\/ Retain a reference to an input stream backed by a closed ZipFile\n+        InputStream in;\n+        try (ZipFile zf = new ZipFile(zip.toFile())) {\n+            in = zf.getInputStream(new ZipEntry(entryName));\n+            \/\/ Optionally consume a single byte from the stream before closing\n+            if (readFirst) {\n+                in.read();\n+            }\n+        }\n+\n+        assertThrows(IOException.class, () -> {\n+            in.read();\n+        });\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/ReadAfterClose.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"added"},{"patch":"@@ -9,0 +9,1 @@\n+maxOutputSize = 2500000\n","filename":"test\/jdk\/javax\/net\/ssl\/DTLS\/TEST.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.lang.classfile.constantpool.PoolEntry;\n@@ -39,1 +40,0 @@\n-import java.lang.classfile.attribute.LocalVariableInfo;\n@@ -44,1 +44,0 @@\n-import java.lang.classfile.instruction.LocalVariable;\n@@ -116,1 +115,1 @@\n-            0, 0, 0, 0, 0, 2, ClassFile.TAG_METHODREF, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}).thisClass());\n+            0, 0, 0, 0, 0, 2, PoolEntry.TAG_METHODREF, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}).thisClass());\n@@ -122,1 +121,1 @@\n-            0, 0, 0, 0, 0, 3, ClassFile.TAG_INTEGER, 0, 0, 0, 0, ClassFile.TAG_NAMEANDTYPE, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}).constantPool();\n+            0, 0, 0, 0, 0, 3, PoolEntry.TAG_INTEGER, 0, 0, 0, 0, PoolEntry.TAG_NAME_AND_TYPE, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}).constantPool();\n","filename":"test\/jdk\/jdk\/classfile\/LimitsTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -388,1 +388,1 @@\n-                                            List.of(StackMapFrameInfo.SimpleVerificationTypeInfo.ITEM_LONG)),\n+                                            List.of(StackMapFrameInfo.SimpleVerificationTypeInfo.LONG)),\n@@ -390,1 +390,1 @@\n-                                            List.of(StackMapFrameInfo.SimpleVerificationTypeInfo.ITEM_LONG),\n+                                            List.of(StackMapFrameInfo.SimpleVerificationTypeInfo.LONG),\n","filename":"test\/jdk\/jdk\/classfile\/StackMapsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.lang.classfile.constantpool.PoolEntry;\n@@ -119,1 +120,1 @@\n-            0, 0, 0, 0, 0, 2, ClassFile.TAG_INTEGER, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0});\n+            0, 0, 0, 0, 0, 2, PoolEntry.TAG_INTEGER, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0});\n","filename":"test\/jdk\/jdk\/classfile\/VerifierSelfTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,2 +25,0 @@\n-import java.io.IOException;\n-import java.io.StringWriter;\n@@ -31,4 +29,0 @@\n-import java.nio.file.Path;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collection;\n@@ -36,1 +30,0 @@\n-import java.util.Iterator;\n@@ -39,1 +32,0 @@\n-import java.util.NoSuchElementException;\n@@ -56,1 +48,0 @@\n-import static java.lang.classfile.ClassFile.*;\n@@ -58,0 +49,1 @@\n+import static java.lang.classfile.constantpool.PoolEntry.*;\n@@ -59,0 +51,1 @@\n+import static jdk.internal.classfile.impl.RawBytecodeHelper.*;\n@@ -919,1 +912,1 @@\n-                case TAG_INTERFACEMETHODREF ->\n+                case TAG_INTERFACE_METHODREF ->\n@@ -921,1 +914,1 @@\n-                case TAG_NAMEANDTYPE ->\n+                case TAG_NAME_AND_TYPE ->\n@@ -923,1 +916,1 @@\n-                case TAG_METHODHANDLE ->\n+                case TAG_METHOD_HANDLE ->\n@@ -925,1 +918,1 @@\n-                case TAG_METHODTYPE ->\n+                case TAG_METHOD_TYPE ->\n@@ -927,1 +920,1 @@\n-                case TAG_CONSTANTDYNAMIC ->\n+                case TAG_DYNAMIC ->\n@@ -929,1 +922,1 @@\n-                case TAG_INVOKEDYNAMIC ->\n+                case TAG_INVOKE_DYNAMIC ->\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/ClassRecord.java","additions":8,"deletions":15,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -538,0 +538,22 @@\n+\/*\n+ * @test id=ssltlsrootecc2022\n+ * @bug 8341057\n+ * @summary Interoperability tests with SSL TLS 2022 root CAs\n+ * @library \/test\/lib\n+ * @build jtreg.SkippedException ValidatePathWithURL CAInterop\n+ * @run main\/othervm\/manual -Djava.security.debug=certpath,ocsp CAInterop ssltlsrootecc2022 DEFAULT\n+ * @run main\/othervm\/manual -Djava.security.debug=certpath,ocsp -Dcom.sun.security.ocsp.useget=false CAInterop ssltlsrootecc2022 DEFAULT\n+ * @run main\/othervm\/manual -Djava.security.debug=certpath CAInterop ssltlsrootecc2022 CRL\n+ *\/\n+\n+\/*\n+ * @test id=ssltlsrootrsa2022\n+ * @bug 8341057\n+ * @summary Interoperability tests with SSL TLS 2022 root CAs\n+ * @library \/test\/lib\n+ * @build jtreg.SkippedException ValidatePathWithURL CAInterop\n+ * @run main\/othervm\/manual -Djava.security.debug=certpath,ocsp CAInterop ssltlsrootrsa2022 DEFAULT\n+ * @run main\/othervm\/manual -Djava.security.debug=certpath,ocsp -Dcom.sun.security.ocsp.useget=false CAInterop ssltlsrootrsa2022 DEFAULT\n+ * @run main\/othervm\/manual -Djava.security.debug=certpath CAInterop ssltlsrootrsa2022 CRL\n+ *\/\n+\n@@ -716,0 +738,7 @@\n+            case \"ssltlsrootecc2022\" ->\n+                    new CATestURLs(\"https:\/\/test-root-2022-ecc.ssl.com\",\n+                            \"https:\/\/revoked-root-2022-ecc.ssl.com\");\n+            case \"ssltlsrootrsa2022\" ->\n+                    new CATestURLs(\"https:\/\/test-root-2022-rsa.ssl.com\",\n+                            \"https:\/\/revoked-root-2022-rsa.ssl.com\");\n+\n","filename":"test\/jdk\/security\/infra\/java\/security\/cert\/CertPathValidator\/certification\/CAInterop.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4286726\n+ * @summary Java2D raster printing: large text may overflow glyph cache.\n+ *          Draw a large glyphvector, the 'A' glyph should appear and not get flushed.\n+*\/\n+\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.RenderingHints;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.geom.Point2D;\n+import java.awt.image.BufferedImage;\n+import java.util.HashMap;\n+\n+\/**\n+ * Draw a very large glyphvector on a surface.\n+ * If the cache was flushed the first glyph is not rendered.\n+ * Note: the implementation no longer uses glyphs for rendering large text,\n+ * but in principle the test is still useful.\n+ *\/\n+public class CacheFlushTest {\n+\n+    static final int WIDTH = 400, HEIGHT = 600;\n+    static final int FONTSIZE = 250;\n+    static final String TEST = \"ABCDEFGHIJKLMNOP\";\n+    static final HashMap<RenderingHints.Key, Object> HINTS = new HashMap<>();\n+\n+    static {\n+      HINTS.put(RenderingHints.KEY_ANTIALIASING,\n+                RenderingHints.VALUE_ANTIALIAS_ON);\n+      HINTS.put(RenderingHints.KEY_TEXT_ANTIALIASING,\n+                RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\n+      HINTS.put(RenderingHints.KEY_FRACTIONALMETRICS,\n+                RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n+    }\n+\n+    public static void main(String args[]) {\n+        BufferedImage bi = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);\n+\n+        Graphics2D g2d = bi.createGraphics();\n+        g2d.addRenderingHints(HINTS);\n+        g2d.setColor(Color.white);\n+        g2d.fillRect(0, 0, WIDTH, HEIGHT);\n+        g2d.setColor(Color.black);\n+\n+        FontRenderContext frc = g2d.getFontRenderContext();\n+        Font font = new Font(Font.DIALOG, Font.PLAIN, 250);\n+        GlyphVector gv = font.createGlyphVector(frc, TEST);\n+\n+        \/* Set the positions of all but the first glyph to be offset vertically but\n+         * FONTSIZE pixels. So if the first glyph \"A\" is not flushed we can tell this\n+         * by checking for non-white pixels in the range for the default y offset of 0\n+         * from the specified y location.\n+         *\/\n+        Point2D.Float pt = new Point2D.Float(20f, FONTSIZE);\n+        for (int i = 1; i < gv.getNumGlyphs(); ++i) {\n+            gv.setGlyphPosition(i, pt);\n+            pt.x += 25f;\n+            pt.y = FONTSIZE;\n+        }\n+        g2d.drawGlyphVector(gv, 20, FONTSIZE);\n+        \/* Now expect to find at least one black pixel in the rect (0,0) -> (WIDTH, FONTSIZE) *\/\n+        boolean found = false;\n+        int blackPixel = Color.black.getRGB();\n+        for (int y = 0; y < FONTSIZE; y++) {\n+            for (int x = 0; x < WIDTH; x++) {\n+                if (bi.getRGB(x, y) == blackPixel) {\n+                    found = true;\n+                    break;\n+                }\n+            }\n+            if (found == true) {\n+                break;\n+            }\n+        }\n+        if (!found) {\n+            throw new RuntimeException(\"NO BLACK PIXELS\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/awt\/font\/CacheFlushTest.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,215 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4198081\n+ * @key headful\n+ * @summary Arabic characters should appear instead of boxes and be correctly shaped.\n+ *          Hebrew characters should appear instead of boxes.\n+ *          Test is made headful so there's no excuse for test systems not having the fonts.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.GridLayout;\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.geom.Rectangle2D;\n+\n+public class TestArabicHebrew extends Panel {\n+\n+    static volatile Frame frame;\n+    static volatile Font font = new Font(Font.DIALOG, Font.PLAIN, 36);\n+\n+    static void createUI() {\n+        frame = new Frame(\"Test Arabic\/Hebrew\");\n+        frame.setLayout(new BorderLayout());\n+        TestArabicHebrew panel = new TestArabicHebrew();\n+        frame.add(panel, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String args[]) throws Exception {\n+        EventQueue.invokeAndWait(TestArabicHebrew::createUI);\n+        try {\n+             checkStrings();\n+        } finally {\n+           if (frame != null && args.length == 0) {\n+               EventQueue.invokeAndWait(frame::dispose);\n+           }\n+        }\n+    }\n+\n+    static void checkString(String script, String str) {\n+        int index = font.canDisplayUpTo(str);\n+        if (index != -1) {\n+            throw new RuntimeException(\"Cannot display char \" +  index + \" for \" + script);\n+        }\n+    }\n+\n+    static void checkStrings() {\n+        checkString(\"Arabic\", arabic);\n+        checkString(\"Hebrew\", hebrew);\n+        checkString(\"Latin-1 Supplement\", latin1sup);\n+    }\n+\n+    \/\/ Table of arabic unicode characters - minimal support level\n+    \/\/ Includes arabic chars from basic block up to 0652 and\n+    \/\/ corresponding shaped characters from the arabic\n+    \/\/ extended-B block from fe80 to fefc (does include lam-alef\n+    \/\/ ligatures).\n+    \/\/ Does not include arabic-indic digits nor \"arabic extended\"\n+    \/\/ range.\n+\n+    static final String arabic =\n+    \"\\u060c\\u061b\\u061f\\u0621\\u0622\\u0623\\u0624\\u0625\\u0626\\u0627\"\n+    + \"\\u0628\\u0629\\u062a\\u062b\\u062c\\u062d\\u062e\\u062f\\u0630\\u0631\"\n+    + \"\\u0632\\u0633\\u0634\\u0635\\u0636\\u0637\\u0638\\u0639\\u063a\\u0640\"\n+    + \"\\u0641\\u0642\\u0643\\u0644\\u0645\\u0646\\u0647\\u0648\\u0649\\u064a\"\n+    + \"\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650\\u0651\\u0652\\ufe80\\ufe81\"\n+    + \"\\ufe82\\ufe83\\ufe84\\ufe85\\ufe86\\ufe87\\ufe88\\ufe89\\ufe8a\\ufe8b\"\n+    + \"\\ufe8c\\ufe8d\\ufe8e\\ufe8f\\ufe90\\ufe91\\ufe92\\ufe93\\ufe94\\ufe95\"\n+    + \"\\ufe96\\ufe97\\ufe98\\ufe99\\ufe9a\\ufe9b\\ufe9c\\ufe9d\\ufe9e\\ufe9f\"\n+    + \"\\ufea0\\ufea1\\ufea2\\ufea3\\ufea4\\ufea5\\ufea6\\ufea7\\ufea8\\ufea9\"\n+    + \"\\ufeaa\\ufeab\\ufeac\\ufead\\ufeae\\ufeaf\\ufeb0\\ufeb1\\ufeb2\\ufeb3\"\n+    + \"\\ufeb4\\ufeb5\\ufeb6\\ufeb7\\ufeb8\\ufeb9\\ufeba\\ufebb\\ufebc\\ufebd\"\n+    + \"\\ufebe\\ufebf\\ufec0\\ufec1\\ufec2\\ufec3\\ufec4\\ufec5\\ufec6\\ufec7\"\n+    + \"\\ufec8\\ufec9\\ufeca\\ufecb\\ufecc\\ufecd\\ufece\\ufecf\\ufed0\\ufed1\"\n+    + \"\\ufed2\\ufed3\\ufed4\\ufed5\\ufed6\\ufed7\\ufed8\\ufed9\\ufeda\\ufedb\"\n+    + \"\\ufedc\\ufedd\\ufede\\ufedf\\ufee0\\ufee1\\ufee2\\ufee3\\ufee4\\ufee5\"\n+    + \"\\ufee6\\ufee7\\ufee8\\ufee9\\ufeea\\ufeeb\\ufeec\\ufeed\\ufeee\\ufeef\"\n+    + \"\\ufef0\\ufef1\\ufef2\\ufef3\\ufef4\\ufef5\\ufef6\\ufef7\\ufef8\\ufef9\"\n+    + \"\\ufefa\\ufefb\\ufefc\";\n+\n+    \/\/ hebrew table includes all characters in hebrew block\n+\n+    static final String hebrew =\n+    \"\\u0591\\u0592\\u0593\\u0594\\u0595\\u0596\\u0597\\u0598\\u0599\\u059a\"\n+    + \"\\u059b\\u059c\\u059d\\u059e\\u059f\\u05a0\\u05a1\\u05a3\\u05a4\\u05a5\"\n+    + \"\\u05a6\\u05a7\\u05a8\\u05a9\\u05aa\\u05ab\\u05ac\\u05ad\\u05ae\\u05af\"\n+    + \"\\u05b0\\u05b1\\u05b2\\u05b3\\u05b4\\u05b5\\u05b6\\u05b7\\u05b8\\u05b9\"\n+    + \"\\u05bb\\u05bc\\u05bd\\u05be\\u05bf\\u05c0\\u05c1\\u05c2\\u05c3\\u05c4\"\n+    + \"\\u05d0\\u05d1\\u05d2\\u05d3\\u05d4\\u05d5\\u05d6\\u05d7\\u05d8\\u05d9\"\n+    + \"\\u05da\\u05db\\u05dc\\u05dd\\u05de\\u05df\\u05e0\\u05e1\\u05e2\\u05e3\"\n+    + \"\\u05e4\\u05e5\\u05e6\\u05e7\\u05e8\\u05e9\\u05ea\\u05f0\\u05f1\\u05f2\"\n+    + \"\\u05f3\\u05f4\";\n+\n+    \/\/ latin 1 supplement table includes all non-control characters\n+    \/\/ in this range.  Included because of comment in code that claims\n+    \/\/ some problems displaying this range with some SJIS fonts.\n+\n+    static final String latin1sup =\n+    \"\\u00a0\\u00a1\\u00a2\\u00a3\\u00a4\\u00a5\\u00a6\\u00a7\"\n+    + \"\\u00a8\\u00a9\\u00aa\\u00ab\\u00ac\\u00ad\\u00ae\\u00af\\u00b0\\u00b1\"\n+    + \"\\u00b2\\u00b3\\u00b4\\u00b5\\u00b6\\u00b7\\u00b8\\u00b9\\u00ba\\u00bb\"\n+    + \"\\u00bc\\u00bd\\u00be\\u00bf\\u00c0\\u00c1\\u00c2\\u00c3\\u00c4\\u00c5\"\n+    + \"\\u00c6\\u00c7\\u00c8\\u00c9\\u00ca\\u00cb\\u00cc\\u00cd\\u00ce\\u00cf\"\n+    + \"\\u00d0\\u00d1\\u00d2\\u00d3\\u00d4\\u00d5\\u00d6\\u00d7\\u00d8\\u00d9\"\n+    + \"\\u00da\\u00db\\u00dc\\u00dd\\u00de\\u00df\\u00e0\\u00e1\\u00e2\\u00e3\"\n+    + \"\\u00e4\\u00e5\\u00e6\\u00e7\\u00e8\\u00e9\\u00ea\\u00eb\\u00ec\\u00ed\"\n+    + \"\\u00ee\\u00ef\\u00f0\\u00f1\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u00f7\"\n+    + \"\\u00f8\\u00f9\\u00fa\\u00fb\\u00fc\\u00fd\\u00fe\\u00ff\";\n+\n+    public TestArabicHebrew() {\n+        setLayout(new GridLayout(3, 1));\n+\n+        FontRenderContext frc = new FontRenderContext(null, false, false);\n+        add(new SubGlyphPanel(\"Arabic\", arabic, font, frc));\n+        add(new SubGlyphPanel(\"Hebrew\", hebrew, font, frc));\n+        add(new SubGlyphPanel(\"Latin-1 Supplement\", latin1sup, font, frc));\n+    }\n+\n+  static class SubGlyphPanel extends Panel {\n+      String title;\n+      Dimension extent;\n+      GlyphVector[] vectors;\n+\n+      static final int kGlyphsPerLine = 20;\n+\n+      SubGlyphPanel(String title, String chars, Font font, FontRenderContext frc) {\n+\n+          this.title = title;\n+          setBackground(Color.white);\n+\n+          double width = 0;\n+          double height = 0;\n+\n+          int max = chars.length();\n+          vectors = new GlyphVector[(max + kGlyphsPerLine - 1) \/ kGlyphsPerLine];\n+          for (int i = 0; i < vectors.length; i++) {\n+              int start = i * 20;\n+              int limit = Math.min(max, (i + 1) * kGlyphsPerLine);\n+              String substr = \"\";\n+              for (int j = start; j < limit; ++j) {\n+                  substr = substr.concat(chars.charAt(j) + \" \");\n+              }\n+              GlyphVector gv = font.createGlyphVector(frc, substr);\n+              vectors[i] = gv;\n+              Rectangle2D bounds = gv.getLogicalBounds();\n+\n+              width = Math.max(width, bounds.getWidth());\n+              height += bounds.getHeight();\n+          }\n+\n+          extent = new Dimension((int)(width + 1), (int)(height + 1 + 30)); \/\/ room for title\n+\n+          setSize(getPreferredSize());\n+    }\n+\n+    public Dimension getPreferredSize() {\n+        return new Dimension(extent);\n+    }\n+\n+    public Dimension getMinimumSize() {\n+        return getPreferredSize();\n+    }\n+\n+    public Dimension getMaximumSize() {\n+        return getPreferredSize();\n+    }\n+\n+    public void paint(Graphics g) {\n+        Graphics2D g2d = (Graphics2D)g;\n+\n+        g.drawString(title, 10, 20);\n+\n+        float x = 10;\n+        float y = 30;\n+        for (int i = 0; i < vectors.length; ++i) {\n+            GlyphVector gv = vectors[i];\n+            Rectangle2D bounds = gv.getLogicalBounds();\n+            g2d.drawGlyphVector(gv, x, (float)(y - bounds.getY()));\n+            y += bounds.getHeight();\n+        }\n+    }\n+  }\n+}\n","filename":"test\/jdk\/sun\/awt\/font\/TestArabicHebrew.java","additions":215,"deletions":0,"binary":false,"changes":215,"status":"added"},{"patch":"@@ -0,0 +1,155 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4269775\n+ * @summary Check that different text rendering APIs agree\n+ *\/\n+\n+\/**\n+ * Draw into an image rendering the same text string nine different\n+ * ways: as a TextLayout, a simple String, and a GlyphVector, each\n+ * with three different x scale factors. The expectation is that each\n+ * set of three strings would appear the same although offset in y to\n+ * avoid overlap. The bug was that the y positions of the individual characters\n+ * of the TextLayout and GlyphVector were wrong, so the strings appeared\n+ * to be rendered at different angles.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.RenderingHints;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.font.TextLayout;\n+import java.awt.geom.AffineTransform;\n+import java.awt.image.BufferedImage;\n+import java.util.HashMap;\n+\n+public class TestDevTransform {\n+\n+    static HashMap<RenderingHints.Key, Object> hints = new HashMap<>();\n+\n+    static {\n+      hints.put(RenderingHints.KEY_ANTIALIASING,\n+                RenderingHints.VALUE_ANTIALIAS_ON);\n+      hints.put(RenderingHints.KEY_TEXT_ANTIALIASING,\n+                RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\n+      hints.put(RenderingHints.KEY_FRACTIONALMETRICS,\n+                RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n+    }\n+\n+    static String test = \"This is only a test\";\n+    static double angle = Math.PI \/ 6.0;  \/\/ Rotate 30 degrees\n+    static final int W = 400, H = 400;\n+\n+    static void draw(Graphics2D g2d, TextLayout layout,\n+                      float x, float y, float scalex) {\n+        AffineTransform saveTransform = g2d.getTransform();\n+        g2d.translate(x, y);\n+        g2d.rotate(angle);\n+        g2d.scale(scalex, 1f);\n+        layout.draw(g2d, 0f, 0f);\n+        g2d.setTransform(saveTransform);\n+      }\n+\n+    static void draw(Graphics2D g2d, String string,\n+                      float x, float y, float scalex) {\n+      AffineTransform saveTransform = g2d.getTransform();\n+      g2d.translate(x, y);\n+      g2d.rotate(angle);\n+      g2d.scale(scalex, 1f);\n+      g2d.drawString(string, 0f, 0f);\n+      g2d.setTransform(saveTransform);\n+    }\n+\n+    static void draw(Graphics2D g2d, GlyphVector gv,\n+                      float x, float y, float scalex) {\n+        AffineTransform saveTransform = g2d.getTransform();\n+        g2d.translate(x, y);\n+        g2d.rotate(angle);\n+        g2d.scale(scalex, 1f);\n+        g2d.drawGlyphVector(gv, 0f, 0f);\n+        g2d.setTransform(saveTransform);\n+      }\n+\n+    static void init(Graphics2D g2d) {\n+         g2d.setColor(Color.white);\n+         g2d.fillRect(0, 0, W, H);\n+         g2d.setColor(Color.black);\n+         g2d.scale(1.481f, 1.481);   \/\/ Convert to 108 dpi\n+         g2d.addRenderingHints(hints);\n+         Font font = new Font(Font.DIALOG, Font.PLAIN, 12);\n+         g2d.setFont(font);\n+    }\n+\n+    static void compare(BufferedImage bi1, BufferedImage bi2) {\n+        for (int x = 0; x < bi1.getWidth(); x++) {\n+            for (int y = 0; y < bi1.getHeight(); y++) {\n+                if (bi1.getRGB(x, y) != bi2.getRGB(x, y)) {\n+                    throw new RuntimeException(\"Different rendering\");\n+                }\n+            }\n+        }\n+    }\n+\n+    public static void main(String args[]) {\n+\n+      BufferedImage tl_Image = new BufferedImage(W, H, BufferedImage.TYPE_INT_RGB);\n+      {\n+          Graphics2D tl_g2d = tl_Image.createGraphics();\n+          init(tl_g2d);\n+          FontRenderContext frc = tl_g2d.getFontRenderContext();\n+          \/\/ Specify font from graphics to be sure it is the same as the other cases.\n+          TextLayout tl = new TextLayout(test, tl_g2d.getFont(), frc);\n+          draw(tl_g2d, tl, 10f, 12f, 3.0f);\n+          draw(tl_g2d, tl, 10f, 24f, 1.0f);\n+          draw(tl_g2d, tl, 10f, 36f, 0.33f);\n+      }\n+\n+      BufferedImage st_Image = new BufferedImage(400, 400, BufferedImage.TYPE_INT_RGB);\n+      {\n+          Graphics2D st_g2d = st_Image.createGraphics();\n+          init(st_g2d);\n+          draw(st_g2d, test, 10f, 12f, 3.0f);\n+          draw(st_g2d, test, 10f, 24f, 1.0f);\n+          draw(st_g2d, test, 10f, 36f, .33f);\n+      }\n+\n+      BufferedImage gv_Image = new BufferedImage(400, 400, BufferedImage.TYPE_INT_RGB);\n+      {\n+          Graphics2D gv_g2d = gv_Image.createGraphics();\n+          init(gv_g2d);\n+          FontRenderContext frc = gv_g2d.getFontRenderContext();\n+          GlyphVector gv = gv_g2d.getFont().createGlyphVector(frc, test);\n+          draw(gv_g2d, gv, 10f, 12f, 3.0f);\n+          draw(gv_g2d, gv, 10f, 24f, 1.0f);\n+          draw(gv_g2d, gv, 10f, 36f, .33f);\n+      }\n+\n+      compare(tl_Image, st_Image);\n+      compare(gv_Image, st_Image);\n+  }\n+}\n","filename":"test\/jdk\/sun\/awt\/font\/TestDevTransform.java","additions":155,"deletions":0,"binary":false,"changes":155,"status":"added"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4277201\n+ * @summary verifies that invoking a fill on a brand new Graphics object\n+ *          does not stroke the shape in addition to filling it\n+ * @key headful\n+ *\/\n+\n+\/*\n+ * This test case tests for a problem with initializing GDI graphics\n+ * contexts (HDCs) where a pen is left installed in the graphics object\n+ * even though the AWT believes that there is no Pen installed.  The\n+ * result is that when you try to fill a shape, GDI will both fill and\n+ * stroke it.\n+*\/\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+\n+public class TestPen extends Panel {\n+\n+    static volatile TestPen pen;\n+    static volatile Frame frame;\n+\n+    public TestPen() {\n+        setForeground(Color.black);\n+        setBackground(Color.white);\n+    }\n+\n+    public Dimension getPreferredSize() {\n+        return new Dimension(200, 200);\n+    }\n+\n+    public void paint(Graphics g) {\n+        g.setColor(Color.green);\n+        g.fillOval(50, 50, 100, 100);\n+    }\n+\n+   static void createUI() {\n+        frame = new Frame();\n+        pen = new TestPen();\n+        frame.add(pen);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String argv[]) throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(TestPen::createUI);\n+            Robot robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(2000);\n+            Point p = pen.getLocationOnScreen();\n+            Dimension d = pen.getSize();\n+            Rectangle r = new Rectangle(p.x + 1, p.y + 1, d.width - 2, d.height - 2);\n+            BufferedImage bi = robot.createScreenCapture(r);\n+            int blackPixel = Color.black.getRGB();\n+            for (int y = 0; y < bi.getHeight(); y++ ) {\n+                for (int x = 0; x < bi.getWidth(); x++ ) {\n+                    if (bi.getRGB(x, y) == blackPixel) {\n+                        throw new RuntimeException(\"Black pixel !\");\n+                    }\n+                }\n+            }\n+        } finally {\n+            if (frame != null) {\n+                EventQueue.invokeAndWait(frame::dispose);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/awt\/windows\/TestPen.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -22,1 +22,0 @@\n- *\n@@ -25,1 +24,1 @@\n-\/**\n+\/*\n@@ -32,1 +31,1 @@\n- *      8321408 8316138\n+ *      8321408 8316138 8341057\n@@ -51,1 +50,1 @@\n-    private static final int COUNT = 110;\n+    private static final int COUNT = 112;\n@@ -56,1 +55,1 @@\n-            = \"BD:80:65:81:68:E5:6C:51:64:ED:B9:08:53:9F:BB:2F:D9:6C:5D:D4:06:D4:16:59:39:10:8E:F8:24:81:8B:78\";\n+            = \"21:68:E7:16:5B:94:23:D2:60:5C:BB:F2:AF:C1:66:5C:EC:36:BC:20:FF:5C:54:AF:91:D1:2C:38:AE:55:D3:27\";\n@@ -285,0 +284,4 @@\n+            put(\"ssltlsrootecc2022 [jdk]\",\n+                    \"C3:2F:FD:9F:46:F9:36:D1:6C:36:73:99:09:59:43:4B:9A:D6:0A:AF:BB:9E:7C:F3:36:54:F1:44:CC:1B:A1:43\");\n+            put(\"ssltlsrootrsa2022 [jdk]\",\n+                    \"8F:AF:7D:2E:2C:B4:70:9B:B8:E0:B3:36:66:BF:75:A5:DD:45:B5:DE:48:0F:8E:A8:D4:BF:E6:BE:BC:17:F2:ED\");\n","filename":"test\/jdk\/sun\/security\/lib\/cacerts\/VerifyCACerts.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1,249 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.io.*;\n-import java.math.BigInteger;\n-import java.security.*;\n-import java.security.cert.*;\n-import java.time.*;\n-import java.util.*;\n-import javax.net.ssl.*;\n-import sun.security.validator.Validator;\n-import sun.security.validator.ValidatorException;\n-\n-import jdk.test.lib.security.SecurityUtils;\n-\n-\/**\n- * @test\n- * @bug 8337664\n- * @summary Check that TLS Server certificates chaining back to distrusted\n- *          Entrust roots are invalid\n- * @library \/test\/lib\n- * @modules java.base\/sun.security.validator\n- * @run main\/othervm Distrust after policyOn invalid\n- * @run main\/othervm Distrust after policyOff valid\n- * @run main\/othervm Distrust before policyOn valid\n- * @run main\/othervm Distrust before policyOff valid\n- *\/\n-\n-public class Distrust {\n-\n-    private static final String TEST_SRC = System.getProperty(\"test.src\", \".\");\n-    private static CertificateFactory cf;\n-\n-    \/\/ Each of the roots have a test certificate chain stored in a file\n-    \/\/ named \"<root>-chain.pem\".\n-    private static String[] rootsToTest = new String[] {\n-        \"entrustevca\", \"entrustrootcaec1\", \"entrustrootcag2\", \"entrustrootcag4\",\n-        \"entrust2048ca\", \"affirmtrustcommercialca\", \"affirmtrustnetworkingca\",\n-        \"affirmtrustpremiumca\", \"affirmtrustpremiumeccca\" };\n-\n-    \/\/ A date that is after the restrictions take effect\n-    private static final Date NOVEMBER_1_2024 =\n-        Date.from(LocalDate.of(2024, 11, 1)\n-                           .atStartOfDay(ZoneOffset.UTC)\n-                           .toInstant());\n-\n-    \/\/ A date that is a second before the restrictions take effect\n-    private static final Date BEFORE_NOVEMBER_1_2024 =\n-        Date.from(LocalDate.of(2024, 11, 1)\n-                           .atStartOfDay(ZoneOffset.UTC)\n-                           .minusSeconds(1)\n-                           .toInstant());\n-\n-    public static void main(String[] args) throws Exception {\n-\n-        cf = CertificateFactory.getInstance(\"X.509\");\n-\n-        boolean before = args[0].equals(\"before\");\n-        boolean policyOn = args[1].equals(\"policyOn\");\n-        boolean isValid = args[2].equals(\"valid\");\n-\n-        if (!policyOn) {\n-            \/\/ disable policy (default is on)\n-            Security.setProperty(\"jdk.security.caDistrustPolicies\", \"\");\n-        }\n-\n-        Date notBefore = before ? BEFORE_NOVEMBER_1_2024 : NOVEMBER_1_2024;\n-\n-        X509TrustManager pkixTM = getTMF(\"PKIX\", null);\n-        X509TrustManager sunX509TM = getTMF(\"SunX509\", null);\n-        for (String test : rootsToTest) {\n-            System.err.println(\"Testing \" + test);\n-            X509Certificate[] chain = loadCertificateChain(test);\n-\n-            testTM(sunX509TM, chain, notBefore, isValid);\n-            testTM(pkixTM, chain, notBefore, isValid);\n-        }\n-    }\n-\n-    private static X509TrustManager getTMF(String type,\n-            PKIXBuilderParameters params) throws Exception {\n-        TrustManagerFactory tmf = TrustManagerFactory.getInstance(type);\n-        if (params == null) {\n-            tmf.init((KeyStore)null);\n-        } else {\n-            tmf.init(new CertPathTrustManagerParameters(params));\n-        }\n-        TrustManager[] tms = tmf.getTrustManagers();\n-        for (TrustManager tm : tms) {\n-            X509TrustManager xtm = (X509TrustManager)tm;\n-            return xtm;\n-        }\n-        throw new Exception(\"No TrustManager for \" + type);\n-    }\n-\n-    private static PKIXBuilderParameters getParams() throws Exception {\n-        PKIXBuilderParameters pbp =\n-            new PKIXBuilderParameters(SecurityUtils.getCacertsKeyStore(),\n-                                      new X509CertSelector());\n-        pbp.setRevocationEnabled(false);\n-        return pbp;\n-    }\n-\n-    private static void testTM(X509TrustManager xtm, X509Certificate[] chain,\n-                               Date notBefore, boolean valid) throws Exception {\n-        \/\/ Check if TLS Server certificate (the first element of the chain)\n-        \/\/ is issued after the specified notBefore date (should be rejected\n-        \/\/ unless distrust property is false). To do this, we need to\n-        \/\/ fake the notBefore date since none of the test certs are issued\n-        \/\/ after then.\n-        chain[0] = new DistrustedTLSServerCert(chain[0], notBefore);\n-\n-        try {\n-            xtm.checkServerTrusted(chain, \"ECDHE_RSA\");\n-            if (!valid) {\n-                throw new Exception(\"chain should be invalid\");\n-            }\n-        } catch (CertificateException ce) {\n-            \/\/ expired TLS certificates should not be treated as failure\n-            if (expired(ce)) {\n-                System.err.println(\"Test is N\/A, chain is expired\");\n-                return;\n-            }\n-            if (valid) {\n-                throw new Exception(\"Unexpected exception, chain \" +\n-                                    \"should be valid\", ce);\n-            }\n-            if (ce instanceof ValidatorException) {\n-                ValidatorException ve = (ValidatorException)ce;\n-                if (ve.getErrorType() != ValidatorException.T_UNTRUSTED_CERT) {\n-                    ce.printStackTrace(System.err);\n-                    throw new Exception(\"Unexpected exception: \" + ce);\n-                }\n-            } else {\n-                throw new Exception(\"Unexpected exception: \" + ce);\n-            }\n-        }\n-    }\n-\n-    \/\/ check if a cause of exception is an expired cert\n-    private static boolean expired(CertificateException ce) {\n-        if (ce instanceof CertificateExpiredException) {\n-            return true;\n-        }\n-        Throwable t = ce.getCause();\n-        while (t != null) {\n-            if (t instanceof CertificateExpiredException) {\n-                return true;\n-            }\n-            t = t.getCause();\n-        }\n-        return false;\n-    }\n-\n-    private static X509Certificate[] loadCertificateChain(String name)\n-            throws Exception {\n-        try (InputStream in = new FileInputStream(TEST_SRC + File.separator +\n-                                                  name + \"-chain.pem\")) {\n-            Collection<X509Certificate> certs =\n-                (Collection<X509Certificate>)cf.generateCertificates(in);\n-            return certs.toArray(new X509Certificate[0]);\n-        }\n-    }\n-\n-    private static class DistrustedTLSServerCert extends X509Certificate {\n-        private final X509Certificate cert;\n-        private final Date notBefore;\n-        DistrustedTLSServerCert(X509Certificate cert, Date notBefore) {\n-            this.cert = cert;\n-            this.notBefore = notBefore;\n-        }\n-        public Set<String> getCriticalExtensionOIDs() {\n-           return cert.getCriticalExtensionOIDs();\n-        }\n-        public byte[] getExtensionValue(String oid) {\n-            return cert.getExtensionValue(oid);\n-        }\n-        public Set<String> getNonCriticalExtensionOIDs() {\n-            return cert.getNonCriticalExtensionOIDs();\n-        }\n-        public boolean hasUnsupportedCriticalExtension() {\n-            return cert.hasUnsupportedCriticalExtension();\n-        }\n-        public void checkValidity() throws CertificateExpiredException,\n-            CertificateNotYetValidException {\n-            \/\/ always pass\n-        }\n-        public void checkValidity(Date date) throws CertificateExpiredException,\n-            CertificateNotYetValidException {\n-            \/\/ always pass\n-        }\n-        public int getVersion() { return cert.getVersion(); }\n-        public BigInteger getSerialNumber() { return cert.getSerialNumber(); }\n-        public Principal getIssuerDN() { return cert.getIssuerDN(); }\n-        public Principal getSubjectDN() { return cert.getSubjectDN(); }\n-        public Date getNotBefore() { return notBefore; }\n-        public Date getNotAfter() { return cert.getNotAfter(); }\n-        public byte[] getTBSCertificate() throws CertificateEncodingException {\n-            return cert.getTBSCertificate();\n-        }\n-        public byte[] getSignature() { return cert.getSignature(); }\n-        public String getSigAlgName() { return cert.getSigAlgName(); }\n-        public String getSigAlgOID() { return cert.getSigAlgOID(); }\n-        public byte[] getSigAlgParams() { return cert.getSigAlgParams(); }\n-        public boolean[] getIssuerUniqueID() {\n-            return cert.getIssuerUniqueID();\n-        }\n-        public boolean[] getSubjectUniqueID() {\n-            return cert.getSubjectUniqueID();\n-        }\n-        public boolean[] getKeyUsage() { return cert.getKeyUsage(); }\n-        public int getBasicConstraints() { return cert.getBasicConstraints(); }\n-        public byte[] getEncoded() throws CertificateEncodingException {\n-            return cert.getEncoded();\n-        }\n-        public void verify(PublicKey key) throws CertificateException,\n-            InvalidKeyException, NoSuchAlgorithmException,\n-            NoSuchProviderException, SignatureException {\n-            cert.verify(key);\n-        }\n-        public void verify(PublicKey key, String sigProvider) throws\n-            CertificateException, InvalidKeyException, NoSuchAlgorithmException,\n-            NoSuchProviderException, SignatureException {\n-            cert.verify(key, sigProvider);\n-        }\n-        public PublicKey getPublicKey() { return cert.getPublicKey(); }\n-        public String toString() { return cert.toString(); }\n-    }\n-}\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Entrust\/Distrust.java","additions":0,"deletions":249,"binary":false,"changes":249,"status":"deleted"},{"patch":"@@ -1,292 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.io.*;\n-import java.math.BigInteger;\n-import java.security.*;\n-import java.security.cert.*;\n-import java.time.*;\n-import java.util.*;\n-import javax.net.ssl.*;\n-import sun.security.validator.Validator;\n-import sun.security.validator.ValidatorException;\n-\n-import jdk.test.lib.security.SecurityUtils;\n-\n-\/**\n- * @test\n- * @bug 8207258 8216280\n- * @summary Check that TLS Server certificates chaining back to distrusted\n- *          Symantec roots are invalid\n- * @library \/test\/lib\n- * @modules java.base\/sun.security.validator\n- * @run main\/othervm Distrust after policyOn invalid\n- * @run main\/othervm Distrust after policyOff valid\n- * @run main\/othervm Distrust before policyOn valid\n- * @run main\/othervm Distrust before policyOff valid\n- *\/\n-\n-public class Distrust {\n-\n-    private static final String TEST_SRC = System.getProperty(\"test.src\", \".\");\n-    private static CertificateFactory cf;\n-\n-    \/\/ Each of the roots have a test certificate chain stored in a file\n-    \/\/ named \"<root>-chain.pem\".\n-    private static String[] rootsToTest = new String[] {\n-        \"geotrustprimarycag2\", \"geotrustprimarycag3\",\n-        \"geotrustuniversalca\", \"thawteprimaryrootca\", \"thawteprimaryrootcag2\",\n-        \"thawteprimaryrootcag3\", \"verisignclass3g3ca\", \"verisignclass3g4ca\",\n-        \"verisignclass3g5ca\", \"verisignuniversalrootca\" };\n-\n-    \/\/ Each of the subCAs with a delayed distrust date have a test certificate\n-    \/\/ chain stored in a file named \"<subCA>-chain.pem\".\n-    private static String[] subCAsToTest = new String[]{\"appleistca8g1\"};\n-\n-    \/\/ A date that is after the restrictions take affect\n-    private static final Date APRIL_17_2019 =\n-        Date.from(LocalDate.of(2019, 4, 17)\n-                           .atStartOfDay(ZoneOffset.UTC)\n-                           .toInstant());\n-\n-    \/\/ A date that is a second before the restrictions take affect\n-    private static final Date BEFORE_APRIL_17_2019 =\n-        Date.from(LocalDate.of(2019, 4, 17)\n-                           .atStartOfDay(ZoneOffset.UTC)\n-                           .minusSeconds(1)\n-                           .toInstant());\n-\n-    \/\/ A date that is after the subCA restrictions take affect\n-    private static final Date JANUARY_1_2020 =\n-        Date.from(LocalDate.of(2020, 1, 1)\n-                           .atStartOfDay(ZoneOffset.UTC)\n-                           .toInstant());\n-\n-    \/\/ A date that is a second before the subCA restrictions take affect\n-    private static final Date BEFORE_JANUARY_1_2020 =\n-        Date.from(LocalDate.of(2020, 1, 1)\n-                           .atStartOfDay(ZoneOffset.UTC)\n-                           .minusSeconds(1)\n-                           .toInstant());\n-\n-    public static void main(String[] args) throws Exception {\n-\n-        cf = CertificateFactory.getInstance(\"X.509\");\n-\n-        boolean before = args[0].equals(\"before\");\n-        boolean policyOn = args[1].equals(\"policyOn\");\n-        boolean isValid = args[2].equals(\"valid\");\n-\n-        if (!policyOn) {\n-            \/\/ disable policy (default is on)\n-            Security.setProperty(\"jdk.security.caDistrustPolicies\", \"\");\n-        }\n-\n-        Date notBefore = before ? BEFORE_APRIL_17_2019 : APRIL_17_2019;\n-\n-        X509TrustManager pkixTM = getTMF(\"PKIX\", null);\n-        X509TrustManager sunX509TM = getTMF(\"SunX509\", null);\n-        for (String test : rootsToTest) {\n-            System.err.println(\"Testing \" + test);\n-            X509Certificate[] chain = loadCertificateChain(test);\n-\n-            testTM(sunX509TM, chain, notBefore, isValid);\n-            testTM(pkixTM, chain, notBefore, isValid);\n-        }\n-\n-        \/\/ test chain if params are passed to TrustManager\n-        System.err.println(\"Testing verisignuniversalrootca with params\");\n-        testTM(getTMF(\"PKIX\", getParams()),\n-               loadCertificateChain(\"verisignuniversalrootca\"),\n-               notBefore, isValid);\n-\n-        \/\/ test code-signing chain (should be valid as restrictions don't apply)\n-        System.err.println(\"Testing verisignclass3g5ca code-signing chain\");\n-        Validator v = Validator.getInstance(Validator.TYPE_PKIX,\n-                                            Validator.VAR_CODE_SIGNING,\n-                                            getParams());\n-        \/\/ set validation date so this will still pass when cert expires\n-        v.setValidationDate(new Date(1544197375493l));\n-        v.validate(loadCertificateChain(\"verisignclass3g5ca-codesigning\"));\n-\n-        \/\/ test chains issued through subCAs\n-        notBefore = before ? BEFORE_JANUARY_1_2020 : JANUARY_1_2020;\n-        for (String test : subCAsToTest) {\n-            System.err.println(\"Testing \" + test);\n-            X509Certificate[] chain = loadCertificateChain(test);\n-\n-            testTM(sunX509TM, chain, notBefore, isValid);\n-            testTM(pkixTM, chain, notBefore, isValid);\n-        }\n-    }\n-\n-    private static X509TrustManager getTMF(String type,\n-            PKIXBuilderParameters params) throws Exception {\n-        TrustManagerFactory tmf = TrustManagerFactory.getInstance(type);\n-        if (params == null) {\n-            tmf.init((KeyStore)null);\n-        } else {\n-            tmf.init(new CertPathTrustManagerParameters(params));\n-        }\n-        TrustManager[] tms = tmf.getTrustManagers();\n-        for (TrustManager tm : tms) {\n-            X509TrustManager xtm = (X509TrustManager)tm;\n-            return xtm;\n-        }\n-        throw new Exception(\"No TrustManager for \" + type);\n-    }\n-\n-    private static PKIXBuilderParameters getParams() throws Exception {\n-        PKIXBuilderParameters pbp =\n-            new PKIXBuilderParameters(SecurityUtils.getCacertsKeyStore(),\n-                                      new X509CertSelector());\n-        pbp.setRevocationEnabled(false);\n-        return pbp;\n-    }\n-\n-    private static void testTM(X509TrustManager xtm, X509Certificate[] chain,\n-                               Date notBefore, boolean valid) throws Exception {\n-        \/\/ Check if TLS Server certificate (the first element of the chain)\n-        \/\/ is issued after the specified notBefore date (should be rejected\n-        \/\/ unless distrust property is false). To do this, we need to\n-        \/\/ fake the notBefore date since none of the test certs are issued\n-        \/\/ after then.\n-        chain[0] = new DistrustedTLSServerCert(chain[0], notBefore);\n-\n-        try {\n-            xtm.checkServerTrusted(chain, \"ECDHE_RSA\");\n-            if (!valid) {\n-                throw new Exception(\"chain should be invalid\");\n-            }\n-        } catch (CertificateException ce) {\n-            \/\/ expired TLS certificates should not be treated as failure\n-            if (expired(ce)) {\n-                System.err.println(\"Test is N\/A, chain is expired\");\n-                return;\n-            }\n-            if (valid) {\n-                throw new Exception(\"Unexpected exception, chain \" +\n-                                    \"should be valid\", ce);\n-            }\n-            if (ce instanceof ValidatorException) {\n-                ValidatorException ve = (ValidatorException)ce;\n-                if (ve.getErrorType() != ValidatorException.T_UNTRUSTED_CERT) {\n-                    ce.printStackTrace(System.err);\n-                    throw new Exception(\"Unexpected exception: \" + ce);\n-                }\n-            } else {\n-                throw new Exception(\"Unexpected exception: \" + ce);\n-            }\n-        }\n-    }\n-\n-    \/\/ check if a cause of exception is an expired cert\n-    private static boolean expired(CertificateException ce) {\n-        if (ce instanceof CertificateExpiredException) {\n-            return true;\n-        }\n-        Throwable t = ce.getCause();\n-        while (t != null) {\n-            if (t instanceof CertificateExpiredException) {\n-                return true;\n-            }\n-            t = t.getCause();\n-        }\n-        return false;\n-    }\n-\n-    private static X509Certificate[] loadCertificateChain(String name)\n-            throws Exception {\n-        try (InputStream in = new FileInputStream(TEST_SRC + File.separator +\n-                                                  name + \"-chain.pem\")) {\n-            Collection<X509Certificate> certs =\n-                (Collection<X509Certificate>)cf.generateCertificates(in);\n-            return certs.toArray(new X509Certificate[0]);\n-        }\n-    }\n-\n-    private static class DistrustedTLSServerCert extends X509Certificate {\n-        private final X509Certificate cert;\n-        private final Date notBefore;\n-        DistrustedTLSServerCert(X509Certificate cert, Date notBefore) {\n-            this.cert = cert;\n-            this.notBefore = notBefore;\n-        }\n-        public Set<String> getCriticalExtensionOIDs() {\n-           return cert.getCriticalExtensionOIDs();\n-        }\n-        public byte[] getExtensionValue(String oid) {\n-            return cert.getExtensionValue(oid);\n-        }\n-        public Set<String> getNonCriticalExtensionOIDs() {\n-            return cert.getNonCriticalExtensionOIDs();\n-        }\n-        public boolean hasUnsupportedCriticalExtension() {\n-            return cert.hasUnsupportedCriticalExtension();\n-        }\n-        public void checkValidity() throws CertificateExpiredException,\n-            CertificateNotYetValidException {\n-            \/\/ always pass\n-        }\n-        public void checkValidity(Date date) throws CertificateExpiredException,\n-            CertificateNotYetValidException {\n-            \/\/ always pass\n-        }\n-        public int getVersion() { return cert.getVersion(); }\n-        public BigInteger getSerialNumber() { return cert.getSerialNumber(); }\n-        public Principal getIssuerDN() { return cert.getIssuerDN(); }\n-        public Principal getSubjectDN() { return cert.getSubjectDN(); }\n-        public Date getNotBefore() { return notBefore; }\n-        public Date getNotAfter() { return cert.getNotAfter(); }\n-        public byte[] getTBSCertificate() throws CertificateEncodingException {\n-            return cert.getTBSCertificate();\n-        }\n-        public byte[] getSignature() { return cert.getSignature(); }\n-        public String getSigAlgName() { return cert.getSigAlgName(); }\n-        public String getSigAlgOID() { return cert.getSigAlgOID(); }\n-        public byte[] getSigAlgParams() { return cert.getSigAlgParams(); }\n-        public boolean[] getIssuerUniqueID() {\n-            return cert.getIssuerUniqueID();\n-        }\n-        public boolean[] getSubjectUniqueID() {\n-            return cert.getSubjectUniqueID();\n-        }\n-        public boolean[] getKeyUsage() { return cert.getKeyUsage(); }\n-        public int getBasicConstraints() { return cert.getBasicConstraints(); }\n-        public byte[] getEncoded() throws CertificateEncodingException {\n-            return cert.getEncoded();\n-        }\n-        public void verify(PublicKey key) throws CertificateException,\n-            InvalidKeyException, NoSuchAlgorithmException,\n-            NoSuchProviderException, SignatureException {\n-            cert.verify(key);\n-        }\n-        public void verify(PublicKey key, String sigProvider) throws\n-            CertificateException, InvalidKeyException, NoSuchAlgorithmException,\n-            NoSuchProviderException, SignatureException {\n-            cert.verify(key, sigProvider);\n-        }\n-        public PublicKey getPublicKey() { return cert.getPublicKey(); }\n-        public String toString() { return cert.toString(); }\n-    }\n-}\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/Distrust.java","additions":0,"deletions":292,"binary":false,"changes":292,"status":"deleted"},{"patch":"@@ -0,0 +1,228 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.*;\n+import java.math.BigInteger;\n+import java.security.*;\n+import java.security.cert.*;\n+import java.time.ZonedDateTime;\n+import java.util.*;\n+import javax.net.ssl.*;\n+import sun.security.validator.Validator;\n+import sun.security.validator.ValidatorException;\n+\n+import jdk.test.lib.security.SecurityUtils;\n+\n+\/**\n+ * Helper class that provides methods to facilitate testing of distrusted roots.\n+ *\/\n+public final class Distrust {\n+\n+    private static final String TEST_SRC = System.getProperty(\"test.src\", \".\");\n+    private static CertificateFactory cf;\n+\n+    private final boolean before;\n+    private final boolean policyOn;\n+    private final boolean isValid;\n+\n+    public Distrust(String[] args) {\n+        before = args[0].equals(\"before\");\n+        policyOn = args[1].equals(\"policyOn\");\n+        isValid = args[2].equals(\"valid\");\n+\n+        if (!policyOn) {\n+            \/\/ disable policy (default is on)\n+            Security.setProperty(\"jdk.security.caDistrustPolicies\", \"\");\n+        }\n+    }\n+\n+    public Date getNotBefore(ZonedDateTime distrustDate) {\n+        ZonedDateTime notBefore = before ? distrustDate.minusSeconds(1) : distrustDate;\n+        return Date.from(notBefore.toInstant());\n+    }\n+\n+    public void testCodeSigningChain(String certPath, String name, Date validationDate)\n+            throws Exception {\n+        System.err.println(\"Testing \" + name + \" code-signing chain\");\n+        Validator v = Validator.getInstance(Validator.TYPE_PKIX,\n+                Validator.VAR_CODE_SIGNING,\n+                getParams());\n+        \/\/ set validation date so this will still pass when cert expires\n+        v.setValidationDate(validationDate);\n+        v.validate(loadCertificateChain(certPath, name));\n+    }\n+\n+    public void testCertificateChain(String certPath, Date notBefore, X509TrustManager[] tms,\n+                                     String... tests) throws Exception {\n+        for (String test : tests) {\n+            System.err.println(\"Testing \" + test);\n+            X509Certificate[] chain = loadCertificateChain(certPath, test);\n+\n+            for (X509TrustManager tm : tms) {\n+                testTM(tm, chain, notBefore, isValid);\n+            }\n+        }\n+    }\n+\n+    public X509TrustManager getTMF(String type, PKIXBuilderParameters params) throws Exception {\n+        TrustManagerFactory tmf = TrustManagerFactory.getInstance(type);\n+        if (params == null) {\n+            tmf.init((KeyStore) null);\n+        } else {\n+            tmf.init(new CertPathTrustManagerParameters(params));\n+        }\n+        TrustManager[] tms = tmf.getTrustManagers();\n+        for (TrustManager tm : tms) {\n+            return (X509TrustManager) tm;\n+        }\n+        throw new RuntimeException(\"No TrustManager for \" + type);\n+    }\n+\n+    public PKIXBuilderParameters getParams() throws Exception {\n+        PKIXBuilderParameters pbp =\n+                new PKIXBuilderParameters(SecurityUtils.getCacertsKeyStore(),\n+                        new X509CertSelector());\n+        pbp.setRevocationEnabled(false);\n+        return pbp;\n+    }\n+\n+    public void testTM(X509TrustManager xtm, X509Certificate[] chain,\n+                              Date notBefore, boolean valid) {\n+        \/\/ Check if TLS Server certificate (the first element of the chain)\n+        \/\/ is issued after the specified notBefore date (should be rejected\n+        \/\/ unless distrust property is false). To do this, we need to\n+        \/\/ fake the notBefore date since none of the test certs are issued\n+        \/\/ after then.\n+        chain[0] = new DistrustedTLSServerCert(chain[0], notBefore);\n+\n+        \/\/ Wrap the intermediate and root CA certs in NonExpiringTLSServerCert\n+        \/\/ so it will never throw a CertificateExpiredException\n+        for (int i = 1; i < chain.length; i++) {\n+            chain[i] = new NonExpiringTLSServerCert(chain[i]);\n+        }\n+\n+        try {\n+            xtm.checkServerTrusted(chain, \"ECDHE_RSA\");\n+            if (!valid) {\n+                throw new RuntimeException(\"chain should be invalid\");\n+            }\n+        } catch (CertificateException ce) {\n+            if (valid) {\n+                throw new RuntimeException(\"Unexpected exception, chain \" +\n+                        \"should be valid\", ce);\n+            }\n+            if (ce instanceof ValidatorException) {\n+                ValidatorException ve = (ValidatorException) ce;\n+                if (ve.getErrorType() != ValidatorException.T_UNTRUSTED_CERT) {\n+                    ce.printStackTrace(System.err);\n+                    throw new RuntimeException(\"Unexpected exception: \" + ce);\n+                }\n+            } else {\n+                throw new RuntimeException(ce);\n+            }\n+        }\n+    }\n+\n+    private X509Certificate[] loadCertificateChain(String certPath, String name)\n+            throws Exception {\n+        if (cf == null) {\n+            cf = CertificateFactory.getInstance(\"X.509\");\n+        }\n+        try (InputStream in = new FileInputStream(TEST_SRC + File.separator + certPath +\n+                File.separator + name + \"-chain.pem\")) {\n+            Collection<X509Certificate> certs =\n+                    (Collection<X509Certificate>) cf.generateCertificates(in);\n+            return certs.toArray(new X509Certificate[0]);\n+        }\n+    }\n+\n+    private static class NonExpiringTLSServerCert extends X509Certificate {\n+        private final X509Certificate cert;\n+        NonExpiringTLSServerCert(X509Certificate cert) {\n+            this.cert = cert;\n+        }\n+        public Set<String> getCriticalExtensionOIDs() {\n+            return cert.getCriticalExtensionOIDs();\n+        }\n+        public byte[] getExtensionValue(String oid) {\n+            return cert.getExtensionValue(oid);\n+        }\n+        public Set<String> getNonCriticalExtensionOIDs() {\n+            return cert.getNonCriticalExtensionOIDs();\n+        }\n+        public boolean hasUnsupportedCriticalExtension() {\n+            return cert.hasUnsupportedCriticalExtension();\n+        }\n+        public void checkValidity() {\n+            \/\/ always pass\n+        }\n+        public void checkValidity(Date date) {\n+            \/\/ always pass\n+        }\n+        public int getVersion() { return cert.getVersion(); }\n+        public BigInteger getSerialNumber() { return cert.getSerialNumber(); }\n+        public Principal getIssuerDN() { return cert.getIssuerDN(); }\n+        public Principal getSubjectDN() { return cert.getSubjectDN(); }\n+        public Date getNotBefore() { return cert.getNotBefore(); }\n+        public Date getNotAfter() { return cert.getNotAfter(); }\n+        public byte[] getTBSCertificate() throws CertificateEncodingException {\n+            return cert.getTBSCertificate();\n+        }\n+        public byte[] getSignature() { return cert.getSignature(); }\n+        public String getSigAlgName() { return cert.getSigAlgName(); }\n+        public String getSigAlgOID() { return cert.getSigAlgOID(); }\n+        public byte[] getSigAlgParams() { return cert.getSigAlgParams(); }\n+        public boolean[] getIssuerUniqueID() {\n+            return cert.getIssuerUniqueID();\n+        }\n+        public boolean[] getSubjectUniqueID() {\n+            return cert.getSubjectUniqueID();\n+        }\n+        public boolean[] getKeyUsage() { return cert.getKeyUsage(); }\n+        public int getBasicConstraints() { return cert.getBasicConstraints(); }\n+        public byte[] getEncoded() throws CertificateEncodingException {\n+            return cert.getEncoded();\n+        }\n+        public void verify(PublicKey key) throws CertificateException,\n+                InvalidKeyException, NoSuchAlgorithmException,\n+                NoSuchProviderException, SignatureException {\n+            cert.verify(key);\n+        }\n+        public void verify(PublicKey key, String sigProvider) throws\n+                CertificateException, InvalidKeyException, NoSuchAlgorithmException,\n+                NoSuchProviderException, SignatureException {\n+            cert.verify(key, sigProvider);\n+        }\n+        public PublicKey getPublicKey() { return cert.getPublicKey(); }\n+        public String toString() { return cert.toString(); }\n+    }\n+\n+    private static class DistrustedTLSServerCert extends NonExpiringTLSServerCert {\n+        private final Date notBefore;\n+        DistrustedTLSServerCert(X509Certificate cert, Date notBefore) {\n+            super(cert);\n+            this.notBefore = notBefore;\n+        }\n+        public Date getNotBefore() { return notBefore; }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/Distrust.java","additions":228,"deletions":0,"binary":false,"changes":228,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.time.*;\n+import java.util.*;\n+import javax.net.ssl.*;\n+\n+\/**\n+ * @test\n+ * @bug 8337664 8341059\n+ * @summary Check that TLS Server certificates chaining back to distrusted\n+ *          Entrust roots are invalid\n+ * @library \/test\/lib\n+ * @modules java.base\/sun.security.validator\n+ * @run main\/othervm Entrust after policyOn invalid\n+ * @run main\/othervm Entrust after policyOff valid\n+ * @run main\/othervm Entrust before policyOn valid\n+ * @run main\/othervm Entrust before policyOff valid\n+ *\/\n+\n+public class Entrust {\n+\n+    private static final String certPath = \"chains\" + File.separator + \"entrust\";\n+\n+    \/\/ Each of the roots have a test certificate chain stored in a file\n+    \/\/ named \"<root>-chain.pem\".\n+    private static String[] rootsToTest = new String[]{\n+            \"entrustevca\", \"entrustrootcaec1\", \"entrustrootcag2\", \"entrustrootcag4\",\n+            \"entrust2048ca\", \"affirmtrustcommercialca\", \"affirmtrustnetworkingca\",\n+            \"affirmtrustpremiumca\", \"affirmtrustpremiumeccca\"};\n+\n+    \/\/ Date when the restrictions take effect\n+    private static final ZonedDateTime DISTRUST_DATE =\n+            LocalDate.of(2024, 11, 12).atStartOfDay(ZoneOffset.UTC);\n+\n+    public static void main(String[] args) throws Exception {\n+        Distrust distrust = new Distrust(args);\n+\n+        X509TrustManager[] tms = new X509TrustManager[]{\n+                distrust.getTMF(\"PKIX\", null),\n+                distrust.getTMF(\"SunX509\", null)\n+        };\n+\n+        Date notBefore = distrust.getNotBefore(DISTRUST_DATE);\n+        distrust.testCertificateChain(certPath, notBefore, tms, rootsToTest);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/Entrust.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.net.ssl.X509TrustManager;\n+import java.io.File;\n+import java.time.*;\n+import java.util.*;\n+\n+\n+\/**\n+ * @test\n+ * @bug 8207258 8216280\n+ * @summary Check that TLS Server certificates chaining back to distrusted\n+ *          Symantec roots are invalid\n+ * @library \/test\/lib\n+ * @modules java.base\/sun.security.validator\n+ * @run main\/othervm Symantec after policyOn invalid\n+ * @run main\/othervm Symantec after policyOff valid\n+ * @run main\/othervm Symantec before policyOn valid\n+ * @run main\/othervm Symantec before policyOff valid\n+ *\/\n+\n+public class Symantec {\n+\n+    private static final String certPath = \"chains\" + File.separator + \"symantec\";\n+\n+    \/\/ Each of the roots have a test certificate chain stored in a file\n+    \/\/ named \"<root>-chain.pem\".\n+    private static final String[] rootsToTest = new String[]{\n+            \"geotrustprimarycag2\", \"geotrustprimarycag3\", \"geotrustuniversalca\",\n+            \"thawteprimaryrootca\", \"thawteprimaryrootcag2\", \"thawteprimaryrootcag3\",\n+            \"verisignclass3g3ca\", \"verisignclass3g4ca\", \"verisignclass3g5ca\",\n+            \"verisignuniversalrootca\"\n+    };\n+\n+    \/\/ Each of the subCAs with a delayed distrust date have a test certificate\n+    \/\/ chain stored in a file named \"<subCA>-chain.pem\".\n+    private static String[] subCAsToTest = new String[]{\"appleistca8g1\"};\n+\n+    \/\/ Date when the restrictions take effect\n+    private static final ZonedDateTime ROOTS_DISTRUST_DATE =\n+            LocalDate.of(2019, 4, 17).atStartOfDay(ZoneOffset.UTC);\n+\n+    \/\/ Date when the subCA restrictions take effect\n+    private static final ZonedDateTime SUBCA_DISTRUST_DATE =\n+            LocalDate.of(2020, 1, 1).atStartOfDay(ZoneOffset.UTC);\n+\n+    public static void main(String[] args) throws Exception {\n+        Distrust distrust = new Distrust(args);\n+        X509TrustManager[] tms = new X509TrustManager[]{\n+                distrust.getTMF(\"PKIX\", null),\n+                distrust.getTMF(\"SunX509\", null)\n+        };\n+\n+        \/\/ test chains issued through roots\n+        Date notBefore = distrust.getNotBefore(ROOTS_DISTRUST_DATE);\n+        distrust.testCertificateChain(certPath, notBefore, tms, rootsToTest);\n+\n+        \/\/ test chain if params are passed to TrustManager\n+        System.err.println(\"Testing verisignuniversalrootca with params\");\n+        X509TrustManager[] tmsParams = new X509TrustManager[]{\n+                distrust.getTMF(\"PKIX\", distrust.getParams())\n+        };\n+        distrust.testCertificateChain(certPath, notBefore, tmsParams,\n+                \"verisignuniversalrootca\");\n+\n+        \/\/ test code-signing chain (should be valid as restrictions don't apply)\n+        Date validationDate = new Date(1544197375493L);\n+        distrust.testCodeSigningChain(certPath, \"verisignclass3g5ca-codesigning\", validationDate);\n+\n+        \/\/ test chains issued through subCAs\n+        notBefore = distrust.getNotBefore(SUBCA_DISTRUST_DATE);\n+        distrust.testCertificateChain(certPath, notBefore, tms, subCAsToTest);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/Symantec.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/entrust\/affirmtrustcommercialca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Entrust\/affirmtrustcommercialca-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/entrust\/affirmtrustnetworkingca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Entrust\/affirmtrustnetworkingca-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/entrust\/affirmtrustpremiumca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Entrust\/affirmtrustpremiumca-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/entrust\/affirmtrustpremiumeccca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Entrust\/affirmtrustpremiumeccca-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/entrust\/entrust2048ca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Entrust\/entrust2048ca-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/entrust\/entrustevca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Entrust\/entrustevca-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/entrust\/entrustrootcaec1-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Entrust\/entrustrootcaec1-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/entrust\/entrustrootcag2-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Entrust\/entrustrootcag2-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/entrust\/entrustrootcag4-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Entrust\/entrustrootcag4-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/appleistca8g1-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/appleistca8g1-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/geotrustprimarycag2-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/geotrustprimarycag2-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/geotrustprimarycag3-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/geotrustprimarycag3-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/geotrustuniversalca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/geotrustuniversalca-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/thawteprimaryrootca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/thawteprimaryrootca-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/thawteprimaryrootcag2-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/thawteprimaryrootcag2-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/thawteprimaryrootcag3-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/thawteprimaryrootcag3-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/verisignclass3g3ca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/verisignclass3g3ca-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/verisignclass3g4ca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/verisignclass3g4ca-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/verisignclass3g5ca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/verisignclass3g5ca-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/verisignclass3g5ca-codesigning-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/verisignclass3g5ca-codesigning-chain.pem","status":"renamed"},{"patch":"","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/distrust\/chains\/symantec\/verisignuniversalrootca-chain.pem","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/Symantec\/verisignuniversalrootca-chain.pem","status":"renamed"},{"patch":"@@ -131,2 +131,1 @@\n-        \/\/ vm.libgraal.enabled is true if libgraal is used as JIT\n-        map.put(\"vm.libgraal.enabled\", this::isLibgraalEnabled);\n+        map.put(\"vm.libgraal.jit\", this::isLibgraalJIT);\n@@ -563,2 +562,2 @@\n-    protected String isLibgraalEnabled() {\n-        return \"\" + Compiler.isLibgraalEnabled();\n+    protected String isLibgraalJIT() {\n+        return \"\" + Compiler.isLibgraalJIT();\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8325090\n+ * @summary javadoc fails when -subpackages option is used with non-modular -source\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.api\n+ *          jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @library \/tools\/lib\n+ * @build toolbox.TestRunner toolbox.ToolBox\n+ * @run main SubpackageNoModules\n+ *\/\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import toolbox.*;\n+import toolbox.Task.Expect;\n+\n+public class SubpackageNoModules extends TestRunner {\n+\n+    final ToolBox tb = new ToolBox();\n+\n+    public SubpackageNoModules() {\n+        super(System.err);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        SubpackageNoModules t = new SubpackageNoModules();\n+        t.runTests(m -> new Object[] { Paths.get(m.getName()) });\n+    }\n+\n+    @Test\n+    public void testSubpackageNoModules(Path base) throws Exception {\n+        Files.createDirectories(base);\n+        tb.writeFile(base.resolve(\"pkg\/A.java\"), \"package pkg;\\npublic class A {}\\n\");\n+\n+        Path outDir = base.resolve(\"out\");\n+        Files.createDirectory(outDir);\n+        \/\/ Combine -subpackages option with -source release that doesn't support modules\n+        new JavadocTask(tb)\n+                .outdir(outDir)\n+                .sourcepath(base)\n+                .options(\"-source\", \"8\",\n+                         \"-subpackages\", \"pkg\")\n+                .run(Expect.SUCCESS);\n+        \/\/ Check for presence of generated docs\n+        if (!Files.isRegularFile(outDir.resolve(\"pkg\/A.html\"))) {\n+            error(\"File not found: \" + outDir.resolve(\"pkg\/A.html\"));\n+        }\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/subpackageNoModules\/SubpackageNoModules.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -44,0 +44,2 @@\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n@@ -96,0 +98,1 @@\n+                      new NameToAnnotationEntry(\"java.lang.annotation.Retention\", Target.class),\n@@ -102,1 +105,2 @@\n-                      new NameToAnnotationEntry(\"BasicAnnoTests.TCs\",  BasicAnnoTests.TCs.class));\n+                      new NameToAnnotationEntry(\"BasicAnnoTests.TCs\",  BasicAnnoTests.TCs.class),\n+                      new NameToAnnotationEntry(\"BasicAnnoTests.TD\",  BasicAnnoTests.TD.class));\n@@ -523,0 +527,6 @@\n+    @Target(ElementType.TYPE_USE)\n+    @Retention(RetentionPolicy.RUNTIME)\n+    public @interface TD {\n+        int value();\n+    }\n+\n@@ -660,0 +670,4 @@\n+    @Test(posn=0, annoType=TA.class, expect=\"1\")\n+    @Test(posn=0, annoType=TD.class, expect=\"2\")\n+    public @TA(1) @TD(2) int f10;\n+\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/type\/BasicAnnoTests.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,184 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8340721\n+ * @summary Test invalid inputs to javax.lang.model.util.Types methods\n+ * @library \/tools\/javac\/lib\n+ * @modules java.compiler\n+ * @build JavacTestingAbstractProcessor TestInvalidInputs\n+ * @compile -processor TestInvalidInputs -proc:only TestInvalidInputs.java\n+ *\/\n+\n+import java.util.*;\n+import javax.annotation.processing.*;\n+import javax.lang.model.element.*;\n+import javax.lang.model.type.*;\n+import javax.lang.model.util.*;\n+\n+\/**\n+ * Test if exceptions are thrown for invalid arguments as expected.\n+ *\/\n+public class TestInvalidInputs extends JavacTestingAbstractProcessor {\n+\n+    \/\/ Reference types are ArrayType, DeclaredType, ErrorType, NullType, and TypeVariable\n+\n+    private TypeMirror       objectType; \/\/ Notable DeclaredType\n+    private TypeMirror       stringType; \/\/ Another notable DeclaredType\n+    private ArrayType        arrayType;\n+    \/\/ private ErrorType        errorType; \/\/ skip for now\n+    private ExecutableType   executableType;\n+    private IntersectionType intersectionType;\n+\n+    private NoType           noTypeVoid;\n+    private NoType           noTypeNone;\n+    private NoType           noTypePackage;\n+    private NoType           noTypeModule;\n+\n+    private NullType         nullType;\n+    private PrimitiveType    primitiveType;\n+    private UnionType        unionType;\n+    private WildcardType     wildcardType;\n+\n+    \/**\n+     * Check expected behavior on classes and packages.\n+     *\/\n+    public boolean process(Set<? extends TypeElement> annotations,\n+                           RoundEnvironment roundEnv) {\n+        if (!roundEnv.processingOver()) {\n+            initializeTypes();\n+            testUnboxedType();\n+            testGetWildcardType();\n+        }\n+        return true;\n+    }\n+\n+    void initializeTypes() {\n+        objectType = elements.getTypeElement(\"java.lang.Object\").asType();\n+        stringType = elements.getTypeElement(\"java.lang.String\").asType();\n+\n+        arrayType = types.getArrayType(objectType); \/\/ Object[]\n+        executableType = extractExecutableType();\n+        intersectionType = extractIntersectionType();\n+\n+        noTypeVoid = types.getNoType(TypeKind.VOID);\n+        noTypeNone = types.getNoType(TypeKind.NONE);\n+        noTypePackage = (NoType)(elements.getPackageElement(\"java.lang\").asType());\n+        noTypeModule  = (NoType)(elements.getModuleElement(\"java.base\").asType());\n+\n+        nullType = types.getNullType();\n+        primitiveType = types.getPrimitiveType(TypeKind.DOUBLE);\n+        \/\/ unionType; \/\/ more work here\n+        wildcardType = types.getWildcardType(objectType, null);\n+\n+        return;\n+    }\n+\n+    ExecutableType extractExecutableType() {\n+        var typeElement = elements.getTypeElement(\"TestInvalidInputs.InvalidInputsHost\");\n+        for (var method : ElementFilter.methodsIn(typeElement.getEnclosedElements())) {\n+            if (\"foo7\".equals(method.getSimpleName().toString())) {\n+                return (ExecutableType)method.asType();\n+            }\n+        }\n+        throw new RuntimeException(\"Expected method not found\");\n+    }\n+\n+    IntersectionType extractIntersectionType() {\n+        var typeElement = elements.getTypeElement(\"TestInvalidInputs.InvalidInputsHost\");\n+        for (var method : ElementFilter.methodsIn(typeElement.getEnclosedElements())) {\n+            if (\"foo9\".equals(method.getSimpleName().toString())) {\n+                return (IntersectionType) ((TypeVariable)method.getReturnType()).getUpperBound();\n+            }\n+        }\n+        throw new RuntimeException(\"Expected method not found\");\n+    }\n+\n+    \/*\n+     * Class to host inputs for testing.\n+     *\/\n+    class InvalidInputsHost {\n+        \/\/ Use a method to get an ExecutableType\n+        public static String foo7(int arg) {return null;}\n+\n+        \/\/ Type variable with intersection type\n+        public static <S extends Number &  Runnable>  S foo9() {return null;}\n+    }\n+\n+    \/**\n+     * @throws IllegalArgumentException if the given type has no\n+     *         unboxing conversion, including for types that are not\n+     *         {@linkplain ReferenceType reference types}\n+     *\/\n+    void testUnboxedType() {\n+        \/\/ Only DeclaredType's for wrapper classes should have unboxing conversions defined.\n+\n+        \/\/ Reference types are ArrayType, DeclaredType, ErrorType, NullType, TypeVariable\n+        \/\/ non-reference: ExecutableType, IntersectionType, NoType, PrimitiveType, UnionType, WildcardType\n+        var invalidInputs = List.of(objectType, stringType, arrayType,\n+                                    executableType, intersectionType,\n+                                    noTypeVoid, noTypeNone, noTypePackage, noTypeModule, nullType,\n+                                    primitiveType, \/*unionType, *\/ wildcardType);\n+\n+        for (TypeMirror tm : invalidInputs) {\n+            try {\n+                PrimitiveType pt = types.unboxedType(tm);\n+                throw new RuntimeException(\"Should not reach \" + tm);\n+            } catch(IllegalArgumentException iae) {\n+                ; \/\/ Expected\n+            }\n+        }\n+        return;\n+    }\n+\n+    \/**\n+     * @throws IllegalArgumentException if bounds are not valid,\n+     * including for types that are not {@linkplain ReferenceType\n+     * reference types}\n+     *\/\n+    void testGetWildcardType() {\n+        \/\/ Reference types are ArrayType, DeclaredType, ErrorType, NullType, TypeVariable\n+        \/\/ non-reference: ExecutableType, IntersectionType, NoType, PrimitiveType, UnionType, WildcardType\n+        var invalidInputs = List.of(executableType, intersectionType,\n+                                    noTypeVoid, noTypeNone, noTypePackage, noTypeModule, nullType,\n+                                    primitiveType, \/*unionType, *\/ wildcardType);\n+\n+        for (TypeMirror tm : invalidInputs) {\n+            try {\n+                WildcardType wc1 = types.getWildcardType(tm,   null);\n+                throw new RuntimeException(\"Should not reach \" + tm);\n+            } catch(IllegalArgumentException iae) {\n+                ; \/\/ Expected\n+            }\n+\n+            try {\n+                WildcardType wc2 = types.getWildcardType(null, tm);\n+                throw new RuntimeException(\"Should not reach \" + tm);\n+            } catch(IllegalArgumentException iae) {\n+                ; \/\/ Expected\n+            }\n+        }\n+        return;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/types\/TestInvalidInputs.java","additions":184,"deletions":0,"binary":false,"changes":184,"status":"added"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 2024, Google LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8340568\n+ * @summary Incorrect escaping of single quotes when pretty-printing character literals\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.file\n+ *          jdk.compiler\/com.sun.tools.javac.tree\n+ *          jdk.compiler\/com.sun.tools.javac.util\n+ *\/\n+\n+import com.sun.tools.javac.file.JavacFileManager;\n+import com.sun.tools.javac.tree.Pretty;\n+import com.sun.tools.javac.tree.TreeMaker;\n+import com.sun.tools.javac.util.Context;\n+\n+import java.io.IOException;\n+import java.io.StringWriter;\n+\n+public class PrettyCharLiteral {\n+    public static void main(String... args) throws Exception {\n+        new PrettyCharLiteral().run();\n+    }\n+\n+    private final TreeMaker make;\n+\n+    private PrettyCharLiteral() {\n+        Context ctx = new Context();\n+        JavacFileManager.preRegister(ctx);\n+        this.make = TreeMaker.instance(ctx);\n+    }\n+\n+    void run() throws Exception {\n+        assertEquals(\n+                prettyPrintLiteral('\\''),\n+                \"\"\"\n+                '\\\\''\n+                \"\"\".trim());\n+        assertEquals(\n+                prettyPrintLiteral('\"'),\n+                \"\"\"\n+                '\"'\n+                \"\"\".trim());\n+        assertEquals(\n+                prettyPrintLiteral(\"'\"),\n+                \"\"\"\n+                \"'\"\n+                \"\"\".trim());\n+        assertEquals(\n+                prettyPrintLiteral(\"\\\"\"),\n+                \"\"\"\n+                \"\\\\\"\"\n+                \"\"\".trim());\n+    }\n+\n+    private void assertEquals(String actual, String expected) {\n+        if (!actual.equals(expected)) {\n+            throw new AssertionError(\"expected: \" + expected + \", actual: \" + actual);\n+        }\n+    }\n+\n+    private String prettyPrintLiteral(Object value) throws IOException {\n+        StringWriter sw = new StringWriter();\n+        new Pretty(sw, true).printExpr(make.Literal(value));\n+        return sw.toString();\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/tree\/PrettyCharLiteral.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -94,1 +94,1 @@\n-     * libraal is enabled if isGraalEnabled is true and:\n+     * libraal JIT is enabled if isGraalEnabled is true and:\n@@ -99,1 +99,1 @@\n-    public static boolean isLibgraalEnabled() {\n+    public static boolean isLibgraalJIT() {\n","filename":"test\/lib\/jdk\/test\/whitebox\/code\/Compiler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}