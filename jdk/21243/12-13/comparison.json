{"files":[{"patch":"@@ -27,2 +27,0 @@\n-import java.util.Objects;\n-\n@@ -55,1 +53,1 @@\n-        this.labelContext = Objects.requireNonNull(labelContext);\n+        this.labelContext = labelContext;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/LabelImpl.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import java.util.Objects;\n@@ -103,1 +102,0 @@\n-        Objects.requireNonNull(cls);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/SplitConstantPool.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -290,7 +290,24 @@\n-        int len = 2 + returnType.descriptorString().length();\n-        for (ClassDesc argType : argTypes) {\n-            len += argType.descriptorString().length();\n-        }\n-        StringBuilder sb = new StringBuilder(len).append('(');\n-        for (ClassDesc argType : argTypes) {\n-            sb.append(argType.descriptorString());\n+        return buildDescriptorString();\n+    }\n+\n+    private String buildDescriptorString() {\n+        var returnType = this.returnType;\n+        var returnTypeDesc = returnType.descriptorString();\n+        var argTypes = this.argTypes;\n+        String desc;\n+        if (argTypes.length == 0) {\n+            \/\/ getter\n+            desc = \"()\".concat(returnTypeDesc);\n+        } else if (argTypes.length == 1 && returnType == ConstantDescs.CD_void) {\n+            \/\/ setter\n+            desc = ConstantUtils.concat(\"(\", argTypes[0].descriptorString(), \")V\");\n+        } else {\n+            int len = 2 + returnTypeDesc.length();\n+            for (ClassDesc argType : argTypes) {\n+                len += argType.descriptorString().length();\n+            }\n+            StringBuilder sb = new StringBuilder(len).append('(');\n+            for (ClassDesc argType : argTypes) {\n+                sb.append(argType.descriptorString());\n+            }\n+            desc = sb.append(')').append(returnTypeDesc).toString();\n@@ -298,1 +315,0 @@\n-        desc = sb.append(')').append(returnType.descriptorString()).toString();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/constant\/MethodTypeDescImpl.java","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"}]}