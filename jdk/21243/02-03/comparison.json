{"files":[{"patch":"@@ -80,0 +80,1 @@\n+    private static final DeferredLabel[] EMPTY_DEFERRED_LABEL_ARRAY = new DeferredLabel[0];\n@@ -98,1 +99,2 @@\n-    List<DeferredLabel> deferredLabels;\n+    private DeferredLabel[] deferredLabels = EMPTY_DEFERRED_LABEL_ARRAY;\n+    private int deferredLabelsCount = 0;\n@@ -472,3 +474,1 @@\n-            if (deferredLabels == null)\n-                deferredLabels = new ArrayList<>();\n-            deferredLabels.add(new DeferredLabel(pc, nBytes, instructionPc, label));\n+            addLabel(new DeferredLabel(pc, nBytes, instructionPc, label));\n@@ -486,3 +486,1 @@\n-            if (deferredLabels == null)\n-                deferredLabels = new ArrayList<>();\n-            deferredLabels.add(new DeferredLabel(pc, nBytes, instructionPc, label));\n+            addLabel(new DeferredLabel(pc, nBytes, instructionPc, label));\n@@ -498,10 +496,9 @@\n-        if (deferredLabels != null) {\n-            for (DeferredLabel dl : deferredLabels) {\n-                int branchOffset = labelToBci(dl.label) - dl.instructionPc;\n-                if (dl.size == 2) {\n-                    if ((short)branchOffset != branchOffset) throw new LabelOverflowException();\n-                    bytecodesBufWriter.patchU2(dl.labelPc, branchOffset);\n-                } else {\n-                    assert dl.size == 4;\n-                    bytecodesBufWriter.patchInt(dl.labelPc, branchOffset);\n-                }\n+        for (int i = 0; i < deferredLabelsCount; i++) {\n+            DeferredLabel dl = deferredLabels[i];\n+            int branchOffset = labelToBci(dl.label) - dl.instructionPc;\n+            if (dl.size == 2) {\n+                if ((short) branchOffset != branchOffset) throw new LabelOverflowException();\n+                bytecodesBufWriter.patchU2(dl.labelPc, branchOffset);\n+            } else {\n+                assert dl.size == 4;\n+                bytecodesBufWriter.patchInt(dl.labelPc, branchOffset);\n@@ -760,0 +757,8 @@\n+    public void addLabel(DeferredLabel label) {\n+        if (deferredLabelsCount >= deferredLabels.length) {\n+            int newCapacity = deferredLabelsCount + 8;\n+            this.deferredLabels = Arrays.copyOf(deferredLabels, newCapacity);\n+        }\n+        deferredLabels[deferredLabelsCount++] = label;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":22,"deletions":17,"binary":false,"changes":39,"status":"modified"}]}