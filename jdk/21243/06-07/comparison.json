{"files":[{"patch":"@@ -144,3 +144,3 @@\n-                      .withCode(codeb -> codeb.loadLocal(REFERENCE, 0)\n-                                              .invoke(INVOKESPECIAL, CD_Object, INIT_NAME, MTD_void, false)\n-                                              .return_(VOID)\n+                      .withCode(codeb -> codeb.aload(0)\n+                                              .invokespecial(CD_Object, INIT_NAME, MTD_void)\n+                                              .return_()\n@@ -183,48 +183,0 @@\n-    @Benchmark\n-    @BenchmarkMode(Mode.Throughput)\n-    public byte[] jdkTreePrimitive() {\n-\n-        byte[] bytes = ClassFile.of().build(CD_MyClass, cb -> {\n-            cb.withFlags(AccessFlag.PUBLIC);\n-            cb.withVersion(52, 0);\n-            cb.with(SourceFileAttribute.of(cb.constantPool().utf8Entry((\"MyClass.java\"))))\n-              .withMethod(INIT_NAME, MTD_void, 0,\n-                          mb -> mb.withCode(codeb -> codeb.loadLocal(REFERENCE, 0)\n-                                                          .invokespecial(CD_Object, INIT_NAME, MTD_void, false)\n-                                                          .return_()\n-                          )\n-              );\n-            for (int xi = 0; xi < 40; ++xi) {\n-                cb.withMethod(\"main\" + ((xi == 0) ? \"\" : \"\" + xi), MTD_void_StringArray,\n-                              ACC_PUBLIC | ACC_STATIC,\n-                              mb -> mb.withCode(c0 -> {\n-                                  java.lang.classfile.Label loopTop = c0.newLabel();\n-                                  java.lang.classfile.Label loopEnd = c0.newLabel();\n-                                  int vFac = 1;\n-                                  int vI = 2;\n-                                  c0.iconst_1()         \/\/ 0\n-                                    .istore(1)          \/\/ 1\n-                                    .iconst_1()         \/\/ 2\n-                                    .istore(2)          \/\/ 3\n-                                    .labelBinding(loopTop)\n-                                    .iload(2)           \/\/ 4\n-                                    .bipush(10)         \/\/ 5\n-                                    .if_icmpge(loopEnd) \/\/ 6\n-                                    .iload(1)           \/\/ 7\n-                                    .iload(2)           \/\/ 8\n-                                    .imul()             \/\/ 9\n-                                    .istore(1)          \/\/ 10\n-                                    .iinc(2, 1)         \/\/ 11\n-                                    .goto_(loopTop)     \/\/ 12\n-                                    .labelBinding(loopEnd)\n-                                    .getstatic(CD_System, \"out\", CD_PrintStream)  \/\/ 13\n-                                    .iload(1)\n-                                    .invokevirtual(CD_PrintStream, \"println\", MTD_void_int)  \/\/ 15\n-                                    .return_();\n-                        }));\n-            }\n-        });\n-        if (writeClassBc) writeClass(bytes, checkFileBc);\n-        return bytes;\n-    }\n-\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/Write.java","additions":3,"deletions":51,"binary":false,"changes":54,"status":"modified"}]}