{"files":[{"patch":"@@ -138,1 +138,1 @@\n-    void setArtificial() {\n+    public void setArtificial() {\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/InputBlock.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import com.sun.hotspot.igv.data.InputBlock;\n@@ -29,1 +28,0 @@\n-import java.util.Collection;\n@@ -37,1 +35,5 @@\n-    public Collection<InputBlock> schedule(InputGraph graph);\n+    \/\/ Compute a set of scheduled blocks for the given graph, creating new\n+    \/\/ blocks if these are not found in the graph.\n+    public void schedule(InputGraph graph);\n+    \/\/ Schedule locally the set of blocks in the given graph.\n+    public void scheduleLocally(InputGraph graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/services\/Scheduler.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -117,0 +117,3 @@\n+            if (blk.isArtificial()) {\n+                diffblk.setArtificial();\n+            }\n@@ -124,0 +127,3 @@\n+            if (blk.isArtificial()) {\n+                diffblk.setArtificial();\n+            }\n@@ -252,0 +258,3 @@\n+        Scheduler s = Lookup.getDefault().lookup(Scheduler.class);\n+        s.scheduleLocally(graph);\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Difference\/src\/main\/java\/com\/sun\/hotspot\/igv\/difference\/Difference.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -299,0 +299,15 @@\n+    private boolean initialize(InputGraph graph) {\n+        nodes = new ArrayList<>();\n+        inputNodeToNode = new HashMap<>(graph.getNodes().size());\n+        this.graph = graph;\n+        if (!hasCategoryInformation()) {\n+            ErrorManager.getDefault().log(ErrorManager.WARNING,\n+                \"Cannot find node category information in the input graph. \" +\n+                \"The control-flow graph will not be approximated.\");\n+            return false;\n+        }\n+        buildUpGraph();\n+        markCFGNodes();\n+        return true;\n+    }\n+\n@@ -300,1 +315,1 @@\n-    public Collection<InputBlock> schedule(InputGraph graph) {\n+    public void schedule(InputGraph graph) {\n@@ -302,1 +317,1 @@\n-            return Collections.emptyList();\n+            return;\n@@ -314,1 +329,1 @@\n-            return graph.getBlocks();\n+            return;\n@@ -316,9 +331,2 @@\n-            nodes = new ArrayList<>();\n-            inputNodeToNode = new HashMap<>(graph.getNodes().size());\n-\n-            this.graph = graph;\n-            if (!hasCategoryInformation()) {\n-                ErrorManager.getDefault().log(ErrorManager.WARNING,\n-                    \"Cannot find node category information in the input graph. \" +\n-                    \"The control-flow graph will not be approximated.\");\n-                return null;\n+            if (!initialize(graph)) {\n+                return;\n@@ -326,2 +334,0 @@\n-            buildUpGraph();\n-            markCFGNodes();\n@@ -336,1 +342,16 @@\n-            return blocks;\n+            return;\n+        }\n+    }\n+\n+    @Override\n+    public void scheduleLocally(InputGraph graph) {\n+        if (!initialize(graph)) {\n+            return;\n+        }\n+        \/\/ Import global schedule from the given graph.\n+        blocks = new Vector<>();\n+        for (InputBlock block : graph.getBlocks()) {\n+            blocks.add(block);\n+            for (InputNode in : block.getNodes()) {\n+                inputNodeToNode.get(in).block = block;\n+            }\n@@ -338,0 +359,1 @@\n+        scheduleLocal();\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/main\/java\/com\/sun\/hotspot\/igv\/servercompiler\/ServerCompilerScheduler.java","additions":38,"deletions":16,"binary":false,"changes":54,"status":"modified"}]}