{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1214,1 +1214,1 @@\n-     * Prints this property list out to the specified output stream.\n+     * Prints this property list out to the specified {@link PrintStream}.\n@@ -1217,1 +1217,13 @@\n-     * @param   out   an output stream.\n+     * @implNote If any property's value is greater than 40 characters then\n+     * this method writes only the first 37 characters of that value\n+     * followed by 3 dot characters.\n+     * <p>\n+     * An alternative for listing the {@code Properties} to a {@code PrintStream} is:\n+     * {@snippet lang=java :\n+     *      Properties p = ...\n+     *      PrintStream out = ...\n+     *      \/\/ list the properties to PrintStream\n+     *      p.forEach((k, v) -> out.println(k + \"=\" + v));\n+     * }\n+     *\n+     * @param   out   a PrintStream\n@@ -1236,1 +1248,1 @@\n-     * Prints this property list out to the specified output stream.\n+     * Prints this property list out to the specified {@link PrintWriter}.\n@@ -1239,1 +1251,13 @@\n-     * @param   out   an output stream.\n+     * @implNote If any property's value is greater than 40 characters then\n+     * this method writes only the first 37 characters of that value\n+     * followed by 3 dot characters.\n+     * <p>\n+     * An alternative for listing the {@code Properties} to a {@code PrintWriter} is:\n+     * {@snippet lang=java :\n+     *      Properties p = ...\n+     *      PrintWriter out = ...\n+     *      \/\/ list the properties to PrintWriter\n+     *      p.forEach((k, v) -> out.println(k + \"=\" + v));\n+     * }\n+     *\n+     * @param   out   a PrintWriter\n","filename":"src\/java.base\/share\/classes\/java\/util\/Properties.java","additions":29,"deletions":5,"binary":false,"changes":34,"status":"modified"}]}