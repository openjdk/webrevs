{"files":[{"patch":"@@ -1281,2 +1281,1 @@\n-        final void push(ForkJoinTask<?> task, ForkJoinPool pool,\n-                        boolean internal) {\n+        final void push(ForkJoinTask<?> task, ForkJoinPool pool, boolean internal) {\n@@ -1386,2 +1385,1 @@\n-                if (top == p &&\n-                    U.compareAndSetReference(a, k, task, null)) {\n+                if (top == p && U.compareAndSetReference(a, k, task, null)) {\n@@ -2064,2 +2062,3 @@\n-        int k = Math.max(n << 2, SPIN_WAITS << 1);\n-        for (int prechecks = k \/ n;;) {       \/\/ reactivation threshold\n+\n+        for (int prechecks = Math.min(ac, 2), \/\/ reactivation threshold\n+             k = Math.max(n + (n << 1), SPIN_WAITS << 1);;) {\n@@ -2074,1 +2073,1 @@\n-                     a[q.base & (cap - 1)] != null && --prechecks <= 0 &&\n+                     a[q.base & (cap - 1)] != null && --prechecks < 0 &&\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -531,0 +531,1 @@\n+        p.cancelDelayedTasksOnShutdown();\n@@ -571,2 +572,2 @@\n-        Thread.sleep(timeoutMillis());\n-        assertTrue(task.isCancelled());\n+        while(!task.isCancelled())\n+            Thread.sleep(timeoutMillis());\n@@ -589,1 +590,0 @@\n-        Thread.sleep(timeoutMillis());\n@@ -605,1 +605,0 @@\n-        Thread.sleep(timeoutMillis());\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/ForkJoinPool20Test.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}