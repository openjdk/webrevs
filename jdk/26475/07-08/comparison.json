{"files":[{"patch":"@@ -5438,0 +5438,8 @@\n+static void debug_init_req(Node* call, Node* parm, Node* half, int* pos) {\n+  call->init_req((*pos)++, parm);\n+  const BasicType bt = parm->bottom_type()->basic_type();\n+  if (bt == T_LONG || bt == T_DOUBLE) {\n+    call->init_req((*pos)++, half);\n+  }\n+}\n+\n@@ -5475,8 +5483,9 @@\n-  call->init_req(TypeFunc::Parms+0, str_node);\n-  if (parm0 != nullptr) { call->init_req(TypeFunc::Parms+1, parm0);\n-  if (parm1 != nullptr) { call->init_req(TypeFunc::Parms+2, parm1);\n-  if (parm2 != nullptr) { call->init_req(TypeFunc::Parms+3, parm2);\n-  if (parm3 != nullptr) { call->init_req(TypeFunc::Parms+4, parm3);\n-  if (parm4 != nullptr) { call->init_req(TypeFunc::Parms+5, parm4);\n-  if (parm5 != nullptr) { call->init_req(TypeFunc::Parms+6, parm5);\n-  if (parm6 != nullptr) { call->init_req(TypeFunc::Parms+7, parm6);\n+  int pos = TypeFunc::Parms;\n+  call->init_req(pos++, str_node);\n+  if (parm0 != nullptr) { debug_init_req(call, parm0, top(), &pos);\n+  if (parm1 != nullptr) { debug_init_req(call, parm1, top(), &pos);\n+  if (parm2 != nullptr) { debug_init_req(call, parm2, top(), &pos);\n+  if (parm3 != nullptr) { debug_init_req(call, parm3, top(), &pos);\n+  if (parm4 != nullptr) { debug_init_req(call, parm4, top(), &pos);\n+  if (parm5 != nullptr) { debug_init_req(call, parm5, top(), &pos);\n+  if (parm6 != nullptr) { debug_init_req(call, parm6, top(), &pos);\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -1784,3 +1784,4 @@\n-void OptoRuntime::debug_print_convert_type(const Type** fields, int* argp, Node *parm) {\n-  const Type *type = Type::get_const_basic_type(parm->bottom_type()->basic_type());\n-  if (type == TypePtr::NULL_PTR) { \/\/ half of long and double\n+static void debug_print_convert_type(const Type** fields, int* argp, Node *parm) {\n+  const BasicType bt = parm->bottom_type()->basic_type();\n+  fields[(*argp)++] = Type::get_const_basic_type(bt);\n+  if (bt == T_LONG || bt == T_DOUBLE) {\n@@ -1788,2 +1789,8 @@\n-  } else {\n-    fields[(*argp)++] = type;\n+  }\n+}\n+\n+static void update_arg_cnt(const Node* parm, int* arg_cnt) {\n+  (*arg_cnt)++;\n+  const BasicType bt = parm->bottom_type()->basic_type();\n+  if (bt == T_LONG || bt == T_DOUBLE) {\n+    (*arg_cnt)++;\n@@ -1798,7 +1805,7 @@\n-  if (parm0 != nullptr) { argcnt++;\n-  if (parm1 != nullptr) { argcnt++;\n-  if (parm2 != nullptr) { argcnt++;\n-  if (parm3 != nullptr) { argcnt++;\n-  if (parm4 != nullptr) { argcnt++;\n-  if (parm5 != nullptr) { argcnt++;\n-  if (parm6 != nullptr) { argcnt++;\n+  if (parm0 != nullptr) { update_arg_cnt(parm0, &argcnt);\n+  if (parm1 != nullptr) { update_arg_cnt(parm1, &argcnt);\n+  if (parm2 != nullptr) { update_arg_cnt(parm2, &argcnt);\n+  if (parm3 != nullptr) { update_arg_cnt(parm3, &argcnt);\n+  if (parm4 != nullptr) { update_arg_cnt(parm4, &argcnt);\n+  if (parm5 != nullptr) { update_arg_cnt(parm5, &argcnt);\n+  if (parm6 != nullptr) { update_arg_cnt(parm6, &argcnt);\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":19,"deletions":12,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -741,4 +741,0 @@\n-  private:\n-  static void debug_print_convert_type(const Type** fields, int* argp, Node *parm);\n-\n-  public:\n","filename":"src\/hotspot\/share\/opto\/runtime.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}