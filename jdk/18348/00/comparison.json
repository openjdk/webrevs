{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+\n+import jdk.internal.misc.Unsafe;\n@@ -1661,2 +1663,0 @@\n-    private static native boolean isBigEndian();\n-\n@@ -1666,1 +1666,1 @@\n-        if (isBigEndian()) {\n+        if (Unsafe.getUnsafe().isBigEndian()) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 1998, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,11 +34,0 @@\n-\n-JNIEXPORT jboolean JNICALL\n-Java_java_lang_StringUTF16_isBigEndian(JNIEnv *env, jclass cls)\n-{\n-  unsigned int endianTest = 0xff000000;\n-  if (((char*)(&endianTest))[0] != 0) {\n-    return JNI_TRUE;\n-  } else {\n-    return JNI_FALSE;\n-  }\n-}\n","filename":"src\/java.base\/share\/native\/libjava\/String.c","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"}]}