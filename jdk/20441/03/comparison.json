{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -365,0 +365,3 @@\n+                AffineTransform af = g2.getTransform();\n+                double scaleX = af.getScaleX();\n+                double scaleY = af.getScaleY();\n@@ -369,2 +372,2 @@\n-                AffineTransform af = g2.getTransform();\n-                g2.setTransform(AffineTransform.getTranslateInstance(rx,ry));\n+                g2.setTransform(AffineTransform.getTranslateInstance(rx * scaleX, ry * scaleY));\n+                g2.scale(scaleX, scaleY);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XCheckboxPeer.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Checkbox;\n+import java.awt.Color;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8233068\n+ * @summary Tests checkbox checker on scaling\n+ * @requires (os.family == \"linux\")\n+ * @run main CheckboxCheckerScalingTest\n+ *\/\n+\n+public class CheckboxCheckerScalingTest {\n+    private static Frame frame;\n+    private static Checkbox checkbox;\n+    private static BufferedImage imageAfterChecked;\n+    private static volatile boolean checkmarkFound = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        System.setProperty(\"sun.java2d.uiScale\", \"2\");\n+        Robot robot = new Robot();\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new Frame(\"ComboBox checker scaling test\");\n+                checkbox = new Checkbox(\"one\");\n+                checkbox.setState(true);\n+                frame.add(checkbox);\n+                frame.pack();\n+                frame.setVisible(true);\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(100);\n+            SwingUtilities.invokeAndWait(() -> {\n+                Point point = checkbox.getLocationOnScreen();\n+                Rectangle rect = new Rectangle(point.x + 5, point.y + 7, 8, 8);\n+                imageAfterChecked = robot.createScreenCapture(rect);\n+\n+                check: {\n+                    for (int i = 0; i < imageAfterChecked.getHeight(); i++) {\n+                        for (int j = 0; j < imageAfterChecked.getWidth(); j++) {\n+                            if (Color.black.getRGB() == imageAfterChecked.getRGB(i, j)) {\n+                                checkmarkFound = true;\n+                                break check;\n+                            }\n+                        }\n+                    }\n+                }\n+            });\n+\n+            if (!checkmarkFound) {\n+                throw new RuntimeException(\"Checkmark not scaled\");\n+            }\n+            System.out.println(\"Test Passed\");\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Checkbox\/CheckboxCheckerScalingTest.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"}]}