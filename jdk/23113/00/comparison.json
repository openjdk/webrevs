{"files":[{"patch":"@@ -49,1 +49,1 @@\n-    log_warning(gc)(\"EpsilonMaxTLABSize < MinTLABSize, adjusting it to \" SIZE_FORMAT, MinTLABSize);\n+    log_warning(gc)(\"EpsilonMaxTLABSize < MinTLABSize, adjusting it to %zu\", MinTLABSize);\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonArguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-  assert(is_object_aligned(size), \"Allocation size should be aligned: \" SIZE_FORMAT, size);\n+  assert(is_object_aligned(size), \"Allocation size should be aligned: %zu\", size);\n@@ -132,1 +132,1 @@\n-             \"Unused (\" SIZE_FORMAT \") >= uncommitted (\" SIZE_FORMAT \")\",\n+             \"Unused (%zu) >= uncommitted (%zu)\",\n@@ -221,1 +221,1 @@\n-         \"Size honors object alignment: \" SIZE_FORMAT, size);\n+         \"Size honors object alignment: %zu\", size);\n@@ -223,1 +223,1 @@\n-         \"Size honors min size: \"  SIZE_FORMAT \" <= \" SIZE_FORMAT, min_size, size);\n+         \"Size honors min size: %zu <= %zu\", min_size, size);\n@@ -225,1 +225,1 @@\n-         \"Size honors max size: \"  SIZE_FORMAT \" <= \" SIZE_FORMAT, size, _max_tlab_size);\n+         \"Size honors max size: %zu <= %zu\", size, _max_tlab_size);\n@@ -227,1 +227,1 @@\n-         \"Size honors global max size: \"  SIZE_FORMAT \" <= \" SIZE_FORMAT, size, CollectedHeap::max_tlab_size());\n+         \"Size honors global max size: %zu <= %zu\", size, CollectedHeap::max_tlab_size());\n@@ -231,2 +231,2 @@\n-    log_trace(gc)(\"TLAB size for \\\"%s\\\" (Requested: \" SIZE_FORMAT \"K, Min: \" SIZE_FORMAT\n-                          \"K, Max: \" SIZE_FORMAT \"K, Ergo: \" SIZE_FORMAT \"K) -> \" SIZE_FORMAT \"K\",\n+    log_trace(gc)(\"TLAB size for \\\"%s\\\" (Requested: %zuK, Min: %zu\"\n+                          \"K, Max: %zuK, Ergo: %zuK) -> %zuK\",\n@@ -328,2 +328,2 @@\n-    log_info(gc)(\"Heap: \" SIZE_FORMAT \"%s reserved, \" SIZE_FORMAT \"%s (%.2f%%) committed, \"\n-                 SIZE_FORMAT \"%s (%.2f%%) used\",\n+    log_info(gc)(\"Heap: %zu%s reserved, %zu%s (%.2f%%) committed, \"\n+                 \"%zu%s (%.2f%%) used\",\n@@ -347,2 +347,2 @@\n-    log_info(gc, metaspace)(\"Metaspace: \" SIZE_FORMAT \"%s reserved, \" SIZE_FORMAT \"%s (%.2f%%) committed, \"\n-                            SIZE_FORMAT \"%s (%.2f%%) used\",\n+    log_info(gc, metaspace)(\"Metaspace: %zu%s reserved, %zu%s (%.2f%%) committed, \"\n+                            \"%zu%s (%.2f%%) used\",\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonHeap.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    log_info(gc, init)(\"TLAB Size Max: \" SIZE_FORMAT \"%s\",\n+    log_info(gc, init)(\"TLAB Size Max: %zu%s\",\n@@ -43,1 +43,1 @@\n-      log_info(gc, init)(\"TLAB Size Decay Time: \" SIZE_FORMAT \"ms\", EpsilonTLABDecayTime);\n+      log_info(gc, init)(\"TLAB Size Decay Time: %zums\", EpsilonTLABDecayTime);\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonInitLogger.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-                 \"Remaining size (\" SIZE_FORMAT \") is too small to fill (based on \" SIZE_FORMAT \" and \" SIZE_FORMAT \")\",\n+                 \"Remaining size (%zu) is too small to fill (based on %zu and %zu)\",\n@@ -622,2 +622,2 @@\n-      st->print(\"    local\/remote\/unbiased\/uncommitted: \" SIZE_FORMAT \"K\/\"\n-                SIZE_FORMAT \"K\/\" SIZE_FORMAT \"K\/\" SIZE_FORMAT \"K\\n\",\n+      st->print(\"    local\/remote\/unbiased\/uncommitted: %zuK\/\"\n+                \"%zuK\/%zuK\/%zuK\\n\",\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -236,1 +236,1 @@\n-  st->print(\" space \" SIZE_FORMAT \"K, %d%% used\", capacity_in_bytes() \/ K,\n+  st->print(\" space %zuK, %d%% used\", capacity_in_bytes() \/ K,\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,3 +32,3 @@\n-                       \" Space \" SIZE_FORMAT \"%s,\"\n-                       \" Generation \" SIZE_FORMAT \"%s,\"\n-                       \" Heap \" SIZE_FORMAT \"%s\",\n+                       \" Space %zu%s,\"\n+                       \" Generation %zu%s,\"\n+                       \" Heap %zu%s\",\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelInitLogger.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -403,1 +403,1 @@\n-      log_warning(gc)(\"\\tsize=\" SIZE_FORMAT, size);\n+      log_warning(gc)(\"\\tsize=%zu\", size);\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -318,6 +318,6 @@\n-          \" desired_eden_size: \" SIZE_FORMAT\n-          \" old_eden_size: \" SIZE_FORMAT\n-          \" eden_limit: \" SIZE_FORMAT\n-          \" cur_eden: \" SIZE_FORMAT\n-          \" max_eden_size: \" SIZE_FORMAT\n-          \" avg_young_live: \" SIZE_FORMAT,\n+          \" desired_eden_size: %zu\"\n+          \" old_eden_size: %zu\"\n+          \" eden_limit: %zu\"\n+          \" cur_eden: %zu\"\n+          \" max_eden_size: %zu\"\n+          \" avg_young_live: %zu\",\n@@ -361,1 +361,1 @@\n-  log_debug(gc, ergo)(\"Live_space: \" SIZE_FORMAT \" free_space: \" SIZE_FORMAT,\n+  log_debug(gc, ergo)(\"Live_space: %zu free_space: %zu\",\n@@ -364,1 +364,1 @@\n-  log_trace(gc, ergo)(\"avg_young_live: \" SIZE_FORMAT \" avg_old_live: \" SIZE_FORMAT,\n+  log_trace(gc, ergo)(\"avg_young_live: %zu avg_old_live: %zu\",\n@@ -368,1 +368,1 @@\n-  log_debug(gc, ergo)(\"Old eden_size: \" SIZE_FORMAT \" desired_eden_size: \" SIZE_FORMAT,\n+  log_debug(gc, ergo)(\"Old eden_size: %zu desired_eden_size: %zu\",\n@@ -495,5 +495,5 @@\n-          \" desired_promo_size: \" SIZE_FORMAT\n-          \" promo_limit: \" SIZE_FORMAT\n-          \" free_in_old_gen: \" SIZE_FORMAT\n-          \" max_old_gen_size: \" SIZE_FORMAT\n-          \" avg_old_live: \" SIZE_FORMAT,\n+          \" desired_promo_size: %zu\"\n+          \" promo_limit: %zu\"\n+          \" free_in_old_gen: %zu\"\n+          \" max_old_gen_size: %zu\"\n+          \" avg_old_live: %zu\",\n@@ -532,1 +532,1 @@\n-  log_debug(gc, ergo)(\"Live_space: \" SIZE_FORMAT \" free_space: \" SIZE_FORMAT,\n+  log_debug(gc, ergo)(\"Live_space: %zu free_space: %zu\",\n@@ -535,1 +535,1 @@\n-  log_trace(gc, ergo)(\"avg_young_live: \" SIZE_FORMAT \" avg_old_live: \" SIZE_FORMAT,\n+  log_trace(gc, ergo)(\"avg_young_live: %zu avg_old_live: %zu\",\n@@ -539,1 +539,1 @@\n-  log_debug(gc, ergo)(\"Old promo_size: \" SIZE_FORMAT \" desired_promo_size: \" SIZE_FORMAT,\n+  log_debug(gc, ergo)(\"Old promo_size: %zu desired_promo_size: %zu\",\n@@ -606,1 +606,1 @@\n-    \"desired_promo_size \" SIZE_FORMAT \" promo delta \" SIZE_FORMAT,\n+    \"desired_promo_size %zu promo delta %zu\",\n@@ -623,1 +623,1 @@\n-    \"desired_eden_size \" SIZE_FORMAT \" eden delta \" SIZE_FORMAT,\n+    \"desired_eden_size %zu eden delta %zu\",\n@@ -639,1 +639,1 @@\n-  log_trace(gc, ergo)(\"PSAdaptiveSizePolicy::adjust_promo_for_throughput(is_full: %d, promo: \" SIZE_FORMAT \"): mutator_cost %f  major_gc_cost %f minor_gc_cost %f\",\n+  log_trace(gc, ergo)(\"PSAdaptiveSizePolicy::adjust_promo_for_throughput(is_full: %d, promo: %zu): mutator_cost %f  major_gc_cost %f minor_gc_cost %f\",\n@@ -653,1 +653,1 @@\n-      log_trace(gc, ergo)(\"Scaled tenured increment: \" SIZE_FORMAT \" by %f down to \" SIZE_FORMAT,\n+      log_trace(gc, ergo)(\"Scaled tenured increment: %zu by %f down to %zu\",\n@@ -700,1 +700,1 @@\n-    log_trace(gc, ergo)(\"Adjusting tenured gen for throughput (avg %f goal %f). desired_promo_size \" SIZE_FORMAT \" promo_delta \" SIZE_FORMAT ,\n+    log_trace(gc, ergo)(\"Adjusting tenured gen for throughput (avg %f goal %f). desired_promo_size %zu promo_delta %zu\",\n@@ -718,1 +718,1 @@\n-  log_trace(gc, ergo)(\"PSAdaptiveSizePolicy::adjust_eden_for_throughput(is_full: %d, cur_eden: \" SIZE_FORMAT \"): mutator_cost %f  major_gc_cost %f minor_gc_cost %f\",\n+  log_trace(gc, ergo)(\"PSAdaptiveSizePolicy::adjust_eden_for_throughput(is_full: %d, cur_eden: %zu): mutator_cost %f  major_gc_cost %f minor_gc_cost %f\",\n@@ -731,1 +731,1 @@\n-    log_trace(gc, ergo)(\"Scaled eden increment: \" SIZE_FORMAT \" by %f down to \" SIZE_FORMAT,\n+    log_trace(gc, ergo)(\"Scaled eden increment: %zu by %f down to %zu\",\n@@ -777,1 +777,1 @@\n-    log_trace(gc, ergo)(\"Adjusting eden for throughput (avg %f goal %f). desired_eden_size \" SIZE_FORMAT \" eden delta \" SIZE_FORMAT,\n+    log_trace(gc, ergo)(\"Adjusting eden for throughput (avg %f goal %f). desired_eden_size %zu eden delta %zu\",\n@@ -794,3 +794,3 @@\n-    \"starting promo size \" SIZE_FORMAT\n-    \" reduced promo size \" SIZE_FORMAT\n-    \" promo delta \" SIZE_FORMAT,\n+    \"starting promo size %zu\"\n+    \" reduced promo size %zu\"\n+    \" promo delta %zu\",\n@@ -816,3 +816,3 @@\n-    \" starting eden size \" SIZE_FORMAT\n-    \" reduced eden size \" SIZE_FORMAT\n-    \" eden delta \" SIZE_FORMAT,\n+    \" starting eden size %zu\"\n+    \" reduced eden size %zu\"\n+    \" eden delta %zu\",\n@@ -969,1 +969,1 @@\n-  log_debug(gc, ergo)(\"avg_promoted_padded_avg: %f  avg_pretenured_padded_avg: %f  tenuring_thresh: %d  target_size: \" SIZE_FORMAT,\n+  log_debug(gc, ergo)(\"avg_promoted_padded_avg: %f  avg_pretenured_padded_avg: %f  tenuring_thresh: %d  target_size: %zu\",\n@@ -992,1 +992,1 @@\n-  log_trace(gc, ergo)(\"AdaptiveSizePolicy::update_averages:  survived: \"  SIZE_FORMAT \"  promoted: \"  SIZE_FORMAT \"  overflow: %s\",\n+  log_trace(gc, ergo)(\"AdaptiveSizePolicy::update_averages:  survived: %zu  promoted: %zu  overflow: %s\",\n","filename":"src\/hotspot\/share\/gc\/parallel\/psAdaptiveSizePolicy.cpp","additions":34,"deletions":34,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-        log_develop_trace(gc, scavenge)(\"{%s %s \" PTR_FORMAT \" -> \" PTR_FORMAT \" (\" SIZE_FORMAT \")}\",\n+        log_develop_trace(gc, scavenge)(\"{%s %s \" PTR_FORMAT \" -> \" PTR_FORMAT \" (%zu)}\",\n","filename":"src\/hotspot\/share\/gc\/parallel\/psClosure.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -254,1 +254,1 @@\n-    log_debug(gc)(\"Expanding %s from \" SIZE_FORMAT \"K by \" SIZE_FORMAT \"K to \" SIZE_FORMAT \"K\",\n+    log_debug(gc)(\"Expanding %s from %zuK by %zuK to %zuK\",\n@@ -282,1 +282,1 @@\n-    log_debug(gc)(\"Shrinking %s from \" SIZE_FORMAT \"K by \" SIZE_FORMAT \"K to \" SIZE_FORMAT \"K\",\n+    log_debug(gc)(\"Shrinking %s from %zuK by %zuK to %zuK\",\n@@ -312,3 +312,3 @@\n-    \"desired free: \" SIZE_FORMAT \" used: \" SIZE_FORMAT\n-    \" new size: \" SIZE_FORMAT \" current size \" SIZE_FORMAT\n-    \" gen limits: \" SIZE_FORMAT \" \/ \" SIZE_FORMAT,\n+    \"desired free: %zu used: %zu\"\n+    \" new size: %zu current size %zu\"\n+    \" gen limits: %zu \/ %zu\",\n@@ -332,1 +332,1 @@\n-  log_trace(gc, ergo)(\"AdaptiveSizePolicy::old generation size: collection: %d (\" SIZE_FORMAT \") -> (\" SIZE_FORMAT \") \",\n+  log_trace(gc, ergo)(\"AdaptiveSizePolicy::old generation size: collection: %d (%zu) -> (%zu) \",\n@@ -370,1 +370,1 @@\n-  st->print(\" total \" SIZE_FORMAT \"K, used \" SIZE_FORMAT \"K\",\n+  st->print(\" total %zuK, used %zuK\",\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -587,2 +587,2 @@\n-      err_msg(\"Unable to allocate \" SIZE_FORMAT \"KB bitmaps for parallel \"\n-      \"garbage collection for the requested \" SIZE_FORMAT \"KB heap.\",\n+      err_msg(\"Unable to allocate %zuKB bitmaps for parallel \"\n+      \"garbage collection for the requested %zuKB heap.\",\n@@ -595,2 +595,2 @@\n-      err_msg(\"Unable to allocate \" SIZE_FORMAT \"KB card tables for parallel \"\n-      \"garbage collection for the requested \" SIZE_FORMAT \"KB heap.\",\n+      err_msg(\"Unable to allocate %zuKB card tables for parallel \"\n+      \"garbage collection for the requested %zuKB heap.\",\n@@ -1078,1 +1078,1 @@\n-      log_trace(gc, ergo)(\"old_gen_capacity: \" SIZE_FORMAT \" young_gen_capacity: \" SIZE_FORMAT,\n+      log_trace(gc, ergo)(\"old_gen_capacity: %zu young_gen_capacity: %zu\",\n@@ -1691,1 +1691,1 @@\n-    log.trace(SIZE_FORMAT \" initially fillable regions\", _total_regions);\n+    log.trace(\"%zu initially fillable regions\", _total_regions);\n@@ -1700,1 +1700,1 @@\n-      line.append(\" \" SIZE_FORMAT_W(7), _regions[i]);\n+      line.append(\" %7zu\", _regions[i]);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -463,1 +463,1 @@\n-        log_trace(gc, ergo)(\"old_gen_capacity: \" SIZE_FORMAT \" young_gen_capacity: \" SIZE_FORMAT,\n+        log_trace(gc, ergo)(\"old_gen_capacity: %zu young_gen_capacity: %zu\",\n@@ -631,1 +631,1 @@\n-  log_trace(ergo)(\"%s scavenge: average_promoted \" SIZE_FORMAT \" padded_average_promoted \" SIZE_FORMAT \" free in old gen \" SIZE_FORMAT,\n+  log_trace(ergo)(\"%s scavenge: average_promoted %zu padded_average_promoted %zu free in old gen %zu\",\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -259,3 +259,3 @@\n-                        \"desired eden: \" SIZE_FORMAT \" survivor: \" SIZE_FORMAT\n-                        \" used: \" SIZE_FORMAT \" capacity: \" SIZE_FORMAT\n-                        \" gen limits: \" SIZE_FORMAT \" \/ \" SIZE_FORMAT,\n+                        \"desired eden: %zu survivor: %zu\"\n+                        \" used: %zu capacity: %zu\"\n+                        \" gen limits: %zu \/ %zu\",\n@@ -318,1 +318,1 @@\n-      log_trace(gc)(\"PSYoung generation size at maximum: \" SIZE_FORMAT \"K\", orig_size\/K);\n+      log_trace(gc)(\"PSYoung generation size at maximum: %zuK\", orig_size\/K);\n@@ -320,1 +320,1 @@\n-      log_trace(gc)(\"PSYoung generation size at minimum: \" SIZE_FORMAT \"K\", orig_size\/K);\n+      log_trace(gc)(\"PSYoung generation size at minimum: %zuK\", orig_size\/K);\n@@ -326,1 +326,1 @@\n-    log_trace(gc)(\"PSYoung generation size changed: \" SIZE_FORMAT \"K->\" SIZE_FORMAT \"K\",\n+    log_trace(gc)(\"PSYoung generation size changed: %zuK->%zuK\",\n@@ -423,1 +423,1 @@\n-  log_trace(gc, ergo)(\"PSYoungGen::resize_spaces(requested_eden_size: \" SIZE_FORMAT \", requested_survivor_size: \" SIZE_FORMAT \")\",\n+  log_trace(gc, ergo)(\"PSYoungGen::resize_spaces(requested_eden_size: %zu, requested_survivor_size: %zu)\",\n@@ -425,1 +425,1 @@\n-  log_trace(gc, ergo)(\"    eden: [\" PTR_FORMAT \"..\" PTR_FORMAT \") \" SIZE_FORMAT,\n+  log_trace(gc, ergo)(\"    eden: [\" PTR_FORMAT \"..\" PTR_FORMAT \") %zu\",\n@@ -431,1 +431,1 @@\n-  log_trace(gc, ergo)(\"    from: [\" PTR_FORMAT \"..\" PTR_FORMAT \") \" SIZE_FORMAT,\n+  log_trace(gc, ergo)(\"    from: [\" PTR_FORMAT \"..\" PTR_FORMAT \") %zu\",\n@@ -437,1 +437,1 @@\n-  log_trace(gc, ergo)(\"      to: [\" PTR_FORMAT \"..\" PTR_FORMAT \") \" SIZE_FORMAT,\n+  log_trace(gc, ergo)(\"      to: [\" PTR_FORMAT \"..\" PTR_FORMAT \") %zu\",\n@@ -528,1 +528,1 @@\n-    log_trace(gc, ergo)(\"    [eden_start .. eden_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") \" SIZE_FORMAT,\n+    log_trace(gc, ergo)(\"    [eden_start .. eden_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") %zu\",\n@@ -532,1 +532,1 @@\n-    log_trace(gc, ergo)(\"    [from_start .. from_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") \" SIZE_FORMAT,\n+    log_trace(gc, ergo)(\"    [from_start .. from_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") %zu\",\n@@ -536,1 +536,1 @@\n-    log_trace(gc, ergo)(\"    [  to_start ..   to_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") \" SIZE_FORMAT,\n+    log_trace(gc, ergo)(\"    [  to_start ..   to_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") %zu\",\n@@ -578,1 +578,1 @@\n-    log_trace(gc, ergo)(\"    [eden_start .. eden_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") \" SIZE_FORMAT,\n+    log_trace(gc, ergo)(\"    [eden_start .. eden_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") %zu\",\n@@ -582,1 +582,1 @@\n-    log_trace(gc, ergo)(\"    [  to_start ..   to_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") \" SIZE_FORMAT,\n+    log_trace(gc, ergo)(\"    [  to_start ..   to_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") %zu\",\n@@ -586,1 +586,1 @@\n-    log_trace(gc, ergo)(\"    [from_start .. from_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") \" SIZE_FORMAT,\n+    log_trace(gc, ergo)(\"    [from_start .. from_end): [\" PTR_FORMAT \" .. \" PTR_FORMAT \") %zu\",\n@@ -649,1 +649,1 @@\n-  log_trace(gc, ergo)(\"AdaptiveSizePolicy::survivor space sizes: collection: %d (\" SIZE_FORMAT \", \" SIZE_FORMAT \") -> (\" SIZE_FORMAT \", \" SIZE_FORMAT \") \",\n+  log_trace(gc, ergo)(\"AdaptiveSizePolicy::survivor space sizes: collection: %d (%zu, %zu) -> (%zu, %zu) \",\n@@ -705,1 +705,1 @@\n-  st->print(\" total \" SIZE_FORMAT \"K, used \" SIZE_FORMAT \"K\",\n+  st->print(\" total %zuK, used %zuK\",\n","filename":"src\/hotspot\/share\/gc\/parallel\/psYoungGen.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -483,1 +483,1 @@\n-        \"New generation size \" SIZE_FORMAT \"K->\" SIZE_FORMAT \"K [eden=\" SIZE_FORMAT \"K,survivor=\" SIZE_FORMAT \"K]\",\n+        \"New generation size %zuK->%zuK [eden=%zuK,survivor=%zuK]\",\n@@ -487,1 +487,1 @@\n-        \"  [allowed \" SIZE_FORMAT \"K extra for %d threads]\",\n+        \"  [allowed %zuK extra for %d threads]\",\n@@ -718,1 +718,1 @@\n-  log_debug(gc, promotion)(\"Promotion failure size = \" SIZE_FORMAT \") \", old->size());\n+  log_debug(gc, promotion)(\"Promotion failure size = %zu) \", old->size());\n@@ -843,1 +843,1 @@\n-  st->print(\" total \" SIZE_FORMAT \"K, used \" SIZE_FORMAT \"K\",\n+  st->print(\" total %zuK, used %zuK\",\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,1 +136,1 @@\n-      log_develop_trace(gc, compaction)(\"Inserting object to dead space: \" PTR_FORMAT \", \" PTR_FORMAT \", \" SIZE_FORMAT \"b\",\n+      log_develop_trace(gc, compaction)(\"Inserting object to dead space: \" PTR_FORMAT \", \" PTR_FORMAT \", %zub\",\n@@ -654,1 +654,1 @@\n-  log_trace(gc)(\"Restoring \" SIZE_FORMAT \" marks\", _preserved_count + _preserved_overflow_stack_set.get()->size());\n+  log_trace(gc)(\"Restoring %zu marks\", _preserved_count + _preserved_overflow_stack_set.get()->size());\n","filename":"src\/hotspot\/share\/gc\/serial\/serialFullGC.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -222,2 +222,1 @@\n-         \"Gen size; total_reserved=\" SIZE_FORMAT \", alignment=\"\n-         SIZE_FORMAT, total_reserved, alignment);\n+         \"Gen size; total_reserved=%zu, alignment=%zu\", total_reserved, alignment);\n@@ -403,1 +402,1 @@\n-                                \" size=\" SIZE_FORMAT \" %s\", try_count, size, is_tlab ? \"(TLAB)\" : \"\");\n+                                \" size=%zu %s\", try_count, size, is_tlab ? \"(TLAB)\" : \"\");\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-    log_trace(gc, heap)(\"Expanding %s from \" SIZE_FORMAT \"K by \" SIZE_FORMAT \"K to \" SIZE_FORMAT \"K\",\n+    log_trace(gc, heap)(\"Expanding %s from %zuK by %zuK to %zuK\",\n@@ -143,1 +143,1 @@\n-  log_trace(gc, heap)(\"Shrinking %s from \" SIZE_FORMAT \"K to \" SIZE_FORMAT \"K\",\n+  log_trace(gc, heap)(\"Shrinking %s from %zuK to %zuK\",\n@@ -239,1 +239,1 @@\n-      log_trace(gc, heap)(\"    shrink_bytes: %.1fK  current_shrink_factor: \" SIZE_FORMAT \"  new shrink factor: \" SIZE_FORMAT \"  _min_heap_delta_bytes: %.1fK\",\n+      log_trace(gc, heap)(\"    shrink_bytes: %.1fK  current_shrink_factor: %zu  new shrink factor: %zu  _min_heap_delta_bytes: %.1fK\",\n@@ -357,2 +357,2 @@\n-         \"used: \" SIZE_FORMAT \" used_after_gc: \" SIZE_FORMAT\n-         \" capacity: \" SIZE_FORMAT, used(), used_after_gc, capacity());\n+         \"used: %zu used_after_gc: %zu\"\n+         \" capacity: %zu\", used(), used_after_gc, capacity());\n@@ -387,1 +387,1 @@\n-  log_trace(gc)(\"Tenured: promo attempt is%s safe: available(\" SIZE_FORMAT \") %s av_promo(\" SIZE_FORMAT \"), max_promo(\" SIZE_FORMAT \")\",\n+  log_trace(gc)(\"Tenured: promo attempt is%s safe: available(%zu) %s av_promo(%zu), max_promo(%zu)\",\n@@ -448,1 +448,1 @@\n-  st->print(\" total \" SIZE_FORMAT \"K, used \" SIZE_FORMAT \"K\",\n+  st->print(\" total %zuK, used %zuK\",\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}