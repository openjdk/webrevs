{"files":[{"patch":"@@ -536,2 +536,3 @@\n-  if (klass->is_instance_klass() && InstanceKlass::cast(klass)->is_scratch_class()) {\n-    return;\n+  if (!used(klass) && klass->is_instance_klass() && InstanceKlass::cast(klass)->is_scratch_class()) {\n+    SET_TRANSIENT(klass);\n+    assert(used(klass), \"invariant\");\n@@ -1064,5 +1065,7 @@\n-      const int len = ik->methods()->length();\n-      for (int i = 0; i < len; ++i) {\n-        MethodPtr method = ik->methods()->at(i);\n-        if (_method_flag_predicate(method)) {\n-          _method_cb(method);\n+      while (ik != nullptr) {\n+        const int len = ik->methods()->length();\n+        for (int i = 0; i < len; ++i) {\n+          MethodPtr method = ik->methods()->at(i);\n+          if (_method_flag_predicate(method)) {\n+            _method_cb(method);\n+          }\n@@ -1070,0 +1073,3 @@\n+        \/\/ There can be multiple versions of the same method running\n+        \/\/ due to redefinition. Need to inspect the complete set of methods.\n+        ik = ik->previous_versions();\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSet.cpp","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -155,0 +155,1 @@\n+    if (InstanceKlass::cast(klass)->is_scratch_class()) return true;\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSetUtils.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -97,0 +97,5 @@\n+  if (latest_version == nullptr) {\n+    assert(AllowRedefinitionToAddDeleteMethods, \"invariant\");\n+    \/\/ method has been removed. Return old version.\n+    return method;\n+  }\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdLoadBarrier.inline.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -141,1 +141,5 @@\n-    assert(om != nullptr, \"invariant\");\n+    if (om == nullptr) {\n+      assert(AllowRedefinitionToAddDeleteMethods, \"invariant\");\n+      \/\/ nm is a newly added Method.\n+      continue;\n+    }\n@@ -171,1 +175,0 @@\n-\n","filename":"src\/hotspot\/share\/jfr\/support\/methodtracer\/jfrTraceTagging.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}