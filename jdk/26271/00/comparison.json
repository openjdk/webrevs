{"files":[{"patch":"@@ -15684,0 +15684,2 @@\n+    \/\/ Restore the original contents of RAX register.\n+    movq(rax, Address(rax));\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -356,1 +356,1 @@\n-  uint num_saved_regs = 4 + (dst != rax ? 1 : 0) + 4;\n+  uint num_saved_regs = 4 + (dst != rax ? 1 : 0) + 4 + (UseAPX ? 16 : 0);\n@@ -370,0 +370,19 @@\n+  \/\/ Save APX extended registers r16–r31 if enabled\n+  if (UseAPX) {\n+    __ movptr(Address(rsp, (--slot) * wordSize), r16);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r17);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r18);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r19);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r20);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r21);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r22);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r23);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r24);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r25);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r26);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r27);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r28);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r29);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r30);\n+    __ movptr(Address(rsp, (--slot) * wordSize), r31);\n+  }\n@@ -401,0 +420,19 @@\n+  \/\/ Restore APX extended registers r31–r16 if previously saved\n+  if (UseAPX) {\n+    __ movptr(r31, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r30, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r29, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r28, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r27, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r26, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r25, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r24, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r23, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r22, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r21, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r20, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r19, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r18, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r17, Address(rsp, (slot++) * wordSize));\n+    __ movptr(r16, Address(rsp, (slot++) * wordSize));\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp","additions":39,"deletions":1,"binary":false,"changes":40,"status":"modified"}]}