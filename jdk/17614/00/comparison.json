{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,15 @@\n-    g_nMonitorCounter ++;\n+    MONITORINFOEX mieInfo;\n+    memset((void*)(&mieInfo), 0, sizeof(MONITORINFOEX));\n+    mieInfo.cbSize = sizeof(MONITORINFOEX);\n+    if (TRUE == ::GetMonitorInfo(hMon, (LPMONITORINFOEX)(&mieInfo))) {\n+        HDC hDC = CreateDC(mieInfo.szDevice, NULL, NULL, NULL);\n+        if (NULL != hDC) {\n+            ::DeleteDC(hDC);\n+            g_nMonitorCounter++;\n+        } else {\n+            J2dTraceLn2(J2D_TRACE_INFO, \"Devices::CountMonitors CreateDC failed for monitor with handle %p, device: %S\", hMon, mieInfo.szDevice);\n+        }\n+    } else {\n+        J2dTraceLn1(J2D_TRACE_INFO, \"Devices::CountMonitors: GetMonitorInfo failed for monitor with handle %p\", hMon);\n+    }\n+\n@@ -107,1 +121,0 @@\n-\n@@ -113,4 +126,16 @@\n-\n-    if ((g_nMonitorCounter < g_nMonitorLimit) && (NULL != g_hmpMonitors)) {\n-        g_hmpMonitors[g_nMonitorCounter] = hMon;\n-        g_nMonitorCounter ++;\n+    if (g_nMonitorCounter < g_nMonitorLimit) {\n+        MONITORINFOEX mieInfo;\n+        memset((void*)(&mieInfo), 0, sizeof(MONITORINFOEX));\n+        mieInfo.cbSize = sizeof(MONITORINFOEX);\n+        if (TRUE == ::GetMonitorInfo(hMon, (LPMONITORINFOEX)(&mieInfo))) {\n+            HDC hDC = CreateDC(mieInfo.szDevice, NULL, NULL, NULL);\n+            if (NULL != hDC) {\n+                ::DeleteDC(hDC);\n+                g_hmpMonitors[g_nMonitorCounter] = hMon;\n+                g_nMonitorCounter++;\n+            } else {\n+                J2dTraceLn2(J2D_TRACE_INFO, \"Devices::CollectMonitors CreateDC failed for monitor with handle %p, device: %S\", hMon, mieInfo.szDevice);\n+            }\n+        } else {\n+            J2dTraceLn1(J2D_TRACE_INFO, \"Devices::CollectMonitors: GetMonitorInfo failed for monitor with handle %p\", hMon);\n+        }\n@@ -124,8 +149,4 @@\n-    int retCode = 0;\n-\n-    if (NULL != hmpMonitors) {\n-\n-        g_nMonitorCounter   = 0;\n-        g_nMonitorLimit     = nNum;\n-        g_hmpMonitors       = hmpMonitors;\n-\n+    g_nMonitorCounter = 0;\n+    g_hmpMonitors = hmpMonitors;\n+    g_nMonitorLimit = nNum;\n+    if (NULL != g_hmpMonitors) {\n@@ -133,7 +154,0 @@\n-\n-        retCode             = g_nMonitorCounter;\n-\n-        g_nMonitorCounter   = 0;\n-        g_nMonitorLimit     = 0;\n-        g_hmpMonitors       = NULL;\n-\n@@ -141,1 +155,1 @@\n-    return retCode;\n+    return g_nMonitorCounter;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/Devices.cpp","additions":37,"deletions":23,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -182,0 +182,3 @@\n+    VERIFY(hBMDC != NULL);\n+    if (hBMDC == NULL)\n+        return;\n@@ -183,0 +186,5 @@\n+    VERIFY(hBM != NULL);\n+    if (hBM == NULL) {\n+        VERIFY(::DeleteDC(hBMDC));\n+        return;\n+    }\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Win32GraphicsDevice.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n- * @requires !vm.debug | os.family != \"windows\"\n","filename":"test\/jdk\/javax\/swing\/reliability\/HangDuringStaticInitialization.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}