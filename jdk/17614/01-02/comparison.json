{"files":[{"patch":"@@ -95,2 +95,2 @@\n-\/\/ Callback for CountMonitors below\n-BOOL WINAPI clb_fCountMonitors(HMONITOR hMon, HDC hDC, LPRECT rRect, LPARAM lP)\n+\/\/ Only monitors where CreateDC does not fail are valid\n+static BOOL IsValidMonitor(HMONITOR hMon)\n@@ -98,1 +98,0 @@\n-    \/\/ Ignore monitors where CreateDC fails\n@@ -102,10 +101,3 @@\n-    if (TRUE == ::GetMonitorInfo(hMon, (LPMONITORINFOEX)(&mieInfo))) {\n-        HDC hDC = CreateDC(mieInfo.szDevice, NULL, NULL, NULL);\n-        if (NULL != hDC) {\n-            ::DeleteDC(hDC);\n-            g_nMonitorCounter++;\n-        } else {\n-            J2dTraceLn2(J2D_TRACE_INFO, \"Devices::CountMonitors CreateDC failed for monitor with handle %p, device: %S\", hMon, mieInfo.szDevice);\n-        }\n-    } else {\n-        J2dTraceLn1(J2D_TRACE_INFO, \"Devices::CountMonitors: GetMonitorInfo failed for monitor with handle %p\", hMon);\n+    if (!::GetMonitorInfo(hMon, (LPMONITORINFOEX)(&mieInfo))) {\n+        J2dTraceLn1(J2D_TRACE_INFO, \"Devices::IsValidMonitor: GetMonitorInfo failed for monitor with handle %p\", hMon);\n+        return FALSE;\n@@ -114,0 +106,7 @@\n+    HDC hDC = CreateDC(mieInfo.szDevice, NULL, NULL, NULL);\n+    if (NULL == hDC) {\n+        J2dTraceLn2(J2D_TRACE_INFO, \"Devices::IsValidMonitor: CreateDC failed for monitor with handle %p, device: %S\", hMon, mieInfo.szDevice);\n+        return FALSE;\n+    }\n+\n+    ::DeleteDC(hDC);\n@@ -117,1 +116,11 @@\n-int WINAPI CountMonitors(void)\n+\/\/ Callback for CountMonitors below\n+static BOOL WINAPI clb_fCountMonitors(HMONITOR hMon, HDC hDC, LPRECT rRect, LPARAM lP)\n+{\n+    if (IsValidMonitor(hMon)) {\n+        g_nMonitorCounter++;\n+    }\n+\n+    return TRUE;\n+}\n+\n+static int WINAPI CountMonitors(void)\n@@ -125,1 +134,1 @@\n-BOOL WINAPI clb_fCollectMonitors(HMONITOR hMon, HDC hDC, LPRECT rRect, LPARAM lP)\n+static BOOL WINAPI clb_fCollectMonitors(HMONITOR hMon, HDC hDC, LPRECT rRect, LPARAM lP)\n@@ -128,15 +137,3 @@\n-        \/\/ Ignore monitors where CreateDC fails\n-        MONITORINFOEX mieInfo;\n-        memset((void*)(&mieInfo), 0, sizeof(MONITORINFOEX));\n-        mieInfo.cbSize = sizeof(MONITORINFOEX);\n-        if (TRUE == ::GetMonitorInfo(hMon, (LPMONITORINFOEX)(&mieInfo))) {\n-            HDC hDC = CreateDC(mieInfo.szDevice, NULL, NULL, NULL);\n-            if (NULL != hDC) {\n-                ::DeleteDC(hDC);\n-                g_hmpMonitors[g_nMonitorCounter] = hMon;\n-                g_nMonitorCounter++;\n-            } else {\n-                J2dTraceLn2(J2D_TRACE_INFO, \"Devices::CollectMonitors CreateDC failed for monitor with handle %p, device: %S\", hMon, mieInfo.szDevice);\n-            }\n-        } else {\n-            J2dTraceLn1(J2D_TRACE_INFO, \"Devices::CollectMonitors: GetMonitorInfo failed for monitor with handle %p\", hMon);\n+        if (IsValidMonitor(hMon)) {\n+            g_hmpMonitors[g_nMonitorCounter] = hMon;\n+            g_nMonitorCounter++;\n@@ -149,1 +146,1 @@\n-int WINAPI CollectMonitors(HMONITOR* hmpMonitors, int nNum)\n+static int WINAPI CollectMonitors(HMONITOR* hmpMonitors, int nNum)\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/Devices.cpp","additions":28,"deletions":31,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-    if (hBMDC == NULL)\n+    if (hBMDC == NULL) {\n@@ -185,0 +185,1 @@\n+    }\n@@ -191,1 +192,7 @@\n-    VERIFY(::GetDIBits(hBMDC, hBM, 0, 1, NULL, gpBitmapInfo, DIB_RGB_COLORS));\n+    int getDiBitsRC = ::GetDIBits(hBMDC, hBM, 0, 1, NULL, gpBitmapInfo, DIB_RGB_COLORS);\n+    VERIFY(getDiBitsRC);\n+    if (getDiBitsRC == 0) {\n+        VERIFY(::DeleteObject(hBM));\n+        VERIFY(::DeleteDC(hBMDC));\n+        return;\n+    }\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Win32GraphicsDevice.cpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}