{"files":[{"patch":"@@ -31,0 +31,2 @@\n+import sun.awt.windows.WToolkit;\n+\n@@ -33,0 +35,8 @@\n+    private static boolean hasDisplays = hasDisplays0();\n+\n+    private static native boolean hasDisplays0();\n+\n+    private static boolean hasDisplays() {\n+        return hasDisplays;\n+    }\n+\n@@ -38,1 +48,1 @@\n-        return new sun.awt.windows.WToolkit();\n+        return new WToolkit();\n@@ -43,1 +53,1 @@\n-        return !Win32GraphicsEnvironment.hasDisplays();\n+        return !hasDisplays();\n@@ -56,1 +66,0 @@\n-\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/PlatformGraphicsInfo.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -57,2 +57,0 @@\n-    static final boolean hasDisplays;\n-\n@@ -65,1 +63,2 @@\n-        hasDisplays = initDisplay();\n+\n+        initDisplay();\n@@ -87,1 +86,1 @@\n-     * Initializes native components of the graphics environment.  This\n+     * Initializes native components of the graphics environment. This\n@@ -91,5 +90,1 @@\n-    private static native boolean initDisplay();\n-\n-    static boolean hasDisplays() {\n-        return hasDisplays;\n-    }\n+    private static native void initDisplay();\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/Win32GraphicsEnvironment.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -126,1 +126,1 @@\n-static int WINAPI CountMonitors(void)\n+int WINAPI CountMonitors(void)\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/Devices.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,0 +77,2 @@\n+int WINAPI CountMonitors (void);\n+\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/Devices.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2024 SAP SE. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <sun_awt_PlatformGraphicsInfo.h>\n+#include \"Devices.h\"\n+\n+\/*\n+ * Class:     sun_awt_PlatformGraphicsInfo\n+ * Method:    hasDisplays0\n+ * Signature: ()Z\n+ *\/\n+JNIEXPORT jboolean JNICALL\n+Java_sun_awt_PlatformGraphicsInfo_hasDisplays0(JNIEnv *env, jclass thisClass) {\n+    return CountMonitors() > 0 ? JNI_TRUE : JNI_FALSE;\n+}\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PlatformGraphicsInfo.cpp","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-extern jboolean initScreens(JNIEnv *env);\n+extern void initScreens(JNIEnv *env);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Toolkit.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,2 +38,1 @@\n-jboolean initScreens(JNIEnv *env) {\n-\n+void initScreens(JNIEnv *env) {\n@@ -43,6 +42,0 @@\n-\n-    \/\/ return true if at least one device is available\n-    Devices * devices = Devices::GetInstance();\n-    int numDevices = devices->GetNumDevices();\n-    devices->Release();\n-    return numDevices > 0 ? JNI_TRUE : JNI_FALSE;\n@@ -143,1 +136,1 @@\n- * Signature: ()Z\n+ * Signature: ()V\n@@ -145,1 +138,1 @@\n-JNIEXPORT jboolean JNICALL\n+JNIEXPORT void JNICALL\n@@ -154,1 +147,1 @@\n-    return initScreens(env);\n+    initScreens(env);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Win32GraphicsEnv.cpp","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"}]}