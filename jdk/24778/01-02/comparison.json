{"files":[{"patch":"@@ -39,2 +39,3 @@\n- * This presents two dialogs, each with two possible default buttons. The background color of the\n- * default button should change based on which radio button is selected.\n+ * This presents two dialogs, each with two possible default buttons. The\n+ * background color of the default button should change based on which radio\n+ * button is selected.\n@@ -42,3 +43,4 @@\n- * Note we've never expected this test to fail. This test was introduced because the resolution\n- * to JDK-8344697 involved removing code, and we wanted to double-check that the removed code\n- * didn't negatively affect how default buttons are repainted.\n+ * Note we've never expected this test to fail. This test was introduced\n+ * because the resolution to JDK-8344697 involved removing code, and we wanted\n+ * to double-check that the removed code didn't negatively affect how default\n+ * buttons are repainted.\n@@ -48,1 +50,2 @@\n-    record ButtonRenderingExpectation(JButton button, boolean appearAsDefault) {}\n+    record ButtonRenderingExpectation(JButton button,\n+                                      boolean appearAsDefault) {}\n@@ -52,1 +55,1 @@\n-            System.out.println(\"This test is for MacOS only. Automatically passed on: \" + System.getProperty(\"os.name\"));\n+            System.out.println(\"This test is for MacOS only.\");\n@@ -116,1 +119,3 @@\n-    private static void test(Robot robot, AbstractButton buttonToClick, ButtonRenderingExpectation... expectations) throws Exception {\n+    private static void test(Robot robot, AbstractButton buttonToClick,\n+                             ButtonRenderingExpectation... expectations)\n+            throws Exception {\n@@ -119,2 +124,3 @@\n-        robot.mouseMove(buttonToClick.getLocationOnScreen().x + buttonToClick.getSize().width\/2,\n-                buttonToClick.getLocationOnScreen().y + buttonToClick.getSize().height\/2 );\n+        Point mouseLoc = buttonToClick.getLocationOnScreen();\n+        robot.mouseMove(mouseLoc.x + buttonToClick.getSize().width \/ 2,\n+                mouseLoc.y + buttonToClick.getSize().height \/ 2);\n@@ -127,5 +133,6 @@\n-        \/\/ the colors may change depending on your system's appearance. Depending\n-        \/\/ on how you've configured \"Appearance\" in the System Settings app: the\n-        \/\/ default button may be blue (the default), red, purple, etc. So instead\n-        \/\/ of checking for a specific color: we'll make sure 3-4 are the same color,\n-        \/\/ and one is significantly different.\n+        \/\/ the colors may change depending on your system's appearance.\n+        \/\/ Depending on how you've configured \"Appearance\" in the\n+        \/\/ System Settings app: the default button may be blue (the default),\n+        \/\/ red, purple, etc. So instead of checking for a specific color: we'll\n+        \/\/ make sure 3-4 are the same color, and one is significantly\n+        \/\/ different.\n@@ -139,2 +146,2 @@\n-            \/\/ this mouseMove is optional, but it helps debug this test to see where\n-            \/\/ we're sampling the pixel color from:\n+            \/\/ this mouseMove is optional, but it helps debug this test to see\n+            \/\/ where we're sampling the pixel color from:\n@@ -148,1 +155,2 @@\n-                    throw new IllegalStateException(\"there should only be at most 1 default button sampled\");\n+                    throw new IllegalStateException(\n+                            \"there should only be at most 1 default button\");\n@@ -154,1 +162,3 @@\n-                    throw new IllegalStateException(\"these two colors should match: \" + c + \", \" + nonDefaultColor);\n+                    throw new IllegalStateException(\n+                            \"these two colors should match: \" + c + \", \" +\n+                                    nonDefaultColor);\n@@ -160,1 +170,4 @@\n-            throw new IllegalStateException(\"The default button and non-default buttons should look different: \" + defaultColor + \" matches \" + nonDefaultColor);\n+            throw new IllegalStateException(\n+                    \"The default button and non-default buttons should \" +\n+                            \"look different: \" + defaultColor + \" matches \" +\n+                            nonDefaultColor);\n@@ -177,2 +190,4 @@\n-    JRadioButton radioButton1 = new JRadioButton(\"\\\"Button 1\\\" is the default button\");\n-    JRadioButton radioButton2 = new JRadioButton(\"\\\"Button 2\\\" is the default button\");\n+    JRadioButton radioButton1 = new JRadioButton(\n+            \"\\\"Button 1\\\" is the default button\");\n+    JRadioButton radioButton2 = new JRadioButton(\n+            \"\\\"Button 2\\\" is the default button\");\n","filename":"test\/jdk\/com\/apple\/laf\/RootPane\/RootPaneDefaultButtonTest.java","additions":37,"deletions":22,"binary":false,"changes":59,"status":"modified"}]}