{"files":[{"patch":"@@ -128,1 +128,1 @@\n-  ClassLoaderDataGraph::classes_do(this);\n+  ClassLoaderDataGraph::classes_do_no_keepalive(this);\n","filename":"src\/hotspot\/share\/cds\/cdsHeapVerifier.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-  ClassLoaderDataGraph::loaded_cld_do(&closure);\n+  ClassLoaderDataGraph::loaded_cld_do_no_keepalive(&closure);\n","filename":"src\/hotspot\/share\/cds\/classListWriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -205,1 +205,1 @@\n-    ClassLoaderDataGraph::loaded_cld_do(&collect_classes);\n+    ClassLoaderDataGraph::loaded_cld_do_no_keepalive(&collect_classes);\n@@ -628,1 +628,1 @@\n-    \/\/ ClassLoaderDataGraph::loaded_cld_do requires ClassLoaderDataGraph_lock.\n+    \/\/ ClassLoaderDataGraph::loaded_cld_do_no_keepalive requires ClassLoaderDataGraph_lock.\n@@ -633,1 +633,1 @@\n-    ClassLoaderDataGraph::loaded_cld_do(&collect_cld);\n+    ClassLoaderDataGraph::loaded_cld_do_no_keepalive(&collect_cld);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -245,2 +245,1 @@\n-template <bool keep_alive = true>\n-class ClassLoaderDataGraphIteratorBase : public StackObj {\n+class ClassLoaderDataGraph::ClassLoaderDataGraphIterator : public StackObj {\n@@ -254,6 +253,2 @@\n-  ClassLoaderDataGraphIteratorBase() : _next(ClassLoaderDataGraph::_head), _thread(Thread::current()), _hm(_thread) {\n-    if (keep_alive) {\n-      assert_locked_or_safepoint(ClassLoaderDataGraph_lock);\n-    } else {\n-      assert_at_safepoint();\n-    }\n+  ClassLoaderDataGraphIterator() : _next(ClassLoaderDataGraph::_head), _thread(Thread::current()), _hm(_thread) {\n+    assert_locked_or_safepoint(ClassLoaderDataGraph_lock);\n@@ -269,4 +264,0 @@\n-      if (keep_alive) {\n-        \/\/ Keep cld that is being returned alive.\n-        Handle(_thread, cld->holder());\n-      }\n@@ -281,10 +272,0 @@\n-using ClassLoaderDataGraphIterator = ClassLoaderDataGraphIteratorBase<true \/* keep_alive *\/>;\n-using ClassLoaderDataGraphIteratorNoKeepAlive = ClassLoaderDataGraphIteratorBase<false \/* keep_alive *\/>;\n-\n-void ClassLoaderDataGraph::loaded_cld_do(CLDClosure* cl) {\n-  ClassLoaderDataGraphIterator iter;\n-  while (ClassLoaderData* cld = iter.get_next()) {\n-    cl->do_cld(cld);\n-  }\n-}\n-\n@@ -292,1 +273,1 @@\n-  ClassLoaderDataGraphIteratorNoKeepAlive iter;\n+  ClassLoaderDataGraphIterator iter;\n@@ -300,1 +281,1 @@\n-void ClassLoaderDataGraph::classes_do(KlassClosure* klass_closure) {\n+void ClassLoaderDataGraph::classes_do_no_keepalive(KlassClosure* klass_closure) {\n@@ -307,1 +288,1 @@\n-void ClassLoaderDataGraph::classes_do(void f(Klass* const)) {\n+void ClassLoaderDataGraph::classes_do_no_keepalive(void f(Klass* const)) {\n@@ -314,1 +295,1 @@\n-void ClassLoaderDataGraph::methods_do(void f(Method*)) {\n+void ClassLoaderDataGraph::methods_do_no_keepalive(void f(Method*)) {\n@@ -321,1 +302,1 @@\n-void ClassLoaderDataGraph::modules_do(void f(ModuleEntry*)) {\n+void ClassLoaderDataGraph::modules_do_keepalive(void f(ModuleEntry*)) {\n@@ -325,0 +306,2 @@\n+    \/\/ Keep the holder alive.\n+    (void)cld->holder();\n@@ -329,1 +312,9 @@\n-void ClassLoaderDataGraph::packages_do(void f(PackageEntry*)) {\n+void ClassLoaderDataGraph::modules_do_no_keepalive(void f(ModuleEntry*)) {\n+  assert_locked_or_safepoint(Module_lock);\n+  ClassLoaderDataGraphIterator iter;\n+  while (ClassLoaderData* cld = iter.get_next()) {\n+    cld->modules_do(f);\n+  }\n+}\n+\n+void ClassLoaderDataGraph::packages_do_no_keepalive(void f(PackageEntry*)) {\n@@ -337,1 +328,1 @@\n-void ClassLoaderDataGraph::loaded_classes_do(KlassClosure* klass_closure) {\n+void ClassLoaderDataGraph::loaded_classes_do_keepalive(KlassClosure* klass_closure) {\n@@ -340,0 +331,2 @@\n+    \/\/ Keep the holder alive.\n+    (void)cld->holder();\n@@ -349,1 +342,1 @@\n-  ClassLoaderDataGraphIteratorNoKeepAlive iter;\n+  ClassLoaderDataGraphIterator iter;\n@@ -357,4 +350,0 @@\n-#define FOR_ALL_DICTIONARY(X)   ClassLoaderDataGraphIterator iter; \\\n-                                while (ClassLoaderData* X = iter.get_next()) \\\n-                                  if (X->dictionary() != nullptr)\n-\n@@ -362,6 +351,9 @@\n-  FOR_ALL_DICTIONARY(cld) {\n-    st->print(\"Dictionary for \");\n-    cld->print_value_on(st);\n-    st->cr();\n-    cld->dictionary()->print_on(st);\n-    st->cr();\n+  ClassLoaderDataGraphIterator iter;\n+  while (ClassLoaderData *cld = iter.get_next()) {\n+    if (cld->dictionary() != nullptr) {\n+      st->print(\"Dictionary for \");\n+      cld->print_value_on(st);\n+      st->cr();\n+      cld->dictionary()->print_on(st);\n+      st->cr();\n+    }\n@@ -372,5 +364,8 @@\n-  FOR_ALL_DICTIONARY(cld) {\n-    ResourceMark rm; \/\/ loader_name_and_id\n-    stringStream tempst;\n-    tempst.print(\"System Dictionary for %s class loader\", cld->loader_name_and_id());\n-    cld->dictionary()->print_table_statistics(st, tempst.freeze());\n+  ClassLoaderDataGraphIterator iter;\n+  while (ClassLoaderData *cld = iter.get_next()) {\n+    if (cld->dictionary() != nullptr) {\n+      ResourceMark rm; \/\/ loader_name_and_id\n+      stringStream tempst;\n+      tempst.print(\"System Dictionary for %s class loader\", cld->loader_name_and_id());\n+      cld->dictionary()->print_table_statistics(st, tempst.freeze());\n+    }\n@@ -553,1 +548,1 @@\n-  ClassLoaderDataGraphIteratorNoKeepAlive iter;\n+  ClassLoaderDataGraphIterator iter;\n","filename":"src\/hotspot\/share\/classfile\/classLoaderDataGraph.cpp","additions":41,"deletions":46,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -40,2 +40,0 @@\n-  template <bool keep_alive>\n-  friend class ClassLoaderDataGraphIteratorBase;\n@@ -44,0 +42,2 @@\n+  class ClassLoaderDataGraphIterator;\n+\n@@ -74,1 +74,0 @@\n-  static void loaded_cld_do(CLDClosure* cl);\n@@ -81,6 +80,7 @@\n-  static void classes_do(KlassClosure* klass_closure);\n-  static void classes_do(void f(Klass* const));\n-  static void methods_do(void f(Method*));\n-  static void modules_do(void f(ModuleEntry*));\n-  static void packages_do(void f(PackageEntry*));\n-  static void loaded_classes_do(KlassClosure* klass_closure);\n+  static void classes_do_no_keepalive(KlassClosure* klass_closure);\n+  static void classes_do_no_keepalive(void f(Klass* const));\n+  static void methods_do_no_keepalive(void f(Method*));\n+  static void modules_do_keepalive(void f(ModuleEntry*));\n+  static void modules_do_no_keepalive(void f(ModuleEntry*));\n+  static void packages_do_no_keepalive(void f(PackageEntry*));\n+  static void loaded_classes_do_keepalive(KlassClosure* klass_closure);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderDataGraph.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -539,1 +539,1 @@\n-    ClassLoaderDataGraph::loaded_cld_do(&cl);\n+    ClassLoaderDataGraph::loaded_cld_do_no_keepalive(&cl);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderHierarchyDCmd.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-  ClassLoaderDataGraph::classes_do(&closure);\n+  ClassLoaderDataGraph::classes_do_no_keepalive(&closure);\n@@ -177,1 +177,1 @@\n-  ClassLoaderDataGraph::classes_do(&closure);\n+  ClassLoaderDataGraph::classes_do_no_keepalive(&closure);\n","filename":"src\/hotspot\/share\/classfile\/classPrinter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-    ClassLoaderDataGraph::loaded_cld_do(&clean);\n+    ClassLoaderDataGraph::loaded_cld_do_no_keepalive(&clean);\n","filename":"src\/hotspot\/share\/classfile\/protectionDomainCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1588,1 +1588,1 @@\n-    ClassLoaderDataGraph::methods_do(f);\n+    ClassLoaderDataGraph::methods_do_no_keepalive(f);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-  ClassLoaderDataGraph::modules_do(&module_dependency_event_callback);\n+  ClassLoaderDataGraph::modules_do_no_keepalive(&module_dependency_event_callback);\n@@ -136,1 +136,1 @@\n-  ClassLoaderDataGraph::packages_do(&module_export_event_callback);\n+  ClassLoaderDataGraph::packages_do_no_keepalive(&module_export_event_callback);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrModuleEvent.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -622,1 +622,1 @@\n-    ClassLoaderDataGraph::loaded_cld_do(&clsc);\n+    ClassLoaderDataGraph::loaded_cld_do_no_keepalive(&clsc);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrPeriodic.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -514,1 +514,1 @@\n-  ClassLoaderDataGraph::classes_do(&do_klass_on_clear);\n+  ClassLoaderDataGraph::classes_do_no_keepalive(&do_klass_on_clear);\n@@ -641,1 +641,1 @@\n-  ClassLoaderDataGraph::packages_do(&do_package);\n+  ClassLoaderDataGraph::packages_do_no_keepalive(&do_package);\n@@ -748,1 +748,1 @@\n-  ClassLoaderDataGraph::modules_do(&do_module);\n+  ClassLoaderDataGraph::modules_do_no_keepalive(&do_module);\n@@ -871,1 +871,1 @@\n-  ClassLoaderDataGraph::loaded_cld_do(&cld_cb);\n+  ClassLoaderDataGraph::loaded_cld_do_no_keepalive(&cld_cb);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSet.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-      ClassLoaderDataGraph::classes_do(&finder);\n+      ClassLoaderDataGraph::classes_do_no_keepalive(&finder);\n","filename":"src\/hotspot\/share\/memory\/heapInspection.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-  ClassLoaderDataGraph::loaded_cld_do(&cl); \/\/ collect data and optionally print\n+  ClassLoaderDataGraph::loaded_cld_do_no_keepalive(&cl); \/\/ collect data and optionally print\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceReporter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -639,1 +639,1 @@\n-  ClassLoaderDataGraph::classes_do(&cl);\n+  ClassLoaderDataGraph::classes_do_no_keepalive(&cl);\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2342,1 +2342,1 @@\n-  ClassLoaderDataGraph::modules_do(&do_module);\n+  ClassLoaderDataGraph::modules_do_keepalive(&do_module);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-    ClassLoaderDataGraph::loaded_classes_do(&closure);\n+    ClassLoaderDataGraph::loaded_classes_do_keepalive(&closure);\n","filename":"src\/hotspot\/share\/prims\/jvmtiGetLoadedClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-  ClassLoaderDataGraph::classes_do(&adjust_and_clean_metadata);\n+  ClassLoaderDataGraph::classes_do_no_keepalive(&adjust_and_clean_metadata);\n@@ -300,1 +300,1 @@\n-    ClassLoaderDataGraph::classes_do(&check_class);\n+    ClassLoaderDataGraph::classes_do_no_keepalive(&check_class);\n@@ -3703,3 +3703,3 @@\n-\/\/ use the ClassLoaderDataGraph::classes_do() facility and this helper\n-\/\/ to fix up these pointers.  MethodData also points to old methods and\n-\/\/ must be cleaned.\n+\/\/ use the ClassLoaderDataGraph::classes_do_no_keepalive() facility and\n+\/\/ this helper to fix up these pointers.  MethodData also points to old\n+\/\/ methods and must be cleaned.\n@@ -4186,4 +4186,4 @@\n-\/\/      ClassLoaderDataGraph::classes_do() facility which only allows\n-\/\/      a helper method to be specified. The interesting parameters\n-\/\/      that we would like to pass to the helper method are saved in\n-\/\/      static global fields in the VM operation.\n+\/\/      ClassLoaderDataGraph::classes_do_no_keepalive() facility which\n+\/\/      only allows a helper method to be specified. The interesting\n+\/\/      parameters that we would like to pass to the helper method are\n+\/\/      saved in static global fields in the VM operation.\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -334,1 +334,1 @@\n-  \/\/ These static fields are needed by ClassLoaderDataGraph::classes_do()\n+  \/\/ These static fields are needed by ClassLoaderDataGraph::classes_do_no_keepalive()\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -228,1 +228,1 @@\n-  ClassLoaderDataGraph::classes_do(&closure);\n+  ClassLoaderDataGraph::classes_do_no_keepalive(&closure);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -990,1 +990,1 @@\n-    ClassLoaderDataGraph::classes_do(&closure);\n+    ClassLoaderDataGraph::classes_do_no_keepalive(&closure);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2468,1 +2468,1 @@\n-      ClassLoaderDataGraph::classes_do(&locked_load_classes);\n+      ClassLoaderDataGraph::classes_do_no_keepalive(&locked_load_classes);\n@@ -2491,1 +2491,1 @@\n-      ClassLoaderDataGraph::classes_do(&class_dumper);\n+      ClassLoaderDataGraph::classes_do_no_keepalive(&class_dumper);\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}