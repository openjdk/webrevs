{"files":[{"patch":"@@ -131,1 +131,1 @@\n-  _mutable_data(nullptr),\n+  _mutable_data(header_begin() + size), \/\/ default value is blob_end()\n@@ -161,0 +161,3 @@\n+  } else {\n+    \/\/ We need unique and valid not null address\n+    assert(_mutable_data == blob_end(), \"sanity\");\n@@ -162,1 +165,0 @@\n-  assert(_mutable_data != nullptr || _mutable_data_size == 0, \"No mutable data => mutable data size is 0\");\n@@ -171,1 +173,1 @@\n-  _mutable_data(nullptr),\n+  _mutable_data(header_begin() + size), \/\/ default value is blob_end()\n@@ -185,1 +187,0 @@\n-  assert(_mutable_data == nullptr && _mutable_data_size == 0, \"invariant\");\n@@ -188,0 +189,1 @@\n+  assert(_mutable_data == blob_end(), \"sanity\");\n@@ -198,1 +200,1 @@\n-    _mutable_data = nullptr;\n+    _mutable_data = blob_end(); \/\/ default value\n@@ -207,7 +209,11 @@\n-  os::free(_mutable_data);\n-  _mutable_data = nullptr;\n-  _mutable_data_size = 0;\n-  delete _oop_maps;\n-  _oop_maps = nullptr;\n-  _relocation_size = 0;\n-\n+  assert(_mutable_data != nullptr, \"should never be null\");\n+  if (_mutable_data != blob_end()) {\n+    os::free(_mutable_data);\n+    _mutable_data = blob_end(); \/\/ Valid not null address\n+    _mutable_data_size = 0;\n+    _relocation_size = 0;\n+  }\n+  if (_oop_maps != nullptr) {\n+    delete _oop_maps;\n+    _oop_maps = nullptr;\n+  }\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":18,"deletions":12,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1330,2 +1330,2 @@\n-    \/\/ native wrapper does not have read-only data\n-    _immutable_data          = nullptr;\n+    \/\/ native wrapper does not have read-only data but we need unique not null address\n+    _immutable_data          = blob_end();\n@@ -1513,1 +1513,2 @@\n-      _immutable_data     = nullptr;\n+      \/\/ We need unique not null address\n+      _immutable_data     = blob_end();\n@@ -2149,2 +2150,3 @@\n-\n-  delete _pc_desc_container;\n+  if (_pc_desc_container != nullptr) {\n+    delete _pc_desc_container;\n+  }\n@@ -2153,4 +2155,4 @@\n-  os::free(_immutable_data);\n-  _immutable_data = nullptr;\n-  _immutable_data_size = 0;\n-\n+  if (_immutable_data != blob_end()) {\n+    os::free(_immutable_data);\n+    _immutable_data = blob_end(); \/\/ Valid not null address\n+  }\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -119,0 +119,3 @@\n+\/\/ A static dummy to serve as a safe pointer when there is no relocation info.\n+static relocInfo dummy_relocInfo = relocInfo(relocInfo::none, 0);\n+\n@@ -130,3 +133,8 @@\n-  _base = nm->relocation_begin();\n-  _current = -1;\n-  _len = nm->relocation_end() - _base;\n+  if (nm->relocation_size() == 0) {\n+    _current = &dummy_relocInfo - 1;\n+    _end = &dummy_relocInfo;\n+  } else {\n+    assert(((nm->relocation_begin() != nullptr) && (nm->relocation_end() != nullptr)), \"valid start and end pointer\");\n+    _current = nm->relocation_begin() - 1;\n+    _end     = nm->relocation_end();\n+  }\n@@ -151,9 +159,0 @@\n-RelocIterator::RelocIterator(relocInfo& ri) {\n-  initialize_misc();\n-  _base = &ri;\n-  _len = 1;\n-  _current = -1;\n-  _limit = nullptr;\n-  _addr = 0;\n-}\n-\n@@ -163,3 +162,2 @@\n-  _base = cs->locs_start();\n-  _len = cs->locs_end() - _base;\n-  _current = -1;\n+  _current = cs->locs_start() - 1;\n+  _end     = cs->locs_end();\n@@ -191,3 +189,2 @@\n-  _base = cb->relocation_begin();\n-  _len = cb->relocation_end() - _base;\n-  _current = -1;\n+  _current = cb->relocation_begin() - 1;\n+  _end     = cb->relocation_end();\n@@ -222,1 +219,1 @@\n-    int backup;\n+    relocInfo* backup;\n@@ -244,3 +241,3 @@\n-  if (current()->is_datalen()) {\n-    _data    = (short*) current()->data();\n-    _datalen =          current()->datalen();\n+  if (_current->is_datalen()) {\n+    _data    = (short*) _current->data();\n+    _datalen =          _current->datalen();\n@@ -249,1 +246,1 @@\n-    _databuf = current()->immediate();\n+    _databuf = _current->immediate();\n@@ -356,3 +353,3 @@\n-  relocInfo ri(rtype, 0);\n-  RelocIterator itr(ri);\n-  itr.next();\n+  relocInfo ri = relocInfo(rtype, 0);\n+  RelocIterator itr;\n+  itr.set_current(ri);\n@@ -845,1 +842,1 @@\n-            p2i(current()), type(), relocInfo::type_name((relocInfo::relocType) type()), p2i(_addr), current()->addr_offset());\n+             p2i(_current), type(), relocInfo::type_name((relocInfo::relocType) type()), p2i(_addr), _current->addr_offset());\n@@ -996,1 +993,1 @@\n-  relocInfo* scan = current_no_check();\n+  relocInfo* scan = _current;\n@@ -1006,1 +1003,1 @@\n-    relocInfo* newscan = current_no_check()+1;\n+    relocInfo* newscan = _current+1;\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":26,"deletions":29,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -565,3 +565,2 @@\n-  relocInfo*      _base;    \/\/ base pointer into relocInfo array\n-  int             _current; \/\/ current index\n-  int             _len;     \/\/ length\n+  relocInfo*      _current; \/\/ the current relocation information\n+  relocInfo*      _end;     \/\/ end marker; we're done iterating when _current == _end\n@@ -570,1 +569,0 @@\n-  short*          _data;    \/\/ pointer to the relocation's data\n@@ -572,0 +570,1 @@\n+  short*          _data;    \/\/ pointer to the relocation's data\n@@ -582,0 +581,4 @@\n+  void set_current(relocInfo& ri) {\n+    _current = &ri;\n+    set_has_current(true);\n+  }\n@@ -585,5 +588,2 @@\n-  relocInfo* current_no_check() const { return &_base[_current]; }\n-  relocInfo* current() const {\n-    assert(has_current(), \"must have current\");\n-    return current_no_check();\n-  }\n+  relocInfo* current() const { assert(has_current(), \"must have current\");\n+                               return _current; }\n@@ -600,1 +600,0 @@\n-  RelocIterator(relocInfo& ri);\n@@ -611,2 +610,2 @@\n-    assert(_current <= _len, \"must not overrun relocInfo\");\n-    if (_current == _len) {\n+    assert(_current <= _end, \"must not overrun relocInfo\");\n+    if (_current == _end) {\n@@ -618,1 +617,1 @@\n-    if (current()->is_prefix()) {\n+    if (_current->is_prefix()) {\n@@ -623,1 +622,1 @@\n-    _addr += current()->addr_offset();\n+    _addr += _current->addr_offset();\n@@ -629,0 +628,1 @@\n+\n","filename":"src\/hotspot\/share\/code\/relocInfo.hpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"}]}