{"files":[{"patch":"@@ -5179,1 +5179,1 @@\n-  Handle module_handle(THREAD, module_entry->module());\n+  Handle module_handle(THREAD, module_entry->module_oop());\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-  return _archived_javabase_moduleEntry->module();\n+  return _archived_javabase_moduleEntry->module_oop();\n","filename":"src\/hotspot\/share\/classfile\/classLoaderDataShared.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1039,1 +1039,1 @@\n-      assert(javabase_entry != nullptr && javabase_entry->module() != nullptr,\n+      assert(javabase_entry != nullptr && javabase_entry->module_oop() != nullptr,\n@@ -1041,1 +1041,1 @@\n-      Handle javabase_handle(current, javabase_entry->module());\n+      Handle javabase_handle(current, javabase_entry->module_oop());\n@@ -1047,1 +1047,1 @@\n-            (module() == ModuleEntryTable::javabase_moduleEntry()->module())),\n+            (module() == ModuleEntryTable::javabase_moduleEntry()->module_oop())),\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-oop ModuleEntry::module() const { return _module.resolve(); }\n+oop ModuleEntry::module_oop() const { return _module_handle.resolve(); }\n@@ -287,1 +287,1 @@\n-    _module = loader_data->add_handle(module_handle);\n+    _module_handle = loader_data->add_handle(module_handle);\n@@ -404,1 +404,1 @@\n-    archived_entry->_archived_module_index = HeapShared::append_root(module());\n+    archived_entry->_archived_module_index = HeapShared::append_root(module_oop());\n@@ -425,1 +425,1 @@\n-  archived_entry->_module = null_handle;\n+  archived_entry->_module_handle = null_handle;\n@@ -529,1 +529,1 @@\n-  set_module(loader_data->add_handle(module_handle));\n+  set_module_handle(loader_data->add_handle(module_handle));\n@@ -665,1 +665,1 @@\n-  jb_module->set_module(boot_loader_data->add_handle(module_handle));\n+  jb_module->set_module_handle(boot_loader_data->add_handle(module_handle));\n@@ -703,1 +703,1 @@\n-      Handle unnamed_module_handle(current, unnamed_module->module());\n+      Handle unnamed_module_handle(current, unnamed_module->module_oop());\n@@ -748,1 +748,1 @@\n-               p2i(module()),\n+               p2i(module_oop()),\n","filename":"src\/hotspot\/share\/classfile\/moduleEntry.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-\/\/   - pointer to the java.lang.Module for this module.\n+\/\/   - pointer to the java.lang.Module: the representation of this module as a Java object\n@@ -66,1 +66,1 @@\n-  OopHandle _module;                   \/\/ java.lang.Module\n+  OopHandle _module_handle;            \/\/ java.lang.Module\n@@ -99,3 +99,3 @@\n-  oop              module() const;\n-  OopHandle        module_handle() const               { return _module; }\n-  void             set_module(OopHandle j)             { _module = j; }\n+  oop              module_oop() const;\n+  OopHandle        module_handle() const               { return _module_handle; }\n+  void             set_module_handle(OopHandle j)      { _module_handle = j; }\n@@ -265,1 +265,1 @@\n-                                           (_javabase_module->module() != nullptr)); }\n+                                           (_javabase_module->module_oop() != nullptr)); }\n","filename":"src\/hotspot\/share\/classfile\/moduleEntry.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -776,1 +776,1 @@\n-  unnamed_module->set_module(boot_loader_data->add_handle(module));\n+  unnamed_module->set_module_handle(boot_loader_data->add_handle(module));\n@@ -957,2 +957,2 @@\n-  if (module_entry != nullptr && module_entry->module() != nullptr && module_entry->is_named()) {\n-    return module_entry->module();\n+  if (module_entry != nullptr && module_entry->module_oop() != nullptr && module_entry->is_named()) {\n+    return module_entry->module_oop();\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -240,1 +240,1 @@\n-    module = module_entry->module();\n+    module = module_entry->module_oop();\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrUpcalls.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-          if (excludeModules->obj_at(i) == moduleEntry->module()) {\n+          if (excludeModules->obj_at(i) == moduleEntry->module_oop()) {\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,2 +123,2 @@\n-  oop module = (module_entry != nullptr) ? module_entry->module() : (oop)nullptr;\n-  java_lang_Class::create_mirror(k, Handle(THREAD, k->class_loader()), Handle(THREAD, module), Handle(), Handle(), CHECK);\n+  oop module_oop = (module_entry != nullptr) ? module_entry->module_oop() : (oop)nullptr;\n+  java_lang_Class::create_mirror(k, Handle(THREAD, k->class_loader()), Handle(THREAD, module_oop), Handle(), Handle(), CHECK);\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -899,1 +899,1 @@\n-  Handle module_handle(THREAD, ((module_entry != nullptr) ? module_entry->module() : (oop)nullptr));\n+  Handle module_handle(THREAD, ((module_entry != nullptr) ? module_entry->module_oop() : (oop)nullptr));\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -946,1 +946,1 @@\n-            module_entry->module() != nullptr &&\n+            module_entry->module_oop() != nullptr &&\n@@ -951,1 +951,1 @@\n-            Handle class_module(_thread, module_entry->module()); \/\/ Obtain j.l.r.Module\n+            Handle class_module(_thread, module_entry->module_oop()); \/\/ Obtain j.l.r.Module\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -554,3 +554,3 @@\n-        oop jlm = module_to->module();\n-        assert(jlm != nullptr, \"Null jlm in module_to ModuleEntry\");\n-        intptr_t identity_hash = jlm->identity_hash();\n+        oop module_oop = module_to->module_oop();\n+        precond(module_oop != nullptr);\n+        intptr_t identity_hash = module_oop->identity_hash();\n@@ -581,3 +581,3 @@\n-        oop jlm = module_from->module();\n-        assert(jlm != nullptr, \"Null jlm in module_from ModuleEntry\");\n-        intptr_t identity_hash = jlm->identity_hash();\n+        oop module_oop = module_from->module_oop();\n+        precond(module_oop != nullptr);\n+        intptr_t identity_hash = module_oop->identity_hash();\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}