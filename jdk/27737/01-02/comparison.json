{"files":[{"patch":"@@ -43,1 +43,1 @@\n-        var s = (String)create(ResultTypeNotBeingCapturedTest::makeX);\n+        return create(ResultTypeNotBeingCapturedTest::makeX).self();\n@@ -47,1 +47,1 @@\n-        var s = (String)create(() -> makeX());\n+        return create(() -> makeX()).self();\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/ResultTypeNotBeingCapturedTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-ResultTypeNotBeingCapturedTest.java:43:31: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: ResultTypeNotBeingCapturedTest.X<ResultTypeNotBeingCapturedTest.X<compiler.misc.type.captureof: 1, ?>>, java.lang.String)\n-ResultTypeNotBeingCapturedTest.java:47:31: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: ResultTypeNotBeingCapturedTest.X<ResultTypeNotBeingCapturedTest.X<compiler.misc.type.captureof: 1, ?>>, java.lang.String)\n+ResultTypeNotBeingCapturedTest.java:43:66: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: ResultTypeNotBeingCapturedTest.X<ResultTypeNotBeingCapturedTest.X<compiler.misc.type.captureof: 1, ?>>, ResultTypeNotBeingCapturedTest.X<ResultTypeNotBeingCapturedTest.X<?>>)\n+ResultTypeNotBeingCapturedTest.java:47:42: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: ResultTypeNotBeingCapturedTest.X<ResultTypeNotBeingCapturedTest.X<compiler.misc.type.captureof: 1, ?>>, ResultTypeNotBeingCapturedTest.X<ResultTypeNotBeingCapturedTest.X<?>>)\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/ResultTypeNotBeingCapturedTest.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}