{"files":[{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -26,1 +26,1 @@\n- * @bug 6575331 8320677\n+ * @bug 6575331\n@@ -30,0 +30,1 @@\n+ * @library \/test\/lib\n@@ -31,0 +32,1 @@\n+ * @build jtreg.SkippedException\n@@ -39,0 +41,1 @@\n+import jtreg.SkippedException;\n@@ -42,6 +45,6 @@\n-                \"This test prints two jobs, and tests that the specified range\",\n-                \"of pages is printed. You must have a printer installed for this test.\",\n-                \"In the first dialog, select a page range of 2 to 3, and press OK\",\n-                \"In the second dialog, select ALL, to print all pages (in total 5 pages).\",\n-                \"Collect the two print outs and confirm the jobs printed correctly\",\n-                \"\"\";\n+                 This test prints two jobs, and tests that the specified range.\n+                 of pages is printed. You must have a printer installed for this test.\n+                 In the first dialog, select a page range of 2 to 3, and press OK\n+                 In the second dialog, select ALL, to print all pages (in total 5 pages).\n+                 Collect the two print outs and confirm the jobs printed correctly.\n+                 \"\"\";\n@@ -50,3 +53,0 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame(INSTRUCTIONS);\n-        passFailJFrame.positionTestWindow(null, PassFailJFrame.Position.HORIZONTAL);\n-\n@@ -54,3 +54,2 @@\n-        if (job.getPrintService() == null) {\n-            System.out.println(\"No printer available\");\n-            PassFailJFrame.forcePass();\n+        if(job.getPrintService() == null) {\n+            throw new SkippedException(\"Printer not configured or available.\");\n@@ -58,0 +57,7 @@\n+\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(45)\n+                .build();\n+\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PageRanges.java","additions":20,"deletions":14,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -26,1 +26,1 @@\n- * @bug 8041902 8320677\n+ * @bug 8041902\n@@ -46,5 +46,5 @@\n-             \"You must have a printer available to perform this test.\",\n-             \"OK the print dialog, and collect the printed page.\",\n-             \"Passing test : Output should show two identical chevrons.\",\n-             \"Failing test : The line joins will appear different.\"\n-           \"\"\";\n+              You must have a printer available to perform this test.\n+              OK the print dialog, and collect the printed page.\n+              Passing test : Output should show two identical chevrons.\n+              Failing test : The line joins will appear different.\n+              \"\"\";\n@@ -53,2 +53,5 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame(INSTRUCTIONS);\n-        passFailJFrame.positionTestWindow(null, PassFailJFrame.Position.HORIZONTAL);\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(45)\n+                .build();\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PolylinePrintingTest.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"}]}