{"files":[{"patch":"@@ -439,1 +439,1 @@\n-     * @return {@code true} if any stage in this pipeline is stateful,\n+     * @return {@code true} if any stage in this pipeline is short-circuiting,\n@@ -443,4 +443,3 @@\n-        var result = false;\n-        for (var u = sourceStage.nextStage;\n-             u != null && !(result = StreamOpFlag.SHORT_CIRCUIT.isKnown(u.combinedFlags));\n-             u = u.nextStage) {\n+        for (var u = sourceStage.nextStage; u != null; u = u.nextStage) {\n+            if (StreamOpFlag.SHORT_CIRCUIT.isKnown(u.combinedFlags))\n+                return true;\n@@ -448,1 +447,1 @@\n-        return result;\n+        return false;\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/AbstractPipeline.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-                        try (final var result = mapper.apply(e)) {\n+                        try (DoubleStream result = mapper.apply(e)) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/DoublePipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -314,1 +314,1 @@\n-                        try (final var result = mapper.apply(e)) {\n+                        try (IntStream result = mapper.apply(e)) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/IntPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -297,1 +297,1 @@\n-                        try (final var result = mapper.apply(e)) {\n+                        try (LongStream result = mapper.apply(e)) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/LongPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -280,1 +280,1 @@\n-                final boolean shorts = isShortCircuitingPipeline();\n+                boolean shorts = isShortCircuitingPipeline();\n@@ -289,1 +289,1 @@\n-                        try (final var result = mapper.apply(e)) {\n+                        try (Stream<? extends R> result = mapper.apply(e)) {\n@@ -326,6 +326,6 @@\n-                final IntConsumer fastPath =\n-                        isShortCircuitingPipeline()\n-                                ? null\n-                                : (sink instanceof IntConsumer ic)\n-                                ? ic\n-                                : sink::accept;\n+                IntConsumer fastPath =\n+                    isShortCircuitingPipeline()\n+                        ? null\n+                        : (sink instanceof IntConsumer ic)\n+                            ? ic\n+                            : sink::accept;\n@@ -340,1 +340,1 @@\n-                        try (final var result = mapper.apply(e)) {\n+                        try (IntStream result = mapper.apply(e)) {\n@@ -377,6 +377,6 @@\n-                final DoubleConsumer fastPath =\n-                        isShortCircuitingPipeline()\n-                                ? null\n-                                : (sink instanceof DoubleConsumer dc)\n-                                ? dc\n-                                : sink::accept;\n+                DoubleConsumer fastPath =\n+                    isShortCircuitingPipeline()\n+                        ? null\n+                        : (sink instanceof DoubleConsumer dc)\n+                            ? dc\n+                            : sink::accept;\n@@ -391,1 +391,1 @@\n-                        try (final var result = mapper.apply(e)) {\n+                        try (DoubleStream result = mapper.apply(e)) {\n@@ -429,6 +429,6 @@\n-                final LongConsumer fastPath =\n-                        isShortCircuitingPipeline()\n-                                ? null\n-                                : (sink instanceof LongConsumer lc)\n-                                ? lc\n-                                : sink::accept;\n+                LongConsumer fastPath =\n+                    isShortCircuitingPipeline()\n+                        ? null\n+                        : (sink instanceof LongConsumer lc)\n+                            ? lc\n+                            : sink::accept;\n@@ -443,1 +443,1 @@\n-                        try (final var result = mapper.apply(e)) {\n+                        try (LongStream result = mapper.apply(e)) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/ReferencePipeline.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"}]}