{"files":[{"patch":"@@ -42,1 +42,0 @@\n-import java.util.function.IntConsumer;\n@@ -269,6 +268,1 @@\n-                    private final DoubleConsumer fastPath =\n-                            isShortCircuitingPipeline()\n-                                ? null\n-                                : (sink instanceof DoubleConsumer dc)\n-                                    ? dc\n-                                    : sink::accept;\n+                    private final boolean shorts = isShortCircuitingPipeline();\n@@ -281,1 +275,1 @@\n-                        if (fastPath == null)\n+                        if (shorts)\n@@ -290,1 +284,1 @@\n-                                result.sequential().forEach(fastPath);\n+                                result.sequential().forEach(sink::accept);\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/DoublePipeline.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -302,6 +302,1 @@\n-                    private final IntConsumer fastPath =\n-                            isShortCircuitingPipeline()\n-                                ? null\n-                                : (sink instanceof IntConsumer ic)\n-                                  ? ic\n-                                  : sink::accept;\n+                    private final boolean shorts = isShortCircuitingPipeline();\n@@ -314,1 +309,1 @@\n-                        if (fastPath == null)\n+                        if (shorts)\n@@ -323,1 +318,1 @@\n-                                result.sequential().forEach(fastPath);\n+                                result.sequential().forEach(sink::accept);\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/IntPipeline.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import java.util.function.IntConsumer;\n@@ -285,6 +284,1 @@\n-                    private final LongConsumer fastPath =\n-                            isShortCircuitingPipeline()\n-                                ? null\n-                                : (sink instanceof LongConsumer lc)\n-                                    ? lc\n-                                    : sink::accept;\n+                    final boolean shorts = isShortCircuitingPipeline();\n@@ -297,1 +291,1 @@\n-                        if (fastPath == null)\n+                        if (shorts)\n@@ -306,1 +300,1 @@\n-                                result.sequential().forEach(fastPath);\n+                                result.sequential().forEach(sink::accept);\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/LongPipeline.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -298,1 +298,1 @@\n-                                result.sequential().forEach(sink);\n+                                result.sequential().forEach(sink::accept);\n@@ -338,6 +338,1 @@\n-                    private final IntConsumer fastPath =\n-                            isShortCircuitingPipeline()\n-                                ? null\n-                                : (sink instanceof IntConsumer ic)\n-                                    ? ic\n-                                    : sink::accept;\n+                    private final boolean shorts = isShortCircuitingPipeline();\n@@ -350,1 +345,1 @@\n-                        if (fastPath == null)\n+                        if (shorts)\n@@ -359,1 +354,1 @@\n-                                result.sequential().forEach(fastPath);\n+                                result.sequential().forEach(sink::accept);\n@@ -398,0 +393,1 @@\n+                    private final boolean shorts = isShortCircuitingPipeline();\n@@ -400,7 +396,0 @@\n-                    private final DoubleConsumer fastPath =\n-                            isShortCircuitingPipeline()\n-                                ? null\n-                                : (sink instanceof DoubleConsumer dc)\n-                                    ? dc\n-                                    : sink::accept;\n-\n@@ -412,1 +401,1 @@\n-                        if (fastPath == null)\n+                        if (shorts)\n@@ -421,1 +410,1 @@\n-                                result.sequential().forEach(fastPath);\n+                                result.sequential().forEach(sink::accept);\n@@ -461,0 +450,1 @@\n+                    private final boolean shorts = isShortCircuitingPipeline();\n@@ -462,6 +452,0 @@\n-                    private final LongConsumer fastPath =\n-                            isShortCircuitingPipeline()\n-                                ? null\n-                                : (sink instanceof LongConsumer lc)\n-                                    ? lc\n-                                    : sink::accept;\n@@ -474,1 +458,1 @@\n-                        if (fastPath == null)\n+                        if (shorts)\n@@ -483,1 +467,1 @@\n-                                result.sequential().forEach(fastPath);\n+                                result.sequential().forEach(sink::accept);\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/ReferencePipeline.java","additions":10,"deletions":26,"binary":false,"changes":36,"status":"modified"}]}