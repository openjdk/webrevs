{"files":[{"patch":"@@ -258,1 +258,1 @@\n-      REGION_IDX_FORMAT \" \" PTR_FORMAT \" \"\n+      REGION_IDX_FORMAT \" \"\n@@ -262,1 +262,1 @@\n-      i, p2i(c->data_location()), dci, p2i(c->destination()),\n+      i, dci, p2i(c->destination()),\n@@ -543,1 +543,0 @@\n-    _region_data[cur_region].set_data_location(addr);\n@@ -737,1 +736,0 @@\n-      _region_data[cur_region].set_data_location(region_to_addr(cur_region));\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -282,3 +282,0 @@\n-    \/\/ The location of the java heap data that corresponds to this region.\n-    inline HeapWord* data_location() const;\n-\n@@ -307,1 +304,1 @@\n-    inline void set_data_location(HeapWord* addr);\n+\n@@ -366,4 +363,0 @@\n-\n-    \/\/ These enable optimizations that are only partially implemented.  Use\n-    \/\/ debug builds to prevent the code fragments from breaking.\n-    HeapWord*            _data_location;\n@@ -540,11 +533,0 @@\n-inline HeapWord* ParallelCompactData::RegionData::data_location() const\n-{\n-  DEBUG_ONLY(return _data_location;)\n-  NOT_DEBUG(return nullptr;)\n-}\n-\n-inline void ParallelCompactData::RegionData::set_data_location(HeapWord* addr)\n-{\n-  DEBUG_ONLY(_data_location = addr;)\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.hpp","additions":1,"deletions":19,"binary":false,"changes":20,"status":"modified"}]}