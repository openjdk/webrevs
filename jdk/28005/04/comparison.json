{"files":[{"patch":"@@ -1187,0 +1187,2 @@\n+constexpr uint64_t MAJIK_DWORD = 0xabbaabbaabbaabbaull;\n+\n@@ -1366,3 +1368,0 @@\n-  st->print(\"sd  fp, [sp, #%d]\\n\\t\", - 2 * wordSize);\n-  st->print(\"sd  ra, [sp, #%d]\\n\\t\", - wordSize);\n-  if (PreserveFramePointer) { st->print(\"sub  fp, sp, #%d\\n\\t\", 2 * wordSize); }\n@@ -1370,0 +1369,8 @@\n+  st->print(\"sd  fp, [sp, #%d]\\n\\t\", framesize - 2 * wordSize);\n+  st->print(\"sd  ra, [sp, #%d]\\n\\t\", framesize - wordSize);\n+  if (PreserveFramePointer) { st->print(\"add fp, sp, #%d\\n\\t\", framesize); }\n+\n+  if (VerifyStackAtCalls) {\n+    st->print(\"mv  t2, %ld\\n\\t\", MAJIK_DWORD);\n+    st->print(\"sd  t2, [sp, #%d]\\n\\t\", framesize - 3 * wordSize);\n+  }\n@@ -1411,0 +1418,5 @@\n+  if (VerifyStackAtCalls) {\n+    __ mv(t2, MAJIK_DWORD);\n+    __ sd(t2, Address(sp, framesize - 3 * wordSize));\n+  }\n+\n@@ -1432,4 +1444,0 @@\n-  if (VerifyStackAtCalls) {\n-    Unimplemented();\n-  }\n-\n@@ -2434,1 +2442,7 @@\n-      __ call_Unimplemented();\n+      int framesize = ra_->reg2offset_unchecked(OptoReg::add(ra_->_matcher._old_SP, -3 * VMRegImpl::slots_per_word));\n+      Label stack_ok;\n+      __ ld(t1, Address(sp, framesize));\n+      __ mv(t2, MAJIK_DWORD);\n+      __ beq(t2, t1, stack_ok);\n+      __ stop(\"MAJIK_DWORD not found\");\n+      __ bind(stack_ok);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":22,"deletions":8,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2371,1 +2371,1 @@\n-  return 2 * VMRegImpl::slots_per_word;\n+  return 2 * VMRegImpl::slots_per_word + (VerifyStackAtCalls ? 0 : 2) ;\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}