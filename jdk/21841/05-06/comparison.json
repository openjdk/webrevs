{"files":[{"patch":"@@ -97,1 +97,1 @@\n-        \/\/ TLS cipher suite wild card matching\n+        \/\/ TLS cipher suite wildcard matching\n@@ -119,5 +119,3 @@\n-        if (pattern.contains(\"*\")) {\n-            if (!pattern.startsWith(\"TLS_\")) {\n-                throw new IllegalArgumentException(\n-                        \"Wildcard pattern must start with 'TLS_'\");\n-            }\n+        if (!pattern.contains(\"*\")) {\n+            return false;\n+        }\n@@ -125,7 +123,3 @@\n-            return patternCache.computeIfAbsent(\n-                            pattern,\n-                            p -> Pattern.compile(\n-                                    \"^\\\\Q\" + p.replace(\"*\", \"\\\\E.*\\\\Q\") + \"\\\\E$\"\n-                            ))\n-                    .matcher(algorithm)\n-                    .matches();\n+        if (!pattern.startsWith(\"TLS_\")) {\n+            throw new IllegalArgumentException(\n+                    \"Wildcard pattern must start with \\\"TLS_\\\"\");\n@@ -134,1 +128,7 @@\n-        return false;\n+        return patternCache.computeIfAbsent(\n+                        pattern,\n+                        p -> Pattern.compile(\n+                                \/\/ Ignore all regex characters but asterisk.\n+                                \"^\\\\Q\" + p.replace(\"*\", \"\\\\E.*\\\\Q\") + \"\\\\E$\"))\n+                .matcher(algorithm)\n+                .matches();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/AbstractAlgorithmConstraints.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-            assertEquals(\"Wildcard pattern must start with 'TLS_'\",\n+            assertEquals(\"Wildcard pattern must start with \\\"TLS_\\\"\",\n","filename":"test\/jdk\/sun\/security\/ssl\/CipherSuite\/TLSCipherSuiteWildCardMatchingIllegalArgument.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}