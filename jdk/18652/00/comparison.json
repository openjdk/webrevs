{"files":[{"patch":"@@ -371,1 +371,1 @@\n-    k = TypeArrayKlass::cast(k)->array_klass(ndims, CHECK_NULL);\n+    k = k->array_klass(ndims, CHECK_NULL);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -639,1 +639,1 @@\n-        resolved_klass = TypeArrayKlass::cast(Universe::typeArrayKlass(ss.type()))->array_klass(ndim, CHECK_NULL);\n+        resolved_klass = Universe::typeArrayKlass(ss.type())->array_klass(ndim, CHECK_NULL);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  return TypeArrayKlass::cast(Universe::boolArrayKlass())->allocate(length, THREAD);\n+  return Universe::boolArrayKlass()->allocate(length, THREAD);\n@@ -48,1 +48,1 @@\n-  return TypeArrayKlass::cast(Universe::charArrayKlass())->allocate(length, THREAD);\n+  return Universe::charArrayKlass()->allocate(length, THREAD);\n@@ -52,1 +52,1 @@\n-  return TypeArrayKlass::cast(Universe::floatArrayKlass())->allocate(length, THREAD);\n+  return Universe::floatArrayKlass()->allocate(length, THREAD);\n@@ -56,1 +56,1 @@\n-  return TypeArrayKlass::cast(Universe::doubleArrayKlass())->allocate(length, THREAD);\n+  return Universe::doubleArrayKlass()->allocate(length, THREAD);\n@@ -60,1 +60,1 @@\n-  return TypeArrayKlass::cast(Universe::byteArrayKlass())->allocate(length, THREAD);\n+  return Universe::byteArrayKlass()->allocate(length, THREAD);\n@@ -64,1 +64,1 @@\n-  return TypeArrayKlass::cast(Universe::shortArrayKlass())->allocate(length, THREAD);\n+  return Universe::shortArrayKlass()->allocate(length, THREAD);\n@@ -68,1 +68,1 @@\n-  return TypeArrayKlass::cast(Universe::intArrayKlass())->allocate(length, THREAD);\n+  return Universe::intArrayKlass()->allocate(length, THREAD);\n@@ -72,1 +72,1 @@\n-  return TypeArrayKlass::cast(Universe::longArrayKlass())->allocate(length, THREAD);\n+  return Universe::longArrayKlass()->allocate(length, THREAD);\n@@ -78,1 +78,1 @@\n-  return ObjArrayKlass::cast(Universe::objectArrayKlass())->allocate(length, THREAD);\n+  return Universe::objectArrayKlass()->allocate(length, THREAD);\n@@ -91,4 +91,2 @@\n-  Klass* klass = Universe::typeArrayKlass(type);\n-  TypeArrayKlass* typeArrayKlass = TypeArrayKlass::cast(klass);\n-  typeArrayOop result = typeArrayKlass->allocate(length, THREAD);\n-  return result;\n+  TypeArrayKlass* klass = Universe::typeArrayKlass(type);\n+  return klass->allocate(length, THREAD);\n@@ -103,4 +101,1 @@\n-  Klass* klass = Universe::typeArrayKlass(type);\n-  TypeArrayKlass* typeArrayKlass = TypeArrayKlass::cast(klass);\n-  typeArrayOop result = typeArrayKlass->allocate(length, THREAD);\n-  return result;\n+  return new_typeArray(type, length, THREAD);\n@@ -110,4 +105,2 @@\n-  Klass* klass = Universe::typeArrayKlass(type);\n-  TypeArrayKlass* typeArrayKlass = TypeArrayKlass::cast(klass);\n-  typeArrayOop result = typeArrayKlass->allocate_common(length, false, THREAD);\n-  return result;\n+  TypeArrayKlass* klass = Universe::typeArrayKlass(type);\n+  return klass->allocate_common(length, false, THREAD);\n","filename":"src\/hotspot\/share\/memory\/oopFactory.cpp","additions":14,"deletions":21,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -114,3 +114,3 @@\n-Klass* Universe::_typeArrayKlasses[T_LONG+1]        = { nullptr \/*, nullptr...*\/ };\n-Klass* Universe::_objectArrayKlass                  = nullptr;\n-Klass* Universe::_fillerArrayKlass                  = nullptr;\n+TypeArrayKlass* Universe::_typeArrayKlasses[T_LONG+1] = { nullptr \/*, nullptr...*\/ };\n+ObjArrayKlass* Universe::_objectArrayKlass            = nullptr;\n+Klass* Universe::_fillerArrayKlass                    = nullptr;\n@@ -475,2 +475,4 @@\n-  _objectArrayKlass = InstanceKlass::\n-    cast(vmClasses::Object_klass())->array_klass(1, CHECK);\n+  {\n+    Klass* oak = vmClasses::Object_klass()->array_klass(CHECK);\n+    _objectArrayKlass = ObjArrayKlass::cast(oak);\n+  }\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -68,2 +68,2 @@\n-  static Klass* _typeArrayKlasses[T_LONG+1];\n-  static Klass* _objectArrayKlass;\n+  static TypeArrayKlass* _typeArrayKlasses[T_LONG+1];\n+  static ObjArrayKlass* _objectArrayKlass;\n@@ -177,8 +177,8 @@\n-  static Klass* boolArrayKlass()                 { return typeArrayKlass(T_BOOLEAN); }\n-  static Klass* byteArrayKlass()                 { return typeArrayKlass(T_BYTE); }\n-  static Klass* charArrayKlass()                 { return typeArrayKlass(T_CHAR); }\n-  static Klass* intArrayKlass()                  { return typeArrayKlass(T_INT); }\n-  static Klass* shortArrayKlass()                { return typeArrayKlass(T_SHORT); }\n-  static Klass* longArrayKlass()                 { return typeArrayKlass(T_LONG); }\n-  static Klass* floatArrayKlass()                { return typeArrayKlass(T_FLOAT); }\n-  static Klass* doubleArrayKlass()               { return typeArrayKlass(T_DOUBLE); }\n+  static TypeArrayKlass* boolArrayKlass()        { return typeArrayKlass(T_BOOLEAN); }\n+  static TypeArrayKlass* byteArrayKlass()        { return typeArrayKlass(T_BYTE); }\n+  static TypeArrayKlass* charArrayKlass()        { return typeArrayKlass(T_CHAR); }\n+  static TypeArrayKlass* intArrayKlass()         { return typeArrayKlass(T_INT); }\n+  static TypeArrayKlass* shortArrayKlass()       { return typeArrayKlass(T_SHORT); }\n+  static TypeArrayKlass* longArrayKlass()        { return typeArrayKlass(T_LONG); }\n+  static TypeArrayKlass* floatArrayKlass()       { return typeArrayKlass(T_FLOAT); }\n+  static TypeArrayKlass* doubleArrayKlass()      { return typeArrayKlass(T_DOUBLE); }\n@@ -186,1 +186,1 @@\n-  static Klass* objectArrayKlass()               { return _objectArrayKlass; }\n+  static ObjArrayKlass* objectArrayKlass()       { return _objectArrayKlass; }\n@@ -190,1 +190,1 @@\n-  static Klass* typeArrayKlass(BasicType t) {\n+  static TypeArrayKlass* typeArrayKlass(BasicType t) {\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-  TypeArrayKlass* tak = TypeArrayKlass::cast(Universe::typeArrayKlass(elem_bt));\n+  TypeArrayKlass* tak = Universe::typeArrayKlass(elem_bt);\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}