{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,8 @@\n-import java.awt.*;\n+import jdk.test.lib.Platform;\n+import jtreg.SkippedException;\n+\n+import java.awt.AWTException;\n+import java.awt.EventQueue;\n+import java.awt.Point;\n+import java.awt.SystemTray;\n+import java.awt.TrayIcon;\n@@ -35,4 +42,11 @@\n- * @library \/lib\/client ..\/\n- * @library \/java\/awt\/patchlib\n- * @build java.desktop\/java.awt.Helper\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @library\n+ *          \/java\/awt\/patchlib\n+ *          \/java\/awt\/TrayIcon\n+ *          \/lib\/client\n+ *          \/test\/lib\n+ * @build\n+ *          java.desktop\/java.awt.Helper\n+ *          jdk.test.lib.Platform\n+ *          jtreg.SkippedException\n+ *          ExtendedRobot\n+ *          SystemTrayIconHelper\n@@ -47,3 +61,4 @@\n-    boolean actionPerformed = false;\n-    Object actionLock = new Object();\n-    String actionCommand = null;\n+    volatile boolean actionPerformed = false;\n+    volatile String actionCommand = null;\n+    final Object actionLock = new Object();\n+\n@@ -53,3 +68,6 @@\n-        if (! SystemTray.isSupported()) {\n-            System.out.println(\"SystemTray not supported on the platform under test. \" +\n-                    \"Marking the test passed\");\n+        if (Platform.isOnWayland()) {\n+            \/\/ The current robot implementation does not support\n+            \/\/ clicking in the system tray area.\n+            throw new SkippedException(\"Skipped on Wayland\");\n+        } else if (!SystemTray.isSupported()) {\n+            throw new SkippedException(\"SystemTray is not supported on this platform.\");\n@@ -98,1 +116,1 @@\n-            if (! \"Sample Command\".equals(icon.getActionCommand()))\n+            if (!\"Sample Command\".equals(icon.getActionCommand()))\n@@ -120,1 +138,1 @@\n-        if (! actionPerformed) {\n+        if (!actionPerformed) {\n@@ -128,1 +146,1 @@\n-        if (! actionPerformed) {\n+        if (!actionPerformed) {\n@@ -143,1 +161,1 @@\n-        robot.mouseMove(0, 0);\n+        robot.mouseMove(100, 0);\n@@ -152,1 +170,1 @@\n-        if (! actionPerformed) {\n+        if (!actionPerformed) {\n@@ -160,1 +178,1 @@\n-        if (! actionPerformed) {\n+        if (!actionPerformed) {\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/ActionCommand\/ActionCommand.java","additions":36,"deletions":18,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,3 @@\n+import jdk.test.lib.Platform;\n+import jtreg.SkippedException;\n+\n@@ -40,4 +43,11 @@\n- * @library \/java\/awt\/patchlib\n- * @library \/lib\/client ..\/\n- * @build java.desktop\/java.awt.Helper\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @library\n+ *          \/java\/awt\/patchlib\n+ *          \/java\/awt\/TrayIcon\n+ *          \/lib\/client\n+ *          \/test\/lib\n+ * @build\n+ *          java.desktop\/java.awt.Helper\n+ *          jdk.test.lib.Platform\n+ *          jtreg.SkippedException\n+ *          ExtendedRobot\n+ *          SystemTrayIconHelper\n@@ -51,2 +61,4 @@\n-    boolean actionPerformed = false;\n-    Object actionLock = new Object();\n+\n+    volatile boolean actionPerformed = false;\n+    final Object actionLock = new Object();\n+\n@@ -58,3 +70,3 @@\n-        InputEvent.BUTTON1_MASK,\n-        InputEvent.BUTTON2_MASK,\n-        InputEvent.BUTTON3_MASK\n+        InputEvent.BUTTON1_DOWN_MASK,\n+        InputEvent.BUTTON2_DOWN_MASK,\n+        InputEvent.BUTTON3_DOWN_MASK\n@@ -69,3 +81,6 @@\n-        if (!SystemTray.isSupported()) {\n-            System.out.println(\"SystemTray not supported on the platform \"\n-                    + \"under test. Marking the test passed\");\n+        if (Platform.isOnWayland()) {\n+            \/\/ The current robot implementation does not support\n+            \/\/ clicking in the system tray area.\n+            throw new SkippedException(\"Skipped on Wayland\");\n+        } else if (!SystemTray.isSupported()) {\n+            throw new SkippedException(\"SystemTray is not supported on this platform.\");\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/TrayIconMouseTest\/TrayIconMouseTest.java","additions":28,"deletions":13,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,0 +23,3 @@\n+import jdk.test.lib.Platform;\n+import jtreg.SkippedException;\n+\n@@ -29,2 +32,0 @@\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n@@ -42,4 +43,11 @@\n- * @library \/java\/awt\/patchlib\n- * @library \/lib\/client ..\/\n- * @build java.desktop\/java.awt.Helper\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @library\n+ *          \/java\/awt\/patchlib\n+ *          \/java\/awt\/TrayIcon\n+ *          \/lib\/client\n+ *          \/test\/lib\n+ * @build\n+ *          java.desktop\/java.awt.Helper\n+ *          jdk.test.lib.Platform\n+ *          jtreg.SkippedException\n+ *          ExtendedRobot\n+ *          SystemTrayIconHelper\n@@ -53,1 +61,1 @@\n-    boolean actionPerformed = false;\n+    volatile boolean actionPerformed = false;\n@@ -56,3 +64,6 @@\n-        if (!SystemTray.isSupported()) {\n-            System.out.println(\"SystemTray not supported on the platform under test. \" +\n-                    \"Marking the test passed\");\n+        if (Platform.isOnWayland()) {\n+            \/\/ The current robot implementation does not support\n+            \/\/ clicking in the system tray area.\n+            throw new SkippedException(\"Skipped on Wayland\");\n+        } else if (!SystemTray.isSupported()) {\n+            throw new SkippedException(\"SystemTray is not supported on this platform.\");\n@@ -92,7 +103,1 @@\n-        icon.getActionCommand();\n-        icon.addActionListener(new ActionListener() {\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                actionPerformed = true;\n-            }\n-        });\n+        icon.addActionListener(e -> actionPerformed = true);\n@@ -109,1 +114,1 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -111,1 +116,1 @@\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -116,1 +121,1 @@\n-        robot.mousePress(InputEvent.BUTTON1_MASK);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -118,1 +123,1 @@\n-        robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/TrayIconPopup\/TrayIconPopupClickTest.java","additions":27,"deletions":22,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,2 +23,16 @@\n-import java.awt.*;\n-import java.awt.event.*;\n+\n+import jdk.test.lib.Platform;\n+import jtreg.SkippedException;\n+\n+import java.awt.AWTException;\n+import java.awt.Dialog;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.MenuItem;\n+import java.awt.Point;\n+import java.awt.PopupMenu;\n+import java.awt.SystemTray;\n+import java.awt.TrayIcon;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n@@ -34,4 +48,11 @@\n- * @library \/java\/awt\/patchlib\n- * @library \/lib\/client ..\/\n- * @build java.desktop\/java.awt.Helper\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @library\n+ *          \/java\/awt\/patchlib\n+ *          \/java\/awt\/TrayIcon\n+ *          \/lib\/client\n+ *          \/test\/lib\n+ * @build\n+ *          java.desktop\/java.awt.Helper\n+ *          jdk.test.lib.Platform\n+ *          jtreg.SkippedException\n+ *          ExtendedRobot\n+ *          SystemTrayIconHelper\n@@ -46,2 +67,3 @@\n-    boolean actionPerformed = false;\n-    Object actionLock = new Object();\n+    volatile boolean actionPerformed = false;\n+    final Object actionLock = new Object();\n+\n@@ -54,3 +76,6 @@\n-        if (!SystemTray.isSupported()) {\n-            System.out.println(\"SystemTray not supported on the platform under test. \" +\n-                    \"Marking the test passed\");\n+        if (Platform.isOnWayland()) {\n+            \/\/ The current robot implementation does not support\n+            \/\/ clicking in the system tray area.\n+            throw new SkippedException(\"Skipped on Wayland\");\n+        } else if (!SystemTray.isSupported()) {\n+            throw new SkippedException(\"SystemTray is not supported on this platform.\");\n@@ -131,1 +156,1 @@\n-        robot.mousePress(InputEvent.BUTTON3_MASK);\n+        robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n@@ -133,1 +158,1 @@\n-        robot.mouseRelease(InputEvent.BUTTON3_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n@@ -137,1 +162,1 @@\n-        robot.mousePress(InputEvent.BUTTON3_MASK);\n+        robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n@@ -139,1 +164,1 @@\n-        robot.mouseRelease(InputEvent.BUTTON3_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/TrayIconPopup\/TrayIconPopupTest.java","additions":41,"deletions":16,"binary":false,"changes":57,"status":"modified"}]}