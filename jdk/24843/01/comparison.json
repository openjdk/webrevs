{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,0 +77,2 @@\n+    private static final int ARGS_ATTEMPTS = 5;\n+    private static final int REMOVE_TIMEOUT = 2000;\n@@ -178,2 +180,0 @@\n-        private static final int ARGS_ATTEMPTS = 3;\n-\n@@ -207,1 +207,4 @@\n-                    System.out.println(\"hasMainArgs(\" + id + \"): \" + e);\n+                    \/\/ Only log if something else, to avoid filling log:\n+                    if (!e.getMessage().contains(\"Could not attach\")) {\n+                        System.out.println(\"hasMainArgs(\" + id + \"): \" + e);\n+                    }\n@@ -254,1 +257,1 @@\n-            long timeoutNanos = 1000_000_000L*(long)(1000*timeoutFactor);\n+            long timeoutNanos = 1000_000_000L*(long)(REMOVE_TIMEOUT * timeoutFactor);\n@@ -256,0 +259,1 @@\n+            System.out.println(\"Waiting for \" + path + \" to be removed\");\n@@ -259,1 +263,0 @@\n-                System.out.println(\"Waiting for \" + path + \" to be removed, \" + waited + \" ns\");\n@@ -261,0 +264,1 @@\n+                    System.out.println(\"waitForRemoval: \" + path + \" has been removed\");\n@@ -264,0 +268,1 @@\n+                    System.out.println(\"Timeout waiting for \" + path + \" to be removed\");\n","filename":"test\/jdk\/sun\/jvmstat\/monitor\/MonitoredVm\/MonitorVmStartTerminate.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"}]}