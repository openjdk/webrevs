{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -402,1 +403,1 @@\n-                \", info=\" + HexFormat.of().formatHex(info) +\n+                \", info=\" + bytesToString(info) +\n@@ -407,0 +408,18 @@\n+\n+    \/\/ Returns a human-readable format of a byte array.\n+    private static String bytesToString(byte[] input) {\n+        if (input.length == 0) {\n+            return \"(empty)\";\n+        } else {\n+            for (byte b : input) {\n+                \/\/ Returns HEX + string for pure ASCII with no control characters.\n+                \/\/ Cannot contain `\"` to avoid character escaping.\n+                if (b < 0x20 || b > 0x7E || b == '\"') {\n+                    return HexFormat.of().formatHex(input);\n+                }\n+            }\n+            \/\/ Otherwise, only returns HEX.\n+            return HexFormat.of().formatHex(input)\n+                    + \" (\\\"\" + new String(input, StandardCharsets.US_ASCII) + \"\\\")\";\n+        }\n+    }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/HPKEParameterSpec.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -102,1 +102,10 @@\n-        Asserts.assertTrue(spec.info(new byte[3]).toString().contains(\"info=000000\"));\n+        Asserts.assertTrue(spec.toString().contains(\"info=(empty),\"));\n+        Asserts.assertTrue(spec.info(new byte[3]).toString().contains(\"info=000000,\"));\n+        Asserts.assertTrue(spec.info(\"info\".getBytes(StandardCharsets.UTF_8))\n+                .toString().contains(\"info=696e666f (\\\"info\\\"),\"));\n+        Asserts.assertTrue(spec.info(\"\\\"info\\\"\".getBytes(StandardCharsets.UTF_8))\n+                .toString().contains(\"info=22696e666f22,\"));\n+        Asserts.assertTrue(spec.info(\"'info'\".getBytes(StandardCharsets.UTF_8))\n+                .toString().contains(\"info=27696e666f27 (\\\"'info'\\\"),\"));\n+        Asserts.assertTrue(spec.info(\"i\\\\n\\\\f\\\\o\".getBytes(StandardCharsets.UTF_8))\n+                .toString().contains(\"info=695c6e5c665c6f (\\\"i\\\\n\\\\f\\\\o\\\"),\"));\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/HPKE\/Compliance.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}