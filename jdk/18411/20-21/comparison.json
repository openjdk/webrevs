{"files":[{"patch":"@@ -108,0 +108,14 @@\n+ * After initialization, both the sender and receiver can encrypt or decrypt\n+ * multiple plaintexts in sequence using repeated calls to {@code doFinal},\n+ * optionally preceded by one or more {@code update}. Each {@code doFinal}\n+ * call performs a complete HPKE encryption or decryption operation using a\n+ * distinct nonce derived from an internal sequence counter, as specified by\n+ * the HPKE protocol.\n+ * <p>\n+ * As with any AEAD cipher, each {@code doFinal} call on the server side must\n+ * correspond to exactly one complete ciphertext, and the number and order of\n+ * calls must match on both sides. Unlike raw AEAD usage, however, an HPKE\n+ * cipher manages nonce generation internally, and there is no need for the\n+ * application to reinitialize the cipher with a new IV for each message.\n+ * This simplifies usage while ensuring nonce uniqueness and preserving AEAD\n+ * security guarantees.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/HPKEParameterSpec.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}