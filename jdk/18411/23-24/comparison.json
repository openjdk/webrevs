{"files":[{"patch":"@@ -45,0 +45,1 @@\n+import javax.crypto.spec.HPKEParameterSpec;\n@@ -99,0 +100,5 @@\n+        } else if (alg.equals(\"HPKE\")) {\n+            key = KeyPairGenerator.getInstance(\"x25519\").generateKeyPair().getPublic();\n+            spec = HPKEParameterSpec.of(HPKEParameterSpec.KEM_DHKEM_X25519_HKDF_SHA256,\n+                    HPKEParameterSpec.KDF_HKDF_SHA256,\n+                    HPKEParameterSpec.AEAD_AES_256_GCM);\n","filename":"test\/jdk\/sun\/security\/provider\/all\/Deterministic.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,1 +45,2 @@\n- * @library \/test\/lib\n+ * @library \/test\/lib \/test\/jdk\/security\/unsignedjce\n+ * @build java.base\/javax.crypto.ProviderVerifier\n@@ -47,1 +48,0 @@\n- * @summary Showcase how Sliceable can be used in DHKEM\n@@ -49,0 +49,1 @@\n+ * @summary Showcase how Sliceable can be used in DHKEM\n","filename":"test\/jdk\/sun\/security\/util\/SliceableSecretKey\/SoftSliceable.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}