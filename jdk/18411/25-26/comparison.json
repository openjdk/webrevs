{"files":[{"patch":"@@ -35,0 +35,1 @@\n+import static javax.crypto.spec.HPKEParameterSpec.AEAD_AES_128_GCM;\n@@ -36,0 +37,1 @@\n+import static javax.crypto.spec.HPKEParameterSpec.AEAD_CHACHA20_POLY1305;\n@@ -37,0 +39,2 @@\n+import static javax.crypto.spec.HPKEParameterSpec.KDF_HKDF_SHA384;\n+import static javax.crypto.spec.HPKEParameterSpec.KDF_HKDF_SHA512;\n@@ -50,0 +54,1 @@\n+\n@@ -58,0 +63,1 @@\n+\n@@ -61,0 +67,1 @@\n+        var msg2 = \"goodbye\".getBytes(StandardCharsets.UTF_8);\n@@ -66,2 +73,2 @@\n-            System.out.println(param);\n-            var c = Cipher.getInstance(\"HPKE\");\n+            var c1 = Cipher.getInstance(\"HPKE\");\n+            var c2 = Cipher.getInstance(\"HPKE\");\n@@ -70,8 +77,2 @@\n-            var params = HPKEParameterSpec\n-                    .of(param.kem, KDF_HKDF_SHA256, AEAD_AES_256_GCM);\n-\n-            c.init(Cipher.ENCRYPT_MODE, kp.getPublic(), params);\n-            var ct = c.doFinal(msg);\n-\n-            c.init(Cipher.DECRYPT_MODE, kp.getPrivate(), params.encapsulation(c.getIV()));\n-            Asserts.assertEqualsByteArray(msg, c.doFinal(ct));\n+            for (var kdf : List.of(KDF_HKDF_SHA256, KDF_HKDF_SHA384, KDF_HKDF_SHA512)) {\n+                for (var aead : List.of(AEAD_AES_256_GCM, AEAD_AES_128_GCM, AEAD_CHACHA20_POLY1305)) {\n@@ -79,5 +80,2 @@\n-            c.init(Cipher.ENCRYPT_MODE, kp.getPublic(), params\n-                    .authKey(kp2.getPrivate())\n-                    .info(info)\n-                    .psk(psk, psk_id));\n-            ct = c.doFinal(msg);\n+                    var params = HPKEParameterSpec.of(param.kem, kdf, aead);\n+                    System.out.println(params);\n@@ -85,5 +83,4 @@\n-            c.init(Cipher.DECRYPT_MODE, kp.getPrivate(), params\n-                    .authKey(kp2.getPublic())\n-                    .info(info)\n-                    .psk(psk, psk_id)\n-                    .encapsulation(c.getIV()));\n+                    c1.init(Cipher.ENCRYPT_MODE, kp.getPublic(), params);\n+                    c2.init(Cipher.DECRYPT_MODE, kp.getPrivate(), params.encapsulation(c1.getIV()));\n+                    Asserts.assertEqualsByteArray(msg, c2.doFinal(c1.doFinal(msg)));\n+                    Asserts.assertEqualsByteArray(msg2, c2.doFinal(c1.doFinal(msg2)));\n@@ -91,1 +88,13 @@\n-            Asserts.assertEqualsByteArray(msg, c.doFinal(ct));\n+                    c1.init(Cipher.ENCRYPT_MODE, kp.getPublic(), params\n+                            .authKey(kp2.getPrivate())\n+                            .info(info)\n+                            .psk(psk, psk_id));\n+                    c2.init(Cipher.DECRYPT_MODE, kp.getPrivate(), params\n+                            .authKey(kp2.getPublic())\n+                            .info(info)\n+                            .psk(psk, psk_id)\n+                            .encapsulation(c1.getIV()));\n+                    Asserts.assertEqualsByteArray(msg, c2.doFinal(c1.doFinal(msg)));\n+                    Asserts.assertEqualsByteArray(msg2, c2.doFinal(c1.doFinal(msg2)));\n+                }\n+            }\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/HPKE\/Functions.java","additions":30,"deletions":21,"binary":false,"changes":51,"status":"modified"}]}