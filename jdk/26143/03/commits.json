[{"commit":{"message":"Simplify the special case path"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"}],"sha":"4dc32af92554cb63e8c30b1ef6bc8aac6d986106"},{"commit":{"message":"Add a simple path for non-special-case corner calculation"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"}],"sha":"eef20ae649ef9557e97c648754abe75b1c96c9ab"},{"commit":{"message":"Fixes after review"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/IntegerDivValueTests.java"}],"sha":"8dd1ff1b8cb6472e09ca01542eb8123688a5d578"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into better_interger_div_type"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"}],"sha":"dacaddac5d353aad1b5cf5d3a76687e29543b0e0"},{"commit":{"message":"Adjust bug number"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/IntegerDivValueTests.java"}],"sha":"2a0178f4b63b73e7cdbd660d5eb6f0a3af9eceec"},{"commit":{"message":"Use LF line endings"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/IntegerDivValueTests.java"}],"sha":"e79c2f9284ad68c9c4c06fa0721c35a329849809"},{"commit":{"message":"Add verification to tests"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/IntegerDivValueTests.java"}],"sha":"dbca36af96f2f5c6a5b57b1f6ef380e3dcc7c4ed"},{"commit":{"message":"Add tests and comments"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/IntegerDivValueTests.java"}],"sha":"8b69e7a30b9fdfa844b057bcde97095c72298cda"},{"commit":{"message":"Merge branch 'master' of https:\/\/github.com\/openjdk\/jdk into better_interger_div_type"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"}],"sha":"b5c1e8fee48bb13030b725ea2b34d135cd8fb85c"},{"commit":{"message":"Move more logic into generic computation"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"}],"sha":"4e43539e8135b6e82d1ab78f791eae349579c55e"},{"commit":{"message":"Return TOP if no value is possible"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"}],"sha":"94a30e088f87a29701f2123f3f4e141f36a4f446"},{"commit":{"message":"Merge remote-tracking branch 'refs\/remotes\/upstream\/master' into better_interger_div_type\n\n# Conflicts:\n#\tsrc\/hotspot\/share\/opto\/divnode.cpp"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"}],"sha":"dfefdaee69dbe73cc80d7b8a31bcfebe2950d9e3"},{"commit":{"message":"Merge remote-tracking branch 'origin\/master' into better_interger_div_type"},"files":[],"sha":"2644563a28b3fdb83a7eb2d7920eecdb1faa2ed7"},{"commit":{"message":"Add santiy checks"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"}],"sha":"603b6d4b85e0d9c5c59d8778820bccbdef96fc82"},{"commit":{"message":"fix case where divisor is constant zero"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"}],"sha":"b546fc1173243dbd5109ad3175e84434146bd34a"},{"commit":{"message":"Improve type of integer div nodes when dividend may be min_int\/min_long"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"}],"sha":"0f2efc577d6ced1fd5b22d8e61a68197a0a0c3aa"},{"commit":{"message":"Improve Value of DivI and DivL"},"files":[{"filename":"src\/hotspot\/share\/opto\/divnode.cpp"}],"sha":"a8de90aa270ac94e5e3f55d8a89002ddb9930ce5"}]