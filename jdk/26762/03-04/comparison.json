{"files":[{"patch":"@@ -338,1 +338,18 @@\n-     * Add the cross-product (cartesian product) of sets of flags as Scenarios.\n+     * Add the cross-product (cartesian product) of sets of flags as Scenarios. Unlike when when constructing\n+     * scenarios directly a string can contain multiple flags separated with a space. This allows grouping\n+     * flags that have to be specified togeher. Further, an empty string in a set stands in for \"no flag\".\n+     * <p>\n+     * Example:\n+     * <pre>\n+     *     addCrossProductScenarios(Set.of(\"\", \"-Xint\", \"-Xbatch -XX:-TieredCompilation\"),\n+     *                              Set.of(\"-XX:+UseNewCode\", \"-XX:UseNewCode2\"))\n+     * <\/pre>\n+     *   produces the following Scenarios\n+     * <pre>\n+     *     Scenario(0, \"-XX:+UseNewCode\")\n+     *     Scenario(1, \"-XX:+UseNewCode2\")\n+     *     Scenario(2, \"-Xint\", \"-XX:+UseNewCode\")\n+     *     Scenario(3, \"-Xint\", \"-XX:+UseNewCode2\")\n+     *     Scenario(4, \"-Xbatch -XX:-TieredCompilation\", \"-XX:+UseNewCode\")\n+     *     Scenario(5, \"-Xbatch -XX:-TieredCompilation\", \"-XX:+UseNewCode2\")\n+     * <\/pre>\n@@ -346,1 +363,1 @@\n-                                  \"Flags must not be null\");\n+                \"Flags must not be null\");\n@@ -353,4 +370,11 @@\n-        return addScenarios(\n-                crossProductHelper(0, flagSets)\n-                        .map(flags -> new Scenario(idx.getAndIncrement(), flags.toArray(new String[0])))\n-                        .collect(Collectors.toList()).toArray(new Scenario[0]));\n+        Scenario[] newScenarios = crossProductHelper(0, flagSets)\n+                .map(flags -> new Scenario(\n+                        idx.getAndIncrement(),\n+                        flags.stream() \/\/ Process flags\n+                                .filter(s -> !s.isEmpty()) \/\/ Remove empty flags\n+                                .map(s -> Set.of(s.split(\"[ ]\"))) \/\/ Split muliple flags in the same string into separate strings\n+                                .flatMap(Collection::stream)\n+                                .collect(Collectors.toList())\n+                                .toArray(new String[0])))\n+                .collect(Collectors.toList()).toArray(new Scenario[0]);\n+        return addScenarios(newScenarios);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/TestFramework.java","additions":30,"deletions":6,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -41,0 +41,6 @@\n+    static void hasNFailures(String s, int count) {\n+        if (!s.matches(\"The following scenarios have failed: (#[0-9](, )?){\" + count + \"}. Please check stderr for more information.\")) {\n+            throw new RuntimeException(\"Expected \" + count + \" failures in \\\"\" + s + \"\\\"\");\n+        }\n+    }\n+\n@@ -51,3 +57,1 @@\n-            if (!e.getMessage().contains(\"The following scenarios have failed: #0, #1, #2\")) {\n-                throw e;\n-            }\n+            hasNFailures(e.getMessage(), 3);\n@@ -64,4 +68,1 @@\n-            if (!e.getMessage().contains(\"The following scenarios have failed: #0, #1, #2\")||\n-                 e.getMessage().contains(\"The following scenarios have failed: #0, #1, #2, #3\")) {\n-                throw e;\n-            }\n+            hasNFailures(e.getMessage(), 3);\n@@ -78,4 +79,1 @@\n-            if (!e.getMessage().contains(\"The following scenarios have failed: #0, #1, #2, #3\") ||\n-                 e.getMessage().contains(\"The following scenarios have failed: #0, #1, #2, #3, #4\")) {\n-                throw e;\n-            }\n+            hasNFailures(e.getMessage(), 4);\n@@ -86,1 +84,1 @@\n-            t4.addCrossProductScenarios(Set.of(\"-XX:TLABRefillWastFraction=50 -XX:+UseNewCode\", \"-XX:TLABRefillWasteFraction=40\"),\n+            t4.addCrossProductScenarios(Set.of(\"-XX:TLABRefillWasteFraction=50 -XX:+UseNewCode\", \"-XX:TLABRefillWasteFraction=40\"),\n@@ -91,5 +89,12 @@\n-            if (!(e.getMessage().contains(\"The following scenarios have failed: #0\") ||\n-                  e.getMessage().contains(\"The following scenarios have failed: #1\")) ||\n-                 e.getMessage().contains(\"The following scenarios have failed: #0, #1\")) {\n-                throw e;\n-            }\n+            hasNFailures(e.getMessage(), 1);\n+        }\n+\n+        \/\/ Test with an empty string. All 6 scenarios fail because 64 is the default value for TLABRefillWasteFraction.\n+        try {\n+            TestFramework t5 = new TestFramework();\n+            t5.addCrossProductScenarios(Set.of(\"\", \"-XX:TLABRefillWasteFraction=51\", \"-XX:TLABRefillWasteFraction=53\"),\n+                                        Set.of(\"-XX:+UseNewCode\", \"-XX:+UseNewCode2\"));\n+            t5.start();\n+            Asserts.fail(\"Should have thrown exception\");\n+        } catch (TestRunException e) {\n+            hasNFailures(e.getMessage(), 6);\n@@ -101,1 +106,1 @@\n-    public void fail1() {\n+    public void failDefault() {\n@@ -106,0 +111,4 @@\n+    public void fail1() {\n+    }\n+\n+    @Test\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestScenariosCrossProduct.java","additions":27,"deletions":18,"binary":false,"changes":45,"status":"modified"}]}