{"files":[{"patch":"@@ -48,3 +48,0 @@\n-    \/\/defer initialization of logging until needed\n-    private static System.Logger logger;\n-\n@@ -62,6 +59,1 @@\n-        \/\/maybe throw an exception here to avoid construction of potentially invalid stack maps\n-        if (logger == null)\n-            logger = System.getLogger(\"jdk.internal.classfile\");\n-        if (logger.isLoggable(System.Logger.Level.DEBUG))\n-            logger.log(System.Logger.Level.DEBUG, \"Could not resolve class \" + classDesc.displayName());\n-        return new ClassHierarchyResolver.ClassHierarchyInfo(classDesc, false, null);\n+        throw new IllegalArgumentException(\"Could not resolve class \" + classDesc.displayName());\n@@ -179,1 +171,2 @@\n-            map = new HashMap<>(interfaceNames.size() + classToSuperClass.size());\n+            map = new HashMap<>(interfaceNames.size() + classToSuperClass.size() + 1);\n+            map.put(ConstantDescs.CD_Object, new ClassHierarchyInfo(ConstantDescs.CD_Object, false, null));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassHierarchyImpl.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-                    ClassHierarchyResolver.of(Set.of(), Map.of(\n+                    ClassHierarchyResolver.of(Set.of(ClassDesc.of(\"remapped.List\")), Map.of(\n","filename":"test\/jdk\/jdk\/classfile\/AdvancedTransformationsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        assertThrows(VerifyError.class, () -> transformAndVerify(className -> null));\n+        assertThrows(IllegalArgumentException.class, () -> transformAndVerify(className -> null));\n@@ -63,0 +63,1 @@\n+                        ClassDesc.of(\"java.util.HashMap$EntrySet\"), ClassDesc.of(\"java.util.AbstractSet\"),\n","filename":"test\/jdk\/jdk\/classfile\/ClassHierarchyInfoTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import jdk.internal.classfile.ClassHierarchyResolver;\n@@ -65,1 +66,2 @@\n-        var classModel = Classfile.parse(path, Classfile.Option.classHierarchyResolver(className -> null));\n+        var classModel = Classfile.parse(path, Classfile.Option.classHierarchyResolver(\n+                className -> new ClassHierarchyResolver.ClassHierarchyInfo(className, false, null)));\n","filename":"test\/jdk\/jdk\/classfile\/VerifierSelfTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}