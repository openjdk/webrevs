{"files":[{"patch":"@@ -561,10 +561,14 @@\n-  assert(old_gen->committed().byte_size() >= old_gen->used_in_bytes(), \"inv\");\n-  \/\/ Check OS has enough free memory to commit and expand old-gen.\n-  size_t free_mem_in_os;\n-  if (os::free_memory(free_mem_in_os)) {\n-    size_t free_in_old_gen_and_os = old_gen->committed().byte_size() - old_gen->used_in_bytes()\n-                                  + free_mem_in_os;\n-    if (promotion_estimate >= free_in_old_gen_and_os) {\n-      log_debug(gc, ergo)(\"Run full-gc; predicted promotion size >= free space in old-gen and OS: %zu >= %zu\",\n-        promotion_estimate, free_in_old_gen_and_os);\n-      return SHOULD_RUN_FULL_GC;\n+  if (UseAdaptiveSizePolicy) {\n+    \/\/ Also checking OS has enough free memory to commit and expand old-gen.\n+    \/\/ Otherwise, the recorded gc-pause-time might be inflated to include time\n+    \/\/ of OS preparing free memory, resulting in inaccurate young-gen resizing.\n+    assert(old_gen->committed().byte_size() >= old_gen->used_in_bytes(), \"inv\");\n+    size_t free_mem_in_os;\n+    if (os::free_memory(free_mem_in_os)) {\n+      size_t free_in_old_gen_and_os = old_gen->committed().byte_size() - old_gen->used_in_bytes()\n+                                    + free_mem_in_os;\n+      if (promotion_estimate >= free_in_old_gen_and_os) {\n+        log_debug(gc, ergo)(\"Run full-gc; predicted promotion size >= free space in old-gen and OS: %zu >= %zu\",\n+          promotion_estimate, free_in_old_gen_and_os);\n+        return SHOULD_RUN_FULL_GC;\n+      }\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"}]}