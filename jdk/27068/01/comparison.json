{"files":[{"patch":"@@ -531,1 +531,2 @@\n-  ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n+  const static bool SHOULD_RUN_YOUNG_GC = true;\n+  const static bool SHOULD_RUN_FULL_GC = false;\n@@ -533,0 +534,1 @@\n+  ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n@@ -537,2 +539,2 @@\n-    log_debug(gc, ergo)(\"To-space is not empty; should run full-gc instead.\");\n-    return false;\n+    log_debug(gc, ergo)(\"To-space is not empty; run full-gc instead.\");\n+    return SHOULD_RUN_FULL_GC;\n@@ -541,1 +543,1 @@\n-  \/\/ Test to see if the scavenge will likely fail.\n+  \/\/ Check if the predicted promoted bytes will overflow free space in old-gen.\n@@ -547,2 +549,1 @@\n-  size_t free_in_old_gen = old_gen->max_gen_size() - old_gen->used_in_bytes();\n-  bool result = promotion_estimate < free_in_old_gen;\n+  size_t free_in_old_gen_with_expansion = old_gen->max_gen_size() - old_gen->used_in_bytes();\n@@ -550,4 +551,26 @@\n-  log_trace(gc, ergo)(\"%s scavenge: average_promoted %zu padded_average_promoted %zu free in old gen %zu\",\n-                result ? \"Do\" : \"Skip\", (size_t) policy->average_promoted_in_bytes(),\n-                (size_t) policy->padded_average_promoted_in_bytes(),\n-                free_in_old_gen);\n+  log_trace(gc, ergo)(\"average_promoted %zu; padded_average_promoted %zu\",\n+              (size_t) policy->average_promoted_in_bytes(),\n+              (size_t) policy->padded_average_promoted_in_bytes());\n+\n+  if (promotion_estimate >= free_in_old_gen_with_expansion) {\n+    log_debug(gc, ergo)(\"Run full-gc; predicted promotion size >= max free space in old-gen: %zu >= %zu\",\n+      promotion_estimate, free_in_old_gen_with_expansion);\n+    return SHOULD_RUN_FULL_GC;\n+  }\n+\n+  if (UseAdaptiveSizePolicy) {\n+    \/\/ Also checking OS has enough free memory to commit and expand old-gen.\n+    \/\/ Otherwise, the recorded gc-pause-time might be inflated to include time\n+    \/\/ of OS preparing free memory, resulting in inaccurate young-gen resizing.\n+    assert(old_gen->committed().byte_size() >= old_gen->used_in_bytes(), \"inv\");\n+    size_t free_mem_in_os;\n+    if (os::free_memory(free_mem_in_os)) {\n+      size_t free_in_old_gen_and_os = old_gen->committed().byte_size() - old_gen->used_in_bytes()\n+                                    + free_mem_in_os;\n+      if (promotion_estimate >= free_in_old_gen_and_os) {\n+        log_debug(gc, ergo)(\"Run full-gc; predicted promotion size >= free space in old-gen and OS: %zu >= %zu\",\n+          promotion_estimate, free_in_old_gen_and_os);\n+        return SHOULD_RUN_FULL_GC;\n+      }\n+    }\n+  }\n@@ -555,1 +578,2 @@\n-  return result;\n+  \/\/ No particular reasons to run full-gc, so young-gc.\n+  return SHOULD_RUN_YOUNG_GC;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":35,"deletions":11,"binary":false,"changes":46,"status":"modified"}]}