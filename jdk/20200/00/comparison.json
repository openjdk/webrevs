{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,2 @@\n-            if (clz.getEnclosingClass() == null)\n+            \/\/ local and anonymous class are top-level in annotated types\n+            if (clz.getDeclaringClass() == null)\n@@ -94,1 +95,1 @@\n-            return nestingForType(clz.getEnclosingClass(), addTo.pushInner());\n+            return nestingForType(clz.getDeclaringClass(), addTo.pushInner());\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/AnnotatedTypeFactory.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8023651 8044629\n+ * @bug 8023651 8044629 8162500\n@@ -65,0 +65,1 @@\n+        { getLocalsMember(), getLocalsMember().getDeclaringClass(), Integer.valueOf(2635), Integer.valueOf(2732)},\n@@ -172,0 +173,9 @@\n+    public static Class<?> getLocalsMember() {\n+        class Local {\n+            class Member {\n+                @Annot(2635) Member(@Annot(2732) Local Local.this) {}\n+            }\n+        }\n+        return Local.Member.class;\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/annotation\/typeAnnotations\/ConstructorReceiverTest.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}