[{"commit":{"message":"Typo"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"e226b5da26832b99d84a805dcf8bc9cec7be6903"},{"commit":{"message":"Fix botched merge, improve overflow conciousness"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"f0011e4c8256e7b0efe6634bd39ade2cc0ae9c2f"},{"commit":{"message":"Further tuning, avoid unnecessary long conversions"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"19f33b8be9e36f5f0fed61e067c953146837d69d"},{"commit":{"message":"Fix after merge"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"f656d0161f9b10083e93388f8b8534b34d84846f"},{"commit":{"message":"Merge optimization rework"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"7444fde95e71480e517b2e30c40a65ed9e901861"},{"commit":{"message":"Cleanup, further micro-optimization"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"35678c53e68b56421b25a3a1b70ce70c4a50e24e"},{"commit":{"message":"Extract a state object and call that in a loop, shifting work from initCEN to checkAndAddEntry"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"91360f361e0f249aed4fdc94aef2ad7c298a6c50"},{"commit":{"message":"Use zero as ZIP_ENDCHAIN marker to avoid the Arrays.fill"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"16af8093551271d1a2b426e2943f53552a37dac8"},{"commit":{"message":"Avoid loading TreeSet"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"0ea007193cae193de191306b5bc312f825de0b3f"},{"commit":{"message":"Going all the way"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"adcd07fbeaa2d028c624a5463429f14d62db99b1"},{"commit":{"message":"merge master"},"files":[],"sha":"5cb1f8f1450c9aef6824f1135a76c9d67f53f7d2"},{"commit":{"message":"Use zero as ZIP_ENDCHAIN marker to avoid the Arrays.fill"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"4b83435aeb0679a8f756b88fddfbe27b4d346c3c"},{"commit":{"message":"Move recursive call to initCEN"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"d81152ee1c20dfa842e0bc86f8122e842886f8a4"},{"commit":{"message":"Increase main workload, tune"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/zip\/ZipFileOpen.java"}],"sha":"2727ac4b1bfcc11b93220f7d254217bf4f4509b8"},{"commit":{"message":"Make main actually do something"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/zip\/ZipFileOpen.java"}],"sha":"544294c67329e552fff0e89de861826d35b4753d"},{"commit":{"message":"Add main to ZipFileOpen"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/zip\/ZipFileOpen.java"}],"sha":"9f4898b6e24262056650f04f055860c962f97eeb"},{"commit":{"message":"Outline code from the loop in ZipFile.Source.initCen"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"336fd15d0733c3467e6f6bda2abce242ff7d081c"}]