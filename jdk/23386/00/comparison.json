{"files":[{"patch":"@@ -1613,1 +1613,1 @@\n-      if (UseAVX < 3 || !is_LP64)  {\n+      if (UseAVX < 1 || !is_LP64)  {\n@@ -1616,4 +1616,0 @@\n-      if (!VM_Version::supports_avx512vl()) {\n-        return false;\n-      }\n-      break;\n@@ -6714,6 +6710,15 @@\n-\/\/ ---------------------------------------\n-\/\/ For copySign use 0xE4 as writemask for vpternlog\n-\/\/ Desired Truth Table: A -> xmm0 bit, B -> xmm1 bit, C -> xmm2 bit\n-\/\/ C (xmm2) is set to 0x7FFFFFFF\n-\/\/ Wherever xmm2 is 0, we want to pick from B (sign)\n-\/\/ Wherever xmm2 is 1, we want to pick from A (src)\n+\/\/ ----------------------------------------------------------------------\n+\/\/ We are using bitwise ternary logic insturction VPTERNLOG which can\n+\/\/ absorb complex binary expressions involving 3 boolean variables.\n+\/\/\n+\/\/ For copySign we set the truth table value as 0xE4.\n+\/\/ First column of truth table represents magnitude, second column\n+\/\/ represents sign operand while the third column is a conditional\n+\/\/ operand with fixed value of 0x7FFFFFFF.\n+\/\/\n+\/\/ Whenever condition bit is 1 corresponding magnitude bit gets selected\n+\/\/ else corresponding sign bit is picked.\n+\/\/ Our condition mask is such that apart for sign bit i.e. MSB bit all\n+\/\/ other bits are set to 1, this ensures that all the bits of result\n+\/\/ apart from MSB bit are copied from magnitude operand while sign bit\n+\/\/ is borrowed from sign operand.\n@@ -6721,9 +6726,9 @@\n-\/\/ A B C Result\n-\/\/ 0 0 0 0\n-\/\/ 0 0 1 0\n-\/\/ 0 1 0 1\n-\/\/ 0 1 1 0\n-\/\/ 1 0 0 0\n-\/\/ 1 0 1 1\n-\/\/ 1 1 0 1\n-\/\/ 1 1 1 1\n+\/\/ Magnitude Sign Condition Result\n+\/\/ 0          0       0       0\n+\/\/ 0          0       1       0\n+\/\/ 0          1       0       1\n+\/\/ 0          1       1       0\n+\/\/ 1          0       0       0\n+\/\/ 1          0       1       1\n+\/\/ 1          1       0       1\n+\/\/ 1          1       1       1\n@@ -6731,2 +6736,1 @@\n-\/\/ Result going from high bit to low bit is 0x11100100 = 0xe4\n-\/\/ ---------------------------------------\n+\/\/ ----------------------------------------------------------------------\n@@ -6735,1 +6739,2 @@\n-instruct copySignF_reg(regF dst, regF src, regF tmp1, rRegI tmp2) %{\n+instruct copySignF_reg(regF dst, regF src, regF xtmp1) %{\n+  predicate(VM_Version::supports_avx512vl());\n@@ -6737,2 +6742,2 @@\n-  effect(TEMP tmp1, TEMP tmp2);\n-  format %{ \"CopySignF $dst, $src\\t! using $tmp1 and $tmp2 as TEMP\" %}\n+  effect(TEMP xtmp1);\n+  format %{ \"CopySignF $dst, $src\\t! using $xtmp1 as TEMP\" %}\n@@ -6740,3 +6745,3 @@\n-    __ movl($tmp2$$Register, 0x7FFFFFFF);\n-    __ movdl($tmp1$$XMMRegister, $tmp2$$Register);\n-    __ vpternlogd($dst$$XMMRegister, 0xE4, $src$$XMMRegister, $tmp1$$XMMRegister, Assembler::AVX_128bit);\n+    __ vpcmpeqd($xtmp1$$XMMRegister, $xtmp1$$XMMRegister, $xtmp1$$XMMRegister, Assembler::AVX_128bit);\n+    __ vpsrld($xtmp1$$XMMRegister, $xtmp1$$XMMRegister, 1, Assembler::AVX_128bit);\n+    __ vpternlogd($dst$$XMMRegister, 0xE4, $src$$XMMRegister, $xtmp1$$XMMRegister, Assembler::AVX_128bit);\n@@ -6747,1 +6752,2 @@\n-instruct copySignD_imm(regD dst, regD src, regD tmp1, rRegL tmp2, immD zero) %{\n+instruct copySignD_imm(regD dst, regD src, regD xtmp1, immD zero) %{\n+  predicate(VM_Version::supports_avx512vl());\n@@ -6750,2 +6756,2 @@\n-  effect(TEMP tmp1, TEMP tmp2);\n-  format %{ \"CopySignD  $dst, $src\\t! using $tmp1 and $tmp2 as TEMP\" %}\n+  effect(TEMP xtmp1);\n+  format %{ \"CopySignD  $dst, $src\\t! using $xtmp1 as TEMP\" %}\n@@ -6753,3 +6759,3 @@\n-    __ mov64($tmp2$$Register, 0x7FFFFFFFFFFFFFFF);\n-    __ movq($tmp1$$XMMRegister, $tmp2$$Register);\n-    __ vpternlogq($dst$$XMMRegister, 0xE4, $src$$XMMRegister, $tmp1$$XMMRegister, Assembler::AVX_128bit);\n+    __ vpcmpeqd($xtmp1$$XMMRegister, $xtmp1$$XMMRegister, $xtmp1$$XMMRegister, Assembler::AVX_128bit);\n+    __ vpsrlq($xtmp1$$XMMRegister, $xtmp1$$XMMRegister, 1, Assembler::AVX_128bit);\n+    __ vpternlogq($dst$$XMMRegister, 0xE4, $src$$XMMRegister, $xtmp1$$XMMRegister, Assembler::AVX_128bit);\n@@ -6762,0 +6768,33 @@\n+instruct copySignF_reg_avx(regF dst, regF src, regF xtmp1, regF xtmp2) %{\n+  predicate(!VM_Version::supports_avx512vl());\n+  match(Set dst (CopySignF dst src));\n+  effect(TEMP_DEF dst,TEMP xtmp1, TEMP xtmp2);\n+  format %{ \"CopySignF $dst, $src\\t! using $xtmp1 and $xtmp2 as TEMP\" %}\n+  ins_encode %{\n+    __ vpcmpeqd($xtmp1$$XMMRegister, $xtmp1$$XMMRegister, $xtmp1$$XMMRegister, Assembler::AVX_128bit);\n+    __ vpsrld($xtmp2$$XMMRegister, $xtmp1$$XMMRegister, 1, Assembler::AVX_128bit);\n+    __ vpxor($xtmp1$$XMMRegister, $xtmp2$$XMMRegister, $xtmp1$$XMMRegister, Assembler::AVX_128bit);\n+    __ vandps($xtmp1$$XMMRegister, $xtmp1$$XMMRegister, $src$$XMMRegister, Assembler::AVX_128bit);\n+    __ vandps($xtmp2$$XMMRegister, $xtmp2$$XMMRegister, $dst$$XMMRegister, Assembler::AVX_128bit);\n+    __ vpor($dst$$XMMRegister, $xtmp1$$XMMRegister, $xtmp2$$XMMRegister, Assembler::AVX_128bit);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n+instruct copySignD_imm_avx(regD dst, regD src, regD xtmp1, regD xtmp2, immD zero) %{\n+  predicate(!VM_Version::supports_avx512vl());\n+  match(Set dst (CopySignD dst (Binary src zero)));\n+  ins_cost(100);\n+  effect(TEMP_DEF dst,TEMP xtmp1, TEMP xtmp2);\n+  format %{ \"CopySignD  $dst, $src\\t! using $xtmp1 and $xtmp2 as TEMP\" %}\n+  ins_encode %{\n+    __ vpcmpeqq($xtmp1$$XMMRegister, $xtmp1$$XMMRegister, $xtmp1$$XMMRegister, Assembler::AVX_128bit);\n+    __ vpsrlq($xtmp2$$XMMRegister, $xtmp1$$XMMRegister, 1, Assembler::AVX_128bit);\n+    __ vpxor($xtmp1$$XMMRegister, $xtmp2$$XMMRegister, $xtmp1$$XMMRegister, Assembler::AVX_128bit);\n+    __ vandpd($xtmp1$$XMMRegister, $xtmp1$$XMMRegister, $src$$XMMRegister, Assembler::AVX_128bit);\n+    __ vandpd($xtmp2$$XMMRegister, $xtmp2$$XMMRegister, $dst$$XMMRegister, Assembler::AVX_128bit);\n+    __ vpor($dst$$XMMRegister, $xtmp1$$XMMRegister, $xtmp2$$XMMRegister, Assembler::AVX_128bit);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":73,"deletions":34,"binary":false,"changes":107,"status":"modified"}]}