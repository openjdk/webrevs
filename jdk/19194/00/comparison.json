{"files":[{"patch":"@@ -4737,0 +4737,4 @@\n+        \/\/ map to avoid visiting same type argument twice, like in Foo<T>.Bar<T>\n+        Map<Type, Type> argMap = new HashMap<>();\n+        \/\/ cycle detection within an argument, see JDK-8324809\n+        Set<Type> seen = new HashSet<>();\n@@ -4748,1 +4752,4 @@\n-                Type bound = visit(arg);\n+                Type bound = argMap.get(arg);\n+                if (bound == null) {\n+                    argMap.put(arg, bound = visit(arg));\n+                }\n@@ -4777,5 +4784,9 @@\n-            if (rewriteTypeVars) {\n-                Type bound = t.getUpperBound().contains(t) ?\n-                        erasure(t.getUpperBound()) :\n-                        visit(t.getUpperBound());\n-                return rewriteAsWildcardType(bound, t, EXTENDS);\n+            if (seen.add(t)) {\n+                if (rewriteTypeVars) {\n+                    Type bound = t.getUpperBound().contains(t) ?\n+                            erasure(t.getUpperBound()) :\n+                            visit(t.getUpperBound());\n+                    return rewriteAsWildcardType(bound, t, EXTENDS);\n+                } else {\n+                    return t;\n+                }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8324809\n+ * @summary compiler can crash with SOE while proving if two recursive types are disjoint\n+ * @compile SOEWhileProvingDisjointnessTest.java\n+ *\/\n+\n+class SOEWhileProvingDisjointnessTest {\n+    class Criteria<B extends Builder<? extends Criteria>> {\n+        public <D extends Builder<E>, E extends Criteria<D>> D builder() {\n+            return (D) new Builder<>();\n+        }\n+    }\n+\n+    class Builder<C extends Criteria<? extends Builder<C>>> {}\n+}\n","filename":"test\/langtools\/tools\/javac\/generics\/wildcards\/SOEWhileProvingDisjointnessTest.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"}]}