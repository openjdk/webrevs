{"files":[{"patch":"@@ -1,53 +0,0 @@\n-\/*\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 4992443 4994819\n- * @modules java.base\/java.util.concurrent.atomic:open\n- * @run main VMSupportsCS8\n- * @summary Checks that the value of VMSupportsCS8 matches system properties.\n- *\/\n-\n-import java.lang.reflect.Field;\n-\n-public class VMSupportsCS8 {\n-    public static void main(String[] args) throws Exception {\n-        String isalist = System.getProperty(\"sun.cpu.isalist\");\n-        if (isalist != null && isalist.matches\n-            (\".*\\\\b(pentium_pro|ia64|amd64).*\")\n-            ||\n-            System.getProperty(\"os.arch\").matches\n-            (\".*\\\\b(ia64|amd64).*\")) {\n-\n-            System.out.println(\"This system is known to have hardware CS8\");\n-\n-            Class klass = Class.forName(\"java.util.concurrent.atomic.AtomicLong\");\n-            Field field = klass.getDeclaredField(\"VM_SUPPORTS_LONG_CAS\");\n-            field.setAccessible(true);\n-            boolean VMSupportsCS8 = field.getBoolean(null);\n-            if (! VMSupportsCS8)\n-                throw new Exception(\"Unexpected value for VMSupportsCS8\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/util\/concurrent\/atomic\/VMSupportsCS8.java","additions":0,"deletions":53,"binary":false,"changes":53,"status":"deleted"}]}