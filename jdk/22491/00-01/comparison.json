{"files":[{"patch":"@@ -90,0 +90,2 @@\n+#define HAVE_PD_C1_IS_INSTANCE_OF_STUB true\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Defs_aarch64.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -934,0 +934,5 @@\n+\n+        \/\/ This is necessary because I am never in my own secondary_super list.\n+        __ cmp(obj, klass);\n+        __ br(Assembler::EQ, success);\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -87,0 +87,2 @@\n+#define HAVE_PD_C1_IS_INSTANCE_OF_STUB true\n+\n","filename":"src\/hotspot\/cpu\/x86\/c1_Defs_x86.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1323,3 +1323,4 @@\n-        \/\/ Mirror: c_rarg0\n-        \/\/ Object: c_rarg1\n-        \/\/ Temps: rdx, rcx, r8, r9\n+        \/\/ Mirror: c_rarg0  (Windows: rcx, SysV: rdi)\n+        \/\/ Object: c_rarg1  (Windows: rdx, SysV: rsi)\n+        \/\/ ObjClass: r9\n+        \/\/ Temps:  rcx, r8, r10, r11\n@@ -1328,2 +1329,4 @@\n-        \/\/ Get the Klass* into c_rarg0\n-        Register klass = c_rarg0, obj = c_rarg1, result = rax;\n+        Register klass = r9, obj = c_rarg1, result = rax;\n+        Register temp0 = rcx, temp1 = r8, temp2 = r10, temp3 = r11;\n+\n+        \/\/ Get the Klass* into r9. c_rarg0 is now dead.\n@@ -1332,1 +1335,1 @@\n-        Label done, is_secondary;\n+        Label done, is_secondary, same;\n@@ -1341,2 +1344,2 @@\n-        __ movl(rdx, Address(klass, in_bytes(Klass::super_check_offset_offset())));\n-        __ cmpl(rdx, in_bytes(Klass::secondary_super_cache_offset()));\n+        __ movl(temp0, Address(klass, in_bytes(Klass::super_check_offset_offset())));\n+        __ cmpl(temp0, in_bytes(Klass::secondary_super_cache_offset()));\n@@ -1346,2 +1349,2 @@\n-        __ load_klass(r8, obj, \/*tmp*\/r9);\n-        __ cmpptr(klass, Address(r8, rdx));\n+        __ load_klass(temp2, obj, \/*tmp*\/temp1);\n+        __ cmpptr(klass, Address(temp2, temp0));\n@@ -1353,1 +1356,6 @@\n-        __ load_klass(obj, obj, \/*tmp*\/r9);\n+        __ load_klass(obj, obj, \/*tmp*\/temp1);\n+\n+        \/\/ This is necessary because I am never in my own secondary_super list.\n+        __ cmpptr(obj, klass);\n+        __ jcc(Assembler::equal, same);\n+\n@@ -1355,1 +1363,1 @@\n-                                             \/*temps*\/rdx, rcx, r8, r9,\n+                                             \/*temps*\/temp0, temp1, temp2, temp3,\n@@ -1358,0 +1366,2 @@\n+\n+        __ bind(same);\n","filename":"src\/hotspot\/cpu\/x86\/c1_Runtime1_x86.cpp","additions":22,"deletions":12,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -1247,0 +1247,1 @@\n+#ifdef HAVE_PD_C1_IS_INSTANCE_OF_STUB\n@@ -1248,3 +1249,3 @@\n-  if (pd_instanceof_fn == nullptr) {\n-    pd_instanceof_fn = CAST_FROM_FN_PTR(address, Runtime1::is_instance_of);\n-  }\n+#else\n+  address pd_instanceof_fn = CAST_FROM_FN_PTR(address, Runtime1::is_instance_of);\n+#endif\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}