{"files":[{"patch":"@@ -147,2 +147,1 @@\n-  PosixAttachOperation(int socket) : AttachOperation(), _socket_channel(socket) {\n-  }\n+  PosixAttachOperation(int socket) : AttachOperation(), _socket_channel(socket) {}\n@@ -152,2 +151,2 @@\n-  virtual ReplyWriter* get_reply_writer() override {\n-      return &_socket_channel;\n+  ReplyWriter* get_reply_writer() override {\n+    return &_socket_channel;\n","filename":"src\/hotspot\/os\/posix\/attachListener_posix.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-  virtual ReplyWriter* get_reply_writer() override {\n+  ReplyWriter* get_reply_writer() override {\n","filename":"src\/hotspot\/os\/windows\/attachListener_windows.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,3 @@\n-  bool _allow_streaming;\n+  const bool _allow_streaming;\n+  enum class ResultState { Unset, Set, Written };\n+  ResultState _result_state;\n@@ -65,2 +67,0 @@\n-  bool _result_set;\n-  bool _result_written;\n@@ -75,1 +75,1 @@\n-    return _result_set && _allow_streaming;\n+    return _result_state != ResultState::Unset && _allow_streaming;\n@@ -83,1 +83,1 @@\n-    if (!_result_written) {\n+    if (_result_state != ResultState::Written) {\n@@ -85,1 +85,1 @@\n-        _result_written = true;\n+        _result_state = ResultState::Written;\n@@ -102,1 +102,1 @@\n-      _result(JNI_OK), _result_set(false), _result_written(false),\n+      _result_state(ResultState::Unset), _result(JNI_OK),\n@@ -109,1 +109,1 @@\n-    if (!_result_set) {\n+    if (_result_state == ResultState::Unset) {\n@@ -111,1 +111,1 @@\n-      _result_set = true;\n+      _result_state = ResultState::Set;\n@@ -154,1 +154,5 @@\n-typedef void(*AttachOperationFunction)(AttachOperation* op, attachStream* out);\n+\/\/ Handler can set operation result in 2 ways:\n+\/\/ - return the result;\n+\/\/ - call out->set_result();\n+\/\/   this turns on streaming output, returned value is ignored.\n+typedef jint(*AttachOperationFunction)(AttachOperation* op, attachStream* out);\n@@ -213,1 +217,1 @@\n-static void get_properties(AttachOperation* op, attachStream* out, Symbol* serializePropertiesMethod) {\n+static jint get_properties(AttachOperation* op, attachStream* out, Symbol* serializePropertiesMethod) {\n@@ -223,2 +227,1 @@\n-    out->set_result(JNI_ERR);\n-    return;\n+    return JNI_ERR;\n@@ -242,2 +245,1 @@\n-    out->set_result(JNI_ERR);\n-    return;\n+    return JNI_ERR;\n@@ -257,0 +259,1 @@\n+  return JNI_OK;\n@@ -260,1 +263,1 @@\n-static void load_agent(AttachOperation* op, attachStream* out) {\n+static jint load_agent(AttachOperation* op, attachStream* out) {\n@@ -280,1 +283,0 @@\n-      out->set_result(JNI_ERR);\n@@ -283,1 +285,1 @@\n-      return;\n+      return JNI_ERR;\n@@ -287,1 +289,0 @@\n-  out->set_result(JNI_OK);\n@@ -293,0 +294,1 @@\n+  return JNI_OK;\n@@ -297,1 +299,1 @@\n-static void get_system_properties(AttachOperation* op, attachStream* out) {\n+static jint get_system_properties(AttachOperation* op, attachStream* out) {\n@@ -302,2 +304,2 @@\n-static void get_agent_properties(AttachOperation* op, attachStream* out) {\n-  get_properties(op, out, vmSymbols::serializeAgentPropertiesToByteArray_name());\n+static jint get_agent_properties(AttachOperation* op, attachStream* out) {\n+  return get_properties(op, out, vmSymbols::serializeAgentPropertiesToByteArray_name());\n@@ -313,2 +315,2 @@\n-static void data_dump(AttachOperation* op, attachStream* out) {\n-  out->set_result(JNI_OK);\n+static jint data_dump(AttachOperation* op, attachStream* out) {\n+  out->set_result(JNI_OK); \/\/ allow streaming output\n@@ -322,0 +324,1 @@\n+  return JNI_OK;\n@@ -327,1 +330,1 @@\n-static void thread_dump(AttachOperation* op, attachStream* out) {\n+static jint thread_dump(AttachOperation* op, attachStream* out) {\n@@ -341,1 +344,1 @@\n-  out->set_result(JNI_OK);\n+  out->set_result(JNI_OK); \/\/ allow streaming output\n@@ -350,0 +353,2 @@\n+\n+  return JNI_OK;\n@@ -354,1 +359,1 @@\n-static void jcmd(AttachOperation* op, attachStream* out) {\n+static jint jcmd(AttachOperation* op, attachStream* out) {\n@@ -375,1 +380,1 @@\n-    bool _allow_streaming_output;\n+    const bool _allow_streaming_output;\n@@ -394,1 +399,0 @@\n-    out->set_result(JNI_ERR);\n@@ -398,0 +402,1 @@\n+    return JNI_ERR;\n@@ -399,0 +404,1 @@\n+  return JNI_OK;\n@@ -408,1 +414,1 @@\n-static void dump_heap(AttachOperation* op, attachStream* out) {\n+static jint dump_heap(AttachOperation* op, attachStream* out) {\n@@ -411,1 +417,0 @@\n-    out->set_result(JNI_ERR);\n@@ -413,10 +418,9 @@\n-    return;\n-  }\n-\n-  bool live_objects_only = true;   \/\/ default is true to retain the behavior before this change is made\n-  const char* arg1 = op->arg(1);\n-  if (arg1 != nullptr && (strlen(arg1) > 0)) {\n-    if (strcmp(arg1, \"-all\") != 0 && strcmp(arg1, \"-live\") != 0) {\n-      out->set_result(JNI_ERR);\n-      out->print_cr(\"Invalid argument to dumpheap operation: %s\", arg1);\n-      return;\n+  } else {\n+    bool live_objects_only = true;   \/\/ default is true to retain the behavior before this change is made\n+    const char* arg1 = op->arg(1);\n+    if (arg1 != nullptr && (strlen(arg1) > 0)) {\n+      if (strcmp(arg1, \"-all\") != 0 && strcmp(arg1, \"-live\") != 0) {\n+        out->print_cr(\"Invalid argument to dumpheap operation: %s\", arg1);\n+        return JNI_ERR;\n+      }\n+      live_objects_only = strcmp(arg1, \"-live\") == 0;\n@@ -424,2 +428,0 @@\n-    live_objects_only = strcmp(arg1, \"-live\") == 0;\n-  }\n@@ -427,11 +429,10 @@\n-  const char* num_str = op->arg(2);\n-  uint level = 0;\n-  if (num_str != nullptr && num_str[0] != '\\0') {\n-    if (!Arguments::parse_uint(num_str, &level, 0)) {\n-      out->set_result(JNI_ERR);\n-      out->print_cr(\"Invalid compress level: [%s]\", num_str);\n-      return;\n-    } else if (level < 1 || level > 9) {\n-      out->set_result(JNI_ERR);\n-      out->print_cr(\"Compression level out of range (1-9): %u\", level);\n-      return;\n+    const char* num_str = op->arg(2);\n+    uint level = 0;\n+    if (num_str != nullptr && num_str[0] != '\\0') {\n+      if (!Arguments::parse_uint(num_str, &level, 0)) {\n+        out->print_cr(\"Invalid compress level: [%s]\", num_str);\n+        return JNI_ERR;\n+      } else if (level < 1 || level > 9) {\n+        out->print_cr(\"Compression level out of range (1-9): %u\", level);\n+        return JNI_ERR;\n+      }\n@@ -439,1 +440,0 @@\n-  }\n@@ -441,6 +441,8 @@\n-  out->set_result(JNI_OK);\n-  \/\/ Request a full GC before heap dump if live_objects_only = true\n-  \/\/ This helps reduces the amount of unreachable objects in the dump\n-  \/\/ and makes it easier to browse.\n-  HeapDumper dumper(live_objects_only \/* request GC *\/);\n-  dumper.dump(path, out, level);\n+    out->set_result(JNI_OK); \/\/ allow streaming output\n+    \/\/ Request a full GC before heap dump if live_objects_only = true\n+    \/\/ This helps reduces the amount of unreachable objects in the dump\n+    \/\/ and makes it easier to browse.\n+    HeapDumper dumper(live_objects_only \/* request GC *\/);\n+    dumper.dump(path, out, level);\n+  }\n+  return JNI_OK;\n@@ -456,1 +458,1 @@\n-static void heap_inspection(AttachOperation* op, attachStream* out) {\n+static jint heap_inspection(AttachOperation* op, attachStream* out) {\n@@ -464,1 +466,0 @@\n-      out->set_result(JNI_ERR);\n@@ -466,1 +467,1 @@\n-      return;\n+      return JNI_ERR;\n@@ -485,1 +486,0 @@\n-      out->set_result(JNI_ERR);\n@@ -488,1 +488,1 @@\n-      return;\n+      return JNI_ERR;\n@@ -501,0 +501,1 @@\n+  return JNI_OK;\n@@ -504,1 +505,1 @@\n-static void set_flag(AttachOperation* op, attachStream* out) {\n+static jint set_flag(AttachOperation* op, attachStream* out) {\n@@ -508,1 +509,0 @@\n-    out->set_result(JNI_ERR);\n@@ -510,1 +510,1 @@\n-    return;\n+    return JNI_ERR;\n@@ -517,1 +517,0 @@\n-    out->set_result(JNI_ERR);\n@@ -523,1 +522,1 @@\n-    return;\n+    return JNI_ERR;\n@@ -525,1 +524,1 @@\n-  out->set_result(JNI_OK);\n+  return JNI_OK;\n@@ -530,1 +529,1 @@\n-static void print_flag(AttachOperation* op, attachStream* out) {\n+static jint print_flag(AttachOperation* op, attachStream* out) {\n@@ -533,1 +532,0 @@\n-    out->set_result(JNI_ERR);\n@@ -535,1 +533,1 @@\n-    return;\n+    return JNI_ERR;\n@@ -539,1 +537,0 @@\n-    out->set_result(JNI_OK);\n@@ -543,1 +540,0 @@\n-    out->set_result(JNI_ERR);\n@@ -546,0 +542,1 @@\n+  return JNI_OK;\n@@ -549,2 +546,1 @@\n-static void get_version(AttachOperation* op, attachStream* out) {\n-  out->set_result(JNI_OK);\n+static jint get_version(AttachOperation* op, attachStream* out) {\n@@ -558,0 +554,1 @@\n+  return JNI_OK;\n@@ -635,2 +632,1 @@\n-        info->func(op, &st);\n-        \/\/ If the operation handler hasn't set result, set it to JNI_OK now.\n+        \/\/ If the operation handler hasn't set result by using st.set_result(), set it now.\n@@ -638,1 +634,1 @@\n-        st.set_result(JNI_OK);\n+        st.set_result(info->func(op, &st));\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":78,"deletions":82,"binary":false,"changes":160,"status":"modified"}]}