{"files":[{"patch":"@@ -676,3 +676,1 @@\n-\/\/ Parse an uintx-based option value. Also takes care of parsing enum values for options that are enums.\n-\/\/ Returns true if ok, false if the value could not be parsed.\n-static bool parseUintxValue(enum CompileCommand option, const char* line, uintx& value, int& bytes_read) {\n+static bool parseMemStat(const char* line, uintx& value, int& bytes_read, char* errorbuf, const int buf_size) {\n@@ -687,10 +685,7 @@\n-  if (option == CompileCommand::MemStat) {\n-    IF_ENUM_STRING(\"collect\", {\n-        value = (uintx)MemStatAction::collect;\n-    });\n-    IF_ENUM_STRING(\"print\", {\n-        value = (uintx)MemStatAction::print;\n-        print_final_memstat_report = true;\n-    });\n-    return false;\n-  }\n+  IF_ENUM_STRING(\"collect\", {\n+    value = (uintx)MemStatAction::collect;\n+  });\n+  IF_ENUM_STRING(\"print\", {\n+    value = (uintx)MemStatAction::print;\n+    print_final_memstat_report = true;\n+  });\n@@ -699,4 +694,1 @@\n-  \/\/ Option is not an enum. Parse as literal number.\n-  if ((sscanf(line, \"\" UINTX_FORMAT \"%n\", &value, &bytes_read) == 1)) {\n-    return true;\n-  }\n+  jio_snprintf(errorbuf, buf_size, \"MemStat: invalid option\");\n@@ -732,1 +724,9 @@\n-    if (parseUintxValue(option, line, value, bytes_read)) {\n+    bool success = false;\n+    if (option == CompileCommand::MemStat) {\n+      \/\/ Special parsing for MemStat\n+      success = parseMemStat(line, value, bytes_read, errorbuf, buf_size);\n+    } else {\n+      \/\/ parse as raw number\n+      success = sscanf(line, \"\" UINTX_FORMAT \"%n\", &value, &bytes_read) == 1;\n+    }\n+    if (success) {\n@@ -736,0 +736,1 @@\n+      return;\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.cpp","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"}]}