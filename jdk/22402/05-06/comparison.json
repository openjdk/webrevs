{"files":[{"patch":"@@ -30,3 +30,6 @@\n- * Represents an edge in the layout graph between two nodes (LayoutNode).\n- * Contains information about the source and target nodes, relative positions,\n- * and whether the edge has been reversed (used for back edges in hierarchical layouts).\n+ * The LayoutEdge class represents a connection between two nodes (LayoutNode) in a hierarchical graph layout.\n+ * It stores information about the starting node (from), the ending node (to), and the positions where\n+ * the edge connects to these nodes. It also keeps track of whether the edge has been reversed,\n+ * which is useful for handling edges that go against the main flow in hierarchical layouts (like loops or back edges).\n+ * This class ensures that edges are drawn correctly between nodes,\n+ * helping to create clear and understandable visualizations of the graph.\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/LayoutEdge.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -34,0 +34,6 @@\n+ * The LayoutGraph class is responsible for organizing and arranging a graph's nodes and edges for visual display.\n+ * It takes a collection of nodes (Vertex) and connections between them (Link) and structures them into layers,\n+ * creating a hierarchical layout. The class handles complexities like edges that span multiple layers\n+ * by inserting temporary \"dummy\" nodes to maintain a clear hierarchy.\n+ * This organization helps ensure that when the graph is displayed, it is easy to understand and visually coherent,\n+ * making the relationships between nodes clear and straightforward.\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/LayoutGraph.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,4 +32,6 @@\n- * Represents a layer in a hierarchical graph layout.\n- * Each LayoutLayer contains a collection of LayoutNodes positioned at the same vertical level.\n- * Provides methods to manage the nodes within the layer, including positioning, sorting,\n- * and adjusting the layout to minimize overlaps and improve visual clarity.\n+ * The LayoutLayer class represents a single horizontal layer in a hierarchical graph layout.\n+ * It holds a list of nodes (LayoutNode) that are all on the same vertical level.\n+ * This class provides simple methods to manage these nodes: you can add nodes to the layer,\n+ * calculate the maximum height needed to fit all nodes, center the nodes vertically within the layer, and set\n+ * their horizontal positions with proper spacing. In essence, LayoutLayer helps organize nodes neatly in a graph,\n+ * making it easier to display the graph clearly and understand the relationships between nodes.\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/LayoutLayer.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -34,3 +34,7 @@\n- * Represents a node in a hierarchical graph layout.\n- * A LayoutNode can be either an actual vertex from the graph or a dummy node inserted during the layout process.\n- * It stores layout-related properties such as position, size, margins, and connections to predecessor and successor nodes.\n+ * The LayoutNode class represents a node in a hierarchical graph layout.\n+ * It can be either an actual node from the original graph or a temporary \"dummy\" node added during the layout process\n+ * to handle complex edge connections.\n+ * This class stores important layout information like the node's position (x and y coordinates),\n+ * size (width and height), layer level, and connections to other nodes through incoming and outgoing edges.\n+ * It provides methods to calculate optimal positions, manage margins, and handle reversed edges,\n+ * all aimed at arranging the nodes neatly in layers to create a clear and visually organized graph display.\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/src\/main\/java\/com\/sun\/hotspot\/igv\/hierarchicallayout\/LayoutNode.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}