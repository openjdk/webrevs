{"files":[{"patch":"@@ -105,1 +105,2 @@\n-        if (obj == null) return false;\n+        if (this == obj) return true;\n+        if (obj == null || getClass() != obj.getClass()) return false;\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Block.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Objects;\n@@ -102,0 +103,15 @@\n+\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof BlockConnection that)) return false;\n+        return Objects.equals(this.sourceBlock, that.sourceBlock) &&\n+                Objects.equals(this.destinationBlock, that.destinationBlock) &&\n+                Objects.equals(this.label, that.label);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(sourceBlock, destinationBlock, label);\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/BlockConnection.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -384,1 +384,2 @@\n-        if (!(o instanceof Figure)) {\n+        if (this == o) return true;\n+        if (!(o instanceof Figure other)) {\n@@ -387,1 +388,1 @@\n-        return getInputNode().equals(((Figure) o).getInputNode());\n+        return Objects.equals(this.getInputNode(), other.getInputNode());\n@@ -392,1 +393,1 @@\n-        return getInputNode().hashCode();\n+        return Objects.hash(getInputNode());\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Figure.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.util.Objects;\n@@ -164,8 +165,4 @@\n-        if (!(o instanceof FigureConnection)) {\n-            return false;\n-        }\n-\n-        return getInputSlot().getFigure().equals(((FigureConnection)o).getInputSlot().getFigure())\n-                && getOutputSlot().getFigure().equals(((FigureConnection)o).getOutputSlot().getFigure())\n-                && getInputSlot().getPosition() == ((FigureConnection)o).getInputSlot().getPosition()\n-                && getOutputSlot().getPosition() == ((FigureConnection) o).getOutputSlot().getPosition();\n+        if (this == o) return true;\n+        if (!(o instanceof FigureConnection that)) return false;\n+        return Objects.equals(this.outputSlot, that.outputSlot) &&\n+                Objects.equals(this.inputSlot, that.inputSlot);\n@@ -174,0 +171,4 @@\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(outputSlot, inputSlot);\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/FigureConnection.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.Objects;\n@@ -87,0 +88,13 @@\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof InputSlot that)) return false;\n+        if (!super.equals(o)) return false;\n+        return this.originalIndex == that.originalIndex;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(super.hashCode(), originalIndex);\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/InputSlot.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.util.Objects;\n@@ -64,0 +65,12 @@\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        return super.equals(o);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(super.hashCode());\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/OutputSlot.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -37,4 +37,1 @@\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.List;\n+import java.util.*;\n@@ -181,0 +178,13 @@\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof Slot other)) return false;\n+        return this.wantedIndex == other.wantedIndex &&\n+                Objects.equals(this.figure, other.figure);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(figure, wantedIndex);\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Slot.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"}]}