{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,0 +93,7 @@\n+            long maximumHeapSize = Runtime.getRuntime().maxMemory() -\n+                (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory());\n+            if (totalSize > maximumHeapSize) {\n+                throw new InvalidMidiDataException(\n+                        \"Insufficient heap size to render audio data.\");\n+            }\n+\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/AudioFileSoundbankReader.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.sound.midi.InvalidMidiDataException;\n+import javax.sound.midi.MidiSystem;\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+\n+\/**\n+ * @test\n+ * @bug 8350813\n+ * @summary Rendering of bulky sound bank from MIDI sequence can cause OutOfMemoryError.\n+ * @run main\/othervm -Xmx1g BulkSoundBank\n+ *\/\n+\n+public class BulkSoundBank {\n+    static final byte[] midi = {77, 84, 104, 100, 0, 0, 0, 6, 0, 0, 0, 1, 1,\n+            -32, 77, 84, 114, 107, 0, 0, 0, 50, 0, -1, 88, 4, 4, 2, 24, 8, 0, -1,\n+            81, 3, 7, -95, 32, 0, -112, 60, 64, -125, 96, -128, 60, 64, -125, -44,\n+            -51, 32, -112, 48, 64, 1, -128, 48, 64, -127, -64, -45, 127, -112, 60,\n+            64, 1, -128, 60, 64, 0, -1, 47, 0};\n+\n+    public static void main(String[] args) throws IOException {\n+        try (ByteArrayInputStream bis = new ByteArrayInputStream(midi)) {\n+            MidiSystem.getSoundbank(bis);\n+            throw new RuntimeException(\"Test should throw InvalidMidiDataException\" \n+                                       + \" but it did not.\");\n+        } catch (InvalidMidiDataException imda) {\n+            System.out.println(\"Caught InvalidMidiDataException as expected\");\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/sound\/midi\/BulkSoundBank\/BulkSoundBank.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"}]}