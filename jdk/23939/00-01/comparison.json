{"files":[{"patch":"@@ -29,1 +29,0 @@\n-* @requires vm.compiler2.enabled\n@@ -31,1 +30,1 @@\n-* @run main\/othervm -XX:-TieredCompilation -XX:CompileOnly=compiler.vectorization.TestFloat16ToFloatConv::test* compiler.vectorization.TestFloat16ToFloatConv\n+* @run main\/othervm compiler.vectorization.TestFloat16ToFloatConv\n@@ -44,0 +43,1 @@\n+    private static char[] aC = new char[SIZE];\n@@ -47,1 +47,1 @@\n-    private static float[] goldB, goldS, goldI, goldL;\n+    private static float[] goldB, goldC, goldS, goldI, goldL;\n@@ -52,0 +52,1 @@\n+            aC[i] = (char)RANDOM.nextInt();\n@@ -57,0 +58,1 @@\n+        goldC = testCharKernel(aC);\n@@ -63,0 +65,2 @@\n+    \/\/ Not vectorized due to JDK-8350835\n+    @IR(failOn = { IRNode.VECTOR_CAST_HF2F })\n@@ -72,0 +76,17 @@\n+    @IR(counts = {IRNode.VECTOR_CAST_HF2F, \"> 0\"},\n+        applyIfOr = {\"UseCompactObjectHeaders\", \"false\", \"AlignVector\", \"false\"},\n+        applyIfPlatformOr = {\"x64\", \"true\", \"aarch64\", \"true\", \"riscv64\", \"true\"},\n+        applyIfCPUFeatureOr = {\"f16c\", \"true\", \"avx512f\", \"true\", \"zvfh\", \"true\", \"asimd\", \"true\", \"sve\", \"true\"})\n+    public static float[] testCharKernel(char[] carr) {\n+        float[] res = new float[carr.length];\n+        for (int i = 0; i < carr.length; i++) {\n+            res[i] = Float.float16ToFloat((short)carr[i]);\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(counts = {IRNode.VECTOR_CAST_HF2F, \"> 0\"},\n+        applyIfOr = {\"UseCompactObjectHeaders\", \"false\", \"AlignVector\", \"false\"},\n+        applyIfPlatformOr = {\"x64\", \"true\", \"aarch64\", \"true\", \"riscv64\", \"true\"},\n+        applyIfCPUFeatureOr = {\"f16c\", \"true\", \"avx512f\", \"true\", \"zvfh\", \"true\", \"asimd\", \"true\", \"sve\", \"true\"})\n@@ -81,0 +102,2 @@\n+    \/\/ Not vectorized due to JDK-8350835\n+    @IR(failOn = { IRNode.VECTOR_CAST_HF2F })\n@@ -90,0 +113,2 @@\n+    \/\/ Not vectorized due to JDK-8350835\n+    @IR(failOn = { IRNode.VECTOR_CAST_HF2F })\n@@ -112,0 +137,6 @@\n+    @Run(test = {\"testCharKernel\"})\n+    public static void testChar() {\n+        float[] farr = testCharKernel(aC);\n+        checkResult(farr, goldC);\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestFloat16ToFloatConv.java","additions":34,"deletions":3,"binary":false,"changes":37,"status":"modified"}]}