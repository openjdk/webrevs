{"files":[{"patch":"@@ -1998,1 +1998,0 @@\n-  assert(MaxVectorSize >= 16, \"sanity\");\n@@ -2005,1 +2004,1 @@\n-  const int ints_in_vec_reg = MaxVectorSize\/sizeof(jint);\n+  const int ints_in_vec_reg = MaxVectorSize \/ sizeof(jint);\n@@ -2010,1 +2009,1 @@\n-  const int MAX_VEC_MASK = ~(ints_in_vec_reg*lmul - 1);\n+  const int MAX_VEC_MASK = ~(ints_in_vec_reg * lmul - 1);\n@@ -2022,3 +2021,3 @@\n-  const Register pow31_highest  = tmp1;\n-  const Register ary_end = tmp2;\n-  const Register consumed = tmp3;\n+  const Register pow31_highest = tmp1;\n+  const Register ary_end       = tmp2;\n+  const Register consumed      = tmp3;\n@@ -2055,0 +2054,1 @@\n+  mulw(result, result, pow31_highest);\n@@ -2057,1 +2057,0 @@\n-  mulw(result, result, pow31_highest);\n@@ -2083,8 +2082,8 @@\n-  case T_BOOLEAN: return sizeof(jboolean);\n-  case T_BYTE:    return sizeof(jbyte);\n-  case T_SHORT:   return sizeof(jshort);\n-  case T_CHAR:    return sizeof(jchar);\n-  case T_INT:     return sizeof(jint);\n-  default:\n-    ShouldNotReachHere();\n-    return -1;\n+    case T_BOOLEAN: return sizeof(jboolean);\n+    case T_BYTE:    return sizeof(jbyte);\n+    case T_SHORT:   return sizeof(jshort);\n+    case T_CHAR:    return sizeof(jchar);\n+    case T_INT:     return sizeof(jint);\n+    default:\n+      ShouldNotReachHere();\n+      return -1;\n@@ -2096,8 +2095,8 @@\n-  \/\/ T_BOOLEAN used as surrogate for unsigned byte\n-  case T_BOOLEAN: lbu(dst, src);   break;\n-  case T_BYTE:     lb(dst, src);   break;\n-  case T_SHORT:    lh(dst, src);   break;\n-  case T_CHAR:    lhu(dst, src);   break;\n-  case T_INT:      lw(dst, src);   break;\n-  default:\n-    ShouldNotReachHere();\n+    \/\/ T_BOOLEAN used as surrogate for unsigned byte\n+    case T_BOOLEAN: lbu(dst, src);   break;\n+    case T_BYTE:     lb(dst, src);   break;\n+    case T_SHORT:    lh(dst, src);   break;\n+    case T_CHAR:    lhu(dst, src);   break;\n+    case T_INT:      lw(dst, src);   break;\n+    default:\n+      ShouldNotReachHere();\n@@ -2111,1 +2110,1 @@\n-  assert((T_INT == eltype) || (vdst != vtmp), \"should be\");\n+  assert_different_registers(vdst, vtmp);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":23,"deletions":24,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -6586,1 +6586,1 @@\n-    const int ints_in_vec_reg = MaxVectorSize\/sizeof(jint);\n+    const int ints_in_vec_reg = MaxVectorSize \/ sizeof(jint);\n@@ -6591,1 +6591,1 @@\n-    for (int i = ints_in_vec_reg*lmul; i >= 0; i--) {\n+    for (int i = ints_in_vec_reg * lmul; i >= 0; i--) {\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}