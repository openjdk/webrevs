{"files":[{"patch":"@@ -1483,1 +1483,5 @@\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  (void)evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(),\n+                                   src1->encoding(), VEX_SIMD_NONE,\n+                                   VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -1485,1 +1489,1 @@\n-  emit_arith(0x01, 0xC0, src1, src2);\n+  emit_arith(0x01, 0xC0, src2, src1);\n@@ -1723,1 +1727,3 @@\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  (void) evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -1725,1 +1731,1 @@\n-  emit_arith(0x21, 0xC0, src1, src2);\n+  emit_arith(0x21, 0xC0, src2, src1);\n@@ -2632,1 +2638,3 @@\n-  evex_prefix_ndd(src, 0, dst->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  evex_prefix_nf(src, 0, dst->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -4444,2 +4452,4 @@\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n-  emit_arith(0x0B, 0xC0, src1, src2);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  (void) evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  emit_arith(0x09, 0xC0, src2, src1);\n@@ -4496,1 +4506,3 @@\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  (void) evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -4498,1 +4510,1 @@\n-  emit_arith(0x09, 0xC0, src1, src2);\n+  emit_arith(0x09, 0xC0, src2, src1);\n@@ -6891,1 +6903,3 @@\n-  int encode = evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  int encode = evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -6902,1 +6916,3 @@\n-  int encode = evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  int encode = evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -6913,1 +6929,3 @@\n-  int encode = evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  int encode = evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -6924,1 +6942,3 @@\n-  int encode = evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  int encode = evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -6936,1 +6956,3 @@\n-  int encode = evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  int encode = evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -6947,1 +6969,3 @@\n-  int encode = evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  int encode = evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -7108,1 +7132,1 @@\n-void Assembler::esubl(Register dst, Register src2, Register src1, bool no_flags) {\n+void Assembler::esubl(Register dst, Register src1, Register src2, bool no_flags) {\n@@ -7110,1 +7134,3 @@\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  (void) evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -7112,1 +7138,1 @@\n-  emit_arith(0x29, 0xC0, src1, src2);\n+  emit_arith(0x29, 0xC0, src2, src1);\n@@ -7438,1 +7464,3 @@\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  (void) evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -7440,1 +7468,1 @@\n-  emit_arith(0x31, 0xC0, src1, src2);\n+  emit_arith(0x31, 0xC0, src2, src1);\n@@ -7501,1 +7529,0 @@\n-  emit_int8(0x66);\n@@ -7503,1 +7530,3 @@\n-  attributes.set_address_attributes(\/* tuple_type *\/ EVEX_NOSCALE, \/* input_size_in_bits *\/ EVEX_64bit);\n+  attributes.set_address_attributes(\/* tuple_type *\/ EVEX_NOSCALE, \/* input_size_in_bits *\/ EVEX_16bit);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n@@ -14299,1 +14328,3 @@\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  (void) evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -14301,1 +14332,1 @@\n-  emit_arith(0x01, 0xC0, src1, src2);\n+  emit_arith(0x01, 0xC0, src2, src1);\n@@ -14395,1 +14426,3 @@\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  (void) evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -14397,1 +14430,1 @@\n-  emit_arith(0x21, 0xC0, src1, src2);\n+  emit_arith(0x21, 0xC0, src2, src1);\n@@ -14826,1 +14859,3 @@\n-  int encode = vex_prefix_and_encode(dst->encoding(), 0, src->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, \/* src_is_gpr *\/ true, \/* nds_is_ndd *\/ false, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  int encode = evex_prefix_and_encode_nf(dst->encoding(), 0, src->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -14845,1 +14880,5 @@\n-  vex_prefix(src, 0, dst->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F, &attributes, \/* nds_is_ndd *\/ false, no_flags);\n+  attributes.set_address_attributes(\/* tuple_type *\/ EVEX_NOSCALE, \/* input_size_in_bits *\/ EVEX_64bit);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  evex_prefix_nf(src, 0, dst->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+\n@@ -15290,1 +15329,3 @@\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  (void) evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -15292,1 +15333,1 @@\n-  emit_arith(0x09, 0xC0, src1, src2);\n+  emit_arith(0x09, 0xC0, src2, src1);\n@@ -15978,1 +16019,3 @@\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  (void) evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -15980,1 +16023,1 @@\n-  emit_arith(0x29, 0xC0, src1, src2);\n+  emit_arith(0x29, 0xC0, src2, src1);\n@@ -16042,1 +16085,3 @@\n-  (void) evex_prefix_and_encode_ndd(src1->encoding(), dst->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  \/\/ NDD shares its encoding bits with NDS bits for regular EVEX instruction.\n+  \/\/ Therefore, DST is passed as the second argument to minimize changes in the leaf level routine.\n+  (void) evex_prefix_and_encode_ndd(src2->encoding(), dst->encoding(), src1->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C, &attributes, no_flags);\n@@ -16044,1 +16089,1 @@\n-  emit_arith(0x31, 0xC0, src1, src2);\n+  emit_arith(0x31, 0xC0, src2, src1);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":79,"deletions":34,"binary":false,"changes":113,"status":"modified"}]}