{"files":[{"patch":"@@ -4260,1 +4260,1 @@\n-                                                  bool obj_array, bool not_array) {\n+                                                  bool obj_array, bool not_array, Node** obj) {\n@@ -4302,1 +4302,8 @@\n-  return generate_fair_guard(bol, region);\n+  Node* ctrl = generate_fair_guard(bol, region);\n+  Node* is_array_ctrl = not_array ? control() : ctrl;\n+  if (obj != nullptr && is_array_ctrl != nullptr && is_array_ctrl != top()) {\n+    \/\/ Keep track of the fact that 'obj' is an array to prevent\n+    \/\/ array specific accesses from floating above the guard.\n+    *obj = _gvn.transform(new CastPPNode(is_array_ctrl, *obj, TypeAryPtr::BOTTOM));\n+  }\n+  return ctrl;\n@@ -4397,1 +4404,1 @@\n-  Node* non_array = generate_non_array_guard(load_object_klass(array), nullptr);\n+  Node* non_array = generate_non_array_guard(load_object_klass(array), nullptr, &array);\n@@ -5257,1 +5264,2 @@\n-    Node* array_ctl = generate_array_guard(obj_klass, (RegionNode*)nullptr);\n+    Node* array_obj = obj;\n+    Node* array_ctl = generate_array_guard(obj_klass, (RegionNode*)nullptr, &array_obj);\n@@ -5262,1 +5270,1 @@\n-      Node* obj_length = load_array_length(obj);\n+      Node* obj_length = load_array_length(array_obj);\n@@ -5276,1 +5284,1 @@\n-          ArrayCopyNode* ac = ArrayCopyNode::make(this, true, obj, intcon(0), alloc_obj, intcon(0), obj_length, true, false);\n+          ArrayCopyNode* ac = ArrayCopyNode::make(this, true, array_obj, intcon(0), alloc_obj, intcon(0), obj_length, true, false);\n@@ -5297,1 +5305,1 @@\n-        copy_to_clone(obj, alloc_obj, array_size, true);\n+        copy_to_clone(array_obj, alloc_obj, array_size, true);\n@@ -5918,10 +5926,2 @@\n-    \/\/ Keep track of the information that src\/dest are arrays to prevent below array specific accesses from floating above.\n-    generate_non_array_guard(load_object_klass(src), slow_region);\n-    if (!stopped()) {\n-      src = _gvn.transform(new CheckCastPPNode(control(), src, TypeAryPtr::BOTTOM));\n-    }\n-\n-    generate_non_array_guard(load_object_klass(dest), slow_region);\n-    if (!stopped()) {\n-      dest = _gvn.transform(new CheckCastPPNode(control(), dest, TypeAryPtr::BOTTOM));\n-    }\n+    generate_non_array_guard(load_object_klass(src), slow_region, &src);\n+    generate_non_array_guard(load_object_klass(dest), slow_region, &dest);\n@@ -8543,1 +8543,1 @@\n-    Node* array_ctl = generate_array_guard(klass_node, nullptr);\n+    Node* array_ctl = generate_array_guard(klass_node, nullptr, &obj);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -166,2 +166,2 @@\n-  Node* generate_array_guard(Node* kls, RegionNode* region) {\n-    return generate_array_guard_common(kls, region, false, false);\n+  Node* generate_array_guard(Node* kls, RegionNode* region, Node** obj = nullptr) {\n+    return generate_array_guard_common(kls, region, false, false, obj);\n@@ -169,2 +169,2 @@\n-  Node* generate_non_array_guard(Node* kls, RegionNode* region) {\n-    return generate_array_guard_common(kls, region, false, true);\n+  Node* generate_non_array_guard(Node* kls, RegionNode* region, Node** obj = nullptr) {\n+    return generate_array_guard_common(kls, region, false, true, obj);\n@@ -172,2 +172,2 @@\n-  Node* generate_objArray_guard(Node* kls, RegionNode* region) {\n-    return generate_array_guard_common(kls, region, true, false);\n+  Node* generate_objArray_guard(Node* kls, RegionNode* region, Node** obj = nullptr) {\n+    return generate_array_guard_common(kls, region, true, false, obj);\n@@ -175,2 +175,2 @@\n-  Node* generate_non_objArray_guard(Node* kls, RegionNode* region) {\n-    return generate_array_guard_common(kls, region, true, true);\n+  Node* generate_non_objArray_guard(Node* kls, RegionNode* region, Node** obj = nullptr) {\n+    return generate_array_guard_common(kls, region, true, true, obj);\n@@ -179,1 +179,1 @@\n-                                    bool obj_array, bool not_array);\n+                                    bool obj_array, bool not_array, Node** obj = nullptr);\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -4687,10 +4687,10 @@\n-const TypeAryPtr *TypeAryPtr::RANGE;\n-const TypeAryPtr *TypeAryPtr::OOPS;\n-const TypeAryPtr *TypeAryPtr::NARROWOOPS;\n-const TypeAryPtr *TypeAryPtr::BYTES;\n-const TypeAryPtr *TypeAryPtr::SHORTS;\n-const TypeAryPtr *TypeAryPtr::CHARS;\n-const TypeAryPtr *TypeAryPtr::INTS;\n-const TypeAryPtr *TypeAryPtr::LONGS;\n-const TypeAryPtr *TypeAryPtr::FLOATS;\n-const TypeAryPtr *TypeAryPtr::DOUBLES;\n+const TypeAryPtr* TypeAryPtr::RANGE;\n+const TypeAryPtr* TypeAryPtr::OOPS;\n+const TypeAryPtr* TypeAryPtr::NARROWOOPS;\n+const TypeAryPtr* TypeAryPtr::BYTES;\n+const TypeAryPtr* TypeAryPtr::SHORTS;\n+const TypeAryPtr* TypeAryPtr::CHARS;\n+const TypeAryPtr* TypeAryPtr::INTS;\n+const TypeAryPtr* TypeAryPtr::LONGS;\n+const TypeAryPtr* TypeAryPtr::FLOATS;\n+const TypeAryPtr* TypeAryPtr::DOUBLES;\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1477,10 +1477,10 @@\n-  static const TypeAryPtr *RANGE;\n-  static const TypeAryPtr *OOPS;\n-  static const TypeAryPtr *NARROWOOPS;\n-  static const TypeAryPtr *BYTES;\n-  static const TypeAryPtr *SHORTS;\n-  static const TypeAryPtr *CHARS;\n-  static const TypeAryPtr *INTS;\n-  static const TypeAryPtr *LONGS;\n-  static const TypeAryPtr *FLOATS;\n-  static const TypeAryPtr *DOUBLES;\n+  static const TypeAryPtr* RANGE;\n+  static const TypeAryPtr* OOPS;\n+  static const TypeAryPtr* NARROWOOPS;\n+  static const TypeAryPtr* BYTES;\n+  static const TypeAryPtr* SHORTS;\n+  static const TypeAryPtr* CHARS;\n+  static const TypeAryPtr* INTS;\n+  static const TypeAryPtr* LONGS;\n+  static const TypeAryPtr* FLOATS;\n+  static const TypeAryPtr* DOUBLES;\n","filename":"src\/hotspot\/share\/opto\/type.hpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}