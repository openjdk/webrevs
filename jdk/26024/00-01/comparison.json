{"files":[{"patch":"@@ -31,1 +31,11 @@\n- * @run driver compiler.arguments.TestCompilerCounts\n+ * @run driver compiler.arguments.TestCompilerCounts debug\n+ *\/\n+\n+\/*\n+ * @test\n+ * @library \/test\/lib \/\n+ * @bug 8356000\n+ * @requires vm.flagless\n+ * @requires vm.bits == \"64\"\n+ * @requires !vm.debug\n+ * @run driver compiler.arguments.TestCompilerCounts product\n@@ -59,0 +69,2 @@\n+        final boolean debug = args[0].startsWith(\"debug\");\n+\n@@ -137,6 +149,6 @@\n-            int c1OnlyCount = heuristicCount(cpus, Compilation.C1Only);\n-            pass(c1OnlyCount, opt, \"-XX:TieredStopAtLevel=1\", \"-XX:NonNMethodCodeHeapSize=\"+NonNMethodCodeHeapSize, \"-XX:CodeCacheMinimumUseSpace=\"+CodeCacheMinimumUseSpace);\n-            pass(c1OnlyCount, opt, \"-XX:TieredStopAtLevel=2\", \"-XX:NonNMethodCodeHeapSize=\"+NonNMethodCodeHeapSize, \"-XX:CodeCacheMinimumUseSpace=\"+CodeCacheMinimumUseSpace);\n-            pass(c1OnlyCount, opt, \"-XX:TieredStopAtLevel=3\", \"-XX:NonNMethodCodeHeapSize=\"+NonNMethodCodeHeapSize, \"-XX:CodeCacheMinimumUseSpace=\"+CodeCacheMinimumUseSpace);\n-            int c2OnlyCount = heuristicCount(cpus, Compilation.C2Only);\n-            pass(c2OnlyCount, opt, \"-XX:-TieredCompilation\", \"-XX:NonNMethodCodeHeapSize=\"+NonNMethodCodeHeapSize, \"-XX:CodeCacheMinimumUseSpace=\"+CodeCacheMinimumUseSpace);\n+            int c1OnlyCount = heuristicCount(cpus, Compilation.C1Only, debug);\n+            pass(c1OnlyCount, opt, \"-XX:TieredStopAtLevel=1\", \"-XX:NonNMethodCodeHeapSize=\" + NonNMethodCodeHeapSize);\n+            pass(c1OnlyCount, opt, \"-XX:TieredStopAtLevel=2\", \"-XX:NonNMethodCodeHeapSize=\" + NonNMethodCodeHeapSize);\n+            pass(c1OnlyCount, opt, \"-XX:TieredStopAtLevel=3\", \"-XX:NonNMethodCodeHeapSize=\" + NonNMethodCodeHeapSize);\n+            int c2OnlyCount = heuristicCount(cpus, Compilation.C2Only, debug);\n+            pass(c2OnlyCount, opt, \"-XX:-TieredCompilation\", \"-XX:NonNMethodCodeHeapSize=\" + NonNMethodCodeHeapSize);\n@@ -145,3 +157,3 @@\n-            int tieredCount = heuristicCount(cpus, Compilation.Tiered);\n-            pass(tieredCount, opt, \"-XX:NonNMethodCodeHeapSize=\"+NonNMethodCodeHeapSize, \"-XX:CodeCacheMinimumUseSpace=\"+CodeCacheMinimumUseSpace);\n-            pass(tieredCount, opt, \"-XX:TieredStopAtLevel=4\", \"-XX:NonNMethodCodeHeapSize=\"+NonNMethodCodeHeapSize, \"-XX:CodeCacheMinimumUseSpace=\"+CodeCacheMinimumUseSpace);\n+            int tieredCount = heuristicCount(cpus, Compilation.Tiered, debug);\n+            pass(tieredCount, opt, \"-XX:NonNMethodCodeHeapSize=\"  +  NonNMethodCodeHeapSize);\n+            pass(tieredCount, opt, \"-XX:TieredStopAtLevel=4\", \"-XX:NonNMethodCodeHeapSize=\" + NonNMethodCodeHeapSize);\n@@ -163,1 +175,1 @@\n-    \/\/ Buffer sizes for caclulating the maximum number of compiler threads.\n+    \/\/ Buffer sizes for calculating the maximum number of compiler threads.\n@@ -167,1 +179,0 @@\n-    static final int C1MaxCount = (NonNMethodCodeHeapSize - 3 * CodeCacheMinimumUseSpace) \/ C1BufSize;\n@@ -169,1 +180,0 @@\n-    static final int C2MaxCount = (NonNMethodCodeHeapSize - 3 * CodeCacheMinimumUseSpace) \/ C2BufSize;\n@@ -171,2 +181,0 @@\n-    static final int TieredMaxCount = (NonNMethodCodeHeapSize - 3 * CodeCacheMinimumUseSpace) \/ TieredBufSize;\n-\n@@ -175,1 +183,1 @@\n-    public static int heuristicCount(int cpus, Compilation comp) {\n+    public static int heuristicCount(int cpus, Compilation comp, boolean debug) {\n@@ -180,4 +188,4 @@\n-        int max_count = switch (comp) {\n-            case C1Only -> C1MaxCount;\n-            case C2Only -> C2MaxCount;\n-            case Tiered -> TieredMaxCount;\n+        int max_count = (NonNMethodCodeHeapSize - (debug ? 3 : 1) * CodeCacheMinimumUseSpace) \/ switch (comp) {\n+            case C1Only -> C1BufSize;\n+            case C2Only -> C2BufSize;\n+            case Tiered -> TieredBufSize;\n@@ -202,1 +210,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestCompilerCounts.java","additions":28,"deletions":21,"binary":false,"changes":49,"status":"modified"}]}