{"files":[{"patch":"@@ -59,1 +59,1 @@\n-                    \"Tested bug occurs only on-paper printing so you mustn't use PDF printer\\n\" +\n+                    \"Tested bug occurs only on-paper printing so you mustn't use PDF printer\\n\\n\" +\n@@ -63,1 +63,3 @@\n-                    \"If so, press PASS, else press FAIL.\";\n+                    \"If so, press PASS, else press FAIL.\\n\\n\" +\n+                    \"Also you may run this test in paper-saving mode. Due to tested bug affects pages printed with transparency in LANDSCAPE and REVERSE_LANDSCAPE orientations \" +\n+                    \"there is an option to print only 2 pages affected. To do it pass PaperSavingMode parameter.\";\n@@ -65,5 +67,1 @@\n-    private static boolean isAlphaTestModeSet = true;\n-\n-    public static boolean getAlphaTestModeSet() {\n-        return isAlphaTestModeSet;\n-    }\n+    private static boolean isPaperSavingMode = false;\n@@ -76,1 +74,1 @@\n-                isAlphaTestModeSet = !args[0].equals(\"testOpaque\");\n+                isPaperSavingMode = args[0].equals(\"PaperSavingMode\");\n@@ -78,1 +76,1 @@\n-            if (isAlphaTestModeSet) {\n+            if (isPaperSavingMode) {\n@@ -81,1 +79,1 @@\n-            PassFailJFrame.builder().instructions(instructionsHeader + INSTRUCTIONS)\n+            PassFailJFrame.builder().rows(15).instructions(instructionsHeader + INSTRUCTIONS)\n@@ -128,5 +126,5 @@\n-        if (isAlphaTestModeSet) {\n-            Book bookAlphaTest = new Book();\n-            bookAlphaTest.append(printableTransparent, pageFormatL);\n-            bookAlphaTest.append(printableTransparent, pageFormatRL);\n-            printerJob.setPageable(bookAlphaTest);\n+        if (isPaperSavingMode) {\n+            Book bookPageSavingTest = new Book();\n+            bookPageSavingTest.append(printableTransparent, pageFormatL);\n+            bookPageSavingTest.append(printableTransparent, pageFormatRL);\n+            printerJob.setPageable(bookPageSavingTest);\n@@ -136,8 +134,8 @@\n-            Book bookNoAlphaTest = new Book();\n-            bookNoAlphaTest.append(printableOpaque, pageFormatP);\n-            bookNoAlphaTest.append(printableTransparent, pageFormatP);\n-            bookNoAlphaTest.append(printableOpaque, pageFormatL);\n-            bookNoAlphaTest.append(printableTransparent, pageFormatL);\n-            bookNoAlphaTest.append(printableOpaque, pageFormatRL);\n-            bookNoAlphaTest.append(printableTransparent, pageFormatRL);\n-            printerJob.setPageable(bookNoAlphaTest);\n+            Book bookDefaultTest = new Book();\n+            bookDefaultTest.append(printableOpaque, pageFormatP);\n+            bookDefaultTest.append(printableTransparent, pageFormatP);\n+            bookDefaultTest.append(printableOpaque, pageFormatL);\n+            bookDefaultTest.append(printableTransparent, pageFormatL);\n+            bookDefaultTest.append(printableOpaque, pageFormatRL);\n+            bookDefaultTest.append(printableTransparent, pageFormatRL);\n+            printerJob.setPageable(bookDefaultTest);\n@@ -195,4 +193,2 @@\n-        if (AlphaPrintingOffsets.getAlphaTestModeSet()) {\n-            drawSmallRectangle(g, pageFormat.getImageableX(), pageFormat.getImageableY(),\n-                    pageFormat.getImageableWidth(), pageFormat.getImageableHeight());\n-        }\n+        drawSmallRectangle(g, pageFormat.getImageableX(), pageFormat.getImageableY(),\n+                pageFormat.getImageableWidth(), pageFormat.getImageableHeight());\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/ImagePrinting\/AlphaPrintingOffsets.java","additions":23,"deletions":27,"binary":false,"changes":50,"status":"modified"}]}