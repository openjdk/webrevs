{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/RasterPrinterJob.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,3 +32,0 @@\n-import static java.awt.print.PageFormat.LANDSCAPE;\n-import static java.awt.print.PageFormat.PORTRAIT;\n-import static java.awt.print.PageFormat.REVERSE_LANDSCAPE;\n@@ -44,0 +41,4 @@\n+import static java.awt.print.PageFormat.LANDSCAPE;\n+import static java.awt.print.PageFormat.PORTRAIT;\n+import static java.awt.print.PageFormat.REVERSE_LANDSCAPE;\n+\n@@ -50,1 +51,2 @@\n- * @summary Test for comparing offsets of images drawn with opaque and translucent colors printed in all orientations\n+ * @summary Test for comparing offsets of images drawn with opaque\n+ *          and translucent colors printed in all orientations\n@@ -56,2 +58,3 @@\n-                    \"Tested bug occurs only on-paper printing so you mustn't use PDF printer\\n\\n\" +\n-                    \"1.Java print dialog should appear.\\n\" +\n+            \"Tested bug occurs only on-paper printing \" +\n+                    \"so you mustn't use PDF printer\\n\\n\" +\n+                    \"1. Java print dialog should appear.\\n\" +\n@@ -59,1 +62,2 @@\n-                    \"3. Please check the page margin rectangle are properly drawn and visible on all sides on all pages.\\n\" +\n+                    \"3. Please check the page margin rectangle are properly \" +\n+                    \"drawn and visible on all sides on all pages.\\n\" +\n@@ -61,2 +65,5 @@\n-                    \"Also you may run this test in paper-saving mode. Due to tested bug affects pages printed with transparency in LANDSCAPE and REVERSE_LANDSCAPE orientations \" +\n-                    \"there is an option to print only 2 pages affected. To do it pass PaperSavingMode parameter.\";\n+                    \"Also you may run this test in paper-saving mode. Due \" +\n+                    \"to tested bug affects pages printed with transparency \" +\n+                    \"in LANDSCAPE and REVERSE_LANDSCAPE orientations there \" +\n+                    \"is an option to print only 2 pages affected. \" +\n+                    \"To do it pass PaperSavingMode parameter.\";\n@@ -69,1 +76,2 @@\n-            String instructionsHeader = \"This test prints 6 pages with page margin rectangle and a text message. \\n\";\n+            String instructionsHeader = \"This test prints 6 pages with page \" +\n+                    \"margin rectangle and a text message. \\n\";\n@@ -74,1 +82,2 @@\n-                instructionsHeader = \"This test prints 2 pages with page margin rectangle and a text message. \\n\";\n+                instructionsHeader = \"This test prints 2 pages with page \" +\n+                        \"margin rectangle and a text message. \\n\";\n@@ -76,2 +85,2 @@\n-            PassFailJFrame.builder().rows(15).instructions(instructionsHeader + INSTRUCTIONS)\n-                    .testUI(() -> createTestUI()).build().awaitAndCheck();\n+            PassFailJFrame.builder().instructions(instructionsHeader + INSTRUCTIONS)\n+                    .rows(15).testUI(() -> createTestUI()).build().awaitAndCheck();\n@@ -80,2 +89,4 @@\n-            System.out.println(\"Test failed : Printer not configured or available.\");\n-            throw new RuntimeException(\"Test failed : Printer not configured or available.\");\n+            System.out.println(\"Test failed : \" +\n+                    \"Printer not configured or available.\");\n+            throw new RuntimeException(\"Test failed : \" +\n+                    \"Printer not configured or available.\");\n@@ -149,2 +160,2 @@\n-            throw new RuntimeException(\"Test failed : \"\n-                    + \"User selected 'Cancel' button on the print dialog\");\n+            throw new RuntimeException(\"Test failed : \" +\n+                    \"User selected 'Cancel' button on the print dialog\");\n@@ -153,1 +164,0 @@\n-}\n@@ -155,5 +165,5 @@\n-class CustomPrintable implements Printable {\n-    private static final int THICKNESS = 10;\n-    private static final int MARGIN = 15;\n-    private static final int SMALL_RECTANGLE_SIZE = 5;\n-    private int alphaValue;\n+    static class CustomPrintable implements Printable {\n+        private static final int THICKNESS = 10;\n+        private static final int MARGIN = 15;\n+        private static final int SMALL_RECTANGLE_SIZE = 5;\n+        private final int alphaValue;\n@@ -161,3 +171,3 @@\n-    public CustomPrintable(int alpha) {\n-        alphaValue = alpha;\n-    }\n+        public CustomPrintable(int alpha) {\n+            alphaValue = alpha;\n+        }\n@@ -165,10 +175,11 @@\n-    private static String getOrientStr(int orient) {\n-        switch (orient) {\n-            case PORTRAIT:\n-                return \"PORTRAIT\";\n-            case LANDSCAPE:\n-                return \"LANDSCAPE\";\n-            case REVERSE_LANDSCAPE:\n-                return \"REVERSE_LANDSCAPE\";\n-            default:\n-                return \"BAD Orientation\";\n+        private String getOrientStr(int orient) {\n+            switch (orient) {\n+                case PORTRAIT:\n+                    return \"PORTRAIT\";\n+                case LANDSCAPE:\n+                    return \"LANDSCAPE\";\n+                case REVERSE_LANDSCAPE:\n+                    return \"REVERSE_LANDSCAPE\";\n+                default:\n+                    return \"BAD Orientation\";\n+            }\n@@ -176,1 +187,0 @@\n-    }\n@@ -178,2 +188,2 @@\n-    @Override\n-    public int print(Graphics g, PageFormat pageFormat, int pageIndex) {\n+        @Override\n+        public int print(Graphics g, PageFormat pageFormat, int pageIndex) {\n@@ -181,3 +191,3 @@\n-        if (pageIndex > 5) {\n-            return Printable.NO_SUCH_PAGE;\n-        }\n+            if (pageIndex > 5) {\n+                return Printable.NO_SUCH_PAGE;\n+            }\n@@ -185,2 +195,2 @@\n-        drawRectangle(g, pageFormat.getImageableX(), pageFormat.getImageableY(),\n-                pageFormat.getImageableWidth(), pageFormat.getImageableHeight());\n+            drawRectangle(g, pageFormat.getImageableX(), pageFormat.getImageableY(),\n+                    pageFormat.getImageableWidth(), pageFormat.getImageableHeight());\n@@ -188,2 +198,2 @@\n-        drawSmallRectangle(g, pageFormat.getImageableX(), pageFormat.getImageableY(),\n-                pageFormat.getImageableWidth(), pageFormat.getImageableHeight());\n+            drawSmallRectangle(g, pageFormat.getImageableX(), pageFormat.getImageableY(),\n+                    pageFormat.getImageableWidth(), pageFormat.getImageableHeight());\n@@ -191,3 +201,3 @@\n-        drawMsg(g, 300, 300, pageFormat.getOrientation());\n-        return Printable.PAGE_EXISTS;\n-    }\n+            drawMsg(g, 300, 300, pageFormat.getOrientation());\n+            return Printable.PAGE_EXISTS;\n+        }\n@@ -195,3 +205,3 @@\n-    private void drawRectangle(Graphics g, double x, double y, double width, double height) {\n-        Graphics2D g2d = (Graphics2D) g;\n-        g2d.setStroke(new BasicStroke(THICKNESS));\n+        private void drawRectangle(Graphics g, double x, double y, double width, double height) {\n+            Graphics2D g2d = (Graphics2D) g;\n+            g2d.setStroke(new BasicStroke(THICKNESS));\n@@ -199,3 +209,4 @@\n-        \/\/ Draw rectangle with thick border lines\n-        g2d.drawRect((int) x + MARGIN, (int) y + MARGIN, (int) width - MARGIN * 2, (int) height - MARGIN * 2);\n-    }\n+            \/\/ Draw rectangle with thick border lines\n+            g2d.drawRect((int) x + MARGIN, (int) y + MARGIN,\n+                    (int) width - MARGIN * 2, (int) height - MARGIN * 2);\n+        }\n@@ -203,3 +214,3 @@\n-    private void drawSmallRectangle(Graphics g, double x, double y, double width, double height) {\n-        Graphics2D g2d = (Graphics2D) g;\n-        Color originalColor = g2d.getColor();\n+        private void drawSmallRectangle(Graphics g, double x, double y, double width, double height) {\n+            Graphics2D g2d = (Graphics2D) g;\n+            Color originalColor = g2d.getColor();\n@@ -207,4 +218,4 @@\n-        g2d.setColor(new Color(0, 0, 0, alphaValue));\n-        \/\/ Calculate the position to center the smaller rectangle\n-        double centerX = x + (width - SMALL_RECTANGLE_SIZE) \/ 2;\n-        double centerY = y + (height - SMALL_RECTANGLE_SIZE) \/ 2;\n+            g2d.setColor(new Color(0, 0, 0, alphaValue));\n+            \/\/ Calculate the position to center the smaller rectangle\n+            double centerX = x + (width - SMALL_RECTANGLE_SIZE) \/ 2;\n+            double centerY = y + (height - SMALL_RECTANGLE_SIZE) \/ 2;\n@@ -212,1 +223,1 @@\n-        g2d.fillRect((int) centerX, (int) centerY, SMALL_RECTANGLE_SIZE, SMALL_RECTANGLE_SIZE);\n+            g2d.fillRect((int) centerX, (int) centerY, SMALL_RECTANGLE_SIZE, SMALL_RECTANGLE_SIZE);\n@@ -214,2 +225,2 @@\n-        g2d.setColor(originalColor);\n-    }\n+            g2d.setColor(originalColor);\n+        }\n@@ -217,2 +228,2 @@\n-    private void drawMsg(Graphics g, int x, int y, int orient) {\n-        Graphics2D g2d = (Graphics2D) g;\n+        private void drawMsg(Graphics g, int x, int y, int orient) {\n+            Graphics2D g2d = (Graphics2D) g;\n@@ -220,3 +231,4 @@\n-        String msg = \"Orient= \" + getOrientStr(orient);\n-        msg += \" Color=\" + (alphaValue != 255 ? \" ALPHA\" : \" OPAQUE\");\n-        g2d.drawString(msg, x, y);\n+            String msg = \"Orient= \" + getOrientStr(orient);\n+            msg += \" Color=\" + (alphaValue != 255 ? \" ALPHA\" : \" OPAQUE\");\n+            g2d.drawString(msg, x, y);\n+        }\n@@ -225,0 +237,1 @@\n+\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/ImagePrinting\/AlphaPrintingOffsets.java","additions":83,"deletions":70,"binary":false,"changes":153,"status":"modified"}]}