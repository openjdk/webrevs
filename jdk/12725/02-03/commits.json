[{"commit":{"message":"Merge branch 'openjdk:master' into sve_cmpU"},"files":[],"sha":"12fa26bbb59816c1e3ed82c21730457c77bf7a3a"},{"commit":{"message":"Refactor part of code in C2 assembler and remove some switch-case stmts."},"files":[],"sha":"5acf5ba4c7f2e5a21b70bd494fb30108e6791e89"},{"commit":{"message":"Merge branch 'openjdk:master' into sve_cmpU"},"files":[],"sha":"d210ae928bf4e52b2c862bb8fb94a76e465cc95f"},{"commit":{"message":"8302906: AArch64: Add SVE backend support for vector unsigned comparison\n\nThis patch implements unsigned vector comparison on SVE.\n\n1: Test:\nAll vector API test cases[1][2] passed without new failure. Existing\ntest cases can cover all unsigned comparison conditions for all\nkinds of vector.\n\n2: Performance:\n(1): Benchmark:\nAs existing benchmarks in panama repo (such as [3]) have some\nissues [4] (We will fix them in a separate patch.), I collected\nperformance data with a reduced jmh benchmark [5]. e.g. for\nByteVector unsigned comparison:\n\n```\n@Benchmark\n    public void byteVectorUnsignedCompare() {\n        for (int j = 0; j < 200; j++) {\n            for (int i = 0; i < bspecies.length(); i++) {\n                ByteVector av = ByteVector.fromArray(bspecies, ba, i);\n                ByteVector ca = ByteVector.fromArray(bspecies, bb, i);\n                av.compare(VectorOperators.UNSIGNED_GT, ca).intoArray(br, i);\n            }\n        }\n    }\n```\n\n(2): Performance data\n\nBefore:\n\n```\nBenchmark                               Score(op\/ms)     Error\nByteVector.UNSIGNED_GT#size(1024)       4.846            3.419\nShortVector.UNSIGNED_GE#size(1024)      3.055            1.369\nIntVector.UNSIGNED_LT#size(1024)        3.475            1.269\nLongVector.UNSIGNED_LE#size(1024)       4.515            1.812\n```\n\nAfter:\n\n```\nBenchmark                               Score(op\/ms)     Error\nByteVector.UNSIGNED_GT#size(1024)       493.937          1.389\nShortVector.UNSIGNED_GE#size(1024)      5308.796         20.557\nIntVector.UNSIGNED_LT#size(1024)        4944.744         10.606\nLongVector.UNSIGNED_LE#size(1024)       8459.605         28.683\n```\n\n[1] https:\/\/github.com\/openjdk\/jdk\/tree\/master\/test\/jdk\/jdk\/incubator\/vector\n[2] https:\/\/github.com\/openjdk\/jdk\/tree\/master\/test\/hotspot\/jtreg\/compiler\/vectorapi\n[3] https:\/\/github.com\/openjdk\/panama-vector\/blob\/2aade73adeabdf6a924136b17fd96ccc95c1d160\/test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/operation\/ByteMaxVector.java#L1459\n[4] https:\/\/bugs.openjdk.org\/browse\/JDK-8282850\n[5] https:\/\/gist.github.com\/changpeng1997\/d311127e1015c107197f9b56a92b0fae\n\nTEST_CMD: true\n\nJira: ENTLLT-6097\nChange-Id: I236cf4a7626af3aad04bf081b47849a00e77df15"},"files":[],"sha":"599cf967ca4404d1faff4bdf07dad43838ba4990"}]