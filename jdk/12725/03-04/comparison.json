{"files":[{"patch":"@@ -2732,0 +2732,40 @@\n+  \/\/ AdvSIMD vector compare\n+  void cm(Condition cond, FloatRegister Vd, SIMD_Arrangement T, FloatRegister Vn, FloatRegister Vm) {\n+    starti;\n+    assert(T != T1Q && T != T1D, \"incorrect arrangement\");\n+    int cond_op;\n+    switch (cond) {\n+      case EQ: cond_op = 0b110001; break;\n+      case GT: cond_op = 0b000110; break;\n+      case GE: cond_op = 0b000111; break;\n+      case HI: cond_op = 0b100110; break;\n+      case HS: cond_op = 0b100111; break;\n+      default:\n+        ShouldNotReachHere();\n+        break;\n+    }\n+\n+    f(0, 31), f((int)T & 1, 30), f((cond_op >> 5) & 1, 29);\n+    f(0b01110, 28, 24), f((int)T >> 1, 23, 22), f(1, 21), rf(Vm, 16);\n+    f(cond_op & 0b11111, 15, 11), f(1, 10), rf(Vn, 5), rf(Vd, 0);\n+  }\n+\n+  \/\/ AdvSIMD Floating-point vector compare\n+  void fcm(Condition cond, FloatRegister Vd, SIMD_Arrangement T, FloatRegister Vn, FloatRegister Vm) {\n+    starti;\n+    assert(T == T2S || T == T4S || T == T2D, \"invalid arrangement\");\n+    int cond_op;\n+    switch (cond) {\n+      case EQ: cond_op = 0b00; break;\n+      case GT: cond_op = 0b11; break;\n+      case GE: cond_op = 0b10; break;\n+      default:\n+        ShouldNotReachHere();\n+        break;\n+    }\n+\n+    f(0, 31), f((int)T & 1, 30), f((cond_op >> 1) & 1, 29);\n+    f(0b01110, 28, 24), f(cond_op & 1, 23), f(T == T2D ? 1 : 0, 22);\n+    f(1, 21), rf(Vm, 16), f(0b111001, 15, 10), rf(Vn, 5), rf(Vd, 0);\n+  }\n+\n@@ -3179,40 +3219,0 @@\n-  \/\/ AdvSIMD vector compare\n-  void cm(Condition cond, FloatRegister Vd, SIMD_Arrangement T, FloatRegister Vn, FloatRegister Vm) {\n-    starti;\n-    assert(T != T1Q && T != T1D, \"incorrect arrangement\");\n-    int cond_op;\n-    switch (cond) {\n-      case EQ: cond_op = 0b110001; break;\n-      case GT: cond_op = 0b000110; break;\n-      case GE: cond_op = 0b000111; break;\n-      case HI: cond_op = 0b100110; break;\n-      case HS: cond_op = 0b100111; break;\n-      default:\n-        ShouldNotReachHere();\n-        break;\n-    }\n-\n-    f(0, 31), f((int)T & 1, 30), f((cond_op >> 5) & 1, 29);\n-    f(0b01110, 28, 24), f((int)T >> 1, 23, 22), f(1, 21), rf(Vm, 16);\n-    f(cond_op & 0b11111, 15, 11), f(1, 10), rf(Vn, 5), rf(Vd, 0);\n-  }\n-\n-  \/\/ AdvSIMD Floating-point vector compare\n-  void fcm(Condition cond, FloatRegister Vd, SIMD_Arrangement T, FloatRegister Vn, FloatRegister Vm) {\n-    starti;\n-    assert(T == T2S || T == T4S || T == T2D, \"invalid arrangement\");\n-    int cond_op;\n-    switch (cond) {\n-      case EQ: cond_op = 0b00; break;\n-      case GT: cond_op = 0b11; break;\n-      case GE: cond_op = 0b10; break;\n-      default:\n-        ShouldNotReachHere();\n-        break;\n-    }\n-\n-    f(0, 31), f((int)T & 1, 30), f((cond_op >> 1) & 1, 29);\n-    f(0b01110, 28, 24), f(cond_op & 1, 23), f(T == T2D ? 1 : 0, 22);\n-    f(1, 21), rf(Vm, 16), f(0b111001, 15, 10), rf(Vn, 5), rf(Vd, 0);\n-  }\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":40,"deletions":40,"binary":false,"changes":80,"status":"modified"}]}