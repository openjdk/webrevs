{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,2 +71,1 @@\n-  _byte_map_base(nullptr),\n-  _guard_region()\n+  _byte_map_base(nullptr)\n@@ -81,3 +80,2 @@\n-  \/\/ each card takes 1 byte; + 1 for the guard card\n-  size_t num_bytes = num_cards + 1;\n-  _byte_map_size = compute_byte_map_size(num_bytes);\n+  \/\/ each card takes 1 byte\n+  _byte_map_size = compute_byte_map_size(num_cards);\n@@ -94,1 +92,1 @@\n-  os::trace_page_sizes(\"Card Table\", num_bytes, num_bytes,\n+  os::trace_page_sizes(\"Card Table\", num_cards, num_cards,\n@@ -110,4 +108,0 @@\n-  CardValue* guard_card = &_byte_map[num_cards];\n-  assert(is_aligned(guard_card, _page_size), \"must be on its own OS page\");\n-  _guard_region = MemRegion((HeapWord*)guard_card, _page_size);\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,3 +62,0 @@\n-  \/\/ The last card is a guard card; never committed.\n-  MemRegion _guard_region;\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -92,1 +92,0 @@\n-  nonstatic_field(CardTable,                   _guard_region,                                 MemRegion)                             \\\n","filename":"src\/hotspot\/share\/gc\/shared\/vmStructs_gc.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}