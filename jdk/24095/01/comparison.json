{"files":[{"patch":"@@ -846,1 +846,1 @@\n-    if (phi == nullptr || _igvn.type(phi) == Type::TOP) {\n+    if (phi == nullptr || _igvn.type(phi) == Type::TOP || !CMoveNode::supported(_igvn.type(phi))) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-  switch( t->basic_type() ) {\n+  switch (t->basic_type()) {\n@@ -198,2 +198,17 @@\n-    ShouldNotReachHere();\n-    return nullptr;\n+      ShouldNotReachHere();\n+      return nullptr;\n+  }\n+}\n+\n+bool CMoveNode::supported(const Type* t) {\n+  switch (t->basic_type()) {\n+    case T_INT:     return Matcher::match_rule_supported(Op_CMoveI);\n+    case T_FLOAT:   return Matcher::match_rule_supported(Op_CMoveF);\n+    case T_DOUBLE:  return Matcher::match_rule_supported(Op_CMoveD);\n+    case T_LONG:    return Matcher::match_rule_supported(Op_CMoveL);\n+    case T_OBJECT:  return Matcher::match_rule_supported(Op_CMoveP);\n+    case T_ADDRESS: return Matcher::match_rule_supported(Op_CMoveP);\n+    case T_NARROWOOP: return Matcher::match_rule_supported(Op_CMoveN);\n+    default:\n+      ShouldNotReachHere();\n+      return false;\n","filename":"src\/hotspot\/share\/opto\/movenode.cpp","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+  static bool supported(const Type* t);\n","filename":"src\/hotspot\/share\/opto\/movenode.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}