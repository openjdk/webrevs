{"files":[{"patch":"@@ -1040,23 +1040,15 @@\n-     * @serialData <ul>\n-     *               <li>In the current serial form the string\n-     *                   &quot;&lt;domain&gt;:&lt;properties&gt;&lt;wild&gt;&quot;,\n-     *                   where: <ul>\n-     *                            <li>&lt;domain&gt; represents the domain part\n-     *                                of the {@link ObjectName}<\/li>\n-     *                            <li>&lt;properties&gt; represents the list of\n-     *                                properties, as returned by\n-     *                                {@link #getKeyPropertyListString}\n-     *                            <li>&lt;wild&gt; is empty if not\n-     *                                <code>isPropertyPattern<\/code>, or\n-     *                                is the character \"<code>*<\/code>\" if\n-     *                                <code>isPropertyPattern<\/code>\n-     *                                and &lt;properties&gt; is empty, or\n-     *                                is \"<code>,*<\/code>\" if\n-     *                                <code>isPropertyPattern<\/code> and\n-     *                                &lt;properties&gt; is not empty.\n-     *                            <\/li>\n-     *                          <\/ul>\n-     *                   The intent is that this string could be supplied\n-     *                   to the {@link #ObjectName(String)} constructor to\n-     *                   produce an equivalent {@link ObjectName}.\n-     *               <\/li>\n+     * @serialData The string &quot;&lt;domain&gt;:&lt;properties&gt;&lt;wild&gt;&quot;, where:\n+     *             <ul>\n+     *               <li>&lt;domain&gt; represents the domain part\n+     *                   of the {@link ObjectName}<\/li>\n+     *               <li>&lt;properties&gt; represents the list of\n+     *                   properties, as returned by\n+     *                   {@link #getKeyPropertyListString}<\/li>\n+     *               <li>&lt;wild&gt; is empty if not\n+     *                   <code>isPropertyPattern<\/code>, or\n+     *                   is the character \"<code>*<\/code>\" if\n+     *                   <code>isPropertyPattern<\/code>\n+     *                   and &lt;properties&gt; is empty, or\n+     *                   is \"<code>,*<\/code>\" if\n+     *                   <code>isPropertyPattern<\/code> and\n+     *                   &lt;properties&gt; is not empty.<\/li>\n@@ -1064,0 +1056,3 @@\n+     *             The intent is that this string could be supplied\n+     *             to the {@link #ObjectName(String)} constructor to\n+     *             produce an equivalent {@link ObjectName}.\n@@ -1082,23 +1077,15 @@\n-     * @serialData <ul>\n-     *               <li>In the current serial form the string\n-     *                   &quot;&lt;domain&gt;:&lt;properties&gt;&lt;wild&gt;&quot;,\n-     *                   where: <ul>\n-     *                            <li>&lt;domain&gt; represents the domain part\n-     *                                of the {@link ObjectName}<\/li>\n-     *                            <li>&lt;properties&gt; represents the list of\n-     *                                properties, as returned by\n-     *                                {@link #getKeyPropertyListString}\n-     *                            <li>&lt;wild&gt; is empty if not\n-     *                                <code>isPropertyPattern<\/code>, or\n-     *                                is the character \"<code>*<\/code>\" if\n-     *                                this <code>isPropertyPattern<\/code>\n-     *                                and &lt;properties&gt; is empty, or\n-     *                                is \"<code>,*<\/code>\" if\n-     *                                <code>isPropertyPattern<\/code> and\n-     *                                &lt;properties&gt; is not empty.\n-     *                            <\/li>\n-     *                          <\/ul>\n-     *                   The intent is that this string could be supplied\n-     *                   to the {@link #ObjectName(String)} constructor to\n-     *                   produce an equivalent {@link ObjectName}.\n-     *               <\/li>\n+     * @serialData The string &quot;&lt;domain&gt;:&lt;properties&gt;&lt;wild&gt;&quot;, where:\n+     *             <ul>\n+     *               <li>&lt;domain&gt; represents the domain part\n+     *                   of the {@link ObjectName}<\/li>\n+     *               <li>&lt;properties&gt; represents the list of\n+     *                   properties, as returned by\n+     *                   {@link #getKeyPropertyListString}<\/li>\n+     *               <li>&lt;wild&gt; is empty if not\n+     *                   <code>isPropertyPattern<\/code>, or\n+     *                   is the character \"<code>*<\/code>\" if\n+     *                   this <code>isPropertyPattern<\/code>\n+     *                   and &lt;properties&gt; is empty, or\n+     *                   is \"<code>,*<\/code>\" if\n+     *                   <code>isPropertyPattern<\/code> and\n+     *                   &lt;properties&gt; is not empty.<\/li>\n@@ -1106,0 +1093,3 @@\n+     *             The intent is that this string could be supplied\n+     *             to the {@link #ObjectName(String)} constructor to\n+     *             produce an equivalent {@link ObjectName}.\n","filename":"src\/java.management\/share\/classes\/javax\/management\/ObjectName.java","additions":36,"deletions":46,"binary":false,"changes":82,"status":"modified"}]}