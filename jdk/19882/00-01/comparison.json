{"files":[{"patch":"@@ -448,1 +448,1 @@\n-  for(int i = 0; i < _size; i++) _array[i] = nullptr;\n+  for(int i = 0; i < size; i++) _array[i] = nullptr;\n@@ -458,1 +458,1 @@\n-  return Atomic::load_acquire(&(_array[i % _size]));\n+  return Atomic::load_acquire(&(_array[i % size]));\n@@ -462,1 +462,1 @@\n-  return Atomic::cmpxchg(&_array[i % _size], old, entry) == old;\n+  return Atomic::cmpxchg(&_array[i % size], old, entry) == old;\n@@ -466,1 +466,1 @@\n-  for (int i = 0; i < _size; i++) {\n+  for (int i = 0; i < size; i++) {\n@@ -477,1 +477,1 @@\n-  for (int i = 0; i < _size; i++) {\n+  for (int i = 0; i < size; i++) {\n@@ -512,1 +512,1 @@\n-    for (int i = 0; i < _probe_depth; i++) {\n+    for (int i = 0; i < probe_depth; i++) {\n@@ -541,1 +541,1 @@\n-  for (int i = 0; i < _probe_depth; i++) {\n+  for (int i = 0; i < probe_depth; i++) {\n","filename":"src\/hotspot\/share\/interpreter\/oopMapCache.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -155,3 +155,2 @@\n-  enum { _size        = 32,     \/\/ Use fixed size for now\n-         _probe_depth = 3       \/\/ probe depth in case of collisions\n-  };\n+  static constexpr int size = 32;        \/\/ Use fixed size for now\n+  static constexpr int probe_depth = 3;  \/\/ probe depth in case of collisions\n@@ -159,1 +158,1 @@\n-  OopMapCacheEntry* volatile _array[_size];\n+  OopMapCacheEntry* volatile _array[size];\n","filename":"src\/hotspot\/share\/interpreter\/oopMapCache.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}