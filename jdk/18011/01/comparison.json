{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -829,1 +829,1 @@\n-     * zip file entry.\n+     * ZIP file entry.\n@@ -837,1 +837,1 @@\n-     * @param ze the zip file entry\n+     * @param ze the ZIP file entry\n@@ -839,1 +839,1 @@\n-     *         zip file entry or null if the zip file entry does not exist\n+     *         ZIP file entry or null if the ZIP file entry does not exist\n@@ -841,1 +841,1 @@\n-     * @throws ZipException if a zip file format error has occurred\n+     * @throws ZipException if a ZIP file format error has occurred\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarFile.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * Utility class for zipfile name and comment decoding and encoding\n+ * Utility class for ZIP file entry name and comment decoding and encoding\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -233,1 +233,1 @@\n-     * End of central directory (END) header zip file comment length field offset.\n+     * End of central directory (END) header ZIP file comment length field offset.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipConstants.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-     * Creates a new zip entry with the specified name.\n+     * Creates a new ZIP entry with the specified name.\n@@ -114,2 +114,2 @@\n-     * Creates a new zip entry with fields taken from the specified\n-     * zip entry.\n+     * Creates a new ZIP entry with fields taken from the specified\n+     * ZIP entry.\n@@ -118,1 +118,1 @@\n-     *         A zip Entry object\n+     *         A ZIP Entry object\n@@ -153,1 +153,1 @@\n-     * be stored into the {@code date and time fields} of the zip file\n+     * be stored into the {@code date and time fields} of the ZIP file\n@@ -186,1 +186,1 @@\n-     * date and time fields} of the zip file entry. The\n+     * date and time fields} of the ZIP file entry. The\n@@ -209,1 +209,1 @@\n-     * be stored into the {@code date and time fields} of the zip file\n+     * be stored into the {@code date and time fields} of the ZIP file\n@@ -213,1 +213,1 @@\n-     * zip file entry's extended timestamp fields in {@code optional\n+     * ZIP file entry's extended timestamp fields in {@code optional\n@@ -288,1 +288,1 @@\n-     * zip file entry's {@code date and time fields} in {@code standard\n+     * ZIP file entry's {@code date and time fields} in {@code standard\n@@ -294,1 +294,1 @@\n-     * @return This zip entry\n+     * @return This ZIP entry\n@@ -340,1 +340,1 @@\n-     * @return This zip entry\n+     * @return This ZIP entry\n@@ -376,1 +376,1 @@\n-     * @return This zip entry\n+     * @return This ZIP entry\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipEntry.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * Signals that a Zip exception of some sort has occurred.\n+ * Signals that a ZIP exception of some sort has occurred.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n- * This class is used to read entries from a zip file.\n+ * This class is used to read entries from a ZIP file.\n@@ -98,1 +98,1 @@\n-    private final String filePath;     \/\/ zip file path\n+    private final String filePath;     \/\/ ZIP file path\n@@ -102,1 +102,1 @@\n-    \/\/ The \"resource\" used by this zip file that needs to be\n+    \/\/ The \"resource\" used by this ZIP file that needs to be\n@@ -106,1 +106,1 @@\n-    \/\/ c) the \"native\" source of this zip file.\n+    \/\/ c) the \"native\" source of this ZIP file.\n@@ -113,1 +113,1 @@\n-     * Mode flag to open a zip file for reading.\n+     * Mode flag to open a ZIP file for reading.\n@@ -118,1 +118,1 @@\n-     * Mode flag to open a zip file and mark it for deletion.  The file will be\n+     * Mode flag to open a ZIP file and mark it for deletion.  The file will be\n@@ -134,1 +134,1 @@\n-     * Opens a zip file for reading.\n+     * Opens a ZIP file for reading.\n@@ -143,1 +143,1 @@\n-     * @param name the name of the zip file\n+     * @param name the name of the ZIP file\n@@ -261,1 +261,1 @@\n-     * Opens a zip file for reading.\n+     * Opens a ZIP file for reading.\n@@ -267,1 +267,1 @@\n-     * @param name the name of the zip file\n+     * @param name the name of the ZIP file\n@@ -311,1 +311,1 @@\n-     * Returns the zip file comment. If a comment does not exist or an error is\n+     * Returns the ZIP file comment. If a comment does not exist or an error is\n@@ -313,1 +313,1 @@\n-     * when opening the Zip file, then {@code null} is returned.\n+     * when opening the ZIP file, then {@code null} is returned.\n@@ -315,1 +315,1 @@\n-     * @return the comment string for the zip file, or null if none\n+     * @return the comment string for the ZIP file, or null if none\n@@ -317,1 +317,1 @@\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -328,1 +328,1 @@\n-            \/\/ the Zip file comment, return null;\n+            \/\/ the ZIP file comment, return null;\n@@ -338,1 +338,1 @@\n-     * Returns the zip file entry for the specified name, or null\n+     * Returns the ZIP file entry for the specified name, or null\n@@ -342,2 +342,2 @@\n-     * @return the zip file entry, or null if not found\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @return the ZIP file entry, or null if not found\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -360,1 +360,1 @@\n-     * zip file entry.\n+     * ZIP file entry.\n@@ -371,1 +371,1 @@\n-     * @param entry the zip file entry\n+     * @param entry the ZIP file entry\n@@ -373,2 +373,2 @@\n-     * zip file entry or null if the zip file entry does not exist\n-     * within the zip file.\n+     * ZIP file entry or null if the ZIP file entry does not exist\n+     * within the ZIP file.\n@@ -377,1 +377,1 @@\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -556,1 +556,1 @@\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -608,1 +608,1 @@\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -627,1 +627,1 @@\n-     * Returns an ordered {@code Stream} over the zip file entry names.\n+     * Returns an ordered {@code Stream} over the ZIP file entry names.\n@@ -632,2 +632,2 @@\n-     * @return an ordered {@code Stream} of entry names in this zip file\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @return an ordered {@code Stream} of entry names in this ZIP file\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -645,1 +645,1 @@\n-     * Returns an ordered {@code Stream} over the zip file entries.\n+     * Returns an ordered {@code Stream} over the ZIP file entries.\n@@ -650,2 +650,2 @@\n-     * @return an ordered {@code Stream} of entries in this zip file\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @return an ordered {@code Stream} of entries in this ZIP file\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -720,1 +720,1 @@\n-     * @throws IllegalStateException if the zip file has been closed\n+     * @throws IllegalStateException if the ZIP file has been closed\n@@ -820,1 +820,1 @@\n-            \/\/ Release zip src\n+            \/\/ Release ZIP src\n@@ -855,1 +855,1 @@\n-            \/\/ and release zip source\n+            \/\/ and release ZIP source\n@@ -881,1 +881,1 @@\n-     * (possibly compressed) zip file entry.\n+     * (possibly compressed) ZIP file entry.\n@@ -894,1 +894,1 @@\n-            \/\/ zip64\n+            \/\/ ZIP64\n@@ -941,1 +941,1 @@\n-         * The Zip file spec explicitly allows the LOC extra data size to\n+         * The ZIP file spec explicitly allows the LOC extra data size to\n@@ -1189,1 +1189,1 @@\n-        private final @Stable ZipCoder zc;   \/\/ zip coder used to decode\/encode\n+        private final @Stable ZipCoder zc;   \/\/ ZIP coder used to decode\/encode\n@@ -1193,1 +1193,1 @@\n-        private RandomAccessFile zfile;      \/\/ zfile of the underlying zip file\n+        private RandomAccessFile zfile;      \/\/ zfile of the underlying ZIP file\n@@ -1196,1 +1196,1 @@\n-        private byte[] comment;              \/\/ zip file comment\n+        private byte[] comment;              \/\/ ZIP file comment\n@@ -1202,1 +1202,1 @@\n-        private final boolean startsWithLoc; \/\/ true, if zip file starts with LOCSIG (usually true)\n+        private final boolean startsWithLoc; \/\/ true, if ZIP file starts with LOCSIG (usually true)\n@@ -1457,1 +1457,1 @@\n-         * A class representing a key to a zip file. A key is based\n+         * A class representing a key to a ZIP file. A key is based\n@@ -1460,1 +1460,1 @@\n-         * file's last modified time to allow for cases where a zip\n+         * file's last modified time to allow for cases where a ZIP\n@@ -1682,1 +1682,1 @@\n-                        \/\/ must check for a zip64 end record; it is always permitted to be present\n+                        \/\/ must check for a ZIP64 end record; it is always permitted to be present\n@@ -1711,1 +1711,1 @@\n-                        } catch (IOException x) {}    \/\/ no zip64 loc\/end\n+                        } catch (IOException x) {}    \/\/ no ZIP64 loc\/end\n@@ -1719,1 +1719,1 @@\n-        \/\/ Reads zip file central directory.\n+        \/\/ Reads ZIP file central directory.\n@@ -1736,1 +1736,1 @@\n-                \/\/ account that there may be a stub prefixed to the zip file.\n+                \/\/ account that there may be a stub prefixed to the ZIP file.\n@@ -1779,1 +1779,1 @@\n-                    \/\/ This will only happen if the zip file has an incorrect\n+                    \/\/ This will only happen if the ZIP file has an incorrect\n@@ -1852,1 +1852,1 @@\n-         * Returns the {@code pos} of the zip cen entry corresponding to the\n+         * Returns the {@code pos} of the ZIP cen entry corresponding to the\n@@ -2040,1 +2040,1 @@\n-         * Will not throw, even if the zip file is corrupt.\n+         * Will not throw, even if the ZIP file is corrupt.\n@@ -2042,1 +2042,1 @@\n-         * @param cen copy of the bytes in a zip file's central directory\n+         * @param cen copy of the bytes in a ZIP file's central directory\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":51,"deletions":51,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n- * The LOC header contains metadata about the Zip file entry. {@code ZipInputStream}\n+ * The LOC header contains metadata about the ZIP file entry. {@code ZipInputStream}\n@@ -582,1 +582,1 @@\n-     * From the zip spec http:\/\/www.pkware.com\/documents\/casestudies\/APPNOTE.TXT\n+     * From the ZIP spec http:\/\/www.pkware.com\/documents\/casestudies\/APPNOTE.TXT\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,4 +52,4 @@\n-     * Whether to use ZIP64 for zip files with more than 64k entries.\n-     * Until ZIP64 support in zip implementations is ubiquitous, this\n-     * system property allows the creation of zip files which can be\n-     * read by legacy zip implementations which tolerate \"incorrect\"\n+     * Whether to use ZIP64 for ZIP files with more than 64k entries.\n+     * Until ZIP64 support in ZIP implementations is ubiquitous, this\n+     * system property allows the creation of ZIP files which can be\n+     * read by legacy ZIP implementations which tolerate \"incorrect\"\n@@ -236,1 +236,1 @@\n-            \/\/ we can't know the compression level of the source zip file\/stream.\n+            \/\/ we can't know the compression level of the source ZIP file\/stream.\n@@ -737,1 +737,1 @@\n-        if (comment != null) {            \/\/ zip file comment\n+        if (comment != null) {            \/\/ ZIP file comment\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipOutputStream.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,1 +255,1 @@\n-    static final int  ENDCOM(byte[] b) { return SH(b, 20);}  \/\/ size of zip file comment\n+    static final int  ENDCOM(byte[] b) { return SH(b, 20);}  \/\/ size of ZIP file comment\n@@ -290,1 +290,1 @@\n-     * Loads zip native library, if not already loaded\n+     * Loads ZIP native library, if not already loaded\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipUtils.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n- *         <a href=\"https:\/\/support.pkware.com\/home\/pkzip\/developer-tools\/appnote\">\n+ *         <a href=\"https:\/\/support.pkware.com\/pkzip\/appnote\">\n@@ -47,1 +47,1 @@\n- *         <a href=\"https:\/\/support.pkware.com\/home\/pkzip\/developer-tools\/appnote\">\n+ *         <a href=\"https:\/\/support.pkware.com\/pkzip\/appnote\">\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/package-info.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * Utility class for zipfile name and comment decoding and encoding\n+ * Utility class for ZIP file entry name and comment decoding and encoding\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipCoder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,2 +36,2 @@\n- * Provides the implementation of the Zip file system provider.\n- * The Zip file system provider treats the contents of a Zip or JAR file as a file system.\n+ * Provides the implementation of the ZIP file system provider.\n+ * The ZIP file system provider treats the contents of a ZIP or JAR file as a file system.\n@@ -39,1 +39,1 @@\n- * <h2>Accessing a Zip File System<\/h2>\n+ * <h2>Accessing a ZIP File System<\/h2>\n@@ -44,2 +44,2 @@\n- *   <li>Create a Zip file system<\/li>\n- *   <li>Open an existing file as a Zip file system<\/li>\n+ *   <li>Create a ZIP file system<\/li>\n+ *   <li>Open an existing file as a ZIP file system<\/li>\n@@ -48,1 +48,1 @@\n- * The Zip file system provider does not support opening an existing Zip file\n+ * The ZIP file system provider does not support opening an existing ZIP file\n@@ -51,1 +51,1 @@\n- * <h2>URI Scheme Used to Identify the Zip File System<\/h2>\n+ * <h2>URI Scheme Used to Identify the ZIP File System<\/h2>\n@@ -57,1 +57,1 @@\n- * A Zip file system supports a file attribute {@link FileAttributeView view}\n+ * A ZIP file system supports a file attribute {@link FileAttributeView view}\n@@ -79,2 +79,2 @@\n- * stored for entries in a Zip file. The value of the attribute is {@code null}\n- * for entries that do not have access permissions. Zip file systems do not\n+ * stored for entries in a ZIP file. The value of the attribute is {@code null}\n+ * for entries that do not have access permissions. ZIP file systems do not\n@@ -95,1 +95,1 @@\n- * <p> In addition to the \"{@code zip}\" view, a Zip file system optionally supports\n+ * <p> In addition to the \"{@code zip}\" view, a ZIP file system optionally supports\n@@ -100,1 +100,1 @@\n- * \"{@code posix}\" view is only supported when the Zip file system is created with\n+ * \"{@code posix}\" view is only supported when the ZIP file system is created with\n@@ -113,1 +113,1 @@\n- * not stored in the zip file. The \"{@code defaultOwner}\" and \"{@code defaultGroup}\"\n+ * not stored in the ZIP file. The \"{@code defaultOwner}\" and \"{@code defaultGroup}\"\n@@ -116,2 +116,2 @@\n- * defaults to the owner of the zip file, and the group owner defaults to the\n- * zip file's group owner (or the file owner on platforms that don't support a\n+ * defaults to the owner of the ZIP file, and the group owner defaults to the\n+ * ZIP file's group owner (or the file owner on platforms that don't support a\n@@ -122,1 +122,1 @@\n- * access permissions stored in the Zip file. The default set of permissions\n+ * access permissions stored in the ZIP file. The default set of permissions\n@@ -132,1 +132,1 @@\n- * <h2>Zip File System Properties<\/h2>\n+ * <h2>ZIP File System Properties<\/h2>\n@@ -139,1 +139,1 @@\n- *     a new Zip file system\n+ *     a new ZIP file system\n@@ -156,2 +156,2 @@\n- *       If the value is {@code true}, the Zip file system provider\n- *       creates a new Zip or JAR file if it does not exist.\n+ *       If the value is {@code true}, the ZIP file system provider\n+ *       creates a new ZIP or JAR file if it does not exist.\n@@ -166,1 +166,1 @@\n- *       names of the entries in the Zip or JAR file.\n+ *       names of the entries in the ZIP or JAR file.\n@@ -174,1 +174,1 @@\n- *       If the value is {@code true}, the Zip file system will support\n+ *       If the value is {@code true}, the ZIP file system will support\n@@ -184,1 +184,1 @@\n- *       Override the default owner for entries in the Zip file system.<br>\n+ *       Override the default owner for entries in the ZIP file system.<br>\n@@ -194,1 +194,1 @@\n- *       Override the default group for entries in the Zip file system.<br>\n+ *       Override the default group for entries in the ZIP file system.<br>\n@@ -204,1 +204,1 @@\n- *       Override the default Set of permissions for entries in the Zip file system.<br>\n+ *       Override the default Set of permissions for entries in the ZIP file system.<br>\n@@ -215,1 +215,1 @@\n- *       to the Zip file system.\n+ *       to the ZIP file system.\n@@ -218,2 +218,2 @@\n- *               If the value is {@code \"STORED\"}, the Zip file system provider will\n- *               not compress entries when writing to the Zip file system.\n+ *               If the value is {@code \"STORED\"}, the ZIP file system provider will\n+ *               not compress entries when writing to the ZIP file system.\n@@ -223,2 +223,2 @@\n- *               the Zip file system provider will use data compression when\n- *               writing entries to the Zip file system.\n+ *               the ZIP file system provider will use data compression when\n+ *               writing entries to the ZIP file system.\n@@ -273,1 +273,1 @@\n- * Construct a new Zip file system that is identified by a URI.  If the Zip file does not exist,\n+ * Construct a new ZIP file system that is identified by a URI.  If the ZIP file does not exist,\n@@ -284,1 +284,1 @@\n- * Construct a new Zip file system that is identified by specifying a path\n+ * Construct a new ZIP file system that is identified by specifying a path\n","filename":"src\/jdk.zipfs\/share\/classes\/module-info.java","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"}]}