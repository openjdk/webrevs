{"files":[{"patch":"@@ -58,1 +58,1 @@\n-static jboolean jstring_to_cstring(JNIEnv* env, jstring jstr, char* cstr, int len);\n+static jboolean jstring_to_cstring(JNIEnv* env, jstring jstr, char* cstr, size_t cstr_buf_size);\n@@ -78,3 +78,3 @@\n-   char cmd[MAX_CMD_LENGTH];                \/* \"load\", \"dump\", ...      *\/\n-   char arg[MAX_ARGS][MAX_ARG_LENGTH];      \/* arguments to command     *\/\n-   char pipename[MAX_PIPE_NAME_LENGTH];\n+   char cmd[MAX_CMD_LENGTH + 1];            \/* \"load\", \"dump\", ...      *\/\n+   char arg[MAX_ARGS][MAX_ARG_LENGTH + 1];  \/* arguments to command     *\/\n+   char pipename[MAX_PIPE_NAME_LENGTH + 1];\n@@ -412,1 +412,5 @@\n-    jstring_to_cstring(env, cmd, data.cmd, MAX_CMD_LENGTH);\n+    if (!jstring_to_cstring(env, cmd, data.cmd, sizeof(data.cmd))) {\n+        JNU_ThrowByName(env, \"com\/sun\/tools\/attach\/AttachOperationFailedException\",\n+                        \"command is too long\");\n+        return;\n+    }\n@@ -425,1 +429,1 @@\n-                if (!jstring_to_cstring(env, obj, data.arg[i], MAX_ARG_LENGTH)) {\n+                if (!jstring_to_cstring(env, obj, data.arg[i], sizeof(data.arg[i]))) {\n@@ -439,1 +443,5 @@\n-    jstring_to_cstring(env, pipename, data.pipename, MAX_PIPE_NAME_LENGTH);\n+    if (!jstring_to_cstring(env, pipename, data.pipename, sizeof(data.pipename))) {\n+        JNU_ThrowByName(env, \"com\/sun\/tools\/attach\/AttachOperationFailedException\",\n+                        \"pipe name is too long\");\n+        return;\n+    }\n@@ -622,1 +630,1 @@\n-static jboolean jstring_to_cstring(JNIEnv* env, jstring jstr, char* cstr, int len) {\n+static jboolean jstring_to_cstring(JNIEnv* env, jstring jstr, char* cstr, size_t cstr_buf_size) {\n@@ -634,1 +642,1 @@\n-        if (strlen(str) >= len) {\n+        if (strlen(str) >= cstr_buf_size) {\n@@ -638,2 +646,2 @@\n-        strncpy(cstr, str, len);\n-        cstr[len-1] = '\\0';\n+        strncpy(cstr, str, cstr_buf_size);\n+        cstr[cstr_buf_size - 1] = '\\0';\n","filename":"src\/jdk.attach\/windows\/native\/libattach\/VirtualMachineImpl.c","additions":19,"deletions":11,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -45,0 +45,3 @@\n+    \/\/ current restriction: max arg size is 1024\n+    private static int MAX_ARG_SIZE = 1024;\n+\n@@ -50,1 +53,4 @@\n-            test(app).run();\n+            \/\/ sanity\n+            test(app)\n+                .mustSucceed()\n+                .run();\n@@ -53,1 +59,2 @@\n-                .withLongValue()\n+                .valueLength(MAX_ARG_SIZE)\n+                .mustSucceed()\n@@ -57,1 +64,6 @@\n-                .withSuperLongValue()\n+                .valueLength(MAX_ARG_SIZE + 1)\n+                .run();\n+\n+            \/\/ more than max args (3) with MAX_ARG_SIZE\n+            test(app)\n+                .valueLength(3 * MAX_ARG_SIZE + 1)\n@@ -63,0 +75,1 @@\n+    }\n@@ -64,0 +77,2 @@\n+    private static Test test(LingeredApp app) {\n+        return new Test(app);\n@@ -72,0 +87,1 @@\n+        private boolean setFlagMustSucceed = false;\n@@ -77,3 +93,2 @@\n-        \/\/ Value length exceeds 1K.\n-        Test withLongValue() {\n-            flagValue = generateValue(1024 + 1);\n+        Test valueLength(int len) {\n+            flagValue = generateValue(len);\n@@ -83,3 +98,2 @@\n-        \/\/ Value length exceeds 3K (1K * 3 args).\n-        Test withSuperLongValue() {\n-            flagValue = generateValue(3 * 1024 + 1);\n+        Test mustSucceed() {\n+            setFlagMustSucceed = true;\n@@ -91,0 +105,1 @@\n+            System.out.println(\"Arg size = \" + flagValue.length());\n@@ -127,0 +142,3 @@\n+                if (setFlagMustSucceed) {\n+                    throw ex;\n+                }\n@@ -157,1 +175,1 @@\n-            return \"X\" + \"A\".repeat(len) + \"X\";\n+            return \"X\" + \"A\".repeat(len - 2) + \"X\";\n@@ -161,4 +179,0 @@\n-    private static Test test(LingeredApp app) {\n-        return new Test(app);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/serviceability\/attach\/LongArgTest.java","additions":28,"deletions":14,"binary":false,"changes":42,"status":"modified"}]}