{"files":[{"patch":"@@ -644,8 +644,0 @@\n-\/\/ the fancy casts are a hopefully portable way\n-\/\/ to do unsigned 32 to 64 bit type conversion\n-inline void set_low (jlong* value, jint low )    { *value &= (jlong)0xffffffff << 32;\n-                                                   *value |= (jlong)(julong)(juint)low; }\n-\n-inline void set_high(jlong* value, jint high)    { *value &= (jlong)(julong)(juint)0xffffffff;\n-                                                   *value |= (jlong)high       << 32; }\n-\n@@ -653,4 +645,4 @@\n-  jlong result = 0; \/\/ initialization to avoid warning\n-  set_high(&result, h);\n-  set_low(&result,  l);\n-  return result;\n+  \/\/ First cast jint values to juint, so cast to julong will zero-extend.\n+  julong high = (julong)(juint)h << 32;\n+  julong low = (julong)(juint)l;\n+  return (jlong)(high | low);\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"}]}