{"files":[{"patch":"@@ -218,1 +218,1 @@\n-  HeapWord* result = par_allocate_during_gc(dest, word_size, word_size, &temp, node_index);\n+  HeapWord* result = par_allocate_during_gc(dest, word_size, word_size, node_index, &temp);\n@@ -228,2 +228,2 @@\n-                                              size_t* actual_word_size,\n-                                              uint node_index) {\n+                                              uint node_index,\n+                                              size_t* actual_word_size) {\n@@ -232,1 +232,1 @@\n-      return survivor_attempt_allocation(min_word_size, desired_word_size, actual_word_size, node_index);\n+      return survivor_attempt_allocation(min_word_size, desired_word_size, node_index, actual_word_size);\n@@ -243,2 +243,2 @@\n-                                                   size_t* actual_word_size,\n-                                                   uint node_index) {\n+                                                   uint node_index,\n+                                                   size_t* actual_word_size) {\n@@ -402,2 +402,2 @@\n-                                                       &actual_plab_size,\n-                                                       node_index);\n+                                                       node_index,\n+                                                       &actual_plab_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -83,2 +83,2 @@\n-                                        size_t* actual_word_size,\n-                                        uint node_index);\n+                                        uint node_index,\n+                                        size_t* actual_word_size);\n@@ -118,2 +118,2 @@\n-                                      size_t* actual_word_size,\n-                                      uint node_index);\n+                                      uint node_index,\n+                                      size_t* actual_word_size);\n@@ -139,2 +139,2 @@\n-                                   size_t* actual_word_size,\n-                                   uint node_index);\n+                                   uint node_index,\n+                                   size_t* actual_word_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -54,2 +54,2 @@\n-                                                 size_t* actual_word_size,\n-                                                 uint node_index) {\n+                                                 uint node_index,\n+                                                 size_t* actual_word_size) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -456,1 +456,1 @@\n-    result = _allocator->attempt_allocation(word_size, word_size, &dummy, node_index);\n+    result = _allocator->attempt_allocation(word_size, word_size, node_index, &dummy);\n@@ -593,1 +593,1 @@\n-  HeapWord* result = _allocator->attempt_allocation(min_word_size, desired_word_size, actual_word_size, node_index);\n+  HeapWord* result = _allocator->attempt_allocation(min_word_size, desired_word_size, node_index, actual_word_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}