{"files":[{"patch":"@@ -215,2 +215,2 @@\n-                                              size_t word_size,\n-                                              uint node_index) {\n+                                              uint node_index,\n+                                              size_t word_size) {\n@@ -218,1 +218,1 @@\n-  HeapWord* result = par_allocate_during_gc(dest, word_size, word_size, node_index, &temp);\n+  HeapWord* result = par_allocate_during_gc(dest, node_index, word_size, word_size, &temp);\n@@ -226,0 +226,1 @@\n+                                              uint node_index,\n@@ -228,1 +229,0 @@\n-                                              uint node_index,\n@@ -232,1 +232,1 @@\n-      return survivor_attempt_allocation(min_word_size, desired_word_size, node_index, actual_word_size);\n+      return survivor_attempt_allocation(node_index, min_word_size, desired_word_size, actual_word_size);\n@@ -241,1 +241,2 @@\n-HeapWord* G1Allocator::survivor_attempt_allocation(size_t min_word_size,\n+HeapWord* G1Allocator::survivor_attempt_allocation(uint node_index,\n+                                                   size_t min_word_size,\n@@ -243,1 +244,0 @@\n-                                                   uint node_index,\n@@ -400,0 +400,1 @@\n+                                                       node_index,\n@@ -402,1 +403,0 @@\n-                                                       node_index,\n@@ -422,1 +422,1 @@\n-  HeapWord* result = _allocator->par_allocate_during_gc(dest, word_sz, node_index);\n+  HeapWord* result = _allocator->par_allocate_during_gc(dest, node_index, word_sz);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -81,1 +81,2 @@\n-  HeapWord* survivor_attempt_allocation(size_t min_word_size,\n+  HeapWord* survivor_attempt_allocation(uint node_index,\n+                                        size_t min_word_size,\n@@ -83,1 +84,0 @@\n-                                        uint node_index,\n@@ -116,1 +116,2 @@\n-  inline HeapWord* attempt_allocation(size_t min_word_size,\n+  inline HeapWord* attempt_allocation(uint node_index,\n+                                      size_t min_word_size,\n@@ -118,1 +119,0 @@\n-                                      uint node_index,\n@@ -123,1 +123,1 @@\n-  inline HeapWord* attempt_allocation_locked(size_t word_size, uint node_index);\n+  inline HeapWord* attempt_allocation_locked(uint node_index, size_t word_size);\n@@ -133,2 +133,3 @@\n-                                   size_t word_size,\n-                                   uint node_index);\n+                                   uint node_index,\n+                                   size_t word_size\n+                                   );\n@@ -137,0 +138,1 @@\n+                                   uint node_index,\n@@ -139,1 +141,0 @@\n-                                   uint node_index,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -52,1 +52,2 @@\n-inline HeapWord* G1Allocator::attempt_allocation(size_t min_word_size,\n+inline HeapWord* G1Allocator::attempt_allocation(uint node_index,\n+                                                 size_t min_word_size,\n@@ -54,1 +55,0 @@\n-                                                 uint node_index,\n@@ -64,1 +64,1 @@\n-inline HeapWord* G1Allocator::attempt_allocation_locked(size_t word_size, uint node_index) {\n+inline HeapWord* G1Allocator::attempt_allocation_locked(uint node_index, size_t word_size) {\n@@ -66,0 +66,1 @@\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.inline.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -405,1 +405,1 @@\n-HeapWord* G1CollectedHeap::attempt_allocation_slow(size_t word_size, uint node_index) {\n+HeapWord* G1CollectedHeap::attempt_allocation_slow(uint node_index, size_t word_size) {\n@@ -429,1 +429,1 @@\n-      result = _allocator->attempt_allocation_locked(word_size, node_index);\n+      result = _allocator->attempt_allocation_locked(node_index, word_size);\n@@ -456,1 +456,1 @@\n-    result = _allocator->attempt_allocation(word_size, word_size, node_index, &dummy);\n+    result = _allocator->attempt_allocation(node_index, word_size, word_size, &dummy);\n@@ -593,1 +593,1 @@\n-  HeapWord* result = _allocator->attempt_allocation(min_word_size, desired_word_size, node_index, actual_word_size);\n+  HeapWord* result = _allocator->attempt_allocation(node_index, min_word_size, desired_word_size, actual_word_size);\n@@ -597,1 +597,1 @@\n-    result = attempt_allocation_slow(desired_word_size, node_index);\n+    result = attempt_allocation_slow(node_index, desired_word_size);\n@@ -708,1 +708,1 @@\n-    return _allocator->attempt_allocation_locked(word_size, node_index);\n+    return _allocator->attempt_allocation_locked(node_index, word_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -453,1 +453,1 @@\n-  HeapWord* attempt_allocation_slow(size_t word_size, uint node_index);\n+  HeapWord* attempt_allocation_slow(uint node_index, size_t word_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}