{"files":[{"patch":"@@ -121,1 +121,1 @@\n-        throw new UnsupportedOperationException(\"multi-part not supported\");\n+        throw new UnsupportedOperationException(\"multipart not supported\");\n@@ -127,1 +127,1 @@\n-        throw new UnsupportedOperationException(\"multi-part not supported\");\n+        throw new UnsupportedOperationException(\"multipart not supported\");\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/AESKeyWrap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-        throw new UnsupportedOperationException(\"multi-part not supported\");\n+        throw new UnsupportedOperationException(\"multipart not supported\");\n@@ -165,1 +165,1 @@\n-        throw new UnsupportedOperationException(\"multi-part not supported\");\n+        throw new UnsupportedOperationException(\"multipart not supported\");\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/AESKeyWrapPadded.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -694,1 +694,1 @@\n-     * @return the length in bytes of the data written into the {@code out}\n+     * @return the length in bytes of the data written into the {@code output}\n@@ -697,1 +697,1 @@\n-     * @throws ShortBufferException if the buffer {@code out} does not have\n+     * @throws ShortBufferException if the buffer {@code output} does not have\n@@ -788,0 +788,3 @@\n+     * @throws ShortBufferException if the buffer {@code output} does not have\n+     *      enough space to hold the resulting data.\n+     *\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/ChaCha20Cipher.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -874,0 +874,1 @@\n+        int totalLen = len;\n@@ -877,2 +878,2 @@\n-            if (len < diffBlocksize) {\n-                paddingLen = diffBlocksize - len;\n+            if (totalLen < diffBlocksize) {\n+                paddingLen = diffBlocksize - totalLen;\n@@ -881,1 +882,1 @@\n-                    ((len - diffBlocksize) % blockSize);\n+                    ((totalLen - diffBlocksize) % blockSize);\n@@ -884,1 +885,1 @@\n-            paddingLen = padding.padLength(len);\n+            paddingLen = padding.padLength(totalLen);\n@@ -932,1 +933,1 @@\n-        throws ShortBufferException, BadPaddingException,\n+        throws BadPaddingException,\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/CipherCore.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -408,2 +408,1 @@\n-            return new SecretKeySpec(secret, 0, keysize,\n-                                                   \"Blowfish\");\n+            return new SecretKeySpec(secret, 0, keysize, \"Blowfish\");\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHKeyAgreement.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -213,3 +213,0 @@\n-        String kdfAlgo;\n-        String cipherAlgo;\n-\n@@ -234,1 +231,1 @@\n-        kdfAlgo = parseKDF(kdf);\n+        String kdfAlgo = parseKDF(kdf);\n@@ -240,1 +237,1 @@\n-        cipherAlgo = parseES(pBES2_params.data.getDerValue());\n+        String cipherAlgo = parseES(pBES2_params.data.getDerValue());\n@@ -242,2 +239,1 @@\n-        this.pbes2AlgorithmName = \"PBEWith\" +\n-                kdfAlgo + \"And\" + cipherAlgo;\n+        this.pbes2AlgorithmName = \"PBEWith\" + kdfAlgo + \"And\" + cipherAlgo;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBES2Parameters.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -224,1 +224,2 @@\n-            sb.append(LINE_SEP).append(\"version:\").append(LINE_SEP).append(version).append(LINE_SEP);\n+            sb.append(LINE_SEP + \"version:\" + LINE_SEP\n+                + version + LINE_SEP);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/RC2Parameters.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -276,1 +276,1 @@\n-        if (Objects.equals(paddingType, PAD_NONE)) {\n+        if (paddingType == PAD_NONE) {\n@@ -283,1 +283,1 @@\n-        } else if (Objects.equals(paddingType, PAD_PKCS1)) {\n+        } else if (paddingType == PAD_PKCS1) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/RSACipher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}