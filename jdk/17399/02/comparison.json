{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,0 +117,3 @@\n+      # Add debug prefix map gcc system include paths, as they cause\n+      # non-deterministic debug paths depending on gcc path location.\n+      DEBUG_PREFIX_MAP_GCC_INCLUDE_PATHS\n@@ -161,0 +164,43 @@\n+# gcc will embed the full system include paths in the debug info\n+# resulting in non-deterministic debug symbol files and thus\n+# non-reproducible native libraries if gcc includes are located\n+# in different paths.\n+# Add -fdebug-prefix-map'ings for root and gcc include paths,\n+# pointing to a common set of folders so that the binaries are deterministic:\n+#  root include : \/usr\/include\n+#  gcc include  : \/usr\/local\/gcc_include\n+#  g++ include  : \/usr\/local\/gxx_include\n+AC_DEFUN([DEBUG_PREFIX_MAP_GCC_INCLUDE_PATHS],\n+[\n+    # Determine gcc system include paths.\n+    # Assume default roots to start with:\n+    GCC_ROOT_INCLUDE=\"\/usr\/include\"\n+\n+    # Determine is sysroot or devkit specified?\n+    if test \"x$SYSROOT\" != \"x\"; then\n+      GCC_ROOT_INCLUDE=\"${SYSROOT%\/}\/usr\/include\"\n+    fi\n+\n+    # Add root include mapping => \/usr\/include\n+    GCC_INCLUDE_DEBUG_MAP_FLAGS=\"-fdebug-prefix-map=${GCC_ROOT_INCLUDE}\/=\/usr\/include\/\"\n+\n+    # Add gcc system include mapping => \/usr\/local\/gcc_include\n+    #   Find location of stddef.h using build C compiler\n+    GCC_SYSTEM_INCLUDE=`$ECHO \"#include <stddef.h>\" | $CC $SYSROOT_CFLAGS -v -E - 2>&1 | $GREP stddef | $TAIL -1 | $TR -s \" \" | $CUT -d'\"' -f2`\n+    if test \"x$GCC_SYSTEM_INCLUDE\" != \"x\"; then\n+      GCC_SYSTEM_INCLUDE=`$DIRNAME $GCC_SYSTEM_INCLUDE`\n+      GCC_INCLUDE_DEBUG_MAP_FLAGS=\"$GCC_INCLUDE_DEBUG_MAP_FLAGS -fdebug-prefix-map=${GCC_SYSTEM_INCLUDE}\/=\/usr\/local\/gcc_include\/\"\n+    fi\n+\n+    # Add g++ system include mapping => \/usr\/local\/gxx_include\n+    #   Find location of cstddef using build C++ compiler\n+    GXX_SYSTEM_INCLUDE=`$ECHO \"#include <cstddef>\" | $CXX $SYSROOT_CFLAGS -v -E -x c++ - 2>&1 | $GREP cstddef | $TAIL -1 | $TR -s \" \" | $CUT -d'\"' -f2`\n+    if test \"x$GXX_SYSTEM_INCLUDE\" != \"x\"; then\n+      GXX_SYSTEM_INCLUDE=`$DIRNAME $GXX_SYSTEM_INCLUDE`\n+      GCC_INCLUDE_DEBUG_MAP_FLAGS=\"$GCC_INCLUDE_DEBUG_MAP_FLAGS -fdebug-prefix-map=${GXX_SYSTEM_INCLUDE}\/=\/usr\/local\/gxx_include\/\"\n+    fi\n+\n+    # Add to debug prefix cflags\n+    DEBUG_PREFIX_CFLAGS=\"$DEBUG_PREFIX_CFLAGS $GCC_INCLUDE_DEBUG_MAP_FLAGS\"\n+])\n+\n","filename":"make\/autoconf\/flags-cflags.m4","additions":47,"deletions":1,"binary":false,"changes":48,"status":"modified"}]}