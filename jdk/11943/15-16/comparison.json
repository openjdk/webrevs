{"files":[{"patch":"@@ -30,1 +30,0 @@\n-import java.util.HashMap;\n@@ -32,1 +31,0 @@\n-import java.util.Map;\n@@ -39,1 +37,1 @@\n-    private static final Properties KNOWN_ENDIANNESS;\n+    private static final Properties PLATFORM_PROPERTIES;\n@@ -50,1 +48,1 @@\n-        KNOWN_ENDIANNESS = p;\n+        PLATFORM_PROPERTIES = p;\n@@ -101,1 +99,1 @@\n-        String v = KNOWN_ENDIANNESS.getProperty(platformString + ENDIANNESS_KEY_SUFFIX);\n+        String v = PLATFORM_PROPERTIES.getProperty(platformString + ENDIANNESS_KEY_SUFFIX);\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/Platform.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-           \/\/ copy over the java.base and java.logging module file to a temporary directory\n+           \/\/ copy over the packaged modules java.base and java.logging to a temporary directory\n@@ -100,1 +100,1 @@\n-           copyModuleFiles(jdkRoot, modsPath, new String[] {\"java.base\", \"java.logging\"});\n+           copyPackagedModules(jdkRoot, modsPath, new String[] {\"java.base\", \"java.logging\"});\n@@ -125,1 +125,1 @@\n-    private static void copyModuleFiles(Path jdkRoot, Path targetDir, String[] modules)\n+    private static void copyPackagedModules(Path jdkRoot, Path targetDir, String[] modules)\n@@ -134,4 +134,0 @@\n-            if (!Files.exists(copy)) {\n-                throw new AssertionError(\"Could not copy '\" + module\n-                        + \"' module file to directory: \" + targetDir);\n-            }\n","filename":"test\/jdk\/tools\/jlink\/plugins\/CDSPluginTest.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"}]}