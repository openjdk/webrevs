{"files":[{"patch":"@@ -48,3 +48,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedActionException;\n-import java.security.PrivilegedExceptionAction;\n@@ -889,13 +886,4 @@\n-            boolean ret;\n-            try {\n-                @SuppressWarnings(\"removal\")\n-                var unused = ret = AccessController.doPrivileged(\n-                        \/\/ check if the current platform's \"jmods\" directory is the parent of\n-                        \/\/ the \"java.base\" module file used to create the image\n-                        (PrivilegedExceptionAction<Boolean>) () -> Files.isSameFile(javaBasePath,\n-                                currentPlatformJmods.resolve(Path.of(\"java.base.jmod\"))));\n-            } catch (PrivilegedActionException e) {\n-                \/\/ Files.isSameFile() is only expected to throw an IOException\n-                throw (IOException) e.getCause();\n-            }\n-            return ret;\n+            \/\/ check if the current platform's \"jmods\" directory is the parent of\n+            \/\/ the \"java.base\" module file used to create the image\n+            return Files.isSameFile(javaBasePath,\n+                    currentPlatformJmods.resolve(Path.of(\"java.base.jmod\")));\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/JlinkTask.java","additions":4,"deletions":16,"binary":false,"changes":20,"status":"modified"}]}