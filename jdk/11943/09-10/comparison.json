{"files":[{"patch":"@@ -546,5 +546,5 @@\n-                                                     Path retainModulesPath,\n-                                                     boolean ignoreSigning,\n-                                                     boolean bindService,\n-                                                     boolean verbose,\n-                                                     PrintWriter log)\n+                                                   Path retainModulesPath,\n+                                                   boolean ignoreSigning,\n+                                                   boolean bindService,\n+                                                   boolean verbose,\n+                                                   PrintWriter log)\n@@ -822,1 +822,0 @@\n-                this.targetPlatform = Platform.runtime();\n@@ -824,0 +823,12 @@\n+                String targetPlatformVal = readJavaBaseTargetPlatform(cf);\n+                this.targetPlatform = Platform.parsePlatform(targetPlatformVal);\n+                \/\/ explicit endianness specified, verify it matches the target java.base\n+                \/\/ platform's endianness\n+                ByteOrder targetEndianness = this.targetPlatform.getNativeByteOrder();\n+                if (targetEndianness != null && (this.order != targetEndianness)) {\n+                    \/\/ explicitly specified endianness doesn't match the determined endianness\n+                    \/\/ of the target platform\n+                    throw new IOException(\n+                            taskHelper.getMessage(\"err.target.endianness.mismatch\", order,\n+                                    targetPlatformVal));\n+                }\n@@ -838,13 +849,1 @@\n-                    Optional<ResolvedModule> javaBase = cf.findModule(\"java.base\");\n-                    assert javaBase.isPresent() : \"java.base module is missing\";\n-                    ModuleReference ref = javaBase.get().reference();\n-                    String targetPlatformVal = null;\n-                    if (ref instanceof ModuleReferenceImpl modRefImpl\n-                            && modRefImpl.moduleTarget() != null) {\n-                        targetPlatformVal = modRefImpl.moduleTarget().targetPlatform();\n-                    }\n-                    if (targetPlatformVal == null) {\n-                        \/\/ could not determine target platform\n-                        throw new IOException(\n-                                taskHelper.getMessage(\"err.cannot.determine.target.platform\"));\n-                    }\n+                    String targetPlatformVal = readJavaBaseTargetPlatform(cf);\n@@ -854,1 +853,0 @@\n-                        \/\/ unsupported target platform\n@@ -856,1 +854,1 @@\n-                                taskHelper.getMessage(\"err.unsupported.target.platform\",\n+                                taskHelper.getMessage(\"err.unknown.target.endianness\",\n@@ -901,0 +899,17 @@\n+        \/\/ returns the targetPlatform value from the ModuleTarget attribute of the java.base module.\n+        \/\/ throws IOException if the targetPlatform cannot be determined.\n+        private static String readJavaBaseTargetPlatform(Configuration cf) throws IOException {\n+            Optional<ResolvedModule> javaBase = cf.findModule(\"java.base\");\n+            assert javaBase.isPresent() : \"java.base module is missing\";\n+            ModuleReference ref = javaBase.get().reference();\n+            if (ref instanceof ModuleReferenceImpl modRefImpl\n+                    && modRefImpl.moduleTarget() != null) {\n+                return modRefImpl.moduleTarget().targetPlatform();\n+            }\n+            \/\/ could not determine target platform\n+            throw new IOException(\n+                    taskHelper.getMessage(\"err.cannot.determine.target.platform\",\n+                            ref.location().map(URI::toString)\n+                                    .orElse(\"java.base module\")));\n+        }\n+\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/JlinkTask.java","additions":36,"deletions":21,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -82,2 +82,0 @@\n-        LOONGARCH64,\n-        PPC,\n@@ -86,3 +84,0 @@\n-        RISCV32,\n-        RISCV64,\n-        s390,\n@@ -90,2 +85,0 @@\n-        SPARC,\n-        SPARCv9,\n@@ -122,1 +115,1 @@\n-     * @return true is it's a 64-bit platform\n+     * @return true if it's a 64-bit platform\n@@ -125,2 +118,5 @@\n-        return (arch() == Platform.Architecture.x64 ||\n-                arch() == Platform.Architecture.AARCH64);\n+        return switch (arch) {\n+            case x64, AARCH64, PPC64, PPC64LE, s390x -> true;\n+            case ARM -> true; \/\/ the ARM we support is 64 bit\n+            default -> false;\n+        };\n@@ -183,2 +179,0 @@\n-            case \"loongarch64\"     -> Architecture.LOONGARCH64;\n-            case \"ppc\"             -> Architecture.PPC;\n@@ -187,3 +181,0 @@\n-            case \"riscv32\"         -> Architecture.RISCV32;\n-            case \"riscv64\"         -> Architecture.RISCV64;\n-            case \"s390\"            -> Architecture.s390;\n@@ -191,2 +182,0 @@\n-            case \"sparc\"           -> Architecture.SPARC;\n-            case \"sparcv9\"         -> Architecture.SPARCv9;\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/Platform.java","additions":6,"deletions":17,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -151,2 +151,4 @@\n-err.cannot.determine.target.platform=cannot determine target platform for image generation\n-err.unsupported.target.platform=image generation for target platform {0} is not supported\n+err.cannot.determine.target.platform=cannot determine target platform from {0}\n+err.target.endianness.mismatch=specified --endian {0} does not match endianness of target \\\n+platform {1}\n+err.unknown.target.endianness=Unknown native byte order for target platform {0}\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/resources\/jlink.properties","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}