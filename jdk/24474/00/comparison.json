{"files":[{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4190516\n+ * @summary JInternalFrame should be maximized when Desktop resized\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4190516\n+ *\/\n+\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4190516 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Try to resize frame \"bug4190516 Frame\".\n+        If the internal frame remains maximized\n+        inside this frame then test passes, else test fails.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4190516 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(25)\n+                .testUI(bug4190516::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame fr = new JFrame(\"bug4190516 Frame\");\n+        JDesktopPane jdp = new JDesktopPane();\n+        fr.getContentPane().add(jdp);\n+\n+        JInternalFrame  jif = new JInternalFrame(\"Title\", true, true, true, true);\n+        jdp.add(jif);\n+        jif.setSize(150, 150);\n+        jif.setVisible(true);\n+\n+        fr.setSize(300, 200);\n+        try {\n+            jif.setMaximum(true);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        SwingUtilities.updateComponentTreeUI(fr);\n+        return fr;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/bug4190516.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,123 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4242045\n+ * @requires (os.family == \"windows\")\n+ * @summary JInternalFrame titlepane icons should be restored after attribute change\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4242045\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.event.ActionEvent;\n+\n+import javax.swing.JButton;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+public class bug4242045 {\n+\n+    private static JFrame frame;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Add and remove iconify\/maximize\/close buttons using the buttons\n+        \"Iconifiable\", \"Maximizable\", \"Closable\" under different LookAndFeels.\n+        If they appears and disappears correctly then test passes. If any\n+        button not appear or disappear as expected or appear with incorrect\n+        placement then test fails.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4242045 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug4242045::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+     private static void setLF(ActionEvent e) {\n+        try {\n+            UIManager.setLookAndFeel(((JButton)e.getSource()).getActionCommand());\n+            SwingUtilities.updateComponentTreeUI(frame);\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | UnsupportedLookAndFeelException\n+                 | IllegalAccessException ex) {\n+             throw new RuntimeException(ex);\n+        }\n+    }\n+\n+    private static JFrame createTestUI() {\n+\n+        frame = new JFrame(\"bug4242045\");\n+        JDesktopPane jdp = new JDesktopPane();\n+        JInternalFrame jif = new JInternalFrame(\"Test\", true);\n+        frame.add(jdp);\n+\n+        jdp.add(jif);\n+        jif.setSize(150, 150);\n+        jif.setVisible(true);\n+\n+        JPanel p = new JPanel();\n+\n+        JButton metal = new JButton(\"Metal\");\n+        metal.setActionCommand(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        metal.addActionListener((ActionEvent e) -> setLF(e));\n+        p.add(metal);\n+\n+        JButton windows = new JButton(\"Windows\");\n+        windows.setActionCommand(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+        windows.addActionListener((ActionEvent e) -> setLF(e));\n+        p.add(windows);\n+\n+        JButton motif = new JButton(\"Motif\");\n+        motif.setActionCommand(\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+        motif.addActionListener((ActionEvent e) -> setLF(e));\n+        p.add(motif);\n+\n+        JButton clo = new JButton(\"Closable\");\n+        clo.addActionListener(e -> jif.setClosable(!jif.isClosable()));\n+        p.add(clo);\n+\n+        JButton ico = new JButton(\"Iconifiable\");\n+        ico.addActionListener(e -> jif.setIconifiable(!jif.isIconifiable()));\n+        p.add(ico);\n+\n+        JButton max = new JButton(\"Maximizable\");\n+        max.addActionListener(e -> jif.setMaximizable(!jif.isMaximizable()));\n+        p.add(max);\n+\n+        frame.add(p, BorderLayout.SOUTH);\n+        frame.setSize(650, 250);\n+        return frame;\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/bug4242045.java","additions":123,"deletions":0,"binary":false,"changes":123,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4232716\n+ * @key headful\n+ * @summary Tests if <input type=\"text\" size=\"5\"> creates a maximized JTextField\n+ * @run main bug4232716\n+ *\/\n+\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Robot;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.JTextField;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4232716 {\n+\n+    private static JFrame frame;\n+    private static JEditorPane e;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"bug4232716\");\n+                String html =\"<html> <head> <title> Test <\/title> <\/head> \" +\n+                             \"<body> <form> <input type=\\\"text\\\" size=\\\"5\\\"> \" +\n+                             \"<\/form> <\/body> <\/html>\";\n+                e = new JEditorPane(\"text\/html\", html);\n+                e.setEditable(false);\n+                frame.getContentPane().add(e);\n+                frame.setSize(400, 300);\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            Container c = (Container)e.getComponent(0);\n+            Component swingComponent = c.getComponent(0);\n+            System.out.println(swingComponent);\n+            if (swingComponent instanceof JTextField tf) {\n+                System.out.println(tf.getWidth());\n+                System.out.println(frame.getWidth());\n+                if (swingComponent.getWidth() > (frame.getWidth() * 0.75)) {\n+                    throw new RuntimeException(\"textfield width almost same as frame width\");\n+                }\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTextField\/bug4232716.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 5027332\n+ * @requires (os.family == \"linux\")\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame\n+ * @summary Tests that textfield caret is placed slightly off textfield borders\n+ * @run main\/manual bug5027332\n+ *\/\n+\n+import java.awt.BorderLayout;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import javax.swing.UIManager;\n+\n+import jtreg.SkippedException;\n+\n+public class bug5027332 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This test is for GTK LookAndFeel.\n+\n+            Click into the text field so that caret appears inside.\n+            The caret should be placed slightly off text field borders,\n+            so that it can be easily distinguished from the border.\n+            Test fails if the caret touches the border.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\");\n+        } catch (Exception e) {\n+            throw new SkippedException(\"Test applicable only for GTK L&F\");\n+        }\n+\n+        PassFailJFrame.builder()\n+                .title(\"bug5027332 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug5027332::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+\n+        JFrame frame = new JFrame(\"bug5027332\");\n+        JTextField t = new JTextField(10);\n+        JPanel p = new JPanel();\n+        p.add(t, BorderLayout.CENTER);\n+        frame.setContentPane(p);\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTextField\/bug5027332.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"}]}