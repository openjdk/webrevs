{"files":[{"patch":"@@ -63,2 +63,3 @@\n-    final Map<PackageElement, List<Element>> pkgToSuperclassTypeParameter;\n-    final Map<PackageElement, List<Element>> pkgToInterfaceTypeParameter;\n+    final Map<PackageElement, List<Element>> pkgToSubclassTypeParameter;\n+    final Map<PackageElement, List<Element>> pkgToSubinterfaceTypeParameter;\n+    final Map<PackageElement, List<Element>> pkgToImplementsTypeParameter;\n@@ -110,2 +111,3 @@\n-        this.pkgToSuperclassTypeParameter = pkgDivide(mapper.classToSuperclassTypeParam);\n-        this.pkgToInterfaceTypeParameter = pkgDivide(mapper.classToInterfaceTypeParam);\n+        this.pkgToSubclassTypeParameter = pkgDivide(mapper.classToSubclassTypeParam);\n+        this.pkgToSubinterfaceTypeParameter = pkgDivide(mapper.classToSubinterfaceTypeParam);\n+        this.pkgToImplementsTypeParameter = pkgDivide(mapper.classToImplementsTypeParam);\n@@ -345,2 +347,2 @@\n-        classSubWriter.addUseInfo(pkgToSuperclassTypeParameter.get(pkg),\n-                contents.getContent(\"doclet.ClassUse_SuperclassTypeParameter\", classLink,\n+        classSubWriter.addUseInfo(pkgToSubclassTypeParameter.get(pkg),\n+                contents.getContent(\"doclet.ClassUse_SubclassTypeParameter\", classLink,\n@@ -348,2 +350,5 @@\n-        classSubWriter.addUseInfo(pkgToInterfaceTypeParameter.get(pkg),\n-                contents.getContent(\"doclet.ClassUse_InterfaceTypeParameter\", classLink,\n+        classSubWriter.addUseInfo(pkgToSubinterfaceTypeParameter.get(pkg),\n+                contents.getContent(\"doclet.ClassUse_SubinterfaceTypeParameter\", classLink,\n+                pkgLink), content);\n+        classSubWriter.addUseInfo(pkgToImplementsTypeParameter.get(pkg),\n+                contents.getContent(\"doclet.ClassUse_ImplementsTypeParameter\", classLink,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -283,1 +283,2 @@\n-    as A, methods that return A, and methods and constructors with parameters of type A.  \\\n+    as A, methods that return A, methods and constructors with parameters of type A, and \\\n+    subclasses with parameters of type A.  \\\n@@ -383,2 +384,3 @@\n-doclet.ClassUse_SuperclassTypeParameter=Classes in {1} that extend classes with type arguments of type {0}\n-doclet.ClassUse_InterfaceTypeParameter=Classes in {1} that implement interfaces with type arguments of type {0}\n+doclet.ClassUse_SubclassTypeParameter=Subclasses with type arguments of type {0} in {1}\n+doclet.ClassUse_SubinterfaceTypeParameter=Subinterfaces with type arguments of type {0} in {1}\n+doclet.ClassUse_ImplementsTypeParameter=Classes in {1} that implement interfaces with type arguments of type {0}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -100,1 +100,6 @@\n-    public final Map<TypeElement, List<TypeElement>> classToSuperclassTypeParam = new HashMap<>();\n+    public final Map<TypeElement, List<TypeElement>> classToSubclassTypeParam = new HashMap<>();\n+\n+    \/**\n+     * Mapping of TypeElements to list of TypeElements which uses this class in a superclass type parameter\n+     *\/\n+    public final Map<TypeElement, List<TypeElement>> classToSubinterfaceTypeParam = new HashMap<>();\n@@ -105,1 +110,1 @@\n-    public final Map<TypeElement, List<TypeElement>> classToInterfaceTypeParam = new HashMap<>();\n+    public final Map<TypeElement, List<TypeElement>> classToImplementsTypeParam = new HashMap<>();\n@@ -227,3 +232,10 @@\n-            mapTypeParameters(classToSuperclassTypeParam, aClass.getSuperclass(), aClass);\n-            for (var superinterface : aClass.getInterfaces()) {\n-                mapTypeParameters(classToInterfaceTypeParam, superinterface, aClass);\n+            mapTypeParameters(classToSubclassTypeParam, aClass.getSuperclass(), aClass);\n+\n+            if (utils.isInterface(aClass)) {\n+                for (var superinterface : aClass.getInterfaces()) {\n+                    mapTypeParameters(classToSubinterfaceTypeParam, superinterface, aClass);\n+                }\n+            } else {\n+                for (var superinterface : aClass.getInterfaces()) {\n+                    mapTypeParameters(classToImplementsTypeParam, superinterface, aClass);\n+                }\n@@ -231,0 +243,1 @@\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/ClassUseMapper.java","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -215,0 +215,5 @@\n+                    \"\"\",\n+                \"\"\"\n+                    import java.util.*;\n+                    public interface Three extends Comparator<One> {\n+                    }\n@@ -221,1 +226,2 @@\n-                src.resolve(\"Two.java\").toString()\n+                src.resolve(\"Two.java\").toString(),\n+                src.resolve(\"Three.java\").toString()\n@@ -227,3 +233,3 @@\n-                    <div class=\"caption\"><span>Classes in <a href=\"..\/package-summary.html\">Unnamed Package<\/a> \\\n-                    that extend classes with type arguments of type <a href=\"..\/One.html\" title=\"class in Unnamed Package\">\\\n-                    One<\/a><\/span><\/div>\n+                    <div class=\"caption\"><span>Subclasses with type arguments of \\\n+                    type <a href=\"..\/One.html\" title=\"class in Unnamed Package\">One<\/a> \\\n+                    in <a href=\"..\/package-summary.html\">Unnamed Package<\/a><\/span><\/div>\n@@ -243,3 +249,18 @@\n-                    <div class=\"caption\"><span>Classes in <a href=\"..\/package-summary.html\">Unnamed Package<\/a> \\\n-                    that implement interfaces with type arguments of type <a href=\"..\/One.html\" title=\"class in Unnamed \\\n-                    Package\">One<\/a><\/span><\/div>\n+                    <div class=\"caption\"><span>Subinterfaces with type arguments of \\\n+                    type <a href=\"..\/One.html\" title=\"class in Unnamed Package\">One<\/a> \\\n+                    in <a href=\"..\/package-summary.html\">Unnamed Package<\/a><\/span><\/div>\n+                    \"\"\",\n+                \"\"\"\n+                    <div class=\"summary-table three-column-summary\">\n+                    <div class=\"table-header col-first\">Modifier and Type<\/div>\n+                    <div class=\"table-header col-second\">Interface<\/div>\n+                    <div class=\"table-header col-last\">Description<\/div>\n+                    <div class=\"col-first even-row-color\"><code>interface&nbsp;<\/code><\/div>\n+                    <div class=\"col-second even-row-color\"><code><a href=\"..\/Three.html\" class=\"type-name-link\" title=\"interface in Unnamed Package\">Three<\/a><\/code><\/div>\n+                    <div class=\"col-last even-row-color\">&nbsp;<\/div>\n+                    <\/div>\n+                    \"\"\",\n+                \"\"\"\n+                    <div class=\"caption\"><span>Classes in <a href=\"..\/package-summary.html\">\\\n+                    Unnamed Package<\/a> that implement interfaces with type arguments of type \\\n+                    <a href=\"..\/One.html\" title=\"class in Unnamed Package\">One<\/a><\/span><\/div>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testUseOption\/TestUseOption.java","additions":28,"deletions":7,"binary":false,"changes":35,"status":"modified"}]}