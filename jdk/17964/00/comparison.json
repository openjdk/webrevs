{"files":[{"patch":"@@ -248,0 +248,2 @@\n+  __ push_cont_fastpath(rthread);\n+\n@@ -251,0 +253,2 @@\n+  __ pop_cont_fastpath(rthread);\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/upcallLinker_aarch64.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -246,0 +246,2 @@\n+  __ push_cont_fastpath();\n+\n@@ -250,0 +252,2 @@\n+  __ pop_cont_fastpath();\n+\n","filename":"src\/hotspot\/cpu\/ppc\/upcallLinker_ppc.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -270,0 +270,2 @@\n+  __ push_cont_fastpath(xthread);\n+\n@@ -273,0 +275,2 @@\n+  __ pop_cont_fastpath(xthread);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/upcallLinker_riscv.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -303,0 +303,2 @@\n+  __ push_cont_fastpath();\n+\n@@ -305,0 +307,2 @@\n+  __ pop_cont_fastpath();\n+\n","filename":"src\/hotspot\/cpu\/x86\/upcallLinker_x86_64.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+import jdk.test.lib.thread.VThreadPinner;\n@@ -68,2 +69,3 @@\n-                synchronized (GetStackTraceALotWhenPinned.class) {\n-                    if (timed) {\n+                boolean b = timed;\n+                VThreadPinner.runPinned(() -> {\n+                    if (b) {\n@@ -74,1 +76,1 @@\n-                }\n+                });\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/GetStackTraceALotWhenPinned.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}