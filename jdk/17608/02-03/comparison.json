{"files":[{"patch":"@@ -39,2 +39,0 @@\n-import java.awt.event.WindowAdapter;\n-import java.awt.event.WindowEvent;\n@@ -53,1 +51,1 @@\n- * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @library \/test\/lib \/java\/awt\/regtesthelpers\n@@ -110,1 +108,0 @@\n-            System.out.println(\"DONE\");\n@@ -112,1 +109,1 @@\n-            e.printStackTrace();\n+            PassFailJFrame.forceFail( ae.getActionCommand() + \" test Failed\");\n@@ -138,2 +135,7 @@\n-            \"You must have a printer available to perform this test\\n\" +\n-            \"The print result should be collated.\";\n+            \"Click on the '2D Print' button.\\n\" +\n+            \"Choose copies as '2' with 'Collated' checkbox and Print\\n\" +\n+            \"\\n\" +\n+            \"Click on the 'PrintService', should get a print from default printer\\n\" +\n+            \"\\n\" +\n+            \"If you get only one copy or non 'Collated' prints from any of the above case, \" +\n+            \"test failed\";\n@@ -147,1 +149,1 @@\n-                .columns(40)\n+                .columns(45)\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/Collate2DPrintingTest.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.awt.print.PrinterException;\n@@ -50,1 +51,1 @@\n-    protected static final int _objectBorder = 15;\n+    protected static final int objectBorder = 15;\n@@ -52,1 +53,1 @@\n-    protected BufferedImage _image;\n+    private final BufferedImage image;\n@@ -54,1 +55,1 @@\n-    protected PageFormat _pageFormat;\n+    private final PageFormat pageFormat;\n@@ -57,1 +58,1 @@\n-        _image = image;\n+        this.image = image;\n@@ -59,1 +60,1 @@\n-        _pageFormat = pj.defaultPage();\n+        pageFormat = pj.defaultPage();\n@@ -62,2 +63,4 @@\n-    protected int printImage(Graphics g, PageFormat pf, BufferedImage image) {\n-\n+    protected int printImage(Graphics g, PageFormat pf, int pageIndex) {\n+        if (pageIndex == 0) {\n+            return Printable.NO_SUCH_PAGE;\n+        }\n@@ -65,1 +68,1 @@\n-        g2D.transform(new AffineTransform(_pageFormat.getMatrix()));\n+        g2D.transform(new AffineTransform(pageFormat.getMatrix()));\n@@ -67,2 +70,2 @@\n-        int paperW = (int) pf.getImageableWidth(), paperH =\n-                (int) pf.getImageableHeight();\n+        int paperW = (int) pageFormat.getImageableWidth();\n+        int paperH = (int) pageFormat.getImageableHeight();\n@@ -70,1 +73,2 @@\n-        int x = (int) pf.getImageableX(), y = (int) pf.getImageableY();\n+        int x = (int) pageFormat.getImageableX();\n+        int y = (int) pageFormat.getImageableY();\n@@ -74,2 +78,2 @@\n-        float scaleFactor = ((float) ((paperW - 25) - _objectBorder -\n-                _objectBorder) \/ (float) (image.getWidth()));\n+        float scaleFactor = ((float) ((paperW - 25) - objectBorder -\n+                objectBorder) \/ (float) (image.getWidth()));\n@@ -78,1 +82,1 @@\n-        g2D.drawImage(image, scaleOp, x + _objectBorder, y + _objectBorder);\n+        g2D.drawImage(image, scaleOp, x + objectBorder, y + objectBorder);\n@@ -80,1 +84,0 @@\n-        g2D.dispose();\n@@ -84,2 +87,1 @@\n-    public void print() {\n-        try {\n+    public void print() throws PrinterException {\n@@ -88,7 +90,1 @@\n-            pj.setPrintable((g, pf, pageIndex) -> {\n-                int result = Printable.NO_SUCH_PAGE;\n-                if (pageIndex == 0 && _image != null) {\n-                    result = printImage(g, _pageFormat, _image);\n-                }\n-                return result;\n-            });\n+            pj.setPrintable(this::printImage);\n@@ -98,4 +94,0 @@\n-\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-        }\n@@ -113,2 +105,6 @@\n-            throw new SkippedException(\"Printer not configured or available.\"\n-                    + \" Test cannot continue.\");\n+            throw new SkippedException(\"Printer not configured or available.\");\n+        }\n+\n+        BufferedImage image = prepareFrontImage();\n+        if (image == null) {\n+            throw new RuntimeException(\"Image creation failed\");\n@@ -123,1 +119,0 @@\n-        BufferedImage image = prepareFrontImage();\n@@ -149,0 +144,1 @@\n+        g2D.dispose();\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/DrawImage.java","additions":27,"deletions":31,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- *          work for printer graphics objects.\n+ * work for printer graphics objects.\n@@ -51,0 +51,2 @@\n+            \" This test will automatically initiate a print\\n\" +\n+            \"\\n\" +\n@@ -55,1 +57,1 @@\n-    public static void main(String args[]) throws Exception {\n+    public static void main(String[] args) throws Exception {\n@@ -58,2 +60,1 @@\n-            throw new SkippedException(\"Printer not configured or available.\"\n-                    + \" Test cannot continue.\");\n+            throw new SkippedException(\"Printer not configured or available.\");\n@@ -111,1 +112,1 @@\n-        byte data[] = new byte[s.length()];\n+        byte[] data = new byte[s.length()];\n@@ -134,1 +135,1 @@\n-                    \"float x, float y)\";\n+                \"float x, float y)\";\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/DrawStringMethods.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n@@ -71,1 +69,1 @@\n-                    pe.printStackTrace();\n+                    PassFailJFrame.forceFail(\"Test Failed\");\n@@ -92,1 +90,2 @@\n-        g2d.drawRect(0, 0, (int) pageFormat.getImageableWidth(),\n+        g2d.drawRect(0, 0,\n+                (int) pageFormat.getImageableWidth(),\n@@ -99,1 +98,2 @@\n-        g2d.drawRect(1, 1, (int) pageFormat.getImageableWidth() - 2,\n+        g2d.drawRect(1, 1,\n+                (int) pageFormat.getImageableWidth() - 2,\n@@ -107,1 +107,1 @@\n-        g2d.dispose();\n+\n@@ -113,4 +113,4 @@\n-            \" Press the print button, which brings up a print dialog and\\n\" +\n-            \" in the dialog select a printer and press the print button\\n\" +\n-            \" in the dialog. Repeat for as many printers as you have installed\\n\" +\n-            \" On solaris and linux just one printer is sufficient\\n\" +\n+            \" Press the print button, which brings up a print dialog.\\n\" +\n+            \" In the dialog select a printer and press the print button.\\n\" +\n+            \" Repeat for all the printers as you have installed\\n\" +\n+            \" On Solaris and Linux just one printer is sufficient.\\n\" +\n@@ -123,1 +123,1 @@\n-            \" The test fails if the JRE crashes, or if the output from the two\\n\" +\n+            \" The test fails if the output from the two\\n\" +\n@@ -129,2 +129,1 @@\n-            throw new SkippedException(\"Printer not configured or available.\"\n-                    + \" Test cannot continue.\");\n+            throw new SkippedException(\"Printer not configured or available.\");\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/InvalidPage.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+import jtreg.SkippedException;\n+\n@@ -41,1 +43,1 @@\n-    static String theName = \"Testing the Jobname setting\";\n+    private static final String THE_NAME = \"Testing the Jobname setting\";\n@@ -45,1 +47,2 @@\n-            \"This test prints a page with a banner\/job name of\\n\" + theName;\n+            \"This test prints a page with a banner\/job name of\\n\" +\n+            THE_NAME;\n@@ -50,2 +53,1 @@\n-            throw new SkippedException(\"Printer not configured or available.\"\n-                    + \" Test cannot continue.\");\n+            throw new SkippedException(\"Printer not configured or available.\");\n@@ -61,1 +63,1 @@\n-        job.setJobName(theName);\n+        job.setJobName(THE_NAME);\n@@ -74,2 +76,1 @@\n-        g2d.drawString(\"Name is: \" + theName, 20, 20);\n-        g2d.dispose();\n+        g2d.drawString(\"Name is: \" + THE_NAME, 20, 20);\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/JobName\/PrinterJobName.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n-            \"This test should print a total of four pages which are two\\n\" +\n-            \" copies of each of two pages which consist of the text :-\\n\" +\n+            \"This test should print four pages, which are \\n\" +\n+            \"two copies of each page with the text :-\\n\" +\n@@ -54,2 +54,1 @@\n-            throw new SkippedException(\"Printer not configured or available.\"\n-                    + \" Test cannot continue.\");\n+            throw new SkippedException(\"Printer not configured or available.\");\n@@ -79,1 +78,1 @@\n-        g.drawString(\"This is page number \" + Integer.toString(pageIndex), 50, 50);\n+        g.drawString(\"This is page number \" + pageIndex, 50, 50);\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/NumCopies.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}