{"files":[{"patch":"@@ -24,9 +24,0 @@\n-import javax.print.Doc;\n-import javax.print.DocFlavor;\n-import javax.print.DocPrintJob;\n-import javax.print.PrintService;\n-import javax.print.PrintServiceLookup;\n-import javax.print.attribute.DocAttributeSet;\n-import javax.print.attribute.HashPrintRequestAttributeSet;\n-import javax.print.attribute.standard.Copies;\n-import javax.print.attribute.standard.SheetCollate;\n@@ -45,0 +36,11 @@\n+import javax.print.Doc;\n+import javax.print.DocFlavor;\n+import javax.print.DocPrintJob;\n+import javax.print.PrintService;\n+import javax.print.PrintServiceLookup;\n+import javax.print.attribute.DocAttributeSet;\n+import javax.print.attribute.HashPrintRequestAttributeSet;\n+import javax.print.attribute.standard.Copies;\n+import javax.print.attribute.standard.SheetCollate;\n+\n+import jtreg.SkippedException;\n@@ -51,2 +53,2 @@\n- * @library \/test\/lib \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame jtreg.SkippedException\n@@ -61,1 +63,1 @@\n-    PrintService defService = null;\n+    PrintService defService = PrintServiceLookup.lookupDefaultPrintService();\n@@ -65,1 +67,0 @@\n-\n@@ -73,9 +74,0 @@\n-        defService = PrintServiceLookup.lookupDefaultPrintService();\n-        PrintService[] pservice;\n-        if (defService == null) {\n-            pservice = PrintServiceLookup.lookupPrintServices(null, null);\n-            if (pservice.length == 0) {\n-                throw new RuntimeException(\"No printer found.  TEST ABORTED\");\n-            }\n-            defService = pservice[0];\n-        }\n@@ -109,1 +101,2 @@\n-            PassFailJFrame.forceFail( ae.getActionCommand() + \" test Failed\");\n+            PassFailJFrame.forceFail( \"Test Failed\");\n+            e.printStackTrace();\n@@ -118,2 +111,1 @@\n-        DocFlavor flavor = DocFlavor.SERVICE_FORMATTED.PRINTABLE;\n-        return flavor;\n+        return DocFlavor.SERVICE_FORMATTED.PRINTABLE;\n@@ -140,1 +132,1 @@\n-            \"If you get only one copy or non 'Collated' prints from any of the above case, \" +\n+            \"If you get only one copy or non 'Collated' prints from any of the above cases, \" +\n@@ -145,0 +137,4 @@\n+        if (PrinterJob.lookupPrintServices().length == 0) {\n+            throw new SkippedException(\"Printer not configured or available.\");\n+        }\n+\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/Collate2DPrintingTest.java","additions":22,"deletions":26,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    protected static final int objectBorder = 15;\n+    private static final int objectBorder = 15;\n@@ -63,2 +63,2 @@\n-    protected int printImage(Graphics g, PageFormat pf, int pageIndex) {\n-        if (pageIndex == 0) {\n+    private int printImage(Graphics g, PageFormat pf, int pageIndex) {\n+        if (pageIndex > 0) {\n@@ -78,2 +78,2 @@\n-        float scaleFactor = ((float) ((paperW - 25) - objectBorder -\n-                objectBorder) \/ (float) (image.getWidth()));\n+        float scaleFactor = ((float) ((paperW - 25) - objectBorder - objectBorder)\n+                                   \/ (float) (image.getWidth()));\n@@ -88,6 +88,6 @@\n-            final PrinterJob pj = PrinterJob.getPrinterJob();\n-            pj.setJobName(\"Print Image\");\n-            pj.setPrintable(this::printImage);\n-            if (pj.printDialog()) {\n-                pj.print();\n-            }\n+        final PrinterJob pj = PrinterJob.getPrinterJob();\n+        pj.setJobName(\"Print Image\");\n+        pj.setPrintable(this::printImage);\n+        if (pj.printDialog()) {\n+            pj.print();\n+        }\n@@ -127,1 +127,1 @@\n-                BufferedImage.TYPE_BYTE_GRAY);\n+                                   BufferedImage.TYPE_BYTE_GRAY);\n@@ -131,1 +131,1 @@\n-                RenderingHints.VALUE_ANTIALIAS_OFF);\n+                             RenderingHints.VALUE_ANTIALIAS_OFF);\n@@ -139,2 +139,2 @@\n-        AffineTransform originXform = AffineTransform.getTranslateInstance(w \/\n-                5.0, h \/ 5.0);\n+        AffineTransform originXform = AffineTransform.getTranslateInstance(\n+                w \/ 5.0, h \/ 5.0);\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/DrawImage.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * work for printer graphics objects.\n+ *          work for printer graphics objects.\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/DrawStringMethods.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,0 +70,1 @@\n+                    pe.printStackTrace();\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/InvalidPage.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}