{"files":[{"patch":"@@ -844,1 +844,1 @@\n-  JavaThread* new_thread = nullptr;\n+  Handle thread_oop(THREAD, JNIHandles::resolve_non_null(thread_handle));\n@@ -846,0 +846,7 @@\n+  if (java_lang_Thread::thread(thread_oop()) != nullptr) {\n+    assert(type == compiler_t, \"should only happen with reused compiler threads\");\n+    \/\/ The compiler thread hasn't actually exited yet so don't try to reuse it\n+    return nullptr;\n+  }\n+\n+  JavaThread* new_thread = nullptr;\n@@ -874,1 +881,0 @@\n-    Handle thread_oop(THREAD, JNIHandles::resolve_non_null(thread_handle));\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -748,0 +748,1 @@\n+  guarantee(java_lang_Thread::thread(threadObj()) == thread, \"must be alive\");\n@@ -2158,0 +2159,2 @@\n+\n+  guarantee(java_lang_Thread::thread(thread_oop()) == nullptr, \"must not be alive\");\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}