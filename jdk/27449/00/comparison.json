{"files":[{"patch":"@@ -442,2 +442,2 @@\n-  long mask = (-1ULL >> (64 - vlen));\n-  long bit  = type->get_con() & mask;\n+  jlong mask = (-1ULL >> (64 - vlen));\n+  jlong bit = type->get_con() & mask;\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-* @bug 8356760\n+* @bug 8356760 8367391\n@@ -176,1 +176,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -182,1 +182,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -185,2 +185,3 @@\n-        \/\/ Test the case where some but not all bits are set.\n-        testMaskFromLong(B_SPECIES, (-1L >>> (64 - B_SPECIES.length()))-1);\n+        \/\/ Test cases where some but not all bits are set.\n+        testMaskFromLong(B_SPECIES, (-1L >>> (64 - B_SPECIES.length())) - 1);\n+        testMaskFromLong(B_SPECIES, (-1L >>> (64 - B_SPECIES.length())) >>> 1);\n@@ -191,1 +192,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -197,1 +198,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -200,2 +201,3 @@\n-        \/\/ Test the case where some but not all bits are set.\n-        testMaskFromLong(S_SPECIES, (-1L >>> (64 - S_SPECIES.length()))-1);\n+        \/\/ Test cases where some but not all bits are set.\n+        testMaskFromLong(S_SPECIES, (-1L >>> (64 - S_SPECIES.length())) - 1);\n+        testMaskFromLong(S_SPECIES, (-1L >>> (64 - S_SPECIES.length())) >>> 1);\n@@ -206,1 +208,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -212,1 +214,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -215,2 +217,3 @@\n-        \/\/ Test the case where some but not all bits are set.\n-        testMaskFromLong(I_SPECIES, (-1L >>> (64 - I_SPECIES.length()))-1);\n+        \/\/ Test cases where some but not all bits are set.\n+        testMaskFromLong(I_SPECIES, (-1L >>> (64 - I_SPECIES.length())) - 1);\n+        testMaskFromLong(I_SPECIES, (-1L >>> (64 - I_SPECIES.length())) >>> 1);\n@@ -221,1 +224,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -227,1 +230,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -230,2 +233,3 @@\n-        \/\/ Test the case where some but not all bits are set.\n-        testMaskFromLong(L_SPECIES, (-1L >>> (64 - L_SPECIES.length()))-1);\n+        \/\/ Test cases where some but not all bits are set.\n+        testMaskFromLong(L_SPECIES, (-1L >>> (64 - L_SPECIES.length())) - 1);\n+        testMaskFromLong(L_SPECIES, (-1L >>> (64 - L_SPECIES.length())) >>> 1);\n@@ -236,1 +240,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -242,1 +246,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -245,2 +249,3 @@\n-        \/\/ Test the case where some but not all bits are set.\n-        testMaskFromLong(F_SPECIES, (-1L >>> (64 - F_SPECIES.length()))-1);\n+        \/\/ Test cases where some but not all bits are set.\n+        testMaskFromLong(F_SPECIES, (-1L >>> (64 - F_SPECIES.length())) - 1);\n+        testMaskFromLong(F_SPECIES, (-1L >>> (64 - F_SPECIES.length())) >>> 1);\n@@ -251,1 +256,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -257,1 +262,1 @@\n-                   IRNode.VECTOR_LONG_TO_MASK, \"> 0\" },\n+                   IRNode.VECTOR_LONG_TO_MASK, \"= 2\" },\n@@ -260,2 +265,3 @@\n-        \/\/ Test the case where some but not all bits are set.\n-        testMaskFromLong(D_SPECIES, (-1L >>> (64 - D_SPECIES.length()))-1);\n+        \/\/ Test cases where some but not all bits are set.\n+        testMaskFromLong(D_SPECIES, (-1L >>> (64 - D_SPECIES.length())) - 1);\n+        testMaskFromLong(D_SPECIES, (-1L >>> (64 - D_SPECIES.length())) >>> 1);\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMaskFromLongTest.java","additions":31,"deletions":25,"binary":false,"changes":56,"status":"modified"}]}