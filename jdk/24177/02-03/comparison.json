{"files":[{"patch":"@@ -119,0 +119,1 @@\n+      \/\/ SHUT_RDWR is not available\n","filename":"src\/hotspot\/os\/aix\/attachListener_aix.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-             props = getDefaultProps();\n+            props = getDefaultProps();\n@@ -117,9 +117,9 @@\n-             \/\/ Check that we can connect to the process\n-             \/\/ - this ensures we throw the permission denied error now rather than\n-             \/\/ later when we attempt to enqueue a command.\n-             int s = socket();\n-             try {\n-                 connect(s, socket_path);\n-             } finally {\n-                 close(s);\n-             }\n+            \/\/ Check that we can connect to the process\n+            \/\/ - this ensures we throw the permission denied error now rather than\n+            \/\/ later when we attempt to enqueue a command.\n+            int s = socket();\n+            try {\n+                connect(s, socket_path);\n+            } finally {\n+                close(s);\n+            }\n@@ -187,9 +187,9 @@\n-         private int fd;\n-         public SocketOutputStream(int fd) {\n-             this.fd = fd;\n-         }\n-         @Override\n-         public void write(byte[] buffer, int offset, int length) throws IOException {\n-             VirtualMachineImpl.write(fd, buffer, offset, length);\n-         }\n-     }\n+        private int fd;\n+        public SocketOutputStream(int fd) {\n+            this.fd = fd;\n+        }\n+        @Override\n+        public void write(byte[] buffer, int offset, int length) throws IOException {\n+            VirtualMachineImpl.write(fd, buffer, offset, length);\n+        }\n+    }\n","filename":"src\/jdk.attach\/aix\/classes\/sun\/tools\/attach\/VirtualMachineImpl.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"}]}