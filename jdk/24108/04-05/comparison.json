{"files":[{"patch":"@@ -615,0 +615,16 @@\n+    \/**\n+     * Test whether StringBuilder is MergeStored when appending 4 constant characters\n+     *\/\n+    @Benchmark\n+    public void str4StringBuilderAppendChar(Blackhole BH) {\n+        sb.setLength(0);\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            sb.append((char) STR_4_BYTES_LATIN1_BYTE_0);\n+            sb.append((char) STR_4_BYTES_LATIN1_BYTE_1);\n+            sb.append((char) STR_4_BYTES_LATIN1_BYTE_2);\n+            sb.append((char) STR_4_BYTES_LATIN1_BYTE_3);\n+        }\n+        BH.consume(sb.length());\n+    }\n+\n@@ -683,0 +699,16 @@\n+    \/**\n+     * Test whether the UTF16 StringBuilder is MergeStored when appending 4 constant characters\n+     *\/\n+    @Benchmark\n+    public void str4Utf16StringBuilderAppendChar(Blackhole BH) {\n+        sb_utf16.setLength(0);\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            sb_utf16.append((char) STR_4_BYTES_LATIN1_BYTE_0);\n+            sb_utf16.append((char) STR_4_BYTES_LATIN1_BYTE_1);\n+            sb_utf16.append((char) STR_4_BYTES_LATIN1_BYTE_2);\n+            sb_utf16.append((char) STR_4_BYTES_LATIN1_BYTE_3);\n+        }\n+        BH.consume(sb_utf16.length());\n+    }\n+\n@@ -704,5 +736,5 @@\n-            bytes8[off    ] = STR_7_BYTES_LATIN1_BYTE_0;\n-            bytes8[off + 1] = STR_7_BYTES_LATIN1_BYTE_1;\n-            bytes8[off + 2] = STR_7_BYTES_LATIN1_BYTE_2;\n-            bytes8[off + 3] = STR_7_BYTES_LATIN1_BYTE_3;\n-            bytes8[off + 4] = STR_7_BYTES_LATIN1_BYTE_4;\n+            bytes8[off    ] = STR_5_BYTES_LATIN1_BYTE_0;\n+            bytes8[off + 1] = STR_5_BYTES_LATIN1_BYTE_1;\n+            bytes8[off + 2] = STR_5_BYTES_LATIN1_BYTE_2;\n+            bytes8[off + 3] = STR_5_BYTES_LATIN1_BYTE_3;\n+            bytes8[off + 4] = STR_5_BYTES_LATIN1_BYTE_4;\n@@ -754,0 +786,17 @@\n+    \/**\n+     * Test whether StringBuilder is MergeStored when appending 5 constant characters\n+     *\/\n+    @Benchmark\n+    public void str5StringBuilderAppendChar(Blackhole BH) {\n+        sb.setLength(0);\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            sb.append((char) STR_5_BYTES_LATIN1_BYTE_0);\n+            sb.append((char) STR_5_BYTES_LATIN1_BYTE_1);\n+            sb.append((char) STR_5_BYTES_LATIN1_BYTE_2);\n+            sb.append((char) STR_5_BYTES_LATIN1_BYTE_3);\n+            sb.append((char) STR_5_BYTES_LATIN1_BYTE_4);\n+        }\n+        BH.consume(sb.length());\n+    }\n+\n@@ -824,0 +873,17 @@\n+    \/**\n+     * Test whether the UTF16 StringBuilder is MergeStored when appending 5 constant characters\n+     *\/\n+    @Benchmark\n+    public void str5Utf16StringBuilderAppendChar(Blackhole BH) {\n+        sb_utf16.setLength(0);\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            sb_utf16.append((char) STR_5_BYTES_LATIN1_BYTE_0);\n+            sb_utf16.append((char) STR_5_BYTES_LATIN1_BYTE_1);\n+            sb_utf16.append((char) STR_5_BYTES_LATIN1_BYTE_2);\n+            sb_utf16.append((char) STR_5_BYTES_LATIN1_BYTE_3);\n+            sb_utf16.append((char) STR_5_BYTES_LATIN1_BYTE_4);\n+        }\n+        BH.consume(sb_utf16.length());\n+    }\n+\n@@ -898,0 +964,19 @@\n+    \/**\n+     * Test whether StringBuilder is MergeStored when appending 7 constant characters\n+     *\/\n+    @Benchmark\n+    public void str7StringBuilderAppendChar(Blackhole BH) {\n+        sb.setLength(0);\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            sb.append((char) STR_7_BYTES_LATIN1_BYTE_0);\n+            sb.append((char) STR_7_BYTES_LATIN1_BYTE_1);\n+            sb.append((char) STR_7_BYTES_LATIN1_BYTE_2);\n+            sb.append((char) STR_7_BYTES_LATIN1_BYTE_3);\n+            sb.append((char) STR_7_BYTES_LATIN1_BYTE_4);\n+            sb.append((char) STR_7_BYTES_LATIN1_BYTE_5);\n+            sb.append((char) STR_7_BYTES_LATIN1_BYTE_6);\n+        }\n+        BH.consume(sb.length());\n+    }\n+\n@@ -971,0 +1056,19 @@\n+    \/**\n+     * Test whether the UTF16 StringBuilder is MergeStored when appending 7 constant characters\n+     *\/\n+    @Benchmark\n+    public void str7Utf16StringBuilderAppendChar(Blackhole BH) {\n+        sb_utf16.setLength(0);\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            sb_utf16.append((char) STR_7_BYTES_LATIN1_BYTE_0);\n+            sb_utf16.append((char) STR_7_BYTES_LATIN1_BYTE_1);\n+            sb_utf16.append((char) STR_7_BYTES_LATIN1_BYTE_2);\n+            sb_utf16.append((char) STR_7_BYTES_LATIN1_BYTE_3);\n+            sb_utf16.append((char) STR_7_BYTES_LATIN1_BYTE_4);\n+            sb_utf16.append((char) STR_7_BYTES_LATIN1_BYTE_5);\n+            sb_utf16.append((char) STR_7_BYTES_LATIN1_BYTE_6);\n+        }\n+        BH.consume(sb_utf16.length());\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/MergeStoreBench.java","additions":109,"deletions":5,"binary":false,"changes":114,"status":"modified"}]}