{"files":[{"patch":"@@ -61,0 +61,4 @@\n+    private static final byte STR_4_BYTES_LATIN1_BYTE_0 = STR_4_BYTES_LATIN1[0];\n+    private static final byte STR_4_BYTES_LATIN1_BYTE_1 = STR_4_BYTES_LATIN1[1];\n+    private static final byte STR_4_BYTES_LATIN1_BYTE_2 = STR_4_BYTES_LATIN1[2];\n+    private static final byte STR_4_BYTES_LATIN1_BYTE_3 = STR_4_BYTES_LATIN1[3];\n@@ -70,0 +74,5 @@\n+    private static final byte STR_5_BYTES_LATIN1_BYTE_0 = STR_5_BYTES_LATIN1[0];\n+    private static final byte STR_5_BYTES_LATIN1_BYTE_1 = STR_5_BYTES_LATIN1[1];\n+    private static final byte STR_5_BYTES_LATIN1_BYTE_2 = STR_5_BYTES_LATIN1[2];\n+    private static final byte STR_5_BYTES_LATIN1_BYTE_3 = STR_5_BYTES_LATIN1[3];\n+    private static final byte STR_5_BYTES_LATIN1_BYTE_4 = STR_5_BYTES_LATIN1[4];\n@@ -81,0 +90,8 @@\n+    private static final byte STR_7_BYTES_LATIN1_BYTE_0 = STR_7_BYTES_LATIN1[0];\n+    private static final byte STR_7_BYTES_LATIN1_BYTE_1 = STR_7_BYTES_LATIN1[1];\n+    private static final byte STR_7_BYTES_LATIN1_BYTE_2 = STR_7_BYTES_LATIN1[2];\n+    private static final byte STR_7_BYTES_LATIN1_BYTE_3 = STR_7_BYTES_LATIN1[3];\n+    private static final byte STR_7_BYTES_LATIN1_BYTE_4 = STR_7_BYTES_LATIN1[4];\n+    private static final byte STR_7_BYTES_LATIN1_BYTE_5 = STR_7_BYTES_LATIN1[5];\n+    private static final byte STR_7_BYTES_LATIN1_BYTE_6 = STR_7_BYTES_LATIN1[6];\n+\n@@ -88,1 +105,1 @@\n-    final byte[] bytes14 = new byte[NUMBERS * 14];\n+    final byte[] bytes16 = new byte[NUMBERS * 16];\n@@ -93,1 +110,1 @@\n-    final char[] chars7 = new char[NUMBERS * 7];\n+    final char[] chars10 = new char[NUMBERS * 10];\n@@ -543,0 +560,16 @@\n+    \/**\n+     * Test the performance of array set 4 constant byte, used as a benchmark for comparison with other str4 Benchmarks\n+     *\/\n+    @Benchmark\n+    public void str4ArraySetConst(Blackhole BH) {\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            bytes5[off    ] = STR_4_BYTES_LATIN1_BYTE_0;\n+            bytes5[off + 1] = STR_4_BYTES_LATIN1_BYTE_1;\n+            bytes5[off + 2] = STR_4_BYTES_LATIN1_BYTE_2;\n+            bytes5[off + 3] = STR_4_BYTES_LATIN1_BYTE_3;\n+            off += 5; \/\/ disable auto vector\n+        }\n+        BH.consume(off);\n+    }\n+\n@@ -595,0 +628,16 @@\n+    \/**\n+     * Test the performance of array set 4 constant byte, used as a benchmark for comparison with other str4 Benchmarks\n+     *\/\n+    @Benchmark\n+    public void str4Utf16ArraySetConst(Blackhole BH) {\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            chars5[off    ] = (char) STR_4_BYTES_LATIN1_BYTE_0;\n+            chars5[off + 1] = (char) STR_4_BYTES_LATIN1_BYTE_1;\n+            chars5[off + 2] = (char) STR_4_BYTES_LATIN1_BYTE_2;\n+            chars5[off + 3] = (char) STR_4_BYTES_LATIN1_BYTE_3;\n+            off += 5; \/\/ disable auto vector\n+        }\n+        BH.consume(off);\n+    }\n+\n@@ -602,2 +651,2 @@\n-            UNSAFE.putLong(bytes10, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, STR_4_BYTES_UTF16_LONG);\n-            off += 10; \/\/ disable auto vector\n+            UNSAFE.putLong(bytes16, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, STR_4_BYTES_UTF16_LONG);\n+            off += 9; \/\/ disable auto vector\n@@ -615,2 +664,2 @@\n-            System.arraycopy(STR_4_BYTES_UTF16, 0, bytes10, off, 8);\n-            off += 10;\n+            System.arraycopy(STR_4_BYTES_UTF16, 0, bytes16, off, 8);\n+            off += 9; \/\/ disable auto vector\n@@ -642,2 +691,19 @@\n-            STR_5.getBytes(0, 4, bytes5, off);\n-            off += 5;\n+            STR_5.getBytes(0, 4, bytes8, off);\n+            off += 6; \/\/ disable auto vector\n+        }\n+        BH.consume(off);\n+    }\n+\n+    \/**\n+     * Test the performance of array set 5 constant byte, used as a benchmark for comparison with other str5 Benchmarks\n+     *\/\n+    @Benchmark\n+    public void str5ArraySetConst(Blackhole BH) {\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            bytes8[off    ] = STR_7_BYTES_LATIN1_BYTE_0;\n+            bytes8[off + 1] = STR_7_BYTES_LATIN1_BYTE_1;\n+            bytes8[off + 2] = STR_7_BYTES_LATIN1_BYTE_2;\n+            bytes8[off + 3] = STR_7_BYTES_LATIN1_BYTE_3;\n+            bytes8[off + 4] = STR_7_BYTES_LATIN1_BYTE_4;\n+            off += 6; \/\/ disable auto vector\n@@ -655,2 +721,2 @@\n-            System.arraycopy(STR_5_BYTES_LATIN1, 0, bytes5, off, 5);\n-            off += 5;\n+            System.arraycopy(STR_5_BYTES_LATIN1, 0, bytes8, off, 5);\n+            off += 6; \/\/ disable auto vector\n@@ -670,1 +736,1 @@\n-            off += 5;\n+            off += 6; \/\/ disable auto vector\n@@ -695,2 +761,2 @@\n-            STR_5.getChars(0, 5, chars5, off);\n-            off += 5;\n+            STR_5.getChars(0, 5, chars10, off);\n+            off += 6; \/\/ disable auto vector\n@@ -708,3 +774,20 @@\n-            UNSAFE.putLong(bytes10, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, STR_5_BYTES_UTF16_LONG);\n-            UNSAFE.putShort(bytes10, Unsafe.ARRAY_BYTE_BASE_OFFSET + off + 8, STR_5_BYTES_UTF16_SHORT);\n-            off += 10;\n+            UNSAFE.putLong(bytes16, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, STR_5_BYTES_UTF16_LONG);\n+            UNSAFE.putShort(bytes16, Unsafe.ARRAY_BYTE_BASE_OFFSET + off + 8, STR_5_BYTES_UTF16_SHORT);\n+            off += 11; \/\/ disable auto vector\n+        }\n+        BH.consume(off);\n+    }\n+\n+    \/**\n+     * Test the performance of array set 5 constant char, used as a benchmark for comparison with other str5 Benchmarks\n+     *\/\n+    @Benchmark\n+    public void str5Utf16ArraySetConst(Blackhole BH) {\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            chars10[off    ] = (char) STR_5_BYTES_LATIN1_BYTE_0;\n+            chars10[off + 1] = (char) STR_5_BYTES_LATIN1_BYTE_1;\n+            chars10[off + 2] = (char) STR_5_BYTES_LATIN1_BYTE_2;\n+            chars10[off + 3] = (char) STR_5_BYTES_LATIN1_BYTE_3;\n+            chars10[off + 4] = (char) STR_5_BYTES_LATIN1_BYTE_4;\n+            off += 6; \/\/ disable auto vector\n@@ -722,2 +805,2 @@\n-            System.arraycopy(STR_5_BYTES_UTF16, 0, bytes10, off, 10);\n-            off += 10;\n+            System.arraycopy(STR_5_BYTES_UTF16, 0, bytes16, off, 10);\n+            off += 11; \/\/ disable auto vector\n@@ -749,2 +832,21 @@\n-            STR_7.getBytes(0, 7, bytes8, off);\n-            off += 7;\n+            STR_7.getBytes(0, 7, bytes10, off);\n+            off += 9; \/\/ disable auto vector\n+        }\n+        BH.consume(off);\n+    }\n+\n+    \/**\n+     * Test the performance of array set 7 constant byte, used as a benchmark for comparison with other str7 Benchmarks\n+     *\/\n+    @Benchmark\n+    public void str7ArraySetConst(Blackhole BH) {\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            bytes10[off    ] = STR_7_BYTES_LATIN1_BYTE_0;\n+            bytes10[off + 1] = STR_7_BYTES_LATIN1_BYTE_1;\n+            bytes10[off + 2] = STR_7_BYTES_LATIN1_BYTE_2;\n+            bytes10[off + 3] = STR_7_BYTES_LATIN1_BYTE_3;\n+            bytes10[off + 4] = STR_7_BYTES_LATIN1_BYTE_4;\n+            bytes10[off + 5] = STR_7_BYTES_LATIN1_BYTE_5;\n+            bytes10[off + 6] = STR_7_BYTES_LATIN1_BYTE_6;\n+            off += 9; \/\/ disable auto vector\n@@ -762,2 +864,2 @@\n-            System.arraycopy(STR_7_BYTES_LATIN1, 0, bytes8, off, 7);\n-            off += 7;\n+            System.arraycopy(STR_7_BYTES_LATIN1, 0, bytes10, off, 7);\n+            off += 9; \/\/ disable auto vector\n@@ -775,4 +877,4 @@\n-            UNSAFE.putInt(bytes8, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, STR_7_BYTES_LATIN1_INT);\n-            UNSAFE.putShort(bytes8, Unsafe.ARRAY_BYTE_BASE_OFFSET + off + 4, STR_7_BYTES_LATIN1_SHORT);\n-            UNSAFE.putByte(bytes8, Unsafe.ARRAY_BYTE_BASE_OFFSET + off + 6, STR_7_BYTES_LATIN1_BYTE);\n-            off += 7;\n+            UNSAFE.putInt(bytes10, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, STR_7_BYTES_LATIN1_INT);\n+            UNSAFE.putShort(bytes10, Unsafe.ARRAY_BYTE_BASE_OFFSET + off + 4, STR_7_BYTES_LATIN1_SHORT);\n+            UNSAFE.putByte(bytes10, Unsafe.ARRAY_BYTE_BASE_OFFSET + off + 6, STR_7_BYTES_LATIN1_BYTE);\n+            off += 9; \/\/ disable auto vector\n@@ -803,2 +905,21 @@\n-            STR_7.getChars(0, 7, chars7, off);\n-            off += 7;\n+            STR_7.getChars(0, 7, chars10, off);\n+            off += 9; \/\/ disable auto vector\n+        }\n+        BH.consume(off);\n+    }\n+\n+    \/**\n+     * Test the performance of array set 7 constant char, used as a benchmark for comparison with other str7 Benchmarks\n+     *\/\n+    @Benchmark\n+    public void str7Utf16ArraySetConst(Blackhole BH) {\n+        int off = 0;\n+        for (int i = 0; i < NUMBERS; i++) {\n+            chars10[off    ] = (char) STR_7_BYTES_LATIN1_BYTE_0;\n+            chars10[off + 1] = (char) STR_7_BYTES_LATIN1_BYTE_1;\n+            chars10[off + 2] = (char) STR_7_BYTES_LATIN1_BYTE_2;\n+            chars10[off + 3] = (char) STR_7_BYTES_LATIN1_BYTE_3;\n+            chars10[off + 4] = (char) STR_7_BYTES_LATIN1_BYTE_4;\n+            chars10[off + 5] = (char) STR_7_BYTES_LATIN1_BYTE_5;\n+            chars10[off + 6] = (char) STR_7_BYTES_LATIN1_BYTE_6;\n+            off += 9; \/\/ disable auto vector\n@@ -816,4 +937,4 @@\n-            UNSAFE.putLong(bytes14, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, STR_7_BYTES_UTF16_LONG);\n-            UNSAFE.putInt(bytes14, Unsafe.ARRAY_BYTE_BASE_OFFSET + off + 8, STR_7_BYTES_UTF16_INT);\n-            UNSAFE.putShort(bytes14, Unsafe.ARRAY_BYTE_BASE_OFFSET + off + 12, STR_7_BYTES_UTF16_SHORT);\n-            off += 14;\n+            UNSAFE.putLong(bytes16, Unsafe.ARRAY_BYTE_BASE_OFFSET + off, STR_7_BYTES_UTF16_LONG);\n+            UNSAFE.putInt(bytes16, Unsafe.ARRAY_BYTE_BASE_OFFSET + off + 8, STR_7_BYTES_UTF16_INT);\n+            UNSAFE.putShort(bytes16, Unsafe.ARRAY_BYTE_BASE_OFFSET + off + 12, STR_7_BYTES_UTF16_SHORT);\n+            off += 15; \/\/ disable auto vector\n@@ -831,2 +952,2 @@\n-            System.arraycopy(STR_7_BYTES_UTF16, 0, bytes14, off, 14);\n-            off += 14;\n+            System.arraycopy(STR_7_BYTES_UTF16, 0, bytes16, off, 14);\n+            off += 15; \/\/ disable auto vector\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/MergeStoreBench.java","additions":155,"deletions":34,"binary":false,"changes":189,"status":"modified"}]}