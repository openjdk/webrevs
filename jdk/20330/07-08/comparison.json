{"files":[{"patch":"@@ -38,2 +38,2 @@\n-                                               const RegionData& metadata, bool copy_flag) {\n-  assert(!copy_flag || metadata.flag == mtNone,\n+                                               const RegionData& metadata, bool use_flag_inplace) {\n+  assert(!use_flag_inplace || metadata.flag == mtNone,\n@@ -61,2 +61,2 @@\n-    assert(!copy_flag, \"Cannot copy the flag if no pre-existing flag exists. From: \" PTR_FORMAT \" To: \" PTR_FORMAT, A, B);\n-    if (copy_flag) {\n+    assert(!use_flag_inplace, \"Cannot copy the flag if no pre-existing flag exists. From: \" PTR_FORMAT \" To: \" PTR_FORMAT, A, B);\n+    if (use_flag_inplace) {\n@@ -76,1 +76,1 @@\n-    if (copy_flag) {\n+    if (use_flag_inplace) {\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-  SummaryDiff register_mapping(position A, position B, StateType state, const RegionData& metadata, bool copy_flag = false);\n+  SummaryDiff register_mapping(position A, position B, StateType state, const RegionData& metadata, bool use_flag_inplace = false);\n@@ -182,2 +182,2 @@\n-  SummaryDiff commit_mapping(position from, position sz, const RegionData& metadata, bool copy_flag = false) {\n-    return register_mapping(from, from + sz, StateType::Committed, metadata, copy_flag);\n+  SummaryDiff commit_mapping(position from, position sz, const RegionData& metadata, bool use_flag_inplace = false) {\n+    return register_mapping(from, from + sz, StateType::Committed, metadata, use_flag_inplace);\n@@ -187,1 +187,1 @@\n-    return register_mapping(from, from + sz, StateType::Committed, metadata, true);\n+    return register_mapping(from, from + sz, StateType::Reserved, metadata, true);\n","filename":"src\/hotspot\/share\/nmt\/vmatree.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-TEST_VM_F(NMTVMATreeTest, CopyFlag) {\n+TEST_VM_F(NMTVMATreeTest, UseFlagInplace) {\n@@ -193,0 +193,3 @@\n+      if (node->key() != 20 && node->key() != 40) {\n+        EXPECT_EQ(VMATree::StateType::Reserved, node->val().out.type());\n+      }\n","filename":"test\/hotspot\/gtest\/nmt\/test_vmatree.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}