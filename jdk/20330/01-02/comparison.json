{"files":[{"patch":"@@ -175,2 +175,2 @@\n-  SummaryDiff reserve_mapping(position from, position sz, const RegionData& metadata, bool copy_flag = false) {\n-    return register_mapping(from, from + sz, StateType::Reserved, metadata, copy_flag);\n+  SummaryDiff reserve_mapping(position from, position sz, const RegionData& metadata) {\n+    return register_mapping(from, from + sz, StateType::Reserved, metadata, false);\n","filename":"src\/hotspot\/share\/nmt\/vmatree.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -172,13 +172,28 @@\n-    Tree tree;\n-    VMATree::RegionData rd1{ si[0], mtTest };\n-    VMATree::RegionData rd2{ si[1], mtNMT };\n-\n-    tree.reserve_mapping(0, 100, rd1);\n-    tree.commit_mapping(20, 50, rd2, true); \/\/ mtTest flag is to be copied to new nodes, even if it is given as mtNMT.\n-    tree.uncommit_mapping(30, 10, rd2);\/\/ same here.\n-    tree.visit_in_order([&](Node* node) {\n-      if ((size_t)node->key() != 100) {\n-        EXPECT_EQ(node->val().out.flag(), mtTest) << \"failed at: \" << node->key();\n-      }\n-    });\n-\n+    {\n+      Tree tree;\n+      VMATree::RegionData rd1{ si[0], mtTest };\n+      VMATree::RegionData rd2{ si[1], mtNMT };\n+\n+      tree.reserve_mapping(0, 100, rd1);\n+      tree.commit_mapping(20, 50, rd2, true); \/\/ mtTest flag is to be copied to new nodes, even if it is given as mtNMT.\n+      tree.uncommit_mapping(30, 10, rd2);\/\/ same here.\n+      tree.visit_in_order([&](Node* node) {\n+        if ((size_t)node->key() != 100) {\n+          EXPECT_EQ(node->val().out.flag(), mtTest) << \"failed at: \" << node->key();\n+        }\n+      });\n+    }\n+    {\n+      Tree tree;\n+      VMATree::RegionData rd1{ si[0], mtTest };\n+      VMATree::RegionData rd2{ si[1], mtNMT };\n+\n+      tree.reserve_mapping(0, 10, rd1);\n+      tree.reserve_mapping(10000, 10, rd2);\n+      tree.visit_in_order([&](Node* node) {\n+        if ((size_t)node->key() == 0    ) { EXPECT_EQ(node->val().out.flag(), mtTest) << \"failed at: \" << node->key(); }\n+        if ((size_t)node->key() == 10   ) { EXPECT_EQ(node->val().in.flag(), mtTest) << \"failed at: \" << node->key(); }\n+        if ((size_t)node->key() == 10000) { EXPECT_EQ(node->val().out.flag(), mtNMT) << \"failed at: \" << node->key(); }\n+        if ((size_t)node->key() == 10010) { EXPECT_EQ(node->val().in.flag(), mtNMT) << \"failed at: \" << node->key(); }\n+      });\n+    }\n","filename":"test\/hotspot\/gtest\/nmt\/test_vmatree.cpp","additions":28,"deletions":13,"binary":false,"changes":41,"status":"modified"}]}