{"files":[{"patch":"@@ -96,2 +96,2 @@\n-                awaitPoolSize(bean, ps -> ps >= parallelism, \">= \" + parallelism);\n-                awaitMountedVirtualThreadCount(bean, c -> c >= parallelism, \">= \" + parallelism);\n+                awaitPoolSizeGte(bean, parallelism);\n+                awaitMountedVirtualThreadCountGte(bean, parallelism);\n@@ -106,2 +106,2 @@\n-                    awaitPoolSize(bean, ps -> ps >= newParallelism, \">= \" + newParallelism);\n-                    awaitMountedVirtualThreadCount(bean, c -> c >= newParallelism, \">= \" + newParallelism);\n+                    awaitPoolSizeGte(bean, newParallelism);\n+                    awaitMountedVirtualThreadCountGte(bean, newParallelism);\n@@ -148,1 +148,7 @@\n-                awaitMountedVirtualThreadCount(bean, c -> c >= highParallelism, \">= \" + highParallelism);\n+\n+                \/\/ mounted virtual thread count should increase to highParallelism.\n+                \/\/ Sample the count at highParallelism a few times.\n+                for (int i = 0; i < 5; i++) {\n+                    Thread.sleep(100);\n+                    awaitMountedVirtualThreadCountEq(bean, highParallelism);\n+                }\n@@ -154,0 +160,3 @@\n+\n+                \/\/ mounted virtual thread count should reduce to lowParallelism or less.\n+                \/\/ Sample the count at lowParallelism or less a few times.\n@@ -156,1 +165,1 @@\n-                    awaitMountedVirtualThreadCount(bean, c -> c <= lowParallelism, \"<= \" + lowParallelism);\n+                    awaitMountedVirtualThreadCountLte(bean, lowParallelism);\n@@ -159,3 +168,1 @@\n-                \/\/ increase workload. The mounted virtual thread count should not exceed\n-                \/\/ lowParallelism. Use awaitMountedVirtualThreadCount as the count may\n-                \/\/ need to be sampled several times due to over estimation.\n+                \/\/ increase workload\n@@ -163,0 +170,3 @@\n+\n+                \/\/ mounted virtual thread count should not exceed lowParallelism.\n+                \/\/ Sample the count at lowParallelism a few times.\n@@ -165,1 +175,1 @@\n-                    awaitMountedVirtualThreadCount(bean, c -> c == lowParallelism, \"== \" + lowParallelism);\n+                    awaitMountedVirtualThreadCountEq(bean, lowParallelism);\n@@ -222,1 +232,1 @@\n-                awaitMountedVirtualThreadCount(bean, c -> c >= parallelism, \">= \" + parallelism);\n+                awaitMountedVirtualThreadCountGte(bean, parallelism);\n@@ -236,1 +246,32 @@\n-     * Waits until evaluating the given predicte with the pool size is true.\n+     * Waits for pool size >= target to be true.\n+     *\/\n+    void awaitPoolSizeGte(VirtualThreadSchedulerMXBean bean, int target) throws InterruptedException {\n+        awaitPoolSize(bean, ps -> ps >= target, \">= \" + target);\n+    }\n+\n+    \/**\n+     * Waits for the mounted virtual thread count >= target to be true.\n+     *\/\n+    void awaitMountedVirtualThreadCountGte(VirtualThreadSchedulerMXBean bean,\n+                                           long target) throws InterruptedException {\n+        awaitMountedVirtualThreadCount(bean, c -> c >= target, \">= \" + target);\n+    }\n+\n+    \/**\n+     * Waits for the mounted virtual thread count <= target to be true.\n+     *\/\n+    void awaitMountedVirtualThreadCountLte(VirtualThreadSchedulerMXBean bean,\n+                                           long target) throws InterruptedException {\n+        awaitMountedVirtualThreadCount(bean, c -> c <= target, \"<= \" + target);\n+    }\n+\n+    \/**\n+     * Waits for the mounted virtual thread count == target to be true.\n+     *\/\n+    void awaitMountedVirtualThreadCountEq(VirtualThreadSchedulerMXBean bean,\n+                                          long target) throws InterruptedException {\n+        awaitMountedVirtualThreadCount(bean, c -> c == target, \"== \" + target);\n+    }\n+\n+    \/**\n+     * Waits until evaluating the given predicte on the pool size is true.\n@@ -253,1 +294,1 @@\n-     * Waits until evaluating the given predicte with the mounted thread count is true.\n+     * Waits until evaluating the given predicte on the mounted thread count is true.\n","filename":"test\/jdk\/jdk\/management\/VirtualThreadSchedulerMXBean\/VirtualThreadSchedulerMXBeanTest.java","additions":54,"deletions":13,"binary":false,"changes":67,"status":"modified"}]}