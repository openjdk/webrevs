{"files":[{"patch":"@@ -45,1 +45,1 @@\n-    private final ClassDesc element;\n+    private final ClassDesc elementType;\n@@ -64,2 +64,2 @@\n-    public static ArrayClassDescImpl ofValidated(ClassDesc element, int rank) {\n-        assert !element.isArray() && element != CD_void;\n+    public static ArrayClassDescImpl ofValidated(ClassDesc elementType, int rank) {\n+        assert !elementType.isArray() && elementType != CD_void;\n@@ -68,1 +68,1 @@\n-        return new ArrayClassDescImpl(element, rank);\n+        return new ArrayClassDescImpl(elementType, rank);\n@@ -71,2 +71,2 @@\n-    private ArrayClassDescImpl(ClassDesc element, int rank) {\n-        this.element = element;\n+    private ArrayClassDescImpl(ClassDesc elementType, int rank) {\n+        this.elementType = elementType;\n@@ -78,5 +78,3 @@\n-        if (rank == MAX_ARRAY_TYPE_DESC_DIMENSIONS)\n-            throw new IllegalStateException(\n-                \"Cannot create an array type descriptor with more than \"\n-                        + MAX_ARRAY_TYPE_DESC_DIMENSIONS + \" dimensions\");\n-        return new ArrayClassDescImpl(element, rank + 1);\n+        int rank = this.rank + 1;\n+        ConstantUtils.validateMaxArrayDepth(rank, false);\n+        return new ArrayClassDescImpl(elementType, rank);\n@@ -87,3 +85,1 @@\n-        if (rank <= 0) {\n-            throw new IllegalArgumentException(\"rank \" + rank + \" is not a positive value\");\n-        }\n+        ConstantUtils.ensureRankPositive(rank);\n@@ -92,1 +88,1 @@\n-        return new ArrayClassDescImpl(element, rank);\n+        return new ArrayClassDescImpl(elementType, rank);\n@@ -102,1 +98,1 @@\n-        return rank == 1 ? element : new ArrayClassDescImpl(element, rank - 1);\n+        return rank == 1 ? elementType : new ArrayClassDescImpl(elementType, rank - 1);\n@@ -120,1 +116,1 @@\n-        var componentDesc = element.descriptorString();\n+        var componentDesc = elementType.descriptorString();\n@@ -129,1 +125,1 @@\n-        if (element.isPrimitive()) {\n+        if (elementType.isPrimitive()) {\n@@ -133,1 +129,1 @@\n-        Class<?> clazz = element.resolveConstantDesc(lookup);\n+        Class<?> clazz = elementType.resolveConstantDesc(lookup);\n@@ -143,1 +139,1 @@\n-            return element.equals(constant.element) && rank == constant.rank;\n+            return elementType.equals(constant.elementType) && rank == constant.rank;\n@@ -155,1 +151,1 @@\n-        return String.format(\"ArrayClassDesc[%s, %d]\", element.displayName(), rank);\n+        return String.format(\"ArrayClassDesc[%s, %d]\", elementType.displayName(), rank);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/constant\/ArrayClassDescImpl.java","additions":17,"deletions":21,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -305,0 +305,5 @@\n+        ensureRankPositive(rank);\n+        validateMaxArrayDepth(rank, true);\n+    }\n+\n+    public static void ensureRankPositive(int rank) {\n@@ -308,0 +313,3 @@\n+    }\n+\n+    public static void validateMaxArrayDepth(int rank, boolean iae) {\n@@ -309,1 +317,1 @@\n-            throw new IllegalArgumentException(\"rank: \" + rank +\n+            String message = \"rank: \" + rank +\n@@ -311,1 +319,2 @@\n-                    MAX_ARRAY_TYPE_DESC_DIMENSIONS);\n+                    MAX_ARRAY_TYPE_DESC_DIMENSIONS;\n+            throw iae ? new IllegalArgumentException(message) : new IllegalStateException(message);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/constant\/ConstantUtils.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}