{"files":[{"patch":"@@ -34,0 +34,1 @@\n+#include \"sanitizers\/address.hpp\"\n@@ -288,1 +289,3 @@\n-  \/\/ Test accessing the committed area.\n+  \/\/ Test accessing the committed area. But not for ASAN. We don't know which portions\n+  \/\/ of the chunk are still poisoned.\n+  const bool check_committed = NOT_ASAN(true) ASAN_ONLY(false);\n@@ -290,1 +293,1 @@\n-    if (_committed_words > 0) {\n+    if (check_committed && _committed_words > 0) {\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metachunk.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -436,0 +436,3 @@\n+  \/\/ Down here, from ASAN's view, this memory may be poisoned, since we only unpoison\n+  \/\/ way up at the ChunkManager level.\n+  const bool check_committed = NOT_ASAN(true) ASAN_ONLY(false);\n@@ -437,3 +440,5 @@\n-    for (MetaWord* p = base(); p < base() + used_words(); p += os::vm_page_size()) {\n-      if (_commit_mask.is_committed_address(p)) {\n-        test_access += *(uint*)p;\n+    if (check_committed) {\n+      for (MetaWord* p = base(); p < base() + used_words(); p += os::vm_page_size()) {\n+        if (_commit_mask.is_committed_address(p)) {\n+          test_access += *(uint*)p;\n+        }\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceNode.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -58,0 +58,7 @@\n+#define INCLUDE_ASAN 1\n+#define ASAN_ONLY(code) code\n+#define NOT_ASAN(code)\n+#else\n+#define INCLUDE_ASAN 0\n+#define ASAN_ONLY(code)\n+#define NOT_ASAN(code)  code\n@@ -60,1 +67,0 @@\n-#else\n","filename":"src\/hotspot\/share\/sanitizers\/address.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  const char* const _locale;\n+  char* const _locale;\n@@ -38,1 +38,1 @@\n-  DirectivesParserTest() : _locale(setlocale(LC_NUMERIC, nullptr)) {\n+  DirectivesParserTest() : _locale(os::strdup(setlocale(LC_NUMERIC, nullptr), mtTest)) {\n@@ -43,0 +43,1 @@\n+    os::free(_locale);\n","filename":"test\/hotspot\/gtest\/compiler\/test_directivesParser.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -159,0 +159,5 @@\n+      \/\/ At the VirtualSpaceNode level, all memory is still poisoned.\n+      \/\/ Since we bypass the normal way of allocating chunks (ChunkManager::get_chunk), we\n+      \/\/ need to unpoison this chunk.\n+      ASAN_UNPOISON_MEMORY_REGION(c->base(), c->committed_words() * BytesPerWord);\n+\n","filename":"test\/hotspot\/gtest\/metaspace\/test_virtualspacenode.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}