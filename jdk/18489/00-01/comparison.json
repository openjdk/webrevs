{"files":[{"patch":"@@ -3910,0 +3910,20 @@\n+\/\/ This optimization looks for patterns similar to:\n+\/\/\n+\/\/    int a = init2;\n+\/\/    for (int i = init; i < limit; i += stride) {\n+\/\/      a += stride2;\n+\/\/    }\n+\/\/\n+\/\/ and transforms it to:\n+\/\/\n+\/\/    int a = init2\n+\/\/    for (int i = init; i < limit; i += stride) {\n+\/\/      a = init2 + (i - init) * (stride2 \/ stride)\n+\/\/    }\n+\/\/\n+\/\/ so that the loop can be eliminated. Notice that the above is equivalently expressed as\n+\/\/\n+\/\/    (phi * stride_con2 \/ stride_con) + (init2 - (init * stride_con2 \/ stride_con))\n+\/\/\n+\/\/ which corresponds to the structure of transformed subgraph below.\n+\/\/\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"}]}