{"files":[{"patch":"@@ -3934,4 +3934,5 @@\n-\/\/ so that the loop can be eliminated given that `stride_con2 \/ stride_con` is\n-\/\/ exact (i.e., no remainder). Checks are in place to only perform this\n-\/\/ optimization if such a division is exact. The example will be transformed\n-\/\/ into its semantic equivalence:\n+\/\/ Such transformation introduces more optimization opportunities. In this \n+\/\/ particular example, the loop can be eliminated entirely given that \n+\/\/ `stride_con2 \/ stride_con` is exact  (i.e., no remainder). Checks are \n+\/\/ in place to only perform this optimization if such a division is exact. \n+\/\/ This example will be transformed into its semantic equivalence:\n@@ -4002,3 +4003,1 @@\n-    if (((stride_con2_bt == T_INT && stride_con2 == min_jint) ||\n-        (stride_con2_bt == T_LONG && stride_con2 == min_jlong)) &&\n-        stride_con == -1) {\n+    if (stride_con2 == min_signed_integer(stride_con2_bt) && stride_con == -1) {\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"}]}