{"files":[{"patch":"@@ -39,0 +39,1 @@\n+import javax.lang.model.element.ModuleElement;\n@@ -598,0 +599,31 @@\n+\n+    \/**\n+     * Returns an id for a snippet.\n+     *\n+     * @param e the element in whose documentation the snippet appears\n+     * @param snippetIds the set of snippet ids already generated\n+     * @return a unique id for the snippet\n+     *\/\n+    public HtmlId forSnippet(Element e, Set<String> snippetIds) {\n+        String id = \"snippet-\";\n+        ElementKind kind = e.getKind();\n+        if (kind == ElementKind.PACKAGE) {\n+            id += forPackage((PackageElement) e).name();\n+        } else if (kind.isDeclaredType()) {\n+            id += forClass((TypeElement) e).name();\n+        } else if (kind.isExecutable()) {\n+            id += forMember((ExecutableElement) e).getFirst().name();\n+        } else if (kind.isField()) {\n+            id += forMember((VariableElement) e).name();\n+        } else if (kind == ElementKind.MODULE) {\n+            id += ((ModuleElement) e).getQualifiedName();\n+        } else {\n+            \/\/ while utterly unexpected, we shouldn't fail\n+            id += \"unknown-element\";\n+        }\n+        int counter = 1;\n+        while (!snippetIds.add(id + counter)) {\n+            counter++;\n+        }\n+        return HtmlId.of(id + counter);\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIds.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,0 +151,2 @@\n+        } else {\n+            pre.put(HtmlAttr.ID, config.htmlIds.forSnippet(element, ids).name());\n@@ -235,0 +237,2 @@\n+    private final Set<String> ids = new HashSet<>();\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SnippetTaglet.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-                    <pre class=\"snippet\"><code>   this is snippet_standalone\n+                    <pre class=\"snippet\" id=\"snippet-snippet_standalone()1\"><code>   this is snippet_standalone\n@@ -134,1 +134,1 @@\n-                    <pre class=\"snippet\"><code>   this is a snippet_wrapped\n+                    <pre class=\"snippet\" id=\"snippet-snippet_wrapped()1\"><code>   this is a snippet_wrapped\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMarkdown\/TestMarkdownTaglets.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -182,1 +182,1 @@\n-                    t.expectedOutput(), Optional.of(\"properties\")));\n+                    t.expectedOutput(), Optional.of(\"properties\"), Optional.of(\"snippet-case\" + index + \"()2\")));\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestLangProperties.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,1 @@\n+import java.util.Optional;\n@@ -368,1 +369,1 @@\n-                        <\/div>\"\"\".formatted(index, getSnippetHtmlRepresentation(\"A.html\", t.expectedOutput()));\n+                        <\/div>\"\"\".formatted(index, getSnippetHtmlRepresentation(\"A.html\", t.expectedOutput(), Optional.empty(), Optional.of(\"snippet-case\" + index + \"()2\")));\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -223,0 +223,1 @@\n+            Optional<String> id = (attr.id() != null ? Optional.of(attr.id()) : Optional.of(\"snippet-case\" + j + \"()1\"));\n@@ -224,1 +225,1 @@\n-                    Optional.ofNullable(attr.lang()), Optional.ofNullable(attr.id()));\n+                    Optional.ofNullable(attr.lang()), id);\n@@ -882,1 +883,2 @@\n-                        %s\"\"\".formatted(id, getSnippetHtmlRepresentation(\"pkg\/A.html\", t.expectedOutput())));\n+                        %s\"\"\".formatted(id, getSnippetHtmlRepresentation(\"pkg\/A.html\", t.expectedOutput(), Optional.empty(),\n+                                Optional.of(\"snippet-case\" + id + \"()2\"))));\n@@ -974,1 +976,2 @@\n-                        %s\"\"\".formatted(index, getSnippetHtmlRepresentation(\"pkg\/A.html\", expectedOutput)));\n+                        %s\"\"\".formatted(index, getSnippetHtmlRepresentation(\"pkg\/A.html\", expectedOutput, Optional.empty(),\n+                                Optional.of(\"snippet-case\" + index + \"()2\"))));\n@@ -1552,1 +1555,2 @@\n-                        %s\"\"\".formatted(index, getSnippetHtmlRepresentation(\"pkg\/A.html\", t.expectedOutput())));\n+                        %s\"\"\".formatted(index, getSnippetHtmlRepresentation(\"pkg\/A.html\", t.expectedOutput(), Optional.empty(),\n+                                Optional.of(\"snippet-case\" + index + \"()2\"))));\n@@ -1665,1 +1669,2 @@\n-                    \"\"\" + getSnippetHtmlRepresentation(\"pkg\/A.html\", \"\"));\n+                    \"\"\" + getSnippetHtmlRepresentation(\"pkg\/A.html\", \"\", Optional.empty(),\n+                            Optional.of(\"snippet-case0()2\")));\n@@ -1670,1 +1675,2 @@\n-                    \"\"\" + getSnippetHtmlRepresentation(\"pkg\/A.html\", \"\"));\n+                    \"\"\" + getSnippetHtmlRepresentation(\"pkg\/A.html\", \"\", Optional.empty(),\n+                            Optional.of(\"snippet-case1()2\")));\n@@ -1768,1 +1774,2 @@\n-                        \"\"\".formatted(j, getSnippetHtmlRepresentation(\"pkg\/A.html\", \"2\")));\n+                        \"\"\".formatted(j, getSnippetHtmlRepresentation(\"pkg\/A.html\", \"2\", Optional.empty(),\n+                                Optional.of(\"snippet-case\" + j + \"()2\"))));\n@@ -1847,1 +1854,2 @@\n-                        %s\"\"\".formatted(index, getSnippetHtmlRepresentation(\"pkg\/A.html\", t.expectedOutput())));\n+                        %s\"\"\".formatted(index, getSnippetHtmlRepresentation(\"pkg\/A.html\", t.expectedOutput(), Optional.empty(),\n+                                Optional.of(\"snippet-case\" + index + \"()2\"))));\n@@ -2305,1 +2313,2 @@\n-                        %s\"\"\".formatted(index, getSnippetHtmlRepresentation(\"pkg\/A.html\", t.expectedOutput())));\n+                        %s\"\"\".formatted(index, getSnippetHtmlRepresentation(\"pkg\/A.html\", t.expectedOutput(), Optional.empty(),\n+                                Optional.of(\"snippet-case\" + index + \"()2\"))));\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetTag.java","additions":19,"deletions":10,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,1 @@\n-                        \"public class S { }\", Optional.of(\"java\"))));\n+                        \"public class S { }\", Optional.of(\"java\"), Optional.of(\"snippet-C1\"))));\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetUnnamedPackage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}