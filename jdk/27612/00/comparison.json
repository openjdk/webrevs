{"files":[{"patch":"@@ -31,0 +31,1 @@\n+#include \"gc\/shenandoah\/shenandoahLock.hpp\"\n@@ -33,0 +34,3 @@\n+typedef ShenandoahLock    ShenandoahRebuildLock;\n+typedef ShenandoahLocker  ShenandoahRebuildLocker;\n+\n@@ -237,1 +241,1 @@\n-  inline size_t available_in_not_locked(ShenandoahFreeSetPartitionId which_partition) const {\n+  inline size_t available_in_locked_for_rebuild(ShenandoahFreeSetPartitionId which_partition) const {\n@@ -319,0 +323,3 @@\n+  \/\/ This locks the rebuild process (in combination with the global heap lock)\n+  ShenandoahRebuildLock _lock;\n+\n@@ -418,0 +425,5 @@\n+\n+  ShenandoahRebuildLock* lock() {\n+    return &_lock;\n+  }\n+\n@@ -483,1 +495,4 @@\n-  inline size_t available() const { return _partitions.available_in_not_locked(ShenandoahFreeSetPartitionId::Mutator); }\n+  inline size_t available() {\n+    ShenandoahRebuildLocker locker(lock());\n+    return _partitions.available_in_locked_for_rebuild(ShenandoahFreeSetPartitionId::Mutator);\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1156,4 +1156,4 @@\n-    size_t young_cset_regions, old_cset_regions;\n-    size_t first_old, last_old, num_old;\n-    heap->free_set()->prepare_to_rebuild(young_cset_regions, old_cset_regions, first_old, last_old, num_old);\n-\n+    size_t young_cset_regions, old_cset_regions, first_old, last_old, num_old;\n+    ShenandoahFreeSet* free_set = heap->free_set();\n+    ShenandoahRebuildLocker rebuild_locker(free_set->lock());\n+    free_set->prepare_to_rebuild(young_cset_regions, old_cset_regions, first_old, last_old, num_old);\n@@ -1166,1 +1166,1 @@\n-    heap->free_set()->finish_rebuild(young_cset_regions, old_cset_regions, num_old);\n+    free_set->finish_rebuild(young_cset_regions, old_cset_regions, num_old);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -748,0 +748,1 @@\n+    ShenandoahFreeSet* free_set = heap->free_set();\n@@ -749,0 +750,1 @@\n+    ShenandoahRebuildLocker rebuild_locker(free_set->lock());\n@@ -753,1 +755,1 @@\n-    heap->free_set()->prepare_to_rebuild(young_cset_regions, old_cset_regions, first_old, last_old, num_old);\n+    free_set->prepare_to_rebuild(young_cset_regions, old_cset_regions, first_old, last_old, num_old);\n@@ -755,1 +757,1 @@\n-    heap->free_set()->finish_rebuild(young_cset_regions, old_cset_regions, num_old, true);\n+    free_set->finish_rebuild(young_cset_regions, old_cset_regions, num_old, true);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -427,0 +427,1 @@\n+    ShenandoahRebuildLocker rebuild_locker(_free_set->lock());\n@@ -2578,0 +2579,1 @@\n+  ShenandoahRebuildLocker rebuild_locker(_free_set->lock());\n@@ -2603,2 +2605,2 @@\n-    \/\/ regions in place when many of these regular regions have an abundant amount of available memory within them.  Fragmentation\n-    \/\/ will decrease as promote-by-copy consumes the available memory within these partially consumed regions.\n+    \/\/ regions in place when many of these regular regions have an abundant amount of available memory within them.\n+    \/\/ Fragmentation will decrease as promote-by-copy consumes the available memory within these partially consumed regions.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -512,0 +512,1 @@\n+    ShenandoahFreeSet* free_set = heap->free_set();\n@@ -513,6 +514,6 @@\n-    size_t cset_young_regions, cset_old_regions;\n-    size_t first_old, last_old, num_old;\n-    heap->free_set()->prepare_to_rebuild(cset_young_regions, cset_old_regions, first_old, last_old, num_old);\n-    \/\/ This is just old-gen completion.  No future budgeting required here.  The only reason to rebuild the freeset here\n-    \/\/ is in case there was any immediate old garbage identified.\n-    heap->free_set()->finish_rebuild(cset_young_regions, cset_old_regions, num_old);\n+    ShenandoahRebuildLocker rebuild_locker(free_set->lock());\n+    size_t cset_young_regions, cset_old_regions, first_old, last_old, num_old;\n+    free_set->prepare_to_rebuild(cset_young_regions, cset_old_regions, first_old, last_old, num_old);\n+    \/\/ This is completion of old-gen marking.  We rebuild in order to reclaim immediate garbage and to\n+    \/\/ prepare for subsequent mixed evacuations.\n+    free_set->finish_rebuild(cset_young_regions, cset_old_regions, num_old);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}