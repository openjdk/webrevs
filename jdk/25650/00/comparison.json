{"files":[{"patch":"@@ -802,0 +802,1 @@\n+        verifyHeader(data);\n@@ -804,4 +805,0 @@\n-            byte[] theHeader = new byte[HEADER_SIZE];\n-            System.arraycopy(data, 0, theHeader, 0, HEADER_SIZE);\n-            verifyHeader(theHeader);\n-\n@@ -814,3 +811,2 @@\n-            if (getColorSpaceType(data) == ColorSpace.TYPE_GRAY\n-                    && getData(p, icSigMediaWhitePointTag) != null\n-                    && getData(p, icSigGrayTRCTag) != null) {\n+            int type = getColorSpaceType(data);\n+            if (type == ColorSpace.TYPE_GRAY) {\n@@ -818,9 +814,1 @@\n-            }\n-            if (getColorSpaceType(data) == ColorSpace.TYPE_RGB\n-                    && getData(p, icSigMediaWhitePointTag) != null\n-                    && getData(p, icSigRedColorantTag) != null\n-                    && getData(p, icSigGreenColorantTag) != null\n-                    && getData(p, icSigBlueColorantTag) != null\n-                    && getData(p, icSigRedTRCTag) != null\n-                    && getData(p, icSigGreenTRCTag) != null\n-                    && getData(p, icSigBlueTRCTag) != null) {\n+            } else if (type == ColorSpace.TYPE_RGB) {\n@@ -972,1 +960,1 @@\n-        return getData(icSigHead)[8];\n+        return getData(cmmProfile(), icSigHead)[8];\n@@ -981,1 +969,1 @@\n-        return getData(icSigHead)[9];\n+        return getData(cmmProfile(), icSigHead)[9];\n@@ -994,1 +982,1 @@\n-        byte[] theHeader = getData(icSigHead);\n+        byte[] theHeader = getData(cmmProfile(), icSigHead);\n@@ -1054,1 +1042,1 @@\n-        byte[] theHeader = getData(icSigHead);\n+        byte[] theHeader = getData(cmmProfile(), icSigHead);\n@@ -1123,5 +1111,0 @@\n-        byte[] t = getData(cmmProfile(), tagSignature);\n-        return t != null ? t.clone() : null;\n-    }\n-\n-    private static byte[] getData(Profile p, int tagSignature) {\n@@ -1129,1 +1112,1 @@\n-            return CMSManager.getModule().getTagData(p, tagSignature);\n+            return getData(cmmProfile(), tagSignature).clone();\n@@ -1135,0 +1118,14 @@\n+    \/**\n+     * Returns a particular tagged data element from the profile as a non-null\n+     * byte array. The returned byte array is not cloned. It must not be exposed\n+     * to or used by public APIs. It is intended strictly for internal use only.\n+     *\n+     * @param  p the CMM profile from which to retrieve the tag data\n+     * @param  tagSignature the ICC tag signature for the data to retrieve\n+     * @return a non-null byte array containing the tag data\n+     * @throws CMMException if the specified tag doesn't exist\n+     *\/\n+    static byte[] getData(Profile p, int tagSignature) {\n+        return CMSManager.getModule().getTagData(p, tagSignature);\n+    }\n+\n@@ -1215,1 +1212,1 @@\n-        byte[] theHeader = getData(icSigHead);\n+        byte[] theHeader = getData(cmmProfile(), icSigHead);\n@@ -1254,1 +1251,1 @@\n-        byte[] theData = getData(tagSignature);\n+        byte[] theData = getData(cmmProfile(), tagSignature);\n@@ -1278,1 +1275,1 @@\n-        byte[] theTRCData = getData(tagSignature);\n+        byte[] theTRCData = getData(cmmProfile(), tagSignature);\n@@ -1309,1 +1306,1 @@\n-        byte[] theTRCData = getData(tagSignature);\n+        byte[] theTRCData = getData(cmmProfile(), tagSignature);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_Profile.java","additions":27,"deletions":30,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,4 @@\n-     * Constructs a new {@code ICC_ProfileGray} from a CMM ID.\n+     * Constructs a new {@code ICC_ProfileGray} from the specified CMM profile.\n+     *\n+     * @param  p the CMM profile used to create this ICC profile\n+     * @throws CMMException if the required tags are missing\n@@ -81,0 +84,2 @@\n+        getData(p, icSigMediaWhitePointTag);\n+        getData(p, icSigGrayTRCTag);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_ProfileGray.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-     * Constructs an new {@code ICC_ProfileRGB} from a CMM ID.\n+     * Constructs a new {@code ICC_ProfileRGB} from the specified CMM profile.\n@@ -109,1 +109,2 @@\n-     * @param  p the CMM ID for the profile.\n+     * @param  p the CMM profile used to create this ICC profile\n+     * @throws CMMException if the required tags are missing\n@@ -113,0 +114,7 @@\n+        getData(p, icSigMediaWhitePointTag);\n+        getData(p, icSigRedColorantTag);\n+        getData(p, icSigGreenColorantTag);\n+        getData(p, icSigBlueColorantTag);\n+        getData(p, icSigRedTRCTag);\n+        getData(p, icSigGreenTRCTag);\n+        getData(p, icSigBlueTRCTag);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_ProfileRGB.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.color.ColorSpace;\n+import java.awt.color.ICC_Profile;\n+\n+\/**\n+ * @test\n+ * @bug 8358623\n+ * @summary Verifies ICC profile version of built-in color spaces\n+ *\/\n+public final class CheckVersions {\n+\n+    public static void main(String[] args) {\n+        test(ColorSpace.CS_CIEXYZ, 2, 3, 0);\n+        test(ColorSpace.CS_GRAY, 2, 3, 0);\n+        test(ColorSpace.CS_LINEAR_RGB, 2, 3, 0);\n+        test(ColorSpace.CS_PYCC, 4, 0, 0);\n+        test(ColorSpace.CS_sRGB, 2, 3, 0);\n+    }\n+\n+    private static void test(int cs, int expMajor, int expMinor, int expPatch) {\n+        ICC_Profile profile = ICC_Profile.getInstance(cs);\n+\n+        int major = profile.getMajorVersion();\n+        int minorRaw = profile.getMinorVersion();\n+        int minor = (minorRaw >> 4) & 0x0F;\n+        int patch = minorRaw & 0x0F;\n+\n+        if (major != expMajor || minor != expMinor || patch != expPatch) {\n+            System.err.println(\"Expected major: \" + expMajor);\n+            System.err.println(\"Expected minor: \" + expMinor);\n+            System.err.println(\"Expected patch: \" + expPatch);\n+\n+            System.err.println(\"Actual major: \" + major);\n+            System.err.println(\"Actual minor: \" + minor);\n+            System.err.println(\"Actual patch: \" + patch);\n+            throw new RuntimeException(\"Test failed for ColorSpace: \" + cs);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/ICC_Profile\/CheckVersions.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}