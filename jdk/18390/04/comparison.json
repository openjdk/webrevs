{"files":[{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4419914\n+ * @summary Tests that tab movement is correct in RTL component orientation.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4419914\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.ComponentOrientation;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import java.util.Locale;\n+\n+public class bug4419914 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+        1. You will see a frame with five buttons.\n+        2. Confirm that each button is placed as follows:\n+             NORTH\n+        END  CENTER  START\n+             SOUTH\n+        3. Press the \"NORTH\" button and confirm the button is focused.\n+        4. Press TAB repeatedly and confirm that the TAB focus moves from right to left.\n+             (NORTH - START - CENTER - END - SOUTH - NORTH - START - CENTER - ...)\n+\n+            If there's anything different from the above items, click Fail else click Pass.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"Tab movement Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows(12)\n+                .columns(42)\n+                .testUI(bug4419914::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4419914\");\n+        frame.setFocusCycleRoot(true);\n+        frame.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);\n+        frame.setLocale(Locale.ENGLISH);\n+\n+        frame.enableInputMethods(false);\n+        frame.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);\n+        frame.setLocale(Locale.ENGLISH);\n+        frame.setLayout(new BorderLayout());\n+        frame.add(new JButton(\"SOUTH\"), BorderLayout.SOUTH);\n+        frame.add(new JButton(\"CENTER\"), BorderLayout.CENTER);\n+        frame.add(new JButton(\"END\"), BorderLayout.LINE_END);\n+        frame.add(new JButton(\"START\"), BorderLayout.LINE_START);\n+        frame.add(new JButton(\"NORTH\"), BorderLayout.NORTH);\n+        frame.setSize(300, 150);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFrame\/bug4419914.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4210250\n+ * @summary Tests that PlainView repaints the necessary lines of text.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual PaintTest\n+ *\/\n+\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Rectangle;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+\n+public class PaintTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Click the paint button.\n+        If half of the second line is erased,\n+        that is you can only see the bottom half of the second line\n+        with the top half painted over in white, click fail, else click pass.\"\"\";\n+\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"PlainView Repaint Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows(7)\n+                .columns(35)\n+                .testUI(PaintTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"PaintTest\");\n+\n+        new PaintTest().create(frame.getContentPane());\n+        frame.pack();\n+        return frame;\n+    }\n+\n+\n+    void create(Container parent) {\n+        parent.setLayout(new FlowLayout());\n+\n+        final JTextArea ta = new JTextArea\n+            (\"A sample textarea\\nwith a couple of lines\\nof text\") {\n+                public Dimension getPreferredSize() {\n+                    Dimension size = super.getPreferredSize();\n+                    if (getFont() != null) {\n+                        size.height += getFontMetrics(getFont())\n+                                       .getHeight() \/ 2;\n+                    }\n+                    return size;\n+                }\n+            };\n+        JButton button = new JButton(\"paint\");\n+\n+        button.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent ae) {\n+                SwingUtilities.invokeLater(new Runnable() {\n+                    public void run() {\n+                        Rectangle taBounds = ta.getBounds();\n+                        int fontHeight =\n+                            ta.getFontMetrics(ta.getFont()).getHeight();\n+\n+                        taBounds.height = fontHeight + fontHeight \/ 2;\n+                        ta.repaint(taBounds);\n+                    }\n+                });\n+            }\n+        });\n+\n+        parent.add(new JScrollPane(ta));\n+        parent.add(button);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/PaintTest.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4148489\n+ * @summary Text gets deleted with negative values for setFirstLineIndent.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4148489\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextPane;\n+import javax.swing.UIManager;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.DefaultStyledDocument;\n+import javax.swing.text.JTextComponent;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.StyleContext;\n+import javax.swing.text.Style;\n+\n+public class bug4148489 {\n+\n+    static StyleContext sc;\n+    static DefaultStyledDocument doc;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Put the cursor at the beginning of the first text line and move the\n+        cursor to the right using arrow key.\n+        If the text is not corrupted then click Pass\n+        If the text disappear while cursor moves click Fail.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"Text traversal Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows(5)\n+                .columns(35)\n+                .testUI(bug4148489::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        try {\n+            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());\n+        } catch (Exception e) {\n+            System.err.println(\"Error loading L&F: \" + e);\n+        }\n+        JPanel testPanel = new JPanel();\n+        testPanel.setLayout(new BorderLayout());\n+        sc = new StyleContext();\n+        doc = new DefaultStyledDocument(sc);\n+\n+        setParagraph();\n+        JTextComponent editor = new JTextPane(doc);\n+        JScrollPane scroller = new JScrollPane();\n+        scroller.getViewport().add(editor);\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new BorderLayout());\n+        panel.add(\"Center\", scroller);\n+        testPanel.add(\"Center\", panel);\n+        JFrame frame = new JFrame(\"Styled Document\");\n+        frame.getContentPane().add(testPanel);\n+        frame.pack();\n+        return frame;\n+    }\n+\n+    static void setParagraph() {\n+        Style sty = sc.addStyle(\"normal\", sc.getStyle(StyleContext.DEFAULT_STYLE));\n+        \/\/here sets the negative value for setFirstLineIndent\n+        StyleConstants.setFirstLineIndent(sty, -50);\n+        StyleConstants.setLeftIndent(sty, 50);\n+        String data = \"Here I wrote some text for test. You can ignore this text because of it's a senseless text.\";\n+        try {\n+            Style s = null;\n+            doc.insertString(doc.getLength(), data, s);\n+            Style ls = sc.getStyle(\"normal\");\n+            doc.setLogicalStyle(doc.getLength() - 1, ls);\n+            doc.insertString(doc.getLength(), \"\\n\", null);\n+        } catch (BadLocationException e) {\n+            throw new RuntimeException(\"BadLocationException occures while calls insertString()...\", e);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/bug4148489.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4803145\n+ * @summary  Tests if bullets for HTML <ul> are on the correct side for Arabic and Hebrew in JEditorPane\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4803145\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.ComponentOrientation;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import javax.swing.JButton;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.text.html.HTMLEditorKit;\n+\n+public class bug4803145 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        A JEditorPane with some html list in Hebrew appears.\n+        The bullets should be on the left side of the list items.\n+        Press the \"switch text orientation\" button.\n+        After the text relayouts:\n+\n+            - If the bullets are to the right of the list items then test PASSED.\n+\n+            - If the bullets remained on the left side then test FAILED.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+         PassFailJFrame.builder()\n+                .title(\"JEditorPane Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows(10)\n+                .columns(30)\n+                .testUI(bug4803145::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+\n+        String text =\n+           \"<ul>\" +\n+             \"<li>&#1502;&#1489;&#1493;&#1488;\" +\n+             \"<li>&#1488;&#1495;&#1505;&#1493;&#1503;\" +\n+             \"<li>(new code) &#1492;&#1511;&#1493;&#1491; &#1492;&#1497;&#1513;&#1503; (Old Code)\" +\n+            \"<\/ul>\";\n+\n+        JFrame f = new JFrame(\"bug4803145\");\n+        JEditorPane jep = new JEditorPane();\n+        jep.setEditorKit(new HTMLEditorKit());\n+        jep.setEditable(false);\n+\n+        jep.setText(text);\n+\n+        f.setSize(500, 500);\n+        f.getContentPane().add(jep);\n+\n+        JButton switchButton = new JButton(\"switch text orientation\");\n+        switchButton.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                boolean isLeftToRight = jep.getComponentOrientation().isLeftToRight();\n+                jep.setComponentOrientation(isLeftToRight ? ComponentOrientation.RIGHT_TO_LEFT :\n+                                                            ComponentOrientation.LEFT_TO_RIGHT);\n+            }\n+        });\n+        f.getContentPane().add(switchButton, BorderLayout.SOUTH);\n+        f.pack();\n+        return f;\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/StyleSheet\/bug4803145.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"}]}