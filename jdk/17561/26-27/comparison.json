{"files":[{"patch":"@@ -37,0 +37,2 @@\n+static bool _success;\n+static size_t _assertion_failures;\n@@ -40,0 +42,1 @@\n+\n@@ -52,0 +55,2 @@\n+#define BitMapAssertEqual(a, b)  ASSERT_EQ((a), (b)); if ((a) != (b)) { _assertion_failures++; }\n+\n@@ -57,0 +62,2 @@\n+    _success = false;\n+    _assertion_failures = 0;\n@@ -59,1 +66,1 @@\n-    ASSERT_EQ(bm.number_of_bits(), size);\n+    BitMapAssertEqual(bm.number_of_bits(), size);\n@@ -72,1 +79,1 @@\n-      ASSERT_EQ(is_set, intended_value);\n+      BitMapAssertEqual(is_set, intended_value);\n@@ -91,1 +98,1 @@\n-        ASSERT_EQ(is_set, intended_value);\n+        BitMapAssertEqual(is_set, intended_value);\n@@ -100,1 +107,1 @@\n-      ASSERT_EQ(probe_point, next_expected_bit);\n+      BitMapAssertEqual(probe_point, next_expected_bit);\n@@ -104,1 +111,1 @@\n-    ASSERT_EQ(probe_point, size); \/\/ Verify that last failed search returns sentinel value: num bits in bit map\n+    BitMapAssertEqual(probe_point, size); \/\/ Verify that last failed search returns sentinel value: num bits in bit map\n@@ -115,1 +122,1 @@\n-        ASSERT_EQ(probe_point, boundary_idx);\n+        BitMapAssertEqual(probe_point, boundary_idx);\n@@ -118,1 +125,1 @@\n-        ASSERT_EQ(probe_point, next_expected_bit);\n+        BitMapAssertEqual(probe_point, next_expected_bit);\n@@ -125,1 +132,1 @@\n-      ASSERT_EQ(probe_point, boundary_idx);\n+      BitMapAssertEqual(probe_point, boundary_idx);\n@@ -133,1 +140,1 @@\n-      ASSERT_EQ(probe_point, next_expected_bit);\n+      BitMapAssertEqual(probe_point, next_expected_bit);\n@@ -137,1 +144,1 @@\n-    ASSERT_EQ(probe_point, -1); \/\/ Verify that last failed search returns sentinel value: -1\n+    BitMapAssertEqual(probe_point, (ssize_t) -1); \/\/ Verify that last failed search returns sentinel value: -1\n@@ -148,1 +155,1 @@\n-        ASSERT_EQ(probe_point, boundary_idx);\n+        BitMapAssertEqual(probe_point, boundary_idx);\n@@ -151,1 +158,1 @@\n-        ASSERT_EQ(probe_point, next_expected_bit);\n+        BitMapAssertEqual(probe_point, next_expected_bit);\n@@ -158,1 +165,1 @@\n-      ASSERT_EQ(probe_point, boundary_idx);\n+      BitMapAssertEqual(probe_point, boundary_idx);\n@@ -199,1 +206,1 @@\n-          ASSERT_EQ(next_expected_cluster, probe_point);\n+          BitMapAssertEqual(next_expected_cluster, probe_point);\n@@ -208,1 +215,1 @@\n-      ASSERT_EQ(probe_point, size);\n+      BitMapAssertEqual(probe_point, size);\n@@ -228,1 +235,1 @@\n-          ASSERT_EQ(next_expected_cluster, probe_point);\n+          BitMapAssertEqual(next_expected_cluster, probe_point);\n@@ -237,1 +244,1 @@\n-      ASSERT_EQ(probe_point, boundary_idx);\n+      BitMapAssertEqual(probe_point, boundary_idx);\n@@ -256,1 +263,1 @@\n-          ASSERT_EQ(next_expected_cluster, probe_point);\n+          BitMapAssertEqual(next_expected_cluster, probe_point);\n@@ -265,1 +272,1 @@\n-      ASSERT_EQ(probe_point, -1);\n+      BitMapAssertEqual(probe_point, (ssize_t) -1);\n@@ -285,1 +292,1 @@\n-          ASSERT_EQ(next_expected_cluster, probe_point);\n+          BitMapAssertEqual(next_expected_cluster, probe_point);\n@@ -294,1 +301,1 @@\n-      ASSERT_EQ(probe_point, boundary_idx);\n+      BitMapAssertEqual(probe_point, boundary_idx);\n@@ -299,1 +306,1 @@\n-    ASSERT_EQ(probe_point, size);  \/\/ Confirm: failed search returns sentinel: size\n+    BitMapAssertEqual(probe_point, size);  \/\/ Confirm: failed search returns sentinel: size\n@@ -302,1 +309,1 @@\n-    ASSERT_EQ(probe_point, -1);    \/\/ Confirm: failed search returns sentinel: -1\n+    BitMapAssertEqual(probe_point, (ssize_t) -1);    \/\/ Confirm: failed search returns sentinel: -1\n@@ -306,1 +313,1 @@\n-    ASSERT_EQ(probe_point, boundary_idx); \/\/ Confirm: failed search returns sentinel: boundary_idx\n+    BitMapAssertEqual(probe_point, boundary_idx); \/\/ Confirm: failed search returns sentinel: boundary_idx\n@@ -310,1 +317,1 @@\n-    ASSERT_EQ(probe_point, -1);           \/\/ Confirm: failed search returns sentinel: -1\n+    BitMapAssertEqual(probe_point, (ssize_t) -1);           \/\/ Confirm: failed search returns sentinel: -1\n@@ -391,0 +398,4 @@\n+    verifyBitMapState(bm_small, SMALL_BITMAP_SIZE, set_bits_0, 0);\n+    verifyBitMapState(bm_large, LARGE_BITMAP_SIZE, set_bits_0, 0);\n+\n+    _success = true;\n@@ -392,0 +403,1 @@\n+\n@@ -395,0 +407,2 @@\n+  ASSERT_EQ(_success, true);\n+  ASSERT_EQ(_assertion_failures, (size_t) 0);\n","filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahSimpleBitMap.cpp","additions":39,"deletions":25,"binary":false,"changes":64,"status":"modified"}]}