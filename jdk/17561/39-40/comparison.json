{"files":[{"patch":"@@ -337,2 +337,4 @@\n-           (((orig_partition == ShenandoahFreeSetPartitionId::Mutator) && (new_partition == ShenandoahFreeSetPartitionId::Collector)) ||\n-            ((orig_partition == ShenandoahFreeSetPartitionId::Collector) && (new_partition == ShenandoahFreeSetPartitionId::Mutator)))) ||\n+           (((orig_partition == ShenandoahFreeSetPartitionId::Mutator)\n+             && (new_partition == ShenandoahFreeSetPartitionId::Collector)) ||\n+            ((orig_partition == ShenandoahFreeSetPartitionId::Collector)\n+             && (new_partition == ShenandoahFreeSetPartitionId::Mutator)))) ||\n@@ -340,2 +342,2 @@\n-           ((orig_partition == ShenandoahFreeSetPartitionId::Mutator) && (new_partition == ShenandoahFreeSetPartitionId::Collector))), \"Unexpected movement between partitions\");\n-\n+           ((orig_partition == ShenandoahFreeSetPartitionId::Mutator)\n+            && (new_partition == ShenandoahFreeSetPartitionId::Collector))), \"Unexpected movement between partitions\");\n@@ -467,1 +469,2 @@\n-  for (ssize_t idx = find_index_of_previous_available_region(which_partition, _rightmosts_empty[int(which_partition)]); idx >= 0; ) {\n+  for (ssize_t idx = find_index_of_previous_available_region(which_partition, _rightmosts_empty[int(which_partition)]);\n+       idx >= 0; ) {\n@@ -529,2 +532,4 @@\n-  assert (leftmost(ShenandoahFreeSetPartitionId::Mutator) <= _max, \"leftmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT, leftmost(ShenandoahFreeSetPartitionId::Mutator),  _max);\n-  assert (rightmost(ShenandoahFreeSetPartitionId::Mutator) < _max, \"rightmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT, rightmost(ShenandoahFreeSetPartitionId::Mutator),  _max);\n+  assert (leftmost(ShenandoahFreeSetPartitionId::Mutator) <= _max,\n+          \"leftmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT, leftmost(ShenandoahFreeSetPartitionId::Mutator),  _max);\n+  assert (rightmost(ShenandoahFreeSetPartitionId::Mutator) < _max,\n+          \"rightmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT, rightmost(ShenandoahFreeSetPartitionId::Mutator),  _max);\n@@ -532,1 +537,2 @@\n-  assert (leftmost(ShenandoahFreeSetPartitionId::Mutator) == _max || partition_id_matches(leftmost(ShenandoahFreeSetPartitionId::Mutator), ShenandoahFreeSetPartitionId::Mutator),\n+  assert (leftmost(ShenandoahFreeSetPartitionId::Mutator) == _max\n+          || partition_id_matches(leftmost(ShenandoahFreeSetPartitionId::Mutator), ShenandoahFreeSetPartitionId::Mutator),\n@@ -534,1 +540,2 @@\n-  assert (leftmost(ShenandoahFreeSetPartitionId::Mutator) == _max || partition_id_matches(rightmost(ShenandoahFreeSetPartitionId::Mutator), ShenandoahFreeSetPartitionId::Mutator),\n+  assert (leftmost(ShenandoahFreeSetPartitionId::Mutator) == _max\n+          || partition_id_matches(rightmost(ShenandoahFreeSetPartitionId::Mutator), ShenandoahFreeSetPartitionId::Mutator),\n@@ -542,1 +549,2 @@\n-          \"free regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT, beg_off, leftmost(ShenandoahFreeSetPartitionId::Mutator));\n+          \"free regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          beg_off, leftmost(ShenandoahFreeSetPartitionId::Mutator));\n@@ -544,1 +552,2 @@\n-          \"free regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,  end_off, rightmost(ShenandoahFreeSetPartitionId::Mutator));\n+          \"free regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          end_off, rightmost(ShenandoahFreeSetPartitionId::Mutator));\n@@ -549,1 +558,2 @@\n-          \"free empty regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT, beg_off, leftmost_empty(ShenandoahFreeSetPartitionId::Mutator));\n+          \"free empty regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          beg_off, leftmost_empty(ShenandoahFreeSetPartitionId::Mutator));\n@@ -551,1 +561,2 @@\n-          \"free empty regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,  end_off, rightmost_empty(ShenandoahFreeSetPartitionId::Mutator));\n+          \"free empty regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          end_off, rightmost_empty(ShenandoahFreeSetPartitionId::Mutator));\n@@ -554,2 +565,4 @@\n-  assert (leftmost(ShenandoahFreeSetPartitionId::Collector) <= _max, \"leftmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT, leftmost(ShenandoahFreeSetPartitionId::Collector),  _max);\n-  assert (rightmost(ShenandoahFreeSetPartitionId::Collector) < _max, \"rightmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT, rightmost(ShenandoahFreeSetPartitionId::Collector),  _max);\n+  assert (leftmost(ShenandoahFreeSetPartitionId::Collector) <= _max, \"leftmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT,\n+          leftmost(ShenandoahFreeSetPartitionId::Collector),  _max);\n+  assert (rightmost(ShenandoahFreeSetPartitionId::Collector) < _max, \"rightmost in bounds: \"  SSIZE_FORMAT \" < \" SSIZE_FORMAT,\n+          rightmost(ShenandoahFreeSetPartitionId::Collector),  _max);\n@@ -557,1 +570,2 @@\n-  assert (leftmost(ShenandoahFreeSetPartitionId::Collector) == _max || partition_id_matches(leftmost(ShenandoahFreeSetPartitionId::Collector), ShenandoahFreeSetPartitionId::Collector),\n+  assert (leftmost(ShenandoahFreeSetPartitionId::Collector) == _max\n+          || partition_id_matches(leftmost(ShenandoahFreeSetPartitionId::Collector), ShenandoahFreeSetPartitionId::Collector),\n@@ -559,1 +573,2 @@\n-  assert (leftmost(ShenandoahFreeSetPartitionId::Collector) == _max || partition_id_matches(rightmost(ShenandoahFreeSetPartitionId::Collector), ShenandoahFreeSetPartitionId::Collector),\n+  assert (leftmost(ShenandoahFreeSetPartitionId::Collector) == _max\n+          || partition_id_matches(rightmost(ShenandoahFreeSetPartitionId::Collector), ShenandoahFreeSetPartitionId::Collector),\n@@ -567,1 +582,2 @@\n-          \"free regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT, beg_off, leftmost(ShenandoahFreeSetPartitionId::Collector));\n+          \"free regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          beg_off, leftmost(ShenandoahFreeSetPartitionId::Collector));\n@@ -569,1 +585,2 @@\n-          \"free regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,  end_off, rightmost(ShenandoahFreeSetPartitionId::Collector));\n+          \"free regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          end_off, rightmost(ShenandoahFreeSetPartitionId::Collector));\n@@ -574,1 +591,2 @@\n-          \"free empty regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT, beg_off, leftmost_empty(ShenandoahFreeSetPartitionId::Collector));\n+          \"free empty regions before the leftmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          beg_off, leftmost_empty(ShenandoahFreeSetPartitionId::Collector));\n@@ -576,1 +594,2 @@\n-          \"free empty regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,  end_off, rightmost_empty(ShenandoahFreeSetPartitionId::Collector));\n+          \"free empty regions past the rightmost: \" SSIZE_FORMAT \", bound \" SSIZE_FORMAT,\n+          end_off, rightmost_empty(ShenandoahFreeSetPartitionId::Collector));\n@@ -624,2 +643,4 @@\n-        ssize_t non_empty_on_left = _partitions.leftmost_empty(ShenandoahFreeSetPartitionId::Mutator) - _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator);\n-        ssize_t non_empty_on_right = _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator) - _partitions.rightmost_empty(ShenandoahFreeSetPartitionId::Mutator);\n+        ssize_t non_empty_on_left = (_partitions.leftmost_empty(ShenandoahFreeSetPartitionId::Mutator)\n+                                     - _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator));\n+        ssize_t non_empty_on_right = (_partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator)\n+                                      - _partitions.rightmost_empty(ShenandoahFreeSetPartitionId::Mutator));\n@@ -635,1 +656,2 @@\n-            assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, idx), \"Boundaries or find_prev_set_bit failed: \" SSIZE_FORMAT, idx);\n+            assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, idx),\n+                   \"Boundaries or find_prev_set_bit failed: \" SSIZE_FORMAT, idx);\n@@ -654,1 +676,2 @@\n-            assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, idx), \"Boundaries or find_prev_set_bit failed: \" SSIZE_FORMAT, idx);\n+            assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, idx),\n+                   \"Boundaries or find_prev_set_bit failed: \" SSIZE_FORMAT, idx);\n@@ -676,1 +699,2 @@\n-        assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Collector, idx), \"Boundaries or find_prev_set_bit failed: \" SSIZE_FORMAT, idx);\n+        assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Collector, idx),\n+               \"Boundaries or find_prev_set_bit failed: \" SSIZE_FORMAT, idx);\n@@ -692,1 +716,2 @@\n-        assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, idx), \"Boundaries or find_prev_set_bit failed: \" SSIZE_FORMAT, idx);\n+        assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, idx),\n+               \"Boundaries or find_prev_set_bit failed: \" SSIZE_FORMAT, idx);\n@@ -787,1 +812,3 @@\n-    _partitions.retire_from_partition(req.is_mutator_alloc()? ShenandoahFreeSetPartitionId::Mutator: ShenandoahFreeSetPartitionId::Collector, idx, r->used());\n+    _partitions.retire_from_partition(req.is_mutator_alloc()?\n+                                      ShenandoahFreeSetPartitionId::Mutator: ShenandoahFreeSetPartitionId::Collector,\n+                                      idx, r->used());\n@@ -811,1 +838,2 @@\n-  ssize_t beg = _partitions.find_index_of_next_available_cluster_of_regions(ShenandoahFreeSetPartitionId::Mutator, start_range, num);\n+  ssize_t beg = _partitions.find_index_of_next_available_cluster_of_regions(ShenandoahFreeSetPartitionId::Mutator,\n+                                                                            start_range, num);\n@@ -831,1 +859,2 @@\n-          beg = _partitions.find_index_of_next_available_cluster_of_regions(ShenandoahFreeSetPartitionId::Mutator, span_end + 1, num);\n+          beg = _partitions.find_index_of_next_available_cluster_of_regions(ShenandoahFreeSetPartitionId::Mutator,\n+                                                                            span_end + 1, num);\n@@ -924,1 +953,2 @@\n-  _partitions.move_from_partition_to_partition(idx, ShenandoahFreeSetPartitionId::Mutator, ShenandoahFreeSetPartitionId::Collector, ac);\n+  _partitions.move_from_partition_to_partition(idx, ShenandoahFreeSetPartitionId::Mutator,\n+                                               ShenandoahFreeSetPartitionId::Collector, ac);\n@@ -1003,1 +1033,3 @@\n-  if ((max_xfer_regions > 0) && (_partitions.leftmost_empty(ShenandoahFreeSetPartitionId::Collector) <= _partitions.rightmost_empty(ShenandoahFreeSetPartitionId::Collector))) {\n+  if ((max_xfer_regions > 0) &&\n+      (_partitions.leftmost_empty(ShenandoahFreeSetPartitionId::Collector)\n+       <= _partitions.rightmost_empty(ShenandoahFreeSetPartitionId::Collector))) {\n@@ -1006,2 +1038,4 @@\n-    for (ssize_t idx = _partitions.leftmost_empty(ShenandoahFreeSetPartitionId::Collector); (max_xfer_regions > 0) && (idx <= rightmost); ) {\n-      assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Collector, idx), \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, idx);\n+    for (ssize_t idx = _partitions.leftmost_empty(ShenandoahFreeSetPartitionId::Collector);\n+         (max_xfer_regions > 0) && (idx <= rightmost); ) {\n+      assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Collector, idx),\n+             \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, idx);\n@@ -1010,1 +1044,2 @@\n-        _partitions.move_from_partition_to_partition(idx, ShenandoahFreeSetPartitionId::Collector, ShenandoahFreeSetPartitionId::Mutator, region_size_bytes);\n+        _partitions.move_from_partition_to_partition(idx, ShenandoahFreeSetPartitionId::Collector,\n+                                                     ShenandoahFreeSetPartitionId::Mutator, region_size_bytes);\n@@ -1019,1 +1054,2 @@\n-  if ((max_xfer_regions > 0) && (_partitions.leftmost(ShenandoahFreeSetPartitionId::Collector) <= _partitions.rightmost(ShenandoahFreeSetPartitionId::Collector))) {\n+  if ((max_xfer_regions > 0) && (_partitions.leftmost(ShenandoahFreeSetPartitionId::Collector)\n+                                 <= _partitions.rightmost(ShenandoahFreeSetPartitionId::Collector))) {\n@@ -1022,2 +1058,4 @@\n-    for (ssize_t idx = _partitions.leftmost(ShenandoahFreeSetPartitionId::Collector); (max_xfer_regions > 0) && (idx <= rightmost); ) {\n-      assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Collector, idx), \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, idx);\n+    for (ssize_t idx = _partitions.leftmost(ShenandoahFreeSetPartitionId::Collector);\n+         (max_xfer_regions > 0) && (idx <= rightmost); ) {\n+      assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Collector, idx),\n+             \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, idx);\n@@ -1026,1 +1064,2 @@\n-        _partitions.move_from_partition_to_partition(idx, ShenandoahFreeSetPartitionId::Collector, ShenandoahFreeSetPartitionId::Mutator, ac);\n+        _partitions.move_from_partition_to_partition(idx, ShenandoahFreeSetPartitionId::Collector,\n+                                                     ShenandoahFreeSetPartitionId::Mutator, ac);\n@@ -1055,1 +1094,2 @@\n-  size_t available_in_collector_partition = _partitions.capacity_of(ShenandoahFreeSetPartitionId::Collector) - _partitions.used_by(ShenandoahFreeSetPartitionId::Collector);\n+  size_t available_in_collector_partition = (_partitions.capacity_of(ShenandoahFreeSetPartitionId::Collector)\n+                                             - _partitions.used_by(ShenandoahFreeSetPartitionId::Collector));\n@@ -1101,1 +1141,2 @@\n-      _partitions.move_from_partition_to_partition(idx, ShenandoahFreeSetPartitionId::Mutator, ShenandoahFreeSetPartitionId::Collector, ac);\n+      _partitions.move_from_partition_to_partition(idx, ShenandoahFreeSetPartitionId::Mutator,\n+                                                   ShenandoahFreeSetPartitionId::Collector, ac);\n@@ -1132,6 +1173,7 @@\n-    log_debug(gc)(\"FreeSet map legend:\"\n-                       \" M:mutator_free C:collector_free H:humongous _:retired\");\n-    log_debug(gc)(\" mutator free range [\" SIZE_FORMAT \"..\" SIZE_FORMAT \"], \"\n-                        \" collector free range [\" SIZE_FORMAT \"..\" SIZE_FORMAT \"]\",\n-                        _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator), _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator),\n-                        _partitions.leftmost(ShenandoahFreeSetPartitionId::Collector), _partitions.rightmost(ShenandoahFreeSetPartitionId::Collector));\n+    log_debug(gc)(\"FreeSet map legend: M:mutator_free C:collector_free H:humongous _:retired\");\n+    log_debug(gc)(\" mutator free range [\" SIZE_FORMAT \"..\" SIZE_FORMAT \"],\"\n+                  \" collector free range [\" SIZE_FORMAT \"..\" SIZE_FORMAT \"]\",\n+                  _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator),\n+                  _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator),\n+                  _partitions.leftmost(ShenandoahFreeSetPartitionId::Collector),\n+                  _partitions.rightmost(ShenandoahFreeSetPartitionId::Collector));\n@@ -1186,1 +1228,2 @@\n-      for (ssize_t idx = _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator); idx <= _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator); idx++) {\n+      for (ssize_t idx = _partitions.leftmost(ShenandoahFreeSetPartitionId::Mutator);\n+           idx <= _partitions.rightmost(ShenandoahFreeSetPartitionId::Mutator); idx++) {\n@@ -1233,1 +1276,2 @@\n-        frag_int = (100 * (total_used \/ _partitions.count(ShenandoahFreeSetPartitionId::Mutator)) \/ ShenandoahHeapRegion::region_size_bytes());\n+        frag_int = (100 * (total_used \/ _partitions.count(ShenandoahFreeSetPartitionId::Mutator))\n+                    \/ ShenandoahHeapRegion::region_size_bytes());\n@@ -1239,1 +1283,2 @@\n-               byte_size_in_proper_unit(total_used), proper_unit_for_byte_size(total_used), _partitions.count(ShenandoahFreeSetPartitionId::Mutator));\n+               byte_size_in_proper_unit(total_used), proper_unit_for_byte_size(total_used),\n+               _partitions.count(ShenandoahFreeSetPartitionId::Mutator));\n@@ -1247,1 +1292,2 @@\n-      for (ssize_t idx = _partitions.leftmost(ShenandoahFreeSetPartitionId::Collector); idx <= _partitions.rightmost(ShenandoahFreeSetPartitionId::Collector); idx++) {\n+      for (ssize_t idx = _partitions.leftmost(ShenandoahFreeSetPartitionId::Collector);\n+           idx <= _partitions.rightmost(ShenandoahFreeSetPartitionId::Collector); idx++) {\n@@ -1291,1 +1337,2 @@\n-    assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, index), \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, index);\n+    assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, index),\n+           \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, index);\n@@ -1298,1 +1345,2 @@\n-    assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Collector, index), \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, index);\n+    assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Collector, index),\n+           \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, index);\n@@ -1311,1 +1359,2 @@\n-    assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, index), \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, index);\n+    assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, index),\n+           \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, index);\n@@ -1337,1 +1386,2 @@\n-    assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, index), \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, index);\n+    assert(_partitions.in_free_set(ShenandoahFreeSetPartitionId::Mutator, index),\n+           \"Boundaries or find_next_set_bit failed: \" SSIZE_FORMAT, index);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":105,"deletions":55,"binary":false,"changes":160,"status":"modified"},{"patch":"@@ -283,3 +283,3 @@\n-  \/\/ Typical usage: During evacuation, the GC may find it needs more memory than had been reserved at the start of evacuation to hold\n-  \/\/ evacuated objects If this occurs and memory is still available in the Mutator's free set, we will flip a region from the Mutator\n-  \/\/ free set into the Collector free set.\n+  \/\/ Typical usage: During evacuation, the GC may find it needs more memory than had been reserved at the start of evacuation to\n+  \/\/ hold evacuated objects.  If this occurs and memory is still available in the Mutator's free set, we will flip a region from\n+  \/\/ the Mutator free set into the Collector free set.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}