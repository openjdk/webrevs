{"files":[{"patch":"@@ -29,0 +29,14 @@\n+ShenandoahSimpleBitMap::ShenandoahSimpleBitMap(size_t num_bits) :\n+    _num_bits(num_bits),\n+    _num_words((num_bits + (BitsPerWord - 1)) \/ BitsPerWord),\n+    _bitmap(NEW_C_HEAP_ARRAY(uintx, _num_words, mtGC))\n+{\n+  clear_all();\n+}\n+\n+ShenandoahSimpleBitMap::~ShenandoahSimpleBitMap() {\n+  if (_bitmap != nullptr) {\n+    FREE_C_HEAP_ARRAY(uintx, _bitmap);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahSimpleBitMap.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+#include \"gc\/shenandoah\/shenandoahAsserts.hpp\"\n+\n@@ -59,7 +61,3 @@\n-  ShenandoahSimpleBitMap(size_t num_bits) :\n-      _num_bits(num_bits),\n-      _num_words((num_bits + (BitsPerWord - 1)) \/ BitsPerWord),\n-      _bitmap(NEW_C_HEAP_ARRAY(uintx, _num_words, mtGC))\n-  {\n-    clear_all();\n-  }\n+  ShenandoahSimpleBitMap(size_t num_bits);\n+\n+  ~ShenandoahSimpleBitMap();\n@@ -67,5 +65,0 @@\n-  ~ShenandoahSimpleBitMap() {\n-    if (_bitmap != nullptr) {\n-      FREE_C_HEAP_ARRAY(uintx, _bitmap);\n-    }\n-  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahSimpleBitMap.hpp","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"}]}