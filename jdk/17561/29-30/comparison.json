{"files":[{"patch":"@@ -1023,1 +1023,0 @@\n-\n@@ -1049,0 +1048,7 @@\n+\n+  if (remainder != 0) {\n+    \/\/ Record this remainder as allocation waste\n+    _heap->notify_mutator_alloc_words(ShenandoahHeapRegion::region_size_words() - remainder, true);\n+  }\n+\n+  \/\/ retire_range_from_partition() will adjust bounds on Mutator free set if appropriate\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -413,0 +413,4 @@\n+  \/\/ Change region r from the Mutator partition to the GC's Collector partition.  This requires that the region is entirely empty.\n+  \/\/ Typical usage: During evacuation, the GC may find it needs more memory than had been reserved at the start of evacuation to hold\n+  \/\/ evacuated objects If this occurs and memory is still available in the Mutator's free set, we will flip a region from the Mutator\n+  \/\/ free set into the Collector free set.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1088,0 +1088,1 @@\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -377,0 +377,1 @@\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}