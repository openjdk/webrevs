{"files":[{"patch":"@@ -162,1 +162,1 @@\n-  \/\/ While holding the heap lock, allocate memory for a single object which is to be entirely contained\n+  \/\/ While holding the heap lock, allocate memory for a single object or LAB  which is to be entirely contained\n@@ -164,4 +164,1 @@\n-  \/\/ equal to ShenandoahHeapRegion::humongous_threshold_words().  The caller of allocate_single is responsible\n-  \/\/ for registering the resulting object and setting the remembered set card values as appropriate.  The\n-  \/\/ most common case is that we are allocating a PLAB in which case object registering and card dirtying\n-  \/\/ is managed after the PLAB is divided into individual objects.\n+  \/\/ equal to ShenandoahHeapRegion::humongous_threshold_words().\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}