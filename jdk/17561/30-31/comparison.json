{"files":[{"patch":"@@ -1262,3 +1262,7 @@\n-      \/\/ they were entirely empty.  I'm not sure I understand the rationale for that.  That alternative behavior would\n-      \/\/ tend to mix survivor objects with ephemeral objects, making it more difficult to reclaim the memory for the\n-      \/\/ ephemeral objects.\n+      \/\/ they were entirely empty.  This has the effect of causing new Mutator allocation to reside next to objects\n+      \/\/ that have already survived at least one GC, mixing ephemeral with longer-lived objects in the same region.\n+      \/\/ Any objects that have survived a GC are less likely to immediately become garbage, so a region that contains\n+      \/\/ survivor objects is less likely to be selected for the collection set.  This alternative implementation allows\n+      \/\/ survivor regions to continue accumulating other survivor objects, and makes it more likely that ephemeral objects\n+      \/\/ occupy regions comprised entirely of ephemeral objects.  These regions are highly likely to be included in the next\n+      \/\/ collection set, and they are easily evacuated because they have low density of live objects.\n@@ -1430,2 +1434,0 @@\n-\n-  \/\/ Allocation request is known to satisfy all memory budgeting constraints.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}