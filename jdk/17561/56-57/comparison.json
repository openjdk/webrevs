{"files":[{"patch":"@@ -43,1 +43,3 @@\n-    default: return \"Unrecognized\";\n+    default:\n+      ShouldNotReachHere();\n+      return \"Unrecognized\";\n@@ -60,1 +62,0 @@\n-#ifdef _LP64\n@@ -62,3 +63,0 @@\n-#else\n-  log_info(gc)(\"%6s: %10s %10s %10s\", \"index\", \"Mutator Bits\", \"Collector Bits\", \"NotFree Bits\");\n-#endif\n@@ -100,3 +98,0 @@\n-ShenandoahRegionPartitions::~ShenandoahRegionPartitions() {\n-}\n-\n@@ -136,1 +131,3 @@\n-    \/\/ _membership[which_partition].is_set(idx) may not be true if we are shrinking the interval\n+    \/\/ Cannot assert that membership[which_partition.is_set(idx) because this helper method may be used\n+    \/\/ to query the original value of leftmost when leftmost must be adjusted because the interval representing\n+    \/\/ which_partition is shrinking after the region that used to be leftmost is retired.\n@@ -144,1 +141,3 @@\n-  \/\/ _membership[which_partition].is_set(idx) may not be true if we are shrinking the interval\n+  \/\/ Cannot assert that membership[which_partition.is_set(idx) because this helper method may be used\n+  \/\/ to query the original value of leftmost when leftmost must be adjusted because the interval representing\n+  \/\/ which_partition is shrinking after the region that used to be leftmost is retired.\n@@ -333,2 +332,1 @@\n-  ShenandoahFreeSetPartitionId result = membership(idx);\n-  return partition_name(result);\n+  return partition_name(membership(idx));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-  ~ShenandoahRegionPartitions();\n+  ~ShenandoahRegionPartitions() {}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,0 @@\n- * Copyright (c) 2016, 2021, Red Hat, Inc. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahSimpleBitMap.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,0 @@\n- * Copyright (c) 2016, 2019, Red Hat, Inc. All rights reserved.\n@@ -92,1 +91,1 @@\n-  inline idx_t alignment() const {\n+  inline constexpr idx_t alignment() const {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahSimpleBitMap.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,0 @@\n- * Copyright (c) 2016, 2019, Red Hat, Inc. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahSimpleBitMap.inline.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}