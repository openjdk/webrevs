{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -163,2 +163,4 @@\n-            return env->CallStaticBooleanMethod(graphicsEnvClass,\n-                                                headlessFn);\n+            \/\/ be on the safe side and avoid JNI warnings by calling ExceptionCheck\n+            \/\/ an accumulated exception is not cleared\n+            env->ExceptionCheck();\n+            return env->CallStaticBooleanMethod(graphicsEnvClass, headlessFn);\n@@ -170,1 +172,0 @@\n-\n@@ -180,3 +181,3 @@\n-    DWORD   lastError = GetLastError();\n-    LPSTR       msgBuffer = NULL;\n-    int     ret = IDNO;\n+    DWORD lastError = GetLastError();\n+    LPSTR msgBuffer = NULL;\n+    int ret = IDNO;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Debug.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-            oa.shouldContain(\"Done\").shouldNotContain(\"WARNING\").shouldHaveExitValue(0);\n+            oa.shouldContain(\"Done\").shouldNotContain(\"WARNING\").shouldNotContain(\"AWT Assertion\").shouldHaveExitValue(0);\n@@ -57,2 +57,1 @@\n-        for (String ff : families)\n-        {\n+        for (String ff : families) {\n@@ -69,1 +68,0 @@\n-\n","filename":"test\/jdk\/java\/awt\/font\/JNICheck\/FreeTypeScalerJNICheck.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}