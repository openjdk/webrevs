{"files":[{"patch":"@@ -156,0 +156,17 @@\n+    \/\/ As above, but the JAR is added to the source path instead (with same results).\n+    @Test\n+    public void jarFileNotModifiedForSourcePath() throws IOException {\n+        byte[] originalJarBytes = compileTestLibJar();\n+\n+        new JavacTask(toolBox)\n+                .sources(TARGET_SOURCE)\n+                .sourcepath(TEST_LIB_JAR)\n+                .run()\n+                .writeAll();\n+\n+        \/\/ Assertion 1: The JAR is unchanged.\n+        assertArrayEquals(originalJarBytes, Files.readAllBytes(TEST_LIB_JAR), \"Jar file was modified.\");\n+        \/\/ Assertion 2: An output class file was written to the current directory.\n+        assertTrue(Files.exists(OUTPUT_CLASS_FILE), \"Output class file missing.\");\n+    }\n+\n@@ -211,1 +228,2 @@\n-    static void writeFileObject(FileObject file, String expectedName, String contents) throws IOException {\n+    static void writeFileObject(FileObject file, String expectedName, String contents)\n+            throws IOException {\n@@ -284,1 +302,2 @@\n-    private static void writeEntry(JarOutputStream jar, String name, byte[] bytes, Instant timestamp) throws IOException {\n+    private static void writeEntry(JarOutputStream jar, String name, byte[] bytes, Instant timestamp)\n+            throws IOException {\n","filename":"test\/langtools\/tools\/javac\/processing\/filer\/TestNoOverwriteJarFiles.java","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"}]}