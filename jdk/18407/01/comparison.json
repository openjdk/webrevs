{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.function.Predicate;\n@@ -36,0 +37,2 @@\n+import javax.lang.model.element.NestingKind;\n+import javax.lang.model.element.TypeElement;\n@@ -103,0 +106,1 @@\n+     * @param enabled   whether this tag is enabled\n@@ -116,0 +120,1 @@\n+     * @param enabled   whether this tag is enabled\n@@ -123,0 +128,31 @@\n+    \/**\n+     * Constructs a {@code SimpleTaglet} that will look for tags on enclosing type elements\n+     * if there are no relevant tags on a nested (member) type element.\n+     *\n+     * @param tagKind   the kind of this tag\n+     * @param header    the header to output\n+     * @param locations the possible locations that this tag can appear in\n+     * @param enabled   whether this tag is enabled\n+     *\/\n+    static SimpleTaglet createWithDefaultForNested(HtmlConfiguration config, DocTree.Kind tagKind, String header, Set<Taglet.Location> locations, boolean enabled) {\n+        return new SimpleTaglet(config, tagKind, header, locations, enabled) {\n+            @Override\n+            protected List<? extends BlockTagTree> getDefaultBlockTags(Element e, Predicate<? super BlockTagTree> accepts) {\n+                while (isNestedType(e)) {\n+                    e = e.getEnclosingElement();\n+                    var tags = utils.getBlockTags(e, accepts);\n+                    if (!tags.isEmpty()) {\n+                        return tags;\n+                    }\n+                }\n+\n+                return List.of();\n+            }\n+\n+            private boolean isNestedType(Element e) {\n+                return e.getKind().isDeclaredType()\n+                        && ((TypeElement) e).getNestingKind() == NestingKind.MEMBER;\n+            }\n+        };\n+    }\n+\n@@ -156,2 +192,2 @@\n-     * The taglet accepts a tree node if it has the same kind, and\n-     * if the kind is {@code UNKNOWN_BLOCK_TAG} the same tag name.\n+     * The taglet accepts a tree node if it has the same kind, or\n+     * if the kind is {@code UNKNOWN_BLOCK_TAG} with the same tag name.\n@@ -171,1 +207,1 @@\n-        List<? extends DocTree> tags = utils.getBlockTags(m, this::accepts);\n+        List<? extends DocTree> tags = getBlockTags(m);\n@@ -182,1 +218,1 @@\n-        List<? extends DocTree> tags = utils.getBlockTags(holder, this::accepts);\n+        List<? extends DocTree> tags = getBlockTags(holder);\n@@ -189,0 +225,12 @@\n+    private List<? extends BlockTagTree> getBlockTags(Element e) {\n+        var tags = utils.getBlockTags(e, this::accepts);\n+        if (tags.isEmpty()) {\n+            tags = getDefaultBlockTags(e, this::accepts);\n+        }\n+        return tags;\n+    }\n+\n+    protected List<? extends BlockTagTree> getDefaultBlockTags(Element e, Predicate<? super BlockTagTree> accepts) {\n+        return List.of();\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SimpleTaglet.java","additions":53,"deletions":5,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -593,1 +593,1 @@\n-                new SimpleTaglet(config, SINCE, resources.getText(\"doclet.Since\"),\n+                SimpleTaglet.createWithDefaultForNested(config, SINCE, resources.getText(\"doclet.Since\"),\n@@ -596,1 +596,1 @@\n-                new SimpleTaglet(config, VERSION, resources.getText(\"doclet.Version\"),\n+                SimpleTaglet.createWithDefaultForNested(config, VERSION, resources.getText(\"doclet.Version\"),\n@@ -599,1 +599,1 @@\n-                new SimpleTaglet(config, AUTHOR, resources.getText(\"doclet.Author\"),\n+                SimpleTaglet.createWithDefaultForNested(config, AUTHOR, resources.getText(\"doclet.Author\"),\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/TagletManager.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,2 +113,2 @@\n-see \\f[B]Conformance requirements\\f[R]\n-[https:\/\/www.w3.org\/TR\/html5\/infrastructure.html#conformance-requirements]\n+see \\f[B]Conformance requirements for authors\\f[R]\n+[https:\/\/html.spec.whatwg.org\/multipage\/introduction.html#conformance-requirements-for-authors]\n@@ -492,1 +492,2 @@\n-Includes the \\f[V]\\[at]author\\f[R] text in the generated docs.\n+Includes the text of any \\f[V]author\\f[R] tags in the generated\n+documentation.\n@@ -515,2 +516,4 @@\n-This command inserts the following line in the head of every generated\n-page:\n+This command inserts the following line, containing a\n+\\f[B]\\f[VB]meta\\f[B] element\\f[R]\n+[https:\/\/html.spec.whatwg.org\/multipage\/semantics.html#the-meta-element]\n+in the head of every generated page:\n@@ -523,4 +526,0 @@\n-.PP\n-The \\f[V]meta\\f[R] tag is described in the \\f[B]HTML standard (4197265\n-and 4137321), HTML Document Representation\\f[R]\n-[http:\/\/www.w3.org\/TR\/REC-html40\/charset.html#h-5.2.2].\n@@ -726,2 +725,2 @@\n-the \\f[B]URL Memo: Uniform Resource Locators\\f[R]\n-[http:\/\/www.ietf.org\/rfc\/rfc1738.txt].\n+the \\f[B]RFC 1738: Uniform Resource Locators (URL)\\f[R]\n+[https:\/\/www.rfc-editor.org\/info\/rfc1738].\n@@ -953,2 +952,2 @@\n-Omits from the generated documents the \\f[V]Since\\f[R] sections\n-associated with the \\f[V]\\[at]since\\f[R] tags.\n+Omits from the generated documentation the \\f[V]Since\\f[R] sections\n+derived from any \\f[V]since\\f[R] tags.\n@@ -1184,1 +1183,2 @@\n-Includes the version text in the generated docs.\n+Includes the text of any \\f[V]version\\f[R] tags in the generated\n+documentation.\n@@ -1186,2 +1186,2 @@\n-To find out what version of the \\f[V]javadoc\\f[R] tool you are using,\n-use the \\f[V]--version\\f[R] option (with two hyphens).\n+Note: To find out what version of the \\f[V]javadoc\\f[R] tool you are\n+using, use the \\f[V]--version\\f[R] option (with two hyphens).\n","filename":"src\/jdk.javadoc\/share\/man\/javadoc.1","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      8202947 8239804\n+ * @bug      8202947 8239804 8324342\n@@ -132,0 +132,100 @@\n+\n+    @Test\n+    public void testAuthorDefault(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                \/**\n+                 * Class C.\n+                 * @author J. Duke\n+                 *\/\n+                 public class C {\n+                     \/** Class Nested, with no explicit at-author. *\/\n+                     public class Nested { }\n+                 }\"\"\");\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-author\",\n+                \"-sourcepath\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Author:<\/dt>\n+                    <dd>J. Duke<\/dd>\"\"\");\n+\n+        checkOutput(\"p\/C.Nested.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Author:<\/dt>\n+                    <dd>J. Duke<\/dd>\"\"\");\n+    }\n+\n+    @Test\n+    public void testAuthorDefault_Multiple(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                \/**\n+                 * Class C.\n+                 * @author J. Duke\n+                 * @author A. N. Other\n+                 *\/\n+                 public class C {\n+                     \/** Class Nested, with no explicit at-author. *\/\n+                     public class Nested { }\n+                 }\"\"\");\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-author\",\n+                \"-sourcepath\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Author:<\/dt>\n+                    <dd>J. Duke, A. N. Other<\/dd>\"\"\");\n+\n+        checkOutput(\"p\/C.Nested.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Author:<\/dt>\n+                    <dd>J. Duke, A. N. Other<\/dd>\"\"\");\n+    }\n+\n+    @Test\n+    public void testAuthorDefault_Nested(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                \/**\n+                 * Class C.\n+                 * @author J. Duke\n+                 * @author A. N. Other\n+                 *\/\n+                 public class C {\n+                     public class Nested1 {\n+                         \/** Class Nested, with no explicit at-author. *\/\n+                         public class Nested { }\n+                     }\n+                 }\"\"\");\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-author\",\n+                \"-sourcepath\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Author:<\/dt>\n+                    <dd>J. Duke, A. N. Other<\/dd>\"\"\");\n+\n+        checkOutput(\"p\/C.Nested1.Nested.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Author:<\/dt>\n+                    <dd>J. Duke, A. N. Other<\/dd>\"\"\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testAuthor\/TestAuthor.java","additions":102,"deletions":2,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      7180906 8026567 8239804\n+ * @bug      7180906 8026567 8239804 8324342\n@@ -28,1 +28,1 @@\n- * @library  ..\/..\/lib\n+ * @library  \/tools\/lib ..\/..\/lib\n@@ -30,1 +30,1 @@\n- * @build    javadoc.tester.*\n+ * @build    toolbox.ToolBox javadoc.tester.*\n@@ -34,0 +34,2 @@\n+import java.nio.file.Path;\n+\n@@ -35,0 +37,1 @@\n+import toolbox.ToolBox;\n@@ -44,0 +47,2 @@\n+    private final ToolBox tb = new ToolBox();\n+\n@@ -78,0 +83,66 @@\n+\n+    @Test\n+    public void testSinceDefault(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                \/**\n+                 * Class C.\n+                 * @since 99\n+                 *\/\n+                 public class C {\n+                     \/** Class Nested, with no explicit at-since. *\/\n+                     public class Nested { }\n+                 }\"\"\");\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Since:<\/dt>\n+                    <dd>99<\/dd>\"\"\");\n+\n+        checkOutput(\"p\/C.Nested.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Since:<\/dt>\n+                    <dd>99<\/dd>\"\"\");\n+\n+    }\n+\n+    @Test\n+    public void testSinceDefault_Nested(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                \/**\n+                 * Class C.\n+                 * @since 99\n+                 *\/\n+                 public class C {\n+                     public class Nested1 {\n+                         \/** Class Nested, with no explicit at-since. *\/\n+                         public class Nested { }\n+                     }\n+                 }\"\"\");\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Since:<\/dt>\n+                    <dd>99<\/dd>\"\"\");\n+\n+        checkOutput(\"p\/C.Nested1.Nested.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Since:<\/dt>\n+                    <dd>99<\/dd>\"\"\");\n+\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSinceTag\/TestSinceTag.java","additions":75,"deletions":4,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      8202947 8239804\n+ * @bug      8202947 8239804 8324342\n@@ -132,0 +132,33 @@\n+\n+    @Test\n+    public void testVersionDefault(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                \/**\n+                 * Class C.\n+                 * @version 42\n+                 *\/\n+                 public class C {\n+                     \/** Class Nested, with no explicit at-version. *\/\n+                     public class Nested { }\n+                 }\"\"\");\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-version\",\n+                \"-sourcepath\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Version:<\/dt>\n+                    <dd>42<\/dd>\"\"\");\n+\n+        checkOutput(\"p\/C.Nested.html\", true,\n+                \"\"\"\n+                    <dl class=\"notes\">\n+                    <dt>Version:<\/dt>\n+                    <dd>42<\/dd>\"\"\");\n+\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testVersionTag\/TestVersionTag.java","additions":35,"deletions":2,"binary":false,"changes":37,"status":"modified"}]}