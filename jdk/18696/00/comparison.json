{"files":[{"patch":"@@ -205,0 +205,1 @@\n+  assert(_covered[0].contains(mr) || _covered[1].contains(mr), \"precondition\");\n@@ -229,9 +230,0 @@\n-void CardTable::invalidate(MemRegion mr) {\n-  assert(align_down(mr.start(), HeapWordSize) == mr.start(), \"Unaligned start\");\n-  assert(align_up  (mr.end(),   HeapWordSize) == mr.end(),   \"Unaligned end\"  );\n-  for (int i = 0; i < max_covered_regions; i++) {\n-    MemRegion mri = mr.intersection(_covered[i]);\n-    if (!mri.is_empty()) dirty_MemRegion(mri);\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -134,2 +134,0 @@\n-  void invalidate(MemRegion mr);\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-  _card_table->invalidate(mr);\n+  _card_table->dirty_MemRegion(mr);\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTableBarrierSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}