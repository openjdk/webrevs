{"files":[{"patch":"@@ -307,1 +307,1 @@\n-  if (!metrics.is_good_progress(_generation)) {\n+  if (!metrics.is_good_progress()) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-  if (metrics.is_good_progress(heap->global_generation())) {\n+  if (metrics.is_good_progress()) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-bool ShenandoahMetricsSnapshot::is_good_progress(ShenandoahGeneration* generation) {\n+bool ShenandoahMetricsSnapshot::is_good_progress() {\n@@ -50,1 +50,1 @@\n-  size_t free_expected = (generation->max_capacity() \/ 100) * ShenandoahCriticalFreeThreshold;\n+  size_t free_expected = _heap->max_capacity() \/ 100 * ShenandoahCriticalFreeThreshold;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMetrics.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  bool is_good_progress(ShenandoahGeneration* generation);\n+  bool is_good_progress();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMetrics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}