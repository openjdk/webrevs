{"files":[{"patch":"@@ -832,1 +832,1 @@\n-  return nullptr;\n+  return AddNode::Ideal(phase, can_reshape);\n@@ -906,1 +906,1 @@\n-  return nullptr;\n+  return AddNode::Ideal(phase, can_reshape);\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @bug 8322077\n+ * @bug 8322077 8353359\n@@ -41,1 +41,1 @@\n-    @Run(test = { \"test1\" })\n+    @Run(test = { \"test1\", \"test2\", \"test3\" })\n@@ -58,0 +58,2 @@\n+        Asserts.assertEQ((a | 3) | 6, test2(a));\n+        Asserts.assertEQ((a | 3) | a, test3(a));\n@@ -68,0 +70,14 @@\n+\n+    \/\/ Checks (a | 3) | 6 => a | (3 | 6) => a | 7\n+    @Test\n+    @IR(counts = { IRNode.OR, \"1\"})\n+    public int test2(int a) {\n+        return (a | 3) | 6;\n+    }\n+\n+    \/\/ Checks (a | 3) | a => (a | a) | 3 => a | 3\n+    @Test\n+    @IR(counts = { IRNode.OR, \"1\"})\n+    public int test3(int a) {\n+        return (a | 3) | a;\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/OrINodeIdealizationTests.java","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @bug 8322077\n+ * @bug 8322077 8353359\n@@ -41,1 +41,1 @@\n-    @Run(test = { \"test1\" })\n+    @Run(test = { \"test1\", \"test2\", \"test3\" })\n@@ -58,0 +58,2 @@\n+        Asserts.assertEQ((a | 3) | 6, test2(a));\n+        Asserts.assertEQ((a | 3) | a, test3(a));\n@@ -68,0 +70,15 @@\n+\n+\n+    \/\/ Checks (a | 3) | 6 => a | (3 | 6) => a | 7\n+    @Test\n+    @IR(counts = { IRNode.OR, \"1\"})\n+    public long test2(long a) {\n+        return (a | 3) | 6;\n+    }\n+\n+    \/\/ Checks (a | 3) | a => (a | a) | 3 => a | 3\n+    @Test\n+    @IR(counts = { IRNode.OR, \"1\"})\n+    public long test3(long a) {\n+        return (a | 3) | a;\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/OrLNodeIdealizationTests.java","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"}]}