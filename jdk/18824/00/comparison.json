{"files":[{"patch":"@@ -626,0 +626,1 @@\n+                  _began_macro_expansion(false),\n@@ -917,0 +918,1 @@\n+    _began_macro_expansion(false),\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -321,0 +321,1 @@\n+  bool                  _began_macro_expansion; \/\/ Macro expansion is started.\n@@ -790,0 +791,3 @@\n+  bool       began_macro_expansion() { return _began_macro_expansion;  }\n+  void   set_began_macro_expansion() { _began_macro_expansion = true;  }\n+\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2448,0 +2448,1 @@\n+  C->set_began_macro_expansion();\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-  \/\/ If we're post loop opts then don't attempt to match the min\/max pattern, as this node might have been a\n+  \/\/ If we began macro expansion then don't attempt to match the min\/max pattern, as this node might have been a\n@@ -198,1 +198,1 @@\n-  if (phase->C->post_loop_opts_phase()) {\n+  if (phase->C->began_macro_expansion()) {\n","filename":"src\/hotspot\/share\/opto\/movenode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @bug 8324655\n+ * @bug 8324655 8329797\n@@ -37,1 +37,1 @@\n- * @run main compiler.c2.irTests.TestIfMinMax\n+ * @run driver compiler.c2.irTests.TestIfMinMax\n@@ -44,0 +44,1 @@\n+        TestFramework.runWithFlags(\"-XX:+UseShenandoahGC\");\n@@ -142,0 +143,36 @@\n+    public class Dummy {\n+        long l;\n+        public Dummy(long l) { this.l = l; }\n+    }\n+\n+    @Setup\n+    Object[] setupDummyArray() {\n+        Dummy[] arr = new Dummy[512];\n+        for (int i = 0; i < 512; i++) {\n+            arr[i] = new Dummy(RANDOM.nextLong());\n+        }\n+        return new Object[] { arr };\n+    }\n+\n+    @Test\n+    @Arguments(setup = \"setupDummyArray\")\n+    @IR(failOn = { IRNode.MAX_L })\n+    public long testMaxLAndBarrierInLoop(Dummy[] arr) {\n+        long result = 0;\n+        for (int i = 0; i < arr.length; ++i) {\n+            result += Math.max(arr[i].l, 1);\n+        }\n+        return result;\n+    }\n+\n+    @Test\n+    @Arguments(setup = \"setupDummyArray\")\n+    @IR(failOn = { IRNode.MIN_L })\n+    public long testMinLAndBarrierInLoop(Dummy[] arr) {\n+        long result = 0;\n+        for (int i = 0; i < arr.length; ++i) {\n+            result += Math.min(arr[i].l, 1);\n+        }\n+        return result;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestIfMinMax.java","additions":39,"deletions":2,"binary":false,"changes":41,"status":"modified"}]}