{"files":[{"patch":"@@ -85,1 +85,1 @@\n-            boolean sentQuit = false;\n+            boolean timedout = false;\n@@ -88,1 +88,1 @@\n-                sentQuit = checkCatchesAndSendQuitTo(pid, false);\n+                checkCatchesAndSendQuitTo(pid, false);\n@@ -102,1 +102,2 @@\n-                    time_spend += delay;\n+                    timedout = (time_spend += delay) > timeout;\n+\n@@ -105,1 +106,1 @@\n-                        sentQuit = checkCatchesAndSendQuitTo(pid, false);\n+                        checkCatchesAndSendQuitTo(pid, !timedout);\n@@ -107,1 +108,1 @@\n-                } while (time_spend <= timeout && !socket_file.exists());\n+                } while (!timedout && !socket_file.exists());\n@@ -112,3 +113,2 @@\n-                          \"target process %d %s within %dms \" +\n-                          \"or HotSpot VM not loaded\", socket_path, pid, sentQuit ? \"doesn't respond\" : \"has not become ready\",\n-                                      time_spend));\n+                          \"target process %d doesn't respond within %dms \" +\n+                          \"or HotSpot VM not loaded\", socket_path, time_spend));\n@@ -248,8 +248,0 @@\n-        \/\/ We need to handle at least 4 different cases:\n-        \/\/ 1. Caller and target processes share PID namespace and root filesystem (host to host or container to\n-        \/\/    container with both \/tmp mounted between containers).\n-        \/\/ 2. Caller and target processes share PID namespace and root filesystem but the target process has elevated\n-        \/\/    privileges (host to host).\n-        \/\/ 3. Caller and target processes share PID namespace but NOT root filesystem (container to container).\n-        \/\/ 4. Caller and target processes share neither PID namespace nor root filesystem (host to container).\n-\n@@ -258,1 +250,8 @@\n-        \/*\n+        \/* We need to handle at least 4 different cases:\n+         * 1. Caller and target processes share PID namespace and root filesystem (host to host or container to\n+         *    container with both \/tmp mounted between containers).\n+         * 2. Caller and target processes share PID namespace and root filesystem but the target process has elevated\n+         *    privileges (host to host).\n+         * 3. Caller and target processes share PID namespace but NOT root filesystem (container to container).\n+         * 4. Caller and target processes share neither PID namespace nor root filesystem (host to container)\n+         *\n","filename":"src\/jdk.attach\/linux\/classes\/sun\/tools\/attach\/VirtualMachineImpl.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"}]}