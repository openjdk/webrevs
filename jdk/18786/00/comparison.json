{"files":[{"patch":"@@ -907,0 +907,22 @@\n+    \/*\n+     * main type flags\n+     *\/\n+    private static final int MAIN_WITHOUT_ARGS = 1;\n+    private static final int MAIN_NONSTATIC = 2;\n+    private static int mainType = 0;\n+\n+    \/*\n+     * Return type so that launcher invokes the correct main\n+     *\/\n+    public static int getMainType() {\n+        return mainType;\n+    }\n+\n+    private static void setMainType(Method mainMethod) {\n+        int mods = mainMethod.getModifiers();\n+        boolean isStatic = Modifier.isStatic(mods);\n+        boolean noArgs = mainMethod.getParameterCount() == 0;\n+        mainType = (isStatic ? 0 : MAIN_NONSTATIC) | (noArgs ? MAIN_WITHOUT_ARGS : 0);\n+    }\n+\n+\n@@ -929,0 +951,2 @@\n+        setMainType(mainMethod);\n+\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/LauncherHelper.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -393,1 +393,0 @@\n-            (*env)->ExceptionClear(env); \\\n@@ -402,1 +401,0 @@\n-            (*env)->ExceptionClear(env); \\\n@@ -623,6 +621,27 @@\n-    if (!invokeStaticMainWithArgs(env, mainClass, mainArgs) &&\n-        !invokeInstanceMainWithArgs(env, mainClass, mainArgs) &&\n-        !invokeStaticMainWithoutArgs(env, mainClass) &&\n-        !invokeInstanceMainWithoutArgs(env, mainClass)) {\n-        ret = 1;\n-        LEAVE();\n+\n+#define MAIN_WITH_ARGS 0\n+#define MAIN_WITHOUT_ARGS 1\n+#define MAIN_NONSTATIC 2\n+\n+    jclass helperClass = GetLauncherHelperClass(env);\n+    jmethodID getMainType =\n+        (*env)->GetStaticMethodID(env, helperClass, \"getMainType\", \"()I\");\n+\n+    int mainType = (*env)->CallStaticIntMethod(env, helperClass, getMainType);\n+    int res = 0;\n+    switch (mainType) {\n+    case MAIN_WITH_ARGS:\n+        res = invokeStaticMainWithArgs(env, mainClass, mainArgs);\n+        break;\n+    case MAIN_WITHOUT_ARGS:\n+        res = invokeStaticMainWithoutArgs(env, mainClass);\n+        break;\n+    case MAIN_NONSTATIC:\n+        res = invokeInstanceMainWithArgs(env, mainClass, mainArgs);\n+        break;\n+    case MAIN_NONSTATIC | MAIN_WITHOUT_ARGS:\n+        res = invokeInstanceMainWithoutArgs(env, mainClass);\n+        break;\n+    }\n+    if (!res) {\n+        CHECK_EXCEPTION_LEAVE(1);\n","filename":"src\/java.base\/share\/native\/libjli\/java.c","additions":27,"deletions":8,"binary":false,"changes":35,"status":"modified"}]}