{"files":[{"patch":"@@ -907,2 +907,2 @@\n-    private static boolean isStatic = false;\n-    private static boolean noArgs = false;\n+    private static boolean isStaticMain = false;\n+    private static boolean noArgMain = false;\n@@ -933,1 +933,1 @@\n-        isStatic = Modifier.isStatic(mods);\n+        isStaticMain = Modifier.isStatic(mods);\n@@ -935,1 +935,1 @@\n-        noArgs = mainMethod.getParameterCount() == 0;\n+        noArgMain = mainMethod.getParameterCount() == 0;\n@@ -938,1 +938,1 @@\n-            if (!isStatic || !isPublic || noArgs) {\n+            if (!isStaticMain || !isPublic || noArgMain) {\n@@ -945,1 +945,1 @@\n-        if (!isStatic) {\n+        if (!isStaticMain) {\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/LauncherHelper.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -391,2 +391,2 @@\n- * Invoke a static main with arguments. Returns 0 if successful otherwise\n- * processes the pending exception from GetStaticMethodID and returns 1.\n+ * Invoke a static main with arguments. Returns 1 (true) if successful otherwise\n+ * processes the pending exception from GetStaticMethodID and returns 0 (false).\n@@ -395,2 +395,1 @@\n-invokeStaticMainWithArgs(JNIEnv *env, jclass mainClass, jobjectArray mainArgs,\n-        JavaVM *vm, int ret) {\n+invokeStaticMainWithArgs(JNIEnv *env, jclass mainClass, jobjectArray mainArgs) {\n@@ -399,1 +398,1 @@\n-    CHECK_EXCEPTION_LEAVE(1);\n+    NULL_CHECK0(mainID);\n@@ -401,1 +400,1 @@\n-    return 0;\n+    return 1;\n@@ -405,2 +404,2 @@\n- * Invoke an instance main with arguments. Returns 0 if successful otherwise\n- * processes the pending exception from GetMethodID and returns 1.\n+ * Invoke an instance main with arguments. Returns 1 (true) if successful otherwise\n+ * processes the pending exception from GetMethodID and returns 0 (false).\n@@ -409,2 +408,4 @@\n-invokeInstanceMainWithArgs(JNIEnv *env, jclass mainClass, jobjectArray mainArgs,\n-        JavaVM *vm, int ret) {\n+invokeInstanceMainWithArgs(JNIEnv *env, jclass mainClass, jobjectArray mainArgs) {\n+    jmethodID mainID =\n+        (*env)->GetMethodID(env, mainClass, \"main\", \"([Ljava\/lang\/String;)V\");\n+    NULL_CHECK0(mainID);\n@@ -412,1 +413,1 @@\n-    CHECK_EXCEPTION_LEAVE(1);\n+    NULL_CHECK0(constructor);\n@@ -414,4 +415,2 @@\n-    CHECK_EXCEPTION_NULL_LEAVE(mainObject);\n-    jmethodID mainID = (*env)->GetMethodID(env, mainClass, \"main\",\n-                                 \"([Ljava\/lang\/String;)V\");\n-    CHECK_EXCEPTION_LEAVE(1);\n+    CHECK_EXCEPTION_RETURN_VALUE(0);\n+    NULL_CHECK0(mainObject);\n@@ -419,1 +418,1 @@\n-    return 0;\n+    return 1;\n@@ -423,2 +422,2 @@\n- * Invoke a static main without arguments. Returns 0 if successful otherwise\n- * processes the pending exception from GetStaticMethodID and returns 1.\n+ * Invoke a static main without arguments. Returns 1 (true) if successful otherwise\n+ * processes the pending exception from GetStaticMethodID and returns 0 (false).\n@@ -427,2 +426,1 @@\n-invokeStaticMainWithoutArgs(JNIEnv *env, jclass mainClass,\n-        JavaVM *vm, int ret) {\n+invokeStaticMainWithoutArgs(JNIEnv *env, jclass mainClass) {\n@@ -431,1 +429,1 @@\n-    CHECK_EXCEPTION_LEAVE(1);\n+    NULL_CHECK0(mainID);\n@@ -433,1 +431,1 @@\n-    return 0;\n+    return 1;\n@@ -437,2 +435,2 @@\n- * Invoke an instance main without arguments. Returns 0 if successful otherwise\n- * processes the pending exception from GetMethodID and returns 1.\n+ * Invoke an instance main without arguments. Returns 1 (true) if successful otherwise\n+ * processes the pending exception from GetMethodID and returns 0 (false).\n@@ -441,2 +439,1 @@\n-invokeInstanceMainWithoutArgs(JNIEnv *env, jclass mainClass,\n-        JavaVM *vm, int ret) {\n+invokeInstanceMainWithoutArgs(JNIEnv *env, jclass mainClass) {\n@@ -444,1 +441,1 @@\n-    CHECK_EXCEPTION_LEAVE(1);\n+    NULL_CHECK0(constructor);\n@@ -446,4 +443,4 @@\n-    CHECK_EXCEPTION_NULL_LEAVE(mainObject);\n-    jmethodID mainID = (*env)->GetMethodID(env, mainClass, \"main\",\n-                                 \"()V\");\n-    CHECK_EXCEPTION_LEAVE(1);\n+    CHECK_EXCEPTION_RETURN_VALUE(0);\n+    NULL_CHECK0(mainObject);\n+    jmethodID mainID = (*env)->GetMethodID(env, mainClass, \"main\", \"()V\");\n+    NULL_CHECK0(mainID);\n@@ -451,1 +448,1 @@\n-    return 0;\n+    return 1;\n@@ -471,0 +468,5 @@\n+    jclass helperClass;\n+    jfieldID isStaticMainField;\n+    jboolean isStaticMain;\n+    jfieldID noArgMainField;\n+    jboolean noArgMain;\n@@ -610,5 +612,6 @@\n-    jclass helperClass = GetLauncherHelperClass(env);\n-    jfieldID isStaticField =\n-        (*env)->GetStaticFieldID(env, helperClass, \"isStatic\", \"Z\");\n-    jboolean isStatic =\n-        (*env)->GetStaticBooleanField(env, helperClass, isStaticField);\n+    helperClass = GetLauncherHelperClass(env);\n+    isStaticMainField =\n+        (*env)->GetStaticFieldID(env, helperClass, \"isStaticMain\", \"Z\");\n+    CHECK_EXCEPTION_NULL_LEAVE(isStaticMainField);\n+    isStaticMain =\n+        (*env)->GetStaticBooleanField(env, helperClass, isStaticMainField);\n@@ -616,4 +619,4 @@\n-    jfieldID noArgsField =\n-        (*env)->GetStaticFieldID(env, helperClass, \"noArgs\", \"Z\");\n-    jboolean noArgs =\n-        (*env)->GetStaticBooleanField(env, helperClass, noArgsField);\n+    noArgMainField =\n+        (*env)->GetStaticFieldID(env, helperClass, \"noArgMain\", \"Z\");\n+    CHECK_EXCEPTION_NULL_LEAVE(noArgMainField);\n+    noArgMain = (*env)->GetStaticBooleanField(env, helperClass, noArgMainField);\n@@ -621,3 +624,3 @@\n-    if (isStatic) {\n-        if (noArgs) {\n-            ret = invokeStaticMainWithoutArgs(env, mainClass, vm, ret);\n+    if (isStaticMain) {\n+        if (noArgMain) {\n+            ret = invokeStaticMainWithoutArgs(env, mainClass);\n@@ -625,1 +628,1 @@\n-            ret = invokeStaticMainWithArgs(env, mainClass, mainArgs, vm, ret);\n+            ret = invokeStaticMainWithArgs(env, mainClass, mainArgs);\n@@ -628,2 +631,2 @@\n-       if (noArgs) {\n-            ret = invokeInstanceMainWithoutArgs(env, mainClass, vm, ret);\n+       if (noArgMain) {\n+            ret = invokeInstanceMainWithoutArgs(env, mainClass);\n@@ -631,1 +634,1 @@\n-            ret = invokeInstanceMainWithArgs(env, mainClass, mainArgs, vm, ret);\n+            ret = invokeInstanceMainWithArgs(env, mainClass, mainArgs);\n@@ -635,3 +638,1 @@\n-    if (ret) {\n-        return ret;\n-    }\n+    CHECK_EXCEPTION_LEAVE(1);\n","filename":"src\/java.base\/share\/native\/libjli\/java.c","additions":52,"deletions":51,"binary":false,"changes":103,"status":"modified"}]}