{"files":[{"patch":"@@ -2155,1 +2155,0 @@\n-\n@@ -2157,4 +2156,2 @@\n-     *  Outputs this date into {@code StringBuilder}, such as {@code 2007-12-03}.\n-     * <p>\n-     * The output will be in the ISO-8601 format {@code uuuu-MM-dd}.\n-     * @param buf\n+     * Prints the toString result to the given buf, avoiding extra string allocations.\n+     * Requires extra capacity of 10 to avoid StringBuilder reallocation.\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDate.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1640,14 +1640,2 @@\n-     * Outputs this time into {@code StringBuilder}, such as {@code 10:15}.\n-     * <p>\n-     * The output will be one of the following ISO-8601 formats:\n-     * <ul>\n-     * <li>{@code HH:mm}<\/li>\n-     * <li>{@code HH:mm:ss}<\/li>\n-     * <li>{@code HH:mm:ss.SSS}<\/li>\n-     * <li>{@code HH:mm:ss.SSSSSS}<\/li>\n-     * <li>{@code HH:mm:ss.SSSSSSSSS}<\/li>\n-     * <\/ul>\n-     * The format used will be the shortest that outputs the full value of\n-     * the time where the omitted parts are implied to be zero.\n-     *\n-     * @param buf\n+     * Prints the toString result to the given buf, avoiding extra string allocations.\n+     * Requires extra capacity of 10 to avoid StringBuilder reallocation.\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalTime.java","additions":2,"deletions":14,"binary":false,"changes":16,"status":"modified"}]}