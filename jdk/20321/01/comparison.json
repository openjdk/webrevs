{"files":[{"patch":"@@ -2150,0 +2150,13 @@\n+        var buf = new StringBuilder(10);\n+        formatTo(buf);\n+        return buf.toString();\n+    }\n+\n+\n+    \/**\n+     *  Outputs this date into {@code StringBuilder}, such as {@code 2007-12-03}.\n+     * <p>\n+     * The output will be in the ISO-8601 format {@code uuuu-MM-dd}.\n+     * @param buf\n+     *\/\n+    void formatTo(StringBuilder buf) {\n@@ -2154,1 +2167,0 @@\n-        StringBuilder buf = new StringBuilder(10);\n@@ -2167,5 +2179,4 @@\n-        return buf.append(monthValue < 10 ? \"-0\" : \"-\")\n-            .append(monthValue)\n-            .append(dayValue < 10 ? \"-0\" : \"-\")\n-            .append(dayValue)\n-            .toString();\n+        buf.append(monthValue < 10 ? \"-0\" : \"-\")\n+           .append(monthValue)\n+           .append(dayValue < 10 ? \"-0\" : \"-\")\n+           .append(dayValue);\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDate.java","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1968,1 +1968,5 @@\n-        return date.toString() + 'T' + time.toString();\n+        var buf = new StringBuilder(29);\n+        date.formatTo(buf);\n+        buf.append('T');\n+        time.formatTo(buf);\n+        return buf.toString();\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDateTime.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1634,1 +1634,22 @@\n-        StringBuilder buf = new StringBuilder(18);\n+        var buf = new StringBuilder(18);\n+        formatTo(buf);\n+        return buf.toString();\n+    }\n+\n+    \/**\n+     * Outputs this time into {@code StringBuilder}, such as {@code 10:15}.\n+     * <p>\n+     * The output will be one of the following ISO-8601 formats:\n+     * <ul>\n+     * <li>{@code HH:mm}<\/li>\n+     * <li>{@code HH:mm:ss}<\/li>\n+     * <li>{@code HH:mm:ss.SSS}<\/li>\n+     * <li>{@code HH:mm:ss.SSSSSS}<\/li>\n+     * <li>{@code HH:mm:ss.SSSSSSSSS}<\/li>\n+     * <\/ul>\n+     * The format used will be the shortest that outputs the full value of\n+     * the time where the omitted parts are implied to be zero.\n+     *\n+     * @param buf\n+     *\/\n+    void formatTo(StringBuilder buf) {\n@@ -1660,1 +1681,0 @@\n-        return buf.toString();\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalTime.java","additions":22,"deletions":2,"binary":false,"changes":24,"status":"modified"}]}