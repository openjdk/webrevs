{"files":[{"patch":"@@ -86,1 +86,2 @@\n-NOT_PRODUCT(cflags(IGVPrintLevel,       intx, PrintIdealGraphLevel, IGVPrintLevel)) \\\n+NOT_PRODUCT(cflags(PhasePrintLevel, intx, PrintPhaseLevel, PhasePrintLevel)) \\\n+NOT_PRODUCT(cflags(IGVPrintLevel,   intx, PrintIdealGraphLevel, IGVPrintLevel)) \\\n@@ -205,1 +206,1 @@\n-  bool should_print_phase(const CompilerPhaseType cpt) const {\n+  bool should_print_ideal_phase(const CompilerPhaseType cpt) const {\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,0 +87,1 @@\n+NOT_PRODUCT(option(PhasePrintLevel, \"PhasePrintLevel\", Intx)) \\\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -389,0 +389,9 @@\n+  develop(intx, PrintPhaseLevel, 0,                                         \\\n+          \"Level of detail of the phase trace print. \"                      \\\n+          \"System-wide value, -1=printing is disabled, \"                    \\\n+          \"0=print nothing except PhasePrintLevel directives, \"             \\\n+          \"6=all details printed. \"                                         \\\n+          \"Level of detail of printouts can be set on a per-method level \"  \\\n+          \"as well by using CompileCommand=PrintPhaseLevel.\")                        \\\n+          range(-1, 6)                                                      \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"compiler\/compilerDefinitions.hpp\"\n@@ -578,0 +579,4 @@\n+void Compile::print_phase(const char* phase_name) {\n+  tty->print_cr(\"%u.\\t%s\", ++_phase_counter, phase_name);\n+}\n+\n@@ -1057,0 +1062,1 @@\n+  _phase_counter = 0;\n@@ -5137,1 +5143,4 @@\n-  if (should_print_phase(cpt)) {\n+  if (should_print_phase(level)) {\n+    print_phase(name);\n+  }\n+  if (should_print_ideal_phase(cpt)) {\n@@ -5168,1 +5177,0 @@\n-bool Compile::should_print_phase(CompilerPhaseType cpt) {\n@@ -5170,5 +5178,7 @@\n-  if (_directive->should_print_phase(cpt)) {\n-    return true;\n-  }\n-#endif\n-  return false;\n+bool Compile::should_print_phase(const int level) const {\n+  return PrintPhaseLevel > 0 && directive()->PhasePrintLevelOption >= level &&\n+         _method != nullptr; \/\/ Do not print phases for stubs.\n+}\n+\n+bool Compile::should_print_ideal_phase(CompilerPhaseType cpt) const {\n+  return _directive->should_print_ideal_phase(cpt);\n@@ -5177,1 +5187,0 @@\n-#ifndef PRODUCT\n@@ -5184,1 +5193,0 @@\n-#endif\n@@ -5187,1 +5195,2 @@\n-#ifndef PRODUCT\n+  PRODUCT_RETURN_(return false;);\n+\n@@ -5197,3 +5206,0 @@\n-#else\n-  return false;\n-#endif\n@@ -5202,1 +5208,0 @@\n-#ifndef PRODUCT\n@@ -5291,1 +5296,1 @@\n-#endif\n+#endif \/\/ !PRODUCT\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":20,"deletions":15,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -349,0 +349,1 @@\n+  uint                  _phase_counter;         \/\/ Counter for the number of already printed phases\n@@ -643,1 +644,1 @@\n-  bool          method_has_option(CompileCommandEnum option) {\n+  bool          method_has_option(CompileCommandEnum option) const {\n@@ -650,0 +651,1 @@\n+  void          print_phase(const char* phase_name);\n@@ -667,2 +669,0 @@\n-  bool should_print_igv(int level);\n-  bool should_print_phase(CompilerPhaseType cpt);\n@@ -673,0 +673,3 @@\n+  bool should_print_igv(int level);\n+  bool should_print_phase(int level) const;\n+  bool should_print_ideal_phase(CompilerPhaseType cpt) const;\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}