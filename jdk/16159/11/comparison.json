{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -441,1 +441,0 @@\n-        KeyStore ts = KeyStore.getInstance(\"JKS\");\n@@ -443,5 +442,4 @@\n-        try (FileInputStream fsIn = new FileInputStream(tsPath)) {\n-            ts.load(fsIn, pass);\n-            tmf = TrustManagerFactory.getInstance(\"SunX509\");\n-            tmf.init(ts);\n-        }\n+        KeyStore ts = KeyStore.getInstance(new File(tsPath), pass);\n+        tmf = TrustManagerFactory.getInstance(\"SunX509\");\n+        tmf.init(ts);\n+\n@@ -466,1 +464,0 @@\n-        KeyStore ks = KeyStore.getInstance(\"JKS\");\n@@ -468,5 +465,4 @@\n-        try (FileInputStream fsIn = new FileInputStream(ksPath)) {\n-            ks.load(fsIn, pass);\n-            kmf = KeyManagerFactory.getInstance(\"SunX509\");\n-            kmf.init(ks, pass);\n-        }\n+        KeyStore ks = KeyStore.getInstance(new File(ksPath), pass);\n+        kmf = KeyManagerFactory.getInstance(\"SunX509\");\n+        kmf.init(ks, pass);\n+\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLSession\/ResumeTLS13withSNI.java","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -182,2 +182,2 @@\n-        KeyStore ks = KeyStore.getInstance(\"JKS\");\n-        ks.load(new FileInputStream(keyFilename), passwd.toCharArray());\n+        KeyStore ks = KeyStore.getInstance(new File(keyFilename),\n+                passwd.toCharArray());\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLSession\/SSLCtxAccessToSessCtx.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -318,4 +318,3 @@\n-        KeyStore ks = KeyStore.getInstance(\"JKS\");\n-        try (FileInputStream fis = new FileInputStream(keyFilename)) {\n-            ks.load(fis, passwd.toCharArray());\n-        }\n+        KeyStore ks = KeyStore.getInstance(new File(keyFilename),\n+                passwd.toCharArray());\n+\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLSession\/SessionCacheSizeTests.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -345,2 +345,2 @@\n-        KeyStore ks = KeyStore.getInstance(\"JKS\");\n-        ks.load(new FileInputStream(keyFilename), passwd.toCharArray());\n+        KeyStore ks = KeyStore.getInstance(new File(keyFilename),\n+                passwd.toCharArray());\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLSession\/SessionTimeOutTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"filename":"test\/jdk\/javax\/net\/ssl\/etc\/keystore","binary":true,"status":"modified"},{"filename":"test\/jdk\/javax\/net\/ssl\/etc\/truststore","binary":true,"status":"modified"},{"filename":"test\/jdk\/javax\/net\/ssl\/etc\/unknown_keystore","binary":true,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -267,2 +267,2 @@\n-            KeyStore ks = KeyStore.getInstance(\"JKS\");\n-            ks.load(new FileInputStream(keystorefile), passphrase.toCharArray());\n+            KeyStore ks = KeyStore.getInstance(new File(keystorefile),\n+                    passphrase.toCharArray());\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpClient\/B8025710.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import java.io.ByteArrayInputStream;\n@@ -32,1 +33,1 @@\n-import java.io.FileInputStream;\n+import java.io.File;\n@@ -41,1 +42,0 @@\n-import java.io.ByteArrayInputStream;\n@@ -52,2 +52,2 @@\n-        KeyStore keyStore = KeyStore.getInstance(\"JKS\");\n-        keyStore.load(new FileInputStream(ks), pass.toCharArray());\n+        KeyStore keyStore = KeyStore.getInstance(new File(ks),\n+                pass.toCharArray());\n","filename":"test\/jdk\/sun\/security\/provider\/X509Factory\/BadPem.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.io.File;\n@@ -52,2 +53,2 @@\n-        KeyStore keyStore = KeyStore.getInstance(\"JKS\");\n-        keyStore.load(new FileInputStream(ks), pass.toCharArray());\n+        KeyStore keyStore = KeyStore.getInstance(new File(ks),\n+                pass.toCharArray());\n","filename":"test\/jdk\/sun\/security\/provider\/X509Factory\/BigCRL.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -193,3 +193,2 @@\n-            KeyStore ks = KeyStore.getInstance(\"JKS\");\n-            ks.load(new FileInputStream(testRoot\n-                                + \"\/..\/..\/..\/..\/javax\/net\/ssl\/etc\/truststore\"),\n+            KeyStore ks = KeyStore.getInstance(new File(testRoot\n+                    + \"\/..\/..\/..\/..\/javax\/net\/ssl\/etc\/truststore\"),\n","filename":"test\/jdk\/sun\/security\/ssl\/GenSSLConfigs\/main.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-import java.io.FileInputStream;\n+import java.io.File;\n@@ -149,1 +149,2 @@\n-            ks = KeyStore.getInstance(\"JKS\");\n+            ks = KeyStore.getInstance(new File(System.getProperty(\n+                            \"javax.net.ssl.keyStore\")), passphrase);\n@@ -151,2 +152,0 @@\n-            ks.load(new FileInputStream(System.getProperty(\n-                        \"javax.net.ssl.keyStore\")), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/InputRecord\/ClientHelloRead.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.io.File;\n@@ -104,3 +105,0 @@\n-        KeyStore ks = KeyStore.getInstance(\"JKS\");\n-        KeyStore ts = KeyStore.getInstance(\"JKS\");\n-\n@@ -109,2 +107,2 @@\n-        ks.load(new FileInputStream(keyStoreFile), passphrase);\n-        ts.load(new FileInputStream(keyStoreFile), passphrase);\n+        KeyStore ks = KeyStore.getInstance(new File(keyStoreFile), passphrase);\n+        KeyStore ts = KeyStore.getInstance(new File(keyStoreFile), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLEngineImpl\/TestBadDNForPeerCA.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.io.File;\n@@ -127,3 +128,0 @@\n-        KeyStore ks = KeyStore.getInstance(\"JKS\");\n-        KeyStore ts = KeyStore.getInstance(\"JKS\");\n-\n@@ -132,2 +130,2 @@\n-        ks.load(new FileInputStream(keyStoreFile), passphrase);\n-        ts.load(new FileInputStream(keyStoreFile), passphrase);\n+        KeyStore ks = KeyStore.getInstance(new File(keyStoreFile), passphrase);\n+        KeyStore ts = KeyStore.getInstance(new File(keyStoreFile), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLEngineImpl\/TestBadDNForPeerCA12.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,3 +176,0 @@\n-        KeyStore ks = KeyStore.getInstance(\"JKS\");\n-        KeyStore ts = KeyStore.getInstance(\"JKS\");\n-\n@@ -181,5 +178,2 @@\n-        try (FileInputStream keyFile = new FileInputStream(keyFilename);\n-                FileInputStream trustFile = new FileInputStream(trustFilename)) {\n-            ks.load(keyFile, passphrase);\n-            ts.load(trustFile, passphrase);\n-        }\n+        KeyStore ks = KeyStore.getInstance(new File(keyFilename), passphrase);\n+        KeyStore ts = KeyStore.getInstance(new File(trustFilename), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/SSLSocketSSLEngineCloseInbound.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,2 @@\n+        System.setProperty(\"javax.net.ssl.trustStoreType\", \"PKCS12\");\n+        System.setProperty(\"javax.net.ssl.trustStorePassword\", \"passphrase\");\n","filename":"test\/jdk\/sun\/security\/ssl\/ServerHandshaker\/GetPeerHost.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,0 @@\n-            KeyStore ks = KeyStore.getInstance(\"JKS\");\n@@ -55,3 +54,2 @@\n-            ks.load(new FileInputStream(testRoot\n-                        + \"\/..\/..\/..\/..\/javax\/net\/ssl\/etc\/keystore\"),\n-                    passphrase);\n+            KeyStore ks = KeyStore.getInstance(new File(testRoot\n+                    + \"\/..\/..\/..\/..\/javax\/net\/ssl\/etc\/keystore\"), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/ServerHandshaker\/GetPeerHostServer.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -257,3 +257,0 @@\n-        KeyStore ks = KeyStore.getInstance(\"JKS\");\n-        KeyStore ts = KeyStore.getInstance(\"JKS\");\n-\n@@ -262,2 +259,2 @@\n-        ks.load(new FileInputStream(keyFile), passphrase);\n-        ts.load(new FileInputStream(trustFile), passphrase);\n+        KeyStore ks = KeyStore.getInstance(new File(keyFile), passphrase);\n+        KeyStore ts = KeyStore.getInstance(new File(trustFile), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/ServerHandshaker\/HelloExtensionsTest.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,2 +74,1 @@\n-        ks = KeyStore.getInstance(\"JKS\");\n-        ks.load(new FileInputStream(keyFilename), password);\n+        ks = KeyStore.getInstance(new File(keyFilename), password);\n","filename":"test\/jdk\/sun\/security\/ssl\/X509KeyManager\/PreferredKey.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,2 +73,1 @@\n-        ks = KeyStore.getInstance(\"JKS\");\n-        ks.load(new FileInputStream(keyFilename), passphrase);\n+        ks = KeyStore.getInstance(new File(keyFilename), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/X509KeyManager\/SelectOneKeyOutOfMany.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -195,2 +195,1 @@\n-        KeyStore ks = KeyStore.getInstance(\"JKS\");\n-        ks.load(new FileInputStream(keyFilename), cpasswd);\n+        KeyStore ks = KeyStore.getInstance(new File(keyFilename), cpasswd);\n@@ -200,2 +199,1 @@\n-        KeyStore ts = KeyStore.getInstance(\"JKS\");\n-        ts.load(new FileInputStream(trustFilename), cpasswd);\n+        KeyStore ts = KeyStore.getInstance(new File(trustFilename), cpasswd);\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/CertRequestOverflow.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,2 +68,1 @@\n-        KeyStore ks = KeyStore.getInstance(\"JKS\");\n-        ks.load(new FileInputStream(trustFilename), passphrase);\n+        KeyStore ks = KeyStore.getInstance(new File(trustFilename), passphrase);\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/CheckNullEntity.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,2 +184,1 @@\n-        KeyStore ks = KeyStore.getInstance(\"JKS\");\n-        ks.load(new FileInputStream(keyFilename), cpasswd);\n+        KeyStore ks = KeyStore.getInstance(new File(keyFilename), cpasswd);\n@@ -189,2 +188,1 @@\n-        KeyStore ts = KeyStore.getInstance(\"JKS\");\n-        ts.load(new FileInputStream(trustFilename), cpasswd);\n+        KeyStore ts = KeyStore.getInstance(new File(trustFilename), cpasswd);\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/X509ExtendedTMEnabled.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}