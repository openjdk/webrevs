{"files":[{"patch":"@@ -3718,1 +3718,1 @@\n-      __ str(rscratch2, Address(rthread, JavaThread::last_Java_pc_offset()));\n+      __ str(rscratch2, Address(rthread, create_imm_offset(JavaThread, last_Java_pc_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -659,0 +659,3 @@\n+  template <int64_t immed_offset, uint shift>\n+  static constexpr bool offset_ok_for_immed_compile_time();\n+\n@@ -671,0 +674,7 @@\n+\n+  #define create_imm_offset(klass, field_offset_func) \\\n+  ([]() { \\\n+    constexpr size_t max_possible_offset = sizeof(klass); \\\n+    static_assert(Address::offset_ok_for_immed_compile_time<max_possible_offset, 0>(), \"must fit in instruction\"); \\\n+    return klass::field_offset_func(); \\\n+  }())\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -38,1 +38,2 @@\n-\/\/ supported data widths, {1, 2, 4, 8, 16} bytes.\n+\/\/ supported data widths, {1, 2, 4, 8, 16} bytes. The values of offset and\n+\/\/ shift will be evaluated at runtime\n@@ -51,0 +52,20 @@\n+\/\/ Check if an offset is within the encoding range for LDR\/STR instructions\n+\/\/ with an immediate offset, either using unscaled signed 9-bits or, scaled\n+\/\/ unsigned 12-bits. We favour the scaled unsigned encoding for all aligned\n+\/\/ offsets (only using the signed 9-bit encoding for negative and unaligned\n+\/\/ offsets). As a precondition, 0 <= shift <= 4 is the log2(size), for the\n+\/\/ supported data widths, {1, 2, 4, 8, 16} bytes. The values of offset and\n+\/\/ shift will be evaluated at compile time\n+template <int64_t immed_offset, uint shift>\n+inline constexpr bool Address::offset_ok_for_immed_compile_time() {\n+  static_assert(shift < 5, \"precond\");\n+  uint mask = (1 << shift) - 1;\n+  if (immed_offset < 0 || (immed_offset & mask) != 0) {\n+    \/\/ Unscaled signed offset, encoded in a signed imm9 field.\n+    return Assembler::is_simm9(immed_offset);\n+  } else {\n+    \/\/ Scaled unsigned offset, encoded in an unsigned imm12:_ field.\n+    return Assembler::is_uimm12(immed_offset >> shift);\n+  }\n+}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.inline.hpp","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-  __ str(rscratch1, Address(rthread, JavaThread::saved_exception_pc_offset()));\n+  __ str(rscratch1, Address(rthread, create_imm_offset(JavaThread, saved_exception_pc_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_CodeStubs_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -399,3 +399,3 @@\n-  __ ldr(r0, Address(rthread, JavaThread::exception_oop_offset()));\n-  __ str(zr, Address(rthread, JavaThread::exception_oop_offset()));\n-  __ str(zr, Address(rthread, JavaThread::exception_pc_offset()));\n+  __ ldr(r0, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n+  __ str(zr, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n+  __ str(zr, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n@@ -1441,1 +1441,1 @@\n-    __ ldr(k_RInfo, Address(k_RInfo, ObjArrayKlass::element_klass_offset()));\n+    __ ldr(k_RInfo, Address(k_RInfo, create_imm_offset(ObjArrayKlass, element_klass_offset)));\n@@ -2375,1 +2375,1 @@\n-        __ ldr(c_rarg4, Address(c_rarg4, ObjArrayKlass::element_klass_offset()));\n+        __ ldr(c_rarg4, Address(c_rarg4, create_imm_offset(ObjArrayKlass, element_klass_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-  str(obj, Address(disp_hdr, BasicObjectLock::obj_offset()));\n+  str(obj, Address(disp_hdr, create_imm_offset(BasicObjectLock, obj_offset)));\n@@ -143,1 +143,1 @@\n-  ldr(obj, Address(disp_hdr, BasicObjectLock::obj_offset()));\n+  ldr(obj, Address(disp_hdr, create_imm_offset(BasicObjectLock, obj_offset)));\n@@ -180,2 +180,2 @@\n-    ldr(t1, Address(klass, Klass::prototype_header_offset()));\n-    str(t1, Address(obj, oopDesc::mark_offset_in_bytes()));\n+    ldr(t1, Address(klass, create_imm_offset(Klass, prototype_header_offset)));\n+    str(t1, Address(obj, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -184,1 +184,1 @@\n-    str(t1, Address(obj, oopDesc::mark_offset_in_bytes()));\n+    str(t1, Address(obj, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -189,1 +189,1 @@\n-      str(klass, Address(obj, oopDesc::klass_offset_in_bytes()));\n+      str(klass, Address(obj, create_imm_offset(oopDesc, klass_offset_in_bytes)));\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-    ldr(rscratch1, Address(rthread, in_bytes(Thread::pending_exception_offset())));\n+    ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -95,1 +95,1 @@\n-      str(zr, Address(rthread, JavaThread::vm_result_offset()));\n+      str(zr, Address(rthread, create_imm_offset(JavaThread, vm_result_offset)));\n@@ -98,1 +98,1 @@\n-      str(zr, Address(rthread, JavaThread::vm_result_2_offset()));\n+      str(zr, Address(rthread, create_imm_offset(JavaThread, vm_result_2_offset)));\n@@ -399,2 +399,2 @@\n-    __ ldr(exception_oop, Address(rthread, Thread::pending_exception_offset()));\n-    __ str(zr, Address(rthread, Thread::pending_exception_offset()));\n+    __ ldr(exception_oop, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n+    __ str(zr, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -407,2 +407,2 @@\n-    __ str(zr, Address(rthread, JavaThread::vm_result_offset()));\n-    __ str(zr, Address(rthread, JavaThread::vm_result_2_offset()));\n+    __ str(zr, Address(rthread, create_imm_offset(JavaThread, vm_result_offset)));\n+    __ str(zr, Address(rthread, create_imm_offset(JavaThread, vm_result_2_offset)));\n@@ -435,1 +435,1 @@\n-  __ ldr(rscratch1, Address(rthread, JavaThread::exception_oop_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n@@ -441,1 +441,1 @@\n-  __ ldr(rscratch1, Address(rthread, JavaThread::exception_pc_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n@@ -449,2 +449,2 @@\n-  __ str(exception_oop, Address(rthread, JavaThread::exception_oop_offset()));\n-  __ str(exception_pc, Address(rthread, JavaThread::exception_pc_offset()));\n+  __ str(exception_oop, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n+  __ str(exception_pc, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n@@ -512,1 +512,1 @@\n-  __ ldr(rscratch1, Address(rthread, JavaThread::exception_oop_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n@@ -518,1 +518,1 @@\n-  __ ldr(rscratch1, Address(rthread, JavaThread::exception_pc_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n@@ -599,1 +599,1 @@\n-  __ ldr(rscratch1, Address(rthread, Thread::pending_exception_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -605,1 +605,1 @@\n-  __ ldr(rscratch1, Address(rthread, JavaThread::exception_pc_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-  __ str(rscratch1, Address(rthread, JavaThread::saved_exception_pc_offset()));\n+  __ str(rscratch1, Address(rthread, create_imm_offset(JavaThread, saved_exception_pc_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_CodeStubs_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-  ldr(disp_hdr, Address(oop, oopDesc::mark_offset_in_bytes()));\n+  ldr(disp_hdr, Address(oop, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -180,1 +180,1 @@\n-    str(tmp, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n+    str(tmp, Address(box, create_imm_offset(BasicLock, displaced_header_offset_in_bytes)));\n@@ -202,1 +202,1 @@\n-    str(tmp\/*==0, perhaps*\/, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n+    str(tmp\/*==0, perhaps*\/, Address(box, create_imm_offset(BasicLock, displaced_header_offset_in_bytes)));\n@@ -210,1 +210,1 @@\n-  ldr(rscratch2, Address(rthread, JavaThread::monitor_owner_id_offset()));\n+  ldr(rscratch2, Address(rthread, create_imm_offset(JavaThread, monitor_owner_id_offset)));\n@@ -220,1 +220,1 @@\n-  str(tmp, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n+  str(tmp, Address(box, create_imm_offset(BasicLock, displaced_header_offset_in_bytes)));\n@@ -261,1 +261,1 @@\n-    ldr(disp_hdr, Address(box, BasicLock::displaced_header_offset_in_bytes()));\n+    ldr(disp_hdr, Address(box, create_imm_offset(BasicLock, displaced_header_offset_in_bytes)));\n@@ -269,1 +269,1 @@\n-  ldr(tmp, Address(oop, oopDesc::mark_offset_in_bytes()));\n+  ldr(tmp, Address(oop, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -293,1 +293,1 @@\n-  ldr(disp_hdr, Address(tmp, ObjectMonitor::recursions_offset()));\n+  ldr(disp_hdr, Address(tmp, create_imm_offset(ObjectMonitor, recursions_offset)));\n@@ -300,1 +300,1 @@\n-  str(disp_hdr, Address(tmp, ObjectMonitor::recursions_offset()));\n+  str(disp_hdr, Address(tmp, create_imm_offset(ObjectMonitor, recursions_offset)));\n@@ -317,2 +317,2 @@\n-  ldr(rscratch1, Address(tmp, ObjectMonitor::EntryList_offset()));\n-  ldr(tmpReg, Address(tmp, ObjectMonitor::cxq_offset()));\n+  ldr(rscratch1, Address(tmp, create_imm_offset(ObjectMonitor, EntryList_offset)));\n+  ldr(tmpReg, Address(tmp, create_imm_offset(ObjectMonitor, cxq_offset)));\n@@ -324,1 +324,1 @@\n-  ldr(rscratch1, Address(tmp, ObjectMonitor::succ_offset()));\n+  ldr(rscratch1, Address(tmp, create_imm_offset(ObjectMonitor, succ_offset)));\n@@ -330,1 +330,1 @@\n-  str(tmp, Address(rthread, JavaThread::unlocked_inflated_monitor_offset()));\n+  str(tmp, Address(rthread, create_imm_offset(JavaThread, unlocked_inflated_monitor_offset)));\n@@ -367,1 +367,1 @@\n-    str(zr, Address(box, BasicLock::object_monitor_cache_offset_in_bytes()));\n+    str(zr, Address(box, create_imm_offset(BasicLock, object_monitor_cache_offset_in_bytes)));\n@@ -399,1 +399,1 @@\n-    ldr(t1_mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+    ldr(t1_mark, Address(obj, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -473,1 +473,1 @@\n-    ldr(rscratch2, Address(rthread, JavaThread::monitor_owner_id_offset()));\n+    ldr(rscratch2, Address(rthread, create_imm_offset(JavaThread, monitor_owner_id_offset)));\n@@ -487,1 +487,1 @@\n-      str(t1_monitor, Address(box, BasicLock::object_monitor_cache_offset_in_bytes()));\n+      str(t1_monitor, Address(box, create_imm_offset(BasicLock, object_monitor_cache_offset_in_bytes)));\n@@ -550,1 +550,1 @@\n-    ldr(t1_mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+    ldr(t1_mark, Address(obj, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -570,1 +570,1 @@\n-    str(t2_top, Address(rthread, JavaThread::lock_stack_top_offset()));\n+    str(t2_top, Address(rthread, create_imm_offset(JavaThread, lock_stack_top_offset)));\n@@ -577,1 +577,1 @@\n-    ldr(t1_mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+    ldr(t1_mark, Address(obj, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -605,1 +605,1 @@\n-      ldr(t1_monitor, Address(box, BasicLock::object_monitor_cache_offset_in_bytes()));\n+      ldr(t1_monitor, Address(box, create_imm_offset(BasicLock, object_monitor_cache_offset_in_bytes)));\n@@ -615,1 +615,1 @@\n-    ldr(t2_recursions, Address(t1_monitor, ObjectMonitor::recursions_offset()));\n+    ldr(t2_recursions, Address(t1_monitor, create_imm_offset(ObjectMonitor, recursions_offset)));\n@@ -620,1 +620,1 @@\n-    str(t2_recursions, Address(t1_monitor, ObjectMonitor::recursions_offset()));\n+    str(t2_recursions, Address(t1_monitor, create_imm_offset(ObjectMonitor, recursions_offset)));\n@@ -640,2 +640,2 @@\n-    ldr(rscratch1, Address(t1_monitor, ObjectMonitor::EntryList_offset()));\n-    ldr(t3_t, Address(t1_monitor, ObjectMonitor::cxq_offset()));\n+    ldr(rscratch1, Address(t1_monitor, create_imm_offset(ObjectMonitor, EntryList_offset)));\n+    ldr(t3_t, Address(t1_monitor, create_imm_offset(ObjectMonitor, cxq_offset)));\n@@ -647,1 +647,1 @@\n-    ldr(rscratch1, Address(t1_monitor, ObjectMonitor::succ_offset()));\n+    ldr(rscratch1, Address(t1_monitor, create_imm_offset(ObjectMonitor, succ_offset)));\n@@ -653,1 +653,1 @@\n-    str(t1_monitor, Address(rthread, JavaThread::unlocked_inflated_monitor_offset()));\n+    str(t1_monitor, Address(rthread, create_imm_offset(JavaThread, unlocked_inflated_monitor_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-  __ ldr(obj, Address(rthread, JavaThread::tlab_top_offset()));\n+  __ ldr(obj, Address(rthread, create_imm_offset(JavaThread, tlab_top_offset)));\n@@ -258,1 +258,1 @@\n-  __ ldr(rscratch1, Address(rthread, JavaThread::tlab_end_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, tlab_end_offset)));\n@@ -263,1 +263,1 @@\n-  __ str(end, Address(rthread, JavaThread::tlab_top_offset()));\n+  __ str(end, Address(rthread, create_imm_offset(JavaThread, tlab_top_offset)));\n@@ -383,1 +383,1 @@\n-  __ ldr(r10, Address(rscratch1, ClassLoaderData::holder_offset()));\n+  __ ldr(r10, Address(rscratch1, create_imm_offset(ClassLoaderData, holder_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shared\/barrierSetAssembler_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -220,1 +220,1 @@\n-  __ ldr(tmp, Address(dst, oopDesc::mark_offset_in_bytes()));\n+  __ ldr(tmp, Address(dst, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -210,1 +210,1 @@\n-    __ ldr(rnew_zpointer, Address(rthread, ZThreadLocalData::store_bad_mask_offset()));\n+    __ ldr(rnew_zpointer, Address(rthread, create_imm_offset(ZThreadLocalData, store_bad_mask_offset)));\n@@ -222,1 +222,1 @@\n-    __ ldr(rtmp, Address(rthread, ZThreadLocalData::store_good_mask_offset()));\n+    __ ldr(rtmp, Address(rthread, create_imm_offset(ZThreadLocalData, store_good_mask_offset)));\n@@ -238,1 +238,1 @@\n-  __ ldr(tmp2, Address(tmp1, ZStoreBarrierBuffer::current_offset()));\n+  __ ldr(tmp2, Address(tmp1, create_imm_offset(ZStoreBarrierBuffer, current_offset)));\n@@ -244,1 +244,1 @@\n-  __ str(tmp2, Address(tmp1, ZStoreBarrierBuffer::current_offset()));\n+  __ str(tmp2, Address(tmp1, create_imm_offset(ZStoreBarrierBuffer, current_offset)));\n@@ -252,1 +252,1 @@\n-  __ str(tmp1, Address(tmp2, in_bytes(ZStoreBarrierEntry::p_offset())));\n+  __ str(tmp1, Address(tmp2, create_imm_offset(ZStoreBarrierEntry, p_offset)));\n@@ -256,1 +256,1 @@\n-  __ str(tmp1, Address(tmp2, in_bytes(ZStoreBarrierEntry::prev_offset())));\n+  __ str(tmp1, Address(tmp2, create_imm_offset(ZStoreBarrierEntry, prev_offset)));\n@@ -335,1 +335,1 @@\n-    __ ldr(tmp2, Address(rthread, ZThreadLocalData::store_good_mask_offset()));\n+    __ ldr(tmp2, Address(rthread, create_imm_offset(ZThreadLocalData, store_good_mask_offset)));\n@@ -467,1 +467,1 @@\n-  __ ldr(tmp, Address(rthread, ZThreadLocalData::load_bad_mask_offset()));\n+  __ ldr(tmp, Address(rthread, create_imm_offset(ZThreadLocalData, load_bad_mask_offset)));\n@@ -527,1 +527,1 @@\n-  __ ldr(tmp1, Address(rthread, ZThreadLocalData::store_bad_mask_offset()));\n+  __ ldr(tmp1, Address(rthread, create_imm_offset(ZThreadLocalData, store_bad_mask_offset)));\n@@ -548,1 +548,1 @@\n-    __ ldr(tmp1, Address(rthread, ZThreadLocalData::store_good_mask_offset()));\n+    __ ldr(tmp1, Address(rthread, create_imm_offset(ZThreadLocalData, store_good_mask_offset)));\n@@ -681,1 +681,1 @@\n-    __ ldr(tmp1, Address(rthread, ZThreadLocalData::store_good_mask_offset()));\n+    __ ldr(tmp1, Address(rthread, create_imm_offset(ZThreadLocalData, store_good_mask_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zBarrierSetAssembler_aarch64.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  ldr(rscratch1, Address(rscratch1, Method::const_offset()));\n+  ldr(rscratch1, Address(rscratch1, create_imm_offset(Method, const_offset)));\n@@ -116,1 +116,1 @@\n-  ldr(r2, Address(rthread, JavaThread::jvmti_thread_state_offset()));\n+  ldr(r2, Address(rthread, create_imm_offset(JavaThread, jvmti_thread_state_offset)));\n@@ -145,1 +145,1 @@\n-    ldr(rscratch1, Address(rthread, JavaThread::jvmti_thread_state_offset()));\n+    ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, jvmti_thread_state_offset)));\n@@ -157,1 +157,1 @@\n-    ldr(rscratch1, Address(rthread, JavaThread::jvmti_thread_state_offset()));\n+    ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, jvmti_thread_state_offset)));\n@@ -203,1 +203,1 @@\n-  ldr(mcs, Address(method, Method::method_counters_offset()));\n+  ldr(mcs, Address(method, create_imm_offset(Method, method_counters_offset)));\n@@ -207,1 +207,1 @@\n-  ldr(mcs, Address(method, Method::method_counters_offset()));\n+  ldr(mcs, Address(method, create_imm_offset(Method, method_counters_offset)));\n@@ -219,2 +219,2 @@\n-  ldr(result, Address(result, ConstantPool::cache_offset()));\n-  ldr(result, Address(result, ConstantPoolCache::resolved_references_offset()));\n+  ldr(result, Address(result, create_imm_offset(ConstantPool, cache_offset)));\n+  ldr(result, Address(result, create_imm_offset(ConstantPoolCache, resolved_references_offset)));\n@@ -231,1 +231,1 @@\n-  ldr(klass, Address(cpool,  ConstantPool::resolved_klasses_offset())); \/\/ klass = cpool->_resolved_klasses\n+  ldr(klass, Address(cpool,  create_imm_offset(ConstantPool, resolved_klasses_offset))); \/\/ klass = cpool->_resolved_klasses\n@@ -233,1 +233,1 @@\n-  ldr(klass, Address(klass, Array<Klass*>::base_offset_in_bytes()));\n+  ldr(klass, Address(klass, create_imm_offset(Array<Klass*>, base_offset_in_bytes)));\n@@ -373,1 +373,1 @@\n-    ldr(rscratch1, Address(method, Method::interpreter_entry_offset()));\n+    ldr(rscratch1, Address(method, create_imm_offset(Method, interpreter_entry_offset)));\n@@ -378,1 +378,1 @@\n-  ldr(rscratch1, Address(method, Method::from_interpreted_offset()));\n+  ldr(rscratch1, Address(method, create_imm_offset(Method, from_interpreted_offset)));\n@@ -414,1 +414,1 @@\n-    ldr(rscratch2, Address(rthread, JavaThread::polling_word_offset()));\n+    ldr(rscratch2, Address(rthread, create_imm_offset(JavaThread, polling_word_offset)));\n@@ -506,1 +506,1 @@\n-  ldr(r2, Address(r1, Method::access_flags_offset()));\n+  ldr(r2, Address(r1, create_imm_offset(Method, access_flags_offset)));\n@@ -525,1 +525,1 @@\n-  ldr(r0, Address(c_rarg1, BasicObjectLock::obj_offset()));\n+  ldr(r0, Address(c_rarg1, create_imm_offset(BasicObjectLock, obj_offset)));\n@@ -604,1 +604,1 @@\n-    ldr(rscratch1, Address(c_rarg1, BasicObjectLock::obj_offset()));\n+    ldr(rscratch1, Address(c_rarg1, create_imm_offset(BasicObjectLock, obj_offset)));\n@@ -638,1 +638,1 @@\n-    ldr(rscratch1, Address(rthread, JavaThread::reserved_stack_activation_offset()));\n+    ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, reserved_stack_activation_offset)));\n@@ -709,1 +709,1 @@\n-      ldr(rscratch1, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n+      ldr(rscratch1, Address(obj_reg, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -808,1 +808,1 @@\n-    ldr(obj_reg, Address(lock_reg, BasicObjectLock::obj_offset()));\n+    ldr(obj_reg, Address(lock_reg, create_imm_offset(BasicObjectLock, obj_offset)));\n@@ -811,1 +811,1 @@\n-    str(zr, Address(lock_reg, BasicObjectLock::obj_offset()));\n+    str(zr, Address(lock_reg, create_imm_offset(BasicObjectLock, obj_offset)));\n@@ -835,1 +835,1 @@\n-    str(obj_reg, Address(lock_reg, BasicObjectLock::obj_offset())); \/\/ restore obj\n+    str(obj_reg, Address(lock_reg, create_imm_offset(BasicObjectLock, obj_offset))); \/\/ restore obj\n@@ -856,1 +856,1 @@\n-  ldr(r0, Address(rmethod, in_bytes(Method::method_data_offset())));\n+  ldr(r0, Address(rmethod, create_imm_offset(Method, method_data_offset)));\n@@ -861,2 +861,2 @@\n-  ldr(r1, Address(rmethod, in_bytes(Method::method_data_offset())));\n-  lea(r1, Address(r1, in_bytes(MethodData::data_offset())));\n+  ldr(r1, Address(rmethod, create_imm_offset(Method, method_data_offset)));\n+  lea(r1, Address(r1, create_imm_offset(MethodData, data_offset)));\n@@ -881,1 +881,1 @@\n-  ldr(rscratch1, Address(r1, Method::const_offset()));\n+  ldr(rscratch1, Address(r1, create_imm_offset(Method, const_offset)));\n@@ -1549,1 +1549,1 @@\n-    ldr(rscratch1, Address(rthread, JavaThread::preempt_alternate_return_offset()));\n+    ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, preempt_alternate_return_offset)));\n@@ -1561,1 +1561,1 @@\n-  str(rscratch1, Address(rthread, JavaThread::last_Java_pc_offset()));\n+  str(rscratch1, Address(rthread, create_imm_offset(JavaThread, last_Java_pc_offset)));\n@@ -1567,1 +1567,1 @@\n-  ldr(rscratch1, Address(rthread, JavaThread::preempt_alternate_return_offset()));\n+  ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, preempt_alternate_return_offset)));\n@@ -1569,1 +1569,1 @@\n-  str(zr, Address(rthread, JavaThread::preempt_alternate_return_offset()));\n+  str(zr, Address(rthread, create_imm_offset(JavaThread, preempt_alternate_return_offset)));\n@@ -1662,1 +1662,1 @@\n-          ldr(tmp, Address(mdp, in_bytes(TypeEntriesAtCall::cell_count_offset())));\n+          ldr(tmp, Address(mdp, create_imm_offset(TypeEntriesAtCall, cell_count_offset)));\n@@ -1668,1 +1668,1 @@\n-        ldr(tmp, Address(callee, Method::const_offset()));\n+        ldr(tmp, Address(callee, create_imm_offset(Method, const_offset)));\n@@ -1687,1 +1687,1 @@\n-        ldr(tmp, Address(mdp, in_bytes(TypeEntriesAtCall::cell_count_offset())));\n+        ldr(tmp, Address(mdp, create_imm_offset(TypeEntriesAtCall, cell_count_offset)));\n@@ -1771,1 +1771,1 @@\n-    ldr(tmp1, Address(mdp, ArrayData::array_len_offset()));\n+    ldr(tmp1, Address(mdp, create_imm_offset(ArrayData, array_len_offset)));\n@@ -1807,1 +1807,1 @@\n-  ldr(cache, Address(rcpool, in_bytes(ConstantPoolCache::invokedynamic_entries_offset())));\n+  ldr(cache, Address(rcpool, create_imm_offset(ConstantPoolCache, invokedynamic_entries_offset)));\n@@ -1825,1 +1825,1 @@\n-  ldr(cache, Address(rcpool, ConstantPoolCache::field_entries_offset()));\n+  ldr(cache, Address(rcpool, create_imm_offset(ConstantPoolCache, field_entries_offset)));\n@@ -1839,1 +1839,1 @@\n-  ldr(cache, Address(rcpool, ConstantPoolCache::method_entries_offset()));\n+  ldr(cache, Address(rcpool, create_imm_offset(ConstantPoolCache, method_entries_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-    ldr(reg, Address(reg, in_bytes(Method::const_offset())));\n+    ldr(reg, Address(reg, create_imm_offset(Method, const_offset)));\n@@ -130,1 +130,1 @@\n-    ldr(reg, Address(reg, in_bytes(ConstMethod::constants_offset())));\n+    ldr(reg, Address(reg, create_imm_offset(ConstMethod, constants_offset)));\n@@ -135,1 +135,1 @@\n-    ldr(reg, Address(reg, ConstantPool::cache_offset()));\n+    ldr(reg, Address(reg, create_imm_offset(ConstantPool, cache_offset)));\n@@ -140,1 +140,1 @@\n-    ldr(tags, Address(cpool, ConstantPool::tags_offset()));\n+    ldr(tags, Address(cpool, create_imm_offset(ConstantPool, tags_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -562,1 +562,1 @@\n-    ldr(tmp, Address(rthread, JavaThread::polling_word_offset()));\n+    ldr(tmp, Address(rthread, create_imm_offset(JavaThread, polling_word_offset)));\n@@ -587,1 +587,1 @@\n-  ldr(rscratch1, Address(java_thread, JavaThread::cont_fastpath_offset()));\n+  ldr(rscratch1, Address(java_thread, create_imm_offset(JavaThread, cont_fastpath_offset)));\n@@ -591,1 +591,1 @@\n-  str(rscratch1, Address(java_thread, JavaThread::cont_fastpath_offset()));\n+  str(rscratch1, Address(java_thread, create_imm_offset(JavaThread, cont_fastpath_offset)));\n@@ -598,1 +598,1 @@\n-  ldr(rscratch1, Address(java_thread, JavaThread::cont_fastpath_offset()));\n+  ldr(rscratch1, Address(java_thread, create_imm_offset(JavaThread, cont_fastpath_offset)));\n@@ -601,1 +601,1 @@\n-  str(zr, Address(java_thread, JavaThread::cont_fastpath_offset()));\n+  str(zr, Address(java_thread, create_imm_offset(JavaThread, cont_fastpath_offset)));\n@@ -607,1 +607,1 @@\n-  str(zr, Address(rthread, JavaThread::last_Java_sp_offset()));\n+  str(zr, Address(rthread, create_imm_offset(JavaThread, last_Java_sp_offset)));\n@@ -612,1 +612,1 @@\n-    str(zr, Address(rthread, JavaThread::last_Java_fp_offset()));\n+    str(zr, Address(rthread, create_imm_offset(JavaThread, last_Java_fp_offset)));\n@@ -616,1 +616,1 @@\n-  str(zr, Address(rthread, JavaThread::last_Java_pc_offset()));\n+  str(zr, Address(rthread, create_imm_offset(JavaThread, last_Java_pc_offset)));\n@@ -643,1 +643,1 @@\n-  str(last_java_sp, Address(rthread, JavaThread::last_Java_sp_offset()));\n+  str(last_java_sp, Address(rthread, create_imm_offset(JavaThread, last_Java_sp_offset)));\n@@ -647,1 +647,1 @@\n-    str(last_java_fp, Address(rthread, JavaThread::last_Java_fp_offset()));\n+    str(last_java_fp, Address(rthread, create_imm_offset(JavaThread, last_Java_fp_offset)));\n@@ -735,1 +735,1 @@\n-    ldr(rscratch1, Address(rthread, JavaThread::reserved_stack_activation_offset()));\n+    ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, reserved_stack_activation_offset)));\n@@ -843,1 +843,1 @@\n-    ldr(rscratch1, Address(java_thread, in_bytes(Thread::pending_exception_offset())));\n+    ldr(rscratch1, Address(java_thread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -1046,2 +1046,2 @@\n-    ldr(tmp1, Address(receiver, oopDesc::klass_offset_in_bytes()));\n-    ldr(tmp2, Address(data, CompiledICData::speculated_klass_offset()));\n+    ldr(tmp1, Address(receiver, create_imm_offset(oopDesc, klass_offset_in_bytes)));\n+    ldr(tmp2, Address(data, create_imm_offset(CompiledICData, speculated_klass_offset)));\n@@ -1150,2 +1150,2 @@\n-  ldr(oop_result, Address(java_thread, JavaThread::vm_result_offset()));\n-  str(zr, Address(java_thread, JavaThread::vm_result_offset()));\n+  ldr(oop_result, Address(java_thread, create_imm_offset(JavaThread, vm_result_offset)));\n+  str(zr, Address(java_thread, create_imm_offset(JavaThread, vm_result_offset)));\n@@ -1156,2 +1156,2 @@\n-  ldr(metadata_result, Address(java_thread, JavaThread::vm_result_2_offset()));\n-  str(zr, Address(java_thread, JavaThread::vm_result_2_offset()));\n+  ldr(metadata_result, Address(java_thread, create_imm_offset(JavaThread, vm_result_2_offset)));\n+  str(zr, Address(java_thread, create_imm_offset(JavaThread, vm_result_2_offset)));\n@@ -1238,1 +1238,1 @@\n-  ldr(method_result, Address(scan_temp, itableOffsetEntry::interface_offset()));\n+  ldr(method_result, Address(scan_temp, create_imm_offset(itableOffsetEntry, interface_offset)));\n@@ -1248,1 +1248,1 @@\n-    ldr(method_result, Address(scan_temp, itableOffsetEntry::interface_offset()));\n+    ldr(method_result, Address(scan_temp, create_imm_offset(itableOffsetEntry, interface_offset)));\n@@ -1730,1 +1730,1 @@\n-  ldr(r_bitmap, Address(r_sub_klass, Klass::secondary_supers_bitmap_offset()));\n+  ldr(r_bitmap, Address(r_sub_klass, create_imm_offset(Klass, secondary_supers_bitmap_offset)));\n@@ -1751,1 +1751,1 @@\n-  ldr(r_array_base, Address(r_sub_klass, in_bytes(Klass::secondary_supers_offset())));\n+  ldr(r_array_base, Address(r_sub_klass, create_imm_offset(Klass, secondary_supers_offset)));\n@@ -1826,1 +1826,1 @@\n-  ldr(r_bitmap, Address(r_sub_klass, Klass::secondary_supers_bitmap_offset()));\n+  ldr(r_bitmap, Address(r_sub_klass, create_imm_offset(Klass, secondary_supers_bitmap_offset)));\n@@ -1871,1 +1871,1 @@\n-  ldr(r_array_base, Address(r_sub_klass, in_bytes(Klass::secondary_supers_offset())));\n+  ldr(r_array_base, Address(r_sub_klass, create_imm_offset(Klass, secondary_supers_offset)));\n@@ -1998,1 +1998,1 @@\n-  ldr(r_array_base, Address(r_sub_klass, in_bytes(Klass::secondary_supers_offset())));\n+  ldr(r_array_base, Address(r_sub_klass, create_imm_offset(Klass, secondary_supers_offset)));\n@@ -2049,1 +2049,1 @@\n-  ldr(scratch, Address(klass, InstanceKlass::init_thread_offset()));\n+  ldr(scratch, Address(klass, create_imm_offset(InstanceKlass, init_thread_offset)));\n@@ -5018,1 +5018,1 @@\n-  ldr(rresult, Address(rresult, InstanceKlass::class_loader_data_offset()));\n+  ldr(rresult, Address(rresult, create_imm_offset(InstanceKlass, class_loader_data_offset)));\n@@ -5022,3 +5022,3 @@\n-  ldr(holder, Address(method, Method::const_offset()));                      \/\/ ConstMethod*\n-  ldr(holder, Address(holder, ConstMethod::constants_offset()));             \/\/ ConstantPool*\n-  ldr(holder, Address(holder, ConstantPool::pool_holder_offset()));          \/\/ InstanceKlass*\n+  ldr(holder, Address(method, create_imm_offset(Method, const_offset)));                      \/\/ ConstMethod*\n+  ldr(holder, Address(holder, create_imm_offset(ConstMethod, constants_offset)));             \/\/ ConstantPool*\n+  ldr(holder, Address(holder, create_imm_offset(ConstantPool, pool_holder_offset)));          \/\/ InstanceKlass*\n@@ -5034,1 +5034,1 @@\n-  ldr(dst, Address(src, oopDesc::mark_offset_in_bytes()));\n+  ldr(dst, Address(src, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -5046,1 +5046,1 @@\n-    ldr(dst, Address(src, oopDesc::klass_offset_in_bytes()));\n+    ldr(dst, Address(src, create_imm_offset(oopDesc, klass_offset_in_bytes)));\n@@ -5089,5 +5089,4 @@\n-  const int mirror_offset = in_bytes(Klass::java_mirror_offset());\n-  ldr(dst, Address(rmethod, Method::const_offset()));\n-  ldr(dst, Address(dst, ConstMethod::constants_offset()));\n-  ldr(dst, Address(dst, ConstantPool::pool_holder_offset()));\n-  ldr(dst, Address(dst, mirror_offset));\n+  ldr(dst, Address(rmethod, create_imm_offset(Method, const_offset)));\n+  ldr(dst, Address(dst, create_imm_offset(ConstMethod, constants_offset)));\n+  ldr(dst, Address(dst, create_imm_offset(ConstantPool, pool_holder_offset)));\n+  ldr(dst, Address(dst, create_imm_offset(Klass, java_mirror_offset)));\n@@ -5116,1 +5115,1 @@\n-    ldr(tmp, Address(obj, oopDesc::klass_offset_in_bytes()));\n+    ldr(tmp, Address(obj, create_imm_offset(oopDesc, klass_offset_in_bytes)));\n@@ -5131,2 +5130,2 @@\n-    ldr(tmp1, Address(obj1, oopDesc::klass_offset_in_bytes()));\n-    ldr(tmp2, Address(obj2, oopDesc::klass_offset_in_bytes()));\n+    ldr(tmp1, Address(obj1, create_imm_offset(oopDesc, klass_offset_in_bytes)));\n+    ldr(tmp2, Address(obj2, create_imm_offset(oopDesc, klass_offset_in_bytes)));\n@@ -5145,1 +5144,1 @@\n-    str(src, Address(dst, oopDesc::klass_offset_in_bytes()));\n+    str(src, Address(dst, create_imm_offset(oopDesc, klass_offset_in_bytes)));\n@@ -5603,2 +5602,2 @@\n-    ldr(rscratch2, Address(rthread, in_bytes(JavaThread::tlab_top_offset())));\n-    ldr(rscratch1, Address(rthread, in_bytes(JavaThread::tlab_start_offset())));\n+    ldr(rscratch2, Address(rthread, create_imm_offset(JavaThread, tlab_top_offset)));\n+    ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, tlab_start_offset)));\n@@ -5611,2 +5610,2 @@\n-    ldr(rscratch2, Address(rthread, in_bytes(JavaThread::tlab_end_offset())));\n-    ldr(rscratch1, Address(rthread, in_bytes(JavaThread::tlab_top_offset())));\n+    ldr(rscratch2, Address(rthread, create_imm_offset(JavaThread, tlab_end_offset)));\n+    ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, tlab_top_offset)));\n@@ -5656,1 +5655,1 @@\n-  ldr(dest, Address(rthread, JavaThread::polling_page_offset()));\n+  ldr(dest, Address(rthread, create_imm_offset(JavaThread, polling_page_offset)));\n@@ -7035,1 +7034,1 @@\n-  ldr(mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+  ldr(mark, Address(obj, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -7039,1 +7038,2 @@\n-    str(zr, Address(basic_lock, BasicObjectLock::lock_offset() + in_ByteSize((BasicLock::object_monitor_cache_offset_in_bytes()))));\n+    str(zr, Address(basic_lock,\n+      create_imm_offset(BasicObjectLock, lock_offset) + in_ByteSize((BasicLock::object_monitor_cache_offset_in_bytes()))));\n@@ -7117,1 +7117,1 @@\n-  ldr(mark, Address(obj, oopDesc::mark_offset_in_bytes()));\n+  ldr(mark, Address(obj, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":49,"deletions":49,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-  __ ldr(klass_reg, Address(klass_reg, java_lang_Class::klass_offset()));\n+  __ ldr(klass_reg, Address(klass_reg, create_imm_offset(java_lang_Class, klass_offset)));\n@@ -114,1 +114,1 @@\n-    __ ldr(rscratch1, Address(method, Method::interpreter_entry_offset()));\n+    __ ldr(rscratch1, Address(method, create_imm_offset(Method, interpreter_entry_offset)));\n@@ -150,1 +150,1 @@\n-    __ ldr(temp2, Address(method_temp, Method::const_offset()));\n+    __ ldr(temp2, Address(method_temp, create_imm_offset(Method, const_offset)));\n@@ -225,1 +225,1 @@\n-    __ ldr(argp, Address(rmethod, Method::const_offset()));\n+    __ ldr(argp, Address(rmethod, create_imm_offset(Method, const_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/methodHandles_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-                     Deoptimization::UnrollBlock::frame_pcs_offset()));\n+                     create_imm_offset(Deoptimization::UnrollBlock, frame_pcs_offset)));\n@@ -307,2 +307,2 @@\n-  __ str(r0, Address(rthread, JavaThread::exception_oop_offset()));\n-  __ str(r3, Address(rthread, JavaThread::exception_pc_offset()));\n+  __ str(r0, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n+  __ str(r3, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n@@ -359,1 +359,1 @@\n-  __ ldr(r0, Address(rthread, JavaThread::exception_oop_offset()));\n+  __ ldr(r0, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n@@ -361,1 +361,1 @@\n-  __ ldr(r4, Address(rthread, JavaThread::exception_pc_offset()));\n+  __ ldr(r4, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n@@ -363,2 +363,2 @@\n-  __ str(zr, Address(rthread, JavaThread::exception_handler_pc_offset()));\n-  __ str(zr, Address(rthread, JavaThread::exception_pc_offset()));\n+  __ str(zr, Address(rthread, create_imm_offset(JavaThread, exception_handler_pc_offset)));\n+  __ str(zr, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n@@ -367,1 +367,1 @@\n-  __ str(zr, Address(rthread, JavaThread::exception_oop_offset()));\n+  __ str(zr, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/runtime_aarch64.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -365,1 +365,1 @@\n-  __ ldr(rscratch1, Address(rmethod, in_bytes(Method::code_offset())));\n+  __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, code_offset)));\n@@ -524,1 +524,1 @@\n-  __ ldr(rscratch1, Address(rmethod, in_bytes(Method::interpreter_entry_offset())));\n+  __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, interpreter_entry_offset)));\n@@ -604,1 +604,1 @@\n-  __ ldr(rscratch1, Address(rmethod, in_bytes(Method::from_compiled_offset())));\n+  __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, from_compiled_offset)));\n@@ -609,1 +609,1 @@\n-    __ ldr(rscratch2, Address(rthread, in_bytes(JavaThread::jvmci_alternate_call_target_offset())));\n+    __ ldr(rscratch2, Address(rthread, create_imm_offset(JavaThread, jvmci_alternate_call_target_offset)));\n@@ -613,1 +613,1 @@\n-    __ str(zr, Address(rthread, in_bytes(JavaThread::jvmci_alternate_call_target_offset())));\n+    __ str(zr, Address(rthread, create_imm_offset(JavaThread, jvmci_alternate_call_target_offset)));\n@@ -709,1 +709,1 @@\n-  __ str(rmethod, Address(rthread, JavaThread::callee_target_offset()));\n+  __ str(rmethod, Address(rthread, create_imm_offset(JavaThread, callee_target_offset)));\n@@ -747,1 +747,1 @@\n-    __ ldr(rmethod, Address(data, CompiledICData::speculated_method_offset()));\n+    __ ldr(rmethod, Address(data, create_imm_offset(CompiledICData, speculated_method_offset)));\n@@ -749,1 +749,1 @@\n-    __ ldr(rscratch1, Address(rmethod, in_bytes(Method::code_offset())));\n+    __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, code_offset)));\n@@ -998,2 +998,2 @@\n-  __ ldr(rscratch1, Address(rthread, JavaThread::cont_entry_offset()));\n-  __ str(rscratch1, Address(sp, ContinuationEntry::parent_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, cont_entry_offset)));\n+  __ str(rscratch1, Address(sp, create_imm_offset(ContinuationEntry, parent_offset)));\n@@ -1001,1 +1001,1 @@\n-  __ str(rscratch1, Address(rthread, JavaThread::cont_entry_offset()));\n+  __ str(rscratch1, Address(rthread, create_imm_offset(JavaThread, cont_entry_offset)));\n@@ -1021,4 +1021,4 @@\n-  __ ldr(rscratch1, Address(rthread, JavaThread::cont_fastpath_offset()));\n-  __ str(rscratch1, Address(sp, ContinuationEntry::parent_cont_fastpath_offset()));\n-  __ ldr(rscratch1, Address(rthread, JavaThread::held_monitor_count_offset()));\n-  __ str(rscratch1, Address(sp, ContinuationEntry::parent_held_monitor_count_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, cont_fastpath_offset)));\n+  __ str(rscratch1, Address(sp, create_imm_offset(ContinuationEntry, parent_cont_fastpath_offset)));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, held_monitor_count_offset)));\n+  __ str(rscratch1, Address(sp, create_imm_offset(ContinuationEntry, parent_held_monitor_count_offset)));\n@@ -1026,2 +1026,2 @@\n-  __ str(zr, Address(rthread, JavaThread::cont_fastpath_offset()));\n-  __ str(zr, Address(rthread, JavaThread::held_monitor_count_offset()));\n+  __ str(zr, Address(rthread, create_imm_offset(JavaThread, cont_fastpath_offset)));\n+  __ str(zr, Address(rthread, create_imm_offset(JavaThread, held_monitor_count_offset)));\n@@ -1035,1 +1035,1 @@\n-  __ ldr(rscratch1, Address(rthread, JavaThread::cont_entry_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, cont_entry_offset)));\n@@ -1041,2 +1041,2 @@\n-  __ ldr(rscratch1, Address(sp, ContinuationEntry::parent_cont_fastpath_offset()));\n-  __ str(rscratch1, Address(rthread, JavaThread::cont_fastpath_offset()));\n+  __ ldr(rscratch1, Address(sp, create_imm_offset(ContinuationEntry, parent_cont_fastpath_offset)));\n+  __ str(rscratch1, Address(rthread, create_imm_offset(JavaThread, cont_fastpath_offset)));\n@@ -1053,1 +1053,1 @@\n-    __ ldr(rscratch1, Address(rthread, JavaThread::jni_monitor_count_offset()));\n+    __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, jni_monitor_count_offset)));\n@@ -1065,1 +1065,1 @@\n-    __ str(zr, Address(rthread, JavaThread::jni_monitor_count_offset()));\n+    __ str(zr, Address(rthread, create_imm_offset(JavaThread, jni_monitor_count_offset)));\n@@ -1078,1 +1078,1 @@\n-    __ str(zr, Address(rthread, JavaThread::jni_monitor_count_offset()));\n+    __ str(zr, Address(rthread, create_imm_offset(JavaThread, jni_monitor_count_offset)));\n@@ -1084,2 +1084,2 @@\n-  __ ldr(rscratch1, Address(sp, ContinuationEntry::parent_held_monitor_count_offset()));\n-  __ str(rscratch1, Address(rthread, JavaThread::held_monitor_count_offset()));\n+  __ ldr(rscratch1, Address(sp, create_imm_offset(ContinuationEntry, parent_held_monitor_count_offset)));\n+  __ str(rscratch1, Address(rthread, create_imm_offset(JavaThread, held_monitor_count_offset)));\n@@ -1087,2 +1087,2 @@\n-  __ ldr(rscratch2, Address(sp, ContinuationEntry::parent_offset()));\n-  __ str(rscratch2, Address(rthread, JavaThread::cont_entry_offset()));\n+  __ ldr(rscratch2, Address(sp, create_imm_offset(ContinuationEntry, parent_offset)));\n+  __ str(rscratch2, Address(rthread, create_imm_offset(JavaThread, cont_entry_offset)));\n@@ -1264,1 +1264,1 @@\n-    __ ldr(rscratch1, Address(rthread, JavaThread::cont_entry_offset()));\n+    __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, cont_entry_offset)));\n@@ -1271,1 +1271,1 @@\n-    __ ldr(rscratch1, Address(rthread, in_bytes(Thread::pending_exception_offset())));\n+    __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -1820,1 +1820,1 @@\n-      __ ldr(rscratch1, Address(obj_reg, oopDesc::mark_offset_in_bytes()));\n+      __ ldr(rscratch1, Address(obj_reg, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -1932,1 +1932,1 @@\n-    __ ldr(rscratch1, Address(rthread, JavaThread::preempt_alternate_return_offset()));\n+    __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, preempt_alternate_return_offset)));\n@@ -1934,1 +1934,1 @@\n-    __ str(zr, Address(rthread, JavaThread::preempt_alternate_return_offset()));\n+    __ str(zr, Address(rthread, create_imm_offset(JavaThread, preempt_alternate_return_offset)));\n@@ -2018,1 +2018,1 @@\n-    __ str(zr, Address(rthread, JavaThread::pending_jni_exception_check_fn_offset()));\n+    __ str(zr, Address(rthread, create_imm_offset(JavaThread, pending_jni_exception_check_fn_offset)));\n@@ -2022,2 +2022,2 @@\n-  __ ldr(r2, Address(rthread, JavaThread::active_handles_offset()));\n-  __ str(zr, Address(r2, JNIHandleBlock::top_offset()));\n+  __ ldr(r2, Address(rthread, create_imm_offset(JavaThread, active_handles_offset)));\n+  __ str(zr, Address(r2, create_imm_offset(JNIHandleBlock, top_offset)));\n@@ -2028,1 +2028,1 @@\n-  __ ldr(rscratch1, Address(rthread, in_bytes(Thread::pending_exception_offset())));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -2070,1 +2070,1 @@\n-      __ ldr(rscratch1, Address(rthread, in_bytes(Thread::pending_exception_offset())));\n+      __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -2096,2 +2096,2 @@\n-    __ ldr(r19, Address(rthread, in_bytes(Thread::pending_exception_offset())));\n-    __ str(zr, Address(rthread, in_bytes(Thread::pending_exception_offset())));\n+    __ ldr(r19, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n+    __ str(zr, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -2104,1 +2104,1 @@\n-      __ ldr(rscratch1, Address(rthread, in_bytes(Thread::pending_exception_offset())));\n+      __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -2111,1 +2111,1 @@\n-    __ str(r19, Address(rthread, in_bytes(Thread::pending_exception_offset())));\n+    __ str(r19, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -2301,2 +2301,2 @@\n-    __ ldr(lr, Address(rthread, in_bytes(JavaThread::jvmci_implicit_exception_pc_offset())));\n-    __ str(zr, Address(rthread, in_bytes(JavaThread::jvmci_implicit_exception_pc_offset())));\n+    __ ldr(lr, Address(rthread, create_imm_offset(JavaThread, jvmci_implicit_exception_pc_offset)));\n+    __ str(zr, Address(rthread, create_imm_offset(JavaThread, jvmci_implicit_exception_pc_offset)));\n@@ -2341,2 +2341,2 @@\n-  __ str(r3, Address(rthread, JavaThread::exception_pc_offset()));\n-  __ str(r0, Address(rthread, JavaThread::exception_oop_offset()));\n+  __ str(r3, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n+  __ str(r0, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n@@ -2373,1 +2373,1 @@\n-  __ ldr(r3, Address(rthread, JavaThread::exception_pc_offset()));\n+  __ ldr(r3, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n@@ -2376,1 +2376,1 @@\n-  __ str(zr, Address(rthread, JavaThread::exception_pc_offset()));\n+  __ str(zr, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n@@ -2380,1 +2380,1 @@\n-  __ ldr(r0, Address(rthread, JavaThread::exception_oop_offset()));\n+  __ ldr(r0, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n@@ -2385,1 +2385,1 @@\n-  __ ldr(rscratch1, Address(rthread, Thread::pending_exception_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -2404,1 +2404,1 @@\n-    __ ldr(rscratch1, Address(rthread, JavaThread::last_Java_fp_offset()));\n+    __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, last_Java_fp_offset)));\n@@ -2435,1 +2435,1 @@\n-  __ ldr(r0, Address(rthread, JavaThread::exception_oop_offset()));\n+  __ ldr(r0, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n@@ -2437,3 +2437,3 @@\n-  __ ldr(r3, Address(rthread, JavaThread::exception_pc_offset()));\n-  __ str(zr, Address(rthread, JavaThread::exception_oop_offset()));\n-  __ str(zr, Address(rthread, JavaThread::exception_pc_offset()));\n+  __ ldr(r3, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n+  __ str(zr, Address(rthread, create_imm_offset(JavaThread, exception_oop_offset)));\n+  __ str(zr, Address(rthread, create_imm_offset(JavaThread, exception_pc_offset)));\n@@ -2490,1 +2490,1 @@\n-  __ ldr(r2, Address(r5, Deoptimization::UnrollBlock::frame_pcs_offset()));\n+  __ ldr(r2, Address(r5, create_imm_offset(Deoptimization::UnrollBlock, frame_pcs_offset)));\n@@ -2496,1 +2496,1 @@\n-  __ ldr(r4, Address(r5, Deoptimization::UnrollBlock::frame_sizes_offset()));\n+  __ ldr(r4, Address(r5, create_imm_offset(Deoptimization::UnrollBlock, frame_sizes_offset)));\n@@ -2656,1 +2656,1 @@\n-    __ ldr(r20, Address(rthread, JavaThread::saved_exception_pc_offset()));\n+    __ ldr(r20, Address(rthread, create_imm_offset(JavaThread, saved_exception_pc_offset)));\n@@ -2680,1 +2680,1 @@\n-  __ ldr(rscratch1, Address(rthread, Thread::pending_exception_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -2789,1 +2789,1 @@\n-  __ ldr(rscratch1, Address(rthread, Thread::pending_exception_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -2812,1 +2812,1 @@\n-  __ str(zr, Address(rthread, JavaThread::vm_result_offset()));\n+  __ str(zr, Address(rthread, create_imm_offset(JavaThread, vm_result_offset)));\n@@ -2814,1 +2814,1 @@\n-  __ ldr(r0, Address(rthread, Thread::pending_exception_offset()));\n+  __ ldr(r0, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -2912,1 +2912,1 @@\n-  __ ldr(rscratch1, Address(rthread, Thread::pending_exception_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":62,"deletions":62,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-      __ ldr(rscratch1, Address(rthread, in_bytes(Thread::pending_exception_offset())));\n+      __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -451,1 +451,1 @@\n-    __ str(r0, Address(rthread, Thread::pending_exception_offset()));\n+    __ str(r0, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -453,1 +453,1 @@\n-    __ str(rscratch1, Address(rthread, Thread::exception_file_offset()));\n+    __ str(rscratch1, Address(rthread, create_imm_offset(Thread, exception_file_offset)));\n@@ -496,1 +496,1 @@\n-      __ ldr(rscratch1, Address(rthread, Thread::pending_exception_offset()));\n+      __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -532,2 +532,2 @@\n-    __ ldr(r0, Address(rthread, Thread::pending_exception_offset()));\n-    __ str(zr, Address(rthread, Thread::pending_exception_offset()));\n+    __ ldr(r0, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n+    __ str(zr, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -7348,1 +7348,1 @@\n-      __ ldr(rscratch1, Address(rthread, JavaThread::cont_entry_offset()));\n+      __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, cont_entry_offset)));\n@@ -7351,1 +7351,1 @@\n-    assert_asm(_masm, (__ ldr(rscratch1, Address(rthread, JavaThread::cont_entry_offset())), __ cmp(sp, rscratch1)), Assembler::EQ, \"incorrect sp\");\n+    assert_asm(_masm, (__ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, cont_entry_offset))), __ cmp(sp, rscratch1)), Assembler::EQ, \"incorrect sp\");\n@@ -7368,1 +7368,1 @@\n-    assert_asm(_masm, (__ ldr(rscratch1, Address(rthread, JavaThread::cont_entry_offset())), __ cmp(sp, rscratch1)), Assembler::EQ, \"incorrect sp\");\n+    assert_asm(_masm, (__ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, cont_entry_offset))), __ cmp(sp, rscratch1)), Assembler::EQ, \"incorrect sp\");\n@@ -7477,1 +7477,1 @@\n-    __ ldr(rscratch2, Address(rthread, JavaThread::cont_entry_offset()));\n+    __ ldr(rscratch2, Address(rthread, create_imm_offset(JavaThread, cont_entry_offset)));\n@@ -7695,1 +7695,1 @@\n-    __ str(rmethod, Address(rthread, JavaThread::callee_target_offset())); \/\/ just in case callee is deoptimized\n+    __ str(rmethod, Address(rthread, create_imm_offset(JavaThread, callee_target_offset))); \/\/ just in case callee is deoptimized\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -555,1 +555,1 @@\n-    __ ldr(rscratch1, Address(rthread, Thread::pending_exception_offset()));\n+    __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -662,1 +662,1 @@\n-    __ ldr(r0, Address(rmethod, Method::method_data_offset()));\n+    __ ldr(r0, Address(rmethod, create_imm_offset(Method, method_data_offset)));\n@@ -826,1 +826,1 @@\n-    __ ldr(r0, Address(rlocals, Interpreter::local_offset_in_bytes(0)));\n+    __ ldr(r0, Address(rlocals));\n@@ -854,1 +854,1 @@\n-  __ str(r0, Address(esp, BasicObjectLock::obj_offset()));\n+  __ str(r0, Address(esp, create_imm_offset(BasicObjectLock, obj_offset)));\n@@ -879,1 +879,1 @@\n-    __ ldr(rscratch1, Address(rmethod, Method::const_offset()));    \/\/ get ConstMethod\n+    __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, const_offset)));    \/\/ get ConstMethod\n@@ -887,1 +887,1 @@\n-    __ ldr(rscratch1, Address(rmethod, Method::method_data_offset()));\n+    __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, method_data_offset)));\n@@ -900,3 +900,3 @@\n-  __ ldr(rcpool, Address(rmethod, Method::const_offset()));\n-  __ ldr(rcpool, Address(rcpool, ConstMethod::constants_offset()));\n-  __ ldr(rcpool, Address(rcpool, ConstantPool::cache_offset()));\n+  __ ldr(rcpool, Address(rmethod, create_imm_offset(Method, const_offset)));\n+  __ ldr(rcpool, Address(rcpool, create_imm_offset(ConstMethod, constants_offset)));\n+  __ ldr(rcpool, Address(rcpool, create_imm_offset(ConstantPool, cache_offset)));\n@@ -915,1 +915,1 @@\n-    __ ldr(rscratch1, Address(rmethod, Method::const_offset()));\n+    __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, const_offset)));\n@@ -1312,1 +1312,1 @@\n-  __ ldr(t, Address(rmethod, Method::const_offset()));\n+  __ ldr(t, Address(rmethod, create_imm_offset(Method, const_offset)));\n@@ -1322,1 +1322,1 @@\n-    __ ldr(t, Address(rmethod, Method::signature_handler_offset()));\n+    __ ldr(t, Address(rmethod, create_imm_offset(Method, signature_handler_offset)));\n@@ -1328,1 +1328,1 @@\n-    __ ldr(t, Address(rmethod, Method::signature_handler_offset()));\n+    __ ldr(t, Address(rmethod, create_imm_offset(Method, signature_handler_offset)));\n@@ -1371,1 +1371,1 @@\n-    __ ldr(r10, Address(rmethod, Method::native_function_offset()));\n+    __ ldr(r10, Address(rmethod, create_imm_offset(Method, native_function_offset)));\n@@ -1382,1 +1382,1 @@\n-    __ ldr(r10, Address(rmethod, Method::native_function_offset()));\n+    __ ldr(r10, Address(rmethod, create_imm_offset(Method, native_function_offset)));\n@@ -1480,1 +1480,1 @@\n-    __ ldr(rscratch1, Address(rthread, JavaThread::preempt_alternate_return_offset()));\n+    __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, preempt_alternate_return_offset)));\n@@ -1482,1 +1482,1 @@\n-    __ str(zr, Address(rthread, JavaThread::preempt_alternate_return_offset()));\n+    __ str(zr, Address(rthread, create_imm_offset(JavaThread, preempt_alternate_return_offset)));\n@@ -1499,1 +1499,1 @@\n-    __ str(zr, Address(rthread, JavaThread::pending_jni_exception_check_fn_offset()));\n+    __ str(zr, Address(rthread, create_imm_offset(JavaThread, pending_jni_exception_check_fn_offset)));\n@@ -1503,2 +1503,2 @@\n-  __ ldr(t, Address(rthread, JavaThread::active_handles_offset()));\n-  __ str(zr, Address(t, JNIHandleBlock::top_offset()));\n+  __ ldr(t, Address(rthread, create_imm_offset(JavaThread, active_handles_offset)));\n+  __ str(zr, Address(t, create_imm_offset(JNIHandleBlock, top_offset)));\n@@ -1546,1 +1546,1 @@\n-  __ ldr(rbcp, Address(rmethod, Method::const_offset()));   \/\/ get ConstMethod*\n+  __ ldr(rbcp, Address(rmethod, create_imm_offset(Method, const_offset)));   \/\/ get ConstMethod*\n@@ -1551,1 +1551,1 @@\n-    __ ldr(rscratch1, Address(rthread, Thread::pending_exception_offset()));\n+    __ ldr(rscratch1, Address(rthread, create_imm_offset(Thread, pending_exception_offset)));\n@@ -1582,1 +1582,1 @@\n-      __ ldr(t, Address(c_rarg1, BasicObjectLock::obj_offset()));\n+      __ ldr(t, Address(c_rarg1, create_imm_offset(BasicObjectLock, obj_offset)));\n@@ -1797,1 +1797,1 @@\n-  __ ldr(r0, Address(rthread, JavaThread::vthread_offset()));\n+  __ ldr(r0, Address(rthread, create_imm_offset(JavaThread, vthread_offset)));\n@@ -1902,1 +1902,1 @@\n-    __ ldr(r0, Address(r0, Method::const_offset()));\n+    __ ldr(r0, Address(r0, create_imm_offset(Method, const_offset)));\n@@ -1988,1 +1988,1 @@\n-  __ str(r0, Address(rthread, JavaThread::vm_result_offset()));\n+  __ str(r0, Address(rthread, create_imm_offset(JavaThread, vm_result_offset)));\n@@ -2028,1 +2028,1 @@\n-  __ ldr(rscratch1, Address(rthread, JavaThread::jvmti_thread_state_offset()));\n+  __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, jvmti_thread_state_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -1788,1 +1788,1 @@\n-    __ ldr(rscratch2, Address(rmethod, Method::const_offset()));\n+    __ ldr(rscratch2, Address(rmethod, create_imm_offset(Method, const_offset)));\n@@ -1819,1 +1819,1 @@\n-    __ ldr(rscratch1, Address(rmethod, Method::method_counters_offset()));\n+    __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, method_counters_offset)));\n@@ -1829,1 +1829,1 @@\n-    __ ldr(rscratch1, Address(rmethod, Method::method_counters_offset()));\n+    __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, method_counters_offset)));\n@@ -1837,1 +1837,1 @@\n-      __ ldr(r1, Address(rmethod, in_bytes(Method::method_data_offset())));\n+      __ ldr(r1, Address(rmethod, create_imm_offset(Method, method_data_offset)));\n@@ -1850,1 +1850,1 @@\n-    __ ldr(rscratch1, Address(rmethod, Method::method_counters_offset()));\n+    __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, method_counters_offset)));\n@@ -1909,1 +1909,1 @@\n-    __ ldr(rscratch1, Address(r19, nmethod::osr_entry_point_offset()));\n+    __ ldr(rscratch1, Address(r19, create_imm_offset(nmethod, osr_entry_point_offset)));\n@@ -1979,1 +1979,1 @@\n-  __ ldr(rbcp, Address(rmethod, Method::const_offset()));\n+  __ ldr(rbcp, Address(rmethod, create_imm_offset(Method, const_offset)));\n@@ -1990,1 +1990,1 @@\n-  __ ldr(rbcp, Address(rmethod, Method::const_offset()));\n+  __ ldr(rbcp, Address(rmethod, create_imm_offset(Method, const_offset)));\n@@ -2212,1 +2212,1 @@\n-    __ ldr(rscratch1, Address(rthread, JavaThread::polling_word_offset()));\n+    __ ldr(rscratch1, Address(rthread, create_imm_offset(JavaThread, polling_word_offset)));\n@@ -2301,1 +2301,1 @@\n-    __ ldr(temp, Address(Rcache, in_bytes(ResolvedMethodEntry::method_offset())));\n+    __ ldr(temp, Address(Rcache, create_imm_offset(ResolvedMethodEntry, method_offset)));\n@@ -2365,1 +2365,1 @@\n-    __ ldr(obj, Address(cache, ResolvedFieldEntry::field_holder_offset()));\n+    __ ldr(obj, Address(cache, create_imm_offset(ResolvedFieldEntry, field_holder_offset)));\n@@ -2383,1 +2383,1 @@\n-  __ ldr(method, Address(cache, in_bytes(ResolvedMethodEntry::method_offset())));\n+  __ ldr(method, Address(cache, create_imm_offset(ResolvedMethodEntry, method_offset)));\n@@ -2412,1 +2412,1 @@\n-  __ ldr(method, Address(cache, in_bytes(ResolvedMethodEntry::method_offset())));\n+  __ ldr(method, Address(cache, create_imm_offset(ResolvedMethodEntry, method_offset)));\n@@ -2436,1 +2436,1 @@\n-  __ ldr(method_or_table_index, Address(cache, in_bytes(ResolvedMethodEntry::method_offset())));\n+  __ ldr(method_or_table_index, Address(cache, create_imm_offset(ResolvedMethodEntry,method_offset)));\n@@ -2444,2 +2444,2 @@\n-  __ ldr(method_or_table_index, Address(cache, in_bytes(ResolvedMethodEntry::method_offset())));\n-  __ ldr(klass, Address(cache, in_bytes(ResolvedMethodEntry::klass_offset())));\n+  __ ldr(method_or_table_index, Address(cache, create_imm_offset(ResolvedMethodEntry, method_offset)));\n+  __ ldr(klass, Address(cache, create_imm_offset(ResolvedMethodEntry, klass_offset)));\n@@ -2463,1 +2463,1 @@\n-  __ ldr(method_or_table_index, Address(cache, in_bytes(ResolvedMethodEntry::method_offset())));\n+  __ ldr(method_or_table_index, Address(cache, create_imm_offset(ResolvedMethodEntry, method_offset)));\n@@ -3650,2 +3650,2 @@\n-      __ ldr(rscratch1, Address(r4, Klass::prototype_header_offset()));\n-      __ str(rscratch1, Address(r0, oopDesc::mark_offset_in_bytes()));\n+      __ ldr(rscratch1, Address(r4, create_imm_offset(Klass, prototype_header_offset)));\n+      __ str(rscratch1, Address(r0, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -3654,1 +3654,1 @@\n-      __ str(rscratch1, Address(r0, oopDesc::mark_offset_in_bytes()));\n+      __ str(rscratch1, Address(r0, create_imm_offset(oopDesc, mark_offset_in_bytes)));\n@@ -3904,1 +3904,1 @@\n-    __ ldr(rscratch1, Address(c_rarg3, BasicObjectLock::obj_offset()));\n+    __ ldr(rscratch1, Address(c_rarg3, create_imm_offset(BasicObjectLock, obj_offset)));\n@@ -3970,1 +3970,1 @@\n-  __ str(r0, Address(c_rarg1, BasicObjectLock::obj_offset()));\n+  __ str(r0, Address(c_rarg1, create_imm_offset(BasicObjectLock, obj_offset)));\n@@ -4011,1 +4011,1 @@\n-    __ ldr(rscratch1, Address(c_rarg1, BasicObjectLock::obj_offset()));\n+    __ ldr(rscratch1, Address(c_rarg1, create_imm_offset(BasicObjectLock, obj_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-  __ ldr(rscratch1, Address(rmethod, Method::from_compiled_offset()));\n+  __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, from_compiled_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/upcallLinker_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-    __ ldr(rscratch1, Address(rmethod, Method::from_compiled_offset()));\n+    __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, from_compiled_offset)));\n@@ -130,1 +130,1 @@\n-  __ ldr(rscratch1, Address(rmethod, Method::from_compiled_offset()));\n+  __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, from_compiled_offset)));\n@@ -185,2 +185,2 @@\n-  __ ldr(resolved_klass_reg, Address(icdata_reg, CompiledICData::itable_refc_klass_offset()));\n-  __ ldr(holder_klass_reg,   Address(icdata_reg, CompiledICData::itable_defc_klass_offset()));\n+  __ ldr(resolved_klass_reg, Address(icdata_reg, create_imm_offset(CompiledICData, itable_refc_klass_offset)));\n+  __ ldr(holder_klass_reg,   Address(icdata_reg, create_imm_offset(CompiledICData, itable_defc_klass_offset)));\n@@ -210,1 +210,1 @@\n-    __ ldr(rscratch1, Address(rmethod, Method::from_compiled_offset()));\n+    __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, from_compiled_offset)));\n@@ -220,1 +220,1 @@\n-  __ ldr(rscratch1, Address(rmethod, Method::from_compiled_offset()));\n+  __ ldr(rscratch1, Address(rmethod, create_imm_offset(Method, from_compiled_offset)));\n","filename":"src\/hotspot\/cpu\/aarch64\/vtableStubs_aarch64.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -343,1 +343,1 @@\n-  static bool is_simm(int64_t x, uint w) {\n+  static constexpr bool is_simm(int64_t x, uint w) {\n@@ -349,5 +349,5 @@\n-  static bool is_simm8(int64_t x) { return is_simm(x, 8); }\n-  static bool is_simm9(int64_t x) { return is_simm(x, 9); }\n-  static bool is_simm10(int64_t x) { return is_simm(x, 10); }\n-  static bool is_simm16(int64_t x) { return is_simm(x, 16); }\n-  static bool is_simm32(int64_t x) { return is_simm(x, 32); }\n+  static constexpr bool is_simm8(int64_t x) { return is_simm(x, 8); }\n+  static constexpr bool is_simm9(int64_t x) { return is_simm(x, 9); }\n+  static constexpr bool is_simm10(int64_t x) { return is_simm(x, 10); }\n+  static constexpr bool is_simm16(int64_t x) { return is_simm(x, 16); }\n+  static constexpr bool is_simm32(int64_t x) { return is_simm(x, 32); }\n@@ -356,1 +356,1 @@\n-  static bool is_uimm(uint64_t x, uint w) {\n+  static constexpr bool is_uimm(uint64_t x, uint w) {\n@@ -362,2 +362,2 @@\n-  static bool is_uimm12(uint64_t x) { return is_uimm(x, 12); }\n-  static bool is_uimm32(uint64_t x) { return is_uimm(x, 32); }\n+  static constexpr bool is_uimm12(uint64_t x) { return is_uimm(x, 12); }\n+  static constexpr bool is_uimm32(uint64_t x) { return is_uimm(x, 32); }\n","filename":"src\/hotspot\/share\/asm\/assembler.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}