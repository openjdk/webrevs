{"files":[{"patch":"@@ -1436,16 +1436,1 @@\n-                return AccessController.doPrivileged((PrivilegedExceptionAction<Object>) () -> Subject.doAs(subject, op), acc);\n-            }\n-        } catch (PrivilegedActionException pe) {\n-            \/\/ Dealing with cause of PrivilegedActionException is the same as handling other Exceptions.\n-            Throwable cause = pe.getCause();\n-\n-            if (cause instanceof Error) {\n-                throw new JMXServerErrorException(cause.toString(), (Error) cause);\n-            } else if (cause instanceof SecurityException) {\n-                throw (SecurityException) cause;\n-            } else if (cause instanceof RuntimeException) {\n-                throw (RuntimeException) cause;\n-            } else if (cause instanceof Exception) {\n-                throw new PrivilegedActionException((Exception) cause);\n-            } else {\n-                throw new RuntimeException(cause);\n+                return AccessController.doPrivileged(op, acc);\n@@ -1625,1 +1610,6 @@\n-                if (acc == null) {\n+                if (acc != null) {\n+                    \/\/ ACC is present, we have a Subject and SM is permitted:\n+                    return AccessController.doPrivileged(\n+                            (PrivilegedExceptionAction<T>) () ->\n+                                    wrappedClass.cast(mo.get()), acc);\n+                } else {\n@@ -1632,8 +1622,0 @@\n-                } else {\n-                    \/\/ ACC is present, we have a Subject and SM is permitted:\n-                    PrivilegedExceptionAction<T> action = new PrivilegedExceptionAction<T>() {\n-                        public T run() throws Exception {\n-                            return wrappedClass.cast(mo.get());\n-                        }\n-                    };\n-                    return AccessController.doPrivileged(action, acc);\n","filename":"src\/java.management.rmi\/share\/classes\/javax\/management\/remote\/rmi\/RMIConnectionImpl.java","additions":7,"deletions":25,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -715,1 +715,1 @@\n-            \/\/ Cache the Subject and possibly AccessControlContext of the Monitor.start() caller.\n+            \/\/ Cache the Subject or AccessControlContext of the Monitor.start() caller.\n@@ -718,2 +718,3 @@\n-            subject = Subject.current();\n-            if (SharedSecrets.getJavaLangAccess().allowSecurityManager()) {\n+            if (!SharedSecrets.getJavaLangAccess().allowSecurityManager()) {\n+                subject = Subject.current();\n+            } else {\n@@ -1541,1 +1542,1 @@\n-                Subject.doAs(s, action);\n+                Subject.doAs(s, action); \/\/ s is permitted to be null\n","filename":"src\/java.management\/share\/classes\/javax\/management\/monitor\/Monitor.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}