{"files":[{"patch":"@@ -39,0 +39,1 @@\n+import com.sun.tools.javac.code.Type;\n@@ -311,4 +312,7 @@\n-                        Stream.of(diagnosticInfo.args).map(o -> {\n-                            return (o instanceof Fragment frag) ?\n-                                    fragment(frag) : o;\n-                        }).toArray());\n+                        Stream.of(diagnosticInfo.args).map(o ->\n+                                switch (o) {\n+                                    case Fragment frag -> fragment(frag);\n+                                    case Type type -> type.stripMetadata();\n+                                    case null -> null;\n+                                    default -> o;\n+                                }).toArray());\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/JCDiagnostic.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,17 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8291643\n+ * @summary Consider omitting type annotations from type error diagnostics\n+ * @compile\/fail\/ref=IncompatibleTypes.out -XDrawDiagnostics IncompatibleTypes.java\n+ *\/\n+import java.lang.annotation.*;\n+import java.util.List;\n+\n+class IncompatibleTypes {\n+  List<@A Number> f(List<String> xs) {\n+    return xs;\n+  }\n+}\n+\n+@Target(ElementType.TYPE_USE)\n+@interface A { }\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/IncompatibleTypes.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+IncompatibleTypes.java:12:12: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: java.util.List<java.lang.String>, java.util.List<java.lang.Number>)\n+1 error\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/failures\/IncompatibleTypes.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -1,1 +1,1 @@\n-LambdaConv25.java:19:15: compiler.err.prob.found.req: (compiler.misc.invalid.generic.lambda.target: <X>()void, kindname.interface, LambdaConv25.C)\n+LambdaConv25.java:19:15: compiler.err.prob.found.req: (compiler.misc.invalid.generic.lambda.target: ()void, kindname.interface, LambdaConv25.C)\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaConv25.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-T6747671.java:36:9: compiler.warn.raw.class.use: @T6747671.TA T6747671.B, T6747671.B<X>\n+T6747671.java:36:9: compiler.warn.raw.class.use: T6747671.B, T6747671.B<X>\n","filename":"test\/langtools\/tools\/javac\/warnings\/6747671\/T6747671.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}