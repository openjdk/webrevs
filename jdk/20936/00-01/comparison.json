{"files":[{"patch":"@@ -267,1 +267,1 @@\n-  C1StubId _stub_id;\n+  C1StubId         _stub_id;\n@@ -518,1 +518,1 @@\n-  C1StubId _stub;\n+  C1StubId         _stub;\n","filename":"src\/hotspot\/share\/c1\/c1_CodeStubs.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2046,1 +2046,1 @@\n-      assert(strncmp(name, \"Opto Runtime multianewarray\", 27) == 0, \"TODO: add failed case check\");\n+      assert(strncmp(name, \"C2 Runtime multianewarray\", 25) == 0, \"TODO: add failed case check\");\n@@ -2741,1 +2741,1 @@\n-    assert(strncmp(name, \"Opto Runtime multianewarray\", 27) == 0, \"sanity\");\n+    assert(strncmp(name, \"C2 Runtime multianewarray\", 25) == 0, \"sanity\");\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-#define OPTO_BLOB_FIELD_DEFINE(name, type) \\\n+#define C2_BLOB_FIELD_DEFINE(name, type) \\\n@@ -93,4 +93,4 @@\n-#define OPTO_STUB_FIELD_NAME(name) _ ## name ## _Java\n-#define OPTO_STUB_FIELD_DEFINE(name, f, t, r) \\\n-  address OptoRuntime:: OPTO_STUB_FIELD_NAME(name) = nullptr;\n-#define OPTO_JVMTI_STUB_FIELD_DEFINE(name) \\\n+#define C2_STUB_FIELD_NAME(name) _ ## name ## _Java\n+#define C2_STUB_FIELD_DEFINE(name, f, t, r) \\\n+  address OptoRuntime:: C2_STUB_FIELD_NAME(name) = nullptr;\n+#define C2_JVMTI_STUB_FIELD_DEFINE(name) \\\n@@ -98,8 +98,8 @@\n-OPTO_STUBS_DO(OPTO_BLOB_FIELD_DEFINE, OPTO_STUB_FIELD_DEFINE, OPTO_JVMTI_STUB_FIELD_DEFINE)\n-#undef OPTO_BLOB_FIELD_DEFINE\n-#undef OPTO_STUB_FIELD_DEFINE\n-#undef OPTO_JVMTI_STUB_FIELD_DEFINE\n-\n-#define OPTO_BLOB_NAME_DEFINE(name, type)  \"Opto Runtime \" # name \"_blob\",\n-#define OPTO_STUB_NAME_DEFINE(name, f, t, r)  \"Opto Runtime \" # name,\n-#define OPTO_JVMTI_STUB_NAME_DEFINE(name)  \"Opto Runtime \" # name,\n+C2_STUBS_DO(C2_BLOB_FIELD_DEFINE, C2_STUB_FIELD_DEFINE, C2_JVMTI_STUB_FIELD_DEFINE)\n+#undef C2_BLOB_FIELD_DEFINE\n+#undef C2_STUB_FIELD_DEFINE\n+#undef C2_JVMTI_STUB_FIELD_DEFINE\n+\n+#define C2_BLOB_NAME_DEFINE(name, type)  \"C2 Runtime \" # name \"_blob\",\n+#define C2_STUB_NAME_DEFINE(name, f, t, r)  \"C2 Runtime \" # name,\n+#define C2_JVMTI_STUB_NAME_DEFINE(name)  \"C2 Runtime \" # name,\n@@ -107,1 +107,1 @@\n-  OPTO_STUBS_DO(OPTO_BLOB_NAME_DEFINE, OPTO_STUB_NAME_DEFINE, OPTO_JVMTI_STUB_NAME_DEFINE)\n+  C2_STUBS_DO(C2_BLOB_NAME_DEFINE, C2_STUB_NAME_DEFINE, C2_JVMTI_STUB_NAME_DEFINE)\n@@ -109,3 +109,3 @@\n-#undef OPTO_BLOB_NAME_DEFINE\n-#undef OPTO_STUB_NAME_DEFINE\n-#undef OPTO_JVMTI_STUB_NAME_DEFINE\n+#undef C2_BLOB_NAME_DEFINE\n+#undef C2_STUB_NAME_DEFINE\n+#undef C2_JVMTI_STUB_NAME_DEFINE\n@@ -134,1 +134,1 @@\n-#define GEN_OPTO_BLOB(name, type)                    \\\n+#define GEN_C2_BLOB(name, type)                    \\\n@@ -138,4 +138,4 @@\n-#define OPTO_STUB_FIELD_NAME(name) _ ## name ## _Java\n-#define OPTO_STUB_TYPEFUNC(name) name ## _Type\n-#define OPTO_STUB_C_FUNC(name) CAST_FROM_FN_PTR(address, name ## _C)\n-#define OPTO_STUB_NAME(name) stub_name(OptoStubId::name ## _id)\n+#define C2_STUB_FIELD_NAME(name) _ ## name ## _Java\n+#define C2_STUB_TYPEFUNC(name) name ## _Type\n+#define C2_STUB_C_FUNC(name) CAST_FROM_FN_PTR(address, name ## _C)\n+#define C2_STUB_NAME(name) stub_name(OptoStubId::name ## _id)\n@@ -152,5 +152,2 @@\n-#define complete_monitor_locking_C SharedRuntime::complete_monitor_locking_C\n-#define slow_arraycopy_C SharedRuntime::slow_arraycopy_C\n-\n-#define GEN_OPTO_STUB(name, fancy_jump, pass_tls, pass_retpc  )         \\\n-  OPTO_STUB_FIELD_NAME(name) =                                          \\\n+#define GEN_C2_STUB(name, fancy_jump, pass_tls, pass_retpc  )         \\\n+  C2_STUB_FIELD_NAME(name) =                                          \\\n@@ -158,3 +155,3 @@\n-                  OPTO_STUB_TYPEFUNC(name),                             \\\n-                  OPTO_STUB_C_FUNC(name),                               \\\n-                  OPTO_STUB_NAME(name),                                 \\\n+                  C2_STUB_TYPEFUNC(name),                             \\\n+                  C2_STUB_C_FUNC(name),                               \\\n+                  C2_STUB_NAME(name),                                 \\\n@@ -164,1 +161,1 @@\n-  if (OPTO_STUB_FIELD_NAME(name) == nullptr) { return false; }          \\\n+  if (C2_STUB_FIELD_NAME(name) == nullptr) { return false; }          \\\n@@ -166,1 +163,1 @@\n-#define OPTO_JVMTI_STUB_C_FUNC(name) CAST_FROM_FN_PTR(address, SharedRuntime::name)\n+#define C2_JVMTI_STUB_C_FUNC(name) CAST_FROM_FN_PTR(address, SharedRuntime::name)\n@@ -168,1 +165,1 @@\n-#define GEN_OPTO_JVMTI_STUB(name)                                       \\\n+#define GEN_C2_JVMTI_STUB(name)                                       \\\n@@ -172,2 +169,2 @@\n-                  OPTO_JVMTI_STUB_C_FUNC(name),                         \\\n-                  OPTO_STUB_NAME(name),                                 \\\n+                  C2_JVMTI_STUB_C_FUNC(name),                         \\\n+                  C2_STUB_NAME(name),                                 \\\n@@ -181,31 +178,1 @@\n-  OPTO_STUBS_DO(GEN_OPTO_BLOB, GEN_OPTO_STUB, GEN_OPTO_JVMTI_STUB)\n-\n-    \/*\n-  generate_uncommon_trap_blob();\n-  generate_exception_blob();\n-\n-  \/\/ Note: tls: Means fetching the return oop out of the thread-local storage\n-  \/\/\n-  \/\/   variable\/name                       type-function-gen              , runtime method                  ,fncy_jp, tls,retpc\n-  \/\/ -------------------------------------------------------------------------------------------------------------------------------\n-  gen(env, _new_instance_Java              , new_instance_Type            , new_instance_C                  ,    0 , true, false);\n-  gen(env, _new_array_Java                 , new_array_Type               , new_array_C                     ,    0 , true, false);\n-  gen(env, _new_array_nozero_Java          , new_array_Type               , new_array_nozero_C              ,    0 , true, false);\n-  gen(env, _multianewarray2_Java           , multianewarray2_Type         , multianewarray2_C               ,    0 , true, false);\n-  gen(env, _multianewarray3_Java           , multianewarray3_Type         , multianewarray3_C               ,    0 , true, false);\n-  gen(env, _multianewarray4_Java           , multianewarray4_Type         , multianewarray4_C               ,    0 , true, false);\n-  gen(env, _multianewarray5_Java           , multianewarray5_Type         , multianewarray5_C               ,    0 , true, false);\n-  gen(env, _multianewarrayN_Java           , multianewarrayN_Type         , multianewarrayN_C               ,    0 , true, false);\n-#if INCLUDE_JVMTI\n-  gen(env, _notify_jvmti_vthread_start     , notify_jvmti_vthread_Type    , SharedRuntime::notify_jvmti_vthread_start, 0, true, false);\n-  gen(env, _notify_jvmti_vthread_end       , notify_jvmti_vthread_Type    , SharedRuntime::notify_jvmti_vthread_end,   0, true, false);\n-  gen(env, _notify_jvmti_vthread_mount     , notify_jvmti_vthread_Type    , SharedRuntime::notify_jvmti_vthread_mount, 0, true, false);\n-  gen(env, _notify_jvmti_vthread_unmount   , notify_jvmti_vthread_Type    , SharedRuntime::notify_jvmti_vthread_unmount, 0, true, false);\n-#endif\n-  gen(env, _complete_monitor_locking_Java  , complete_monitor_enter_Type  , SharedRuntime::complete_monitor_locking_C, 0, false, false);\n-  gen(env, _monitor_notify_Java            , monitor_notify_Type          , monitor_notify_C                ,    0 , false, false);\n-  gen(env, _monitor_notifyAll_Java         , monitor_notify_Type          , monitor_notifyAll_C             ,    0 , false, false);\n-  gen(env, _rethrow_Java                   , rethrow_Type                 , rethrow_C                       ,    2 , true , true );\n-\n-  gen(env, _slow_arraycopy_Java            , slow_arraycopy_Type          , SharedRuntime::slow_arraycopy_C ,    0 , false, false);\n-  gen(env, _register_finalizer_Java        , register_finalizer_Type      , register_finalizer              ,    0 , false, false);\n+  C2_STUBS_DO(GEN_C2_BLOB, GEN_C2_STUB, GEN_C2_JVMTI_STUB)\n@@ -213,1 +180,0 @@\n-  *\/\n@@ -217,1 +183,1 @@\n-#undef GEN_OPTO_BLOB\n+#undef GEN_C2_BLOB\n@@ -219,5 +185,5 @@\n-#undef OPTO_STUB_FIELD_NAME\n-#undef OPTO_STUB_TYPEFUNC\n-#undef OPTO_STUB_C_FUNC\n-#undef OPTO_STUB_NAME\n-#undef GEN_OPTO_STUB\n+#undef C2_STUB_FIELD_NAME\n+#undef C2_STUB_TYPEFUNC\n+#undef C2_STUB_C_FUNC\n+#undef C2_STUB_NAME\n+#undef GEN_C2_STUB\n@@ -225,5 +191,2 @@\n-#undef complete_monitor_locking_C\n-#undef slow_arraycopy_C\n-\n-#undef OPTO_JVMTI_STUB_C_FUNC\n-#undef GEN_OPTO_JVMTI_STUB\n+#undef C2_JVMTI_STUB_C_FUNC\n+#undef GEN_C2_JVMTI_STUB\n@@ -260,0 +223,13 @@\n+\/\/ local methods passed as arguments to stub generator that forward\n+\/\/ control to corresponding JRT methods of SharedRuntime\n+\n+void OptoRuntime::slow_arraycopy_C(oopDesc* src,  jint src_pos,\n+                                   oopDesc* dest, jint dest_pos,\n+                                   jint length, JavaThread* thread) {\n+  SharedRuntime::slow_arraycopy_C(src,  src_pos, dest, dest_pos, length, thread);\n+}\n+\n+void OptoRuntime::complete_monitor_locking_C(oopDesc* obj, BasicLock* lock, JavaThread* current) {\n+  SharedRuntime::complete_monitor_locking_C(obj, lock, current);\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":54,"deletions":78,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -104,3 +104,3 @@\n-#define OPTO_BLOB_ID_ENUM_DECLARE(name, type) STUB_ID_NAME(name),\n-#define OPTO_STUB_ID_ENUM_DECLARE(name, f, t, r) STUB_ID_NAME(name),\n-#define OPTO_JVMTI_STUB_ID_ENUM_DECLARE(name) STUB_ID_NAME(name),\n+#define C2_BLOB_ID_ENUM_DECLARE(name, type) STUB_ID_NAME(name),\n+#define C2_STUB_ID_ENUM_DECLARE(name, f, t, r) STUB_ID_NAME(name),\n+#define C2_JVMTI_STUB_ID_ENUM_DECLARE(name) STUB_ID_NAME(name),\n@@ -109,1 +109,1 @@\n-  OPTO_STUBS_DO(OPTO_BLOB_ID_ENUM_DECLARE, OPTO_STUB_ID_ENUM_DECLARE, OPTO_JVMTI_STUB_ID_ENUM_DECLARE)\n+  C2_STUBS_DO(C2_BLOB_ID_ENUM_DECLARE, C2_STUB_ID_ENUM_DECLARE, C2_JVMTI_STUB_ID_ENUM_DECLARE)\n@@ -112,3 +112,3 @@\n-#undef OPTO_BLOB_ID_ENUM_DECLARE\n-#undef OPTO_STUB_ID_ENUM_DECLARE\n-#undef OPTO_JVMTI_STUB_ID_ENUM_DECLARE\n+#undef C2_BLOB_ID_ENUM_DECLARE\n+#undef C2_STUB_ID_ENUM_DECLARE\n+#undef C2_JVMTI_STUB_ID_ENUM_DECLARE\n@@ -121,1 +121,1 @@\n-#define OPTO_BLOB_FIELD_DECLARE(name, type) \\\n+#define C2_BLOB_FIELD_DECLARE(name, type) \\\n@@ -123,4 +123,4 @@\n-#define OPTO_STUB_FIELD_NAME(name) _ ## name ## _Java\n-#define OPTO_STUB_FIELD_DECLARE(name, f, t, r) \\\n-  static address     OPTO_STUB_FIELD_NAME(name) ;\n-#define OPTO_JVMTI_STUB_FIELD_DECLARE(name) \\\n+#define C2_STUB_FIELD_NAME(name) _ ## name ## _Java\n+#define C2_STUB_FIELD_DECLARE(name, f, t, r) \\\n+  static address     C2_STUB_FIELD_NAME(name) ;\n+#define C2_JVMTI_STUB_FIELD_DECLARE(name) \\\n@@ -129,1 +129,1 @@\n-  OPTO_STUBS_DO(OPTO_BLOB_FIELD_DECLARE, OPTO_STUB_FIELD_DECLARE, OPTO_JVMTI_STUB_FIELD_DECLARE)\n+  C2_STUBS_DO(C2_BLOB_FIELD_DECLARE, C2_STUB_FIELD_DECLARE, C2_JVMTI_STUB_FIELD_DECLARE)\n@@ -131,4 +131,4 @@\n-#undef OPTO_BLOB_FIELD_DECLARE\n-#undef OPTO_STUB_FIELD_NAME\n-#undef OPTO_STUB_FIELD_DECLARE\n-#undef OPTO_JVMTI_STUB_FIELD_DECLARE\n+#undef C2_BLOB_FIELD_DECLARE\n+#undef C2_STUB_FIELD_NAME\n+#undef C2_STUB_FIELD_DECLARE\n+#undef C2_JVMTI_STUB_FIELD_DECLARE\n@@ -161,0 +161,7 @@\n+  \/\/ local methods passed as arguments to stub generator that forward\n+  \/\/ control to corresponding JRT methods of SharedRuntime\n+  static void slow_arraycopy_C(oopDesc* src,  jint src_pos,\n+                               oopDesc* dest, jint dest_pos,\n+                               jint length, JavaThread* thread);\n+  static void complete_monitor_locking_C(oopDesc* obj, BasicLock* lock, JavaThread* current);\n+\n","filename":"src\/hotspot\/share\/opto\/runtime.hpp","additions":24,"deletions":17,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-\/\/ OPTO_STUBS_DO, allowing dependencies from any givem stub on its\n+\/\/ C2_STUBS_DO, allowing dependencies from any givem stub on its\n@@ -128,1 +128,1 @@\n-#define OPTO_JVMTI_STUBS_DO(do_jvmti_stub)                             \\\n+#define C2_JVMTI_STUBS_DO(do_jvmti_stub)                               \\\n@@ -135,1 +135,1 @@\n-#define OPTO_JVMTI_STUBS_DO(do_jvmti_stub)\n+#define C2_JVMTI_STUBS_DO(do_jvmti_stub)\n@@ -145,1 +145,1 @@\n-#define OPTO_STUBS_DO(do_blob, do_stub, do_jvmti_stub)                 \\\n+#define C2_STUBS_DO(do_blob, do_stub, do_jvmti_stub)                   \\\n@@ -156,1 +156,1 @@\n-  OPTO_JVMTI_STUBS_DO(do_jvmti_stub)                                   \\\n+  C2_JVMTI_STUBS_DO(do_jvmti_stub)                                     \\\n@@ -165,1 +165,1 @@\n-#define OPTO_STUBS_DO(do_blob, do_stub, do_jvmti_stub)\n+#define C2_STUBS_DO(do_blob, do_stub, do_jvmti_stub)\n","filename":"src\/hotspot\/share\/runtime\/stubDeclarations.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-        String optoRegex = \"(.*precise .*\\\\R((.*(?i:mov|mv|xorl|nop|spill).*|\\\\s*)\\\\R)*.*(?i:call,static).*wrapper for: Opto Runtime new_instance\" + END;\n+        String optoRegex = \"(.*precise .*\\\\R((.*(?i:mov|mv|xorl|nop|spill).*|\\\\s*)\\\\R)*.*(?i:call,static).*wrapper for: C2 Runtime new_instance\" + END;\n@@ -285,1 +285,1 @@\n-        String regex = \"(.*precise .*\" + IS_REPLACED + \":.*\\\\R((.*(?i:mov|mv|xorl|nop|spill).*|\\\\s*)\\\\R)*.*(?i:call,static).*wrapper for: Opto Runtime new_instance\" + END;\n+        String regex = \"(.*precise .*\" + IS_REPLACED + \":.*\\\\R((.*(?i:mov|mv|xorl|nop|spill).*|\\\\s*)\\\\R)*.*(?i:call,static).*wrapper for: C2 Runtime new_instance\" + END;\n@@ -291,1 +291,1 @@\n-        String optoRegex = \"(.*precise \\\\[.*\\\\R((.*(?i:mov|mv|xor|nop|spill).*|\\\\s*|.*(LGHI|LI).*)\\\\R)*.*(?i:call,static).*wrapper for: Opto Runtime new_array\" + END;\n+        String optoRegex = \"(.*precise \\\\[.*\\\\R((.*(?i:mov|mv|xor|nop|spill).*|\\\\s*|.*(LGHI|LI).*)\\\\R)*.*(?i:call,static).*wrapper for: C2 Runtime new_array\" + END;\n@@ -297,1 +297,1 @@\n-        String regex = \"(.*precise \\\\[.*\" + IS_REPLACED + \":.*\\\\R((.*(?i:mov|mv|xorl|nop|spill).*|\\\\s*|.*(LGHI|LI).*)\\\\R)*.*(?i:call,static).*wrapper for: Opto Runtime new_array\" + END;\n+        String regex = \"(.*precise \\\\[.*\" + IS_REPLACED + \":.*\\\\R((.*(?i:mov|mv|xorl|nop|spill).*|\\\\s*|.*(LGHI|LI).*)\\\\R)*.*(?i:call,static).*wrapper for: C2 Runtime new_array\" + END;\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        String[] allocMatches = { \"MyClass\", \"wrapper for: Opto Runtime new_instance\" };\n+        String[] allocMatches = { \"MyClass\", \"wrapper for: C2 Runtime new_instance\" };\n@@ -117,1 +117,1 @@\n-        String[] allocArrayMatches = { \"MyClass\", \"wrapper for: Opto Runtime new_array\"};\n+        String[] allocArrayMatches = { \"MyClass\", \"wrapper for: C2 Runtime new_array\"};\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestIRMatching.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}