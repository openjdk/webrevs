{"files":[{"patch":"@@ -293,1 +293,2 @@\n-        sb.append(request.method())\n+        String method = request.method();\n+        sb.append(method)\n@@ -303,1 +304,0 @@\n-        \/\/ GET, HEAD and DELETE with no request body should not set the Content-Length header\n@@ -307,1 +307,6 @@\n-                systemHeadersBuilder.setHeader(\"Content-Length\", \"0\");\n+                \/\/ PUT and POST with no request body should set the Content-Length header\n+                \/\/ even when the content is empty.\n+                \/\/ Other methods defined in RFC 9110 should not send the header in that case.\n+                if (\"POST\".equals(method) || \"PUT\".equals(method)) {\n+                    systemHeadersBuilder.setHeader(\"Content-Length\", \"0\");\n+                }\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1Request.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @bug 8283544\n+ * @bug 8283544 8358942\n@@ -34,0 +34,1 @@\n+ *          -Djdk.httpclient.allowRestrictedHeaders=content-length\n@@ -189,0 +190,30 @@\n+    @Test(dataProvider = \"nobodies\")\n+    \/\/ A GET request with empty request body should have no Content-length header\n+    public void getWithEmptyBody(Version version, URI uri) throws IOException, InterruptedException {\n+        testLog.println(version + \" Checking GET with no request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(version)\n+                .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n+                .uri(uri)\n+                .build();\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n+        assertEquals(resp.version(), version);\n+    }\n+\n+    @Test(dataProvider = \"bodies\")\n+    \/\/ A GET request with empty request body and explicitly added Content-length header\n+    public void getWithZeroContentLength(Version version, URI uri) throws IOException, InterruptedException {\n+        testLog.println(version + \" Checking GET with no request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(version)\n+                .method(\"GET\", HttpRequest.BodyPublishers.noBody())\n+                .header(\"Content-length\", \"0\")\n+                .uri(uri)\n+                .build();\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n+        assertEquals(resp.version(), version);\n+        assertEquals(resp.body(), \"Request completed\");\n+    }\n+\n@@ -218,0 +249,14 @@\n+    @Test(dataProvider = \"nobodies\")\n+    \/\/ A DELETE request with empty request body should have no Content-length header\n+    public void deleteWithEmptyBody(Version version, URI uri) throws IOException, InterruptedException {\n+        testLog.println(version + \" Checking DELETE with no request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(version)\n+                .method(\"DELETE\", HttpRequest.BodyPublishers.noBody())\n+                .uri(uri)\n+                .build();\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n+        assertEquals(resp.version(), version);\n+    }\n+\n@@ -247,0 +292,14 @@\n+    @Test(dataProvider = \"nobodies\")\n+    \/\/ A HEAD request with empty request body should have no Content-length header\n+    public void headWithEmptyBody(Version version, URI uri) throws IOException, InterruptedException {\n+        testLog.println(version + \" Checking HEAD with no request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(version)\n+                .method(\"HEAD\", HttpRequest.BodyPublishers.noBody())\n+                .uri(uri)\n+                .build();\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n+        assertEquals(resp.version(), version);\n+    }\n+\n@@ -261,0 +320,66 @@\n+        assertEquals(resp.version(), version);\n+    }\n+\n+    @Test(dataProvider = \"bodies\")\n+    \/\/ A POST request with empty request body should have a Content-length header\n+    \/\/ in HTTP\/1.1\n+    public void postWithEmptyBody(Version version, URI uri) throws IOException, InterruptedException {\n+        testLog.println(version + \" Checking POST with request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(version)\n+                .method(\"POST\", HttpRequest.BodyPublishers.noBody())\n+                .uri(uri)\n+                .build();\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n+        assertEquals(resp.version(), version);\n+        if (version == HTTP_1_1) {\n+            assertEquals(resp.body(), \"Request completed\");\n+        }\n+    }\n+\n+    @Test(dataProvider = \"bodies\")\n+    \/\/ A POST request with a request body should have a Content-length header\n+    \/\/ in HTTP\/1.1\n+    public void postWithBody(Version version, URI uri) throws IOException, InterruptedException {\n+        testLog.println(version + \" Checking POST with request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(version)\n+                .POST(HttpRequest.BodyPublishers.ofString(\"POST Body\"))\n+                .uri(uri)\n+                .build();\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n+        assertEquals(resp.version(), version);\n+    }\n+\n+    @Test(dataProvider = \"bodies\")\n+    \/\/ A PUT request with empty request body should have a Content-length header\n+    \/\/ in HTTP\/1.1\n+    public void putWithEmptyBody(Version version, URI uri) throws IOException, InterruptedException {\n+        testLog.println(version + \" Checking PUT with request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(version)\n+                .method(\"PUT\", HttpRequest.BodyPublishers.noBody())\n+                .uri(uri)\n+                .build();\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n+        assertEquals(resp.version(), version);\n+        if (version == HTTP_1_1) {\n+            assertEquals(resp.body(), \"Request completed\");\n+        }\n+    }\n+\n+    @Test(dataProvider = \"bodies\")\n+    \/\/ A PUT request with a request body should have a Content-length header\n+    \/\/ in HTTP\/1.1\n+    public void putWithBody(Version version, URI uri) throws IOException, InterruptedException {\n+        testLog.println(version + \" Checking PUT with request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(version)\n+                .PUT(HttpRequest.BodyPublishers.ofString(\"PUT Body\"))\n+                .uri(uri)\n+                .build();\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n","filename":"test\/jdk\/java\/net\/httpclient\/ContentLengthHeaderTest.java","additions":126,"deletions":1,"binary":false,"changes":127,"status":"modified"}]}