{"files":[{"patch":"@@ -1233,5 +1233,3 @@\n-    \/\/ Resetting bitmaps of young gen when bootstrap old GC or there is preempted old GC\n-    \/\/ causes crash due to remembered set violation, hence condition is added to fix the crash.\n-    \/\/ Assuming bitmaps of young gen are not used at all after the cycle, the crash should not\n-    \/\/ have happend, it seems to tickle a bug in remembered set scan. Root causing and fixing of the bug\n-    \/\/ will be tracked via ticket https:\/\/bugs.openjdk.org\/browse\/JDK-8347371\n+    \/\/ Valid bitmap of young generation is needed by concurrent weak references phase of old GC cycle,\n+    \/\/ because it is possible that there is soft reference in old generation with the referent in young generation;\n+    \/\/ therefore mark bitmap of young generation can't be reset if there will be old GC after the concurrent GC cycle.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}