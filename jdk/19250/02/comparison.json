{"files":[{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2012, 2023 SAP SE. All rights reserved.\n+ * Copyright (c) 2012, 2024 SAP SE. All rights reserved.\n@@ -1830,1 +1830,1 @@\n-  BasicType basic_type = default_type != nullptr ? default_type->element_type()->basic_type() : T_ILLEGAL;\n+  BasicType basic_type = (default_type != nullptr) ? default_type->element_type()->basic_type() : T_ILLEGAL;\n@@ -1835,1 +1835,0 @@\n-  const int frame_resize = frame::native_abi_reg_args_size - sizeof(frame::java_abi); \/\/ C calls need larger frame.\n@@ -1841,1 +1840,1 @@\n-  if (op->expected_type() == nullptr) {\n+  if (default_type == nullptr) {\n@@ -1876,1 +1875,1 @@\n-  assert(default_type != nullptr && default_type->is_array_klass(), \"must be true at this point\");\n+  assert(default_type != nullptr && default_type->is_array_klass() && default_type->is_loaded(), \"must be true at this point\");\n@@ -1971,1 +1970,5 @@\n-    __ b(cont);\n+    if (stub != nullptr) {\n+      __ b(cont);\n+      __ bind(slow);\n+      __ b(*stub->entry());\n+    }\n@@ -2092,0 +2095,2 @@\n+    __ bind(slow);\n+    __ b(*stub->entry());\n@@ -2093,2 +2098,0 @@\n-  __ bind(slow);\n-  __ b(*stub->entry());\n@@ -2107,1 +2110,1 @@\n-    metadata2reg(op->expected_type()->constant_encoding(), tmp);\n+    metadata2reg(default_type->constant_encoding(), tmp);\n@@ -2183,1 +2186,3 @@\n-  __ bind(*stub->continuation());\n+  if (stub != nullptr) {\n+    __ bind(*stub->continuation());\n+  }\n@@ -2304,1 +2309,2 @@\n-                      *op->stub()->entry());\n+                      *op->stub()->entry(),\n+                      op->zero_array());\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRAssembler_ppc.cpp","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2012, 2023 SAP SE. All rights reserved.\n+ * Copyright (c) 2012, 2024 SAP SE. All rights reserved.\n@@ -761,1 +761,7 @@\n-  CodeEmitInfo* info = state_for(x, x->state());\n+  CodeEmitInfo* info = nullptr;\n+  if (x->state_before() != nullptr && x->state_before()->force_reexecute()) {\n+    info = state_for(x, x->state_before());\n+    info->set_force_reexecute();\n+  } else {\n+    info = state_for(x, x->state());\n+  }\n@@ -781,1 +787,3 @@\n-\n+  if (x->check_flag(Instruction::OmitChecksFlag)) {\n+    flags = 0;\n+  }\n@@ -906,1 +914,7 @@\n-  CodeEmitInfo* info = state_for(x, x->state());\n+  CodeEmitInfo* info = nullptr;\n+  if (x->state_before() != nullptr && x->state_before()->force_reexecute()) {\n+    info = state_for(x, x->state_before());\n+    info->set_force_reexecute();\n+  } else {\n+    info = state_for(x, x->state());\n+  }\n@@ -924,1 +938,1 @@\n-  __ allocate_array(reg, len, tmp1, tmp2, tmp3, tmp4, elem_type, klass_reg, slow_path);\n+  __ allocate_array(reg, len, tmp1, tmp2, tmp3, tmp4, elem_type, klass_reg, slow_path, x->zero_array());\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRGenerator_ppc.cpp","additions":19,"deletions":5,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2012, 2018 SAP SE. All rights reserved.\n+ * Copyright (c) 2012, 2024 SAP SE. All rights reserved.\n@@ -313,1 +313,2 @@\n-  Label&   slow_case                   \/\/ continuation point if fast allocation fails\n+  Label&   slow_case,                  \/\/ continuation point if fast allocation fails\n+  bool     zero_array                  \/\/ zero the allocated array or not\n@@ -349,14 +350,15 @@\n-  \/\/ Initialize body.\n-  const Register base  = t2;\n-  const Register index = t3;\n-  addi(base, obj, base_offset_in_bytes);               \/\/ compute address of first element\n-  addi(index, arr_size, -(base_offset_in_bytes));      \/\/ compute index = number of bytes to clear\n-\n-  \/\/ Zero first 4 bytes, if start offset is not word aligned.\n-  if (!is_aligned(base_offset_in_bytes, BytesPerWord)) {\n-    assert(is_aligned(base_offset_in_bytes, BytesPerInt), \"must be 4-byte aligned\");\n-    li(t1, 0);\n-    stw(t1, 0, base);\n-    addi(base, base, BytesPerInt);\n-    \/\/ Note: initialize_body will align index down, no need to correct it here.\n-  }\n+  if (zero_array) {\n+    \/\/ Initialize body.\n+    const Register base  = t2;\n+    const Register index = t3;\n+    addi(base, obj, base_offset_in_bytes);               \/\/ compute address of first element\n+    addi(index, arr_size, -(base_offset_in_bytes));      \/\/ compute index = number of bytes to clear\n+\n+    \/\/ Zero first 4 bytes, if start offset is not word aligned.\n+    if (!is_aligned(base_offset_in_bytes, BytesPerWord)) {\n+      assert(is_aligned(base_offset_in_bytes, BytesPerInt), \"must be 4-byte aligned\");\n+      li(t1, 0);\n+      stw(t1, 0, base);\n+      addi(base, base, BytesPerInt);\n+      \/\/ Note: initialize_body will align index down, no need to correct it here.\n+    }\n@@ -364,1 +366,2 @@\n-  initialize_body(base, index);\n+    initialize_body(base, index);\n+  }\n","filename":"src\/hotspot\/cpu\/ppc\/c1_MacroAssembler_ppc.cpp","additions":20,"deletions":17,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2012, 2015 SAP SE. All rights reserved.\n+ * Copyright (c) 2012, 2024 SAP SE. All rights reserved.\n@@ -86,1 +86,2 @@\n-    Label&   slow_case                 \/\/ continuation point if fast allocation fails\n+    Label&   slow_case,                \/\/ continuation point if fast allocation fails\n+    bool     zero_array                \/\/ zero the allocated array or not\n","filename":"src\/hotspot\/cpu\/ppc\/c1_MacroAssembler_ppc.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -238,1 +238,1 @@\n-#if defined(X86) || defined(AARCH64)\n+#if defined(X86) || defined(AARCH64) || defined(PPC64)\n","filename":"src\/hotspot\/share\/c1\/c1_Compiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -356,1 +356,1 @@\n-#if defined(X86) || defined(AARCH64)\n+#if defined(X86) || defined(AARCH64) || defined(PPC64)\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}