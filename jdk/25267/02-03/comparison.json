{"files":[{"patch":"@@ -2403,0 +2403,9 @@\n+\/\/ When reading outside a lock, use this.\n+jmethodID* InstanceKlass::methods_jmethod_ids_acquire() const {\n+  return Atomic::load_acquire(&_methods_jmethod_ids);\n+}\n+\n+void InstanceKlass::release_set_methods_jmethod_ids(jmethodID* jmeths) {\n+  Atomic::release_store(&_methods_jmethod_ids, jmeths);\n+}\n+\n@@ -2425,1 +2434,1 @@\n-    jmeths = methods_jmethod_ids_acquire();\n+    jmeths = _methods_jmethod_ids;\n@@ -2480,1 +2489,1 @@\n-  jmethodID* jmeths = methods_jmethod_ids_acquire();\n+  jmethodID* jmeths = _methods_jmethod_ids;\n@@ -2924,1 +2933,1 @@\n-  jmethodID* jmeths = methods_jmethod_ids_acquire();\n+  jmethodID* jmeths = _methods_jmethod_ids;\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1055,2 +1055,2 @@\n-  inline jmethodID* methods_jmethod_ids_acquire() const;\n-  inline void release_set_methods_jmethod_ids(jmethodID* jmeths);\n+  jmethodID* methods_jmethod_ids_acquire() const;\n+  void release_set_methods_jmethod_ids(jmethodID* jmeths);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,8 +74,0 @@\n-inline jmethodID* InstanceKlass::methods_jmethod_ids_acquire() const {\n-  return Atomic::load_acquire(&_methods_jmethod_ids);\n-}\n-\n-inline void InstanceKlass::release_set_methods_jmethod_ids(jmethodID* jmeths) {\n-  Atomic::release_store(&_methods_jmethod_ids, jmeths);\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.inline.hpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"}]}