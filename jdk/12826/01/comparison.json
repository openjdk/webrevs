{"files":[{"patch":"@@ -57,1 +57,1 @@\n-     * TODO: replace with @code{BiPredicate<String, String>} and method reference when moving to 8\n+     * TODO: replace with {@code BiPredicate<String, String>} and method reference when moving to 8\n","filename":"make\/ide\/idea\/jdk\/template\/src\/idea\/JdkIdeaAntLogger.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-     * TODO: replace with @code{BiPredicate<String, String>} and method reference when moving to 8\n+     * TODO: replace with {@code BiPredicate<String, String>} and method reference when moving to 8\n","filename":"make\/ide\/idea\/langtools\/template\/src\/idea\/LangtoolsIdeaAntLogger.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -258,1 +258,1 @@\n-     *         {@see java.lang.invoke.StringConcatFactory#makeConcatWithConstants(MethodHandles.Lookup,\n+     *         {@link java.lang.invoke.StringConcatFactory#makeConcatWithConstants(MethodHandles.Lookup,\n@@ -267,1 +267,1 @@\n-     *         {@see java.lang.invoke.LambdaMetafactory#metafactory(\n+     *         {@link java.lang.invoke.LambdaMetafactory#metafactory(\n@@ -276,1 +276,1 @@\n-     *         {@see java.lang.invoke.LambdaMetafactory#metafactory(\n+     *         {@link java.lang.invoke.LambdaMetafactory#metafactory(\n@@ -285,1 +285,1 @@\n-     *         {@see java.lang.invoke.LambdaMetafactory#altMetafactory(\n+     *         {@link java.lang.invoke.LambdaMetafactory#altMetafactory(\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/BootstrapMethodInvoker.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-     * package private to allow calls from (@code ProtectionDomain} without\n+     * package private to allow calls from {@code ProtectionDomain} without\n","filename":"src\/java.base\/share\/classes\/java\/security\/AccessControlContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -263,1 +263,1 @@\n-     * (@code BasicPermission} from a stream.\n+     * {@code BasicPermission} from a stream.\n@@ -326,2 +326,2 @@\n-     * This is set to {@code true} if this (@code BasicPermissionCollection}\n-     * contains a {code BasicPermission} with '*' as its permission name.\n+     * This is set to {@code true} if this {@code BasicPermissionCollection}\n+     * contains a {@code BasicPermission} with '*' as its permission name.\n","filename":"src\/java.base\/share\/classes\/java\/security\/BasicPermission.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-     * {@see #needsReturnBuffer}\n+     * @see #needsReturnBuffer\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallingSequence.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-     * @returns a Properties object containing only the entries in {@code p}\n+     * @return a Properties object containing only the entries in {@code p}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/VMSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-     * @inheritDoc\n+     * {@inheritDoc}\n@@ -183,1 +183,1 @@\n-     * @inheritDoc\n+     * {@inheritDoc}\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/LocaleNameProviderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -648,1 +648,1 @@\n-         * @inheritDoc\n+         * {@inheritDoc}\n@@ -662,1 +662,1 @@\n-         * @inheritDoc\n+         * {@inheritDoc}\n@@ -677,1 +677,1 @@\n-         * @inheritDoc\n+         * {@inheritDoc}\n@@ -688,1 +688,1 @@\n-         * @inheritDoc\n+         * {@inheritDoc}\n@@ -699,1 +699,1 @@\n-         * @inheritDoc\n+         * {@inheritDoc}\n@@ -741,1 +741,1 @@\n-         * @inheritDoc\n+         * {@inheritDoc}\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthComboBoxUI.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-     * @inheritDoc\n+     * {@inheritDoc}\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthComboPopup.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -349,1 +349,1 @@\n-     * @param flags bidi and context flags {@see #java.awt.Font}\n+     * @param flags bidi and context flags {@link java.awt.Font}\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/GlyphLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-     * @inheritDoc\n+     * {@inheritDoc}\n@@ -104,1 +104,1 @@\n-     * @inheritDoc\n+     * {@inheritDoc}\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/StateTrackableDelegate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-     * This implementation uses {@see #submit} to send this\n+     * This implementation uses {@link #submit} to send this\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/AccumulativeRunnable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2281,1 +2281,1 @@\n-     * returns the {@L&F} property.\n+     * returns the {@literal L&F} property.\n@@ -2285,1 +2285,1 @@\n-     * @return the boolean value of the client property if it is set or the {@L&F}\n+     * @return the boolean value of the client property if it is set or the {@literal L&F}\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/SwingUtilities2.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2388,1 +2388,1 @@\n-     * @inheritDoc\n+     * {@inheritDoc}\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XToolkit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -597,1 +597,1 @@\n-     * {@see IntersectionClassType} and (ii) union types {@see UnionClassType}.\n+     * {@link IntersectionClassType} and (ii) union types {@link UnionClassType}.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2865,1 +2865,1 @@\n-     * of all the other signatures and whose return type is more specific {@see MostSpecificReturnCheck}.\n+     * of all the other signatures and whose return type is more specific {@link MostSpecificReturnCheck}.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2448,1 +2448,1 @@\n-     *  @returns        True if the check completed on all attributed classes\n+     *  @return        True if the check completed on all attributed classes\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -659,1 +659,1 @@\n-     * (@code expressionType}), and a given record ({@code patternTypeSymbol}),\n+     * ({@code expressionType}), and a given record ({@code patternTypeSymbol}),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Infer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3308,1 +3308,1 @@\n-     * {@code ReferenceLookupResult} objects into a (@code Symbol), which is then regarded as the\n+     * {@code ReferenceLookupResult} objects into a {@code Symbol}, which is then regarded as the\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-      @link{sun.jvm.hotspot.debugger.win32.coff.DebugTypes}. *\/\n+      {@link sun.jvm.hotspot.debugger.win32.coff.DebugTypes}. *\/\n@@ -63,1 +63,1 @@\n-      @link{sun.jvm.hotspot.debugger.win32.coff.DebugTypes}), returns\n+      {@link sun.jvm.hotspot.debugger.win32.coff.DebugTypes}), returns\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/win32\/coff\/DebugDirectoryEntry.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    the object is expressed as a @link{sun.jvm.hotspot.oops.Oop}, and\n+    the object is expressed as a {@link sun.jvm.hotspot.oops.Oop}, and\n@@ -35,1 +35,1 @@\n-    @link{sun.jvm.hotspot.oops.FieldIdentifier}. If the element\n+    {@link sun.jvm.hotspot.oops.FieldIdentifier}. If the element\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/LivenessPath.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -101,3 +101,3 @@\n-     * @returns true if the clean up action cleared the referent of an oop handle and requires a\n-     *          subsequent call to {@link CompilerToVM#releaseClearedOopHandles()} to reclaim the\n-     *          resources of the handle itself\n+     * @return true if the clean up action cleared the referent of an oop handle and requires a\n+     *         subsequent call to {@link CompilerToVM#releaseClearedOopHandles()} to reclaim the\n+     *         resources of the handle itself\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/Cleaner.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -632,1 +632,1 @@\n-     * @returns the matched value or null if no match was made\n+     * @return the matched value or null if no match was made\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotCompiledCodeStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * it when events occur. The JFR events are defined in {see @code\n+ * it when events occur. The JFR events are defined in {@code\n@@ -53,1 +53,1 @@\n-     * Helper methods for managing JFR CompilerPhase events. The events are defined in {see @code\n+     * Helper methods for managing JFR CompilerPhase events. The events are defined in {@code\n@@ -78,1 +78,1 @@\n-     * Helper methods for managing JFR CompilerInlining events. The events are defined in {see @code\n+     * Helper methods for managing JFR CompilerInlining events. The events are defined in {@code\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/JFR.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -69,2 +69,2 @@\n-     * @returns {@code null} if {@code methodHandle} is not a {@link MethodHandle} or the invocation\n-     *          target is not available at this time\n+     * @return {@code null} if {@code methodHandle} is not a {@link MethodHandle} or the invocation\n+     *         target is not available at this time\n@@ -80,1 +80,1 @@\n-     * @returns {@code null} if the invocation target is not available at this time\n+     * @return {@code null} if the invocation target is not available at this time\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/meta\/MethodHandleAccessProvider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-     * Sets the charset to be declared in a META [@code Content-TYPE} element.\n+     * Sets the charset to be declared in a META {@code Content-TYPE} element.\n@@ -126,1 +126,1 @@\n-     * Adds a list of keywords to appear in META [@code keywords} elements.\n+     * Adds a list of keywords to appear in META {@code keywords} elements.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Head.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -516,1 +516,1 @@\n-     * Map compilation IDs ({@see #makeId()}) to newly created nmethods.\n+     * Map compilation IDs ({@link #makeId()}) to newly created nmethods.\n@@ -521,1 +521,1 @@\n-     * Map compilation task IDs {@see #makeId()}) to {@link Compilation}\n+     * Map compilation task IDs {@link #makeId()}) to {@link Compilation}\n@@ -547,3 +547,3 @@\n-     * ({@see #startElement()}) and popped when parsing of a given Java method\n-     * is done ({@see #endElement()}). Parsing events can be nested. Several\n-     * other events add information to scopes ({@see #startElement()}).\n+     * ({@link #startElement()}) and popped when parsing of a given Java method\n+     * is done ({@link #endElement()}). Parsing events can be nested. Several\n+     * other events add information to scopes ({@code startElement()}).\n","filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/LogParser.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -193,1 +193,1 @@\n-     * Use the associated add methods ({@link #addFlags(String...)}, @link #addScenarios(Scenario...)},\n+     * Use the associated add methods ({@link #addFlags(String...)}, {@link #addScenarios(Scenario...)},\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/TestFramework.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-     * @returns true, if contains, false otherwise\n+     * @return true, if contains, false otherwise\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/plab\/lib\/PlabGCStatistics.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-         * @returns execution controller for current thread\n+         * @return execution controller for current thread\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/runner\/MultiRunner.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -404,1 +404,1 @@\n-     * @returns an RMI Registry, using a random port.\n+     * @return an RMI Registry, using a random port.\n@@ -414,1 +414,1 @@\n-     * @returns an RMI Registry\n+     * @return an RMI Registry\n","filename":"test\/jdk\/java\/rmi\/testlibrary\/TestLibrary.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -212,1 +212,1 @@\n-     * @return a [@code ChronoLocalDateTime<D>} using the change chronology.\n+     * @return a {@code ChronoLocalDateTime<D>} using the change chronology.\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/chrono\/TestExampleCode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-     * @returns A List of the signature schemes in string form.  If no\n+     * @return A List of the signature schemes in string form.  If no\n@@ -305,1 +305,1 @@\n-     * @returns A List of the signature schemes in string form.  If no\n+     * @return A List of the signature schemes in string form.  If no\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/SigSchemePropOrdering.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -314,3 +314,3 @@\n-     * @pass password for the keystore\n-     * @type keystore type\n-     * @returns the KeyStore object\n+     * @param pass password for the keystore\n+     * @param type keystore type\n+     * @return the KeyStore object\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/KeyToolTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-         * @returns the deserialized object\n+         * @return the deserialized object\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRecordTypes\/examples\/SerializableProxy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-     * @return A {@see Class} object representing the class\n+     * @return A {@code Class} object representing the class\n","filename":"test\/lib\/jdk\/test\/lib\/ByteCodeLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-         * @returns this DialogBuilder\n+         * @return this DialogBuilder\n@@ -95,1 +95,1 @@\n-         * @returns this DialogBuilder\n+         * @return this DialogBuilder\n@@ -105,1 +105,1 @@\n-         * @returns this DialogBuilder\n+         * @return this DialogBuilder\n@@ -116,1 +116,1 @@\n-         * @returns this DialogBuilder\n+         * @return this DialogBuilder\n@@ -127,1 +127,1 @@\n-         * @returns this DialogBuilder\n+         * @return this DialogBuilder\n@@ -138,1 +138,1 @@\n-         * @returns this DialogBuilder\n+         * @return this DialogBuilder\n@@ -153,1 +153,1 @@\n-         * @returns a JDialog\n+         * @return a JDialog\n","filename":"test\/lib\/jdk\/test\/lib\/UIBuilder.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-     * @returns the time-stamping response data\n+     * @return the time-stamping response data\n","filename":"test\/lib\/jdk\/test\/lib\/security\/timestamp\/TsaSigner.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}