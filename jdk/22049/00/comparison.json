{"files":[{"patch":"@@ -54,0 +54,1 @@\n+  Symbol* findClass = SymbolTable::new_symbol(\"findClass\");\n@@ -61,1 +62,0 @@\n-  args.push_int(JNI_FALSE);\n@@ -64,2 +64,2 @@\n-                          vmSymbols::loadClass_name(),\n-                          vmSymbols::string_boolean_class_signature(),\n+                          findClass,\n+                          vmSymbols::string_class_signature(),\n","filename":"src\/hotspot\/share\/cds\/unregisteredClasses.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8343416\n+ * @summary Test dumping of class from a system module loaded by a custom loader.\n+ * @requires vm.cds\n+ * @requires vm.cds.custom.loaders\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @run driver ClassFromSystemModule\n+ *\/\n+\n+import java.nio.file.*;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class ClassFromSystemModule {\n+    public static void main(String[] args) throws Exception {\n+        Path jrtFs = Paths.get(System.getProperty(\"java.home\"), \"lib\", \"jrt-fs.jar\");\n+        System.out.println(\"jrtFs: \" + jrtFs.toString());\n+\n+        String classlist[] = new String[] {\n+            \"java\/nio\/file\/spi\/FileSystemProvider id: 1000\",\n+            \"jdk\/internal\/jrtfs\/JrtFileSystemProvider id: 1001 super:1000 source: \" + jrtFs.toString(),\n+        };\n+\n+        OutputAnalyzer out = TestCommon.testDump(null, classlist, \"-Xlog:cds,cds+class=debug\");\n+        out.shouldContain(\"boot  java.nio.file.spi.FileSystemProvider\")\n+           .shouldContain(\"unreg jdk.internal.jrtfs.JrtFileSystemProvider\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/ClassFromSystemModule.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"}]}