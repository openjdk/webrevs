{"files":[{"patch":"@@ -117,3 +117,0 @@\n-    \/\/ The deferred_card_mark region should be empty\n-    \/\/ following the flush above.\n-    assert(thread->deferred_card_mark().is_empty(), \"Error\");\n@@ -127,1 +124,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTableBarrierSet.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -152,5 +152,0 @@\n-  \/\/ See ReduceInitialCardMarks: this holds the precise space interval of\n-  \/\/ the most recent slow path allocation for which compiled code has\n-  \/\/ elided card-marks for performance along the fast-path.\n-  MemRegion     _deferred_card_mark;\n-\n@@ -779,3 +774,0 @@\n-  MemRegion deferred_card_mark() const           { return _deferred_card_mark; }\n-  void set_deferred_card_mark(MemRegion mr)      { _deferred_card_mark = mr;   }\n-\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"}]}