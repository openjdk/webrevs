{"files":[{"patch":"@@ -266,9 +266,7 @@\n-        } else { \/* not a HEAD request or 304 response *\/\n-            if (contentLen == 0) {\n-                if (http10 || upgrade && rCode == 101) {\n-                    o.setWrappedStream (new UndefLengthOutputStream (this, ros));\n-                    close = true;\n-                } else {\n-                    rspHdrs.set (\"Transfer-encoding\", \"chunked\");\n-                    o.setWrappedStream (new ChunkedOutputStream (this, ros));\n-                }\n+        } else if (contentLen == 0) {\n+            if (upgrade && rCode == 101) {\n+                o.setWrappedStream (new UpgradeOutputStream (this, ros));\n+                close = true;\n+            } else if (http10) {\n+                o.setWrappedStream (new UndefLengthOutputStream (this, ros));\n+                close = true;\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ExchangeImpl.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.net.httpserver;\n+\n+import java.io.FilterOutputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.util.Objects;\n+\n+\/**\n+ * a class which allows the caller to write an indefinite number of bytes to an underlying stream.\n+ * Used for upgraded connections only.\n+ *\/\n+class UpgradeOutputStream extends FilterOutputStream {\n+    private boolean closed = false;\n+    ExchangeImpl t;\n+\n+    UpgradeOutputStream(ExchangeImpl t, OutputStream src) {\n+        super(src);\n+        this.t = t;\n+    }\n+\n+    @Override\n+    public void write(int b) throws IOException {\n+        if (closed) {\n+            throw new IOException(\"stream closed\");\n+        }\n+        out.write(b);\n+    }\n+\n+    @Override\n+    public void write(byte[] b, int off, int len) throws IOException {\n+        Objects.checkFromIndexSize(off, len, b.length);\n+        if (len == 0) {\n+            return;\n+        }\n+        if (closed) {\n+            throw new IOException(\"stream closed\");\n+        }\n+        out.write(b, off, len);\n+    }\n+\n+    @Override\n+    public void close() throws IOException {\n+        if (closed) {\n+            return;\n+        }\n+        closed = true;\n+        flush();\n+        LeftOverInputStream is = t.getOriginalInputStream();\n+        if (!is.isClosed()) {\n+            is.close();\n+        }\n+        Event e = new Event.WriteFinished(t);\n+        t.getHttpContext().getServerImpl().addEvent(e);\n+        out.close();\n+    }\n+}\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/UpgradeOutputStream.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"}]}