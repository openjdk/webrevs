{"files":[{"patch":"@@ -39,0 +39,1 @@\n+import static org.junit.jupiter.api.Assertions.fail;\n@@ -48,0 +49,1 @@\n+import java.net.SocketException;\n@@ -74,1 +76,2 @@\n-        HttpServer server = HttpServer.create(new InetSocketAddress(loopback, 0), 0);\n+        HttpServer server = HttpServer.create(new InetSocketAddress(8080), 0);\n+        HttpServer.create(new InetSocketAddress(loopback, 0), 0);\n@@ -154,1 +157,32 @@\n-    static void runRawSocketHttpClient(InetAddress address, int port)\n+\n+    @Test\n+    public void testException() throws Exception {\n+        System.out.println(\"testException()\");\n+        InetAddress loopback = InetAddress.getLoopbackAddress();\n+        HttpServer server = HttpServer.create(new InetSocketAddress(loopback, 0), 0);\n+        ExecutorService executor = Executors.newVirtualThreadPerTaskExecutor();\n+        server.setExecutor(executor);\n+        try {\n+            server.createContext(\n+                someContext,\n+                msg -> {\n+                    msg.sendResponseHeaders(msgCode, -1);\n+                    throw new RuntimeException(\"Simulated exception\");\n+                });\n+            server.start();\n+            System.out.println(\"Server started at port \" + server.getAddress().getPort());\n+\n+            runRawSocketHttpClient(loopback, server.getAddress().getPort(), true);\n+        } finally {\n+            System.out.println(\"shutting server down\");\n+            executor.shutdown();\n+            server.stop(0);\n+        }\n+        System.out.println(\"Server finished.\");\n+    }\n+\n+    static void runRawSocketHttpClient(InetAddress address, int port) throws Exception {\n+        runRawSocketHttpClient(address, port, false);\n+    }\n+\n+    static void runRawSocketHttpClient(InetAddress address, int port, boolean exception)\n@@ -204,0 +238,5 @@\n+        } catch (SocketException se) {\n+            if (!exception) {\n+                fail(\"Unexpected exception: \" + se);\n+            }\n+            assertEquals(\"Connection reset\", se.getMessage());\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/SwitchingProtocolTest.java","additions":41,"deletions":2,"binary":false,"changes":43,"status":"modified"}]}