{"files":[{"patch":"@@ -937,1 +937,1 @@\n-         * We can call \"drawChars\" on each one of them in turn, setting\n+         * We can call \"drawString\" on each one of them in turn, setting\n@@ -945,0 +945,4 @@\n+         * If we do use \"drawString\" on each character, we need to use a\n+         * font without translation transform, since the font translation\n+         * transform will already be reflected in the glyph positions, and\n+         * we do not want to apply the translation twice.\n@@ -950,0 +954,9 @@\n+        Font font2 = font;\n+        if (font.isTransformed()) {\n+            AffineTransform t = font.getTransform();\n+            if ((t.getType() & AffineTransform.TYPE_TRANSLATION) != 0) {\n+                t.setTransform(t.getScaleX(), t.getShearY(), t.getShearX(), t.getScaleY(), 0, 0);\n+                font2 = font.deriveFont(t);\n+            }\n+        }\n+\n@@ -953,1 +966,1 @@\n-                       font, gvFrc, 0f);\n+                       font2, gvFrc, 0f);\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/PathGraphics.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -535,1 +535,1 @@\n-        double advanceScaleY = Math.sqrt(pty.x*pty.x+pty.y*pty.y);\n+        double advanceScaleY = -Math.sqrt(pty.x*pty.x+pty.y*pty.y);\n@@ -634,0 +634,1 @@\n+        \/* This glyph position includes the font's transform translation, if any *\/\n@@ -638,12 +639,0 @@\n-\n-        \/* Already have the translate from the deviceTransform,\n-         * but the font may have a translation component too.\n-         *\/\n-        if (font.isTransformed()) {\n-            AffineTransform fontTx = font.getTransform();\n-            float translateX = (float)(fontTx.getTranslateX());\n-            float translateY = (float)(fontTx.getTranslateY());\n-            if (Math.abs(translateX) < 0.00001) translateX = 0f;\n-            if (Math.abs(translateY) < 0.00001) translateY = 0f;\n-            userpos.x += translateX; userpos.y += translateY;\n-        }\n@@ -700,1 +689,1 @@\n-        double advanceScaleY = Math.sqrt(pty.x*pty.x+pty.y*pty.y);\n+        double advanceScaleY = -Math.sqrt(pty.x*pty.x+pty.y*pty.y);\n@@ -760,0 +749,1 @@\n+        advanceTransform.rotate(iangle * Math.PI \/ 1800.0);\n@@ -879,0 +869,1 @@\n+             advanceTransform.rotate(rotation * Math.PI \/ 1800.0);\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WPathGraphics.java","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"}]}