{"files":[{"patch":"@@ -306,1 +306,0 @@\n-  \/\/ Get index out of bytecode pointer\n@@ -309,0 +308,1 @@\n+  \/\/ Get index out of bytecode pointer\n@@ -311,10 +311,3 @@\n-  if (is_power_of_2(sizeof(ResolvedMethodEntry))) {\n-    ldr(cache, Address(FP, frame::interpreter_frame_cache_offset * wordSize));\n-    \/\/ Get address of method entries array\n-    ldr(cache, Address(cache, in_bytes(ConstantPoolCache::method_entries_offset())));\n-    add(cache, cache, Array<ResolvedMethodEntry>::base_offset_in_bytes());\n-    add(cache, cache, AsmOperand(index, lsl, log2i_exact(sizeof(ResolvedMethodEntry))));\n-  }\n-  else {\n-    mov(cache, sizeof(ResolvedMethodEntry));\n-    mul(index, index, cache); \/\/ Scale the index to be the entry index * sizeof(ResolvedMethodEntry)\n+  \/\/ sizeof(ResolvedMethodEntry) is not a power of 2 on Arm, so can't use shift\n+  mov(cache, sizeof(ResolvedMethodEntry));\n+  mul(index, index, cache); \/\/ Scale the index to be the entry index * sizeof(ResolvedMethodEntry)\n@@ -322,7 +315,6 @@\n-    \/\/ load constant pool cache pointer\n-    ldr(cache, Address(FP, frame::interpreter_frame_cache_offset * wordSize));\n-    \/\/ Get address of method entries array\n-    ldr(cache, Address(cache, in_bytes(ConstantPoolCache::method_entries_offset())));\n-    add(cache, cache, Array<ResolvedMethodEntry>::base_offset_in_bytes());\n-    add(cache, cache, index);\n-  }\n+  \/\/ load constant pool cache pointer\n+  ldr(cache, Address(FP, frame::interpreter_frame_cache_offset * wordSize));\n+  \/\/ Get address of method entries array\n+  ldr(cache, Address(cache, in_bytes(ConstantPoolCache::method_entries_offset())));\n+  add(cache, cache, Array<ResolvedMethodEntry>::base_offset_in_bytes());\n+  add(cache, cache, index);\n","filename":"src\/hotspot\/cpu\/arm\/interp_masm_arm.cpp","additions":10,"deletions":18,"binary":false,"changes":28,"status":"modified"}]}