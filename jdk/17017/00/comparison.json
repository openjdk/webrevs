{"files":[{"patch":"@@ -307,0 +307,2 @@\n+  assert_different_registers(cache, index);\n+\n@@ -308,2 +310,0 @@\n-  mov(cache, sizeof(ResolvedMethodEntry));\n-  mul(index, index, cache); \/\/ Scale the index to be the entry index * sizeof(ResolvedMethodEntry)\n@@ -311,6 +311,18 @@\n-  \/\/ load constant pool cache pointer\n-  ldr(cache, Address(FP, frame::interpreter_frame_cache_offset * wordSize));\n-  \/\/ Get address of method entries array\n-  ldr(cache, Address(cache, ConstantPoolCache::method_entries_offset()));\n-  add(cache, cache, Array<ResolvedMethodEntry>::base_offset_in_bytes());\n-  add(cache, cache, index);\n+  if (is_power_of_2(sizeof(ResolvedMethodEntry))) {\n+    ldr(cache, Address(FP, frame::interpreter_frame_cache_offset * wordSize));\n+    \/\/ Get address of method entries array\n+    ldr(cache, Address(cache, in_bytes(ConstantPoolCache::method_entries_offset())));\n+    add(cache, cache, Array<ResolvedMethodEntry>::base_offset_in_bytes());\n+    add(cache, cache, AsmOperand(index, lsl, log2i_exact(sizeof(ResolvedMethodEntry))));\n+  }\n+  else {\n+    mov(cache, sizeof(ResolvedMethodEntry));\n+    mul(index, index, cache); \/\/ Scale the index to be the entry index * sizeof(ResolvedMethodEntry)\n+\n+    \/\/ load constant pool cache pointer\n+    ldr(cache, Address(FP, frame::interpreter_frame_cache_offset * wordSize));\n+    \/\/ Get address of method entries array\n+    ldr(cache, Address(cache, in_bytes(ConstantPoolCache::method_entries_offset())));\n+    add(cache, cache, Array<ResolvedMethodEntry>::base_offset_in_bytes());\n+    add(cache, cache, index);\n+  }\n","filename":"src\/hotspot\/cpu\/arm\/interp_masm_arm.cpp","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -373,2 +373,0 @@\n-    __ check_stack_top();\n-    __ add(Rstack_top, Rstack_top, AsmOperand(Rcache, lsl, Interpreter::logStackElementSize));\n@@ -379,3 +377,1 @@\n-    __ ldrh(Rcache, Address(Rcache, in_bytes(ResolvedIndyEntry::num_parameters_offset())));\n-    __ check_stack_top();\n-    __ add(Rstack_top, Rstack_top, AsmOperand(Rcache, lsl, Interpreter::logStackElementSize));\n+    __ ldrh(Rcache, Address(Rcache, in_bytes(ResolvedMethodEntry::num_parameters_offset())));\n@@ -384,0 +380,3 @@\n+  __ check_stack_top();\n+  __ add(Rstack_top, Rstack_top, AsmOperand(Rcache, lsl, Interpreter::logStackElementSize));\n+\n","filename":"src\/hotspot\/cpu\/arm\/templateInterpreterGenerator_arm.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -3669,2 +3669,2 @@\n-    Address recv_addr = __ receiver_argument_address(Rstack_top, Rtemp, recv);\n-    __ ldr(recv, recv_addr);\n+    __ add(recv, Rstack_top, AsmOperand(recv, lsl, Interpreter::logStackElementSize));\n+    __ ldr(recv, Address(recv, -Interpreter::stackElementSize));\n@@ -3676,2 +3676,2 @@\n-    __ mov_slow(Rtemp, table);\n-    __ ldr(LR, Address::indexed_ptr(Rtemp, ret_type));\n+    __ mov_slow(LR, table);\n+    __ ldr(LR, Address::indexed_ptr(LR, ret_type));\n@@ -3747,0 +3747,1 @@\n+\n@@ -3748,1 +3749,3 @@\n-  load_resolved_method_entry_special_or_static(R2_tmp,  \/\/ ResolvedMethodEntry*\n+  const Register Rflags = R3_tmp;\n+\n+  load_resolved_method_entry_special_or_static(Rrecv,  \/\/ ResolvedMethodEntry*\n@@ -3750,1 +3753,1 @@\n-                                               R3_tmp); \/\/ Flags\n+                                               Rflags); \/\/ Flags\n@@ -3763,1 +3766,5 @@\n-  load_resolved_method_entry_special_or_static(R2_tmp,  \/\/ ResolvedMethodEntry*\n+\n+  const Register Rrecv  = R2_tmp;\n+  const Register Rflags = R3_tmp;\n+\n+  load_resolved_method_entry_special_or_static(Rrecv,  \/\/ ResolvedMethodEntry*\n@@ -3765,2 +3772,2 @@\n-                                               R3_tmp); \/\/ Flags\n-  prepare_invoke(R2_tmp, R2_tmp);\n+                                               Rflags); \/\/ Flags\n+  prepare_invoke(Rrecv, Rrecv);\n@@ -3768,1 +3775,1 @@\n-  __ profile_call(R2_tmp);\n+  __ profile_call(Rrecv);\n@@ -3791,2 +3798,2 @@\n-  load_resolved_method_entry_interface(R2_tmp,  \/\/ ResolvedMethodEntry*\n-                                       R1_tmp,  \/\/ Klass*\n+  load_resolved_method_entry_interface(Rrecv,   \/\/ ResolvedMethodEntry*\n+                                       Rinterf, \/\/ Klass*\n@@ -3794,1 +3801,1 @@\n-                                       R3_tmp); \/\/ Flags\n+                                       Rflags); \/\/ Flags\n","filename":"src\/hotspot\/cpu\/arm\/templateTable_arm.cpp","additions":20,"deletions":13,"binary":false,"changes":33,"status":"modified"}]}