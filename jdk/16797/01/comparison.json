{"files":[{"patch":"@@ -31,0 +31,2 @@\n+void(*psig_handler) (int, siginfo_t *, void *) = 0;\n+\n@@ -33,0 +35,6 @@\n+    \/* call the previous signal handler in the chain to avoid unhandled\n+     * illegal Opcode (SIGILL) event, which would result in endles recursion\n+     *\/\n+    if (psig_handler) {\n+        psig_handler(sig, info, context);\n+    }\n@@ -36,1 +44,1 @@\n-    struct sigaction act;\n+    struct sigaction act, oact;\n@@ -39,2 +47,2 @@\n-    act.sa_flags = 0;\n-    int retval = sigaction(val, &act, 0);\n+    act.sa_flags = SA_SIGINFO;\n+    int retval = sigaction(val, &act, &oact);\n@@ -44,0 +52,9 @@\n+    \/* store the previous signal handler in the global psig_handler variable to be able\n+     * to continue the signal chain\n+     *\/\n+    if (oact.sa_handler != SIG_DFL &&\n+        oact.sa_handler != SIG_ERR &&\n+        oact.sa_handler != SIG_IGN &&\n+        oact.sa_handler != NULL) {\n+        psig_handler = oact.sa_sigaction;\n+    }\n","filename":"test\/hotspot\/jtreg\/runtime\/posixSig\/libTestPsig.c","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"}]}