{"files":[{"patch":"@@ -943,1 +943,1 @@\n-      err = suspend_thread(thread_oop, java_thread, \/* single_suspend *\/ true, nullptr);\n+      err = suspend_thread(thread_oop, java_thread, \/* single_suspend *\/ true);\n@@ -950,1 +950,1 @@\n-  err = suspend_thread(self_tobj(), current, \/* single_suspend *\/ true, nullptr);\n+  err = suspend_thread(self_tobj(), current, \/* single_suspend *\/ true);\n@@ -991,1 +991,1 @@\n-      results[i] = suspend_thread(thread_oop, java_thread, \/* single_suspend *\/ true, nullptr);\n+      results[i] = suspend_thread(thread_oop, java_thread, \/* single_suspend *\/ true);\n@@ -998,1 +998,1 @@\n-    results[self_idx] = suspend_thread(self_tobj(), current, \/* single_suspend *\/ true, nullptr);\n+    results[self_idx] = suspend_thread(self_tobj(), current, \/* single_suspend *\/ true);\n@@ -1051,1 +1051,1 @@\n-        suspend_thread(vt_oop, java_thread, \/* single_suspend *\/ false, nullptr);\n+        suspend_thread(vt_oop, java_thread, \/* single_suspend *\/ false);\n@@ -1068,1 +1068,1 @@\n-    suspend_thread(self_tobj(), current, \/* single_suspend *\/ false, nullptr);\n+    suspend_thread(self_tobj(), current, \/* single_suspend *\/ false);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1753,2 +1753,1 @@\n-JvmtiEnvBase::suspend_thread(oop thread_oop, JavaThread* java_thread, bool single_suspend,\n-                             int* need_safepoint_p) {\n+JvmtiEnvBase::suspend_thread(oop thread_oop, JavaThread* java_thread, bool single_suspend) {\n@@ -1810,1 +1809,1 @@\n-    if (!JvmtiSuspendControl::suspend(java_thread)) {\n+    if (!java_thread->java_suspend()) {\n@@ -1872,1 +1871,1 @@\n-      if (!JvmtiSuspendControl::resume(java_thread)) {\n+      if (!java_thread->java_resume()) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -93,2 +93,1 @@\n-  static jvmtiError suspend_thread(oop thread_oop, JavaThread* java_thread, bool single_suspend,\n-                                   int* need_safepoint_p);\n+  static jvmtiError suspend_thread(oop thread_oop, JavaThread* java_thread, bool single_suspend);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -748,34 +748,0 @@\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\/\/\n-\/\/ class JvmtiSuspendControl - see comments in jvmtiImpl.hpp\n-\/\/\n-\n-bool JvmtiSuspendControl::suspend(JavaThread *java_thread) {\n-  return java_thread->java_suspend();\n-}\n-\n-bool JvmtiSuspendControl::resume(JavaThread *java_thread) {\n-  return java_thread->java_resume();\n-}\n-\n-void JvmtiSuspendControl::print() {\n-#ifndef PRODUCT\n-  ResourceMark rm;\n-  LogStreamHandle(Trace, jvmti) log_stream;\n-  log_stream.print(\"Suspended Threads: [\");\n-  for (JavaThreadIteratorWithHandle jtiwh; JavaThread *thread = jtiwh.next(); ) {\n-#ifdef JVMTI_TRACE\n-    const char *name   = JvmtiTrace::safe_get_thread_name(thread);\n-#else\n-    const char *name   = \"\";\n-#endif \/*JVMTI_TRACE *\/\n-    log_stream.print(\"%s(%c \", name, thread->is_suspended() ? 'S' : '_');\n-    if (!thread->has_last_Java_frame()) {\n-      log_stream.print(\"no stack\");\n-    }\n-    log_stream.print(\") \");\n-  }\n-  log_stream.print_cr(\"]\");\n-#endif\n-}\n-\n","filename":"src\/hotspot\/share\/prims\/jvmtiImpl.cpp","additions":0,"deletions":34,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -281,22 +281,0 @@\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\/\/\n-\/\/ class JvmtiSuspendControl\n-\/\/\n-\/\/ Convenience routines for suspending and resuming threads.\n-\/\/\n-\/\/ All attempts by JVMTI to suspend and resume threads must go through the\n-\/\/ JvmtiSuspendControl interface.\n-\/\/\n-\/\/ methods return true if successful\n-\/\/\n-class JvmtiSuspendControl : public AllStatic {\n-public:\n-  \/\/ suspend the thread, taking it to a safepoint\n-  static bool suspend(JavaThread *java_thread);\n-  \/\/ resume the thread\n-  static bool resume(JavaThread *java_thread);\n-\n-  static void print();\n-};\n-\n-\n","filename":"src\/hotspot\/share\/prims\/jvmtiImpl.hpp","additions":0,"deletions":22,"binary":false,"changes":22,"status":"modified"}]}