{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import java.util.HashSet;\n@@ -38,0 +39,1 @@\n+import java.util.Set;\n@@ -164,0 +166,60 @@\n+    @Test \/\/JDK-8361445\n+    public void testSuppressWarningsErroneousAttribute3() throws Exception {\n+        String[] attributeValues = {\n+            \"Test.BOOLEAN\",\n+            \"Test.BYTE\",\n+            \"Test.SHORT\",\n+            \"Test.INT\",\n+            \"Test.LONG\",\n+            \"Test.FLOAT\",\n+            \"Test.DOUBLE\",\n+            \"Test.CHAR\",\n+            \"Test.class\",\n+            \"@Deprecated\"\n+        };\n+        Set<String> variants = new HashSet<>();\n+\n+        for (String attributeValue : attributeValues) {\n+            variants.add(attributeValue);\n+            variants.add(\"{\" + attributeValue + \"}\");\n+        }\n+\n+        for (String attributeValue1 : attributeValues) {\n+            for (String attributeValue2 : attributeValues) {\n+                variants.add(\"{\" + attributeValue1 + \", \" + attributeValue2 + \"}\");\n+            }\n+        }\n+\n+        String code = \"\"\"\n+                      @SuppressWarnings($ATTRIBUTE_VALUE)\n+                      public class Test {\n+                          public static final boolean BOOLEAN = false;\n+                          public static final byte BYTE = 0;\n+                          public static final short SHORT = 0;\n+                          public static final int INT = 0;\n+                          public static final long LONG = 0l;\n+                          public static final float FLOAT = 0.0;\n+                          public static final double DOUBLE = 0.0;\n+                          public static final char CHAR = '\\0';\n+                      }\n+                      enum E {\n+                          A\n+                      }\n+                      \"\"\";\n+\n+        for (String variant : variants) {\n+            System.out.println(\"current variant: \" + variant);\n+            Path curPath = Path.of(\".\");\n+            List<String> actual = new JavacTask(tb)\n+                    .options(\"-XDrawDiagnostics\", \"-XDdev\")\n+                    .sources(code.replace(\"$ATTRIBUTE_VALUE\", variant))\n+                    .outdir(curPath)\n+                    .run(Expect.FAIL)\n+                    .getOutputLines(OutputKind.DIRECT);\n+\n+            if (actual.isEmpty() || !actual.get(actual.size() - 1).contains(\"error\")) {\n+                error(\"Incorrect actual errors: \" + actual + \" for variant: \" + variant);\n+            }\n+        }\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/recovery\/AnnotationRecovery.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"modified"}]}