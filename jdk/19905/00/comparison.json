{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8023524 8304846\n+ * @bug 8023524 8304846 8335150\n@@ -43,0 +43,1 @@\n+import java.nio.file.FileStore;\n@@ -210,2 +211,16 @@\n-        if (!Files.getFileStore(Paths.get(\".\"))\n-                  .supportsFileAttributeView(PosixFileAttributeView.class)) {\n+        FileStore fs;\n+        try {\n+            fs = Files.getFileStore(Paths.get(\".\"));\n+        } catch (IOException e) {\n+            if (e.getMessage().contains(\"Mount point not found\")) {\n+                \/\/ We would like to skip the test with a cause with\n+                \/\/      throw new SkipException(\"Mount point not found\");\n+                \/\/ but jtreg will report failure so we just pass the test\n+                \/\/ which we can look at if jtreg changed its behavior\n+                System.out.println(\"Mount point not found. Skipping testDumpDirNotWritable test.\");\n+                return;\n+            } else {\n+                throw e;\n+            }\n+        }\n+        if (!fs.supportsFileAttributeView(PosixFileAttributeView.class)) {\n@@ -213,4 +228,1 @@\n-            \/\/ We would like to skip the test with a cause with\n-            \/\/     throw new SkipException(\"Posix not supported\");\n-            \/\/ but jtreg will report failure so we just pass the test\n-            \/\/ which we can look at if jtreg changed its behavior\n+            \/\/ Same as above, return instead of SkipException(\"Posix not supported\")\n","filename":"test\/jdk\/java\/lang\/invoke\/lambda\/LogGeneratedClassesTest.java","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"}]}