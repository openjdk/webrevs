{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2015, 2020 SAP SE. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025 SAP SE. All rights reserved.\n@@ -31,0 +31,3 @@\n+#include <time.h>\n+#include <stdlib.h>\n+#include <libperfstat.h>\n@@ -32,0 +35,3 @@\n+perfstat_process_t prev_stats = {0};\n+static unsigned long long prev_timebase = 0;\n+static int initialized = 0;\n@@ -33,0 +39,5 @@\n+#define HTIC2SEC(x) (((double)(x) * XINTFRAC) \/ 1000000000.0)\n+\n+static perfstat_cpu_total_t cpu_total_old;\n+static time_t last_sample_time = 0;\n+static double last_cpu_load = -1.0;\n@@ -37,1 +48,36 @@\n-    return -1.0;\n+    perfstat_cpu_total_t cpu_total;\n+    int ret;\n+\n+    time_t now = time(NULL);\n+    if (initialized && (now - last_sample_time < 5)) {\n+        return last_cpu_load; \/\/ Return cached value if less than 5s\n+    }\n+\n+    ret = perfstat_cpu_total(NULL, &cpu_total, sizeof(perfstat_cpu_total_t), 1);\n+    if (ret < 0) {\n+        return -1.0;\n+    }\n+\n+    if (!initialized) {\n+        cpu_total_old = cpu_total;\n+        initialized = 1;\n+        last_sample_time = now;\n+        return -1.0;\n+    }\n+\n+    long long user_diff = cpu_total.user - cpu_total_old.user;\n+    long long sys_diff = cpu_total.sys - cpu_total_old.sys;\n+    long long idle_diff = cpu_total.idle - cpu_total_old.idle;\n+    long long wait_diff = cpu_total.wait - cpu_total_old.wait;\n+    long long total = user_diff + sys_diff + idle_diff + wait_diff;\n+\n+    if (total == 0) {\n+        return -1.0;\n+    }\n+\n+    double load = (double)(user_diff + sys_diff) \/ total;\n+    last_cpu_load = load;\n+    last_sample_time = now;\n+    cpu_total_old = cpu_total;\n+\n+    return load;\n@@ -44,1 +90,27 @@\n-    return -1.0;\n+    perfstat_process_t curr_stats;\n+    perfstat_id_t id;\n+    unsigned long long curr_timebase, timebase_diff;\n+    double user_diff, sys_diff, delta_time;\n+\n+    if (perfstat_process(&id, &curr_stats, sizeof(perfstat_process_t), 1) < 0) {\n+        return -1.0;\n+    }\n+    if (!initialized) {\n+        prev_stats = curr_stats;\n+        prev_timebase = curr_stats.last_timebase;\n+        initialized = 1;\n+        return -1.0;\n+    }\n+    curr_timebase = curr_stats.last_timebase;\n+    timebase_diff = curr_timebase - prev_timebase;\n+    if ((long long)timebase_diff <= 0 || XINTFRAC == 0) {\n+        return -1.0;\n+    }\n+\n+    delta_time = HTIC2SEC(timebase_diff);\n+    user_diff = (double)(curr_stats.ucpu_time - prev_stats.ucpu_time);\n+    sys_diff  = (double)(curr_stats.scpu_time - prev_stats.scpu_time);\n+    prev_stats = curr_stats;\n+    prev_timebase = curr_timebase;\n+    double cpu_load = (user_diff + sys_diff) \/ delta_time;\n+    return (jdouble)cpu_load;\n","filename":"src\/jdk.management\/aix\/native\/libmanagement_ext\/UnixOperatingSystem.c","additions":76,"deletions":4,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -557,2 +557,0 @@\n-com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuLoad.java 8030957 aix-all\n-com\/sun\/management\/OperatingSystemMXBean\/GetSystemCpuLoad.java  8030957 aix-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}