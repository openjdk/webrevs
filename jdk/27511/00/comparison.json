{"files":[{"patch":"@@ -177,1 +177,0 @@\n-  loader_data->add_class(ik);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -877,4 +877,0 @@\n-\n-    \/\/ Add to class loader list first before creating the mirror\n-    \/\/ (same order as class file parsing)\n-    loader_data->add_class(this);\n@@ -882,0 +878,3 @@\n+  \/\/ Add to class loader list first before creating the mirror\n+  \/\/ (same order as class file parsing)\n+  loader_data->add_class(this);\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\n@@ -35,0 +35,1 @@\n+ *          test-classes\/CustomLoadee5.java test-classes\/CustomLoadee5Child.java\n@@ -52,1 +53,5 @@\n-        String appJar1 = JarBuilder.build(\"UnloadUnregisteredLoader_app1\", \"UnloadUnregisteredLoader\");\n+        String appJar1 = JarBuilder.build(\"UnloadUnregisteredLoader_app1\",\n+                                          \"UnloadUnregisteredLoader\",\n+                                          \"UnloadUnregisteredLoader$CustomLoader\",\n+                                          \"CustomLoadee5\",\n+                                          \"Util\");\n@@ -57,1 +62,4 @@\n-        String customJarPath = JarBuilder.build(\"UnloadUnregisteredLoader_custom\", \"CustomLoadee\");\n+        String customJarPath = JarBuilder.build(\"UnloadUnregisteredLoader_custom\",\n+                                                \"CustomLoadee\",\n+                                                \"CustomLoadee5\",\n+                                                \"CustomLoadee5Child\");\n@@ -69,0 +77,2 @@\n+            \"CustomLoadee5 id: 3 super: 1 source: \" + customJarPath,\n+            \"CustomLoadee5Child id: 4 super: 3 source: \" + customJarPath,\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/UnloadUnregisteredLoaderTest.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-class CustomLoadee5 {\n+public class CustomLoadee5 {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/test-classes\/CustomLoadee5.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.io.InputStream;\n@@ -49,1 +50,1 @@\n-  public static void doit(URL urls[], String className, boolean isFirstTime) throws Exception {\n+    public static void doit(URL urls[], String className, boolean isFirstTime) throws Exception {\n@@ -51,1 +52,3 @@\n-        URLClassLoader custLoader = new URLClassLoader(urls, appLoader);\n+        CustomLoader custLoader = new CustomLoader(urls, appLoader);\n+\n+        \/\/ Part 1 -- load CustomLoadee. It should be loaded from archive when isFirstTime==true\n@@ -71,0 +74,38 @@\n+\n+        \/\/ Part 2\n+        \/\/\n+        \/\/ CustomLoadee5 is never loaded from the archive, because the classfile bytes don't match\n+        \/\/ CustomLoadee5Child is never loaded from the archive, its super is not loaded from the archive\n+        try (InputStream in = appLoader.getResourceAsStream(\"CustomLoadee5.class\")) {\n+            byte[] b = in.readAllBytes();\n+            Util.replace(b, \"this is\", \"DAS IST\"); \/\/ Modify the bytecodes\n+            Class<?> c = custLoader.myDefineClass(b, 0, b.length);\n+            System.out.println(c.newInstance());\n+            if (!\"DAS IST CustomLoadee5\".equals(c.newInstance().toString())) {\n+                throw new RuntimeException(\"Bytecode modification not successful\");\n+            }\n+            if (wb.isSharedClass(c)) {\n+                throw new RuntimeException(c + \"should not be loaded from CDS\");\n+            }\n+        }\n+\n+        \/\/ When isFirstTime==true, the VM will try to load the archived copy of CustomLoadee5Child,\n+        \/\/ but it will fail (because CustomLoadee5 was not loaded from the archive) and will recover\n+        \/\/ by decoding the class from its classfile data.\n+        \/\/ This failure should not leave the JVM in an inconsistent state.\n+        Class<?> child = custLoader.loadClass(\"CustomLoadee5Child\");\n+        if (wb.isSharedClass(child)) {\n+            throw new RuntimeException(child + \"should not be loaded from CDS\");\n+        }\n+    }\n+\n+    static class CustomLoader extends URLClassLoader {\n+        public CustomLoader(URL[] urls, ClassLoader parent) {\n+            super(urls, parent);\n+        }\n+\n+        public Class<?> myDefineClass(byte[] b, int off, int len)\n+            throws ClassFormatError\n+        {\n+            return super.defineClass(b, off, len);\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/test-classes\/UnloadUnregisteredLoader.java","additions":43,"deletions":2,"binary":false,"changes":45,"status":"modified"}]}