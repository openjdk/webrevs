{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -840,0 +840,36 @@\n+#ifdef ASSERT\n+void C2_MacroAssembler::checked_cast_int(const TypeInt* type, Register dst) {\n+  Label fail;\n+  Label succeed;\n+  cmpl(dst, type->_lo);\n+  jccb(Assembler::less, fail);\n+  cmpl(dst, type->_hi);\n+  jccb(Assembler::lessEqual, succeed);\n+  bind(fail);\n+  stop(\"Invalid CastII\");\n+  bind(succeed);\n+}\n+\n+void C2_MacroAssembler::checked_cast_long(const TypeLong* type, Register dst, Register tmp) {\n+  Label fail;\n+  Label succeed;\n+  if (is_simm32(type->_lo)) {\n+    cmpq(dst, checked_cast<int>(type->_lo));\n+  } else {\n+    mov64(tmp, type->_lo);\n+    cmpq(dst, tmp);\n+  }\n+  jccb(Assembler::less, fail);\n+  if (is_simm32(type->_hi)) {\n+    cmpq(dst, checked_cast<int>(type->_hi));\n+  } else {\n+    mov64(tmp, type->_hi);\n+    cmpq(dst, tmp);\n+  }\n+  jccb(Assembler::lessEqual, succeed);\n+  bind(fail);\n+  stop(\"Invalid CastLL\");\n+  bind(succeed);\n+}\n+#endif \/\/ ASSERT\n+\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":37,"deletions":1,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,5 @@\n+#ifdef ASSERT\n+  void checked_cast_int(const TypeInt* type, Register dst);\n+  void checked_cast_long(const TypeLong* type, Register dst, Register tmp);\n+#endif\n+\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -6994,0 +6994,1 @@\n+  predicate(!VerifyConstraintCasts);\n@@ -7003,0 +7004,13 @@\n+instruct castII_checked(rRegI dst, rFlagsReg cr)\n+%{\n+  predicate(VerifyConstraintCasts);\n+  match(Set dst (CastII dst));\n+\n+  effect(KILL cr);\n+  format %{ \"# checked_cast_II $dst\" %}\n+  ins_encode %{\n+    DEBUG_ONLY(__ checked_cast_int(bottom_type()->is_int(), $dst$$Register));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -7005,0 +7019,1 @@\n+  predicate(!VerifyConstraintCasts);\n@@ -7014,0 +7029,13 @@\n+instruct castLL_checked(rRegL dst, rRegL tmp, rFlagsReg cr)\n+%{\n+  predicate(VerifyConstraintCasts);\n+  match(Set dst (CastLL dst));\n+\n+  effect(KILL cr, TEMP tmp);\n+  format %{ \"# checked_cast_LL $dst\" %}\n+  ins_encode %{\n+    DEBUG_ONLY(__ checked_cast_long(bottom_type()->is_long(), $dst$$Register, $tmp$$Register));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+class TypeInt;\n+class TypeLong;\n","filename":"src\/hotspot\/share\/opto\/c2_MacroAssembler.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -663,0 +663,4 @@\n+  develop(bool, VerifyConstraintCasts, false,                               \\\n+          \"perform runtime check to verify the value of a \"                 \\\n+          \"ConstraintCast lies inside its type\")                            \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -509,0 +509,6 @@\n+\n+  \/\/ Keep these casts for verification\n+  if (VerifyConstraintCasts) {\n+    return res;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/castnode.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}