{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-import java.net.URI;\n-import java.nio.file.Path;\n@@ -51,0 +49,1 @@\n+import com.sun.tools.javac.tree.DCTree.DCSnippet;\n@@ -136,1 +135,0 @@\n-\n@@ -143,2 +141,1 @@\n-                String t = null;\n-                boolean linkEncountered = false;\n+                String linkTarget = null;\n@@ -148,9 +145,23 @@\n-                    if (s instanceof Style.Name n) {\n-                        classes.add(n.name());\n-                    } else if (s instanceof Style.Link l) {\n-                        assert !linkEncountered; \/\/ TODO: do not assert; pick the first link report on subsequent\n-                        linkEncountered = true;\n-                        t = l.target();\n-                        e = getLinkedElement(element, t);\n-                        if (e == null) {\n-                            \/\/ TODO: diagnostic output\n+                    switch (s) {\n+                        case Style.Name n -> classes.add(n.name());\n+                        case Style.Link l -> {\n+                            if (linkTarget != null) {\n+                                var body = tag.getBody().toString();\n+                                var startPos = ((DCSnippet) tag).getStartPosition();\n+                                var endPos = startPos + Math.max(body.indexOf(linkTarget), body.indexOf(l.target()));\n+\n+                                messages.error(\n+                                        utils.getCommentHelper(element).getDocTreePath(tag),\n+                                        startPos,\n+                                        endPos,\n+                                        endPos,\n+                                        \"doclet.error.snippet.ambiguous.link\",\n+                                        linkTarget,\n+                                        l.target(),\n+                                        content.asCharSequence().toString());\n+                            }\n+                            linkTarget = l.target();\n+                            e = getLinkedElement(element, linkTarget);\n+                            if (e == null) {\n+                                \/\/ TODO: diagnostic output\n+                            }\n@@ -158,9 +169,1 @@\n-                    } else if (s instanceof Style.Markup) {\n-                        markupEncountered = true;\n-                        break;\n-                    } else {\n-                        \/\/ TODO: transform this if...else into an exhaustive\n-                        \/\/ switch over the sealed Style hierarchy when \"Pattern\n-                        \/\/ Matching for switch\" has been implemented (JEP 406\n-                        \/\/ and friends)\n-                        throw new AssertionError(styles);\n+                        case Style.Markup m -> markupEncountered = true;\n@@ -172,1 +175,1 @@\n-                } else if (linkEncountered) {\n+                } else if (linkTarget != null) {\n@@ -180,1 +183,1 @@\n-                                t,\n+                                linkTarget,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SnippetTaglet.java","additions":29,"deletions":26,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -435,0 +435,4 @@\n+\n+# 0: location\n+doclet.error.snippet.ambiguous.link=\\\n+  snippet link tags: {0} and {1} overlap in {2}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/resources\/doclets.properties","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,1 @@\n+import com.sun.source.doctree.SnippetTree;\n@@ -264,0 +265,1 @@\n+            case SNIPPET -> ((SnippetTree) t).getBody().getBody();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/JavadocLog.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug      8346128 8346659\n+ * @summary  Check that snippet generation is reproducible\n+ * @library  \/tools\/lib ..\/..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    toolbox.ToolBox javadoc.tester.*\n+ * @run main ReproducibleSnippetTest\n+ *\/\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+import java.nio.file.Path;\n+\n+public class ReproducibleSnippetTest extends JavadocTester {\n+    ToolBox tb = new ToolBox();\n+\n+    public static void main(String... args) throws Exception {\n+        var tester = new ReproducibleSnippetTest();\n+        tester.runTests();\n+    }\n+\n+    @Test\n+    public void test(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                package p;\n+                public interface One {\n+                    \/**\n+                     * {@code One obj1}\n+                     * {@snippet lang = java:\n+                     * \/\/ @link substring=\"ab\" target=\"One#ab\" :\n+                     * obj1.ab(a()); \/\/ @link substring=\"a\" target=\"#a\"\n+                     *} class comment\n+                     *\/\n+                    int a();\n+                    void ab(int i);\n+                }\n+                \"\"\");\n+        javadoc(\"-d\",\n+                \"out\",\n+                \"-sourcepath\",\n+                src.toString(),\n+                \"p\");\n+        checkExit(Exit.ERROR);\n+\n+        checkOutput(Output.OUT,\n+                true,\n+                \"error: snippet link tags:\",\n+                \"#a\",\n+                \"One#ab\",\n+                \"\"\"\n+                overlap in\\s\n+                     * \/\/ @link substring=\"ab\" target=\"One#ab\" :\n+                                                      ^\"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/ReproducibleSnippet\/ReproducibleSnippetTest.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/TestGlobalHtml\/TestGlobalHtml.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}