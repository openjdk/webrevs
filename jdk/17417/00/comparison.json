{"files":[{"patch":"@@ -867,1 +867,2 @@\n-                                                  path -> path.groupElement(name));\n+                                                  path -> path.groupElement(name),\n+                                                  \"\\\"\" + name + \"\\\"\");\n@@ -882,1 +883,2 @@\n-                    path -> path.groupElement(index));\n+                                                  path -> path.groupElement(index),\n+                                                  Long.toString(index));\n@@ -897,1 +899,2 @@\n-                                                  path -> path.sequenceElement(index));\n+                                                  path -> path.sequenceElement(index),\n+                                                  Long.toString(index));\n@@ -930,1 +933,2 @@\n-                                                  path -> path.sequenceElement(start, step));\n+                                                  path -> path.sequenceElement(start, step),\n+                                                  start + \" + N * \" + step + \", N >= 0\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -392,0 +392,1 @@\n+        final String additionalInfo;\n@@ -393,1 +394,8 @@\n-        public PathElementImpl(PathKind kind, UnaryOperator<LayoutPath> pathOp) {\n+        public PathElementImpl(PathKind kind,\n+                               UnaryOperator<LayoutPath> pathOp) {\n+            this(kind, pathOp, null);\n+        }\n+\n+        public PathElementImpl(PathKind kind,\n+                               UnaryOperator<LayoutPath> pathOp,\n+                               String additionalInfo) {\n@@ -396,0 +404,1 @@\n+            this.additionalInfo = additionalInfo;\n@@ -406,0 +415,8 @@\n+\n+        @Override\n+        public String toString() {\n+            return kind.description() +\n+                    (additionalInfo != null\n+                            ? \" \" + additionalInfo\n+                            : \"\");\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -314,0 +314,36 @@\n+    @Test\n+    public void testGroupElementIndexToString() {\n+        PathElement e = PathElement.groupElement(2);\n+        assertEquals(e.toString(), \"group element 2\");\n+    }\n+\n+    @Test\n+    public void testGroupElementNameToString() {\n+        PathElement e = PathElement.groupElement(\"x\");\n+        assertEquals(e.toString(), \"group element \\\"x\\\"\");\n+    }\n+\n+    @Test\n+    public void testSequenceElementToString() {\n+        PathElement e = PathElement.sequenceElement();\n+        assertEquals(e.toString(), \"unbound sequence element\");\n+    }\n+\n+    @Test\n+    public void testSequenceElementIndexToString() {\n+        PathElement e = PathElement.sequenceElement(2);\n+        assertEquals(e.toString(), \"bound sequence element 2\");\n+    }\n+\n+    @Test\n+    public void testSequenceElementRangeToString() {\n+        PathElement e = PathElement.sequenceElement(2, 4);\n+        assertEquals(e.toString(), \"sequence range 2 + N * 4, N >= 0\");\n+    }\n+\n+    @Test\n+    public void testDerefereceElementToString() {\n+        PathElement e = PathElement.dereferenceElement();\n+        assertEquals(e.toString(), \"dereference element\");\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"}]}