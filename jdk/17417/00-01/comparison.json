{"files":[{"patch":"@@ -868,1 +868,1 @@\n-                                                  \"\\\"\" + name + \"\\\"\");\n+                                                  name);\n@@ -884,1 +884,1 @@\n-                                                  Long.toString(index));\n+                                                  \"[\" + index + \"]\");\n@@ -900,1 +900,1 @@\n-                                                  Long.toString(index));\n+                                                  \"[\" + index + \"]\");\n@@ -934,1 +934,1 @@\n-                                                  start + \" + N * \" + step + \", N >= 0\");\n+                                        \"[\" + start + \":\" + step + \"]\");\n@@ -947,1 +947,2 @@\n-                                                  LayoutPath::sequenceElement);\n+                                                  LayoutPath::sequenceElement,\n+                                                  \"[]\");\n@@ -956,1 +957,2 @@\n-                    LayoutPath::derefElement);\n+                    LayoutPath::derefElement,\n+                    \"*\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -394,5 +394,0 @@\n-        public PathElementImpl(PathKind kind,\n-                               UnaryOperator<LayoutPath> pathOp) {\n-            this(kind, pathOp, null);\n-        }\n-\n@@ -401,1 +396,1 @@\n-                               String additionalInfo) {\n+                               String stringRepresentation) {\n@@ -404,1 +399,1 @@\n-            this.additionalInfo = additionalInfo;\n+            this.additionalInfo = stringRepresentation;\n@@ -418,4 +413,1 @@\n-            return kind.description() +\n-                    (additionalInfo != null\n-                            ? \" \" + additionalInfo\n-                            : \"\");\n+            return additionalInfo;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -317,1 +317,1 @@\n-        assertEquals(e.toString(), \"group element 2\");\n+        assertEquals(e.toString(), \"[2]\");\n@@ -323,1 +323,1 @@\n-        assertEquals(e.toString(), \"group element \\\"x\\\"\");\n+        assertEquals(e.toString(), \"x\");\n@@ -329,1 +329,1 @@\n-        assertEquals(e.toString(), \"unbound sequence element\");\n+        assertEquals(e.toString(), \"[]\");\n@@ -335,1 +335,1 @@\n-        assertEquals(e.toString(), \"bound sequence element 2\");\n+        assertEquals(e.toString(), \"[2]\");\n@@ -341,1 +341,1 @@\n-        assertEquals(e.toString(), \"sequence range 2 + N * 4, N >= 0\");\n+        assertEquals(e.toString(), \"[2:4]\");\n@@ -347,1 +347,1 @@\n-        assertEquals(e.toString(), \"dereference element\");\n+        assertEquals(e.toString(), \"*\");\n","filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}