{"files":[{"patch":"@@ -867,1 +867,2 @@\n-                                                  path -> path.groupElement(name));\n+                                                  path -> path.groupElement(name),\n+                                                  name);\n@@ -882,1 +883,2 @@\n-                    path -> path.groupElement(index));\n+                                                  path -> path.groupElement(index),\n+                                                  \"[\" + index + \"]\");\n@@ -897,1 +899,2 @@\n-                                                  path -> path.sequenceElement(index));\n+                                                  path -> path.sequenceElement(index),\n+                                                  \"[\" + index + \"]\");\n@@ -930,1 +933,2 @@\n-                                                  path -> path.sequenceElement(start, step));\n+                                                  path -> path.sequenceElement(start, step),\n+                                        \"[\" + start + \":\" + step + \"]\");\n@@ -943,1 +947,2 @@\n-                                                  LayoutPath::sequenceElement);\n+                                                  LayoutPath::sequenceElement,\n+                                                  \"[]\");\n@@ -952,1 +957,2 @@\n-                    LayoutPath::derefElement);\n+                    LayoutPath::derefElement,\n+                    \"*\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -392,0 +392,1 @@\n+        final String additionalInfo;\n@@ -393,1 +394,3 @@\n-        public PathElementImpl(PathKind kind, UnaryOperator<LayoutPath> pathOp) {\n+        public PathElementImpl(PathKind kind,\n+                               UnaryOperator<LayoutPath> pathOp,\n+                               String stringRepresentation) {\n@@ -396,0 +399,1 @@\n+            this.additionalInfo = stringRepresentation;\n@@ -406,0 +410,5 @@\n+\n+        @Override\n+        public String toString() {\n+            return additionalInfo;\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -314,0 +314,36 @@\n+    @Test\n+    public void testGroupElementIndexToString() {\n+        PathElement e = PathElement.groupElement(2);\n+        assertEquals(e.toString(), \"[2]\");\n+    }\n+\n+    @Test\n+    public void testGroupElementNameToString() {\n+        PathElement e = PathElement.groupElement(\"x\");\n+        assertEquals(e.toString(), \"x\");\n+    }\n+\n+    @Test\n+    public void testSequenceElementToString() {\n+        PathElement e = PathElement.sequenceElement();\n+        assertEquals(e.toString(), \"[]\");\n+    }\n+\n+    @Test\n+    public void testSequenceElementIndexToString() {\n+        PathElement e = PathElement.sequenceElement(2);\n+        assertEquals(e.toString(), \"[2]\");\n+    }\n+\n+    @Test\n+    public void testSequenceElementRangeToString() {\n+        PathElement e = PathElement.sequenceElement(2, 4);\n+        assertEquals(e.toString(), \"[2:4]\");\n+    }\n+\n+    @Test\n+    public void testDerefereceElementToString() {\n+        PathElement e = PathElement.dereferenceElement();\n+        assertEquals(e.toString(), \"*\");\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"modified"}]}