{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -492,1 +492,1 @@\n-          assert(def != 0, \"input edge required\");\n+          assert(def != nullptr, \"input edge required\");\n","filename":"src\/hotspot\/share\/opto\/buildOopMap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -988,1 +988,1 @@\n-  if (_name != nullptr && strstr(_name, \"arraycopy\") != 0) {\n+  if (_name != nullptr && strstr(_name, \"arraycopy\") != nullptr) {\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-  else if( _def == 0 ) tty->print(\"Dead \");\n+  else if( _def == nullptr ) tty->print(\"Dead \");\n@@ -206,1 +206,1 @@\n-  , _live(0)\n+  , _live(nullptr)\n","filename":"src\/hotspot\/share\/opto\/chaitin.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1069,1 +1069,1 @@\n-    } else if (has_method() && method()->name() != 0 &&\n+    } else if (has_method() && method()->name() != nullptr &&\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-  _blocks.map(number_of_blocks(), 0);\n+  _blocks.map(number_of_blocks(), nullptr);\n@@ -289,2 +289,2 @@\n-  assert( _ancestor != 0, \"\" );\n-  if( _ancestor->_ancestor != 0 ) {\n+  assert( _ancestor != nullptr, \"\" );\n+  if( _ancestor->_ancestor != nullptr ) {\n@@ -578,2 +578,2 @@\n-  assert( _ancestor != 0, \"\" );\n-  if( _ancestor->_ancestor != 0 ) {\n+  assert( _ancestor != nullptr, \"\" );\n+  if( _ancestor->_ancestor != nullptr ) {\n","filename":"src\/hotspot\/share\/opto\/domgraph.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-  _pending_cvstates = new (C->node_arena()) GrowableArray<Node*>(C->node_arena(), init_size, 0, 0);\n+  _pending_cvstates = new (C->node_arena()) GrowableArray<Node*>(C->node_arena(), init_size, 0, nullptr);\n","filename":"src\/hotspot\/share\/opto\/idealKit.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -625,1 +625,1 @@\n-      lrg._def = 0;\n+      lrg._def = nullptr;\n","filename":"src\/hotspot\/share\/opto\/ifg.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,2 @@\n-  _live(0),\n-  _livein(0),\n+  _live(nullptr),\n+  _livein(nullptr),\n","filename":"src\/hotspot\/share\/opto\/live.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -6341,1 +6341,1 @@\n-      _loop_or_ctrl.map(n->_idx,0);    \/\/ No block setting, it's globally dead\n+      _loop_or_ctrl.map(n->_idx,nullptr); \/\/ No block setting, it's globally dead\n@@ -6359,1 +6359,1 @@\n-    _loop_or_ctrl.map(n->_idx, 0);     \/\/ This node is useless\n+    _loop_or_ctrl.map(n->_idx, nullptr); \/\/ This node is useless\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -1815,1 +1815,1 @@\n-    mach->add_req(0);             \/\/ Set initial control to none\n+    mach->add_req(nullptr);     \/\/ Set initial control to none\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2865,1 +2865,1 @@\n-    if (_int_offset != 0) {\n+    if (_int_offset != nullptr) {\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1104,1 +1104,1 @@\n-const Node *Node::is_block_proj() const { return 0; }\n+const Node *Node::is_block_proj() const { return nullptr; }\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2903,1 +2903,1 @@\n-      assert(def != 0, \"input edge required\");\n+      assert(def != nullptr, \"input edge required\");\n@@ -2926,1 +2926,1 @@\n-    assert( from->req() == 1 && (from->len() == 1 || from->in(1)==0), \"no precedence edges on projections\" );\n+    assert( from->req() == 1 && (from->len() == 1 || from->in(1) == nullptr), \"no precedence edges on projections\" );\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -783,1 +783,1 @@\n-    if (!no_dead_loop) n->dump_bfs(100,0,\"#\");\n+    if (!no_dead_loop) n->dump_bfs(100,nullptr,\"#\");\n@@ -1138,1 +1138,1 @@\n-  n->dump_bfs(1, 0, \"\");\n+  n->dump_bfs(1, nullptr, \"\");\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -312,1 +312,1 @@\n-    return 0;\n+    return nullptr;\n@@ -344,1 +344,1 @@\n-        if (!in_spill) { return 0; } \/\/ Bailed out\n+        if (!in_spill) { return nullptr; } \/\/ Bailed out\n@@ -360,1 +360,1 @@\n-          return 0; \/\/ Bailed out\n+          return nullptr; \/\/ Bailed out\n@@ -369,1 +369,1 @@\n-    return 0;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/opto\/reg_split.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-               _node_regs(0),\n+               _node_regs(nullptr),\n","filename":"src\/hotspot\/share\/opto\/regalloc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -557,1 +557,1 @@\n-                                           false, 0, oopDesc::mark_offset_in_bytes());\n+                                           false, nullptr, oopDesc::mark_offset_in_bytes());\n@@ -559,1 +559,1 @@\n-                                           false, 0, oopDesc::klass_offset_in_bytes());\n+                                           false, nullptr, oopDesc::klass_offset_in_bytes());\n@@ -570,1 +570,1 @@\n-  mreg2type[Op_Set ] = 0;\n+  mreg2type[Op_Set ] = nullptr;\n@@ -3132,1 +3132,1 @@\n-  return (TypeRawPtr*)(new TypeRawPtr(ptr,0))->hashcons();\n+  return (TypeRawPtr*)(new TypeRawPtr(ptr,nullptr))->hashcons();\n@@ -3144,1 +3144,1 @@\n-  assert( _bits==0, \"Why cast a constant address?\");\n+  assert( _bits == nullptr, \"Why cast a constant address?\");\n@@ -3528,1 +3528,1 @@\n-      (offset > 0) && xk && (k != 0) && k->is_instance_klass()) {\n+      (offset > 0) && xk && (k != nullptr) && k->is_instance_klass()) {\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}