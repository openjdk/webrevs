{"files":[{"patch":"@@ -38,0 +38,3 @@\n+import com.sun.net.httpserver.HttpsConfigurator;\n+import com.sun.net.httpserver.HttpsServer;\n+import jdk.test.lib.net.SimpleSSLContext;\n@@ -40,0 +43,1 @@\n+import javax.net.ssl.SSLContext;\n@@ -68,1 +72,13 @@\n-        HttpServer server = HttpServer.create (addr, 0);\n+\n+        SSLContext sslContext = new SimpleSSLContext().get();\n+\n+        HttpServer httpServer = HttpServer.create (addr, 0);\n+        testHttpServer(\"http\",httpServer,sslContext);\n+\n+        HttpsServer httpsServer = HttpsServer.create (addr, 0);\n+        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n+\n+        testHttpServer(\"https\",httpsServer,sslContext);\n+    }\n+\n+    private static void testHttpServer(String scheme,HttpServer server,SSLContext sslContext) throws Exception {\n@@ -74,13 +90,19 @@\n-\n-        HttpClient client = HttpClient.newBuilder().build();\n-\n-        long start = System.currentTimeMillis();\n-        for(int i=0;i<1000;i++) {\n-            var uri = URIBuilder.newBuilder().scheme(\"http\").loopback().port(server.getAddress().getPort()).path(\"\/test\").build();\n-            var response = client.send(HttpRequest.newBuilder(uri).build(), HttpResponse.BodyHandlers.ofString());\n-            if(!response.body().equals(\"hello\")) throw new IllegalStateException(\"incorrect body\");\n-        }\n-        for(int i=0;i<1000;i++) {\n-            var uri = URIBuilder.newBuilder().scheme(\"http\").loopback().port(server.getAddress().getPort()).path(\"\/chunked\").build();\n-            var response = client.send(HttpRequest.newBuilder(uri).build(), HttpResponse.BodyHandlers.ofString());\n-            if(!response.body().equals(\"hello\")) throw new IllegalStateException(\"incorrect body\");\n+        try {\n+            HttpClient client = HttpClient.newBuilder().sslContext(sslContext).build();\n+            long start = System.currentTimeMillis();\n+            for (int i = 0; i < 1000; i++) {\n+                var uri = URIBuilder.newBuilder().scheme(scheme).loopback().port(server.getAddress().getPort()).path(\"\/test\").build();\n+                var response = client.send(HttpRequest.newBuilder(uri).build(), HttpResponse.BodyHandlers.ofString());\n+                if (!response.body().equals(\"hello\"))\n+                    throw new IllegalStateException(\"incorrect body \" + response.body());\n+            }\n+            for (int i = 0; i < 1000; i++) {\n+                var uri = URIBuilder.newBuilder().scheme(scheme).loopback().port(server.getAddress().getPort()).path(\"\/chunked\").build();\n+                var response = client.send(HttpRequest.newBuilder(uri).build(), HttpResponse.BodyHandlers.ofString());\n+                if (!response.body().equals(\"hello\"))\n+                    throw new IllegalStateException(\"incorrect body \" + response.body());\n+            }\n+            long time = System.currentTimeMillis() - start;\n+            System.out.println(\"time \" + time);\n+        } finally {\n+            server.stop(0);\n@@ -88,3 +110,0 @@\n-        long time = System.currentTimeMillis()-start;\n-        System.out.println(\"time \"+time);\n-        server.stop(0);\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/TcpNoDelayNotRequired.java","additions":36,"deletions":17,"binary":false,"changes":53,"status":"modified"}]}