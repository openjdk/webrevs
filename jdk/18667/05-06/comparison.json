{"files":[{"patch":"@@ -142,1 +142,3 @@\n-            writeChunk();\n+            if(count>0) {\n+                writeChunk();\n+            }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ChunkedOutputStream.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,2 @@\n- * @run main\/othervm\/timeout=5 -Dsun.net.httpserver.nodelay=false B6968351\n+ * @run main B6968351\n+ * @run main\/othervm -Dsun.net.httpserver.nodelay=false -Djdk.httpclient.HttpClient.log=all -Djava.net.preferIPv6Addresses=true -Djavax.net.debug=all B6968351\n@@ -33,0 +34,1 @@\n+import jdk.test.lib.net.URIBuilder;\n@@ -44,1 +46,0 @@\n-import jdk.test.lib.net.URIBuilder;\n@@ -63,0 +64,1 @@\n+        HttpContext ctx2 = server.createContext (\"\/chunked\", handler);\n@@ -71,1 +73,6 @@\n-            var uri = URIBuilder.newBuilder().scheme(\"http\").loopback().port(server.getAddress().getPort()).path(\"\/test\").build();\n+            var uri = URIBuilder.newBuilder().scheme(\"http\").port(server.getAddress().getPort()).path(\"\/test\").build();\n+            var response = client.send(HttpRequest.newBuilder(uri).build(), HttpResponse.BodyHandlers.ofString());\n+            if(!response.body().equals(\"hello\")) throw new IllegalStateException(\"incorrect body\");\n+        }\n+        for(int i=0;i<1000;i++) {\n+            var uri = URIBuilder.newBuilder().scheme(\"http\").port(server.getAddress().getPort()).path(\"\/chunked\").build();\n@@ -77,0 +84,1 @@\n+        if(time>5000) throw new IllegalStateException(\"took too long\");\n@@ -95,0 +103,15 @@\n+    static class ChunkedHandler implements HttpHandler {\n+        public void handle (HttpExchange t)\n+                throws IOException\n+        {\n+            InputStream is = t.getRequestBody();\n+            Headers map = t.getRequestHeaders();\n+            Headers rmap = t.getResponseHeaders();\n+            while (is.read () != -1) ;\n+            is.close();\n+            rmap.add(\"content-type\",\"text\/plain\");\n+            t.sendResponseHeaders(200,0);\n+            t.getResponseBody().write(\"hello\".getBytes(StandardCharsets.ISO_8859_1));\n+            t.getRequestBody().close();\n+        }\n+    }\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/bugs\/B6968351.java","additions":26,"deletions":3,"binary":false,"changes":29,"status":"modified"}]}