{"files":[{"patch":"@@ -143,5 +143,0 @@\n-bool Space::obj_is_alive(const HeapWord* p) const {\n-  assert (block_is_obj(p), \"The address should point to an object\");\n-  return true;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/space.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -144,6 +144,0 @@\n-  \/\/ The non-const version may have benevolent side effects on the data\n-  \/\/ structure supporting these calls, possibly speeding up future calls.\n-  \/\/ The default implementation, however, is simply to call the const\n-  \/\/ version.\n-  HeapWord* block_start(const void* p);\n-\n@@ -159,4 +153,0 @@\n-  \/\/ Requires \"addr\" to be the start of a block, and returns \"TRUE\" iff\n-  \/\/ the block is an object and the object is alive.\n-  bool obj_is_alive(const HeapWord* addr) const;\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/space.hpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -37,4 +37,0 @@\n-inline HeapWord* Space::block_start(const void* p) {\n-  return block_start_const(p);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/space.inline.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}