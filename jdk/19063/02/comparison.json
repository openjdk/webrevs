{"files":[{"patch":"@@ -32,0 +32,1 @@\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -34,1 +35,0 @@\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -122,1 +122,1 @@\n-    G1HRPrinter::reuse(retained_region);\n+    G1HeapRegionPrinter::reuse(retained_region);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -55,1 +56,0 @@\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -329,1 +329,1 @@\n-    G1HRPrinter::alloc(hr);\n+    G1HeapRegionPrinter::alloc(hr);\n@@ -528,1 +528,1 @@\n-    G1HRPrinter::alloc(r);\n+    G1HeapRegionPrinter::alloc(r);\n@@ -717,1 +717,1 @@\n-    G1HRPrinter::post_compaction(hr);\n+    G1HeapRegionPrinter::post_compaction(hr);\n@@ -727,1 +727,1 @@\n-  if (G1HRPrinter::is_active()) {\n+  if (G1HeapRegionPrinter::is_active()) {\n@@ -2859,1 +2859,1 @@\n-      G1HRPrinter::alloc(new_alloc_region);\n+      G1HeapRegionPrinter::alloc(new_alloc_region);\n@@ -2875,1 +2875,1 @@\n-  G1HRPrinter::retire(alloc_region);\n+  G1HeapRegionPrinter::retire(alloc_region);\n@@ -2922,1 +2922,1 @@\n-    G1HRPrinter::alloc(new_alloc_region);\n+    G1HeapRegionPrinter::alloc(new_alloc_region);\n@@ -2943,1 +2943,1 @@\n-  G1HRPrinter::retire(alloc_region);\n+  G1HeapRegionPrinter::retire(alloc_region);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -43,1 +44,0 @@\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -1321,1 +1321,1 @@\n-      G1HRPrinter::mark_reclaim(&_cleanup_list);\n+      G1HeapRegionPrinter::mark_reclaim(&_cleanup_list);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,38 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-\n-#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n-\n-void G1HRPrinter::mark_reclaim(FreeRegionList* cleanup_list) {\n-  if (is_active()) {\n-    FreeRegionListIterator iter(cleanup_list);\n-    while (iter.more_available()) {\n-      HeapRegion* hr = iter.get_next();\n-      mark_reclaim(hr);\n-    }\n-  }\n-}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HRPrinter.cpp","additions":0,"deletions":38,"binary":false,"changes":38,"status":"deleted"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -33,1 +34,0 @@\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -174,1 +174,1 @@\n-    G1HRPrinter::commit(hr);\n+    G1HeapRegionPrinter::commit(hr);\n@@ -197,1 +197,1 @@\n-  if (G1HRPrinter::is_active()) {\n+  if (G1HeapRegionPrinter::is_active()) {\n@@ -202,1 +202,1 @@\n-      G1HRPrinter::uncommit(hr);\n+      G1HeapRegionPrinter::uncommit(hr);\n@@ -226,1 +226,1 @@\n-    G1HRPrinter::active(hr);\n+    G1HeapRegionPrinter::active(hr);\n@@ -253,1 +253,1 @@\n-    G1HRPrinter::inactive(hr);\n+    G1HeapRegionPrinter::inactive(hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionManager.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n+#include \"gc\/g1\/g1HeapRegionSet.hpp\"\n+\n+void G1HeapRegionPrinter::mark_reclaim(FreeRegionList* cleanup_list) {\n+  if (is_active()) {\n+    FreeRegionListIterator iter(cleanup_list);\n+    while (iter.more_available()) {\n+      HeapRegion* hr = iter.get_next();\n+      mark_reclaim(hr);\n+    }\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionPrinter.cpp","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_GC_G1_G1HRPRINTER_HPP\n-#define SHARE_GC_G1_G1HRPRINTER_HPP\n+#ifndef SHARE_GC_G1_G1HEAPREGIONPRINTER_HPP\n+#define SHARE_GC_G1_G1HEAPREGIONPRINTER_HPP\n@@ -34,1 +34,1 @@\n-class G1HRPrinter : public AllStatic {\n+class G1HeapRegionPrinter : public AllStatic {\n@@ -81,1 +81,1 @@\n-#endif \/\/ SHARE_GC_G1_G1HRPRINTER_HPP\n+#endif \/\/ SHARE_GC_G1_G1HEAPREGIONPRINTER_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionPrinter.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/hotspot\/share\/gc\/g1\/g1HRPrinter.hpp","status":"renamed"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -646,1 +646,1 @@\n-      G1HRPrinter::evac_failure(r);\n+      G1HeapRegionPrinter::evac_failure(r);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -265,1 +265,1 @@\n-    G1HRPrinter::cset(r);\n+    G1HeapRegionPrinter::cset(r);\n@@ -281,1 +281,1 @@\n-  if (G1HRPrinter::is_active()) {\n+  if (G1HeapRegionPrinter::is_active()) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"gc\/g1\/g1HeapRegionPrinter.hpp\"\n@@ -39,1 +40,0 @@\n-#include \"gc\/g1\/g1HRPrinter.hpp\"\n@@ -416,1 +416,1 @@\n-      G1HRPrinter::eager_reclaim(r);\n+      G1HeapRegionPrinter::eager_reclaim(r);\n@@ -764,1 +764,1 @@\n-    G1HRPrinter::evac_reclaim(r);\n+    G1HeapRegionPrinter::evac_reclaim(r);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}