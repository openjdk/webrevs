{"files":[{"patch":"@@ -218,1 +218,1 @@\n-    fprintf(stderr, \"First frame method_id is nullptr\\n\");\n+    fprintf(stderr, \"First frame method_id is null\\n\");\n@@ -229,1 +229,1 @@\n-    fprintf(stderr, \"Name is nullptr\\n\");\n+    fprintf(stderr, \"Name is null\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/AsyncGetCallTrace\/libAsyncGetCallTraceTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -916,1 +916,1 @@\n-    env->FatalError(\"Error in get_native_frames: malloc returned nullptr\\n\");\n+    env->FatalError(\"Error in get_native_frames: malloc returned null\\n\");\n@@ -1139,1 +1139,1 @@\n-      jni_env->FatalError(\"allocate_object returned nullptr\\n\");\n+      jni_env->FatalError(\"allocate_object returned null\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/HeapMonitor\/libHeapMonitorTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    jni->FatalError(\"is_hidden_mid: Error: FindClass returned nullptr for java\/lang\/Class\\n\");\n+    jni->FatalError(\"is_hidden_mid: Error: FindClass returned null for java\/lang\/Class\\n\");\n@@ -107,1 +107,1 @@\n-    LOG0(\"check_class_signature: FAIL: unexpected nullptr generic signature for hidden class\\n\");\n+    LOG0(\"check_class_signature: FAIL: unexpected null generic signature for hidden class\\n\");\n@@ -267,1 +267,1 @@\n-      LOG1(\"%s event: FAIL: GetClassSignature returned nullptr generic signature for hidden class\\n\", event_name);\n+      LOG1(\"%s event: FAIL: GetClassSignature returned null generic signature for hidden class\\n\", event_name);\n@@ -347,1 +347,1 @@\n-    jni->FatalError(\"check_hidden_class: Error: JNI GetStringChars returned nullptr for jstring\\n\");\n+    jni->FatalError(\"check_hidden_class: Error: JNI GetStringChars returned null for jstring\\n\");\n@@ -361,1 +361,1 @@\n-    jni->FatalError(\"check_hidden_class_array: Error: JNI GetStringChars returned nullptr for jstring\\n\");\n+    jni->FatalError(\"check_hidden_class_array: Error: JNI GetStringChars returned null for jstring\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/HiddenClass\/libHiddenClassSigTest.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-        _log(\"SavedClassBytes: nullptr\\n\");\n+        _log(\"SavedClassBytes: null\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/MissedStackMapFrames\/libMissedStackMapFrames.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-            _log(\"%s: savedClassBytes is nullptr\\n\", mode);\n+            _log(\"%s: savedClassBytes is null\\n\", mode);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefineRetransform\/libRedefineRetransform.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-  const char* thr_name = thr_info.name == nullptr ? \"nullptr\" : thr_info.name;\n+  const char* thr_name = thr_info.name == nullptr ? \"null\" : thr_info.name;\n@@ -153,1 +153,1 @@\n-    LOG(\"TEST FAILED: Breakpoint event with unexpected class signature: %s\\n\\n\", (clsSig == nullptr) ? \"nullptr\" : clsSig);\n+    LOG(\"TEST FAILED: Breakpoint event with unexpected class signature: %s\\n\\n\", (clsSig == nullptr) ? \"null\" : clsSig);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/Breakpoint\/breakpoint01\/libbreakpoint01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    jni->FatalError(\"expected_thread is nullptr.\");\n+    jni->FatalError(\"expected_thread is null.\");\n@@ -61,1 +61,1 @@\n-    jni->FatalError(\"expected_object is nullptr.\");\n+    jni->FatalError(\"expected_object is null.\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorContendedEnter\/mcontenter01\/libmcontenter01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    jni->FatalError(\"expected_thread is nullptr.\");\n+    jni->FatalError(\"expected_thread is null.\");\n@@ -59,1 +59,1 @@\n-    jni->FatalError(\"expected_object is nullptr.\");\n+    jni->FatalError(\"expected_object is null.\");\n@@ -77,1 +77,1 @@\n-    jni->FatalError(\"expected_thread is nullptr.\");\n+    jni->FatalError(\"expected_thread is null.\");\n@@ -81,1 +81,1 @@\n-    jni->FatalError(\"expected_object is nullptr.\");\n+    jni->FatalError(\"expected_object is null.\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorContendedEntered\/mcontentered01\/libmcontentered01.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    jni->FatalError(\"expected_thread is nullptr.\");\n+    jni->FatalError(\"expected_thread is null.\");\n@@ -55,1 +55,1 @@\n-    jni->FatalError(\"expected_object is nullptr.\");\n+    jni->FatalError(\"expected_object is null.\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorWait\/monitorwait01\/libmonitorwait01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    jni->FatalError(\"expected_thread is nullptr.\");\n+    jni->FatalError(\"expected_thread is null.\");\n@@ -56,1 +56,1 @@\n-    jni->FatalError(\"expected_object is nullptr.\");\n+    jni->FatalError(\"expected_object is null.\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorWaited\/monitorwaited01\/libmonitorwaited01.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-    LOG(\"Thread %s: incorrect name in nullptr\\n\", expected_info.name);\n+    LOG(\"Thread %s: incorrect name in null\\n\", expected_info.name);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadInfo\/thrinfo01\/libthrinfo01.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-    LOG(\"Agent_OnLoad: Error: GetEnv returned error or nullptr\\n\");\n+    LOG(\"Agent_OnLoad: Error: GetEnv returned error or null\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat05\/libthrstat05.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -171,2 +171,2 @@\n-    LOG(\"JVMTI GetLocalObject with nullptr value_ptr returned error: %d\\n\", err);\n-    fatal(jni, \"JVMTI GetLocalObject with nullptr value_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetLocalObject with null value_ptr returned error: %d\\n\", err);\n+    fatal(jni, \"JVMTI GetLocalObject with null value_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/GetSetLocalTest\/libGetSetLocalTest.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -350,1 +350,1 @@\n-  if (strstr(mname, \"brkpt\") != nullptr) { \/\/ event IS in the \"brkpt\" method\n+  if (strstr(mname, \"brkpt\") != null) { \/\/ event IS in the \"brkpt\" method\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/MethodExitTest\/libMethodExitTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -334,1 +334,1 @@\n-  LOG(\"Testing JMTI functions accepting nullptr jthread as current thread\\n\");\n+  LOG(\"Testing JMTI functions accepting null jthread as current thread\\n\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/NullAsCurrentThreadTest\/libNullAsCurrentThreadTest.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-  check_jvmti_status(jni, err, \"event handler: error in JVMTI GetVirtualThread with nullptr thread (current)\");\n+  check_jvmti_status(jni, err, \"event handler: error in JVMTI GetVirtualThread with null thread (current)\");\n@@ -130,1 +130,1 @@\n-    fatal(jni, \"event handler: JVMTI GetVirtualThread with nullptr thread (current) failed to return non-nullptr vthread\");\n+    fatal(jni, \"event handler: JVMTI GetVirtualThread with nullptr thread (current) failed to return non-null vthread\");\n@@ -132,1 +132,1 @@\n-  LOG(\"JVMTI GetVirtualThread with nullptr thread (current) returned non-nullptr vthread as expected\\n\");\n+  LOG(\"JVMTI GetVirtualThread with nullptr thread (current) returned non-null vthread as expected\\n\");\n@@ -145,1 +145,1 @@\n-    fatal(jni, \"event handler: JVMTI GetVirtualThread with good thread failed to return non-nullptr vthread\");\n+    fatal(jni, \"event handler: JVMTI GetVirtualThread with good thread failed to return non-null vthread\");\n@@ -147,1 +147,1 @@\n-  LOG(\"JVMTI GetVirtualThread with good thread returned non-nullptr vthread as expected\\n\");\n+  LOG(\"JVMTI GetVirtualThread with good thread returned non-null vthread as expected\\n\");\n@@ -172,1 +172,1 @@\n-    fatal(jni, \"event handler: JVMTI GetCarrierThread with good vthread failed to return non-nullptr carrier thread\");\n+    fatal(jni, \"event handler: JVMTI GetCarrierThread with good vthread failed to return non-null carrier thread\");\n@@ -174,1 +174,1 @@\n-  LOG(\"JVMTI GetCarrierThread with good vthread returned non-nullptr carrier thread as expected\\n\");\n+  LOG(\"JVMTI GetCarrierThread with good vthread returned non-null carrier thread as expected\\n\");\n@@ -234,2 +234,2 @@\n-    LOG(\"JVMTI GetFrameCount with nullptr count_ptr returned error: %d\\n\", err);\n-    fatal(jni, \"event handler: JVMTI GetFrameCount with nullptr count_ptr pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetFrameCount with null count_ptr returned error: %d\\n\", err);\n+    fatal(jni, \"event handler: JVMTI GetFrameCount with null count_ptr pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -266,2 +266,2 @@\n-    LOG(\"JVMTI GetFrameLocation with nullptr method_ptr returned error: %d\\n\", err);\n-    fatal(jni, \"event handler: JVMTI GetFrameLocation with nullptr method_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetFrameLocation with null method_ptr returned error: %d\\n\", err);\n+    fatal(jni, \"event handler: JVMTI GetFrameLocation with null method_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -273,2 +273,2 @@\n-    LOG(\"JVMTI GetFrameCount with nullptr location_ptr returned error: %d\\n\", err);\n-    fatal(jni, \"event handler: JVMTI GetFrameLocation with nullptr location_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetFrameCount with null location_ptr returned error: %d\\n\", err);\n+    fatal(jni, \"event handler: JVMTI GetFrameLocation with null location_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -334,2 +334,2 @@\n-    LOG(\"JVMTI GetStackTrace with nullptr frame_buffer pointer returned error: %d\\n\", err);\n-    fatal(jni, \"event handler: JVMTI GetStackTrace witt nullptr frame_buffer pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetStackTrace with null frame_buffer pointer returned error: %d\\n\", err);\n+    fatal(jni, \"event handler: JVMTI GetStackTrace witt null frame_buffer pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -341,2 +341,2 @@\n-    LOG(\"JVMTI GetStackTrace with nullptr count_ptr pointer returned error: %d\\n\", err);\n-    fatal(jni, \"event handler: JVMTI GetStackTrace witt nullptr count_ptr pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetStackTrace with null count_ptr pointer returned error: %d\\n\", err);\n+    fatal(jni, \"event handler: JVMTI GetStackTrace witt null count_ptr pointer failed to return JVMTI_ERROR_NULL_POINTER\");\n@@ -429,2 +429,2 @@\n-    LOG(\"JVMTI GetLocalObject with nullptr method_ptr returned error: %d\\n\", err);\n-    fatal(jni, \"JVMTI GetLocalObject with nullptr method_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n+    LOG(\"JVMTI GetLocalObject with null method_ptr returned error: %d\\n\", err);\n+    fatal(jni, \"JVMTI GetLocalObject with null method_ptr failed to return JVMTI_ERROR_NULL_POINTER\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadTest\/libVThreadTest.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    printf(\"ERROR: DefineClass call returned nullptr by some reason. Classloading failed.\\n\");\n+    printf(\"ERROR: DefineClass call returned null by some reason. Classloading failed.\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/g1\/unloading\/libdefine.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-        NSK_COMPLAIN1(\"First parameter 'vm' in JVM_OnLoad() is nullptr: 0x%p\\n\", (void*)jvm);\n+        NSK_COMPLAIN1(\"First parameter 'vm' in JVM_OnLoad() is null: 0x%p\\n\", (void*)jvm);\n@@ -76,1 +76,1 @@\n-        NSK_COMPLAIN1(\"Second parameter 'options' in JVM_OnLoad() is nullptr: 0x%p\\n\", (void*)options);\n+        NSK_COMPLAIN1(\"Second parameter 'options' in JVM_OnLoad() is null: 0x%p\\n\", (void*)options);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Agent_OnLoad\/agentonload001\/agentonload001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        printf(\"# ERROR: Second parameter 'options' in JVM_OnLoad() is nullptr: 0x%p\\n\",\n+        printf(\"# ERROR: Second parameter 'options' in JVM_OnLoad() is null: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Agent_OnLoad\/agentonload002\/agentonload002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        printf(\"# ERROR: Second parameter 'options' in JVM_OnLoad() is nullptr: 0x%p\\n\",\n+        printf(\"# ERROR: Second parameter 'options' in JVM_OnLoad() is null: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/Agent_OnLoad\/agentonload003\/agentonload003.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-        NSK_DISPLAY1(\"%s: ClassFileLoadHook event received for class with nullptr name\\n\", agentName);\n+        NSK_DISPLAY1(\"%s: ClassFileLoadHook event received for class with null name\\n\", agentName);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach002\/attach002Agent00.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        NSK_COMPLAIN2(\"Unexpected nullptr pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        NSK_COMPLAIN2(\"Unexpected null pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -270,1 +270,1 @@\n-            NSK_COMPLAIN1(\"Unexpected not nullptr class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"Unexpected not null class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk002\/classfloadhk002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        NSK_COMPLAIN2(\"Unexpected nullptr pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        NSK_COMPLAIN2(\"Unexpected null pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -317,1 +317,1 @@\n-            NSK_COMPLAIN1(\"Unexpected not nullptr class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"Unexpected not null class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -324,1 +324,1 @@\n-            NSK_COMPLAIN1(\"Unexpected nullptr classloader in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"Unexpected null classloader in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk003\/classfloadhk003.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-            NSK_COMPLAIN1(\"nullptr new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"null new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -218,1 +218,1 @@\n-            NSK_COMPLAIN1(\"nullptr new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"null new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk004\/classfloadhk004.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        NSK_COMPLAIN2(\"Unexpected nullptr pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        NSK_COMPLAIN2(\"Unexpected null pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -273,1 +273,1 @@\n-            NSK_COMPLAIN1(\"nullptr new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"null new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -280,1 +280,1 @@\n-            NSK_COMPLAIN1(\"nullptr new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"null new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk005\/classfloadhk005.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-        NSK_COMPLAIN2(\"Unexpected nullptr pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        NSK_COMPLAIN2(\"Unexpected null pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -339,1 +339,1 @@\n-            NSK_COMPLAIN1(\"Unexpected nullptr class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"Unexpected null class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk006\/classfloadhk006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-        NSK_COMPLAIN2(\"Unexpected nullptr pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+        NSK_COMPLAIN2(\"Unexpected null pointer to %s bytecode in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -352,1 +352,1 @@\n-            NSK_COMPLAIN1(\"Unexpected nullptr classloader in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"Unexpected null classloader in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -365,1 +365,1 @@\n-            NSK_COMPLAIN1(\"Unexpected nullptr class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"Unexpected null class_being_redefined in CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk007\/classfloadhk007.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -294,1 +294,1 @@\n-            NSK_COMPLAIN1(\"nullptr new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"null new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -301,1 +301,1 @@\n-            NSK_COMPLAIN1(\"nullptr new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"null new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk008\/classfloadhk008.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -294,1 +294,1 @@\n-            NSK_COMPLAIN1(\"nullptr new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"null new_class_data_len pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n@@ -301,1 +301,1 @@\n-            NSK_COMPLAIN1(\"nullptr new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n+            NSK_COMPLAIN1(\"null new_class_data pointer passed to CLASS_FILE_LOAD_HOOK: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/ClassFileLoadHook\/classfloadhk009\/classfloadhk009.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-        printf(\"(%d:%s) class loader is not nullptr: 0x%p\\n\",\n+        printf(\"(%d:%s) class loader is not null: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassLoader\/getclsldr002\/getclsldr002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    { \"getclsig006\", \"Lnsk\/jvmti\/GetClassSignature\/getclsig006;\", \"nullptr\" },\n+    { \"getclsig006\", \"Lnsk\/jvmti\/GetClassSignature\/getclsig006;\", \"null\" },\n@@ -70,1 +70,1 @@\n-                strcmp(class_sig[idx][2], (gen_sign == nullptr) ? \"nullptr\" : gen_sign) != 0) {\n+                strcmp(class_sig[idx][2], (gen_sign == nullptr) ? \"null\" : gen_sign) != 0) {\n@@ -78,1 +78,1 @@\n-                sign, (gen_sign == nullptr) ? \"nullptr\" : gen_sign,\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign,\n@@ -84,1 +84,1 @@\n-                sign, (gen_sign == nullptr) ? \"nullptr\" : gen_sign);\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetClassSignature\/getclsig006\/getclsig006.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        NSK_COMPLAIN2(\"GetEnvironmentLocalStorage() returned NOT nullptr storage in %s:\\n\"\n+        NSK_COMPLAIN2(\"GetEnvironmentLocalStorage() returned NOT null storage in %s:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetEnvironmentLocalStorage\/getenvstor001\/getenvstor001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-            NSK_COMPLAIN3(\"In %s phase GetExtensionEvents() returned nullptr pointer:\\n\"\n+            NSK_COMPLAIN3(\"In %s phase GetExtensionEvents() returned null pointer:\\n\"\n@@ -100,1 +100,1 @@\n-                NSK_COMPLAIN9(\"In %s phase GetExtensionEvents() returned event #%d with nullptr attribute(s):\\n\"\n+                NSK_COMPLAIN9(\"In %s phase GetExtensionEvents() returned event #%d with null attribute(s):\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetExtensionEvents\/extevents001\/extevents001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-            NSK_COMPLAIN3(\"In %s phase GetExtensionFunctions() returned nullptr pointer:\\n\"\n+            NSK_COMPLAIN3(\"In %s phase GetExtensionFunctions() returned null pointer:\\n\"\n@@ -111,1 +111,1 @@\n-                NSK_COMPLAIN9(\"In %s phase GetExtensionFunctions() returned function #%d with nullptr attribute(s):\\n\"\n+                NSK_COMPLAIN9(\"In %s phase GetExtensionFunctions() returned function #%d with null attribute(s):\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetExtensionFunctions\/extfuncs001\/extfuncs001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-      \"Lnsk\/jvmti\/GetFieldName\/getfldnm005;\", \"nullptr\" },\n+      \"Lnsk\/jvmti\/GetFieldName\/getfldnm005;\", \"null\" },\n@@ -62,1 +62,1 @@\n-      \"nullptr\" },\n+      \"null\" },\n@@ -65,1 +65,1 @@\n-      \"nullptr\" },\n+      \"null\" },\n@@ -83,1 +83,1 @@\n-      \"nullptr\" }\n+      \"null\" }\n@@ -104,1 +104,1 @@\n-                strcmp(fld_sig[idx][3], (gen_sign == nullptr) ? \"nullptr\" : gen_sign) != 0) {\n+                strcmp(fld_sig[idx][3], (gen_sign == nullptr) ? \"null\" : gen_sign) != 0) {\n@@ -113,1 +113,1 @@\n-                sign, (gen_sign == nullptr) ? \"nullptr\" : gen_sign,\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign,\n@@ -119,1 +119,1 @@\n-                sign, (gen_sign == nullptr) ? \"nullptr\" : gen_sign);\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetFieldName\/getfldnm005\/getfldnm005.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    NSK_DISPLAY0(\"Check if GetJLocationFormat(nullptr) returns JVMTI_ERROR_NULL_POINTER\\n\");\n+    NSK_DISPLAY0(\"Check if GetJLocationFormat(null) returns JVMTI_ERROR_NULL_POINTER\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetJLocationFormat\/getjlocfmt002\/getjlocfmt002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-        printf(\"Name = %s, sig = %s: mid = nullptr\\n\", name, sig);\n+        printf(\"Name = %s, sig = %s: mid = null\\n\", name, sig);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLineNumberTable\/linetab001\/linetab001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-        printf(\"Name = %s, sig = %s: mid = nullptr\\n\", name, sig);\n+        printf(\"Name = %s, sig = %s: mid = null\\n\", name, sig);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab001\/localtab001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    { \"this\", \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab005a;\", \"nullptr\" },\n+    { \"this\", \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab005a;\", \"null\" },\n@@ -51,1 +51,1 @@\n-    { \"constr_i\", \"I\", \"nullptr\" },\n+    { \"constr_i\", \"I\", \"null\" },\n@@ -54,2 +54,2 @@\n-    { \"constr_f\", \"F\", \"nullptr\" },\n-    { \"constr_ch\", \"C\", \"nullptr\" },\n+    { \"constr_f\", \"F\", \"null\" },\n+    { \"constr_ch\", \"C\", \"null\" },\n@@ -61,3 +61,3 @@\n-    { \"this\", \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab005a;\", \"nullptr\" },\n-    { \"ins_c\", \"C\", \"nullptr\" },\n-    { \"ins_i\", \"J\", \"nullptr\" },\n+    { \"this\", \"Lnsk\/jvmti\/GetLocalVariableTable\/localtab005a;\", \"null\" },\n+    { \"ins_c\", \"C\", \"null\" },\n+    { \"ins_i\", \"J\", \"null\" },\n@@ -66,2 +66,2 @@\n-    { \"ins_k\", \"J\", \"nullptr\" },\n-    { \"ins_l\", \"J\", \"nullptr\" },\n+    { \"ins_k\", \"J\", \"null\" },\n+    { \"ins_l\", \"J\", \"null\" },\n@@ -73,4 +73,4 @@\n-    { \"stat_x\", \"I\", \"nullptr\" },\n-    { \"stat_y\", \"I\", \"nullptr\" },\n-    { \"stat_z\", \"I\", \"nullptr\" },\n-    { \"stat_j\", \"D\", \"nullptr\" },\n+    { \"stat_x\", \"I\", \"null\" },\n+    { \"stat_y\", \"I\", \"null\" },\n+    { \"stat_z\", \"I\", \"null\" },\n+    { \"stat_j\", \"D\", \"null\" },\n@@ -140,1 +140,1 @@\n-                       (lv_table[j].generic_signature == nullptr) ? \"nullptr\" : lv_table[j].generic_signature);\n+                       (lv_table[j].generic_signature == nullptr) ? \"null\" : lv_table[j].generic_signature);\n@@ -158,1 +158,1 @@\n-                            (strcmp((lv_table[j].generic_signature == nullptr) ? \"nullptr\" : lv_table[j].generic_signature,\n+                            (strcmp((lv_table[j].generic_signature == nullptr) ? \"null\" : lv_table[j].generic_signature,\n@@ -168,1 +168,1 @@\n-                               (lv_table[j].generic_signature == nullptr) ? \"nullptr\" : lv_table[j].generic_signature,\n+                               (lv_table[j].generic_signature == nullptr) ? \"null\" : lv_table[j].generic_signature,\n@@ -170,1 +170,1 @@\n-                               (methInfo[i].vars[k].v_gen_sign == nullptr) ? \"nullptr\" : methInfo[i].vars[k].v_gen_sign);\n+                               (methInfo[i].vars[k].v_gen_sign == nullptr) ? \"null\" : methInfo[i].vars[k].v_gen_sign);\n@@ -178,1 +178,1 @@\n-                               (lv_table[j].generic_signature == nullptr) ? \"nullptr\" : lv_table[j].generic_signature);\n+                               (lv_table[j].generic_signature == nullptr) ? \"null\" : lv_table[j].generic_signature);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetLocalVariableTable\/localtab005\/localtab005.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        printf(\"%s.%s%s: mid = nullptr\\n\", cl_name, name, sig);\n+        printf(\"%s.%s%s: mid = null\\n\", cl_name, name, sig);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodDeclaringClass\/declcls001\/declcls001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        printf(\"%s.%s%s: mid = nullptr\\n\", name, meth, sig);\n+        printf(\"%s.%s%s: mid = null\\n\", name, meth, sig);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodDeclaringClass\/declcls003\/declcls003.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        printf(\"Name = %s, sig = %s: mid = nullptr\\n\", name, sig);\n+        printf(\"Name = %s, sig = %s: mid = null\\n\", name, sig);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodLocation\/methloc001\/methloc001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        \"nullptr\" },\n+        \"null\" },\n@@ -66,1 +66,1 @@\n-       \"nullptr\" } },\n+       \"null\" } },\n@@ -70,1 +70,1 @@\n-        \"nullptr\" },\n+        \"null\" },\n@@ -101,1 +101,1 @@\n-                strcmp(meth_sig[clsIdx][methIdx][3], (gen_sign == nullptr) ? \"nullptr\" : gen_sign) != 0) {\n+                strcmp(meth_sig[clsIdx][methIdx][3], (gen_sign == nullptr) ? \"null\" : gen_sign) != 0) {\n@@ -105,1 +105,1 @@\n-                sign, (gen_sign == nullptr) ? \"nullptr\" : gen_sign,\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign,\n@@ -111,1 +111,1 @@\n-                sign, (gen_sign == nullptr) ? \"nullptr\" : gen_sign);\n+                sign, (gen_sign == nullptr) ? \"null\" : gen_sign);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetMethodName\/methname003\/methname003.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -205,1 +205,1 @@\n-        NSK_COMPLAIN2(\"GetObjectsWithTags() returns nullptr list of objects %s: 0x%p\\n\",\n+        NSK_COMPLAIN2(\"GetObjectsWithTags() returns null list of objects %s: 0x%p\\n\",\n@@ -212,1 +212,1 @@\n-        NSK_COMPLAIN2(\"GetObjectsWithTags() returns nullptr list of tags for objects %s: 0x%p\\n\",\n+        NSK_COMPLAIN2(\"GetObjectsWithTags() returns null list of tags for objects %s: 0x%p\\n\",\n@@ -227,1 +227,1 @@\n-            NSK_COMPLAIN3(\"GetObjectsWithTags() returns nullptr for object #%d %s: 0x%p\\n\",\n+            NSK_COMPLAIN3(\"GetObjectsWithTags() returns null for object #%d %s: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetObjectsWithTags\/objwithtags001\/objwithtags001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    NSK_DISPLAY0(\"Check if GetPhase(nullptr) returns JVMTI_ERROR_NULL_POINTER\\n\");\n+    NSK_DISPLAY0(\"Check if GetPhase(null) returns JVMTI_ERROR_NULL_POINTER\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetPhase\/getphase002\/getphase002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-            printf(\"\\nInvoke GetSourceDebugExtension() with nullptr pointer...\\n\");\n+            printf(\"\\nInvoke GetSourceDebugExtension() with null pointer...\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSourceDebugExtension\/srcdebugex002\/srcdebugex002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-        NSK_COMPLAIN2(\"In %s phase GetSystemProperties() returned nullptr pointer for properties list: 0x%p\\n\",\n+        NSK_COMPLAIN2(\"In %s phase GetSystemProperties() returned null pointer for properties list: 0x%p\\n\",\n@@ -70,1 +70,1 @@\n-                NSK_COMPLAIN3(\"In %s phase GetSystemProperties() returned nullptr for property #%d: 0x%p\\n\",\n+                NSK_COMPLAIN3(\"In %s phase GetSystemProperties() returned null for property #%d: 0x%p\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSystemProperties\/getsysprops001\/getsysprops001.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-                NSK_COMPLAIN4(\"In %s phase GetSystemProperty() returned nullptr for property #%d:\\n\"\n+                NSK_COMPLAIN4(\"In %s phase GetSystemProperty() returned null for property #%d:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSystemProperty\/getsysprop001\/getsysprop001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        NSK_COMPLAIN4(\"In %s phase GetSystemProperty() returned nullptr value for property:\\n\"\n+        NSK_COMPLAIN4(\"In %s phase GetSystemProperty() returned null value for property:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetSystemProperty\/getsysprop002\/getsysprop002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    NSK_DISPLAY1(\"GetThreadCpuTime() for current thread (passing nullptr): 0x%p\\n\", (void*)thread);\n+    NSK_DISPLAY1(\"GetThreadCpuTime() for current thread (passing null): 0x%p\\n\", (void*)thread);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadCpuTime\/thrcputime001\/thrcputime001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        NSK_DISPLAY0(\"Check obtained storage pointer against nullptr\\n\");\n+        NSK_DISPLAY0(\"Check obtained storage pointer against null\\n\");\n@@ -70,1 +70,1 @@\n-            NSK_COMPLAIN2(\"GetThreadLocalStorage() returned NOT nullptr storage for tested thread:\\n\"\n+            NSK_COMPLAIN2(\"GetThreadLocalStorage() returned NOT null storage for tested thread:\\n\"\n@@ -85,1 +85,1 @@\n-        NSK_DISPLAY0(\"Check obtained storage pointer against nullptr\\n\");\n+        NSK_DISPLAY0(\"Check obtained storage pointer against null\\n\");\n@@ -87,1 +87,1 @@\n-            NSK_COMPLAIN1(\"GetThreadLocalStorage() returned NOT nullptr storage for current agent thread:\\n\"\n+            NSK_COMPLAIN1(\"GetThreadLocalStorage() returned NOT null storage for current agent thread:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/GetThreadLocalStorage\/getthrdstor001\/getthrdstor001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -345,1 +345,1 @@\n-        NSK_COMPLAIN3(\"nullptr tag_ptr is passed to heapObjectCallback:\\n\"\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap001\/iterheap001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -345,1 +345,1 @@\n-        NSK_COMPLAIN3(\"nullptr tag_ptr is passed to heapObjectCallback:\\n\"\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap002\/iterheap002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -345,1 +345,1 @@\n-        NSK_COMPLAIN3(\"nullptr tag_ptr is passed to heapObjectCallback:\\n\"\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverHeap\/iterheap003\/iterheap003.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -363,1 +363,1 @@\n-        NSK_COMPLAIN3(\"nullptr tag_ptr is passed to heapObjectCallback:\\n\"\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls001\/iterinstcls001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -363,1 +363,1 @@\n-        NSK_COMPLAIN3(\"nullptr tag_ptr is passed to heapObjectCallback:\\n\"\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls002\/iterinstcls002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -363,1 +363,1 @@\n-        NSK_COMPLAIN3(\"nullptr tag_ptr is passed to heapObjectCallback:\\n\"\n+        NSK_COMPLAIN3(\"null tag_ptr is passed to heapObjectCallback:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverInstancesOfClass\/iterinstcls003\/iterinstcls003.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -326,1 +326,1 @@\n-        NSK_COMPLAIN6(\"nullptr tag_ptr is passed to objectReferenceCallback:\\n\"\n+        NSK_COMPLAIN6(\"null tag_ptr is passed to objectReferenceCallback:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverObjectsReachableFromObject\/iterobjreachobj001\/iterobjreachobj001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -304,1 +304,1 @@\n-        NSK_COMPLAIN4(\"nullptr tag_ptr is passed to heapRootCallback:\\n\"\n+        NSK_COMPLAIN4(\"null tag_ptr is passed to heapRootCallback:\\n\"\n@@ -397,1 +397,1 @@\n-        NSK_COMPLAIN8(\"nullptr tag_ptr is passed to stackReferenceCallback:\\n\"\n+        NSK_COMPLAIN8(\"null tag_ptr is passed to stackReferenceCallback:\\n\"\n@@ -522,1 +522,1 @@\n-        NSK_COMPLAIN6(\"nullptr tag_ptr is passed to objectReferenceCallback:\\n\"\n+        NSK_COMPLAIN6(\"null tag_ptr is passed to objectReferenceCallback:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/IterateOverReachableObjects\/iterreachobj001\/iterreachobj001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-        printf(\"\\nInvoke PopFrame() with nullptr pointer to a thread...\\n\");\n+        printf(\"\\nInvoke PopFrame() with null pointer to a thread...\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe002\/popframe002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-        printf(\"\\nInvoke PopFrame() with nullptr pointer to a thread...\\n\");\n+        printf(\"\\nInvoke PopFrame() with null pointer to a thread...\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe011\/popframe011.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-            printf(\"Invoke RedefineClasses() with nullptr pointer to the structure jvmtiClassDefinition\\n\");\n+            printf(\"Invoke RedefineClasses() with null pointer to the structure jvmtiClassDefinition\\n\");\n@@ -115,1 +115,1 @@\n-            printf(\"Invoke RedefineClasses() with nullptr pointer to the field jvmtiClassDefinition->class_bytes\\n\");\n+            printf(\"Invoke RedefineClasses() with null pointer to the field jvmtiClassDefinition->class_bytes\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/redefclass006\/redefclass006.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-            NSK_COMPLAIN2(\"# %s event callback was invoked after SetEventCallbacks(nullptr):\\n\"\n+            NSK_COMPLAIN2(\"# %s event callback was invoked after SetEventCallbacks(null):\\n\"\n@@ -146,1 +146,1 @@\n-    NSK_DISPLAY0(\">>> Testcase #2: Set nullptr for events callbacks\\n\");\n+    NSK_DISPLAY0(\">>> Testcase #2: Set null for events callbacks\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEventCallbacks\/setevntcallb002\/setevntcallb002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-      printf(\"(GetStaticMethodID) returns nullptr\");\n+      printf(\"(GetStaticMethodID) returns null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetEventNotificationMode\/setnotif001\/setnotif001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-        printf(\"GetFieldName returned nullptr field name\\n\");\n+        printf(\"GetFieldName returned null field name\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw001\/setfldw001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,16 +52,16 @@\n-    { \"fld0\", \"J\", JNI_TRUE, nullptr, \"static long\" },\n-    { \"fld1\", \"J\", JNI_FALSE, nullptr, \"long\" },\n-    { \"fld2\", \"F\", JNI_TRUE, nullptr, \"static float\" },\n-    { \"fld3\", \"F\", JNI_FALSE, nullptr, \"float\" },\n-    { \"fld4\", \"D\", JNI_TRUE, nullptr, \"static double\" },\n-    { \"fld5\", \"D\", JNI_FALSE, nullptr, \"double\" },\n-    { \"fld6\", \"Ljava\/lang\/Object;\", JNI_TRUE, nullptr, \"static Object\" },\n-    { \"fld7\", \"Ljava\/lang\/Object;\", JNI_FALSE, nullptr, \"Object\" },\n-    { \"fld8\", \"Z\", JNI_TRUE, nullptr, \"static boolean\" },\n-    { \"fld9\", \"Z\", JNI_FALSE, nullptr, \"boolean\" },\n-    { \"fld10\", \"B\", JNI_TRUE, nullptr, \"static byte\" },\n-    { \"fld11\", \"B\", JNI_FALSE, nullptr, \"byte\" },\n-    { \"fld12\", \"S\", JNI_TRUE, nullptr, \"static short\" },\n-    { \"fld13\", \"S\", JNI_FALSE, nullptr, \"short\" },\n-    { \"fld14\", \"C\", JNI_TRUE, nullptr, \"static char\" },\n-    { \"fld15\", \"C\", JNI_FALSE, nullptr, \"char\" }\n+    { \"fld0\", \"J\", JNI_TRUE, null, \"static long\" },\n+    { \"fld1\", \"J\", JNI_FALSE, null, \"long\" },\n+    { \"fld2\", \"F\", JNI_TRUE, null, \"static float\" },\n+    { \"fld3\", \"F\", JNI_FALSE, null, \"float\" },\n+    { \"fld4\", \"D\", JNI_TRUE, null, \"static double\" },\n+    { \"fld5\", \"D\", JNI_FALSE, null, \"double\" },\n+    { \"fld6\", \"Ljava\/lang\/Object;\", JNI_TRUE, null, \"static Object\" },\n+    { \"fld7\", \"Ljava\/lang\/Object;\", JNI_FALSE, null, \"Object\" },\n+    { \"fld8\", \"Z\", JNI_TRUE, null, \"static boolean\" },\n+    { \"fld9\", \"Z\", JNI_FALSE, null, \"boolean\" },\n+    { \"fld10\", \"B\", JNI_TRUE, null, \"static byte\" },\n+    { \"fld11\", \"B\", JNI_FALSE, null, \"byte\" },\n+    { \"fld12\", \"S\", JNI_TRUE, null, \"static short\" },\n+    { \"fld13\", \"S\", JNI_FALSE, null, \"short\" },\n+    { \"fld14\", \"C\", JNI_TRUE, null, \"static char\" },\n+    { \"fld15\", \"C\", JNI_FALSE, null, \"char\" }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldAccessWatch\/setfldw005\/setfldw005.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-        printf(\"GetFieldName returned nullptr field name\\n\");\n+        printf(\"GetFieldName returned null field name\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw001\/setfmodw001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-      printf(\"(GetStaticFieldID) returns nullptr\");\n+      printf(\"(GetStaticFieldID) returns null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/SetFieldModificationWatch\/setfmodw002\/setfmodw002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-         NSK_COMPLAIN0(\"newObject: GetMethodID returned nullptr\\n\\n\");\n+         NSK_COMPLAIN0(\"newObject: GetMethodID returned null\\n\\n\");\n@@ -157,1 +157,1 @@\n-         NSK_COMPLAIN0(\"newObject: NewObject returned nullptr\\n\\n\");\n+         NSK_COMPLAIN0(\"newObject: NewObject returned null\\n\\n\");\n@@ -172,1 +172,1 @@\n-         NSK_COMPLAIN0(\"allocObject: GetMethodID returned nullptr\\n\\n\");\n+         NSK_COMPLAIN0(\"allocObject: GetMethodID returned null\\n\\n\");\n@@ -179,1 +179,1 @@\n-         NSK_COMPLAIN0(\"allocObject: AllocObject returned nullptr\\n\\n\");\n+         NSK_COMPLAIN0(\"allocObject: AllocObject returned null\\n\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP01\/ap01t001\/ap01t001.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-            NSK_COMPLAIN0(\"GetStaticObjectField returned nullptr for 'catcher' field value\\n\\n\");\n+            NSK_COMPLAIN0(\"GetStaticObjectField returned null for 'catcher' field value\\n\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP03\/ap03t001\/ap03t001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -355,1 +355,1 @@\n-        NSK_COMPLAIN0(\"GetStaticObjectField returned nullptr for 'root' field value\\n\\n\");\n+        NSK_COMPLAIN0(\"GetStaticObjectField returned null for 'root' field value\\n\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP04\/ap04t001\/ap04t001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-        NSK_COMPLAIN0(\"GetStaticObjectField returned nullptr for 'root' field value\\n\\n\");\n+        NSK_COMPLAIN0(\"GetStaticObjectField returned null for 'root' field value\\n\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP04\/ap04t002\/ap04t002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-            NSK_COMPLAIN0(\"GetStaticObjectField returned nullptr for 'thread' field value\\n\\n\");\n+            NSK_COMPLAIN0(\"GetStaticObjectField returned null for 'thread' field value\\n\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/allocation\/AP06\/ap06t001\/ap06t001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-        NSK_COMPLAIN0(\"ClassUnload: 'name' input parameter is nullptr.\\n\");\n+        NSK_COMPLAIN0(\"ClassUnload: 'name' input parameter is null.\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/extension\/EX03\/ex03t001\/ex03t001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-        NSK_COMPLAIN2(\"GetEnvironmentLocalStorage() returned NOT nullptr storage in %s:\\n\"\n+        NSK_COMPLAIN2(\"GetEnvironmentLocalStorage() returned NOT null storage in %s:\\n\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/general_functions\/GF06\/gf06t001\/gf06t001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -355,1 +355,1 @@\n-            className, threadName != nullptr ? threadName : \"nullptr\");\n+            className, threadName != nullptr ? threadName : \"null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/hotswap\/HS201\/hs201t002\/hs201t002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,2 +56,2 @@\n-    { 0, \"statMeth\", \"(I)D\", nullptr, \"statMeth_calls\", nullptr, 0, 0 },\n-    { 1, \"voidMeth\", \"()V\", nullptr, \"voidMeth_calls\", nullptr, 0, 0 }\n+    { 0, \"statMeth\", \"(I)D\", null, \"statMeth_calls\", nullptr, 0, 0 },\n+    { 1, \"voidMeth\", \"()V\", null, \"voidMeth_calls\", nullptr, 0, 0 }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI03\/ji03t002\/ji03t002.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -317,1 +317,1 @@\n-                NSK_COMPLAIN3(\"nullptr methodID in stack for %s thread #%d (%s)\\n\",\n+                NSK_COMPLAIN3(\"null methodID in stack for %s thread #%d (%s)\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP02\/sp02t002\/sp02t002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -341,1 +341,1 @@\n-                NSK_COMPLAIN3(\"nullptr methodID in stack for %s thread #%d (%s)\\n\",\n+                NSK_COMPLAIN3(\"null methodID in stack for %s thread #%d (%s)\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP06\/sp06t002\/sp06t002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -462,1 +462,1 @@\n-        NSK_COMPLAIN1(\"nullptr tag_ptr is passed to heapReferenceCallback:\"\n+        NSK_COMPLAIN1(\"null tag_ptr is passed to heapReferenceCallback:\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref002\/followref002.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -671,1 +671,1 @@\n-        NSK_COMPLAIN1(\"nullptr tag_ptr is passed to heapReferenceCallback:\"\n+        NSK_COMPLAIN1(\"null tag_ptr is passed to heapReferenceCallback:\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref003\/followref003.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-    NSK_DISPLAY0(\"GetTag: nullptr object pointer:\");\n+    NSK_DISPLAY0(\"GetTag: null object pointer:\");\n@@ -116,1 +116,1 @@\n-    NSK_DISPLAY0(\"GetTag: nullptr tag pointer:\");\n+    NSK_DISPLAY0(\"GetTag: null tag pointer:\");\n@@ -134,1 +134,1 @@\n-    NSK_DISPLAY0(\"SetTag: nullptr object pointer:\");\n+    NSK_DISPLAY0(\"SetTag: null object pointer:\");\n@@ -142,1 +142,1 @@\n-    NSK_DISPLAY0(\"GetTag: nullptr tag pointer:\");\n+    NSK_DISPLAY0(\"GetTag: null tag pointer:\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/FollowReferences\/followref006\/followref006.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -197,1 +197,1 @@\n-        printf(\"compare stack #%d: thread is nullptr\\n\", ti);\n+        printf(\"compare stack #%d: thread is null\\n\", ti);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/GetAllStackTraces\/getallstktr001\/getallstktr001.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-        printf(\"(GetClassLoader app) unexpected loader - nullptr\\n\");\n+        printf(\"(GetClassLoader app) unexpected loader - null\\n\");\n@@ -103,1 +103,1 @@\n-        printf(\"(GetClassLoader obj) unexpected loader - !nullptr\\n\");\n+        printf(\"(GetClassLoader obj) unexpected loader - !null\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/unit\/clsldrclss00x\/clsldrclss00x.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    \"JNI method GetFieldID : Return is nullptr from exceptionjni001.cpp : \";\n+    \"JNI method GetFieldID : Return is null from exceptionjni001.cpp : \";\n@@ -38,1 +38,1 @@\n-    \"JNI method GetFieldID : Return is nullptr from Unknown File : \";\n+    \"JNI method GetFieldID : Return is null from Unknown File : \";\n@@ -59,1 +59,1 @@\n-    fprintf(stderr, \"end_ptr == nullptr or *end_ptr terminating from %s\\n\", message);\n+    fprintf(stderr, \"end_ptr == null or *end_ptr terminating from %s\\n\", message);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/ExceptionCheckingJniEnv\/exceptionjni001\/exceptionjni001.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -495,1 +495,1 @@\n-        printf(\"ERROR(%s,%d): JVMTIagent was not properly loaded: JVMTI env = nullptr\\n\",\n+        printf(\"ERROR(%s,%d): JVMTIagent was not properly loaded: JVMTI env = null\\n\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/JVMTIagent.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-        NSK_COMPLAIN0(\"Options nullptr\\n\");\n+        NSK_COMPLAIN0(\"Options null\\n\");\n@@ -166,1 +166,1 @@\n-        NSK_COMPLAIN0(\"Options nullptr\\n\");\n+        NSK_COMPLAIN0(\"Options null\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/aod\/aod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned nullptr\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/BooleanArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned nullptr\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/ByteArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned nullptr\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/CharArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned nullptr\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/DoubleArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned nullptr\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/FloatArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned nullptr\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/IntArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned nullptr\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/LongArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetPrimitiveArrayCritical returned nullptr\");\n+      jni_env->FatalError(\"GetPrimitiveArrayCritical returned null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/ShortArrayCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-      jni_env->FatalError(\"GetStringCritical returned nullptr\");\n+      jni_env->FatalError(\"GetStringCritical returned null\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/lock\/jni\/StringCriticalLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-      _error_message = \"Return is nullptr\";\n+      _error_message = \"Return is null\";\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/ExceptionCheckingJniEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-                        NSK_COMPLAIN0(\"malloc return nullptr\\n\");\n+                        NSK_COMPLAIN0(\"malloc return null\\n\");\n@@ -66,1 +66,1 @@\n-                                NSK_COMPLAIN0(\"NewGlobalRef return nullptr\\n\");\n+                                NSK_COMPLAIN0(\"NewGlobalRef return null\\n\");\n@@ -70,1 +70,1 @@\n-                                    \"NewGlobalRef return nullptr\");\n+                                    \"NewGlobalRef return null\");\n@@ -92,1 +92,1 @@\n-                NSK_COMPLAIN1(\"globalReferences[%d] = nullptr, possible wrong index is passed\\n\", index);\n+                NSK_COMPLAIN1(\"globalReferences[%d] = null, possible wrong index is passed\\n\", index);\n@@ -96,1 +96,1 @@\n-                    \"Requested globalReferences[] element is nullptr, possible wrong index is passed\");\n+                    \"Requested globalReferences[] element is null, possible wrong index is passed\");\n@@ -114,1 +114,1 @@\n-                NSK_COMPLAIN0(\"NewLocalRef return nullptr\\n\");\n+                NSK_COMPLAIN0(\"NewLocalRef return null\\n\");\n@@ -118,1 +118,1 @@\n-                    \"NewLocalRef return nullptr\");\n+                    \"NewLocalRef return null\");\n@@ -145,1 +145,1 @@\n-                        NSK_COMPLAIN0(\"malloc return nullptr\\n\");\n+                        NSK_COMPLAIN0(\"malloc return null\\n\");\n@@ -166,1 +166,1 @@\n-                                NSK_COMPLAIN0(\"NewWeakGlobalRef return nullptr\\n\");\n+                                NSK_COMPLAIN0(\"NewWeakGlobalRef return null\\n\");\n@@ -170,1 +170,1 @@\n-                                    \"NewWeakGlobalRef return nullptr\");\n+                                    \"NewWeakGlobalRef return null\");\n@@ -192,1 +192,1 @@\n-                NSK_COMPLAIN1(\"weakReferences[%d] = nullptr, possible wrong index is passed\\n\", index);\n+                NSK_COMPLAIN1(\"weakReferences[%d] = null, possible wrong index is passed\\n\", index);\n@@ -196,1 +196,1 @@\n-                    \"Requested weakReferences[] element is nullptr, possible wrong index is passed\");\n+                    \"Requested weakReferences[] element is null, possible wrong index is passed\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/JNIreferences.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -234,1 +234,1 @@\n-        NSK_COMPLAIN0(\"File name is nullptr\\n\");\n+        NSK_COMPLAIN0(\"File name is null\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/aod\/jvmti_aod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-            NSK_COMPLAIN1(\"Can't get string at %#p: nullptr\\n\", sInfo);\n+            NSK_COMPLAIN1(\"Can't get string at %#p: null\\n\", sInfo);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/jvmti_FollowRefObjects.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -267,1 +267,1 @@\n-        nsk_complain(\"nsk_jvmti_findOptionValue(): option name is nullptr\\n\");\n+        nsk_complain(\"nsk_jvmti_findOptionValue(): option name is null\\n\");\n@@ -286,1 +286,1 @@\n-        nsk_complain(\"nsk_jvmti_findOptionStringValue(): option name is nullptr\\n\");\n+        nsk_complain(\"nsk_jvmti_findOptionStringValue(): option name is null\\n\");\n@@ -311,1 +311,1 @@\n-        nsk_complain(\"nsk_jvmti_findOptionIntValue(): option name is nullptr\\n\");\n+        nsk_complain(\"nsk_jvmti_findOptionIntValue(): option name is null\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jvmti\/jvmti_tools.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-    return (str == nullptr)? \"<nullptr>\" : str;\n+    return (str == nullptr)? \"<null>\" : str;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/native\/nsk_tools.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-    fprintf(stderr, \"JNI received a nullptr array from Java\\n\");\n+    fprintf(stderr, \"JNI received a null array from Java\\n\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/jni\/libjnistress003.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}