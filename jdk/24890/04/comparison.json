{"files":[{"patch":"@@ -2353,0 +2353,11 @@\n+\/\/------------------refine_strip_mined_loop_macro_node-------------------\n+\/\/ Perform refining of strip mined loop node in the macro nodes list.\n+void PhaseMacroExpand::refine_strip_mined_loop_macro_node() {\n+   for (int i = C->macro_count(); i > 0; i--) {\n+    Node* n = C->macro_node(i - 1);\n+    if (n->is_OuterStripMinedLoop()) {\n+      n->as_OuterStripMinedLoop()->adjust_strip_mined_loop(&_igvn);\n+    }\n+  }\n+}\n+\n@@ -2460,0 +2471,1 @@\n+  refine_strip_mined_loop_macro_node();\n@@ -2512,1 +2524,0 @@\n-        n->as_OuterStripMinedLoop()->adjust_strip_mined_loop(&_igvn);\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -205,0 +205,2 @@\n+\n+  void refine_strip_mined_loop_macro_node();\n","filename":"src\/hotspot\/share\/opto\/macro.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8347515\n+ * @summary Regression test for an assert triggered during elimination of OuterStripMinedLoop node. This happens\n+ * due to a MaxL node being added to the macro list during refining of the OuterStripMinedLoop node prior to its\n+ * elimination.\n+ * @run main\/othervm -XX:-TieredCompilation compiler.macronodes.TestLoopStripMiningInMacroElimination\n+ *\/\n+package compiler.macronodes;\n+\n+public class TestLoopStripMiningInMacroElimination {\n+    static long l1 = 3434;\n+    static long l2;\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 1000; i++) {\n+            test();\n+        }\n+    }\n+\n+    static void test() {\n+        for (int i = 0; i < 100; i++) {\n+            l2 = Math.max(i, 56 % l1);\n+        }\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/macronodes\/TestLoopStripMiningInMacroElimination.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"}]}