{"files":[{"patch":"@@ -71,1 +71,0 @@\n-#include \"runtime\/cpuTimeCounters.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-#include \"runtime\/cpuTimeCounters.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#include \"gc\/g1\/g1CollectedHeap.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ServiceThread.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"runtime\/perfData.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ServiceThread.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-#include \"runtime\/atomic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"gc\/shared\/collectedHeap.hpp\"\n@@ -45,1 +44,0 @@\n-#include \"runtime\/perfData.hpp\"\n@@ -70,4 +68,1 @@\n-  if (UsePerfData && os::is_thread_cpu_time_supported()) {\n-    EXCEPTION_MARK;\n-    CPUTimeCounters::get_instance()->create_counter(CPUTimeGroups::CPUTimeType::conc_dedup);\n-  }\n+  CPUTimeCounters::get_instance()->create_counter(CPUTimeGroups::CPUTimeType::conc_dedup);\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedupProcessor.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"runtime\/perfData.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedupProcessor.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    jlong net_cpu_time = _gc_total - counter->get_value();\n+    jlong net_cpu_time = _total - counter->get_value();\n@@ -127,1 +127,1 @@\n-    _gc_total += os::thread_cpu_time(thread);\n+    _total += os::thread_cpu_time(thread);\n","filename":"src\/hotspot\/share\/runtime\/cpuTimeCounters.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-  jlong _gc_total;\n+  jlong _total;\n@@ -102,1 +102,1 @@\n-      _gc_total(0), _name(name) {}\n+      _total(0), _name(name) {}\n","filename":"src\/hotspot\/share\/runtime\/cpuTimeCounters.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -140,3 +140,1 @@\n-    if (os::is_thread_cpu_time_supported()) {\n-      CPUTimeCounters::get_instance()->create_counter(CPUTimeGroups::CPUTimeType::vm);\n-    }\n+    CPUTimeCounters::get_instance()->create_counter(CPUTimeGroups::CPUTimeType::vm);\n","filename":"src\/hotspot\/share\/runtime\/vmThread.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}