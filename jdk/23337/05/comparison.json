{"files":[{"patch":"@@ -88,0 +88,1 @@\n+import java.util.concurrent.atomic.AtomicReferenceArray;\n@@ -137,2 +138,4 @@\n-    \/** Cache of time-zone offset by offset in seconds. *\/\n-    private static final ConcurrentMap<Integer, ZoneOffset> SECONDS_CACHE = new ConcurrentHashMap<>(16, 0.75f, 4);\n+    \/** Cache of time-zone offset by offset in quarters. *\/\n+    private static final int SECONDS_PER_QUARTER = 15 * SECONDS_PER_MINUTE;\n+    private static final AtomicReferenceArray<ZoneOffset> QUARTER_CACHE = new AtomicReferenceArray<>(256);\n+\n@@ -426,3 +429,5 @@\n-        if (totalSeconds % (15 * SECONDS_PER_MINUTE) == 0) {\n-            Integer totalSecs = totalSeconds;\n-            ZoneOffset result = SECONDS_CACHE.get(totalSecs);\n+        int quarters = totalSeconds \/ SECONDS_PER_QUARTER;\n+        if (totalSeconds - quarters * SECONDS_PER_QUARTER == 0) {\n+            \/\/ quarters range from -72 to 72, & 0xff maps them to 0-72 and 184-255.\n+            int key = quarters & 0xff;\n+            ZoneOffset result = QUARTER_CACHE.getOpaque(key);\n@@ -431,1 +436,1 @@\n-                var existing = SECONDS_CACHE.putIfAbsent(totalSecs, result);\n+                var existing = QUARTER_CACHE.compareAndExchange(key, null, result);\n","filename":"src\/java.base\/share\/classes\/java\/time\/ZoneOffset.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+import static org.testng.Assert.assertEquals;\n@@ -68,0 +69,1 @@\n+import java.util.IdentityHashMap;\n@@ -85,0 +87,27 @@\n+    @Test\n+    public void test() throws Exception {\n+        Object PRESENT = new Object();\n+        IdentityHashMap<ZoneOffset, Object> map = new IdentityHashMap();\n+        for (int i = 0; i < 10; i++) {\n+            for (int hour = 0; hour < 18; hour++) {\n+                for (int minutes = 0; minutes < 60; minutes += 15) {\n+                    ZoneOffset zoneOffset = ZoneOffset.ofHoursMinutes(hour, minutes);\n+                    map.put(zoneOffset, PRESENT);\n+                }\n+            }\n+        }\n+        assertEquals(18 * 4, map.size());\n+\n+        for (int i = 0; i < 10; i++) {\n+            for (int hour = -18; hour < 18; hour++) {\n+                for (int minutes = 0; minutes < 60; minutes += 15) {\n+                    int totalSeconds = hour * 3600 + minutes * 60;\n+                    ZoneOffset zoneOffset = ZoneOffset.ofTotalSeconds(totalSeconds);\n+                    map.put(zoneOffset, PRESENT);\n+                }\n+            }\n+        }\n+\n+        assertEquals(36 * 4, map.size());\n+    }\n+\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/TestZoneOffset.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"}]}