{"files":[{"patch":"@@ -1196,0 +1196,12 @@\n+  \/\/ Set instruction mark in MacroAssembler. This is used only in\n+  \/\/ instructions that emit bytes directly to the CodeBuffer wraped\n+  \/\/ in the MacroAssembler. Should go away once all \"instruct\" are\n+  \/\/ patched to emit bytes only using methods in MacroAssembler.\n+  enc_class SetInstMark %{\n+    __ set_inst_mark();\n+  %}\n+\n+  enc_class ClearInstMark %{\n+    __ clear_inst_mark();\n+  %}\n+\n@@ -8856,1 +8868,1 @@\n-  ins_encode( Java_Static_Call( meth ), call_epilog );\n+  ins_encode( SetInstMark, Java_Static_Call( meth ), call_epilog, ClearInstMark );\n@@ -8870,1 +8882,1 @@\n-  ins_encode( preserve_SP, Java_Static_Call( meth ), restore_SP, call_epilog );\n+  ins_encode( SetInstMark, preserve_SP, Java_Static_Call( meth ), restore_SP, call_epilog, ClearInstMark );\n@@ -8882,1 +8894,1 @@\n-  ins_encode( Java_Dynamic_Call( meth ), call_epilog );\n+  ins_encode( SetInstMark, Java_Dynamic_Call( meth ), call_epilog, ClearInstMark );\n@@ -8892,2 +8904,2 @@\n-  ins_encode( Java_To_Runtime( meth ),\n-              call_epilog );\n+  ins_encode( SetInstMark, Java_To_Runtime( meth ),\n+              call_epilog, ClearInstMark );\n@@ -8904,2 +8916,2 @@\n-  ins_encode( Java_To_Runtime( meth ),\n-              call_epilog );\n+  ins_encode( SetInstMark, Java_To_Runtime( meth ),\n+              call_epilog, ClearInstMark );\n@@ -8916,2 +8928,2 @@\n-  ins_encode( Java_To_Runtime( meth ),\n-              call_epilog );\n+  ins_encode( SetInstMark, Java_To_Runtime( meth ),\n+              call_epilog, ClearInstMark );\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":21,"deletions":9,"binary":false,"changes":30,"status":"modified"}]}