{"files":[{"patch":"@@ -803,1 +803,1 @@\n-    if (nm->make_not_entrant(nmethod::NMethodChangeReason::C1_deoptimize)) {\n+    if (nm->make_not_entrant(nmethod::ChangeReason::C1_deoptimize)) {\n@@ -1095,1 +1095,1 @@\n-      nm->make_not_entrant(nmethod::NMethodChangeReason::C1_codepatch);\n+      nm->make_not_entrant(nmethod::ChangeReason::C1_codepatch);\n@@ -1471,1 +1471,1 @@\n-  nm->make_not_entrant(nmethod::NMethodChangeReason::C1_predicate_failed_trap);\n+  nm->make_not_entrant(nmethod::ChangeReason::C1_predicate_failed_trap);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -805,1 +805,1 @@\n-      nm->make_not_entrant(nmethod::NMethodChangeReason::CI_replay);\n+      nm->make_not_entrant(nmethod::ChangeReason::CI_replay);\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1364,1 +1364,1 @@\n-      nm->make_not_entrant(nmethod::NMethodChangeReason::marked_for_deoptimization);\n+      nm->make_not_entrant(nmethod::ChangeReason::marked_for_deoptimization);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1967,1 +1967,1 @@\n-void nmethod::log_state_change(NMethodChangeReason reason) const {\n+void nmethod::log_state_change(ChangeReason change_reason) const {\n@@ -1971,2 +1971,2 @@\n-      xtty->begin_elem(\"make_not_entrant thread='%zu' reason='%s'\",\n-                       os::current_thread_id(), NMethodChangeReason_to_string(reason));\n+      xtty->begin_elem(\"make_not_entrant thread='%zu' change_reason='%s'\",\n+                       os::current_thread_id(), change_reason_to_string(change_reason));\n@@ -1981,1 +1981,1 @@\n-  ss.print(\"made not entrant: %s\", NMethodChangeReason_to_string(reason));\n+  ss.print(\"made not entrant: %s\", change_reason_to_string(change_reason));\n@@ -1996,1 +1996,1 @@\n-bool nmethod::make_not_entrant(NMethodChangeReason reason) {\n+bool nmethod::make_not_entrant(ChangeReason change_reason) {\n@@ -2054,1 +2054,1 @@\n-    log_state_change(reason);\n+    log_state_change(change_reason);\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -472,2 +472,1 @@\n-  enum class NMethodChangeReason : u1 {\n-    C1_deoptimize,\n+  enum class ChangeReason : u1 {\n@@ -475,1 +474,1 @@\n-    C1_predicate_failed_trap,\n+    C1_deoptimize,\n@@ -477,0 +476,1 @@\n+    C1_predicate_failed_trap,\n@@ -478,0 +478,7 @@\n+    JVMCI_invalidate_nmethod,\n+    JVMCI_invalidate_nmethod_mirror,\n+    JVMCI_materialize_virtual_object,\n+    JVMCI_new_installation,\n+    JVMCI_register_method,\n+    JVMCI_replacing_with_new_code,\n+    JVMCI_reprofile,\n@@ -479,0 +486,1 @@\n+    missing_exception_handler,\n@@ -480,1 +488,0 @@\n-    OSR_invalidation_for_compiling_with_C1,\n@@ -482,0 +489,1 @@\n+    OSR_invalidation_for_compiling_with_C1,\n@@ -484,2 +492,0 @@\n-    whitebox_deoptimization,\n-    missing_exception_handler,\n@@ -487,0 +493,1 @@\n+    whitebox_deoptimization,\n@@ -488,7 +495,0 @@\n-    JVMCI_reprofile,\n-    JVMCI_materialize_virtual_object,\n-    JVMCI_invalidate_nmethod_mirror,\n-    JVMCI_register_method,\n-    JVMCI_invalidate_nmethod,\n-    JVMCI_new_installation,\n-    JVMCI_replacing_with_new_code,\n@@ -498,47 +498,27 @@\n-  static const char* NMethodChangeReason_to_string(NMethodChangeReason reason) {\n-    if (reason == nmethod::NMethodChangeReason::C1_deoptimize) {\n-        return \"C1 deoptimized\";\n-    } else if (reason == nmethod::NMethodChangeReason::C1_codepatch) {\n-        return \"C1 code patch\";\n-    } else if (reason == nmethod::NMethodChangeReason::C1_predicate_failed_trap) {\n-        return \"C1 predicate failed trap\";\n-    } else if (reason == nmethod::NMethodChangeReason::C1_deoptimize_for_patching) {\n-        return \"C1 deoptimize for patching\";\n-    } else if (reason == nmethod::NMethodChangeReason::CI_replay) {\n-        return \"CI replay\";\n-    } else if (reason == nmethod::NMethodChangeReason::marked_for_deoptimization) {\n-        return \"marked for deoptimization\";\n-    } else if (reason == nmethod::NMethodChangeReason::not_used) {\n-        return \"not used\";\n-    } else if (reason == nmethod::NMethodChangeReason::OSR_invalidation_for_compiling_with_C1) {\n-        return \"OSR invalidation for compiling with C1\";\n-    } else if (reason == nmethod::NMethodChangeReason::OSR_invalidation_back_branch) {\n-        return \"OSR invalidation back branch\";\n-    } else if (reason == nmethod::NMethodChangeReason::JVMCI_reprofile) {\n-        return \"JVMCI reprofile\";\n-    } else if (reason == nmethod::NMethodChangeReason::JVMCI_materialize_virtual_object) {\n-        return \"JVMCI materialize virtual object\";\n-    } else if (reason == nmethod::NMethodChangeReason::JVMCI_invalidate_nmethod_mirror) {\n-        return \"JVMCI invalidate nmethod mirror\";\n-    } else if (reason == nmethod::NMethodChangeReason::JVMCI_register_method) {\n-        return \"JVMCI register method\";\n-    } else if (reason == nmethod::NMethodChangeReason::OSR_invalidation_of_lower_level) {\n-        return \"OSR invalidation of lower level\";\n-    } else if (reason == nmethod::NMethodChangeReason::set_native_function) {\n-        return \"set native function\";\n-    } else if (reason == nmethod::NMethodChangeReason::whitebox_deoptimization) {\n-        return \"whitebox deoptimization\";\n-    } else if (reason == nmethod::NMethodChangeReason::missing_exception_handler) {\n-        return \"missing exception handler\";\n-    } else if (reason == nmethod::NMethodChangeReason::uncommon_trap) {\n-        return \"uncommon trap\";\n-    } else if (reason == nmethod::NMethodChangeReason::JVMCI_invalidate_nmethod) {\n-        return \"JVMCI invalidate nmethod\";\n-    } else if (reason == nmethod::NMethodChangeReason::zombie) {\n-        return \"zombie\";\n-    } else if (reason == nmethod::NMethodChangeReason::JVMCI_new_installation) {\n-        return \"JVMCI new installation\";\n-    } else if (reason == nmethod::NMethodChangeReason::JVMCI_replacing_with_new_code) {\n-        return \"JVMCI replacing with new code\";\n-    } else {\n-        return \"Unknown\";\n+  static const char* change_reason_to_string(ChangeReason change_reason) {\n+    switch (change_reason) {\n+        case ChangeReason::C1_codepatch:                            return \"C1 code patch\";\n+        case ChangeReason::C1_deoptimize:                           return \"C1 deoptimized\";\n+        case ChangeReason::C1_deoptimize_for_patching:              return \"C1 deoptimize for patching\";\n+        case ChangeReason::C1_predicate_failed_trap:                return \"C1 predicate failed trap\";\n+        case ChangeReason::CI_replay:                               return \"CI replay\";\n+        case ChangeReason::JVMCI_invalidate_nmethod:                return \"JVMCI invalidate nmethod\";\n+        case ChangeReason::JVMCI_invalidate_nmethod_mirror:         return \"JVMCI invalidate nmethod mirror\";\n+        case ChangeReason::JVMCI_materialize_virtual_object:        return \"JVMCI materialize virtual object\";\n+        case ChangeReason::JVMCI_new_installation:                  return \"JVMCI new installation\";\n+        case ChangeReason::JVMCI_register_method:                   return \"JVMCI register method\";\n+        case ChangeReason::JVMCI_replacing_with_new_code:           return \"JVMCI replacing with new code\";\n+        case ChangeReason::JVMCI_reprofile:                         return \"JVMCI reprofile\";\n+        case ChangeReason::marked_for_deoptimization:               return \"marked for deoptimization\";\n+        case ChangeReason::missing_exception_handler:               return \"missing exception handler\";\n+        case ChangeReason::not_used:                                return \"not used\";\n+        case ChangeReason::OSR_invalidation_back_branch:            return \"OSR invalidation back branch\";\n+        case ChangeReason::OSR_invalidation_for_compiling_with_C1:  return \"OSR invalidation for compiling with C1\";\n+        case ChangeReason::OSR_invalidation_of_lower_level:         return \"OSR invalidation of lower level\";\n+        case ChangeReason::set_native_function:                     return \"set native function\";\n+        case ChangeReason::uncommon_trap:                           return \"uncommon trap\";\n+        case ChangeReason::whitebox_deoptimization:                 return \"whitebox deoptimization\";\n+        case ChangeReason::zombie:                                  return \"zombie\";\n+        default:\n+            assert(false, \"Unhandled reason\");\n+            return \"Unknown\";\n@@ -710,2 +690,2 @@\n-  bool  make_not_entrant(NMethodChangeReason reason);\n-  bool  make_not_used()    { return make_not_entrant(NMethodChangeReason::not_used); }\n+  bool  make_not_entrant(ChangeReason change_reason);\n+  bool  make_not_used()    { return make_not_entrant(ChangeReason::not_used); }\n@@ -1024,1 +1004,1 @@\n-  void log_state_change(NMethodChangeReason reason) const;\n+  void log_state_change(ChangeReason change_reason) const;\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":43,"deletions":63,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -799,1 +799,1 @@\n-          osr_nm->make_not_entrant(nmethod::NMethodChangeReason::OSR_invalidation_for_compiling_with_C1);\n+          osr_nm->make_not_entrant(nmethod::ChangeReason::OSR_invalidation_for_compiling_with_C1);\n@@ -1204,1 +1204,1 @@\n-            nm->make_not_entrant(nmethod::NMethodChangeReason::OSR_invalidation_back_branch);\n+            nm->make_not_entrant(nmethod::ChangeReason::OSR_invalidation_back_branch);\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1197,1 +1197,1 @@\n-        JVMCIENV->invalidate_nmethod_mirror(nmethod_mirror, true, nmethod::NMethodChangeReason::JVMCI_replacing_with_new_code, JVMCI_CHECK_0);\n+        JVMCIENV->invalidate_nmethod_mirror(nmethod_mirror, true, nmethod::ChangeReason::JVMCI_replacing_with_new_code, JVMCI_CHECK_0);\n@@ -1373,1 +1373,1 @@\n-    code->make_not_entrant(nmethod::NMethodChangeReason::JVMCI_reprofile);\n+    code->make_not_entrant(nmethod::ChangeReason::JVMCI_reprofile);\n@@ -1388,1 +1388,1 @@\n-  JVMCIENV->invalidate_nmethod_mirror(nmethod_mirror, deoptimize, nmethod::NMethodChangeReason::JVMCI_invalidate_nmethod, JVMCI_CHECK);\n+  JVMCIENV->invalidate_nmethod_mirror(nmethod_mirror, deoptimize, nmethod::ChangeReason::JVMCI_invalidate_nmethod, JVMCI_CHECK);\n@@ -1813,1 +1813,1 @@\n-    fst.current()->cb()->as_nmethod()->make_not_entrant(nmethod::NMethodChangeReason::JVMCI_materialize_virtual_object);\n+    fst.current()->cb()->as_nmethod()->make_not_entrant(nmethod::ChangeReason::JVMCI_materialize_virtual_object);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1755,1 +1755,1 @@\n-void JVMCIEnv::invalidate_nmethod_mirror(JVMCIObject mirror, bool deoptimize, nmethod::NMethodChangeReason statusReason, JVMCI_TRAPS) {\n+void JVMCIEnv::invalidate_nmethod_mirror(JVMCIObject mirror, bool deoptimize, nmethod::ChangeReason change_reason, JVMCI_TRAPS) {\n@@ -1778,1 +1778,1 @@\n-    nm->make_not_entrant(statusReason);\n+    nm->make_not_entrant(change_reason);\n@@ -1787,1 +1787,1 @@\n-    nm->make_not_entrant(statusReason);\n+    nm->make_not_entrant(change_reason);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -465,1 +465,1 @@\n-  void invalidate_nmethod_mirror(JVMCIObject mirror, bool deoptimze, nmethod::NMethodChangeReason statusReason, JVMCI_TRAPS);\n+  void invalidate_nmethod_mirror(JVMCIObject mirror, bool deoptimze, nmethod::ChangeReason change_reason, JVMCI_TRAPS);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2199,1 +2199,1 @@\n-              old->make_not_entrant(nmethod::NMethodChangeReason::JVMCI_register_method);\n+              old->make_not_entrant(nmethod::ChangeReason::JVMCI_register_method);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3497,1 +3497,1 @@\n-      inv->make_not_entrant(nmethod::NMethodChangeReason::OSR_invalidation_of_lower_level);\n+      inv->make_not_entrant(nmethod::ChangeReason::OSR_invalidation_of_lower_level);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    nm->make_not_entrant(nmethod::NMethodChangeReason::set_native_function);\n+    nm->make_not_entrant(nmethod::ChangeReason::set_native_function);\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -797,1 +797,1 @@\n-                nm->make_not_entrant(nmethod::NMethodChangeReason::whitebox_deoptimization);\n+                nm->make_not_entrant(nmethod::ChangeReason::whitebox_deoptimization);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1816,1 +1816,1 @@\n-  nm->make_not_entrant(nmethod::NMethodChangeReason::missing_exception_handler);\n+  nm->make_not_entrant(nmethod::ChangeReason::missing_exception_handler);\n@@ -2445,1 +2445,1 @@\n-      if (!nm->make_not_entrant(nmethod::NMethodChangeReason::uncommon_trap)) {\n+      if (!nm->make_not_entrant(nmethod::ChangeReason::uncommon_trap)) {\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1342,1 +1342,1 @@\n-      nm->make_not_entrant(nmethod::NMethodChangeReason::zombie);\n+      nm->make_not_entrant(nmethod::ChangeReason::zombie);\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}