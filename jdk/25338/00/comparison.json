{"files":[{"patch":"@@ -803,1 +803,1 @@\n-    if (nm->make_not_entrant(\"C1 deoptimize\")) {\n+    if (nm->make_not_entrant(nmethod::C1_deoptimize)) {\n@@ -1095,1 +1095,1 @@\n-      nm->make_not_entrant(\"C1 code patch\");\n+      nm->make_not_entrant(nmethod::C1_codepatch);\n@@ -1343,1 +1343,1 @@\n-      nm->make_not_entrant(\"C1 deoptimize for patching\");\n+      nm->make_not_entrant(nmethod::C1_deoptimize_for_patching);\n@@ -1471,1 +1471,1 @@\n-  nm->make_not_entrant(\"C1 predicate failed trap\");\n+  nm->make_not_entrant(nmethod::C1_predicate_failed_trap);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -805,1 +805,1 @@\n-      nm->make_not_entrant(\"CI replay\");\n+      nm->make_not_entrant(nmethod::CI_replay);\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1364,1 +1364,1 @@\n-      nm->make_not_entrant(\"marked for deoptimization\");\n+      nm->make_not_entrant(nmethod::marked_for_deoptimization);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1967,3 +1967,1 @@\n-void nmethod::log_state_change(const char* reason) const {\n-  assert(reason != nullptr, \"Must provide a reason\");\n-\n+void nmethod::log_state_change(NMethodChangeReason reason) const {\n@@ -1973,1 +1971,1 @@\n-      xtty->begin_elem(\"make_not_entrant thread='%zu' reason='%s'\",\n+      xtty->begin_elem(\"make_not_entrant thread='%zu' reason='%d'\",\n@@ -1983,1 +1981,1 @@\n-  ss.print(\"made not entrant: %s\", reason);\n+  ss.print(\"made not entrant: %d\", reason);\n@@ -1998,3 +1996,1 @@\n-bool nmethod::make_not_entrant(const char* reason) {\n-  assert(reason != nullptr, \"Must provide a reason\");\n-\n+bool nmethod::make_not_entrant(NMethodChangeReason reason) {\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -472,0 +472,25 @@\n+  enum NMethodChangeReason : s4 {\n+    C1_deoptimize = 0,\n+    C1_codepatch,\n+    C1_predicate_failed_trap,\n+    C1_deoptimize_for_patching,\n+    CI_replay,\n+    marked_for_deoptimization,\n+    not_used,\n+    OSR_invalidation_for_compiling_with_C1,\n+    OSR_invalidation_back_branch,\n+    JVMCI_reprofile,\n+    JVMCI_materialize_virtual_object,\n+    JVMCI_invalidate_nmethod_mirror,\n+    JVMCI_register_method,\n+    OSR_invalidation_of_lower_level,\n+    set_native_function,\n+    whitebox_deoptimization,\n+    missing_exception_handler,\n+    uncommon_trap,\n+    zombie,\n+    JVMCI_invalidate_nmethod,\n+    JVMCI_new_installation,\n+    JVMCI_replacing_with_new_code,\n+  };\n+\n@@ -634,2 +659,2 @@\n-  bool  make_not_entrant(const char* reason);\n-  bool  make_not_used()    { return make_not_entrant(\"not used\"); }\n+  bool  make_not_entrant(NMethodChangeReason reason);\n+  bool  make_not_used()    { return make_not_entrant(nmethod::not_used); }\n@@ -948,1 +973,1 @@\n-  void log_state_change(const char* reason) const;\n+  void log_state_change(NMethodChangeReason reason) const;\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":28,"deletions":3,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -799,1 +799,1 @@\n-          osr_nm->make_not_entrant(\"OSR invalidation for compiling with C1\");\n+          osr_nm->make_not_entrant(nmethod::OSR_invalidation_for_compiling_with_C1);\n@@ -1204,1 +1204,1 @@\n-            nm->make_not_entrant(\"OSR invalidation, back branch\");\n+            nm->make_not_entrant(nmethod::OSR_invalidation_back_branch);\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"code\/nmethod.hpp\"\n@@ -1196,1 +1197,1 @@\n-        JVMCIENV->invalidate_nmethod_mirror(nmethod_mirror, true, JVMCI_CHECK_0);\n+        JVMCIENV->invalidate_nmethod_mirror(nmethod_mirror, true, nmethod::JVMCI_replacing_with_new_code, JVMCI_CHECK_0);\n@@ -1372,1 +1373,1 @@\n-    code->make_not_entrant(\"JVMCI reprofile\");\n+    code->make_not_entrant(nmethod::JVMCI_reprofile);\n@@ -1387,1 +1388,1 @@\n-  JVMCIENV->invalidate_nmethod_mirror(nmethod_mirror, deoptimize, JVMCI_CHECK);\n+  JVMCIENV->invalidate_nmethod_mirror(nmethod_mirror, deoptimize, nmethod::NMethodChangeReason::JVMCI_invalidate_nmethod, JVMCI_CHECK);\n@@ -1812,1 +1813,1 @@\n-    fst.current()->cb()->as_nmethod()->make_not_entrant(\"JVMCI materialize virtual objects\");\n+    fst.current()->cb()->as_nmethod()->make_not_entrant(nmethod::JVMCI_materialize_virtual_object);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1755,1 +1755,1 @@\n-void JVMCIEnv::invalidate_nmethod_mirror(JVMCIObject mirror, bool deoptimize, JVMCI_TRAPS) {\n+void JVMCIEnv::invalidate_nmethod_mirror(JVMCIObject mirror, bool deoptimize, nmethod::NMethodChangeReason statusReason, JVMCI_TRAPS) {\n@@ -1778,1 +1778,1 @@\n-    nm->make_not_entrant(\"JVMCI invalidate nmethod mirror\");\n+    nm->make_not_entrant(statusReason);\n@@ -1787,1 +1787,1 @@\n-    nm->make_not_entrant(\"JVMCI invalidate nmethod mirror\");\n+    nm->make_not_entrant(statusReason);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -465,1 +465,1 @@\n-  void invalidate_nmethod_mirror(JVMCIObject mirror, bool deoptimze, JVMCI_TRAPS);\n+  void invalidate_nmethod_mirror(JVMCIObject mirror, bool deoptimze, nmethod::NMethodChangeReason statusReason, JVMCI_TRAPS);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2199,1 +2199,1 @@\n-              old->make_not_entrant(\"JVMCI register method\");\n+              old->make_not_entrant(nmethod::JVMCI_register_method);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3497,1 +3497,1 @@\n-      inv->make_not_entrant(\"OSR invalidation of lower levels\");\n+      inv->make_not_entrant(nmethod::OSR_invalidation_of_lower_level);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    nm->make_not_entrant(\"set native function\");\n+    nm->make_not_entrant(nmethod::set_native_function);\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -797,1 +797,1 @@\n-                nm->make_not_entrant(\"Whitebox deoptimization\");\n+                nm->make_not_entrant(nmethod::whitebox_deoptimization);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1816,1 +1816,1 @@\n-  nm->make_not_entrant(\"missing exception handler\");\n+  nm->make_not_entrant(nmethod::missing_exception_handler);\n@@ -2445,1 +2445,1 @@\n-      if (!nm->make_not_entrant(\"uncommon trap\")) {\n+      if (!nm->make_not_entrant(nmethod::uncommon_trap)) {\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1342,1 +1342,1 @@\n-      nm->make_not_entrant(\"zombie\");\n+      nm->make_not_entrant(nmethod::zombie);\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}