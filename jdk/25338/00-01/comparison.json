{"files":[{"patch":"@@ -803,1 +803,1 @@\n-    if (nm->make_not_entrant(nmethod::C1_deoptimize)) {\n+    if (nm->make_not_entrant(nmethod::NMethodChangeReason::C1_deoptimize)) {\n@@ -1095,1 +1095,1 @@\n-      nm->make_not_entrant(nmethod::C1_codepatch);\n+      nm->make_not_entrant(nmethod::NMethodChangeReason::C1_codepatch);\n@@ -1343,1 +1343,1 @@\n-      nm->make_not_entrant(nmethod::C1_deoptimize_for_patching);\n+      nm->make_not_entrant(nmethod::NMethodChangeReason::C1_deoptimize_for_patching);\n@@ -1471,1 +1471,1 @@\n-  nm->make_not_entrant(nmethod::C1_predicate_failed_trap);\n+  nm->make_not_entrant(nmethod::NMethodChangeReason::C1_predicate_failed_trap);\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -805,1 +805,1 @@\n-      nm->make_not_entrant(nmethod::CI_replay);\n+      nm->make_not_entrant(nmethod::NMethodChangeReason::CI_replay);\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1364,1 +1364,1 @@\n-      nm->make_not_entrant(nmethod::marked_for_deoptimization);\n+      nm->make_not_entrant(nmethod::NMethodChangeReason::marked_for_deoptimization);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1971,2 +1971,2 @@\n-      xtty->begin_elem(\"make_not_entrant thread='%zu' reason='%d'\",\n-                       os::current_thread_id(), reason);\n+      xtty->begin_elem(\"make_not_entrant thread='%zu' reason='%s'\",\n+                       os::current_thread_id(), NMethodChangeReason_to_string(reason));\n@@ -1981,1 +1981,1 @@\n-  ss.print(\"made not entrant: %d\", reason);\n+  ss.print(\"made not entrant: %s\", NMethodChangeReason_to_string(reason));\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -472,2 +472,2 @@\n-  enum NMethodChangeReason : s4 {\n-    C1_deoptimize = 0,\n+  enum class NMethodChangeReason : u1 {\n+    C1_deoptimize,\n@@ -482,4 +482,0 @@\n-    JVMCI_reprofile,\n-    JVMCI_materialize_virtual_object,\n-    JVMCI_invalidate_nmethod_mirror,\n-    JVMCI_register_method,\n@@ -492,0 +488,4 @@\n+    JVMCI_reprofile,\n+    JVMCI_materialize_virtual_object,\n+    JVMCI_invalidate_nmethod_mirror,\n+    JVMCI_register_method,\n@@ -497,0 +497,51 @@\n+\n+  static const char* NMethodChangeReason_to_string(NMethodChangeReason reason) {\n+    if (reason == nmethod::NMethodChangeReason::C1_deoptimize) {\n+        return \"C1 deoptimized\";\n+    } else if (reason == nmethod::NMethodChangeReason::C1_codepatch) {\n+        return \"C1 code patch\";\n+    } else if (reason == nmethod::NMethodChangeReason::C1_predicate_failed_trap) {\n+        return \"C1 predicate failed trap\";\n+    } else if (reason == nmethod::NMethodChangeReason::C1_deoptimize_for_patching) {\n+        return \"C1 deoptimize for patching\";\n+    } else if (reason == nmethod::NMethodChangeReason::CI_replay) {\n+        return \"CI replay\";\n+    } else if (reason == nmethod::NMethodChangeReason::marked_for_deoptimization) {\n+        return \"marked for deoptimization\";\n+    } else if (reason == nmethod::NMethodChangeReason::not_used) {\n+        return \"not used\";\n+    } else if (reason == nmethod::NMethodChangeReason::OSR_invalidation_for_compiling_with_C1) {\n+        return \"OSR invalidation for compiling with C1\";\n+    } else if (reason == nmethod::NMethodChangeReason::OSR_invalidation_back_branch) {\n+        return \"OSR invalidation back branch\";\n+    } else if (reason == nmethod::NMethodChangeReason::JVMCI_reprofile) {\n+        return \"JVMCI reprofile\";\n+    } else if (reason == nmethod::NMethodChangeReason::JVMCI_materialize_virtual_object) {\n+        return \"JVMCI materialize virtual object\";\n+    } else if (reason == nmethod::NMethodChangeReason::JVMCI_invalidate_nmethod_mirror) {\n+        return \"JVMCI invalidate nmethod mirror\";\n+    } else if (reason == nmethod::NMethodChangeReason::JVMCI_register_method) {\n+        return \"JVMCI register method\";\n+    } else if (reason == nmethod::NMethodChangeReason::OSR_invalidation_of_lower_level) {\n+        return \"OSR invalidation of lower level\";\n+    } else if (reason == nmethod::NMethodChangeReason::set_native_function) {\n+        return \"set native function\";\n+    } else if (reason == nmethod::NMethodChangeReason::whitebox_deoptimization) {\n+        return \"whitebox deoptimization\";\n+    } else if (reason == nmethod::NMethodChangeReason::missing_exception_handler) {\n+        return \"missing exception handler\";\n+    } else if (reason == nmethod::NMethodChangeReason::uncommon_trap) {\n+        return \"uncommon trap\";\n+    } else if (reason == nmethod::NMethodChangeReason::JVMCI_invalidate_nmethod) {\n+        return \"JVMCI invalidate nmethod\";\n+    } else if (reason == nmethod::NMethodChangeReason::zombie) {\n+        return \"zombie\";\n+    } else if (reason == nmethod::NMethodChangeReason::JVMCI_new_installation) {\n+        return \"JVMCI new installation\";\n+    } else if (reason == nmethod::NMethodChangeReason::JVMCI_replacing_with_new_code) {\n+        return \"JVMCI replacing with new code\";\n+    } else {\n+        return \"Unknown\";\n+    }\n+  }\n+\n@@ -660,1 +711,1 @@\n-  bool  make_not_used()    { return make_not_entrant(nmethod::not_used); }\n+  bool  make_not_used()    { return make_not_entrant(NMethodChangeReason::not_used); }\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":58,"deletions":7,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -799,1 +799,1 @@\n-          osr_nm->make_not_entrant(nmethod::OSR_invalidation_for_compiling_with_C1);\n+          osr_nm->make_not_entrant(nmethod::NMethodChangeReason::OSR_invalidation_for_compiling_with_C1);\n@@ -1204,1 +1204,1 @@\n-            nm->make_not_entrant(nmethod::OSR_invalidation_back_branch);\n+            nm->make_not_entrant(nmethod::NMethodChangeReason::OSR_invalidation_back_branch);\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1197,1 +1197,1 @@\n-        JVMCIENV->invalidate_nmethod_mirror(nmethod_mirror, true, nmethod::JVMCI_replacing_with_new_code, JVMCI_CHECK_0);\n+        JVMCIENV->invalidate_nmethod_mirror(nmethod_mirror, true, nmethod::NMethodChangeReason::JVMCI_replacing_with_new_code, JVMCI_CHECK_0);\n@@ -1373,1 +1373,1 @@\n-    code->make_not_entrant(nmethod::JVMCI_reprofile);\n+    code->make_not_entrant(nmethod::NMethodChangeReason::JVMCI_reprofile);\n@@ -1813,1 +1813,1 @@\n-    fst.current()->cb()->as_nmethod()->make_not_entrant(nmethod::JVMCI_materialize_virtual_object);\n+    fst.current()->cb()->as_nmethod()->make_not_entrant(nmethod::NMethodChangeReason::JVMCI_materialize_virtual_object);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2199,1 +2199,1 @@\n-              old->make_not_entrant(nmethod::JVMCI_register_method);\n+              old->make_not_entrant(nmethod::NMethodChangeReason::JVMCI_register_method);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3497,1 +3497,1 @@\n-      inv->make_not_entrant(nmethod::OSR_invalidation_of_lower_level);\n+      inv->make_not_entrant(nmethod::NMethodChangeReason::OSR_invalidation_of_lower_level);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-    nm->make_not_entrant(nmethod::set_native_function);\n+    nm->make_not_entrant(nmethod::NMethodChangeReason::set_native_function);\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -797,1 +797,1 @@\n-                nm->make_not_entrant(nmethod::whitebox_deoptimization);\n+                nm->make_not_entrant(nmethod::NMethodChangeReason::whitebox_deoptimization);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1816,1 +1816,1 @@\n-  nm->make_not_entrant(nmethod::missing_exception_handler);\n+  nm->make_not_entrant(nmethod::NMethodChangeReason::missing_exception_handler);\n@@ -2445,1 +2445,1 @@\n-      if (!nm->make_not_entrant(nmethod::uncommon_trap)) {\n+      if (!nm->make_not_entrant(nmethod::NMethodChangeReason::uncommon_trap)) {\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1342,1 +1342,1 @@\n-      nm->make_not_entrant(nmethod::zombie);\n+      nm->make_not_entrant(nmethod::NMethodChangeReason::zombie);\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}