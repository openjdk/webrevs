{"files":[{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Label;\n+\n+\/*\n+ * @test\n+ * @bug 4085599\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Test default location for frame\n+ * @run main\/manual DefaultLocationTest\n+ *\/\n+\n+public class DefaultLocationTest {\n+    private static Frame f;\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                A small frame containing the label 'Hello World' should\n+                appear in the upper left hand corner of the screen. The\n+                exact location is dependent upon the window manager.\n+\n+                On Linux and Mac machines, the default location for frame\n+                is below the taskbar or close to top-left corner.\n+\n+                Upon test completion, click Pass or Fail appropriately.\"\"\";\n+\n+        PassFailJFrame passFailJFrame = new PassFailJFrame(\"DefaultLocationTest \" +\n+                \" Instructions\", INSTRUCTIONS, 5, 10, 40);\n+        EventQueue.invokeAndWait(DefaultLocationTest::createAndShowUI);\n+        passFailJFrame.awaitAndCheck();\n+    }\n+\n+    private static void createAndShowUI() {\n+        f = new Frame(\"DefaultLocation\");\n+        f.add(\"Center\", new Label(\"Hello World\"));\n+        f.pack();\n+        PassFailJFrame.addTestWindow(f);\n+        PassFailJFrame.positionTestWindow(\n+                null, PassFailJFrame.Position.HORIZONTAL);\n+        f.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/DefaultLocationTest.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n+\n+\/*\n+ * @test\n+ * @bug 4237529\n+ * @key headful\n+ * @summary Test repainting of an empty frame\n+ * @run main EmptyFrameTest\n+ *\/\n+\n+public class EmptyFrameTest {\n+    private static Frame f;\n+    private static Robot robot;\n+    private static volatile Point p;\n+    private static volatile Dimension d;\n+    private static final int TOLERANCE = 5;\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                createAndShowUI();\n+            });\n+            robot.delay(1000);\n+            f.setSize(50, 50);\n+            robot.delay(500);\n+            EventQueue.invokeAndWait(() -> {\n+                p = f.getLocation();\n+                d = f.getSize();\n+            });\n+            Rectangle rect = new Rectangle(p, d);\n+            BufferedImage img = robot.createScreenCapture(rect);\n+            if (chkImgBackgroundColor(img)) {\n+                try {\n+                    ImageIO.write(img, \"png\", new File(\"Frame.png\"));\n+                } catch (IOException ignored) {}\n+                throw new RuntimeException(\"Frame doesn't repaint itself on resize\");\n+            }\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        f = new Frame(\"EmptyFrameTest\");\n+        f.setUndecorated(true);\n+        f.setBackground(Color.RED);\n+        f.setVisible(true);\n+    }\n+\n+    private static boolean chkImgBackgroundColor(BufferedImage img) {\n+        for (int x = 1; x < img.getWidth() - 1; ++x) {\n+            for (int y = 1; y < img.getHeight() - 1; ++y) {\n+                Color c = new Color(img.getRGB(x, y));\n+                if ((c.getRed() - Color.RED.getRed()) > TOLERANCE) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/EmptyFrameTest.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Frame;\n+\n+\/*\n+ * @test\n+ * @bug 4173503\n+ * @library \/java\/awt\/regtesthelpers\n+ * @requires (os.family == \"windows\")\n+ * @build PassFailJFrame\n+ * @summary Tests that frame layout is performed when frame is maximized from taskbar\n+ * @run main\/manual FrameLayoutTest\n+ *\/\n+\n+public class FrameLayoutTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                Right-click on the taskbar button for this test. In the menu appeared,\n+                choose Maximize. The frame will be maximized. Check if buttons inside\n+                the frame are laid out properly, i.e. they occupy the frame entirely.\n+\n+                If so, test passes. If buttons occupy small rectangle in the top left\n+                corner, test fails.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Frame's Layout Test Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(FrameLayoutTest::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        Frame f = new Frame(\"Maximize Test\");\n+        f.add(new Button(\"North\"),BorderLayout.NORTH);\n+        f.add(new Button(\"South\"),BorderLayout.SOUTH);\n+        f.add(new Button(\"East\"),BorderLayout.EAST);\n+        f.add(new Button(\"West\"),BorderLayout.WEST);\n+        f.add(new Button(\"Cent\"),BorderLayout.CENTER);\n+        f.pack();\n+        f.setState(Frame.ICONIFIED);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameLayoutTest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+\n+\/*\n+ * @test\n+ * @bug 4320050\n+ * @key headful\n+ * @summary Minimum size for java.awt.Frame is not being enforced.\n+ * @run main FrameSetMinimumSizeTest\n+ *\/\n+\n+public class FrameSetMinimumSizeTest {\n+    private static Frame f;\n+    private static volatile boolean passed;\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> {\n+            try {\n+                createAndShowUI();\n+\n+                f.setSize(200, 200);\n+                passed = verifyFrameSize(new Dimension(300, 300));\n+                isFrameSizeOk(passed);\n+\n+                f.setSize(200, 400);\n+                passed = verifyFrameSize(new Dimension(300, 400));\n+                isFrameSizeOk(passed);\n+\n+                f.setSize(400, 200);\n+                passed = verifyFrameSize(new Dimension(400, 300));\n+                isFrameSizeOk(passed);\n+\n+                f.setMinimumSize(null);\n+\n+                f.setSize(200, 200);\n+                passed = verifyFrameSize(new Dimension(200, 200));\n+                isFrameSizeOk(passed);\n+            } finally {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            }\n+        });\n+    }\n+\n+    private static void createAndShowUI() {\n+        f = new Frame(\"Minimum Size Test\");\n+        f.setSize(300, 300);\n+        f.setMinimumSize(new Dimension(300, 300));\n+        f.setVisible(true);\n+    }\n+\n+    private static boolean verifyFrameSize(Dimension expected) {\n+\n+        if (f.getSize().width != expected.width || f.getSize().height != expected.height) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    private static void isFrameSizeOk(boolean passed) {\n+        if (!passed) {\n+            throw new RuntimeException(\"Frame's setMinimumSize not honoured for the\" +\n+                    \" frame size: \" + f.getSize());\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameSetMinimumSizeTest.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.TextField;\n+\n+\/*\n+ * @test\n+ * @bug 4097744\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary packing a frame twice stops it resizing\n+ * @run main\/manual PackTwiceTest\n+ *\/\n+\n+public class PackTwiceTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. You would see a Frame titled 'TestFrame'\n+                2. The Frame displays a text as below:\n+                    'I am a lengthy sentence...can you see me?'\n+                3. If you can see the full text without resizing the frame\n+                   using mouse, press 'Pass' else press 'Fail'.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"PackTwiceTest Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(PackTwiceTest::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        Frame f = new Frame(\"PackTwiceTest TestFrame\");\n+        TextField tf = new TextField();\n+        f.add(tf, \"Center\");\n+        tf.setText(\"I am a short sentence\");\n+        f.pack();\n+        f.pack();\n+        tf.setText(\"I am a lengthy sentence...can you see me?\");\n+        f.pack();\n+        f.requestFocus();\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/PackTwiceTest.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"}]}