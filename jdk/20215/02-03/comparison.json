{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import java.util.*;\n@@ -43,0 +44,17 @@\n+    private static String[] args(String... add) {\n+        List<String> args = new ArrayList<>();\n+\n+         \/\/ Use PerMethodTrapLimit=0 to compile all branches in the intrinsics.\n+        args.add(\"-XX:PerMethodTrapLimit=0\");\n+\n+        \/\/ Forcefully inline all methods to reach the intrinsic code.\n+        args.add(\"-XX:CompileCommand=inline,compiler.c2.irTests.gc.ReferenceRefersToTests::*\");\n+        args.add(\"-XX:CompileCommand=inline,java.lang.ref.Reference::*\");\n+        args.add(\"-XX:CompileCommand=inline,java.lang.ref.PhantomReference::*\");\n+\n+        \/\/ Mix in test config code.\n+        args.addAll(Arrays.asList(add));\n+\n+        return args.toArray(new String[0]);\n+    }\n+\n@@ -46,2 +64,0 @@\n-        \/\/ Use PerMethodTrapLimit=0 to compile all branches in the intrinsics.\n-\n@@ -51,2 +67,1 @@\n-            framework.addScenarios(new Scenario(idx++,\n-                \"-XX:PerMethodTrapLimit=0\",\n+            framework.addScenarios(new Scenario(idx++, args(\n@@ -54,1 +69,1 @@\n-            ));\n+            )));\n@@ -58,2 +73,1 @@\n-            framework.addScenarios(new Scenario(idx++,\n-                \"-XX:PerMethodTrapLimit=0\",\n+            framework.addScenarios(new Scenario(idx++, args(\n@@ -61,1 +75,1 @@\n-            ));\n+            )));\n@@ -66,2 +80,1 @@\n-            framework.addScenarios(new Scenario(idx++,\n-                \"-XX:PerMethodTrapLimit=0\",\n+            framework.addScenarios(new Scenario(idx++, args(\n@@ -69,1 +82,1 @@\n-            ));\n+            )));\n@@ -76,2 +89,1 @@\n-            framework.addScenarios(new Scenario(idx++,\n-                \"-XX:PerMethodTrapLimit=0\",\n+            framework.addScenarios(new Scenario(idx++, args(\n@@ -82,1 +94,1 @@\n-            ));\n+            )));\n@@ -86,2 +98,1 @@\n-            framework.addScenarios(new Scenario(idx++,\n-                \"-XX:PerMethodTrapLimit=0\",\n+            framework.addScenarios(new Scenario(idx++, args(\n@@ -89,1 +100,1 @@\n-            ));\n+            )));\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/gc\/ReferenceRefersToTests.java","additions":28,"deletions":17,"binary":false,"changes":45,"status":"modified"}]}