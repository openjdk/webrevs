{"files":[{"patch":"@@ -868,0 +868,5 @@\n+bool CDSConfig::current_thread_is_dumper() {\n+  Thread* t = Thread::current();\n+  return t != nullptr && t == _dumper_thread;\n+}\n+\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -219,0 +219,1 @@\n+  static bool current_thread_is_dumper() NOT_CDS_RETURN_(false);\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+static bool _stop_appending = false;\n@@ -74,0 +75,2 @@\n+  \/\/ This function can be called by concurrent Java threads, even after\n+  \/\/ LambdaFormInvokers::regenerate_holder_classes() has been called.\n@@ -75,0 +78,3 @@\n+  if (_stop_appending) {\n+    return;\n+  }\n@@ -115,6 +121,0 @@\n-  PrintLambdaFormMessage plm;\n-  if (_lambdaform_lines == nullptr || _lambdaform_lines->length() == 0) {\n-    log_info(aot)(\"Nothing to regenerate for holder classes\");\n-    return;\n-  }\n-\n@@ -130,3 +130,1 @@\n-  HandleMark hm(THREAD);\n-  int len = _lambdaform_lines->length();\n-  objArrayHandle list_lines;\n+  assert(CDSConfig::current_thread_is_dumper(), \"not supposed to be called from other threads\");\n@@ -134,0 +132,1 @@\n+    \/\/ Stop other threads from recording into _lambdaform_lines.\n@@ -135,7 +134,17 @@\n-    list_lines = oopFactory::new_objArray_handle(vmClasses::String_klass(), len, CHECK);\n-    for (int i = 0; i < len; i++) {\n-      Handle h_line = java_lang_String::create_from_str(_lambdaform_lines->at(i), CHECK);\n-      list_lines->obj_at_put(i, h_line());\n-    }\n-  } \/\/ Before calling into java, release vm lock.\n-  \/\/\n+    _stop_appending = true;\n+  }\n+\n+  PrintLambdaFormMessage plm;\n+  if (_lambdaform_lines == nullptr || _lambdaform_lines->length() == 0) {\n+    log_info(aot)(\"Nothing to regenerate for lambda form holder classes\");\n+    return;\n+  }\n+\n+  HandleMark hm(THREAD);\n+  int len = _lambdaform_lines->length();\n+  objArrayHandle list_lines = oopFactory::new_objArray_handle(vmClasses::String_klass(), len, CHECK);\n+  for (int i = 0; i < len; i++) {\n+    Handle h_line = java_lang_String::create_from_str(_lambdaform_lines->at(i), CHECK);\n+    list_lines->obj_at_put(i, h_line());\n+  }\n+\n@@ -235,0 +244,1 @@\n+  assert(SafepointSynchronize::is_at_safepoint(), \"no concurrent update to _lambdaform_lines\");\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":26,"deletions":16,"binary":false,"changes":42,"status":"modified"}]}