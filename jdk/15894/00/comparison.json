{"files":[{"patch":"@@ -58,0 +58,1 @@\n+\t  $$(eval $1_TYPE := OBJECT)\n@@ -60,0 +61,1 @@\n+\t  $$(eval $1_TYPE := $$$$(shell $(TR) '[:lower:]' '[:upper:]' <<< $$$$($1_Type)))\n@@ -64,1 +66,1 @@\n-\t    $$($1_ARGS) -i$$< -o$$@\n+\t    -DTYPE=$$($1_TYPE) $$($1_ARGS) -i$$< -o$$@\n","filename":"make\/modules\/java.base\/gensrc\/GensrcVarHandles.gmk","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -208,4 +208,0 @@\n-        int aoffset = UNSAFE.arrayBaseOffset(arrayClass);\n-        int ascale = UNSAFE.arrayIndexScale(arrayClass);\n-        int ashift = 31 - Integer.numberOfLeadingZeros(ascale);\n-\n@@ -213,1 +209,6 @@\n-            return maybeAdapt(new VarHandleReferences.Array(aoffset, ashift, arrayClass));\n+            int aoffset = UNSAFE.arrayBaseOffset(arrayClass);\n+            int ascale = UNSAFE.arrayIndexScale(arrayClass);\n+            int ashift = 31 - Integer.numberOfLeadingZeros(ascale);\n+            @SuppressWarnings(\"unchecked\")\n+            var oArrayClass = (Class<? extends Object[]>) arrayClass;\n+            return maybeAdapt(new VarHandleReferences.Array(aoffset, ashift, oArrayClass));\n@@ -216,1 +217,1 @@\n-            return maybeAdapt(new VarHandleBooleans.Array(aoffset, ashift));\n+            return maybeAdapt(VarHandleBooleans.Array.INSTANCE);\n@@ -219,1 +220,1 @@\n-            return maybeAdapt(new VarHandleBytes.Array(aoffset, ashift));\n+            return maybeAdapt(VarHandleBytes.Array.INSTANCE);\n@@ -222,1 +223,1 @@\n-            return maybeAdapt(new VarHandleShorts.Array(aoffset, ashift));\n+            return maybeAdapt(VarHandleShorts.Array.INSTANCE);\n@@ -225,1 +226,1 @@\n-            return maybeAdapt(new VarHandleChars.Array(aoffset, ashift));\n+            return maybeAdapt(VarHandleChars.Array.INSTANCE);\n@@ -228,1 +229,1 @@\n-            return maybeAdapt(new VarHandleInts.Array(aoffset, ashift));\n+            return maybeAdapt(VarHandleInts.Array.INSTANCE);\n@@ -231,1 +232,1 @@\n-            return maybeAdapt(new VarHandleLongs.Array(aoffset, ashift));\n+            return maybeAdapt(VarHandleLongs.Array.INSTANCE);\n@@ -234,1 +235,1 @@\n-            return maybeAdapt(new VarHandleFloats.Array(aoffset, ashift));\n+            return maybeAdapt(VarHandleFloats.Array.INSTANCE);\n@@ -237,1 +238,1 @@\n-            return maybeAdapt(new VarHandleDoubles.Array(aoffset, ashift));\n+            return maybeAdapt(VarHandleDoubles.Array.INSTANCE);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import jdk.internal.misc.Unsafe;\n@@ -733,0 +734,1 @@\n+#if[Object]\n@@ -735,2 +737,1 @@\n-#if[Object]\n-        final Class<{#if[Object]??:$type$[]}> arrayType;\n+        final Class<? extends Object[]> arrayType;\n@@ -738,0 +739,3 @@\n+#else[Object]\n+        private static final int BASE = Unsafe.ARRAY_$TYPE$_BASE_OFFSET;\n+        private static final int SHIFT = 31 - Integer.numberOfLeadingZeros(Unsafe.ARRAY_$TYPE$_INDEX_SCALE);\n@@ -740,2 +744,3 @@\n-        Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}) {\n-            this(abase, ashift{#if[Object]?, arrayType}, false);\n+#if[Object]\n+        Array(int abase, int ashift, Class<? extends Object[]> arrayType) {\n+            this(abase, ashift, arrayType, false);\n@@ -744,1 +749,2 @@\n-        private Array(int abase, int ashift{#if[Object]?, Class<?> arrayType}, boolean exact) {\n+#end[Object]\n+        private Array({#if[Object]?int abase, int ashift, Class<? extends Object[]> arrayType, }boolean exact) {\n@@ -746,0 +752,1 @@\n+#if[Object]\n@@ -748,2 +755,1 @@\n-#if[Object]\n-            this.arrayType = {#if[Object]?arrayType:$type$[].class};\n+            this.arrayType = arrayType;\n@@ -758,1 +764,1 @@\n-                : new Array(abase, ashift{#if[Object]?, arrayType}, true);\n+                : {#if[Object]?new Array(abase, ashift, arrayType, true):EXACT_INSTANCE};\n@@ -765,1 +771,1 @@\n-                : new Array(abase, ashift{#if[Object]?, arrayType}, false);\n+                : {#if[Object]?new Array(abase, ashift, arrayType, false):INSTANCE};\n@@ -802,0 +808,1 @@\n+\n@@ -803,0 +810,4 @@\n+        @ForceInline\n+        static long offset({#if[Object]?Array handle, Object:$type$}[] array, int index)  {\n+            return (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << {#if[Object]?handle.ashift:SHIFT}) + {#if[Object]?handle.abase:BASE};\n+        }\n@@ -806,1 +817,0 @@\n-            Array handle = (Array)ob;\n@@ -808,1 +818,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -817,1 +828,0 @@\n-            Array handle = (Array)ob;\n@@ -819,1 +829,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -828,1 +839,0 @@\n-            Array handle = (Array)ob;\n@@ -830,1 +840,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -835,1 +846,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase);\n+                    offset({#if[Object]?handle, }array, index));\n@@ -840,1 +851,0 @@\n-            Array handle = (Array)ob;\n@@ -842,1 +852,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -847,1 +858,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -853,1 +864,0 @@\n-            Array handle = (Array)ob;\n@@ -855,1 +865,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -860,1 +871,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase);\n+                    offset({#if[Object]?handle, }array, index));\n@@ -865,1 +876,0 @@\n-            Array handle = (Array)ob;\n@@ -867,1 +877,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -872,1 +883,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -878,1 +889,0 @@\n-            Array handle = (Array)ob;\n@@ -880,1 +890,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -885,1 +896,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase);\n+                    offset({#if[Object]?handle, }array, index));\n@@ -890,1 +901,0 @@\n-            Array handle = (Array)ob;\n@@ -892,1 +902,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -897,1 +908,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -904,1 +915,0 @@\n-            Array handle = (Array)ob;\n@@ -906,1 +916,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -911,1 +922,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -918,1 +929,0 @@\n-            Array handle = (Array)ob;\n@@ -920,1 +930,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -925,1 +936,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -932,1 +943,0 @@\n-            Array handle = (Array)ob;\n@@ -934,1 +944,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -939,1 +950,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -946,1 +957,0 @@\n-            Array handle = (Array)ob;\n@@ -948,1 +958,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -953,1 +964,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -960,1 +971,0 @@\n-            Array handle = (Array)ob;\n@@ -962,1 +972,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -967,1 +978,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -974,1 +985,0 @@\n-            Array handle = (Array)ob;\n@@ -976,1 +986,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -981,1 +992,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -988,1 +999,0 @@\n-            Array handle = (Array)ob;\n@@ -990,1 +1000,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -995,1 +1006,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -1002,1 +1013,0 @@\n-            Array handle = (Array)ob;\n@@ -1004,1 +1014,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -1009,1 +1020,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -1016,1 +1027,0 @@\n-            Array handle = (Array)ob;\n@@ -1018,1 +1028,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -1023,1 +1034,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -1029,1 +1040,0 @@\n-            Array handle = (Array)ob;\n@@ -1031,1 +1041,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -1036,1 +1047,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -1042,1 +1053,0 @@\n-            Array handle = (Array)ob;\n@@ -1044,1 +1054,2 @@\n-            Object[] array = (Object[]) handle.arrayType.cast(oarray);\n+            Array handle = (Array)ob;\n+            Object[] array = handle.arrayType.cast(oarray);\n@@ -1049,1 +1060,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset({#if[Object]?handle, }array, index),\n@@ -1057,1 +1068,0 @@\n-            Array handle = (Array)ob;\n@@ -1060,1 +1070,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset(array, index),\n@@ -1066,1 +1076,0 @@\n-            Array handle = (Array)ob;\n@@ -1069,1 +1078,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset(array, index),\n@@ -1075,1 +1084,0 @@\n-            Array handle = (Array)ob;\n@@ -1078,1 +1086,1 @@\n-                    (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                    offset(array, index),\n@@ -1086,1 +1094,0 @@\n-            Array handle = (Array)ob;\n@@ -1089,1 +1096,1 @@\n-                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                                       offset(array, index),\n@@ -1095,1 +1102,0 @@\n-            Array handle = (Array)ob;\n@@ -1098,1 +1104,1 @@\n-                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                                       offset(array, index),\n@@ -1104,1 +1110,0 @@\n-            Array handle = (Array)ob;\n@@ -1107,1 +1112,1 @@\n-                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                                       offset(array, index),\n@@ -1113,1 +1118,0 @@\n-            Array handle = (Array)ob;\n@@ -1116,1 +1120,1 @@\n-                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                                       offset(array, index),\n@@ -1122,1 +1126,0 @@\n-            Array handle = (Array)ob;\n@@ -1125,1 +1128,1 @@\n-                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                                       offset(array, index),\n@@ -1131,1 +1134,0 @@\n-            Array handle = (Array)ob;\n@@ -1134,1 +1136,1 @@\n-                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                                       offset(array, index),\n@@ -1140,1 +1142,0 @@\n-            Array handle = (Array)ob;\n@@ -1143,1 +1144,1 @@\n-                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                                       offset(array, index),\n@@ -1149,1 +1150,0 @@\n-            Array handle = (Array)ob;\n@@ -1152,1 +1152,1 @@\n-                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                                       offset(array, index),\n@@ -1158,1 +1158,0 @@\n-            Array handle = (Array)ob;\n@@ -1161,1 +1160,1 @@\n-                                       (((long) Preconditions.checkIndex(index, array.length, Preconditions.AIOOBE_FORMATTER)) << handle.ashift) + handle.abase,\n+                                       offset(array, index),\n@@ -1167,0 +1166,6 @@\n+#if[!Object]\n+\n+        \/\/ Must be initialized after FORM is ready\n+        static final Array INSTANCE = new Array(false);\n+        static final Array EXACT_INSTANCE = new Array(true);\n+#end[!Object]\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandle.java.template","additions":93,"deletions":88,"binary":false,"changes":181,"status":"modified"}]}