{"files":[{"patch":"@@ -46,4 +46,3 @@\n-    static int rand_numI = G.uniformInts(Integer.MIN_VALUE, Integer.MAX_VALUE).next();\n-    static final int rand_bndI1 = G.uniformInts(-0xFF, 0xFF).next();\n-    static final int rand_bndI2 = G.uniformInts(-0xFFFFF, 0xFFFFF).next();\n-    static final int rand_popcI1 = G.uniformInts(0, 4).next();\n+    static final int rand_bndI1 = G.ints().next();\n+    static final int rand_bndI2 = G.ints().next();\n+    static final int rand_popcI1 = G.uniformInts(0, 32).next();\n@@ -52,4 +51,3 @@\n-    static long rand_numL = G.uniformLongs(Long.MIN_VALUE, Long.MAX_VALUE).next();\n-    static final long rand_bndL1 = G.uniformLongs(-0xFFL, 0xFFL).next();\n-    static final long rand_bndL2 = G.uniformLongs(-0xFFFFFFL, 0xFFFFFF).next();\n-    static final long rand_popcL1 = G.uniformLongs(0, 4).next();\n+    static final long rand_bndL1 = G.longs().next();\n+    static final long rand_bndL2 = G.longs().next();\n+    static final long rand_popcL1 = G.uniformLongs(0, 32).next();\n@@ -139,1 +137,2 @@\n-    public int testPopCountRandomInt() {\n+    public void testPopCountRandomInt(int rand_numI) {\n+        int res = 0;\n@@ -142,1 +141,1 @@\n-            return 1;\n+            res = 1;\n@@ -144,1 +143,1 @@\n-            return -1;\n+            res = -1;\n@@ -146,0 +145,1 @@\n+        checkPopCountRandomInt(rand_numI, res);\n@@ -148,2 +148,1 @@\n-    @Check(test = \"testPopCountRandomInt\")\n-    public void checkPopCountRandomInt(int res) {\n+    public void checkPopCountRandomInt(int rand_numI, int res) {\n@@ -159,0 +158,6 @@\n+    @Run(test=\"testPopCountRandomInt\")\n+    public void runPopCountRandomInt() {\n+        testPopCountRandomInt(G.ints().next());\n+    }\n+\n+\n@@ -160,1 +165,2 @@\n-    public long testPopCountRandomLong() {\n+    public void testPopCountRandomLong(long rand_numL) {\n+        long res = 0;\n@@ -163,1 +169,1 @@\n-            return 1L;\n+            res = 1L;\n@@ -165,1 +171,1 @@\n-            return -1L;\n+            res = -1L;\n@@ -167,0 +173,1 @@\n+        checkPopCountRandomLong(rand_numL, res);\n@@ -169,2 +176,1 @@\n-    @Check(test = \"testPopCountRandomLong\")\n-    public void checkPopCountRandomLong(long res) {\n+    public void checkPopCountRandomLong(long rand_numL, long res) {\n@@ -180,0 +186,5 @@\n+    @Run(test=\"testPopCountRandomLong\")\n+    public void runPopCountRandomLong() {\n+        testPopCountRandomLong(G.longs().next());\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestPopCountValueTransforms.java","additions":29,"deletions":18,"binary":false,"changes":47,"status":"modified"}]}