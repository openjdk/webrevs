{"files":[{"patch":"@@ -46,11 +46,11 @@\n-    static int rand_numI = G.uniformInts(0, Integer.MAX_VALUE).next();\n-    static final int rand_bndI1 = G.uniformInts(0xF, Integer.MAX_VALUE).next();\n-    static final int rand_bndI2 = G.uniformInts(0xFF, Integer.MAX_VALUE).next();\n-    static final int rand_popcI1 = G.uniformInts(0, 2).next();\n-    static final int rand_popcI2 = G.uniformInts(10, 20).next();\n-\n-    static long rand_numL = G.uniformLongs(0, Long.MAX_VALUE).next();\n-    static final long rand_bndL1 = G.uniformLongs(0xFL, Long.MAX_VALUE).next();\n-    static final long rand_bndL2 = G.uniformLongs(0xFFL, Long.MAX_VALUE).next();\n-    static final long rand_popcL1 = G.uniformLongs(0, 3).next();\n-    static final long rand_popcL2 = G.uniformLongs(20, 40).next();\n+    static int rand_numI = G.uniformInts(Integer.MIN_VALUE, Integer.MAX_VALUE).next();\n+    static final int rand_bndI1 = G.uniformInts(-0xFF, 0xFF).next();\n+    static final int rand_bndI2 = G.uniformInts(-0xFFFFF, 0xFFFFF).next();\n+    static final int rand_popcI1 = G.uniformInts(0, 4).next();\n+    static final int rand_popcI2 = G.uniformInts(0, 32).next();\n+\n+    static long rand_numL = G.uniformLongs(Long.MIN_VALUE, Long.MAX_VALUE).next();\n+    static final long rand_bndL1 = G.uniformLongs(-0xFFL, 0xFFL).next();\n+    static final long rand_bndL2 = G.uniformLongs(-0xFFFFFFL, 0xFFFFFF).next();\n+    static final long rand_popcL1 = G.uniformLongs(0, 4).next();\n+    static final long rand_popcL2 = G.uniformLongs(0, 32).next();\n@@ -150,8 +150,5 @@\n-        if (res == 1) {\n-            int exp = 0;\n-            int num = Math.clamp(rand_numI, Math.min(rand_bndI1, rand_bndI2), Math.max(rand_bndI1, rand_bndI2));\n-            while(num != 0) {\n-                num &= (num - 1);\n-                exp++;\n-            }\n-            Verify.checkEQ(exp >= rand_popcI1 && exp < rand_popcI2, true);\n+        int exp = 0;\n+        int num = Math.clamp(rand_numI, Math.min(rand_bndI1, rand_bndI2), Math.max(rand_bndI1, rand_bndI2));\n+        while(num != 0) {\n+            num &= (num - 1);\n+            exp++;\n@@ -159,0 +156,1 @@\n+        Verify.checkEQ(exp >= rand_popcI1 && exp < rand_popcI2 ? 1 : -1, res);\n@@ -173,8 +171,5 @@\n-        if (res == 1) {\n-            int exp = 0;\n-            long num = Math.clamp(rand_numL, Math.min(rand_bndL1, rand_bndL2), Math.max(rand_bndL1, rand_bndL2));\n-            while(num != 0) {\n-                num &= (num - 1L);\n-                exp++;\n-            }\n-            Verify.checkEQ(exp >= rand_popcL1 && exp < rand_popcL2, true);\n+        int exp = 0;\n+        long num = Math.clamp(rand_numL, Math.min(rand_bndL1, rand_bndL2), Math.max(rand_bndL1, rand_bndL2));\n+        while(num != 0) {\n+            num &= (num - 1L);\n+            exp++;\n@@ -182,0 +177,1 @@\n+        Verify.checkEQ(exp >= rand_popcL1 && exp < rand_popcL2 ? 1L : -1L, res);\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestPopCountValueTransforms.java","additions":23,"deletions":27,"binary":false,"changes":50,"status":"modified"}]}