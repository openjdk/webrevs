[{"commit":{"message":"Review comments resolutions"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"}],"sha":"49cdf2963376859ff459b9338e9b535513ca2326"},{"commit":{"message":"Review comments resolution"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"}],"sha":"85b10e886aa1062de5451cdb892e701468ae30bd"},{"commit":{"message":"Update countbitsnode.cpp"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"}],"sha":"e206ccc31ccd5a0c4b71032f89af08719f95be16"},{"commit":{"message":"Update TestPopCountValueTransforms.java"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestPopCountValueTransforms.java"}],"sha":"92cf2fad2e4ebf18f79f2c6a977a650ccefd49c8"},{"commit":{"message":"Review comments resolutions"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestPopCountValueTransforms.java"}],"sha":"367622bf32063037c46525e24ff0710791b5ce18"},{"commit":{"message":"Extending the random ranges"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestPopCountValueTransforms.java"}],"sha":"278f1dc847422b1c9374f312a3a9f2e122cacde9"},{"commit":{"message":"Adding random bound test point"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestPopCountValueTransforms.java"}],"sha":"a7f9b79c7d9941b48913536ebfb2f09d64383763"},{"commit":{"message":"Update TestPopCountValueTransforms.java"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestPopCountValueTransforms.java"}],"sha":"9e3957deebbfc12ede8109b1ea6b5a0e90cb1db4"},{"commit":{"message":"review resoultions"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestPopCountValueTransforms.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/PopCountValueTransform.java"}],"sha":"f1095b581c4e515179d7f496ff42e260df503185"},{"commit":{"message":"Update src\/hotspot\/share\/opto\/countbitsnode.cpp\n\nCo-authored-by: Emanuel Peter <emanuel.peter@oracle.com>"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"}],"sha":"36ecb5d186e711b40bf5de9cc6e7a1dd99f6850b"},{"commit":{"message":"Update countbitsnode.cpp"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"}],"sha":"52ae6bc89cfa335bb03276575261835fca70ec0b"},{"commit":{"message":"New IR test addition and review resolutions"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestPopCountValueTransforms.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/PopCountValueTransform.java"}],"sha":"a68fbc08c31886001787df77a841851de0585fc9"},{"commit":{"message":"8365205: C2: Optimize popcount value computation using knownbits"},"files":[{"filename":"src\/hotspot\/share\/opto\/countbitsnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/countbitsnode.hpp"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/PopCountValueTransform.java"}],"sha":"c83be331c3b64b8c7ba9e28d7dab0ee3b3e9d7f0"}]