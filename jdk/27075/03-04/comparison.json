{"files":[{"patch":"@@ -56,1 +56,2 @@\n-    @Run(test = {\"testPopCountElisionLong1\"}, mode = RunMode.STANDALONE)\n+    @Warmup(10000)\n+    @Run(test = {\"testPopCountElisionLong1\"})\n@@ -66,1 +67,1 @@\n-    @IR(counts = {IRNode.POPCOUNT_L, \" >0 \"})\n+    @IR(counts = {IRNode.POPCOUNT_L, \" 1 \"})\n@@ -76,1 +77,2 @@\n-    @Run(test = {\"testPopCountElisionLong2\"}, mode = RunMode.STANDALONE)\n+    @Warmup(10000)\n+    @Run(test = {\"testPopCountElisionLong2\"})\n@@ -96,1 +98,1 @@\n-    @Run(test = {\"testPopCountElisionInt1\"}, mode = RunMode.STANDALONE)\n+    @Run(test = {\"testPopCountElisionInt1\"})\n@@ -106,1 +108,1 @@\n-    @IR(counts = {IRNode.POPCOUNT_I, \" >0 \"})\n+    @IR(counts = {IRNode.POPCOUNT_I, \" 1 \"})\n@@ -116,1 +118,1 @@\n-    @Run(test = {\"testPopCountElisionInt2\"}, mode = RunMode.STANDALONE)\n+    @Run(test = {\"testPopCountElisionInt2\"})\n@@ -148,1 +150,1 @@\n-        TestFramework.runWithFlags(\"-XX:-TieredCompilation\", \"-XX:CompileThresholdScaling=0.2\");\n+        TestFramework.run();\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestPopCountValueTransforms.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -35,10 +35,0 @@\n-    @Benchmark\n-    public int StockKernelInt() {\n-        int res = 0;\n-        for (int i = lower_bound; i < upper_bound; i++) {\n-            int constrained_i = i & 0xFFFF;\n-            res += constrained_i;\n-        }\n-        return res;\n-    }\n-\n@@ -58,10 +48,0 @@\n-    @Benchmark\n-    public long StockKernelLong() {\n-        long res = 0;\n-        for (int i = lower_bound; i < upper_bound; i++) {\n-            long constrained_i = i & 0xFFFFFFL;\n-            res += constrained_i;\n-        }\n-        return res;\n-    }\n-\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/PopCountValueTransform.java","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"}]}