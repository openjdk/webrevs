{"files":[{"patch":"@@ -45,0 +45,1 @@\n+    private final PrintWriter err;\n@@ -51,1 +52,1 @@\n-    public JNativeScanTask(PrintWriter out, List<Path> classPaths, List<Path> modulePaths,\n+    public JNativeScanTask(PrintWriter out, PrintWriter err, List<Path> classPaths, List<Path> modulePaths,\n@@ -54,0 +55,1 @@\n+        this.err = err;\n@@ -77,1 +79,1 @@\n-            NativeMethodFinder finder = NativeMethodFinder.create(classesToScan, systemClassResolver);\n+            NativeMethodFinder finder = NativeMethodFinder.create(err, classesToScan, systemClassResolver);\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jnativescan\/JNativeScanTask.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-        new JNativeScanTask(out, classPathJars, modulePaths, rootModules, version, action).run();\n+        new JNativeScanTask(out, err, classPathJars, modulePaths, rootModules, version, action).run();\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jnativescan\/Main.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.io.PrintWriter;\n@@ -47,0 +48,1 @@\n+    private final PrintWriter err;\n@@ -50,1 +52,2 @@\n-    private NativeMethodFinder(ClassResolver classesToScan, ClassResolver systemClassResolver) {\n+    private NativeMethodFinder(PrintWriter err, ClassResolver classesToScan, ClassResolver systemClassResolver) {\n+        this.err = err;\n@@ -55,2 +58,3 @@\n-    public static NativeMethodFinder create(ClassResolver classesToScan, ClassResolver systemClassResolver) throws JNativeScanFatalError, IOException {\n-        return new NativeMethodFinder(classesToScan, systemClassResolver);\n+    public static NativeMethodFinder create(PrintWriter err, ClassResolver classesToScan,\n+                                            ClassResolver systemClassResolver) throws JNativeScanFatalError, IOException {\n+        return new NativeMethodFinder(err, classesToScan, systemClassResolver);\n@@ -85,2 +89,2 @@\n-                             throw new JNativeScanFatalError(\"Error while processing method: \" +\n-                                     MethodRef.ofModel(methodModel), e);\n+                             err.println(\"Error while processing method: \" +\n+                                     MethodRef.ofModel(methodModel) + \": \" + e.getMessage());\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jnativescan\/NativeMethodFinder.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -52,2 +52,2 @@\n-        assertFailure(jnativescan(\"--class-path\", MISSING_SYSTEM.toString(), \"--release\", \"21\"))\n-                .stdoutShouldBeEmpty()\n+        assertSuccess(jnativescan(\"--class-path\", MISSING_SYSTEM.toString(), \"--release\", \"21\"))\n+                .stdoutShouldContain(\"<no restricted methods>\")\n@@ -56,1 +56,0 @@\n-                .stderrShouldContain(\"CAUSED BY:\")\n","filename":"test\/langtools\/tools\/jnativescan\/TestMissingSystemClass.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}