{"files":[{"patch":"@@ -585,0 +585,4 @@\n+  \/\/ We try, in various ways, to reserve a memory region that is both optimized for fast narrow Klass encoding\n+  \/\/ and still randomly located to provide a form of ASLR. These attempts may fail if the address space is\n+  \/\/ very fragmented.\n+\n@@ -626,3 +630,4 @@\n-      \/\/ If that failed, attempt to allocate at any 4G-aligned address. The disadvantage to the\n-      \/\/ approach taken above is that os::reserve_memory_aligned needs to over-allocate to guarantee\n-      \/\/ the alignment, and that will temporarily spike the vsize of the process.\n+      \/\/ If that failed, attempt to allocate at any 4G-aligned address but let the system decide\n+      \/\/ where. For ASLR we now rely on the system.\n+      \/\/ Since this will lead to temporary over-reservation of address space, it will spike the\n+      \/\/ vsize of the process and therefore may fail if a vsize limit is in place (e.g. ulimit -v)\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}