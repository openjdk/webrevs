{"files":[{"patch":"@@ -129,31 +129,14 @@\n-  case Op_CastII: {\n-    Node* cast = new CastIINode(n, t, dependency, false, extra_types);\n-    cast->set_req(0, c);\n-    return cast;\n-  }\n-  case Op_CastLL: {\n-    Node* cast = new CastLLNode(n, t, dependency, extra_types);\n-    cast->set_req(0, c);\n-    return cast;\n-  }\n-  case Op_CastPP: {\n-    Node* cast = new CastPPNode(n, t, dependency, extra_types);\n-    cast->set_req(0, c);\n-    return cast;\n-  }\n-  case Op_CastFF: {\n-    Node* cast = new CastFFNode(n, t, dependency, extra_types);\n-    cast->set_req(0, c);\n-    return cast;\n-  }\n-  case Op_CastDD: {\n-    Node* cast = new CastDDNode(n, t, dependency, extra_types);\n-    cast->set_req(0, c);\n-    return cast;\n-  }\n-  case Op_CastVV: {\n-    Node* cast = new CastVVNode(n, t, dependency, extra_types);\n-    cast->set_req(0, c);\n-    return cast;\n-  }\n-  case Op_CheckCastPP: return new CheckCastPPNode(c, n, t, dependency, extra_types);\n+  case Op_CastII:\n+    return new CastIINode(c, n, t, dependency, false, extra_types);\n+  case Op_CastLL:\n+    return new CastLLNode(c, n, t, dependency, extra_types);\n+  case Op_CastPP:\n+    return new CastPPNode(c, n, t, dependency, extra_types);\n+  case Op_CastFF:\n+    return new CastFFNode(c, n, t, dependency, extra_types);\n+  case Op_CastDD:\n+    return new CastDDNode(c, n, t, dependency, extra_types);\n+  case Op_CastVV:\n+    return new CastVVNode(c, n, t, dependency, extra_types);\n+  case Op_CheckCastPP:\n+    return new CheckCastPPNode(c, n, t, dependency, extra_types);\n","filename":"src\/hotspot\/share\/opto\/castnode.cpp","additions":14,"deletions":31,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-  ConstraintCastNode(Node* n, const Type* t, ConstraintCastNode::DependencyType dependency,\n+  ConstraintCastNode(Node* ctrl, Node* n, const Type* t, ConstraintCastNode::DependencyType dependency,\n@@ -61,0 +61,1 @@\n+    init_req(0, ctrl);\n@@ -105,1 +106,1 @@\n-    : ConstraintCastNode(n, t, dependency, types), _range_check_dependency(range_check_dependency) {\n+    : ConstraintCastNode(nullptr, n, t, dependency, types), _range_check_dependency(range_check_dependency) {\n@@ -108,2 +109,2 @@\n-  CastIINode(Node* ctrl, Node* n, const Type* t, DependencyType dependency = RegularDependency, bool range_check_dependency = false)\n-    : ConstraintCastNode(n, t, dependency, nullptr), _range_check_dependency(range_check_dependency) {\n+  CastIINode(Node* ctrl, Node* n, const Type* t, DependencyType dependency = RegularDependency, bool range_check_dependency = false, const TypeTuple* types = nullptr)\n+    : ConstraintCastNode(ctrl, n, t, dependency, types), _range_check_dependency(range_check_dependency) {\n@@ -111,1 +112,0 @@\n-    init_req(0, ctrl);\n@@ -134,7 +134,2 @@\n-  CastLLNode(Node* ctrl, Node* n, const Type* t, DependencyType dependency = RegularDependency)\n-    : ConstraintCastNode(n, t, dependency, nullptr) {\n-    init_class_id(Class_CastLL);\n-    init_req(0, ctrl);\n-  }\n-  CastLLNode(Node* n, const Type* t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n-          : ConstraintCastNode(n, t, dependency, types) {\n+  CastLLNode(Node* ctrl, Node* n, const Type* t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n+          : ConstraintCastNode(ctrl, n, t, dependency, types) {\n@@ -152,2 +147,2 @@\n-  CastFFNode(Node* n, const Type* t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n-          : ConstraintCastNode(n, t, dependency, types) {\n+  CastFFNode(Node* ctrl, Node* n, const Type* t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n+          : ConstraintCastNode(ctrl, n, t, dependency, types) {\n@@ -162,2 +157,2 @@\n-  CastDDNode(Node* n, const Type* t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n-          : ConstraintCastNode(n, t, dependency, types) {\n+  CastDDNode(Node* ctrl, Node* n, const Type* t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n+          : ConstraintCastNode(ctrl, n, t, dependency, types) {\n@@ -172,2 +167,2 @@\n-  CastVVNode(Node* n, const Type* t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n-          : ConstraintCastNode(n, t, dependency, types) {\n+  CastVVNode(Node* ctrl, Node* n, const Type* t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n+          : ConstraintCastNode(ctrl, n, t, dependency, types) {\n@@ -185,2 +180,2 @@\n-  CastPPNode (Node *n, const Type *t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n-    : ConstraintCastNode(n, t, dependency, types) {\n+  CastPPNode (Node* ctrl, Node* n, const Type* t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n+    : ConstraintCastNode(ctrl, n, t, dependency, types) {\n@@ -196,2 +191,2 @@\n-  CheckCastPPNode(Node *c, Node *n, const Type *t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n-    : ConstraintCastNode(n, t, dependency, types) {\n+  CheckCastPPNode(Node* ctrl, Node* n, const Type* t, DependencyType dependency = RegularDependency, const TypeTuple* types = nullptr)\n+    : ConstraintCastNode(ctrl, n, t, dependency, types) {\n@@ -199,1 +194,0 @@\n-    init_req(0, c);\n","filename":"src\/hotspot\/share\/opto\/castnode.hpp","additions":17,"deletions":23,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -1442,2 +1442,1 @@\n-  Node *cast = new CastPPNode(obj,t_not_null);\n-  cast->init_req(0, control());\n+  Node* cast = new CastPPNode(control(), obj,t_not_null);\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4291,2 +4291,1 @@\n-      Node* cast = new CastPPNode(klass_node, akls);\n-      cast->init_req(0, control());\n+      Node* cast = new CastPPNode(control(), klass_node, akls);\n@@ -5919,2 +5918,1 @@\n-       Node *cast = new CastPPNode(z, TypePtr::NOTNULL);\n-       cast->init_req(0, control());\n+       Node* cast = new CastPPNode(control(), z, TypePtr::NOTNULL);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1733,1 +1733,1 @@\n-        ccast = new CastIINode(val, tboth);\n+        ccast = new CastIINode(control(), val, tboth);\n@@ -1736,1 +1736,1 @@\n-        ccast = new CastPPNode(val, tboth);\n+        ccast = new CastPPNode(control(), val, tboth);\n@@ -1767,1 +1767,0 @@\n-    ccast->set_req(0, control());\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -491,1 +491,1 @@\n-    vec_field_ld = gvn.transform(new CastPPNode(vec_field_ld, payload_type));\n+    vec_field_ld = gvn.transform(new CastPPNode(nullptr, vec_field_ld, payload_type));\n","filename":"src\/hotspot\/share\/opto\/vector.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}