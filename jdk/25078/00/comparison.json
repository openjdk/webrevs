{"files":[{"patch":"@@ -115,0 +115,1 @@\n+          constraint(AOTConfigurationConstraintFunc, AtParse)               \\\n@@ -118,0 +119,1 @@\n+          constraint(AOTCacheConstraintFunc, AtParse)                       \\\n","filename":"src\/hotspot\/share\/cds\/cds_globals.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,16 @@\n+JVMFlag::Error AOTCacheConstraintFunc(ccstr value, bool verbose) {\n+  if (value == nullptr) {\n+    JVMFlag::printError(verbose, \"AOTCache cannot be empty\\n\");\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n+  }\n+  return JVMFlag::SUCCESS;\n+}\n+\n+JVMFlag::Error AOTConfigurationConstraintFunc(ccstr value, bool verbose) {\n+  if (value == nullptr) {\n+    JVMFlag::printError(verbose, \"AOTConfiguration cannot be empty\\n\");\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n+  }\n+  return JVMFlag::SUCCESS;\n+}\n+\n@@ -35,0 +51,4 @@\n+  if (value == nullptr) {\n+    JVMFlag::printError(verbose, \"AOTMode cannot be empty\\n\");\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n+  }\n@@ -46,1 +66,0 @@\n-\n@@ -49,0 +68,1 @@\n+\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.cpp","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -37,0 +37,2 @@\n+  f(ccstr,  AOTCacheConstraintFunc)                   \\\n+  f(ccstr,  AOTConfigurationConstraintFunc)           \\\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -357,0 +357,14 @@\n+\n+        \/\/----------------------------------------------------------------------\n+        testEmptyValue(\"AOTCache\");\n+        testEmptyValue(\"AOTConfiguration\");\n+        testEmptyValue(\"AOTMode\");\n+    }\n+\n+    static void testEmptyValue(String option) throws Exception {\n+        printTestCase(\"Empty values for \" + option);\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-XX:\" + option + \"=\", \"--version\");\n+        OutputAnalyzer out = CDSTestUtils.executeAndLog(pb, \"neg\");\n+        out.shouldContain(\"Improperly specified VM option '\" + option + \"='\");\n+        out.shouldHaveExitValue(1);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/AOTFlags.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}