{"files":[{"patch":"@@ -960,0 +960,6 @@\n+  assert(caller_ik != nullptr, \"sanity\");\n+  assert(invoked_name != nullptr, \"sanity\");\n+  assert(invoked_type != nullptr, \"sanity\");\n+  assert(method_type != nullptr, \"sanity\");\n+  assert(instantiated_method_type != nullptr, \"sanity\");\n+\n@@ -964,1 +970,1 @@\n-      !member_method->is_shared() ||\n+      (member_method != nullptr && !member_method->is_shared()) ||\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        \/\/ run with archive\n+        \/\/ run with archive; make sure the lambda is loaded from the archive\n@@ -66,1 +66,1 @@\n-            .addPrefix(\"-cp\", appJar)\n+            .addPrefix(\"-cp\", appJar, \"-Xlog:class+load\")\n@@ -71,0 +71,1 @@\n+        output.shouldMatch(\"LambdaInvokeVirtualApp[$][$]Lambda\/.*source: shared objects file\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaInvokeVirtual.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}