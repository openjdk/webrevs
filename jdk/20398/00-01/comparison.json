{"files":[{"patch":"@@ -311,1 +311,1 @@\n-            long start = System.nanoTime();\n+            long start = millisTime();\n@@ -313,1 +313,1 @@\n-            long duration = System.nanoTime() - start;\n+            expectDuration(start, 501, Long.MAX_VALUE);\n@@ -315,1 +315,0 @@\n-            assertTrue(duration > 500000000, \"select took \" + duration + \" ns\");\n@@ -335,1 +334,1 @@\n-            long start = System.nanoTime();\n+            long start = millisTime();\n@@ -337,1 +336,1 @@\n-            long duration = System.nanoTime() - start;\n+            expectDuration(start, 0, 4999);\n@@ -339,1 +338,0 @@\n-            assertTrue(duration < 5000000000L, \"select took \" + duration + \" ns\");\n@@ -357,1 +355,1 @@\n-            long start = System.nanoTime();\n+            long start = millisTime();\n@@ -359,1 +357,1 @@\n-            long duration = System.nanoTime() - start;\n+            expectDuration(start, 501, 10*1000 - 1);\n@@ -361,2 +359,0 @@\n-            assertTrue(duration > 500000000L && duration < 10*1000000000L,\n-                    \"select took \" + duration + \" ns\");\n@@ -384,1 +380,1 @@\n-            long start = System.nanoTime();\n+            long start = millisTime();\n@@ -386,1 +382,1 @@\n-            long duration = System.nanoTime() - start;\n+            expectDuration(start, 0, 4999);\n@@ -388,1 +384,0 @@\n-            assertTrue(duration < 5000000000L, \"select took \" + duration + \" ns\");\n@@ -765,0 +760,28 @@\n+\n+    \/**\n+     * Returns the current time in milliseconds.\n+     *\/\n+    private static long millisTime() {\n+        long now = System.nanoTime();\n+        return TimeUnit.MILLISECONDS.convert(now, TimeUnit.NANOSECONDS);\n+    }\n+\n+    \/**\n+     * Check the duration of a task. The method will fail with an\n+     * AssertionError if the millisecond duration does not satisfy:\n+     *\n+     *     duration >= min && duration <= max\n+     *\n+     * Note that the inequalities are not strict, i.e., are inclusive.\n+     *\n+     * @param start start time, in milliseconds\n+     * @param min minimum expected duration, in milliseconds\n+     * @param max maximum expected duration, in milliseconds\n+     *\/\n+    private static void expectDuration(long start, long min, long max) {\n+        long duration = millisTime() - start;\n+        assertTrue(duration >= min,\n+                \"Duration \" + duration + \"ms, expected >= \" + min + \"ms\");\n+        assertTrue(duration <= max,\n+                \"Duration \" + duration + \"ms, expected <= \" + max + \"ms\");\n+    }\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/SelectWithConsumer.java","additions":36,"deletions":13,"binary":false,"changes":49,"status":"modified"}]}