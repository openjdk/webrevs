{"files":[{"patch":"@@ -80,0 +80,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -695,2 +697,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -702,3 +703,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -714,1 +713,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -720,1 +719,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractThrowingPublishers.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -96,0 +96,1 @@\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -708,1 +709,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -714,1 +715,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractThrowingPushPromises.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -79,0 +79,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -686,2 +688,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -693,3 +694,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -705,1 +704,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -711,1 +710,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractThrowingSubscribers.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -89,0 +89,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -820,4 +822,1 @@\n-        InetSocketAddress loopback = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        HttpServer http1 = HttpServer.create(loopback, 0);\n-        http1TestServer = HttpTestServer.of(http1);\n+        http1TestServer = HttpTestServer.create(HTTP_1_1);\n@@ -827,3 +826,1 @@\n-        HttpsServer https1 = HttpsServer.create(loopback, 0);\n-        https1.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        https1TestServer = HttpTestServer.of(https1);\n+        https1TestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -834,1 +831,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -838,1 +835,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/AggregateRequestBodyTest.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -83,0 +83,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -319,3 +321,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -324,3 +324,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -330,1 +328,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -333,1 +331,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n@@ -379,1 +377,1 @@\n-                if (t.getExchangeVersion() == HttpClient.Version.HTTP_1_1) {\n+                if (t.getExchangeVersion() == HTTP_1_1) {\n","filename":"test\/jdk\/java\/net\/httpclient\/AsyncExecutorShutdown.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -47,0 +47,3 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n+\n@@ -90,1 +93,1 @@\n-    Executor executor = Executors.newCachedThreadPool();\n+    ExecutorService executor = Executors.newCachedThreadPool();\n@@ -122,3 +125,1 @@\n-            HttpServer server1 = HttpServer.create(sa, 0);\n-            server1.setExecutor(executor);\n-            http1Server = HttpTestServer.of(server1);\n+            http1Server = HttpTestServer.create(HTTP_1_1, null, executor);\n@@ -141,2 +142,1 @@\n-            http2Server = HttpTestServer.of(\n-                    new Http2TestServer(\"localhost\", false, 0));\n+            http2Server = HttpTestServer.create(HTTP_2);\n@@ -149,2 +149,1 @@\n-            https2Server = HttpTestServer.of(\n-                    new Http2TestServer(\"localhost\", true, 0));\n+            https2Server = HttpTestServer.create(HTTP_2, SSLContext.getDefault());\n","filename":"test\/jdk\/java\/net\/httpclient\/AuthFilterCacheTest.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -57,0 +57,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -212,3 +214,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -217,3 +217,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -223,1 +221,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -226,1 +224,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/BasicRedirectTest.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -90,0 +90,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -596,2 +598,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -601,3 +602,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -610,1 +609,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -614,1 +613,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/CancelRequestTest.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -86,0 +86,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -346,2 +348,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -351,3 +352,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -360,1 +359,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -364,1 +363,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/CancelStreamedBodyTest.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -82,0 +82,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -116,4 +118,4 @@\n-                { httpURI, HttpClient.Version.HTTP_1_1  },\n-                { httpsURI, HttpClient.Version.HTTP_1_1  },\n-                { httpDummy, HttpClient.Version.HTTP_1_1 },\n-                { httpsDummy, HttpClient.Version.HTTP_1_1 },\n+                { httpURI, HTTP_1_1  },\n+                { httpsURI, HTTP_1_1  },\n+                { httpDummy, HTTP_1_1 },\n+                { httpsDummy, HTTP_1_1 },\n@@ -190,3 +192,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -195,3 +195,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -201,1 +199,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -204,1 +202,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n@@ -210,0 +208,1 @@\n+        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n@@ -277,1 +276,1 @@\n-                if (t.getExchangeVersion() == HttpClient.Version.HTTP_1_1) {\n+                if (t.getExchangeVersion() == HTTP_1_1) {\n@@ -305,1 +304,1 @@\n-                    if (version == HttpClient.Version.HTTP_1_1 || upgraded) {\n+                    if (version == HTTP_1_1 || upgraded) {\n","filename":"test\/jdk\/java\/net\/httpclient\/CookieHeaderTest.java","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -91,0 +91,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -583,2 +585,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -590,3 +591,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -602,1 +601,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -608,1 +607,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/DependentActionsTest.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -90,0 +90,1 @@\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -668,1 +669,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -674,1 +675,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/DependentPromiseActionsTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -82,0 +82,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -263,2 +265,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -270,3 +271,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -282,1 +281,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -288,1 +287,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n@@ -295,0 +294,1 @@\n+        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n","filename":"test\/jdk\/java\/net\/httpclient\/EncodedCharsInURI.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -80,0 +80,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -282,3 +284,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -287,3 +287,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -293,1 +291,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -296,1 +294,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n@@ -342,1 +340,1 @@\n-                if (t.getExchangeVersion() == HttpClient.Version.HTTP_1_1) {\n+                if (t.getExchangeVersion() == HTTP_1_1) {\n","filename":"test\/jdk\/java\/net\/httpclient\/ExecutorShutdown.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -68,0 +68,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -88,1 +90,0 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n@@ -91,1 +92,1 @@\n-        http1TestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        http1TestServer = HttpTestServer.create(HTTP_1_1);\n@@ -103,2 +104,1 @@\n-        http2TestServer = HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -249,1 +249,1 @@\n-                { getUri,   postUri, hangUri, HttpClient.Version.HTTP_1_1 },\n+                { getUri,   postUri, hangUri, HTTP_1_1 },\n","filename":"test\/jdk\/java\/net\/httpclient\/ExpectContinueTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -74,0 +74,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -313,4 +315,1 @@\n-        InetSocketAddress sa =\n-                new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpServerAdapters.HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1);\n@@ -321,3 +320,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpServerAdapters.HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -328,2 +325,1 @@\n-        http2TestServer = HttpServerAdapters.HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2);\n@@ -334,2 +330,1 @@\n-        https2TestServer = HttpServerAdapters.HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/FilePublisher\/FilePublisherPermsTest.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -66,0 +66,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -202,1 +204,1 @@\n-        httpTestServer = HttpServerAdapters.HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1);\n@@ -206,3 +208,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpServerAdapters.HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -212,2 +212,1 @@\n-        http2TestServer = HttpServerAdapters.HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2);\n@@ -217,2 +216,1 @@\n-        https2TestServer = HttpServerAdapters.HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/FilePublisher\/FilePublisherTest.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -83,0 +83,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -334,3 +336,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -340,3 +340,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -346,1 +344,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -349,1 +347,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/ForbiddenHeadTest.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -68,0 +68,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -545,2 +547,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -551,3 +552,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -559,1 +558,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -564,1 +563,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/GZIPInputStreamTest.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -59,0 +59,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -87,2 +89,2 @@\n-                { httpURI, \"GET\", HTTP_NOT_MODIFIED, HttpClient.Version.HTTP_1_1  },\n-                { httpsURI, \"GET\", HTTP_NOT_MODIFIED, HttpClient.Version.HTTP_1_1  },\n+                { httpURI, \"GET\", HTTP_NOT_MODIFIED, HTTP_1_1  },\n+                { httpsURI, \"GET\", HTTP_NOT_MODIFIED, HTTP_1_1  },\n@@ -91,2 +93,2 @@\n-                { httpURI, \"HEAD\", HTTP_OK, HttpClient.Version.HTTP_1_1  },\n-                { httpsURI, \"HEAD\", HTTP_OK, HttpClient.Version.HTTP_1_1  },\n+                { httpURI, \"HEAD\", HTTP_OK, HTTP_1_1  },\n+                { httpsURI, \"HEAD\", HTTP_OK, HTTP_1_1  },\n@@ -95,2 +97,2 @@\n-                { httpURI + \"transfer\/\", \"GET\", HTTP_NOT_MODIFIED, HttpClient.Version.HTTP_1_1  },\n-                { httpsURI + \"transfer\/\", \"GET\", HTTP_NOT_MODIFIED, HttpClient.Version.HTTP_1_1  },\n+                { httpURI + \"transfer\/\", \"GET\", HTTP_NOT_MODIFIED, HTTP_1_1  },\n+                { httpsURI + \"transfer\/\", \"GET\", HTTP_NOT_MODIFIED, HTTP_1_1  },\n@@ -99,2 +101,2 @@\n-                { httpURI + \"transfer\/\", \"HEAD\", HTTP_OK, HttpClient.Version.HTTP_1_1  },\n-                { httpsURI + \"transfer\/\", \"HEAD\", HTTP_OK, HttpClient.Version.HTTP_1_1  },\n+                { httpURI + \"transfer\/\", \"HEAD\", HTTP_OK, HTTP_1_1  },\n+                { httpsURI + \"transfer\/\", \"HEAD\", HTTP_OK, HTTP_1_1  },\n@@ -159,1 +161,1 @@\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -162,3 +164,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -168,1 +168,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -171,1 +171,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, 0));\n+        https2TestServer = HttpTestServer.create(HTTP_2, SSLContext.getDefault());\n","filename":"test\/jdk\/java\/net\/httpclient\/HeadTest.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -52,0 +52,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -110,3 +112,1 @@\n-        final var sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        final int backlog = 0;\n-        http1_1_Server = HttpServerAdapters.HttpTestServer.of(HttpServer.create(sa, backlog));\n+        http1_1_Server = HttpServerAdapters.HttpTestServer.create(HTTP_1_1);\n@@ -118,3 +118,1 @@\n-        final HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        https_1_1_Server = HttpServerAdapters.HttpTestServer.of(httpsServer);\n+        https_1_1_Server = HttpServerAdapters.HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -127,1 +125,1 @@\n-        http2_Server = HttpServerAdapters.HttpTestServer.of(new Http2TestServer(sa.getHostString(), false, null));\n+        http2_Server = HttpServerAdapters.HttpTestServer.create(HTTP_2);\n@@ -133,1 +131,1 @@\n-        https2_Server = HttpServerAdapters.HttpTestServer.of(new Http2TestServer(sa.getHostString(), true, sslContext));\n+        https2_Server = HttpServerAdapters.HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpClientLocalAddrTest.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -166,3 +168,1 @@\n-            HttpServer server1 = HttpServer.create(sa, 0);\n-            server1.setExecutor(executor);\n-            http1Server = HttpTestServer.of(server1);\n+            http1Server = HttpTestServer.create(HTTP_1_1, null, executor);\n@@ -186,2 +186,1 @@\n-            http2Server = HttpTestServer.of(\n-                    new Http2TestServer(\"localhost\", false, 0));\n+            http2Server = HttpTestServer.create(HTTP_2);\n@@ -194,2 +193,1 @@\n-            https2Server = HttpTestServer.of(\n-                    new Http2TestServer(\"localhost\", true, 0));\n+            https2Server = HttpTestServer.create(HTTP_2, SSLContext.getDefault());\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpRedirectTest.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -55,0 +55,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -130,3 +132,1 @@\n-            HttpServer server1 = HttpServer.create(sa, 0);\n-            server1.setExecutor(executor);\n-            http1Server = HttpTestServer.of(server1);\n+            http1Server = HttpTestServer.create(HTTP_1_1, null, executor);\n@@ -148,2 +148,1 @@\n-            http2Server = HttpTestServer.of(\n-                    new Http2TestServer(\"localhost\", false, 0));\n+            http2Server = HttpTestServer.create(HTTP_2);\n@@ -155,2 +154,1 @@\n-            https2Server = HttpTestServer.of(\n-                    new Http2TestServer(\"localhost\", true, 0));\n+            https2Server = HttpTestServer.create(HTTP_2, SSLContext.getDefault());\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpSlowServerTest.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -45,0 +45,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -105,3 +107,0 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        HttpsServer server1 = HttpsServer.create(sa, 0);\n-        server1.setHttpsConfigurator(new HttpsConfigurator(context));\n@@ -109,1 +108,1 @@\n-                HttpTestServer.of(server1);\n+                HttpTestServer.create(HTTP_1_1, context);\n@@ -112,2 +111,1 @@\n-        HttpTestServer http2Server = HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", true, 0));\n+        HttpTestServer http2Server = HttpTestServer.create(HTTP_2, SSLContext.getDefault());\n@@ -157,1 +155,1 @@\n-            if (response.version() != Version.HTTP_1_1) {\n+            if (response.version() != HTTP_1_1) {\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpsTunnelTest.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -99,0 +99,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -415,2 +417,1 @@\n-        HttpServer http1 = HttpServer.create(loopback, 0);\n-        http1TestServer = HttpServerAdapters.HttpTestServer.of(http1);\n+        http1TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1);\n@@ -420,3 +421,1 @@\n-        HttpsServer https1 = HttpsServer.create(loopback, 0);\n-        https1.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        https1TestServer = HttpServerAdapters.HttpTestServer.of(https1);\n+        https1TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -427,1 +426,1 @@\n-        http2TestServer = HttpServerAdapters.HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2);\n@@ -431,1 +430,1 @@\n-        https2TestServer = HttpServerAdapters.HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/ISO_8859_1_Test.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -77,0 +77,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -231,1 +233,1 @@\n-                            && response.version() == HttpClient.Version.HTTP_1_1) {\n+                            && response.version() == HTTP_1_1) {\n@@ -281,1 +283,1 @@\n-                        && response.get().version() == HttpClient.Version.HTTP_1_1) {\n+                        && response.get().version() == HTTP_1_1) {\n@@ -449,2 +451,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -456,3 +457,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -468,1 +467,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -474,1 +473,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/InvalidInputStreamSubscriptionRequest.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -75,0 +75,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -179,1 +181,1 @@\n-                        && response.version() == HttpClient.Version.HTTP_1_1) {\n+                        && response.version() == HTTP_1_1) {\n@@ -223,1 +225,1 @@\n-                        && response.get().version() == HttpClient.Version.HTTP_1_1) {\n+                        && response.get().version() == HTTP_1_1) {\n@@ -382,2 +384,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -389,3 +390,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -401,1 +400,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -407,1 +406,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/InvalidSubscriptionRequest.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -65,0 +65,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -1003,3 +1005,1 @@\n-            HttpServer server1 = HttpServer.create(sa, 0);\n-            server1.setExecutor(executor);\n-            http1Server = HttpTestServer.of(server1);\n+            http1Server = HttpTestServer.create(HTTP_1_1, null, executor);\n@@ -1021,2 +1021,1 @@\n-            http2Server = HttpTestServer.of(\n-                    new Http2TestServer(\"localhost\", false, 0));\n+            http2Server = HttpTestServer.create(HTTP_2);\n@@ -1028,2 +1027,1 @@\n-            https2Server = HttpTestServer.of(\n-                    new Http2TestServer(\"localhost\", true, 0));\n+            https2Server = HttpTestServer.create(HTTP_2, SSLContext.getDefault());\n","filename":"test\/jdk\/java\/net\/httpclient\/LargeHandshakeTest.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -55,0 +55,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -128,3 +130,1 @@\n-            HttpServer server1 = HttpServer.create(sa, 0);\n-            server1.setExecutor(executor);\n-            http1Server = HttpTestServer.of(server1);\n+            http1Server = HttpTestServer.create(HTTP_1_1, null, executor);\n@@ -146,2 +146,1 @@\n-            http2Server = HttpTestServer.of(\n-                    new Http2TestServer(\"localhost\", false, 0));\n+            http2Server = HttpTestServer.create(HTTP_2);\n@@ -153,2 +152,1 @@\n-            https2Server = HttpTestServer.of(\n-                    new Http2TestServer(\"localhost\", true, 0));\n+            https2Server = HttpTestServer.create(HTTP_2, SSLContext.getDefault());\n","filename":"test\/jdk\/java\/net\/httpclient\/LargeResponseTest.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -68,0 +68,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -673,2 +675,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0),\n+        httpTestServer = HttpTestServer.create(HTTP_1_1, null,\n@@ -679,3 +680,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer,\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext,\n@@ -686,1 +685,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -690,1 +689,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/LineBodyHandlerTest.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -63,0 +63,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -199,2 +201,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -204,3 +205,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -210,1 +209,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -214,1 +213,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/NonAsciiCharsInURI.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -80,0 +80,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -200,4 +202,1 @@\n-        InetSocketAddress sa =\n-                new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpServerAdapters.HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1);\n@@ -207,3 +206,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpServerAdapters.HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -213,2 +210,1 @@\n-        http2TestServer = HttpServerAdapters.HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2);\n@@ -218,2 +214,1 @@\n-        https2TestServer = HttpServerAdapters.HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/PathSubscriber\/BodyHandlerOfFileDownloadTest.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -77,0 +77,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -206,4 +208,1 @@\n-        InetSocketAddress sa =\n-                new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpServerAdapters.HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1);\n@@ -213,3 +212,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpServerAdapters.HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -219,2 +216,1 @@\n-        http2TestServer = HttpServerAdapters.HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2);\n@@ -224,2 +220,1 @@\n-        https2TestServer = HttpServerAdapters.HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/PathSubscriber\/BodyHandlerOfFileTest.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -84,0 +84,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -243,4 +245,1 @@\n-        InetSocketAddress sa =\n-                new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpServerAdapters.HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1);\n@@ -250,3 +249,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpServerAdapters.HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpServerAdapters.HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -256,2 +253,1 @@\n-        http2TestServer = HttpServerAdapters.HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2);\n@@ -261,2 +257,1 @@\n-        https2TestServer = HttpServerAdapters.HttpTestServer.of(\n-                new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpServerAdapters.HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/PathSubscriber\/BodySubscriberOfFileTest.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -82,0 +82,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -212,1 +214,1 @@\n-                { Schemes.HTTP,  HttpClient.Version.HTTP_1_1, httpURI,   true},\n+                { Schemes.HTTP,  HTTP_1_1, httpURI,   true},\n@@ -214,1 +216,1 @@\n-                { Schemes.HTTPS, HttpClient.Version.HTTP_1_1, httpsURI,  true},\n+                { Schemes.HTTPS, HTTP_1_1, httpsURI,  true},\n@@ -216,1 +218,1 @@\n-                { Schemes.HTTP,  HttpClient.Version.HTTP_1_1, httpURI,   false},\n+                { Schemes.HTTP,  HTTP_1_1, httpURI,   false},\n@@ -218,1 +220,1 @@\n-                { Schemes.HTTPS, HttpClient.Version.HTTP_1_1, httpsURI,  false},\n+                { Schemes.HTTPS, HTTP_1_1, httpsURI,  false},\n@@ -325,3 +327,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -330,1 +330,1 @@\n-        proxyHttpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        proxyHttpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -334,1 +334,1 @@\n-        authProxyHttpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        authProxyHttpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -339,3 +339,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -345,1 +343,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -348,1 +346,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/ProxySelectorTest.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -54,0 +54,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -189,3 +191,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -197,3 +197,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -205,1 +203,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -211,1 +209,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/RedirectMethodChange.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -59,0 +59,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -151,3 +153,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -156,3 +156,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -162,1 +160,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -165,1 +163,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/RedirectWithCookie.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -85,1 +86,1 @@\n-        http2Server = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2Server = HttpTestServer.create(HTTP_2);\n@@ -103,2 +104,1 @@\n-        https2Server = HttpTestServer.of(new Http2TestServer(\"localhost\",\n-                true, sslContext));\n+        https2Server = HttpTestServer.create(HTTP_2, sslContext);\n@@ -365,1 +365,1 @@\n-                .version(HttpClient.Version.HTTP_2)\n+                .version(HTTP_2)\n@@ -377,1 +377,1 @@\n-            Assert.assertEquals(response.version(), HttpClient.Version.HTTP_2,\n+            Assert.assertEquals(response.version(), HTTP_2,\n@@ -393,1 +393,1 @@\n-                .version(HttpClient.Version.HTTP_2)\n+                .version(HTTP_2)\n@@ -433,1 +433,1 @@\n-                .version(HttpClient.Version.HTTP_2)\n+                .version(HTTP_2)\n@@ -452,1 +452,1 @@\n-                .version(HttpClient.Version.HTTP_2)\n+                .version(HTTP_2)\n","filename":"test\/jdk\/java\/net\/httpclient\/Response1xxTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -73,0 +73,1 @@\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -273,1 +274,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -277,1 +278,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/Response204V2Test.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -76,0 +76,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -402,2 +404,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -409,3 +410,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -421,1 +420,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -427,1 +426,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/ResponsePublisher.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -70,0 +70,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -151,3 +153,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -156,3 +156,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -162,1 +160,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -165,1 +163,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n@@ -211,1 +209,1 @@\n-                if (t.getExchangeVersion() == HttpClient.Version.HTTP_1_1) {\n+                if (t.getExchangeVersion() == HTTP_1_1) {\n","filename":"test\/jdk\/java\/net\/httpclient\/RetryWithCookie.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -93,0 +93,1 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n@@ -561,2 +562,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -566,3 +566,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -572,1 +570,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -576,1 +574,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/SpecialHeadersTest.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -91,2 +91,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-        httpTestServer = HttpServerAdapters.HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpServerAdapters.HttpTestServer.create(Version.HTTP_1_1);\n","filename":"test\/jdk\/java\/net\/httpclient\/StreamCloseTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -57,0 +57,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -119,3 +121,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -125,3 +125,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -131,1 +129,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -134,1 +132,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/StreamingBody.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -66,0 +66,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -191,3 +193,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -196,3 +196,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -202,1 +200,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -205,1 +203,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n","filename":"test\/jdk\/java\/net\/httpclient\/UnauthorizedTest.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -81,0 +81,2 @@\n+import static java.net.http.HttpClient.Version.HTTP_1_1;\n+import static java.net.http.HttpClient.Version.HTTP_2;\n@@ -114,8 +116,8 @@\n-                { httpURI, HttpClient.Version.HTTP_1_1  },\n-                { httpsURI, HttpClient.Version.HTTP_1_1  },\n-                { httpDummy, HttpClient.Version.HTTP_1_1 },\n-                { httpsDummy, HttpClient.Version.HTTP_1_1 },\n-                { httpURI, HttpClient.Version.HTTP_2  },\n-                { httpsURI, HttpClient.Version.HTTP_2  },\n-                { httpDummy, HttpClient.Version.HTTP_2 },\n-                { httpsDummy, HttpClient.Version.HTTP_2 },\n+                { httpURI, HTTP_1_1  },\n+                { httpsURI, HTTP_1_1  },\n+                { httpDummy, HTTP_1_1 },\n+                { httpsDummy, HTTP_1_1 },\n+                { httpURI, HTTP_2  },\n+                { httpsURI, HTTP_2  },\n+                { httpDummy, HTTP_2 },\n+                { httpsDummy, HTTP_2 },\n@@ -195,3 +197,1 @@\n-        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n-\n-        httpTestServer = HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer = HttpTestServer.create(HTTP_1_1);\n@@ -200,3 +200,1 @@\n-        HttpsServer httpsServer = HttpsServer.create(sa, 0);\n-        httpsServer.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n-        httpsTestServer = HttpTestServer.of(httpsServer);\n+        httpsTestServer = HttpTestServer.create(HTTP_1_1, sslContext);\n@@ -206,1 +204,1 @@\n-        http2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2TestServer = HttpTestServer.create(HTTP_2);\n@@ -209,1 +207,1 @@\n-        https2TestServer = HttpTestServer.of(new Http2TestServer(\"localhost\", true, sslContext));\n+        https2TestServer = HttpTestServer.create(HTTP_2, sslContext);\n@@ -213,1 +211,1 @@\n-\n+        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n@@ -282,1 +280,1 @@\n-                if (t.getExchangeVersion() == HttpClient.Version.HTTP_1_1) {\n+                if (t.getExchangeVersion() == HTTP_1_1) {\n@@ -302,1 +300,1 @@\n-            boolean upgraded = version == HttpClient.Version.HTTP_2\n+            boolean upgraded = version == HTTP_2\n@@ -310,1 +308,1 @@\n-                    if (version == HttpClient.Version.HTTP_1_1 || upgraded) {\n+                    if (version == HTTP_1_1 || upgraded) {\n","filename":"test\/jdk\/java\/net\/httpclient\/UserCookieTest.java","additions":18,"deletions":20,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+import com.sun.net.httpserver.HttpsConfigurator;\n+import com.sun.net.httpserver.HttpsServer;\n@@ -61,0 +63,2 @@\n+import javax.net.ssl.SSLContext;\n+\n@@ -553,0 +557,84 @@\n+        \/**\n+         * Creates a {@link HttpTestServer} which supports the {@code serverVersion}. The server\n+         * will only be available on {@code http} protocol. {@code https} will not be supported\n+         * by the returned server\n+         *\n+         * @param serverVersion The HTTP version of the server\n+         * @return The newly created server\n+         * @throws IllegalArgumentException if {@code serverVersion} is not supported by this method\n+         * @throws IOException if any exception occurs during the server creation\n+         *\/\n+        public static HttpTestServer create(Version serverVersion) throws IOException {\n+            Objects.requireNonNull(serverVersion);\n+            return create(serverVersion, null);\n+        }\n+\n+        \/**\n+         * Creates a {@link HttpTestServer} which supports the {@code serverVersion}. If the\n+         * {@code sslContext} is null, then only {@code http} protocol will be supported by the\n+         * server. Else, the server will be configured with the {@code sslContext} and will support\n+         * {@code https} protocol.\n+         *\n+         * @param serverVersion The HTTP version of the server\n+         * @param sslContext    The SSLContext to use. Can be null\n+         * @return The newly created server\n+         * @throws IllegalArgumentException if {@code serverVersion} is not supported by this method\n+         * @throws IOException if any exception occurs during the server creation\n+         *\/\n+        public static HttpTestServer create(Version serverVersion, SSLContext sslContext)\n+                throws IOException {\n+            Objects.requireNonNull(serverVersion);\n+            return create(serverVersion, sslContext, null);\n+        }\n+\n+        \/**\n+         * Creates a {@link HttpTestServer} which supports the {@code serverVersion}. If the\n+         * {@code sslContext} is null, then only {@code http} protocol will be supported by the\n+         * server. Else, the server will be configured with the {@code sslContext} and will support\n+         * {@code https} protocol.\n+         *\n+         * @param serverVersion The HTTP version of the server\n+         * @param sslContext    The SSLContext to use. Can be null\n+         * @param executor      The executor to be used by the server. Can be null\n+         * @return The newly created server\n+         * @throws IllegalArgumentException if {@code serverVersion} is not supported by this method\n+         * @throws IOException if any exception occurs during the server creation\n+         *\/\n+        public static HttpTestServer create(Version serverVersion, SSLContext sslContext,\n+                                            ExecutorService executor) throws IOException {\n+            Objects.requireNonNull(serverVersion);\n+            switch (serverVersion) {\n+                case HTTP_2 -> {\n+                    Http2TestServer underlying;\n+                    try {\n+                        underlying = sslContext == null\n+                                ? new Http2TestServer(\"localhost\", false, 0, executor, null) \/\/ HTTP\n+                                : new Http2TestServer(\"localhost\", true, 0, executor, sslContext); \/\/ HTTPS\n+                    } catch (IOException ioe) {\n+                        throw ioe;\n+                    } catch (Exception e) {\n+                        throw new IOException(e);\n+                    }\n+                    return HttpTestServer.of(underlying);\n+                }\n+                case HTTP_1_1 ->  {\n+                    InetSocketAddress sa = new InetSocketAddress(\n+                            InetAddress.getLoopbackAddress(), 0);\n+                    HttpServer underlying;\n+                    if (sslContext == null) {\n+                        underlying = HttpServer.create(sa, 0); \/\/ HTTP\n+                    } else {\n+                        HttpsServer https = HttpsServer.create(sa, 0); \/\/ HTTPS\n+                        https.setHttpsConfigurator(new HttpsConfigurator(sslContext));\n+                        underlying = https;\n+                    }\n+                    if (executor != null) {\n+                        underlying.setExecutor(executor);\n+                    }\n+                    return HttpTestServer.of(underlying);\n+                }\n+                default -> throw new IllegalArgumentException(\"Unsupported HTTP version \"\n+                        + serverVersion);\n+            }\n+        }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/common\/HttpServerAdapters.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"modified"}]}