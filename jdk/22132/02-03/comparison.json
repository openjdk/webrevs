{"files":[{"patch":"@@ -94,3 +94,1 @@\n-            for (;;) {\n-                return (i.hasNext()) ? i.next() : null;\n-            }\n+            return sl.findFirst().orElse(null);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/spi\/AsynchronousChannelProvider.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -112,3 +112,1 @@\n-            for (;;) {\n-                return i.hasNext() ? i.next() : null;\n-            }\n+            return sl.findFirst().orElse(null);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/spi\/SelectorProvider.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -415,2 +415,1 @@\n-            for (Iterator<CharsetProvider> i = providers();\n-                 i.hasNext();) {\n+            for (Iterator<CharsetProvider> i = providers(); i.hasNext();) {\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/Charset.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -205,2 +205,2 @@\n-        if (canUseCached && (file instanceof BasicFileAttributesHolder)) {\n-            BasicFileAttributes cached = ((BasicFileAttributesHolder)file).get();\n+        if (canUseCached && (file instanceof BasicFileAttributesHolder bfah)) {\n+            BasicFileAttributes cached = bfah.get();\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileTreeWalker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        Integer.valueOf(System.getProperty(\"sun.nio.ch.internalThreadPoolSize\", \"1\"));\n+        Integer.getInteger(\"sun.nio.ch.internalThreadPoolSize\", 1);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/AsynchronousChannelGroupImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        Integer.valueOf(System.getProperty(\"sun.nio.ch.maxCompletionHandlersOnStack\", \"16\"));\n+        Integer.getInteger(\"sun.nio.ch.maxCompletionHandlersOnStack\", 16);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/Invoker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1604,1 +1604,1 @@\n-                    sb.append(addr.toString());\n+                    sb.append(addr);\n@@ -1608,1 +1608,1 @@\n-                    sb.append(remoteAddress().toString());\n+                    sb.append(remoteAddress());\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/SocketChannelImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}