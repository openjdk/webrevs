{"files":[{"patch":"@@ -819,0 +819,4 @@\n+    \/\/ If scalarize operation is adding too many nodes, bail out\n+    if (C->check_node_count(300, \"out of nodes while scalarizing object\")) {\n+      return nullptr;\n+    }\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8315916\n+ * @summary Test early bailout during the creation of graph nodes for the scalarization of array fields, rather than during code generation.\n+ * @run main\/othervm -Xcomp\n+ *                   -XX:EliminateAllocationArraySizeLimit=60240\n+ *                   compiler.loopopts.superword.TestScalarize_Bailout\n+ *\/\n+\n+package compiler.loopopts.superword;\n+\n+public class TestScalarize_Bailout {\n+\n+static Object var1;\n+public static void main(String[] args) throws Exception {\n+    var1 = new long[48 * 1024];\n+    long[] a1 = new long[48 * 1024];\n+    try {\n+        Class <?> Class37 = Class.forName(\"compiler.loopopts.superword.TestScalarize_Bailout\");\n+        synchronized (compiler.loopopts.superword.TestScalarize_Bailout.class) {\n+          for (int i = 0; i < a1.length; i++) {\n+            a1[i] = (i + 0);\n+          }\n+        }\n+    } catch (Exception eeeeeeee){throw new RuntimeException(eeeeeeee);}\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestScalarize_Bailout.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}