{"files":[{"patch":"@@ -676,1 +676,1 @@\n-\n+  \n@@ -680,0 +680,2 @@\n+  int invocation() { return _invocation; }\n+\n","filename":"src\/hotspot\/share\/opto\/escape.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"opto\/c2compiler.hpp\"\n@@ -38,0 +39,1 @@\n+#include \"opto\/escape.hpp\"\n@@ -820,1 +822,7 @@\n-    if (C->check_node_count(300, \"out of nodes while scalarizing object\")) {\n+    if (C->live_nodes() + NodeLimitFudgeFactor > C->max_node_limit()) {\n+      if (C->do_escape_analysis() == true && !C->failing()) {\n+        \/\/ Retry compilation without escape analysis.\n+        \/\/ If this is the first failure, the sentinel string will \"stick\"\n+        \/\/ to the Compile object, and the C2Compiler will see it and retry.\n+        C->record_failure(C->congraph()->invocation() > 0 ? C2Compiler::retry_no_iterative_escape_analysis() : C2Compiler::retry_no_escape_analysis());\n+      }\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"}]}