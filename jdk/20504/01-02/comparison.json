{"files":[{"patch":"@@ -819,0 +819,4 @@\n+    \/\/ If scalarize operation is adding too many nodes, bail out\n+    if (C->check_node_count(300, \"out of nodes while scalarizing object\")) {\n+      return nullptr;\n+    }\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,0 +76,4 @@\n+  if (!C->phase_optimize_finished()) {\n+    \/\/ Only check assert during parsing and optimization phase. Skip it while generating code.\n+    assert(C->live_nodes() <= C->max_node_limit(), \"Live Node limit exceeded limit\");\n+  }\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,3 +33,0 @@\n- * @run main\/othervm -Xcomp\n- *                   -XX:EliminateAllocationArraySizeLimit=10240\n- *                   compiler.loopopts.superword.ReductionPerf\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/ReductionPerf.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\r\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\r\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\r\n+ *\r\n+ * This code is free software; you can redistribute it and\/or modify it\r\n+ * under the terms of the GNU General Public License version 2 only, as\r\n+ * published by the Free Software Foundation.\r\n+ *\r\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\r\n+ * version 2 for more details (a copy is included in the LICENSE file that\r\n+ * accompanied this code).\r\n+ *\r\n+ * You should have received a copy of the GNU General Public License version\r\n+ * 2 along with this work; if not, write to the Free Software Foundation,\r\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\r\n+ *\r\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\r\n+ * or visit www.oracle.com if you need additional information or have any\r\n+ * questions.\r\n+ *\/\r\n+\r\n+\/**\r\n+ * @test\r\n+ * @bug 8315916\r\n+ * @summary Test early bailout during the creation of graph nodes for the scalarization of array fields, rather than during code generation.\r\n+ *\r\n+ * @run main\/othervm -Xcomp\r\n+ *                   -XX:EliminateAllocationArraySizeLimit=60240\r\n+ *                   compiler.loopopts.superword.TestScalarize_Bailout\r\n+ *\/\r\n+\r\n+package compiler.loopopts.superword;\r\n+\r\n+public class TestScalarize_Bailout {\r\n+\r\n+static Object var1;\r\n+public static void main(String[] args) throws Exception {    \r\n+    var1 = new long[48 * 1024];\r\n+    long[] a1 = new long[48 * 1024];\r\n+    try {\r\n+        Class <?> Class37 = Class.forName(\"compiler.loopopts.superword.TestScalarize_Bailout\");\r\n+        synchronized (compiler.loopopts.superword.TestScalarize_Bailout.class) {\r\n+          for (int i = 0; i < a1.length; i++) {\r\n+            a1[i] = (i + 0);\r\n+          }\r\n+        }\r\n+    } catch (Exception eeeeeeee){throw new RuntimeException(eeeeeeee);}\r\n+    }\r\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestScalarize_Bailout.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"}]}