{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @library \/test\/lib\n@@ -46,0 +47,3 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n@@ -136,4 +140,0 @@\n-        Process p = Runtime.getRuntime().exec(\"mkfifo \" + fifoFile);\n-        if (p.waitFor() != 0)\n-            throw new IOException(\"Error creating fifo\");\n-        new RandomAccessFile(fifoFile, \"rw\").close();\n@@ -141,0 +141,17 @@\n+        ProcessBuilder pb = new ProcessBuilder(\"mkfifo\", fifoFile.toString());\n+        OutputAnalyzer oa = ProcessTools.executeProcess(pb);\n+        oa.waitFor();\n+        if (oa.getExitValue() != 0) {\n+            String stderr = oa.getStderr();\n+            if (stderr.contains(\"mkfifo\") &&\n+                stderr.contains(\"Operation not supported\")) {\n+                fifoFile = null;\n+                log.println(\"WARNING: mkfifo failed - cannot completely test FileChannels\");\n+                return;\n+            } else {\n+                throw new IOException(\"Error creating fifo \\\"\" +\n+                    fifoFile.getAbsolutePath() + \"\\\"\\n\" +\n+                    ProcessTools.getProcessLog(pb, oa));\n+            }\n+        }\n+        new RandomAccessFile(fifoFile, \"rw\").close();\n","filename":"test\/jdk\/java\/nio\/channels\/AsyncCloseAndInterrupt.java","additions":22,"deletions":5,"binary":false,"changes":27,"status":"modified"}]}