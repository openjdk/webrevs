{"files":[{"patch":"@@ -44,0 +44,2 @@\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n@@ -109,0 +111,2 @@\n+            \/\/ Note the VM options used are best-effort to get the desired base and shift,\n+            \/\/ but it is OS dependent, so we may not get the desired configuration.\n@@ -110,1 +114,1 @@\n-                list.add(\"-Xmx1g\"); \/\/ Set max heap < 4G\n+                list.add(\"-Xmx128m\"); \/\/ Set max heap < 4G;\n@@ -112,1 +116,1 @@\n-                list.add(\"-Xmx6g\"); \/\/ Set max heap > 4G\n+                list.add(\"-Xmx6g\"); \/\/ Set max heap > 4G for shift to be non-zero\n@@ -134,1 +138,1 @@\n-                                        \"-Xlog:cds=info\",\n+                                        \"-Xlog:cds=info\", \/\/ we need this to parse CompressedOops settings\n@@ -153,1 +157,45 @@\n-                 if (zeroShiftInAsmPhase != zeroShiftInProdPhase) {\n+                 int aotCacheShift = -1, currentShift = -1;\n+                 long aotCacheBase = -1, currentBase = -1;\n+                 List<String> list = out.asLines();\n+                 \/* We tried to have CompressedOops settings as per the test requirement,\n+                  * but it ultimately depends on OS and is not guaranteed that we have got the desired settings.\n+                  * So we parse the log output from the production run to get the real settings.\n+                  *\n+                  * Parse the following Xlog:cds output to get the values of CompressedOops::base and CompressedOops::shift\n+                  * used during the AOTCache assembly and production run:\n+                  *\n+                  *    [0.022s][info][cds] CDS archive was created with max heap size = 1024M, and the following configuration:\n+                  *    [0.022s][info][cds]     narrow_klass_base at mapping start address, narrow_klass_pointer_bits = 32, narrow_klass_shift = 0\n+                  *    [0.022s][info][cds]     narrow_oop_mode = 1, narrow_oop_base = 0x0000000000000000, narrow_oop_shift = 3\n+                  *    [0.022s][info][cds] The current max heap size = 31744M, G1HeapRegion::GrainBytes = 16777216\n+                  *    [0.022s][info][cds]     narrow_klass_base = 0x000007fc00000000, arrow_klass_pointer_bits = 32, narrow_klass_shift = 0\n+                  *    [0.022s][info][cds]     narrow_oop_mode = 3, narrow_oop_base = 0x0000000300000000, narrow_oop_shift = 3\n+                  *    [0.022s][info][cds]     heap range = [0x0000000301000000 - 0x0000000ac1000000]\n+                  *\/\n+                 Pattern p = Pattern.compile(\"narrow_oop_base = 0x(\\\\d+), narrow_oop_shift = (\\\\d)\");\n+                 for (int i = 0; i < list.size(); i++) {\n+                     String line = list.get(i);\n+                     if (line.indexOf(\"CDS archive was created with max heap size\") != -1) {\n+                         \/\/ Parse AOT Cache CompressedOops settings\n+                         line = list.get(i+2);\n+                         Matcher m = p.matcher(line);\n+                         if (!m.find()) {\n+                             throw new RuntimeException(\"Pattern \\\"\" + p + \"\\\" not found in the output\");\n+                         }\n+                         aotCacheBase = Long.valueOf(m.group(1), 16);\n+                         aotCacheShift = Integer.valueOf(m.group(2));\n+                         \/\/ Parse current CompressedOops settings\n+                         line = list.get(i+5);\n+                         m = p.matcher(line);\n+                         if (!m.find()) {\n+                             throw new RuntimeException(\"Pattern \\\"\" + p + \"\\\" not found in the output\");\n+                         }\n+                         currentBase = Long.valueOf(m.group(1), 16);\n+                         currentShift = Integer.valueOf(m.group(2));\n+                         break;\n+                     }\n+                 }\n+                 if (aotCacheShift == -1 || currentShift == -1 || aotCacheBase == -1 || currentBase == -1) {\n+                     throw new RuntimeException(\"Failed to find CompressedOops settings\");\n+                 }\n+                 if (aotCacheShift != currentShift) {\n@@ -155,1 +203,1 @@\n-                 } else if (zeroBaseInAsmPhase != zeroBaseInProdPhase) {\n+                 } else if (aotCacheBase != currentBase) {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCode\/AOTCodeCompressedOopsTest.java","additions":53,"deletions":5,"binary":false,"changes":58,"status":"modified"}]}