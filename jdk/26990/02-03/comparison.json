{"files":[{"patch":"@@ -748,0 +748,1 @@\n+                \/* Test cases: \"0.9e-324\", \"3e-500\" *\/\n@@ -751,0 +752,1 @@\n+                \/* Test cases: \"0.1e310\", \"4e500\" *\/\n@@ -778,0 +780,9 @@\n+\n+                \/*\n+                 * Test cases:\n+                 *      for fl < 2^63: \"1\", \"2.34000e2\", \"9.223e18\";\n+                 *      for fl ≥ 2^63: \"9.876e18\", \"9223372036854776833\" (this\n+                 *          is 2^63 + 2^10 + 1, rounding up due to sticky bit),\n+                 *          \"9223372036854776832\" (this is 2^63 + 2^10, halfway\n+                 *          value rounding down to even);\n+                 *\/\n@@ -798,0 +809,7 @@\n+\n+                    \/*\n+                     * Test cases:\n+                     *      for ep < 0: \"1.23\", \"0.000234\";\n+                     *      for ep > 0: \"3.45e23\", \"576460752303423616e20\" (the\n+                     *          significand is 2^59 + 2^7, an exact double);\n+                     *\/\n@@ -825,0 +843,6 @@\n+                        \/*\n+                         * Test cases:\n+                         *      f does not start with 9: \"1e37\", \"8999e34\";\n+                         *      f starts with 9: \"0.9999e36\", \"0.9876e37\";\n+                         *\/\n+\n@@ -949,0 +973,8 @@\n+                    \/*\n+                     * Test cases:\n+                     *      for ll = lh ∧ ul = uh: \"1.2e-200\", \"2.3e100\";\n+                     *      for ll ≠ lh ∧ ul = uh: \"1.2000000000000000003e-200\",\n+                     *          \"2.3000000000000000004e100\";\n+                     *      for ll = lh ∧ v = ∞: \"5.249320425370670463e308\";\n+                     *      for ll ≠ lh ∧ v = ∞: \"5.2493204253706704633e308\";\n+                     *\/\n@@ -977,0 +1009,5 @@\n+                        \/*\n+                         * Test cases:\n+                         *      for ll = lh: \"1.2e-320\";\n+                         *      for ll ≠ lh: \"1.2000000000000000003e-320\";\n+                         *\/\n@@ -989,0 +1026,6 @@\n+\n+                    \/*\n+                     * Test cases:\n+                     *      for ll = lh: \"2.225073858507201383e-308\"\n+                     *      for ll ≠ lh: \"2.2250738585072013831e-308\"\n+                     *\/\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FloatingDecimal.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,2 @@\n- * @bug 4160406 4705734 4707389 4826774 4895911 4421494 6358355 7021568 7039369 4396272\n+ * @bug 4160406 4705734 4707389 4826774 4895911 4421494 6358355 7021568\n+ *      7039369 4396272 8366017\n@@ -762,0 +763,33 @@\n+    private static void testFastPaths() {\n+        \/* Exercises the fast paths in jdk.internal.math.FloatingDecimal. *\/\n+        check(\"1\", 1.0);\n+        check(\"2.34000e2\", 234.0);\n+        check(\"9.223e18\", 9.223e18);\n+        check(\"9.876e18\", 9.876e18);\n+        check(\"9223372036854776833\", 9.223372036854778E18);\n+        check(\"9223372036854776832\", 9.223372036854776E18);\n+\n+        check(\"1.23\", 1.23);\n+        check(\"0.000234\", 2.34E-4);\n+        check(\"3.45e23\", 3.45E23);\n+        check(\"576460752303423616e20\", 5.764607523034236E37);\n+\n+        check(\"1e37\", 1.0E37);\n+        check(\"8999e34\", 8.999E37);\n+        check(\"0.9999e36\", 9.999E35);\n+        check(\"0.9876e37\", 9.876E36);\n+\n+        check(\"1.2e-200\", 1.2E-200);\n+        check(\"2.3e100\", 2.3E100);\n+        check(\"1.2000000000000000003e-200\", 1.2E-200);\n+        check(\"2.3000000000000000004e100\", 2.3E100);\n+        check(\"5.249320425370670463e308\", Double.POSITIVE_INFINITY);\n+        check(\"5.2493204253706704633e308\", Double.POSITIVE_INFINITY);\n+\n+        check(\"1.2e-320\", 1.2E-320);\n+        check(\"1.2000000000000000003e-320\", 1.2E-320);\n+\n+        check(\"2.225073858507201383e-308\", Double.MIN_NORMAL);\n+        check(\"2.2250738585072013831e-308\", Double.MIN_NORMAL);\n+    }\n+\n@@ -778,0 +812,2 @@\n+\n+        testFastPaths();\n@@ -779,0 +815,1 @@\n+\n","filename":"test\/jdk\/java\/lang\/Double\/ParseDouble.java","additions":39,"deletions":2,"binary":false,"changes":41,"status":"modified"}]}