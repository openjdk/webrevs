{"files":[{"patch":"@@ -288,7 +288,0 @@\n-        final Constructor<?> cc;\n-        try {\n-            cc = settingControlClass.getDeclaredConstructors()[0];\n-        } catch (Exception e) {\n-            throw (Error) new InternalError(\"Could not get constructor for \" + settingControlClass.getName()).initCause(e);\n-        }\n-        cc.setAccessible(true);\n@@ -296,0 +289,2 @@\n+            Constructor<?> cc = findDefaultConstructor(settingControlClass);\n+            cc.setAccessible(true);\n@@ -302,0 +297,10 @@\n+    private Constructor<?> findDefaultConstructor(Class<? extends SettingControl> settingControlClass) {\n+        for (Constructor<?> c : settingControlClass.getDeclaredConstructors()) {\n+            if (c.getParameterCount() == 0) {\n+                return c;\n+            }\n+        }\n+        \/\/ Programming error by user, fail fast\n+        throw new InstantiationError(\"Could not find default constructor for \" + settingControlClass.getName());\n+    }\n+\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventControl.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,8 @@\n+    \/\/ Purpose of this constructor is to ensure that the correct\n+    \/\/ constructor is picked when the event class is registered\n+    public RegExpControl(String dummy) {\n+    }\n+\n+    public RegExpControl() {\n+    }\n+\n","filename":"test\/jdk\/jdk\/jfr\/api\/settings\/RegExpControl.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"}]}