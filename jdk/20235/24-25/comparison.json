{"files":[{"patch":"@@ -608,5 +608,0 @@\n-    Register temp2 = R9;\n-    Register temp3 = R10;\n-    Register temp4 = R11;\n-    Register align = data;\n-    Register load = R12;\n@@ -633,1 +628,0 @@\n-    Label L_end, L_aligned, L_error, L_trigger_assert, L_skip_assert;\n@@ -657,4 +651,1 @@\n-    __ beq(CR0, L_trigger_assert);\n-    __ b(L_skip_assert);                          \/\/ Skip assertion if 'blocks' is nonzero\n-    __ bind(L_trigger_assert);\n-    __ asm_assert_eq(\"blocks should NOT be zero\");\n+    __ asm_assert_ne(\"blocks should NOT be zero\");\n@@ -662,1 +653,0 @@\n-    __ bind(L_skip_assert);\n@@ -689,1 +679,1 @@\n-    Label L_aligned_loop, L_store, L_unaligned_loop;\n+    Label L_aligned_loop, L_store, L_unaligned_loop, L_initialize_unaligned_loop;\n@@ -692,5 +682,2 @@\n-    __ beq(CR0, L_aligned_loop);\n-    __ li(temp1,0);\n-    __ lvsl(vPerm, temp1, data);\n-    __ lvx(vHigh, temp1, data);\n-    __ b(L_unaligned_loop);\n+    __ bne(CR0, L_initialize_unaligned_loop);\n+\n@@ -703,1 +690,1 @@\n-      __ bdnz(L_aligned_loop);\n+    __ bdnz(L_aligned_loop);\n@@ -705,0 +692,6 @@\n+\n+    __ bind(L_initialize_unaligned_loop);\n+    __ li(temp1,0);\n+    __ lvsl(vPerm, temp1, data);\n+    __ lvx(vHigh, temp1, data);\n+\n@@ -714,1 +707,2 @@\n-      __ bdnz(L_unaligned_loop);\n+    __ bdnz(L_unaligned_loop);\n+\n@@ -718,0 +712,1 @@\n+\n","filename":"src\/hotspot\/cpu\/ppc\/stubGenerator_ppc.cpp","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"}]}