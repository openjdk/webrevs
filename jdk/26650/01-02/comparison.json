{"files":[{"patch":"@@ -255,1 +255,1 @@\n-    private static class StreamDisposerRecord implements DisposerRecord {\n+    static class StreamDisposerRecord implements DisposerRecord {\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/stream\/FileCacheImageInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import javax.imageio.stream.FileCacheImageInputStream.StreamDisposerRecord;\n@@ -53,1 +54,1 @@\n-    private final FileCacheDisposerRecord disposerRecord;\n+    private final StreamDisposerRecord disposerRecord;\n@@ -101,1 +102,1 @@\n-        this.disposerRecord = new FileCacheDisposerRecord(cacheFile, cache);\n+        this.disposerRecord = new StreamDisposerRecord(cacheFile, cache);\n@@ -232,26 +233,0 @@\n-    private static class FileCacheDisposerRecord implements DisposerRecord {\n-\n-        private final File cacheFile;\n-        private final RandomAccessFile cache;\n-        private volatile boolean disposed;\n-\n-        public FileCacheDisposerRecord(File cacheFile, RandomAccessFile cache) {\n-            this.cacheFile = cacheFile;\n-            this.cache = cache;\n-        }\n-\n-        @Override\n-        public synchronized void dispose() {\n-            if (disposed) {\n-                return;\n-            }\n-            try {\n-                cache.close();\n-                cacheFile.delete();\n-            } catch (IOException e) {\n-            } finally {\n-                 disposed = true;\n-            }\n-       }\n-    }\n-\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/stream\/FileCacheImageOutputStream.java","additions":3,"deletions":28,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n- *     (ImageOutputStream ios = new FileCacheImageOutputStream(fos, null)) {\n+ *      ImageOutputStream ios = new FileCacheImageOutputStream(fos, null)) {\n@@ -66,1 +66,1 @@\n- * Sub-classers of these Image I\/O API stream types can to a limited extent protect\n+ * Sub-classers of these Image I\/O API stream types can, to a limited extent, protect\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/stream\/package-info.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}