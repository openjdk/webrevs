{"files":[{"patch":"@@ -1210,0 +1210,1 @@\n+  _is_shutting_down(false),\n@@ -1508,2 +1509,2 @@\n-bool G1CollectedHeap::concurrent_mark_is_terminating() const {\n-  return _cm_thread->should_terminate();\n+bool G1CollectedHeap::is_shutting_down() const {\n+  return Atomic::load_acquire(&_is_shutting_down);\n@@ -1513,0 +1514,1 @@\n+  Atomic::release_store_fence(&_is_shutting_down, true);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -820,0 +820,3 @@\n+  \/\/ Flag to indicate that VM is shutting down.\n+  volatile bool _is_shutting_down;\n+\n@@ -904,2 +907,2 @@\n-  \/\/ Returns whether concurrent mark threads (and the VM) are about to terminate.\n-  bool concurrent_mark_is_terminating() const;\n+  \/\/ Returns whether the VM are about to terminate.\n+  bool is_shutting_down() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2044,1 +2044,1 @@\n-  if (!cm_thread()->in_progress() && !_g1h->concurrent_mark_is_terminating()) {\n+  if (!cm_thread()->in_progress() && !_g1h->is_shutting_down()) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -668,4 +668,10 @@\n-  double prev_gc_cpu_pause_end_ms = _analytics->gc_cpu_time_at_pause_end_ms();\n-  double cur_gc_cpu_time_ms = _analytics->gc_cpu_time_ms();\n-\n-  double concurrent_gc_cpu_time_ms = cur_gc_cpu_time_ms - prev_gc_cpu_pause_end_ms;\n+  \/\/ Do not read CPU times for concurrent GC threads if the VM is shutting down,\n+  \/\/ as these threads may have already terminated, resulting in crashes.\n+  \/\/ Only compute concurrent GC CPU time if the VM is not in the process of shutting down.\n+  double concurrent_gc_cpu_time_ms = 0.0;\n+  if (!_g1h->is_shutting_down()) {\n+    double prev_gc_cpu_pause_end_ms = _analytics->gc_cpu_time_at_pause_end_ms();\n+    double cur_gc_cpu_time_ms = _analytics->gc_cpu_time_ms();\n+\n+    concurrent_gc_cpu_time_ms = cur_gc_cpu_time_ms - prev_gc_cpu_pause_end_ms;\n+  }\n@@ -1249,1 +1255,1 @@\n-  if (_g1h->concurrent_mark_is_terminating()) {\n+  if (_g1h->is_shutting_down()) {\n@@ -1379,2 +1385,4 @@\n-  double elapsed_gc_cpu_time = _analytics->gc_cpu_time_ms();\n-  _analytics->set_gc_cpu_time_at_pause_end_ms(elapsed_gc_cpu_time);\n+  if (!_g1h->is_shutting_down()) {\n+    double elapsed_gc_cpu_time = _analytics->gc_cpu_time_ms();\n+    _analytics->set_gc_cpu_time_at_pause_end_ms(elapsed_gc_cpu_time);\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1108,1 +1108,1 @@\n-              _g1h->concurrent_mark_is_terminating()) &&\n+              _g1h->is_shutting_down()) &&\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-  _terminating = g1h->concurrent_mark_is_terminating();\n+  _terminating = g1h->is_shutting_down();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}