{"files":[{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.TextArea;\n+\n+\/*\n+ * @test\n+ * @bug 6192116\n+ * @summary Auto-scrolling does not work properly for TextArea when appending some text, on XToolkit\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextAreaAppendScrollTest2\n+ *\/\n+\n+public class TextAreaAppendScrollTest2 extends Frame {\n+    TextArea area;\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Press pass if you see exclamation marks in the bottom of textarea.\n+            Press fail if you don't.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TextAreaAppendScrollTest2\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(TextAreaAppendScrollTest2::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public TextAreaAppendScrollTest2() {\n+        setLayout(new BorderLayout());\n+        area = new TextArea(\"AWT is cool \", 3, 3, TextArea.SCROLLBARS_NONE);\n+        add(\"Center\", area);\n+        setSize(200, 200);\n+        StringBuilder coolStr = new StringBuilder(\"\");\n+        \/\/ I count 15 lines with 12 cools per line\n+        for (int i = 0; i < 12 * 15; i++) {\n+            coolStr.append(\"cool \");\n+        }\n+        coolStr.append(\"!!!!!!!\");\n+        area.append(coolStr.toString());\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaAppendScrollTest2.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.TextArea;\n+\n+\/*\n+ * @test\n+ * @bug 4118915\n+ * @summary Test appending to a TextArea after the peer is created\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextAreaAppendTest\n+ *\/\n+\n+public class TextAreaAppendTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            If all four lines are visible in TextArea, the test passed.\n+            If the last two lines have only one character visible, the test failed.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TextAreaAppendTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(TextAreaAppendTest::createGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createGUI() {\n+        Frame f = new Frame(\"TextAreaAppendTest\");\n+        TextArea ta = new TextArea();\n+        f.add(ta);\n+        ta.append(\"line 1 (added before drawing)\\n\");\n+        ta.append(\"line 2 (added before drawing)\\n\");\n+\n+        f.pack();\n+        f.show();\n+\n+        ta.append(\"line 3 (added after drawing)\\n\");\n+        ta.append(\"line 4 (added after drawing)\\n\");\n+\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaAppendTest.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.Panel;\n+import java.awt.TextArea;\n+import java.awt.TextField;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 4800187\n+ * @summary REGRESSION:show the wrong selection when there are \\r characters in the text\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextAreaCRLFAutoDetectManualTest\n+ *\/\n+\n+public class TextAreaCRLFAutoDetectManualTest {\n+    static int flag = 1;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+                Please click the button several times.\n+                If you see the text '679' selected on the left TextArea\n+                and the same text on the right TextArea\n+                each time you press the button,\n+                the test passed, else failed.\n+                \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TextAreaCRLFAutoDetectManualTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(TextAreaCRLFAutoDetectManualTest::createGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createGUI() {\n+        Frame f = new Frame(\"TextAreaCRLFAutoDetectManualTest\");\n+\n+        TextArea ta1 = new TextArea(5, 20);\n+        TextArea ta2 = new TextArea(5, 20);\n+\n+        TextField tf1 = new TextField(\"123\", 20);\n+        TextField tf2 = new TextField(\"567\", 20);\n+        TextField tf3 = new TextField(\"90\", 20);\n+\n+        Button b = new Button(\"Click Me Several Times\");\n+\n+        b.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent evt) {\n+                ta1.setText(\"\");\n+                ta2.setText(\"\");\n+                flag++;\n+                String eoln = ((flag % 2) != 0) ? \"\\r\\n\" : \"\\n\";\n+                ta1.setText(eoln + tf1.getText() + eoln + tf2.getText() + eoln + tf3.getText() + eoln);\n+                ta1.select(6, 10);\n+                ta2.setText(ta1.getSelectedText());\n+                ta1.requestFocus();\n+            }\n+        });\n+\n+        f.setLayout(new FlowLayout());\n+\n+        Panel tfpanel = new Panel();\n+        tfpanel.setLayout(new GridLayout(3, 1));\n+        tfpanel.add(tf1);\n+        tfpanel.add(tf2);\n+        tfpanel.add(tf3);\n+        f.add(tfpanel);\n+\n+        f.add(ta1);\n+        f.add(ta2);\n+        f.add(b);\n+\n+        f.pack();\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaCRLFAutoDetectManualTest.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.TextArea;\n+\n+\/*\n+ * @test\n+ * @bug 4341196\n+ * @summary Tests that TextArea can handle more than 64K of text\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextAreaLimit\n+ *\/\n+\n+public class TextAreaLimit extends Frame {\n+    static TextArea text;\n+    private static final String INSTRUCTIONS = \"\"\"\n+            You will see a text area with 40000 lines of text\n+            each with its own line number. If you see the caret after line 39999\n+            then test passes. Otherwise it fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TextAreaLimit\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(TextAreaLimit::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public TextAreaLimit() {\n+        setLayout(new BorderLayout());\n+\n+        text = new TextArea();\n+        add(text);\n+        StringBuffer buf = new StringBuffer();\n+        for (int i = 0; i < 40000; i++) {\n+            buf.append(i + \"\\n\");\n+        }\n+        text.setText(buf.toString());\n+        text.setCaretPosition(buf.length());\n+        text.requestFocus();\n+        setSize(200, 200);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaLimit.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"}]}