{"files":[{"patch":"@@ -678,0 +678,12 @@\n+  \/\/ Restore all (failed) forwardings.\n+  ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n+  struct ResetForwardedMarkWord : ObjectClosure {\n+    void do_object(oop obj) override {\n+      if (obj->is_forwarded()) {\n+        obj->init_mark();\n+      }\n+    }\n+  } cl;\n+  heap->young_gen()->eden_space()->object_iterate(&cl);\n+  heap->young_gen()->from_space()->object_iterate(&cl);\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -216,4 +216,2 @@\n-  if (obj->is_forwarded() && obj->forwardee() != obj) {\n-    \/\/ We will see the forwardee instead, don't count this object as missed.\n-    return true;\n-  }\n+  assert(!obj->is_forwarded(), \"must not be forwarded\");\n+\n","filename":"src\/hotspot\/share\/memory\/heapInspection.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}