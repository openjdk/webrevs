{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,2 @@\n-static const int native_invoker_code_size = 1024;\n+static const int native_invoker_code_base_size = 256;\n+static const int native_invoker_size_per_arg = 8;\n@@ -104,2 +105,3 @@\n-  int locs_size = 64;\n-  CodeBuffer code(\"nep_invoker_blob\", native_invoker_code_size, locs_size);\n+  int code_size = native_invoker_code_base_size + (num_args * native_invoker_size_per_arg);\n+  int locs_size = 1; \/\/ must be non-zero\n+  CodeBuffer code(\"nep_invoker_blob\", code_size, locs_size);\n","filename":"src\/hotspot\/cpu\/riscv\/downcallLinker_riscv.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,0 +117,3 @@\n+static const int upcall_stub_code_base_size = 2048;\n+static const int upcall_stub_size_per_arg = 16;\n+\n@@ -127,1 +130,2 @@\n-  CodeBuffer buffer(\"upcall_stub\", \/* code_size = *\/ 2048, \/* locs_size = *\/ 1024);\n+  int code_size = upcall_stub_code_base_size + (total_in_args * upcall_stub_size_per_arg);\n+  CodeBuffer buffer(\"upcall_stub\", code_size, \/* locs_size = *\/ 1);\n@@ -346,0 +350,2 @@\n+  buffer.log_section_sizes(name);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/upcallLinker_riscv.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"}]}