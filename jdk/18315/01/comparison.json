{"files":[{"patch":"@@ -1,43 +0,0 @@\n-<!--\n- Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--\n-  @test %W% %E%\n-  @bug 4874070\n-  @summary Tests basic DnD functionality\n-  @author Your Name: Alexey Utkin area=dnd\n-  @run applet\/manual=yesno ImageDecoratedDnD.html\n-  -->\n-<head>\n-    <title> ImageDecoratedDnD <\/title>\n-<\/head>\n-<body>\n-\n-<h1>ImageDecoratedDnD<br>Bug ID: 4874070<\/h1>\n-\n-<p> See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"ImageDecoratedDnD.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/dnd\/ImageDecoratedDnD\/ImageDecoratedDnD.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,10 +24,5 @@\n-\/*\n-  test %W% %E%\n-  @bug 4874070\n-  @summary Tests basic DnD functionality\n-  @author Your Name: Alexey Utkin area=dnd\n-  @run applet\/manual=yesno ImageDecoratedDnD.html\n-*\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Frame;\n+import java.awt.Panel;\n@@ -36,0 +31,8 @@\n+\/*\n+ * @test\n+ * @bug 4874070\n+ * @summary Tests basic DnD functionality\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ImageDecoratedDnD\n+ *\/\n@@ -37,0 +40,40 @@\n+public class ImageDecoratedDnD {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            When test runs a Frame which contains a yellow button labeled \"Drag ME!\"\n+            and a RED Panel will appear.\n+\n+            1. Click on the button and drag to the red panel by pressing\n+               the \"CTRL\" key on the keyboard.\n+\n+            2. When the mouse enters the red panel during the drag, the panel\n+               should turn yellow.\n+\n+                On the systems that supports pictured drag, the image under the drag-cursor\n+                should appear.\n+                \"Image under drag-cursor\" is a translucent blue rectangle + red circle\n+                and includes an anchor that is shifted from top-left corner of the\n+                picture to inside the picture to 10pt in both dimensions.\n+\n+                On Windows system the image under cursor would be visible ONLY over\n+                the drop targets with activated extended OLE D'n'D support (that are,\n+                the desktop and IE).\n+\n+            3. Release the mouse button.\n+\n+                The panel should turn red again and a yellow button labeled ,\n+                \"Drag ME!\" should appear inside the panel. You should be able,\n+                to repeat this operation multiple times.\n+\n+            If above is true press PASS, else press FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(ImageDecoratedDnD::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -38,32 +81,2 @@\n-public class ImageDecoratedDnD extends Applet {\n-    \/\/Declare things used in the test, like buttons and labels here\n-\n-    public void init() {\n-        \/\/Create instructions for the user here, as well as set up\n-        \/\/ the environment -- set the layout manager, add buttons,\n-        \/\/ etc.\n-        this.setLayout(new BorderLayout());\n-\n-        String[] instructions =\n-                {\n-                        \"A Frame, which contains a yellow button labeled \\\"Drag ME!\\\" and \",\n-                        \"a red panel, will appear below. \",\n-                        \"1. Click on the button and drag to the red panel. \",\n-                        \"2. When the mouse enters the red panel during the drag, the panel \",\n-                        \"should turn yellow. On the systems that supports pictured drag, \",\n-                        \"the image under the drag-cursor should appear (ancor is shifted \",\n-                        \"from top-left corner of the picture inside the picture to 10pt in both dimensions ). \",\n-                        \"In WIN32 systems the image under cursor would be visible ONLY over \",\n-                        \"the drop targets with activated extended OLE D\\'n\\'D support (that are \",\n-                        \"the desktop and IE ).\",\n-                        \"3. Release the mouse button.\",\n-                        \"The panel should turn red again and a yellow button labeled \",\n-                        \"\\\"Drag ME!\\\" should appear inside the panel. You should be able \",\n-                        \"to repeat this operation multiple times.\"\n-                };\n-        Sysout.createDialogWithInstructions(instructions);\n-\n-    }\/\/End  init()\n-\n-    public void start() {\n-        Frame f = new Frame(\"Use keyboard for DnD change\");\n+    public static Frame createUI() {\n+        Frame frame = new Frame(\"Ctrl + Drag - Image DnD test\");\n@@ -73,2 +86,2 @@\n-        f.setBounds(0, 400, 200, 200);\n-        f.setLayout(new BorderLayout());\n+        frame.setBounds(0, 400, 400, 400);\n+        frame.setLayout(new BorderLayout());\n@@ -79,1 +92,1 @@\n-        mainPanel.setBackground(Color.blue);\n+        mainPanel.setBackground(Color.BLUE);\n@@ -81,2 +94,3 @@\n-        dropTarget = new DnDTarget(Color.red, Color.yellow);\n-        dragSource = new DnDSource(\"Drag ME! (\" + (DragSource.isDragImageSupported()?\"with \":\"without\") + \" image)\" );\n+        dropTarget = new DnDTarget(Color.RED, Color.YELLOW);\n+        dragSource = new DnDSource(\"Drag ME! (\"\n+                + (DragSource.isDragImageSupported() ? \"with \" : \"without\") + \" image)\" );\n@@ -86,32 +100,3 @@\n-        f.add(mainPanel, BorderLayout.CENTER);\n-\n-        f.setVisible(true);\n-    }\/\/ start()\n-}\/\/ class DnDAcceptanceTest\n-\n-\n-\/**\n- * *************************************************\n- * Standard Test Machinery\n- * DO NOT modify anything below -- it's a standard\n- * chunk of code whose purpose is to make user\n- * interaction uniform, and thereby make it simpler\n- * to read and understand someone else's test.\n- * **************************************************\n- *\/\n-class Sysout {\n-    private static TestDialog dialog;\n-\n-    public static void createDialogWithInstructions(String[] instructions) {\n-        dialog = new TestDialog(new Frame(), \"Instructions\");\n-        dialog.printInstructions(instructions);\n-        dialog.show();\n-        println(\"Any messages for the tester will display here.\");\n-    }\n-\n-    public static void createDialog() {\n-        dialog = new TestDialog(new Frame(), \"Instructions\");\n-        String[] defInstr = {\"Instructions will appear here. \", \"\"};\n-        dialog.printInstructions(defInstr);\n-        dialog.show();\n-        println(\"Any messages for the tester will display here.\");\n+        frame.add(mainPanel, BorderLayout.CENTER);\n+        frame.setAlwaysOnTop(true);\n+        return frame;\n@@ -119,79 +104,1 @@\n-\n-\n-    public static void printInstructions(String[] instructions) {\n-        dialog.printInstructions(instructions);\n-    }\n-\n-\n-    public static void println(String messageIn) {\n-        dialog.displayMessage(messageIn);\n-    }\n-\n-}\/\/ Sysout  class\n-\n-\n-class TestDialog extends Dialog {\n-\n-    TextArea instructionsText;\n-    TextArea messageText;\n-    int maxStringLength = 80;\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public TestDialog(Frame frame, String name) {\n-        super(frame, name);\n-        int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-        instructionsText = new TextArea(\"\", 15, maxStringLength, scrollBoth);\n-        add(\"North\", instructionsText);\n-\n-        messageText = new TextArea(\"\", 5, maxStringLength, scrollBoth);\n-        add(\"South\", messageText);\n-\n-        pack();\n-\n-        show();\n-    }\/\/ TestDialog()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void printInstructions(String[] instructions) {\n-        \/\/Clear out any current instructions\n-        instructionsText.setText(\"\");\n-\n-        \/\/Go down array of instruction strings\n-\n-        String printStr, remainingStr;\n-        for (int i = 0; i < instructions.length; i++) {\n-            \/\/chop up each into pieces maxSringLength long\n-            remainingStr = instructions[i];\n-            while (remainingStr.length() > 0) {\n-                \/\/if longer than max then chop off first max chars to print\n-                if (remainingStr.length() >= maxStringLength) {\n-                    \/\/Try to chop on a word boundary\n-                    int posOfSpace = remainingStr.\n-                            lastIndexOf(' ', maxStringLength - 1);\n-\n-                    if (posOfSpace <= 0) posOfSpace = maxStringLength - 1;\n-\n-                    printStr = remainingStr.substring(0, posOfSpace + 1);\n-                    remainingStr = remainingStr.substring(posOfSpace + 1);\n-                }\n-                \/\/else just print\n-                else {\n-                    printStr = remainingStr;\n-                    remainingStr = \"\";\n-                }\n-\n-                instructionsText.append(printStr + \"\\n\");\n-\n-            }\/\/ while\n-\n-        }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void displayMessage(String messageIn) {\n-        messageText.append(messageIn + \"\\n\");\n-    }\n-\n-}\/\/ TestDialog  class\n-\n+}\n","filename":"test\/jdk\/java\/awt\/dnd\/ImageDecoratedDnD\/ImageDecoratedDnD.java","additions":66,"deletions":159,"binary":false,"changes":225,"status":"modified"}]}