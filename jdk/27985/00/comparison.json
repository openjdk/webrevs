{"files":[{"patch":"@@ -47,0 +47,1 @@\n+#include \"utilities\/nativeCallStack.hpp\"\n@@ -572,0 +573,4 @@\n+  \/\/ We are called from a signal handler, so stop the stack backtrace here.\n+  \/\/ See os::is_first_C_frame() in os::get_native_stack().\n+  os::FirstNativeFrameMark fnfm;\n+\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1407,1 +1407,1 @@\n-bool os::is_first_C_frame(frame* fr) {\n+bool os::is_first_C_frame(const frame* fr) {\n@@ -1412,0 +1412,7 @@\n+\n+  \/\/ Check for a user-specified first frame, which can be used to prevent\n+  \/\/ walking through signal handlers, etc.\n+  if (FirstNativeFrameMark::is_first_native_frame(*fr)) {\n+    return true;\n+  }\n+\n@@ -2643,0 +2650,2 @@\n+\n+THREAD_LOCAL address os::FirstNativeFrameMark::_first_frame_stack_pointer = nullptr;\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -887,1 +887,1 @@\n-  static bool is_first_C_frame(frame *fr);\n+  static bool is_first_C_frame(const frame *fr);\n@@ -1103,0 +1103,19 @@\n+\n+ public:\n+  class FirstNativeFrameMark {\n+   private:\n+    static THREAD_LOCAL address _first_frame_stack_pointer;\n+    address _saved_stack_pointer;\n+\n+   public:\n+    FirstNativeFrameMark(address sp = os::current_stack_pointer()) {\n+      _saved_stack_pointer = _first_frame_stack_pointer;\n+      _first_frame_stack_pointer = sp;\n+    }\n+\n+    ~FirstNativeFrameMark() {\n+      _first_frame_stack_pointer = _saved_stack_pointer;\n+    }\n+\n+    static inline bool is_first_native_frame(const frame& fr);\n+  };\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+#include \"runtime\/frame.hpp\"\n+\n@@ -62,0 +64,5 @@\n+inline bool os::FirstNativeFrameMark::is_first_native_frame(const frame& fr) {\n+  address ff_sp = _first_frame_stack_pointer;\n+  return ff_sp != nullptr && (address)fr.sp() >= ff_sp;\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/os.inline.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1198,0 +1198,14 @@\n+\n+#if !defined(_WINDOWS)\n+TEST_VM(os, FirstNativeFrameMark) {\n+  {\n+    NativeCallStack ncs(0);\n+    EXPECT_TRUE(ncs.frames() >= 1) << \"expected no less than 1 frame, but saw \" << ncs.frames();\n+  }\n+  {\n+    os::FirstNativeFrameMark fnfm;\n+    NativeCallStack ncs(0);\n+    EXPECT_TRUE(ncs.frames() <= 1) << \"expected no more than 1 frame, but saw \" << ncs.frames();\n+  }\n+}\n+#endif\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}