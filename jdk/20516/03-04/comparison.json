{"files":[{"patch":"@@ -65,1 +65,2 @@\n-  static void set_old_cds_flags_used() { CDS_ONLY(_old_cds_flags_used = true); }\n+  static void set_old_cds_flags_used()                       { CDS_ONLY(_old_cds_flags_used = true); }\n+  static bool old_cds_flags_used()                           { return CDS_ONLY(_old_cds_flags_used) NOT_CDS(false); }\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -673,3 +673,5 @@\n-  if (AOTMode != nullptr && strcmp(AOTMode, \"create\") == 0) {\n-    \/\/ We can't return to the JLI launcher, as it will try to run the main class, but\n-    \/\/ the main class is not specified when -XX:AOTMode=create is used.\n+  if (!CDSConfig::old_cds_flags_used()) {\n+    \/\/ The JLI launcher only recognizes the \"old\" -Xshare:dump flag.\n+    \/\/ When the new -XX:AOTMode=create flag is used, we can't return\n+    \/\/ to the JLI launcher, as the launcher will fail when trying to\n+    \/\/ run the main class, which is not what we want.\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-      strcmp(value, \"on\")) {\n+      strcmp(value, \"on\") != 0) {\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,0 +109,13 @@\n+\n+        \/\/ (5) AOTMode=on\n+        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-XX:AOTCache=\" + aotCacheFile,\n+            \"--show-version\",\n+            \"-Xlog:cds\",\n+            \"-XX:AOTMode=on\",\n+            \"-cp\", appJar, helloClass);\n+        out = CDSTestUtils.executeAndLog(pb, \"prod\");\n+        out.shouldContain(\", sharing\");\n+        out.shouldContain(\"Opened archive hello.aot.\");\n+        out.shouldContain(\"Hello World\");\n+        out.shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/AOTFlags.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}