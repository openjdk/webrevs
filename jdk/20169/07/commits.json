[{"commit":{"message":"Adds test for awt_LoadLibrary.c's AWTIsHeadless"},"files":[{"filename":"test\/jdk\/java\/awt\/Headless\/HeadlessMalfunctionAgent.java"},{"filename":"test\/jdk\/java\/awt\/Headless\/HeadlessMalfunctionTest.java"}],"sha":"c206f9367a9307e56bc6a44915dea52ae9c6aba5"},{"commit":{"message":"Reverting changes from Font.java"},"files":[],"sha":"aa47484d842743a0010c552a7c55e5814467c568"},{"commit":{"message":"Reverting \"java.home property not set\" from Font.java"},"files":[],"sha":"2b3de582dd99d0292c2cc1af68d8fd1e1ae75388"},{"commit":{"message":"Year 2024 for Font.java"},"files":[],"sha":"0cd0ab424ce7fca0478d6f57a36449d64378fd27"},{"commit":{"message":"Merge branch 'master' of github.com:openjdk\/jdk into awt-load-messages-fonts_backup"},"files":[{"filename":"src\/java.desktop\/unix\/native\/libawt\/awt\/awt_LoadLibrary.c"}],"sha":"8b203e7c9c9276f9b68afc23c4fc74851de42667"},{"commit":{"message":"Display \"Problem reading font data. java.home property not set.\" when java.homenot set and AWT cannot try to lookup fonts"},"files":[],"sha":"091f5aecbebfaa008e983f2986814cb595303262"},{"commit":{"message":"Treats missing class as a fatal error"},"files":[{"filename":"src\/java.desktop\/unix\/native\/libawt\/awt\/awt_LoadLibrary.c"}],"sha":"4e33725a71ec0b7d6f16394d429edbd05b6153c9"},{"commit":{"message":"Reverts changes to java\/awt\/Font.java"},"files":[],"sha":"49c6ebdd4a44f418c380a2fd5f699d7bd65856bc"},{"commit":{"message":"Fixes error reporting in loading AWT and fonts\n\nIf there is problem with finding and calling e.g. java\/awt\/GraphicsEnvironment\nin AWTIsHeadless, the env' Exception remains set and it not cleared.\nLater, that manifests as:\n\n    Fatal error reported via JNI: Could not allocate library name\n\nWhich is misleading. The code path is perhaps rare in normal JDK usage,\nbut it has been complicating our users' bug reports in the GraalVM\/native-image\necosystem for quite some time.\n\nInstead of failing later with some clear message that indicates that the\nuser has incorrectly configured JNI, it bails out very soon with a message\nthat seems as if a jstring could not have been allocated. It sends users\non wild goose chases, e.g.\n\nhttps:\/\/github.com\/oracle\/graal\/issues\/9138\nhttps:\/\/github.com\/oracle\/graal\/issues\/8475\nhttps:\/\/github.com\/oracle\/graal\/issues\/9300\nhttps:\/\/github.com\/quarkusio\/quarkus\/issues\/31596\nhttps:\/\/github.com\/graalvm\/mandrel\/issues\/292\nhttps:\/\/github.com\/Karm\/mandrel-integration-tests\/issues\/262\n\nThis commit fixes the error reporting in the AWTIsHeadless.\n\nFurthermore, when AOT compiled, there is little sense for having a JAVA_HOME,\nyet some parts of AWT code look for it to search fonts. In such case, an\nempty directory structure is enough to accommodate it, e.g.\n\n\/tmp\/JAVA_HOME\/\n\/tmp\/JAVA_HOME\/conf\n\/tmp\/JAVA_HOME\/conf\/fonts\n\/tmp\/JAVA_HOME\/lib\n\nThe exception is somewhat cryptic for users again, merely stating:\n\n    Exception in thread \"main\" java.io.IOException: Problem reading font data.\n        at java.desktop@22.0.1\/java.awt.Font.createFont0(Font.java:1205)\n        at java.desktop@22.0.1\/java.awt.Font.createFont(Font.java:1076)\n        at imageio.Main.loadFonts(Main.java:139\n\nAdding the cause there makes it clearer, i.e. that JAVA_HOME might be missing:\n\n    Exception in thread \"main\" java.io.IOException: Problem reading font data.\n        at java.desktop@23-internal\/java.awt.Font.createFont0(Font.java:1206)\n        at java.desktop@23-internal\/java.awt.Font.createFont(Font.java:1076)\n        at imageio.Main.loadFonts(Main.java:139)\n        at imageio.Main.paintRectangles(Main.java:97)\n        at imageio.Main.main(Main.java:195)\n        at java.base@23-internal\/java.lang.invoke.LambdaForm$DMH\/sa346b79c.invokeStaticInit(LambdaForm$DMH)\n    Caused by: java.lang.Error: java.home property not set\n        at java.desktop@23-internal\/sun.awt.FontConfiguration.findFontConfigFile(FontConfiguration.java:180)\n        at java.desktop@23-internal\/sun.awt.FontConfiguration.<init>(FontConfiguration.java:97)"},"files":[{"filename":"src\/java.desktop\/unix\/native\/libawt\/awt\/awt_LoadLibrary.c"}],"sha":"9d0c671e08f4896c2bd8d18d9e648a852bc60dc1"}]