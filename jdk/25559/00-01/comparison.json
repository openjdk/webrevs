{"files":[{"patch":"@@ -39,1 +39,1 @@\n- * If the event class annotated with {@code Throttle} are filtered by other\n+ * If the event class annotated with {@code Throttle} is filtered by other\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Throttle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    private volatile boolean disabled;\n+    private boolean disabled;\n@@ -120,1 +120,1 @@\n-        long projectedSampleSize = parameters.samplePointsPerWindow + amortizedDebt(expired);\n+        long projectedSampleSize = parameters.samplePointsPerWindow + amortizeDebt(expired);\n@@ -130,1 +130,1 @@\n-    private long amortizedDebt(ThrottlerWindow expired) {\n+    private long amortizeDebt(ThrottlerWindow expired) {\n@@ -148,3 +148,4 @@\n-     double projectPopulationSize(ThrottlerWindow expired) {\n-         averagePopulationSize = exponentiallyWeightedMovingAverage(expired.populationSize(), ewmaPopulationSize, averagePopulationSize);\n-         return averagePopulationSize;\n+\n+    private double projectPopulationSize(ThrottlerWindow expired) {\n+        averagePopulationSize = exponentiallyWeightedMovingAverage(expired.populationSize(), ewmaPopulationSize, averagePopulationSize);\n+        return averagePopulationSize;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/settings\/Throttler.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -48,2 +48,1 @@\n-        endTicks = JVM.counterTime() +\n-        JVMSupport.nanosToTicks(1_000_000L * parameters.windowDurationMillis);\n+        endTicks = JVM.counterTime() + JVMSupport.nanosToTicks(1_000_000L * parameters.windowDurationMillis);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/settings\/ThrottlerWindow.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}