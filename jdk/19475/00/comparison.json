{"files":[{"patch":"@@ -34,0 +34,1 @@\n+import java.util.Objects;\n@@ -78,1 +79,1 @@\n-        super(in, in != null ? new Inflater(true) : null, size);\n+        super(in, createInflater(in, size), size);\n@@ -80,1 +81,21 @@\n-        readHeader(in);\n+        try {\n+            readHeader(in);\n+        } catch (IOException ioe) {\n+            this.inf.end();\n+            throw ioe;\n+        }\n+    }\n+\n+    \/*\n+     * Creates and returns an Inflater only if the input stream is not null and the\n+     * buffer size is > 0.\n+     * If the input stream is null, then this method throws a\n+     * NullPointerException. If the size is <= 0, then this method throws\n+     * an IllegalArgumentException\n+     *\/\n+    private static Inflater createInflater(InputStream in, int size) {\n+        Objects.requireNonNull(in);\n+        if (size <= 0) {\n+            throw new IllegalArgumentException(\"buffer size <= 0\");\n+        }\n+        return new Inflater(true);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/GZIPInputStream.java","additions":23,"deletions":2,"binary":false,"changes":25,"status":"modified"}]}