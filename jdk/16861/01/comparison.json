{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -198,0 +198,3 @@\n+                if (reader instanceof LineReader lr) {\n+                    lr.zeroOut();\n+                }\n@@ -231,0 +234,5 @@\n+        public void zeroOut() throws IOException {\n+            if (in instanceof StreamDecoder sd) {\n+                sd.fillZeroToPosition();\n+            }\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/io\/JdkConsoleImpl.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -45,0 +45,2 @@\n+import java.util.Arrays;\n+\n@@ -274,0 +276,20 @@\n+    public void fillZeroToPosition() throws IOException {\n+        Object lock = this.lock;\n+        if (lock instanceof InternalLock locker) {\n+            locker.lock();\n+            try {\n+                lockedFillZeroToPosition();\n+            } finally {\n+                locker.unlock();\n+            }\n+        } else {\n+            synchronized (lock) {\n+                lockedFillZeroToPosition();\n+            }\n+        }\n+    }\n+\n+    private void lockedFillZeroToPosition() throws IOException {\n+        ensureOpen();\n+        Arrays.fill(bb.array(), bb.arrayOffset(), bb.arrayOffset() + bb.position(), (byte)0);\n+    }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/StreamDecoder.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}