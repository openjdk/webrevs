{"files":[{"patch":"@@ -2026,2 +2026,2 @@\n-  } else {\n-    ::abort();\n+    \/\/ ::raise is not noreturn, even though with SIGKILL it definitely won't\n+    \/\/ return.  Hence \"fall through\" to ::abort, which is declared noreturn.\n@@ -2029,0 +2029,1 @@\n+  ::abort();\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -69,0 +69,6 @@\n+void VMError::raise_fail_fast(void* exrecord, void* context) {\n+  DWORD flags = (exrecord == nullptr) ? FAIL_FAST_GENERATE_EXCEPTION_ADDRESS : 0;\n+  RaiseFailFastException(static_cast<PEXCEPTION_RECORD>(exrecord),\n+                         static_cast<PCONTEXT>(context),\n+                         flags);\n+}\n","filename":"src\/hotspot\/os\/windows\/vmError_windows.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -579,1 +579,1 @@\n-  static void infinite_sleep();\n+  [[noreturn]] static void infinite_sleep();\n@@ -604,1 +604,1 @@\n-  static void exit(int num);\n+  [[noreturn]] static void exit(int num);\n@@ -608,1 +608,1 @@\n-  static void _exit(int num);\n+  [[noreturn]] static void _exit(int num);\n@@ -615,2 +615,2 @@\n-  static void abort(bool dump_core, void *siginfo, const void *context);\n-  static void abort(bool dump_core = true);\n+  [[noreturn]] static void abort(bool dump_core, void *siginfo, const void *context);\n+  [[noreturn]] static void abort(bool dump_core = true);\n@@ -623,1 +623,1 @@\n-  static void die();\n+  [[noreturn]] static void die();\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1446,4 +1446,3 @@\n-    \/\/ If UseOSErrorReporting we call this for each level of the call stack\n-    \/\/ while searching for the exception handler.  Only the first level needs\n-    \/\/ to be reported.\n-    if (UseOSErrorReporting && log_done) return;\n+    if (UseOSErrorReporting && log_done) {\n+      raise_fail_fast(_siginfo, _context);\n+    }\n@@ -1681,9 +1680,12 @@\n-  if (WINDOWS_ONLY(!UseOSErrorReporting) NOT_WINDOWS(true)) {\n-    \/\/ os::abort() will call abort hooks, try it first.\n-    static bool skip_os_abort = false;\n-    if (!skip_os_abort) {\n-      skip_os_abort = true;\n-      bool dump_core = should_report_bug(_id);\n-      os::abort(dump_core && CreateCoredumpOnCrash, _siginfo, _context);\n-    }\n-\n+#if defined _WINDOWS\n+  if (UseOSErrorReporting) {\n+    raise_fail_fast(_siginfo, _context);\n+  }\n+#endif \/\/ _WINDOWS\n+\n+  \/\/ os::abort() will call abort hooks, try it first.\n+  static bool skip_os_abort = false;\n+  if (!skip_os_abort) {\n+    skip_os_abort = true;\n+    bool dump_core = should_report_bug(_id);\n+    os::abort(dump_core && CreateCoredumpOnCrash, _siginfo, _context);\n@@ -1691,1 +1693,0 @@\n-    os::die();\n@@ -1693,0 +1694,1 @@\n+  os::die();\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -139,0 +139,2 @@\n+  WINDOWS_ONLY([[noreturn]] static void raise_fail_fast(void* exrecord, void* context);)\n+\n@@ -157,0 +159,2 @@\n+  [[noreturn]]\n+  ATTRIBUTE_PRINTF(6, 7)\n@@ -158,1 +162,1 @@\n-                             void* context, const char* detail_fmt, ...) ATTRIBUTE_PRINTF(6, 7);\n+                             void* context, const char* detail_fmt, ...);\n@@ -160,0 +164,2 @@\n+  [[noreturn]]\n+  ATTRIBUTE_PRINTF(3, 0)\n@@ -162,1 +168,1 @@\n-                             const char* filename, int lineno, size_t size) ATTRIBUTE_PRINTF(3, 0);\n+                             const char* filename, int lineno, size_t size);\n@@ -164,0 +170,1 @@\n+  [[noreturn]]\n@@ -167,0 +174,2 @@\n+  [[noreturn]]\n+  ATTRIBUTE_PRINTF(6, 0)\n@@ -168,1 +177,1 @@\n-                             const char* detail_fmt, va_list detail_args) ATTRIBUTE_PRINTF(6, 0);\n+                             const char* detail_fmt, va_list detail_args);\n@@ -170,0 +179,2 @@\n+  [[noreturn]]\n+  ATTRIBUTE_PRINTF(6, 0)\n@@ -172,1 +183,1 @@\n-                             va_list detail_args) ATTRIBUTE_PRINTF(6, 0);\n+                             va_list detail_args);\n","filename":"src\/hotspot\/share\/utilities\/vmError.hpp","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"}]}