{"files":[{"patch":"@@ -228,0 +228,1 @@\n+friend class FieldInfoStream;\n@@ -274,1 +275,14 @@\n-  lookup.validate_order(comparator, search_table);\n+  uint32_t err_pivot;\n+  if (!lookup.validate_order(comparator, search_table, &err_pivot)) {\n+    char *msg;\n+    reader.set_position_and_next_index(err_pivot, -1);\n+    FieldInfo fi;\n+    reader.read_field_info(fi);\n+    ResourceMark rm;\n+    if (asprintf(&msg, \"Invalid order %s(%p) %s(%p) vs. %s(%p) %s(%p)\",\n+      comparator._name->as_C_string(), comparator._name, comparator._signature->as_C_string(), comparator._signature,\n+      fi.name(cp)->as_C_string(), fi.name(cp), fi.signature(cp)->as_C_string(), fi.signature(cp)) < 0) {\n+        msg = const_cast<char *>(\"cannot format\");\n+    }\n+    report_vm_error(__FILE__, __LINE__, msg);\n+  }\n","filename":"src\/hotspot\/share\/oops\/fieldInfo.cpp","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-void PackedTableLookup::validate_order(Comparator &comparator, const Array<u1> *search_table) const {\n+bool PackedTableLookup::validate_order(Comparator &comparator, const Array<u1> *search_table, uint32_t *err_pivot) const {\n@@ -103,2 +103,2 @@\n-    if (offset != 0) {\n-      assert(comparator.compare_to(pivot) < 0, \"not sorted\");\n+    if (offset != 0 && comparator.compare_to(pivot) >= 0) {\n+      return false;\n@@ -108,0 +108,1 @@\n+  return true;\n","filename":"src\/hotspot\/share\/utilities\/packedTable.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -25,0 +25,2 @@\n+#include \"oops\/array.hpp\"\n+\n@@ -73,1 +75,1 @@\n-  DEBUG_ONLY(void validate_order(Comparator &comparator, const Array<u1> *search_table) const);\n+  DEBUG_ONLY(bool validate_order(Comparator &comparator, const Array<u1> *search_table, uint32_t *err_pivot) const);\n","filename":"src\/hotspot\/share\/utilities\/packedTable.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}