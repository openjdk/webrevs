{"files":[{"patch":"@@ -279,0 +279,2 @@\n+    lookup.dump(search_table);\n+\n@@ -281,0 +283,1 @@\n+    int i = 0;\n@@ -283,0 +286,1 @@\n+      int pos = reader.position();\n@@ -284,1 +288,1 @@\n-      fprintf(stderr, \"FIELD %s(%p) %s(%p)\\n\", fi.name(cp)->as_C_string(), fi.name(cp), fi.signature(cp)->as_C_string(), fi.signature(cp));\n+      fprintf(stderr, \"FIELD %2d|%3d %s(%p) %s(%p)\\n\", i++, pos, fi.name(cp)->as_C_string(), fi.name(cp), fi.signature(cp)->as_C_string(), fi.signature(cp));\n","filename":"src\/hotspot\/share\/oops\/fieldInfo.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -111,0 +111,14 @@\n+\n+void PackedTableLookup::dump(const Array<u1> *search_table) const {\n+  fprintf(stderr, \"TABLE %u bytes\/item, pivot mask %x, payload shift %u mask %x\\n\",\n+    _element_bytes, _pivot_mask, _payload_shift, _payload_mask);\n+  const u1* data = search_table->data();\n+  size_t length = static_cast<size_t>(search_table->length());\n+  for (size_t offset = 0; offset < length; offset += _element_bytes) {\n+    uint64_t value = read_value(data, length, offset);\n+    uint32_t pivot = value & _pivot_mask;\n+    uint32_t payload = (value >> _payload_shift) & _payload_mask;\n+\n+    fprintf(stderr, \"%zu: %u (0x%x) %u (0x%x)\\n\", offset, pivot, pivot, payload, payload);\n+  }\n+}\n","filename":"src\/hotspot\/share\/utilities\/packedTable.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -76,0 +76,1 @@\n+  DEBUG_ONLY(void dump(const Array<u1> *search_table) const);\n","filename":"src\/hotspot\/share\/utilities\/packedTable.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}