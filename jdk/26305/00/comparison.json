{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4851642 8253409\n+ * @bug 4851642 8253409 8362207\n@@ -355,2 +355,3 @@\n-            \/\/ Double-rounding if done in double precision\n-            {0x1.fffffep23f, 0x1.000004p28f, 0x1.fep5f, 0x1.000002p52f}\n+            \/\/ Double-rounding if done in double precision and\/or double fma\n+            {0x1.fffffep23f, 0x1.000004p28f, 0x1.fep5f, 0x1.000002p52f},\n+            {0x1.001p0f,     0x1.001p0f,     0x1p-100f, 0x1.002002p0f},\n","filename":"test\/jdk\/java\/lang\/Math\/FusedMultiplyAddTests.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8329817 8334432 8339076 8341260\n+ * @bug 8329817 8334432 8339076 8341260 8362207\n@@ -819,0 +819,5 @@\n+                \/\/ Arguments where using float fma or uniform float\n+                \/\/ arithmetic gives the wrong result\n+                {0x1.08p7f, 0x1.04p7f, 0x1.0p-24f,\n+                 0x1.0c4p14f},\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/BasicFloat16ArithTests.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}