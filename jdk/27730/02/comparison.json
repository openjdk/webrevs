{"files":[{"patch":"@@ -335,0 +335,7 @@\n+            if (env.info.isAnonymousNewClass) {\n+                \/\/ Annotations on anonymous class instantiations should be attributed,\n+                \/\/ but not attached to the enclosing element. They will be visited\n+                \/\/ separately and attached to the synthetic class declaration.\n+                continue;\n+            }\n+\n@@ -1147,1 +1154,2 @@\n-            if (tree.def == null) {\n+            try {\n+                env.info.isAnonymousNewClass = tree.def != null;\n@@ -1149,0 +1157,2 @@\n+            } finally {\n+                env.info.isAnonymousNewClass = false;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Annotate.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2780,10 +2780,3 @@\n-        Type clazztype;\n-\n-        try {\n-            env.info.isAnonymousNewClass = tree.def != null;\n-            clazztype = TreeInfo.isEnumInit(env.tree) ?\n-                attribIdentAsEnumType(env, (JCIdent)clazz) :\n-                attribType(clazz, env);\n-        } finally {\n-            env.info.isAnonymousNewClass = false;\n-        }\n+        Type clazztype = TreeInfo.isEnumInit(env.tree) ?\n+            attribIdentAsEnumType(env, (JCIdent)clazz) :\n+            attribType(clazz, env);\n@@ -5259,2 +5252,1 @@\n-        if (!env.info.isAnonymousNewClass)\n-            annotate.annotateTypeSecondStage(tree, tree.annotations, annotatedType);\n+        annotate.annotateTypeSecondStage(tree, tree.annotations, annotatedType);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import com.sun.source.tree.Tree;\n@@ -94,0 +93,1 @@\n+                    new Test<@TypeAnnotation String>() {};\n@@ -115,5 +115,1 @@\n-                System.err.println(\">>> \" + type);\n-                for (Tree t : getCurrentPath()) {\n-                    System.err.println(t);\n-                }\n-                actual.add(String.format(\"Expression: %s, Type: %s\", node, type));\n+                actual.add(String.format(\"Type: %s\", type));\n@@ -147,2 +143,2 @@\n-                        \"Expression: new Test<@TypeAnnotation String>(), Type:\"\n-                                + \" test.Test<java.lang.@test.Test.TypeAnnotation String>\");\n+                        \"Type: test.Test<java.lang.@test.Test.TypeAnnotation String>\",\n+                        \"Type: <anonymous test.Test<java.lang.@test.Test.TypeAnnotation String>>\");\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/NewClassTypeAnnotation.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"}]}