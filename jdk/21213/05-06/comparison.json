{"files":[{"patch":"@@ -26,0 +26,1 @@\n+import java.awt.Container;\n@@ -34,0 +35,1 @@\n+import java.awt.Window;\n@@ -139,1 +141,0 @@\n-        final Dimension[] d = new Dimension[1];\n@@ -150,3 +151,10 @@\n-                srcPoint = source.getLocationOnScreen();\n-                d[0] = source.getSize();\n-                srcPoint.translate(d[0].width \/ 2, d[0].height \/ 2);\n+                Point p = getPoint(source, 1);\n+                srcPoint = p;\n+\n+                p = getPoint(frame, 3);\n+                dstOutsidePoint = p;\n+                testPoint1.setLocation(p);\n+\n+                p = getPoint(target, 1);\n+                dstInsidePoint = p;\n+                testPoint2.setLocation(p);\n@@ -160,15 +168,0 @@\n-            EventQueue.invokeAndWait(() -> {\n-                dstOutsidePoint = frame.getLocationOnScreen();\n-                d[0] = frame.getSize();\n-                dstOutsidePoint.translate(3 * d[0].width \/ 2, d[0].height \/ 2);\n-                testPoint1.setLocation(dstOutsidePoint);\n-             });\n-\n-\n-            EventQueue.invokeAndWait(() -> {\n-                dstInsidePoint = target.getLocationOnScreen();\n-                d[0] = target.getSize();\n-                dstInsidePoint.translate(d[0].width \/ 2, d[0].height \/ 2);\n-                testPoint2.setLocation(dstInsidePoint);\n-            });\n-\n@@ -202,3 +195,3 @@\n-        if (!passedTest1) {\n-            throw new RuntimeException(\"Failed first test.\");\n-        }\n+            if (!passedTest1) {\n+                throw new RuntimeException(\"Failed first test.\");\n+            }\n@@ -206,3 +199,3 @@\n-        if (!passedTest2) {\n-            throw new RuntimeException(\"Failed second test.\");\n-        }\n+            if (!passedTest2) {\n+                throw new RuntimeException(\"Failed second test.\");\n+            }\n@@ -218,2 +211,5 @@\n-    public static int sign(int n) {\n-        return Integer.compare(n, 0);\n+    private static Point getPoint(Container container, int multiple) {\n+        Point p = container.getLocationOnScreen();\n+        Dimension d = container.getSize();\n+        p.translate(multiple * d.width \/ 2, d.height \/ 2);\n+        return p;\n@@ -222,2 +218,2 @@\n-    public void reset() {\n-        clickedComponent = null;\n+    public static int sign(int n) {\n+        return Integer.compare(n, 0);\n@@ -235,1 +231,1 @@\n-        reset();\n+        clickedComponent = null;\n","filename":"test\/jdk\/java\/awt\/dnd\/DragSourceMotionListenerTest.java","additions":26,"deletions":30,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -137,1 +137,0 @@\n-                        PassFailJFrame.forcePass();\n@@ -140,1 +139,2 @@\n-                        PassFailJFrame.log(\"getTransferData() Failed: \" + e);\n+                        e.printStackTrace();\n+                        PassFailJFrame.log(\"getTransferData() Failed\");\n@@ -144,1 +144,1 @@\n-                        PassFailJFrame.forceFail();\n+                        PassFailJFrame.forceFail(\"getTransferData() Failed\");\n@@ -153,1 +153,1 @@\n-                    PassFailJFrame.forceFail();\n+                    PassFailJFrame.forceFail(\"stringFlavor is not supported by Transferable\");\n","filename":"test\/jdk\/java\/awt\/dnd\/DragToAnotherScreenTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}