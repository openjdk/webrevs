{"files":[{"patch":"@@ -1058,1 +1058,2 @@\n-  \/\/ Left input is an add?\n+  \/\/ If the right input is a constant, and the left input is an add of a\n+  \/\/ constant, flatten the tree: (X+con1)<<con0 ==> X<<con0 + con1<<con0\n@@ -1171,1 +1172,1 @@\n-  \/\/ Performs:\n+  \/\/ Collapse nested left-shifts with constant rhs:\n@@ -1182,5 +1183,0 @@\n-\/\/ If the right input is a constant, and the left input is an add of a\n-\/\/ constant, flatten the tree: (X+con1)<<con0 ==> X<<con0 + con1<<con0\n-\/\/\n-\/\/ Also collapse nested left-shifts with constant rhs:\n-\/\/ (X << con1) << con2 ==> X << (con1 + con2)\n@@ -1256,1 +1252,0 @@\n-\/\/ A LShiftINode shifts its input2 left by input1 amount.\n@@ -1277,5 +1272,0 @@\n-\/\/ If the right input is a constant, and the left input is an add of a\n-\/\/ constant, flatten the tree: (X+con1)<<con0 ==> X<<con0 + con1<<con0\n-\/\/\n-\/\/ Also collapse nested left-shifts with constant rhs:\n-\/\/ (X << con1) << con2 ==> X << (con1 + con2)\n@@ -1287,1 +1277,0 @@\n-\/\/ A LShiftLNode shifts its input2 left by input1 amount.\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":3,"deletions":14,"binary":false,"changes":17,"status":"modified"}]}