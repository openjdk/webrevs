{"files":[{"patch":"@@ -1052,1 +1052,1 @@\n-Node* LShiftNode::IdealIL(PhaseGVN *phase, bool can_reshape, BasicType bt) {\n+Node* LShiftNode::IdealIL(PhaseGVN* phase, bool can_reshape, BasicType bt) {\n@@ -1059,1 +1059,1 @@\n-  Node *add1 = in(1);\n+  Node* add1 = in(1);\n@@ -1081,1 +1081,1 @@\n-      const TypeInteger *t12 = phase->type(add1->in(2))->isa_integer(bt);\n+      const TypeInteger* t12 = phase->type(add1->in(2))->isa_integer(bt);\n@@ -1133,1 +1133,1 @@\n-    Node *add2 = add1->in(1);\n+    Node* add2 = add1->in(1);\n@@ -1187,1 +1187,1 @@\n-Node *LShiftINode::Ideal(PhaseGVN *phase, bool can_reshape) {\n+Node* LShiftINode::Ideal(PhaseGVN *phase, bool can_reshape) {\n@@ -1192,2 +1192,2 @@\n-  const Type *t1 = phase->type(in(1));\n-  const Type *t2 = phase->type(in(2));\n+  const Type* t1 = phase->type(in(1));\n+  const Type* t2 = phase->type(in(2));\n@@ -1217,2 +1217,2 @@\n-  const TypeInteger *r1 = t1->is_integer(bt); \/\/ Handy access\n-  const TypeInt *r2 = t2->is_int(); \/\/ Handy access\n+  const TypeInteger* r1 = t1->is_integer(bt); \/\/ Handy access\n+  const TypeInt* r2 = t2->is_int(); \/\/ Handy access\n@@ -1282,1 +1282,1 @@\n-Node *LShiftLNode::Ideal(PhaseGVN *phase, bool can_reshape) {\n+Node* LShiftLNode::Ideal(PhaseGVN* phase, bool can_reshape) {\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -263,1 +263,1 @@\n-  LShiftNode(Node *in1, Node *in2) : Node(nullptr,in1,in2) {\n+  LShiftNode(Node* in1, Node* in2) : Node(nullptr,in1,in2) {\n@@ -278,1 +278,1 @@\n-  LShiftINode(Node *in1, Node *in2) : LShiftNode(in1,in2) {}\n+  LShiftINode(Node* in1, Node* in2) : LShiftNode(in1,in2) {}\n@@ -281,1 +281,1 @@\n-  virtual Node *Ideal(PhaseGVN *phase, bool can_reshape);\n+  virtual Node* Ideal(PhaseGVN *phase, bool can_reshape);\n@@ -283,1 +283,1 @@\n-  const Type *bottom_type() const { return TypeInt::INT; }\n+  const Type* bottom_type() const { return TypeInt::INT; }\n@@ -294,1 +294,1 @@\n-  virtual Node *Ideal(PhaseGVN *phase, bool can_reshape);\n+  virtual Node* Ideal(PhaseGVN *phase, bool can_reshape);\n@@ -296,1 +296,1 @@\n-  const Type *bottom_type() const { return TypeLong::LONG; }\n+  const Type* bottom_type() const { return TypeLong::LONG; }\n","filename":"src\/hotspot\/share\/opto\/mulnode.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}