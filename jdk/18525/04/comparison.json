{"files":[{"patch":"@@ -227,0 +227,33 @@\n+\n+    \/**\n+     * Convenience method for fetching System property values that are booleans.\n+     *\n+     * @param prop the name of the System property\n+     * @param def a default value\n+     * @param dbg a Debug object, if null no debug messages will be sent\n+     *\n+     * @return a boolean value corresponding to the value in the System property.\n+     *      If the property value is neither \"true\" or \"false\", the default value\n+     *      will be returned.\n+     *\/\n+    public static boolean privilegedGetBooleanProp(String prop, boolean def, Debug dbg) {\n+        String rawPropVal = privilegedGetProperty(prop, \"\");\n+        if (\"\".equals(rawPropVal)) {\n+            return def;\n+        }\n+\n+        String lower = rawPropVal.toLowerCase(Locale.ROOT);\n+        if (\"true\".equals(lower)) {\n+            return true;\n+        } else if (\"false\".equals(lower)) {\n+            return false;\n+        } else {\n+            if (dbg != null) {\n+                dbg.println(\"Warning: Unexpected value for \" + prop +\n+                            \": \" + rawPropVal +\n+                            \". Using default value: \" + def);\n+            }\n+            return def;\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/action\/GetPropertyAction.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-            \"com.sun.security.ocsp.useget\", \"true\");\n+            \"com.sun.security.ocsp.useget\", true);\n@@ -124,3 +124,3 @@\n-    private static boolean initializeBoolean(String prop, String def) {\n-        String flag = GetPropertyAction.privilegedGetProperty(prop, def);\n-        boolean value = Boolean.parseBoolean(flag);\n+    private static boolean initializeBoolean(String prop, boolean def) {\n+        boolean value =\n+                GetPropertyAction.privilegedGetBooleanProp(prop, def, debug);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/OCSP.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+ * @run main\/othervm -Dcom.sun.security.ocsp.useget=foo GetAndPostTests\n","filename":"test\/jdk\/java\/security\/cert\/CertPathValidator\/OCSP\/GetAndPostTests.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -705,0 +705,3 @@\n+        private final boolean USE_GET =\n+            !System.getProperty(\"com.sun.security.ocsp.useget\", \"\").equals(\"false\");\n+\n@@ -877,0 +880,6 @@\n+                if (USE_GET && length <= 255) {\n+                    \/\/ Received a small POST request. Check that our client code properly\n+                    \/\/ handled the relevant flag. We expect small GET requests, unless\n+                    \/\/ explicitly disabled.\n+                    throw new IOException(\"Should have received small GET, not POST.\");\n+                }\n","filename":"test\/jdk\/java\/security\/testlibrary\/SimpleOCSPServer.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}