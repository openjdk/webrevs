{"files":[{"patch":"@@ -646,1 +646,1 @@\n-      constantTag tag = cp->tag_at(cp_index);\n+      constantTag tag = cp->constant_tag_at(cp_index);\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeUtils.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * This test generates an extended NullPointerException inside a method with\n+ * a condy ldc. We add two ldc instructions and a pop around the real null\n+ * value to stress the stack handling of the NPE message generator.\n+ *\/\n+class CondyExtendedNullPointer\n+\tversion 55:0\n+{\n+\n+static Field nullObject:\"Ljava\/lang\/Object;\";\n+\n+public static Method condy:\"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/Class;)I\"\n+\tstack 1 locals 3\n+{\n+\t\tbipush\t123;\n+\t\tireturn;\n+}\n+\n+public static Method main:\"([Ljava\/lang\/String;)V\"\n+\tstack 3 locals 1\n+{\n+\t\tldc\tDynamic REF_invokeStatic:CondyExtendedNullPointer.condy:\"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/Class;)I\":I:\"I\";\n+\t\tgetstatic\tField nullObject:\"Ljava\/lang\/Object;\";\n+\t\tldc\tDynamic REF_invokeStatic:CondyExtendedNullPointer.condy:\"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/Class;)I\":I:\"I\";\n+\t\tpop;\n+\t\tinvokevirtual   Method java\/lang\/Object.notify:\"()V\";\n+\t\treturn;\n+}\n+\n+} \/\/ end Class CondyExtendedNullPointer\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/CondyExtendedNullPointer.jasm","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8339488\n+ * @summary Test extended NullPointerException message in method with CONSTANT_Dynamic.\n+ * @requires vm.flagless\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ * @compile CondyExtendedNullPointer.jasm\n+ * @run driver CondyExtendedNullPointerTest\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class CondyExtendedNullPointerTest {\n+    public static void main(String args[]) throws Throwable {\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xverify:all\",\n+                                                                             \"CondyExtendedNullPointer\");\n+        OutputAnalyzer oa = new OutputAnalyzer(pb.start());\n+        oa.shouldContain(\"Cannot invoke \\\"Object.notify()\\\" because \\\"CondyExtendedNullPointer.nullObject\\\" is null\");\n+        oa.shouldHaveExitValue(1);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/CondyExtendedNullPointerTest.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"}]}