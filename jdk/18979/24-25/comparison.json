{"files":[{"patch":"@@ -63,0 +63,1 @@\n+    static_assert(std::is_trivial<E>::value, \"must be\");\n@@ -76,1 +77,1 @@\n-    ::new (be) E(args...);\n+    ::new (be) E{args...};\n@@ -81,0 +82,1 @@\n+    static_assert(std::is_trivial<E>::value, \"must be\");\n@@ -89,0 +91,1 @@\n+    static_assert(std::is_trivial<E>::value, \"must be\");\n","filename":"src\/hotspot\/share\/nmt\/homogenousObjectArray.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-  StackIndex si(idx);\n+  StackIndex si{idx};\n","filename":"src\/hotspot\/share\/nmt\/nmtNativeCallStackStorage.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,4 +47,0 @@\n-\n-  private:\n-    static constexpr const int32_t _invalid = -1;\n-\n@@ -52,4 +48,0 @@\n-    StackIndex(int32_t stack_index)\n-      : _stack_index(stack_index) {\n-    }\n-\n@@ -57,0 +49,1 @@\n+    static constexpr const int32_t invalid = -1;\n@@ -62,5 +55,1 @@\n-      return _stack_index == _invalid;\n-    }\n-\n-    StackIndex()\n-      : _stack_index(_invalid) {\n+      return _stack_index == invalid;\n@@ -80,6 +69,0 @@\n-    TableEntry(TableEntryIndex next, StackIndex v)\n-      : next(next),\n-        stack(v) {\n-    }\n-    TableEntry()\n-    : next(TableEntryStorage::nil), stack() {}\n@@ -104,1 +87,1 @@\n-      return StackIndex();\n+      return StackIndex{StackIndex::invalid};\n","filename":"src\/hotspot\/share\/nmt\/nmtNativeCallStackStorage.hpp","additions":3,"deletions":20,"binary":false,"changes":23,"status":"modified"}]}