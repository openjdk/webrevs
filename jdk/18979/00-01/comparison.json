{"files":[{"patch":"@@ -27,1 +27,1 @@\n-  union BackingElement {\n+  union alignas(E) BackingElement {\n@@ -29,1 +29,2 @@\n-    E e;\n+    char e[sizeof(E)];\n+\n@@ -33,0 +34,1 @@\n+\n@@ -36,3 +38,0 @@\n-    BackingElement(E& e) {\n-      this->e = e;\n-    }\n@@ -73,2 +72,8 @@\n-  E& translate(I i) {\n-    return backing_storage.at(i.idx).e;\n+  E& at(I i) {\n+    assert(i != nil, \"null pointer dereference\");\n+    return reinterpret_cast<E>(backing_storage.at(i.idx).e);\n+  }\n+\n+  const E& at(I i) const {\n+    assert(i != nil, \"null pointer dereference\");\n+    return reinterpret_cast<E>(backing_storage.at(i.idx).e);\n@@ -108,1 +113,5 @@\n-  E& translate(I i) {\n+  E& at(I i) {\n+    return *i.e;\n+  };\n+\n+  const E& at(I i) const {\n@@ -146,1 +155,5 @@\n-  E& translate(I i) {\n+  E& at(I i) {\n+    return *i.e;\n+  };\n+\n+  const E& at(I i) const {\n","filename":"src\/hotspot\/share\/nmt\/indexedFreeListAllocator.hpp","additions":22,"deletions":9,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-      Link& l = _allocator.translate(link);\n+      Link& l = _allocator.at(link);\n","filename":"src\/hotspot\/share\/nmt\/nmtNativeCallStackStorage.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}