{"files":[{"patch":"@@ -53,1 +53,1 @@\n-    return i > 0 && i < _backing_storage.length();\n+    return i >= 0 && i < _backing_storage.length();\n","filename":"src\/hotspot\/share\/nmt\/indexedFreeListAllocator.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-  void append(E&& e) {\n+  void push(E e) {\n@@ -60,4 +60,1 @@\n-    while (alloc.at(current).next != NodeAllocator::nil) {\n-      current = alloc.at(current).next;\n-    }\n-    alloc.at(current).next = new_element;\n+    alloc.at(new_element).next = current;\n@@ -100,1 +97,1 @@\n-  void append(E&& e) {\n+  void push(E e) {\n@@ -107,4 +104,1 @@\n-    while (alloc.at(current).next != NodeAllocator::nil) {\n-      current = alloc.at(current).next;\n-    }\n-    alloc.at(current).next = new_element;\n+    alloc.at(new_element).next = current;\n@@ -126,2 +120,2 @@\n-  list.append(1);\n-  list.append(2);\n+  list.push(1);\n+  list.push(2);\n","filename":"test\/hotspot\/gtest\/nmt\/test_indexedFreeListAllocator.cpp","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"}]}