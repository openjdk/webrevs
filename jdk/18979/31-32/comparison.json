{"files":[{"patch":"@@ -26,0 +26,1 @@\n+#include \"memory\/allocation.hpp\"\n@@ -44,0 +45,16 @@\n+NativeCallStackStorage::NativeCallStackStorage(bool is_detailed_mode, int table_size)\n+  : _table_size(table_size),\n+    _table(nullptr),\n+    _stacks(),\n+    _is_detailed_mode(is_detailed_mode),\n+    _fake_stack() {\n+  if (_is_detailed_mode) {\n+    _table = NEW_C_HEAP_ARRAY(TableEntryIndex, _table_size, mtNMT);\n+    for (int i = 0; i < _table_size; i++) {\n+      _table[i] = TableEntryStorage::nil;\n+    }\n+  }\n+}\n+NativeCallStackStorage::~NativeCallStackStorage() {\n+  FREE_C_HEAP_ARRAY(LinkPtr, _table);\n+}\n","filename":"src\/hotspot\/share\/nmt\/nmtNativeCallStackStorage.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"memory\/allocation.hpp\"\n@@ -76,1 +75,1 @@\n-  int _table_size;\n+  const int _table_size;\n@@ -99,10 +98,1 @@\n-  NativeCallStackStorage(bool is_detailed_mode, int table_size = default_table_size)\n-  : _table_size(table_size), _table(nullptr), _stacks(),\n-    _is_detailed_mode(is_detailed_mode), _fake_stack() {\n-    if (_is_detailed_mode) {\n-      _table = NEW_C_HEAP_ARRAY(TableEntryIndex, _table_size, mtNMT);\n-      for (int i = 0; i < _table_size; i++) {\n-        _table[i] = TableEntryStorage::nil;\n-      }\n-    }\n-  }\n+  NativeCallStackStorage(bool is_detailed_mode, int table_size = default_table_size);\n@@ -110,3 +100,1 @@\n-  ~NativeCallStackStorage() {\n-    FREE_C_HEAP_ARRAY(LinkPtr, _table);\n-  }\n+  ~NativeCallStackStorage();\n","filename":"src\/hotspot\/share\/nmt\/nmtNativeCallStackStorage.hpp","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -72,0 +72,1 @@\n+\n","filename":"test\/hotspot\/gtest\/nmt\/test_arrayWithFreeList.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}