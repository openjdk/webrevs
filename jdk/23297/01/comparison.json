{"files":[{"patch":"@@ -65,2 +65,2 @@\n-    \/\/ Compressed oops logging.\n-    log_debug(gc, heap, coops)(\"Reserve regular memory without large pages\");\n+    log_debug(os, map)(\"Reserve regular memory without large pages \"\n+                       RANGEFMT, RANGEFMTARGS(req_addr, bytes));\n","filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,2 +67,3 @@\n-        \/\/ [0.048s][debug][gc,heap,coops] Reserve regular memory without large pages\n-        \/\/ [0.048s][info ][pagesize     ] Mark Bitmap: ... page_size=4K ...\n+        \/\/ [0.044s][debug][os,map  ] Reserve regular memory without large pages [0x0000000000000000 - 0x0000000001000000), (16777216 bytes)\n+        \/\/ [0.044s][debug][os,map  ] Reserved [0x00007f771de00000 - 0x00007f771ee00000), (16777216 bytes)\n+        \/\/ [0.044s][info ][pagesize] Mark Bitmap: req_size=16M req_page_size=2M base=0x00007f771de00000 size=16M page_size=4K\n@@ -71,1 +72,4 @@\n-        String failureMatch = output.firstMatch(\"Reserve regular memory without large pages\\\\n.*\" + pattern, 1);\n+        String failureMatch = output.firstMatch(\"Reserve regular memory without large pages[^\\n]*\\n\" \/\/ First line\n+                                                + \"[^\\n]*\\n\" \/\/ Second line\n+                                                + \"[^\\n]*\" + pattern, \/\/ Third line\n+                                                1);\n@@ -115,1 +119,1 @@\n-                       \"-Xlog:pagesize,gc+init,gc+heap+coops=debug\",\n+                       \"-Xlog:pagesize,gc+init,os+map=debug\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestLargePageUseForAuxMemory.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -71,6 +71,9 @@\n-        String errorStr = \"Reserve regular memory without large pages\";\n-        String heapPattern = \".*Heap: \";\n-        \/\/ If errorStr is printed just before heap page log, reservation for Java Heap is failed.\n-        String result = output.firstMatch(errorStr + \"\\n\" +\n-                                          \"(?:.*Heap address: .*\\n)?\" \/\/ Heap address: 0x00000000f8000000, size: 128 MB, Compressed Oops mode: 32-bit\n-                                          + heapPattern);\n+        \/\/\n+        \/\/ [0.045s][debug][os,map  ] Reserve regular memory without large pages [0x00000000f8000000 - 0x0000000100000000), (134217728 bytes)\n+        \/\/ [0.045s][debug][os,map  ] Reserved [0x00000000f8000000 - 0x0000000100000000), (134217728 bytes)\n+        \/\/ [0.045s][info ][pagesize] Heap:  min=8M max=128M base=0x00000000f8000000 size=128M page_size=4K\n+        \/\/\n+        \/\/ If error is printed just before heap page log, reservation for Java Heap is failed.\n+        String result = output.firstMatch(\"Reserve regular memory without large pages[^\\n]*\\n\"\n+                                          + \"[^\\n]*Reserved[^\\n]*\\n\"\n+                                          + \"[^\\n]*Heap: \");\n@@ -92,1 +95,1 @@\n-                                                                    \"-Xlog:gc+init,pagesize,gc+heap+coops=debug\",\n+                                                                    \"-Xlog:gc+init,pagesize,os+map=debug\",\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestLargePageUseForHeap.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"}]}