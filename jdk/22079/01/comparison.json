{"files":[{"patch":"@@ -231,0 +231,14 @@\n+            new Option(true, OptionType.OTHER, \"--release\") {\n+                void process(Main jartool, String opt, String arg) throws BadArgs {\n+                    try {\n+                        int value = Integer.valueOf(arg);\n+                        if (value < 9) {\n+                            throw new BadArgs(\"error.release.value.toosmall\", arg).showUsage(true);\n+                        }\n+                        jartool.releaseValue = value;\n+                    } catch (NumberFormatException x) {\n+                        throw new BadArgs(\"error.release.value.notnumber\", arg);\n+                    }\n+                }\n+                boolean isHidden() { return true; }\n+            },\n@@ -329,2 +343,2 @@\n-            if (args[count].charAt(0) != '-' || args[count].equals(\"-C\") ||\n-                args[count].equals(\"--release\"))\n+            String name = args[count];\n+            if (name.charAt(0) != '-' || name.equals(\"-C\"))\n@@ -332,0 +346,7 @@\n+            if (name.equals(\"--release\")) {\n+                \/\/ JDK-8316804: stay here when in `--describe-module`\n+                \/\/ or in `--validate` operation mode in order to process\n+                \/\/ the `--release` option before parsing file arguments\n+                if (!(jartool.dflag || jartool.validate))\n+                    break;\n+            }\n@@ -333,1 +354,0 @@\n-            String name = args[count];\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/GNUStyleOptions.java","additions":23,"deletions":3,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8167237\n+ * @bug 8167237 8316804\n@@ -31,3 +31,1 @@\n- * @modules jdk.jartool\/sun.tools.jar\n- * @build jdk.test.lib.Platform\n- *        jdk.test.lib.util.FileUtils\n+ * @build jdk.test.lib.util.FileUtils\n@@ -48,0 +46,1 @@\n+import java.util.spi.ToolProvider;\n@@ -119,0 +118,10 @@\n+    @Test  \/\/ 8316804\n+    public void test6() throws IOException {\n+        System.out.println(\"=====\");\n+        touch(\"testfile\");\n+        jar(\"--create --file=test.jar testfile\");\n+        jar(\"--describe-module --release 9 --file test.jar\");\n+        jar(\"--validate        --release 9 --file test.jar\");\n+        rm(\"test.jar testfile\");\n+    }\n+\n@@ -162,3 +171,5 @@\n-        boolean ok = new sun.tools.jar.Main(System.out, System.err, \"jar\")\n-                .run(cmdline.split(\" +\"));\n-        Assert.assertTrue(ok);\n+        var tool = ToolProvider.findFirst(\"jar\").orElseThrow();\n+        var args = cmdline.split(\" +\");\n+        var code = tool.run(System.out, System.err, args);\n+        if (code == 0) return;\n+        throw new RuntimeException(\"jar failed with non-zero error code: \" + code);\n","filename":"test\/jdk\/tools\/jar\/ReleaseBeforeFiles.java","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"}]}