{"files":[{"patch":"@@ -1,101 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.sun.org.apache.xalan.internal.utils;\n-\n-import javax.xml.XMLConstants;\n-import jdk.xml.internal.JdkConstants;\n-\n-\/**\n- * This class manages security related properties\n- *\n- *\/\n-public final class XMLSecurityPropertyManager extends FeaturePropertyBase {\n-\n-    \/**\n-     * Properties managed by the security property manager\n-     *\/\n-    public static enum Property {\n-        ACCESS_EXTERNAL_DTD(XMLConstants.ACCESS_EXTERNAL_DTD,\n-                JdkConstants.EXTERNAL_ACCESS_DEFAULT),\n-        ACCESS_EXTERNAL_STYLESHEET(XMLConstants.ACCESS_EXTERNAL_STYLESHEET,\n-                JdkConstants.EXTERNAL_ACCESS_DEFAULT);\n-\n-        final String name;\n-        final String defaultValue;\n-\n-        Property(String name, String value) {\n-            this.name = name;\n-            this.defaultValue = value;\n-        }\n-\n-        public boolean equalsName(String propertyName) {\n-            return (propertyName == null) ? false : name.equals(propertyName);\n-        }\n-\n-        String defaultValue() {\n-            return defaultValue;\n-        }\n-    }\n-\n-\n-    \/**\n-     * Default constructor. Establishes default values\n-     *\/\n-    public XMLSecurityPropertyManager() {\n-        values = new String[Property.values().length];\n-        for (Property property : Property.values()) {\n-            values[property.ordinal()] = property.defaultValue();\n-        }\n-        \/\/read system properties or jaxp.properties\n-        readSystemProperties();\n-    }\n-\n-    \/**\n-     * Get the index by property name\n-     * @param propertyName property name\n-     * @return the index of the property if found; return -1 if not\n-     *\/\n-    public int getIndex(String propertyName){\n-        for (Property property : Property.values()) {\n-            if (property.equalsName(propertyName)) {\n-                \/\/internally, ordinal is used as index\n-                return property.ordinal();\n-            }\n-        }\n-        return -1;\n-    }\n-\n-    \/**\n-     * Read from system properties, or those in jaxp.properties\n-     *\/\n-    private void readSystemProperties() {\n-        getSystemProperty(Property.ACCESS_EXTERNAL_DTD,\n-                JdkConstants.SP_ACCESS_EXTERNAL_DTD);\n-        getSystemProperty(Property.ACCESS_EXTERNAL_STYLESHEET,\n-                JdkConstants.SP_ACCESS_EXTERNAL_STYLESHEET);\n-    }\n-\n-}\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/utils\/XMLSecurityPropertyManager.java","additions":0,"deletions":101,"binary":false,"changes":101,"status":"deleted"},{"patch":"@@ -23,1 +23,0 @@\n-import com.sun.org.apache.xalan.internal.utils.FeaturePropertyBase;\n@@ -25,2 +24,0 @@\n-import com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager.Property;\n-import com.sun.org.apache.xalan.internal.utils.XMLSecurityPropertyManager;\n@@ -72,0 +69,1 @@\n+import jdk.xml.internal.FeaturePropertyBase;\n@@ -80,0 +78,2 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager.Property;\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -90,1 +90,1 @@\n- * @LastModified: Feb 2025\n+ * @LastModified: Apr 2025\n@@ -523,1 +523,1 @@\n-            _xmlSecurityPropertyMgr.setValue(name, XMLSecurityPropertyManager.State.APIPROPERTY, value)) {\n+            _xmlSecurityPropertyMgr.setValue(name, FeaturePropertyBase.State.APIPROPERTY, value)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/trax\/TransformerFactoryImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -59,0 +58,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -74,1 +74,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/dom\/DOMConfigurationImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -35,0 +34,1 @@\n+import jdk.xml.internal.FeaturePropertyBase;\n@@ -39,0 +39,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -49,1 +50,1 @@\n- * @LastModified: Jan 2024\n+ * @LastModified: Apr 2025\n@@ -257,1 +258,1 @@\n-                    || !fSecurityPropertyMgr.setValue(property, XMLSecurityPropertyManager.State.APIPROPERTY, value)) {\n+                    || !fSecurityPropertyMgr.setValue(property, FeaturePropertyBase.State.APIPROPERTY, value)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/PropertyManager.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -59,0 +58,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -77,1 +77,1 @@\n- * @LastModified: Nov 2024\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/XMLDocumentFragmentScannerImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -67,0 +66,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -97,1 +97,1 @@\n- * @LastModified: Nov 2024\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/XMLEntityManager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -78,1 +77,0 @@\n-import jdk.xml.internal.XMLSecurityManager;\n@@ -80,0 +78,2 @@\n+import jdk.xml.internal.XMLSecurityManager;\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -105,1 +105,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/xs\/XMLSchemaLoader.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -112,0 +111,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -134,1 +134,1 @@\n- * @LastModified: Jan 2025\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/xs\/traversers\/XSDHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -35,0 +34,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -42,1 +42,1 @@\n- * @LastModified: Nov 2024\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/DocumentBuilderFactoryImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,3 +38,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager.Property;\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager.State;\n@@ -47,0 +44,1 @@\n+import jdk.xml.internal.FeaturePropertyBase.State;\n@@ -50,0 +48,2 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n+import jdk.xml.internal.XMLSecurityPropertyManager.Property;\n@@ -62,1 +62,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Apr 2025\n@@ -305,1 +305,1 @@\n-                                 !fSecurityPropertyMgr.setValue(name, XMLSecurityPropertyManager.State.APIPROPERTY, val)) {\n+                                 !fSecurityPropertyMgr.setValue(name, State.APIPROPERTY, val)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/DocumentBuilderImpl.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,0 @@\n-import com.sun.org.apache.xerces.internal.util.SAXMessageFormatter;\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -34,0 +32,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -46,1 +45,1 @@\n- * @LastModified: Nov 2024\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/SAXParserFactoryImpl.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -45,0 +44,1 @@\n+import jdk.xml.internal.FeaturePropertyBase;\n@@ -48,0 +48,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -66,1 +67,1 @@\n- * @LastModified: Nov 2023\n+ * @LastModified: Apr 2025\n@@ -172,1 +173,1 @@\n-                            XMLSecurityPropertyManager.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n+                            FeaturePropertyBase.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n@@ -174,1 +175,1 @@\n-                            XMLSecurityPropertyManager.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n+                            FeaturePropertyBase.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n@@ -576,1 +577,1 @@\n-                        !fSecurityPropertyMgr.setValue(name, XMLSecurityPropertyManager.State.APIPROPERTY, value)) {\n+                        !fSecurityPropertyMgr.setValue(name, FeaturePropertyBase.State.APIPROPERTY, value)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/SAXParserImpl.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -71,1 +70,0 @@\n-import jdk.xml.internal.XMLSecurityManager;\n@@ -73,0 +71,2 @@\n+import jdk.xml.internal.XMLSecurityManager;\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -96,1 +96,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/validation\/ValidatorHandlerImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -53,0 +52,1 @@\n+import jdk.xml.internal.FeaturePropertyBase;\n@@ -59,0 +59,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -73,1 +74,1 @@\n- * @LastModified: Nov 2024\n+ * @LastModified: Apr 2025\n@@ -447,1 +448,1 @@\n-                        XMLSecurityPropertyManager.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n+                        FeaturePropertyBase.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n@@ -449,1 +450,1 @@\n-                        XMLSecurityPropertyManager.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n+                        FeaturePropertyBase.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n@@ -520,1 +521,1 @@\n-                        !fSecurityPropertyMgr.setValue(name, XMLSecurityPropertyManager.State.APIPROPERTY, object)) {\n+                        !fSecurityPropertyMgr.setValue(name, FeaturePropertyBase.State.APIPROPERTY, object)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/validation\/XMLSchemaFactory.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -50,0 +49,1 @@\n+import jdk.xml.internal.FeaturePropertyBase;\n@@ -53,0 +53,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -60,1 +61,1 @@\n- * @LastModified: Nov 2024\n+ * @LastModified: Apr 2025\n@@ -379,1 +380,1 @@\n-                        XMLSecurityPropertyManager.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n+                        FeaturePropertyBase.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n@@ -381,1 +382,1 @@\n-                        XMLSecurityPropertyManager.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n+                        FeaturePropertyBase.State.FSP, JdkConstants.EXTERNAL_ACCESS_DEFAULT_FSP);\n@@ -459,1 +460,1 @@\n-                    !fSecurityPropertyMgr.setValue(propertyId, XMLSecurityPropertyManager.State.APIPROPERTY, value)) {\n+                    !fSecurityPropertyMgr.setValue(propertyId, FeaturePropertyBase.State.APIPROPERTY, value)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/validation\/XMLSchemaValidatorComponentManager.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -42,0 +41,1 @@\n+import jdk.xml.internal.FeaturePropertyBase;\n@@ -45,0 +45,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -63,1 +64,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Apr 2025\n@@ -577,1 +578,1 @@\n-            securityPropertyManager.setValue(index, XMLSecurityPropertyManager.State.APIPROPERTY, (String)value);\n+            securityPropertyManager.setValue(index, FeaturePropertyBase.State.APIPROPERTY, (String)value);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/parsers\/DOMParser.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -55,0 +54,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -92,1 +92,1 @@\n- * @LastModified: May 2021\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/parsers\/DTDConfiguration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -54,0 +53,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -66,1 +66,1 @@\n- * @LastModified: May 2021\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/parsers\/NonValidatingConfiguration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -28,0 +27,1 @@\n+import jdk.xml.internal.FeaturePropertyBase;\n@@ -32,0 +32,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -44,1 +45,1 @@\n- * @LastModified: Nov 2023\n+ * @LastModified: Apr 2025\n@@ -171,1 +172,1 @@\n-            securityPropertyManager.setValue(index, XMLSecurityPropertyManager.State.APIPROPERTY, (String)value);\n+            securityPropertyManager.setValue(index, FeaturePropertyBase.State.APIPROPERTY, (String)value);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/parsers\/SAXParser.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -37,0 +36,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -44,1 +44,1 @@\n- * @LastModified: Nov 2023\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/parsers\/XIncludeAwareParserConfiguration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -75,0 +74,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -83,1 +83,1 @@\n- * @LastModified: Nov 2023\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/parsers\/XML11Configuration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -33,0 +32,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -53,1 +53,1 @@\n- * @LastModified: Nov 2023\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/parsers\/XMLParser.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,243 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.sun.org.apache.xerces.internal.utils;\n-\n-import javax.xml.XMLConstants;\n-import jdk.xml.internal.JdkConstants;\n-import jdk.xml.internal.SecuritySupport;\n-\n-\/**\n- * This class manages security related properties\n- *\n- *\/\n-public final class XMLSecurityPropertyManager {\n-\n-    \/**\n-     * States of the settings of a property, in the order: default value, value\n-     * set by FEATURE_SECURE_PROCESSING, jaxp.properties file, jaxp system\n-     * properties, and jaxp api properties\n-     *\/\n-    public static enum State {\n-        \/\/this order reflects the overriding order\n-        DEFAULT, FSP, JAXPDOTPROPERTIES, SYSTEMPROPERTY, APIPROPERTY\n-    }\n-\n-    \/**\n-     * Limits managed by the security manager\n-     *\/\n-    public static enum Property {\n-        ACCESS_EXTERNAL_DTD(XMLConstants.ACCESS_EXTERNAL_DTD,\n-                JdkConstants.EXTERNAL_ACCESS_DEFAULT),\n-        ACCESS_EXTERNAL_SCHEMA(XMLConstants.ACCESS_EXTERNAL_SCHEMA,\n-                JdkConstants.EXTERNAL_ACCESS_DEFAULT);\n-\n-        final String name;\n-        final String defaultValue;\n-\n-        Property(String name, String value) {\n-            this.name = name;\n-            this.defaultValue = value;\n-        }\n-\n-        public boolean equalsName(String propertyName) {\n-            return (propertyName == null) ? false : name.equals(propertyName);\n-        }\n-\n-        public String propertyName() {\n-            return name;\n-        }\n-\n-        String defaultValue() {\n-            return defaultValue;\n-        }\n-    }\n-\n-    \/**\n-     * Values of the properties as defined in enum Properties\n-     *\/\n-    private final String[] values;\n-    \/**\n-     * States of the settings for each property in Properties above\n-     *\/\n-    private State[] states = {State.DEFAULT, State.DEFAULT};\n-\n-    \/**\n-     * Default constructor. Establishes default values\n-     *\/\n-    public XMLSecurityPropertyManager() {\n-        values = new String[Property.values().length];\n-        for (Property property : Property.values()) {\n-            values[property.ordinal()] = property.defaultValue();\n-        }\n-        \/\/read system properties or jaxp.properties\n-        readSystemProperties();\n-    }\n-\n-    \/**\n-     * Finds the property with the given name.\n-     * @param propertyName the property name specified\n-     * @return the property name if found, null otherwise\n-     *\/\n-    public String find(String propertyName) {\n-        for (Property property : Property.values()) {\n-            if (property.equalsName(propertyName)) {\n-                return property.propertyName();\n-            }\n-        }\n-        return null;\n-    }\n-\n-    \/**\n-     * Set limit by property name and state\n-     * @param propertyName property name\n-     * @param state the state of the property\n-     * @param value the value of the property\n-     * @return true if the property is managed by the security property manager;\n-     *         false if otherwise.\n-     *\/\n-    public boolean setValue(String propertyName, State state, Object value) {\n-        int index = getIndex(propertyName);\n-        if (index > -1) {\n-            setValue(index, state, (String)value);\n-            return true;\n-        }\n-        return false;\n-    }\n-\n-    \/**\n-     * Set the value for a specific property.\n-     *\n-     * @param property the property\n-     * @param state the state of the property\n-     * @param value the value of the property\n-     *\/\n-    public void setValue(Property property, State state, String value) {\n-        \/\/only update if it shall override\n-        if (state.compareTo(states[property.ordinal()]) >= 0) {\n-            values[property.ordinal()] = value;\n-            states[property.ordinal()] = state;\n-        }\n-    }\n-\n-    \/**\n-     * Set the value of a property by its index\n-     * @param index the index of the property\n-     * @param state the state of the property\n-     * @param value the value of the property\n-     *\/\n-    public void setValue(int index, State state, String value) {\n-        \/\/only update if it shall override\n-        if (state.compareTo(states[index]) >= 0) {\n-            values[index] = value;\n-            states[index] = state;\n-        }\n-    }\n-\n-\n-    \/**\n-     * Return the value of the specified property\n-     *\n-     * @param propertyName the property name\n-     * @return the value of the property as a string\n-     *\/\n-    public String getValue(String propertyName) {\n-        int index = getIndex(propertyName);\n-        if (index > -1) {\n-            return getValueByIndex(index);\n-        }\n-\n-        return null;\n-    }\n-\n-    \/**\n-     * Return the value of the specified property\n-     *\n-     * @param property the property\n-     * @return the value of the property\n-     *\/\n-    public String getValue(Property property) {\n-        return values[property.ordinal()];\n-    }\n-\n-    \/**\n-     * Return the value of a property by its ordinal\n-     * @param index the index of a property\n-     * @return value of a property\n-     *\/\n-    public String getValueByIndex(int index) {\n-        return values[index];\n-    }\n-\n-    \/**\n-     * Get the index by property name\n-     * @param propertyName property name\n-     * @return the index of the property if found; return -1 if not\n-     *\/\n-    public int getIndex(String propertyName){\n-        for (Property property : Property.values()) {\n-            if (property.equalsName(propertyName)) {\n-                \/\/internally, ordinal is used as index\n-                return property.ordinal();\n-            }\n-        }\n-        return -1;\n-    }\n-\n-    \/**\n-     * Read from system properties, or those in jaxp.properties\n-     *\/\n-    private void readSystemProperties() {\n-        getSystemProperty(Property.ACCESS_EXTERNAL_DTD,\n-                JdkConstants.SP_ACCESS_EXTERNAL_DTD);\n-        getSystemProperty(Property.ACCESS_EXTERNAL_SCHEMA,\n-                JdkConstants.SP_ACCESS_EXTERNAL_SCHEMA);\n-    }\n-\n-    \/**\n-     * Read from system properties, or those in jaxp.properties\n-     *\n-     * @param property the property\n-     * @param systemProperty the name of the system property\n-     *\/\n-    private void getSystemProperty(Property property, String systemProperty) {\n-        try {\n-            String value = System.getProperty(systemProperty);\n-            if (value != null) {\n-                values[property.ordinal()] = value;\n-                states[property.ordinal()] = State.SYSTEMPROPERTY;\n-                return;\n-            }\n-\n-            value = SecuritySupport.readConfig(systemProperty);\n-            if (value != null) {\n-                values[property.ordinal()] = value;\n-                states[property.ordinal()] = State.JAXPDOTPROPERTIES;\n-            }\n-        } catch (NumberFormatException e) {\n-            \/\/invalid setting ignored\n-        }\n-    }\n-}\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/utils\/XMLSecurityPropertyManager.java","additions":0,"deletions":243,"binary":false,"changes":243,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,0 @@\n-import com.sun.org.apache.xerces.internal.utils.XMLSecurityPropertyManager;\n@@ -83,0 +82,1 @@\n+import jdk.xml.internal.XMLSecurityPropertyManager;\n@@ -131,1 +131,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Apr 2025\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/xinclude\/XIncludeHandler.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,4 +26,1 @@\n-package com.sun.org.apache.xalan.internal.utils;\n-\n-import jdk.xml.internal.JdkConstants;\n-import jdk.xml.internal.SecuritySupport;\n+package jdk.xml.internal;\n@@ -33,2 +30,0 @@\n- *\n- * @LastModified: Nov 2024\n@@ -56,1 +51,1 @@\n-    State[] states = {State.DEFAULT, State.DEFAULT};\n+    State[] states = {State.DEFAULT, State.DEFAULT, State.DEFAULT};\n@@ -88,1 +83,1 @@\n-     \/**\n+    \/**\n@@ -105,1 +100,1 @@\n-     \/**\n+    \/**\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/FeaturePropertyBase.java","additions":5,"deletions":10,"binary":false,"changes":15,"previous_filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/utils\/FeaturePropertyBase.java","status":"renamed"},{"patch":"@@ -0,0 +1,145 @@\n+\/*\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.xml.internal;\n+\n+import javax.xml.XMLConstants;\n+\n+\/**\n+ * This class manages security related properties\n+ *\n+ *\/\n+public final class XMLSecurityPropertyManager extends FeaturePropertyBase {\n+\n+    \/**\n+     * Properties managed by the security property manager\n+     *\/\n+    public static enum Property {\n+        ACCESS_EXTERNAL_DTD(XMLConstants.ACCESS_EXTERNAL_DTD,\n+                JdkConstants.EXTERNAL_ACCESS_DEFAULT),\n+        ACCESS_EXTERNAL_SCHEMA(XMLConstants.ACCESS_EXTERNAL_SCHEMA,\n+                JdkConstants.EXTERNAL_ACCESS_DEFAULT),\n+        ACCESS_EXTERNAL_STYLESHEET(XMLConstants.ACCESS_EXTERNAL_STYLESHEET,\n+                JdkConstants.EXTERNAL_ACCESS_DEFAULT);\n+\n+        final String name;\n+        final String defaultValue;\n+\n+        Property(String name, String value) {\n+            this.name = name;\n+            this.defaultValue = value;\n+        }\n+\n+        public boolean equalsName(String propertyName) {\n+            return (propertyName == null) ? false : name.equals(propertyName);\n+        }\n+\n+        public String propertyName() {\n+            return name;\n+        }\n+        String defaultValue() {\n+            return defaultValue;\n+        }\n+    }\n+\n+    \/**\n+     * Default constructor. Establishes default values\n+     *\/\n+    public XMLSecurityPropertyManager() {\n+        values = new String[Property.values().length];\n+        for (Property property : Property.values()) {\n+            values[property.ordinal()] = property.defaultValue();\n+        }\n+        \/\/read system properties or jaxp.properties\n+        readSystemProperties();\n+    }\n+\n+    \/**\n+     * Finds the property with the given name.\n+     * @param propertyName the property name specified\n+     * @return the property name if found, null otherwise\n+     *\/\n+    public String find(String propertyName) {\n+        for (Property property : Property.values()) {\n+            if (property.equalsName(propertyName)) {\n+                return property.propertyName();\n+            }\n+        }\n+        return null;\n+    }\n+\n+    \/**\n+     * Get the index by property name\n+     * @param propertyName property name\n+     * @return the index of the property if found; return -1 if not\n+     *\/\n+    public int getIndex(String propertyName){\n+        for (Property property : Property.values()) {\n+            if (property.equalsName(propertyName)) {\n+                \/\/internally, ordinal is used as index\n+                return property.ordinal();\n+            }\n+        }\n+        return -1;\n+    }\n+\n+    \/**\n+     * Set the value for a specific property.\n+     *\n+     * @param property the property\n+     * @param state the state of the property\n+     * @param value the value of the property\n+     *\/\n+    public void setValue(Property property, State state, String value) {\n+        \/\/only update if it shall override\n+        if (state.compareTo(states[property.ordinal()]) >= 0) {\n+            values[property.ordinal()] = value;\n+            states[property.ordinal()] = state;\n+        }\n+    }\n+\n+    \/**\n+     * Return the value of the specified property\n+     *\n+     * @param property the property\n+     * @return the value of the property\n+     *\/\n+    public String getValue(Property property) {\n+        return values[property.ordinal()];\n+    }\n+\n+    \/**\n+     * Read from system properties, or those in jaxp.properties\n+     *\/\n+    private void readSystemProperties() {\n+        getSystemProperty(Property.ACCESS_EXTERNAL_DTD,\n+                JdkConstants.SP_ACCESS_EXTERNAL_DTD);\n+        getSystemProperty(Property.ACCESS_EXTERNAL_SCHEMA,\n+                JdkConstants.SP_ACCESS_EXTERNAL_SCHEMA);\n+        getSystemProperty(Property.ACCESS_EXTERNAL_STYLESHEET,\n+                JdkConstants.SP_ACCESS_EXTERNAL_STYLESHEET);\n+    }\n+\n+}\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/XMLSecurityPropertyManager.java","additions":145,"deletions":0,"binary":false,"changes":145,"status":"added"}]}