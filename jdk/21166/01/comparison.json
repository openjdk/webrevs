{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -230,0 +230,4 @@\n+bool DependencyContext::is_empty() {\n+  return dependencies() == nullptr;\n+}\n+\n","filename":"src\/hotspot\/share\/code\/dependencyContext.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,0 +127,1 @@\n+  bool is_empty();\n","filename":"src\/hotspot\/share\/code\/dependencyContext.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -487,0 +487,3 @@\n+  if (klass->is_instance_klass() && InstanceKlass::cast(klass)->is_scratch_class()) {\n+    return;\n+  }\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSet.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2724,0 +2724,7 @@\n+\n+  if (ik->is_scratch_class()) {\n+    assert(ik->dependencies().is_empty(), \"dependencies should be empty for scratch classes\");\n+    return;\n+  }\n+  assert(ik->is_loaded(), \"class should be loaded \" PTR_FORMAT, p2i(ik));\n+\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}