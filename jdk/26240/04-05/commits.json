[{"commit":{"message":"Resolve merge conflict - keep proper @tschatzl time type implementation\n\n- Keep Tickspan::from_milliseconds(G1UncommitDelayMillis) initialization\n- Keep (jlong)elapsed.milliseconds() cast for macOS build compatibility\n- Keep elapsed > _uncommit_delay direct Tickspan comparison\n- Maintains cross-platform compatibility"},"files":[],"sha":"11061e51d3fd72481f0d7faa3d410daeec713d1c"},{"commit":{"message":"JDK-8357445: Implement @tschatzl code review feedback for time-based heap sizing\n\n- Convert from jlong milliseconds to proper time types (Ticks\/Tickspan)\n- Reclassify G1UseTimeBasedHeapSizing from EXPERIMENTAL+false to DIAGNOSTIC+true\n- Reclassify G1MinRegionsToUncommit from EXPERIMENTAL to DIAGNOSTIC\n- Keep timing flags (G1UncommitDelayMillis, G1HeapEvaluationIntervalMillis) as MANAGEABLE\n- Update all test files to use UnlockDiagnosticVMOptions instead of UnlockExperimentalVMOptions\n- Remove explicit G1UseTimeBasedHeapSizing=true from tests (now enabled by default)\n- Improve logging terminology from 'time-based' to 'uncommit evaluation'\n- Fix comment style and remove unused heap_sizing_policy() accessor\n- Comprehensive type safety improvements throughout the codebase\n\nThis addresses all feedback regarding type safety, flag design,\nand production readiness of the time-based heap sizing feature."},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.cpp"}],"sha":"df615d286d82f76afe6a1ef54960ad2795dcf9e2"}]