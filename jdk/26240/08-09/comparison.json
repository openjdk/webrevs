{"files":[{"patch":"@@ -1180,1 +1180,1 @@\n-                           shrink_bytes, shrunk_bytes, num_regions_removed);\n+                            shrink_bytes, shrunk_bytes, num_regions_removed);\n@@ -1626,1 +1626,1 @@\n-  }  }\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"utilities\/globalDefinitions.hpp\"\n@@ -36,0 +35,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapEvaluationTask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"gc\/g1\/g1ServiceThread.hpp\"\n@@ -30,0 +29,1 @@\n+#include \"gc\/g1\/g1ServiceThread.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapEvaluationTask.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#include \"gc\/g1\/g1_globals.hpp\"  \/\/ For flag declarations\n@@ -29,1 +28,0 @@\n-#include \"gc\/g1\/g1HeapSizingPolicy.hpp\"\n@@ -32,0 +30,1 @@\n+#include \"gc\/g1\/g1HeapSizingPolicy.hpp\"\n@@ -33,0 +32,1 @@\n+#include \"gc\/g1\/g1_globals.hpp\"  \/\/ For flag declarations\n@@ -510,1 +510,1 @@\n-    log_debug(gc, sizing)(\"Time-based uncommit evaluation: found %u inactive regions (requested %u)\",\n+    log_debug(gc, sizing)(\"Time-based uncommit evaluation: found %u idle regions (requested %u)\",\n@@ -570,2 +570,2 @@\n-    log_debug(gc, sizing)(\"Region state transition: transitioning from active to inactive\");\n-    log_debug(gc, sizing)(\"Region state transition: Region %u transitioning from active to inactive after \" JLONG_FORMAT \"ms idle\",\n+    log_debug(gc, sizing)(\"Region state transition: transitioning from active to idle\");\n+    log_debug(gc, sizing)(\"Region state transition: Region %u transitioning from active to idle after \" JLONG_FORMAT \"ms idle\",\n@@ -585,1 +585,1 @@\n-    double gc_time_ratio = _analytics->short_term_pause_time_ratio();\n+    double gc_time_ratio = _analytics->short_term_gc_time_ratio();\n@@ -599,1 +599,1 @@\n-  uint inactive_count = count_uncommit_candidates();\n+  uint idle_count = count_uncommit_candidates();\n@@ -602,2 +602,2 @@\n-  log_debug(gc, sizing)(\"Uncommit evaluation: found %u inactive candidates (min required: %zu)\",\n-                       inactive_count, (size_t)G1MinRegionsToUncommit);\n+  log_debug(gc, sizing)(\"Uncommit evaluation: found %u idle candidates (min required: %zu)\",\n+                       idle_count, (size_t)G1MinRegionsToUncommit);\n@@ -605,2 +605,2 @@\n-  \/\/ Need minimum number of inactive regions to proceed\n-  if (inactive_count >= G1MinRegionsToUncommit) {\n+  \/\/ Need minimum number of idle regions to proceed\n+  if (idle_count >= G1MinRegionsToUncommit) {\n@@ -633,1 +633,1 @@\n-      log_debug(gc, sizing)(\"Uncommit evaluation: regions analysis - committed=%zu, inactive=%u, \"\n+      log_debug(gc, sizing)(\"Uncommit evaluation: regions analysis - committed=%zu, idle=%u, \"\n@@ -635,1 +635,1 @@\n-                           committed_regions, inactive_count, young_gen_regions, g1_reserve_regions,\n+                           committed_regions, idle_count, young_gen_regions, g1_reserve_regions,\n@@ -653,1 +653,1 @@\n-      size_t available_for_uncommit = inactive_count;\n+      size_t available_for_uncommit = idle_count;\n@@ -682,4 +682,4 @@\n-        log_debug(gc, sizing)(\"Uncommit candidates found: %u inactive regions\", inactive_count);\n-        log_info(gc, sizing)(\"Uncommit evaluation: found %u inactive regions, uncommitting %zu regions (%zuMB)\",\n-                            inactive_count, regions_to_uncommit, shrink_bytes \/ M);\n-        log_debug(gc, sizing)(\"Uncommit evaluation: Found %u inactive regions out of %zu total regions, \"\n+        log_debug(gc, sizing)(\"Uncommit candidates found: %u idle regions\", idle_count);\n+        log_info(gc, sizing)(\"Uncommit evaluation: found %u idle regions, uncommitting %zu regions (%zuMB)\",\n+                            idle_count, regions_to_uncommit, shrink_bytes \/ M);\n+        log_debug(gc, sizing)(\"Uncommit evaluation: Found %u idle regions out of %zu total regions, \"\n@@ -687,1 +687,1 @@\n-                             inactive_count, total_regions, shrink_bytes, max_shrink_bytes);\n+                             idle_count, total_regions, shrink_bytes, max_shrink_bytes);\n@@ -702,2 +702,2 @@\n-                      \"(inactive=%u min_required=%zu heap=%zuB min=%zuB)\",\n-                      inactive_count, (size_t)G1MinRegionsToUncommit,\n+                      \"(idle=%u min_required=%zu heap=%zuB min=%zuB)\",\n+                      idle_count, (size_t)G1MinRegionsToUncommit,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"gc\/g1\/g1Analytics.hpp\"\n@@ -30,0 +29,1 @@\n+#include \"gc\/g1\/g1Analytics.hpp\"\n@@ -124,1 +124,1 @@\n-  \/\/ Mark specific time-based candidates as inactive for uncommitting\n+  \/\/ Mark specific time-based candidates as idle for uncommitting\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -375,1 +375,1 @@\n-          \"Enable time-based heap sizing to uncommit memory from inactive \" \\\n+          \"Enable time-based heap sizing to uncommit memory from idle \"    \\\n@@ -384,1 +384,1 @@\n-          \"A region is considered inactive if it has not been accessed \"    \\\n+          \"A region is considered idle if it has not been accessed \"       \\\n@@ -389,1 +389,1 @@\n-          \"Minimum number of inactive regions required before G1 will \"     \\\n+          \"Minimum number of idle regions required before G1 will \"        \\\n","filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        \n+\n@@ -85,1 +85,1 @@\n-            output.getStdout().contains(\"Uncommit evaluation: Found\") || \n+            output.getStdout().contains(\"Uncommit evaluation: Found\") ||\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1RegionUncommit.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        \n+\n@@ -76,1 +76,1 @@\n-        if (output.getStdout().contains(\"Region state transition:\") || \n+        if (output.getStdout().contains(\"Region state transition:\") ||\n@@ -94,1 +94,1 @@\n-            \n+\n@@ -112,1 +112,1 @@\n-            \n+\n@@ -130,1 +130,1 @@\n-        \n+\n@@ -143,1 +143,1 @@\n-        \n+\n@@ -353,1 +353,1 @@\n-            \n+\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedRegionTracking.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}