[{"commit":{"message":"Merge master"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionManager.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionManager.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1RegionToSpaceMapper.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp"},{"filename":"src\/hotspot\/share\/logging\/logTag.hpp"},{"filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp"}],"sha":"f69773bf1f5a94295e59dc27e836e6596771397e"},{"commit":{"message":"Address OpenJDK PR feedback on time-based heap uncommit and region selection"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapEvaluationTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapEvaluationTask.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionManager.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionManager.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1InitLogger.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1RegionToSpaceMapper.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1RegionUncommit.java"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedHeapSizing.java"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedRegionTracking.java"}],"sha":"9a38a0a738348723c364d4efee437e1710022e75"},{"commit":{"message":"Remove unused static _uncommit_delay member and accessor"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.hpp"}],"sha":"e574db86c1e538ecf06a13d53611cf539622e575"},{"commit":{"message":"Resolve merge conflict - keep proper @tschatzl time type implementation\n\n- Keep Tickspan::from_milliseconds(G1UncommitDelayMillis) initialization\n- Keep (jlong)elapsed.milliseconds() cast for macOS build compatibility\n- Keep elapsed > _uncommit_delay direct Tickspan comparison\n- Maintains cross-platform compatibility"},"files":[],"sha":"11061e51d3fd72481f0d7faa3d410daeec713d1c"},{"commit":{"message":"JDK-8357445: Implement @tschatzl code review feedback for time-based heap sizing\n\n- Convert from jlong milliseconds to proper time types (Ticks\/Tickspan)\n- Reclassify G1UseTimeBasedHeapSizing from EXPERIMENTAL+false to DIAGNOSTIC+true\n- Reclassify G1MinRegionsToUncommit from EXPERIMENTAL to DIAGNOSTIC\n- Keep timing flags (G1UncommitDelayMillis, G1HeapEvaluationIntervalMillis) as MANAGEABLE\n- Update all test files to use UnlockDiagnosticVMOptions instead of UnlockExperimentalVMOptions\n- Remove explicit G1UseTimeBasedHeapSizing=true from tests (now enabled by default)\n- Improve logging terminology from 'time-based' to 'uncommit evaluation'\n- Fix comment style and remove unused heap_sizing_policy() accessor\n- Comprehensive type safety improvements throughout the codebase\n\nThis addresses all feedback regarding type safety, flag design,\nand production readiness of the time-based heap sizing feature."},"files":[],"sha":"53a793685d0e2116ba495c10b36cebb935774a9b"},{"commit":{"message":"JDK-8357445: Implement @tschatzl code review feedback for time-based heap sizing\n\n- Convert from jlong milliseconds to proper time types (Ticks\/Tickspan)\n- Reclassify G1UseTimeBasedHeapSizing from EXPERIMENTAL+false to DIAGNOSTIC+true\n- Reclassify G1MinRegionsToUncommit from EXPERIMENTAL to DIAGNOSTIC\n- Keep timing flags (G1UncommitDelayMillis, G1HeapEvaluationIntervalMillis) as MANAGEABLE\n- Update all test files to use UnlockDiagnosticVMOptions instead of UnlockExperimentalVMOptions\n- Remove explicit G1UseTimeBasedHeapSizing=true from tests (now enabled by default)\n- Improve logging terminology from 'time-based' to 'uncommit evaluation'\n- Fix comment style and remove unused heap_sizing_policy() accessor\n- Comprehensive type safety improvements throughout the codebase\n\nThis addresses all feedback regarding type safety, flag design,\nand production readiness of the time-based heap sizing feature."},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapEvaluationTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1RegionUncommit.java"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedHeapConfig.java"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedHeapSizing.java"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedRegionTracking.java"}],"sha":"df615d286d82f76afe6a1ef54960ad2795dcf9e2"},{"commit":{"message":"8357445: Remove redundant record_activity calls and leftover initialize call\n\n- Remove record_activity() from retirement methods as hr_clear() is always last\n- Remove leftover initialize() call since initialization moved to constructor\n- Remove unused G1 includes from vmOperations after moving VM_G1ShrinkHeap"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"}],"sha":"23a732e6957a2f673875450fe4f72463894dfd48"},{"commit":{"message":"8357445: Address code review feedback\n\nExtra line removed\nInclude cycle comment removed\ncompleted changed to flagged\nnullptr assignment changed to assert\nRedundant nullptr check removed\nVM_G1ShrinkHeap moved\nForward declaration removed\nConstructor initialization for static _uncommit_delay_ms"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapEvaluationTask.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.hpp"}],"sha":"8897a2b04532d8d177247d643c0475d425a48944"},{"commit":{"message":"Normalize encoding and line endings for G1 GC time-based tests"},"files":[{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1RegionUncommit.java"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedHeapConfig.java"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedHeapSizing.java"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedRegionTracking.java"}],"sha":"70a872fc9dac12e9d40df777bfe45de73f4021b0"},{"commit":{"message":"JDK-8357445: G1: Time-Based Heap Uncommit During Idle Periods\n\nImplement time-based heap uncommit for G1 during idle periods.\n\nKey changes:\n- Added G1HeapEvaluationTask for periodic heap evaluation\n- Switch from G1ServiceTask to PeriodicTask for virtual thread support\n- Implemented time-based heap sizing policy with configurable uncommit delay\n- Added region activity tracking with last access timestamps\n- Integrated VM_G1ShrinkHeap operation for safe heap shrinking\n- Added new G1 flags: G1UseTimeBasedHeapSizing, G1TimeBasedEvaluationIntervalMillis, G1UncommitDelayMillis, G1MinRegionsToUncommit\n- Added 'sizing' log tag for heap sizing operations\n\nComprehensive Test Coverage:\n- Enhanced TestG1RegionUncommit: minimum heap boundaries, concurrent allocation\/uncommit scenarios\n- Enhanced TestTimeBasedHeapSizing: humongous object handling, rapid allocation cycles, edge cases\n- Enhanced TestTimeBasedRegionTracking: concurrent region access, lifecycle transition validation\n- Enhanced TestTimeBasedHeapConfig: parameter boundary values, small heap configurations\n\nThis ensures time-based heap uncommit works correctly while maintaining all safety guarantees and test expectations."},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapEvaluationTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapEvaluationTask.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1InitLogger.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp"},{"filename":"src\/hotspot\/share\/logging\/logTag.hpp"},{"filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1RegionUncommit.java"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedHeapConfig.java"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedHeapSizing.java"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestTimeBasedRegionTracking.java"}],"sha":"70531f8ee36b967a0a08ac7eca3866adaffcd5d7"}]