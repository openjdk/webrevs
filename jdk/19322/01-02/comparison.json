{"files":[{"patch":"@@ -94,4 +94,0 @@\n-gc\/shenandoah\/TestAllocObjectArrays.java#aggressive 8332031 linux-aarch64\n-gc\/shenandoah\/TestAllocObjectArrays.java#iu-aggressive 8332031 linux-aarch64\n-gc\/shenandoah\/TestAllocIntArrays.java#aggressive 8332031 linux-aarch64\n-gc\/shenandoah\/TestAllocIntArrays.java#iu-aggressive 8332031 linux-aarch64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+ * @requires os.arch!=\"aarch64\"\n@@ -85,0 +86,43 @@\n+\/*\n+ * @test id=aggressive-aarch64\n+ * @summary Acceptance tests: collector can withstand allocation\n+ * @key randomness\n+ * @requires vm.gc.Shenandoah\n+ * @requires os.arch==\"aarch64\"\n+ * @library \/test\/lib\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahOOMDuringEvacALot -XX:+ShenandoahVerify\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n+ *      TestAllocIntArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahAllocFailureALot -XX:+ShenandoahVerify\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n+ *      TestAllocIntArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahOOMDuringEvacALot\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n+ *      TestAllocIntArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahAllocFailureALot\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n+ *      TestAllocIntArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n+ *      TestAllocIntArrays\n+ *\/\n+\n@@ -144,0 +188,34 @@\n+ * @requires os.arch!=\"aarch64\"\n+ * @library \/test\/lib\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahOOMDuringEvacALot -XX:+ShenandoahVerify\n+ *      TestAllocIntArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahAllocFailureALot -XX:+ShenandoahVerify\n+ *      TestAllocIntArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahOOMDuringEvacALot\n+ *      TestAllocIntArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahAllocFailureALot\n+ *      TestAllocIntArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive\n+ *      TestAllocIntArrays\n+ *\/\n+\n+\/*\n+ * @test id=iu-aggressive-aarch64\n+ * @summary Acceptance tests: collector can withstand allocation\n+ * @key randomness\n+ * @requires vm.gc.Shenandoah\n+ * @requires os.arch==\"aarch64\"\n@@ -149,0 +227,2 @@\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n@@ -154,0 +234,2 @@\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n@@ -159,0 +241,2 @@\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n@@ -164,0 +248,2 @@\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n@@ -168,0 +254,2 @@\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestAllocIntArrays.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+ * @requires os.arch!=\"aarch64\"\n@@ -85,0 +86,43 @@\n+\/*\n+ * @test id=aggressive-aarch64\n+ * @summary Acceptance tests: collector can withstand allocation\n+ * @key randomness\n+ * @requires vm.gc.Shenandoah\n+ * @requires os.arch==\"aarch64\"\n+ * @library \/test\/lib\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahOOMDuringEvacALot -XX:+ShenandoahVerify\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n+ *      TestAllocObjectArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahAllocFailureALot -XX:+ShenandoahVerify\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n+ *      TestAllocObjectArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahOOMDuringEvacALot\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n+ *      TestAllocObjectArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahAllocFailureALot\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n+ *      TestAllocObjectArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n+ *      TestAllocObjectArrays\n+ *\/\n+\n@@ -144,0 +188,34 @@\n+ * @requires os.arch!=\"aarch64\"\n+ * @library \/test\/lib\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahOOMDuringEvacALot -XX:+ShenandoahVerify\n+ *      TestAllocObjectArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahAllocFailureALot -XX:+ShenandoahVerify\n+ *      TestAllocObjectArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahOOMDuringEvacALot\n+ *      TestAllocObjectArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive\n+ *      -XX:+ShenandoahAllocFailureALot\n+ *      TestAllocObjectArrays\n+ *\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions -Xmx1g -Xms1g\n+ *      -XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:ShenandoahGCHeuristics=aggressive\n+ *      TestAllocObjectArrays\n+ *\/\n+\n+\/*\n+ * @test id=iu-aggressive-aarch64\n+ * @summary Acceptance tests: collector can withstand allocation\n+ * @key randomness\n+ * @requires vm.gc.Shenandoah\n+ * @requires os.arch==\"aarch64\"\n@@ -149,0 +227,2 @@\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n@@ -154,0 +234,2 @@\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n@@ -159,0 +241,2 @@\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n@@ -164,0 +248,2 @@\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n@@ -168,0 +254,2 @@\n+ *      -XX:ShenandoahNoProgressThreshold=10\n+ *      -XX:ShenandoahCriticalFreeThreshold=0\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestAllocObjectArrays.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"modified"}]}