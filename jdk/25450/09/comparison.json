{"files":[{"patch":"@@ -172,1 +172,1 @@\n-julong    os::Aix::_physical_memory = 0;\n+size_t    os::Aix::_physical_memory = 0;\n@@ -257,1 +257,1 @@\n-julong os::free_memory() {\n+MemRes os::free_memory() {\n@@ -261,1 +261,1 @@\n-julong os::available_memory() {\n+MemRes os::available_memory() {\n@@ -265,1 +265,1 @@\n-julong os::Aix::available_memory() {\n+MemRes os::Aix::available_memory() {\n@@ -268,1 +268,1 @@\n-    return mi.real_free;\n+    return MemRes(mi.real_free, 0);\n@@ -270,1 +270,1 @@\n-    return ULONG_MAX;\n+    return MemRes(0, -1);\n@@ -274,1 +274,1 @@\n-jlong os::total_swap_space() {\n+MemRes os::total_swap_space() {\n@@ -277,1 +277,1 @@\n-    return -1;\n+    return MemRes(0, -1);\n@@ -279,1 +279,1 @@\n-  return (jlong)(memory_info.pgsp_total * 4 * K);\n+  return MemRes(static_cast<size_t>(memory_info.pgsp_total * 4 * K), 0);\n@@ -282,1 +282,1 @@\n-jlong os::free_swap_space() {\n+MemRes os::free_swap_space() {\n@@ -285,1 +285,1 @@\n-    return -1;\n+    return MemRes(0, -1);\n@@ -287,1 +287,1 @@\n-  return (jlong)(memory_info.pgsp_free * 4 * K);\n+  return MemRes(static_cast<size_t>(memory_info.pgsp_free * 4 * K), 0);\n@@ -290,2 +290,2 @@\n-julong os::physical_memory() {\n-  return Aix::physical_memory();\n+MemRes os::physical_memory() {\n+  return MemRes(Aix::physical_memory(), 0);\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  static julong _physical_memory;\n+  static size_t _physical_memory;\n@@ -57,3 +57,3 @@\n-  static julong available_memory();\n-  static julong free_memory();\n-  static julong physical_memory() { return _physical_memory; }\n+  static MemRes available_memory();\n+  static MemRes free_memory();\n+  static size_t physical_memory() { return _physical_memory; }\n","filename":"src\/hotspot\/os\/aix\/os_aix.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-julong os::Bsd::_physical_memory = 0;\n+size_t os::Bsd::_physical_memory = 0;\n@@ -136,1 +136,1 @@\n-julong os::available_memory() {\n+MemRes os::available_memory() {\n@@ -140,1 +140,1 @@\n-julong os::free_memory() {\n+MemRes os::free_memory() {\n@@ -147,1 +147,1 @@\n-julong os::Bsd::available_memory() {\n+MemRes os::Bsd::available_memory() {\n@@ -159,0 +159,2 @@\n+  } else {\n+    return MemRes(0, -1);\n@@ -161,1 +163,1 @@\n-  return available;\n+  return MemRes(static_cast<size_t>(available), 0);\n@@ -180,1 +182,1 @@\n-jlong os::total_swap_space() {\n+MemRes os::total_swap_space() {\n@@ -185,1 +187,1 @@\n-    return -1;\n+    return MemRes(0, -1);\n@@ -187,1 +189,1 @@\n-  return (jlong)vmusage.xsu_total;\n+  return MemRes(static_cast<size_t>(vmusage.xsu_total), 0);\n@@ -189,1 +191,1 @@\n-  return -1;\n+  return MemRes(0, -1);\n@@ -193,1 +195,1 @@\n-jlong os::free_swap_space() {\n+MemRes os::free_swap_space() {\n@@ -198,1 +200,1 @@\n-    return -1;\n+    return MemRes(0, -1);\n@@ -200,1 +202,1 @@\n-  return (jlong)vmusage.xsu_avail;\n+  return MemRes(static_cast<size_t>(vmusage.xsu_avail), 0);\n@@ -202,1 +204,1 @@\n-  return -1;\n+  return MemRes(0, -1);\n@@ -206,2 +208,2 @@\n-julong os::physical_memory() {\n-  return Bsd::physical_memory();\n+MemRes os::physical_memory() {\n+  return MemRes(Bsd::physical_memory(), 0);\n@@ -284,1 +286,1 @@\n-    _physical_memory = mem_val;\n+    _physical_memory = static_cast<size_t>(mem_val);\n@@ -295,1 +297,1 @@\n-    _physical_memory = MIN2(_physical_memory, (julong)limits.rlim_cur);\n+    _physical_memory = MIN2(_physical_memory, static_cast<size_t>(limits.rlim_cur));\n@@ -1469,4 +1471,4 @@\n-  st->print(\", physical \" UINT64_FORMAT \"k\",\n-            os::physical_memory() >> 10);\n-  st->print(\"(\" UINT64_FORMAT \"k free)\",\n-            os::available_memory() >> 10);\n+  st->print(\", physical %zu\" \"k\",\n+            os::physical_memory().value >> 10);\n+  st->print(\"(%zu\" \"k free)\",\n+            os::available_memory().value >> 10);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":23,"deletions":21,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-  static julong _physical_memory;\n+  static size_t _physical_memory;\n@@ -48,3 +48,3 @@\n-  static julong available_memory();\n-  static julong free_memory();\n-  static julong physical_memory() { return _physical_memory; }\n+  static MemRes available_memory();\n+  static MemRes free_memory();\n+  static size_t physical_memory() { return _physical_memory; }\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -672,3 +672,3 @@\n-  jlong phys_mem = os::Linux::physical_memory();\n-  log_trace(os, container)(\"total physical memory: \" JLONG_FORMAT, phys_mem);\n-  jlong mem_limit = contrl->controller()->read_memory_limit_in_bytes(phys_mem);\n+  size_t phys_mem = os::Linux::physical_memory();\n+  log_trace(os, container)(\"total physical memory: %zu\", phys_mem);\n+  jlong mem_limit = contrl->controller()->read_memory_limit_in_bytes(static_cast<julong>(phys_mem));\n@@ -843,3 +843,3 @@\n-  julong phys_mem = os::Linux::physical_memory();\n-  julong host_swap = os::Linux::host_swap();\n-  return memory_controller()->controller()->memory_and_swap_limit_in_bytes(phys_mem, host_swap);\n+  size_t phys_mem = os::Linux::physical_memory();\n+  size_t host_swap = os::Linux::host_swap();\n+  return memory_controller()->controller()->memory_and_swap_limit_in_bytes(static_cast<julong>(phys_mem), static_cast<julong>(host_swap));\n@@ -849,3 +849,3 @@\n-  julong phys_mem = os::Linux::physical_memory();\n-  julong host_swap = os::Linux::host_swap();\n-  return memory_controller()->controller()->memory_and_swap_usage_in_bytes(phys_mem, host_swap);\n+  size_t phys_mem = os::Linux::physical_memory();\n+  size_t host_swap = os::Linux::host_swap();\n+  return memory_controller()->controller()->memory_and_swap_usage_in_bytes(static_cast<julong>(phys_mem), static_cast<julong>(host_swap));\n@@ -855,2 +855,2 @@\n-  julong phys_mem = os::Linux::physical_memory();\n-  return memory_controller()->controller()->memory_soft_limit_in_bytes(phys_mem);\n+  size_t phys_mem = os::Linux::physical_memory();\n+  return memory_controller()->controller()->memory_soft_limit_in_bytes(static_cast<julong>(phys_mem));\n@@ -888,2 +888,2 @@\n-  julong phys_mem = os::Linux::physical_memory();\n-  memory_controller()->controller()->print_version_specific_info(st, phys_mem);\n+  size_t phys_mem = os::Linux::physical_memory();\n+  memory_controller()->controller()->print_version_specific_info(st, static_cast<julong>(phys_mem));\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-  julong phys_mem = os::Linux::physical_memory();\n+  julong phys_mem = static_cast<julong>(os::Linux::physical_memory());\n","filename":"src\/hotspot\/os\/linux\/cgroupUtil_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-julong os::Linux::_physical_memory = 0;\n+size_t os::Linux::_physical_memory = 0;\n@@ -235,1 +235,1 @@\n-julong os::available_memory() {\n+MemRes os::available_memory() {\n@@ -239,1 +239,1 @@\n-julong os::Linux::available_memory() {\n+MemRes os::Linux::available_memory() {\n@@ -243,1 +243,1 @@\n-    return avail_mem;\n+    return MemRes(static_cast<size_t>(avail_mem), 0);\n@@ -258,1 +258,5 @@\n-    avail_mem = free_memory();\n+    auto free_mem = free_memory();\n+    if (free_mem.error < 0) {\n+      return MemRes(0, -1);\n+    }\n+    avail_mem = static_cast<julong>(free_memory().value);\n@@ -261,1 +265,1 @@\n-  return avail_mem;\n+  return MemRes(static_cast<size_t>(avail_mem), 0);\n@@ -264,1 +268,1 @@\n-julong os::free_memory() {\n+MemRes os::free_memory() {\n@@ -268,1 +272,1 @@\n-julong os::Linux::free_memory() {\n+MemRes os::Linux::free_memory() {\n@@ -270,1 +274,0 @@\n-  struct sysinfo si;\n@@ -274,1 +277,7 @@\n-    return free_mem;\n+    return MemRes(static_cast<size_t>(free_mem), 0);\n+  }\n+\n+  struct sysinfo si;\n+  int ret = sysinfo(&si);\n+  if (ret != 0) {\n+    return MemRes(0, -1);\n@@ -277,1 +286,0 @@\n-  sysinfo(&si);\n@@ -280,1 +288,1 @@\n-  return free_mem;\n+  return MemRes(static_cast<size_t>(free_mem), 0);\n@@ -283,1 +291,1 @@\n-jlong os::total_swap_space() {\n+MemRes os::total_swap_space() {\n@@ -286,1 +294,1 @@\n-      return (jlong)(OSContainer::memory_and_swap_limit_in_bytes() - OSContainer::memory_limit_in_bytes());\n+      return MemRes(static_cast<size_t>(OSContainer::memory_and_swap_limit_in_bytes() - OSContainer::memory_limit_in_bytes()), 0);\n@@ -292,1 +300,1 @@\n-    return -1;\n+    return MemRes(0, -1);\n@@ -294,1 +302,1 @@\n-  return  (jlong)(si.totalswap * si.mem_unit);\n+  return MemRes(static_cast<size_t>(si.totalswap * si.mem_unit), 0);\n@@ -297,1 +305,1 @@\n-static jlong host_free_swap() {\n+static MemRes host_free_swap() {\n@@ -301,1 +309,1 @@\n-    return -1;\n+    MemRes(0, -1);\n@@ -303,1 +311,1 @@\n-  return (jlong)(si.freeswap * si.mem_unit);\n+  return MemRes(static_cast<size_t>(si.freeswap * si.mem_unit), 0);\n@@ -306,1 +314,1 @@\n-jlong os::free_swap_space() {\n+MemRes os::free_swap_space() {\n@@ -309,2 +317,4 @@\n-  jlong host_free_swap_val = MIN2(os::total_swap_space(), host_free_swap());\n-  assert(host_free_swap_val >= 0, \"sysinfo failed?\");\n+  const MemRes total_swap_space = os::total_swap_space();\n+  const MemRes host_free_swap_space = host_free_swap();\n+  assert(total_swap_space.error != -1 && host_free_swap_space.error != -1, \"sysinfo failed?\");\n+  size_t host_free_swap_val = MIN2(total_swap_space.value, host_free_swap_space.value);\n@@ -317,1 +327,1 @@\n-        return 0;\n+        return MemRes(0, 0);\n@@ -325,1 +335,1 @@\n-          return free_swap >= 0 ? free_swap : 0;\n+          return MemRes(free_swap >= 0 ? static_cast<size_t>(free_swap) : 0, 0);\n@@ -331,1 +341,1 @@\n-                            \" container_mem_limit=\" JLONG_FORMAT \" returning host value: \" JLONG_FORMAT,\n+                            \" container_mem_limit=\" JLONG_FORMAT \" returning host value: %zu\",\n@@ -334,1 +344,1 @@\n-  return host_free_swap_val;\n+  return MemRes(host_free_swap_val, 0);\n@@ -337,2 +347,2 @@\n-julong os::physical_memory() {\n-  jlong phys_mem = 0;\n+MemRes os::physical_memory() {\n+  size_t phys_mem = 0;\n@@ -343,1 +353,1 @@\n-      return mem_limit;\n+      return MemRes(static_cast<size_t>(mem_limit), 0);\n@@ -348,2 +358,2 @@\n-  log_trace(os)(\"total system memory: \" JLONG_FORMAT, phys_mem);\n-  return phys_mem;\n+  log_trace(os)(\"total system memory: %zu\", phys_mem);\n+  return MemRes(phys_mem, 0);\n@@ -496,1 +506,1 @@\n-julong os::Linux::host_swap() {\n+size_t os::Linux::host_swap() {\n@@ -499,1 +509,1 @@\n-  return (julong)(si.totalswap * si.mem_unit);\n+  return static_cast<size_t>(si.totalswap * si.mem_unit);\n@@ -523,1 +533,1 @@\n-  _physical_memory = (julong)sysconf(_SC_PHYS_PAGES) * (julong)sysconf(_SC_PAGESIZE);\n+  _physical_memory = static_cast<size_t>(sysconf(_SC_PHYS_PAGES)) * static_cast<size_t>(sysconf(_SC_PAGESIZE));\n@@ -2548,4 +2558,4 @@\n-  st->print(\", physical \" UINT64_FORMAT \"k\",\n-            os::physical_memory() >> 10);\n-  st->print(\"(\" UINT64_FORMAT \"k free)\",\n-            os::available_memory() >> 10);\n+  st->print(\", physical %zu\" \"k\",\n+            os::physical_memory().value >> 10);\n+  st->print(\"(%zu\" \"k free)\",\n+            os::available_memory().value >> 10);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":48,"deletions":38,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-  static julong _physical_memory;\n+  static size_t _physical_memory;\n@@ -56,2 +56,2 @@\n-  static julong available_memory();\n-  static julong free_memory();\n+  static MemRes available_memory();\n+  static MemRes free_memory();\n@@ -120,2 +120,2 @@\n-  static julong physical_memory() { return _physical_memory; }\n-  static julong host_swap();\n+  static size_t physical_memory() { return _physical_memory; }\n+  static size_t host_swap();\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -851,1 +851,1 @@\n-julong os::available_memory() {\n+MemRes os::available_memory() {\n@@ -855,1 +855,1 @@\n-julong os::free_memory() {\n+MemRes os::free_memory() {\n@@ -859,1 +859,1 @@\n-julong os::win32::available_memory() {\n+MemRes os::win32::available_memory() {\n@@ -864,3 +864,7 @@\n-  GlobalMemoryStatusEx(&ms);\n-\n-  return (julong)ms.ullAvailPhys;\n+  BOOL res = GlobalMemoryStatusEx(&ms);\n+  if (!res) {\n+    errno = ::GetLastError();\n+    log_debug(os)(\"available_memory() failed to GlobalMemoryStatusEx: GetLastError->%ld.\", errno);\n+    return MemRes(0,-1);\n+  }\n+  return MemRes(static_cast<size_t>(ms.ullAvailPhys), 0);\n@@ -869,1 +873,1 @@\n-jlong os::total_swap_space() {\n+MemRes os::total_swap_space() {\n@@ -872,2 +876,7 @@\n-  GlobalMemoryStatusEx(&ms);\n-  return (jlong) ms.ullTotalPageFile;\n+  BOOL res = GlobalMemoryStatusEx(&ms);\n+  if (!res) {\n+    errno = ::GetLastError();\n+    log_debug(os)(\"total_swap_space() failed to GlobalMemoryStatusEx: GetLastError->%ld.\", errno);\n+    return MemRes(0, -1);\n+  }\n+  return MemRes(static_cast<size_t>(ms.ullTotalPageFile), 0);\n@@ -876,1 +885,1 @@\n-jlong os::free_swap_space() {\n+MemRes os::free_swap_space() {\n@@ -879,2 +888,7 @@\n-  GlobalMemoryStatusEx(&ms);\n-  return (jlong) ms.ullAvailPageFile;\n+  BOOL res = GlobalMemoryStatusEx(&ms);\n+  if (!res) {\n+    errno = ::GetLastError();\n+    log_debug(os)(\"free_swap_space() failed to GlobalMemoryStatusEx: GetLastError->%ld.\", errno);\n+    return MemRes(0, -1);\n+  }\n+  return MemRes(static_cast<size_t>(ms.ullAvailPageFile), 0);\n@@ -883,2 +897,2 @@\n-julong os::physical_memory() {\n-  return win32::physical_memory();\n+MemRes os::physical_memory() {\n+  return MemRes(win32::physical_memory(), 0);\n@@ -3903,1 +3917,1 @@\n-julong os::win32::_physical_memory           = 0;\n+size_t os::win32::_physical_memory           = 0;\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":29,"deletions":15,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  static julong _physical_memory;\n+  static size_t _physical_memory;\n@@ -105,3 +105,3 @@\n-  static julong available_memory();\n-  static julong free_memory();\n-  static julong physical_memory() { return _physical_memory; }\n+  static MemRes available_memory();\n+  static MemRes free_memory();\n+  static size_t physical_memory() { return _physical_memory; }\n","filename":"src\/hotspot\/os\/windows\/os_windows.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1061,1 +1061,1 @@\n-  julong free_memory = os::free_memory();\n+  size_t free_memory = os::free_memory().value;\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,2 +65,2 @@\n-  julong memory = os::physical_memory();\n-  log_info_p(gc, init)(\"Memory: \" JULONG_FORMAT \"%s\",\n+  size_t memory = os::physical_memory().value;\n+  log_info_p(gc, init)(\"Memory: %zu%s\",\n","filename":"src\/hotspot\/share\/gc\/shared\/gcInitLogger.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  log_info_p(gc, init)(\"Memory: \" JULONG_FORMAT \"M\", os::physical_memory() \/ M);\n+  log_info_p(gc, init)(\"Memory: %zuM\", os::physical_memory().value \/ M);\n","filename":"src\/hotspot\/share\/gc\/z\/zLargePages.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -411,1 +411,1 @@\n-  return os::physical_memory();\n+  return os::physical_memory().value;\n@@ -420,1 +420,1 @@\n-  return os::total_swap_space();\n+  return os::total_swap_space().value;\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -531,1 +531,1 @@\n-  u8 totalPhysicalMemory = os::physical_memory();\n+  size_t totalPhysicalMemory = os::physical_memory().value;\n@@ -533,2 +533,2 @@\n-  event.set_totalSize(totalPhysicalMemory);\n-  event.set_usedSize(totalPhysicalMemory - os::available_memory());\n+  event.set_totalSize(static_cast<u8>(totalPhysicalMemory));\n+  event.set_usedSize(static_cast<u8>(totalPhysicalMemory - os::available_memory().value));\n@@ -540,2 +540,2 @@\n-  event.set_totalSize(os::total_swap_space());\n-  event.set_freeSize(os::free_swap_space());\n+  event.set_totalSize(static_cast<s8>(os::total_swap_space().value));\n+  event.set_freeSize(static_cast<s8>(os::free_swap_space().value));\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrPeriodic.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1359,2 +1359,2 @@\n-      (\"loading name=%s kind=%d (avail_mem=\" UINT64_FORMAT \"K)\",\n-       the_class->external_name(), _class_load_kind, os::available_memory() >> 10);\n+      (\"loading name=%s kind=%d (avail_mem= %zu\" \"K)\",\n+       the_class->external_name(), _class_load_kind, os::available_memory().value >> 10);\n@@ -1526,1 +1526,1 @@\n-      (\"loaded name=%s (avail_mem=\" UINT64_FORMAT \"K)\", the_class->external_name(), os::available_memory() >> 10);\n+      (\"loaded name=%s (avail_mem= %zu\" \"K)\", the_class->external_name(), os::available_memory().value >> 10);\n@@ -4424,2 +4424,2 @@\n-      (\"redefined name=%s, count=%d (avail_mem=\" UINT64_FORMAT \"K)\",\n-       the_class->external_name(), java_lang_Class::classRedefinedCount(the_class->java_mirror()), os::available_memory() >> 10);\n+      (\"redefined name=%s, count=%d (avail_mem= %zu\" \"K)\",\n+       the_class->external_name(), java_lang_Class::classRedefinedCount(the_class->java_mirror()), os::available_memory().value >> 10);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2513,1 +2513,1 @@\n-  return os::physical_memory();\n+  return os::physical_memory().value;\n@@ -2518,1 +2518,1 @@\n-  return os::available_memory();\n+  return os::available_memory().value;\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1489,1 +1489,1 @@\n-  julong phys_mem;\n+  size_t phys_mem;\n@@ -1503,1 +1503,1 @@\n-      phys_mem = os::physical_memory();\n+      phys_mem = os::physical_memory().value;\n@@ -1506,1 +1506,1 @@\n-      phys_mem = (julong)MaxRAM;\n+      phys_mem = static_cast<size_t>(MaxRAM);\n@@ -1509,2 +1509,2 @@\n-    phys_mem = FLAG_IS_DEFAULT(MaxRAM) ? MIN2(os::physical_memory(), (julong)MaxRAM)\n-                                       : (julong)MaxRAM;\n+    phys_mem = FLAG_IS_DEFAULT(MaxRAM) ? MIN2(os::physical_memory().value, static_cast<size_t>(MaxRAM))\n+                                       : static_cast<size_t>(MaxRAM);\n@@ -1631,1 +1631,1 @@\n-  julong total_memory = os::physical_memory();\n+  julong total_memory = static_cast<julong>(os::physical_memory().value);\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1186,1 +1186,1 @@\n-  size_t mem = physical_memory()\/G;\n+  size_t mem = physical_memory().value\/G;\n@@ -1188,1 +1188,1 @@\n-    mem = physical_memory()\/M;\n+    mem = physical_memory().value\/M;\n@@ -1938,1 +1938,1 @@\n-  const julong server_memory     = 2UL * G;\n+  const size_t server_memory     = 2UL * G;\n@@ -1942,1 +1942,1 @@\n-  const julong missing_memory   = 256UL * M;\n+  const size_t missing_memory   = 256UL * M;\n@@ -1946,1 +1946,1 @@\n-      (os::physical_memory() >= (server_memory - missing_memory))) {\n+      (os::physical_memory().value >= (server_memory - missing_memory))) {\n@@ -2205,1 +2205,1 @@\n-julong os::used_memory() {\n+MemRes os::used_memory() {\n@@ -2210,1 +2210,1 @@\n-      return mem_usage;\n+      return MemRes(static_cast<size_t>(mem_usage), 0);\n@@ -2214,1 +2214,12 @@\n-  return os::physical_memory() - os::available_memory();\n+  auto phys_mem = os::physical_memory();\n+  auto avail_mem = os::available_memory();\n+\n+  if (phys_mem.error < 0) {\n+    return MemRes(0, -1);\n+  }\n+\n+  if (avail_mem.error < 0) {\n+    return MemRes(0, -1);\n+  }\n+\n+  return MemRes(phys_mem.value - avail_mem.value, 0);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":19,"deletions":8,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -148,0 +148,7 @@\n+\/\/ struct to return from mem-related functions\n+struct MemRes {\n+  size_t value;\n+  int error;\n+  MemRes(size_t v, int e) : value(v), error(e) {}\n+};\n+\n@@ -340,3 +347,3 @@\n-  static julong available_memory();\n-  static julong used_memory();\n-  static julong free_memory();\n+  static MemRes available_memory();\n+  static MemRes used_memory();\n+  static MemRes free_memory();\n@@ -344,2 +351,2 @@\n-  static jlong total_swap_space();\n-  static jlong free_swap_space();\n+  static MemRes total_swap_space();\n+  static MemRes free_swap_space();\n@@ -347,1 +354,1 @@\n-  static julong physical_memory();\n+  static MemRes physical_memory();\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2615,1 +2615,1 @@\n-    julong max_threads = os::free_memory() \/ (20 * M);\n+    julong max_threads = os::free_memory().value \/ (20 * M);\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -978,1 +978,1 @@\n-    return os::physical_memory();\n+    return static_cast<jlong>(os::physical_memory().value);\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}