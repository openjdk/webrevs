{"files":[{"patch":"@@ -297,1 +297,3 @@\n-      value = static_cast<size_t>(OSContainer::memory_and_swap_limit_in_bytes() - OSContainer::memory_limit_in_bytes());\n+      jlong memory_and_swap_limit_in_bytes = OSContainer::memory_and_swap_limit_in_bytes();\n+      jlong memory_limit_in_bytes = OSContainer::memory_limit_in_bytes();\n+      value = static_cast<size_t>(memory_and_swap_limit_in_bytes - memory_limit_in_bytes);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -865,1 +865,1 @@\n-  if (res) {\n+  if (res == TRUE) {\n@@ -869,1 +869,3 @@\n-    return false;\n+    errno = ::GetLastError();\n+    log_debug(os)(\"available_memory() failed to GlobalMemoryStatusEx: GetLastError->%ld.\", errno);\n+    return res == TRUE;\n@@ -877,1 +879,1 @@\n-  if (res) {\n+  if (res == TRUE) {\n@@ -881,1 +883,3 @@\n-    return false;\n+    errno = ::GetLastError();\n+    log_debug(os)(\"total_swap_space() failed to GlobalMemoryStatusEx: GetLastError->%ld.\", errno);\n+    return res == TRUE;\n@@ -889,1 +893,1 @@\n-  if (res) {\n+  if (res == TRUE) {\n@@ -893,1 +897,3 @@\n-    return false;\n+    errno = ::GetLastError();\n+    log_debug(os)(\"free_swap_space() failed to GlobalMemoryStatusEx: GetLastError->%ld.\", errno);\n+    return res == TRUE;\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -417,2 +417,1 @@\n-  size_t phys_mem = os::physical_memory();\n-  return static_cast<jlong>(phys_mem);\n+  return static_cast<jlong>(os::physical_memory());\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -531,2 +531,1 @@\n-  size_t phys_mem = os::physical_memory();\n-  u8 totalPhysicalMemory = static_cast<u8>(phys_mem);\n+  u8 totalPhysicalMemory = static_cast<u8>(os::physical_memory());\n@@ -536,0 +535,1 @@\n+  \/\/ Return value ignored - defaulting to 0 on failure.\n@@ -544,0 +544,1 @@\n+  \/\/ Return value ignored - defaulting to 0 on failure.\n@@ -547,0 +548,1 @@\n+  \/\/ Return value ignored - defaulting to 0 on failure.\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrPeriodic.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1362,0 +1362,1 @@\n+    \/\/ Return value ignored - defaulting to 0 on failure.\n@@ -1529,0 +1530,1 @@\n+    \/\/ Return value ignored - defaulting to 0 on failure.\n@@ -4440,0 +4442,1 @@\n+    \/\/ Return value ignored - defaulting to 0 on failure.\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2515,2 +2515,1 @@\n-  size_t phys_mem = os::physical_memory();\n-  return static_cast<jlong>(phys_mem);\n+  return static_cast<jlong>(os::physical_memory());\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2616,0 +2616,1 @@\n+    \/\/ Return value ignored - defaulting to 0 on failure.\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}