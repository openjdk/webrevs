{"files":[{"patch":"@@ -257,1 +257,1 @@\n-size_t os::free_memory() {\n+MemRes os::free_memory() {\n@@ -261,1 +261,1 @@\n-size_t os::available_memory() {\n+MemRes os::available_memory() {\n@@ -265,1 +265,1 @@\n-size_t os::Aix::available_memory() {\n+MemRes os::Aix::available_memory() {\n@@ -267,0 +267,1 @@\n+  MemRes res;\n@@ -268,1 +269,1 @@\n-    return mi.real_free;\n+    res.val = mi.real_free;\n@@ -270,1 +271,1 @@\n-    return static_cast<size_t>(ULONG_MAX);\n+    res.err = -1;\n@@ -272,0 +273,1 @@\n+  return res;\n@@ -274,1 +276,1 @@\n-ssize_t os::total_swap_space() {\n+MemRes os::total_swap_space() {\n@@ -276,0 +278,1 @@\n+  MemRes res;\n@@ -277,1 +280,2 @@\n-    return -1;\n+    res.err = -1;\n+    return res;\n@@ -279,1 +283,2 @@\n-  return static_cast<ssize_t>(memory_info.pgsp_total * 4 * K);\n+  res.val = static_cast<size_t>(memory_info.pgsp_total * 4 * K);\n+  return res;\n@@ -282,1 +287,1 @@\n-ssize_t os::free_swap_space() {\n+MemRes os::free_swap_space() {\n@@ -284,0 +289,1 @@\n+  MemRes res;\n@@ -285,1 +291,2 @@\n-    return -1;\n+    res.err = -1;\n+    return res;\n@@ -287,1 +294,2 @@\n-  return static_cast<ssize_t>(memory_info.pgsp_free * 4 * K);\n+  res.val = static_cast<size_t>(memory_info.pgsp_free * 4 * K);\n+  return res;\n@@ -290,2 +298,3 @@\n-size_t os::physical_memory() {\n-  return Aix::physical_memory();\n+MemRes os::physical_memory() {\n+  MemRes res(Aix::physical_memory(), 0);\n+  return res;\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":22,"deletions":13,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -57,2 +57,2 @@\n-  static size_t available_memory();\n-  static size_t free_memory();\n+  static MemRes available_memory();\n+  static MemRes free_memory();\n","filename":"src\/hotspot\/os\/aix\/os_aix.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-size_t os::available_memory() {\n+MemRes os::available_memory() {\n@@ -140,1 +140,1 @@\n-size_t os::free_memory() {\n+MemRes os::free_memory() {\n@@ -147,1 +147,1 @@\n-size_t os::Bsd::available_memory() {\n+MemRes os::Bsd::available_memory() {\n@@ -149,0 +149,1 @@\n+  MemRes res;\n@@ -158,0 +159,3 @@\n+  } else {\n+    res.err = -1;\n+    return res;\n@@ -160,1 +164,2 @@\n-  return static_cast<size_t>(available);\n+  res.val = static_cast<size_t>(available);\n+  return res;\n@@ -179,1 +184,2 @@\n-ssize_t os::total_swap_space() {\n+MemRes os::total_swap_space() {\n+  MemRes res;\n@@ -184,1 +190,2 @@\n-    return -1;\n+    res.err = -1;\n+    return res;\n@@ -186,1 +193,2 @@\n-  return static_cast<ssize_t>(vmusage.xsu_total);\n+  res.val = static_cast<size_t>(vmusage.xsu_total);\n+  return res;\n@@ -188,1 +196,2 @@\n-  return -1;\n+  res.err = -1;\n+  return res;\n@@ -192,1 +201,2 @@\n-ssize_t os::free_swap_space() {\n+MemRes os::free_swap_space() {\n+  MemRes res;\n@@ -197,1 +207,2 @@\n-    return -1;\n+    res.err = -1;\n+    return res;\n@@ -199,1 +210,2 @@\n-  return static_cast<ssize_t>(vmusage.xsu_avail);\n+  res.val = static_cast<size_t>(vmusage.xsu_avail);\n+  return res;\n@@ -201,1 +213,2 @@\n-  return -1;\n+  res.err = -1;\n+  return res;\n@@ -205,2 +218,3 @@\n-size_t os::physical_memory() {\n-  return Bsd::physical_memory();\n+MemRes os::physical_memory() {\n+  MemRes res(Bsd::physical_memory(), 0);\n+  return res;\n@@ -1469,1 +1483,1 @@\n-            os::physical_memory() >> 10);\n+            os::physical_memory().val >> 10);\n@@ -1471,1 +1485,1 @@\n-            os::available_memory() >> 10);\n+            os::available_memory().val >> 10);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":30,"deletions":16,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -48,2 +48,2 @@\n-  static size_t available_memory();\n-  static size_t free_memory();\n+  static MemRes available_memory();\n+  static MemRes free_memory();\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-size_t os::available_memory() {\n+MemRes os::available_memory() {\n@@ -239,1 +239,1 @@\n-size_t os::Linux::available_memory() {\n+MemRes os::Linux::available_memory() {\n@@ -241,0 +241,1 @@\n+  MemRes res;\n@@ -243,1 +244,2 @@\n-    return static_cast<size_t>(avail_mem);\n+    res.val = static_cast<size_t>(avail_mem);\n+    return res;\n@@ -258,1 +260,3 @@\n-    avail_mem = static_cast<julong>(free_memory());\n+    auto free_mem = free_memory();\n+    res.err = free_mem.err < 0 ? -1 : 0;\n+    avail_mem = static_cast<julong>(free_memory().val);\n@@ -261,1 +265,2 @@\n-  return static_cast<size_t>(avail_mem);\n+  res.val = static_cast<size_t>(avail_mem);\n+  return res;\n@@ -264,1 +269,1 @@\n-size_t os::free_memory() {\n+MemRes os::free_memory() {\n@@ -268,1 +273,1 @@\n-size_t os::Linux::free_memory() {\n+MemRes os::Linux::free_memory() {\n@@ -270,1 +275,1 @@\n-  struct sysinfo si;\n+  MemRes res;\n@@ -274,1 +279,9 @@\n-    return static_cast<size_t>(free_mem);\n+    res.val = static_cast<size_t>(free_mem);\n+    return res;\n+  }\n+\n+  struct sysinfo si;\n+  int ret = sysinfo(&si);\n+  if (ret != 0) {\n+    res.err = -1;\n+    return res;\n@@ -277,1 +290,0 @@\n-  sysinfo(&si);\n@@ -280,1 +292,2 @@\n-  return static_cast<size_t>(free_mem);\n+  res.val = static_cast<size_t>(free_mem);\n+  return res;\n@@ -283,1 +296,2 @@\n-ssize_t os::total_swap_space() {\n+MemRes os::total_swap_space() {\n+  MemRes res;\n@@ -286,1 +300,2 @@\n-      return static_cast<ssize_t>(OSContainer::memory_and_swap_limit_in_bytes() - OSContainer::memory_limit_in_bytes());\n+      res.val = static_cast<size_t>(OSContainer::memory_and_swap_limit_in_bytes() - OSContainer::memory_limit_in_bytes());\n+      return res;\n@@ -292,1 +307,2 @@\n-    return -1;\n+    res.err = -1;\n+    return res;\n@@ -294,1 +310,2 @@\n-  return static_cast<ssize_t>(si.totalswap * si.mem_unit);\n+  res.val = static_cast<size_t>(si.totalswap * si.mem_unit);\n+  return res;\n@@ -297,1 +314,2 @@\n-static ssize_t host_free_swap() {\n+static MemRes host_free_swap() {\n+  MemRes res;\n@@ -301,1 +319,2 @@\n-    return -1;\n+    res.err = -1;\n+    return res;\n@@ -303,1 +322,2 @@\n-  return static_cast<ssize_t>(si.freeswap * si.mem_unit);\n+  res.val = static_cast<size_t>(si.freeswap * si.mem_unit);\n+  return res;\n@@ -306,1 +326,1 @@\n-ssize_t os::free_swap_space() {\n+MemRes os::free_swap_space() {\n@@ -309,2 +329,5 @@\n-  jlong host_free_swap_val = static_cast<jlong>(MIN2(os::total_swap_space(), host_free_swap()));\n-  assert(host_free_swap_val >= 0, \"sysinfo failed?\");\n+  const MemRes total_swap_space = os::total_swap_space();\n+  const MemRes host_free_swap_space = host_free_swap();\n+  assert(total_swap_space.err != -1 && host_free_swap_space.err != -1, \"sysinfo failed?\");\n+  size_t host_free_swap_val = MIN2(total_swap_space.val, host_free_swap_space.val);\n+  MemRes res;\n@@ -317,1 +340,1 @@\n-        return 0;\n+        return res;\n@@ -325,1 +348,2 @@\n-          return free_swap >= 0 ? static_cast<ssize_t>(free_swap) : 0;\n+          res.val = free_swap >= 0 ? static_cast<size_t>(free_swap) : 0;\n+          return res;\n@@ -331,1 +355,1 @@\n-                            \" container_mem_limit=\" JLONG_FORMAT \" returning host value: \" JLONG_FORMAT,\n+                            \" container_mem_limit=\" JLONG_FORMAT \" returning host value: %zu\",\n@@ -334,1 +358,2 @@\n-  return static_cast<ssize_t>(host_free_swap_val);\n+  res.val = host_free_swap_val;\n+  return res;\n@@ -337,1 +362,1 @@\n-size_t os::physical_memory() {\n+MemRes os::physical_memory() {\n@@ -339,0 +364,1 @@\n+  MemRes res;\n@@ -343,1 +369,2 @@\n-      return static_cast<size_t>(mem_limit);\n+      res.val = static_cast<size_t>(mem_limit);\n+      return res;\n@@ -349,1 +376,2 @@\n-  return phys_mem;\n+  res.val = phys_mem;\n+  return res;\n@@ -2549,1 +2577,1 @@\n-            os::physical_memory() >> 10);\n+            os::physical_memory().val >> 10);\n@@ -2551,1 +2579,1 @@\n-            os::available_memory() >> 10);\n+            os::available_memory().val >> 10);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":58,"deletions":30,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -56,2 +56,2 @@\n-  static size_t available_memory();\n-  static size_t free_memory();\n+  static MemRes available_memory();\n+  static MemRes free_memory();\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -851,1 +851,1 @@\n-size_t os::available_memory() {\n+MemRes os::available_memory() {\n@@ -855,1 +855,1 @@\n-size_t os::free_memory() {\n+MemRes os::free_memory() {\n@@ -859,1 +859,1 @@\n-size_t os::win32::available_memory() {\n+MemRes os::win32::available_memory() {\n@@ -862,0 +862,1 @@\n+  MemRes memRes;\n@@ -864,3 +865,9 @@\n-  GlobalMemoryStatusEx(&ms);\n-\n-  return static_cast<size_t>(ms.ullAvailPhys);\n+  BOOL res = GlobalMemoryStatusEx(&ms);\n+  if (!res) {\n+    errno = ::GetLastError();\n+    log_debug(os)(\"available_memory() failed to GlobalMemoryStatusEx: GetLastError->%ld.\", errno);\n+    memRes.err = -1;\n+    return memRes;\n+  }\n+  memRes.val = static_cast<size_t>(ms.ullAvailPhys);\n+  return memRes;\n@@ -869,1 +876,2 @@\n-ssize_t os::total_swap_space() {\n+MemRes os::total_swap_space() {\n+  MemRes memRes;\n@@ -872,2 +880,9 @@\n-  GlobalMemoryStatusEx(&ms);\n-  return static_cast<ssize_t>(ms.ullTotalPageFile);\n+  BOOL res = GlobalMemoryStatusEx(&ms);\n+  if (!res) {\n+    errno = ::GetLastError();\n+    log_debug(os)(\"total_swap_space() failed to GlobalMemoryStatusEx: GetLastError->%ld.\", errno);\n+    memRes.err = -1;\n+    return memRes;\n+  }\n+  memRes.val = static_cast<size_t>(ms.ullTotalPageFile);\n+  return memRes;\n@@ -876,1 +891,2 @@\n-ssize_t os::free_swap_space() {\n+MemRes os::free_swap_space() {\n+  MemRes memRes;\n@@ -879,2 +895,9 @@\n-  GlobalMemoryStatusEx(&ms);\n-  return static_cast<ssize_t>(ms.ullAvailPageFile);\n+  BOOL res = GlobalMemoryStatusEx(&ms);\n+  if (!res) {\n+    errno = ::GetLastError();\n+    log_debug(os)(\"free_swap_space() failed to GlobalMemoryStatusEx: GetLastError->%ld.\", errno);\n+    memRes.err = -1;\n+    return memRes;\n+  }\n+  memRes.val = static_cast<size_t>(ms.ullAvailPageFile);\n+  return memRes;\n@@ -883,2 +906,3 @@\n-size_t os::physical_memory() {\n-  return win32::physical_memory();\n+MemRes os::physical_memory() {\n+  MemRes res(win32::physical_memory(), 0);\n+  return res;\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":38,"deletions":14,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -105,2 +105,2 @@\n-  static size_t available_memory();\n-  static size_t free_memory();\n+  static MemRes available_memory();\n+  static MemRes free_memory();\n","filename":"src\/hotspot\/os\/windows\/os_windows.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1061,1 +1061,1 @@\n-  size_t free_memory = os::free_memory();\n+  size_t free_memory = os::free_memory().val;\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-  size_t memory = os::physical_memory();\n+  size_t memory = os::physical_memory().val;\n","filename":"src\/hotspot\/share\/gc\/shared\/gcInitLogger.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  log_info_p(gc, init)(\"Memory: %zuM\", os::physical_memory() \/ M);\n+  log_info_p(gc, init)(\"Memory: %zuM\", os::physical_memory().val \/ M);\n","filename":"src\/hotspot\/share\/gc\/z\/zLargePages.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -411,1 +411,1 @@\n-  return os::physical_memory();\n+  return os::physical_memory().val;\n@@ -420,1 +420,1 @@\n-  return os::total_swap_space();\n+  return os::total_swap_space().val;\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -531,1 +531,1 @@\n-  size_t totalPhysicalMemory = os::physical_memory();\n+  size_t totalPhysicalMemory = os::physical_memory().val;\n@@ -534,1 +534,1 @@\n-  event.set_usedSize(static_cast<u8>(totalPhysicalMemory - os::available_memory()));\n+  event.set_usedSize(static_cast<u8>(totalPhysicalMemory - os::available_memory().val));\n@@ -540,2 +540,2 @@\n-  event.set_totalSize(static_cast<s8>(os::total_swap_space()));\n-  event.set_freeSize(static_cast<s8>(os::free_swap_space()));\n+  event.set_totalSize(static_cast<s8>(os::total_swap_space().val));\n+  event.set_freeSize(static_cast<s8>(os::free_swap_space().val));\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrPeriodic.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1360,1 +1360,1 @@\n-       the_class->external_name(), _class_load_kind, os::available_memory() >> 10);\n+       the_class->external_name(), _class_load_kind, os::available_memory().val >> 10);\n@@ -1526,1 +1526,1 @@\n-      (\"loaded name=%s (avail_mem= %zu\" \"K)\", the_class->external_name(), os::available_memory() >> 10);\n+      (\"loaded name=%s (avail_mem= %zu\" \"K)\", the_class->external_name(), os::available_memory().val >> 10);\n@@ -4418,1 +4418,1 @@\n-       the_class->external_name(), java_lang_Class::classRedefinedCount(the_class->java_mirror()), os::available_memory() >> 10);\n+       the_class->external_name(), java_lang_Class::classRedefinedCount(the_class->java_mirror()), os::available_memory().val >> 10);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2511,1 +2511,1 @@\n-  return os::physical_memory();\n+  return os::physical_memory().val;\n@@ -2516,1 +2516,1 @@\n-  return os::available_memory();\n+  return os::available_memory().val;\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1503,1 +1503,1 @@\n-      phys_mem = os::physical_memory();\n+      phys_mem = os::physical_memory().val;\n@@ -1509,1 +1509,1 @@\n-    phys_mem = FLAG_IS_DEFAULT(MaxRAM) ? MIN2(os::physical_memory(), static_cast<size_t>(MaxRAM))\n+    phys_mem = FLAG_IS_DEFAULT(MaxRAM) ? MIN2(os::physical_memory().val, static_cast<size_t>(MaxRAM))\n@@ -1631,1 +1631,1 @@\n-  julong total_memory = os::physical_memory();\n+  julong total_memory = static_cast<julong>(os::physical_memory().val);\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1186,1 +1186,1 @@\n-  size_t mem = physical_memory()\/G;\n+  size_t mem = physical_memory().val\/G;\n@@ -1188,1 +1188,1 @@\n-    mem = physical_memory()\/M;\n+    mem = physical_memory().val\/M;\n@@ -1946,1 +1946,1 @@\n-      (os::physical_memory() >= (server_memory - missing_memory))) {\n+      (os::physical_memory().val >= (server_memory - missing_memory))) {\n@@ -2205,1 +2205,2 @@\n-size_t os::used_memory() {\n+MemRes os::used_memory() {\n+  MemRes res;\n@@ -2210,1 +2211,2 @@\n-      return mem_usage;\n+      res.val = static_cast<size_t>(mem_usage);\n+      return res;\n@@ -2214,1 +2216,3 @@\n-  return os::physical_memory() - os::available_memory();\n+  res.val = os::physical_memory().val - os::available_memory().val;\n+  res.err = MIN2(os::physical_memory().err, os::available_memory().err);\n+  return res;\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -148,0 +148,8 @@\n+\/\/ struct to return from mem-related functions\n+struct MemRes {\n+  size_t val;\n+  int err;\n+  MemRes(size_t v, int e) : val(v), err(e) {}\n+  MemRes(): val(0), err(0) {}\n+};\n+\n@@ -340,3 +348,3 @@\n-  static size_t available_memory();\n-  static size_t used_memory();\n-  static size_t free_memory();\n+  static MemRes available_memory();\n+  static MemRes used_memory();\n+  static MemRes free_memory();\n@@ -344,2 +352,2 @@\n-  static ssize_t total_swap_space();\n-  static ssize_t free_swap_space();\n+  static MemRes total_swap_space();\n+  static MemRes free_swap_space();\n@@ -347,1 +355,1 @@\n-  static size_t physical_memory();\n+  static MemRes physical_memory();\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2615,1 +2615,1 @@\n-    julong max_threads = os::free_memory() \/ (20 * M);\n+    julong max_threads = os::free_memory().val \/ (20 * M);\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -978,1 +978,1 @@\n-    return static_cast<jlong>(os::physical_memory());\n+    return static_cast<jlong>(os::physical_memory().val);\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}