{"files":[{"patch":"@@ -295,2 +295,1 @@\n-  if (phys_mem == std::numeric_limits<size_t>::max())\n-  {\n+  if (phys_mem == std::numeric_limits<size_t>::max()) {\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-    _physical_memory = MIN2(_physical_memory, (julong)limits.rlim_cur);\n+    _physical_memory = MIN2(_physical_memory, static_cast<size_t>(limits.rlim_cur));\n@@ -1475,1 +1475,1 @@\n-    log_debug(os, thread)(\"os::physical_memory() failed\");\n+    \/\/TODO add proper logging\n@@ -1480,3 +1480,2 @@\n-  if (!os::available_memory(avail_mem))\n-  {\n-    log_debug(os, thread)(\"os::available_memory() failed\");\n+  if (!os::available_memory(avail_mem)) {\n+    \/\/TODO add proper logging\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2578,1 +2578,1 @@\n-    log_debug(os)(\"os::physical_memory() failed\");\n+    \/\/TODO add proper logging\n@@ -2584,1 +2584,1 @@\n-    log_debug(os)(\"os::available_memory() failed\");\n+    \/\/TODO add proper logging\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -899,2 +899,1 @@\n-  if (phys_mem == std::numeric_limits<size_t>::max())\n-  {\n+  if (phys_mem == std::numeric_limits<size_t>::max()) {\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1059,0 +1059,1 @@\n+  \/\/ Return value ignored - defaulting to 0 on failure.\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -66,3 +66,4 @@\n-  if (!os::physical_memory(phys_mem))\n-  {\n-    log_debug_p(gc, init)(\"os::physical_memory() failed\");\n+  if (os::physical_memory(phys_mem)) {\n+    log_info_p(gc, init)(\"Memory: %zu%s\", byte_size_in_proper_unit(phys_mem), proper_unit_for_byte_size(phys_mem));\n+  } else {\n+    log_info_p(gc, init)(\"Memory: NA\");\n","filename":"src\/hotspot\/share\/gc\/shared\/gcInitLogger.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -34,2 +34,5 @@\n-  if (!os::physical_memory(phys_mem)) {\n-    log_debug_p(gc, init)(\"os::physical_memory() failed\");\n+  if (os::physical_memory(phys_mem)) {\n+    log_info_p(gc, init)(\"Memory: %zu%s\", byte_size_in_proper_unit(phys_mem), proper_unit_for_byte_size(phys_mem));\n+  }\n+  else {\n+    log_info_p(gc, init)(\"Memory: NA\");\n","filename":"src\/hotspot\/share\/gc\/z\/zLargePages.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -412,1 +412,0 @@\n-  size_t phys_mem = 0;\n@@ -418,1 +417,3 @@\n-  os::physical_memory(phys_mem);\n+  size_t phys_mem = 0;\n+  \/\/ Return value ignored - defaulting to 0 on failure.\n+  os::physical_memory(phys_mem);  \n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}