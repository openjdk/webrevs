{"files":[{"patch":"@@ -267,1 +267,0 @@\n-  MemRes res;\n@@ -269,1 +268,1 @@\n-    res.val = mi.real_free;\n+    return MemRes(mi.real_free, 0);\n@@ -271,1 +270,1 @@\n-    res.err = -1;\n+    return MemRes(0, -1);\n@@ -273,1 +272,0 @@\n-  return res;\n@@ -278,1 +276,0 @@\n-  MemRes res;\n@@ -280,2 +277,1 @@\n-    res.err = -1;\n-    return res;\n+    return MemRes(0, -1);\n@@ -283,2 +279,1 @@\n-  res.val = static_cast<size_t>(memory_info.pgsp_total * 4 * K);\n-  return res;\n+  return MemRes(static_cast<size_t>(memory_info.pgsp_total * 4 * K), 0);\n@@ -289,1 +284,0 @@\n-  MemRes res;\n@@ -291,2 +285,1 @@\n-    res.err = -1;\n-    return res;\n+    return MemRes(0, -1);\n@@ -294,2 +287,1 @@\n-  res.val = static_cast<size_t>(memory_info.pgsp_free * 4 * K);\n-  return res;\n+  return MemRes(static_cast<size_t>(memory_info.pgsp_free * 4 * K), 0);\n@@ -299,2 +291,1 @@\n-  MemRes res(Aix::physical_memory(), 0);\n-  return res;\n+  return MemRes(Aix::physical_memory(), 0);\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":7,"deletions":16,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -149,1 +149,0 @@\n-  MemRes res;\n@@ -161,2 +160,1 @@\n-    res.err = -1;\n-    return res;\n+    return MemRes(0, -1);\n@@ -165,2 +163,1 @@\n-  res.val = static_cast<size_t>(available);\n-  return res;\n+  return MemRes(static_cast<size_t>(available), 0);\n@@ -186,1 +183,0 @@\n-  MemRes res;\n@@ -191,2 +187,1 @@\n-    res.err = -1;\n-    return res;\n+    return MemRes(0, -1);\n@@ -194,2 +189,1 @@\n-  res.val = static_cast<size_t>(vmusage.xsu_total);\n-  return res;\n+  return MemRes(static_cast<size_t>(vmusage.xsu_total), 0);\n@@ -197,2 +191,1 @@\n-  res.err = -1;\n-  return res;\n+  return MemRes(0, -1);\n@@ -203,1 +196,0 @@\n-  MemRes res;\n@@ -208,2 +200,1 @@\n-    res.err = -1;\n-    return res;\n+    return MemRes(0, -1);\n@@ -211,2 +202,1 @@\n-  res.val = static_cast<size_t>(vmusage.xsu_avail);\n-  return res;\n+  return MemRes(static_cast<size_t>(vmusage.xsu_avail), 0);\n@@ -214,2 +204,1 @@\n-  res.err = -1;\n-  return res;\n+  return MemRes(0, -1);\n@@ -220,2 +209,1 @@\n-  MemRes res(Bsd::physical_memory(), 0);\n-  return res;\n+  return MemRes(Bsd::physical_memory(), 0);\n@@ -1484,1 +1472,1 @@\n-            os::physical_memory().val >> 10);\n+            os::physical_memory().value >> 10);\n@@ -1486,1 +1474,1 @@\n-            os::available_memory().val >> 10);\n+            os::available_memory().value >> 10);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":11,"deletions":23,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -241,1 +241,0 @@\n-  MemRes res;\n@@ -244,2 +243,1 @@\n-    res.val = static_cast<size_t>(avail_mem);\n-    return res;\n+    return MemRes(static_cast<size_t>(avail_mem), 0);\n@@ -261,2 +259,4 @@\n-    res.err = free_mem.err < 0 ? -1 : 0;\n-    avail_mem = static_cast<julong>(free_memory().val);\n+    if (free_mem.error < 0) {\n+      return MemRes(0, -1);\n+    }\n+    avail_mem = static_cast<julong>(free_memory().value);\n@@ -265,2 +265,1 @@\n-  res.val = static_cast<size_t>(avail_mem);\n-  return res;\n+  return MemRes(static_cast<size_t>(avail_mem), 0);\n@@ -275,1 +274,0 @@\n-  MemRes res;\n@@ -279,2 +277,1 @@\n-    res.val = static_cast<size_t>(free_mem);\n-    return res;\n+    return MemRes(static_cast<size_t>(free_mem), 0);\n@@ -286,2 +283,1 @@\n-    res.err = -1;\n-    return res;\n+    return MemRes(0, -1);\n@@ -292,2 +288,1 @@\n-  res.val = static_cast<size_t>(free_mem);\n-  return res;\n+  return MemRes(static_cast<size_t>(free_mem), 0);\n@@ -297,1 +292,0 @@\n-  MemRes res;\n@@ -300,2 +294,1 @@\n-      res.val = static_cast<size_t>(OSContainer::memory_and_swap_limit_in_bytes() - OSContainer::memory_limit_in_bytes());\n-      return res;\n+      return MemRes(static_cast<size_t>(OSContainer::memory_and_swap_limit_in_bytes() - OSContainer::memory_limit_in_bytes()), 0);\n@@ -307,2 +300,1 @@\n-    res.err = -1;\n-    return res;\n+    return MemRes(0, -1);\n@@ -310,2 +302,1 @@\n-  res.val = static_cast<size_t>(si.totalswap * si.mem_unit);\n-  return res;\n+  return MemRes(static_cast<size_t>(si.totalswap * si.mem_unit), 0);\n@@ -315,1 +306,0 @@\n-  MemRes res;\n@@ -319,2 +309,1 @@\n-    res.err = -1;\n-    return res;\n+    MemRes(0, -1);\n@@ -322,2 +311,1 @@\n-  res.val = static_cast<size_t>(si.freeswap * si.mem_unit);\n-  return res;\n+  return MemRes(static_cast<size_t>(si.freeswap * si.mem_unit), 0);\n@@ -331,3 +319,2 @@\n-  assert(total_swap_space.err != -1 && host_free_swap_space.err != -1, \"sysinfo failed?\");\n-  size_t host_free_swap_val = MIN2(total_swap_space.val, host_free_swap_space.val);\n-  MemRes res;\n+  assert(total_swap_space.error != -1 && host_free_swap_space.error != -1, \"sysinfo failed?\");\n+  size_t host_free_swap_val = MIN2(total_swap_space.value, host_free_swap_space.value);\n@@ -340,1 +327,1 @@\n-        return res;\n+        return MemRes(0, 0);\n@@ -348,2 +335,1 @@\n-          res.val = free_swap >= 0 ? static_cast<size_t>(free_swap) : 0;\n-          return res;\n+          return MemRes(free_swap >= 0 ? static_cast<size_t>(free_swap) : 0, 0);\n@@ -358,2 +344,1 @@\n-  res.val = host_free_swap_val;\n-  return res;\n+  return MemRes(host_free_swap_val, 0);\n@@ -364,1 +349,0 @@\n-  MemRes res;\n@@ -369,2 +353,1 @@\n-      res.val = static_cast<size_t>(mem_limit);\n-      return res;\n+      return MemRes(static_cast<size_t>(mem_limit), 0);\n@@ -376,2 +359,1 @@\n-  res.val = phys_mem;\n-  return res;\n+  return MemRes(phys_mem, 0);\n@@ -2577,1 +2559,1 @@\n-            os::physical_memory().val >> 10);\n+            os::physical_memory().value >> 10);\n@@ -2579,1 +2561,1 @@\n-            os::available_memory().val >> 10);\n+            os::available_memory().value >> 10);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":23,"deletions":41,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -862,1 +862,0 @@\n-  MemRes memRes;\n@@ -869,2 +868,1 @@\n-    memRes.err = -1;\n-    return memRes;\n+    return MemRes(0,-1);\n@@ -872,2 +870,1 @@\n-  memRes.val = static_cast<size_t>(ms.ullAvailPhys);\n-  return memRes;\n+  return MemRes(static_cast<size_t>(ms.ullAvailPhys), 0);\n@@ -877,1 +874,0 @@\n-  MemRes memRes;\n@@ -884,2 +880,1 @@\n-    memRes.err = -1;\n-    return memRes;\n+    return MemRes(0, -1);\n@@ -887,2 +882,1 @@\n-  memRes.val = static_cast<size_t>(ms.ullTotalPageFile);\n-  return memRes;\n+  return MemRes(static_cast<size_t>(ms.ullTotalPageFile), 0);\n@@ -892,1 +886,0 @@\n-  MemRes memRes;\n@@ -899,2 +892,1 @@\n-    memRes.err = -1;\n-    return memRes;\n+    return MemRes(0, -1);\n@@ -902,2 +894,1 @@\n-  memRes.val = static_cast<size_t>(ms.ullAvailPageFile);\n-  return memRes;\n+  return MemRes(static_cast<size_t>(ms.ullAvailPageFile), 0);\n@@ -907,2 +898,1 @@\n-  MemRes res(win32::physical_memory(), 0);\n-  return res;\n+  return MemRes(win32::physical_memory(), 0);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":7,"deletions":17,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1061,1 +1061,1 @@\n-  size_t free_memory = os::free_memory().val;\n+  size_t free_memory = os::free_memory().value;\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-  size_t memory = os::physical_memory().val;\n+  size_t memory = os::physical_memory().value;\n","filename":"src\/hotspot\/share\/gc\/shared\/gcInitLogger.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  log_info_p(gc, init)(\"Memory: %zuM\", os::physical_memory().val \/ M);\n+  log_info_p(gc, init)(\"Memory: %zuM\", os::physical_memory().value \/ M);\n","filename":"src\/hotspot\/share\/gc\/z\/zLargePages.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -411,1 +411,1 @@\n-  return os::physical_memory().val;\n+  return os::physical_memory().value;\n@@ -420,1 +420,1 @@\n-  return os::total_swap_space().val;\n+  return os::total_swap_space().value;\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -531,1 +531,1 @@\n-  size_t totalPhysicalMemory = os::physical_memory().val;\n+  size_t totalPhysicalMemory = os::physical_memory().value;\n@@ -534,1 +534,1 @@\n-  event.set_usedSize(static_cast<u8>(totalPhysicalMemory - os::available_memory().val));\n+  event.set_usedSize(static_cast<u8>(totalPhysicalMemory - os::available_memory().value));\n@@ -540,2 +540,2 @@\n-  event.set_totalSize(static_cast<s8>(os::total_swap_space().val));\n-  event.set_freeSize(static_cast<s8>(os::free_swap_space().val));\n+  event.set_totalSize(static_cast<s8>(os::total_swap_space().value));\n+  event.set_freeSize(static_cast<s8>(os::free_swap_space().value));\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrPeriodic.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1360,1 +1360,1 @@\n-       the_class->external_name(), _class_load_kind, os::available_memory().val >> 10);\n+       the_class->external_name(), _class_load_kind, os::available_memory().value >> 10);\n@@ -1526,1 +1526,1 @@\n-      (\"loaded name=%s (avail_mem= %zu\" \"K)\", the_class->external_name(), os::available_memory().val >> 10);\n+      (\"loaded name=%s (avail_mem= %zu\" \"K)\", the_class->external_name(), os::available_memory().value >> 10);\n@@ -4425,1 +4425,1 @@\n-       the_class->external_name(), java_lang_Class::classRedefinedCount(the_class->java_mirror()), os::available_memory().val >> 10);\n+       the_class->external_name(), java_lang_Class::classRedefinedCount(the_class->java_mirror()), os::available_memory().value >> 10);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2513,1 +2513,1 @@\n-  return os::physical_memory().val;\n+  return os::physical_memory().value;\n@@ -2518,1 +2518,1 @@\n-  return os::available_memory().val;\n+  return os::available_memory().value;\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1503,1 +1503,1 @@\n-      phys_mem = os::physical_memory().val;\n+      phys_mem = os::physical_memory().value;\n@@ -1509,1 +1509,1 @@\n-    phys_mem = FLAG_IS_DEFAULT(MaxRAM) ? MIN2(os::physical_memory().val, static_cast<size_t>(MaxRAM))\n+    phys_mem = FLAG_IS_DEFAULT(MaxRAM) ? MIN2(os::physical_memory().value, static_cast<size_t>(MaxRAM))\n@@ -1631,1 +1631,1 @@\n-  julong total_memory = static_cast<julong>(os::physical_memory().val);\n+  julong total_memory = static_cast<julong>(os::physical_memory().value);\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1186,1 +1186,1 @@\n-  size_t mem = physical_memory().val\/G;\n+  size_t mem = physical_memory().value\/G;\n@@ -1188,1 +1188,1 @@\n-    mem = physical_memory().val\/M;\n+    mem = physical_memory().value\/M;\n@@ -1946,1 +1946,1 @@\n-      (os::physical_memory().val >= (server_memory - missing_memory))) {\n+      (os::physical_memory().value >= (server_memory - missing_memory))) {\n@@ -2206,1 +2206,0 @@\n-  MemRes res;\n@@ -2211,2 +2210,1 @@\n-      res.val = static_cast<size_t>(mem_usage);\n-      return res;\n+      return MemRes(static_cast<size_t>(mem_usage), 0);\n@@ -2216,3 +2214,12 @@\n-  res.val = os::physical_memory().val - os::available_memory().val;\n-  res.err = MIN2(os::physical_memory().err, os::available_memory().err);\n-  return res;\n+  auto phys_mem = os::physical_memory();\n+  auto avail_mem = os::available_memory();\n+\n+  if (phys_mem.error < 0) {\n+    return MemRes(0, -1);\n+  }\n+\n+  if (avail_mem.error < 0) {\n+    return MemRes(0, -1);\n+  }\n+\n+  return MemRes(phys_mem.value - avail_mem.value, 0);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -150,4 +150,3 @@\n-  size_t val;\n-  int err;\n-  MemRes(size_t v, int e) : val(v), err(e) {}\n-  MemRes(): val(0), err(0) {}\n+  size_t value;\n+  int error;\n+  MemRes(size_t v, int e) : value(v), error(e) {}\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2615,1 +2615,1 @@\n-    julong max_threads = os::free_memory().val \/ (20 * M);\n+    julong max_threads = os::free_memory().value \/ (20 * M);\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -978,1 +978,1 @@\n-    return static_cast<jlong>(os::physical_memory().val);\n+    return static_cast<jlong>(os::physical_memory().value);\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}