{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/SystemModulesPlugin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,0 +99,2 @@\n+\n+        \/\/ the run-time image created will have 4 modules with main classes\n","filename":"test\/jdk\/tools\/jlink\/plugins\/SystemModuleDescriptors\/ModuleMainClassTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.lang.module.ModuleFinder;\n+import java.util.stream.Stream;\n@@ -36,4 +38,7 @@\n-        String mainClass = md.mainClass().get();\n-        if (!\"com.foo.Main\".equals(mainClass)) {\n-            throw new RuntimeException(\"Mismatched main class of module com.foo: \" + mainClass);\n-        }\n+\n+        checkMainClass(\"com.foo\", \"com.foo.Main\");\n+        checkMainClass(\"net.foo\", \"net.foo.Main\");\n+        Stream.of(\"jdk.httpserver\", \"jdk.jfr\").forEach(mn ->\n+                ModuleFinder.ofSystem().find(mn).get().descriptor().mainClass()\n+                            .orElseThrow(() -> new RuntimeException(mn + \" no main class\"))\n+        );\n@@ -42,0 +47,6 @@\n+    static void checkMainClass(String mn, String mainClass) {\n+        String cn = ModuleFinder.ofSystem().find(mn).get().descriptor().mainClass().get();\n+        if (!cn.equals(mainClass)) {\n+            throw new RuntimeException(\"Mismatched main class of module \" + mn + \": \" + cn + \" expected: \" + mainClass);\n+        }\n+    }\n","filename":"test\/jdk\/tools\/jlink\/plugins\/SystemModuleDescriptors\/src\/com.foo\/com\/foo\/Main.java","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.lang.module.ModuleFinder;\n+import java.util.stream.Stream;\n@@ -36,3 +38,13 @@\n-        String mainClass = md.mainClass().get();\n-        if (!\"net.foo.Main\".equals(mainClass)) {\n-            throw new RuntimeException(\"Mismatched main class of module net.foo: \" + mainClass);\n+\n+        checkMainClass(\"com.foo\", \"com.foo.Main\");\n+        checkMainClass(\"net.foo\", \"net.foo.Main\");\n+        Stream.of(\"jdk.httpserver\", \"jdk.jfr\").forEach(mn ->\n+                ModuleFinder.ofSystem().find(mn).get().descriptor().mainClass()\n+                        .orElseThrow(() -> new RuntimeException(mn + \" no main class\"))\n+        );\n+    }\n+\n+    static void checkMainClass(String mn, String mainClass) {\n+        String cn = ModuleFinder.ofSystem().find(mn).get().descriptor().mainClass().get();\n+        if (!cn.equals(mainClass)) {\n+            throw new RuntimeException(\"Mismatched main class of module \" + mn + \": \" + cn + \" expected: \" + mainClass);\n","filename":"test\/jdk\/tools\/jlink\/plugins\/SystemModuleDescriptors\/src\/net.foo\/net\/foo\/Main.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}