{"files":[{"patch":"@@ -41,1 +41,2 @@\n-import org.junit.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n@@ -52,2 +53,3 @@\n-    @Test\n-    public void automaticallyEnter() {\n+    @ParameterizedTest\n+    @MethodSource\n+    public void automaticallyEnter(Consumer<JavacTask> verify) {\n@@ -55,15 +57,5 @@\n-        List<Consumer<JavacTask>> testCases = List.of(\n-                task -> assertFalse(task.getElements().getAllModuleElements().isEmpty()),\n-                task -> assertNotNull(task.getElements().getModuleElement(\"java.base\")),\n-                task -> assertNotNull(task.getElements().getPackageElement(\"java.lang\")),\n-                task -> assertFalse(task.getElements().getAllPackageElements(\"java.lang\").isEmpty()),\n-                task -> assertNotNull(task.getElements().getTypeElement(\"java.lang.Object\")),\n-                task -> assertFalse(task.getElements().getAllTypeElements(\"java.lang.Object\").isEmpty())\n-        );\n-        for (Consumer<JavacTask> testCase : testCases) {\n-            JavaFileObject input =\n-                    SimpleJavaFileObject.forSource(URI.create(\"mem:\/\/Test.java\"), \"\");\n-            List<JavaFileObject> inputs = List.of(input);\n-            JavacTask task = (JavacTask) systemCompiler.getTask(null, null, null, null, null, inputs);\n-            testCase.accept(task);\n-        }\n+        JavaFileObject input =\n+                SimpleJavaFileObject.forSource(URI.create(\"mem:\/\/Test.java\"), \"\");\n+        List<JavaFileObject> inputs = List.of(input);\n+        JavacTask task = (JavacTask) systemCompiler.getTask(null, null, null, null, null, inputs);\n+        verify.accept(task);\n@@ -72,0 +64,10 @@\n+    private static List<Consumer<JavacTask>> automaticallyEnter() {\n+        return List.of(\n+            task -> assertFalse(task.getElements().getAllModuleElements().isEmpty()),\n+            task -> assertNotNull(task.getElements().getModuleElement(\"java.base\")),\n+            task -> assertNotNull(task.getElements().getPackageElement(\"java.lang\")),\n+            task -> assertFalse(task.getElements().getAllPackageElements(\"java.lang\").isEmpty()),\n+            task -> assertNotNull(task.getElements().getTypeElement(\"java.lang.Object\")),\n+            task -> assertFalse(task.getElements().getAllTypeElements(\"java.lang.Object\").isEmpty())\n+        );\n+    }\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestElementsProgrammatic.java","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"}]}