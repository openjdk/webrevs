{"files":[{"patch":"@@ -261,1 +261,1 @@\n-  Label L_wcharBegin, L_continue, L_wideNoExpand;\n+  Label L_wcharBegin, L_continue, L_wideNoExpand, L_returnR11;\n@@ -358,3 +358,0 @@\n-  __ push(rcx);\n-  __ push(r8);\n-  __ push(r9);\n@@ -378,3 +375,0 @@\n-  \/\/ Assume failure\n-  __ movq(rbp, -1);\n-\n@@ -488,0 +482,1 @@\n+  __ bind(L_returnR11);\n@@ -495,3 +490,0 @@\n-  __ pop(r9);\n-  __ pop(r8);\n-  __ pop(rcx);\n@@ -564,1 +556,1 @@\n-    \/\/  rbp: -1\n+    \/\/  rbp: junk\n@@ -592,4 +584,0 @@\n-    \/\/ Note that we're comparing the full needle here even though in some paths\n-    \/\/ the 1st, 2nd, and last bytes are already known to be equal.  This is necessary\n-    \/\/ due to the handling of cases where nMinusK is < 32\n-\n@@ -647,1 +635,1 @@\n-  \/\/  rbp: -1\n+  \/\/  rbp: junk\n@@ -659,2 +647,2 @@\n-  \/\/  Haystack length < 32\n-  \/\/  10 < needle length < 32\n+  \/\/  Haystack length <= 32\n+  \/\/  10 < needle length <= 32\n@@ -721,1 +709,1 @@\n-    __ jne(L_checkRangeAndReturn);\n+    __ jne(L_returnR11);\n@@ -858,1 +846,1 @@\n-      \/\/  rbp: -1\n+      \/\/  rbp: junk\n@@ -1305,1 +1293,1 @@\n-\/\/  rbp: -1\n+\/\/  rbp: junk\n@@ -1314,1 +1302,1 @@\n-  Label L_midLoop, L_greaterThan32, L_out;\n+  Label L_midLoop, L_greaterThanOrEqual32, L_out;\n@@ -1333,1 +1321,1 @@\n-  __ jae_b(L_greaterThan32);\n+  __ jae_b(L_greaterThanOrEqual32);\n@@ -1379,1 +1367,1 @@\n-  __ andq(eq_mask, temp1);\n+  __ andl(eq_mask, temp1);\n@@ -1386,1 +1374,1 @@\n-  __ bind(L_greaterThan32);\n+  __ bind(L_greaterThanOrEqual32);\n@@ -1740,1 +1728,1 @@\n-    \/\/  rbp = -1\n+    \/\/  rbp = unused\n@@ -1759,0 +1747,2 @@\n+    \/\/\n+    \/\/ The index where a match is found is returned in set_bit (r11).\n@@ -1798,1 +1788,1 @@\n-    \/\/  rbp = -1\n+    \/\/  rbp = unused\n@@ -1811,0 +1801,7 @@\n+    \/\/\n+    \/\/ The value returned on a match is in hs_ptr (rcx) which is the address\n+    \/\/ of the first matching byte within the haystack.  The L_fixup label\n+    \/\/ takes hs_ptr (rcx), haystack (rbx), and set_bit (r8) to compute the\n+    \/\/ index as: hs_ptr - haystack + r8.  hs_ptr - haystack is the offset\n+    \/\/ within the haystack of the 32-byte chunk wherein a match was found,\n+    \/\/ and set_bit is the index within that 32-byte chunk of the matching string.\n","filename":"src\/hotspot\/cpu\/x86\/c2_stubGenerator_x86_64_string.cpp","additions":24,"deletions":27,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -14,1 +14,1 @@\n-# Notes on \"client\" keywords : headful sound printer multimon \n+# Notes on \"client\" keywords : headful sound printer multimon\n@@ -34,1 +34,1 @@\n-# \n+#\n@@ -102,0 +102,2 @@\n+    vm.cpu.features \\\n+    vm.compiler2.enabled \\\n","filename":"test\/jdk\/TEST.ROOT","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,7 @@\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary test String indexOf() intrinsic\n+ * @requires vm.cpu.features ~= \".*avx2.*\"\n+ * @requires vm.compiler2.enabled\n","filename":"test\/jdk\/java\/lang\/String\/IndexOf.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @requires vm.compiler2.enabled\n","filename":"test\/jdk\/java\/lang\/StringBuffer\/ECoreIndexOf.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}