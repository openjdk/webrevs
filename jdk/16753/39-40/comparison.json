{"files":[{"patch":"@@ -4738,1 +4738,1 @@\n-    lea(ary1, Address(ary1, expand_ary2 ? 4 : 2));\n+    lea(ary1, Address(ary1, 2));\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-#define CLEAR_BIT(mask, tmp) \\\n+#define CLEAR_BIT(mask) \\\n@@ -95,2 +95,2 @@\n-    __ blsrl(tmp, mask);     \\\n-    __ blsrl(mask, tmp);     \\\n+    __ blsrl(mask, mask);     \\\n+    __ blsrl(mask, mask);     \\\n@@ -616,1 +616,1 @@\n-    CLEAR_BIT(mask, index);\n+    CLEAR_BIT(mask);\n@@ -732,1 +732,1 @@\n-    CLEAR_BIT(mask, rTmp3);\n+    CLEAR_BIT(mask);\n@@ -945,1 +945,1 @@\n-      CLEAR_BIT(mask, index);\n+      CLEAR_BIT(mask);\n@@ -1121,2 +1121,0 @@\n-\/\/ rTmp - a temporary register\n-\/\/ rTmp2 - a temporary register\n@@ -1129,1 +1127,1 @@\n-\/\/ If (n - k) < 32, need to handle reading past end of haystack\n+\/\/ (n - k) will always be >= 32 on entry\n@@ -1201,1 +1199,0 @@\n-\/\/ isU - true if argument encoding is either UU or UL\n@@ -1203,1 +1200,1 @@\n-\/\/ needleLen - a temporary register.  Only used if isUL true\n+\/\/ needleLen - Length of the needle in bytes.  Only used if isUL true\n@@ -1207,0 +1204,1 @@\n+\/\/ ae - Argument encoding\n@@ -1261,1 +1259,1 @@\n-  __ andq(eq_mask, rTmp);\n+  __ andl(eq_mask, rTmp);\n@@ -1396,1 +1394,1 @@\n-  __ jb_b(L_midLoop);\n+  __ jbe_b(L_midLoop);\n@@ -1545,1 +1543,1 @@\n-  CLEAR_BIT(mask, tmp);  \/\/ Loop as long as there are other bits set\n+  CLEAR_BIT(mask);  \/\/ Loop as long as there are other bits set\n@@ -1708,1 +1706,1 @@\n-    \/\/ Small haystack (<32 bytes) switch\n+    \/\/ Small haystack (<=32 bytes) switch\n@@ -1754,2 +1752,0 @@\n-        Label L_loopTop;\n-\n@@ -1794,1 +1790,1 @@\n-    \/\/  The haystack is >= 32 bytes\n+    \/\/  The haystack is > 32 bytes\n","filename":"src\/hotspot\/cpu\/x86\/c2_stubGenerator_x86_64_string.cpp","additions":14,"deletions":18,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+ * @requires vm.cpu.features ~= \".*avx2.*\"\n+ * @requires vm.compiler2.enabled\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+EnableX86ECoreOpts -XX:UseAVX=2 -Xbatch -XX:-TieredCompilation -XX:CompileCommand=dontinline,ECoreIndexOf.indexOfKernel ECoreIndexOf\n@@ -185,1 +188,0 @@\n-  @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n@@ -190,1 +192,0 @@\n-  @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n@@ -195,1 +196,0 @@\n-  @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n@@ -200,1 +200,0 @@\n-  @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n@@ -206,1 +205,0 @@\n-  @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n@@ -211,1 +209,0 @@\n-  @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n@@ -217,1 +214,0 @@\n-  @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n@@ -222,1 +218,0 @@\n-  @CompilerControl(CompilerControl.Mode.DONT_INLINE)\n","filename":"test\/jdk\/java\/lang\/StringBuffer\/ECoreIndexOf.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"}]}