{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,4 +57,3 @@\n-     * the interface method invoked on the proxy instance.  The declaring\n-     * class of the {@code Method} object will be the interface that\n-     * the method was declared in, which may be a superinterface of the\n-     * proxy interface that the proxy class inherits the method through.\n+     * the method invoked on the proxy instance; the declaring\n+     * class of the {@code Method} object may be a proxy interface,\n+     * one of their superinterfaces, or the {@code Object} class\n@@ -64,1 +63,1 @@\n-     * or {@code null} if interface method takes no arguments.\n+     * or {@code null} if the invoked method takes no arguments.\n@@ -70,1 +69,1 @@\n-     * proxy instance.  If the declared return type of the interface\n+     * proxy instance.  If the declared return type of the invoked\n@@ -75,1 +74,1 @@\n-     * {@code null} and the interface method's return type is\n+     * {@code null} and the invoked method's return type is\n@@ -79,1 +78,1 @@\n-     * the interface method's declared return type as described above,\n+     * the invoked method's declared return type as described above,\n@@ -86,1 +85,1 @@\n-     * {@code throws} clause of the interface method or to the\n+     * {@code throws} clause of the invoked method or to the\n@@ -91,1 +90,1 @@\n-     * the interface method, then an\n+     * the invoked method, then an\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/InvocationHandler.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"}]}