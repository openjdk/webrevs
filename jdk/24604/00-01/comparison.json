{"files":[{"patch":"@@ -104,2 +104,2 @@\n-    protected void skipEntry(ClassFileError ex, String fileName) {\n-        skippedEntries.add(String.format(\"%s: %s\", ex.toString(), fileName));\n+    protected void skipEntry(Throwable ex, String entryPath) {\n+        skippedEntries.add(String.format(\"%s: %s\", ex.toString(), entryPath));\n@@ -141,1 +141,1 @@\n-    public void processClassFiles(Consumer<ClassModel> handler) throws IOException {\n+    public void forEachClassFile(Consumer<ClassModel> handler) throws IOException {\n@@ -228,1 +228,1 @@\n-        public void processClassFiles(Consumer<ClassModel> handler) throws IOException {\n+        public void forEachClassFile(Consumer<ClassModel> handler) throws IOException {\n@@ -234,1 +234,1 @@\n-                          } catch (ClassFileError ex) {\n+                          } catch (ClassFileError | IOException ex) {\n@@ -236,2 +236,0 @@\n-                          } catch (IOException ex) {\n-                              throw new UncheckedIOException(ex);\n@@ -240,2 +238,0 @@\n-            } catch (UncheckedIOException ex) {\n-                throw ex.getCause();\n@@ -325,16 +321,10 @@\n-        public void processClassFiles(Consumer<ClassModel> handler) throws IOException {\n-            try {\n-                jarfile.versionedStream()\n-                        .filter(JarFileReader::isJarEntryClass)\n-                        .forEach(e -> {\n-                            try {\n-                                handler.accept(readClassFile(jarfile, e));\n-                            } catch (ClassFileError ex) {\n-                                skipEntry(ex, e.getName() + \" (\" + jarfile.getName() + \")\");\n-                            } catch (IOException ex) {\n-                                throw new UncheckedIOException(ex);\n-                            }\n-                        });\n-            } catch (UncheckedIOException ex) {\n-                throw ex.getCause();\n-            }\n+        public void forEachClassFile(Consumer<ClassModel> handler) throws IOException {\n+            jarfile.versionedStream()\n+                   .filter(JarFileReader::isJarEntryClass)\n+                   .forEach(e -> {\n+                       try {\n+                           handler.accept(readClassFile(jarfile, e));\n+                       } catch (ClassFileError | IOException ex) {\n+                           skipEntry(ex, e.getName() + \" (\" + jarfile.getName() + \")\");\n+                       }\n+                   });\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/ClassFileReader.java","additions":15,"deletions":25,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-            archive.reader().processClassFiles(cf -> {\n+            archive.reader().forEachClassFile(cf -> {\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/DependencyFinder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}