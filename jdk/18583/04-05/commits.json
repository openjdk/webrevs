[{"commit":{"message":"Use AffinePoint to exit Montgomery domain\n\nStyle notes:\nAffine.equals()\n    - Mismatched fields only appear to be used from testing, perhaps should be moved there instead\nAffine.getX(boolean)|getY(boolean)\n    - \"Passing flag is bad design\" - cleanest\/performant alternative to several instanceof checks\n    - needed to convert Affine to Projective (need to stay in montgomery domain)\nECOperations.PointMultiplier\n   - changes could probably be restored to original (since ProjectivePoint handling no longer required)\n   - consider these changes an improvement? (fewer nested classes)\n   - was an inner-class but not using inner-class features (i.e. ecOps variable should be converted)"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECDHKeyAgreement.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECOperations.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/point\/AffinePoint.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/point\/ProjectivePoint.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/util\/math\/IntegerMontgomeryFieldModuloP.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/util\/math\/intpoly\/MontgomeryIntegerPolynomialP256.java"},{"filename":"test\/jdk\/com\/sun\/security\/ec\/ECOperationsFuzzTest.java"}],"sha":"8ff243a231ae6be51f6f8156fd19f45d0e62a82b"}]