{"files":[{"patch":"@@ -253,8 +253,9 @@\n-            try {\n-                \/\/ assume the common case that the file is a regular file\n-                unlink(file);\n-            } catch (UnixException e) {\n-                \/\/ check whether the file is a directory\n-                if (e.errno() == EISDIR ||\n-                    UnixFileAttributes.get(file, false).isDirectory())\n-                    isDirectory = true;\n+            if (UnixNativeDispatcher.eisdirSupported()) {\n+                try {\n+                    \/\/ assume the common case that the file is a regular file\n+                    unlink(file);\n+                } catch (UnixException e) {\n+                    \/\/ check whether the file is a directory\n+                    if (e.errno() == EISDIR ||\n+                        UnixFileAttributes.get(file, false).isDirectory())\n+                        isDirectory = true;\n@@ -262,6 +263,7 @@\n-                \/\/ if the file is a directory then try rmdir, otherwise\n-                \/\/ re-throw and let the exception be handled below\n-                if (isDirectory) {\n-                    rmdir(file);\n-                } else {\n-                    throw e;\n+                    \/\/ if the file is a directory then try rmdir, otherwise\n+                    \/\/ re-throw and let the exception be handled below\n+                    if (isDirectory) {\n+                        rmdir(file);\n+                    } else {\n+                        throw e;\n+                    }\n@@ -269,0 +271,6 @@\n+            } else {\n+                isDirectory = UnixFileAttributes.get(file, false).isDirectory();\n+                if (isDirectory)\n+                    rmdir(file);\n+                else\n+                    unlink(file);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":22,"deletions":14,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -536,0 +536,1 @@\n+    private static final int SUPPORTS_EISDIR        = 1 << 2;\n@@ -547,0 +548,7 @@\n+    \/**\n+     * Supports EISDIR error of unlink(2)\n+     *\/\n+    static boolean eisdirSupported() {\n+        return (capabilities & SUPPORTS_EISDIR) != 0;\n+    }\n+\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixNativeDispatcher.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -380,0 +380,5 @@\n+    \/* supports EISDIR failure of unlink(2) *\/\n+#if defined(__linux__)\n+    capabilities |= sun_nio_fs_UnixNativeDispatcher_SUPPORTS_EISDIR;\n+#endif\n+\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixNativeDispatcher.c","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}