{"files":[{"patch":"@@ -735,3 +735,4 @@\n-  $1_AOT_JDK_CONF := $$($1_TEST_SUPPORT_DIR)\/aot\/jdk.aotconf\n-  $1_AOT_JDK_CACHE := $$($1_TEST_SUPPORT_DIR)\/aot\/jdk.aotcache\n-  $1_AOT_JDK_LOG := $$($1_TEST_SUPPORT_DIR)\/aot\/TestSetupAOT.log\n+  $1_AOT_JDK_OUTPUT_DIR := $$($1_TEST_SUPPORT_DIR)\/aot\n+  $1_AOT_JDK_CONF := $$($1_AOT_JDK_OUTPUT_DIR)\/jdk.aotconf\n+  $1_AOT_JDK_CACHE := $$($1_AOT_JDK_OUTPUT_DIR)\/jdk.aotcache\n+  $1_AOT_JDK_LOG := $$($1_AOT_JDK_OUTPUT_DIR)\/TestSetupAOT.log\n@@ -739,1 +740,1 @@\n-  # We execute the training run with $(TEST_IMAGE_DIR)\/setup_aot\/TestSetupAOT.class\n+  # We execute the training run with the TestSetupAOT class from $(TEST_IMAGE_DIR)\/setup_aot\/TestSetupAOT.jar\n@@ -742,1 +743,2 @@\n-  # for their classpaths. Instead, we run in the $(TEST_IMAGE_DIR)\/setup_aot\/ directory.\n+  # for their classpaths. Instead, we cd in the $$($1_AOT_JDK_OUTPUT_DIR) directory,\n+  # extract the TestSetupAOT.jar there, and run in that directory without specifying a classpath.\n@@ -751,1 +753,1 @@\n-\t$$(call MakeDir, $$($1_TEST_SUPPORT_DIR)\/aot)\n+\t$$(call MakeDir, $$($1_AOT_JDK_OUTPUT_DIR))\n@@ -754,2 +756,2 @@\n-\t$$(call ExecuteWithLog, $$($1_TEST_SUPPORT_DIR)\/aot, ( \\\n-\t    $(CD) $(TEST_IMAGE_DIR)\/setup_aot; \\\n+\t$$(call ExecuteWithLog, $$($1_AOT_JDK_OUTPUT_DIR), ( \\\n+            cd $$($1_AOT_JDK_OUTPUT_DIR); $(JAR_CMD) --extract --file=$(TEST_IMAGE_DIR)\/setup_aot\/TestSetupAOT.jar ; \\\n@@ -757,1 +759,1 @@\n-\t        -Xlog:cds,cds+class=debug:file=$$($1_AOT_JDK_CONF).log  -Xlog:cds*=error \\\n+\t        -Xlog:class+load,cds,cds+class=debug:file=$$($1_AOT_JDK_CONF).log  -Xlog:cds*=error \\\n@@ -759,1 +761,1 @@\n-\t        TestSetupAOT > $$($1_AOT_JDK_LOG) \\\n+\t        TestSetupAOT $$($1_AOT_JDK_OUTPUT_DIR) > $$($1_AOT_JDK_LOG) \\\n@@ -763,1 +765,1 @@\n-\t$$(call ExecuteWithLog, $$($1_TEST_SUPPORT_DIR)\/aot, ( \\\n+\t$$(call ExecuteWithLog, $$($1_AOT_JDK_OUTPUT_DIR), ( \\\n","filename":"make\/RunTests.gmk","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-SETUP_AOT_CLASS := $(SETUP_AOT_SUPPORT)\/classes\/TestSetupAOT.class\n+SETUP_AOT_JAR := $(SETUP_AOT_SUPPORT)\/TestSetupAOT.jar\n@@ -46,0 +46,1 @@\n+    JAR := $(SETUP_AOT_JAR), \\\n@@ -56,1 +57,1 @@\n-    SRC := $(SETUP_AOT_SUPPORT)\/classes, \\\n+    SRC := $(SETUP_AOT_SUPPORT), \\\n@@ -58,1 +59,1 @@\n-    FILES := TestSetupAOT.class, \\\n+    FILES := $(SETUP_AOT_JAR), \\\n","filename":"make\/test\/BuildTestSetupAOT.gmk","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @library \/test\/lib\n+ * @library \/test\/lib \/test\/setup_aot\n@@ -37,1 +37,1 @@\n- * @library \/test\/lib\n+ * @library \/test\/lib \/test\/setup_aot\n@@ -48,1 +48,1 @@\n- * @library \/test\/lib\n+ * @library \/test\/lib \/test\/setup_aot\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/applications\/JavacBench.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"","filename":"test\/setup_aot\/JavacBenchApp.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/applications\/JavacBenchApp.java","status":"renamed"},{"patch":"@@ -26,0 +26,6 @@\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n@@ -27,0 +33,2 @@\n+import java.util.stream.Stream;\n+import static java.util.stream.Collectors.*;\n@@ -47,0 +55,2 @@\n+    private static final Logger LOGGER = Logger.getLogger(\"Hello\");\n+\n@@ -48,9 +58,69 @@\n-        String[] tools = {\n-            \"javac\", \"javap\", \"jlink\", \"jar\",\n-        };\n-        \/\/ TODO: we should do more substantial work than just running with \"--help\".\n-        \/\/ E.g., use javac to compile a program.\n-        for (String tool : tools) {\n-            ToolProvider t = ToolProvider.findFirst(tool)\n-                .orElseThrow(() -> new RuntimeException(tool + \" not found\"));\n-            t.run(System.out, System.out, \"--help\");\n+        runJDKTools(args);\n+        invokedynamicTests(args);\n+        LOGGER.log(Level.FINE, \"Done\");\n+    }\n+\n+    static void runJDKTools(String[] args) throws Throwable {\n+        String tmpDir = args[0];\n+        System.out.println(\"Working Directory = \" + System.getProperty(\"user.dir\"));\n+        System.out.println(\"Temp output dir = \" + tmpDir);\n+\n+        \/\/ ------------------------------\n+        \/\/ javac\n+\n+        execTool(\"javac\", \"--help\");\n+\n+        JavacBenchApp.main(new String[] {\"5\"});\n+\n+        \/\/ ------------------------------\n+        \/\/ javap\n+\n+        execTool(\"javap\", \"--help\");\n+        execTool(\"javap\", \"-c\", \"-private\", \"-v\", \"-verify\",\n+                 \"java.lang.System\",\n+                 \"java\/util\/stream\/IntStream\",\n+                 \"jdk.internal.module.ModuleBootstrap\");\n+\n+        \/\/ ------------------------------\n+        \/\/ jlink\n+\n+        String jlinkOutput = tmpDir + File.separator + \"jlinkOutput\";\n+\n+        execTool(\"jlink\", \"--help\");\n+        execTool(\"jlink\", \"--list-plugins\");\n+\n+        deleteAll(jlinkOutput);\n+        execTool(\"jlink\", \"--add-modules\", \"java.base\", \"--strip-debug\", \"--output\", jlinkOutput);\n+        deleteAll(jlinkOutput);\n+\n+        \/\/ ------------------------------\n+        \/\/ jar\n+\n+        String jarOutput = tmpDir + File.separator + \"tmp.jar\";\n+\n+        execTool(\"jar\", \"--help\");\n+\n+        deleteAll(jarOutput);\n+        execTool(\"jar\", \"cvf\", jarOutput, \"TestSetupAOT.class\");\n+        execTool(\"jar\", \"uvf\", jarOutput, \"TestSetupAOT.class\");\n+        execTool(\"jar\", \"tvf\", jarOutput);\n+        execTool(\"jar\", \"--describe-module\", \"--file=\" + jarOutput);\n+        deleteAll(jarOutput);\n+\n+        \/\/ ------------------------------\n+        \/\/ jdeps\n+\n+        execTool(\"jdeps\", \"--help\");\n+        execTool(\"jdeps\", \"-v\", \"TestSetupAOT.class\");\n+    }\n+\n+    static void deleteAll(String f) {\n+        deleteAll(new File(f));\n+    }\n+\n+    static void deleteAll(File f) {\n+        File[] files = f.listFiles();\n+        if (files != null) {\n+            for (File file : files) {\n+                deleteAll(file);\n+            }\n@@ -58,0 +128,85 @@\n+        System.out.println(\"Deleting: \" + f);\n+        f.delete();\n+    }\n+\n+    static void execTool(String tool, String... args) throws Throwable {\n+        System.out.println(\"== Running tool ======================================================\");\n+        System.out.print(tool);\n+        for (String s : args) {\n+            System.out.print(\" \" + s);\n+        }\n+        System.out.println();\n+        System.out.println(\"======================================================================\");\n+\n+        ToolProvider t = ToolProvider.findFirst(tool)\n+            .orElseThrow(() -> new RuntimeException(tool + \" not found\"));\n+        t.run(System.out, System.out, args);\n+    }\n+\n+\n+    \/\/ Run some operations with java.util.stream, lambda expressions and string concatenation. This\n+    \/\/ will lead to AOT resolution of invokedynamic call sites.\n+    static void invokedynamicTests(String args[]) {\n+        List<String> strings = Arrays.asList(\"Hello\", \"World!\");\n+\n+        String helloWorld = strings.parallelStream()\n+                .filter(s -> s.contains(\"o\"))\n+                .map(s -> s.toLowerCase(Locale.ROOT))\n+                .collect(joining(\",\"));\n+\n+        Stream.of(helloWorld.split(\"([,x-z]{1,3})([\\\\s]*)\"))\n+                .map(String::toString)\n+                .forEach(System.out::println);\n+\n+        \/\/ Common concatenation patterns\n+        int i = args.length * 12357; \/\/ Seed with this so javac will not perform constant folding.\n+        String s = String.valueOf(i);\n+\n+        String SS     = s + s;\n+        String CS     = \"string\" + s;\n+        String SC     = s + \"string\";\n+        String SCS    = s + \"string\" + s;\n+        String CSS    = \"string\" + s + s;\n+        String CSC    = \"string\" + s + \"string\";\n+        String SSC    = s + s + \"string\";\n+        String CSCS   = \"string\" + s + \"string\" + s;\n+        String SCSC   = s + \"string\" + s + \"string\";\n+        String CSCSC  = \"string\" + s + \"string\" + s + \"string\";\n+        String SCSCS  = s + \"string\" + s + \"string\" + s;\n+        String SSCSS  = s + s + \"string\" + s + s;\n+        String S5     = s + s + s + s + s;\n+        String S6     = s + s + s + s + s + s;\n+        String S7     = s + s + s + s + s + s + s;\n+        String S8     = s + s + s + s + s + s + s + s;\n+        String S9     = s + s + s + s + s + s + s + s + s;\n+        String S10    = s + s + s + s + s + s + s + s + s + s;\n+\n+        String CI     = \"string\" + i;\n+        String IC     = i + \"string\";\n+        String SI     = s + i;\n+        String IS     = i + s;\n+        String CIS    = \"string\" + i + s;\n+        String CSCI   = \"string\" + s + \"string\" + i;\n+        String CIC    = \"string\" + i + \"string\";\n+        String CICI   = \"string\" + i + \"string\" + i;\n+\n+        float f = 0.1f;\n+        String CF     = \"string\" + f;\n+        String CFS    = \"string\" + f + s;\n+        String CSCF   = \"string\" + s + \"string\" + f;\n+\n+        char c = 'a';\n+        String CC     = \"string\" + c;\n+        String CCS    = \"string\" + c + s;\n+        String CSCC   = \"string\" + s + \"string\" + c;\n+\n+        long l = i + 12345678;\n+        String CJ     = \"string\" + l;\n+        String JC     = l + \"string\";\n+        String CJC    = \"string\" + l + \"string\";\n+        String CJCJ   = \"string\" + l + \"string\" + l;\n+        String CJCJC  = \"string\" + l + \"string\" + l + \"string\";\n+        double d = i \/ 2.0;\n+        String CD     = \"string\" + d;\n+        String CDS    = \"string\" + d + s;\n+        String CSCD   = \"string\" + s + \"string\" + d;\n","filename":"test\/setup_aot\/TestSetupAOT.java","additions":164,"deletions":9,"binary":false,"changes":173,"status":"modified"}]}