{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,0 +57,1 @@\n+        winEnableUTF8 = false;\n@@ -93,0 +94,9 @@\n+    public Executor setWinEnableUTF8(boolean value) {\n+        if (!TKit.isWindows()) {\n+            throw new UnsupportedOperationException(\n+                    \"setWinEnableUTF8 is only valid on Windows platform\");\n+        }\n+        winEnableUTF8 = value;\n+        return this;\n+    }\n+\n@@ -329,2 +339,11 @@\n-        command.add(executablePath().toString());\n-        command.addAll(args);\n+\n+        if (winEnableUTF8) {\n+            \/\/ run chcp to change the code page to UTF-8 on Windows\n+            command.add(\"cmd.exe\");\n+            command.add(\"\/c\");\n+            command.add(\"chcp 65001 && \" + printCommandLine(executablePath().toString(), args));\n+        } else {\n+            command.add(executablePath().toString());\n+            command.addAll(args);\n+        }\n+\n@@ -460,2 +479,5 @@\n-        return String.format(format, printCommandLine(exec, args),\n-                args.size() + 1);\n+        String chcpCmdLine = winEnableUTF8 ? \"cmd.exe \/c chcp 65001 && \" : \"\";\n+        int chcpTokenNum = chcpCmdLine.isEmpty() ? 0 : chcpCmdLine.split(\" \").length;\n+\n+        return String.format(format, chcpCmdLine + printCommandLine(exec, args),\n+                chcpTokenNum + args.size() + 1);\n@@ -466,1 +488,1 @@\n-        \/\/ to be executed manally\n+        \/\/ to be executed manually\n@@ -482,0 +504,1 @@\n+    private boolean winEnableUTF8;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/Executor.java","additions":29,"deletions":6,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-        \/\/ Get the list of PIDs and PPIDs of app launcher processes.\n+        \/\/ Get the list of PIDs and PPIDs of app launcher processes. Run setWinEnableUTF8(true) for JDK-8344275.\n@@ -259,5 +259,4 @@\n-                \")\", \"get\", \"ProcessID,ParentProcessID\").dumpOutput(true).\n-                saveOutput().executeAndGetOutput();\n-\n-        if (\"No Instance(s) Available.\".equals(output.getFirst().trim())) {\n-            return new long[0];\n+                \")\", \"get\", \"ProcessID,ParentProcessID\").dumpOutput(true).saveOutput().\n+                setWinEnableUTF8(true).executeAndGetOutput();\n+        if (\"No Instance(s) Available.\".equals(output.get(1).trim())) {\n+                return new long[0];\n@@ -266,1 +265,1 @@\n-        String[] headers = Stream.of(output.getFirst().split(\"\\\\s+\", 2)).map(\n+        String[] headers = Stream.of(output.get(1).split(\"\\\\s+\", 2)).map(\n@@ -280,1 +279,1 @@\n-        List<long[]> processes = output.stream().skip(1).map(line -> {\n+        List<long[]> processes = output.stream().skip(2).map(line -> {\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/WindowsHelper.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"}]}