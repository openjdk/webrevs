{"files":[{"patch":"@@ -296,1 +296,1 @@\n-  return VtableStubs::entry_point(destination()) != nullptr;;\n+  return VtableStubs::entry_point(destination()) != nullptr;\n","filename":"src\/hotspot\/share\/code\/compiledIC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -500,5 +500,0 @@\n-  } else if (InlineCacheBufferSize > NonNMethodCodeHeapSize \/ 2) {\n-    jio_fprintf(defaultStream::error_stream(),\n-                \"Invalid InlineCacheBufferSize=\" SIZE_FORMAT \"K. Must be less than or equal to \" SIZE_FORMAT \"K.\\n\",\n-                InlineCacheBufferSize\/K, NonNMethodCodeHeapSize\/2\/K);\n-    status = false;\n","filename":"src\/hotspot\/share\/compiler\/compilerDefinitions.cpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -292,3 +292,0 @@\n-  product(size_t, InlineCacheBufferSize, 10*K, EXPERIMENTAL,                \\\n-          \"InlineCacheBuffer size\")                                         \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-Mutex*   InlineCacheBuffer_lock       = nullptr;\n@@ -265,1 +264,1 @@\n-  MUTEX_DEFN(CompiledIC_lock                 , PaddedMutex  , nosafepoint);  \/\/ locks VtableStubs_lock, InlineCacheBuffer_lock\n+  MUTEX_DEFN(CompiledIC_lock                 , PaddedMutex  , nosafepoint);  \/\/ locks VtableStubs_lock\n@@ -322,1 +321,0 @@\n-  MUTEX_DEFL(InlineCacheBuffer_lock         , PaddedMutex  , CompiledIC_lock);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-extern Mutex*   InlineCacheBuffer_lock;          \/\/ a lock used to guard the InlineCacheBuffer\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -86,1 +86,0 @@\n-  DEBUG_ONLY(_missed_ic_stub_refill_verifier = nullptr);\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-class ICRefillVerifier;\n@@ -245,14 +244,0 @@\n- private:\n-\n-#ifdef ASSERT\n-  ICRefillVerifier* _missed_ic_stub_refill_verifier;\n-\n- public:\n-  ICRefillVerifier* missed_ic_stub_refill_verifier() {\n-    return _missed_ic_stub_refill_verifier;\n-  }\n-\n-  void set_missed_ic_stub_refill_verifier(ICRefillVerifier* verifier) {\n-    _missed_ic_stub_refill_verifier = verifier;\n-  }\n-#endif \/\/ ASSERT\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -112,1 +112,0 @@\n-  template(ICBufferFull)                          \\\n","filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -63,6 +63,0 @@\n-\/\/ empty vm op, when forcing a safepoint due to inline cache buffers being full\n-class VM_ICBufferFull: public VM_EmptyOperation {\n- public:\n-  VMOp_Type type() const { return VMOp_ICBufferFull; }\n-};\n-\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -55,2 +55,2 @@\n-  \/\/ The type of the contained stubs (i.e., InterpreterCodelet,\n-  \/\/ ICStub). Must be a subclass of type Stub.\n+  \/\/ The type of the contained stubs (i.e., InterpreterCodelet).\n+  \/\/ Must be a subclass of type Stub.\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/StubQueue.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}