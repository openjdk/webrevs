{"files":[{"patch":"@@ -927,7 +927,9 @@\n-      const julong sign_bits_mask = ~(((julong)CONST64(1) << (julong)(BitsPerJavaLong - shift)) -1);\n-      \/\/ If the AND'ing of the 2 masks has no bits, then only original shifted\n-      \/\/ bits survive.  NO sign-extension bits survive the maskings.\n-      if( (sign_bits_mask & mask) == 0 ) {\n-        \/\/ Use zero-fill shift instead\n-        Node *zshift = phase->transform(new URShiftLNode(in1->in(1), in1->in(2)));\n-        return new AndLNode(zshift, in(2));\n+      if (shift != 0) {\n+        const julong sign_bits_mask = ~(((julong)CONST64(1) << (julong)(BitsPerJavaLong - shift)) -1);\n+        \/\/ If the AND'ing of the 2 masks has no bits, then only original shifted\n+        \/\/ bits survive.  NO sign-extension bits survive the maskings.\n+        if( (sign_bits_mask & mask) == 0 ) {\n+          \/\/ Use zero-fill shift instead\n+          Node *zshift = phase->transform(new URShiftLNode(in1->in(1), in1->in(2)));\n+          return new AndLNode(zshift, in(2));\n+        }\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"}]}