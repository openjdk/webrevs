{"files":[{"patch":"@@ -50,0 +50,6 @@\n+JVM_ASFLAGS += \\\n+        -I$(TOPDIR)\/src\/hotspot\/os_cpu\/$(HOTSPOT_TARGET_OS)_$(HOTSPOT_TARGET_CPU_ARCH) \\\n+        -I$(TOPDIR)\/src\/hotspot\/os\/$(HOTSPOT_TARGET_OS) \\\n+        -I$(TOPDIR)\/src\/hotspot\/os\/$(HOTSPOT_TARGET_OS_TYPE) \\\n+        #\n+\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,40 @@\n+#\n+# Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+#ifdef __APPLE__\n+  # macOS prefixes symbols with _\n+  #define SYMBOL(s) _ ## s\n+\n+  #define DECLARE_FUNC(func) \\\n+    .globl SYMBOL(func) ; \\\n+    .private_extern SYMBOL(func) ; \\\n+    SYMBOL(func)\n+#else\n+  #define SYMBOL(s) s\n+\n+  #define DECLARE_FUNC(func) \\\n+    .globl func ; \\\n+    .hidden func ; \\\n+    .type func, %function ; \\\n+    func\n+#endif\n","filename":"src\/hotspot\/os\/bsd\/defs.S.inc","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+#\n+# Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# Used to get a reference to a symbol. (Overridden by macOS.)\n+#define SYMBOL(s) s\n+\n+#define DECLARE_FUNC(func) \\\n+    .globl func ; \\\n+    .hidden func ; \\\n+    .type func, %function ; \\\n+    func\n","filename":"src\/hotspot\/os\/posix\/defs.S.inc","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -4,0 +4,1 @@\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,9 +27,1 @@\n-#define CFUNC(x) _##x\n-\n-        .global CFUNC(_Copy_conjoint_words)\n-        .global CFUNC(_Copy_disjoint_words)\n-\n-#ifdef __APPLE__\n-        .private_extern CFUNC(_Copy_conjoint_words)\n-        .private_extern CFUNC(_Copy_disjoint_words)\n-#endif\n+#include \"defs.S.inc\"\n@@ -49,1 +42,1 @@\n-CFUNC(_Copy_disjoint_words):\n+DECLARE_FUNC(_Copy_disjoint_words):\n@@ -147,1 +140,1 @@\n-CFUNC(_Copy_conjoint_words):\n+DECLARE_FUNC(_Copy_conjoint_words):\n@@ -150,1 +143,1 @@\n-        bhs     CFUNC(_Copy_disjoint_words)\n+        bhs     SYMBOL(_Copy_disjoint_words)\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/copy_bsd_aarch64.S","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,40 @@\n+#\n+# Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+#ifdef __APPLE__\n+  # macOS prefixes symbols with _\n+  #define SYMBOL(s) _ ## s\n+\n+  #define DECLARE_FUNC(func) \\\n+    .globl SYMBOL(func) %% \\\n+    .private_extern SYMBOL(func) %% \\\n+    SYMBOL(func)\n+#else\n+  #define SYMBOL(s) s\n+\n+  #define DECLARE_FUNC(func) \\\n+    .globl func %% \\\n+    .hidden func %% \\\n+    .type func, %function %% \\\n+    func\n+#endif\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/defs.S.inc","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"},{"patch":"@@ -26,24 +26,1 @@\n-#ifdef __APPLE__\n-# Darwin uses _ prefixed global symbols\n-#define SYMBOL(s) _ ## s\n-#define ELF_TYPE(name, description)\n-#else\n-#define SYMBOL(s) s\n-#define ELF_TYPE(name, description) .type name,description\n-#endif\n-\n-    .global SYMBOL(SafeFetchN_impl)\n-    .global SYMBOL(_SafeFetchN_fault)\n-    .global SYMBOL(_SafeFetchN_continuation)\n-    .global SYMBOL(SafeFetch32_impl)\n-    .global SYMBOL(_SafeFetch32_fault)\n-    .global SYMBOL(_SafeFetch32_continuation)\n-\n-#ifdef __APPLE__\n-    .private_extern SYMBOL(SafeFetchN_impl)\n-    .private_extern SYMBOL(_SafeFetchN_fault)\n-    .private_extern SYMBOL(_SafeFetchN_continuation)\n-    .private_extern SYMBOL(SafeFetch32_impl)\n-    .private_extern SYMBOL(_SafeFetch32_fault)\n-    .private_extern SYMBOL(_SafeFetch32_continuation)\n-#endif\n+#include \"defs.S.inc\"\n@@ -58,3 +35,2 @@\n-    ELF_TYPE(SafeFetch32_impl,@function)\n-SYMBOL(SafeFetch32_impl):\n-SYMBOL(_SafeFetch32_fault):\n+DECLARE_FUNC(SafeFetch32_impl):\n+DECLARE_FUNC(_SafeFetch32_fault):\n@@ -63,1 +39,1 @@\n-SYMBOL(_SafeFetch32_continuation):\n+DECLARE_FUNC(_SafeFetch32_continuation):\n@@ -73,3 +49,2 @@\n-    ELF_TYPE(SafeFetchN_impl,@function)\n-SYMBOL(SafeFetchN_impl):\n-SYMBOL(_SafeFetchN_fault):\n+DECLARE_FUNC(SafeFetchN_impl):\n+DECLARE_FUNC(_SafeFetchN_fault):\n@@ -78,1 +53,1 @@\n-SYMBOL(_SafeFetchN_continuation):\n+DECLARE_FUNC(_SafeFetchN_continuation):\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/safefetch_bsd_aarch64.S","additions":7,"deletions":32,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -24,12 +24,1 @@\n-\n-#ifdef __APPLE__\n-# Darwin uses _ prefixed global symbols\n-#define SYMBOL(s) _ ## s\n-#define ELF_TYPE(name, description)\n-#else\n-#define SYMBOL(s) s\n-#define ELF_TYPE(name, description) .type name,description\n-#endif\n-\n-        .globl SYMBOL(fixcw)\n-        .globl SYMBOL(SpinPause)\n+#include \"defs.S.inc\"\n@@ -43,25 +32,0 @@\n-        .globl SYMBOL(_Copy_arrayof_conjoint_bytes)\n-        .globl SYMBOL(_Copy_conjoint_jshorts_atomic)\n-        .globl SYMBOL(_Copy_arrayof_conjoint_jshorts)\n-        .globl SYMBOL(_Copy_conjoint_jints_atomic)\n-        .globl SYMBOL(_Copy_arrayof_conjoint_jints)\n-        .globl SYMBOL(_Copy_conjoint_jlongs_atomic)\n-        .globl SYMBOL(_mmx_Copy_arrayof_conjoint_jshorts)\n-\n-        .globl SYMBOL(_Atomic_cmpxchg_long)\n-        .globl SYMBOL(_Atomic_move_long)\n-\n-#ifdef __APPLE__\n-        .private_extern SYMBOL(fixcw)\n-        .private_extern SYMBOL(SpinPause)\n-        .private_extern SYMBOL(_Copy_arrayof_conjoint_bytes)\n-        .private_extern SYMBOL(_Copy_conjoint_jshorts_atomic)\n-        .private_extern SYMBOL(_Copy_arrayof_conjoint_jshorts)\n-        .private_extern SYMBOL(_Copy_conjoint_jints_atomic)\n-        .private_extern SYMBOL(_Copy_arrayof_conjoint_jints)\n-        .private_extern SYMBOL(_Copy_conjoint_jlongs_atomic)\n-        .private_extern SYMBOL(_mmx_Copy_arrayof_conjoint_jshorts)\n-        .private_extern SYMBOL(_Atomic_cmpxchg_long)\n-        .private_extern SYMBOL(_Atomic_move_long)\n-#endif\n-\n@@ -70,1 +34,0 @@\n-# Support for void os::Solaris::init_thread_fpu_state() in os_solaris_i486.cpp\n@@ -72,1 +35,0 @@\n-# ported from solaris_x86_32.s\n@@ -74,1 +36,1 @@\n-SYMBOL(fixcw):\n+DECLARE_FUNC(fixcw):\n@@ -80,1 +42,0 @@\n-        ELF_TYPE(SpinPause,@function)\n@@ -82,1 +43,1 @@\n-SYMBOL(SpinPause):\n+DECLARE_FUNC(SpinPause):\n@@ -93,2 +54,1 @@\n-        ELF_TYPE(_Copy_arrayof_conjoint_bytes,@function)\n-SYMBOL(_Copy_arrayof_conjoint_bytes):\n+DECLARE_FUNC(_Copy_arrayof_conjoint_bytes):\n@@ -181,2 +141,1 @@\n-        ELF_TYPE(_Copy_conjoint_jshorts_atomic,@function)\n-SYMBOL(_Copy_conjoint_jshorts_atomic):\n+DECLARE_FUNC(_Copy_conjoint_jshorts_atomic):\n@@ -268,2 +227,1 @@\n-        ELF_TYPE(_Copy_arrayof_conjoint_jshorts,@function)\n-SYMBOL(_Copy_arrayof_conjoint_jshorts):\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jshorts):\n@@ -345,4 +303,2 @@\n-        ELF_TYPE(_Copy_conjoint_jints_atomic,@function)\n-        ELF_TYPE(_Copy_arrayof_conjoint_jints,@function)\n-SYMBOL(_Copy_conjoint_jints_atomic):\n-SYMBOL(_Copy_arrayof_conjoint_jints):\n+DECLARE_FUNC(_Copy_conjoint_jints_atomic):\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jints):\n@@ -420,2 +376,1 @@\n-        ELF_TYPE(_Copy_conjoint_jlongs_atomic,@function)\n-SYMBOL(_Copy_conjoint_jlongs_atomic):\n+DECLARE_FUNC(_Copy_conjoint_jlongs_atomic):\n@@ -449,2 +404,1 @@\n-        ELF_TYPE(_mmx_Copy_arrayof_conjoint_jshorts,@function)\n-SYMBOL(_mmx_Copy_arrayof_conjoint_jshorts):\n+DECLARE_FUNC(_mmx_Copy_arrayof_conjoint_jshorts):\n@@ -547,2 +501,1 @@\n-        ELF_TYPE(_Atomic_cmpxchg_long,@function)\n-SYMBOL(_Atomic_cmpxchg_long):\n+DECLARE_FUNC(_Atomic_cmpxchg_long):\n@@ -567,2 +520,1 @@\n-        ELF_TYPE(_Atomic_move_long,@function)\n-SYMBOL(_Atomic_move_long):\n+DECLARE_FUNC(_Atomic_move_long):\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/bsd_x86_32.S","additions":12,"deletions":60,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -24,8 +24,1 @@\n-#ifdef __APPLE__\n-# Darwin uses _ prefixed global symbols\n-#define SYMBOL(s) _ ## s\n-#define ELF_TYPE(name, description)\n-#else\n-#define SYMBOL(s) s\n-#define ELF_TYPE(name, description) .type name,description\n-#endif\n+#include \"defs.S.inc\"\n@@ -39,20 +32,0 @@\n-        .globl SYMBOL(SpinPause)\n-        .globl SYMBOL(_Copy_arrayof_conjoint_bytes)\n-        .globl SYMBOL(_Copy_arrayof_conjoint_jshorts)\n-        .globl SYMBOL(_Copy_conjoint_jshorts_atomic)\n-        .globl SYMBOL(_Copy_arrayof_conjoint_jints)\n-        .globl SYMBOL(_Copy_conjoint_jints_atomic)\n-        .globl SYMBOL(_Copy_arrayof_conjoint_jlongs)\n-        .globl SYMBOL(_Copy_conjoint_jlongs_atomic)\n-\n-#ifdef __APPLE__\n-        .private_extern SYMBOL(SpinPause)\n-        .private_extern SYMBOL(_Copy_arrayof_conjoint_bytes)\n-        .private_extern SYMBOL(_Copy_arrayof_conjoint_jshorts)\n-        .private_extern SYMBOL(_Copy_conjoint_jshorts_atomic)\n-        .private_extern SYMBOL(_Copy_arrayof_conjoint_jints)\n-        .private_extern SYMBOL(_Copy_conjoint_jints_atomic)\n-        .private_extern SYMBOL(_Copy_arrayof_conjoint_jlongs)\n-        .private_extern SYMBOL(_Copy_conjoint_jlongs_atomic)\n-#endif\n-\n@@ -62,2 +35,1 @@\n-        ELF_TYPE(SpinPause,@function)\n-SYMBOL(SpinPause):\n+DECLARE_FUNC(SpinPause):\n@@ -77,2 +49,1 @@\n-        ELF_TYPE(_Copy_arrayof_conjoint_bytes,@function)\n-SYMBOL(_Copy_arrayof_conjoint_bytes):\n+DECLARE_FUNC(_Copy_arrayof_conjoint_bytes):\n@@ -179,4 +150,2 @@\n-        ELF_TYPE(_Copy_arrayof_conjoint_jshorts,@function)\n-        ELF_TYPE(_Copy_conjoint_jshorts_atomic,@function)\n-SYMBOL(_Copy_arrayof_conjoint_jshorts):\n-SYMBOL(_Copy_conjoint_jshorts_atomic):\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jshorts):\n+DECLARE_FUNC(_Copy_conjoint_jshorts_atomic):\n@@ -269,4 +238,2 @@\n-        ELF_TYPE(_Copy_arrayof_conjoint_jints,@function)\n-        ELF_TYPE(_Copy_conjoint_jints_atomic,@function)\n-SYMBOL(_Copy_arrayof_conjoint_jints):\n-SYMBOL(_Copy_conjoint_jints_atomic):\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jints):\n+DECLARE_FUNC(_Copy_conjoint_jints_atomic):\n@@ -348,4 +315,2 @@\n-        ELF_TYPE(_Copy_arrayof_conjoint_jlongs,@function)\n-        ELF_TYPE(_Copy_conjoint_jlongs_atomic,@function)\n-SYMBOL(_Copy_arrayof_conjoint_jlongs):\n-SYMBOL(_Copy_conjoint_jlongs_atomic):\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jlongs):\n+DECLARE_FUNC(_Copy_conjoint_jlongs_atomic):\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/bsd_x86_64.S","additions":9,"deletions":44,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -25,24 +25,1 @@\n-#ifdef __APPLE__\n-# Darwin uses _ prefixed global symbols\n-#define SYMBOL(s) _ ## s\n-#define ELF_TYPE(name, description)\n-#else\n-#define SYMBOL(s) s\n-#define ELF_TYPE(name, description) .type name,description\n-#endif\n-\n-    .globl SYMBOL(SafeFetch32_impl)\n-    .globl SYMBOL(SafeFetchN_impl)\n-    .globl SYMBOL(_SafeFetch32_fault)\n-    .globl SYMBOL(_SafeFetchN_fault)\n-    .globl SYMBOL(_SafeFetch32_continuation)\n-    .globl SYMBOL(_SafeFetchN_continuation)\n-\n-#ifdef __APPLE__\n-    .private_extern SYMBOL(SafeFetch32_impl)\n-    .private_extern SYMBOL(SafeFetchN_impl)\n-    .private_extern SYMBOL(_SafeFetch32_fault)\n-    .private_extern SYMBOL(_SafeFetchN_fault)\n-    .private_extern SYMBOL(_SafeFetch32_continuation)\n-    .private_extern SYMBOL(_SafeFetchN_continuation)\n-#endif\n+#include \"defs.S.inc\"\n@@ -56,3 +33,2 @@\n-    ELF_TYPE(SafeFetch32_impl,@function)\n-SYMBOL(SafeFetch32_impl:)\n-SYMBOL(_SafeFetch32_fault:)\n+DECLARE_FUNC(SafeFetch32_impl):\n+DECLARE_FUNC(_SafeFetch32_fault):\n@@ -61,1 +37,1 @@\n-SYMBOL(_SafeFetch32_continuation:)\n+DECLARE_FUNC(_SafeFetch32_continuation):\n@@ -69,3 +45,2 @@\n-    ELF_TYPE(SafeFetchN_impl,@function)\n-SYMBOL(SafeFetchN_impl:)\n-SYMBOL(_SafeFetchN_fault:)\n+DECLARE_FUNC(SafeFetchN_impl):\n+DECLARE_FUNC(_SafeFetchN_fault):\n@@ -74,1 +49,1 @@\n-SYMBOL(_SafeFetchN_continuation:)\n+DECLARE_FUNC(_SafeFetchN_continuation):\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/safefetch_bsd_x86_64.S","additions":7,"deletions":32,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+\/\/ Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -22,1 +23,1 @@\n-\n+#include \"defs.S.inc\"\n@@ -26,2 +27,0 @@\n-        .globl aarch64_atomic_fetch_add_8_default_impl\n-        .hidden aarch64_atomic_fetch_add_8_default_impl\n@@ -29,1 +28,1 @@\n-aarch64_atomic_fetch_add_8_default_impl:\n+DECLARE_FUNC(aarch64_atomic_fetch_add_8_default_impl):\n@@ -43,2 +42,0 @@\n-        .globl aarch64_atomic_fetch_add_4_default_impl\n-        .hidden aarch64_atomic_fetch_add_4_default_impl\n@@ -46,1 +43,1 @@\n-aarch64_atomic_fetch_add_4_default_impl:\n+DECLARE_FUNC(aarch64_atomic_fetch_add_4_default_impl):\n@@ -60,2 +57,0 @@\n-        .global aarch64_atomic_fetch_add_8_relaxed_default_impl\n-        .hidden aarch64_atomic_fetch_add_8_relaxed_default_impl\n@@ -63,1 +58,1 @@\n-aarch64_atomic_fetch_add_8_relaxed_default_impl:\n+DECLARE_FUNC(aarch64_atomic_fetch_add_8_relaxed_default_impl):\n@@ -76,2 +71,0 @@\n-        .global aarch64_atomic_fetch_add_4_relaxed_default_impl\n-        .hidden aarch64_atomic_fetch_add_4_relaxed_default_impl\n@@ -79,1 +72,1 @@\n-aarch64_atomic_fetch_add_4_relaxed_default_impl:\n+DECLARE_FUNC(aarch64_atomic_fetch_add_4_relaxed_default_impl):\n@@ -92,2 +85,0 @@\n-        .globl aarch64_atomic_xchg_4_default_impl\n-        .hidden aarch64_atomic_xchg_4_default_impl\n@@ -95,1 +86,1 @@\n-aarch64_atomic_xchg_4_default_impl:\n+DECLARE_FUNC(aarch64_atomic_xchg_4_default_impl):\n@@ -108,2 +99,0 @@\n-        .globl aarch64_atomic_xchg_8_default_impl\n-        .hidden aarch64_atomic_xchg_8_default_impl\n@@ -111,1 +100,1 @@\n-aarch64_atomic_xchg_8_default_impl:\n+DECLARE_FUNC(aarch64_atomic_xchg_8_default_impl):\n@@ -124,2 +113,0 @@\n-        .globl aarch64_atomic_cmpxchg_1_default_impl\n-        .hidden aarch64_atomic_cmpxchg_1_default_impl\n@@ -127,1 +114,1 @@\n-aarch64_atomic_cmpxchg_1_default_impl:\n+DECLARE_FUNC(aarch64_atomic_cmpxchg_1_default_impl):\n@@ -145,2 +132,0 @@\n-        .globl aarch64_atomic_cmpxchg_4_default_impl\n-        .hidden aarch64_atomic_cmpxchg_4_default_impl\n@@ -148,1 +133,1 @@\n-aarch64_atomic_cmpxchg_4_default_impl:\n+DECLARE_FUNC(aarch64_atomic_cmpxchg_4_default_impl):\n@@ -165,2 +150,0 @@\n-        .globl aarch64_atomic_cmpxchg_8_default_impl\n-        .hidden aarch64_atomic_cmpxchg_8_default_impl\n@@ -168,1 +151,1 @@\n-aarch64_atomic_cmpxchg_8_default_impl:\n+DECLARE_FUNC(aarch64_atomic_cmpxchg_8_default_impl):\n@@ -185,2 +168,0 @@\n-        .globl aarch64_atomic_cmpxchg_4_release_default_impl\n-        .hidden aarch64_atomic_cmpxchg_4_release_default_impl\n@@ -188,1 +169,1 @@\n-aarch64_atomic_cmpxchg_4_release_default_impl:\n+DECLARE_FUNC(aarch64_atomic_cmpxchg_4_release_default_impl):\n@@ -203,2 +184,0 @@\n-        .globl aarch64_atomic_cmpxchg_8_release_default_impl\n-        .hidden aarch64_atomic_cmpxchg_8_release_default_impl\n@@ -206,1 +185,1 @@\n-aarch64_atomic_cmpxchg_8_release_default_impl:\n+DECLARE_FUNC(aarch64_atomic_cmpxchg_8_release_default_impl):\n@@ -221,2 +200,0 @@\n-        .globl aarch64_atomic_cmpxchg_4_seq_cst_default_impl\n-        .hidden aarch64_atomic_cmpxchg_4_seq_cst_default_impl\n@@ -224,1 +201,1 @@\n-aarch64_atomic_cmpxchg_4_seq_cst_default_impl:\n+DECLARE_FUNC(aarch64_atomic_cmpxchg_4_seq_cst_default_impl):\n@@ -239,2 +216,0 @@\n-        .globl aarch64_atomic_cmpxchg_8_seq_cst_default_impl\n-        .hidden aarch64_atomic_cmpxchg_8_seq_cst_default_impl\n@@ -242,1 +217,1 @@\n-aarch64_atomic_cmpxchg_8_seq_cst_default_impl:\n+DECLARE_FUNC(aarch64_atomic_cmpxchg_8_seq_cst_default_impl):\n@@ -257,2 +232,0 @@\n-.globl aarch64_atomic_cmpxchg_1_relaxed_default_impl\n-.hidden aarch64_atomic_cmpxchg_1_relaxed_default_impl\n@@ -260,1 +233,1 @@\n-aarch64_atomic_cmpxchg_1_relaxed_default_impl:\n+DECLARE_FUNC(aarch64_atomic_cmpxchg_1_relaxed_default_impl):\n@@ -276,2 +249,0 @@\n-        .globl aarch64_atomic_cmpxchg_4_relaxed_default_impl\n-        .hidden aarch64_atomic_cmpxchg_4_relaxed_default_impl\n@@ -279,1 +250,1 @@\n-aarch64_atomic_cmpxchg_4_relaxed_default_impl:\n+DECLARE_FUNC(aarch64_atomic_cmpxchg_4_relaxed_default_impl):\n@@ -294,2 +265,0 @@\n-        .globl aarch64_atomic_cmpxchg_8_relaxed_default_impl\n-        .hidden aarch64_atomic_cmpxchg_8_relaxed_default_impl\n@@ -297,1 +266,1 @@\n-aarch64_atomic_cmpxchg_8_relaxed_default_impl:\n+DECLARE_FUNC(aarch64_atomic_cmpxchg_8_relaxed_default_impl):\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/atomic_linux_aarch64.S","additions":18,"deletions":49,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +25,0 @@\n-        .global _Copy_conjoint_words\n-        .global _Copy_disjoint_words\n@@ -27,2 +26,1 @@\n-        .hidden _Copy_conjoint_words\n-        .hidden _Copy_disjoint_words\n+#include \"defs.S.inc\"\n@@ -43,1 +41,1 @@\n-_Copy_disjoint_words:\n+DECLARE_FUNC(_Copy_disjoint_words):\n@@ -141,1 +139,1 @@\n-_Copy_conjoint_words:\n+DECLARE_FUNC(_Copy_conjoint_words):\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/copy_linux_aarch64.S","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -26,13 +26,1 @@\n-    .globl SafeFetchN_impl\n-    .globl _SafeFetchN_fault\n-    .globl _SafeFetchN_continuation\n-    .globl SafeFetch32_impl\n-    .globl _SafeFetch32_fault\n-    .globl _SafeFetch32_continuation\n-\n-    .hidden SafeFetchN_impl\n-    .hidden _SafeFetchN_fault\n-    .hidden _SafeFetchN_continuation\n-    .hidden SafeFetch32_impl\n-    .hidden _SafeFetch32_fault\n-    .hidden _SafeFetch32_continuation\n+#include \"defs.S.inc\"\n@@ -44,2 +32,2 @@\n-SafeFetch32_impl:\n-_SafeFetch32_fault:\n+DECLARE_FUNC(SafeFetch32_impl):\n+DECLARE_FUNC(_SafeFetch32_fault):\n@@ -48,1 +36,1 @@\n-_SafeFetch32_continuation:\n+DECLARE_FUNC(_SafeFetch32_continuation):\n@@ -56,2 +44,2 @@\n-SafeFetchN_impl:\n-_SafeFetchN_fault:\n+DECLARE_FUNC(SafeFetchN_impl):\n+DECLARE_FUNC(_SafeFetchN_fault):\n@@ -60,1 +48,1 @@\n-_SafeFetchN_continuation:\n+DECLARE_FUNC(_SafeFetchN_continuation):\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/safefetch_linux_aarch64.S","additions":7,"deletions":19,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+\/\/ Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -22,0 +23,2 @@\n+#include \"defs.S.inc\"\n+\n@@ -28,5 +31,1 @@\n-        .global\t_ZN10JavaThread25aarch64_get_thread_helperEv\n-        .hidden\t_ZN10JavaThread25aarch64_get_thread_helperEv\n-        .type\t_ZN10JavaThread25aarch64_get_thread_helperEv, %function\n-\n-_ZN10JavaThread25aarch64_get_thread_helperEv:\n+DECLARE_FUNC(_ZN10JavaThread25aarch64_get_thread_helperEv):\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/threadLS_linux_aarch64.S","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"defs.S.inc\"\n@@ -31,31 +32,0 @@\n-        .globl  SpinPause\n-        .hidden  SpinPause\n-        .type SpinPause, %function\n-        .globl _Copy_arrayof_conjoint_bytes\n-        .hidden _Copy_arrayof_conjoint_bytes\n-        .type _Copy_arrayof_conjoint_bytes, %function\n-        .globl _Copy_disjoint_words\n-        .hidden _Copy_disjoint_words\n-        .type _Copy_disjoint_words, %function\n-        .globl _Copy_conjoint_words\n-        .hidden _Copy_conjoint_words\n-        .type _Copy_conjoint_words, %function\n-        .globl _Copy_conjoint_jshorts_atomic\n-        .hidden _Copy_conjoint_jshorts_atomic\n-        .type _Copy_conjoint_jshorts_atomic, %function\n-        .globl _Copy_arrayof_conjoint_jshorts\n-        .hidden _Copy_arrayof_conjoint_jshorts\n-        .type _Copy_arrayof_conjoint_jshorts, %function\n-        .globl _Copy_conjoint_jints_atomic\n-        .hidden _Copy_conjoint_jints_atomic\n-        .type _Copy_conjoint_jints_atomic, %function\n-        .globl _Copy_arrayof_conjoint_jints\n-        .hidden _Copy_arrayof_conjoint_jints\n-        .type _Copy_arrayof_conjoint_jints, %function\n-        .globl _Copy_conjoint_jlongs_atomic\n-        .hidden _Copy_conjoint_jlongs_atomic\n-        .type _Copy_conjoint_jlongs_atomic, %function\n-        .globl _Copy_arrayof_conjoint_jlongs\n-        .hidden _Copy_arrayof_conjoint_jlongs\n-        .type _Copy_arrayof_conjoint_jlongs, %function\n-\n@@ -66,1 +36,1 @@\n-SpinPause:\n+DECLARE_FUNC(SpinPause):\n@@ -72,1 +42,1 @@\n-_Copy_arrayof_conjoint_bytes:\n+DECLARE_FUNC(_Copy_arrayof_conjoint_bytes):\n@@ -79,1 +49,1 @@\n-_Copy_disjoint_words:\n+DECLARE_FUNC(_Copy_disjoint_words):\n@@ -124,1 +94,1 @@\n-_Copy_conjoint_words:\n+DECLARE_FUNC(_Copy_conjoint_words):\n@@ -204,1 +174,1 @@\n-_Copy_conjoint_jshorts_atomic:\n+DECLARE_FUNC(_Copy_conjoint_jshorts_atomic):\n@@ -428,1 +398,1 @@\n-_Copy_arrayof_conjoint_jshorts:\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jshorts):\n@@ -434,2 +404,2 @@\n-_Copy_conjoint_jints_atomic:\n-_Copy_arrayof_conjoint_jints:\n+DECLARE_FUNC(_Copy_conjoint_jints_atomic):\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jints):\n@@ -441,2 +411,2 @@\n-_Copy_conjoint_jlongs_atomic:\n-_Copy_arrayof_conjoint_jlongs:\n+DECLARE_FUNC(_Copy_conjoint_jlongs_atomic):\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jlongs):\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/linux_arm_32.S","additions":11,"deletions":41,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -26,9 +26,1 @@\n-    .globl SafeFetch32_impl\n-    .globl _SafeFetch32_fault\n-    .globl _SafeFetch32_continuation\n-\n-    .hidden SafeFetch32_impl\n-    .hidden _SafeFetch32_fault\n-    .hidden _SafeFetch32_continuation\n-\n-    .type SafeFetch32_impl, %function\n+#include \"defs.S.inc\"\n@@ -40,2 +32,2 @@\n-SafeFetch32_impl:\n-_SafeFetch32_fault:\n+DECLARE_FUNC(SafeFetch32_impl):\n+DECLARE_FUNC(_SafeFetch32_fault):\n@@ -44,1 +36,1 @@\n-_SafeFetch32_continuation:\n+DECLARE_FUNC(_SafeFetch32_continuation):\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/safefetch_linux_arm.S","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -26,13 +26,1 @@\n-    .globl SafeFetchN_impl\n-    .globl _SafeFetchN_fault\n-    .globl _SafeFetchN_continuation\n-    .globl SafeFetch32_impl\n-    .globl _SafeFetch32_fault\n-    .globl _SafeFetch32_continuation\n-\n-    .hidden SafeFetchN_impl\n-    .hidden _SafeFetchN_fault\n-    .hidden _SafeFetchN_continuation\n-    .hidden SafeFetch32_impl\n-    .hidden _SafeFetch32_fault\n-    .hidden _SafeFetch32_continuation\n+#include \"defs.S.inc\"\n@@ -45,2 +33,2 @@\n-SafeFetch32_impl:\n-_SafeFetch32_fault:\n+DECLARE_FUNC(SafeFetch32_impl):\n+DECLARE_FUNC(_SafeFetch32_fault):\n@@ -49,1 +37,1 @@\n-_SafeFetch32_continuation:\n+DECLARE_FUNC(_SafeFetch32_continuation):\n@@ -58,2 +46,2 @@\n-SafeFetchN_impl:\n-_SafeFetchN_fault:\n+DECLARE_FUNC(SafeFetchN_impl):\n+DECLARE_FUNC(_SafeFetchN_fault):\n@@ -62,1 +50,1 @@\n-_SafeFetchN_continuation:\n+DECLARE_FUNC(_SafeFetchN_continuation):\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/safefetch_linux_ppc.S","additions":7,"deletions":19,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -26,13 +26,1 @@\n-    .globl SafeFetchN_impl\n-    .globl _SafeFetchN_fault\n-    .globl _SafeFetchN_continuation\n-    .globl SafeFetch32_impl\n-    .globl _SafeFetch32_fault\n-    .globl _SafeFetch32_continuation\n-\n-    .hidden SafeFetchN_impl\n-    .hidden _SafeFetchN_fault\n-    .hidden _SafeFetchN_continuation\n-    .hidden SafeFetch32_impl\n-    .hidden _SafeFetch32_fault\n-    .hidden _SafeFetch32_continuation\n+#include \"defs.S.inc\"\n@@ -45,2 +33,2 @@\n-SafeFetch32_impl:\n-_SafeFetch32_fault:\n+DECLARE_FUNC(SafeFetch32_impl):\n+DECLARE_FUNC(_SafeFetch32_fault):\n@@ -49,1 +37,1 @@\n-_SafeFetch32_continuation:\n+DECLARE_FUNC(_SafeFetch32_continuation):\n@@ -58,2 +46,2 @@\n-SafeFetchN_impl:\n-_SafeFetchN_fault:\n+DECLARE_FUNC(SafeFetchN_impl):\n+DECLARE_FUNC(_SafeFetchN_fault):\n@@ -62,1 +50,1 @@\n-_SafeFetchN_continuation:\n+DECLARE_FUNC(_SafeFetchN_continuation):\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/safefetch_linux_riscv.S","additions":7,"deletions":19,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -26,13 +26,1 @@\n-    .globl SafeFetchN_impl\n-    .globl _SafeFetchN_fault\n-    .globl _SafeFetchN_continuation\n-    .globl SafeFetch32_impl\n-    .globl _SafeFetch32_fault\n-    .globl _SafeFetch32_continuation\n-\n-    .hidden SafeFetchN_impl\n-    .hidden _SafeFetchN_fault\n-    .hidden _SafeFetchN_continuation\n-    .hidden SafeFetch32_impl\n-    .hidden _SafeFetch32_fault\n-    .hidden _SafeFetch32_continuation\n+#include \"defs.S.inc\"\n@@ -45,2 +33,2 @@\n-SafeFetch32_impl:\n-_SafeFetch32_fault:\n+DECLARE_FUNC(SafeFetch32_impl):\n+DECLARE_FUNC(_SafeFetch32_fault):\n@@ -49,1 +37,1 @@\n-_SafeFetch32_continuation:\n+DECLARE_FUNC(_SafeFetch32_continuation):\n@@ -58,2 +46,2 @@\n-SafeFetchN_impl:\n-_SafeFetchN_fault:\n+DECLARE_FUNC(SafeFetchN_impl):\n+DECLARE_FUNC(_SafeFetchN_fault):\n@@ -62,1 +50,1 @@\n-_SafeFetchN_continuation:\n+DECLARE_FUNC(_SafeFetchN_continuation):\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/safefetch_linux_s390.S","additions":7,"deletions":19,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-        .globl  SpinPause\n+#include \"defs.S.inc\"\n@@ -32,24 +32,0 @@\n-        .globl _Copy_arrayof_conjoint_bytes\n-        .globl _Copy_conjoint_jshorts_atomic\n-        .globl _Copy_arrayof_conjoint_jshorts\n-        .globl _Copy_conjoint_jints_atomic\n-        .globl _Copy_arrayof_conjoint_jints\n-        .globl _Copy_conjoint_jlongs_atomic\n-        .globl _mmx_Copy_arrayof_conjoint_jshorts\n-\n-        .globl _Atomic_cmpxchg_long\n-        .globl _Atomic_move_long\n-\n-        .hidden  SpinPause\n-\n-        .hidden _Copy_arrayof_conjoint_bytes\n-        .hidden _Copy_conjoint_jshorts_atomic\n-        .hidden _Copy_arrayof_conjoint_jshorts\n-        .hidden _Copy_conjoint_jints_atomic\n-        .hidden _Copy_arrayof_conjoint_jints\n-        .hidden _Copy_conjoint_jlongs_atomic\n-        .hidden _mmx_Copy_arrayof_conjoint_jshorts\n-\n-        .hidden _Atomic_cmpxchg_long\n-        .hidden _Atomic_move_long\n-\n@@ -58,1 +34,0 @@\n-        .type   SpinPause,@function\n@@ -60,1 +35,1 @@\n-SpinPause:\n+DECLARE_FUNC(SpinPause):\n@@ -71,2 +46,1 @@\n-        .type    _Copy_arrayof_conjoint_bytes,@function\n-_Copy_arrayof_conjoint_bytes:\n+DECLARE_FUNC(_Copy_arrayof_conjoint_bytes):\n@@ -159,2 +133,1 @@\n-        .type    _Copy_conjoint_jshorts_atomic,@function\n-_Copy_conjoint_jshorts_atomic:\n+DECLARE_FUNC(_Copy_conjoint_jshorts_atomic):\n@@ -246,2 +219,1 @@\n-        .type    _Copy_arrayof_conjoint_jshorts,@function\n-_Copy_arrayof_conjoint_jshorts:\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jshorts):\n@@ -323,4 +295,2 @@\n-        .type    _Copy_conjoint_jints_atomic,@function\n-        .type    _Copy_arrayof_conjoint_jints,@function\n-_Copy_conjoint_jints_atomic:\n-_Copy_arrayof_conjoint_jints:\n+DECLARE_FUNC(_Copy_conjoint_jints_atomic):\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jints):\n@@ -400,2 +370,1 @@\n-        .type    _Copy_conjoint_jlongs_atomic,@function\n-_Copy_conjoint_jlongs_atomic:\n+DECLARE_FUNC(_Copy_conjoint_jlongs_atomic):\n@@ -429,2 +398,1 @@\n-        .type    _mmx_Copy_arrayof_conjoint_jshorts,@function\n-_mmx_Copy_arrayof_conjoint_jshorts:\n+DECLARE_FUNC(_mmx_Copy_arrayof_conjoint_jshorts):\n@@ -527,2 +495,1 @@\n-        .type    _Atomic_cmpxchg_long,@function\n-_Atomic_cmpxchg_long:\n+DECLARE_FUNC(_Atomic_cmpxchg_long):\n@@ -546,2 +513,1 @@\n-        .type    _Atomic_move_long,@function\n-_Atomic_move_long:\n+DECLARE_FUNC(_Atomic_move_long):\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/linux_x86_32.S","additions":11,"deletions":45,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-        .globl SpinPause\n+#include \"defs.S.inc\"\n@@ -32,18 +32,0 @@\n-        .globl _Copy_arrayof_conjoint_bytes\n-        .globl _Copy_arrayof_conjoint_jshorts\n-        .globl _Copy_conjoint_jshorts_atomic\n-        .globl _Copy_arrayof_conjoint_jints\n-        .globl _Copy_conjoint_jints_atomic\n-        .globl _Copy_arrayof_conjoint_jlongs\n-        .globl _Copy_conjoint_jlongs_atomic\n-\n-        .hidden SpinPause\n-\n-        .hidden _Copy_arrayof_conjoint_bytes\n-        .hidden _Copy_arrayof_conjoint_jshorts\n-        .hidden _Copy_conjoint_jshorts_atomic\n-        .hidden _Copy_arrayof_conjoint_jints\n-        .hidden _Copy_conjoint_jints_atomic\n-        .hidden _Copy_arrayof_conjoint_jlongs\n-        .hidden _Copy_conjoint_jlongs_atomic\n-\n@@ -53,2 +35,1 @@\n-        .type  SpinPause,@function\n-SpinPause:\n+DECLARE_FUNC(SpinPause):\n@@ -68,2 +49,1 @@\n-        .type    _Copy_arrayof_conjoint_bytes,@function\n-_Copy_arrayof_conjoint_bytes:\n+DECLARE_FUNC(_Copy_arrayof_conjoint_bytes):\n@@ -170,4 +150,2 @@\n-        .type    _Copy_arrayof_conjoint_jshorts,@function\n-        .type    _Copy_conjoint_jshorts_atomic,@function\n-_Copy_arrayof_conjoint_jshorts:\n-_Copy_conjoint_jshorts_atomic:\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jshorts):\n+DECLARE_FUNC(_Copy_conjoint_jshorts_atomic):\n@@ -260,4 +238,2 @@\n-        .type    _Copy_arrayof_conjoint_jints,@function\n-        .type    _Copy_conjoint_jints_atomic,@function\n-_Copy_arrayof_conjoint_jints:\n-_Copy_conjoint_jints_atomic:\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jints):\n+DECLARE_FUNC(_Copy_conjoint_jints_atomic):\n@@ -339,4 +315,2 @@\n-        .type    _Copy_arrayof_conjoint_jlongs,@function\n-        .type    _Copy_conjoint_jlongs_atomic,@function\n-_Copy_arrayof_conjoint_jlongs:\n-_Copy_conjoint_jlongs_atomic:\n+DECLARE_FUNC(_Copy_arrayof_conjoint_jlongs):\n+DECLARE_FUNC(_Copy_conjoint_jlongs_atomic):\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/linux_x86_64.S","additions":9,"deletions":35,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -24,3 +24,0 @@\n-    .globl SafeFetch32_impl\n-    .globl _SafeFetch32_fault\n-    .globl _SafeFetch32_continuation\n@@ -28,3 +25,1 @@\n-    .hidden SafeFetch32_impl\n-    .hidden _SafeFetch32_fault\n-    .hidden _SafeFetch32_continuation\n+#include \"defs.S.inc\"\n@@ -39,2 +34,1 @@\n-    .type _SafeFetch32_impl,@function\n-SafeFetch32_impl:\n+DECLARE_FUNC(SafeFetch32_impl):\n@@ -42,1 +36,1 @@\n-_SafeFetch32_fault:\n+DECLARE_FUNC(_SafeFetch32_fault):\n@@ -45,1 +39,1 @@\n-_SafeFetch32_continuation:\n+DECLARE_FUNC(_SafeFetch32_continuation):\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/safefetch_linux_x86_32.S","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -24,6 +24,0 @@\n-    .globl SafeFetch32_impl\n-    .globl SafeFetchN_impl\n-    .globl _SafeFetch32_fault\n-    .globl _SafeFetchN_fault\n-    .globl _SafeFetch32_continuation\n-    .globl _SafeFetchN_continuation\n@@ -31,6 +25,1 @@\n-    .hidden SafeFetch32_impl\n-    .hidden SafeFetchN_impl\n-    .hidden _SafeFetch32_fault\n-    .hidden _SafeFetchN_fault\n-    .hidden _SafeFetch32_continuation\n-    .hidden _SafeFetchN_continuation\n+#include \"defs.S.inc\"\n@@ -40,1 +29,0 @@\n-\n@@ -45,3 +33,2 @@\n-    .type    SafeFetch32_impl,@function\n-SafeFetch32_impl:\n-_SafeFetch32_fault:\n+DECLARE_FUNC(SafeFetch32_impl):\n+DECLARE_FUNC(_SafeFetch32_fault):\n@@ -50,1 +37,1 @@\n-_SafeFetch32_continuation:\n+DECLARE_FUNC(_SafeFetch32_continuation):\n@@ -58,3 +45,2 @@\n-    .type    SafeFetchN_impl,@function\n-SafeFetchN_impl:\n-_SafeFetchN_fault:\n+DECLARE_FUNC(SafeFetchN_impl):\n+DECLARE_FUNC(_SafeFetchN_fault):\n@@ -63,1 +49,1 @@\n-_SafeFetchN_continuation:\n+DECLARE_FUNC(_SafeFetchN_continuation):\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/safefetch_linux_x86_64.S","additions":7,"deletions":21,"binary":false,"changes":28,"status":"modified"}]}