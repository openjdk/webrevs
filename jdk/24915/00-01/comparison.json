{"files":[{"patch":"@@ -901,12 +901,7 @@\n-  if (!is_humongous(word_size)) {\n-    \/\/ In a G1 heap, we're supposed to keep allocation from failing by\n-    \/\/ incremental pauses.  Therefore, at least for now, we'll favor\n-    \/\/ expansion over collection.  (This might change in the future if we can\n-    \/\/ do something smarter than full collection to satisfy a failed alloc.)\n-    \/\/\n-    \/\/ For humongous objects, we should have expanded the heap on the first\n-    \/\/ attempt_allocation_at_safepoint above.\n-    result = expand_and_allocate(word_size);\n-    if (result != nullptr) {\n-      return result;\n-    }\n+  \/\/ In a G1 heap, we're supposed to keep allocation from failing by\n+  \/\/ incremental pauses.  Therefore, at least for now, we'll favor\n+  \/\/ expansion over collection.  (This might change in the future if we can\n+  \/\/ do something smarter than full collection to satisfy a failed alloc.)\n+  result = expand_and_allocate(word_size);\n+  if (result != nullptr) {\n+    return result;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"}]}