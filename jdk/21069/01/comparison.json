{"files":[{"patch":"@@ -83,0 +83,9 @@\n+    if (!FLAG_IS_DEFAULT(EnableJVMCI) && !EnableJVMCI) {\n+      jio_fprintf(defaultStream::error_stream(),\n+          \"Improperly specified VM option UseJVMCICompiler: EnableJVMCI cannot be disabled\\n\");\n+      return false;\n+    }\n+    FLAG_SET_DEFAULT(EnableJVMCI, true);\n+  }\n+\n+  if (EnableJVMCI) {\n@@ -91,6 +100,3 @@\n-    if (!FLAG_IS_DEFAULT(EnableJVMCI) && !EnableJVMCI) {\n-      jio_fprintf(defaultStream::error_stream(),\n-          \"Improperly specified VM option UseJVMCICompiler: EnableJVMCI cannot be disabled\\n\");\n-      return false;\n-    }\n-    FLAG_SET_DEFAULT(EnableJVMCI, true);\n+  }\n+\n+  if (UseJVMCICompiler) {\n","filename":"src\/hotspot\/share\/jvmci\/jvmci_globals.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -107,0 +107,1 @@\n+                        String reason;\n@@ -108,1 +109,1 @@\n-                            throw runtime.exitHotSpotWithMessage(1, \"JVMCI compiler '%s' not found in JVMCI native library.%n\" +\n+                            reason = String.format(\"JVMCI compiler '%s' not found in JVMCI native library.%n\" +\n@@ -111,0 +112,2 @@\n+                        } else {\n+                            reason = String.format(\"JVMCI compiler '%s' specified by %s not found%n\", compilerName, compPropertyName);\n@@ -112,1 +115,1 @@\n-                        throw runtime.exitHotSpotWithMessage(1, \"JVMCI compiler '%s' specified by %s not found%n\", compilerName, compPropertyName);\n+                        factory = new DummyCompilerFactory(reason, runtime);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotJVMCICompilerConfig.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}