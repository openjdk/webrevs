{"files":[{"patch":"@@ -837,1 +837,2 @@\n-      if (strcmp(e->name(), entry->name()) == 0) {\n+      if (strcmp(e->name(), entry->name()) == 0 &&\n+          e->from_class_path_attr() == entry->from_class_path_attr()) {\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+ * @compile test-classes\/Hello.java\n@@ -47,0 +48,1 @@\n+    testClassPathAttrJarOnCP();\n@@ -129,0 +131,56 @@\n+  static void testClassPathAttrJarOnCP() throws Exception {\n+    String helloJar = JarBuilder.getOrCreateHelloJar();\n+    String jar1 = TestCommon.getTestJar(\"cpattr1.jar\");\n+    String cp = jar1 + File.pathSeparator + helloJar;\n+\n+    \/\/ The cpattr1.jar contains \"Class-Path: cpattr2.jar\".\n+    \/\/ The cpattr2.jar contains \"Class-Path: cpattr3.jar cpattr5_123456789_223456789_323456789_42345678.jar\".\n+    \/\/ With -cp cpattr1:hello.jar, the following shared paths should be stored in the CDS archive:\n+    \/\/ cpattr1.jar:cpattr2.jar:cpattr3.jar:cpattr5_123456789_223456789_323456789_42345678.jari:hello.jar\n+    TestCommon.testDump(cp, TestCommon.list(\"Hello\"), \"-Xlog:class+path\");\n+\n+    \/\/ Run with the same -cp apattr1.jar:hello.jar. The Hello class should be\n+    \/\/ loaded from the archive.\n+    TestCommon.run(\"-Xlog:class+path,class+load\",\n+                   \"-cp\", cp,\n+                   \"Hello\")\n+              .assertNormalExit(output -> {\n+                  output.shouldContain(\"Hello source: shared objects file\");\n+                });\n+\n+    \/\/ Run with -cp apattr1.jar:cpattr2.jar:hello.jar. App classpath mismatch should be detected.\n+    String jar2 = TestCommon.getTestJar(\"cpattr2.jar\");\n+    cp = jar1 + File.pathSeparator + jar2 + File.pathSeparator + helloJar;\n+    TestCommon.run(\"-Xlog:class+path,class+load\",\n+                   \"-cp\", cp,\n+                   \"Hello\")\n+              .assertAbnormalExit(output -> {\n+                  output.shouldMatch(\".*APP classpath mismatch, actual: -Djava.class.path=.*cpattr1.jar.*cpattr2.jar.*hello.jar\")\n+              .shouldContain(\"Unable to use shared archive.\");\n+                });\n+\n+    \/\/ Run with different -cp cpattr2.jar:hello.jar. App classpath mismatch should be detected.\n+    cp = jar2 + File.pathSeparator + helloJar;\n+    TestCommon.run(\"-Xlog:class+path,class+load\",\n+                   \"-cp\", cp,\n+                   \"Hello\")\n+              .assertAbnormalExit(output -> {\n+                  output.shouldMatch(\".*APP classpath mismatch, actual: -Djava.class.path=.*cpattr2.jar.*hello.jar\")\n+              .shouldContain(\"Unable to use shared archive.\");\n+                });\n+\n+    \/\/ Dumping with -cp cpattr1.jar:cpattr2.jar:hello.jar\n+    \/\/ The cpattr2.jar is from the Class-Path: attribute of cpattr1.jar.\n+    cp = jar1 + File.pathSeparator + jar2 + File.pathSeparator + helloJar;\n+    TestCommon.testDump(cp, TestCommon.list(\"Hello\"), \"-Xlog:class+path\");\n+\n+    \/\/ Run with the same -cp as dump time. The Hello class should be loaded from the archive.\n+    TestCommon.run(\"-Xlog:class+path,class+load\",\n+                   \"-cp\", cp,\n+                   \"Hello\")\n+              .assertNormalExit(output -> {\n+                  output.shouldContain(\"Hello source: shared objects file\");\n+                });\n+\n+  }\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ClassPathAttr.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"modified"}]}