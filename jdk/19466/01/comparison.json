{"files":[{"patch":"@@ -433,16 +433,0 @@\n-\n-    @Override\n-    protected Navigation getNavBar(PageMode pageMode, Element element) {\n-        List<Content> subnavLinks = new ArrayList<>();\n-        if (configuration.showModules) {\n-            subnavLinks.add(getBreadcrumbLink(utils.elementUtils.getModuleOf(typeElement), false));\n-        }\n-        \/\/ We may generate a class-use page for an otherwise undocumented page in the condition below.\n-        boolean isUndocumented = options.noDeprecated() && utils.isDeprecated(typeElement);\n-        subnavLinks.add(getBreadcrumbLink(utils.containingPackage(typeElement), isUndocumented));\n-        if (!isUndocumented) {\n-            subnavLinks.add(getBreadcrumbLink(typeElement, true));\n-        }\n-\n-        return super.getNavBar(pageMode, element).setSubNavLinks(subnavLinks);\n-    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.util.ArrayList;\n@@ -452,11 +451,0 @@\n-    @Override\n-    protected Navigation getNavBar(PageMode pageMode, Element element) {\n-        List<Content> subnavLinks = new ArrayList<>();\n-        if (configuration.showModules) {\n-            subnavLinks.add(getBreadcrumbLink(utils.elementUtils.getModuleOf(typeElement), false));\n-        }\n-        subnavLinks.add(getBreadcrumbLink(utils.containingPackage(typeElement), false));\n-        subnavLinks.add(getBreadcrumbLink(typeElement, true));\n-        return super.getNavBar(pageMode, element).setSubNavLinks(subnavLinks);\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriter.java","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -217,13 +217,0 @@\n-        @Override\n-        protected Navigation getNavBar(PageMode pageMode, Element element) {\n-            List<Content> subnavLinks = new ArrayList<>();\n-            var pkg = dfElement.getPackageElement();\n-            if (configuration.showModules) {\n-                subnavLinks.add(getBreadcrumbLink(utils.elementUtils.getModuleOf(element), pkg.isUnnamed()));\n-            }\n-            if (!pkg.isUnnamed()) {\n-                subnavLinks.add(getBreadcrumbLink(pkg, true));\n-            }\n-            return super.getNavBar(pageMode, element).setSubNavLinks(subnavLinks);\n-        }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DocFilesHandler.java","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -753,23 +753,0 @@\n-    \/**\n-     * {@return a content element containing a breadcrumb navigtation link for {@code elem}}\n-     * Only module, package and type elements can appear in breadcrumb navigation.\n-     *\n-     * @param elem the element\n-     * @param selected whether to use the style for current page element\n-     *\/\n-    protected Content getBreadcrumbLink(Element elem, boolean selected) {\n-        HtmlTree link = switch (elem) {\n-            case ModuleElement mdle -> links.createLink(pathToRoot.resolve(docPaths.moduleSummary(mdle)),\n-                    Text.of(mdle.getQualifiedName()));\n-            case PackageElement pkg -> links.createLink(pathString(pkg, DocPaths.PACKAGE_SUMMARY),\n-                    getLocalizedPackageName(pkg));\n-            case TypeElement type -> links.createLink(pathString(type, docPaths.forName(type)),\n-                    utils.getSimpleName(type));\n-            default -> throw new IllegalArgumentException(Objects.toString(elem));\n-        };\n-        if (selected) {\n-            link.setStyle(HtmlStyle.currentSelection);\n-        }\n-        return link;\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":0,"deletions":23,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -277,6 +277,0 @@\n-    @Override\n-    protected Navigation getNavBar(PageMode pageMode, Element element) {\n-        return super.getNavBar(pageMode, element)\n-                .setSubNavLinks(List.of(getBreadcrumbLink(mdle, true)));\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriter.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Objects;\n@@ -32,0 +33,1 @@\n+import javax.lang.model.element.ElementKind;\n@@ -71,1 +73,0 @@\n-    private List<Content> subNavLinks = List.of();\n@@ -123,5 +124,0 @@\n-    public Navigation setSubNavLinks(List<Content> subNavLinks) {\n-        this.subNavLinks = subNavLinks;\n-        return this;\n-    }\n-\n@@ -323,20 +319,0 @@\n-    \/**\n-     * Adds the navigation Type detail link.\n-     *\n-     * @param kind the kind of member being documented\n-     * @param link true if the members are listed and need to be linked\n-     * @param listContents the list of contents to which the detail will be added.\n-     *\/\n-    protected void addTypeDetailLink(VisibleMemberTable.Kind kind, boolean link, List<Content> listContents) {\n-        addContentToList(listContents, switch (kind) {\n-            case CONSTRUCTORS -> links.createLinkOrLabel(HtmlIds.CONSTRUCTOR_DETAIL, contents.navConstructor, link);\n-            case ENUM_CONSTANTS -> links.createLinkOrLabel(HtmlIds.ENUM_CONSTANT_DETAIL, contents.navEnum, link);\n-            case FIELDS -> links.createLinkOrLabel(HtmlIds.FIELD_DETAIL, contents.navField, link);\n-            case METHODS -> links.createLinkOrLabel(HtmlIds.METHOD_DETAIL, contents.navMethod, link);\n-            case PROPERTIES -> links.createLinkOrLabel(HtmlIds.PROPERTY_DETAIL, contents.navProperty, link);\n-            case ANNOTATION_TYPE_MEMBER -> links.createLinkOrLabel(HtmlIds.ANNOTATION_TYPE_ELEMENT_DETAIL,\n-                    contents.navAnnotationTypeMember, link);\n-            default -> Text.EMPTY;\n-        });\n-    }\n-\n@@ -400,0 +376,40 @@\n+    \/**\n+     * Adds breadcrumb navigation links for {@code element} and its containing elements\n+     * to {@code contents}. Only module, package and type elements are supported in\n+     * breadcrumb navigation.\n+     *\n+     * @param elem a module, package or type element\n+     * @param contents the list to which links are added\n+     * @param selected {@code true} if elem is the current page element\n+     *\/\n+    protected void addBreadcrumbLinks(Element elem, List<Content> contents, boolean selected) {\n+        if (elem == null) {\n+            return;\n+        } else if (elem.getKind() != ElementKind.MODULE) {\n+            addBreadcrumbLinks(elem.getEnclosingElement(), contents, false);\n+        } else if (!configuration.showModules) {\n+            return;\n+        }\n+        var docPaths = configuration.docPaths;\n+        HtmlTree link = switch (elem) {\n+            case ModuleElement mdle -> links.createLink(pathToRoot.resolve(\n+                    docPaths.moduleSummary(mdle)),\n+                    Text.of(mdle.getQualifiedName()));\n+            case PackageElement pkg -> links.createLink(pathToRoot.resolve(\n+                    docPaths.forPackage(pkg).resolve(DocPaths.PACKAGE_SUMMARY)),\n+                    pkg.isUnnamed()\n+                            ? configuration.contents.defaultPackageLabel\n+                            : Text.of(pkg.getQualifiedName()));\n+            \/\/ Breadcrumb navigation displays nested classes as separate links.\n+            \/\/ Enclosing classes may be undocumented, in which case we just display the class name.\n+            case TypeElement type -> (configuration.isGeneratedDoc(type) && !configuration.utils.hasHiddenTag(type))\n+                    ? links.createLink(pathToRoot.resolve(\n+                            docPaths.forClass(type)), type.getSimpleName().toString())\n+                    : HtmlTree.SPAN(Text.of(type.getSimpleName().toString()));\n+            default -> throw new IllegalArgumentException(Objects.toString(elem));\n+        };\n+        if (selected) {\n+            link.setStyle(HtmlStyle.currentSelection);\n+        }\n+        contents.add(link);\n+    }\n@@ -533,1 +549,6 @@\n-\n+        List<Content> subNavLinks = new ArrayList<>();\n+        switch (documentedPage) {\n+            case MODULE, PACKAGE, CLASS, USE, DOC_FILE, TREE -> {\n+                addBreadcrumbLinks(element, subNavLinks, true);\n+            }\n+        }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Navigation.java","additions":48,"deletions":27,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -133,12 +133,0 @@\n-    @Override\n-    protected Navigation getNavBar(PageMode pageMode, Element element) {\n-        List<Content> subnavLinks = new ArrayList<>();\n-        if (configuration.showModules) {\n-            var mdle = utils.elementUtils.getModuleOf(packageElement);\n-            subnavLinks.add(getModuleLink(mdle, Text.of(mdle.getQualifiedName())));\n-        }\n-        subnavLinks.add(links.createLink(pathString(packageElement, DocPaths.PACKAGE_SUMMARY),\n-                getLocalizedPackageName(packageElement), HtmlStyle.currentSelection, \"\"));\n-        return super.getNavBar(pageMode, element).setSubNavLinks(subnavLinks);\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageTreeWriter.java","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -218,10 +218,0 @@\n-\n-    @Override\n-    protected Navigation getNavBar(PageMode pageMode, Element element) {\n-        List<Content> subnavLinks = new ArrayList<>();\n-        if (configuration.showModules) {\n-            subnavLinks.add(getBreadcrumbLink(utils.elementUtils.getModuleOf(packageElement), false));\n-        }\n-        subnavLinks.add(getBreadcrumbLink(packageElement, true));\n-        return super.getNavBar(pageMode, element).setSubNavLinks(subnavLinks);\n-    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageUseWriter.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -271,10 +271,0 @@\n-    @Override\n-    protected Navigation getNavBar(PageMode pageMode, Element element) {\n-        List<Content> subnavLinks = new ArrayList<>();\n-        if (configuration.showModules) {\n-            subnavLinks.add(getBreadcrumbLink(utils.elementUtils.getModuleOf(packageElement), false));\n-        }\n-        subnavLinks.add(getBreadcrumbLink(packageElement, true));\n-        return super.getNavBar(pageMode, element).setSubNavLinks(subnavLinks);\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriter.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- *           8196200 8196202 8223378 8258659 8261976 8320458\n+ *           8196200 8196202 8223378 8258659 8261976 8320458 8329537\n@@ -181,0 +181,6 @@\n+                \"\"\"\n+                    <ol class=\"sub-nav-list\">\n+                    <li><a href=\"package-summary.html\">pkg1<\/a><\/li>\n+                    <li><a href=\"A.html\">A<\/a><\/li>\n+                    <li><a href=\"A.X.html\" class=\"current-selection\">X<\/a><\/li>\n+                    <\/ol>\"\"\",\n@@ -206,0 +212,6 @@\n+                \"\"\"\n+                    <ol class=\"sub-nav-list\">\n+                    <li><a href=\"package-summary.html\">pkg1<\/a><\/li>\n+                    <li><a href=\"A.html\">A<\/a><\/li>\n+                    <li><a href=\"A.Y.html\" class=\"current-selection\">Y<\/a><\/li>\n+                    <\/ol>\"\"\",\n@@ -221,0 +233,7 @@\n+                \"\"\"\n+                    <ol class=\"sub-nav-list\">\n+                    <li><a href=\"package-summary.html\">pkg1<\/a><\/li>\n+                    <li><a href=\"A.html\">A<\/a><\/li>\n+                    <li><a href=\"A.X.html\">X<\/a><\/li>\n+                    <li><a href=\"A.X.IC.html\" class=\"current-selection\">IC<\/a><\/li>\n+                    <\/ol>\"\"\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNavigation\/TestNavigation.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"}]}