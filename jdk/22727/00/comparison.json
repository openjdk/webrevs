{"files":[{"patch":"@@ -58,0 +58,1 @@\n+    private Throwable transformerException;\n@@ -112,3 +113,5 @@\n-        \/\/ With this call here, we will see the target class once:\n-        \/\/ when it gets retransformed.\n-        \/\/addTransformerToManager(fInst, new MyObserver(), true);\n+        \/\/ check for unexpected errors (see JDK-8311534)\n+        if (transformerException != null) {\n+            transformerException.printStackTrace();\n+            throw new RuntimeException(\"Error in transformer\" + transformerException);\n+        }\n@@ -250,2 +253,14 @@\n-            System.out.println(this + \".transform() sees '\" + className\n-                + \"' of \" + classfileBuffer.length + \" bytes.\");\n+            \/\/ String concatenation can cause LinkageError or ClassCircularityError (see JDK-8311534).\n+            \/\/ Need to log it for analysis.\n+            try {\n+                System.out.println(this + \".transform() sees '\" + className\n+                    + \"' of \" + classfileBuffer.length + \" bytes.\");\n+            } catch (Throwable t) {\n+                \/\/ try to log, save the error for handling by main thread if the logging fails\n+                try {\n+                    transformerException.printStackTrace();\n+                } catch (Throwable t1) {\n+                    transformerException = t;\n+                }\n+                return null;\n+            }\n","filename":"test\/jdk\/java\/lang\/instrument\/VerifyLocalVariableTableOnRetransformTest.java","additions":20,"deletions":5,"binary":false,"changes":25,"status":"modified"}]}