{"files":[{"patch":"@@ -56,1 +56,1 @@\n-  _predictor(G1ConfidencePercent \/ 100.0),\n+  _predictor((100 - G1ConfidencePercent) \/ 100.0),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,2 +32,3 @@\n- private:\n-  double _sigma;\n+private:\n+  \/\/ Scale factor indicating to which degree stddev should be taking into account in predictions.\n+  double _stddev_scale;\n@@ -49,4 +50,0 @@\n- public:\n-  G1Predictions(double sigma) : _sigma(sigma) {\n-    assert(sigma >= 0.0, \"Confidence must be larger than or equal to zero\");\n-  }\n@@ -54,2 +51,4 @@\n-  \/\/ Confidence factor.\n-  double sigma() const { return _sigma; }\n+public:\n+  G1Predictions(double sigma_scale) : _stddev_scale(sigma_scale) {\n+    assert(sigma_scale >= 0.0, \"must be larger than or equal to zero\");\n+  }\n@@ -58,1 +57,1 @@\n-    return seq->davg() + _sigma * stddev_estimate(seq);\n+    return seq->davg() + _stddev_scale * stddev_estimate(seq);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Predictions.hpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -114,1 +114,2 @@\n-          \"Confidence level for MMU\/pause predictions\")                     \\\n+          \"Confidence level for MMU\/pause predictions. A higher value \"     \\\n+          \"means that G1 will use less safety margin for its predictions.\") \\\n","filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}