{"files":[{"patch":"@@ -184,3 +184,2 @@\n-            InstantiationException,\n-            MalformedURLException {\n-        Class<?> clas = null;\n+            InstantiationException {\n+        Class<?> clas;\n@@ -196,9 +195,0 @@\n-            \/\/ ignore and continue\n-            \/\/ e.printStackTrace();\n-        }\n-        \/\/ All other exceptions are passed up.\n-\n-        \/\/ Not in class path; loading of a factory from remote\n-        \/\/ codebase is not supported\n-        if (clas == null &&\n-            ref.getFactoryClassLocation() != null) {\n@@ -207,1 +197,1 @@\n-\n+        assert clas != null;\n@@ -209,1 +199,1 @@\n-        ObjectFactory result = (clas != null) ? (ObjectFactory) clas.newInstance() : null;\n+        ObjectFactory result = (ObjectFactory) clas.newInstance();\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/naming\/internal\/NamingManagerHelper.java","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -126,4 +126,4 @@\n-     *    The factory class downloading from a location specified in the reference\n-     *    is not supported, unless a custom {@link ObjectFactoryBuilder}\n-     *    {@linkplain #setObjectFactoryBuilder(ObjectFactoryBuilder) is set}\n-     *    to determine object factories load policy.\n+     *    Downloading a factory class from a location specified in the reference\n+     *    is not supported out of the box. A custom {@link ObjectFactoryBuilder}\n+     *    {@linkplain #setObjectFactoryBuilder(ObjectFactoryBuilder) may be used}\n+     *    if a different policy is desired.\n","filename":"src\/java.naming\/share\/classes\/javax\/naming\/spi\/NamingManager.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -470,3 +470,3 @@\n-             * Classes may only be loaded from an arbitrary URL codebase when\n-             *  a custom ObjectFactoryBuilder() is setup, otherwise load from\n-             *  arbitrary URL codebase is disabled.\n+             * Downloading a factory class from a location specified in the reference\n+             * is not supported out of the box. A custom \"ObjectFactoryBuilder\"\n+             * may be used if a different policy is desired.\n","filename":"src\/jdk.naming.rmi\/share\/classes\/com\/sun\/jndi\/rmi\/registry\/RegistryContext.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -223,1 +223,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/com\/sun\/jndi\/rmi\/registry\/objects\/ObjectFactoryBuilderCodebaseTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/com\/sun\/jndi\/rmi\/registry\/objects\/TestObjectFactoryBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}