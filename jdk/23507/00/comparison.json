{"files":[{"patch":"@@ -1356,0 +1356,1 @@\n+                permitted.add(index, element);\n@@ -1357,1 +1358,0 @@\n-            permitted.add(index, element);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -135,1 +135,4 @@\n-        Assert.check(permittedSubclasses.permittedSubclasses().size() == expectedSubTypeNames.size());\n+        Assert.check(permittedSubclasses.permittedSubclasses().size() == expectedSubTypeNames.size(),\n+                String.format(\"%s != %s\",\n+                        permittedSubclasses.permittedSubclasses(),\n+                        expectedSubTypeNames));\n@@ -729,0 +732,29 @@\n+\n+    @Test\n+    public void testDuplicatePermittedSubclassesDoclint(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        Path foo = src.resolve(\"Foo.java\");\n+\n+        tb.writeFile(foo,\n+                \"\"\"\n+                public class Foo {\n+                  private enum E {\n+                    INSTANCE {\n+                      \/** foo {@link E} *\/\n+                      void f() {}\n+                    };\n+                    void f() {}\n+                  }\n+                }\n+                \"\"\");\n+\n+        Path out = base.resolve(\"out\");\n+        Files.createDirectories(out);\n+\n+        new JavacTask(tb)\n+                .options(\"-Xdoclint:html,syntax\")\n+                .outdir(out)\n+                .files(foo)\n+                .run();\n+        checkSealedClassFile(out, \"Foo$E.class\", List.of(\"Foo$E$1\"));\n+    }\n","filename":"test\/langtools\/tools\/javac\/sealed\/SealedDiffConfigurationsTest.java","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"}]}