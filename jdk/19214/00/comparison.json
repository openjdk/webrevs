{"files":[{"patch":"@@ -175,1 +175,1 @@\n-      size_t alloc_size = _local_table->get_node_size() + value.byte_size() + value.effective_length();\n+      size_t alloc_size = SymbolTableHash::get_dynamic_node_size(value.byte_size());\n@@ -185,1 +185,1 @@\n-    size_t alloc_size = size + value.byte_size() + value.effective_length();\n+    size_t alloc_size = SymbolTableHash::get_dynamic_node_size(value.byte_size());\n","filename":"src\/hotspot\/share\/classfile\/symbolTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-    \/\/ minimum number of natural words needed to hold these bits (no non-heap version)\n+    \/\/ minimum number of bytes needed to hold these bits (no non-heap version)\n@@ -149,2 +149,0 @@\n-  \/\/ length without the _body\n-  size_t effective_length() const { return (size_t)byte_size() - sizeof(Symbol); }\n","filename":"src\/hotspot\/share\/oops\/symbol.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,0 +94,7 @@\n+\n+    static bool is_dynamic_sized_value_compatible() {\n+      \/\/ To support dynamically sized Value types, where part of the payload is\n+      \/\/ allocated beyond the end of the object, it must be that the _value\n+      \/\/ field ends where the Node object ends. (No end padding).\n+      return offset_of(Node, _value) + sizeof(_value) == sizeof(Node);\n+    }\n@@ -422,0 +429,1 @@\n+  static size_t get_dynamic_node_size(size_t value_size);\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1058,0 +1058,9 @@\n+template <typename CONFIG, MEMFLAGS F>\n+inline size_t ConcurrentHashTable<CONFIG, F>::\n+  get_dynamic_node_size(size_t value_size)\n+{\n+  assert(Node::is_dynamic_sized_value_compatible(), \"VALUE must be compatible\");\n+  assert(value_size >= sizeof(VALUE), \"must include the VALUE\");\n+  return sizeof(Node) - sizeof(VALUE) + value_size;\n+}\n+\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.inline.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}