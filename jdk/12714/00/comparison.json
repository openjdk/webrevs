{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,3 @@\n-    private List<Filter> filters;\n-    private transient ChangedEvent<FilterChain> changedEvent;\n+    private final List<Filter> filters;\n+    private final transient ChangedEvent<FilterChain> changedEvent;\n+    private String name;\n@@ -43,1 +44,1 @@\n-    private ChangedListener<Filter> changedListener = new ChangedListener<Filter>() {\n+    private final ChangedListener<Filter> changedListener = new ChangedListener<Filter>() {\n@@ -50,1 +51,2 @@\n-    public FilterChain() {\n+    public FilterChain(String name) {\n+        this.name = name;\n@@ -55,2 +57,2 @@\n-    public FilterChain(FilterChain f) {\n-        this.filters = new ArrayList<>(f.filters);\n+    public FilterChain() {\n+        filters = new ArrayList<>();\n@@ -65,5 +67,0 @@\n-    public Filter getFilterAt(int index) {\n-        assert index >= 0 && index < filters.size();\n-        return filters.get(index);\n-    }\n-\n@@ -85,1 +82,0 @@\n-\n@@ -93,1 +89,0 @@\n-\n@@ -132,0 +127,6 @@\n+    public void addFilters(List<Filter> filtersToAdd) {\n+        for (Filter filter : filtersToAdd) {\n+            addFilter(filter);\n+        }\n+    }\n+\n@@ -135,0 +136,12 @@\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return getName();\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/FilterChain.java","additions":27,"deletions":14,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+import com.sun.hotspot.igv.data.ChangedListener;\n+import javax.swing.JComboBox;\n+\n@@ -32,1 +35,7 @@\n-    public FilterChain getFilterChain();\n+    FilterChain getFilterChain();\n+\n+    FilterChain createNewDefaultFilterChain();\n+\n+    void setCustomFilterChain(FilterChain filterChain);\n+\n+    void selectFilterChain(FilterChain filterChain);\n@@ -34,1 +43,1 @@\n-    public FilterChain getSequence();\n+    void setFilterChainSelectionChangedListener(ChangedListener<JComboBox<FilterChain>> listener);\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/FilterChainProvider.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1,82 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-package com.sun.hotspot.igv.filter;\n-\n-import java.util.Collections;\n-import java.util.HashSet;\n-import java.util.Set;\n-\n-\/**\n- *\n- * @author Thomas Wuerthinger\n- *\/\n-public class FilterSetting {\n-\n-    private Set<Filter> filters;\n-    private String name;\n-\n-    public FilterSetting() {\n-        this(null);\n-    }\n-\n-    public FilterSetting(String name) {\n-        this.name = name;\n-        filters = new HashSet<>();\n-    }\n-\n-    public Set<Filter> getFilters() {\n-        return Collections.unmodifiableSet(filters);\n-    }\n-\n-    public void addFilter(Filter f) {\n-        assert !filters.contains(f);\n-        filters.add(f);\n-    }\n-\n-    public void removeFilter(Filter f) {\n-        assert filters.contains(f);\n-        filters.remove(f);\n-    }\n-\n-    public boolean containsFilter(Filter f) {\n-        return filters.contains(f);\n-    }\n-\n-    public String getName() {\n-        return name;\n-    }\n-\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n-\n-    public int getFilterCount() {\n-        return filters.size();\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return getName();\n-    }\n-}\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/FilterSetting.java","additions":0,"deletions":82,"binary":false,"changes":82,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import com.sun.hotspot.igv.data.ChangedListener;\n@@ -28,0 +29,1 @@\n+import javax.swing.JComboBox;\n@@ -39,1 +41,1 @@\n-        return FilterTopComponent.findInstance().getFilterChain();\n+        return FilterTopComponent.findInstance().getCurrentChain();\n@@ -43,2 +45,17 @@\n-    public FilterChain getSequence() {\n-        return FilterTopComponent.findInstance().getSequence();\n+    public FilterChain createNewDefaultFilterChain() {\n+        return FilterTopComponent.createNewDefaultFilterChain();\n+    }\n+\n+    @Override\n+    public void selectFilterChain(FilterChain filterChain) {\n+        FilterTopComponent.findInstance().selectFilterChain(filterChain);\n+    }\n+\n+    @Override\n+    public void setCustomFilterChain(FilterChain filterChain) {\n+        FilterTopComponent.findInstance().setCustomFilterChain(filterChain);\n+    }\n+\n+    @Override\n+    public void setFilterChainSelectionChangedListener(ChangedListener<JComboBox<FilterChain>> listener) {\n+        FilterTopComponent.findInstance().setFilterChainSelectionChangedListener(listener);\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterChainProviderImplementation.java","additions":21,"deletions":4,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    private Filter filter;\n+    private final Filter filter;\n@@ -109,1 +109,1 @@\n-        setSelected(source.getFilterChain().containsFilter(filter));\n+        setSelected(source.getCurrentChain().containsFilter(filter));\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterNode.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import com.sun.hotspot.igv.filter.FilterSetting;\n@@ -35,1 +34,0 @@\n-import java.awt.event.ActionEvent;\n@@ -70,1 +68,1 @@\n-public final class FilterTopComponent extends TopComponent implements LookupListener, ExplorerManager.Provider {\n+public final class FilterTopComponent extends TopComponent implements ExplorerManager.Provider {\n@@ -78,11 +76,10 @@\n-    private CheckListView view;\n-    private ExplorerManager manager;\n-    private FilterChain filterChain;\n-    private FilterChain sequence;\n-    private ScriptEngine engine;\n-    private Lookup.Result<FilterChain> result;\n-    private JComboBox comboBox;\n-    private List<FilterSetting> filterSettings;\n-    private FilterSetting customFilterSetting = new FilterSetting(\"-- Custom --\");\n-    private ChangedEvent<FilterTopComponent> filterSettingsChangedEvent;\n-    private ActionListener comboBoxActionListener = new ActionListener() {\n+    private final CheckListView view;\n+    private final ExplorerManager manager;\n+    private final ScriptEngine engine;\n+    private final JComboBox<FilterChain> comboBox;\n+    private final FilterChain allFilterChains = new FilterChain();\n+    private static final FilterChain defaultFilterChain = new FilterChain(\"DEFAULT\");\n+    private FilterChain customFilterChain;\n+    private final ChangedEvent<FilterTopComponent> filterSettingsChangedEvent;\n+    private ChangedEvent<JComboBox<FilterChain>> filterChainSelectionChangedEvent;\n+    private final ActionListener comboBoxSelectionChangedListener = l -> comboBoxSelectionChanged();\n@@ -90,5 +87,0 @@\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            comboBoxSelectionChanged();\n-        }\n-    };\n@@ -96,2 +88,4 @@\n-    public ChangedEvent<FilterTopComponent> getFilterSettingsChangedEvent() {\n-        return filterSettingsChangedEvent;\n+    public static FilterChain createNewDefaultFilterChain() {\n+        FilterChain newCustomFilterChain = new FilterChain(\"--Custom--\");\n+        newCustomFilterChain.addFilters(defaultFilterChain.getFilters());\n+        return newCustomFilterChain;\n@@ -100,3 +94,5 @@\n-    public FilterChain getSequence() {\n-        return sequence;\n-    }\n+    private FilterTopComponent() {\n+        filterSettingsChangedEvent = new ChangedEvent<>(this);\n+        initComponents();\n+        setName(NbBundle.getMessage(FilterTopComponent.class, \"CTL_FilterTopComponent\"));\n+        setToolTipText(NbBundle.getMessage(FilterTopComponent.class, \"HINT_FilterTopComponent\"));\n@@ -104,6 +100,6 @@\n-    public void updateSelection() {\n-        Node[] nodes = this.getExplorerManager().getSelectedNodes();\n-        int[] arr = new int[nodes.length];\n-        for (int i = 0; i < nodes.length; i++) {\n-            int index = sequence.getFilters().indexOf(((FilterNode) nodes[i]).getFilter());\n-            arr[i] = index;\n+        ScriptEngineManager sem = new ScriptEngineManager();\n+        engine = sem.getEngineByName(\"ECMAScript\");\n+        try {\n+            engine.eval(getJsHelperText());\n+        } catch (ScriptException ex) {\n+            Exceptions.printStackTrace(ex);\n@@ -111,1 +107,32 @@\n-        view.showSelection(arr);\n+        engine.getContext().getBindings(ScriptContext.ENGINE_SCOPE).put(\"IO\", System.out);\n+\n+        initFilters();\n+        customFilterChain = createNewDefaultFilterChain();\n+        comboBox = new JComboBox<>();\n+        comboBox.addItem(customFilterChain);\n+        comboBox.setSelectedItem(customFilterChain);\n+        filterChainSelectionChangedEvent = new ChangedEvent<>(comboBox);\n+\n+        manager = new ExplorerManager();\n+        manager.setRootContext(new AbstractNode(new FilterChildren()));\n+        associateLookup(ExplorerUtils.createLookup(manager, getActionMap()));\n+        view = new CheckListView();\n+\n+        ToolbarPool.getDefault().setPreferredIconSize(16);\n+        Toolbar toolBar = new Toolbar();\n+        toolBar.setBorder((Border) UIManager.get(\"Nb.Editor.Toolbar.border\")); \/\/NOI18N\n+        toolBar.setMinimumSize(new Dimension(0,0)); \/\/ MacOS BUG with ToolbarWithOverflow\n+\n+        toolBar.add(comboBox);\n+        this.add(toolBar, BorderLayout.NORTH);\n+        toolBar.add(SaveFilterSettingsAction.get(SaveFilterSettingsAction.class));\n+        toolBar.add(RemoveFilterSettingsAction.get(RemoveFilterSettingsAction.class));\n+        toolBar.addSeparator();\n+        toolBar.add(NewFilterAction.get(NewFilterAction.class));\n+        toolBar.add(RemoveFilterAction.get(RemoveFilterAction.class).createContextAwareInstance(this.getLookup()));\n+        toolBar.add(MoveFilterUpAction.get(MoveFilterUpAction.class).createContextAwareInstance(this.getLookup()));\n+        toolBar.add(MoveFilterDownAction.get(MoveFilterDownAction.class).createContextAwareInstance(this.getLookup()));\n+        this.add(view, BorderLayout.CENTER);\n+\n+        comboBox.addActionListener(comboBoxSelectionChangedListener);\n+        comboBoxSelectionChanged();\n@@ -114,1 +141,3 @@\n-    private void comboBoxSelectionChanged() {\n+    public ChangedEvent<FilterTopComponent> getFilterSettingsChangedEvent() {\n+        return filterSettingsChangedEvent;\n+    }\n@@ -116,6 +145,4 @@\n-        Object o = comboBox.getSelectedItem();\n-        if (o == null) {\n-            return;\n-        }\n-        assert o instanceof FilterSetting;\n-        FilterSetting s = (FilterSetting) o;\n+    public void setFilterChainSelectionChangedListener(ChangedListener<JComboBox<FilterChain>> listener) {\n+        filterChainSelectionChangedEvent = new ChangedEvent<>(comboBox);\n+        filterChainSelectionChangedEvent.addListener(listener);\n+    }\n@@ -123,12 +150,3 @@\n-        if (s != customFilterSetting) {\n-            FilterChain chain = getFilterChain();\n-            chain.getChangedEvent().beginAtomic();\n-            List<Filter> toRemove = new ArrayList<>();\n-            for (Filter f : chain.getFilters()) {\n-                if (!s.containsFilter(f)) {\n-                    toRemove.add(f);\n-                }\n-            }\n-            for (Filter f : toRemove) {\n-                chain.removeFilter(f);\n-            }\n+    public FilterChain getAllFilterChains() {\n+        return allFilterChains;\n+    }\n@@ -136,5 +154,3 @@\n-            for (Filter f : s.getFilters()) {\n-                if (!chain.containsFilter(f)) {\n-                    chain.addFilter(f);\n-                }\n-            }\n+    public FilterChain getCurrentChain() {\n+        return (FilterChain) comboBox.getSelectedItem();\n+    }\n@@ -142,4 +158,4 @@\n-            chain.getChangedEvent().endAtomic();\n-            filterSettingsChangedEvent.fire();\n-        } else {\n-            this.updateComboBoxSelection();\n+    public void selectFilterChain(FilterChain filterChain) {\n+        comboBox.setSelectedItem(filterChain);\n+        if (comboBox.getSelectedIndex() < 0) {\n+            comboBox.setSelectedIndex(0);\n@@ -147,0 +163,1 @@\n+    }\n@@ -148,2 +165,6 @@\n-        SystemAction.get(RemoveFilterSettingsAction.class).setEnabled(comboBox.getSelectedItem() != this.customFilterSetting);\n-        SystemAction.get(SaveFilterSettingsAction.class).setEnabled(comboBox.getSelectedItem() == this.customFilterSetting);\n+    public void setCustomFilterChain(FilterChain filterChain) {\n+        comboBox.removeActionListener(comboBoxSelectionChangedListener);\n+        comboBox.removeItem(customFilterChain);\n+        customFilterChain = filterChain;\n+        comboBox.insertItemAt(customFilterChain, 0);\n+        comboBox.addActionListener(comboBoxSelectionChangedListener);\n@@ -152,5 +173,4 @@\n-    private void updateComboBox() {\n-        comboBox.removeAllItems();\n-        comboBox.addItem(customFilterSetting);\n-        for (FilterSetting s : filterSettings) {\n-            comboBox.addItem(s);\n+    private void comboBoxSelectionChanged() {\n+        FilterChain currentChain = getCurrentChain();\n+        if (currentChain == null) {\n+            return;\n@@ -159,1 +179,5 @@\n-        this.updateComboBoxSelection();\n+        filterSettingsChangedEvent.fire();\n+        filterChainSelectionChangedEvent.fire();\n+        currentChain.getChangedEvent().fire();\n+        SystemAction.get(RemoveFilterSettingsAction.class).setEnabled(currentChain != customFilterChain);\n+        SystemAction.get(SaveFilterSettingsAction.class).setEnabled(true);\n@@ -166,3 +190,2 @@\n-\n-            FilterSetting toRemove = null;\n-            for (FilterSetting s : filterSettings) {\n+            for (int i=0; i<comboBox.getItemCount(); i++) {\n+                FilterChain s = comboBox.getItemAt(i);\n@@ -172,1 +195,1 @@\n-                        toRemove = s;\n+                        comboBox.removeItem(s);\n@@ -180,2 +203,4 @@\n-            if (toRemove != null) {\n-                filterSettings.remove(toRemove);\n+            FilterChain setting = new FilterChain(name);\n+            FilterChain chain = getCurrentChain();\n+            for (Filter f : chain.getFilters()) {\n+                setting.addFilter(f);\n@@ -183,2 +208,0 @@\n-            FilterSetting setting = createFilterSetting(name);\n-            filterSettings.add(setting);\n@@ -186,4 +209,2 @@\n-            \/\/ Sort alphabetically\n-            filterSettings.sort(Comparator.comparing(FilterSetting::getName));\n-\n-            updateComboBox();\n+            comboBox.addItem(setting);\n+            comboBox.setSelectedItem(setting);\n@@ -193,4 +214,0 @@\n-    public boolean canRemoveFilterSetting() {\n-        return comboBox.getSelectedItem() != customFilterSetting;\n-    }\n-\n@@ -198,7 +215,3 @@\n-        if (canRemoveFilterSetting()) {\n-            Object o = comboBox.getSelectedItem();\n-            assert o instanceof FilterSetting;\n-            FilterSetting f = (FilterSetting) o;\n-            assert f != customFilterSetting;\n-            assert filterSettings.contains(f);\n-            NotifyDescriptor.Confirmation l = new NotifyDescriptor.Confirmation(\"Do you really want to remove filter profile \\\"\" + f + \"\\\"?\", \"Filter Profile\");\n+        if (getCurrentChain() != customFilterChain) {\n+            FilterChain filter = getCurrentChain();\n+            NotifyDescriptor.Confirmation l = new NotifyDescriptor.Confirmation(\"Do you really want to remove filter profile \\\"\" + filter + \"\\\"?\", \"Filter Profile\");\n@@ -206,2 +219,1 @@\n-                filterSettings.remove(f);\n-                updateComboBox();\n+                comboBox.removeItem(filter);\n@@ -212,36 +224,0 @@\n-    private FilterSetting createFilterSetting(String name) {\n-        FilterSetting s = new FilterSetting(name);\n-        FilterChain chain = this.getFilterChain();\n-        for (Filter f : chain.getFilters()) {\n-            s.addFilter(f);\n-        }\n-        return s;\n-    }\n-\n-    private void updateComboBoxSelection() {\n-        List<Filter> filters = this.getFilterChain().getFilters();\n-        boolean found = false;\n-        for (FilterSetting s : filterSettings) {\n-            if (s.getFilterCount() == filters.size()) {\n-                boolean ok = true;\n-                for (Filter f : filters) {\n-                    if (!s.containsFilter(f)) {\n-                        ok = false;\n-                    }\n-                }\n-\n-                if (ok) {\n-                    if (comboBox.getSelectedItem() != s) {\n-                        comboBox.setSelectedItem(s);\n-                    }\n-                    found = true;\n-                    break;\n-                }\n-            }\n-        }\n-\n-        if (!found && comboBox.getSelectedItem() != customFilterSetting) {\n-            comboBox.setSelectedItem(customFilterSetting);\n-        }\n-    }\n-\n@@ -250,1 +226,1 @@\n-        private HashMap<Filter, Node> nodeHash = new HashMap<>();\n+        private final HashMap<Filter, Node> nodeHash = new HashMap<>();\n@@ -265,2 +241,1 @@\n-            sequence.getChangedEvent().addListener(source -> addNotify());\n-\n+            allFilterChains.getChangedEvent().addListener(source -> addNotify());\n@@ -272,1 +247,1 @@\n-            setKeys(sequence.getFilters());\n+            setKeys(allFilterChains.getFilters());\n@@ -276,0 +251,10 @@\n+        private void updateSelection() {\n+            Node[] nodes = getExplorerManager().getSelectedNodes();\n+            int[] arr = new int[nodes.length];\n+            for (int i = 0; i < nodes.length; i++) {\n+                int index = allFilterChains.getFilters().indexOf(((FilterNode) nodes[i]).getFilter());\n+                arr[i] = index;\n+            }\n+            view.showSelection(arr);\n+        }\n+\n@@ -280,1 +265,1 @@\n-            FilterChain chain = getFilterChain();\n+            FilterChain chain = getCurrentChain();\n@@ -292,1 +277,0 @@\n-            updateComboBoxSelection();\n@@ -296,4 +280,0 @@\n-    public FilterChain getFilterChain() {\n-        return filterChain;\n-    }\n-\n@@ -330,47 +310,0 @@\n-    private FilterTopComponent() {\n-        filterSettingsChangedEvent = new ChangedEvent<>(this);\n-        initComponents();\n-        setName(NbBundle.getMessage(FilterTopComponent.class, \"CTL_FilterTopComponent\"));\n-        setToolTipText(NbBundle.getMessage(FilterTopComponent.class, \"HINT_FilterTopComponent\"));\n-        \/\/        setIcon(Utilities.loadImage(ICON_PATH, true));\n-\n-        sequence = new FilterChain();\n-        filterChain = new FilterChain();\n-        ScriptEngineManager sem = new ScriptEngineManager();\n-        engine = sem.getEngineByName(\"ECMAScript\");\n-        try {\n-            engine.eval(getJsHelperText());\n-        } catch (ScriptException ex) {\n-            Exceptions.printStackTrace(ex);\n-        }\n-        engine.getContext().getBindings(ScriptContext.ENGINE_SCOPE).put(\"IO\", System.out);\n-        initFilters();\n-        manager = new ExplorerManager();\n-        manager.setRootContext(new AbstractNode(new FilterChildren()));\n-        associateLookup(ExplorerUtils.createLookup(manager, getActionMap()));\n-        view = new CheckListView();\n-\n-        ToolbarPool.getDefault().setPreferredIconSize(16);\n-        Toolbar toolBar = new Toolbar();\n-        toolBar.setBorder((Border) UIManager.get(\"Nb.Editor.Toolbar.border\")); \/\/NOI18N\n-        toolBar.setMinimumSize(new Dimension(0,0)); \/\/ MacOS BUG with ToolbarWithOverflow\n-\n-        comboBox = new JComboBox();\n-        toolBar.add(comboBox);\n-        this.add(toolBar, BorderLayout.NORTH);\n-        toolBar.add(SaveFilterSettingsAction.get(SaveFilterSettingsAction.class));\n-        toolBar.add(RemoveFilterSettingsAction.get(RemoveFilterSettingsAction.class));\n-        toolBar.addSeparator();\n-        toolBar.add(NewFilterAction.get(NewFilterAction.class));\n-        toolBar.add(RemoveFilterAction.get(RemoveFilterAction.class).createContextAwareInstance(this.getLookup()));\n-        toolBar.add(MoveFilterUpAction.get(MoveFilterUpAction.class).createContextAwareInstance(this.getLookup()));\n-        toolBar.add(MoveFilterDownAction.get(MoveFilterDownAction.class).createContextAwareInstance(this.getLookup()));\n-        this.add(view, BorderLayout.CENTER);\n-\n-        filterSettings = new ArrayList<>();\n-        updateComboBox();\n-\n-        comboBox.addActionListener(comboBoxActionListener);\n-        setChain(filterChain);\n-    }\n-\n@@ -380,1 +313,1 @@\n-            sequence.addFilter(cf);\n+            allFilterChains.addFilter(cf);\n@@ -389,1 +322,1 @@\n-        com.sun.hotspot.igv.filter.CustomFilter cf = (com.sun.hotspot.igv.filter.CustomFilter) f;\n+        CustomFilter cf = (CustomFilter) f;\n@@ -391,1 +324,1 @@\n-        sequence.removeFilter(cf);\n+        allFilterChains.removeFilter(cf);\n@@ -403,1 +336,1 @@\n-        private CustomFilter filter;\n+        private final CustomFilter filter;\n@@ -417,2 +350,1 @@\n-                    FileObject newFileObject = fileObject.getParent().getFileObject(filter.getName());\n-                    fileObject = newFileObject;\n+                    fileObject = fileObject.getParent().getFileObject(filter.getName());\n@@ -460,2 +392,0 @@\n-            } catch (FileNotFoundException ex) {\n-                Exceptions.printStackTrace(ex);\n@@ -466,0 +396,1 @@\n+                    assert is != null;\n@@ -475,1 +406,0 @@\n-\n@@ -483,1 +413,1 @@\n-            if (enabled != null && (boolean) enabled) {\n+            if (enabled != null && enabled) {\n@@ -514,1 +444,1 @@\n-            sequence.addFilter(cf);\n+            allFilterChains.addFilter(cf);\n@@ -516,1 +446,1 @@\n-                filterChain.addFilter(cf);\n+                defaultFilterChain.addFilter(cf);\n@@ -577,22 +507,0 @@\n-    @Override\n-    public void componentOpened() {\n-        Lookup.Template<FilterChain> tpl = new Lookup.Template<>(FilterChain.class);\n-        result = Utilities.actionsGlobalContext().lookup(tpl);\n-        result.addLookupListener(this);\n-    }\n-\n-    @Override\n-    public void componentClosed() {\n-        result.removeLookupListener(this);\n-        result = null;\n-    }\n-\n-    @Override\n-    public void resultChanged(LookupEvent lookupEvent) {\n-        setChain(Utilities.actionsGlobalContext().lookup(FilterChain.class));\n-    }\n-\n-    public void setChain(FilterChain chain) {\n-        updateComboBoxSelection();\n-    }\n-\n@@ -628,69 +536,0 @@\n-\n-    @Override\n-    public void writeExternal(ObjectOutput out) throws IOException {\n-        super.writeExternal(out);\n-\n-        out.writeInt(filterSettings.size());\n-        for (FilterSetting f : filterSettings) {\n-            out.writeUTF(f.getName());\n-\n-            out.writeInt(f.getFilterCount());\n-            for (Filter filter : f.getFilters()) {\n-                CustomFilter cf = (CustomFilter) filter;\n-                out.writeUTF(cf.getName());\n-            }\n-        }\n-\n-        CustomFilter prev = null;\n-        for (Filter f : this.sequence.getFilters()) {\n-            CustomFilter cf = (CustomFilter) f;\n-            FileObject fo = getFileObject(cf);\n-            if (getFilterChain().containsFilter(cf)) {\n-                fo.setAttribute(ENABLED_ID, true);\n-            } else {\n-                fo.setAttribute(ENABLED_ID, false);\n-            }\n-\n-            if (prev == null) {\n-                fo.setAttribute(AFTER_ID, null);\n-            } else {\n-                fo.setAttribute(AFTER_ID, prev.getName());\n-            }\n-\n-            prev = cf;\n-        }\n-    }\n-\n-    public CustomFilter findFilter(String name) {\n-        for (Filter f : sequence.getFilters()) {\n-\n-            CustomFilter cf = (CustomFilter) f;\n-            if (cf.getName().equals(name)) {\n-                return cf;\n-            }\n-        }\n-\n-        return null;\n-    }\n-\n-    @Override\n-    public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n-        super.readExternal(in);\n-\n-        int filterSettingsCount = in.readInt();\n-        for (int i = 0; i < filterSettingsCount; i++) {\n-            String name = in.readUTF();\n-            FilterSetting s = new FilterSetting(name);\n-            int filterCount = in.readInt();\n-            for (int j = 0; j < filterCount; j++) {\n-                String filterName = in.readUTF();\n-                CustomFilter filter = findFilter(filterName);\n-                if (filter != null) {\n-                    s.addFilter(filter);\n-                }\n-            }\n-\n-            filterSettings.add(s);\n-        }\n-        updateComboBox();\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterTopComponent.java","additions":128,"deletions":289,"binary":false,"changes":417,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-            FilterTopComponent.findInstance().getSequence().moveFilterDown(c);\n+            FilterTopComponent.findInstance().getAllFilterChains().moveFilterDown(c);\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/MoveFilterDownAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-            FilterTopComponent.findInstance().getSequence().moveFilterUp(c);\n+            FilterTopComponent.findInstance().getAllFilterChains().moveFilterUp(c);\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/MoveFilterUpAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,2 @@\n-    private final FilterChain filterChain;\n+    private FilterChain customFilterChain;\n+    private FilterChain filterChain;\n@@ -152,5 +153,3 @@\n-        if (provider == null) {\n-            filterChain = new FilterChain();\n-        } else {\n-            filterChain = provider.getFilterChain();\n-        }\n+        customFilterChain = (provider != null) ? provider.createNewDefaultFilterChain() : new FilterChain();\n+        filterChain = customFilterChain;\n+\n@@ -293,2 +292,16 @@\n-    public FilterChain getSequenceFilterChain() {\n-        return filterChain;\n+    void activateModel() {\n+        FilterChainProvider provider = Lookup.getDefault().lookup(FilterChainProvider.class);\n+        if (provider != null) {\n+            provider.setFilterChainSelectionChangedListener(l -> {\n+                filterChain.getChangedEvent().removeListener(filterChainChangedListener);\n+                filterChain = provider.getFilterChain();\n+                filterChain.getChangedEvent().addListener(filterChainChangedListener);\n+            });\n+            provider.setCustomFilterChain(customFilterChain);\n+            provider.selectFilterChain(filterChain);\n+        }\n+    }\n+\n+    void close() {\n+        filterChain.getChangedEvent().removeListener(filterChainChangedListener);\n+        getChangedEvent().fire();\n@@ -298,0 +311,4 @@\n+        FilterChainProvider provider = Lookup.getDefault().lookup(FilterChainProvider.class);\n+        if (provider != null) {\n+            filterChain = provider.getFilterChain();\n+        }\n@@ -315,1 +332,1 @@\n-        getFilterChain().apply(diagram, getSequenceFilterChain());\n+        filterChain.apply(diagram, filterChain);\n@@ -326,0 +343,10 @@\n+    public void initFiltersFromModel(DiagramViewModel other) {\n+        customFilterChain = new FilterChain(other.getCustomFilterChain().getName());\n+        customFilterChain.addFilters(other.getCustomFilterChain().getFilters());\n+        if (other.getFilterChain() == other.getCustomFilterChain()) {\n+            filterChain = customFilterChain;\n+        } else {\n+            filterChain = other.getFilterChain();\n+        }\n+    }\n+\n@@ -330,0 +357,4 @@\n+    public FilterChain getCustomFilterChain() {\n+        return customFilterChain;\n+    }\n+\n@@ -434,5 +465,0 @@\n-    void close() {\n-        filterChain.getChangedEvent().removeListener(filterChainChangedListener);\n-        getChangedEvent().fire();\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":40,"deletions":14,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -31,3 +31,0 @@\n-import com.sun.hotspot.igv.filter.FilterChain;\n-import com.sun.hotspot.igv.filter.FilterChainProvider;\n-import com.sun.hotspot.igv.settings.Settings;\n@@ -36,0 +33,1 @@\n+import com.sun.hotspot.igv.util.StringUtils;\n@@ -49,1 +47,0 @@\n-import org.openide.util.Lookup;\n@@ -375,0 +372,18 @@\n+    @Override\n+    public void setDisplayName(String displayName) {\n+        super.setDisplayName(displayName);\n+        if (useBoldDisplayName) {\n+            setHtmlDisplayName(\"<html><b>\" + StringUtils.escapeHTML(getDisplayName()) + \"<\/b>\");\n+        } else {\n+            setHtmlDisplayName(getDisplayName());\n+        }\n+    }\n+\n+    private boolean useBoldDisplayName = false;\n+\n+    private void setBoldDisplayName(boolean bold) {\n+        useBoldDisplayName = bold;\n+        setDisplayName(getDisplayName());\n+    }\n+\n+\n@@ -378,0 +393,11 @@\n+        getModel().activateModel();\n+        WindowManager manager = WindowManager.getDefault();\n+        for (Mode m : manager.getModes()) {\n+            for (TopComponent topComponent : manager.getOpenedTopComponents(m)) {\n+                if (topComponent instanceof EditorTopComponent) {\n+                    EditorTopComponent editor = (EditorTopComponent) topComponent;\n+                    editor.setBoldDisplayName(false);\n+                }\n+            }\n+        }\n+        setBoldDisplayName(true);\n@@ -404,0 +430,1 @@\n+        model.initFiltersFromModel(getModel());\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":31,"deletions":4,"binary":false,"changes":35,"status":"modified"}]}