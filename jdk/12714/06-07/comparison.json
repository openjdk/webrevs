{"files":[{"patch":"@@ -190,0 +190,1 @@\n+        comboBox.removeActionListener(comboBoxSelectionChangedListener);\n@@ -194,0 +195,1 @@\n+        comboBox.addActionListener(comboBoxSelectionChangedListener);\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterTopComponent.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,0 +48,8 @@\n+    public RangeSliderModel(RangeSliderModel model) {\n+        this();\n+        firstPosition = model.getFirstPosition();\n+        secondPosition = model.getSecondPosition();\n+        positions = new ArrayList<>(model.getPositions());\n+        colors = new ArrayList<>(model.getColors());\n+    }\n+\n@@ -49,0 +57,2 @@\n+        firstPosition = -1;\n+        secondPosition = -1;\n","filename":"src\/utils\/IdealGraphVisualizer\/Util\/src\/main\/java\/com\/sun\/hotspot\/igv\/util\/RangeSliderModel.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -490,1 +490,0 @@\n-        update();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    private final Group group;\n+    private Group group;\n@@ -60,4 +60,4 @@\n-    private final ChangedEvent<DiagramViewModel> diagramChangedEvent;\n-    private final ChangedEvent<DiagramViewModel> graphChangedEvent;\n-    private final ChangedEvent<DiagramViewModel> selectedNodesChangedEvent;\n-    private final ChangedEvent<DiagramViewModel> hiddenNodesChangedEvent;\n+    private final ChangedEvent<DiagramViewModel> diagramChangedEvent = new ChangedEvent<>(this);\n+    private final ChangedEvent<DiagramViewModel> graphChangedEvent = new ChangedEvent<>(this);\n+    private final ChangedEvent<DiagramViewModel> selectedNodesChangedEvent = new ChangedEvent<>(this);\n+    private final ChangedEvent<DiagramViewModel> hiddenNodesChangedEvent = new ChangedEvent<>(this);\n@@ -83,1 +83,1 @@\n-    public void setGlobalSelection(boolean enable) {\n+    public void setGlobalSelection(boolean enable, boolean fire) {\n@@ -85,1 +85,3 @@\n-        diagramChangedEvent.fire();\n+        if (fire && enable) {\n+            diagramChangedEvent.fire();\n+        }\n@@ -92,3 +94,5 @@\n-    public void setShowSea(boolean b) {\n-        showSea = b;\n-        diagramChangedEvent.fire();\n+    public void setShowSea(boolean enable) {\n+        showSea = enable;\n+        if (enable) {\n+            diagramChangedEvent.fire();\n+        }\n@@ -101,3 +105,5 @@\n-    public void setShowBlocks(boolean b) {\n-        showBlocks = b;\n-        diagramChangedEvent.fire();\n+    public void setShowBlocks(boolean enable) {\n+        showBlocks = enable;\n+        if (enable) {\n+            diagramChangedEvent.fire();\n+        }\n@@ -110,3 +116,5 @@\n-    public void setShowCFG(boolean b) {\n-        showCFG = b;\n-        diagramChangedEvent.fire();\n+    public void setShowCFG(boolean enable) {\n+        showCFG = enable;\n+        if (enable) {\n+            diagramChangedEvent.fire();\n+        }\n@@ -152,0 +160,44 @@\n+    private void init(Group group) {\n+        this.group = group;\n+        this.group.getChangedEvent().addListener(g -> {\n+            assert g == this.group;\n+            if (this.group.getGraphs().isEmpty()) {\n+                \/\/ If the group has been emptied, all corresponding graph views\n+                \/\/ will be closed, so do nothing.\n+                return;\n+            }\n+            filterGraphs();\n+            setSelectedNodes(selectedNodes);\n+        });\n+        filterGraphs();\n+        super.getChangedEvent().addListener(this);\n+    }\n+\n+    public DiagramViewModel(DiagramViewModel model) {\n+        super(model);\n+        globalSelection = false;\n+        init(model.getGroup());\n+        graphs = new ArrayList<>(model.graphs);\n+\n+        \/\/ initialize the filters from a model\n+        FilterChainProvider provider = Lookup.getDefault().lookup(FilterChainProvider.class);\n+        assert provider != null;\n+        customFilterChain = provider.createNewCustomFilterChain();\n+        customFilterChain.clearFilters();\n+        customFilterChain.addFilters(model.getCustomFilterChain().getFilters());\n+        setFilterChain(model.getFilterChain(), customFilterChain);\n+        filtersOrder = provider.getAllFiltersOrdered();\n+\n+        globalSelection = GlobalSelectionAction.get(GlobalSelectionAction.class).isSelected();\n+        showCFG = model.getShowCFG();\n+        showSea = model.getShowSea();\n+        showBlocks = model.getShowBlocks();\n+        showNodeHull = model.getShowNodeHull();\n+        showEmptyBlocks = model.getShowEmptyBlocks();\n+        hideDuplicates = model.getHideDuplicates();\n+\n+        hiddenNodes = new HashSet<>(model.getHiddenNodes());\n+        selectedNodes = new HashSet<>();\n+        changed(this);\n+    }\n+\n@@ -153,0 +205,2 @@\n+        init(graph.getGroup());\n+\n@@ -165,1 +219,2 @@\n-        group = graph.getGroup();\n+        hideDuplicates = false;\n+\n@@ -168,24 +223,0 @@\n-\n-        diagramChangedEvent = new ChangedEvent<>(this);\n-        graphChangedEvent = new ChangedEvent<>(this);\n-        selectedNodesChangedEvent = new ChangedEvent<>(this);\n-        hiddenNodesChangedEvent = new ChangedEvent<>(this);\n-\n-        super.getChangedEvent().addListener(this);\n-\n-        \/\/ If the group has been emptied, all corresponding graph views\n-        \/\/ will be closed, so do nothing.\n-        ChangedListener<Group> groupContentChangedListener = g -> {\n-            assert g == group;\n-            if (group.getGraphs().isEmpty()) {\n-                \/\/ If the group has been emptied, all corresponding graph views\n-                \/\/ will be closed, so do nothing.\n-                return;\n-            }\n-            filterGraphs();\n-            setSelectedNodes(selectedNodes);\n-        };\n-\n-        group.getChangedEvent().addListener(groupContentChangedListener);\n-\n-        filterGraphs();\n@@ -306,6 +337,0 @@\n-    public void initFiltersFromModel(DiagramViewModel other) {\n-        customFilterChain.clearFilters();\n-        customFilterChain.addFilters(other.getCustomFilterChain().getFilters());\n-        setFilterChain(other.getFilterChain(), customFilterChain);\n-    }\n-\n@@ -315,0 +340,3 @@\n+            provider.setCustomFilterChain(customFilterChain);\n+            provider.selectFilterChain(filterChain);\n+\n@@ -320,2 +348,0 @@\n-            provider.setCustomFilterChain(customFilterChain);\n-            provider.selectFilterChain(filterChain);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":75,"deletions":49,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import com.sun.hotspot.igv.graph.Figure;\n@@ -75,4 +76,0 @@\n-    public EditorTopComponent(InputGraph graph) {\n-        this(new DiagramViewModel(graph));\n-    }\n-\n@@ -419,12 +416,2 @@\n-        DiagramViewModel model = new DiagramViewModel(getModel().getFirstGraph());\n-        if (getModel().getGraph().isDiffGraph()) {\n-            model.setPositions(getModel().getFirstPosition(), getModel().getSecondPosition());\n-        }\n-        model.setHiddenNodes(new HashSet<>(getModel().getHiddenNodes()));\n-        model.setShowCFG(getModel().getShowCFG());\n-        model.setShowSea(getModel().getShowSea());\n-        model.setShowBlocks(getModel().getShowBlocks());\n-        model.setShowNodeHull(getModel().getShowNodeHull());\n-        model.setShowEmptyBlocks(getModel().getShowEmptyBlocks());\n-        model.setHideDuplicates(getModel().getHideDuplicates());\n-        model.initFiltersFromModel(getModel());\n+        DiagramViewModel model = new DiagramViewModel(getModel());\n+        model.setGlobalSelection(false, false);\n@@ -432,0 +419,7 @@\n+\n+        Set<InputNode> selectedNodes = new HashSet<>();\n+        for (Figure figure : getModel().getSelectedFigures()) {\n+            selectedNodes.add(figure.getInputNode());\n+        }\n+        etc.addSelectedNodes(selectedNodes, false);\n+        model.setGlobalSelection(GlobalSelectionAction.get(GlobalSelectionAction.class).isSelected(), false);\n@@ -433,0 +427,6 @@\n+\n+        int currentZoomLevel = scene.getZoomPercentage();\n+        SwingUtilities.invokeLater(() -> {\n+            etc.centerSelectedNodes();\n+            etc.setZoomLevel(currentZoomLevel);\n+        });\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -65,4 +65,4 @@\n-\n-        EditorTopComponent tc = new EditorTopComponent(graph);\n-        tc.open();\n-        tc.requestActive();\n+        DiagramViewModel model = new DiagramViewModel(graph);\n+        EditorTopComponent etc = new EditorTopComponent(model);\n+        etc.open();\n+        etc.requestActive();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/GraphViewerImplementation.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-            SwingUtilities.invokeLater(() -> editor.getModel().setGlobalSelection(isSelected));\n+            SwingUtilities.invokeLater(() -> editor.getModel().setGlobalSelection(isSelected, true));\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/GlobalSelectionAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}