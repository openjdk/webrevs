{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Comparator;\n@@ -40,2 +41,3 @@\n-    private List<Filter> filters;\n-    private transient ChangedEvent<FilterChain> changedEvent;\n+    private final List<Filter> filters;\n+    private final transient ChangedEvent<FilterChain> changedEvent;\n+    private final String name;\n@@ -43,1 +45,1 @@\n-    private ChangedListener<Filter> changedListener = new ChangedListener<Filter>() {\n+    private final ChangedListener<Filter> changedListener = new ChangedListener<Filter>() {\n@@ -50,1 +52,2 @@\n-    public FilterChain() {\n+    public FilterChain(String name) {\n+        this.name = name;\n@@ -55,3 +58,6 @@\n-    public FilterChain(FilterChain f) {\n-        this.filters = new ArrayList<>(f.filters);\n-        changedEvent = new ChangedEvent<>(this);\n+    public FilterChain() {\n+        this(\"\");\n+    }\n+\n+    public void sortBy(List<String> order) {\n+        filters.sort(Comparator.comparingInt(f -> order.indexOf(f.getName())));\n@@ -65,24 +71,4 @@\n-    public Filter getFilterAt(int index) {\n-        assert index >= 0 && index < filters.size();\n-        return filters.get(index);\n-    }\n-\n-    public void apply(Diagram d) {\n-        for (Filter f : filters) {\n-            f.apply(d);\n-        }\n-    }\n-\n-    public void apply(Diagram d, FilterChain sequence) {\n-        List<Filter> applied = new ArrayList<>();\n-        for (Filter f : sequence.getFilters()) {\n-            if (filters.contains(f)) {\n-                f.apply(d);\n-                applied.add(f);\n-            }\n-        }\n-\n-\n-        for (Filter f : filters) {\n-            if (!applied.contains(f)) {\n-                f.apply(d);\n+    public void applyInOrder(Diagram diagram, FilterChain filterOrder) {\n+        for (Filter filter : filterOrder.getFilters()) {\n+            if (filters.contains(filter)) {\n+                filter.apply(diagram);\n@@ -93,1 +79,0 @@\n-\n@@ -105,0 +90,8 @@\n+    public void clearFilters() {\n+        for (Filter filter : filters) {\n+            filter.getChangedEvent().removeListener(changedListener);\n+        }\n+        filters.clear();\n+        changedEvent.fire();\n+    }\n+\n@@ -132,0 +125,6 @@\n+    public void addFilters(List<Filter> filtersToAdd) {\n+        for (Filter filter : filtersToAdd) {\n+            addFilter(filter);\n+        }\n+    }\n+\n@@ -135,0 +134,8 @@\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return getName();\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/FilterChain.java","additions":40,"deletions":33,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+import com.sun.hotspot.igv.data.ChangedListener;\n+import javax.swing.JComboBox;\n+\n@@ -32,1 +35,8 @@\n-    public FilterChain getFilterChain();\n+    FilterChain getFilterChain();\n+    FilterChain getAllFiltersOrdered();\n+\n+    FilterChain createNewCustomFilterChain();\n+\n+    void setCustomFilterChain(FilterChain filterChain);\n+\n+    void selectFilterChain(FilterChain filterChain);\n@@ -34,1 +44,1 @@\n-    public FilterChain getSequence();\n+    void setFilterChainSelectionChangedListener(ChangedListener<JComboBox<FilterChain>> listener);\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/FilterChainProvider.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1,82 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-package com.sun.hotspot.igv.filter;\n-\n-import java.util.Collections;\n-import java.util.HashSet;\n-import java.util.Set;\n-\n-\/**\n- *\n- * @author Thomas Wuerthinger\n- *\/\n-public class FilterSetting {\n-\n-    private Set<Filter> filters;\n-    private String name;\n-\n-    public FilterSetting() {\n-        this(null);\n-    }\n-\n-    public FilterSetting(String name) {\n-        this.name = name;\n-        filters = new HashSet<>();\n-    }\n-\n-    public Set<Filter> getFilters() {\n-        return Collections.unmodifiableSet(filters);\n-    }\n-\n-    public void addFilter(Filter f) {\n-        assert !filters.contains(f);\n-        filters.add(f);\n-    }\n-\n-    public void removeFilter(Filter f) {\n-        assert filters.contains(f);\n-        filters.remove(f);\n-    }\n-\n-    public boolean containsFilter(Filter f) {\n-        return filters.contains(f);\n-    }\n-\n-    public String getName() {\n-        return name;\n-    }\n-\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n-\n-    public int getFilterCount() {\n-        return filters.size();\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return getName();\n-    }\n-}\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/FilterSetting.java","additions":0,"deletions":82,"binary":false,"changes":82,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import com.sun.hotspot.igv.data.ChangedListener;\n@@ -28,0 +29,1 @@\n+import javax.swing.JComboBox;\n@@ -39,1 +41,1 @@\n-        return FilterTopComponent.findInstance().getFilterChain();\n+        return FilterTopComponent.findInstance().getCurrentChain();\n@@ -43,2 +45,22 @@\n-    public FilterChain getSequence() {\n-        return FilterTopComponent.findInstance().getSequence();\n+    public FilterChain getAllFiltersOrdered() {\n+        return FilterTopComponent.findInstance().getAllFiltersOrdered();\n+    }\n+\n+    @Override\n+    public FilterChain createNewCustomFilterChain() {\n+        return FilterTopComponent.findInstance().createNewCustomFilterChain();\n+    }\n+\n+    @Override\n+    public void selectFilterChain(FilterChain filterChain) {\n+        FilterTopComponent.findInstance().selectFilterChain(filterChain);\n+    }\n+\n+    @Override\n+    public void setCustomFilterChain(FilterChain filterChain) {\n+        FilterTopComponent.findInstance().setCustomFilterChain(filterChain);\n+    }\n+\n+    @Override\n+    public void setFilterChainSelectionChangedListener(ChangedListener<JComboBox<FilterChain>> listener) {\n+        FilterTopComponent.findInstance().setFilterChainSelectionChangedListener(listener);\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterChainProviderImplementation.java","additions":26,"deletions":4,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    private Filter filter;\n+    private final Filter filter;\n@@ -109,1 +109,1 @@\n-        setSelected(source.getFilterChain().containsFilter(filter));\n+        setSelected(source.getCurrentChain().containsFilter(filter));\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterNode.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import com.sun.hotspot.igv.filter.FilterSetting;\n@@ -34,0 +33,2 @@\n+import java.awt.Color;\n+import java.awt.Component;\n@@ -35,1 +36,0 @@\n-import java.awt.event.ActionEvent;\n@@ -45,2 +45,1 @@\n-import javax.swing.JComboBox;\n-import javax.swing.UIManager;\n+import javax.swing.*;\n@@ -70,1 +69,1 @@\n-public final class FilterTopComponent extends TopComponent implements LookupListener, ExplorerManager.Provider {\n+public final class FilterTopComponent extends TopComponent implements ExplorerManager.Provider {\n@@ -78,15 +77,24 @@\n-    private CheckListView view;\n-    private ExplorerManager manager;\n-    private FilterChain filterChain;\n-    private FilterChain sequence;\n-    private ScriptEngine engine;\n-    private Lookup.Result<FilterChain> result;\n-    private JComboBox comboBox;\n-    private List<FilterSetting> filterSettings;\n-    private FilterSetting customFilterSetting = new FilterSetting(\"-- Custom --\");\n-    private ChangedEvent<FilterTopComponent> filterSettingsChangedEvent;\n-    private ActionListener comboBoxActionListener = new ActionListener() {\n-\n-        @Override\n-        public void actionPerformed(ActionEvent e) {\n-            comboBoxSelectionChanged();\n+    private final CheckListView view;\n+    private final ExplorerManager manager;\n+    private final ScriptEngine engine;\n+    private final JComboBox<FilterChain> comboBox;\n+    private final FilterChain allFiltersOrdered = new FilterChain();\n+    private static final FilterChain defaultFilterChain = new FilterChain(\"DEFAULT\");\n+    private FilterChain customFilterChain;\n+    private final ChangedEvent<FilterTopComponent> filterSettingsChangedEvent;\n+    private ChangedEvent<JComboBox<FilterChain>> filterChainSelectionChangedEvent;\n+    private final ActionListener comboBoxSelectionChangedListener = l -> comboBoxSelectionChanged();\n+    private static final String CUSTOM_LABEL = \"--Local--\";\n+    private static final String GLOBAL_LABEL = \"--Global--\";\n+\n+\n+    public FilterChain createNewCustomFilterChain() {\n+        FilterChain newCustomFilterChain = new FilterChain(CUSTOM_LABEL);\n+        newCustomFilterChain.addFilters(customFilterChain.getFilters());\n+        return newCustomFilterChain;\n+    }\n+\n+    static class CustomCellRenderer extends DefaultListCellRenderer {\n+\n+        public CustomCellRenderer() {\n+            setOpaque(true);\n@@ -94,1 +102,0 @@\n-    };\n@@ -96,2 +103,15 @@\n-    public ChangedEvent<FilterTopComponent> getFilterSettingsChangedEvent() {\n-        return filterSettingsChangedEvent;\n+        public Component getListCellRendererComponent(JList jc, Object val, int idx,\n+                                                      boolean isSelected, boolean cellHasFocus) {\n+            setText(\" \" + val.toString());\n+            if (idx == 0) {\n+                setForeground(Color.GRAY);\n+            } else {\n+                setForeground(Color.BLACK);\n+            }\n+            if (isSelected) {\n+                setBackground(Color.LIGHT_GRAY);\n+            } else {\n+                setBackground(Color.WHITE);\n+            }\n+            return this;\n+        }\n@@ -100,3 +120,5 @@\n-    public FilterChain getSequence() {\n-        return sequence;\n-    }\n+    private FilterTopComponent() {\n+        filterSettingsChangedEvent = new ChangedEvent<>(this);\n+        initComponents();\n+        setName(NbBundle.getMessage(FilterTopComponent.class, \"CTL_FilterTopComponent\"));\n+        setToolTipText(NbBundle.getMessage(FilterTopComponent.class, \"HINT_FilterTopComponent\"));\n@@ -104,6 +126,6 @@\n-    public void updateSelection() {\n-        Node[] nodes = this.getExplorerManager().getSelectedNodes();\n-        int[] arr = new int[nodes.length];\n-        for (int i = 0; i < nodes.length; i++) {\n-            int index = sequence.getFilters().indexOf(((FilterNode) nodes[i]).getFilter());\n-            arr[i] = index;\n+        ScriptEngineManager sem = new ScriptEngineManager();\n+        engine = sem.getEngineByName(\"ECMAScript\");\n+        try {\n+            engine.eval(getJsHelperText());\n+        } catch (ScriptException ex) {\n+            Exceptions.printStackTrace(ex);\n@@ -111,1 +133,37 @@\n-        view.showSelection(arr);\n+        engine.getContext().getBindings(ScriptContext.ENGINE_SCOPE).put(\"IO\", System.out);\n+\n+        initFilters();\n+        comboBox = new JComboBox<>();\n+        comboBox.setRenderer(new CustomCellRenderer());\n+        customFilterChain = new FilterChain(CUSTOM_LABEL);\n+        customFilterChain.addFilters(defaultFilterChain.getFilters());\n+        comboBox.addItem(customFilterChain);\n+        FilterChain globalFilterChain = new FilterChain(GLOBAL_LABEL);\n+        globalFilterChain.addFilters(defaultFilterChain.getFilters());\n+        comboBox.addItem(globalFilterChain);\n+        comboBox.setSelectedItem(globalFilterChain);\n+        filterChainSelectionChangedEvent = new ChangedEvent<>(comboBox);\n+\n+        manager = new ExplorerManager();\n+        manager.setRootContext(new AbstractNode(new FilterChildren()));\n+        associateLookup(ExplorerUtils.createLookup(manager, getActionMap()));\n+        view = new CheckListView();\n+\n+        ToolbarPool.getDefault().setPreferredIconSize(16);\n+        Toolbar toolBar = new Toolbar();\n+        toolBar.setBorder((Border) UIManager.get(\"Nb.Editor.Toolbar.border\")); \/\/NOI18N\n+        toolBar.setMinimumSize(new Dimension(0,0)); \/\/ MacOS BUG with ToolbarWithOverflow\n+\n+        toolBar.add(comboBox);\n+        this.add(toolBar, BorderLayout.NORTH);\n+        toolBar.add(SaveFilterSettingsAction.get(SaveFilterSettingsAction.class));\n+        toolBar.add(RemoveFilterSettingsAction.get(RemoveFilterSettingsAction.class));\n+        toolBar.addSeparator();\n+        toolBar.add(NewFilterAction.get(NewFilterAction.class));\n+        toolBar.add(RemoveFilterAction.get(RemoveFilterAction.class).createContextAwareInstance(this.getLookup()));\n+        toolBar.add(MoveFilterUpAction.get(MoveFilterUpAction.class).createContextAwareInstance(this.getLookup()));\n+        toolBar.add(MoveFilterDownAction.get(MoveFilterDownAction.class).createContextAwareInstance(this.getLookup()));\n+        this.add(view, BorderLayout.CENTER);\n+\n+        comboBox.addActionListener(comboBoxSelectionChangedListener);\n+        comboBoxSelectionChanged();\n@@ -114,1 +172,3 @@\n-    private void comboBoxSelectionChanged() {\n+    public ChangedEvent<FilterTopComponent> getFilterSettingsChangedEvent() {\n+        return filterSettingsChangedEvent;\n+    }\n@@ -116,6 +176,4 @@\n-        Object o = comboBox.getSelectedItem();\n-        if (o == null) {\n-            return;\n-        }\n-        assert o instanceof FilterSetting;\n-        FilterSetting s = (FilterSetting) o;\n+    public void setFilterChainSelectionChangedListener(ChangedListener<JComboBox<FilterChain>> listener) {\n+        filterChainSelectionChangedEvent = new ChangedEvent<>(comboBox);\n+        filterChainSelectionChangedEvent.addListener(listener);\n+    }\n@@ -123,12 +181,3 @@\n-        if (s != customFilterSetting) {\n-            FilterChain chain = getFilterChain();\n-            chain.getChangedEvent().beginAtomic();\n-            List<Filter> toRemove = new ArrayList<>();\n-            for (Filter f : chain.getFilters()) {\n-                if (!s.containsFilter(f)) {\n-                    toRemove.add(f);\n-                }\n-            }\n-            for (Filter f : toRemove) {\n-                chain.removeFilter(f);\n-            }\n+    public FilterChain getAllFiltersOrdered() {\n+        return allFiltersOrdered;\n+    }\n@@ -136,5 +185,3 @@\n-            for (Filter f : s.getFilters()) {\n-                if (!chain.containsFilter(f)) {\n-                    chain.addFilter(f);\n-                }\n-            }\n+    public FilterChain getCurrentChain() {\n+        return (FilterChain) comboBox.getSelectedItem();\n+    }\n@@ -142,4 +189,5 @@\n-            chain.getChangedEvent().endAtomic();\n-            filterSettingsChangedEvent.fire();\n-        } else {\n-            this.updateComboBoxSelection();\n+    public void selectFilterChain(FilterChain filterChain) {\n+        comboBox.removeActionListener(comboBoxSelectionChangedListener);\n+        comboBox.setSelectedItem(filterChain);\n+        if (comboBox.getSelectedIndex() < 0) {\n+            comboBox.setSelectedIndex(0);\n@@ -147,0 +195,2 @@\n+        comboBox.addActionListener(comboBoxSelectionChangedListener);\n+    }\n@@ -148,2 +198,6 @@\n-        SystemAction.get(RemoveFilterSettingsAction.class).setEnabled(comboBox.getSelectedItem() != this.customFilterSetting);\n-        SystemAction.get(SaveFilterSettingsAction.class).setEnabled(comboBox.getSelectedItem() == this.customFilterSetting);\n+    public void setCustomFilterChain(FilterChain filterChain) {\n+        comboBox.removeActionListener(comboBoxSelectionChangedListener);\n+        comboBox.removeItem(customFilterChain);\n+        customFilterChain = filterChain;\n+        comboBox.insertItemAt(customFilterChain, 0);\n+        comboBox.addActionListener(comboBoxSelectionChangedListener);\n@@ -152,5 +206,4 @@\n-    private void updateComboBox() {\n-        comboBox.removeAllItems();\n-        comboBox.addItem(customFilterSetting);\n-        for (FilterSetting s : filterSettings) {\n-            comboBox.addItem(s);\n+    private void comboBoxSelectionChanged() {\n+        FilterChain currentChain = getCurrentChain();\n+        if (currentChain == null) {\n+            return;\n@@ -159,1 +212,5 @@\n-        this.updateComboBoxSelection();\n+        filterSettingsChangedEvent.fire();\n+        filterChainSelectionChangedEvent.fire();\n+        currentChain.getChangedEvent().fire();\n+        SystemAction.get(RemoveFilterSettingsAction.class).setEnabled(currentChain != customFilterChain);\n+        SystemAction.get(SaveFilterSettingsAction.class).setEnabled(true);\n@@ -166,3 +223,2 @@\n-\n-            FilterSetting toRemove = null;\n-            for (FilterSetting s : filterSettings) {\n+            for (int i=0; i<comboBox.getItemCount(); i++) {\n+                FilterChain s = comboBox.getItemAt(i);\n@@ -172,1 +228,1 @@\n-                        toRemove = s;\n+                        comboBox.removeItem(s);\n@@ -180,2 +236,4 @@\n-            if (toRemove != null) {\n-                filterSettings.remove(toRemove);\n+            FilterChain setting = new FilterChain(name);\n+            FilterChain chain = getCurrentChain();\n+            for (Filter f : chain.getFilters()) {\n+                setting.addFilter(f);\n@@ -183,5 +241,0 @@\n-            FilterSetting setting = createFilterSetting(name);\n-            filterSettings.add(setting);\n-\n-            \/\/ Sort alphabetically\n-            filterSettings.sort(Comparator.comparing(FilterSetting::getName));\n@@ -189,1 +242,2 @@\n-            updateComboBox();\n+            comboBox.addItem(setting);\n+            comboBox.setSelectedItem(setting);\n@@ -193,4 +247,0 @@\n-    public boolean canRemoveFilterSetting() {\n-        return comboBox.getSelectedItem() != customFilterSetting;\n-    }\n-\n@@ -198,7 +248,3 @@\n-        if (canRemoveFilterSetting()) {\n-            Object o = comboBox.getSelectedItem();\n-            assert o instanceof FilterSetting;\n-            FilterSetting f = (FilterSetting) o;\n-            assert f != customFilterSetting;\n-            assert filterSettings.contains(f);\n-            NotifyDescriptor.Confirmation l = new NotifyDescriptor.Confirmation(\"Do you really want to remove filter profile \\\"\" + f + \"\\\"?\", \"Filter Profile\");\n+        if (getCurrentChain() != customFilterChain) {\n+            FilterChain filter = getCurrentChain();\n+            NotifyDescriptor.Confirmation l = new NotifyDescriptor.Confirmation(\"Do you really want to remove filter profile \\\"\" + filter + \"\\\"?\", \"Filter Profile\");\n@@ -206,34 +252,1 @@\n-                filterSettings.remove(f);\n-                updateComboBox();\n-            }\n-        }\n-    }\n-\n-    private FilterSetting createFilterSetting(String name) {\n-        FilterSetting s = new FilterSetting(name);\n-        FilterChain chain = this.getFilterChain();\n-        for (Filter f : chain.getFilters()) {\n-            s.addFilter(f);\n-        }\n-        return s;\n-    }\n-\n-    private void updateComboBoxSelection() {\n-        List<Filter> filters = this.getFilterChain().getFilters();\n-        boolean found = false;\n-        for (FilterSetting s : filterSettings) {\n-            if (s.getFilterCount() == filters.size()) {\n-                boolean ok = true;\n-                for (Filter f : filters) {\n-                    if (!s.containsFilter(f)) {\n-                        ok = false;\n-                    }\n-                }\n-\n-                if (ok) {\n-                    if (comboBox.getSelectedItem() != s) {\n-                        comboBox.setSelectedItem(s);\n-                    }\n-                    found = true;\n-                    break;\n-                }\n+                comboBox.removeItem(filter);\n@@ -242,4 +255,0 @@\n-\n-        if (!found && comboBox.getSelectedItem() != customFilterSetting) {\n-            comboBox.setSelectedItem(customFilterSetting);\n-        }\n@@ -250,1 +259,1 @@\n-        private HashMap<Filter, Node> nodeHash = new HashMap<>();\n+        private final HashMap<Filter, Node> nodeHash = new HashMap<>();\n@@ -265,2 +274,1 @@\n-            sequence.getChangedEvent().addListener(source -> addNotify());\n-\n+            allFiltersOrdered.getChangedEvent().addListener(source -> addNotify());\n@@ -272,1 +280,1 @@\n-            setKeys(sequence.getFilters());\n+            setKeys(allFiltersOrdered.getFilters());\n@@ -276,0 +284,10 @@\n+        private void updateSelection() {\n+            Node[] nodes = getExplorerManager().getSelectedNodes();\n+            int[] arr = new int[nodes.length];\n+            for (int i = 0; i < nodes.length; i++) {\n+                int index = allFiltersOrdered.getFilters().indexOf(((FilterNode) nodes[i]).getFilter());\n+                arr[i] = index;\n+            }\n+            view.showSelection(arr);\n+        }\n+\n@@ -280,1 +298,1 @@\n-            FilterChain chain = getFilterChain();\n+            FilterChain chain = getCurrentChain();\n@@ -292,1 +310,0 @@\n-            updateComboBoxSelection();\n@@ -296,4 +313,0 @@\n-    public FilterChain getFilterChain() {\n-        return filterChain;\n-    }\n-\n@@ -330,47 +343,0 @@\n-    private FilterTopComponent() {\n-        filterSettingsChangedEvent = new ChangedEvent<>(this);\n-        initComponents();\n-        setName(NbBundle.getMessage(FilterTopComponent.class, \"CTL_FilterTopComponent\"));\n-        setToolTipText(NbBundle.getMessage(FilterTopComponent.class, \"HINT_FilterTopComponent\"));\n-        \/\/        setIcon(Utilities.loadImage(ICON_PATH, true));\n-\n-        sequence = new FilterChain();\n-        filterChain = new FilterChain();\n-        ScriptEngineManager sem = new ScriptEngineManager();\n-        engine = sem.getEngineByName(\"ECMAScript\");\n-        try {\n-            engine.eval(getJsHelperText());\n-        } catch (ScriptException ex) {\n-            Exceptions.printStackTrace(ex);\n-        }\n-        engine.getContext().getBindings(ScriptContext.ENGINE_SCOPE).put(\"IO\", System.out);\n-        initFilters();\n-        manager = new ExplorerManager();\n-        manager.setRootContext(new AbstractNode(new FilterChildren()));\n-        associateLookup(ExplorerUtils.createLookup(manager, getActionMap()));\n-        view = new CheckListView();\n-\n-        ToolbarPool.getDefault().setPreferredIconSize(16);\n-        Toolbar toolBar = new Toolbar();\n-        toolBar.setBorder((Border) UIManager.get(\"Nb.Editor.Toolbar.border\")); \/\/NOI18N\n-        toolBar.setMinimumSize(new Dimension(0,0)); \/\/ MacOS BUG with ToolbarWithOverflow\n-\n-        comboBox = new JComboBox();\n-        toolBar.add(comboBox);\n-        this.add(toolBar, BorderLayout.NORTH);\n-        toolBar.add(SaveFilterSettingsAction.get(SaveFilterSettingsAction.class));\n-        toolBar.add(RemoveFilterSettingsAction.get(RemoveFilterSettingsAction.class));\n-        toolBar.addSeparator();\n-        toolBar.add(NewFilterAction.get(NewFilterAction.class));\n-        toolBar.add(RemoveFilterAction.get(RemoveFilterAction.class).createContextAwareInstance(this.getLookup()));\n-        toolBar.add(MoveFilterUpAction.get(MoveFilterUpAction.class).createContextAwareInstance(this.getLookup()));\n-        toolBar.add(MoveFilterDownAction.get(MoveFilterDownAction.class).createContextAwareInstance(this.getLookup()));\n-        this.add(view, BorderLayout.CENTER);\n-\n-        filterSettings = new ArrayList<>();\n-        updateComboBox();\n-\n-        comboBox.addActionListener(comboBoxActionListener);\n-        setChain(filterChain);\n-    }\n-\n@@ -380,5 +346,1 @@\n-            sequence.addFilter(cf);\n-            FileObject fo = getFileObject(cf);\n-            FilterChangedListener listener = new FilterChangedListener(fo, cf);\n-            listener.changed(cf);\n-            cf.getChangedEvent().addListener(listener);\n+            addFilter(cf);\n@@ -388,2 +350,7 @@\n-    public void removeFilter(Filter f) {\n-        com.sun.hotspot.igv.filter.CustomFilter cf = (com.sun.hotspot.igv.filter.CustomFilter) f;\n+    public void addFilter(CustomFilter cf) {\n+        allFiltersOrdered.addFilter(cf);\n+        FileObject fo = getFileObject(cf);\n+        FilterChangedListener listener = new FilterChangedListener(fo, cf);\n+        listener.changed(cf);\n+        cf.getChangedEvent().addListener(listener);\n+    }\n@@ -391,1 +358,2 @@\n-        sequence.removeFilter(cf);\n+    public void removeFilter(CustomFilter cf) {\n+        allFiltersOrdered.removeFilter(cf);\n@@ -397,0 +365,1 @@\n+    }\n@@ -398,0 +367,10 @@\n+    private FileObject getFileObject(CustomFilter f) {\n+        FileObject fo = FileUtil.getConfigRoot().getFileObject(FOLDER_ID + \"\/\" + f.getName() + \".js\");\n+        if (fo == null) {\n+            try {\n+                fo = FileUtil.getConfigRoot().getFileObject(FOLDER_ID).createData(f.getName() + \".js\");\n+            } catch (IOException ex) {\n+                Exceptions.printStackTrace(ex);\n+            }\n+        }\n+        return fo;\n@@ -403,1 +382,1 @@\n-        private CustomFilter filter;\n+        private final CustomFilter filter;\n@@ -415,1 +394,1 @@\n-                    fileObject.move(lock, fileObject.getParent(), filter.getName(), \"\");\n+                    fileObject.move(lock, fileObject.getParent(), filter.getName(), \"js\");\n@@ -417,2 +396,1 @@\n-                    FileObject newFileObject = fileObject.getParent().getFileObject(filter.getName());\n-                    fileObject = newFileObject;\n+                    fileObject = fileObject.getParent().getFileObject(filter.getName() + \".js\");\n@@ -460,2 +438,0 @@\n-            } catch (FileNotFoundException ex) {\n-                Exceptions.printStackTrace(ex);\n@@ -466,0 +442,1 @@\n+                    assert is != null;\n@@ -475,1 +452,0 @@\n-\n@@ -483,1 +459,1 @@\n-            if (enabled != null && (boolean) enabled) {\n+            if (enabled != null && enabled) {\n@@ -487,2 +463,0 @@\n-            cf.getChangedEvent().addListener(new FilterChangedListener(fo, cf));\n-\n@@ -514,1 +488,1 @@\n-            sequence.addFilter(cf);\n+            addFilter(cf);\n@@ -516,1 +490,1 @@\n-                filterChain.addFilter(cf);\n+                defaultFilterChain.addFilter(cf);\n@@ -577,34 +551,0 @@\n-    @Override\n-    public void componentOpened() {\n-        Lookup.Template<FilterChain> tpl = new Lookup.Template<>(FilterChain.class);\n-        result = Utilities.actionsGlobalContext().lookup(tpl);\n-        result.addLookupListener(this);\n-    }\n-\n-    @Override\n-    public void componentClosed() {\n-        result.removeLookupListener(this);\n-        result = null;\n-    }\n-\n-    @Override\n-    public void resultChanged(LookupEvent lookupEvent) {\n-        setChain(Utilities.actionsGlobalContext().lookup(FilterChain.class));\n-    }\n-\n-    public void setChain(FilterChain chain) {\n-        updateComboBoxSelection();\n-    }\n-\n-    private FileObject getFileObject(CustomFilter cf) {\n-        FileObject fo = FileUtil.getConfigRoot().getFileObject(FOLDER_ID + \"\/\" + cf.getName());\n-        if (fo == null) {\n-            try {\n-                fo = FileUtil.getConfigRoot().getFileObject(FOLDER_ID).createData(cf.getName());\n-            } catch (IOException ex) {\n-                Exceptions.printStackTrace(ex);\n-            }\n-        }\n-        return fo;\n-    }\n-\n@@ -629,0 +569,1 @@\n+\n@@ -633,6 +574,7 @@\n-        out.writeInt(filterSettings.size());\n-        for (FilterSetting f : filterSettings) {\n-            out.writeUTF(f.getName());\n-\n-            out.writeInt(f.getFilterCount());\n-            for (Filter filter : f.getFilters()) {\n+        out.writeUTF(getCurrentChain().getName());\n+        out.writeInt(comboBox.getItemCount());\n+        for (int i=0; i<comboBox.getItemCount(); i++) {\n+            FilterChain filterChain = comboBox.getItemAt(i);\n+            out.writeUTF(filterChain.getName());\n+            out.writeInt(filterChain.getFilters().size());\n+            for (Filter filter : filterChain.getFilters()) {\n@@ -644,17 +586,3 @@\n-        CustomFilter prev = null;\n-        for (Filter f : this.sequence.getFilters()) {\n-            CustomFilter cf = (CustomFilter) f;\n-            FileObject fo = getFileObject(cf);\n-            if (getFilterChain().containsFilter(cf)) {\n-                fo.setAttribute(ENABLED_ID, true);\n-            } else {\n-                fo.setAttribute(ENABLED_ID, false);\n-            }\n-\n-            if (prev == null) {\n-                fo.setAttribute(AFTER_ID, null);\n-            } else {\n-                fo.setAttribute(AFTER_ID, prev.getName());\n-            }\n-\n-            prev = cf;\n+        out.writeInt(allFiltersOrdered.getFilters().size());\n+        for (Filter filter : allFiltersOrdered.getFilters()) {\n+            out.writeUTF(filter.getName());\n@@ -664,12 +592,0 @@\n-    public CustomFilter findFilter(String name) {\n-        for (Filter f : sequence.getFilters()) {\n-\n-            CustomFilter cf = (CustomFilter) f;\n-            if (cf.getName().equals(name)) {\n-                return cf;\n-            }\n-        }\n-\n-        return null;\n-    }\n-\n@@ -680,0 +596,1 @@\n+        String selectedChainName = in.readUTF();\n@@ -683,1 +600,0 @@\n-            FilterSetting s = new FilterSetting(name);\n@@ -685,0 +601,1 @@\n+            FilterChain filterChain = new FilterChain(name);\n@@ -689,1 +606,11 @@\n-                    s.addFilter(filter);\n+                    filterChain.addFilter(filter);\n+                }\n+            }\n+            if (Objects.equals(filterChain.getName(), customFilterChain.getName())) {\n+                setCustomFilterChain(filterChain);\n+            } else {\n+                for (int cnt=0; cnt<comboBox.getItemCount(); cnt++) {\n+                    FilterChain s = comboBox.getItemAt(cnt);\n+                    if (s.getName().equals(name)) {\n+                        comboBox.removeItem(s);\n+                    }\n@@ -691,0 +618,4 @@\n+                comboBox.addItem(filterChain);\n+            }\n+            if (selectedChainName.equals(filterChain.getName())) {\n+                selectFilterChain(filterChain);\n@@ -692,0 +623,10 @@\n+        }\n+\n+        ArrayList<String> order = new ArrayList<>();\n+        int filterOrderCount = in.readInt();\n+        for (int i = 0; i < filterOrderCount; i++) {\n+            String name = in.readUTF();\n+            order.add(name);\n+        }\n+        allFiltersOrdered.sortBy(order);\n+    }\n@@ -693,1 +634,6 @@\n-            filterSettings.add(s);\n+    public CustomFilter findFilter(String name) {\n+        for (Filter f : allFiltersOrdered.getFilters()) {\n+            CustomFilter cf = (CustomFilter) f;\n+            if (cf.getName().equals(name)) {\n+                return cf;\n+            }\n@@ -695,1 +641,2 @@\n-        updateComboBox();\n+\n+        return null;\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterTopComponent.java","additions":228,"deletions":281,"binary":false,"changes":509,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-            FilterTopComponent.findInstance().getSequence().moveFilterDown(c);\n+            FilterTopComponent.findInstance().getAllFiltersOrdered().moveFilterDown(c);\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/MoveFilterDownAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-            FilterTopComponent.findInstance().getSequence().moveFilterUp(c);\n+            FilterTopComponent.findInstance().getAllFiltersOrdered().moveFilterUp(c);\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/MoveFilterUpAction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import com.sun.hotspot.igv.filter.CustomFilter;\n@@ -57,2 +58,2 @@\n-            for (int i = 0; i < activatedNodes.length; i++) {\n-                FilterTopComponent.findInstance().removeFilter(activatedNodes[i].getLookup().lookup(Filter.class));\n+            for (Node activatedNode : activatedNodes) {\n+                FilterTopComponent.findInstance().removeFilter(activatedNode.getLookup().lookup(CustomFilter.class));\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/RemoveFilterAction.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-        <file name=\"Color by category\" url=\"filters\/color.filter\">\n+        <file name=\"Color by category.js\" url=\"filters\/color.filter\">\n@@ -8,1 +8,1 @@\n-        <file name=\"Color by execution frequency\" url=\"filters\/colorFrequency.filter\">\n+        <file name=\"Color by execution frequency.js\" url=\"filters\/colorFrequency.filter\">\n@@ -12,1 +12,1 @@\n-        <file name=\"Show node warnings\" url=\"filters\/showWarnings.filter\">\n+        <file name=\"Show node warnings.js\" url=\"filters\/showWarnings.filter\">\n@@ -16,1 +16,1 @@\n-        <file name=\"Simplify graph\" url=\"filters\/structural.filter\">\n+        <file name=\"Simplify graph.js\" url=\"filters\/structural.filter\">\n@@ -20,1 +20,1 @@\n-        <file name=\"Hide data subgraph\" url=\"filters\/hideData.filter\">\n+        <file name=\"Hide data subgraph.js\" url=\"filters\/hideData.filter\">\n@@ -24,1 +24,1 @@\n-        <file name=\"Hide memory subgraph\" url=\"filters\/hideMemory.filter\">\n+        <file name=\"Hide memory subgraph.js\" url=\"filters\/hideMemory.filter\">\n@@ -28,1 +28,1 @@\n-        <file name=\"Hide control subgraph\" url=\"filters\/hideControl.filter\">\n+        <file name=\"Hide control subgraph.js\" url=\"filters\/hideControl.filter\">\n@@ -32,1 +32,1 @@\n-        <file name=\"Hide mixed subgraph\" url=\"filters\/hideMixed.filter\">\n+        <file name=\"Hide mixed subgraph.js\" url=\"filters\/hideMixed.filter\">\n@@ -36,1 +36,1 @@\n-        <file name=\"Hide other subgraph\" url=\"filters\/hideOther.filter\">\n+        <file name=\"Hide other subgraph.js\" url=\"filters\/hideOther.filter\">\n@@ -40,1 +40,1 @@\n-        <file name=\"Show control flow only\" url=\"filters\/onlyControlFlow.filter\">\n+        <file name=\"Show control flow only.js\" url=\"filters\/onlyControlFlow.filter\">\n@@ -44,1 +44,1 @@\n-        <file name=\"Hide data edges\" url=\"filters\/hideDataEdges.filter\">\n+        <file name=\"Hide data edges.js\" url=\"filters\/hideDataEdges.filter\">\n@@ -48,1 +48,1 @@\n-        <file name=\"Hide memory edges\" url=\"filters\/hideMemoryEdges.filter\">\n+        <file name=\"Hide memory edges.js\" url=\"filters\/hideMemoryEdges.filter\">\n@@ -52,1 +52,1 @@\n-        <file name=\"Hide control edges\" url=\"filters\/hideControlEdges.filter\">\n+        <file name=\"Hide control edges.js\" url=\"filters\/hideControlEdges.filter\">\n@@ -56,1 +56,1 @@\n-        <file name=\"Hide mixed edges\" url=\"filters\/hideMixedEdges.filter\">\n+        <file name=\"Hide mixed edges.js\" url=\"filters\/hideMixedEdges.filter\">\n@@ -60,1 +60,1 @@\n-        <file name=\"Hide other edges\" url=\"filters\/hideOtherEdges.filter\">\n+        <file name=\"Hide other edges.js\" url=\"filters\/hideOtherEdges.filter\">\n@@ -64,1 +64,1 @@\n-        <file name=\"Hide root block\" url=\"filters\/hideRootBlock.filter\">\n+        <file name=\"Hide root block.js\" url=\"filters\/hideRootBlock.filter\">\n@@ -68,1 +68,1 @@\n-        <file name=\"Hide uncommon trap blocks\" url=\"filters\/hideUncommonTrapBlocks.filter\">\n+        <file name=\"Hide uncommon trap blocks.js\" url=\"filters\/hideUncommonTrapBlocks.filter\">\n@@ -72,1 +72,1 @@\n-        <file name=\"Hide exception blocks\" url=\"filters\/hideExceptionBlocks.filter\">\n+        <file name=\"Hide exception blocks.js\" url=\"filters\/hideExceptionBlocks.filter\">\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/main\/resources\/com\/sun\/hotspot\/igv\/servercompiler\/layer.xml","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -48,0 +48,8 @@\n+    public RangeSliderModel(RangeSliderModel model) {\n+        this();\n+        firstPosition = model.getFirstPosition();\n+        secondPosition = model.getSecondPosition();\n+        positions = new ArrayList<>(model.getPositions());\n+        colors = new ArrayList<>(model.getColors());\n+    }\n+\n@@ -49,0 +57,2 @@\n+        firstPosition = -1;\n+        secondPosition = -1;\n","filename":"src\/utils\/IdealGraphVisualizer\/Util\/src\/main\/java\/com\/sun\/hotspot\/igv\/util\/RangeSliderModel.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -490,1 +490,0 @@\n-        update();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    private final Group group;\n+    private Group group;\n@@ -55,1 +55,3 @@\n-    private final FilterChain filterChain;\n+    private FilterChain filterChain;\n+    private final FilterChain customFilterChain;\n+    private final FilterChain filtersOrder;\n@@ -58,4 +60,4 @@\n-    private final ChangedEvent<DiagramViewModel> diagramChangedEvent;\n-    private final ChangedEvent<DiagramViewModel> graphChangedEvent;\n-    private final ChangedEvent<DiagramViewModel> selectedNodesChangedEvent;\n-    private final ChangedEvent<DiagramViewModel> hiddenNodesChangedEvent;\n+    private final ChangedEvent<DiagramViewModel> diagramChangedEvent = new ChangedEvent<>(this);\n+    private final ChangedEvent<DiagramViewModel> graphChangedEvent = new ChangedEvent<>(this);\n+    private final ChangedEvent<DiagramViewModel> selectedNodesChangedEvent = new ChangedEvent<>(this);\n+    private final ChangedEvent<DiagramViewModel> hiddenNodesChangedEvent = new ChangedEvent<>(this);\n@@ -81,1 +83,1 @@\n-    public void setGlobalSelection(boolean enable) {\n+    public void setGlobalSelection(boolean enable, boolean fire) {\n@@ -83,1 +85,3 @@\n-        diagramChangedEvent.fire();\n+        if (fire && enable) {\n+            diagramChangedEvent.fire();\n+        }\n@@ -90,3 +94,5 @@\n-    public void setShowSea(boolean b) {\n-        showSea = b;\n-        diagramChangedEvent.fire();\n+    public void setShowSea(boolean enable) {\n+        showSea = enable;\n+        if (enable) {\n+            diagramChangedEvent.fire();\n+        }\n@@ -99,3 +105,5 @@\n-    public void setShowBlocks(boolean b) {\n-        showBlocks = b;\n-        diagramChangedEvent.fire();\n+    public void setShowBlocks(boolean enable) {\n+        showBlocks = enable;\n+        if (enable) {\n+            diagramChangedEvent.fire();\n+        }\n@@ -108,3 +116,5 @@\n-    public void setShowCFG(boolean b) {\n-        showCFG = b;\n-        diagramChangedEvent.fire();\n+    public void setShowCFG(boolean enable) {\n+        showCFG = enable;\n+        if (enable) {\n+            diagramChangedEvent.fire();\n+        }\n@@ -150,0 +160,44 @@\n+    private void init(Group group) {\n+        this.group = group;\n+        this.group.getChangedEvent().addListener(g -> {\n+            assert g == this.group;\n+            if (this.group.getGraphs().isEmpty()) {\n+                \/\/ If the group has been emptied, all corresponding graph views\n+                \/\/ will be closed, so do nothing.\n+                return;\n+            }\n+            filterGraphs();\n+            setSelectedNodes(selectedNodes);\n+        });\n+        filterGraphs();\n+        super.getChangedEvent().addListener(this);\n+    }\n+\n+    public DiagramViewModel(DiagramViewModel model) {\n+        super(model);\n+        globalSelection = false;\n+        init(model.getGroup());\n+        graphs = new ArrayList<>(model.graphs);\n+\n+        \/\/ initialize the filters from a model\n+        FilterChainProvider provider = Lookup.getDefault().lookup(FilterChainProvider.class);\n+        assert provider != null;\n+        customFilterChain = provider.createNewCustomFilterChain();\n+        customFilterChain.clearFilters();\n+        customFilterChain.addFilters(model.getCustomFilterChain().getFilters());\n+        setFilterChain(model.getFilterChain(), customFilterChain);\n+        filtersOrder = provider.getAllFiltersOrdered();\n+\n+        globalSelection = GlobalSelectionAction.get(GlobalSelectionAction.class).isSelected();\n+        showCFG = model.getShowCFG();\n+        showSea = model.getShowSea();\n+        showBlocks = model.getShowBlocks();\n+        showNodeHull = model.getShowNodeHull();\n+        showEmptyBlocks = model.getShowEmptyBlocks();\n+        hideDuplicates = model.getHideDuplicates();\n+\n+        hiddenNodes = new HashSet<>(model.getHiddenNodes());\n+        selectedNodes = new HashSet<>();\n+        changed(this);\n+    }\n+\n@@ -151,0 +205,2 @@\n+        init(graph.getGroup());\n+\n@@ -152,5 +208,5 @@\n-        if (provider == null) {\n-            filterChain = new FilterChain();\n-        } else {\n-            filterChain = provider.getFilterChain();\n-        }\n+        assert provider != null;\n+        customFilterChain = provider.createNewCustomFilterChain();\n+        setFilterChain(provider.getFilterChain(), customFilterChain);\n+        filtersOrder = provider.getAllFiltersOrdered();\n+\n@@ -163,1 +219,2 @@\n-        group = graph.getGroup();\n+        hideDuplicates = false;\n+\n@@ -166,25 +223,0 @@\n-\n-        diagramChangedEvent = new ChangedEvent<>(this);\n-        graphChangedEvent = new ChangedEvent<>(this);\n-        selectedNodesChangedEvent = new ChangedEvent<>(this);\n-        hiddenNodesChangedEvent = new ChangedEvent<>(this);\n-\n-        super.getChangedEvent().addListener(this);\n-\n-        \/\/ If the group has been emptied, all corresponding graph views\n-        \/\/ will be closed, so do nothing.\n-        ChangedListener<Group> groupContentChangedListener = g -> {\n-            assert g == group;\n-            if (group.getGraphs().isEmpty()) {\n-                \/\/ If the group has been emptied, all corresponding graph views\n-                \/\/ will be closed, so do nothing.\n-                return;\n-            }\n-            filterGraphs();\n-            setSelectedNodes(selectedNodes);\n-        };\n-\n-        group.getChangedEvent().addListener(groupContentChangedListener);\n-        filterChain.getChangedEvent().addListener(filterChainChangedListener);\n-\n-        filterGraphs();\n@@ -293,2 +325,10 @@\n-    public FilterChain getSequenceFilterChain() {\n-        return filterChain;\n+    private void setFilterChain(FilterChain newFC, FilterChain customFC) {\n+        if (filterChain != null) {\n+            filterChain.getChangedEvent().removeListener(filterChainChangedListener);\n+        }\n+        if (newFC.getName().equals(customFC.getName())) {\n+            filterChain = customFC;\n+        } else {\n+            filterChain = newFC;\n+        }\n+        filterChain.getChangedEvent().addListener(filterChainChangedListener);\n@@ -297,0 +337,15 @@\n+    void activateModel() {\n+        FilterChainProvider provider = Lookup.getDefault().lookup(FilterChainProvider.class);\n+        if (provider != null) {\n+            provider.setCustomFilterChain(customFilterChain);\n+            provider.selectFilterChain(filterChain);\n+\n+            \/\/ link the Filters window with this model\n+            provider.setFilterChainSelectionChangedListener(l -> {\n+                \/\/ this function is called when user selects a different filter profile for this model\n+                setFilterChain(provider.getFilterChain(), customFilterChain);\n+            });\n+        }\n+    }\n+\n+    \/\/ called when the filter in filterChain changed, but not filterChain itself\n@@ -298,0 +353,2 @@\n+        FilterChainProvider provider = Lookup.getDefault().lookup(FilterChainProvider.class);\n+        assert provider == null || (filterChain == provider.getFilterChain());\n@@ -302,0 +359,5 @@\n+    void close() {\n+        filterChain.getChangedEvent().removeListener(filterChainChangedListener);\n+        getChangedEvent().fire();\n+    }\n+\n@@ -315,1 +377,1 @@\n-        getFilterChain().apply(diagram, getSequenceFilterChain());\n+        filterChain.applyInOrder(diagram, filtersOrder);\n@@ -330,0 +392,4 @@\n+    public FilterChain getCustomFilterChain() {\n+        return customFilterChain;\n+    }\n+\n@@ -434,5 +500,0 @@\n-    void close() {\n-        filterChain.getChangedEvent().removeListener(filterChainChangedListener);\n-        getChangedEvent().fire();\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":117,"deletions":56,"binary":false,"changes":173,"status":"modified"},{"patch":"@@ -31,3 +31,1 @@\n-import com.sun.hotspot.igv.filter.FilterChain;\n-import com.sun.hotspot.igv.filter.FilterChainProvider;\n-import com.sun.hotspot.igv.settings.Settings;\n+import com.sun.hotspot.igv.graph.Figure;\n@@ -36,0 +34,1 @@\n+import com.sun.hotspot.igv.util.StringUtils;\n@@ -49,1 +48,0 @@\n-import org.openide.util.Lookup;\n@@ -78,4 +76,0 @@\n-    public EditorTopComponent(InputGraph graph) {\n-        this(new DiagramViewModel(graph));\n-    }\n-\n@@ -375,0 +369,18 @@\n+    @Override\n+    public void setDisplayName(String displayName) {\n+        super.setDisplayName(displayName);\n+        if (useBoldDisplayName) {\n+            setHtmlDisplayName(\"<html><b>\" + StringUtils.escapeHTML(getDisplayName()) + \"<\/b>\");\n+        } else {\n+            setHtmlDisplayName(getDisplayName());\n+        }\n+    }\n+\n+    private boolean useBoldDisplayName = false;\n+\n+    private void setBoldDisplayName(boolean bold) {\n+        useBoldDisplayName = bold;\n+        setDisplayName(getDisplayName());\n+    }\n+\n+\n@@ -378,0 +390,11 @@\n+        getModel().activateModel();\n+        WindowManager manager = WindowManager.getDefault();\n+        for (Mode m : manager.getModes()) {\n+            for (TopComponent topComponent : manager.getOpenedTopComponents(m)) {\n+                if (topComponent instanceof EditorTopComponent) {\n+                    EditorTopComponent editor = (EditorTopComponent) topComponent;\n+                    editor.setBoldDisplayName(false);\n+                }\n+            }\n+        }\n+        setBoldDisplayName(true);\n@@ -393,11 +416,2 @@\n-        DiagramViewModel model = new DiagramViewModel(getModel().getFirstGraph());\n-        if (getModel().getGraph().isDiffGraph()) {\n-            model.setPositions(getModel().getFirstPosition(), getModel().getSecondPosition());\n-        }\n-        model.setHiddenNodes(new HashSet<>(getModel().getHiddenNodes()));\n-        model.setShowCFG(getModel().getShowCFG());\n-        model.setShowSea(getModel().getShowSea());\n-        model.setShowBlocks(getModel().getShowBlocks());\n-        model.setShowNodeHull(getModel().getShowNodeHull());\n-        model.setShowEmptyBlocks(getModel().getShowEmptyBlocks());\n-        model.setHideDuplicates(getModel().getHideDuplicates());\n+        DiagramViewModel model = new DiagramViewModel(getModel());\n+        model.setGlobalSelection(false, false);\n@@ -405,0 +419,7 @@\n+\n+        Set<InputNode> selectedNodes = new HashSet<>();\n+        for (Figure figure : getModel().getSelectedFigures()) {\n+            selectedNodes.add(figure.getInputNode());\n+        }\n+        etc.addSelectedNodes(selectedNodes, false);\n+        model.setGlobalSelection(GlobalSelectionAction.get(GlobalSelectionAction.class).isSelected(), false);\n@@ -406,0 +427,6 @@\n+\n+        int currentZoomLevel = scene.getZoomPercentage();\n+        SwingUtilities.invokeLater(() -> {\n+            etc.centerSelectedNodes();\n+            etc.setZoomLevel(currentZoomLevel);\n+        });\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":46,"deletions":19,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -65,4 +65,4 @@\n-\n-        EditorTopComponent tc = new EditorTopComponent(graph);\n-        tc.open();\n-        tc.requestActive();\n+        DiagramViewModel model = new DiagramViewModel(graph);\n+        EditorTopComponent etc = new EditorTopComponent(model);\n+        etc.open();\n+        etc.requestActive();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/GraphViewerImplementation.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-            SwingUtilities.invokeLater(() -> editor.getModel().setGlobalSelection(isSelected));\n+            SwingUtilities.invokeLater(() -> editor.getModel().setGlobalSelection(isSelected, true));\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/GlobalSelectionAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}