{"files":[{"patch":"@@ -33,0 +33,2 @@\n+import java.awt.Color;\n+import java.awt.Component;\n@@ -43,2 +45,1 @@\n-import javax.swing.JComboBox;\n-import javax.swing.UIManager;\n+import javax.swing.*;\n@@ -86,0 +87,2 @@\n+    private static final String CUSTOM_LABEL = \"--Local--\";\n+    private static final String GLOBAL_LABEL = \"Global\";\n@@ -89,1 +92,1 @@\n-        FilterChain newCustomFilterChain = new FilterChain(\"--Custom--\");\n+        FilterChain newCustomFilterChain = new FilterChain(CUSTOM_LABEL);\n@@ -94,0 +97,23 @@\n+    static class CustomCellRenderer extends DefaultListCellRenderer {\n+\n+        public CustomCellRenderer() {\n+            setOpaque(true);\n+        }\n+\n+        public Component getListCellRendererComponent(JList jc, Object val, int idx,\n+                                                      boolean isSelected, boolean cellHasFocus) {\n+            setText(\" \" + val.toString());\n+            if (idx == 0) {\n+                setForeground(Color.GRAY);\n+            } else {\n+                setForeground(Color.BLACK);\n+            }\n+            if (isSelected) {\n+                setBackground(Color.LIGHT_GRAY);\n+            } else {\n+                setBackground(Color.WHITE);\n+            }\n+            return this;\n+        }\n+    }\n+\n@@ -112,0 +138,1 @@\n+        comboBox.setRenderer(new CustomCellRenderer());\n@@ -113,0 +140,3 @@\n+        FilterChain globalFilterChain = new FilterChain(GLOBAL_LABEL);\n+        globalFilterChain.addFilters(defaultFilterChain.getFilters());\n+        comboBox.addItem(globalFilterChain);\n@@ -536,0 +566,56 @@\n+\n+\n+    @Override\n+    public void writeExternal(ObjectOutput out) throws IOException {\n+        super.writeExternal(out);\n+\n+        out.writeInt(comboBox.getItemCount()-1);\n+        for (int i=0; i<comboBox.getItemCount(); i++) {\n+            FilterChain filterChain = comboBox.getItemAt(i);\n+            if (filterChain != customFilterChain) {\n+                out.writeUTF(filterChain.getName());\n+                out.writeInt(filterChain.getFilters().size());\n+                for (Filter filter : filterChain.getFilters()) {\n+                    CustomFilter cf = (CustomFilter) filter;\n+                    out.writeUTF(cf.getName());\n+                }\n+            }\n+        }\n+    }\n+\n+    public CustomFilter findFilter(String name) {\n+        for (Filter f : allFilterChains.getFilters()) {\n+            CustomFilter cf = (CustomFilter) f;\n+            if (cf.getName().equals(name)) {\n+                return cf;\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    @Override\n+    public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n+        super.readExternal(in);\n+\n+        int filterSettingsCount = in.readInt();\n+        for (int i = 0; i < filterSettingsCount; i++) {\n+            String name = in.readUTF();\n+            int filterCount = in.readInt();\n+            FilterChain filterChain = new FilterChain(name);\n+            for (int j = 0; j < filterCount; j++) {\n+                String filterName = in.readUTF();\n+                CustomFilter filter = findFilter(filterName);\n+                if (filter != null) {\n+                    filterChain.addFilter(filter);\n+                }\n+            }\n+            for (int cnt=0; cnt<comboBox.getItemCount(); cnt++) {\n+                FilterChain s = comboBox.getItemAt(cnt);\n+                if (s.getName().equals(name)) {\n+                    comboBox.removeItem(s);\n+                }\n+            }\n+            comboBox.addItem(filterChain);\n+        }\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterTopComponent.java","additions":89,"deletions":3,"binary":false,"changes":92,"status":"modified"}]}