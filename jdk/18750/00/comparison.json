{"files":[{"patch":"@@ -27,1 +27,0 @@\n-#include \"gc\/serial\/defNewGeneration.inline.hpp\"\n@@ -913,1 +912,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -251,6 +251,0 @@\n-  \/\/ Need to declare the full complement of closures, whether we'll\n-  \/\/ override them or not, or get message from the compiler:\n-  \/\/   oop_since_save_marks_iterate_nv hides virtual function...\n-  template <typename OopClosureType>\n-  void oop_since_save_marks_iterate(OopClosureType* cl);\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,43 +0,0 @@\n-\/*\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_GC_SERIAL_DEFNEWGENERATION_INLINE_HPP\n-#define SHARE_GC_SERIAL_DEFNEWGENERATION_INLINE_HPP\n-\n-#include \"gc\/serial\/defNewGeneration.hpp\"\n-\n-#include \"gc\/serial\/cardTableRS.hpp\"\n-#include \"gc\/shared\/space.inline.hpp\"\n-#include \"oops\/access.inline.hpp\"\n-#include \"utilities\/devirtualizer.inline.hpp\"\n-\n-\/\/ Methods of protected closure types\n-\n-template <typename OopClosureType>\n-void DefNewGeneration::oop_since_save_marks_iterate(OopClosureType* cl) {\n-  Generation::oop_since_save_marks_iterate_impl(cl, to(), _saved_mark_word);\n-  set_saved_mark_word();\n-}\n-\n-#endif \/\/ SHARE_GC_SERIAL_DEFNEWGENERATION_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.inline.hpp","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -203,9 +203,0 @@\n-\n-  \/\/ Apply \"blk->do_oop\" to the addresses of all reference fields in objects\n-  \/\/ starting with the _saved_mark_word, which was noted during a generation's\n-  \/\/ save_marks and is required to denote the head of an object.\n-  \/\/ Fields in objects allocated by applications of the closure\n-  \/\/ *are* included in the iteration.\n-  \/\/ Updates saved_mark_word to point to just after the last object iterated over.\n-  template <typename OopClosureType>\n-  void oop_since_save_marks_iterate_impl(OopClosureType* blk, ContiguousSpace* space, HeapWord* saved_mark_word);\n@@ -214,17 +205,0 @@\n-template <typename OopClosureType>\n-void Generation::oop_since_save_marks_iterate_impl(OopClosureType* blk, ContiguousSpace* space, HeapWord* saved_mark_word) {\n-  HeapWord* t;\n-  HeapWord* p = saved_mark_word;\n-  assert(p != nullptr, \"expected saved mark\");\n-\n-  const intx interval = PrefetchScanIntervalInBytes;\n-  do {\n-    t = space->top();\n-    while (p < t) {\n-      Prefetch::write(p, interval);\n-      oop m = cast_to_oop(p);\n-      p += m->oop_iterate_size(blk);\n-    }\n-  } while (t < space->top());\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":0,"deletions":26,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-#include \"gc\/serial\/defNewGeneration.inline.hpp\"\n@@ -765,0 +764,17 @@\n+template <typename OopClosureType>\n+static void oop_iterate_from(OopClosureType* blk, ContiguousSpace* space, HeapWord* from) {\n+  assert(from != nullptr, \"precondition\");\n+  HeapWord* t;\n+  HeapWord* p = from;\n+\n+  const intx interval = PrefetchScanIntervalInBytes;\n+  do {\n+    t = space->top();\n+    while (p < t) {\n+      Prefetch::write(p, interval);\n+      oop m = cast_to_oop(p);\n+      p += m->oop_iterate_size(blk);\n+    }\n+  } while (t < space->top());\n+}\n+\n@@ -768,3 +784,14 @@\n-    young_gen()->oop_since_save_marks_iterate(young_cl);\n-    old_gen()->oop_since_save_marks_iterate(old_cl);\n-  } while (!no_allocs_since_save_marks());\n+    {\n+      HeapWord* saved_top = young_gen()->saved_mark_word();\n+      oop_iterate_from(young_cl, young_gen()->to(), saved_top);\n+      young_gen()->set_saved_mark_word();\n+    }\n+    {\n+      HeapWord* saved_top = old_gen()->saved_mark_word();\n+      oop_iterate_from(old_cl, old_gen()->space(), saved_top);\n+      old_gen()->set_saved_mark_word();\n+    }\n+    if (young_gen()->no_allocs_since_save_marks()) {\n+      break;\n+    }\n+  } while (true);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":31,"deletions":4,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"gc\/serial\/defNewGeneration.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.inline.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -141,3 +141,0 @@\n-  template <typename OopClosureType>\n-  void oop_since_save_marks_iterate(OopClosureType* cl);\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -60,6 +60,0 @@\n-template <typename OopClosureType>\n-void TenuredGeneration::oop_since_save_marks_iterate(OopClosureType* blk) {\n-  Generation::oop_since_save_marks_iterate_impl(blk, _the_space, _saved_mark_word);\n-  set_saved_mark_word();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.inline.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}