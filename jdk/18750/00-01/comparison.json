{"files":[{"patch":"@@ -34,1 +34,1 @@\n-void CardTableRS::scan_old_to_young_refs(TenuredGeneration* tg, HeapWord* saved_mark_word) {\n+void CardTableRS::scan_old_to_young_refs(TenuredGeneration* tg, HeapWord* saved_top) {\n@@ -36,1 +36,1 @@\n-  const MemRegion urasm = MemRegion(tg->space()->bottom(), saved_mark_word);\n+  const MemRegion urasm = MemRegion(tg->space()->bottom(), saved_top);\n@@ -39,1 +39,0 @@\n-         \"Did you forget to call save_marks()? \"\n","filename":"src\/hotspot\/share\/gc\/serial\/cardTableRS.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  void scan_old_to_young_refs(TenuredGeneration* tg, HeapWord* saved_mark_word);\n+  void scan_old_to_young_refs(TenuredGeneration* tg, HeapWord* saved_top);\n","filename":"src\/hotspot\/share\/gc\/serial\/cardTableRS.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -680,3 +680,0 @@\n-  assert(heap->no_allocs_since_save_marks(),\n-         \"save marks have not been newly set.\");\n-\n@@ -690,3 +687,0 @@\n-  assert(heap->no_allocs_since_save_marks(),\n-         \"save marks have not been newly set.\");\n-\n@@ -702,0 +696,1 @@\n+    HeapWord* saved_top_in_old_gen = _old_gen->space()->top();\n@@ -708,1 +703,1 @@\n-    _old_gen->scan_old_to_young_refs();\n+    _old_gen->scan_old_to_young_refs(saved_top_in_old_gen);\n@@ -725,1 +720,0 @@\n-  assert(heap->no_allocs_since_save_marks(), \"save marks have not been newly set.\");\n@@ -732,3 +726,0 @@\n-  \/\/ Verify that the usage of keep_alive didn't copy any objects.\n-  assert(heap->no_allocs_since_save_marks(), \"save marks have not been newly set.\");\n-\n@@ -894,8 +885,0 @@\n-void DefNewGeneration::save_marks() {\n-  set_saved_mark_word();\n-}\n-\n-bool DefNewGeneration::no_allocs_since_save_marks() {\n-  return saved_mark_at_top();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -174,4 +174,0 @@\n-  HeapWord* saved_mark_word()   const    { return _saved_mark_word; }\n-  void set_saved_mark_word()             { _saved_mark_word = to()->top(); }\n-  bool saved_mark_at_top()               { return _saved_mark_word == _to_space->top(); }\n-\n@@ -246,5 +242,0 @@\n-  \/\/ Accessing marks\n-  void save_marks();\n-\n-  bool no_allocs_since_save_marks();\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.hpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -746,4 +746,0 @@\n-  \/\/ Set saved marks for allocation profiler (and other things? -- dld)\n-  \/\/ (Should this be in general part?)\n-  gch->save_marks();\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/serialFullGC.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -759,5 +759,0 @@\n-bool SerialHeap::no_allocs_since_save_marks() {\n-  return _young_gen->no_allocs_since_save_marks() &&\n-         _old_gen->no_allocs_since_save_marks();\n-}\n-\n@@ -765,2 +760,2 @@\n-static void oop_iterate_from(OopClosureType* blk, ContiguousSpace* space, HeapWord* from) {\n-  assert(from != nullptr, \"precondition\");\n+static void oop_iterate_from(OopClosureType* blk, ContiguousSpace* space, HeapWord** from) {\n+  assert(*from != nullptr, \"precondition\");\n@@ -768,1 +763,1 @@\n-  HeapWord* p = from;\n+  HeapWord* p = *from;\n@@ -775,2 +770,1 @@\n-      oop m = cast_to_oop(p);\n-      p += m->oop_iterate_size(blk);\n+      p += cast_to_oop(p)->oop_iterate_size(blk);\n@@ -779,0 +773,2 @@\n+\n+  *from = space->top();\n@@ -784,14 +780,3 @@\n-    {\n-      HeapWord* saved_top = young_gen()->saved_mark_word();\n-      oop_iterate_from(young_cl, young_gen()->to(), saved_top);\n-      young_gen()->set_saved_mark_word();\n-    }\n-    {\n-      HeapWord* saved_top = old_gen()->saved_mark_word();\n-      oop_iterate_from(old_cl, old_gen()->space(), saved_top);\n-      old_gen()->set_saved_mark_word();\n-    }\n-    if (young_gen()->no_allocs_since_save_marks()) {\n-      break;\n-    }\n-  } while (true);\n+    oop_iterate_from(young_cl, young_gen()->to(), &_young_gen_saved_top);\n+    oop_iterate_from(old_cl, old_gen()->space(), &_old_gen_saved_top);\n+  } while (_young_gen_saved_top != young_gen()->to()->top());\n@@ -964,2 +949,2 @@\n-  _young_gen->save_marks();\n-  _old_gen->save_marks();\n+  _young_gen_saved_top = _young_gen->to()->top();\n+  _old_gen_saved_top = _old_gen->space()->top();\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":11,"deletions":26,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -88,1 +88,2 @@\n-\n+  HeapWord* _young_gen_saved_top;\n+  HeapWord* _old_gen_saved_top;\n@@ -282,4 +283,0 @@\n-  \/\/ Returns \"true\" iff no allocations have occurred since the last\n-  \/\/ call to \"save_marks\".\n-  bool no_allocs_since_save_marks();\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -283,2 +283,2 @@\n-void TenuredGeneration::scan_old_to_young_refs() {\n-  _rs->scan_old_to_young_refs(this, saved_mark_word());\n+void TenuredGeneration::scan_old_to_young_refs(HeapWord* saved_top_in_old_gen) {\n+  _rs->scan_old_to_young_refs(this, saved_top_in_old_gen);\n@@ -507,8 +507,0 @@\n-void TenuredGeneration::save_marks() {\n-  set_saved_mark_word();\n-}\n-\n-bool TenuredGeneration::no_allocs_since_save_marks() {\n-  return saved_mark_at_top();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.cpp","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -93,2 +93,0 @@\n-  void set_saved_mark_word() { _saved_mark_word = _the_space->top(); }\n-  bool saved_mark_at_top() { return _saved_mark_word == space()->top(); }\n@@ -117,1 +115,1 @@\n-  void scan_old_to_young_refs();\n+  void scan_old_to_young_refs(HeapWord* saved_top_in_old_gen);\n@@ -141,4 +139,0 @@\n-  void save_marks();\n-\n-  bool no_allocs_since_save_marks();\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.hpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"}]}