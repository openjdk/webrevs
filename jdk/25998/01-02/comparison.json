{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import java.util.Objects;\n@@ -34,4 +35,0 @@\n-import static java.util.Objects.requireNonNull;\n-import static jdk.internal.util.Preconditions.AIOOBE_FORMATTER;\n-import static jdk.internal.util.Preconditions.checkFromIndexSize;\n-\n@@ -104,1 +101,1 @@\n-        checkFromIndexSize(off, len, requireNonNull(ba, \"ba\").length, AIOOBE_FORMATTER);\n+        Preconditions.checkFromIndexSize(off, len, Objects.requireNonNull(ba, \"ba\").length, Preconditions.AIOOBE_FORMATTER);\n@@ -149,3 +146,6 @@\n-    static int encodeISOArray(byte[] sa, int sp, byte[] da, int dp, int len) {\n-        checkFromIndexSize(sp, len << 1, requireNonNull(sa, \"sa\").length, AIOOBE_FORMATTER);\n-        checkFromIndexSize(dp, len, requireNonNull(da, \"da\").length, AIOOBE_FORMATTER);\n+    static int encodeISOArray(byte[] sa, int sp,\n+                              byte[] da, int dp, int len) {\n+        Objects.requireNonNull(sa, \"sa\");\n+        Objects.requireNonNull(da, \"da\");\n+        Preconditions.checkFromIndexSize(sp, len << 1, sa.length, Preconditions.AIOOBE_FORMATTER);\n+        Preconditions.checkFromIndexSize(dp, len, da.length, Preconditions.AIOOBE_FORMATTER);\n@@ -156,1 +156,2 @@\n-    private static int encodeISOArray0(byte[] sa, int sp, byte[] da, int dp, int len) {\n+    private static int encodeISOArray0(byte[] sa, int sp,\n+                                       byte[] da, int dp, int len) {\n@@ -162,1 +163,1 @@\n-            da[dp++] = (byte) c;\n+            da[dp++] = (byte)c;\n@@ -182,3 +183,6 @@\n-    static int encodeAsciiArray(char[] sa, int sp, byte[] da, int dp, int len) {\n-        checkFromIndexSize(sp, len, requireNonNull(sa, \"sa\").length, AIOOBE_FORMATTER);\n-        checkFromIndexSize(dp, len, requireNonNull(da, \"da\").length, AIOOBE_FORMATTER);\n+    static int encodeAsciiArray(char[] sa, int sp,\n+                                byte[] da, int dp, int len) {\n+        Objects.requireNonNull(sa, \"sa\");\n+        Objects.requireNonNull(da, \"da\");\n+        Preconditions.checkFromIndexSize(sp, len, sa.length, Preconditions.AIOOBE_FORMATTER);\n+        Preconditions.checkFromIndexSize(dp, len, da.length, Preconditions.AIOOBE_FORMATTER);\n@@ -189,1 +193,2 @@\n-    private static int encodeAsciiArray0(char[] sa, int sp, byte[] da, int dp, int len) {\n+    private static int encodeAsciiArray0(char[] sa, int sp,\n+                                         byte[] da, int dp, int len) {\n@@ -195,1 +200,1 @@\n-            da[dp++] = (byte) c;\n+            da[dp++] = (byte)c;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringCoding.java","additions":20,"deletions":15,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import java.util.Objects;\n@@ -41,4 +42,0 @@\n-import static java.util.Objects.requireNonNull;\n-import static jdk.internal.util.Preconditions.AIOOBE_FORMATTER;\n-import static jdk.internal.util.Preconditions.checkFromIndexSize;\n-\n@@ -164,3 +161,6 @@\n-        private static int encodeISOArray(char[] sa, int sp, byte[] da, int dp, int len) {\n-            checkFromIndexSize(sp, len, requireNonNull(sa, \"sa\").length, AIOOBE_FORMATTER);\n-            checkFromIndexSize(dp, len, requireNonNull(da, \"da\").length, AIOOBE_FORMATTER);\n+        private static int encodeISOArray(char[] sa, int sp,\n+                                          byte[] da, int dp, int len) {\n+            Objects.requireNonNull(sa, \"sa\");\n+            Objects.requireNonNull(da, \"da\");\n+            Preconditions.checkFromIndexSize(sp, len, sa.length, Preconditions.AIOOBE_FORMATTER);\n+            Preconditions.checkFromIndexSize(dp, len, da.length, Preconditions.AIOOBE_FORMATTER);\n@@ -177,1 +177,1 @@\n-                da[dp++] = (byte) c;\n+                da[dp++] = (byte)c;\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/ISO_8859_1.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}