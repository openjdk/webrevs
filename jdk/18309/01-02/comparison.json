{"files":[{"patch":"@@ -32,0 +32,5 @@\n+\/* A test to demonstrate type pollution. Run it with and without\n+ * -XX:-HashSecondarySupers -XX:-UseSecondarySuperCache to see the\n+ * effect.\n+ *\n+ *\/\n@@ -81,1 +86,1 @@\n-    Random rand = new Random(0);\n+    public Random rand = new Random(0);\n@@ -85,1 +90,1 @@\n-        objectArray = new Object[100];\n+        objectArray = new Object[1000];\n@@ -99,0 +104,2 @@\n+    int probe = 99;\n+\n@@ -102,2 +109,5 @@\n-        for (int i = 0; i < objectArray.length; i++) {\n-            dummy += switch(objectArray[i]) {\n+        for (int i = 0; i < 100; i++) {\n+            probe ^= probe << 13;   \/\/ xorshift\n+            probe ^= probe >>> 17;\n+            probe ^= probe << 5;\n+            dummy += switch(objectArray[Math.abs(probe) % objectArray.length]) {\n@@ -114,9 +124,12 @@\n-            dummy += switch(objectArray[i]) {\n-            case I08 inst -> 8;\n-            case I07 inst -> 7;\n-            case I06 inst -> 6;\n-            case I05 inst -> 5;\n-            case I04 inst -> 4;\n-            case I03 inst -> 3;\n-            case I02 inst -> 2;\n-            case I01 inst -> 1;\n+            probe ^= probe << 13;   \/\/ xorshift\n+            probe ^= probe >>> 17;\n+            probe ^= probe << 5;\n+            dummy += switch(objectArray[Math.abs(probe) % objectArray.length]) {\n+            case I18 inst -> 8;\n+            case I17 inst -> 7;\n+            case I16 inst -> 6;\n+            case I15 inst -> 5;\n+            case I14 inst -> 4;\n+            case I13 inst -> 3;\n+            case I12 inst -> 2;\n+            case I11 inst -> 1;\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/lang\/TypePollution.java","additions":26,"deletions":13,"binary":false,"changes":39,"status":"modified"}]}