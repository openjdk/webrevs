{"files":[{"patch":"@@ -2083,1 +2083,4 @@\n-    return rhs_t->get_con() % (type2aelembytes(bt) * BitsPerByte);\n+    long shift = rhs_t->get_con();\n+    assert(shift >= 0 && shift < type2aelembytes(bt) * BitsPerByte,\n+           \"shift amount should have been masked already: %ld\", shift);\n+    return shift;\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -49,2 +49,2 @@\n-    static final int INT_MASK = RANDOM.nextInt() & INT_MAX_MASK;\n-    static final int INT_MASK2 = RANDOM.nextInt() & INT_MAX_MASK;\n+    static final int INT_MASK = 1 + RANDOM.nextInt(INT_MAX_MASK);\n+    static final int INT_MASK2 = 1 + RANDOM.nextInt(INT_MAX_MASK);\n@@ -56,2 +56,2 @@\n-    static final long LONG_MASK = RANDOM.nextLong() & LONG_MAX_MASK;\n-    static final long LONG_MASK2 = RANDOM.nextLong() & LONG_MAX_MASK;\n+    static final long LONG_MASK = 1 + RANDOM.nextLong(LONG_MAX_MASK);\n+    static final long LONG_MASK2 = 1 + RANDOM.nextLong(LONG_MAX_MASK);\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestShiftAndMask.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}