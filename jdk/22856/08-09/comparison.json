{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-            dst[i] = src[i] * (i & 7);\n+            dst[i] = src[i] * (i | 7);\n@@ -91,1 +91,1 @@\n-            int expected = src[i] * (i & 7);\n+            int expected = src[i] * (i | 7);\n@@ -115,0 +115,18 @@\n+\n+    @Test\n+    @IR(counts = {IRNode.POPULATE_INDEX, \"= 0\"}) \/\/ disabled by sum-under-mask optimization.\n+    public void exprWithIndex3() {\n+        for (int i = 0; i < count; i++) {\n+            dst[i] = src[i] * (i & 7);\n+        }\n+        checkResultExprWithIndex3();\n+    }\n+\n+    public void checkResultExprWithIndex3() {\n+        for (int i = 0; i < count; i++) {\n+            int expected = src[i] * (i & 7);\n+            if (dst[i] != expected) {\n+                throw new RuntimeException(\"Invalid result: dst[\" + i + \"] = \" + dst[i] + \" != \" + expected);\n+            }\n+        }\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestPopulateIndex.java","additions":21,"deletions":3,"binary":false,"changes":24,"status":"modified"}]}