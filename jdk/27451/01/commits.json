[{"commit":{"message":"* fix copyright year"},"files":[{"filename":"test\/jdk\/jdk\/jfr\/event\/gc\/detailed\/TestGCHeapMemoryUsageEvent.java"}],"sha":"611551fd5b7d7ac80b338554968d04a087aadc45"},{"commit":{"message":"8368367\n\nHi all,\n\n  please review this change to the TestGCHeapMemoryUsageEvent test that checks whether these kind of events are posted and contain some sensibles values.\n\nIn this failure, the `used` metric for the first of two events that is checked was zero. This is because G1, the default collector, updates the `used` value only at certain synchronization points to avoid inconsistencies in other cases. One of these synchronization points is region refill. With the 30gb heap in the test environment, region size is larger than what is allocated during startup, so no region refill\/synchronization point has been reached yet, and `used` turns out to be `0`.\n\nThis change fixes this by checking the last event instead of the first, it must have happened after that `system.gc()` call in the test, and `used` ought to be larger than zero because of allocations during VM startup.\n\nAn alternative could be limiting the test's heap size to something small, that would also help, but I thought this might need additional explanations.\n\nTesting: local runs with G1 heap region size >= 16M or so do not fail any more.\n\nThanks,\n  Thomas"},"files":[{"filename":"test\/jdk\/jdk\/jfr\/event\/gc\/detailed\/TestGCHeapMemoryUsageEvent.java"}],"sha":"067570a1a454a5b98a4926dc7eec62ce61e73ad4"}]