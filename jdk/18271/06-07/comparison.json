{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,3 +26,7 @@\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n+\n+\n+import static java.lang.classfile.ClassFile.*;\n+import static java.lang.constant.ConstantDescs.*;\n@@ -34,0 +38,1 @@\n+ * @enablePreview\n@@ -36,2 +41,1 @@\n- * @modules java.base\/jdk.internal.org.objectweb.asm\n- *          java.base\/jdk.internal.misc\n+ * @modules java.base\/jdk.internal.misc\n@@ -40,4 +44,4 @@\n- * @run driver TestMultiANewArray 49\n- * @run driver TestMultiANewArray 50\n- * @run driver TestMultiANewArray 51\n- * @run driver TestMultiANewArray 52\n+ * @run main\/othervm --enable-preview TestMultiANewArray 49\n+ * @run main\/othervm --enable-preview TestMultiANewArray 50\n+ * @run main\/othervm --enable-preview TestMultiANewArray 51\n+ * @run main\/othervm --enable-preview TestMultiANewArray 52\n@@ -58,21 +62,1 @@\n-        ClassWriter cw = new ClassWriter(0);\n-        MethodVisitor mv;\n-\n-        cw.visit(cfv, ACC_PUBLIC + ACC_SUPER, \"ClassFile\", null, \"java\/lang\/Object\", null);\n-        mv = cw.visitMethod(ACC_PUBLIC, \"<init>\", \"()V\", null, null);\n-        mv.visitCode();\n-        mv.visitVarInsn(ALOAD, 0);\n-        mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\", false);\n-        mv.visitInsn(RETURN);\n-        mv.visitMaxs(1, 1);\n-        mv.visitEnd();\n-\n-        mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, \"main\", \"([Ljava\/lang\/String;)V\", null, null);\n-        mv.visitCode();\n-        mv.visitInsn(ICONST_1);\n-        mv.visitInsn(ICONST_2);\n-        mv.visitMultiANewArrayInsn(\"[I\", 2);\n-        mv.visitVarInsn(ASTORE, 1);\n-        mv.visitInsn(RETURN);\n-        mv.visitMaxs(2, 2);\n-        mv.visitEnd();\n+        byte[] bytes;\n@@ -80,1 +64,19 @@\n-        cw.visitEnd();\n+        bytes = ClassFile.of().build(ClassDesc.of(\"ClassFile\"),\n+                    clb -> clb\n+                            .withVersion(cfv, 0)\n+                            .withSuperclass(CD_Object)\n+                            .withFlags(ACC_PUBLIC + ACC_SUPER)\n+                            .withMethodBody(INIT_NAME, MTD_void, ACC_PUBLIC,\n+                                    cob -> cob\n+                                            .aload(0)\n+                                            .invokespecial(CD_Object, INIT_NAME, MTD_void)\n+                                            .return_())\n+                            .withMethodBody(\"main\", MethodTypeDesc.of(CD_void, CD_String.arrayType()),ACC_PUBLIC + ACC_STATIC,\n+                                    cob -> cob\n+                                            .iconst_1()\n+                                            .iconst_2()\n+                                            .multianewarray(CD_int.arrayType(), 2)\n+                                            .astore(1)\n+                                            .return_()\n+                            )\n+        );\n@@ -83,1 +85,1 @@\n-             fos.write(cw.toByteArray());\n+             fos.write(bytes);\n","filename":"test\/hotspot\/jtreg\/runtime\/verifier\/TestMultiANewArray.java","additions":35,"deletions":33,"binary":false,"changes":68,"status":"modified"}]}