{"files":[{"patch":"@@ -50,1 +50,0 @@\n-    private static final ClassDesc CD_LPrintStream = ClassDesc.ofDescriptor(\"Ljava\/io\/PrintStream;\");\n@@ -73,1 +72,1 @@\n-                                            .getstatic(CD_System, \"out\", CD_LPrintStream)\n+                                            .getstatic(CD_System, \"out\", CD_PrintStream)\n@@ -79,1 +78,1 @@\n-                                            .getstatic(CD_System, \"out\", CD_LPrintStream)\n+                                            .getstatic(CD_System, \"out\", CD_PrintStream)\n@@ -106,1 +105,1 @@\n-                                            .getstatic(CD_System, \"out\", CD_LPrintStream)\n+                                            .getstatic(CD_System, \"out\", CD_PrintStream)\n@@ -112,1 +111,1 @@\n-                                            .getstatic(CD_System, \"out\", CD_LPrintStream)\n+                                            .getstatic(CD_System, \"out\", CD_PrintStream)\n@@ -154,1 +153,1 @@\n-                ClassDesc.of(\"InvokeBasicref\"), \"runInvokeBasicM\", \"()V\");\n+                CD_MethodHandle, \"invokeBasic\", \"([Ljava\/lang\/Object;)Ljava\/lang\/Object;\");\n","filename":"test\/hotspot\/jtreg\/runtime\/ConstantPool\/BadMethodHandles.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-                                        .invokespecial(cob.constantPool().interfaceMethodRefEntry(ClassDesc.of(\"C\"), \"f1\", MTD_void))\n+                                        .invokespecial(ClassDesc.of(\"C\"), \"f1\", MTD_void, true)\n@@ -78,1 +78,1 @@\n-                                        .invokestatic(cob.constantPool().interfaceMethodRefEntry(ClassDesc.of(\"C\"), \"f2\", MTD_void))\n+                                        .invokestatic(ClassDesc.of(\"C\"), \"f2\", MTD_void, true)\n","filename":"test\/hotspot\/jtreg\/runtime\/ConstantPool\/IntfMethod.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,0 +91,1 @@\n+                    \/\/ Write 34560 methods called f_$i\n","filename":"test\/hotspot\/jtreg\/runtime\/StackTrace\/LargeClassTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-            return null;\n+            throw new AssertionError(\"Unknown class \" + name);\n","filename":"test\/hotspot\/jtreg\/runtime\/finalStatic\/FinalStatic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-            byte[] b = new byte[0];\n+            byte[] b;\n","filename":"test\/hotspot\/jtreg\/runtime\/invokedynamic\/BootstrapMethodErrorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,0 +24,3 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n@@ -30,1 +33,0 @@\n-\n@@ -33,2 +35,0 @@\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -55,1 +55,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-cp\", \".\",  \"ClassFile\");\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-cp\", \".\", \"ClassFile\");\n@@ -65,17 +65,17 @@\n-                    clb -> clb\n-                            .withVersion(cfv, 0)\n-                            .withSuperclass(CD_Object)\n-                            .withFlags(ACC_PUBLIC | ACC_SUPER)\n-                            .withMethodBody(INIT_NAME, MTD_void, ACC_PUBLIC,\n-                                    cob -> cob\n-                                            .aload(0)\n-                                            .invokespecial(CD_Object, INIT_NAME, MTD_void)\n-                                            .return_())\n-                            .withMethodBody(\"main\", MethodTypeDesc.of(CD_void, CD_String.arrayType()), ACC_PUBLIC | ACC_STATIC,\n-                                    cob -> cob\n-                                            .iconst_1()\n-                                            .iconst_2()\n-                                            .multianewarray(CD_int.arrayType(), 2)\n-                                            .astore(1)\n-                                            .return_()\n-                            )\n+                clb -> clb\n+                        .withVersion(cfv, 0)\n+                        .withSuperclass(CD_Object)\n+                        .withFlags(ACC_PUBLIC | ACC_SUPER)\n+                        .withMethodBody(INIT_NAME, MTD_void, ACC_PUBLIC,\n+                                cob -> cob\n+                                        .aload(0)\n+                                        .invokespecial(CD_Object, INIT_NAME, MTD_void)\n+                                        .return_())\n+                        .withMethodBody(\"main\", MethodTypeDesc.of(CD_void, CD_String.arrayType()), ACC_PUBLIC | ACC_STATIC,\n+                                cob -> cob\n+                                        .iconst_1()\n+                                        .iconst_2()\n+                                        .multianewarray(CD_int.arrayType(), 2)\n+                                        .astore(1)\n+                                        .return_()\n+                        )\n@@ -85,1 +85,1 @@\n-             fos.write(bytes);\n+            fos.write(bytes);\n","filename":"test\/hotspot\/jtreg\/runtime\/verifier\/TestMultiANewArray.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"}]}