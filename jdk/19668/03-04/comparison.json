{"files":[{"patch":"@@ -337,2 +337,2 @@\n-        var srcPath = pkg.asPackageApplicationLayout().orElseThrow().resolveAt(env.appImageDir()).destktopIntegrationDirectory().resolve(fileName);\n-        var installPath = pkg.asInstalledPackageApplicationLayout().orElseThrow().destktopIntegrationDirectory().resolve(fileName);\n+        var srcPath = pkg.asPackageApplicationLayout().orElseThrow().resolveAt(env.appImageDir()).desktopIntegrationDirectory().resolve(fileName);\n+        var installPath = pkg.asInstalledPackageApplicationLayout().orElseThrow().desktopIntegrationDirectory().resolve(fileName);\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/DesktopIntegration.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-                        .destktopIntegrationDirectory(lib)\n+                        .desktopIntegrationDirectory(lib)\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxPackageBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-                Path iconTarget = env.resolvedLayout().destktopIntegrationDirectory().resolve(iconFileName);\n+                Path iconTarget = env.resolvedLayout().desktopIntegrationDirectory().resolve(iconFileName);\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxPackagingPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -415,1 +415,1 @@\n-            return appLayout.destktopIntegrationDirectory().resolve(app.name() + \".icns\");\n+            return appLayout.desktopIntegrationDirectory().resolve(app.name() + \".icns\");\n@@ -434,1 +434,1 @@\n-            Files.copy(faIcon, env.resolvedLayout().destktopIntegrationDirectory().resolve(faIcon.getFileName()));\n+            Files.copy(faIcon, env.resolvedLayout().desktopIntegrationDirectory().resolve(faIcon.getFileName()));\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPackagingPipeline.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-record AppImageDesc(AppImageLayout appImageLyout, Path path) {\n+record AppImageDesc(AppImageLayout appImageLayout, Path path) {\n@@ -36,1 +36,1 @@\n-        Objects.requireNonNull(appImageLyout);\n+        Objects.requireNonNull(appImageLayout);\n@@ -41,1 +41,1 @@\n-        return appImageLyout.resolveAt(path);\n+        return appImageLayout.resolveAt(path);\n@@ -49,1 +49,1 @@\n-        if (appImageLyout instanceof ApplicationLayout layout) {\n+        if (appImageLayout instanceof ApplicationLayout layout) {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageDesc.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-            .destktopIntegrationDirectory(\"Contents\/Resources\")\n+            .desktopIntegrationDirectory(\"Contents\/Resources\")\n@@ -56,1 +56,1 @@\n-            .destktopIntegrationDirectory(\"lib\")\n+            .desktopIntegrationDirectory(\"lib\")\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ApplicationLayoutUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import static jdk.jpackage.internal.I18N.buildConfigException;\n-\n@@ -47,5 +45,2 @@\n-        var exceptionBuilder = buildConfigException(\"ERR_BuildRootInvalid\", root);\n-        if (!Files.exists(root)) {\n-        } else if (!Files.isDirectory(root)) {\n-            throw exceptionBuilder.create();\n-        } else {\n+        var exceptionBuilder = I18N.buildConfigException(\"ERR_BuildRootInvalid\", root);\n+        if (Files.isDirectory(root)) {\n@@ -54,0 +49,1 @@\n+                    \/\/ The root directory is not empty.\n@@ -59,0 +55,3 @@\n+        } else if (Files.exists(root)) {\n+            \/\/ The root is not a directory.\n+            throw exceptionBuilder.create();\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/BuildEnvBuilder.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-                    case MAC_DMG,MAC_PKG -> {\n+                    case MAC_DMG, MAC_PKG -> {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PackageBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -461,1 +461,1 @@\n-                BuildEnv.withAppImageDir(env, dstAppImageDesc.path()), pkg, dstAppImageDesc.appImageLyout(), outputDir);\n+                BuildEnv.withAppImageDir(env, dstAppImageDesc.path()), pkg, dstAppImageDesc.appImageLayout(), outputDir);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PackagingPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-            destktopIntegrationDirectory = appLayout.destktopIntegrationDirectory();\n+            desktopIntegrationDirectory = appLayout.desktopIntegrationDirectory();\n@@ -92,1 +92,1 @@\n-            Objects.requireNonNull(destktopIntegrationDirectory);\n+            Objects.requireNonNull(desktopIntegrationDirectory);\n@@ -98,1 +98,1 @@\n-                    destktopIntegrationDirectory, contentDirectory));\n+                    desktopIntegrationDirectory, contentDirectory));\n@@ -111,1 +111,1 @@\n-            destktopIntegrationDirectory(path);\n+            desktopIntegrationDirectory(path);\n@@ -122,1 +122,1 @@\n-            destktopIntegrationDirectory(resolveNullablePath(base, destktopIntegrationDirectory));\n+            desktopIntegrationDirectory(resolveNullablePath(base, desktopIntegrationDirectory));\n@@ -172,2 +172,2 @@\n-        public Builder destktopIntegrationDirectory(String v) {\n-            return destktopIntegrationDirectory(Path.of(v));\n+        public Builder desktopIntegrationDirectory(String v) {\n+            return desktopIntegrationDirectory(Path.of(v));\n@@ -176,2 +176,2 @@\n-        public Builder destktopIntegrationDirectory(Path v) {\n-            destktopIntegrationDirectory = v;\n+        public Builder desktopIntegrationDirectory(Path v) {\n+            desktopIntegrationDirectory = v;\n@@ -195,1 +195,1 @@\n-        private Path destktopIntegrationDirectory;\n+        private Path desktopIntegrationDirectory;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/ApplicationLayout.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    Path destktopIntegrationDirectory();\n+    Path desktopIntegrationDirectory();\n@@ -62,1 +62,1 @@\n-    record Stub(Path launchersDirectory, Path appDirectory, Path appModsDirectory, Path destktopIntegrationDirectory, Path contentDirectory) implements ApplicationLayoutMixin {\n+    record Stub(Path launchersDirectory, Path appDirectory, Path appModsDirectory, Path desktopIntegrationDirectory, Path contentDirectory) implements ApplicationLayoutMixin {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/ApplicationLayoutMixin.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-package jdk.jpackage.internal.model;\n\\ No newline at end of file\n+package jdk.jpackage.internal.model;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/model\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -200,1 +200,0 @@\n-     * }\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/util\/CompositeProxy.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-        return installedAppImage.destktopIntegrationDirectory().resolve(fname);\n+        return installedAppImage.desktopIntegrationDirectory().resolve(fname);\n@@ -940,1 +940,1 @@\n-            return  launchers.map(launcher -> {\n+            return launchers.map(launcher -> {\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixAppImageFragmentBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-                .destktopIntegrationDirectory(\"lib\/apps\")\n+                .desktopIntegrationDirectory(\"lib\/apps\")\n","filename":"test\/jdk\/tools\/jpackage\/junit\/share\/jdk.jpackage\/jdk\/jpackage\/internal\/model\/ApplicationLayoutTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}