{"files":[{"patch":"@@ -52,1 +52,2 @@\n-  pd_nof_caller_save_cpu_regs_frame_map = pd_nof_cpu_regs_frame_map - UNALLOCATED,  \/\/ number of registers killed by calls\n+  \/\/ number of registers killed by calls. rbp is callee saved.\n+  pd_nof_caller_save_cpu_regs_frame_map = pd_nof_cpu_regs_frame_map - UNALLOCATED LP64_ONLY(-1),\n@@ -56,1 +57,1 @@\n-  pd_nof_cpu_regs_reg_alloc = pd_nof_caller_save_cpu_regs_frame_map,  \/\/ number of registers that are visible to register allocator\n+  pd_nof_cpu_regs_reg_alloc = pd_nof_cpu_regs_frame_map - UNALLOCATED,  \/\/ number of registers that are visible to register allocator\n","filename":"src\/hotspot\/cpu\/x86\/c1_Defs_x86.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -228,4 +228,2 @@\n-  if (!PreserveFramePointer && UseCompressedOops) {\n-    _caller_save_cpu_regs[11] = rbp_opr;\n-    _caller_save_cpu_regs[12] = r12_opr;\n-  } else {\n+  if (!UseCompressedOops) {\n+    assert(nof_caller_save_cpu_regs() == 12, \"sanity check\");\n@@ -233,1 +231,2 @@\n-    _caller_save_cpu_regs[12] = rbp_opr;\n+  } else {\n+    assert(nof_caller_save_cpu_regs() == 11, \"sanity check\");\n","filename":"src\/hotspot\/cpu\/x86\/c1_FrameMap_x86.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -163,0 +163,4 @@\n+  static int adjust_caller_save_reg_range(int range) {\n+    return UseCompressedOops ? range - 1 : range;\n+  }\n+\n@@ -167,1 +171,1 @@\n-  static int nof_caller_save_cpu_regs() { return adjust_reg_range(pd_nof_caller_save_cpu_regs_frame_map); }\n+  static int nof_caller_save_cpu_regs() { return adjust_caller_save_reg_range(pd_nof_caller_save_cpu_regs_frame_map); }\n","filename":"src\/hotspot\/cpu\/x86\/c1_FrameMap_x86.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -69,2 +69,1 @@\n-  return true; \/\/ no callee-saved registers on Intel\n-\n+  return assigned_reg < FrameMap::nof_caller_save_cpu_regs();\n","filename":"src\/hotspot\/cpu\/x86\/c1_LinearScan_x86.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -5755,0 +5755,1 @@\n+#ifndef _LP64\n@@ -5773,0 +5774,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/c1\/c1_LinearScan.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}