{"files":[{"patch":"@@ -42,0 +42,2 @@\n+import java.util.Scanner;\n+import java.io.File;\n@@ -50,0 +52,1 @@\n+    private final static String LARGE_PAGE_NUMBER_FILE_BASE = \"\/sys\/kernel\/mm\/hugepages\/hugepages-%skB\/nr_hugepages\";\n@@ -61,0 +64,9 @@\n+    private static int numberOfLargePages(long size) {\n+        String largePageNumberFile = String.format(LARGE_PAGE_NUMBER_FILE_BASE, size \/ 1024);\n+        Scanner scanner = new Scanner(new File(largePageNumberFile));\n+        if (scanner.hasNextInt()) {\n+            return scanner.nextInt();\n+        }\n+        return 0;\n+    }\n+\n@@ -114,12 +126,1 @@\n-        out.shouldMatch(\"Large page support enabled\\\\. Usable page sizes: .*1[gG].*\\\\. Default large page size: .*\\\\.\");\n-        out.shouldMatch(\n-                \/\/ 1GB large pages configured and available\n-                \"CodeCache:\\\\s+min=1[gG] max=1[gG] base=[^ ]+ size=1[gG] page_size=1[gG]|\" +\n-                \/\/ 1GB large pages configured but none available\n-                \"Failed to reserve and commit memory with given page size\\\\. \" +\n-                \"req_addr: [^ ]+ size: 1[gG], page size: 1[gG], \\\\(errno = 12\\\\)\");\n-        out.shouldMatch(\n-                \/\/ 1GB large pages configured and available\n-                \"CodeCache:\\\\s+min=1[gG] max=1[gG] base=[^ ]+ size=1[gG] page_size=1[gG]|\" +\n-                \/\/ 1GB large pages configured but only 2MB pages available\n-                \"CodeCache:\\\\s+min=1[gG] max=1[gG] base=[^ ]+ size=1[gG] page_size=2[mM]\");\n+        out.shouldMatch(\"CodeCache:  min=1[gG] max=1[gG] base=[^ ]+ size=1[gG] page_size=1[gG]\");\n@@ -131,2 +132,7 @@\n-            testDefaultCodeCacheWith1GbLargePages();\n-            testNonSegmented1GbCodeCacheWith1GbLargePages();\n+            if (numberOfLargePages(LP_1G) > 0) {\n+                testDefaultCodeCacheWith1GbLargePages();\n+                testNonSegmented1GbCodeCacheWith1GbLargePages();\n+            } else {\n+                System.out.println(\"Skipping testDefaultCodeCacheWith1GbLargePages and \" +\n+                        \"testNonSegmented1GbCodeCacheWith1GbLargePages, no 1Gb pages available\");\n+            }\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/CheckLargePages.java","additions":20,"deletions":14,"binary":false,"changes":34,"status":"modified"}]}