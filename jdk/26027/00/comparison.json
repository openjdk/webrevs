{"files":[{"patch":"@@ -130,0 +130,3 @@\n+TOOL_BASE64CODER = $(JAVA_SMALL) -cp $(BUILDTOOLS_OUTPUTDIR)\/jdk_tools_classes \\\n+    build.tools.base64coder.Base64Coder\n+\n","filename":"make\/ToolsJdk.gmk","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package build.tools.base64coder;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Base64;\n+\n+\/**\n+ * Simple base64 en\/decoder\n+ *\n+ * usage: java Base64Coder [-d] -i <inputfile> -o <outputfile>\n+ * where\n+ *   -d : decoding operation, otherise encoding operation\n+ *   -i : input file path\n+ *   -o : ouput file path\n+ *\/\n+public class Base64Coder {\n+    private static boolean decode;\n+    private static Path input;\n+    private static Path output;\n+\n+    public static void main(String[] args) throws IOException {\n+        for (int i = 0; i < args.length; i++) {\n+            switch (args[i]) {\n+                case \"-d\" -> decode = true;\n+                case \"-i\" -> input = i < args.length -1 ? Path.of(args[++i]) : null;\n+                case \"-o\" -> output = i < args.length-1 ? Path.of(args[++i]) : null;\n+                default -> {\n+                    System.err.println(\"invalid argument: \" + args[i]);\n+                    System.exit(-1);\n+                }\n+            }\n+        }\n+\n+        if (input == null || output == null) {\n+            System.err.println(\"no input or output files provided\");\n+            System.exit(-1);\n+        }\n+\n+        try (OutputStream os = Files.newOutputStream(output)) {\n+            if (decode) {\n+                os.write(Base64.getDecoder().decode(Files.readAllBytes(input)));\n+            } else {\n+                os.write(Base64.getEncoder().encode(Files.readAllBytes(input)));\n+            }\n+        }\n+    }\n+}\n","filename":"make\/jdk\/src\/classes\/build\/tools\/base64coder\/Base64Coder.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -98,0 +98,14 @@\n+\n+GENDATA_ICUBINARY_SRCDIR := $(MODULE_SRC)\/share\/classes\/jdk\/internal\/icu\/impl\/data\/icudt76b\n+GENDATA_ICUBINARY_DIR := $(JDK_OUTPUTDIR)\/modules\/java.base\/jdk\/internal\/icu\/impl\/data\/icudt76b\n+\n+GENDATA_ICUBINARY_SRC := $(wildcard $(GENDATA_ICUBINARY_SRCDIR)\/*)\n+GENDATA_ICUBINARY := $(patsubst $(GENDATA_ICUBINARY_SRCDIR)\/%, $(GENDATA_ICUBINARY_DIR)\/%, $(GENDATA_ICUBINARY_SRC))\n+\n+$(GENDATA_ICUBINARY_DIR)\/%: $(GENDATA_ICUBINARY_SRCDIR)\/% $(BUILD_TOOLS_JDK)\n+\t$(call MakeDir, $(@D))\n+\t$(TOOL_BASE64CODER) -d -i $< -o $@\n+\n+TARGETS += $(GENDATA_ICUBINARY)\n+\n+################################################################################\n","filename":"make\/modules\/java.base\/Gendata.gmk","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-COPY += .icu .dat .spp .nrm content-types.properties \\\n+COPY += .dat .spp content-types.properties \\\n","filename":"make\/modules\/java.base\/Java.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/data\/icudt76b\/nfc.nrm","binary":true,"status":"modified"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/data\/icudt76b\/nfkc.nrm","binary":true,"status":"modified"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/data\/icudt76b\/ubidi.icu","binary":true,"status":"modified"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/impl\/data\/icudt76b\/uprops.icu","binary":true,"status":"modified"}]}