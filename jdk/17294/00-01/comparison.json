{"files":[{"patch":"@@ -1,36 +0,0 @@\n-<!--\n- Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-\n-Verify that scaled icons are rendered smoothly.\n-\n-1. Run the test.\n-2. Check that Collapsed  and Expanded JTree icons are drawn smoothly.\n-If so, press PASS, else press FAIL.\n-\n-<applet  code=\"bug8038113.class\" width=400 height=400><\/applet>\n-\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JTree\/8038113\/bug8038113.html","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -24,5 +24,3 @@\n-import java.awt.BasicStroke;\n-import java.awt.BorderLayout;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.Graphics;\n+import java.io.File;\n+import java.io.IOException;\n+import java.awt.Color;\n@@ -30,2 +28,2 @@\n-import java.awt.GridLayout;\n-import javax.swing.AbstractAction;\n+import java.awt.image.BufferedImage;\n+import javax.imageio.ImageIO;\n@@ -33,3 +31,1 @@\n-import javax.swing.JButton;\n-import javax.swing.JFrame;\n-import javax.swing.JPanel;\n+import javax.swing.JLabel;\n@@ -42,0 +38,2 @@\n+import static java.awt.image.BufferedImage.TYPE_INT_RGB;\n+\n@@ -47,3 +45,1 @@\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual bug8038113\n+ * @run main bug8038113\n@@ -53,8 +49,0 @@\n-    private static JFrame frame;\n-    private static final String INSTRUCTIONS = \"\"\"\n-                Verify that scaled icons are rendered smoothly.\n-                Check that Collapsed  and Expanded JTree icons are drawn smoothly.\n-                Check for different LAFs.\n-                If so, press PASS, else press FAIL.\n-            \"\"\";\n-\n@@ -62,11 +50,7 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n-                .title(\"JTree Expanded\/Collapsed Icon Test Instructions\")\n-                .instructions(INSTRUCTIONS)\n-                .testTimeOut(5)\n-                .rows(6)\n-                .columns(40)\n-                .screenCapture()\n-                .build();\n-        SwingUtilities.invokeAndWait(\n-                bug8038113::createAndShowUI);\n-        passFailJFrame.awaitAndCheck();\n+        for (UIManager.LookAndFeelInfo laf :\n+                UIManager.getInstalledLookAndFeels()) {\n+            if (!laf.getName().contains(\"Motif\")) {\n+                System.out.println(\"Testing LAF: \" + laf.getName());\n+                SwingUtilities.invokeAndWait(() -> test(laf));\n+            }\n+        }\n@@ -75,1 +59,2 @@\n-    public static void createAndShowUI() {\n+    public static void test(UIManager.LookAndFeelInfo laf) {\n+        setLookAndFeel(laf);\n@@ -78,1 +63,0 @@\n-        frame = new JFrame(\"Test Tree Icon Rendering\");\n@@ -80,1 +64,4 @@\n-        final JPanel panel = new JPanel() {\n+        Icon collapsedIcon = treeUI.getCollapsedIcon();\n+        Icon expandedIcon = treeUI.getExpandedIcon();\n+        BufferedImage img1 = paintToImage(expandedIcon);\n+        BufferedImage img2 = paintToImage(collapsedIcon);\n@@ -82,21 +69,4 @@\n-            @Override\n-            public void paint(Graphics g) {\n-                super.paint(g);\n-                Graphics2D g2 = (Graphics2D) g;\n-                g2.setStroke(new BasicStroke(0.5f));\n-                g2.scale(2, 2);\n-\n-                int x = 10;\n-                int y = 10;\n-                Icon collapsedIcon = treeUI.getCollapsedIcon();\n-                Icon expandeIcon = treeUI.getExpandedIcon();\n-                int w = collapsedIcon.getIconWidth();\n-                int h = collapsedIcon.getIconHeight();\n-                collapsedIcon.paintIcon(this, g, x, y);\n-                g.drawRect(x, y, w, h);\n-\n-                y += 10 + h;\n-                w = expandeIcon.getIconWidth();\n-                h = expandeIcon.getIconHeight();\n-                expandeIcon.paintIcon(this, g, x, y);\n-                g.drawRect(x, y, w, h);\n+        if (!isImgRendered(img1)) {\n+            try {\n+                ImageIO.write(img1, \"png\", new File(\"Expanded_Icon_\" + laf.getName() + \".png\"));\n+            } catch (IOException ignored) {\n@@ -104,1 +74,2 @@\n-        };\n+            throw new RuntimeException(\"Test Failed, Expanded not rendered for: \"+laf.getName());\n+        }\n@@ -106,5 +77,4 @@\n-        UIManager.LookAndFeelInfo[] laf = UIManager.getInstalledLookAndFeels();\n-        JPanel buttonPanel = new JPanel();\n-        for (int i = 0; i < laf.length; i++) {\n-            if (laf[i].getName().contains(\"Motif\")) {\n-                continue;\n+        if (!isImgRendered(img2)) {\n+            try {\n+                ImageIO.write(img2, \"png\", new File(\"Collapsed_Icon_\" + laf.getName() + \".png\"));\n+            } catch (IOException ignored) {\n@@ -112,4 +82,1 @@\n-            JButton button = new JButton(laf[i].getName());\n-            button.setText(laf[i].getName());\n-            button.addActionListener(new MyAction());\n-            buttonPanel.add(button);\n+            throw new RuntimeException(\"Test Failed, Collapsed Icon not rendered for: \"+laf.getName());\n@@ -117,9 +84,1 @@\n-        PassFailJFrame.addTestWindow(frame);\n-        PassFailJFrame.positionTestWindow(\n-                frame, PassFailJFrame.Position.HORIZONTAL);\n-        frame.getContentPane().setLayout(new BorderLayout());\n-        frame.getContentPane().add(panel, BorderLayout.CENTER);\n-        frame.getContentPane().add(buttonPanel, BorderLayout.SOUTH);\n-        frame.setSize(300, 250);\n-        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-        frame.setVisible(true);\n+        System.out.println(\"Test Passed\");\n@@ -128,14 +87,28 @@\n-    public static class MyAction implements ActionListener {\n-        public void actionPerformed(ActionEvent ae) {\n-            String lafClassName = null;\n-            UIManager.LookAndFeelInfo lafs[] = UIManager.getInstalledLookAndFeels();\n-            for (int i = 0; i < lafs.length; i++) {\n-                if (ae.getActionCommand().equals(lafs[i].getName())) {\n-                    lafClassName = lafs[i].getClassName();\n-                    break;\n-                }\n-            }\n-            try {\n-                UIManager.setLookAndFeel(lafClassName);\n-                if (frame != null) {\n-                    frame.dispose();\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported LAF: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static BufferedImage paintToImage(Icon content) {\n+        BufferedImage im = new BufferedImage(content.getIconWidth(),\n+                content.getIconHeight(), TYPE_INT_RGB);\n+        Graphics2D g = (Graphics2D) im.getGraphics();\n+        g.setBackground(Color.WHITE);\n+        g.clearRect(0, 0, content.getIconWidth(), content.getIconHeight());\n+        content.paintIcon(new JLabel(), g, 0, 0);\n+        g.dispose();\n+        return im;\n+    }\n+    \n+    private static boolean isImgRendered(BufferedImage img) {\n+        Color white = new Color(255, 255, 255);\n+        for (int x = 0; x < img.getWidth(); ++x) {\n+            for (int y = 0; y < img.getHeight(); ++y) {\n+                if (img.getRGB(x, y) != white.getRGB()) {\n+                    return true;\n@@ -143,6 +116,0 @@\n-                createAndShowUI();\n-            } catch (UnsupportedLookAndFeelException ignored) {\n-                System.out.println(\"Unsupported LAF: \" + lafClassName);\n-            } catch (ClassNotFoundException | InstantiationException\n-                     | IllegalAccessException e) {\n-                throw new RuntimeException(e);\n@@ -151,0 +118,1 @@\n+        return false;\n","filename":"test\/jdk\/javax\/swing\/JTree\/8038113\/bug8038113.java","additions":63,"deletions":95,"binary":false,"changes":158,"status":"modified"}]}