{"files":[{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4209511\n+ * @summary Regression test DestroyMenuTest.java Failing\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual DestroyMenuTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Canvas;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Label;\n+import java.awt.Panel;\n+import java.awt.Scrollbar;\n+import java.awt.TextField;\n+\n+public class DestroyMenuTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. Create many windows by randomly clicking 'Show Menu Test 1',\n+                  'Show Menu Test 2', 'Show Menu Test 3' buttons.\n+                2. Ignore the contents of the windows.\n+                   Go to the windows created and select menu items inside the menus.\n+                3. Close the windows by selecting menu item File--> Quit.\n+                4. Do the above menu item selections as quickly as possible.\n+                   If the program crashes when you select File--> Quit,\n+                   then the test FAILS. Otherwise the test is PASS.\n+                      \"\"\";\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(38)\n+                .testUI(DestroyMenuTest::initialize)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static Frame initialize() {\n+        Frame f = new Frame(\"Destroy Menu Test\");\n+        Button launchButton = new Button(\"Show Menu Test 1...\");\n+        Button launchButton2 = new Button(\"Show Menu Test 2...\");\n+        Button launchButton3 = new Button(\"Show Menu Test 3...\");\n+        f.setLayout(new FlowLayout());\n+        f.add(launchButton);\n+        f.add(launchButton2);\n+        f.add(launchButton3);\n+\n+        launchButton.addActionListener(event -> {\n+            MenuTest frame = new MenuTest(\"Menu Test 1\");\n+            frame.setBounds(300, 300, 300, 300);\n+            frame.setVisible(true);\n+        });\n+\n+        launchButton2.addActionListener(event -> {\n+            MenuTest frame = new MenuTest(\"Menu Test 2\");\n+\n+            Button closeButton = new Button(\"Close\");\n+\n+            Panel X = new Panel();\n+            X.setLayout(new BorderLayout());\n+\n+            Panel topPanel = new Panel();\n+            Panel bottomPanel = new Panel();\n+\n+            bottomPanel.add(closeButton);\n+\n+            Scrollbar vScrollbar = new Scrollbar(Scrollbar.VERTICAL);\n+            Scrollbar hScrollbar = new Scrollbar(Scrollbar.HORIZONTAL);\n+            hScrollbar.setValues(hScrollbar.getValue(), 0, 0, 50);\n+            vScrollbar.setValues(vScrollbar.getValue(), 0, 0, 50);\n+            topPanel.setLayout(new BorderLayout());\n+            topPanel.add(vScrollbar, \"East\");\n+            topPanel.add(hScrollbar, \"South\");\n+\n+            X.add(topPanel, \"North\");\n+            X.add(bottomPanel, \"South\");\n+            frame.add(X, \"South\");\n+            frame.setBounds(350, 350, 300, 250);\n+            frame.setVisible(true);\n+        });\n+\n+        launchButton3.addActionListener(event -> {\n+            MenuTest frame = new MenuTest(\"Menu Test 3\");\n+            frame.setBounds(400, 400, 300, 300);\n+\n+            mySimpleCanvas clock = new mySimpleCanvas();\n+            frame.add(clock, \"Center\");\n+\n+            Panel p = new Panel();\n+            Button closeButton = new Button(\"Close\");\n+            p.add(closeButton);\n+\n+            p.add(new Label(\"Label\"));\n+            TextField textField = new TextField(8);\n+            p.add(textField);\n+            f.add(p, \"East\");\n+\n+            frame.add(p, \"South\");\n+            frame.setVisible(true);\n+        });\n+        f.pack();\n+        return f;\n+    }\n+\n+    static class mySimpleCanvas extends Canvas {\n+        @Override\n+        public void paint(Graphics g) {\n+            g.drawOval(0, 0, 100, 100);\n+            g.drawOval(2, 2, 100, 100);\n+            g.drawOval(4, 4, 100, 100);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Menu\/DestroyMenuTest\/DestroyMenuTest.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -0,0 +1,172 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Canvas;\n+import java.awt.CardLayout;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Label;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.Panel;\n+\n+public class MenuTest extends Frame {\n+    private MenuItem quitItem;\n+    private final Panel cards;\n+    private final CardLayout layout;\n+\n+    public MenuTest(String s) {\n+        super(s);\n+        MenuBar mbar = new MenuBar();\n+        createMenus(mbar);\n+        setMenuBar(mbar);\n+\n+        cards = new Panel();\n+        layout = new CardLayout();\n+        cards.setLayout(layout);\n+\n+        cards.add(new MyPanelOne(\"Options\"), \"Options\");\n+        cards.add(new MyRectCanvas(), \"MyRectCanvas\");\n+        cards.add(new MycircleCanvas(), \"MyCircleCanvas\");\n+\n+        add(cards, \"Center\");\n+    }\n+\n+    public void createMenus(MenuBar mbar) {\n+        mbar.add(createFileMenu());\n+        mbar.add(createEditMenu());\n+        mbar.add(createOptionMenu1());\n+        mbar.add(createOptionMenu2());\n+        mbar.add(createOptionMenu3());\n+        mbar.add(createOptionMenu4());\n+    }\n+\n+    private Menu createFileMenu() {\n+        Menu fileMenu = new Menu(\"File\");\n+        fileMenu.add(quitItem = new MenuItem(\"Quit\"));\n+\n+        quitItem.addActionListener(event -> {\n+            MenuItem item = (MenuItem) event.getSource();\n+            if (item == quitItem) {\n+                dispose();\n+            }\n+        });\n+        return fileMenu;\n+    }\n+\n+    private Menu createEditMenu() {\n+        Menu editMenu = new Menu(\"Edit\");\n+\n+        editMenu.add(\"Cut\");\n+        editMenu.add(\"Copy\");\n+        editMenu.add(\"Paste\");\n+        editMenu.addSeparator();\n+        editMenu.add(\"Select all\");\n+        editMenu.addSeparator();\n+        editMenu.add(\"Find\");\n+        editMenu.add(\"Find again\");\n+\n+        return editMenu;\n+    }\n+\n+    private Menu createOptionMenu1() {\n+        Menu optionMenu1 = new Menu(\"Option1\");\n+        MenuItem item1, item2, item3;\n+        optionMenu1.add(item1 = new MenuItem(\"Item1\"));\n+        optionMenu1.add(item2 = new MenuItem(\"Item2\"));\n+        optionMenu1.add(item3 = new MenuItem(\"Item3\"));\n+\n+        item1.addActionListener(event -> {\n+            MenuItem mItem = (MenuItem) event.getSource();\n+            if (mItem == item1) {\n+                layout.show(cards, \"Options\");\n+            }\n+        });\n+        item2.addActionListener(event -> {\n+            MenuItem mItem = (MenuItem) event.getSource();\n+            if (mItem == item2) {\n+                layout.show(cards, \"MyRectCanvas\");\n+            }\n+        });\n+        item3.addActionListener(event -> {\n+            MenuItem mItem = (MenuItem) event.getSource();\n+            if (mItem == item3) {\n+                layout.show(cards, \"MyCircleCanvas\");\n+            }\n+        });\n+        return optionMenu1;\n+    }\n+\n+    private Menu createOptionMenu2() {\n+        Menu optionMenu2 = new Menu(\"Option2\");\n+\n+        optionMenu2.add(\"Item1\");\n+        optionMenu2.add(\"Item2\");\n+\n+        return optionMenu2;\n+    }\n+\n+    private Menu createOptionMenu3() {\n+        Menu optionMenu3 = new Menu(\"Option3\");\n+\n+        optionMenu3.add(\"Item1\");\n+        optionMenu3.add(\"Item2\");\n+        optionMenu3.add(\"Item3\");\n+        optionMenu3.add(\"Item4\");\n+\n+        return optionMenu3;\n+    }\n+\n+    private Menu createOptionMenu4() {\n+        Menu optionMenu4 = new Menu(\"Option3\");\n+\n+        optionMenu4.add(\"Item1\");\n+        optionMenu4.add(\"Item2\");\n+        optionMenu4.add(\"Item3\");\n+\n+        return optionMenu4;\n+    }\n+}\n+\n+class MyRectCanvas extends Canvas {\n+    @Override\n+    public void paint(Graphics g) {\n+        g.drawRect(0, 0, 100, 100);\n+    }\n+}\n+\n+class MyPanelOne extends Panel {\n+    MyPanelOne(String name) {\n+        add(new Label(name + \" panel goes here\"));\n+    }\n+}\n+\n+class MycircleCanvas extends Canvas {\n+    @Override\n+    public void paint(Graphics g) {\n+        g.drawOval(0, 0, 100, 100);\n+        g.drawOval(2, 2, 100, 100);\n+        g.drawOval(4, 4, 100, 100);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Menu\/DestroyMenuTest\/MenuTest.java","additions":172,"deletions":0,"binary":false,"changes":172,"status":"added"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4410477\n+ * @summary Tests that menu does not crash during simultaneous drawing\n+ *          and removal of items.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MenuAddRemoveCrash\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+public class MenuAddRemoveCrash {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. Move and resize the frame.\n+                2. If the test crashes the test is FAILED.\n+                   Otherwise it is PASSED.\n+                    \"\"\";\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(MenuAddRemoveCrash::initialize)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame initialize() {\n+        final TestGui myTestGui = new TestGui();\n+        Thread test = new Thread() {\n+            public void run() {\n+                while (!Thread.interrupted()) {\n+                    myTestGui.changeMenuItems();\n+                }\n+            }\n+        };\n+        test.setDaemon(true);\n+        test.start();\n+        return myTestGui;\n+    }\n+}\n+\n+class TestGui extends Frame {\n+    Menu myMenu1;\n+    Menu myMenu2;\n+\n+    public TestGui() {\n+        this.setTitle(\"Try to resize this frame!\");\n+\n+        this.setSize(300, 300);\n+        this.setVisible(true);\n+\n+        MenuBar myMenuBar = new MenuBar();\n+        myMenu1 = new Menu(\"DemoMenu1\");\n+        myMenu2 = new Menu(\"DemoMenu2\");\n+\n+        myMenuBar.add(myMenu1);\n+        myMenuBar.add(myMenu2);\n+\n+        this.setMenuBar(myMenuBar);\n+    }\n+\n+    public void changeMenuItems() {\n+        myMenu1.removeAll();\n+\n+        for (int i = 0; i < 10; i++) {\n+            MenuItem myMenuItem1 = new MenuItem(\"DemoMenuItem\" + i);\n+            myMenu1.add(myMenuItem1);\n+        }\n+        try {\n+            Thread.sleep(100);\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"Failed :\" + e);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Menu\/MenuAddRemoveCrash.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6267182\n+ * @summary Menu is not visible after showing and disposing a file dialog.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MenuZOrderTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class MenuZOrderTest {\n+    static class Listener implements ActionListener {\n+        @Override\n+        public void actionPerformed(ActionEvent e) {\n+            Frame f = new Frame(\"Menu Z order test frame\");\n+            f.setBounds(200, 200, 200, 200);\n+            f.setVisible(true);\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. Choose Menu 1 --> Menu Item 1 several times.\n+                2. If menu window is shown correctly and each click\n+                   creates new frame - press PASS.\n+                3. If menu window is obscured by frame - press FAIL.\n+                    \"\"\";\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(MenuZOrderTest::initialize)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static Frame initialize() {\n+        Frame mf = new Frame(\"Menu Z order test\");\n+        Listener l = new Listener();\n+        MenuBar mb = new MenuBar();\n+        Menu m1 = new Menu(\"Menu 1\");\n+        MenuItem mi1 = new MenuItem(\"Menu Item 1\");\n+\n+        mf.setLayout(new BorderLayout());\n+        mf.setSize(200, 200);\n+        mi1.addActionListener(l);\n+        m1.add(mi1);\n+        mb.add(m1);\n+        mf.setMenuBar(mb);\n+        mf.setVisible(true);\n+        return mf;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Menu\/MenuZOrderTest.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 5024051\n+ * @summary Tests if menu is repainted in enabling\/disabling it and\n+ *          changing its label while it is visible, either on MenuBar\n+ *          or in other Menu. Menu items are covered as well\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual OnFlyRepaintMenuTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.CheckboxMenuItem;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+public class OnFlyRepaintMenuTest {\n+    static boolean menuEnabled = true;\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. Click the button 'Change state' and wait for 5 secs.\n+                2. If menu is repainted correctly after its setLabel()\n+                   and setEnabled() methods called test PASSED, else FAILED.\n+                   (During a 5 secs delay you may select the menu to see\n+                   the effect for menu items and submenu)\n+                         \"\"\";\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(OnFlyRepaintMenuTest::initialize)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static Frame initialize() {\n+        Frame f = new Frame(\"OnFly Menu Repaint Test\");\n+\n+        f.setLayout(new BorderLayout());\n+        f.setSize(200, 100);\n+\n+        MenuBar mb = new MenuBar();\n+        Menu menu = new Menu(\"Menu\");\n+        MenuItem menuItem = new MenuItem(\"MenuItem\");\n+        menu.add(menuItem);\n+        Menu submenu = new Menu(\"SubMenu\");\n+        MenuItem submenuItem = new MenuItem(\"SubmenuItem\");\n+        submenu.add(submenuItem);\n+        CheckboxMenuItem checkMenuItem = new CheckboxMenuItem(\"CheckboxmenuItem\");\n+        checkMenuItem.setState(true);\n+        menu.add(checkMenuItem);\n+        menu.add(submenu);\n+        mb.add(menu);\n+        f.setMenuBar(mb);\n+\n+        Button b = new Button(\"Change state\");\n+        b.addActionListener(ev -> new Thread(() -> {\n+            try {\n+                Thread.sleep(5000);\n+            } catch (Exception e) {\n+            }\n+            menuEnabled = !menuEnabled;\n+            String label = menuEnabled ? \"Enabled\" : \"Disabled\";\n+            menu.setLabel(label);\n+            menuItem.setLabel(label);\n+            submenu.setLabel(label);\n+            submenuItem.setLabel(label);\n+            checkMenuItem.setLabel(label);\n+            checkMenuItem.setEnabled(menuEnabled);\n+            checkMenuItem.setState(menuEnabled);\n+            submenuItem.setEnabled(menuEnabled);\n+            submenu.setEnabled(menuEnabled);\n+            menuItem.setEnabled(menuEnabled);\n+            menu.setEnabled(menuEnabled);\n+        }).start());\n+        f.add(b);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Menu\/OnFlyRepaintMenuTest.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"}]}