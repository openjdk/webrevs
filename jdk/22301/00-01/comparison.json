{"files":[{"patch":"@@ -71,1 +71,1 @@\n-     * @see Security security properties\n+     * @see java.security.Security security properties\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/TrustManagerFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,53 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2004, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.security.action;\n-\n-import java.io.*;\n-\n-import java.security.PrivilegedExceptionAction;\n-\n-\/**\n- * A convenience class for opening a FileInputStream as a privileged action.\n- *\n- * @author Andreas Sterbenz\n- *\/\n-public class OpenFileInputStreamAction\n-        implements PrivilegedExceptionAction<FileInputStream> {\n-\n-    private final File file;\n-\n-    public OpenFileInputStreamAction(File file) {\n-        this.file = file;\n-    }\n-\n-    public OpenFileInputStreamAction(String filename) {\n-        this.file = new File(filename);\n-    }\n-\n-    public FileInputStream run() throws Exception {\n-        return new FileInputStream(file);\n-    }\n-}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/action\/OpenFileInputStreamAction.java","additions":0,"deletions":53,"binary":false,"changes":53,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import java.io.*;\n@@ -77,9 +76,0 @@\n-\n-        File f = new File(System.getProperty(\"test.src\", \".\"), \"Generify.java\");\n-        FileInputStream fis = AccessController.doPrivileged\n-                        (new OpenFileInputStreamAction(f));\n-        if (fis != null) {\n-            System.out.println(\"file test passed\");\n-        } else {\n-            throw new SecurityException(\"file test failed\");\n-        }\n","filename":"test\/jdk\/sun\/security\/action\/Generify.java","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"}]}