{"files":[{"patch":"@@ -1137,1 +1137,1 @@\n-        List<String> locEntries = new ArrayList<>();\n+        Set<String> locEntries = new HashSet<>();\n@@ -1145,3 +1145,1 @@\n-            if (!compareManifest(cenManifest, locManifest)) {\n-                return;\n-            }\n+            compareManifest(cenManifest, locManifest);\n@@ -1192,2 +1190,1 @@\n-            List<String> cenEntries;\n-            cenEntries = jarFile.stream()\n+            List<String> cenEntries = jarFile.stream()\n@@ -1197,5 +1194,3 @@\n-            var cenEntries2 = cenEntries.getFirst().equals(JarFile.MANIFEST_NAME)\n-                    ? cenEntries.subList(1, cenEntries.size()) : cenEntries;\n-\n-            Set<String> locEntrySet = new HashSet<>(locEntries);\n-            Set<String> cenEntrySet = new HashSet<>(cenEntries2);\n+            Set<String> cenEntrySet = cenEntries.getFirst().equals(JarFile.MANIFEST_NAME)\n+                    ? new HashSet<>(cenEntries.subList(1, cenEntries.size()))\n+                    : new HashSet<>(cenEntries);\n@@ -1204,1 +1199,1 @@\n-                if (!locEntrySet.contains(cenEntry)) {\n+                if (!locEntries.contains(cenEntry)) {\n@@ -1210,5 +1205,0 @@\n-\n-            if (!cenEntries2.equals(locEntries)) {\n-                crossChkWarnings.add(rb.getString(\n-                        \"entries.mismatch.when.comparing.jarfile.and.jarinputstream\"));\n-            }\n@@ -1222,3 +1212,1 @@\n-    private boolean compareManifest(Manifest cenManifest, Manifest locManifest) {\n-        boolean validManifest = true;\n-\n+    private void compareManifest(Manifest cenManifest, Manifest locManifest) {\n@@ -1228,1 +1216,1 @@\n-            return false;\n+            return;\n@@ -1233,1 +1221,1 @@\n-            return false;\n+            return;\n@@ -1247,1 +1235,0 @@\n-                validManifest = false;\n@@ -1252,1 +1239,0 @@\n-                validManifest = false;\n@@ -1261,1 +1247,0 @@\n-                validManifest = false;\n@@ -1264,2 +1249,0 @@\n-\n-        return validManifest;\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":10,"deletions":27,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -221,1 +221,0 @@\n-entries.mismatch.when.comparing.jarfile.and.jarinputstream=Entries mismatch when comparing JarFile and JarInputStream\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/resources\/jarsigner.properties","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -109,2 +109,2 @@\n-                .shouldContain(\"- Entries mismatch when \" +\n-                        \"comparing JarFile and JarInputStream\")\n+                .shouldContain(\"- Entry XETA-INF\/MYKEY.SF is present when reading \" +\n+                        \"via JarInputStream but missing when reading via JarFile\")\n@@ -116,1 +116,1 @@\n-     * emitting warnings about entry mismatches or missing entries.\n+     * emitting warnings about internal inconsistencies.\n@@ -124,4 +124,0 @@\n-                .shouldNotContain(\"- Manifest is missing \" +\n-                        \"when reading via JarInputStream\")\n-                .shouldNotContain(\"- Entries mismatch \" +\n-                        \"when comparing JarFile and JarInputStream\")\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/VerifyJarEntryName.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"}]}