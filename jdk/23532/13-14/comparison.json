{"files":[{"patch":"@@ -1138,1 +1138,0 @@\n-        List<String> cenEntries;\n@@ -1158,2 +1157,12 @@\n-                            \"Entry.1.present.when.reading.jarinputstream.\" +\n-                            \"but.missing.via.JarFile\"), entryName));\n+                            \"entry.1.present.when.reading.jarinputstream.\" +\n+                            \"but.missing.via.jarfile\"), entryName));\n+                    continue;\n+                }\n+\n+                try {\n+                    readEntry(jis);\n+                } catch (SecurityException e) {\n+                    crossChkWarnings.add(String.format(rb.getString(\n+                            \"signature.verification.failed.on.entry.1.\" +\n+                            \"when.reading.via.jarinputstream\"),\n+                            entryName));\n@@ -1163,1 +1172,0 @@\n-                readEntry(jis);\n@@ -1169,0 +1177,1 @@\n+                        continue;\n@@ -1170,1 +1179,9 @@\n-                        readEntry(cenInputStream);\n+                        try {\n+                            readEntry(cenInputStream);\n+                        } catch (SecurityException e) {\n+                            crossChkWarnings.add(String.format(rb.getString(\n+                                    \"signature.verification.failed.on.entry.1.\" +\n+                                    \"when.reading.via.jarfile.inputstream\"),\n+                                    entryName));\n+                            continue;\n+                        }\n@@ -1177,0 +1194,1 @@\n+            List<String> cenEntries;\n@@ -1184,0 +1202,11 @@\n+            Set<String> locEntrySet = new HashSet<>(locEntries);\n+            Set<String> cenEntrySet = new HashSet<>(cenEntries2);\n+\n+            for (String cenEntry : cenEntrySet) {\n+                if (!locEntrySet.contains(cenEntry)) {\n+                    crossChkWarnings.add(String.format(rb.getString(\n+                            \"entry.1.present.when.reading.jarfile.\" +\n+                            \"but.missing.via.jarinputstream\"), cenEntry));\n+                }\n+            }\n+\n@@ -1268,0 +1297,10 @@\n+    private void displayCrossChkWarnings() {\n+        System.out.println();\n+        \/\/ First is a summary warning\n+        System.out.println(rb.getString(\"jar.contains.internal.\" +\n+                \"inconsistencies.may.result.in.different.contents.\" +\n+                \"when.reading.via.jarfile.and.jarinputstream\"));\n+        \/\/ each warning message with prefix \"- \"\n+        crossChkWarnings.forEach(warning -> System.out.println(\"- \" + warning));\n+    }\n+\n@@ -1495,2 +1534,1 @@\n-                System.out.println();\n-                crossChkWarnings.forEach(System.out::println);\n+                displayCrossChkWarnings();\n@@ -1499,1 +1537,1 @@\n-            if (!errors.isEmpty() || !warnings.isEmpty() || !crossChkWarnings.isEmpty()) {\n+            if (!errors.isEmpty() || !warnings.isEmpty()) {\n@@ -1504,1 +1542,3 @@\n-                crossChkWarnings.forEach(System.out::println);\n+            }\n+            if (!crossChkWarnings.isEmpty()) {\n+                displayCrossChkWarnings();\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":49,"deletions":9,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -215,1 +215,2 @@\n-Entry.1.present.when.reading.jarinputstream.but.missing.via.JarFile=Entry %s is present when reading via JarInputStream but missing when reading via JarFile\n+entry.1.present.when.reading.jarinputstream.but.missing.via.jarfile=Entry %s is present when reading via JarInputStream but missing when reading via JarFile\n+entry.1.present.when.reading.jarfile.but.missing.via.jarinputstream=Entry %s is present when reading via JarFile but missing when reading via JarInputStream\n@@ -221,0 +222,3 @@\n+jar.contains.internal.inconsistencies.may.result.in.different.contents.when.reading.via.jarfile.and.jarinputstream=This JAR file contains internal inconsistencies that may result in different contents when reading via JarFile and JarInputStream\n+signature.verification.failed.on.entry.1.when.reading.via.jarinputstream=Signature verification failed on entry %s when reading via JarInputStream\n+signature.verification.failed.on.entry.1.when.reading.via.jarfile.inputstream=Signature verification failed on entry %s when reading via JarFile InputStream\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/resources\/jarsigner.properties","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -90,1 +90,4 @@\n-                .shouldContain(\"Manifest is missing when \" +\n+                .shouldContain(\"This JAR file contains internal \" +\n+                        \"inconsistencies that may result in different \" +\n+                        \"contents when reading via JarFile and JarInputStream\")\n+                .shouldContain(\"- Manifest is missing when \" +\n@@ -103,1 +106,4 @@\n-                .shouldContain(\"Entries mismatch when \" +\n+                .shouldContain(\"This JAR file contains internal \" +\n+                        \"inconsistencies that may result in different \" +\n+                        \"contents when reading via JarFile and JarInputStream\")\n+                .shouldContain(\"- Entries mismatch when \" +\n@@ -115,1 +121,4 @@\n-                .shouldNotContain(\"Manifest is missing \" +\n+                .shouldNotContain(\"This JAR file contains internal \" +\n+                        \"inconsistencies that may result in different contents when \" +\n+                        \"reading via JarFile and JarInputStream\")\n+                .shouldNotContain(\"- Manifest is missing \" +\n@@ -117,1 +126,1 @@\n-                .shouldNotContain(\"Entries mismatch \" +\n+                .shouldNotContain(\"- Entries mismatch \" +\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/VerifyJarEntryName.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"}]}