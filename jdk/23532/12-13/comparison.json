{"files":[{"patch":"@@ -1158,1 +1158,2 @@\n-                            \"Entry.missing.in.JarFile.1\"), entryName));\n+                            \"Entry.1.present.when.reading.jarinputstream.\" +\n+                            \"but.missing.via.JarFile\"), entryName));\n@@ -1164,1 +1165,7 @@\n-                    readEntry(cenInputStream);\n+                    if (cenInputStream == null) {\n+                        crossChkWarnings.add(String.format(rb.getString(\n+                                \"entry.1.present.in.jarfile.but.unreadable\"),\n+                                entryName));\n+                    } else {\n+                        readEntry(cenInputStream);\n+                    }\n@@ -1242,4 +1249,1 @@\n-            List<CodeSigner> cenSignerList = Arrays.asList(cenSigners);\n-            List<CodeSigner> locSignerList = Arrays.asList(locSigners);\n-\n-            if (!cenSignerList.equals(locSignerList)) {\n+            if (!Arrays.equals(cenSigners, locSigners)) {\n@@ -1247,1 +1251,2 @@\n-                        \"signature.mismatch.for.entry.1.when.comparing.jarfile.and.jarinputstream\"),\n+                        \"codesigners.different.for.entry.1.when.reading.\" +\n+                        \"jarfile.and.jarinputstream\"),\n@@ -1250,0 +1255,10 @@\n+        } else if (cenHasSigners) {\n+            crossChkWarnings.add(String.format(rb.getString(\n+                    \"entry.1.has.codesigners.in.jarfile.but.not.\" +\n+                    \"in.jarinputstream\"),\n+                    cenEntry.getName()));\n+        } else if (locHasSigners) {\n+            crossChkWarnings.add(String.format(rb.getString(\n+                    \"entry.1.has.codesigners.in.jarinputstream.but.not.\" +\n+                    \"in.jarfile\"),\n+                    locEntry.getName()));\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":22,"deletions":7,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -214,3 +214,6 @@\n-manifest.atrribute.1.differs.jarfile.value.2.jarinputstream.value.3=Manifest attribute %1$s differs: JarFile value = %2$s, JarInputStream value = %3$s\n-Entry.missing.in.JarFile.1=Entry missing in JarFile: %s\n-signature.mismatch.for.entry.1.when.comparing.jarfile.and.jarinputstream=Signature mismatch for entry %s when comparing JarFile and JarInputStream\n+manifest.attribute.1.differs.jarfile.value.2.jarinputstream.value.3=Manifest attribute %1$s differs: JarFile value = %2$s, JarInputStream value = %3$s\n+Entry.1.present.when.reading.jarinputstream.but.missing.via.JarFile=Entry %s is present when reading via JarInputStream but missing when reading via JarFile\n+entry.1.present.in.jarfile.but.unreadable=Entry %s is present in JarFile but unreadable\n+codesigners.different.for.entry.1.when.reading.jarfile.and.jarinputstream=Code signers are different for entry %s when reading from JarFile and JarInputStream\n+entry.1.has.codesigners.in.jarfile.but.not.in.jarinputstream=Entry %s has codesigners in JarFile but not in JarInputStream\n+entry.1.has.codesigners.in.jarinputstream.but.not.in.jarfile=Entry %s has codesigners in JarInputStream but not in JarFile\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/resources\/jarsigner.properties","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}