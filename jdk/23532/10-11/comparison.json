{"files":[{"patch":"@@ -58,1 +58,2 @@\n-            zos.write(\"Manifest-Version: 1.0\\nCreated-By: Test\\n\".getBytes(StandardCharsets.UTF_8));\n+            zos.write(\"Manifest-Version: 1.0\\nCreated-By: Test\\n\".\n+                    getBytes(StandardCharsets.UTF_8));\n@@ -83,1 +84,2 @@\n-                .shouldContain(\"Manifest is missing when reading via JarInputStream\")\n+                .shouldContain(\"Manifest is missing when \" +\n+                        \"reading via JarInputStream\")\n@@ -95,1 +97,2 @@\n-                .shouldContain(\"Entries mismatch when comparing JarFile and JarInputStream\")\n+                .shouldContain(\"Entries mismatch when \" +\n+                        \"comparing JarFile and JarInputStream\")\n@@ -99,0 +102,4 @@\n+    \/*\n+     * Validate that jarsigner -verify on a valid JAR works without\n+     * emitting warnings about entry mismatches or missing entries.\n+     *\/\n@@ -102,2 +109,4 @@\n-                .shouldNotContain(\"Manifest is missing when reading via JarInputStream\")\n-                .shouldNotContain(\"Entries mismatch when comparing JarFile and JarInputStream\")\n+                .shouldNotContain(\"Manifest is missing \" +\n+                        \"when reading via JarInputStream\")\n+                .shouldNotContain(\"Entries mismatch \" +\n+                        \"when comparing JarFile and JarInputStream\")\n@@ -107,1 +116,2 @@\n-    private void modifyJarEntryName(Path origJar, Path modifiedJar, String entryName) throws Exception {\n+    private void modifyJarEntryName(Path origJar, Path modifiedJar,\n+            String entryName) throws Exception {\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/VerifyJarEntryName.java","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"}]}