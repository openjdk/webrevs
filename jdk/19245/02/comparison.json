{"files":[{"patch":"@@ -43,0 +43,2 @@\n+import javax.lang.model.SourceVersion;\n+\n@@ -120,0 +122,1 @@\n+                  .filter(ProgramDescriptor::composedOfValidPackageNameElements)\n@@ -130,0 +133,11 @@\n+    private static boolean composedOfValidPackageNameElements(Path path) {\n+        if (path.getNameCount() == 0) return false;\n+        for (var element : path) {\n+            var name = element.toString();\n+            if (!SourceVersion.isIdentifier(name)) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/launcher\/ProgramDescriptor.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8304400\n+ * @bug 8304400 8332226\n@@ -115,0 +115,2 @@\n+        var badFolder = Files.createDirectories(base.resolve(\".bad\"));\n+        Files.writeString(badFolder.resolve(\"bad.txt\"), \"bad\");\n@@ -143,0 +145,1 @@\n+            var actual = reader.list().toList();\n@@ -145,0 +148,2 @@\n+                    .bad\/\n+                    .bad\/bad.txt\n@@ -155,2 +160,2 @@\n-                    \"\"\".lines(),\n-                    reader.list());\n+                    \"\"\".lines().toList(),\n+                    actual, \"Actual lines -> \" + actual);\n","filename":"test\/langtools\/tools\/javac\/launcher\/ModuleSourceLauncherTests.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"}]}