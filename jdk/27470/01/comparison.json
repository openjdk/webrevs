{"files":[{"patch":"@@ -668,1 +668,1 @@\n-jlong CgroupSubsystem::memory_limit_in_bytes() {\n+jlong CgroupSubsystem::memory_limit_in_bytes(julong upper_bound) {\n@@ -674,3 +674,1 @@\n-  julong phys_mem = static_cast<julong>(os::Linux::physical_memory());\n-  log_trace(os, container)(\"total physical memory: \" JULONG_FORMAT, phys_mem);\n-  jlong mem_limit = contrl->controller()->read_memory_limit_in_bytes(phys_mem);\n+  jlong mem_limit = contrl->controller()->read_memory_limit_in_bytes(upper_bound);\n@@ -844,4 +842,2 @@\n-jlong CgroupSubsystem::memory_and_swap_limit_in_bytes() {\n-  julong phys_mem = static_cast<julong>(os::Linux::physical_memory());\n-  julong host_swap = os::Linux::host_swap();\n-  return memory_controller()->controller()->memory_and_swap_limit_in_bytes(phys_mem, host_swap);\n+jlong CgroupSubsystem::memory_and_swap_limit_in_bytes(julong upper_mem_bound, julong upper_swap_bound) {\n+  return memory_controller()->controller()->memory_and_swap_limit_in_bytes(upper_mem_bound, upper_swap_bound);\n@@ -850,4 +846,2 @@\n-jlong CgroupSubsystem::memory_and_swap_usage_in_bytes() {\n-  julong phys_mem = static_cast<julong>(os::Linux::physical_memory());\n-  julong host_swap = os::Linux::host_swap();\n-  return memory_controller()->controller()->memory_and_swap_usage_in_bytes(phys_mem, host_swap);\n+jlong CgroupSubsystem::memory_and_swap_usage_in_bytes(julong upper_mem_bound, julong upper_swap_bound) {\n+  return memory_controller()->controller()->memory_and_swap_usage_in_bytes(upper_mem_bound, upper_swap_bound);\n@@ -856,3 +850,2 @@\n-jlong CgroupSubsystem::memory_soft_limit_in_bytes() {\n-  julong phys_mem = static_cast<julong>(os::Linux::physical_memory());\n-  return memory_controller()->controller()->memory_soft_limit_in_bytes(phys_mem);\n+jlong CgroupSubsystem::memory_soft_limit_in_bytes(julong upper_bound) {\n+  return memory_controller()->controller()->memory_soft_limit_in_bytes(upper_bound);\n@@ -897,3 +890,2 @@\n-void CgroupSubsystem::print_version_specific_info(outputStream* st) {\n-  julong phys_mem = static_cast<julong>(os::Linux::physical_memory());\n-  memory_controller()->controller()->print_version_specific_info(st, phys_mem);\n+void CgroupSubsystem::print_version_specific_info(outputStream* st, julong upper_mem_bound) {\n+  memory_controller()->controller()->print_version_specific_info(st, upper_mem_bound);\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":10,"deletions":18,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -236,2 +236,2 @@\n-    virtual jlong memory_and_swap_limit_in_bytes(julong host_mem, julong host_swap) = 0;\n-    virtual jlong memory_and_swap_usage_in_bytes(julong host_mem, julong host_swap) = 0;\n+    virtual jlong memory_and_swap_limit_in_bytes(julong upper_mem_bound, julong upper_swap_bound) = 0;\n+    virtual jlong memory_and_swap_usage_in_bytes(julong upper_mem_bound, julong upper_swap_bound) = 0;\n@@ -243,1 +243,1 @@\n-    virtual void print_version_specific_info(outputStream* st, julong host_mem) = 0;\n+    virtual void print_version_specific_info(outputStream* st, julong upper_mem_bound) = 0;\n@@ -254,1 +254,1 @@\n-    jlong memory_limit_in_bytes();\n+    jlong memory_limit_in_bytes(julong upper_bound);\n@@ -275,3 +275,3 @@\n-    jlong memory_and_swap_limit_in_bytes();\n-    jlong memory_and_swap_usage_in_bytes();\n-    jlong memory_soft_limit_in_bytes();\n+    jlong memory_and_swap_limit_in_bytes(julong upper_mem_bound, julong upper_swap_bound);\n+    jlong memory_and_swap_usage_in_bytes(julong upper_mem_bound, julong upper_swap_bound);\n+    jlong memory_soft_limit_in_bytes(julong upper_bound);\n@@ -282,1 +282,1 @@\n-    void print_version_specific_info(outputStream* st);\n+    void print_version_specific_info(outputStream* st, julong upper_mem_bound);\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-void verbose_log(julong read_mem_limit, julong host_mem) {\n+void verbose_log(julong read_mem_limit, julong upper_mem_bound) {\n@@ -142,1 +142,1 @@\n-    if (mem_limit < 0 || read_mem_limit >= host_mem) {\n+    if (mem_limit < 0 || read_mem_limit >= upper_mem_bound) {\n@@ -149,1 +149,1 @@\n-        assert(read_mem_limit >= host_mem, \"Expected read value exceeding host_mem\");\n+        assert(read_mem_limit >= upper_mem_bound, \"Expected read value exceeding upper memory bound\");\n@@ -154,2 +154,2 @@\n-      log_debug(os, container)(\"container memory limit %s: \" JLONG_FORMAT \", using host value \" JLONG_FORMAT,\n-                               reason, mem_limit, host_mem);\n+      log_debug(os, container)(\"container memory limit %s: \" JLONG_FORMAT \", upper bound is \" JLONG_FORMAT,\n+                               reason, mem_limit, upper_mem_bound);\n@@ -160,1 +160,1 @@\n-jlong CgroupV1MemoryController::read_memory_limit_in_bytes(julong phys_mem) {\n+jlong CgroupV1MemoryController::read_memory_limit_in_bytes(julong upper_bound) {\n@@ -163,2 +163,2 @@\n-  if (memlimit >= phys_mem) {\n-    verbose_log(memlimit, phys_mem);\n+  if (memlimit >= upper_bound) {\n+    verbose_log(memlimit, upper_bound);\n@@ -167,1 +167,1 @@\n-    verbose_log(memlimit, phys_mem);\n+    verbose_log(memlimit, upper_bound);\n@@ -184,1 +184,1 @@\n-jlong CgroupV1MemoryController::read_mem_swap(julong host_total_memsw) {\n+jlong CgroupV1MemoryController::read_mem_swap(julong upper_memsw_bound) {\n@@ -187,1 +187,1 @@\n-  if (memswlimit >= host_total_memsw) {\n+  if (memswlimit >= upper_memsw_bound) {\n@@ -195,2 +195,2 @@\n-jlong CgroupV1MemoryController::memory_and_swap_limit_in_bytes(julong host_mem, julong host_swap) {\n-  jlong memory_swap = read_mem_swap(host_mem + host_swap);\n+jlong CgroupV1MemoryController::memory_and_swap_limit_in_bytes(julong upper_mem_bound, julong upper_swap_bound) {\n+  jlong memory_swap = read_mem_swap(upper_mem_bound + upper_swap_bound);\n@@ -205,1 +205,1 @@\n-    jlong memlimit = read_memory_limit_in_bytes(host_mem);\n+    jlong memlimit = read_memory_limit_in_bytes(upper_mem_bound);\n@@ -223,3 +223,3 @@\n-jlong CgroupV1MemoryController::memory_and_swap_usage_in_bytes(julong phys_mem, julong host_swap) {\n-  jlong memory_sw_limit = memory_and_swap_limit_in_bytes(phys_mem, host_swap);\n-  jlong memory_limit = read_memory_limit_in_bytes(phys_mem);\n+jlong CgroupV1MemoryController::memory_and_swap_usage_in_bytes(julong upper_mem_bound, julong upper_swap_bound) {\n+  jlong memory_sw_limit = memory_and_swap_limit_in_bytes(upper_mem_bound, upper_swap_bound);\n+  jlong memory_limit = read_memory_limit_in_bytes(upper_mem_bound);\n@@ -241,1 +241,1 @@\n-jlong CgroupV1MemoryController::memory_soft_limit_in_bytes(julong phys_mem) {\n+jlong CgroupV1MemoryController::memory_soft_limit_in_bytes(julong upper_bound) {\n@@ -244,1 +244,1 @@\n-  if (memsoftlimit >= phys_mem) {\n+  if (memsoftlimit >= upper_bound) {\n@@ -339,1 +339,1 @@\n-jlong CgroupV1MemoryController::kernel_memory_limit_in_bytes(julong phys_mem) {\n+jlong CgroupV1MemoryController::kernel_memory_limit_in_bytes(julong upper_bound) {\n@@ -342,1 +342,1 @@\n-  if (kmem_limit >= phys_mem) {\n+  if (kmem_limit >= upper_bound) {\n@@ -354,1 +354,1 @@\n-void CgroupV1MemoryController::print_version_specific_info(outputStream* st, julong phys_mem) {\n+void CgroupV1MemoryController::print_version_specific_info(outputStream* st, julong mem_bound) {\n@@ -356,1 +356,1 @@\n-  jlong kmem_limit = kernel_memory_limit_in_bytes(phys_mem);\n+  jlong kmem_limit = kernel_memory_limit_in_bytes(mem_bound);\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -82,2 +82,2 @@\n-    jlong memory_and_swap_limit_in_bytes(julong host_mem, julong host_swap) override;\n-    jlong memory_and_swap_usage_in_bytes(julong host_mem, julong host_swap) override;\n+    jlong memory_and_swap_limit_in_bytes(julong upper_mem_bound, julong upper_swap_bound) override;\n+    jlong memory_and_swap_usage_in_bytes(julong upper_mem_bound, julong upper_swap_bound) override;\n@@ -90,1 +90,1 @@\n-    jlong kernel_memory_limit_in_bytes(julong host_mem);\n+    jlong kernel_memory_limit_in_bytes(julong upper_bound);\n@@ -92,1 +92,1 @@\n-    void print_version_specific_info(outputStream* st, julong host_mem) override;\n+    void print_version_specific_info(outputStream* st, julong upper_mem_bound) override;\n@@ -104,1 +104,1 @@\n-    jlong read_mem_swap(julong host_total_memsw);\n+    jlong read_mem_swap(julong upper_memsw_bound);\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-jlong CgroupV2MemoryController::memory_soft_limit_in_bytes(julong phys_mem) {\n+jlong CgroupV2MemoryController::memory_soft_limit_in_bytes(julong upper_bound) {\n@@ -227,2 +227,2 @@\n-jlong CgroupV2MemoryController::memory_and_swap_limit_in_bytes(julong phys_mem,\n-                                                               julong host_swap \/* unused in cg v2 *\/) {\n+jlong CgroupV2MemoryController::memory_and_swap_limit_in_bytes(julong upper_mem_bound,\n+                                                               julong upper_swap_bound \/* unused in cg v2 *\/) {\n@@ -235,1 +235,1 @@\n-    return read_memory_limit_in_bytes(phys_mem);\n+    return read_memory_limit_in_bytes(upper_mem_bound);\n@@ -239,1 +239,1 @@\n-    jlong memory_limit = read_memory_limit_in_bytes(phys_mem);\n+    jlong memory_limit = read_memory_limit_in_bytes(upper_mem_bound);\n@@ -255,1 +255,1 @@\n-jlong CgroupV2MemoryController::memory_and_swap_usage_in_bytes(julong host_mem, julong host_swap) {\n+jlong CgroupV2MemoryController::memory_and_swap_usage_in_bytes(julong upper_mem_bound, julong upper_swap_bound) {\n@@ -279,1 +279,1 @@\n-jlong CgroupV2MemoryController::read_memory_limit_in_bytes(julong phys_mem) {\n+jlong CgroupV2MemoryController::read_memory_limit_in_bytes(julong upper_bound) {\n@@ -290,1 +290,1 @@\n-    if (limit < 0 || read_limit >= phys_mem) {\n+    if (limit < 0 || read_limit >= upper_bound) {\n@@ -297,1 +297,1 @@\n-        assert(read_limit >= phys_mem, \"Expected mem limit to exceed host memory\");\n+        assert(read_limit >= upper_bound, \"Expected mem limit to exceed upper memory bound\");\n@@ -300,2 +300,2 @@\n-      log_debug(os, container)(\"container memory limit %s: \" JLONG_FORMAT \", using host value \" JLONG_FORMAT,\n-                               reason, limit, phys_mem);\n+      log_debug(os, container)(\"container memory limit %s: \" JLONG_FORMAT \", upper bound is \" JLONG_FORMAT,\n+                               reason, limit, upper_bound);\n@@ -330,1 +330,1 @@\n-void CgroupV2MemoryController::print_version_specific_info(outputStream* st, julong phys_mem) {\n+void CgroupV2MemoryController::print_version_specific_info(outputStream* st, julong upper_mem_bound) {\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -118,2 +118,2 @@\n-    jlong memory_and_swap_limit_in_bytes(julong host_mem, julong host_swp) override;\n-    jlong memory_and_swap_usage_in_bytes(julong host_mem, julong host_swp) override;\n+    jlong memory_and_swap_limit_in_bytes(julong upper_mem_bound, julong upper_swap_bound) override;\n+    jlong memory_and_swap_usage_in_bytes(julong upper_mem_bound, julong upper_swap_bound) override;\n@@ -126,1 +126,1 @@\n-    void print_version_specific_info(outputStream* st, julong host_mem) override;\n+    void print_version_specific_info(outputStream* st, julong upper_mem_bound) override;\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -87,2 +87,2 @@\n-    any_mem_cpu_limit_present = cgroup_subsystem->memory_limit_in_bytes() > 0 ||\n-                                     os::Linux::active_processor_count() != cgroup_subsystem->active_processor_count();\n+    any_mem_cpu_limit_present = memory_limit_in_bytes() > 0 ||\n+                                os::Linux::active_processor_count() != active_processor_count();\n@@ -106,0 +106,17 @@\n+bool OSContainer::available_memory_in_container(julong& value) {\n+  jlong mem_limit = memory_limit_in_bytes();\n+  jlong mem_usage = memory_usage_in_bytes();\n+\n+  if (mem_limit > 0 && mem_usage <= 0) {\n+    log_debug(os, container)(\"container memory usage failed: \" JLONG_FORMAT, mem_usage);\n+  }\n+\n+  if (mem_limit <= 0 || mem_usage <= 0) {\n+    return false;\n+  }\n+\n+  value = mem_limit > mem_usage ? static_cast<julong>(mem_limit - mem_usage) : 0;\n+\n+  return true;\n+}\n+\n@@ -108,1 +125,2 @@\n-  return cgroup_subsystem->memory_limit_in_bytes();\n+  julong phys_mem = static_cast<julong>(os::Linux::physical_memory());\n+  return cgroup_subsystem->memory_limit_in_bytes(phys_mem);\n@@ -113,1 +131,3 @@\n-  return cgroup_subsystem->memory_and_swap_limit_in_bytes();\n+  julong phys_mem = static_cast<julong>(os::Linux::physical_memory());\n+  julong host_swap = os::Linux::host_swap();\n+  return cgroup_subsystem->memory_and_swap_limit_in_bytes(phys_mem, host_swap);\n@@ -118,1 +138,3 @@\n-  return cgroup_subsystem->memory_and_swap_usage_in_bytes();\n+  julong phys_mem = static_cast<julong>(os::Linux::physical_memory());\n+  julong host_swap = os::Linux::host_swap();\n+  return cgroup_subsystem->memory_and_swap_usage_in_bytes(phys_mem, host_swap);\n@@ -123,1 +145,2 @@\n-  return cgroup_subsystem->memory_soft_limit_in_bytes();\n+  julong phys_mem = static_cast<julong>(os::Linux::physical_memory());\n+  return cgroup_subsystem->memory_soft_limit_in_bytes(phys_mem);\n@@ -153,1 +176,2 @@\n-  cgroup_subsystem->print_version_specific_info(st);\n+  julong phys_mem = static_cast<julong>(os::Linux::physical_memory());\n+  cgroup_subsystem->print_version_specific_info(st, phys_mem);\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.cpp","additions":31,"deletions":7,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+  static bool available_memory_in_container(julong& value);\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -216,11 +216,6 @@\n-julong os::Linux::available_memory_in_container() {\n-  julong avail_mem = static_cast<julong>(-1L);\n-  if (OSContainer::is_containerized()) {\n-    jlong mem_limit = OSContainer::memory_limit_in_bytes();\n-    jlong mem_usage;\n-    if (mem_limit > 0 && (mem_usage = OSContainer::memory_usage_in_bytes()) < 1) {\n-      log_debug(os, container)(\"container memory usage failed: \" JLONG_FORMAT \", using host value\", mem_usage);\n-    }\n-    if (mem_limit > 0 && mem_usage > 0) {\n-      avail_mem = mem_limit > mem_usage ? (julong)mem_limit - (julong)mem_usage : 0;\n-    }\n+bool os::available_memory(physical_memory_size_type& value) {\n+  julong avail_mem = 0;\n+  if (OSContainer::is_containerized() && OSContainer::available_memory_in_container(avail_mem)) {\n+    log_trace(os)(\"available container memory: \" JULONG_FORMAT, avail_mem);\n+    value = static_cast<physical_memory_size_type>(avail_mem);\n+    return true;\n@@ -228,2 +223,0 @@\n-  return avail_mem;\n-}\n@@ -231,1 +224,0 @@\n-bool os::available_memory(physical_memory_size_type& value) {\n@@ -236,6 +228,1 @@\n-  julong avail_mem = available_memory_in_container();\n-  if (avail_mem != static_cast<julong>(-1L)) {\n-    log_trace(os)(\"available container memory: \" JULONG_FORMAT, avail_mem);\n-    value = static_cast<physical_memory_size_type>(avail_mem);\n-    return true;\n-  }\n+  julong avail_mem = static_cast<julong>(-1L);\n@@ -267,0 +254,7 @@\n+  julong free_mem = 0;\n+  if (OSContainer::is_containerized() && OSContainer::available_memory_in_container(free_mem)) {\n+    log_trace(os)(\"free container memory: \" JULONG_FORMAT, free_mem);\n+    value = static_cast<physical_memory_size_type>(free_mem);\n+    return true;\n+  }\n+\n@@ -273,6 +267,0 @@\n-  julong free_mem = available_memory_in_container();\n-  if (free_mem != static_cast<julong>(-1L)) {\n-    log_trace(os)(\"free container memory: \" JULONG_FORMAT, free_mem);\n-    value = static_cast<physical_memory_size_type>(free_mem);\n-    return true;\n-  }\n@@ -284,1 +272,1 @@\n-  free_mem = (julong)si.freeram * si.mem_unit;\n+  julong free_mem = (julong)si.freeram * si.mem_unit;\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":15,"deletions":27,"binary":false,"changes":42,"status":"modified"}]}