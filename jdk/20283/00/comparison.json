{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,1 +117,1 @@\n-            this.pos = this.data.length - unused;\n+            this.pos = this.end - unused;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8336667\n+ * @summary Ensure the unused bytes are calculated correctly when converting\n+ *          indefinite length BER to DER\n+ * @modules java.base\/sun.security.util\n+ * @library \/test\/lib\n+ *\/\n+import jdk.test.lib.Asserts;\n+import sun.security.util.DerInputStream;\n+\n+import java.util.HexFormat;\n+\n+public class PoC {\n+    public static void main(String[] args) throws Exception {\n+        \/\/ A BER indefinite encoding with some unused bytes at the end\n+        var data = HexFormat.of().parseHex(\"\"\"\n+                2480 0401AA 0401BB 0000 -- 2 byte string\n+                010100 -- boolean false\n+                12345678 -- 4 unused bytes\"\"\"\n+                .replaceAll(\"(\\\\s|--.*)\", \"\"));\n+        var dis = new DerInputStream(data, 0, data.length - 4, true);\n+        Asserts.assertEQ(dis.getDerValue().getOctetString().length, 2);\n+        Asserts.assertFalse(dis.getDerValue().getBoolean());\n+        dis.atEnd();\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/util\/DerInputBuffer\/B8336667\/PoC.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8336667\n+ * @summary Ensure the unused bytes are calculated correctly when converting\n+ *          indefinite length BER to DER\n+ *\/\n+import java.io.ByteArrayInputStream;\n+import java.security.cert.CRLException;\n+import java.security.cert.CertificateException;\n+import java.util.Base64;\n+\n+public class Reproducer {\n+    private static final String INPUT = \"\"\"\n+            MIIBljCCAVMwgAaB\/\/\/\/\/\/\/\/\/yb\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/9\/\/\/\/AgDv\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+            \/\/\/\/\/2RjPWNvbf\/\/\/\/8k\/\/\/\/\/\/\/\/\/yb\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/9vbf\/\/\/\/8k\/\/\/\/\/\/\/\/\/yb\/\/\/\/\/\n+            \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/AgD\/\/\/\/\/\/\/\/\/\/\/\/\/b23\/\/\/\/\/JP\/\/\/\/\/\/\/\/8m\/\/\/\/\/yf\/\/\/\/\/\/\/\/\/\/\/\/\/\n+            \/\/\/\/\/wIA\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/8AAABl\/\/\/\/\/\/8m\/\/\/\/\/\/\/\/\/y1CRUdJ\n+            TiA9Y290cnVlVlZWVlZWVlZWVjEAAAAAAAAArQdVUwNVBAsTA0RvRDEaMBhAA1UAAAAAAAAAAAAA\n+            AAAAAAAAAAAAAAAAAAEXDTAzMDcxNTE2MjAwNFqgHzAdMA8GA1UdHAEB\/wQFMAPyAf8wCgYDVR0P\n+            BAMCAQIwCwYHKoZIzjgEAwUAAzBkARkTA2NvbTEYMBYGCgmSJomT8ixkARkTCG15VGVzdENBMBIC\n+            AQHyAjZG+RfHdO4=\"\"\";\n+\n+    Reproducer(byte[] data) {\n+        try {\n+            java.security.cert.CertificateFactory.\n+                    getInstance(\"X.509\").generateCRLs(new ByteArrayInputStream(data));\n+        } catch (CertificateException | CRLException e) {\n+            if (System.getProperty(\"dbg\", \"false\").equals(\"true\")) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    public static void main(String[] a) throws Exception {\n+        byte[] decodedBytes = Base64.getMimeDecoder().decode(INPUT);\n+        new Reproducer(decodedBytes);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/util\/DerInputBuffer\/B8336667\/Reproducer.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}