{"files":[{"patch":"@@ -28,1 +28,11 @@\n-import java.security.*;\n+import sun.security.jca.GetInstance;\n+import sun.security.jca.GetInstance.Instance;\n+import sun.security.util.Debug;\n+\n+import javax.crypto.spec.KDFParameterSpec;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.NoSuchProviderException;\n+import java.security.Provider;\n+import java.security.Provider.Service;\n+import java.security.ProviderException;\n@@ -31,2 +41,0 @@\n-import java.security.Provider.Service;\n-import java.security.NoSuchAlgorithmException;\n@@ -36,6 +44,0 @@\n-import sun.security.util.Debug;\n-import sun.security.jca.*;\n-import sun.security.jca.GetInstance.Instance;\n-\n-import javax.crypto.spec.KDFParameterSpec;\n-\n@@ -162,1 +164,1 @@\n-        } catch (InvalidParameterSpecException e) {\n+        } catch (InvalidAlgorithmParameterException e) {\n@@ -194,2 +196,2 @@\n-                                   provider);\n-        } catch (InvalidParameterSpecException e) {\n+                               provider);\n+        } catch (InvalidAlgorithmParameterException e) {\n@@ -224,2 +226,2 @@\n-                                   provider);\n-        } catch (InvalidParameterSpecException e) {\n+                               provider);\n+        } catch (InvalidAlgorithmParameterException e) {\n@@ -247,1 +249,1 @@\n-     * @throws InvalidParameterSpecException\n+     * @throws InvalidAlgorithmParameterException\n@@ -254,1 +256,1 @@\n-        throws NoSuchAlgorithmException, InvalidParameterSpecException {\n+        throws NoSuchAlgorithmException, InvalidAlgorithmParameterException {\n@@ -289,1 +291,1 @@\n-     * @throws InvalidParameterSpecException\n+     * @throws InvalidAlgorithmParameterException\n@@ -298,1 +300,1 @@\n-               InvalidParameterSpecException {\n+               InvalidAlgorithmParameterException {\n@@ -314,2 +316,1 @@\n-            throw new NoSuchAlgorithmException(\n-                \"Algorithm \" + algorithm + \" not available\", nsae);\n+            return handleException(nsae);\n@@ -336,1 +337,1 @@\n-     * @throws InvalidParameterSpecException\n+     * @throws InvalidAlgorithmParameterException\n@@ -344,1 +345,1 @@\n-        throws NoSuchAlgorithmException, InvalidParameterSpecException {\n+        throws NoSuchAlgorithmException, InvalidAlgorithmParameterException {\n@@ -360,2 +361,10 @@\n-            throw new NoSuchAlgorithmException(\n-                \"Algorithm \" + algorithm + \" not available\", nsae);\n+            return handleException(nsae);\n+        }\n+    }\n+\n+    private static KDF handleException(NoSuchAlgorithmException e)\n+        throws NoSuchAlgorithmException,\n+               InvalidAlgorithmParameterException {\n+        Throwable cause = e.getCause();\n+        if (cause instanceof InvalidAlgorithmParameterException) {\n+            throw (InvalidAlgorithmParameterException) cause;\n@@ -363,0 +372,1 @@\n+        throw e;\n@@ -376,1 +386,1 @@\n-     * KDF output and according to the derivation parameters\n+     *     KDF output and according to the derivation parameters\n@@ -442,2 +452,2 @@\n-     * processed {@code DerivationParameterSpec} and containing the next bytes\n-     * of output from the key derivation function\n+     *     processed {@code DerivationParameterSpec} and containing the next\n+     *     bytes of output from the key derivation function\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":37,"deletions":27,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * This class defines the <i>Service Provider Interface<\/i> (<b>SPI<\/b>) for\n- * the {@code KDF} class.\n+ * This class defines the <i>Service Provider Interface<\/i> (<b>SPI<\/b>) for the\n+ * {@code KDF} class.\n@@ -41,1 +41,0 @@\n- *\n@@ -81,1 +80,1 @@\n-     * KDF output and according to the derivation parameters.\n+     *     KDF output and according to the derivation parameters.\n@@ -84,4 +83,3 @@\n-     *     if the information contained within the\n-     *     {@code KDFParameterSpec} is invalid or incorrect for the type\n-     *     of key to be derived, or specifies a type of output that is not a key\n-     *     (e.g. raw data)\n+     *     if the information contained within the {@code KDFParameterSpec} is\n+     *     invalid or incorrect for the type of key to be derived, or specifies\n+     *     a type of output that is not a key (e.g. raw data)\n@@ -105,2 +103,2 @@\n-     * processed {@code KDFParameterSpec} and containing the next bytes\n-     * of output from the key derivation function.\n+     *     processed {@code KDFParameterSpec} and containing the next bytes of\n+     *     output from the key derivation function.\n@@ -109,3 +107,2 @@\n-     *     if the information contained within the\n-     *     {@code KDFParameterSpec} is invalid or incorrect for the type\n-     *     of key to be derived\n+     *     if the information contained within the {@code KDFParameterSpec} is\n+     *     invalid or incorrect for the type of key to be derived\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDFSpi.java","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"}]}