{"files":[{"patch":"@@ -49,2 +49,2 @@\n- * <I>algorithm<\/I>\/<I>PRF<\/I>.  The algorithm field is the KDF algorithm (e.g.\n- * HKDF, TLS-PRF, PBKDF2, etc.), while the PRF specifier identifies the\n+ * <I>Algorithm<\/I>with<I>PRF<\/I>.  The algorithm field is the KDF algorithm (e.g.\n+ * HKDF, etc.), while the PRF specifier identifies the\n@@ -53,1 +53,1 @@\n- * \"HKDF\/HmacSHA256\".  In some cases the PRF portion of the algorithm specifier\n+ * \"HKDFwithHmacSHA256\".  In some cases the PRF portion of the algorithm specifier\n@@ -56,1 +56,14 @@\n- * TODO: finish this javadoc\n+ *\n+ * Example:\n+ *  {@snippet lang = java:\n+ *    KDF kdfHkdf = KDF.getInstance(\"HKDFWithHmacSHA256\",\n+ *                                       (AlgorithmParameterSpec) null);\n+ *\n+ *    KDFParameterSpec kdfParameterSpec =\n+ *             HKDFParameterSpec.extract()\n+ *                              .addIKM(ikm)\n+ *                              .addSalt(salt).andExpand(info, 42);\n+ *\n+ *    kdfHkdf.deriveKey(\"AES\", kdfParameterSpec);\n+ *}\n+ *\n@@ -378,1 +391,4 @@\n-     * Derive a key, returned as a {@code Key}.\n+     * Derive a key, returned as a {@code SecretKey}.\n+     * <p>\n+     * The {@code deriveKey} method may be called multiple times once a\n+     * {@code KDF} object is initialized.\n@@ -380,1 +396,2 @@\n-     * TODO: additional description\n+     * Delayed provider selection is also supported such that the provider\n+     * performing the derive is not selected until the method is called.\n@@ -383,1 +400,1 @@\n-     *     the algorithm of the resultant {@code Key} object\n+     *     the algorithm of the resultant {@code SecretKey} object\n@@ -398,2 +415,3 @@\n-     * @throws InvalidAlgorithmParameterException\n-     *     TODO: fill this in\n+     * @throws UnsupportedOperationException\n+     *     if the derived key material is not extractable\n+     *\n@@ -402,2 +420,1 @@\n-        throws InvalidParameterSpecException,\n-               InvalidAlgorithmParameterException {\n+        throws InvalidParameterSpecException {\n@@ -448,1 +465,5 @@\n-     * TODO: additional description\n+     * The {@code deriveData} method may be called multiple times once a\n+     * {@code KDF} object is initialized.\n+     * <p>\n+     * Delayed provider selection is also supported such that the provider\n+     * performing the derive is not selected until the method is called.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":33,"deletions":12,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -41,0 +41,2 @@\n+ * @see KDF\n+ * @see SecretKey\n@@ -53,1 +55,3 @@\n-     * TODO: additional description\n+     * An {@code AlgorithmParameterSpec} may be specified for PRF algorithms that\n+     * may require this. Though no such KDF algorithms are currently defined,\n+     * this parameter is held for future use.\n@@ -72,1 +76,5 @@\n-     * TODO: additional description\n+     * The {@code deriveKey} method may be called multiple times once a\n+     * {@code KDF} object is initialized.\n+     * <p>\n+     * Delayed provider selection is also supported such that the provider\n+     * performing the derive is not selected until the method is called.\n@@ -97,1 +105,5 @@\n-     * TODO: additional description\n+     * The {@code deriveData} method may be called multiple times once a\n+     * {@code KDF} object is initialized.\n+     * <p>\n+     * Delayed provider selection is also supported such that the provider\n+     * performing the derive is not selected until the method is called.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDFSpi.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}