{"files":[{"patch":"@@ -43,2 +43,1 @@\n- * This class provides the functionality of a key derivation algorithm for the Java Cryptographic\n- * Extension (JCE) framework.\n+ * This class provides the functionality of a key derivation algorithm for JCE.\n@@ -46,7 +45,8 @@\n- * {@code KeyDerivation} objects will be instantiated through the {@code getInstance} family of\n- * methods.  Key derivation algorithm names will follow a naming convention of\n- * <I>algorithm<\/I>\/<I>PRF<\/I>.  The algorithm field will be the KDF name\n- * (e.g. HKDF, TLS-PRF, PBKDF2, etc.), while the PRF specifier identifies the underlying\n- * pseudorandom function (e.g. HmacSHA256).  For instance, a KDF implementation of HKDF using\n- * HMAC-SHA256 will have an algorithm string of \"HKDF\/HmacSHA256\".  In some cases the PRF portion of\n- * the algorithm specifier may be omitted if the KDF algorithm has a fixed or default PRF.\n+ * {@code KDF} objects are instantiated through the {@code getInstance} family\n+ * of methods.  Key derivation algorithm names follow a naming convention\n+ * of <I>algorithm<\/I>\/<I>PRF<\/I>.  The algorithm field is the KDF algorithm\n+ * (e.g. HKDF, TLS-PRF, PBKDF2, etc.), while the PRF specifier identifies the\n+ * underlying pseudorandom function (e.g. HmacSHA256).  For instance, a KDF\n+ * implementation of HKDF using HMAC-SHA256 will have an algorithm string of\n+ * \"HKDF\/HmacSHA256\".  In some cases the PRF portion of the algorithm specifier\n+ * may be omitted if the KDF algorithm has a fixed or default PRF.\n@@ -55,0 +55,2 @@\n+ *\n+ * @since 23\n@@ -58,1 +60,2 @@\n-    private static final Debug debug = Debug.getInstance(\"jca\", \"KeyDerivation\");\n+    private static final Debug debug = Debug.getInstance(\"jca\",\n+                                                         \"KeyDerivation\");\n@@ -60,2 +63,4 @@\n-    private static final Debug pdebug = Debug.getInstance(\"provider\", \"Provider\");\n-    private static final boolean skipDebug = Debug.isOn(\"engine=\") && !Debug.isOn(\"keyderive\");\n+    private static final Debug pdebug = Debug.getInstance(\"provider\",\n+                                                          \"Provider\");\n+    private static final boolean skipDebug = Debug.isOn(\"engine=\")\n+                                             && !Debug.isOn(\"keyderive\");\n@@ -75,3 +80,0 @@\n-    \/\/ Has this object been initialized?\n-    private boolean initialized = false;\n-\n@@ -89,1 +91,1 @@\n-     * Instantiates a KeyDerivation object.\n+     * Instantiates a KDF object.\n@@ -100,2 +102,2 @@\n-    protected KDF(KDFSpi keyDerivSpi, Provider provider, String algorithm,\n-                  AlgorithmParameterSpec algParameterSpec) {\n+    private KDF(KDFSpi keyDerivSpi, Provider provider, String algorithm,\n+                AlgorithmParameterSpec algParameterSpec) {\n@@ -110,1 +112,1 @@\n-     * Returns the algorithm name of this {@code KeyDerivation} object.\n+     * Returns the algorithm name of this {@code KDF} object.\n@@ -113,1 +115,2 @@\n-     * {@code getInstance} calls that created this {@code KeyDerivation} object.\n+     * {@code getInstance} calls that created this {@code KDF}\n+     * object.\n@@ -115,1 +118,1 @@\n-     * @return the algorithm name of this {@code KeyDerivation} object.\n+     * @return the algorithm name of this {@code KDF} object\n@@ -117,1 +120,1 @@\n-    public final String getAlgorithm() {\n+    public String getAlgorithm() {\n@@ -122,1 +125,1 @@\n-     * Returns the provider of this {@code KeyDerivation} object.\n+     * Returns the provider of this {@code KDF} object.\n@@ -124,1 +127,1 @@\n-     * @return the provider of this {@code KeyDerivation} object.\n+     * @return the provider of this {@code KDF} object.\n@@ -126,1 +129,1 @@\n-    private final Provider getProvider() {\n+    private Provider getProvider() {\n@@ -144,2 +147,2 @@\n-     *     if no {@code Provider} supports a {@code KDFSpi} implementation for the specified\n-     *     algorithm.\n+     *     if no {@code Provider} supports a {@code KDFSpi} implementation for\n+     *     the specified algorithm.\n@@ -147,2 +150,3 @@\n-    public static KDF getInstance(String algorithm) throws NoSuchAlgorithmException {\n-        KDF instance = null;\n+    public static KDF getInstance(String algorithm)\n+        throws NoSuchAlgorithmException {\n+        KDF instance;\n@@ -153,1 +157,2 @@\n-                \"Received an InvalidParameterSpecException. Does this algorithm require an \"\n+                \"Received an InvalidParameterSpecException. Does this \"\n+                + \"algorithm require an \"\n@@ -160,1 +165,2 @@\n-     * Creates an instance of the {@code KDF} object with a specific {@code Provider}.\n+     * Creates an instance of the {@code KDF} object with a specific\n+     * {@code Provider}.\n@@ -170,2 +176,2 @@\n-     *     if no {@code Provider} supports a {@code KDFSpi} implementation for the specified\n-     *     algorithm.\n+     *     if no {@code Provider} supports a {@code KDFSpi} implementation for\n+     *     the specified algorithm.\n@@ -173,1 +179,2 @@\n-     *     if the specified provider is not registered in the security provider list.\n+     *     if the specified provider is not registered in the security provider\n+     *     list.\n@@ -177,1 +184,1 @@\n-        KDF instance = null;\n+        KDF instance;\n@@ -179,1 +186,2 @@\n-            instance = getInstance(algorithm, (AlgorithmParameterSpec) null, provider);\n+            instance = getInstance(algorithm, null,\n+                                   provider);\n@@ -182,1 +190,2 @@\n-                \"Received an InvalidParameterSpecException. Does this algorithm require an \"\n+                \"Received an InvalidParameterSpecException. Does this \"\n+                + \"algorithm require an \"\n@@ -189,1 +198,2 @@\n-     * Creates an instance of the {@code KDF} object using a supplied {@code Provider} instance.\n+     * Creates an instance of the {@code KDF} object using a supplied\n+     * {@code Provider} instance.\n@@ -199,2 +209,2 @@\n-     *     if no {@code Provider} supports a {@code KDFSpi} implementation for the specified\n-     *     algorithm.\n+     *     if no {@code Provider} supports a {@code KDFSpi} implementation for\n+     *     the specified algorithm.\n@@ -204,1 +214,1 @@\n-        KDF instance = null;\n+        KDF instance;\n@@ -206,1 +216,2 @@\n-            instance = getInstance(algorithm, (AlgorithmParameterSpec) null, provider);\n+            instance = getInstance(algorithm, null,\n+                                   provider);\n@@ -209,1 +220,2 @@\n-                \"Received an InvalidParameterSpecException. Does this algorithm require an \"\n+                \"Received an InvalidParameterSpecException. Does this \"\n+                + \"algorithm require an \"\n@@ -221,2 +233,2 @@\n-     *     the {@code AlgorithmParameterSpec} used to configure this KDF's algorithm or {@code null}\n-     *     if no additional parameters were provided.\n+     *     the {@code AlgorithmParameterSpec} used to configure this KDF's\n+     *     algorithm or {@code null} if no additional parameters were provided.\n@@ -227,2 +239,2 @@\n-     *     if no {@code Provider} supports a {@code KDFSpi} implementation for the specified\n-     *     algorithm.\n+     *     if no {@code Provider} supports a {@code KDFSpi} implementation for\n+     *     the specified algorithm.\n@@ -232,1 +244,2 @@\n-    public static KDF getInstance(String algorithm, AlgorithmParameterSpec algParameterSpec)\n+    public static KDF getInstance(String algorithm,\n+                                  AlgorithmParameterSpec algParameterSpec)\n@@ -236,1 +249,2 @@\n-            Instance instance = GetInstance.getInstance(\"KDF\", KDFSpi.class, algorithm,\n+            Instance instance = GetInstance.getInstance(\"KDF\", KDFSpi.class,\n+                                                        algorithm,\n@@ -239,1 +253,2 @@\n-                String msg = \"JCE cannot authenticate the provider \" + instance.provider.getName();\n+                String msg = \"JCE cannot authenticate the provider \"\n+                             + instance.provider.getName();\n@@ -242,1 +257,2 @@\n-            return new KDF((KDFSpi) instance.impl, instance.provider, algorithm, algParameterSpec);\n+            return new KDF((KDFSpi) instance.impl, instance.provider, algorithm,\n+                           algParameterSpec);\n@@ -245,1 +261,2 @@\n-            throw new NoSuchAlgorithmException(\"Algorithm \" + algorithm + \" not available\", nsae);\n+            throw new NoSuchAlgorithmException(\n+                \"Algorithm \" + algorithm + \" not available\", nsae);\n@@ -250,1 +267,2 @@\n-     * Creates an instance of the {@code KDF} object with a specific {@code Provider}.\n+     * Creates an instance of the {@code KDF} object with a specific\n+     * {@code Provider}.\n@@ -255,2 +273,2 @@\n-     *     the {@code AlgorithmParameterSpec} used to configure this KDF's algorithm or {@code null}\n-     *     if no additional parameters were provided.\n+     *     the {@code AlgorithmParameterSpec} used to configure this KDF's\n+     *     algorithm or {@code null} if no additional parameters were provided.\n@@ -263,2 +281,2 @@\n-     *     if no {@code Provider} supports a {@code KDFSpi} implementation for the specified\n-     *     algorithm.\n+     *     if no {@code Provider} supports a {@code KDFSpi} implementation for\n+     *     the specified algorithm.\n@@ -266,1 +284,2 @@\n-     *     if the specified provider is not registered in the security provider list.\n+     *     if the specified provider is not registered in the security provider\n+     *     list.\n@@ -270,1 +289,2 @@\n-    public static KDF getInstance(String algorithm, AlgorithmParameterSpec algParameterSpec,\n+    public static KDF getInstance(String algorithm,\n+                                  AlgorithmParameterSpec algParameterSpec,\n@@ -272,1 +292,2 @@\n-        throws NoSuchAlgorithmException, NoSuchProviderException, InvalidParameterSpecException {\n+        throws NoSuchAlgorithmException, NoSuchProviderException,\n+               InvalidParameterSpecException {\n@@ -275,2 +296,4 @@\n-            Instance instance = GetInstance.getInstance(\"KDF\", KDFSpi.class, algorithm,\n-                                                        algParameterSpec, provider);\n+            Instance instance = GetInstance.getInstance(\"KDF\", KDFSpi.class,\n+                                                        algorithm,\n+                                                        algParameterSpec,\n+                                                        provider);\n@@ -278,1 +301,2 @@\n-                String msg = \"JCE cannot authenticate the provider \" + instance.provider.getName();\n+                String msg = \"JCE cannot authenticate the provider \"\n+                             + instance.provider.getName();\n@@ -281,1 +305,2 @@\n-            return new KDF((KDFSpi) instance.impl, instance.provider, algorithm, algParameterSpec);\n+            return new KDF((KDFSpi) instance.impl, instance.provider, algorithm,\n+                           algParameterSpec);\n@@ -284,1 +309,2 @@\n-            throw new NoSuchAlgorithmException(\"Algorithm \" + algorithm + \" not available\", nsae);\n+            throw new NoSuchAlgorithmException(\n+                \"Algorithm \" + algorithm + \" not available\", nsae);\n@@ -289,1 +315,2 @@\n-     * Creates an instance of the {@code KDF} object using a supplied {@code Provider} instance.\n+     * Creates an instance of the {@code KDF} object using a supplied\n+     * {@code Provider} instance.\n@@ -294,2 +321,2 @@\n-     *     the {@code AlgorithmParameterSpec} used to configure this KDF's algorithm or {@code null}\n-     *     if no additional parameters were provided.\n+     *     the {@code AlgorithmParameterSpec} used to configure this KDF's\n+     *     algorithm or {@code null} if no additional parameters were provided.\n@@ -302,2 +329,2 @@\n-     *     if no {@code Provider} supports a {@code KDFSpi} implementation for the specified\n-     *     algorithm.\n+     *     if no {@code Provider} supports a {@code KDFSpi} implementation for\n+     *     the specified algorithm.\n@@ -307,1 +334,2 @@\n-    public static KDF getInstance(String algorithm, AlgorithmParameterSpec algParameterSpec,\n+    public static KDF getInstance(String algorithm,\n+                                  AlgorithmParameterSpec algParameterSpec,\n@@ -312,2 +340,4 @@\n-            Instance instance = GetInstance.getInstance(\"KDF\", KDFSpi.class, algorithm,\n-                                                        algParameterSpec, provider);\n+            Instance instance = GetInstance.getInstance(\"KDF\", KDFSpi.class,\n+                                                        algorithm,\n+                                                        algParameterSpec,\n+                                                        provider);\n@@ -315,1 +345,2 @@\n-                String msg = \"JCE cannot authenticate the provider \" + instance.provider.getName();\n+                String msg = \"JCE cannot authenticate the provider \"\n+                             + instance.provider.getName();\n@@ -318,1 +349,2 @@\n-            return new KDF((KDFSpi) instance.impl, instance.provider, algorithm, algParameterSpec);\n+            return new KDF((KDFSpi) instance.impl, instance.provider, algorithm,\n+                           algParameterSpec);\n@@ -321,1 +353,2 @@\n-            throw new NoSuchAlgorithmException(\"Algorithm \" + algorithm + \" not available\", nsae);\n+            throw new NoSuchAlgorithmException(\n+                \"Algorithm \" + algorithm + \" not available\", nsae);\n@@ -335,2 +368,2 @@\n-     * @return a {@code SecretKey} object corresponding to a key built from the KDF output and according\n-     * to the derivation parameters.\n+     * @return a {@code SecretKey} object corresponding to a key built from the\n+     * KDF output and according to the derivation parameters.\n@@ -339,3 +372,3 @@\n-     *     if the information contained within the {@code KDFParameterSpec} is invalid or incorrect\n-     *     for the type of key to be derived, or specifies a type of output that is not a key (e.g.\n-     *     raw data)\n+     *     if the information contained within the {@code KDFParameterSpec} is\n+     *     invalid or incorrect for the type of key to be derived, or specifies\n+     *     a type of output that is not a key (e.g. raw data)\n@@ -343,3 +376,3 @@\n-     *     if the key derivation implementation cannot support additional calls to {@code deriveKey}\n-     *     or if all {@code KDFParameterSpec} objects provided at initialization have been\n-     *     processed.\n+     *     if the key derivation implementation cannot support additional calls\n+     *     to {@code deriveKey} or if all {@code KDFParameterSpec} objects\n+     *     provided at initialization have been processed.\n@@ -350,1 +383,2 @@\n-        throws InvalidParameterSpecException, InvalidAlgorithmParameterException {\n+        throws InvalidParameterSpecException,\n+               InvalidAlgorithmParameterException {\n@@ -362,3 +396,3 @@\n-     * @return a byte array whose length matches the length field in the processed\n-     * {@code DerivationParameterSpec} and containing the next bytes of output from the key\n-     * derivation function.\n+     * @return a byte array whose length matches the length field in the\n+     * processed {@code DerivationParameterSpec} and containing the next bytes\n+     * of output from the key derivation function.\n@@ -367,2 +401,2 @@\n-     *     if the {@code DerivationParameterSpec} being applied to this method is of a type other\n-     *     than \"data\".\n+     *     if the {@code DerivationParameterSpec} being applied to this method\n+     *     is of a type other than \"data\".\n@@ -370,3 +404,3 @@\n-     *     if the key derivation implementation cannot support additional calls to\n-     *     {@code deriveData } or if all {@code DerivationParameterSpec} objects have been\n-     *     processed.\n+     *     if the key derivation implementation cannot support additional calls\n+     *     to {@code deriveData } or if all {@code DerivationParameterSpec}\n+     *     objects have been processed.\n@@ -385,2 +419,3 @@\n-     * Choose the Spi from the first provider available. Used if delayed provider selection is not\n-     * possible because init() is not the first method called.\n+     * Choose the Spi from the first provider available. Used if delayed\n+     * provider selection is not possible because init() is not the first method\n+     * called.\n@@ -399,2 +434,4 @@\n-                    debug.println(\"KeyDerivation.init() not first method called, disabling delayed \"\n-                                  + \"provider selection\");\n+                    debug.println(\n+                        \"KDF.init() not first method called, \"\n+                        + \"disabling delayed \"\n+                        + \"provider selection\");\n@@ -402,1 +439,2 @@\n-                        debug.println(\"Further warnings of this type will be suppressed\");\n+                        debug.println(\n+                            \"Further warnings of this type will be suppressed\");\n@@ -421,1 +459,1 @@\n-                    if (obj instanceof KDFSpi == false) {\n+                    if (!(obj instanceof KDFSpi)) {\n@@ -435,1 +473,1 @@\n-                \"Could not construct KeyDerivationSpi instance\");\n+                \"Could not construct KDFSpi instance\");\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":138,"deletions":100,"binary":false,"changes":238,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n- * This class defines the <i>Service Provider Interface<\/i> (<b>SPI<\/b>) for the\n- * <code>KeyDerivation<\/code> class.\n+ * This class defines the <i>Service Provider Interface<\/i> (<b>SPI<\/b>) for\n+ * the {@code KDF} class.\n@@ -37,2 +37,6 @@\n- * All the abstract methods in this class must be implemented by each cryptographic service provider\n- * who wishes to supply the implementation of a particular key derivation algorithm.\n+ * All the abstract methods in this class must be implemented by each\n+ * cryptographic service provider who wishes to supply the implementation of a\n+ * particular key derivation algorithm.\n+ *\n+ *\n+ * @since 23\n@@ -53,1 +57,2 @@\n-     *     the initialization parameters for the KDF algorithm (may be {@code null})\n+     *     the initialization parameters for the {@code KDF} algorithm (may be\n+     *     {@code null})\n@@ -56,1 +61,2 @@\n-     *     if the initialization parameters are inappropriate for this {@code KDFSpi}\n+     *     if the initialization parameters are inappropriate for this\n+     *     {@code KDFSpi}\n@@ -65,1 +71,1 @@\n-     * Derive a key, returned as a {@code Key}.\n+     * Derive a key, returned as a {@code SecretKey}.\n@@ -74,2 +80,2 @@\n-     * @return a {@code SecretKey} object corresponding to a key built from the KDF output and according\n-     * to the derivation parameters.\n+     * @return a {@code SecretKey} object corresponding to a key built from the\n+     * KDF output and according to the derivation parameters.\n@@ -78,3 +84,4 @@\n-     *     if the information contained within the {@code DerivationParameterSpec} is invalid or\n-     *     incorrect for the type of key to be derived, or specifies a type of output that is not a\n-     *     key (e.g. raw data)\n+     *     if the information contained within the\n+     *     {@code KDFParameterSpec} is invalid or incorrect for the type\n+     *     of key to be derived, or specifies a type of output that is not a key\n+     *     (e.g. raw data)\n@@ -82,3 +89,2 @@\n-     *     if the key derivation implementation cannot support additional calls to {@code deriveKey}\n-     *     or if all {@code DerivationParameterSpec} objects provided at initialization have been\n-     *     processed.\n+     *     if the key derivation implementation cannot support additional calls\n+     *     to {@code deriveKey}\n@@ -86,1 +92,2 @@\n-    protected abstract SecretKey engineDeriveKey(String alg, KDFParameterSpec kdfParameterSpec)\n+    protected abstract SecretKey engineDeriveKey(String alg,\n+                                                 KDFParameterSpec kdfParameterSpec)\n@@ -97,3 +104,3 @@\n-     * @return a byte array whose length matches the length field in the processed\n-     * {@code DerivationParameterSpec} and containing the next bytes of output from the key\n-     * derivation function.\n+     * @return a byte array whose length matches the length field in the\n+     * processed {@code KDFParameterSpec} and containing the next bytes\n+     * of output from the key derivation function.\n@@ -102,2 +109,3 @@\n-     *     if the {@code DerivationParameterSpec} being applied to this method is of a type other\n-     *     than \"data\".\n+     *     if the information contained within the\n+     *     {@code KDFParameterSpec} is invalid or incorrect for the type\n+     *     of key to be derived\n@@ -105,3 +113,2 @@\n-     *     if the key derivation implementation cannot support additional calls to\n-     *     {@code deriveData } or if all {@code DerivationParameterSpec} objects have been\n-     *     processed.\n+     *     if the key derivation implementation cannot support additional calls\n+     *     to {@code deriveData }\n@@ -109,1 +116,2 @@\n-    protected abstract byte[] engineDeriveData(KDFParameterSpec kdfParameterSpec)\n+    protected abstract byte[] engineDeriveData(\n+        KDFParameterSpec kdfParameterSpec)\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDFSpi.java","additions":33,"deletions":25,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -34,3 +34,4 @@\n- * Parameters for the combined Extract-Only, Expand-Only, or Extract-then-Expand operations of the\n- * HMAC-based Key Derivation Function (HKDF). The HKDF function is defined in <a\n- * href=\"http:\/\/tools.ietf.org\/html\/rfc5869\">RFC 5869<\/a>.\n+ * Parameters for the combined Extract-Only, Expand-Only, or Extract-then-Expand\n+ * operations of the HMAC-based Key Derivation Function (HKDF). The HKDF\n+ * function is defined in <a href=\"http:\/\/tools.ietf.org\/html\/rfc5869\">RFC\n+ * 5869<\/a>.\n@@ -40,1 +41,1 @@\n-public interface HKDFParameterSpec extends KDFParameterSpec {\n+public sealed interface HKDFParameterSpec extends KDFParameterSpec {\n@@ -43,1 +44,2 @@\n-     * This builder helps with the mutation required by the {@code Extract} scenario.\n+     * This builder helps with the mutation required by the {@code Extract}\n+     * scenario.\n@@ -50,1 +52,0 @@\n-        SecretKey prk = null;\n@@ -72,1 +73,2 @@\n-                    \"this `Builder` must have either at least one IKM value, at least one salt \"\n+                    \"this `Builder` must have either at least one IKM value, \"\n+                    + \"at least one salt \"\n@@ -75,1 +77,2 @@\n-                this.extract = new Extract(List.copyOf(ikms), List.copyOf(salts));\n+                this.extract = new Extract(List.copyOf(ikms),\n+                                           List.copyOf(salts));\n@@ -81,1 +84,2 @@\n-         * Akin to a {@code Builder.build()} method for an {@code ExtractExpand}\n+         * Akin to a {@code Builder.build()} method for an\n+         * {@code ExtractExpand}\n@@ -93,1 +97,2 @@\n-                    \"`thenExpand` can only be called on a `Builder` when `ofTypeExtract` has \"\n+                    \"`thenExpand` can only be called on a `Builder` when \"\n+                    + \"`ofTypeExtract` has \"\n@@ -96,1 +101,3 @@\n-            return extractExpand(new Extract(List.copyOf(ikms), List.copyOf(salts)), info, length);\n+            return extractExpand(\n+                new Extract(List.copyOf(ikms), List.copyOf(salts)), info,\n+                length);\n@@ -100,3 +107,4 @@\n-         * {@code addIKM} may be called when the ikm value is to be assembled piece-meal or if part\n-         * of the IKM is to be supplied by a hardware crypto device. This method appends to the\n-         * existing list of values or creates a new list if there are none yet.\n+         * {@code addIKM} may be called when the ikm value is to be assembled\n+         * piece-meal or if part of the IKM is to be supplied by a hardware\n+         * crypto device. This method appends to the existing list of values or\n+         * creates a new list if there are none yet.\n@@ -104,2 +112,2 @@\n-         * This supports the use-case where a label can be applied to the IKM but the actual value\n-         * of the IKM is not yet available.\n+         * This supports the use-case where a label can be applied to the IKM\n+         * but the actual value of the IKM is not yet available.\n@@ -120,3 +128,4 @@\n-         * {@code addIKM} may be called when the ikm value is to be assembled piece-meal or if part\n-         * of the IKM is to be supplied by a hardware crypto device. This method appends to the\n-         * existing list of values or creates a new list if there are none yet.\n+         * {@code addIKM} may be called when the ikm value is to be assembled\n+         * piece-meal or if part of the IKM is to be supplied by a hardware\n+         * crypto device. This method appends to the existing list of values or\n+         * creates a new list if there are none yet.\n@@ -124,2 +133,2 @@\n-         * This supports the use-case where a label can be applied to the IKM but the actual value\n-         * of the IKM is not yet available.\n+         * This supports the use-case where a label can be applied to the IKM\n+         * but the actual value of the IKM is not yet available.\n@@ -141,3 +150,4 @@\n-         * {@code addSalt} may be called when the salt value is to be assembled piece-meal or if\n-         * part of the salt is to be supplied by a hardware crypto device. This method appends to\n-         * the existing list of values or creates a new list if there are none yet.\n+         * {@code addSalt} may be called when the salt value is to be assembled\n+         * piece-meal or if part of the salt is to be supplied by a hardware\n+         * crypto device. This method appends to the existing list of values or\n+         * creates a new list if there are none yet.\n@@ -145,2 +155,2 @@\n-         * This supports the use-case where a label can be applied to the salt but the actual value\n-         * of the salt is not yet available.\n+         * This supports the use-case where a label can be applied to the salt\n+         * but the actual value of the salt is not yet available.\n@@ -161,3 +171,4 @@\n-         * {@code addSalt} may be called when the salt value is to be assembled piece-meal or if\n-         * part of the salt is to be supplied by a hardware crypto device. This method appends to\n-         * the existing list of values or creates a new list if there are none yet.\n+         * {@code addSalt} may be called when the salt value is to be assembled\n+         * piece-meal or if part of the salt is to be supplied by a hardware\n+         * crypto device. This method appends to the existing list of values or\n+         * creates a new list if there are none yet.\n@@ -165,2 +176,2 @@\n-         * This supports the use-case where a label can be applied to the salt but the actual value\n-         * of the salt is not yet available.\n+         * This supports the use-case where a label can be applied to the salt\n+         * but the actual value of the salt is not yet available.\n@@ -183,2 +194,2 @@\n-     * Static helper-method that may be used to initialize a {@code Builder} with an empty\n-     * {@code Extract}\n+     * Static helper-method that may be used to initialize a {@code Builder}\n+     * with an empty {@code Extract}\n@@ -186,2 +197,3 @@\n-     * Note: one or more of the methods {@code addIKM} or {@code addSalt} should be called next,\n-     * before calling build methods, such as {@code Builder.extractOnly()}\n+     * Note: one or more of the methods {@code addIKM} or {@code addSalt} should\n+     * be called next, before calling build methods, such as\n+     * {@code Builder.extractOnly()}\n@@ -196,1 +208,2 @@\n-     * Static helper-method that may be used to initialize an {@code Expand} object\n+     * Static helper-method that may be used to initialize an {@code Expand}\n+     * object\n@@ -212,1 +225,2 @@\n-     * Static helper-method that may be used to initialize an {@code ExtractExpand} object\n+     * Static helper-method that may be used to initialize an\n+     * {@code ExtractExpand} object\n@@ -214,3 +228,3 @@\n-     * Note: one or more of the methods {@code addIKM} or {@code addSalt} should be called on the\n-     * {@code Extract} parameter, before calling this method, since {@code ExtractExpand} is\n-     * immutable\n+     * Note: one or more of the methods {@code addIKM} or {@code addSalt} should\n+     * be called on the {@code Extract} parameter, before calling this method,\n+     * since {@code ExtractExpand} is immutable\n@@ -235,1 +249,1 @@\n-    class Extract implements HKDFParameterSpec {\n+    final class Extract implements HKDFParameterSpec {\n@@ -274,1 +288,1 @@\n-    class Expand implements HKDFParameterSpec {\n+    final class Expand implements HKDFParameterSpec {\n@@ -277,3 +291,3 @@\n-        private SecretKey pseudoRandomKey = null;\n-        private byte[] info = null;\n-        private int length = -1;\n+        private final SecretKey pseudoRandomKey;\n+        private final byte[] info;\n+        private final int length;\n@@ -316,1 +330,1 @@\n-            return info;\n+            return (info == null)? null : info.clone();\n@@ -331,2 +345,2 @@\n-     * Defines the input parameters of an ExtractExpand operation as defined in <a\n-     * href=\"http:\/\/tools.ietf.org\/html\/rfc5869\">RFC 5869<\/a>.\n+     * Defines the input parameters of an ExtractExpand operation as defined in\n+     * <a href=\"http:\/\/tools.ietf.org\/html\/rfc5869\">RFC 5869<\/a>.\n@@ -334,1 +348,1 @@\n-    class ExtractExpand implements HKDFParameterSpec {\n+    final class ExtractExpand implements HKDFParameterSpec {\n@@ -339,1 +353,2 @@\n-         * Constructor that may be used to initialize an {@code ExtractExpand} object\n+         * Constructor that may be used to initialize an {@code ExtractExpand}\n+         * object\n@@ -341,2 +356,2 @@\n-         * Note: {@code addIKMValue} and {@code addSaltValue} may be called afterward to supply\n-         * additional values, if desired\n+         * Note: {@code addIKMValue} and {@code addSaltValue} may be called\n+         * afterward to supply additional values, if desired\n@@ -353,1 +368,2 @@\n-                throw new IllegalArgumentException(\"ext (the Extract parameter) must not be null\");\n+                throw new IllegalArgumentException(\n+                    \"ext (the Extract parameter) must not be null\");\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/HKDFParameterSpec.java","additions":69,"deletions":53,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -32,2 +32,1 @@\n- * is to group (and provide type safety for) all parameter specifications. All KDF parameter\n- * specifications must implement this interface.\n+ * is to group (and provide type safety for) all KDF parameter specifications.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/KDFParameterSpec.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,3 +44,5 @@\n-        byte[] ikm = new BigInteger(\"0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b\",\n-                                    16).toByteArray();\n-        byte[] salt = new BigInteger(\"000102030405060708090a0b0c\", 16).toByteArray();\n+        byte[] ikm = new BigInteger(\n+            \"0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b\",\n+            16).toByteArray();\n+        byte[] salt = new BigInteger(\"000102030405060708090a0b0c\",\n+                                     16).toByteArray();\n@@ -50,1 +52,2 @@\n-            HKDFParameterSpec.extract().addIKM(ikm).addSalt(salt).extractOnly(), info, 42);\n+            HKDFParameterSpec.extract().addIKM(ikm).addSalt(salt).extractOnly(),\n+            info, 42);\n@@ -58,1 +61,2 @@\n-        KDF kdfHkdf = KDF.getInstance(\"HKDF\/HmacSHA256\", (AlgorithmParameterSpec) null);\n+        KDF kdfHkdf = KDF.getInstance(\"HKDF\/HmacSHA256\",\n+                                      (AlgorithmParameterSpec) null);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/TestHKDFInitialization.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -48,1 +48,2 @@\n-                        String saltStr, String infoStr, int oLen, String expPrkStr,\n+                        String saltStr, String infoStr, int oLen,\n+                        String expPrkStr,\n@@ -82,1 +83,2 @@\n-                         \"3cb25f25faacd57a90434f64d0362f2a2d2d0a90cf1a5a4c5db02d56ecc4c5bf\" +\n+                         \"3cb25f25faacd57a90434f64d0362f2a2d2d0a90cf1a5a4c5db02d56ecc4c5bf\"\n+                         +\n@@ -85,2 +87,4 @@\n-                         \"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\" +\n-                         \"202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f\" +\n+                         \"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\"\n+                         +\n+                         \"202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f\"\n+                         +\n@@ -88,2 +92,4 @@\n-                         \"606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f\" +\n-                         \"808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9f\" +\n+                         \"606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f\"\n+                         +\n+                         \"808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9f\"\n+                         +\n@@ -91,2 +97,4 @@\n-                         \"b0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecf\" +\n-                         \"d0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeef\" +\n+                         \"b0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecf\"\n+                         +\n+                         \"d0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeef\"\n+                         +\n@@ -96,2 +104,4 @@\n-                         \"b11e398dc80327a1c8e7f78c596a49344f012eda2d4efad8a050cc4c19afa97c\" +\n-                         \"59045a99cac7827271cb41c65e590e09da3275600c2f09b8367793a9aca3db71\" +\n+                         \"b11e398dc80327a1c8e7f78c596a49344f012eda2d4efad8a050cc4c19afa97c\"\n+                         +\n+                         \"59045a99cac7827271cb41c65e590e09da3275600c2f09b8367793a9aca3db71\"\n+                         +\n@@ -103,1 +113,2 @@\n-                         \"8da4e775a563c18f715f802a063c5a31b8a11f5c5ee1879ec3454e5f3c738d2d\" +\n+                         \"8da4e775a563c18f715f802a063c5a31b8a11f5c5ee1879ec3454e5f3c738d2d\"\n+                         +\n@@ -129,1 +140,2 @@\n-        throws InvalidParameterSpecException, InvalidAlgorithmParameterException,\n+        throws InvalidParameterSpecException,\n+               InvalidAlgorithmParameterException,\n@@ -158,3 +170,4 @@\n-        KDFParameterSpec kdfParameterSpecExtract = HKDFParameterSpec.extract().addIKM(ikmKey)\n-                                                                    .addSalt(testData.salt)\n-                                                                    .extractOnly();\n+        KDFParameterSpec kdfParameterSpecExtract =\n+            HKDFParameterSpec.extract().addIKM(ikmKey)\n+                             .addSalt(testData.salt)\n+                             .extractOnly();\n@@ -173,2 +186,3 @@\n-        KDFParameterSpec kdfParameterSpecExpand = HKDFParameterSpec.expand(actualPRK, testData.info,\n-                                                                           testData.outLen);\n+        KDFParameterSpec kdfParameterSpecExpand = HKDFParameterSpec.expand(\n+            actualPRK, testData.info,\n+            testData.outLen);\n@@ -188,4 +202,5 @@\n-        KDFParameterSpec kdfParameterSpecExtractExpand = HKDFParameterSpec.extract().addIKM(ikmKey)\n-                                                                          .addSalt(testData.salt)\n-                                                                          .andExpand(testData.info,\n-                                                                                     testData.outLen);\n+        KDFParameterSpec kdfParameterSpecExtractExpand =\n+            HKDFParameterSpec.extract().addIKM(ikmKey)\n+                             .addSalt(testData.salt)\n+                             .andExpand(testData.info,\n+                                        testData.outLen);\n@@ -205,1 +220,2 @@\n-     * Compare key-based and data-based productions from the KDF against an expected output value.\n+     * Compare key-based and data-based productions from the KDF against an\n+     * expected output value.\n@@ -214,1 +230,2 @@\n-     * @return true if the underlying data for outKey, outData and expectedOut are the same.\n+     * @return true if the underlying data for outKey, outData and expectedOut\n+     * are the same.\n@@ -228,1 +245,2 @@\n-                               dumpHexBytes(outKey.getEncoded(), 16, \"\\n\", \" \"));\n+                               dumpHexBytes(outKey.getEncoded(), 16, \"\\n\",\n+                                            \" \"));\n@@ -253,2 +271,2 @@\n-     *     The number of bytes to display per line if the {@code lineDelim} character is blank then\n-     *     all bytes will be printed on a single line.\n+     *     The number of bytes to display per line if the {@code lineDelim}\n+     *     character is blank then all bytes will be printed on a single line.\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/TestHkdf.java","additions":44,"deletions":26,"binary":false,"changes":70,"status":"modified"}]}