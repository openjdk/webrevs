{"files":[{"patch":"@@ -424,47 +424,0 @@\n-    public static final class HkdfExtractSHA256 extends HkdfKeyDerivation {\n-        public HkdfExtractSHA256(AlgorithmParameterSpec algParameterSpec)\n-            throws InvalidAlgorithmParameterException {\n-            super(algParameterSpec);\n-            hmacAlgName = \"HmacSHA256\";\n-        }\n-    }\n-\n-    public static final class HkdfExtractSHA384 extends HkdfKeyDerivation {\n-        public HkdfExtractSHA384(AlgorithmParameterSpec algParameterSpec)\n-            throws InvalidAlgorithmParameterException {\n-            super(algParameterSpec);\n-            hmacAlgName = \"HmacSHA384\";\n-        }\n-    }\n-\n-    public static final class HkdfExtractSHA512 extends HkdfKeyDerivation {\n-        public HkdfExtractSHA512(AlgorithmParameterSpec algParameterSpec)\n-            throws InvalidAlgorithmParameterException {\n-            super(algParameterSpec);\n-            hmacAlgName = \"HmacSHA512\";\n-        }\n-    }\n-\n-    public static final class HkdfExpandSHA256 extends HkdfKeyDerivation {\n-        public HkdfExpandSHA256(AlgorithmParameterSpec algParameterSpec)\n-            throws InvalidAlgorithmParameterException {\n-            super(algParameterSpec);\n-            hmacAlgName = \"HmacSHA256\";\n-        }\n-    }\n-\n-    public static final class HkdfExpandSHA384 extends HkdfKeyDerivation {\n-        public HkdfExpandSHA384(AlgorithmParameterSpec algParameterSpec)\n-            throws InvalidAlgorithmParameterException {\n-            super(algParameterSpec);\n-            hmacAlgName = \"HmacSHA384\";\n-        }\n-    }\n-\n-    public static final class HkdfExpandSHA512 extends HkdfKeyDerivation {\n-        public HkdfExpandSHA512(AlgorithmParameterSpec algParameterSpec)\n-            throws InvalidAlgorithmParameterException {\n-            super(algParameterSpec);\n-            hmacAlgName = \"HmacSHA512\";\n-        }\n-    }\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/HkdfKeyDerivation.java","additions":0,"deletions":47,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -463,1 +463,1 @@\n-        ps(\"KDF\", \"HKDF\/HmacSHA256\",\n+        ps(\"KDF\", \"HkdfSHA256\",\n@@ -465,1 +465,1 @@\n-        ps(\"KDF\", \"HKDF\/HmacSHA384\",\n+        ps(\"KDF\", \"HkdfSHA384\",\n@@ -467,1 +467,1 @@\n-        ps(\"KDF\", \"HKDF\/HmacSHA512\",\n+        ps(\"KDF\", \"HkdfSHA512\",\n@@ -470,14 +470,0 @@\n-        ps(\"KDF\", \"HKDF-Extract\/HmacSHA256\",\n-                \"com.sun.crypto.provider.HkdfKeyDerivation$HkdfExtractSHA256\");\n-        ps(\"KDF\", \"HKDF-Extract\/HmacSHA384\",\n-                \"com.sun.crypto.provider.HkdfKeyDerivation$HkdfExtractSHA384\");\n-        ps(\"KDF\", \"HKDF-Extract\/HmacSHA512\",\n-                \"com.sun.crypto.provider.HkdfKeyDerivation$HkdfExtractSHA512\");\n-\n-        ps(\"KDF\", \"HKDF-Expand\/HmacSHA256\",\n-                \"com.sun.crypto.provider.HkdfKeyDerivation$HkdfExpandSHA256\");\n-        ps(\"KDF\", \"HKDF-Expand\/HmacSHA384\",\n-                \"com.sun.crypto.provider.HkdfKeyDerivation$HkdfExpandSHA384\");\n-        ps(\"KDF\", \"HKDF-Expand\/HmacSHA512\",\n-                \"com.sun.crypto.provider.HkdfKeyDerivation$HkdfExpandSHA512\");\n-\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/SunJCE.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-        this.lock = null;\n+        this.lock = new Object();\n@@ -125,1 +125,1 @@\n-     * Returns the provider of this {@code KDF} object.\n+     * Returns the name of the provider.\n@@ -127,1 +127,1 @@\n-     * @return the provider of this {@code KDF} object.\n+     * @return the name of the provider\n@@ -129,7 +129,2 @@\n-    private Provider getProvider() {\n-        chooseFirstProvider();\n-        return this.provider;\n-    }\n-\n-    private String getProviderName() {\n-        return (provider == null) ? \"(no provider)\" : provider.getName();\n+    public String providerName() {\n+        return provider.getName();\n@@ -385,0 +380,1 @@\n+        chooseFirstProvider();\n@@ -412,0 +408,1 @@\n+        chooseFirstProvider();\n@@ -431,14 +428,0 @@\n-            if (debug != null) {\n-                int w = --warnCount;\n-                if (w >= 0) {\n-                    debug.println(\n-                        \"KDF.init() not first method called, \"\n-                        + \"disabling delayed \"\n-                        + \"provider selection\");\n-                    if (w == 0) {\n-                        debug.println(\n-                            \"Further warnings of this type will be suppressed\");\n-                    }\n-                    new Exception(\"Call trace\").printStackTrace();\n-                }\n-            }\n@@ -454,1 +437,1 @@\n-                if (JceSecurity.canUseProvider(s.getProvider()) == false) {\n+                if (!JceSecurity.canUseProvider(s.getProvider())) {\n@@ -458,1 +441,1 @@\n-                    Object obj = s.newInstance(null);\n+                    Object obj = s.newInstance(algorithmParameterSpec);\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":9,"deletions":26,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        KDF kdfHkdf = KDF.getInstance(\"HKDF\/HmacSHA256\",\n+        KDF kdfHkdf = KDF.getInstance(\"HkdfSHA256\",\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/TestHKDFInitialization.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-        add(new TestData(\"RFC 5689 Test Case 1\", \"HKDF\/HmacSHA256\",\n+        add(new TestData(\"RFC 5689 Test Case 1\", \"HkdfSHA256\",\n@@ -86,1 +86,1 @@\n-        add(new TestData(\"RFC 5689 Test Case 2\", \"HKDF\/HmacSHA256\",\n+        add(new TestData(\"RFC 5689 Test Case 2\", \"HkdfSHA256\",\n@@ -109,1 +109,1 @@\n-        add(new TestData(\"RFC 5689 Test Case 3\", \"HKDF\/HmacSHA256\",\n+        add(new TestData(\"RFC 5689 Test Case 3\", \"HkdfSHA256\",\n@@ -150,4 +150,0 @@\n-        \/\/ Get an instance of the HKDF Extract\/Expand derivation engine\n-        String[] tokens = testData.algName.split(\"\/\");\n-        kdfName = tokens[0];\n-        prfName = tokens[1];\n@@ -156,2 +152,2 @@\n-            kdfExtract = KDF.getInstance(\"HKDF-Extract\/\" + prfName);\n-            kdfExpand = KDF.getInstance(\"HKDF-Expand\/\" + prfName);\n+            kdfExtract = KDF.getInstance(testData.algName);\n+            kdfExpand = KDF.getInstance(testData.algName);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/TestHkdf.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"}]}