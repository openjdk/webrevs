{"files":[{"patch":"@@ -49,6 +49,6 @@\n- * of methods.  The algorithm field is the KDF algorithm\n- * (e.g. HKDF, etc.), while the PRF specifier identifies the underlying\n- * pseudorandom function (e.g. HmacSHA256).  For instance, a KDF implementation\n- * of HKDF using HMAC-SHA256 will have an algorithm string of\n- * \"HKDFWithHmacSHA256\".  In some cases the PRF portion of the algorithm\n- * specifier may be omitted if the KDF algorithm has a fixed or default PRF.\n+ * of methods.  The algorithm field is the KDF algorithm (e.g. HKDF, etc.),\n+ * while the PRF specifier identifies the underlying pseudorandom function (e.g.\n+ * HmacSHA256).  For instance, a KDF implementation of HKDF using HMAC-SHA256\n+ * will have an algorithm string of \"HKDFWithHmacSHA256\".  In some cases the PRF\n+ * portion of the algorithm specifier may be omitted if the KDF algorithm has a\n+ * fixed or default PRF.\n@@ -72,1 +72,1 @@\n-@PreviewFeature(feature=PreviewFeature.Feature.KEY_DERIVATION)\n+@PreviewFeature(feature = PreviewFeature.Feature.KEY_DERIVATION)\n@@ -406,0 +406,2 @@\n+     * @throws NullPointerException\n+     *     if {@code alg} is null\n@@ -410,0 +412,5 @@\n+            if (alg == null || alg.isEmpty()) {\n+                throw new NullPointerException(\n+                    \"the algorithm for the SecretKey return value may not be \"\n+                    + \"null or empty\");\n+            }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"}]}