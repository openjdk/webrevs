{"files":[{"patch":"@@ -46,9 +46,7 @@\n- * This class provides the functionality of a key derivation algorithm for JCE.\n- * <p>\n- * {@code KDF} objects are instantiated through the {@code getInstance} family\n- * of methods.  The algorithm field is the KDF algorithm (e.g. HKDF, etc.),\n- * while the PRF specifier identifies the underlying pseudorandom function (e.g.\n- * HmacSHA256).  For instance, a KDF implementation of HKDF using HMAC-SHA256\n- * will have an algorithm string of \"HKDFWithHmacSHA256\".  In some cases the PRF\n- * portion of the algorithm specifier may be omitted if the KDF algorithm has a\n- * fixed or default PRF.\n+ * This class provides the functionality of a Key Derivation Function (KDF).\n+ * {@code KDF} objects are instantiated with the {@code getInstance} family of\n+ * methods. KDF algorithm names follow a naming convention of\n+ * <em>Algorithm<\/em>With<em>PRF<\/em>. For instance, a KDF implementation of\n+ * HKDF using HMAC-SHA256 has an algorithm name of \"HKDFWithHmacSHA256\".\n+ * In some cases the PRF portion of the algorithm field may be omitted if\n+ * the KDF algorithm has a fixed or default PRF.\n@@ -58,2 +56,1 @@\n- *    KDF kdfHkdf = KDF.getInstance(\"HKDFWithHmacSHA256\",\n- *                                       (AlgorithmParameterSpec) null);\n+ *    KDF kdfHkdf = KDF.getInstance(\"HKDFWithHmacSHA256\");\n@@ -462,2 +459,2 @@\n-     * The {@code deriveData} method may be called multiple times on a particular\n-     * {@code KDF} instance.\n+     * The {@code deriveData} method may be called multiple times on a\n+     * particular {@code KDF} instance.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"}]}