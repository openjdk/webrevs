{"files":[{"patch":"@@ -201,2 +201,1 @@\n-     *     the provider to use for this key derivation; if null, this method is\n-     *     equivalent to {@code getInstance(String)}\n+     *     the provider to use for this key derivation (may not be {@code null})\n@@ -218,0 +217,1 @@\n+        Objects.requireNonNull(provider, \"provider may not be null\");\n@@ -234,2 +234,1 @@\n-     *     the provider to use for this key derivation; if null, this method is\n-     *     equivalent to {@code getInstance(String)}\n+     *     the provider to use for this key derivation (may not be {@code null})\n@@ -248,0 +247,1 @@\n+        Objects.requireNonNull(provider, \"provider may not be null\");\n@@ -304,2 +304,1 @@\n-     *     the provider to use for this key derivation; if null, this method is\n-     *     equivalent to {@code getInstance(String, AlgorithmParameterSpec)}\n+     *     the provider to use for this key derivation (may not be {@code null})\n@@ -327,0 +326,1 @@\n+        Objects.requireNonNull(provider, \"provider may not be null\");\n@@ -355,2 +355,1 @@\n-     *     the provider to use for this key derivation; if null, this method is\n-     *     equivalent to {@code getInstance(String, AlgorithmParameterSpec)}\n+     *     the provider to use for this key derivation (may not be {@code null})\n@@ -374,0 +373,1 @@\n+        Objects.requireNonNull(provider, \"provider may not be null\");\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}