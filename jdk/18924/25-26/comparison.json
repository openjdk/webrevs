{"files":[{"patch":"@@ -50,6 +50,6 @@\n- * <I>Algorithm<\/I>with<I>PRF<\/I>.  The algorithm field is the KDF algorithm (e.g.\n- * HKDF, etc.), while the PRF specifier identifies the\n- * underlying pseudorandom function (e.g. HmacSHA256).  For instance, a KDF\n- * implementation of HKDF using HMAC-SHA256 will have an algorithm string of\n- * \"HKDFwithHmacSHA256\".  In some cases the PRF portion of the algorithm specifier\n- * may be omitted if the KDF algorithm has a fixed or default PRF.\n+ * <I>Algorithm<\/I>with<I>PRF<\/I>.  The algorithm field is the KDF algorithm\n+ * (e.g. HKDF, etc.), while the PRF specifier identifies the underlying\n+ * pseudorandom function (e.g. HmacSHA256).  For instance, a KDF implementation\n+ * of HKDF using HMAC-SHA256 will have an algorithm string of\n+ * \"HKDFwithHmacSHA256\".  In some cases the PRF portion of the algorithm\n+ * specifier may be omitted if the KDF algorithm has a fixed or default PRF.\n@@ -57,1 +57,0 @@\n- *\n@@ -59,1 +58,1 @@\n- *  {@snippet lang = java:\n+ * {@snippet lang = java:\n@@ -71,1 +70,0 @@\n- *\n@@ -73,1 +71,0 @@\n- *\n@@ -143,3 +140,0 @@\n-     * <p>This is the same name that was specified in one of the\n-     * {@code getInstance} calls that created this {@code KDF} object.\n-     *\n@@ -163,1 +157,1 @@\n-     * Creates an instance of the {@code KDF} object.\n+     * Returns a {@code KDF} object that implements the specified algorithm..\n@@ -171,2 +165,2 @@\n-     *     if no {@code Provider} supports a {@code KDFSpi} implementation for\n-     *     the specified algorithm\n+     *     if no {@code Provider} supports a {@code KDF} implementation for the\n+     *     specified algorithm\n@@ -174,1 +168,1 @@\n-     *     if the algorithm is {@code null}\n+     *     if {@code algorithm} is {@code null}\n@@ -189,2 +183,2 @@\n-     * Creates an instance of the {@code KDF} object with a specific\n-     * {@code Provider}.\n+     * Returns a {@code KDF} object that implements the specified algorithm from\n+     * the specified security provider.\n@@ -222,2 +216,2 @@\n-     * Creates an instance of the {@code KDF} object using a supplied\n-     * {@code Provider} instance.\n+     * Returns a {code KDF} object that implements the specified algorithm from\n+     * the specified security provider.\n@@ -252,1 +246,2 @@\n-     * Creates an instance of the {@code KDF} object.\n+     * Returns a {@code KDF} object that implements the specified algorithm and\n+     * is initialized with the specified parameters.\n@@ -258,1 +253,1 @@\n-     *     algorithm or {@code null} if no additional parameters were provided.\n+     *     algorithm or {@code null} if no additional parameters are provided\n@@ -295,1 +290,1 @@\n-     *     algorithm or {@code null} if no additional parameters were provided.\n+     *     algorithm or {@code null} if no additional parameters are provided\n@@ -344,1 +339,1 @@\n-     *     algorithm or {@code null} if no additional parameters were provided.\n+     *     algorithm or {@code null} if no additional parameters are provided\n@@ -412,1 +407,0 @@\n-     *\n@@ -434,1 +428,2 @@\n-                    SecretKey result = spi.engineDeriveKey(alg, kdfParameterSpec);\n+                    SecretKey result = spi.engineDeriveKey(alg,\n+                                                           kdfParameterSpec);\n@@ -471,2 +466,2 @@\n-     *     processed {@code KDFParameterSpec} and containing the next\n-     *     bytes of output from the key derivation function\n+     *     processed {@code KDFParameterSpec} and containing the next bytes of\n+     *     output from the key derivation function\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":24,"deletions":29,"binary":false,"changes":53,"status":"modified"}]}