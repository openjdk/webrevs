{"files":[{"patch":"@@ -35,1 +35,1 @@\n- * lbrary, such as generating random {@code Expression}s.\n+ * library, such as generating random {@code Expression}s.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/library\/CodeGenerationDataNameType.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    \/\/ We have one static instance each, so we do not have duplicat instances.\n+    \/\/ We have one static instance each, so we do not have duplicated instances.\n@@ -76,1 +76,1 @@\n-        return switch(kind) {\n+        return switch (kind) {\n@@ -94,1 +94,1 @@\n-        return switch(kind) {\n+        return switch (kind) {\n@@ -102,1 +102,1 @@\n-            case BOOLEAN -> RANDOM.nextInt() % 2 == 0;\n+            case BOOLEAN -> RANDOM.nextBoolean();\n@@ -113,1 +113,1 @@\n-        return switch(kind) {\n+        return switch (kind) {\n@@ -115,6 +115,3 @@\n-            case SHORT   -> 2;\n-            case CHAR    -> 2;\n-            case INT     -> 4;\n-            case LONG    -> 8;\n-            case FLOAT   -> 4;\n-            case DOUBLE  -> 8;\n+            case SHORT, CHAR -> 2;\n+            case INT, FLOAT -> 4;\n+            case LONG, DOUBLE -> 8;\n@@ -131,1 +128,1 @@\n-        return switch(kind) {\n+        return switch (kind) {\n@@ -144,1 +141,1 @@\n-     * Indicates if the type is a floating type.\n+     * Indicates if the type is a floating point type.\n@@ -146,1 +143,1 @@\n-     * @return true iff the type is a floating type.\n+     * @return true iff the type is a floating point type.\n@@ -149,9 +146,3 @@\n-        return switch(kind) {\n-            case BYTE    -> false;\n-            case SHORT   -> false;\n-            case CHAR    -> false;\n-            case INT     -> false;\n-            case LONG    -> false;\n-            case FLOAT   -> true;\n-            case DOUBLE  -> true;\n-            case BOOLEAN -> false;\n+        return switch (kind) {\n+            case BYTE, SHORT, CHAR, INT, LONG, BOOLEAN -> false;\n+            case FLOAT, DOUBLE -> true;\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/template_framework\/library\/PrimitiveType.java","additions":14,"deletions":23,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import compiler.lib.template_framework.DataName;\n@@ -50,1 +49,0 @@\n-import static compiler.lib.template_framework.Template.dataNames;\n@@ -76,1 +74,1 @@\n-    \/\/ Generate a source Java file as String\n+    \/\/ Generate a Java source file as String\n@@ -79,1 +77,1 @@\n-        Map<String,TemplateToken> tests = new HashMap<>();\n+        Map<String, TemplateToken> tests = new HashMap<>();\n@@ -164,3 +162,1 @@\n-                    CodeGenerationDataNameType.PRIMITIVE_TYPES.stream().map(type ->\n-                        sampleTemplate.asToken(type)\n-                    ).toList()\n+                    CodeGenerationDataNameType.PRIMITIVE_TYPES.stream().map(sampleTemplate::asToken).toList()\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/template_framework\/examples\/TestPrimitiveTypes.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"}]}