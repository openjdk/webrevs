{"files":[{"patch":"@@ -178,1 +178,1 @@\n-  return _thread_control.initialize(this, max_num_threads());\n+  return _thread_control.initialize(this, G1ConcRefinementThreads);\n@@ -202,4 +202,0 @@\n-uint G1ConcurrentRefine::max_num_threads() {\n-  return G1ConcRefinementThreads;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -218,3 +218,0 @@\n-\n-  \/\/ Maximum number of refinement threads.\n-  static uint max_num_threads();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-  return G1DirtyCardQueueSet::num_par_ids() + G1ConcurrentRefine::max_num_threads() + MAX2(ConcGCThreads, ParallelGCThreads);\n+  return G1DirtyCardQueueSet::num_par_ids() + G1ConcRefinementThreads + MAX2(ConcGCThreads, ParallelGCThreads);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FromCardCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-  _num_vtimes(G1ConcurrentRefine::max_num_threads()),\n+  _num_vtimes(G1ConcRefinementThreads),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSetSummary.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}