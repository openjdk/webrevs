{"files":[{"patch":"@@ -70,1 +70,1 @@\n- * subtype of, it and deliberately hides types such as {@code ImageLocation} to\n+ * subtype of it, and deliberately hides types such as {@code ImageLocation} to\n@@ -172,1 +172,1 @@\n-            throw new IllegalStateException(\"Not a resource node: \" + node);\n+            throw new IllegalArgumentException(\"Not a resource node: \" + node);\n@@ -189,1 +189,1 @@\n-        \/\/ Attributes of the .jimage file. The jimage file does not contain\n+        \/\/ Attributes of the jimage file. The jimage file does not contain\n@@ -195,1 +195,1 @@\n-        private final HashMap<String, Node> nodes;\n+        private final Map<String, Node> nodes;\n@@ -316,1 +316,1 @@\n-        Node buildModulesNode(String name) {\n+        private Node buildModulesNode(String name) {\n@@ -318,1 +318,1 @@\n-            \/\/ Will fail for non-directory resources since the jimage name does not\n+            \/\/ Returns null for non-directory resources, since the jimage name does not\n@@ -639,2 +639,2 @@\n-         * <p>If this node is not a directory ({@code isDirectory() == false})\n-         * then this method will throw {@link IllegalStateException}.\n+         * <p>By default, this method throws {@link IllegalStateException} and\n+         * is overridden for directories.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jimage\/ImageReader.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -347,0 +347,1 @@\n+        \/\/ Reader should not be openable with the wrong byte order.\n@@ -348,4 +349,1 @@\n-        try (ImageReader badReader = ImageReader.open(imageFile, otherOrder)) {\n-            Assert.fail(\"Reader should not be openable with the wrong byte order.\");\n-        } catch (IOException expected) {\n-        }\n+        Assert.assertThrows(IOException.class, () -> ImageReader.open(imageFile, otherOrder));\n","filename":"test\/jdk\/jdk\/internal\/jimage\/JImageReadTest.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}