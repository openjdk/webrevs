{"files":[{"patch":"@@ -39,1 +39,0 @@\n- * @requires (os.family == \"mac\")\n@@ -44,5 +43,3 @@\n-    static boolean failed;\n-    static JFrame frame;\n-    static JPanel panel;\n-    static JPanel innerPanel;\n-    static JPopupMenu menu;\n+    static volatile boolean failed;\n+    static volatile JFrame frame;\n+    static volatile JPanel panel;\n@@ -53,6 +50,4 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            createAndShowGUI();\n-            srcPoint = frame.getLocationOnScreen();\n-            d = frame.getSize();\n-        });\n-        srcPoint.translate(2*d.width\/3, 3*d.height\/4);\n+        try {\n+            failed = false;\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n@@ -60,2 +55,5 @@\n-        final Point dstPoint = new Point(srcPoint);\n-        dstPoint.translate(4*d.width\/15, 0);\n+            SwingUtilities.invokeAndWait(() -> {\n+                createAndShowGUI();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n@@ -63,3 +61,6 @@\n-        failed = false;\n-        Robot robot = new Robot();\n-        robot.setAutoDelay(100);\n+            SwingUtilities.invokeAndWait(() -> {\n+                srcPoint = frame.getLocationOnScreen();\n+                d = frame.getSize();\n+            });\n+            robot.waitForIdle();\n+            srcPoint.translate(2 * d.width \/ 3, 3 * d.height \/ 4);\n@@ -67,2 +68,2 @@\n-        robot.mouseMove(srcPoint.x, srcPoint.y);\n-        robot.waitForIdle();\n+            final Point dstPoint = new Point(srcPoint);\n+            dstPoint.translate(4 * d.width \/ 15, 0);\n@@ -70,2 +71,0 @@\n-        robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n-        robot.waitForIdle();\n@@ -73,2 +72,0 @@\n-        while (!srcPoint.equals(dstPoint)) {\n-            srcPoint.translate(sign(dstPoint.x - srcPoint.x), 0);\n@@ -76,2 +73,4 @@\n-        }\n-        robot.waitForIdle();\n+            robot.waitForIdle();\n+\n+            robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+            robot.waitForIdle();\n@@ -79,2 +78,8 @@\n-        robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n-        robot.waitForIdle();\n+            while (!srcPoint.equals(dstPoint)) {\n+                srcPoint.translate(sign(dstPoint.x - srcPoint.x), 0);\n+                robot.mouseMove(srcPoint.x, srcPoint.y);\n+            }\n+            robot.waitForIdle();\n+\n+            robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+            robot.waitForIdle();\n@@ -82,2 +87,9 @@\n-        if (failed) {\n-            throw new RuntimeException(\"Popup was shown, Test Failed.\");\n+            if (failed) {\n+                throw new RuntimeException(\"Popup was shown, Test Failed.\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -94,2 +106,2 @@\n-        innerPanel = new JPanel();\n-        menu = new JPopupMenu();\n+        JPanel innerPanel = new JPanel();\n+        JPopupMenu menu = new JPopupMenu();\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/MouseDragPopupTest.java","additions":43,"deletions":31,"binary":false,"changes":74,"status":"modified"}]}