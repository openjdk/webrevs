{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-        boolean jpopupTrigger = NSEvent.isPopupTrigger(jmodifiers);\n+        boolean jpopupTrigger = NSEvent.isPopupTrigger(jmodifiers, jeventType);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformResponder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -256,1 +256,1 @@\n-        boolean isPopupTrigger = NSEvent.isPopupTrigger(jmodifiers);\n+        boolean isPopupTrigger = NSEvent.isPopupTrigger(jmodifiers, jeventType);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CTrayIcon.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -272,1 +272,6 @@\n-    static boolean isPopupTrigger(int jmodifiers) {\n+    static boolean isPopupTrigger(int jmodifiers, int jeventType) {\n+        if (jeventType != MouseEvent.MOUSE_PRESSED\n+                && jeventType != MouseEvent.MOUSE_RELEASED) {\n+            return false;\n+        }\n+\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/NSEvent.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,135 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JPopupMenu;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.PopupMenuEvent;\n+import javax.swing.event.PopupMenuListener;\n+\n+\/*\n+ * @test\n+ * @bug 8315655\n+ * @key headful\n+ * @run main MouseDragPopupTest\n+ *\/\n+public class MouseDragPopupTest {\n+    static volatile boolean failed;\n+    static volatile JFrame frame;\n+    static volatile JPanel panel;\n+    static volatile Point srcPoint;\n+    static volatile Dimension d;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            failed = false;\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                createAndShowGUI();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                srcPoint = frame.getLocationOnScreen();\n+                d = frame.getSize();\n+            });\n+            robot.waitForIdle();\n+            srcPoint.translate(2 * d.width \/ 3, 3 * d.height \/ 4);\n+\n+            final Point dstPoint = new Point(srcPoint);\n+            dstPoint.translate(4 * d.width \/ 15, 0);\n+\n+\n+            robot.mouseMove(srcPoint.x, srcPoint.y);\n+            robot.waitForIdle();\n+\n+            robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+            robot.waitForIdle();\n+\n+            while (!srcPoint.equals(dstPoint)) {\n+                srcPoint.translate(sign(dstPoint.x - srcPoint.x), 0);\n+                robot.mouseMove(srcPoint.x, srcPoint.y);\n+            }\n+            robot.waitForIdle();\n+\n+            robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+            robot.waitForIdle();\n+\n+            if (failed) {\n+                throw new RuntimeException(\"Popup was shown, Test Failed.\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static int sign(int n) {\n+        return n < 0 ? -1 : n == 0 ? 0 : 1;\n+    }\n+\n+    static void createAndShowGUI() {\n+        frame = new JFrame(\"MouseDragPopupTest\");\n+        panel = new JPanel();\n+        JPanel innerPanel = new JPanel();\n+        JPopupMenu menu = new JPopupMenu();\n+\n+        menu.addPopupMenuListener(new PopupMenuListener() {\n+            @Override\n+            public void popupMenuWillBecomeVisible(PopupMenuEvent e) {\n+                failed = true;\n+            }\n+\n+            @Override\n+            public void popupMenuWillBecomeInvisible(PopupMenuEvent e) {}\n+\n+            @Override\n+            public void popupMenuCanceled(PopupMenuEvent e) {}\n+        });\n+\n+        menu.add(\"This should not appear\");\n+        innerPanel.setComponentPopupMenu(menu);\n+\n+        panel.add(new JLabel(\"Right click and drag from here\"));\n+        panel.add(innerPanel);\n+        panel.add(new JLabel(\"to here\"));\n+\n+        frame.add(panel);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/MouseDragPopupTest.java","additions":135,"deletions":0,"binary":false,"changes":135,"status":"added"}]}