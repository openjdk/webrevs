{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,3 +104,6 @@\n-    protected void addExtraSection(Content content) {\n-        addSummaryAPI(builder.getForRemoval(), HtmlIds.FOR_REMOVAL,\n-                TERMINALLY_DEPRECATED_KEY, \"doclet.Element\", content);\n+    protected List<Content> getIndexLinks() {\n+        var list = super.getIndexLinks();\n+        if (!builder.getForRemoval().isEmpty()) {\n+            list.addFirst(getIndexLink(HtmlIds.FOR_REMOVAL, \"doclet.Terminally_Deprecated\"));\n+        }\n+        return list;\n@@ -110,4 +113,5 @@\n-    protected void addExtraIndexLink(Content target) {\n-        if (!builder.getForRemoval().isEmpty()) {\n-            addIndexLink(HtmlIds.FOR_REMOVAL, \"doclet.Terminally_Deprecated\", target);\n-        }\n+    protected void addSummaries(Content content) {\n+        \/\/ Add terminally deprecated APIs before other deprecated APIs\n+        addSummaryAPI(builder.getForRemoval(), HtmlIds.FOR_REMOVAL,\n+                TERMINALLY_DEPRECATED_KEY, \"doclet.Element\", content);\n+        super.addSummaries(content);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DeprecatedListWriter.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -82,0 +82,1 @@\n+import com.sun.source.doctree.UnknownBlockTagTree;\n@@ -2496,0 +2497,18 @@\n+            \/\/ Preview note tag may be used to provide an alternative preview note.\n+            String previewNoteTag = configuration.getOptions().previewNoteTag();\n+            if (previewNoteTag != null) {\n+                List<? extends UnknownBlockTagTree> tags = utils.getBlockTags(forWhat,\n+                        t -> t.getTagName().equals(previewNoteTag), UnknownBlockTagTree.class);\n+                if (tags != null && !tags.isEmpty()) {\n+                    if (tags.size() > 1) {\n+                        messages.warning(utils.getCommentHelper(forWhat).getDocTreePath(tags.get(1)),\n+                                \"doclet.PreviewMultipleNotes\", utils.getSimpleName(forWhat));\n+                    }\n+                    var previewDiv = HtmlTree.DIV(HtmlStyles.previewBlock);\n+                    previewDiv.setId(htmlIds.forPreviewSection(forWhat));\n+                    previewDiv.add(HtmlTree.DIV(HtmlStyles.previewComment,\n+                            commentTagsToContent(forWhat, tags.getFirst().getContent(), false)));\n+                    target.add(previewDiv);\n+                    return;\n+                }\n+            }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import com.sun.source.doctree.UnknownBlockTagTree;\n@@ -89,3 +90,9 @@\n-                String jepUrl = resources.getText(\"doclet.Preview_JEP_URL\", String.valueOf(jep.number()));\n-                Content label = new ContentBuilder(Text.of(jep.number() + \": \"))\n-                        .add(HtmlTree.A(jepUrl, Text.of(jep.title() + \" (\" + jep.status() + \")\")));\n+                Content label;\n+                if (jep.number() != 0) {\n+                    String jepUrl = resources.getText(\"doclet.Preview_JEP_URL\", String.valueOf(jep.number()));\n+                    label = new ContentBuilder(Text.of(jep.number() + \": \"))\n+                            .add(HtmlTree.A(jepUrl, Text.of(jep.title() + \" (\" + jep.status() + \")\")));\n+                } else {\n+                    \/\/ Pseudo-JEP created from javadoc tag - use description as label\n+                    label = Text.of(jep.title());\n+                }\n@@ -101,1 +108,2 @@\n-    protected void addExtraSection(Content content) {\n+    protected List<Content> getIndexLinks() {\n+        var list = super.getIndexLinks();\n@@ -104,2 +112,1 @@\n-            addSummaryAPI(notes, HtmlId.of(\"preview-api-notes\"),\n-                    \"doclet.Preview_Notes_Elements\", \"doclet.Element\", content);\n+            list.add(getIndexLink(HtmlId.of(\"preview-api-notes\"), \"doclet.Preview_Notes\"));\n@@ -107,0 +114,1 @@\n+        return list;\n@@ -110,3 +118,7 @@\n-    protected void addExtraIndexLink(Content target) {\n-        if (!builder.getElementNotes().isEmpty()) {\n-            addIndexLink(HtmlId.of(\"preview-api-notes\"), \"doclet.Preview_Notes\", target);\n+    protected void addSummaries(Content content) {\n+        var notes = builder.getElementNotes();\n+        super.addSummaries(content);\n+        \/\/ Add permanent APIs with preview notes below preview API tables\n+        if (!notes.isEmpty()) {\n+            addSummaryAPI(notes, HtmlId.of(\"preview-api-notes\"),\n+                    \"doclet.Preview_Notes\", \"doclet.Element\", content);\n@@ -132,1 +144,1 @@\n-            table.addTab(Text.EMPTY, element -> jep == builder.getJEP(element));\n+            table.addTab(Text.EMPTY, element -> jep.equals(builder.getJEP(element)));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PreviewListWriter.java","additions":23,"deletions":11,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -29,0 +31,1 @@\n+import java.util.function.Function;\n@@ -149,8 +152,1 @@\n-            content.add(getContentsList());\n-        }\n-        addExtraSection(content);\n-        for (SummaryElementKind kind : SummaryElementKind.values()) {\n-            if (builder.hasDocumentation(kind)) {\n-                addSummaryAPI(builder.getSet(kind), HtmlIds.forSummaryKind(kind),\n-                            getHeadingKey(kind), getHeaderKey(kind), content);\n-            }\n+            content.add(HtmlTree.UL(HtmlStyles.contentsList, getIndexLinks(), Function.identity()));\n@@ -158,0 +154,1 @@\n+        addSummaries(content);\n@@ -180,1 +177,1 @@\n-     * Add the index link.\n+     * Returns a list item containing a link for the table of contents.\n@@ -184,1 +181,1 @@\n-     * @param content the content to which the index link will be added\n+     * @return a list item containing an index link\n@@ -186,1 +183,1 @@\n-    protected void addIndexLink(HtmlId id, String headingKey, Content content) {\n+    protected Content getIndexLink(HtmlId id, String headingKey) {\n@@ -188,1 +185,1 @@\n-        var li = HtmlTree.LI(links.createLink(id,\n+        return HtmlTree.LI(links.createLink(id,\n@@ -190,1 +187,0 @@\n-        content.add(li);\n@@ -201,3 +197,1 @@\n-     * Get the contents list.\n-     *\n-     * @return the contents list\n+     * {@return a list of list items containing the links for the table of contents}\n@@ -205,3 +199,2 @@\n-    public Content getContentsList() {\n-        var ul= HtmlTree.UL(HtmlStyles.contentsList);\n-        addExtraIndexLink(ul);\n+    protected List<Content> getIndexLinks() {\n+        var list = new ArrayList<Content>();\n@@ -210,1 +203,1 @@\n-                addIndexLink(HtmlIds.forSummaryKind(kind), getHeadingKey(kind), ul);\n+                list.add(getIndexLink(HtmlIds.forSummaryKind(kind), getHeadingKey(kind)));\n@@ -213,1 +206,1 @@\n-        return ul;\n+        return list;\n@@ -228,0 +221,14 @@\n+    \/**\n+     * Add all API summary tables to the main content of the page.\n+     *\n+     * @param content the content to add the API summary tables to\n+     *\/\n+    protected void addSummaries(Content content) {\n+        for (SummaryElementKind kind : SummaryElementKind.values()) {\n+            if (builder.hasDocumentation(kind)) {\n+                addSummaryAPI(builder.getSet(kind), HtmlIds.forSummaryKind(kind),\n+                        getHeadingKey(kind), getHeaderKey(kind), content);\n+            }\n+        }\n+    }\n+\n@@ -240,1 +247,1 @@\n-        if (apiList.size() > 0) {\n+        if (!apiList.isEmpty()) {\n@@ -322,16 +329,0 @@\n-    \/**\n-     * Add an extra optional section to the content.\n-     *\n-     * @param target the content to which the section should be added\n-     *\/\n-    protected void addExtraSection(Content target) {\n-    }\n-\n-    \/**\n-     * Add an extra optional index link.\n-     *\n-     * @param target the content to which the link should be added\n-     *\/\n-    protected void addExtraIndexLink(Content target) {\n-    }\n-\n@@ -348,1 +339,1 @@\n-     * This methods does not add any content by returning {@code null}.\n+     * Return {@code null} for no extra content.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SummaryListWriter.java","additions":31,"deletions":40,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -139,2 +139,1 @@\n-doclet.Preview_Notes=Preview API Notes\n-doclet.Preview_Notes_Elements=Elements containing Preview Notes\n+doclet.Preview_Notes=Permanent APIs affected by Preview Features\n@@ -465,0 +464,1 @@\n+doclet.PreviewMultipleNotes=Multiple preview notes in {0}.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -242,2 +242,3 @@\n-     * If set, the JavaDoc inline tag with the given name is considered\n-     * a preview note and added to the preview API page.\n+     * If set, the JavaDoc tag with the given name can be used to add\n+     * preview-related notes to permanent APIs or override the default\n+     * preview note for preview APIs.\n@@ -247,0 +248,7 @@\n+    \/**\n+     * Argument for command-line option {@code --preview-feature-tag}.\n+     * If set, the JavaDoc inline tag with the given name is used to\n+     * add mark an API element as preview feature in non-JDK contexts.\n+     *\/\n+    private String previewFeatureTag = null;\n+\n@@ -568,0 +576,8 @@\n+                new Hidden(resources, \"--preview-feature-tag\", 1) {\n+                    @Override\n+                    public boolean process(String option, List<String> args) {\n+                        previewFeatureTag = args.getFirst();\n+                        return true;\n+                    }\n+                },\n+\n@@ -961,1 +977,1 @@\n-     * Name of inline tag for preview notes.\n+     * Name of inline tag for preview notes on permanent APIs.\n@@ -965,0 +981,6 @@\n+    \/**\n+     * Argument for command-line option {@code --preview-feature-tag}.\n+     * Name of inline tag for marking APIs as preview feature.\n+     *\/\n+    public String previewFeatureTag() { return previewFeatureTag; }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseOptions.java","additions":26,"deletions":4,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import com.sun.source.doctree.UnknownBlockTagTree;\n@@ -54,0 +55,1 @@\n+    public final String previewFeatureTag;\n@@ -61,1 +63,1 @@\n-            return number - o.number;\n+            return number == o.number ? title.compareTo(o.title) : number - o.number;\n@@ -73,0 +75,1 @@\n+        this.previewFeatureTag = configuration.getOptions().previewFeatureTag();\n@@ -75,1 +78,1 @@\n-        if (!jeps.isEmpty()) {\n+        if (!jeps.isEmpty() || previewFeatureTag != null) {\n@@ -117,6 +120,12 @@\n-            String feature = Objects.requireNonNull(utils.getPreviewFeature(element),\n-                    \"Preview feature not specified\").toString();\n-            \/\/ Preview features without JEP are not included in the list.\n-            JEP jep = jeps.get(feature);\n-            if (jep != null) {\n-                elementJeps.put(element, jep);\n+            if (previewFeatureTag != null\n+                    && utils.hasBlockTag(element, DocTree.Kind.UNKNOWN_BLOCK_TAG, previewFeatureTag)) {\n+                var desc = utils.getBlockTags(element, t -> t.getTagName().equals(previewFeatureTag),\n+                            UnknownBlockTagTree.class)\n+                    .stream()\n+                    .map(t -> t.getContent().toString().trim())\n+                    .findFirst();\n+                \/\/ Create pseudo-JEP for preview tag\n+                desc.ifPresent(s -> {\n+                    var jep = jeps.computeIfAbsent(s, s2 -> new JEP(0, s2, \"\"));\n+                    elementJeps.put(element, jep);\n+                });\n@@ -124,0 +133,9 @@\n+            } else {\n+                String feature = Objects.requireNonNull(utils.getPreviewFeature(element),\n+                        \"Preview feature not specified\").toString();\n+                \/\/ Preview features without JEP are not included in the list.\n+                JEP jep = jeps.get(feature);\n+                if (jep != null) {\n+                    elementJeps.put(element, jep);\n+                    return true;\n+                }\n@@ -125,3 +143,2 @@\n-        }\n-        \/\/ If preview tag is defined map elements to preview tags\n-        if (previewNoteTag != null) {\n+        } else if (previewNoteTag != null) {\n+            \/\/ If preview tag is defined map elements to preview tags\n@@ -140,1 +157,1 @@\n-                    \/\/ Don't return true as this is not actual preview API.\n+                    return false; \/\/ Not part of preview API.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/PreviewAPIListBuilder.java","additions":30,"deletions":13,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2681,0 +2681,4 @@\n+        String previewFeatureTag = configuration.getOptions().previewFeatureTag();\n+        if (previewFeatureTag != null && hasBlockTag(el, UNKNOWN_BLOCK_TAG, previewFeatureTag)) {\n+            return true;\n+        }\n@@ -2757,0 +2761,1 @@\n+            String previewFeatureTag = configuration.getOptions().previewFeatureTag();\n@@ -2764,1 +2769,3 @@\n-                       || !previewAPIs.declaredUsingPreviewFeature.isEmpty())\n+                       || !previewAPIs.declaredUsingPreviewFeature.isEmpty()\n+                       || (   previewFeatureTag != null\n+                           && hasBlockTag(el, Kind.UNKNOWN_BLOCK_TAG, previewFeatureTag)))\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -338,2 +338,2 @@\n-                    <li id=\"contents-preview-api-notes\"><a href=\"#preview-api-notes\">Preview API Notes<\/a><\/li>\n-                    <li id=\"contents-interface\"><a href=\"#interface\">Interfaces<\/a><\/li>\"\"\",\n+                    <li id=\"contents-interface\"><a href=\"#interface\">Interfaces<\/a><\/li>\n+                    <li id=\"contents-preview-api-notes\"><a href=\"#preview-api-notes\">Permanent APIs affected by Preview Features<\/a><\/li>\"\"\",\n@@ -341,1 +341,1 @@\n-                    <div class=\"caption\"><span>Elements containing Preview Notes<\/span><\/div>\"\"\",\n+                    <div class=\"caption\"><span>Permanent APIs affected by Preview Features<\/span><\/div>\"\"\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/TestPreview.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,117 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug      8356975\n+ * @summary  Provide alternative way to generate preview API docs\n+ * @library  \/tools\/lib ..\/..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    toolbox.ToolBox javadoc.tester.* taglet.PreviewFeature taglet.PreviewNote\n+ * @run main TestPreviewTag\n+ *\/\n+\n+import java.nio.file.Path;\n+\n+import javadoc.tester.JavadocTester;\n+\n+public class TestPreviewTag  extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        var tester = new TestPreviewTag();\n+        tester.runTests();\n+    }\n+\n+    @Test\n+    public void testPreviewTag(Path base) throws Exception {\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"-tagletpath\", System.getProperty(\"test.classes\"),\n+                \"-taglet\", \"taglet.PreviewFeature\",\n+                \"-taglet\", \"taglet.PreviewNote\",\n+                \"--preview-note-tag\", \"previewNote\",\n+                \"--preview-feature-tag\", \"previewFeature\",\n+                \"-sourcepath\", testSrc,\n+                \"api\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(Output.OUT, true,\n+                \"\"\"\n+                        warning: Multiple preview notes in otherPreviewMethod.\n+                            * @previewNote    Extra note tag triggers a warning\"\"\");\n+\n+        checkOrder(\"api\/package-summary.html\",\n+                \"\"\"\n+                        PreviewApi<\/a><sup class=\"preview-mark\"><a href=\"PreviewApi.html#preview-api.PreviewApi\">PREVIEW<\/a>\"\"\",\n+                \"\"\"\n+                        <div class=\"block\"><span class=\"preview-label\">Preview.<\/span><\/div>\n+                        <div class=\"block\">This is a preview API marked by javadoc tags.<\/div>\"\"\");\n+\n+        checkOrder(\"api\/OtherApi.html\",\n+                \"\"\"\n+                        <div class=\"preview-block\" id=\"preview-previewMethod()\">\n+                        <div class=\"preview-comment\">Alternative preview note. <a href=\"PreviewApi.html\" titl\\\n+                        e=\"class in api\"><code>PreviewApi<\/code><\/a><sup class=\"preview-mark\"><a href=\"Previe\\\n+                        wApi.html#preview-api.PreviewApi\">PREVIEW<\/a><\/sup> is a preview API.<\/div>\"\"\",\n+                \"\"\"\n+                        <div class=\"preview-block\" id=\"preview-otherPreviewMethod()\">\n+                        <div class=\"preview-comment\">Alternative preview note for second preview feature.<\/div>\"\"\");\n+\n+        checkOrder(\"api\/PreviewApi.html\",\n+                \"\"\"\n+                        <div class=\"preview-block\" id=\"preview-api.PreviewApi\">\n+                        <div class=\"preview-comment\">Alternative preview note. <a href=\"PreviewApi.html\" titl\\\n+                        e=\"class in api\"><code>PreviewApi<\/code><\/a><sup class=\"preview-mark\"><a href=\"#previ\\\n+                        ew-api.PreviewApi\">PREVIEW<\/a><\/sup> is a preview API.<\/div>\"\"\");\n+\n+        checkOrder(\"preview-list.html\",\n+                \"\"\"\n+                        <li><label for=\"feature-1\"><input type=\"checkbox\" id=\"feature-1\" disabled checked onc\\\n+                        lick=\"toggleGlobal(this, '1', 3)\"><span>First preview feature<\/span><\/label><\/li>\n+                        <li><label for=\"feature-2\"><input type=\"checkbox\" id=\"feature-2\" disabled checked onc\\\n+                        lick=\"toggleGlobal(this, '2', 3)\"><span>Second preview feature<\/span><\/label><\/li>\n+                        <li><label for=\"feature-all\"><input type=\"checkbox\" id=\"feature-all\" disabled checked\\\n+                         onclick=\"toggleGlobal(this, 'all', 3)\"><span>Toggle all<\/span><\/label><\/li>\"\"\",\n+                \"\"\"\n+                        <div class=\"col-summary-item-name even-row-color class class-tab1\"><a href=\"api\/Previ\\\n+                        ewApi.html\" title=\"class in api\">api.PreviewApi<\/a><sup class=\"preview-mark\"><a href=\\\n+                        \"api\/PreviewApi.html#preview-api.PreviewApi\">PREVIEW<\/a><\/sup><\/div>\n+                        <div class=\"col-second even-row-color class class-tab1\">First preview feature<\/div>\n+                        <div class=\"col-last even-row-color class class-tab1\">\n+                        <div class=\"block\">This is a preview API marked by javadoc tags.<\/div>\"\"\",\n+                \"\"\"\n+                        <div class=\"col-summary-item-name even-row-color method method-tab2\"><a href=\"api\/Oth\\\n+                        erApi.html#otherPreviewMethod()\">api.OtherApi.otherPreviewMethod()<\/a><sup class=\"pre\\\n+                        view-mark\"><a href=\"api\/OtherApi.html#preview-otherPreviewMethod()\">PREVIEW<\/a><\/sup><\/div>\n+                        <div class=\"col-second even-row-color method method-tab2\">Second preview feature<\/div>\n+                        <div class=\"col-last even-row-color method method-tab2\">\n+                        <div class=\"block\">This is another preview method.<\/div>\"\"\",\n+                \"\"\"\n+                        <div class=\"col-summary-item-name odd-row-color method method-tab1\"><a href=\"api\/Othe\\\n+                        rApi.html#previewMethod()\">api.OtherApi.previewMethod()<\/a><sup class=\"preview-mark\">\\\n+                        <a href=\"api\/OtherApi.html#preview-previewMethod()\">PREVIEW<\/a><\/sup><\/div>\n+                        <div class=\"col-second odd-row-color method method-tab1\">First preview feature<\/div>\n+                        <div class=\"col-last odd-row-color method method-tab1\">\n+                        <div class=\"block\">This is a preview method.<\/div>\"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreviewTag\/TestPreviewTag.java","additions":117,"deletions":0,"binary":false,"changes":117,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package api;\n+\n+\/**\n+ * Non-preview class with a preview members.\n+ *\/\n+public class OtherApi {\n+\n+   \/**\n+    * This is a preview method.\n+    *\n+    * @previewFeature  First preview feature\n+    * @previewNote     Alternative preview note. {@link PreviewApi} is a preview API.\n+    *\/\n+    public void previewMethod() {}\n+\n+   \/**\n+    * This is another preview method.\n+    *\n+    * @previewFeature Second preview feature\n+    * @previewNote    Alternative preview note for second preview feature.\n+    * @previewNote    Extra note tag triggers a warning\n+    *\/\n+    public void otherPreviewMethod() {}\n+\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreviewTag\/api\/OtherApi.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package api;\n+\n+\/**\n+ * This is a preview API marked by javadoc tags.\n+ *\n+ * @previewFeature First preview feature\n+ * @previewNote    Alternative preview note. {@link PreviewApi} is a preview API.\n+ *\/\n+public class PreviewApi {\n+    private PreviewApi() {}\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreviewTag\/api\/PreviewApi.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/* Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package taglet;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import javax.lang.model.element.Element;\n+\n+import com.sun.source.doctree.DocTree;\n+import jdk.javadoc.doclet.Doclet;\n+import jdk.javadoc.doclet.DocletEnvironment;\n+import jdk.javadoc.doclet.Taglet;\n+\n+\/**\n+ * Javadoc block tag to mark elements as preview feature.\n+ * The tag has no output, tag contents are used to describe\n+ * the preview feature in the Preview API page.\n+ *\/\n+public class PreviewFeature implements Taglet {\n+\n+    static final String TAG_NAME = \"previewFeature\";\n+\n+    @Override\n+    public void init(DocletEnvironment env, Doclet doclet) {\n+    }\n+\n+    @Override\n+    public Set<Location> getAllowedLocations() {\n+        return EnumSet.allOf(Taglet.Location.class);\n+    }\n+\n+    @Override\n+    public boolean isInlineTag() {\n+        return false;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return TAG_NAME;\n+    }\n+\n+    @Override\n+    public String toString(List<? extends DocTree> tags, Element elem) {\n+        return \"\";\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreviewTag\/taglet\/PreviewFeature.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package taglet;\n+\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+import javax.lang.model.element.Element;\n+\n+import com.sun.source.doctree.DocTree;\n+import jdk.javadoc.doclet.Doclet;\n+import jdk.javadoc.doclet.DocletEnvironment;\n+import jdk.javadoc.doclet.Taglet;\n+\n+\/**\n+ * A Javadoc block tag that provides an alternative preview note.\n+ * The tag has no direct output, tag contents are used as\n+ * preview note by javadoc.\n+ *\/\n+public class PreviewNote implements Taglet {\n+\n+    static final String TAG_NAME = \"previewNote\";\n+\n+    @Override\n+    public void init(DocletEnvironment env, Doclet doclet) {\n+    }\n+\n+    @Override\n+    public Set<Location> getAllowedLocations() {\n+        return EnumSet.allOf(Taglet.Location.class);\n+    }\n+\n+    @Override\n+    public boolean isInlineTag() {\n+        return false;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return TAG_NAME;\n+    }\n+\n+    @Override\n+    public String toString(List<? extends DocTree> tags, Element elem) {\n+        return \"\";\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreviewTag\/taglet\/PreviewNote.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"}]}