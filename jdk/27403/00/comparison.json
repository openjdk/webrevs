{"files":[{"patch":"@@ -1693,0 +1693,17 @@\n+bool JvmtiExport::has_frame_pops(JavaThread* thread) {\n+  if (!can_post_frame_pop()) {\n+    return false;\n+  }\n+  JvmtiThreadState *state = get_jvmti_thread_state(thread);\n+  if (state == nullptr) {\n+    return false;\n+  }\n+  JvmtiEnvThreadStateIterator it(state);\n+  for (JvmtiEnvThreadState* ets = it.first(); ets != nullptr; ets = it.next(ets)) {\n+    if (ets->has_frame_pops()) {\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -376,0 +376,1 @@\n+  static bool has_frame_pops(JavaThread* thread) NOT_JVMTI(return false);\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1622,1 +1622,1 @@\n-  if (thread->is_interp_only_mode()) {\n+  if (JvmtiExport::can_post_frame_pop() || thread->is_interp_only_mode()) {\n@@ -1630,1 +1630,1 @@\n-  if (JvmtiExport::can_post_frame_pop()) {\n+  if (JvmtiExport::has_frame_pops(thread)) {\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}