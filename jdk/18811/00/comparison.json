{"files":[{"patch":"@@ -2977,1 +2977,1 @@\n-                    tree.expr.type,\n+                    types.erasure(tree.expr.type),\n@@ -2980,1 +2980,1 @@\n-                    .VarDef(dollar_s, instanceOfExpr).setType(dollar_s.type);\n+                    .VarDef(dollar_s, instanceOfExpr);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8304487\n+ * @bug 8304487 8327683 8330387\n@@ -45,0 +45,1 @@\n+        assertEquals(true,  wideningReferenceConversionUnboxing3());\n@@ -117,0 +118,5 @@\n+    public static boolean wideningReferenceConversionUnboxing3() {\n+        R_generic<Integer> i = new R_generic<Integer>(0x1000000);\n+        return i instanceof R_generic(float _);\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfPatternOpWithRecordPatterns.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8304487 8325257\n+ * @bug 8304487 8325257 8327683 8330387\n@@ -47,0 +47,1 @@\n+        assertEquals(true,  wideningReferenceConversionUnboxing3(0x1000000));\n@@ -124,0 +125,4 @@\n+    public static <T extends Integer> boolean wideningReferenceConversionUnboxing3(T i) {\n+        return i instanceof float ff;\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfPatternOpWithTopLevelPatterns.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8304487 8325257\n+ * @bug 8304487 8325257 8327683 8330387\n@@ -47,0 +47,1 @@\n+        assertEquals(true,  wideningReferenceConversionUnboxing3(0x1000000));\n@@ -124,0 +125,4 @@\n+    public static <T extends Integer> boolean wideningReferenceConversionUnboxing3(T i) {\n+        return i instanceof float;\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitiveInstanceOfTypeComparisonOp.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -264,0 +264,4 @@\n+\n+    public static <T extends Integer> boolean wideningReferenceConversionUnboxingAndNarrowingPrimitive(T i) {\n+        return i instanceof byte b;  \/\/ not allowed as a conversion\n+    }\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchErrors.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+PrimitivePatternsSwitchErrors.java:266:16: compiler.err.prob.found.req: (compiler.misc.inconvertible.types: T, byte)\n@@ -46,1 +47,1 @@\n-43 errors\n\\ No newline at end of file\n+44 errors\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchErrors.out","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}