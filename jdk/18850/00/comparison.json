{"files":[{"patch":"@@ -629,1 +629,0 @@\n-  void set_bytes_written(julong bytes_written) { _bytes_written = bytes_written; }\n@@ -635,1 +634,0 @@\n-  void set_compressor(AbstractCompressor* p)   { _compressor = p; }\n@@ -637,1 +635,0 @@\n-  int get_fd() const                           { return _writer->get_fd(); }\n@@ -640,0 +637,7 @@\n+\n+private:\n+  \/\/ internals for DumpMerger\n+  friend class DumpMerger;\n+  void set_bytes_written(julong bytes_written) { _bytes_written = bytes_written; }\n+  int get_fd() const                           { return _writer->get_fd(); }\n+  void set_compressor(AbstractCompressor* p)   { _compressor = p; }\n@@ -2129,3 +2133,5 @@\n-  char read_buf[4096];\n-  while ((cnt = segment_fs.read(read_buf, 1, 4096)) != 0) {\n-    _writer->write_raw(read_buf, cnt);\n+\n+  \/\/ Use _writer buffer for reading.\n+  while ((cnt = segment_fs.read(_writer->buffer(), 1, _writer->buffer_size())) != 0) {\n+    _writer->set_position(cnt);\n+    _writer->flush();\n@@ -2135,1 +2141,0 @@\n-  _writer->flush();\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-char const* FileWriter::write_buf(char* buf, ssize_t size) {\n+char const* FileWriter::write_buf(char* buf, size_t size) {\n@@ -56,1 +56,1 @@\n-  if (!os::write(_fd, buf, (size_t)size)) {\n+  if (!os::write(_fd, buf, size)) {\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-  virtual char const* write_buf(char* buf, ssize_t size) = 0;\n+  virtual char const* write_buf(char* buf, size_t size) = 0;\n@@ -77,1 +77,1 @@\n-  virtual char const* write_buf(char* buf, ssize_t size);\n+  virtual char const* write_buf(char* buf, size_t size);\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}