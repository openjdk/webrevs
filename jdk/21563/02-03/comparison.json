{"files":[{"patch":"@@ -51,1 +51,1 @@\n-        BigInteger p = new BigInteger(1, dhGroup.getPrimeBytes());\n+        BigInteger p = dhGroup.getPrime();\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/DHGenSharedSecret.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-            dhParameterSpec = new DHParameterSpec(dhGroup.getModulus(),\n+            dhParameterSpec = new DHParameterSpec(dhGroup.getPrime(),\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/DHKeyAgreement2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-        dhParamSpec = new DHParameterSpec(dhGroup.getModulus(), dhGroup.getBase());\n+        dhParamSpec = new DHParameterSpec(dhGroup.getPrime(), dhGroup.getBase());\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/DHKeyAgreement3.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        dhParamSpec = new DHParameterSpec(dhGroup.getModulus(), dhGroup.getBase());\n+        dhParamSpec = new DHParameterSpec(dhGroup.getPrime(), dhGroup.getBase());\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/DHKeyFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        BigInteger p = new BigInteger(1, dhGroup.getPrimeBytes());\n+        BigInteger p = dhGroup.getPrime();\n@@ -68,1 +68,1 @@\n-        System.out.println(dhGroup.getPrimeBytes().length*8 + \"\\t\\t\" + l);\n+        System.out.println(dhGroup.getPrime().bitLength() + \"\\t\\t\" + l);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyAgreement\/DHKeyGenSpeed.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-        kpg.initialize(new DHParameterSpec(dhGroup.getModulus(), dhGroup.getBase()));\n+        kpg.initialize(new DHParameterSpec(dhGroup.getPrime(), dhGroup.getBase()));\n","filename":"test\/jdk\/java\/security\/KeyRep\/Serial.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-            DHPrivateKeySpec privSpecA = new DHPrivateKeySpec(xa, dhGroup.getModulus(),\n+            DHPrivateKeySpec privSpecA = new DHPrivateKeySpec(xa, dhGroup.getPrime(),\n@@ -94,1 +94,1 @@\n-            DHPublicKeySpec pubSpecA = new DHPublicKeySpec(ya, dhGroup.getModulus(),\n+            DHPublicKeySpec pubSpecA = new DHPublicKeySpec(ya, dhGroup.getPrime(),\n@@ -99,1 +99,1 @@\n-            DHPrivateKeySpec privSpecB = new DHPrivateKeySpec(xb, dhGroup.getModulus(),\n+            DHPrivateKeySpec privSpecB = new DHPrivateKeySpec(xb, dhGroup.getPrime(),\n@@ -101,1 +101,1 @@\n-            DHPublicKeySpec pubSpecB = new DHPublicKeySpec(yb, dhGroup.getModulus(),\n+            DHPublicKeySpec pubSpecB = new DHPublicKeySpec(yb, dhGroup.getPrime(),\n","filename":"test\/jdk\/sun\/security\/pkcs11\/KeyAgreement\/TestInterop.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,39 +33,55 @@\n-    ffdhe2048 (new byte[]{\n-            (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,\n-            (byte) 0xAD, (byte) 0xF8, (byte) 0x54, (byte) 0x58, (byte) 0xA2, (byte) 0xBB, (byte) 0x4A, (byte) 0x9A,\n-            (byte) 0xAF, (byte) 0xDC, (byte) 0x56, (byte) 0x20, (byte) 0x27, (byte) 0x3D, (byte) 0x3C, (byte) 0xF1,\n-            (byte) 0xD8, (byte) 0xB9, (byte) 0xC5, (byte) 0x83, (byte) 0xCE, (byte) 0x2D, (byte) 0x36, (byte) 0x95,\n-            (byte) 0xA9, (byte) 0xE1, (byte) 0x36, (byte) 0x41, (byte) 0x14, (byte) 0x64, (byte) 0x33, (byte) 0xFB,\n-            (byte) 0xCC, (byte) 0x93, (byte) 0x9D, (byte) 0xCE, (byte) 0x24, (byte) 0x9B, (byte) 0x3E, (byte) 0xF9,\n-            (byte) 0x7D, (byte) 0x2F, (byte) 0xE3, (byte) 0x63, (byte) 0x63, (byte) 0x0C, (byte) 0x75, (byte) 0xD8,\n-            (byte) 0xF6, (byte) 0x81, (byte) 0xB2, (byte) 0x02, (byte) 0xAE, (byte) 0xC4, (byte) 0x61, (byte) 0x7A,\n-            (byte) 0xD3, (byte) 0xDF, (byte) 0x1E, (byte) 0xD5, (byte) 0xD5, (byte) 0xFD, (byte) 0x65, (byte) 0x61,\n-            (byte) 0x24, (byte) 0x33, (byte) 0xF5, (byte) 0x1F, (byte) 0x5F, (byte) 0x06, (byte) 0x6E, (byte) 0xD0,\n-            (byte) 0x85, (byte) 0x63, (byte) 0x65, (byte) 0x55, (byte) 0x3D, (byte) 0xED, (byte) 0x1A, (byte) 0xF3,\n-            (byte) 0xB5, (byte) 0x57, (byte) 0x13, (byte) 0x5E, (byte) 0x7F, (byte) 0x57, (byte) 0xC9, (byte) 0x35,\n-            (byte) 0x98, (byte) 0x4F, (byte) 0x0C, (byte) 0x70, (byte) 0xE0, (byte) 0xE6, (byte) 0x8B, (byte) 0x77,\n-            (byte) 0xE2, (byte) 0xA6, (byte) 0x89, (byte) 0xDA, (byte) 0xF3, (byte) 0xEF, (byte) 0xE8, (byte) 0x72,\n-            (byte) 0x1D, (byte) 0xF1, (byte) 0x58, (byte) 0xA1, (byte) 0x36, (byte) 0xAD, (byte) 0xE7, (byte) 0x35,\n-            (byte) 0x30, (byte) 0xAC, (byte) 0xCA, (byte) 0x4F, (byte) 0x48, (byte) 0x3A, (byte) 0x79, (byte) 0x7A,\n-            (byte) 0xBC, (byte) 0x0A, (byte) 0xB1, (byte) 0x82, (byte) 0xB3, (byte) 0x24, (byte) 0xFB, (byte) 0x61,\n-            (byte) 0xD1, (byte) 0x08, (byte) 0xA9, (byte) 0x4B, (byte) 0xB2, (byte) 0xC8, (byte) 0xE3, (byte) 0xFB,\n-            (byte) 0xB9, (byte) 0x6A, (byte) 0xDA, (byte) 0xB7, (byte) 0x60, (byte) 0xD7, (byte) 0xF4, (byte) 0x68,\n-            (byte) 0x1D, (byte) 0x4F, (byte) 0x42, (byte) 0xA3, (byte) 0xDE, (byte) 0x39, (byte) 0x4D, (byte) 0xF4,\n-            (byte) 0xAE, (byte) 0x56, (byte) 0xED, (byte) 0xE7, (byte) 0x63, (byte) 0x72, (byte) 0xBB, (byte) 0x19,\n-            (byte) 0x0B, (byte) 0x07, (byte) 0xA7, (byte) 0xC8, (byte) 0xEE, (byte) 0x0A, (byte) 0x6D, (byte) 0x70,\n-            (byte) 0x9E, (byte) 0x02, (byte) 0xFC, (byte) 0xE1, (byte) 0xCD, (byte) 0xF7, (byte) 0xE2, (byte) 0xEC,\n-            (byte) 0xC0, (byte) 0x34, (byte) 0x04, (byte) 0xCD, (byte) 0x28, (byte) 0x34, (byte) 0x2F, (byte) 0x61,\n-            (byte) 0x91, (byte) 0x72, (byte) 0xFE, (byte) 0x9C, (byte) 0xE9, (byte) 0x85, (byte) 0x83, (byte) 0xFF,\n-            (byte) 0x8E, (byte) 0x4F, (byte) 0x12, (byte) 0x32, (byte) 0xEE, (byte) 0xF2, (byte) 0x81, (byte) 0x83,\n-            (byte) 0xC3, (byte) 0xFE, (byte) 0x3B, (byte) 0x1B, (byte) 0x4C, (byte) 0x6F, (byte) 0xAD, (byte) 0x73,\n-            (byte) 0x3B, (byte) 0xB5, (byte) 0xFC, (byte) 0xBC, (byte) 0x2E, (byte) 0xC2, (byte) 0x20, (byte) 0x05,\n-            (byte) 0xC5, (byte) 0x8E, (byte) 0xF1, (byte) 0x83, (byte) 0x7D, (byte) 0x16, (byte) 0x83, (byte) 0xB2,\n-            (byte) 0xC6, (byte) 0xF3, (byte) 0x4A, (byte) 0x26, (byte) 0xC1, (byte) 0xB2, (byte) 0xEF, (byte) 0xFA,\n-            (byte) 0x88, (byte) 0x6B, (byte) 0x42, (byte) 0x38, (byte) 0x61, (byte) 0x28, (byte) 0x5C, (byte) 0x97,\n-            (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF},\n-            1, 2);\n-\n-\n-    public byte[] getPrimeBytes() {\n-        return primeBytes;\n-    }\n+    ffdhe2048(new BigInteger(\"FFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1\" +\n+                    \"D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF9\" +\n+                    \"7D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD6561\" +\n+                    \"2433F51F5F066ED0856365553DED1AF3B557135E7F57C935\" +\n+                    \"984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE735\" +\n+                    \"30ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FB\" +\n+                    \"B96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB19\" +\n+                    \"0B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F61\" +\n+                    \"9172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD73\" +\n+                    \"3BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA\" +\n+                    \"886B423861285C97FFFFFFFFFFFFFFFF\", 16), 2),\n+    \/**\n+     * RFC 7919 - ffdhe3072.\n+     *\/\n+    ffdhe3072(new BigInteger(\"FFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1\" +\n+                    \"D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF9\" +\n+                    \"7D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD6561\" +\n+                    \"2433F51F5F066ED0856365553DED1AF3B557135E7F57C935\" +\n+                    \"984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE735\" +\n+                    \"30ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FB\" +\n+                    \"B96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB19\" +\n+                    \"0B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F61\" +\n+                    \"9172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD73\" +\n+                    \"3BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA\" +\n+                    \"886B4238611FCFDCDE355B3B6519035BBC34F4DEF99C0238\" +\n+                    \"61B46FC9D6E6C9077AD91D2691F7F7EE598CB0FAC186D91C\" +\n+                    \"AEFE130985139270B4130C93BC437944F4FD4452E2D74DD3\" +\n+                    \"64F2E21E71F54BFF5CAE82AB9C9DF69EE86D2BC522363A0D\" +\n+                    \"ABC521979B0DEADA1DBF9A42D5C4484E0ABCD06BFA53DDEF\" +\n+                    \"3C1B20EE3FD59D7C25E41D2B66C62E37FFFFFFFFFFFFFFFF\", 16), 2),\n+    \/**\n+     * RFC 7919 - ffdhe4096.\n+     *\/\n+    ffdhe4096(new BigInteger(\"FFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1\" +\n+                    \"D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF9\" +\n+                    \"7D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD6561\" +\n+                    \"2433F51F5F066ED0856365553DED1AF3B557135E7F57C935\" +\n+                    \"984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE735\" +\n+                    \"30ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FB\" +\n+                    \"B96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB19\" +\n+                    \"0B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F61\" +\n+                    \"9172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD73\" +\n+                    \"3BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA\" +\n+                    \"886B4238611FCFDCDE355B3B6519035BBC34F4DEF99C0238\" +\n+                    \"61B46FC9D6E6C9077AD91D2691F7F7EE598CB0FAC186D91C\" +\n+                    \"AEFE130985139270B4130C93BC437944F4FD4452E2D74DD3\" +\n+                    \"64F2E21E71F54BFF5CAE82AB9C9DF69EE86D2BC522363A0D\" +\n+                    \"ABC521979B0DEADA1DBF9A42D5C4484E0ABCD06BFA53DDEF\" +\n+                    \"3C1B20EE3FD59D7C25E41D2B669E1EF16E6F52C3164DF4FB\" +\n+                    \"7930E9E4E58857B6AC7D5F42D69F6D187763CF1D55034004\" +\n+                    \"87F55BA57E31CC7A7135C886EFB4318AED6A1E012D9E6832\" +\n+                    \"A907600A918130C46DC778F971AD0038092999A333CB8B7A\" +\n+                    \"1A1DB93D7140003C2A4ECEA9F98D0ACC0A8291CDCEC97DCF\" +\n+                    \"8EC9B55A7F88A46B4DB5A851F44182E1C68A007E5E655F6A\" +\n+                    \"FFFFFFFFFFFFFFFF\", 16), 2);\n@@ -73,1 +89,0 @@\n-    private final byte[] primeBytes;\n@@ -75,2 +90,2 @@\n-    public BigInteger getModulus() {\n-        return modulus;\n+    public BigInteger getPrime() {\n+        return prime;\n@@ -79,1 +94,1 @@\n-    private final BigInteger modulus;\n+    private final BigInteger prime;\n@@ -87,3 +102,2 @@\n-    DiffieHellmanGroup(byte[] primeBytes, int signum, int base) {\n-        this.primeBytes = primeBytes;\n-        this.modulus = new BigInteger(signum, primeBytes);\n+    DiffieHellmanGroup(BigInteger prime, int base) {\n+        this.prime = prime;\n","filename":"test\/lib\/jdk\/test\/lib\/security\/DiffieHellmanGroup.java","additions":60,"deletions":46,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -125,0 +125,2 @@\n+            case 3072 -> diffieHellmanGroup = DiffieHellmanGroup.ffdhe3072;\n+            case 4096 -> diffieHellmanGroup = DiffieHellmanGroup.ffdhe4096;\n","filename":"test\/lib\/jdk\/test\/lib\/security\/SecurityUtils.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}