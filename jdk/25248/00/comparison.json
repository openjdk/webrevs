{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @run testng\/othervm --enable-native-access=ALL-UNNAMED StdLibTest\n+ * @run testng\/othervm\/timeout=600 --enable-native-access=ALL-UNNAMED StdLibTest\n@@ -54,1 +54,1 @@\n-    final static Linker abi = Linker.nativeLinker();\n+    static final Linker abi = Linker.nativeLinker();\n@@ -56,1 +56,1 @@\n-    private StdLibHelper stdLibHelper = new StdLibHelper();\n+    private static final StdLibHelper STD_LIB_HELPER = new StdLibHelper();\n@@ -60,1 +60,1 @@\n-        assertEquals(stdLibHelper.strcat(s1, s2), s1 + s2);\n+        assertEquals(STD_LIB_HELPER.strcat(s1, s2), s1 + s2);\n@@ -65,1 +65,1 @@\n-        assertEquals(Math.signum(stdLibHelper.strcmp(s1, s2)), Math.signum(s1.compareTo(s2)));\n+        assertEquals(Math.signum(STD_LIB_HELPER.strcmp(s1, s2)), Math.signum(s1.compareTo(s2)));\n@@ -70,1 +70,1 @@\n-        assertTrue(stdLibHelper.puts(s) >= 0);\n+        assertTrue(STD_LIB_HELPER.puts(s) >= 0);\n@@ -75,1 +75,1 @@\n-        assertEquals(stdLibHelper.strlen(s), s.length());\n+        assertEquals(STD_LIB_HELPER.strlen(s), s.length());\n@@ -80,1 +80,1 @@\n-        StdLibHelper.Tm tm = stdLibHelper.gmtime(instant.getEpochSecond());\n+        StdLibHelper.Tm tm = STD_LIB_HELPER.gmtime(instant.getEpochSecond());\n@@ -100,1 +100,1 @@\n-            int[] sorted = stdLibHelper.qsort(input);\n+            int[] sorted = STD_LIB_HELPER.qsort(input);\n@@ -108,1 +108,1 @@\n-        int val = stdLibHelper.rand();\n+        int val = STD_LIB_HELPER.rand();\n@@ -110,1 +110,1 @@\n-            int newVal = stdLibHelper.rand();\n+            int newVal = STD_LIB_HELPER.rand();\n@@ -134,1 +134,1 @@\n-        int found = stdLibHelper.printf(nativeFormatString, args);\n+        int found = STD_LIB_HELPER.printf(nativeFormatString, args);\n@@ -143,1 +143,1 @@\n-    static class StdLibHelper {\n+    static final class StdLibHelper {\n@@ -145,1 +145,1 @@\n-        final static MethodHandle strcat = abi.downcallHandle(abi.defaultLookup().find(\"strcat\").get(),\n+        static final MethodHandle strcat = abi.downcallHandle(abi.defaultLookup().findOrThrow(\"strcat\"),\n@@ -148,1 +148,1 @@\n-        final static MethodHandle strcmp = abi.downcallHandle(abi.defaultLookup().find(\"strcmp\").get(),\n+        static final MethodHandle strcmp = abi.downcallHandle(abi.defaultLookup().findOrThrow(\"strcmp\"),\n@@ -151,1 +151,1 @@\n-        final static MethodHandle puts = abi.downcallHandle(abi.defaultLookup().find(\"puts\").get(),\n+        static final MethodHandle puts = abi.downcallHandle(abi.defaultLookup().findOrThrow(\"puts\"),\n@@ -154,1 +154,1 @@\n-        final static MethodHandle strlen = abi.downcallHandle(abi.defaultLookup().find(\"strlen\").get(),\n+        static final MethodHandle strlen = abi.downcallHandle(abi.defaultLookup().findOrThrow(\"strlen\"),\n@@ -157,1 +157,1 @@\n-        final static MethodHandle gmtime = abi.downcallHandle(abi.defaultLookup().find(\"gmtime\").get(),\n+        static final MethodHandle gmtime = abi.downcallHandle(abi.defaultLookup().findOrThrow(\"gmtime\"),\n@@ -161,1 +161,1 @@\n-        final static MethodHandle qsort = abi.downcallHandle(abi.defaultLookup().find(\"qsort\").get(),\n+        static final MethodHandle qsort = abi.downcallHandle(abi.defaultLookup().findOrThrow(\"qsort\"),\n@@ -164,1 +164,1 @@\n-        final static FunctionDescriptor qsortComparFunction = FunctionDescriptor.of(C_INT,\n+        static final FunctionDescriptor qsortComparFunction = FunctionDescriptor.of(C_INT,\n@@ -167,1 +167,1 @@\n-        final static MethodHandle qsortCompar;\n+        static final MethodHandle qsortCompar;\n@@ -169,1 +169,1 @@\n-        final static MethodHandle rand = abi.downcallHandle(abi.defaultLookup().find(\"rand\").get(),\n+        static final MethodHandle rand = abi.downcallHandle(abi.defaultLookup().findOrThrow(\"rand\"),\n@@ -172,1 +172,1 @@\n-        final static MethodHandle vprintf = abi.downcallHandle(abi.defaultLookup().find(\"vprintf\").get(),\n+        static final MethodHandle vprintf = abi.downcallHandle(abi.defaultLookup().findOrThrow(\"vprintf\"),\n@@ -175,1 +175,1 @@\n-        final static MemorySegment printfAddr = abi.defaultLookup().find(\"printf\").get();\n+        static final MemorySegment printfAddr = abi.defaultLookup().findOrThrow(\"printf\");\n@@ -177,1 +177,1 @@\n-        final static FunctionDescriptor printfBase = FunctionDescriptor.of(C_INT, C_POINTER);\n+        static final FunctionDescriptor printfBase = FunctionDescriptor.of(C_INT, C_POINTER);\n@@ -228,1 +228,1 @@\n-        static class Tm {\n+        static final class Tm {\n","filename":"test\/jdk\/java\/foreign\/StdLibTest.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,4 +26,4 @@\n- * @run testng\/othervm -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=true -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=false -Xverify:all TestAccessModes\n- * @run testng\/othervm -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=true -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true -Xverify:all TestAccessModes\n- * @run testng\/othervm -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=false -Xverify:all TestAccessModes\n- * @run testng\/othervm -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true -Xverify:all TestAccessModes\n+ * @run testng\/othervm\/timeout=600 -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=true -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=false -Xverify:all TestAccessModes\n+ * @run testng\/othervm\/timeout=600 -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=true -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true -Xverify:all TestAccessModes\n+ * @run testng\/othervm\/timeout=600 -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=false -Xverify:all TestAccessModes\n+ * @run testng\/othervm\/timeout=600 -Djava.lang.invoke.VarHandle.VAR_HANDLE_GUARDS=false -Djava.lang.invoke.VarHandle.VAR_HANDLE_IDENTITY_ADAPT=true -Xverify:all TestAccessModes\n","filename":"test\/jdk\/java\/foreign\/TestAccessModes.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}