{"files":[{"patch":"@@ -275,1 +275,1 @@\n-    private static abstract class BaseThreadFactory implements ThreadFactory {\n+    private abstract static class BaseThreadFactory implements ThreadFactory {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ThreadBuilders.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -427,1 +427,1 @@\n-    static abstract sealed class FormatItemModifier implements FormatConcatItem\n+    abstract static sealed class FormatItemModifier implements FormatConcatItem\n","filename":"src\/java.base\/share\/classes\/java\/util\/FormatItem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1627,1 +1627,1 @@\n-    static abstract class InterruptibleTask<T> extends ForkJoinTask<T>\n+    abstract static class InterruptibleTask<T> extends ForkJoinTask<T>\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinTask.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-    public static abstract sealed class BoundInstruction extends AbstractInstruction {\n+    public abstract static sealed class BoundInstruction extends AbstractInstruction {\n@@ -763,1 +763,1 @@\n-    public static abstract sealed class UnboundInstruction extends AbstractInstruction {\n+    public abstract static sealed class UnboundInstruction extends AbstractInstruction {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractInstruction.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -474,1 +474,1 @@\n-    static abstract sealed class AbstractRefEntry<T extends PoolEntry> extends AbstractPoolEntry {\n+    abstract static sealed class AbstractRefEntry<T extends PoolEntry> extends AbstractPoolEntry {\n@@ -497,1 +497,1 @@\n-    static abstract sealed class AbstractRefsEntry<T extends PoolEntry, U extends PoolEntry>\n+    abstract static sealed class AbstractRefsEntry<T extends PoolEntry, U extends PoolEntry>\n@@ -528,1 +528,1 @@\n-    static abstract sealed class AbstractNamedEntry extends AbstractRefEntry<Utf8EntryImpl> {\n+    abstract static sealed class AbstractNamedEntry extends AbstractRefEntry<Utf8EntryImpl> {\n@@ -700,1 +700,1 @@\n-    public static abstract sealed class AbstractMemberRefEntry\n+    public abstract static sealed class AbstractMemberRefEntry\n@@ -776,1 +776,1 @@\n-    public static abstract sealed class AbstractDynamicConstantPoolEntry extends AbstractPoolEntry {\n+    public abstract static sealed class AbstractDynamicConstantPoolEntry extends AbstractPoolEntry {\n@@ -1046,1 +1046,1 @@\n-    static abstract sealed class PrimitiveEntry<T extends ConstantDesc>\n+    abstract static sealed class PrimitiveEntry<T extends ConstantDesc>\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractPoolEntry.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-    private static abstract sealed class AbstractLocalPseudo extends AbstractPseudoInstruction {\n+    private abstract static sealed class AbstractLocalPseudo extends AbstractPseudoInstruction {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractPseudoInstruction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -938,1 +938,1 @@\n-    public static abstract sealed class BoundCodeAttribute\n+    public abstract static sealed class BoundCodeAttribute\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BoundAttribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    public static abstract non-sealed class AdHocAttribute<T extends Attribute<T>>\n+    public abstract static non-sealed class AdHocAttribute<T extends Attribute<T>>\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/UnboundAttribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    private final static SecurityProviderServiceEvent EVENT = new SecurityProviderServiceEvent();\n+    private static final SecurityProviderServiceEvent EVENT = new SecurityProviderServiceEvent();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/event\/SecurityProviderServiceEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-    private final static VirtualThreadEndEvent EVENT = new VirtualThreadEndEvent();\n+    private static final VirtualThreadEndEvent EVENT = new VirtualThreadEndEvent();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/event\/VirtualThreadEndEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-    private final static VirtualThreadStartEvent EVENT = new VirtualThreadStartEvent();\n+    private static final VirtualThreadStartEvent EVENT = new VirtualThreadStartEvent();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/event\/VirtualThreadStartEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-final public class FloatToDecimal {\n+public final class FloatToDecimal {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FloatToDecimal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -299,1 +299,1 @@\n-    private native static int doYield();\n+    private static native int doYield();\n@@ -302,1 +302,1 @@\n-    private native static void enterSpecial(Continuation c, boolean isContinue, boolean isVirtualThread);\n+    private static native void enterSpecial(Continuation c, boolean isContinue, boolean isVirtualThread);\n@@ -451,1 +451,1 @@\n-    static private native int isPinned0(ContinuationScope scope);\n+    private static native int isPinned0(ContinuationScope scope);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/Continuation.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-    private static abstract class RootContainer extends ThreadContainer {\n+    private abstract static class RootContainer extends ThreadContainer {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/ThreadContainers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -885,2 +885,2 @@\n-    private final static long CANT_PARSE_IN_RADIX = -1L;\n-    private final static long TERMINAL_PARSE_ERROR = -2L;\n+    private static final long CANT_PARSE_IN_RADIX = -1L;\n+    private static final long TERMINAL_PARSE_ERROR = -2L;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/util\/IPAddressUtil.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-    public final static class Curve25519OrderField extends IntegerPolynomialModBinP {\n+    public static final class Curve25519OrderField extends IntegerPolynomialModBinP {\n@@ -219,1 +219,1 @@\n-    public final static class Curve448OrderField extends IntegerPolynomialModBinP {\n+    public static final class Curve448OrderField extends IntegerPolynomialModBinP {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/math\/intpoly\/IntegerPolynomialModBinP.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-    final static class GeneralPrimitives {\n+    static final class GeneralPrimitives {\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/loops\/GraphicsPrimitiveMgr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-    final private int initSize;\n+    private final int initSize;\n@@ -77,1 +77,1 @@\n-    final private PooledConnectionFactory factory;\n+    private final PooledConnectionFactory factory;\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/pool\/Connections.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    final private GSSLibStub cStub;\n+    private final GSSLibStub cStub;\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/wrapper\/GSSNameElement.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7427,1 +7427,1 @@\n-    private static abstract class AccessibilityGraphicsEnvironment extends GraphicsEnvironment {\n+    private abstract static class AccessibilityGraphicsEnvironment extends GraphicsEnvironment {\n","filename":"src\/jdk.accessibility\/windows\/classes\/com\/sun\/java\/accessibility\/internal\/AccessBridge.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    private final static int NOT_FOUND = -1;\n+    private static final int NOT_FOUND = -1;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavaTokenizer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -416,1 +416,1 @@\n-    private static abstract class P11PrivateKey extends P11Key implements\n+    private abstract static class P11PrivateKey extends P11Key implements\n@@ -481,1 +481,1 @@\n-    private static abstract class P11PublicKey extends P11Key implements\n+    private abstract static class P11PublicKey extends P11Key implements\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Key.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-    static abstract sealed class PBEKeyInfo extends KeyInfo\n+    abstract static sealed class PBEKeyInfo extends KeyInfo\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11SecretKeyFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -804,1 +804,1 @@\n-    private static abstract class OperatorImpl implements Operator {\n+    private abstract static class OperatorImpl implements Operator {\n@@ -1114,1 +1114,1 @@\n-        private synchronized static void initCaches() {\n+        private static synchronized void initCaches() {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorOperators.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-    private final static int MAX_ESCAPE_SEQUENCE_LENGTH = 100;\n+    private static final int MAX_ESCAPE_SEQUENCE_LENGTH = 100;\n","filename":"src\/jdk.internal.le\/windows\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/jna\/win\/WindowsAnsiWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,2 +44,2 @@\n-    final private Map<Element, JEP> elementJeps = new HashMap<>();\n-    final private Map<String, JEP> jeps = new HashMap<>();\n+    private final Map<Element, JEP> elementJeps = new HashMap<>();\n+    private final Map<String, JEP> jeps = new HashMap<>();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/PreviewAPIListBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    static private final String ARG_VM_INCLUDE_VTHREADS = \"includevirtualthreads\";\n+    private static final String ARG_VM_INCLUDE_VTHREADS = \"includevirtualthreads\";\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/SunCommandLineLauncher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    private final static long KEY = createKey();\n+    private static final long KEY = createKey();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventWriterKey.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    private volatile static boolean nativeOK;\n+    private static volatile boolean nativeOK;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVM.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -342,1 +342,1 @@\n-    public synchronized static void addImplicitFields(Type type, boolean requestable, boolean hasDuration, boolean hasThread, boolean hasStackTrace, boolean hasCutoff) {\n+    public static synchronized void addImplicitFields(Type type, boolean requestable, boolean hasDuration, boolean hasThread, boolean hasStackTrace, boolean hasCutoff) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/TypeLibrary.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -180,3 +180,3 @@\n-        public final static String KELVIN = \"KELVIN\";\n-        public final static String CELSIUS = \"CELSIUS\";\n-        public final static String FAHRENEHIT = \"FAHRENHEIT\";\n+        public static final String KELVIN = \"KELVIN\";\n+        public static final String CELSIUS = \"CELSIUS\";\n+        public static final String FAHRENEHIT = \"FAHRENHEIT\";\n@@ -194,1 +194,1 @@\n-    static public class CPUEvent extends Event {\n+    public static class CPUEvent extends Event {\n@@ -269,1 +269,1 @@\n-    static public class StopWatchEvent extends Event {\n+    public static class StopWatchEvent extends Event {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/snippet-files\/Snippets.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-    private final static List<String> REQUIRED_PACKAGES = List.of(\"systemd\",\n+    private static final List<String> REQUIRED_PACKAGES = List.of(\"systemd\",\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxLaunchersAsServices.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-    private final static Predicate<String> QUOTE_IF_WHITESPACES = new Predicate<String>() {\n+    private static final Predicate<String> QUOTE_IF_WHITESPACES = new Predicate<String>() {\n@@ -109,1 +109,1 @@\n-    private final static BiConsumer<Integer, StringBuilder> PREPEND_BACKSLASH = (chr, buf) -> {\n+    private static final BiConsumer<Integer, StringBuilder> PREPEND_BACKSLASH = (chr, buf) -> {\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Enquoter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    private final static String FILENAME = \".package\";\n+    private static final String FILENAME = \".package\";\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PackageFile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-    private final static Set<PosixFilePermission> ALL_CAN_EXECUTE = Set.of(\n+    private static final Set<PosixFilePermission> ALL_CAN_EXECUTE = Set.of(\n@@ -77,1 +77,1 @@\n-    private final static Set<PosixFilePermission> OWNER_CAN_EXECUTE = Set.of(\n+    private static final Set<PosixFilePermission> OWNER_CAN_EXECUTE = Set.of(\n","filename":"src\/jdk.jpackage\/unix\/classes\/jdk\/jpackage\/internal\/ShellScriptResource.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-    static abstract class UnixLauncherAsService extends LauncherAsService {\n+    abstract static class UnixLauncherAsService extends LauncherAsService {\n","filename":"src\/jdk.jpackage\/unix\/classes\/jdk\/jpackage\/internal\/UnixLaunchersAsServices.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-abstract public class ExpandAdjacentAction extends CallableSystemAction {\n+public abstract class ExpandAdjacentAction extends CallableSystemAction {\n@@ -50,1 +50,1 @@\n-    abstract public void performAction();\n+    public abstract void performAction();\n@@ -52,1 +52,1 @@\n-    abstract public String getName();\n+    public abstract String getName();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandAdjacentAction.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-abstract public class ModelAwareAction extends ContextAction<DiagramViewModel> {\n+public abstract class ModelAwareAction extends ContextAction<DiagramViewModel> {\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ModelAwareAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    private final static double ZOOM_FACTOR = 0.1;\n+    private static final double ZOOM_FACTOR = 0.1;\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/widgets\/LineWidget.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}