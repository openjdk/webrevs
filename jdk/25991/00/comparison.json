{"files":[{"patch":"@@ -797,1 +797,1 @@\n-     * More specifically, this method first ensures that all of the following\n+     * More specifically, this method first ensures that all the following\n@@ -845,2 +845,2 @@\n-     * <li> Checks that \"p\" is an instanceof a SocketPermission\n-     * <li> Checks that \"p\"'s actions are a proper subset of the\n+     * <li> Checks that <i>p<\/i> is an instanceof a SocketPermission\n+     * <li> Checks that <i>p<\/i>'s actions are a proper subset of the\n@@ -848,1 +848,1 @@\n-     * <li> Checks that \"p\"'s port range is included in this port range\n+     * <li> Checks that <i>p<\/i>'s port range is included in this port range\n@@ -850,2 +850,2 @@\n-     *      one of \"p\"'s IP addresses is equal to this object's IP address.\n-     * <li> If either object is a wildcard domain (i.e., \"*.example.com\"),\n+     *      one of <i>p<\/i>'s IP addresses is equal to this object's IP address.\n+     * <li> If either object is a wildcard domain (such as *.example.com),\n@@ -916,1 +916,1 @@\n-                \/\/ if they are both wildcards, return true iff\n+                \/\/ if they are both wildcards, return true if\n@@ -926,4 +926,4 @@\n-                \/\/ this is a wildcard, lets see if that's cname ends with\n-                \/\/ it...\n-                if (that.cname == null) {\n-                    that.getCanonName();\n+                \/\/ if \"that\" was initialized with an IP address\n+                \/\/ return false\n+                if (that.init_with_ip) {\n+                    return false;\n@@ -931,1 +931,1 @@\n-                return (that.cname.endsWith(this.cname));\n+                return (that.hostname.endsWith(this.cname));\n","filename":"src\/java.base\/share\/classes\/java\/net\/SocketPermission.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4866847 7152564 7155693\n+ * @bug 4866847 7152564 7155693 8360166\n@@ -51,0 +51,10 @@\n+        thisURL = new URL(\"http\", \"*.example.com\", \"\/file\");\n+        thatURL = new URL(\"HTTP\", \"www.example.com\", \"\/file\");\n+        \/\/ wildcard check should match specific hostname of thatURL\n+        testImplies(thisURL, thatURL, true);\n+\n+        thisURL = new URL(\"http\", \"*.example.com\", \"\/file\");\n+        thatURL = new URL(\"HTTP\", \"127.0.0.1\", \"\/file\");\n+        \/\/ wildcard check should not match url with ip\n+        testImplies(thisURL, thatURL, false);\n+\n","filename":"test\/jdk\/java\/security\/CodeSource\/Implies.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}