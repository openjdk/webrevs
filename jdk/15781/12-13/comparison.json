{"files":[{"patch":"@@ -353,0 +353,26 @@\n+class PretouchMemoryRunnable : public TestRunnable {\n+  address addr;\n+  size_t byte;\n+public:\n+  PretouchMemoryRunnable(address addr, size_t byte): addr(addr), byte(byte) {}\n+\n+  void runUnitTest() const {\n+    os::pretouch_memory(addr, addr + byte; os::vm_page_size());\n+  }\n+};\n+\n+TEST_VM(os_linux, pretouch_thp_concurrent) {\n+  \/\/ Explicitly enable thp to test cocurrent system calls.\n+  bool useThp = UseTransparentHugePages;\n+  UseTransparentHugePages = true;\n+  address heap = os::reserve_memory(1 * G);\n+  EXPECT_NE(heap, (address)NULL);\n+  EXPECT_TRUE(os::commit_memory(heap, 1 * G, false));\n+  PretouchMemoryRunnable runnable(heap, 1 * G);\n+  ConcurrentTestRunner testRunner(&runnable, os::active_processor_count(), 1000);\n+  testRunner.run();\n+  EXPECT_TRUE(os::uncommit_memory(heap, 1 * G, false));\n+  EXPECT_TRUE(os::release_memory(heap, 1 * G));\n+  UseTransparentHugePages = useThp;\n+}\n+\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_linux.cpp","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"}]}