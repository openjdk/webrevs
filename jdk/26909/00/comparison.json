{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,2 +99,9 @@\n-            if (t != null)\n-                t = t.arrayType();\n+            if (t != null) {\n+                try {\n+                    t = t.arrayType();\n+                } catch (UnsupportedOperationException ex) {\n+                    \/\/ Bad arrays, such as [V or more than 255 dims\n+                    \/\/ We have a more informative IAE\n+                    return null;\n+                }\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/invoke\/util\/BytecodeDescriptor.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+ * @bug 8366028\n@@ -38,0 +39,2 @@\n+\n+import static org.testng.Assert.assertThrows;\n@@ -221,0 +224,17 @@\n+    @DataProvider(name = \"badMethodDescriptorStrings\")\n+    public String[] badMethodDescriptorStrings() {\n+        return new String[] {\n+                \"(I)\",\n+                \"(V)V\",\n+                \"([V)V\",\n+                \"(\" + \"[\".repeat(256) + \"J)I\",\n+                \"(java\/lang\/Object)V\",\n+        };\n+    }\n+\n+    \/\/ JDK-8366028\n+    @Test(dataProvider = \"badMethodDescriptorStrings\", expectedExceptions = IllegalArgumentException.class)\n+    public void testFromMethodDescriptorStringNegatives(String desc) {\n+        MethodType.fromMethodDescriptorString(desc, null);\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodTypeTest.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"}]}