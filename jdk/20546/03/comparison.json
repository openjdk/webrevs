{"files":[{"patch":"@@ -133,1 +133,1 @@\n-     * Returns the \"recent cpu usage\" for the whole system. This value is a\n+     * Returns the \"recent CPU usage\" for the whole system. This value is a\n@@ -137,3 +137,9 @@\n-     * during the recent period being observed. All values between 0.0 and\n-     * 1.0 are possible depending of the activities going on in the system.\n-     * If the system recent cpu usage is not available, the method returns a\n+     * during the recent period being observed.\n+     *\n+     * The recent period of observation is implementation-specific, and\n+     * typically relates to the duration since the last call made to this\n+     * method, or {@link #getCpuLoad()}. For the very first invocation, the\n+     * recent period of observation is undefined.\n+     *\n+     * All values between 0.0 and 1.0 are possible dependent on the activities\n+     * going on. If the recent CPU usage is not available, the method returns a\n@@ -145,0 +151,3 @@\n+     * @apiNote Callers should be aware of the possibility of other callers\n+     * affecting the observation period and the result.\n+     *\n@@ -156,1 +165,1 @@\n-     * Returns the \"recent cpu usage\" for the operating environment. This value\n+     * Returns the \"recent CPU usage\" for the operating environment. This value\n@@ -160,3 +169,9 @@\n-     * during the recent period being observed. All values between 0.0 and\n-     * 1.0 are possible depending of the activities going on.\n-     * If the recent cpu usage is not available, the method returns a\n+     * during the recent period being observed.\n+     *\n+     * The recent period of observation is implementation-specific, and\n+     * typically relates to the duration since the last call made to this\n+     * method, or {@link #getSystemCpuLoad()}. For the very first invocation,\n+     * the recent period of observation is undefined.\n+     *\n+     * All values between 0.0 and 1.0 are possible dependent on the activities\n+     * going on. If the recent CPU usage is not available, the method returns a\n@@ -165,0 +180,3 @@\n+     * @apiNote Callers should be aware of the possibility of other callers\n+     * affecting the observation period and the result.\n+     *\n@@ -172,1 +190,1 @@\n-     * Returns the \"recent cpu usage\" for the Java Virtual Machine process.\n+     * Returns the \"recent CPU usage\" for the Java Virtual Machine process.\n@@ -178,4 +196,14 @@\n-     * the application threads as well as the JVM internal threads. All values\n-     * between 0.0 and 1.0 are possible depending of the activities going on\n-     * in the JVM process and the whole system. If the Java Virtual Machine\n-     * recent CPU usage is not available, the method returns a negative value.\n+     * the application threads as well as the JVM internal threads.\n+     *\n+     * The recent period of observation is implementation-specific, and\n+     * typically relates to the duration since the last call made to this\n+     * method. For the very first invocation, the recent period of observation\n+     * is undefined.\n+     *\n+     * All values between 0.0 and 1.0 are possible dependent on the activities\n+     * going on in the JVM process and the whole system. If the Java Virtual\n+     * Machine recent CPU usage is not available, the method returns a negative\n+     * value.\n+     *\n+     * @apiNote Callers should be aware of the possibility of other callers\n+     * affecting the observation period and the result.\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/OperatingSystemMXBean.java","additions":41,"deletions":13,"binary":false,"changes":54,"status":"modified"}]}