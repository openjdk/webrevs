{"files":[{"patch":"@@ -1400,1 +1400,1 @@\n-    SandboxedOOMEMark som(THREAD);\n+    InternalOOMEMark iom(THREAD);\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -126,4 +126,3 @@\n-  \/\/ -XX:+HeapDumpOnOutOfMemoryError and -XX:OnOutOfMemoryError support\n-  report_java_out_of_memory(message);\n-\n-  if (!_thread->in_sandboxed_oome_mark()) {\n+  if (!_thread->in_internal_oome_mark()) {\n+    \/\/ -XX:+HeapDumpOnOutOfMemoryError and -XX:OnOutOfMemoryError support\n+    report_java_out_of_memory(message);\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-class SandboxedOOMEMark: public StackObj {\n+class InternalOOMEMark: public StackObj {\n@@ -131,1 +131,1 @@\n-  SandboxedOOMEMark(JavaThread* thread) {\n+  InternalOOMEMark(JavaThread* thread) {\n@@ -133,2 +133,2 @@\n-      _outer = thread->in_sandboxed_oome_mark();\n-      thread->set_in_sandboxed_oome_mark(true);\n+      _outer = thread->in_internal_oome_mark();\n+      thread->set_in_internal_oome_mark(true);\n@@ -142,1 +142,1 @@\n-  ~SandboxedOOMEMark() {\n+  ~InternalOOMEMark() {\n@@ -144,4 +144,4 @@\n-      \/\/ Check that only SandboxedOOMEMark sets\n-      \/\/ JavaThread::_in_sandboxed_oome_mark\n-      assert(_thread->in_sandboxed_oome_mark(), \"must be\");\n-      _thread->set_in_sandboxed_oome_mark(_outer);\n+      \/\/ Check that only InternalOOMEMark sets\n+      \/\/ JavaThread::_in_internal_oome_mark\n+      assert(_thread->in_internal_oome_mark(), \"must be\");\n+      _thread->set_in_internal_oome_mark(_outer);\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-   SandboxedOOMEMark _som;\n+   InternalOOMEMark _iom;\n@@ -105,1 +105,1 @@\n-  RetryableAllocationMark(JavaThread* thread, bool activate) : _som(activate ? thread : nullptr) {}\n+  RetryableAllocationMark(JavaThread* thread, bool activate) : _iom(activate ? thread : nullptr) {}\n@@ -107,1 +107,1 @@\n-    JavaThread* THREAD = _som.thread();\n+    JavaThread* THREAD = _iom.thread();\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -876,2 +876,2 @@\n-    report_java_out_of_memory(\"Requested array size exceeds VM limit\");\n-    if (!THREAD->in_sandboxed_oome_mark()) {\n+    if (!THREAD->in_internal_oome_mark()) {\n+      report_java_out_of_memory(\"Requested array size exceeds VM limit\");\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1254,1 +1254,1 @@\n-        SandboxedOOMEMark som(THREAD);\n+        InternalOOMEMark iom(THREAD);\n@@ -1269,1 +1269,1 @@\n-      SandboxedOOMEMark som(THREAD);\n+      InternalOOMEMark iom(THREAD);\n@@ -1273,1 +1273,1 @@\n-      SandboxedOOMEMark som(THREAD);\n+      InternalOOMEMark iom(THREAD);\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -458,1 +458,1 @@\n-  _in_sandboxed_oome_mark(false),\n+  _in_internal_oome_mark(false),\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-class SandboxedOOMEMark;\n+class InternalOOMEMark;\n@@ -338,2 +338,2 @@\n-  \/\/ In scope of a SandboxedOOMEMark?\n-  bool _in_sandboxed_oome_mark;\n+  \/\/ In scope of an InternalOOMEMark?\n+  bool _in_internal_oome_mark;\n@@ -716,2 +716,2 @@\n-  bool in_sandboxed_oome_mark() const            { return _in_sandboxed_oome_mark; }\n-  void set_in_sandboxed_oome_mark(bool b)        { _in_sandboxed_oome_mark = b;    }\n+  bool in_internal_oome_mark() const            { return _in_internal_oome_mark; }\n+  void set_in_internal_oome_mark(bool b)        { _in_internal_oome_mark = b;    }\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}