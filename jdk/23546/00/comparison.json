{"files":[{"patch":"@@ -213,0 +213,1 @@\n+      assert(CDSConfig::is_dumping_method_handles(), \"sanity\");\n","filename":"src\/hotspot\/share\/cds\/aotArtifactFinder.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -269,1 +269,1 @@\n-  if (CDSConfig::is_dumping_invokedynamic()) {\n+  if (CDSConfig::is_dumping_method_handles()) {\n","filename":"src\/hotspot\/share\/cds\/aotClassInitializer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-    if (!CDSConfig::is_dumping_invokedynamic()) {\n+    if (!CDSConfig::is_dumping_method_handles()) {\n","filename":"src\/hotspot\/share\/cds\/aotClassLinker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -790,0 +790,1 @@\n+    bool inited = false;\n@@ -814,1 +815,1 @@\n-      bool inited = ik->has_aot_initialized_mirror();\n+      inited = ik->has_aot_initialized_mirror();\n@@ -837,1 +838,1 @@\n-        if (CDSConfig::is_dumping_invokedynamic()) {\n+        if (CDSConfig::is_dumping_method_handles()) {\n@@ -895,1 +896,5 @@\n-        inited_msg = \" inited\";\n+        if (InstanceKlass::cast(k)->static_field_size() == 0) {\n+          inited_msg = \" inited (no static fields)\";\n+        } else {\n+          inited_msg = \" inited\";\n+        }\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n-bool CDSConfig::_has_archived_invokedynamic = false;\n@@ -614,2 +613,7 @@\n-bool CDSConfig::is_loading_invokedynamic() {\n-  return UseSharedSpaces && is_using_full_module_graph() && _has_archived_invokedynamic;\n+\/\/ When we are dumping aot-linked classes and we are able to write archived heap objects, we automatically\n+\/\/ enable the archiving of MethodHandles. This will in turn enable the archiving of MethodTypes and hidden\n+\/\/ classes that are used in the implementation of MethodHandles.\n+\/\/ Archived MethodHandles are required for higher-level optimizations such as AOT resolution of invokedynamic\n+\/\/ and dynamic proxies.\n+bool CDSConfig::is_dumping_method_handles() {\n+  return is_dumping_aot_linked_classes() && is_dumping_heap();\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-  static bool _has_archived_invokedynamic;\n@@ -124,2 +123,1 @@\n-  static bool is_loading_invokedynamic()                     NOT_CDS_JAVA_HEAP_RETURN_(false);\n-  static void set_has_archived_invokedynamic()               { CDS_JAVA_HEAP_ONLY(_has_archived_invokedynamic = true); }\n+  static bool is_dumping_method_handles()                    NOT_CDS_JAVA_HEAP_RETURN_(false);\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -109,0 +109,2 @@\n+  ADD_EXCL(\"java\/util\/Collections\",                      \"EMPTY_LIST\");           \/\/ E\n+\n@@ -130,1 +132,1 @@\n-  if (CDSConfig::is_dumping_invokedynamic()) {\n+  if (CDSConfig::is_dumping_method_handles()) {\n","filename":"src\/hotspot\/share\/cds\/cdsHeapVerifier.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -631,1 +631,1 @@\n-  if (CDSConfig::is_dumping_invokedynamic()) {\n+  if (CDSConfig::is_dumping_method_handles()) {\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -230,1 +230,0 @@\n-  _has_archived_invokedynamic = CDSConfig::is_dumping_invokedynamic();\n@@ -321,1 +320,0 @@\n-  st->print_cr(\"- has_archived_invokedynamic      %d\", _has_archived_invokedynamic);\n@@ -2662,4 +2660,0 @@\n-\n-    if (_has_archived_invokedynamic) {\n-      CDSConfig::set_has_archived_invokedynamic();\n-    }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -238,1 +238,0 @@\n-  bool   _has_archived_invokedynamic;   \/\/ Does the archive have aot-linked invokedynamic CP entries?\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -495,1 +495,1 @@\n-  return CDSConfig::is_dumping_invokedynamic() &&\n+  return CDSConfig::is_dumping_method_handles() &&\n@@ -785,1 +785,1 @@\n-    if (CDSConfig::is_dumping_invokedynamic()) {\n+    if (CDSConfig::is_dumping_method_handles()) {\n@@ -838,1 +838,1 @@\n-  if (CDSConfig::is_dumping_invokedynamic()) {\n+  if (CDSConfig::is_dumping_method_handles()) {\n@@ -1111,1 +1111,1 @@\n-  if (CDSConfig::is_loading_invokedynamic() || CDSConfig::is_dumping_invokedynamic()) {\n+  if (CDSConfig::is_using_aot_linked_classes() || CDSConfig::is_dumping_method_handles()) {\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-  if (CDSConfig::is_dumping_static_archive() && CDSConfig::is_dumping_invokedynamic()) {\n+  if (CDSConfig::is_dumping_static_archive() && CDSConfig::is_dumping_method_handles()) {\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -642,1 +642,1 @@\n-  if (CDSConfig::is_dumping_aot_linked_classes()) {\n+  if (CDSConfig::is_dumping_method_handles()) {\n@@ -952,1 +952,1 @@\n-    if (CDSConfig::is_dumping_invokedynamic()) {\n+    if (CDSConfig::is_dumping_method_handles()) {\n@@ -962,0 +962,1 @@\n+    }\n@@ -963,0 +964,1 @@\n+    if (CDSConfig::is_initing_classes_at_dump_time()) {\n@@ -968,0 +970,1 @@\n+      JavaValue result(T_VOID);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -5426,1 +5426,1 @@\n-  if (!CDSConfig::is_dumping_invokedynamic()) {\n+  if (!CDSConfig::is_dumping_method_handles()) {\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -295,1 +295,1 @@\n-      if (CDSConfig::is_dumping_aot_linked_classes()) {\n+      if (CDSConfig::is_dumping_method_handles()) {\n@@ -568,1 +568,1 @@\n-      if (!CDSConfig::is_dumping_invokedynamic()) {\n+      if (!CDSConfig::is_dumping_method_handles()) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -291,1 +291,1 @@\n-  if (rr != nullptr && cache() != nullptr && CDSConfig::is_dumping_invokedynamic()) {\n+  if (rr != nullptr && cache() != nullptr && CDSConfig::is_dumping_method_handles()) {\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -575,1 +575,1 @@\n-    if (CDSConfig::is_dumping_invokedynamic()) {\n+    if (CDSConfig::is_dumping_method_handles()) {\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,0 +83,9 @@\n+        \/\/ Dumping with AOTInvokeDynamicLinking disabled\n+        TestCommon.testDump(appJar, TestCommon.list(\"Hello\"),\n+                            \"-XX:+AOTClassLinking\", \"-XX:-AOTInvokeDynamicLinking\");\n+\n+        testCase(\"Archived full module graph must be enabled at runtime (with -XX:-AOTInvokeDynamicLinking)\");\n+        TestCommon.run(\"-cp\", appJar, \"-Djdk.module.validation=1\", \"Hello\")\n+            .assertAbnormalExit(\"CDS archive has aot-linked classes.\" +\n+                                \" It cannot be used when archived full module graph is not used\");\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/AOTClassLinkingVMOptions.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}