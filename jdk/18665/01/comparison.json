{"files":[{"patch":"@@ -300,1 +300,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n@@ -181,1 +181,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -232,1 +232,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/arm\/frame_arm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/arm\/frame_arm.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -283,1 +283,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -276,1 +276,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n@@ -173,1 +173,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -270,1 +270,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -286,1 +286,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n@@ -167,1 +167,1 @@\n-  address original_pc = nmethod::get_deopt_original_pc(this);\n+  address original_pc = get_deopt_original_pc();\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1163,1 +1163,1 @@\n-        MutexLocker ml(CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n+        MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n@@ -1175,1 +1175,1 @@\n-        MutexLocker ml(CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n+        MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -667,2 +667,2 @@\n-  assert(cb != nullptr, \"did not find an nmethod\");\n-  return cb->as_nmethod();\n+  assert(cb == nullptr || cb->is_nmethod(), \"did not find an nmethod\");\n+  return (nmethod*)cb;\n@@ -682,1 +682,1 @@\n-  NMethodIterator iter(NMethodIterator::all_blobs);\n+  NMethodIterator iter(NMethodIterator::all);\n@@ -690,1 +690,1 @@\n-  NMethodIterator iter(NMethodIterator::all_blobs);\n+  NMethodIterator iter(NMethodIterator::all);\n@@ -880,1 +880,1 @@\n-  NMethodIterator iter(NMethodIterator::all_blobs);\n+  NMethodIterator iter(NMethodIterator::all);\n@@ -902,1 +902,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -981,1 +981,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1009,2 +1009,2 @@\n-  for (GrowableArrayIterator<CodeHeap*> heap = _nmethod_heaps->begin(); heap != _nmethod_heaps->end(); ++heap) {\n-    count += (*heap)->nmethod_count();\n+  for (CodeHeap* heap : *_nmethod_heaps) {\n+    count += heap->nmethod_count();\n@@ -1176,1 +1176,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1185,1 +1185,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1213,1 +1213,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1321,1 +1321,1 @@\n-  NMethodIterator iter(NMethodIterator::all_blobs);\n+  NMethodIterator iter(NMethodIterator::all);\n@@ -1336,1 +1336,1 @@\n-  NMethodIterator iter(NMethodIterator::all_blobs);\n+  NMethodIterator iter(NMethodIterator::all);\n@@ -1357,1 +1357,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1375,1 +1375,1 @@\n-  RelaxedNMethodIterator iter(RelaxedNMethodIterator::only_not_unloading);\n+  RelaxedNMethodIterator iter(RelaxedNMethodIterator::not_unloading);\n@@ -1416,1 +1416,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1428,1 +1428,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1438,1 +1438,1 @@\n-  RelaxedNMethodIterator iter(RelaxedNMethodIterator::only_not_unloading);\n+  RelaxedNMethodIterator iter(RelaxedNMethodIterator::not_unloading);\n@@ -1650,1 +1650,1 @@\n-  NMethodIterator iter(NMethodIterator::all_blobs);\n+  NMethodIterator iter(NMethodIterator::all);\n@@ -1841,1 +1841,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1884,1 +1884,1 @@\n-  AllCodeBlobsIterator iter(AllCodeBlobsIterator::only_not_unloading);\n+  AllCodeBlobsIterator iter(AllCodeBlobsIterator::not_unloading);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-  enum LivenessFilter { all_blobs, only_not_unloading };\n+  enum LivenessFilter { all, not_unloading };\n@@ -346,1 +346,1 @@\n-  bool _only_not_unloading;\n+  bool _not_unloading;    \/\/ Those nmethods that are not unloading\n@@ -363,1 +363,1 @@\n-      if (_only_not_unloading) {\n+      if (_not_unloading) {\n@@ -376,1 +376,1 @@\n-    : _only_not_unloading(filter == only_not_unloading)\n+    : _not_unloading(filter == not_unloading)\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -348,0 +348,1 @@\n+  assert(caller != nullptr, \"did not find caller nmethod\");\n@@ -381,0 +382,1 @@\n+  assert(nm != nullptr, \"did not find nmethod\");\n@@ -386,0 +388,1 @@\n+  assert(caller != nullptr, \"did not find caller nmethod\");\n","filename":"src\/hotspot\/share\/code\/compiledIC.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -453,1 +453,1 @@\n-  ConditionalMutexLocker ml(CompiledMethod_lock, !CompiledMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -1871,1 +1871,1 @@\n-  assert_lock_strong(CompiledMethod_lock);\n+  assert_lock_strong(NMethodState_lock);\n@@ -1934,1 +1934,1 @@\n-    ConditionalMutexLocker ml(CompiledMethod_lock, !CompiledMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+    ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -1977,1 +1977,1 @@\n-  } \/\/ leave critical region under CompiledMethod_lock\n+  } \/\/ leave critical region under NMethodState_lock\n@@ -2007,1 +2007,1 @@\n-  \/\/ unlink_from_method will take the CompiledMethod_lock.\n+  \/\/ unlink_from_method will take the NMethodState_lock.\n@@ -2820,1 +2820,1 @@\n-    fatal(\"findNMethod did not find this nmethod (\" INTPTR_FORMAT \")\", p2i(this));\n+    fatal(\"find_nmethod did not find this nmethod (\" INTPTR_FORMAT \")\", p2i(this));\n@@ -2903,1 +2903,1 @@\n-  RelocIterator iter((nmethod*)this);\n+  RelocIterator iter(this);\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-  \/\/ Protected by CompiledMethod_lock\n+  \/\/ Protected by NMethodState_lock\n@@ -759,2 +759,0 @@\n-  static address get_deopt_original_pc(const frame* fr);\n-\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,18 +53,0 @@\n-\/\/ -----------------------------------------------------------------------------\n-\/\/ nmethod::get_deopt_original_pc\n-\/\/\n-\/\/ Return the original PC for the given PC if:\n-\/\/ (a) the given PC belongs to an nmethod and\n-\/\/ (b) it is a deopt PC\n-\n-inline address nmethod::get_deopt_original_pc(const frame* fr) {\n-  if (fr->cb() == nullptr)  return nullptr;\n-\n-  nmethod* nm = fr->cb()->as_nmethod_or_null();\n-  if (nm != nullptr && nm->is_deopt_pc(fr->pc())) {\n-    return nm->get_original_pc(fr);\n-  }\n-  return nullptr;\n-}\n-\n-\n","filename":"src\/hotspot\/share\/code\/nmethod.inline.hpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1382,1 +1382,1 @@\n-        return (nmethod*) method_code;\n+        return method_code;\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  NMethodIterator iter(NMethodIterator::all_blobs);\n+  NMethodIterator iter(NMethodIterator::all);\n@@ -54,1 +54,1 @@\n-  NMethodIterator last(NMethodIterator::all_blobs);\n+  NMethodIterator last(NMethodIterator::all);\n@@ -60,1 +60,1 @@\n-    last = NMethodIterator(NMethodIterator::all_blobs, first);\n+    last = NMethodIterator(NMethodIterator::all, first);\n","filename":"src\/hotspot\/share\/gc\/shared\/parallelCleaning.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -219,1 +219,1 @@\n-  NMethodIterator iter(NMethodIterator::all_blobs);\n+  NMethodIterator iter(NMethodIterator::all);\n@@ -232,1 +232,1 @@\n-  NMethodIterator iter(NMethodIterator::all_blobs);\n+  NMethodIterator iter(NMethodIterator::all);\n","filename":"src\/hotspot\/share\/gc\/shared\/scavengableNMethods.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -309,0 +309,1 @@\n+  assert(nm != nullptr, \"did not find nmethod\");\n","filename":"src\/hotspot\/share\/gc\/z\/zNMethod.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1753,2 +1753,1 @@\n-    assert(fst.current()->cb()->is_nmethod(), \"nmethod expected\");\n-    ((nmethod*) fst.current()->cb())->make_not_entrant();\n+    fst.current()->cb()->as_nmethod()->make_not_entrant();\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -271,0 +271,1 @@\n+  assert(nm != nullptr, \"did not find nmethod\");\n@@ -2228,1 +2229,1 @@\n-            MutexLocker ml(CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n+            MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n@@ -2242,1 +2243,1 @@\n-            MutexLocker ml(CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n+            MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n@@ -2251,1 +2252,1 @@\n-          MutexLocker ml(CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n+          MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3358,1 +3358,1 @@\n-  assert_lock_strong(CompiledMethod_lock);\n+  assert_lock_strong(NMethodState_lock);\n@@ -3383,1 +3383,1 @@\n-  ConditionalMutexLocker ml(CompiledMethod_lock, !CompiledMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -3424,1 +3424,1 @@\n-  ConditionalMutexLocker ml(CompiledMethod_lock, !CompiledMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -3439,1 +3439,1 @@\n-  ConditionalMutexLocker ml(CompiledMethod_lock, !CompiledMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1163,1 +1163,1 @@\n-  ConditionalMutexLocker ml(CompiledMethod_lock, !CompiledMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -1174,1 +1174,1 @@\n-  ConditionalMutexLocker ml(CompiledMethod_lock, !CompiledMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -1312,1 +1312,1 @@\n-  assert_lock_strong(CompiledMethod_lock);\n+  assert_lock_strong(NMethodState_lock);\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -362,1 +362,1 @@\n-  \/\/ Locks CompiledMethod_lock if not held.\n+  \/\/ Locks NMethodState_lock if not held.\n@@ -364,1 +364,1 @@\n-  \/\/ Locks CompiledMethod_lock if not held.\n+  \/\/ Locks NMethodState_lock if not held.\n@@ -368,1 +368,1 @@\n-  \/\/ Either called with CompiledMethod_lock held or from constructor.\n+  \/\/ Either called with NMethodState_lock held or from constructor.\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -237,1 +237,1 @@\n-      NMethodIterator iter(NMethodIterator::only_not_unloading);\n+      NMethodIterator iter(NMethodIterator::not_unloading);\n","filename":"src\/hotspot\/share\/prims\/jvmtiCodeBlobEvents.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -772,0 +772,1 @@\n+                assert(nm != nullptr, \"did not find nmethod\");\n@@ -822,1 +823,1 @@\n-      MutexLocker ml(CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n+      MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-  MutexLocker ml(CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n+  MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n@@ -121,1 +121,1 @@\n-  ConditionalMutexLocker ml(CompiledMethod_lock, !CompiledMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -142,1 +142,1 @@\n-  ConditionalMutexLocker ml(CompiledMethod_lock, !CompiledMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -173,1 +173,1 @@\n-      ConditionalMutexLocker ml(CompiledMethod_lock, !CompiledMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+      ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -201,1 +201,1 @@\n-        ConditionalMutexLocker ml(CompiledMethod_lock, !CompiledMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+        ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -124,0 +124,5 @@\n+  \/\/ Return the original PC for the given PC if:\n+  \/\/ (a) the given PC belongs to an nmethod and\n+  \/\/ (b) it is a deopt PC\n+  address get_deopt_original_pc() const;\n+\n","filename":"src\/hotspot\/share\/runtime\/frame.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -74,0 +74,10 @@\n+inline address frame::get_deopt_original_pc() const {\n+  if (_cb == nullptr)  return nullptr;\n+\n+  nmethod* nm = _cb->as_nmethod_or_null();\n+  if (nm != nullptr && nm->is_deopt_pc(_pc)) {\n+    return nm->get_original_pc(this);\n+  }\n+  return nullptr;\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/frame.inline.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1293,2 +1293,2 @@\n-        address pc = fst.current()->pc();\n-        nmethod* nm =  (nmethod*) fst.current()->cb();\n+        address    pc = fst.current()->pc();\n+        nmethod*   nm = fst.current()->cb()->as_nmethod();\n@@ -1336,0 +1336,1 @@\n+      assert(nm != nullptr, \"did not find nmethod\");\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-Mutex*   CompiledMethod_lock          = nullptr;\n+Mutex*   NMethodState_lock            = nullptr;\n@@ -330,1 +330,1 @@\n-  MUTEX_DEFL(CompiledMethod_lock            , PaddedMutex  , CodeCache_lock);\n+  MUTEX_DEFL(NMethodState_lock              , PaddedMutex  , CodeCache_lock);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-extern Mutex*   CompiledMethod_lock;             \/\/ a lock used to guard a compiled method and OSR queues\n+extern Mutex*   NMethodState_lock;               \/\/ a lock used to guard a compiled method state\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1641,0 +1641,1 @@\n+    assert(caller_nm != nullptr, \"did not find caller nmethod\");\n@@ -2783,1 +2784,1 @@\n-          MutexLocker pl(CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n+          MutexLocker pl(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}