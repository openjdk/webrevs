{"files":[{"patch":"@@ -1163,1 +1163,1 @@\n-        MutexLocker ml(NMethod_lock, Mutex::_no_safepoint_check_flag);\n+        MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n@@ -1175,1 +1175,1 @@\n-        MutexLocker ml(NMethod_lock, Mutex::_no_safepoint_check_flag);\n+        MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -902,1 +902,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -981,1 +981,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1176,1 +1176,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1185,1 +1185,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1213,1 +1213,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1357,1 +1357,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1375,1 +1375,1 @@\n-  RelaxedNMethodIterator iter(RelaxedNMethodIterator::only_not_unloading);\n+  RelaxedNMethodIterator iter(RelaxedNMethodIterator::not_unloading);\n@@ -1416,1 +1416,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1428,1 +1428,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1438,1 +1438,1 @@\n-  RelaxedNMethodIterator iter(RelaxedNMethodIterator::only_not_unloading);\n+  RelaxedNMethodIterator iter(RelaxedNMethodIterator::not_unloading);\n@@ -1841,1 +1841,1 @@\n-  NMethodIterator iter(NMethodIterator::only_not_unloading);\n+  NMethodIterator iter(NMethodIterator::not_unloading);\n@@ -1884,1 +1884,1 @@\n-  AllCodeBlobsIterator iter(AllCodeBlobsIterator::only_not_unloading);\n+  AllCodeBlobsIterator iter(AllCodeBlobsIterator::not_unloading);\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-  enum LivenessFilter { all, only_not_unloading };\n+  enum LivenessFilter { all, not_unloading };\n@@ -346,1 +346,1 @@\n-  bool _only_not_unloading;\n+  bool _not_unloading;    \/\/ Those nmethods that are not unloading\n@@ -363,1 +363,1 @@\n-      if (_only_not_unloading) {\n+      if (_not_unloading) {\n@@ -376,1 +376,1 @@\n-    : _only_not_unloading(filter == only_not_unloading)\n+    : _not_unloading(filter == not_unloading)\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -348,0 +348,1 @@\n+  assert(caller != nullptr, \"did not find caller nmethod\");\n@@ -381,0 +382,1 @@\n+  assert(nm != nullptr, \"did not find nmethod\");\n@@ -386,0 +388,1 @@\n+  assert(caller != nullptr, \"did not find caller nmethod\");\n","filename":"src\/hotspot\/share\/code\/compiledIC.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -453,1 +453,1 @@\n-  ConditionalMutexLocker ml(NMethod_lock, !NMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -1871,1 +1871,1 @@\n-  assert_lock_strong(NMethod_lock);\n+  assert_lock_strong(NMethodState_lock);\n@@ -1934,1 +1934,1 @@\n-    ConditionalMutexLocker ml(NMethod_lock, !NMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+    ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -1977,1 +1977,1 @@\n-  } \/\/ leave critical region under NMethod_lock\n+  } \/\/ leave critical region under NMethodState_lock\n@@ -2007,1 +2007,1 @@\n-  \/\/ unlink_from_method will take the NMethod_lock.\n+  \/\/ unlink_from_method will take the NMethodState_lock.\n@@ -2820,1 +2820,1 @@\n-    fatal(\"findNMethod did not find this nmethod (\" INTPTR_FORMAT \")\", p2i(this));\n+    fatal(\"find_nmethod did not find this nmethod (\" INTPTR_FORMAT \")\", p2i(this));\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-  \/\/ Protected by NMethod_lock\n+  \/\/ Protected by NMethodState_lock\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -309,0 +309,1 @@\n+  assert(nm != nullptr, \"did not find nmethod\");\n","filename":"src\/hotspot\/share\/gc\/z\/zNMethod.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -271,0 +271,1 @@\n+  assert(nm != nullptr, \"did not find nmethod\");\n@@ -2228,1 +2229,1 @@\n-            MutexLocker ml(NMethod_lock, Mutex::_no_safepoint_check_flag);\n+            MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n@@ -2242,1 +2243,1 @@\n-            MutexLocker ml(NMethod_lock, Mutex::_no_safepoint_check_flag);\n+            MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n@@ -2251,1 +2252,1 @@\n-          MutexLocker ml(NMethod_lock, Mutex::_no_safepoint_check_flag);\n+          MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -3358,1 +3358,1 @@\n-  assert_lock_strong(NMethod_lock);\n+  assert_lock_strong(NMethodState_lock);\n@@ -3383,1 +3383,1 @@\n-  ConditionalMutexLocker ml(NMethod_lock, !NMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -3424,1 +3424,1 @@\n-  ConditionalMutexLocker ml(NMethod_lock, !NMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -3439,1 +3439,1 @@\n-  ConditionalMutexLocker ml(NMethod_lock, !NMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1163,1 +1163,1 @@\n-  ConditionalMutexLocker ml(NMethod_lock, !NMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -1174,1 +1174,1 @@\n-  ConditionalMutexLocker ml(NMethod_lock, !NMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -1312,1 +1312,1 @@\n-  assert_lock_strong(NMethod_lock);\n+  assert_lock_strong(NMethodState_lock);\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -362,1 +362,1 @@\n-  \/\/ Locks NMethod_lock if not held.\n+  \/\/ Locks NMethodState_lock if not held.\n@@ -364,1 +364,1 @@\n-  \/\/ Locks NMethod_lock if not held.\n+  \/\/ Locks NMethodState_lock if not held.\n@@ -368,1 +368,1 @@\n-  \/\/ Either called with NMethod_lock held or from constructor.\n+  \/\/ Either called with NMethodState_lock held or from constructor.\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -237,1 +237,1 @@\n-      NMethodIterator iter(NMethodIterator::only_not_unloading);\n+      NMethodIterator iter(NMethodIterator::not_unloading);\n","filename":"src\/hotspot\/share\/prims\/jvmtiCodeBlobEvents.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -772,0 +772,1 @@\n+                assert(nm != nullptr, \"did not find nmethod\");\n@@ -822,1 +823,1 @@\n-      MutexLocker ml(NMethod_lock, Mutex::_no_safepoint_check_flag);\n+      MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-  MutexLocker ml(NMethod_lock, Mutex::_no_safepoint_check_flag);\n+  MutexLocker ml(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n@@ -121,1 +121,1 @@\n-  ConditionalMutexLocker ml(NMethod_lock, !NMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -142,1 +142,1 @@\n-  ConditionalMutexLocker ml(NMethod_lock, !NMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+  ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -173,1 +173,1 @@\n-      ConditionalMutexLocker ml(NMethod_lock, !NMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+      ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n@@ -201,1 +201,1 @@\n-        ConditionalMutexLocker ml(NMethod_lock, !NMethod_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n+        ConditionalMutexLocker ml(NMethodState_lock, !NMethodState_lock->owned_by_self(), Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1336,0 +1336,1 @@\n+      assert(nm != nullptr, \"did not find nmethod\");\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-Mutex*   NMethod_lock                 = nullptr;\n+Mutex*   NMethodState_lock            = nullptr;\n@@ -330,1 +330,1 @@\n-  MUTEX_DEFL(NMethod_lock                   , PaddedMutex  , CodeCache_lock);\n+  MUTEX_DEFL(NMethodState_lock              , PaddedMutex  , CodeCache_lock);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-extern Mutex*   NMethod_lock;                    \/\/ a lock used to guard a compiled method and OSR queues\n+extern Mutex*   NMethodState_lock;               \/\/ a lock used to guard a compiled method state\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1641,0 +1641,1 @@\n+    assert(caller_nm != nullptr, \"did not find caller nmethod\");\n@@ -2783,1 +2784,1 @@\n-          MutexLocker pl(NMethod_lock, Mutex::_no_safepoint_check_flag);\n+          MutexLocker pl(NMethodState_lock, Mutex::_no_safepoint_check_flag);\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}