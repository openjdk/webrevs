{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2012, 2018 SAP SE. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024 SAP SE. All rights reserved.\n@@ -216,6 +216,2 @@\n-      if (-1 == libperfstat::perfstat_cpu_total(nullptr, &psct, sizeof(perfstat_cpu_total_t_61), 1)) {\n-        if (-1 == libperfstat::perfstat_cpu_total(nullptr, &psct, sizeof(perfstat_cpu_total_t_53), 1)) {\n-          trcVerbose(\"perfstat_cpu_total() failed (errno=%d)\", errno);\n-          return false;\n-        }\n-      }\n+      trcVerbose(\"perfstat_cpu_total() failed (errno=%d)\", errno);\n+      return false;\n@@ -255,8 +251,2 @@\n-      if (-1 == libperfstat::perfstat_partition_total(nullptr, &pspt, sizeof(perfstat_partition_total_t_61), 1)) {\n-        if (-1 == libperfstat::perfstat_partition_total(nullptr, &pspt, sizeof(perfstat_partition_total_t_53), 1)) {\n-          if (-1 == libperfstat::perfstat_partition_total(nullptr, &pspt, sizeof(perfstat_partition_total_t_53_5), 1)) {\n-            trcVerbose(\"perfstat_partition_total() failed (errno=%d)\", errno);\n-            return false;\n-          }\n-        }\n-      }\n+      trcVerbose(\"perfstat_partition_total() failed (errno=%d)\", errno);\n+      return false;\n@@ -327,4 +317,2 @@\n-    if (-1 == libperfstat::perfstat_wpar_total(nullptr, &pswt, sizeof(perfstat_wpar_total_t_61), 1)) {\n-      trcVerbose(\"perfstat_wpar_total() failed (errno=%d)\", errno);\n-      return false;\n-    }\n+    trcVerbose(\"perfstat_wpar_total() failed (errno=%d)\", errno);\n+    return false;\n","filename":"src\/hotspot\/os\/aix\/libperfstat_aix.cpp","additions":8,"deletions":20,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2022, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2012, 2018 SAP SE. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024 SAP SE. All rights reserved.\n@@ -41,1 +41,1 @@\n-\/\/ These are excerpts from the AIX 5.3, 6.1, 7.1 libperfstat.h -\n+\/\/ These are excerpts from the AIX 7.1 libperfstat.h -\n@@ -43,8 +43,0 @@\n-\/\/\n-\/\/ Note: I define all structures as if I were to include libperfstat.h on an AIX 5.2\n-\/\/ build machine.\n-\/\/\n-\/\/ The ratio behind that is that if I would build on an AIX 5.2 build machine,\n-\/\/ include libperfstat.h and hard-link against libperfstat.a, the program should\n-\/\/ work without recompilation on all newer AIX versions.\n-\/\/\n@@ -97,163 +89,0 @@\n-typedef struct { \/* global cpu information AIX 5.3 < TL10 *\/\n-  int ncpus;                            \/* number of active logical processors *\/\n-  int ncpus_cfg;                        \/* number of configured processors *\/\n-  char description[IDENTIFIER_LENGTH];  \/* processor description (type\/official name) *\/\n-  u_longlong_t processorHZ;             \/* processor speed in Hz *\/\n-  u_longlong_t user;                    \/* raw total number of clock ticks spent in user mode *\/\n-  u_longlong_t sys;                     \/* raw total number of clock ticks spent in system mode *\/\n-  u_longlong_t idle;                    \/* raw total number of clock ticks spent idle *\/\n-  u_longlong_t wait;                    \/* raw total number of clock ticks spent waiting for I\/O *\/\n-  u_longlong_t pswitch;                 \/* number of process switches (change in currently running process) *\/\n-  u_longlong_t syscall;                 \/* number of system calls executed *\/\n-  u_longlong_t sysread;                 \/* number of read system calls executed *\/\n-  u_longlong_t syswrite;                \/* number of write system calls executed *\/\n-  u_longlong_t sysfork;                 \/* number of forks system calls executed *\/\n-  u_longlong_t sysexec;                 \/* number of execs system calls executed *\/\n-  u_longlong_t readch;                  \/* number of characters transferred with read system call *\/\n-  u_longlong_t writech;                 \/* number of characters transferred with write system call *\/\n-  u_longlong_t devintrs;                \/* number of device interrupts *\/\n-  u_longlong_t softintrs;               \/* number of software interrupts *\/\n-  time_t lbolt;                         \/* number of ticks since last reboot *\/\n-  u_longlong_t loadavg[3];              \/* (1<<SBITS) times the average number of runnables processes during the last 1, 5 and 15 minutes.\n-                                               * To calculate the load average, divide the numbers by (1<<SBITS). SBITS is defined in <sys\/proc.h>. *\/\n-  u_longlong_t runque;                  \/* length of the run queue (processes ready) *\/\n-  u_longlong_t swpque;                  \/* ength of the swap queue (processes waiting to be paged in) *\/\n-  u_longlong_t bread;                   \/* number of blocks read *\/\n-  u_longlong_t bwrite;                  \/* number of blocks written *\/\n-  u_longlong_t lread;                   \/* number of logical read requests *\/\n-  u_longlong_t lwrite;                  \/* number of logical write requests *\/\n-  u_longlong_t phread;                  \/* number of physical reads (reads on raw devices) *\/\n-  u_longlong_t phwrite;                 \/* number of physical writes (writes on raw devices) *\/\n-  u_longlong_t runocc;                  \/* updated whenever runque is updated, i.e. the runqueue is occupied.\n-                                               * This can be used to compute the simple average of ready processes  *\/\n-  u_longlong_t swpocc;                  \/* updated whenever swpque is updated. i.e. the swpqueue is occupied.\n-                                               * This can be used to compute the simple average processes waiting to be paged in *\/\n-  u_longlong_t iget;                    \/* number of inode lookups *\/\n-  u_longlong_t namei;                   \/* number of vnode lookup from a path name *\/\n-  u_longlong_t dirblk;                  \/* number of 512-byte block reads by the directory search routine to locate an entry for a file *\/\n-  u_longlong_t msg;                     \/* number of IPC message operations *\/\n-  u_longlong_t sema;                    \/* number of IPC semaphore operations *\/\n-  u_longlong_t rcvint;                  \/* number of tty receive interrupts *\/\n-  u_longlong_t xmtint;                  \/* number of tyy transmit interrupts *\/\n-  u_longlong_t mdmint;                  \/* number of modem interrupts *\/\n-  u_longlong_t tty_rawinch;             \/* number of raw input characters  *\/\n-  u_longlong_t tty_caninch;             \/* number of canonical input characters (always zero) *\/\n-  u_longlong_t tty_rawoutch;            \/* number of raw output characters *\/\n-  u_longlong_t ksched;                  \/* number of kernel processes created *\/\n-  u_longlong_t koverf;                  \/* kernel process creation attempts where:\n-                                               * -the user has forked to their maximum limit\n-                                               * -the configuration limit of processes has been reached *\/\n-  u_longlong_t kexit;                   \/* number of kernel processes that became zombies *\/\n-  u_longlong_t rbread;                  \/* number of remote read requests *\/\n-  u_longlong_t rcread;                  \/* number of cached remote reads *\/\n-  u_longlong_t rbwrt;                   \/* number of remote writes *\/\n-  u_longlong_t rcwrt;                   \/* number of cached remote writes *\/\n-  u_longlong_t traps;                   \/* number of traps *\/\n-  int ncpus_high;                       \/* index of highest processor online *\/\n-  u_longlong_t puser;                   \/* raw number of physical processor tics in user mode *\/\n-  u_longlong_t psys;                    \/* raw number of physical processor tics in system mode *\/\n-  u_longlong_t pidle;                   \/* raw number of physical processor tics idle *\/\n-  u_longlong_t pwait;                   \/* raw number of physical processor tics waiting for I\/O *\/\n-  u_longlong_t decrintrs;               \/* number of decrementer tics interrupts *\/\n-  u_longlong_t mpcrintrs;               \/* number of mpc's received interrupts *\/\n-  u_longlong_t mpcsintrs;               \/* number of mpc's sent interrupts *\/\n-  u_longlong_t phantintrs;              \/* number of phantom interrupts *\/\n-  u_longlong_t idle_donated_purr;       \/* number of idle cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t idle_donated_spurr;      \/* number of idle spurr cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t busy_donated_purr;       \/* number of busy cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t busy_donated_spurr;      \/* number of busy spurr cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t idle_stolen_purr;        \/* number of idle cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t idle_stolen_spurr;       \/* number of idle spurr cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t busy_stolen_purr;        \/* number of busy cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t busy_stolen_spurr;       \/* number of busy spurr cycles stolen by the hypervisor from a dedicated partition *\/\n-  short iowait;                         \/* number of processes that are asleep waiting for buffered I\/O *\/\n-  short physio;                         \/* number of processes waiting for raw I\/O *\/\n-  longlong_t twait;                     \/* number of threads that are waiting for filesystem direct(cio) *\/\n-  u_longlong_t hpi;                     \/* number of hypervisor page-ins *\/\n-  u_longlong_t hpit;                    \/* Time spent in hypervisor page-ins (in nanoseconds) *\/\n-} perfstat_cpu_total_t_53;\n-\n-typedef struct { \/* global cpu information AIX 6.1|5.3 > TL09 *\/\n-  int ncpus;                            \/* number of active logical processors *\/\n-  int ncpus_cfg;                        \/* number of configured processors *\/\n-  char description[IDENTIFIER_LENGTH];  \/* processor description (type\/official name) *\/\n-  u_longlong_t processorHZ;             \/* processor speed in Hz *\/\n-  u_longlong_t user;                    \/* raw total number of clock ticks spent in user mode *\/\n-  u_longlong_t sys;                     \/* raw total number of clock ticks spent in system mode *\/\n-  u_longlong_t idle;                    \/* raw total number of clock ticks spent idle *\/\n-  u_longlong_t wait;                    \/* raw total number of clock ticks spent waiting for I\/O *\/\n-  u_longlong_t pswitch;                 \/* number of process switches (change in currently running process) *\/\n-  u_longlong_t syscall;                 \/* number of system calls executed *\/\n-  u_longlong_t sysread;                 \/* number of read system calls executed *\/\n-  u_longlong_t syswrite;                \/* number of write system calls executed *\/\n-  u_longlong_t sysfork;                 \/* number of forks system calls executed *\/\n-  u_longlong_t sysexec;                 \/* number of execs system calls executed *\/\n-  u_longlong_t readch;                  \/* number of characters transferred with read system call *\/\n-  u_longlong_t writech;                 \/* number of characters transferred with write system call *\/\n-  u_longlong_t devintrs;                \/* number of device interrupts *\/\n-  u_longlong_t softintrs;               \/* number of software interrupts *\/\n-  time_t lbolt;                         \/* number of ticks since last reboot *\/\n-  u_longlong_t loadavg[3];              \/* (1<<SBITS) times the average number of runnables processes during the last 1, 5 and 15 minutes.\n-                                               * To calculate the load average, divide the numbers by (1<<SBITS). SBITS is defined in <sys\/proc.h>. *\/\n-  u_longlong_t runque;                  \/* length of the run queue (processes ready) *\/\n-  u_longlong_t swpque;                  \/* length of the swap queue (processes waiting to be paged in) *\/\n-  u_longlong_t bread;                   \/* number of blocks read *\/\n-  u_longlong_t bwrite;                  \/* number of blocks written *\/\n-  u_longlong_t lread;                   \/* number of logical read requests *\/\n-  u_longlong_t lwrite;                  \/* number of logical write requests *\/\n-  u_longlong_t phread;                  \/* number of physical reads (reads on raw devices) *\/\n-  u_longlong_t phwrite;                 \/* number of physical writes (writes on raw devices) *\/\n-  u_longlong_t runocc;                  \/* updated whenever runque is updated, i.e. the runqueue is occupied.\n-                                               * This can be used to compute the simple average of ready processes  *\/\n-  u_longlong_t swpocc;                  \/* updated whenever swpque is updated. i.e. the swpqueue is occupied.\n-                                               * This can be used to compute the simple average processes waiting to be paged in *\/\n-  u_longlong_t iget;                    \/* number of inode lookups *\/\n-  u_longlong_t namei;                   \/* number of vnode lookup from a path name *\/\n-  u_longlong_t dirblk;                  \/* number of 512-byte block reads by the directory search routine to locate an entry for a file *\/\n-  u_longlong_t msg;                     \/* number of IPC message operations *\/\n-  u_longlong_t sema;                    \/* number of IPC semaphore operations *\/\n-  u_longlong_t rcvint;                  \/* number of tty receive interrupts *\/\n-  u_longlong_t xmtint;                  \/* number of tyy transmit interrupts *\/\n-  u_longlong_t mdmint;                  \/* number of modem interrupts *\/\n-  u_longlong_t tty_rawinch;             \/* number of raw input characters  *\/\n-  u_longlong_t tty_caninch;             \/* number of canonical input characters (always zero) *\/\n-  u_longlong_t tty_rawoutch;            \/* number of raw output characters *\/\n-  u_longlong_t ksched;                  \/* number of kernel processes created *\/\n-  u_longlong_t koverf;                  \/* kernel process creation attempts where:\n-                                               * -the user has forked to their maximum limit\n-                                               * -the configuration limit of processes has been reached *\/\n-  u_longlong_t kexit;                   \/* number of kernel processes that became zombies *\/\n-  u_longlong_t rbread;                  \/* number of remote read requests *\/\n-  u_longlong_t rcread;                  \/* number of cached remote reads *\/\n-  u_longlong_t rbwrt;                   \/* number of remote writes *\/\n-  u_longlong_t rcwrt;                   \/* number of cached remote writes *\/\n-  u_longlong_t traps;                   \/* number of traps *\/\n-  int ncpus_high;                       \/* index of highest processor online *\/\n-  u_longlong_t puser;                   \/* raw number of physical processor tics in user mode *\/\n-  u_longlong_t psys;                    \/* raw number of physical processor tics in system mode *\/\n-  u_longlong_t pidle;                   \/* raw number of physical processor tics idle *\/\n-  u_longlong_t pwait;                   \/* raw number of physical processor tics waiting for I\/O *\/\n-  u_longlong_t decrintrs;               \/* number of decrementer tics interrupts *\/\n-  u_longlong_t mpcrintrs;               \/* number of mpc's received interrupts *\/\n-  u_longlong_t mpcsintrs;               \/* number of mpc's sent interrupts *\/\n-  u_longlong_t phantintrs;              \/* number of phantom interrupts *\/\n-  u_longlong_t idle_donated_purr;       \/* number of idle cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t idle_donated_spurr;      \/* number of idle spurr cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t busy_donated_purr;       \/* number of busy cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t busy_donated_spurr;      \/* number of busy spurr cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t idle_stolen_purr;        \/* number of idle cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t idle_stolen_spurr;       \/* number of idle spurr cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t busy_stolen_purr;        \/* number of busy cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t busy_stolen_spurr;       \/* number of busy spurr cycles stolen by the hypervisor from a dedicated partition *\/\n-  short iowait;                         \/* number of processes that are asleep waiting for buffered I\/O *\/\n-  short physio;                         \/* number of processes waiting for raw I\/O *\/\n-  longlong_t twait;                     \/* number of threads that are waiting for filesystem direct(cio) *\/\n-  u_longlong_t hpi;                     \/* number of hypervisor page-ins *\/\n-  u_longlong_t hpit;                    \/* Time spent in hypervisor page-ins (in nanoseconds) *\/\n-  u_longlong_t puser_spurr;             \/* number of spurr cycles spent in user mode *\/\n-  u_longlong_t psys_spurr;              \/* number of spurr cycles spent in kernel mode *\/\n-  u_longlong_t pidle_spurr;             \/* number of spurr cycles spent in idle mode *\/\n-  u_longlong_t pwait_spurr;             \/* number of spurr cycles spent in wait mode *\/\n-  int spurrflag;                        \/* set if running in spurr mode *\/\n-} perfstat_cpu_total_t_61;\n-\n@@ -567,160 +396,0 @@\n-typedef struct { \/* partition total information AIX 5.3 < TL6 *\/\n-  char name[IDENTIFIER_LENGTH];         \/* name of the logical partition *\/\n-  perfstat_partition_type_t type;       \/* set of bits describing the partition *\/\n-  int lpar_id;                          \/* logical partition identifier *\/\n-  int group_id;                         \/* identifier of the LPAR group this partition is a member of *\/\n-  int pool_id;                          \/* identifier of the shared pool of physical processors this partition is a member of *\/\n-  int online_cpus;                      \/* number of virtual CPUs currently online on the partition *\/\n-  int max_cpus;                         \/* maximum number of virtual CPUs this partition can ever have *\/\n-  int min_cpus;                         \/* minimum number of virtual CPUs this partition must have *\/\n-  u_longlong_t online_memory;           \/* amount of memory currently online *\/\n-  u_longlong_t max_memory;              \/* maximum amount of memory this partition can ever have *\/\n-  u_longlong_t min_memory;              \/* minimum amount of memory this partition must have *\/\n-  int entitled_proc_capacity;           \/* number of processor units this partition is entitled to receive *\/\n-  int max_proc_capacity;                \/* maximum number of processor units this partition can ever have *\/\n-  int min_proc_capacity;                \/* minimum number of processor units this partition must have *\/\n-  int proc_capacity_increment;          \/* increment value to the entitled capacity *\/\n-  int unalloc_proc_capacity;            \/* number of processor units currently unallocated in the shared processor pool this partition belongs to *\/\n-  int var_proc_capacity_weight;         \/* partition priority weight to receive extra capacity *\/\n-  int unalloc_var_proc_capacity_weight; \/* number of variable processor capacity weight units currently unallocated  in the shared processor pool this partition belongs to *\/\n-  int online_phys_cpus_sys;             \/* number of physical CPUs currently active in the system containing this partition *\/\n-  int max_phys_cpus_sys;                \/* maximum possible number of physical CPUs in the system containing this partition *\/\n-  int phys_cpus_pool;                   \/* number of the physical CPUs currently in the shared processor pool this partition belong to *\/\n-  u_longlong_t puser;                   \/* raw number of physical processor tics in user mode *\/\n-  u_longlong_t psys;                    \/* raw number of physical processor tics in system mode *\/\n-  u_longlong_t pidle;                   \/* raw number of physical processor tics idle *\/\n-  u_longlong_t pwait;                   \/* raw number of physical processor tics waiting for I\/O *\/\n-  u_longlong_t pool_idle_time;          \/* number of clock tics a processor in the shared pool was idle *\/\n-  u_longlong_t phantintrs;              \/* number of phantom interrupts received by the partition *\/\n-  u_longlong_t invol_virt_cswitch;      \/* number involuntary virtual CPU context switches *\/\n-  u_longlong_t vol_virt_cswitch;        \/* number voluntary virtual CPU context switches *\/\n-  u_longlong_t timebase_last;           \/* most recently cpu time base *\/\n-  u_longlong_t reserved_pages;          \/* Currently number of 16GB pages. Cannot participate in DR operations *\/\n-  u_longlong_t reserved_pagesize;       \/* Currently 16GB pagesize Cannot participate in DR operations *\/\n-} perfstat_partition_total_t_53_5;\n-\n-typedef struct { \/* partition total information AIX 5.3 < TL10 *\/\n-  char name[IDENTIFIER_LENGTH];         \/* name of the logical partition *\/\n-  perfstat_partition_type_t type;       \/* set of bits describing the partition *\/\n-  int lpar_id;                          \/* logical partition identifier *\/\n-  int group_id;                         \/* identifier of the LPAR group this partition is a member of *\/\n-  int pool_id;                          \/* identifier of the shared pool of physical processors this partition is a member of *\/\n-  int online_cpus;                      \/* number of virtual CPUs currently online on the partition *\/\n-  int max_cpus;                         \/* maximum number of virtual CPUs this partition can ever have *\/\n-  int min_cpus;                         \/* minimum number of virtual CPUs this partition must have *\/\n-  u_longlong_t online_memory;           \/* amount of memory currently online *\/\n-  u_longlong_t max_memory;              \/* maximum amount of memory this partition can ever have *\/\n-  u_longlong_t min_memory;              \/* minimum amount of memory this partition must have *\/\n-  int entitled_proc_capacity;           \/* number of processor units this partition is entitled to receive *\/\n-  int max_proc_capacity;                \/* maximum number of processor units this partition can ever have *\/\n-  int min_proc_capacity;                \/* minimum number of processor units this partition must have *\/\n-  int proc_capacity_increment;          \/* increment value to the entitled capacity *\/\n-  int unalloc_proc_capacity;            \/* number of processor units currently unallocated in the shared processor pool this partition belongs to *\/\n-  int var_proc_capacity_weight;         \/* partition priority weight to receive extra capacity *\/\n-  int unalloc_var_proc_capacity_weight; \/* number of variable processor capacity weight units currently unallocated  in the shared processor pool this partition belongs to *\/\n-  int online_phys_cpus_sys;             \/* number of physical CPUs currently active in the system containing this partition *\/\n-  int max_phys_cpus_sys;                \/* maximum possible number of physical CPUs in the system containing this partition *\/\n-  int phys_cpus_pool;                   \/* number of the physical CPUs currently in the shared processor pool this partition belong to *\/\n-  u_longlong_t puser;                   \/* raw number of physical processor tics in user mode *\/\n-  u_longlong_t psys;                    \/* raw number of physical processor tics in system mode *\/\n-  u_longlong_t pidle;                   \/* raw number of physical processor tics idle *\/\n-  u_longlong_t pwait;                   \/* raw number of physical processor tics waiting for I\/O *\/\n-  u_longlong_t pool_idle_time;          \/* number of clock tics a processor in the shared pool was idle *\/\n-  u_longlong_t phantintrs;              \/* number of phantom interrupts received by the partition *\/\n-  u_longlong_t invol_virt_cswitch;      \/* number involuntary virtual CPU context switches *\/\n-  u_longlong_t vol_virt_cswitch;        \/* number voluntary virtual CPU context switches *\/\n-  u_longlong_t timebase_last;           \/* most recently cpu time base *\/\n-  u_longlong_t reserved_pages;          \/* Currently number of 16GB pages. Cannot participate in DR operations *\/\n-  u_longlong_t reserved_pagesize;       \/* Currently 16GB pagesize Cannot participate in DR operations *\/\n-  u_longlong_t idle_donated_purr;       \/* number of idle cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t idle_donated_spurr;      \/* number of idle spurr cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t busy_donated_purr;       \/* number of busy cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t busy_donated_spurr;      \/* number of busy spurr cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t idle_stolen_purr;        \/* number of idle cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t idle_stolen_spurr;       \/* number of idle spurr cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t busy_stolen_purr;        \/* number of busy cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t busy_stolen_spurr;       \/* number of busy spurr cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t shcpus_in_sys;           \/* Number of physical processors allocated for shared processor use *\/\n-  u_longlong_t max_pool_capacity;       \/* Maximum processor capacity of partitions pool *\/\n-  u_longlong_t entitled_pool_capacity;  \/* Entitled processor capacity of partitions pool *\/\n-  u_longlong_t pool_max_time;           \/* Summation of maximum time that could be consumed by the pool (nano seconds) *\/\n-  u_longlong_t pool_busy_time;          \/* Summation of busy (non-idle) time accumulated across all partitions in the pool (nano seconds) *\/\n-  u_longlong_t pool_scaled_busy_time;   \/* Scaled summation of busy (non-idle) time accumulated across all partitions in the pool (nano seconds) *\/\n-  u_longlong_t shcpu_tot_time;          \/* Summation of total time across all physical processors allocated for shared processor use (nano seconds) *\/\n-  u_longlong_t shcpu_busy_time;         \/* Summation of busy (non-idle) time accumulated across all shared processor partitions (nano seconds) *\/\n-  u_longlong_t shcpu_scaled_busy_time;  \/* Scaled summation of busy time accumulated across all shared processor partitions (nano seconds) *\/\n-  int ams_pool_id;                      \/* AMS pool id of the pool the LPAR belongs to *\/\n-  int var_mem_weight;                   \/* variable memory capacity weight *\/\n-  u_longlong_t iome;                    \/* I\/O memory entitlement of the partition in bytes*\/\n-  u_longlong_t pmem;                    \/* Physical memory currently backing the partition's logical memory in bytes*\/\n-  u_longlong_t hpi;                     \/* number of hypervisor page-ins *\/\n-  u_longlong_t hpit;                    \/* Time spent in hypervisor page-ins (in nanoseconds)*\/\n-  u_longlong_t hypv_pagesize;           \/* Hypervisor page size in KB*\/\n-} perfstat_partition_total_t_53;\n-\n-typedef struct { \/* partition total information AIX 6.1|5.3 > TL09 *\/\n-  char name[IDENTIFIER_LENGTH];         \/* name of the logical partition *\/\n-  perfstat_partition_type_t type;       \/* set of bits describing the partition *\/\n-  int lpar_id;                          \/* logical partition identifier *\/\n-  int group_id;                         \/* identifier of the LPAR group this partition is a member of *\/\n-  int pool_id;                          \/* identifier of the shared pool of physical processors this partition is a member of *\/\n-  int online_cpus;                      \/* number of virtual CPUs currently online on the partition *\/\n-  int max_cpus;                         \/* maximum number of virtual CPUs this partition can ever have *\/\n-  int min_cpus;                         \/* minimum number of virtual CPUs this partition must have *\/\n-  u_longlong_t online_memory;           \/* amount of memory currently online *\/\n-  u_longlong_t max_memory;              \/* maximum amount of memory this partition can ever have *\/\n-  u_longlong_t min_memory;              \/* minimum amount of memory this partition must have *\/\n-  int entitled_proc_capacity;           \/* number of processor units this partition is entitled to receive *\/\n-  int max_proc_capacity;                \/* maximum number of processor units this partition can ever have *\/\n-  int min_proc_capacity;                \/* minimum number of processor units this partition must have *\/\n-  int proc_capacity_increment;          \/* increment value to the entitled capacity *\/\n-  int unalloc_proc_capacity;            \/* number of processor units currently unallocated in the shared processor pool this partition belongs to *\/\n-  int var_proc_capacity_weight;         \/* partition priority weight to receive extra capacity *\/\n-  int unalloc_var_proc_capacity_weight; \/* number of variable processor capacity weight units currently unallocated  in the shared processor pool this partition belongs to *\/\n-  int online_phys_cpus_sys;             \/* number of physical CPUs currently active in the system containing this partition *\/\n-  int max_phys_cpus_sys;                \/* maximum possible number of physical CPUs in the system containing this partition *\/\n-  int phys_cpus_pool;                   \/* number of the physical CPUs currently in the shared processor pool this partition belong to *\/\n-  u_longlong_t puser;                   \/* raw number of physical processor tics in user mode *\/\n-  u_longlong_t psys;                    \/* raw number of physical processor tics in system mode *\/\n-  u_longlong_t pidle;                   \/* raw number of physical processor tics idle *\/\n-  u_longlong_t pwait;                   \/* raw number of physical processor tics waiting for I\/O *\/\n-  u_longlong_t pool_idle_time;          \/* number of clock tics a processor in the shared pool was idle *\/\n-  u_longlong_t phantintrs;              \/* number of phantom interrupts received by the partition *\/\n-  u_longlong_t invol_virt_cswitch;      \/* number involuntary virtual CPU context switches *\/\n-  u_longlong_t vol_virt_cswitch;        \/* number voluntary virtual CPU context switches *\/\n-  u_longlong_t timebase_last;           \/* most recently cpu time base *\/\n-  u_longlong_t reserved_pages;          \/* Currently number of 16GB pages. Cannot participate in DR operations *\/\n-  u_longlong_t reserved_pagesize;       \/* Currently 16GB pagesize Cannot participate in DR operations *\/\n-  u_longlong_t idle_donated_purr;       \/* number of idle cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t idle_donated_spurr;      \/* number of idle spurr cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t busy_donated_purr;       \/* number of busy cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t busy_donated_spurr;      \/* number of busy spurr cycles donated by a dedicated partition enabled for donation *\/\n-  u_longlong_t idle_stolen_purr;        \/* number of idle cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t idle_stolen_spurr;       \/* number of idle spurr cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t busy_stolen_purr;        \/* number of busy cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t busy_stolen_spurr;       \/* number of busy spurr cycles stolen by the hypervisor from a dedicated partition *\/\n-  u_longlong_t shcpus_in_sys;           \/* Number of physical processors allocated for shared processor use *\/\n-  u_longlong_t max_pool_capacity;       \/* Maximum processor capacity of partitions pool *\/\n-  u_longlong_t entitled_pool_capacity;  \/* Entitled processor capacity of partitions pool *\/\n-  u_longlong_t pool_max_time;           \/* Summation of maximum time that could be consumed by the pool (nano seconds) *\/\n-  u_longlong_t pool_busy_time;          \/* Summation of busy (non-idle) time accumulated across all partitions in the pool (nano seconds) *\/\n-  u_longlong_t pool_scaled_busy_time;   \/* Scaled summation of busy (non-idle) time accumulated across all partitions in the pool (nano seconds) *\/\n-  u_longlong_t shcpu_tot_time;          \/* Summation of total time across all physical processors allocated for shared processor use (nano seconds) *\/\n-  u_longlong_t shcpu_busy_time;         \/* Summation of busy (non-idle) time accumulated across all shared processor partitions (nano seconds) *\/\n-  u_longlong_t shcpu_scaled_busy_time;  \/* Scaled summation of busy time accumulated across all shared processor partitions (nano seconds) *\/\n-  int ams_pool_id;                      \/* AMS pool id of the pool the LPAR belongs to *\/\n-  int var_mem_weight;                   \/* variable memory capacity weight *\/\n-  u_longlong_t iome;                    \/* I\/O memory entitlement of the partition in bytes*\/\n-  u_longlong_t pmem;                    \/* Physical memory currently backing the partition's logical memory in bytes*\/\n-  u_longlong_t hpi;                     \/* number of hypervisor page-ins *\/\n-  u_longlong_t hpit;                    \/* Time spent in hypervisor page-ins (in nanoseconds)*\/\n-  u_longlong_t hypv_pagesize;           \/* Hypervisor page size in KB*\/\n-  uint online_lcpus;                    \/* number of online logical cpus *\/\n-  uint smt_thrds;                       \/* number of hardware threads that are running *\/\n-  u_longlong_t puser_spurr;             \/* number of spurr cycles spent in user mode *\/\n-  u_longlong_t psys_spurr;              \/* number of spurr cycles spent in kernel mode *\/\n-  u_longlong_t pidle_spurr;             \/* number of spurr cycles spent in idle mode *\/\n-  u_longlong_t pwait_spurr;             \/* number of spurr cycles spent in wait mode *\/\n-  int spurrflag;                        \/* set if running in spurr mode *\/\n-} perfstat_partition_total_t_61;\n-\n@@ -944,11 +613,0 @@\n-typedef struct { \/* Workload partition Information AIX 5.3 & 6.1*\/\n-       char name[MAXCORRALNAMELEN+1]; \/* name of the Workload Partition *\/\n-       perfstat_wpar_type_t type;     \/* set of bits describing the wpar *\/\n-       cid_t wpar_id;                 \/* workload partition identifier *\/\n-       uint  online_cpus;             \/* Number of Virtual CPUs in partition rset or  number of virtual CPUs currently online on the Global partition*\/\n-       int   cpu_limit;               \/* CPU limit in 100ths of % - 1..10000 *\/\n-       int   mem_limit;               \/* Memory limit in 100ths of % - 1..10000 *\/\n-       u_longlong_t online_memory;    \/* amount of memory currently online in Global Partition *\/\n-       int entitled_proc_capacity;    \/* number of processor units this partition is entitled to receive *\/\n-} perfstat_wpar_total_t_61;\n-\n@@ -986,1 +644,1 @@\n-\/\/ end: libperfstat.h (AIX 5.2, 5.3, 6.1, 7.1)\n+\/\/ end: libperfstat.h (AIX 7.1)\n","filename":"src\/hotspot\/os\/aix\/libperfstat_aix.hpp","additions":4,"deletions":346,"binary":false,"changes":350,"status":"modified"}]}