{"files":[{"patch":"@@ -414,6 +414,6 @@\n-PhaseStringOpts::CheckAppendResult PhaseStringOpts::check_append_candidate(CallStaticJavaNode* cnode,\n-                                                                           StringConcat* sc,\n-                                                                           ciMethod* m,\n-                                                                           ciSymbol* string_sig,\n-                                                                           ciSymbol* int_sig,\n-                                                                           ciSymbol* char_sig) {\n+PhaseStringOpts::ProcessAppendResult PhaseStringOpts::process_append_candidate(CallStaticJavaNode* cnode,\n+                                                                               StringConcat* sc,\n+                                                                               ciMethod* m,\n+                                                                               ciSymbol* string_sig,\n+                                                                               ciSymbol* int_sig,\n+                                                                               ciSymbol* char_sig) {\n@@ -427,1 +427,1 @@\n-      return CheckAppendResult::GoodAppend;\n+      return ProcessAppendResult::AppendWasAdded;\n@@ -439,1 +439,1 @@\n-      return CheckAppendResult::GiveUp;\n+      return ProcessAppendResult::AbortOptimization;\n@@ -468,1 +468,1 @@\n-    return CheckAppendResult::GoodAppend;\n+    return ProcessAppendResult::AppendWasAdded;\n@@ -470,1 +470,1 @@\n-  return CheckAppendResult::NotAppend;\n+  return ProcessAppendResult::CandidateIsNotAppend;\n@@ -531,1 +531,1 @@\n-        break;\n+        return nullptr;\n@@ -543,1 +543,1 @@\n-        break;\n+        return nullptr;\n@@ -611,3 +611,9 @@\n-        } else if (use != nullptr &&\n-                   check_append_candidate(use, sc, m, string_sig, int_sig, char_sig) == CheckAppendResult::GiveUp) {\n-          return nullptr;\n+        } else if (use != nullptr) {\n+          if (process_append_candidate(use, sc, m, string_sig, int_sig, char_sig) == ProcessAppendResult::AbortOptimization) {\n+            \/\/ We must abort if process_append_candidate tells us to...\n+            return nullptr;\n+          }\n+          \/\/ ...but we do not care if we really found an append or not:\n+          \/\/ - If we found an append, that's perfect. Nothing further to do.\n+          \/\/ - If this is a call to an unrelated method, validate_mem_flow() (and validate_control_flow())\n+          \/\/   will later check if this call prevents the optimization. So nothing to do here.\n@@ -624,1 +630,1 @@\n-        break;\n+        return nullptr;\n@@ -640,1 +646,1 @@\n-      CheckAppendResult result = check_append_candidate(cnode, sc, m, string_sig, int_sig, char_sig);\n+      ProcessAppendResult result = process_append_candidate(cnode, sc, m, string_sig, int_sig, char_sig);\n@@ -642,3 +648,3 @@\n-      if (result == CheckAppendResult::GiveUp) {\n-        break;\n-      } else if (result == CheckAppendResult::NotAppend) {\n+      if (result == ProcessAppendResult::AbortOptimization) {\n+        return nullptr;\n+      } else if (result == ProcessAppendResult::CandidateIsNotAppend) {\n@@ -654,1 +660,1 @@\n-        break;\n+        return nullptr;\n","filename":"src\/hotspot\/share\/opto\/stringopts.cpp","additions":27,"deletions":21,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -56,6 +56,13 @@\n-  enum class CheckAppendResult { GoodAppend,\n-                                 NotAppend,\n-                                 GiveUp };\n-\n-  \/\/ Called from build_candidate. Looks at a call that might be an append. If so, adds it to the StringConcat.\n-  CheckAppendResult check_append_candidate(CallStaticJavaNode* cnode, StringConcat* sc, ciMethod* m, ciSymbol* string_sig, ciSymbol* int_sig, ciSymbol* char_sig);\n+  enum class ProcessAppendResult {\n+    \/\/ Indicates that the candidate was indeed an append and process_append_candidate processed it\n+    \/\/ accordingly (added it to the StringCocat etc.)\n+    AppendWasAdded,\n+    \/\/ The candidate turned out not to be an append call. process_append_candidate did not do anything.\n+    CandidateIsNotAppend,\n+    \/\/ The candidate is an append call, but circumstances completely preventing string concat\n+    \/\/ optimization were detected and the optimization must abort.\n+    AbortOptimization\n+  };\n+\n+  \/\/ Called from build_candidate. Looks at an \"append candidate\", a call that might be a call to StringBuilder::append. If so, adds it to the StringConcat.\n+  ProcessAppendResult process_append_candidate(CallStaticJavaNode* cnode, StringConcat* sc, ciMethod* m, ciSymbol* string_sig, ciSymbol* int_sig, ciSymbol* char_sig);\n","filename":"src\/hotspot\/share\/opto\/stringopts.hpp","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @requires vm.compiler2.enabled\n","filename":"test\/hotspot\/jtreg\/compiler\/stringopts\/TestFluidAndNonFluid.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}