{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.util.jar.JarFile;\n@@ -127,0 +128,38 @@\n+\n+    \/*\n+     * Launches \"jar --update\" and \"jar -u\" by streaming the JAR file content through\n+     * the \"jar\" tool process' STDIN and expects that the command completes normally.\n+     *\/\n+    @Test\n+    public void testUpdate() throws Exception {\n+        for (String opt : new String[]{\"-u\", \"--update\"}) {\n+            \/\/ the updated JAR will be written out to this file\n+            final Path destUpdatedJar = Files.createTempFile(SCRATCH_DIR, \"8345506\", \".jar\");\n+            \/\/ an arbitrary file that will be added to the JAR file as\n+            \/\/ part of the update operation\n+            final Path fileToAdd = Files.createTempFile(SCRATCH_DIR, \"8345506\", \".txt\");\n+            final String expectedNewEntry = fileToAdd.getFileName().toString();\n+            final ProcessBuilder pb = new ProcessBuilder()\n+                    .command(JAR_TOOL.toString(), opt, expectedNewEntry)\n+                    \/\/ stream the JAR file content to the jar command through the process' STDIN\n+                    .redirectInput(SIMPLE_JAR.toFile())\n+                    \/\/ redirect the updated JAR to a file so that its contents can be verified\n+                    \/\/ later\n+                    .redirectOutput(destUpdatedJar.toFile());\n+            final OutputAnalyzer oa = ProcessTools.executeProcess(pb);\n+            oa.shouldHaveExitValue(0);\n+            System.out.println(\"updated JAR file at \" + destUpdatedJar.toAbsolutePath());\n+            \/\/ verify, by listing the updated JAR file contents,\n+            \/\/ that the JAR file has been updated to include the new file\n+            try (final JarFile jar = new JarFile(destUpdatedJar.toFile())) {\n+                jar.stream()\n+                        .map(ZipEntry::getName)\n+                        .filter((name) -> name.equals(expectedNewEntry))\n+                        .findFirst()\n+                        .orElseThrow(\n+                                () -> new AssertionError(\"missing entry \" + expectedNewEntry\n+                                        + \" in updated JAR file \" + destUpdatedJar)\n+                        );\n+            }\n+        }\n+    }\n","filename":"test\/jdk\/tools\/jar\/JarNoFileArgOperations.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"modified"}]}