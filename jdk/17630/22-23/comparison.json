{"files":[{"patch":"@@ -66,1 +66,0 @@\n-import org.openide.util.RequestProcessor;\n@@ -80,1 +79,0 @@\n-    private static final RequestProcessor RP = new RequestProcessor(\"OutlineTopComponent\", 1);\n@@ -92,0 +90,1 @@\n+    private static final Server server = new Server(document, OutlineTopComponent::loadContext);\n@@ -109,1 +108,1 @@\n-        initReceivers();\n+        server.startServer();\n@@ -234,4 +233,0 @@\n-    private void initReceivers() {\n-        new Server(document, this::loadContext);\n-    }\n-\n@@ -466,5 +461,3 @@\n-    private void loadContext(GraphContext context) {\n-        RP.post(() -> {\n-            final GraphViewer viewer = Lookup.getDefault().lookup(GraphViewer.class);\n-            assert viewer != null;\n-\n+    private static void loadContext(GraphContext context) {\n+        final GraphViewer viewer = Lookup.getDefault().lookup(GraphViewer.class);\n+        if (viewer != null) {\n@@ -493,1 +486,1 @@\n-        });\n+        }\n@@ -501,14 +494,13 @@\n-        RP.post(() -> {\n-            if (path == null || Files.notExists(Path.of(path))) {\n-                return;\n-            }\n-            File file = new File(path);\n-            final FileChannel channel;\n-            final long start;\n-            try {\n-                channel = FileChannel.open(file.toPath(), StandardOpenOption.READ);\n-                start = channel.size();\n-            } catch (Exception ex) {\n-                Exceptions.printStackTrace(ex);\n-                return;\n-            }\n+        if (path == null || Files.notExists(Path.of(path))) {\n+            return;\n+        }\n+        File file = new File(path);\n+        final FileChannel channel;\n+        final long start;\n+        try {\n+            channel = FileChannel.open(file.toPath(), StandardOpenOption.READ);\n+            start = channel.size();\n+        } catch (Exception ex) {\n+            Exceptions.printStackTrace(ex);\n+            return;\n+        }\n@@ -516,2 +508,2 @@\n-            final ProgressHandle handle = ProgressHandleFactory.createHandle(\"Opening file \" + file.getName());\n-            handle.start(WORK_UNITS);\n+        final ProgressHandle handle = ProgressHandleFactory.createHandle(\"Opening file \" + file.getName());\n+        handle.start(WORK_UNITS);\n@@ -519,8 +511,7 @@\n-            ParseMonitor monitor = new ParseMonitor() {\n-                @Override\n-                public void updateProgress() {\n-                    try {\n-                        int prog = (int) (WORK_UNITS * (double) channel.position() \/ (double) start);\n-                        handle.progress(prog);\n-                    } catch (IOException ignored) {\n-                    }\n+        ParseMonitor monitor = new ParseMonitor() {\n+            @Override\n+            public void updateProgress() {\n+                try {\n+                    int prog = (int) (WORK_UNITS * (double) channel.position() \/ (double) start);\n+                    handle.progress(prog);\n+                } catch (IOException ignored) {\n@@ -528,0 +519,1 @@\n+            }\n@@ -529,4 +521,15 @@\n-                @Override\n-                public void setState(String state) {\n-                    updateProgress();\n-                    handle.progress(state);\n+            @Override\n+            public void setState(String state) {\n+                updateProgress();\n+                handle.progress(state);\n+            }\n+        };\n+        try {\n+            if (file.getName().endsWith(\".xml\")) {\n+                final Parser parser = new Parser(channel, monitor, document, loadContext ? OutlineTopComponent::loadContext : null);\n+                parser.parse();\n+\n+                for (Node child : manager.getRootContext().getChildren().getNodes(true)) {\n+                    \/\/ Nodes a lazily created. By expanding and collapsing they are all initialized\n+                    ((BeanTreeView) this.treeView).expandNode(child);\n+                    ((BeanTreeView) this.treeView).collapseNode(child);\n@@ -534,11 +537,0 @@\n-            };\n-            try {\n-                if (file.getName().endsWith(\".xml\")) {\n-                    final Parser parser = new Parser(channel, monitor, document, loadContext ? this::loadContext : null);\n-                    parser.parse();\n-\n-                    for (Node child : manager.getRootContext().getChildren().getNodes(true)) {\n-                        \/\/ Nodes a lazily created. By expanding and collapsing they are all initialized\n-                        ((BeanTreeView) this.treeView).expandNode(child);\n-                        ((BeanTreeView) this.treeView).collapseNode(child);\n-                    }\n@@ -546,4 +538,1 @@\n-                    SwingUtilities.invokeLater(this::requestActive);\n-                }\n-            } catch (IOException ex) {\n-                Exceptions.printStackTrace(ex);\n+                SwingUtilities.invokeLater(this::requestActive);\n@@ -551,2 +540,4 @@\n-            handle.finish();\n-        });\n+        } catch (IOException ex) {\n+            Exceptions.printStackTrace(ex);\n+        }\n+        handle.finish();\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":49,"deletions":58,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import javax.swing.SwingUtilities;\n@@ -97,0 +98,1 @@\n+    private final Set<GraphContext> contexts = new HashSet<>();\n@@ -101,0 +103,2 @@\n+    private boolean invokeLater = true;\n+\n@@ -144,1 +148,1 @@\n-                contextAction.performAction(graphContext);\n+                contexts.add(graphContext);\n@@ -334,1 +338,5 @@\n-                folder.addElement(group);\n+                if (invokeLater) {\n+                    SwingUtilities.invokeLater(() -> folder.addElement(group));\n+                } else {\n+                    folder.addElement(group);\n+                }\n@@ -423,1 +431,11 @@\n-            parent.addElement(graph);\n+            if (invokeLater) {\n+                SwingUtilities.invokeLater(() -> parent.addElement(graph));\n+            } else {\n+                parent.addElement(graph);\n+            }\n+            if (contextAction != null) {\n+                for (GraphContext ctx : contexts) {\n+                    contextAction.performAction(ctx);\n+                }\n+            }\n+            contexts.clear();\n@@ -434,1 +452,5 @@\n-                callbackDocument.addElement(group);\n+                if (invokeLater) {\n+                    SwingUtilities.invokeLater(() -> callbackDocument.addElement(group));\n+                } else {\n+                    callbackDocument.addElement(group);\n+                }\n@@ -541,0 +563,6 @@\n+    \/\/ Whether the parser is allowed to defer connecting the parsed elements.\n+    \/\/ Setting to false is useful for synchronization in unit tests.\n+    public void setInvokeLater(boolean invokeLater) {\n+        this.invokeLater = invokeLater;\n+    }\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/Parser.java","additions":32,"deletions":4,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -75,0 +75,1 @@\n+            parser.setInvokeLater(false);\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/test\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/ParserTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,65 +0,0 @@\n-\/*\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package com.sun.hotspot.igv.connection;\n-\n-import com.sun.hotspot.igv.data.GraphDocument;\n-import com.sun.hotspot.igv.data.serialization.Parser;\n-import com.sun.hotspot.igv.data.serialization.Printer.GraphContextAction;\n-\n-import java.io.IOException;\n-import java.nio.channels.SocketChannel;\n-import org.openide.util.Exceptions;\n-\n-public class Client implements Runnable {\n-    private final SocketChannel socket;\n-    private final GraphDocument callbackDocument;\n-    private final GraphContextAction contextAction;\n-\n-\n-    public Client(SocketChannel socket, GraphDocument callbackDocument, GraphContextAction contextAction) {\n-        this.callbackDocument = callbackDocument;\n-        this.contextAction = contextAction;\n-        this.socket = socket;\n-    }\n-\n-    @Override\n-    public void run() {\n-\n-        try {\n-            final SocketChannel channel = socket;\n-            channel.configureBlocking(true);\n-            channel.socket().getOutputStream().write('y');\n-            new Parser(channel, null, callbackDocument, contextAction).parse();\n-        } catch (IOException ex) {\n-            Exceptions.printStackTrace(ex);\n-        } finally {\n-            try {\n-                socket.close();\n-            } catch (IOException ex) {\n-                Exceptions.printStackTrace(ex);\n-            }\n-        }\n-    }\n-}\n","filename":"src\/utils\/IdealGraphVisualizer\/NetworkConnection\/src\/main\/java\/com\/sun\/hotspot\/igv\/connection\/Client.java","additions":0,"deletions":65,"binary":false,"changes":65,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import com.sun.hotspot.igv.data.serialization.Parser;\n@@ -36,3 +37,0 @@\n-import org.openide.DialogDisplayer;\n-import org.openide.NotifyDescriptor;\n-import org.openide.util.RequestProcessor;\n@@ -49,1 +47,2 @@\n-    private Runnable serverRunnable;\n+\n+    private volatile boolean isServerRunning;\n@@ -54,1 +53,1 @@\n-        initializeNetwork();\n+        port = Integer.parseInt(Settings.get().get(Settings.PORT, Settings.PORT_DEFAULT));\n@@ -62,1 +61,3 @@\n-            initializeNetwork();\n+            port = curPort;\n+            shutdownServer();\n+            startServer();\n@@ -66,3 +67,3 @@\n-    private void initializeNetwork() {\n-        int curPort = Integer.parseInt(Settings.get().get(Settings.PORT, Settings.PORT_DEFAULT));\n-        this.port = curPort;\n+    public void startServer() {\n+        isServerRunning = true;\n+\n@@ -71,4 +72,3 @@\n-            serverSocket.bind(new InetSocketAddress(curPort));\n-        } catch (Throwable ex) {\n-            NotifyDescriptor message = new NotifyDescriptor.Message(\"Could not create server. Listening for incoming data is disabled.\", NotifyDescriptor.ERROR_MESSAGE);\n-            DialogDisplayer.getDefault().notifyLater(message);\n+            serverSocket.bind(new InetSocketAddress(port));\n+        } catch (IOException ex) {\n+            ex.printStackTrace();\n@@ -78,17 +78,6 @@\n-        Runnable runnable = new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                while (true) {\n-                    try {\n-                        SocketChannel clientSocket = serverSocket.accept();\n-                        if (serverRunnable != this) {\n-                            clientSocket.close();\n-                            return;\n-                        }\n-                        RequestProcessor requestProcessor = new RequestProcessor();\n-                        requestProcessor.post(new Client(clientSocket, graphDocument, contextAction), 0, Thread.MAX_PRIORITY);\n-                    } catch (IOException ex) {\n-                        serverSocket = null;\n-                        NotifyDescriptor message = new NotifyDescriptor.Message(\"Error during listening for incoming connections. Listening for incoming data is disabled.\", NotifyDescriptor.ERROR_MESSAGE);\n-                        DialogDisplayer.getDefault().notifyLater(message);\n+        Runnable client = () -> {\n+            while (isServerRunning) {\n+                try {\n+                    SocketChannel clientSocket = serverSocket.accept();\n+                    if (!isServerRunning) {\n+                        clientSocket.close();\n@@ -97,0 +86,12 @@\n+                    new Thread(() -> {\n+                        try (clientSocket) {\n+                            clientSocket.configureBlocking(true);\n+                            clientSocket.socket().getOutputStream().write('y');\n+                            new Parser(clientSocket, null, graphDocument, contextAction).parse();\n+                        } catch (IOException ignored) {}\n+                    }).start();\n+                } catch (IOException ex) {\n+                    if (isServerRunning) {\n+                        ex.printStackTrace();\n+                    }\n+                    return;\n@@ -99,0 +100,7 @@\n+            try {\n+                if (serverSocket != null) {\n+                    serverSocket.close();\n+                }\n+            } catch (IOException ex) {\n+                ex.printStackTrace();\n+            }\n@@ -101,1 +109,2 @@\n-        serverRunnable = runnable;\n+        new Thread(client).start();\n+    }\n@@ -103,1 +112,9 @@\n-        RequestProcessor.getDefault().post(runnable, 0, Thread.MAX_PRIORITY);\n+    public void shutdownServer() {\n+        isServerRunning = false;\n+        try {\n+            if (serverSocket != null) {\n+                serverSocket.close();\n+            }\n+        } catch (IOException ex) {\n+            ex.printStackTrace();\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/NetworkConnection\/src\/main\/java\/com\/sun\/hotspot\/igv\/connection\/Server.java","additions":50,"deletions":33,"binary":false,"changes":83,"status":"modified"}]}