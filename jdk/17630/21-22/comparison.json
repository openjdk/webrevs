{"files":[{"patch":"@@ -35,1 +35,0 @@\n-import com.sun.hotspot.igv.data.serialization.Printer.SerialData;\n@@ -37,1 +36,0 @@\n-import com.sun.hotspot.igv.data.services.GroupCallback;\n@@ -51,0 +49,1 @@\n+import java.util.concurrent.atomic.AtomicBoolean;\n@@ -171,1 +170,1 @@\n-            Printer.exportGraphDocument(writer, new SerialData<>(doc, saveContexts));\n+            Printer.exportGraphDocument(writer, doc, saveContexts);\n@@ -178,2 +177,6 @@\n-        Set<Integer> visibleNodes = new HashSet<>(etc.getModel().getVisibleNodes());\n-        return new GraphContext(openedGraph, new AtomicInteger(posDiff), visibleNodes);\n+        if (etc.getModel().getHiddenNodes().isEmpty()) {\n+            return new GraphContext(openedGraph, new AtomicInteger(posDiff), new HashSet<>(), new AtomicBoolean(true));\n+        } else {\n+            Set<Integer> visibleNodes = new HashSet<>(etc.getModel().getVisibleNodes());\n+            return new GraphContext(openedGraph, new AtomicInteger(posDiff), visibleNodes, new AtomicBoolean(false));\n+        }\n@@ -232,9 +235,1 @@\n-\n-        final GroupCallback callback = g -> {\n-            synchronized(OutlineTopComponent.this) {\n-                g.setParent(getDocument());\n-                getDocument().addElement(g);\n-            }\n-        };\n-\n-        new Server(callback);\n+        new Server(document, this::loadContext);\n@@ -469,1 +464,1 @@\n-     * Loads and opens the given set of graph contexts (opened graphs and visible nodes).\n+     * Loads and opens the given a graph contexts (opened graphs and visible nodes).\n@@ -471,1 +466,1 @@\n-    private void loadContexts(Set<GraphContext> contexts) {\n+    private void loadContext(GraphContext context) {\n@@ -475,1 +470,0 @@\n-            for (GraphContext context : contexts) {\n@@ -477,9 +471,13 @@\n-                final int difference = context.posDiff().get();\n-                final Set<Integer> visibleNodes = context.visibleNodes();\n-                final InputGraph firstGraph = context.inputGraph();\n-\n-                SwingUtilities.invokeLater(() -> {\n-                    InputGraph openedGraph = viewer.view(firstGraph, true);\n-                    if (openedGraph != null) {\n-                        EditorTopComponent etc = EditorTopComponent.findEditorForGraph(firstGraph);\n-                        if (etc != null) {\n+            final int difference = context.posDiff().get();\n+            final InputGraph firstGraph = context.inputGraph();\n+            final Set<Integer> visibleNodes = context.visibleNodes();\n+            final boolean showAll = context.showAll().get();\n+\n+            SwingUtilities.invokeLater(() -> {\n+                InputGraph openedGraph = viewer.view(firstGraph, true);\n+                if (openedGraph != null) {\n+                    EditorTopComponent etc = EditorTopComponent.findEditorForGraph(firstGraph);\n+                    if (etc != null) {\n+                        if (showAll) {\n+                            etc.getModel().setHiddenNodes(new HashSet<>());\n+                        } else {\n@@ -487,4 +485,4 @@\n-                            if (difference > 0) {\n-                                int firstGraphIdx = firstGraph.getIndex();\n-                                etc.getModel().setPositions(firstGraphIdx, firstGraphIdx + difference);\n-                            }\n+                        }\n+                        if (difference > 0) {\n+                            int firstGraphIdx = firstGraph.getIndex();\n+                            etc.getModel().setPositions(firstGraphIdx, firstGraphIdx + difference);\n@@ -493,2 +491,2 @@\n-                });\n-            }\n+                }\n+            });\n@@ -539,4 +537,2 @@\n-                    final Parser parser = new Parser(channel, monitor, null);\n-                    final SerialData<GraphDocument> parsedData = parser.parse();\n-                    final GraphDocument parsedDoc = parsedData.data();\n-                    getDocument().addGraphDocument(parsedDoc);\n+                    final Parser parser = new Parser(channel, monitor, document, loadContext ? this::loadContext : null);\n+                    parser.parse();\n@@ -550,3 +546,0 @@\n-                    if (loadContext) {\n-                        loadContexts(parsedData.contexts());\n-                    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":32,"deletions":39,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import com.sun.hotspot.igv.data.serialization.Printer.SerialData;\n+import com.sun.hotspot.igv.data.GraphDocument;\n@@ -31,1 +31,1 @@\n-    SerialData parse() throws IOException;\n+    GraphDocument parse() throws IOException;\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/GraphParser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-import com.sun.hotspot.igv.data.serialization.Printer.SerialData;\n+import com.sun.hotspot.igv.data.serialization.Printer.GraphContextAction;\n@@ -33,1 +33,0 @@\n-import com.sun.hotspot.igv.data.services.GroupCallback;\n@@ -38,0 +37,1 @@\n+import java.util.concurrent.atomic.AtomicBoolean;\n@@ -67,1 +67,1 @@\n-\n+    public static final String ALL_PROPERTY = \"all\";\n@@ -92,1 +92,1 @@\n-    private final TopElementHandler<SerialData<GraphDocument>> xmlData = new TopElementHandler<>();\n+    private final TopElementHandler<GraphDocument> xmlData = new TopElementHandler<>();\n@@ -95,1 +95,2 @@\n-    private final GroupCallback groupCallback;\n+    private final GraphDocument callbackDocument;\n+    private final GraphContextAction contextAction;\n@@ -101,1 +102,1 @@\n-    private final ElementHandler<InputMethod, SerialData<Group>> methodHandler = new XMLParser.ElementHandler<>(METHOD_ELEMENT) {\n+    private final ElementHandler<InputMethod, Group> methodHandler = new XMLParser.ElementHandler<>(METHOD_ELEMENT) {\n@@ -105,1 +106,1 @@\n-            Group group = getParentObject().data();\n+            Group group = getParentObject();\n@@ -132,1 +133,1 @@\n-    private final HandoverElementHandler<SerialData<InputGraph>> nodesHandler = new HandoverElementHandler<>(NODES_ELEMENT);\n+    private final HandoverElementHandler<InputGraph> nodesHandler = new HandoverElementHandler<>(NODES_ELEMENT);\n@@ -134,3 +135,3 @@\n-    private final HandoverElementHandler<SerialData<InputGraph>> controlFlowHandler = new HandoverElementHandler<>(CONTROL_FLOW_ELEMENT);\n-    private final HandoverElementHandler<SerialData<InputGraph>> graphStatesHandler = new HandoverElementHandler<>(GRAPH_STATES_ELEMENT);\n-    private final ElementHandler<GraphContext, SerialData<InputGraph>> stateHandler = new ElementHandler<>(STATE_ELEMENT) {\n+    private final HandoverElementHandler<InputGraph> controlFlowHandler = new HandoverElementHandler<>(CONTROL_FLOW_ELEMENT);\n+    private final HandoverElementHandler<InputGraph> graphStatesHandler = new HandoverElementHandler<>(GRAPH_STATES_ELEMENT);\n+    private final ElementHandler<GraphContext, InputGraph> stateHandler = new ElementHandler<>(STATE_ELEMENT) {\n@@ -140,4 +141,5 @@\n-            SerialData<InputGraph> data = getParentObject();\n-            InputGraph inputGraph = data.data();\n-            GraphContext graphContext = new GraphContext(inputGraph, new AtomicInteger(0), new HashSet<>());\n-            data.contexts().add(graphContext);\n+            InputGraph inputGraph = getParentObject();\n+            GraphContext graphContext = new GraphContext(inputGraph, new AtomicInteger(0), new HashSet<>(), new AtomicBoolean(false));\n+            if (contextAction != null) {\n+                contextAction.performAction(graphContext);\n+            }\n@@ -147,1 +149,14 @@\n-    private final HandoverElementHandler<GraphContext> visibleNodesHandler = new HandoverElementHandler<>(VISIBLE_NODES_ELEMENT);\n+    private final ElementHandler<GraphContext, GraphContext> visibleNodesHandler = new ElementHandler<>(VISIBLE_NODES_ELEMENT) {\n+\n+        @Override\n+        protected GraphContext start() throws SAXException {\n+            String s = readRequiredAttribute(ALL_PROPERTY);\n+            try {\n+                boolean all = Boolean.parseBoolean(s);\n+                getParentObject().showAll().set(all);\n+            } catch (NumberFormatException e) {\n+                throw new SAXException(e);\n+            }\n+            return getParentObject();\n+        }\n+    };\n@@ -179,1 +194,1 @@\n-    private final ElementHandler<InputBlock, SerialData<InputGraph>> blockHandler = new ElementHandler<>(BLOCK_ELEMENT) {\n+    private final ElementHandler<InputBlock, InputGraph> blockHandler = new ElementHandler<>(BLOCK_ELEMENT) {\n@@ -183,1 +198,1 @@\n-            InputGraph graph = getParentObject().data();\n+            InputGraph graph = getParentObject();\n@@ -207,1 +222,1 @@\n-    private final HandoverElementHandler<SerialData<InputGraph>> edgesHandler = new HandoverElementHandler<>(EDGES_ELEMENT);\n+    private final HandoverElementHandler<InputGraph> edgesHandler = new HandoverElementHandler<>(EDGES_ELEMENT);\n@@ -213,1 +228,2 @@\n-            getParentObject().data().addEdge(conn);\n+            InputGraph inputGraph = getParentObject();\n+            inputGraph.addEdge(conn);\n@@ -222,1 +238,1 @@\n-            getParentObject().data().removeEdge(conn);\n+            getParentObject().removeEdge(conn);\n@@ -260,1 +276,1 @@\n-    private final ElementHandler<InputNode, SerialData<InputGraph>> nodeHandler = new ElementHandler<>(NODE_ELEMENT) {\n+    private final ElementHandler<InputNode, InputGraph> nodeHandler = new ElementHandler<>(NODE_ELEMENT) {\n@@ -272,1 +288,1 @@\n-            getParentObject().data().addNode(node);\n+            getParentObject().addNode(node);\n@@ -277,1 +293,1 @@\n-    private final ElementHandler<InputNode, SerialData<InputGraph>> removeNodeHandler = new ElementHandler<>(REMOVE_NODE_ELEMENT) {\n+    private final ElementHandler<InputNode, InputGraph> removeNodeHandler = new ElementHandler<>(REMOVE_NODE_ELEMENT) {\n@@ -288,1 +304,1 @@\n-            return getParentObject().data().removeNode(id);\n+            return getParentObject().removeNode(id);\n@@ -291,1 +307,1 @@\n-    private SerialData<GraphDocument> serialData;\n+    private GraphDocument graphDocument;\n@@ -293,1 +309,1 @@\n-    private final ElementHandler<SerialData<GraphDocument>, Object> topHandler = new ElementHandler<>(TOP_ELEMENT) {\n+    private final ElementHandler<GraphDocument, Object> topHandler = new ElementHandler<>(TOP_ELEMENT) {\n@@ -296,3 +312,3 @@\n-        protected SerialData<GraphDocument> start() {\n-            serialData = new SerialData<>(new GraphDocument(), new HashSet<>());\n-            return serialData;\n+        protected GraphDocument start() {\n+            graphDocument = new GraphDocument();\n+            return graphDocument;\n@@ -302,1 +318,1 @@\n-    private final ElementHandler<SerialData<Group>, SerialData<? extends Folder>> groupHandler = new XMLParser.ElementHandler<>(GROUP_ELEMENT) {\n+    private final ElementHandler<Group, Folder> groupHandler = new XMLParser.ElementHandler<>(GROUP_ELEMENT) {\n@@ -305,2 +321,2 @@\n-        protected SerialData<Group> start() {\n-            final Folder folder = getParentObject().data();\n+        protected Group start() {\n+            final Folder folder = getParentObject();\n@@ -317,1 +333,1 @@\n-            if (groupCallback == null || folder instanceof Group) {\n+            if (callbackDocument == null || folder instanceof Group) {\n@@ -321,1 +337,1 @@\n-            return new SerialData<>(group, getParentObject().contexts());\n+            return group;\n@@ -329,1 +345,1 @@\n-    private final ElementHandler<SerialData<InputGraph>, SerialData<Group>> graphHandler = new XMLParser.ElementHandler<>(GRAPH_ELEMENT) {\n+    private final ElementHandler<InputGraph, Group> graphHandler = new XMLParser.ElementHandler<>(GRAPH_ELEMENT) {\n@@ -332,2 +348,2 @@\n-        protected SerialData<InputGraph> start() {\n-            Group group = getParentObject().data();\n+        protected InputGraph start() {\n+            Group group = getParentObject();\n@@ -352,1 +368,1 @@\n-            return new SerialData<>(curGraph, new HashSet<>());\n+            return curGraph;\n@@ -364,1 +380,1 @@\n-            final InputGraph graph = getObject().data();\n+            final InputGraph graph = getObject();\n@@ -366,1 +382,1 @@\n-            final Group parent = getParentObject().data();\n+            final Group parent = getParentObject();\n@@ -408,1 +424,0 @@\n-            getParentObject().contexts().addAll(getObject().contexts());\n@@ -412,1 +427,1 @@\n-    private final HandoverElementHandler<SerialData<Group>> groupPropertiesHandler = new HandoverElementHandler<>(PROPERTIES_ELEMENT) {\n+    private final HandoverElementHandler<Group> groupPropertiesHandler = new HandoverElementHandler<>(PROPERTIES_ELEMENT) {\n@@ -416,3 +431,4 @@\n-            final Group group = getParentObject().data();\n-            if (groupCallback != null && group.getParent() instanceof GraphDocument) {\n-                groupCallback.started(group);\n+            final Group group = getParentObject();\n+            if (callbackDocument != null && group.getParent() instanceof GraphDocument) {\n+                group.setParent(callbackDocument);\n+                callbackDocument.addElement(group);\n@@ -422,4 +438,0 @@\n-    public Parser(ReadableByteChannel channel) {\n-        this(channel, null, null);\n-    }\n-    public Parser(ReadableByteChannel channel, ParseMonitor monitor, GroupCallback groupCallback) {\n@@ -427,1 +439,3 @@\n-        this.groupCallback = groupCallback;\n+    public Parser(ReadableByteChannel channel, ParseMonitor monitor, GraphDocument callbackDocument, GraphContextAction contextAction) {\n+        this.callbackDocument = callbackDocument;\n+        this.contextAction = contextAction;\n@@ -505,1 +519,1 @@\n-    public SerialData<GraphDocument> parse() throws IOException {\n+    public GraphDocument parse() throws IOException {\n@@ -524,1 +538,1 @@\n-        return serialData;\n+        return graphDocument;\n@@ -539,1 +553,1 @@\n-    private class EdgeElementHandler extends ElementHandler<InputEdge, SerialData<InputGraph>> {\n+    private class EdgeElementHandler extends ElementHandler<InputEdge, InputGraph> {\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/Parser.java","additions":68,"deletions":54,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.concurrent.atomic.AtomicBoolean;\n@@ -40,4 +41,1 @@\n-\n-    public static void exportGraphDocument(Writer writer, SerialData<Folder> serialData) {\n-        Folder folder = serialData.data();\n-        Set<GraphContext> contexts = serialData.contexts();\n+    public static void exportGraphDocument(Writer writer, Folder folder, Set<GraphContext> contexts) {\n@@ -198,1 +196,1 @@\n-            writer.startTag(Parser.VISIBLE_NODES_ELEMENT);\n+            writer.startTag(Parser.VISIBLE_NODES_ELEMENT, new Properties(Parser.ALL_PROPERTY, Boolean.toString(context.showAll().get())));\n@@ -202,1 +200,1 @@\n-            writer.endTag(); \/\/ Parser.HIDDEN_NODES_ELEMENT\n+            writer.endTag(); \/\/ Parser.VISIBLE_NODES_ELEMENT\n@@ -254,1 +252,1 @@\n-    public record GraphContext(InputGraph inputGraph, AtomicInteger posDiff, Set<Integer> visibleNodes) { }\n+    public record GraphContext(InputGraph inputGraph, AtomicInteger posDiff, Set<Integer> visibleNodes, AtomicBoolean showAll) { }\n@@ -256,6 +254,2 @@\n-    public record SerialData<T extends Properties.Provider>(T data,\n-                                                            Set<GraphContext> contexts) implements Properties.Provider {\n-        @Override\n-        public Properties getProperties() {\n-            return data.getProperties();\n-        }\n+    public interface GraphContextAction {\n+        void performAction(GraphContext context);\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/Printer.java","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1,36 +0,0 @@\n-\/*\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package com.sun.hotspot.igv.data.services;\n-\n-import com.sun.hotspot.igv.data.Group;\n-\n-\/**\n- *\n- * @author Thomas Wuerthinger\n- *\/\n-public interface GroupCallback {\n-\n-    public void started(Group g);\n-}\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/services\/GroupCallback.java","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -67,1 +67,1 @@\n-        Printer.exportGraphDocument(writer, new Printer.SerialData<>(document, new HashSet<>()));\n+        Printer.exportGraphDocument(writer, document, new HashSet<>());\n@@ -74,4 +74,3 @@\n-            Parser parser = new Parser(Channels.newChannel(in));\n-            final Printer.SerialData<GraphDocument> exportData = parser.parse();\n-            final GraphDocument parsedDocument = exportData.data();\n-            Util.assertGraphDocumentEquals(document, parsedDocument);\n+            Parser parser = new Parser(Channels.newChannel(in), null, null, null);\n+            final GraphDocument exportData = parser.parse();\n+            Util.assertGraphDocumentEquals(document, exportData);\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/test\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/ParserTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import com.sun.hotspot.igv.data.GraphDocument;\n@@ -28,1 +29,2 @@\n-import com.sun.hotspot.igv.data.services.GroupCallback;\n+import com.sun.hotspot.igv.data.serialization.Printer.GraphContextAction;\n+\n@@ -35,1 +37,3 @@\n-    private final GroupCallback callback;\n+    private final GraphDocument callbackDocument;\n+    private final GraphContextAction contextAction;\n+\n@@ -37,2 +41,3 @@\n-    public Client(SocketChannel socket, GroupCallback callback) {\n-        this.callback = callback;\n+    public Client(SocketChannel socket, GraphDocument callbackDocument, GraphContextAction contextAction) {\n+        this.callbackDocument = callbackDocument;\n+        this.contextAction = contextAction;\n@@ -49,1 +54,1 @@\n-            new Parser(channel, null, callback).parse();\n+            new Parser(channel, null, callbackDocument, contextAction).parse();\n","filename":"src\/utils\/IdealGraphVisualizer\/NetworkConnection\/src\/main\/java\/com\/sun\/hotspot\/igv\/connection\/Client.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -27,1 +27,2 @@\n-import com.sun.hotspot.igv.data.services.GroupCallback;\n+import com.sun.hotspot.igv.data.GraphDocument;\n+import com.sun.hotspot.igv.data.serialization.Printer.GraphContextAction;\n@@ -45,1 +46,2 @@\n-    private final GroupCallback callback;\n+    private final GraphDocument graphDocument;\n+    private final GraphContextAction contextAction;\n@@ -49,2 +51,3 @@\n-    public Server(GroupCallback callback) {\n-        this.callback = callback;\n+    public Server(GraphDocument graphDocument, GraphContextAction contextAction) {\n+        this.graphDocument = graphDocument;\n+        this.contextAction = contextAction;\n@@ -87,1 +90,1 @@\n-                        requestProcessor.post(new Client(clientSocket, callback), 0, Thread.MAX_PRIORITY);\n+                        requestProcessor.post(new Client(clientSocket, graphDocument, contextAction), 0, Thread.MAX_PRIORITY);\n","filename":"src\/utils\/IdealGraphVisualizer\/NetworkConnection\/src\/main\/java\/com\/sun\/hotspot\/igv\/connection\/Server.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}