{"files":[{"patch":"@@ -28,1 +28,4 @@\n-import com.sun.hotspot.igv.data.*;\n+import com.sun.hotspot.igv.data.ChangedListener;\n+import com.sun.hotspot.igv.data.GraphDocument;\n+import com.sun.hotspot.igv.data.Group;\n+import com.sun.hotspot.igv.data.InputGraph;\n@@ -62,1 +65,4 @@\n-import org.openide.util.*;\n+import org.openide.util.Exceptions;\n+import org.openide.util.Lookup;\n+import org.openide.util.NbBundle;\n+import org.openide.util.RequestProcessor;\n@@ -68,1 +74,0 @@\n- *\n@@ -73,1 +78,0 @@\n-    public static OutlineTopComponent instance;\n@@ -75,1 +79,0 @@\n-    private ExplorerManager manager;\n@@ -77,0 +80,16 @@\n+    private static final int WORK_UNITS = 10000;\n+    private static final RequestProcessor RP = new RequestProcessor(\"OutlineTopComponent\", 1);\n+    private static final FileFilter xmlFileFilter = new FileFilter() {\n+        @Override\n+        public boolean accept(File f) {\n+            return f.getName().toLowerCase().endsWith(\".xml\") || f.isDirectory();\n+        }\n+\n+        @Override\n+        public String getDescription() {\n+            return \"Graph files (*.xml)\";\n+        }\n+    };\n+    public static OutlineTopComponent instance;\n+    private final Set<FolderNode> selectedFolders = new HashSet<>();\n+    private ExplorerManager manager;\n@@ -82,3 +101,0 @@\n-    private final Set<FolderNode> selectedFolders = new HashSet<>();\n-    private static final int WORK_UNITS = 10000;\n-    private static final RequestProcessor RP = new RequestProcessor(\"OutlineTopComponent\", 1);\n@@ -86,1 +102,2 @@\n-\n+    \/\/ Variables declaration - do not modify\/\/GEN-BEGIN:variables\n+    private JScrollPane treeView;\n@@ -97,0 +114,78 @@\n+    public static GraphDocument getDocument() {\n+        return document;\n+    }\n+\n+    \/**\n+     * Gets default instance. Do not use directly: reserved for *.settings files only,\n+     * i.e. deserialization routines; otherwise you could get a non-deserialized instance.\n+     * To obtain the singleton instance, use {@link #findInstance()}.\n+     *\/\n+    public static synchronized OutlineTopComponent getDefault() {\n+        if (instance == null) {\n+            instance = new OutlineTopComponent();\n+        }\n+        return instance;\n+    }\n+\n+    \/**\n+     * Obtain the OutlineTopComponent instance. Never call {@link #getDefault} directly!\n+     *\/\n+    public static synchronized OutlineTopComponent findInstance() {\n+        TopComponent win = WindowManager.getDefault().findTopComponent(PREFERRED_ID);\n+        if (win == null) {\n+            ErrorManager.getDefault().log(ErrorManager.WARNING, \"Cannot find Outline component. It will not be located properly in the window system.\");\n+            return getDefault();\n+        }\n+        if (win instanceof OutlineTopComponent) {\n+            return (OutlineTopComponent) win;\n+        }\n+        ErrorManager.getDefault().log(ErrorManager.WARNING, \"There seem to be multiple components with the '\" + PREFERRED_ID + \"' ID. That is a potential source of errors and unexpected behavior.\");\n+        return getDefault();\n+    }\n+\n+    public static void exportToXML(GraphDocument doc) {\n+        JFileChooser fc = new JFileChooser();\n+        fc.setFileFilter(xmlFileFilter);\n+        fc.setCurrentDirectory(new File(Settings.get().get(Settings.DIRECTORY, Settings.DIRECTORY_DEFAULT)));\n+        if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {\n+            String path = fc.getSelectedFile().getAbsolutePath();\n+            try {\n+                saveGraphDocument(doc, path, false);\n+            } catch (IOException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+    }\n+\n+    private static void saveGraphDocument(GraphDocument doc, String path, boolean saveContext) throws IOException {\n+        if (path == null) {\n+            return;\n+        }\n+\n+        Set<GraphContext> saveContexts = new HashSet<>();\n+        if (saveContext) {\n+            WindowManager manager = WindowManager.getDefault();\n+            for (Mode mode : manager.getModes()) {\n+                List<TopComponent> compList = new ArrayList<>(Arrays.asList(manager.getOpenedTopComponents(mode)));\n+                for (TopComponent comp : compList) {\n+                    if (comp instanceof EditorTopComponent etc) {\n+                        GraphContext graphContext = getGraphContext(etc);\n+                        saveContexts.add(graphContext);\n+                    }\n+                }\n+            }\n+        }\n+\n+        try (Writer writer = new OutputStreamWriter(new FileOutputStream(path))) {\n+            Printer printer = new Printer();\n+            printer.exportGraphDocument(writer, new SerialData<>(doc, saveContexts));\n+        }\n+    }\n+\n+    private static GraphContext getGraphContext(EditorTopComponent etc) {\n+        InputGraph openedGraph = etc.getModel().getFirstGraph();\n+        int posDiff = etc.getModel().getSecondPosition() - etc.getModel().getFirstPosition();\n+        Set<Integer> hiddenNodes = new HashSet<>(etc.getModel().getHiddenNodes());\n+        return new GraphContext(openedGraph, new AtomicInteger(posDiff), hiddenNodes);\n+    }\n+\n@@ -111,1 +206,1 @@\n-        toolbar.setMinimumSize(new Dimension(0,0)); \/\/ MacOS BUG with ToolbarWithOverflow\n+        toolbar.setMinimumSize(new Dimension(0, 0)); \/\/ MacOS BUG with ToolbarWithOverflow\n@@ -152,1 +247,1 @@\n-            synchronized(OutlineTopComponent.this) {\n+            synchronized (OutlineTopComponent.this) {\n@@ -166,32 +261,0 @@\n-    public static GraphDocument getDocument() {\n-        return document;\n-    }\n-\n-    \/**\n-     * Gets default instance. Do not use directly: reserved for *.settings files only,\n-     * i.e. deserialization routines; otherwise you could get a non-deserialized instance.\n-     * To obtain the singleton instance, use {@link #findInstance()}.\n-     *\/\n-    public static synchronized OutlineTopComponent getDefault() {\n-        if (instance == null) {\n-            instance = new OutlineTopComponent();\n-        }\n-        return instance;\n-    }\n-\n-    \/**\n-     * Obtain the OutlineTopComponent instance. Never call {@link #getDefault} directly!\n-     *\/\n-    public static synchronized OutlineTopComponent findInstance() {\n-        TopComponent win = WindowManager.getDefault().findTopComponent(PREFERRED_ID);\n-        if (win == null) {\n-            ErrorManager.getDefault().log(ErrorManager.WARNING, \"Cannot find Outline component. It will not be located properly in the window system.\");\n-            return getDefault();\n-        }\n-        if (win instanceof OutlineTopComponent) {\n-            return (OutlineTopComponent) win;\n-        }\n-        ErrorManager.getDefault().log(ErrorManager.WARNING, \"There seem to be multiple components with the '\" + PREFERRED_ID + \"' ID. That is a potential source of errors and unexpected behavior.\");\n-        return getDefault();\n-    }\n-\n@@ -293,0 +356,4 @@\n+    private String getDocumentPath() {\n+        return documentPath.toAbsolutePath().toString();\n+    }\n+\n@@ -301,1 +368,1 @@\n-            setToolTipText(\"No file\" );\n+            setToolTipText(\"No file\");\n@@ -306,4 +373,0 @@\n-    private String getDocumentPath() {\n-        return documentPath.toAbsolutePath().toString();\n-    }\n-\n@@ -336,1 +399,1 @@\n-        String message = \"Do you want to overwrite \" +filename + \"?\";\n+        String message = \"Do you want to overwrite \" + filename + \"?\";\n@@ -385,28 +448,0 @@\n-\n-    private static final FileFilter xmlFileFilter = new FileFilter() {\n-        @Override\n-        public boolean accept(File f) {\n-            return f.getName().toLowerCase().endsWith(\".xml\") || f.isDirectory();\n-        }\n-\n-        @Override\n-        public String getDescription() {\n-            return \"Graph files (*.xml)\";\n-        }\n-    };\n-\n-\n-    public static void exportToXML(GraphDocument doc) {\n-        JFileChooser fc = new JFileChooser();\n-        fc.setFileFilter(xmlFileFilter);\n-        fc.setCurrentDirectory(new File(Settings.get().get(Settings.DIRECTORY, Settings.DIRECTORY_DEFAULT)));\n-        if (fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {\n-            String path = fc.getSelectedFile().getAbsolutePath();\n-            try {\n-                saveGraphDocument(doc, path, false);\n-            } catch (IOException e) {\n-                throw new RuntimeException(e);\n-            }\n-        }\n-    }\n-\n@@ -462,2 +497,1 @@\n-\n-    private void loadGraphDocument(String path,  boolean loadContext) throws IOException {\n+    private void loadGraphDocument(String path, boolean loadContext) throws IOException {\n@@ -488,1 +522,2 @@\n-                    } catch (IOException ignored) {}\n+                    } catch (IOException ignored) {\n+                    }\n@@ -490,0 +525,1 @@\n+\n@@ -516,33 +552,2 @@\n-    private static void saveGraphDocument(GraphDocument doc, String path, boolean saveContext) throws IOException {\n-        if (path == null) {\n-            return;\n-        }\n-\n-        Set<GraphContext> saveContexts = new HashSet<>();\n-        if (saveContext) {\n-            WindowManager manager = WindowManager.getDefault();\n-            for (Mode mode : manager.getModes()) {\n-                List<TopComponent> compList = new ArrayList<>(Arrays.asList(manager.getOpenedTopComponents(mode)));\n-                for (TopComponent comp : compList) {\n-                    if (comp instanceof EditorTopComponent etc) {\n-                        GraphContext graphContext = getGraphContext(etc);\n-                        saveContexts.add(graphContext);\n-                    }\n-                }\n-            }\n-        }\n-\n-        try (Writer writer = new OutputStreamWriter(new FileOutputStream(path))) {\n-            Printer printer = new Printer();\n-            printer.exportGraphDocument(writer, new SerialData<>(doc, saveContexts));\n-        }\n-    }\n-\n-    private static GraphContext getGraphContext(EditorTopComponent etc) {\n-        InputGraph openedGraph = etc.getModel().getFirstGraph();\n-        int posDiff = etc.getModel().getSecondPosition() - etc.getModel().getFirstPosition();\n-        Set<Integer> hiddenNodes = new HashSet<>(etc.getModel().getHiddenNodes());\n-        return new GraphContext(openedGraph, new AtomicInteger(posDiff), hiddenNodes);\n-    }\n-\n-    \/** This method is called from within the constructor to\n+    \/**\n+     * This method is called from within the constructor to\n@@ -561,3 +566,0 @@\n-\n-    \/\/ Variables declaration - do not modify\/\/GEN-BEGIN:variables\n-    private JScrollPane treeView;\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":118,"deletions":116,"binary":false,"changes":234,"status":"modified"},{"patch":"@@ -29,1 +29,3 @@\n-import org.openide.util.*;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.NbBundle;\n@@ -35,0 +37,5 @@\n+    public ImportAction() {\n+        putValue(Action.SHORT_DESCRIPTION, \"Import from XML...\");\n+        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n+    }\n+\n@@ -45,5 +52,0 @@\n-    public ImportAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Import from XML...\");\n-        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/ImportAction.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,1 +29,4 @@\n-import org.openide.util.*;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.NbBundle;\n+import org.openide.util.Utilities;\n@@ -34,0 +37,7 @@\n+    public OpenAction() {\n+        putValue(Action.SHORT_DESCRIPTION, \"Open...\");\n+        \/\/ D is the Control key on most platforms, the Command (meta) key on Macintosh\n+        putValue(Action.ACCELERATOR_KEY, Utilities.stringToKey(\"D-O\"));\n+        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n+    }\n+\n@@ -44,7 +54,0 @@\n-    public OpenAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Open...\");\n-        \/\/ D is the Control key on most platforms, the Command (meta) key on Macintosh\n-        putValue(Action.ACCELERATOR_KEY, Utilities.stringToKey(\"D-O\"));\n-        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/OpenAction.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- *\n@@ -41,0 +40,5 @@\n+    public RemoveAction() {\n+        putValue(Action.SHORT_DESCRIPTION, getName());\n+        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n+    }\n+\n@@ -51,5 +55,0 @@\n-    public RemoveAction() {\n-        putValue(Action.SHORT_DESCRIPTION, getName());\n-        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/RemoveAction.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,4 @@\n-import org.openide.util.*;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.NbBundle;\n+import org.openide.util.Utilities;\n@@ -35,0 +38,7 @@\n+    public SaveAction() {\n+        putValue(Action.SHORT_DESCRIPTION, \"Save\");\n+        \/\/ D is the Control key on most platforms, the Command (meta) key on Macintosh\n+        putValue(Action.ACCELERATOR_KEY, Utilities.stringToKey(\"D-S\"));\n+        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n+    }\n+\n@@ -45,7 +55,0 @@\n-    public SaveAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Save\");\n-        \/\/ D is the Control key on most platforms, the Command (meta) key on Macintosh\n-        putValue(Action.ACCELERATOR_KEY, Utilities.stringToKey(\"D-S\"));\n-        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/actions\/SaveAction.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-    void setName(String name);\n@@ -31,0 +30,3 @@\n+\n+    void setName(String name);\n+\n@@ -32,0 +34,1 @@\n+\n@@ -33,0 +36,1 @@\n+\n@@ -34,0 +38,1 @@\n+\n@@ -35,0 +40,1 @@\n+\n@@ -36,0 +42,1 @@\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/Folder.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-    void setName(String name);\n+\n@@ -30,0 +30,3 @@\n+\n+    void setName(String name);\n+\n@@ -31,1 +34,1 @@\n-    void setParent(Folder parent);\n+\n@@ -33,0 +36,3 @@\n+\n+    void setParent(Folder parent);\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/FolderElement.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n- *\n@@ -66,0 +65,4 @@\n+    public String getName() {\n+        return name;\n+    }\n+\n@@ -71,4 +74,0 @@\n-    public String getName() {\n-        return name;\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/GraphDocument.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- *\n@@ -35,1 +34,0 @@\n-    private InputMethod method;\n@@ -38,1 +36,1 @@\n-\n+    private InputMethod method;\n@@ -50,4 +48,0 @@\n-    public void setMethod(InputMethod method) {\n-        this.method = method;\n-    }\n-\n@@ -58,0 +52,4 @@\n+    public void setMethod(InputMethod method) {\n+        this.method = method;\n+    }\n+\n@@ -117,3 +115,2 @@\n-    public void setName(String name) {\n-        getProperties().setProperty(\"name\", name);\n-        displayNameChangedEvent.fire();\n+    public String getName() {\n+        return getProperties().get(\"name\");\n@@ -123,2 +120,3 @@\n-    public String getName() {\n-        return getProperties().get(\"name\");\n+    public void setName(String name) {\n+        getProperties().setProperty(\"name\", name);\n+        displayNameChangedEvent.fire();\n@@ -176,1 +174,1 @@\n-         return parent;\n+        return parent;\n@@ -178,0 +176,1 @@\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/Group.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.io.IOException;\n@@ -29,0 +28,1 @@\n+import java.io.IOException;\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/GraphParser.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import com.sun.hotspot.igv.data.*;\n@@ -28,0 +27,3 @@\n+import com.sun.hotspot.igv.data.*;\n+import com.sun.hotspot.igv.data.serialization.Printer.GraphContext;\n+import com.sun.hotspot.igv.data.serialization.Printer.SerialData;\n@@ -32,2 +34,0 @@\n-import com.sun.hotspot.igv.data.serialization.Printer.SerialData;\n-import com.sun.hotspot.igv.data.serialization.Printer.GraphContext;\n@@ -48,1 +48,0 @@\n- *\n@@ -99,2 +98,0 @@\n-    private int maxId = 0;\n-    private SerialData<GraphDocument> serialData;\n@@ -103,57 +100,0 @@\n-    private boolean invokeLater = true;\n-\n-    private int lookupID(String i) {\n-        try {\n-            return Integer.parseInt(i);\n-        } catch (NumberFormatException nfe) {\n-            \/\/ ignore\n-        }\n-        Integer id = idCache.get(i);\n-        if (id == null) {\n-            id = maxId++;\n-            idCache.put(i, id);\n-        }\n-        return id;\n-    }\n-\n-    \/\/ <graphDocument>\n-    private final ElementHandler<SerialData<GraphDocument>, Object> topHandler = new ElementHandler<>(TOP_ELEMENT) {\n-\n-        @Override\n-        protected SerialData<GraphDocument> start() {\n-            serialData = new SerialData<>(new GraphDocument(), new HashSet<>());\n-            return serialData;\n-        }\n-    };\n-    \/\/ <group>\n-    private final ElementHandler<SerialData<Group>, SerialData<? extends Folder>> groupHandler = new XMLParser.ElementHandler<>(GROUP_ELEMENT) {\n-\n-        @Override\n-        protected SerialData<Group> start() {\n-            final Folder folder = getParentObject().data();\n-            final Group group = new Group(folder);\n-\n-            String differenceProperty = this.readAttribute(DIFFERENCE_PROPERTY);\n-            Parser.this.differenceEncoding.put(group, (differenceProperty != null && (differenceProperty.equals(\"1\") || differenceProperty.equals(\"true\"))));\n-\n-            ParseMonitor monitor = getMonitor();\n-            if (monitor != null) {\n-                monitor.setState(group.getName());\n-            }\n-\n-            if (groupCallback == null || folder instanceof Group) {\n-                Runnable addToParent = () -> folder.addElement(group);\n-                if (invokeLater) {\n-                    SwingUtilities.invokeLater(addToParent);\n-                } else {\n-                    addToParent.run();\n-                }\n-            }\n-\n-            return new SerialData<>(group, getParentObject().contexts());\n-        }\n-\n-        @Override\n-        protected void end(String text) {\n-        }\n-    };\n@@ -171,11 +111,0 @@\n-\n-    private InputMethod parseMethod(XMLParser.ElementHandler<?,?> handler, Group group) throws SAXException {\n-        String s = handler.readRequiredAttribute(METHOD_BCI_PROPERTY);\n-        int bci;\n-        try {\n-            bci = Integer.parseInt(s);\n-        } catch (NumberFormatException e) {\n-            throw new SAXException(e);\n-        }\n-        return new InputMethod(group, handler.readRequiredAttribute(METHOD_NAME_PROPERTY), handler.readRequiredAttribute(METHOD_SHORT_NAME_PROPERTY), bci);\n-    }\n@@ -202,91 +131,0 @@\n-    \/\/ <graph>\n-    private final ElementHandler<SerialData<InputGraph>, SerialData<Group>> graphHandler = new XMLParser.ElementHandler<>(GRAPH_ELEMENT) {\n-\n-        @Override\n-        protected SerialData<InputGraph> start() {\n-            Group group = getParentObject().data();\n-            String name = readAttribute(GRAPH_NAME_PROPERTY);\n-            InputGraph curGraph = new InputGraph(name);\n-            if (differenceEncoding.get(group)) {\n-                InputGraph previous = lastParsedGraph.get(group);\n-                lastParsedGraph.put(group, curGraph);\n-                if (previous != null) {\n-                    for (InputNode n : previous.getNodes()) {\n-                        curGraph.addNode(n);\n-                    }\n-                    for (InputEdge e : previous.getEdges()) {\n-                        curGraph.addEdge(e);\n-                    }\n-                }\n-            }\n-            ParseMonitor monitor = getMonitor();\n-            if (monitor != null) {\n-                monitor.updateProgress();\n-            }\n-            return new SerialData<>(curGraph, new HashSet<>());\n-        }\n-\n-        @Override\n-        protected void end(String text) {\n-            \/\/ NOTE: Some graphs intentionally don't provide blocks. Instead,\n-            \/\/       they later generate the blocks from other information such\n-            \/\/       as node properties (example: ServerCompilerScheduler).\n-            \/\/       Thus, we shouldn't assign nodes that don't belong to any\n-            \/\/       block to some artificial block below unless blocks are\n-            \/\/       defined and nodes are assigned to them.\n-\n-            final InputGraph graph = getObject().data();\n-\n-            final Group parent = getParentObject().data();\n-            if (!graph.getBlocks().isEmpty()) {\n-                boolean blocksContainNodes = false;\n-                for (InputBlock b : graph.getBlocks()) {\n-                    if (!b.getNodes().isEmpty()) {\n-                        blocksContainNodes = true;\n-                        break;\n-                    }\n-                }\n-\n-                if (!blocksContainNodes) {\n-                    graph.clearBlocks();\n-                    blockConnections.clear();\n-                } else {\n-                    \/\/ Blocks and their nodes defined: add other nodes to an\n-                    \/\/  artificial \"no block\" block\n-                    InputBlock noBlock = null;\n-                    for (InputNode n : graph.getNodes()) {\n-                        if (graph.getBlock(n) == null) {\n-                            if (noBlock == null) {\n-                                noBlock = graph.addArtificialBlock();\n-                            }\n-\n-                            noBlock.addNode(n.getId());\n-                        }\n-\n-                        assert graph.getBlock(n) != null;\n-                    }\n-                }\n-            }\n-\n-            \/\/ Resolve block successors\n-            for (Pair<String, String> p : blockConnections) {\n-                final InputBlock left = graph.getBlock(p.getLeft());\n-                assert left != null;\n-                final InputBlock right = graph.getBlock(p.getRight());\n-                assert right != null;\n-                graph.addBlockEdge(left, right);\n-            }\n-            blockConnections.clear();\n-\n-            Runnable addToParent = () -> parent.addElement(graph);\n-            Runnable addContext = () -> getParentObject().contexts().addAll(getObject().contexts());\n-            if (invokeLater) {\n-                SwingUtilities.invokeLater(addToParent);\n-                SwingUtilities.invokeLater(addContext);\n-\n-            } else {\n-                addToParent.run();\n-                addContext.run();\n-            }\n-        }\n-    };\n@@ -304,1 +142,1 @@\n-            GraphContext graphContext = new GraphContext(inputGraph,  new AtomicInteger(0), new HashSet<>());\n+            GraphContext graphContext = new GraphContext(inputGraph, new AtomicInteger(0), new HashSet<>());\n@@ -309,2 +147,0 @@\n-\n-\n@@ -312,1 +148,0 @@\n-\n@@ -328,1 +163,0 @@\n-\n@@ -344,2 +178,0 @@\n-\n-\n@@ -360,1 +192,0 @@\n-\n@@ -363,0 +194,48 @@\n+    \/\/ <successors>\n+    private final HandoverElementHandler<InputBlock> successorsHandler = new HandoverElementHandler<>(SUCCESSORS_ELEMENT);\n+    \/\/ <successor>\n+    private final ElementHandler<InputBlock, InputBlock> successorHandler = new ElementHandler<>(SUCCESSOR_ELEMENT) {\n+\n+        @Override\n+        protected InputBlock start() throws SAXException {\n+            String name = readRequiredAttribute(BLOCK_NAME_PROPERTY);\n+            blockConnections.add(new Pair<>(getParentObject().getName(), name));\n+            return getParentObject();\n+        }\n+    };\n+    \/\/ <graph>\n+    private final HandoverElementHandler<SerialData<InputGraph>> edgesHandler = new HandoverElementHandler<>(EDGES_ELEMENT);\n+    \/\/ <edge>\n+    private final EdgeElementHandler edgeHandler = new EdgeElementHandler(EDGE_ELEMENT) {\n+\n+        @Override\n+        protected InputEdge start(InputEdge conn) {\n+            getParentObject().data().addEdge(conn);\n+            return conn;\n+        }\n+    };\n+    \/\/ <removeEdge>\n+    private final EdgeElementHandler removeEdgeHandler = new EdgeElementHandler(REMOVE_EDGE_ELEMENT) {\n+\n+        @Override\n+        protected InputEdge start(InputEdge conn) {\n+            getParentObject().data().removeEdge(conn);\n+            return conn;\n+        }\n+    };\n+    \/\/ <properties>\n+    private final HandoverElementHandler<Properties.Provider> propertiesHandler = new HandoverElementHandler<>(PROPERTIES_ELEMENT);\n+    \/\/ <property>\n+    private final ElementHandler<String, Properties.Provider> propertyHandler = new XMLParser.ElementHandler<>(PROPERTY_ELEMENT, true) {\n+\n+        @Override\n+        public String start() throws SAXException {\n+            return readRequiredAttribute(PROPERTY_NAME_PROPERTY);\n+        }\n+\n+        @Override\n+        public void end(String text) {\n+            getParentObject().getProperties().setProperty(getObject(), text.trim());\n+        }\n+    };\n+    private int maxId = 0;\n@@ -380,12 +259,0 @@\n-    \/\/ <successors>\n-    private final HandoverElementHandler<InputBlock> successorsHandler = new HandoverElementHandler<>(SUCCESSORS_ELEMENT);\n-    \/\/ <successor>\n-    private final ElementHandler<InputBlock, InputBlock> successorHandler = new ElementHandler<>(SUCCESSOR_ELEMENT) {\n-\n-        @Override\n-        protected InputBlock start() throws SAXException {\n-            String name = readRequiredAttribute(BLOCK_NAME_PROPERTY);\n-            blockConnections.add(new Pair<>(getParentObject().getName(), name));\n-            return getParentObject();\n-        }\n-    };\n@@ -424,5 +291,3 @@\n-    \/\/ <graph>\n-    private final HandoverElementHandler<SerialData<InputGraph>> edgesHandler = new HandoverElementHandler<>(EDGES_ELEMENT);\n-\n-    \/\/ Local class for edge elements\n-    private class EdgeElementHandler extends ElementHandler<InputEdge, SerialData<InputGraph>> {\n+    private SerialData<GraphDocument> serialData;\n+    \/\/ <graphDocument>\n+    private final ElementHandler<SerialData<GraphDocument>, Object> topHandler = new ElementHandler<>(TOP_ELEMENT) {\n@@ -430,2 +295,4 @@\n-        public EdgeElementHandler(String name) {\n-            super(name);\n+        @Override\n+        protected SerialData<GraphDocument> start() {\n+            serialData = new SerialData<>(new GraphDocument(), new HashSet<>());\n+            return serialData;\n@@ -433,0 +300,4 @@\n+    };\n+    private boolean invokeLater = true;\n+    \/\/ <group>\n+    private final ElementHandler<SerialData<Group>, SerialData<? extends Folder>> groupHandler = new XMLParser.ElementHandler<>(GROUP_ELEMENT) {\n@@ -435,13 +306,3 @@\n-        protected InputEdge start() throws SAXException {\n-            int fromIndex = 0;\n-            int toIndex = 0;\n-            int from;\n-            int to;\n-            String label;\n-            String type;\n-\n-            try {\n-                String fromIndexString = readAttribute(FROM_INDEX_PROPERTY);\n-                if (fromIndexString != null) {\n-                    fromIndex = Integer.parseInt(fromIndexString);\n-                }\n+        protected SerialData<Group> start() {\n+            final Folder folder = getParentObject().data();\n+            final Group group = new Group(folder);\n@@ -449,7 +310,2 @@\n-                String toIndexString = readAttribute(TO_INDEX_PROPERTY);\n-                if (toIndexString == null) {\n-                    toIndexString = readAttribute(TO_INDEX_ALT_PROPERTY);\n-                }\n-                if (toIndexString != null) {\n-                    toIndex = Integer.parseInt(toIndexString);\n-                }\n+            String differenceProperty = this.readAttribute(DIFFERENCE_PROPERTY);\n+            Parser.this.differenceEncoding.put(group, (differenceProperty != null && (differenceProperty.equals(\"1\") || differenceProperty.equals(\"true\"))));\n@@ -457,2 +313,4 @@\n-                label = readAttribute(LABEL_PROPERTY);\n-                type = readAttribute(TYPE_PROPERTY);\n+            ParseMonitor monitor = getMonitor();\n+            if (monitor != null) {\n+                monitor.setState(group.getName());\n+            }\n@@ -460,4 +318,7 @@\n-                from = lookupID(readRequiredAttribute(FROM_PROPERTY));\n-                to = lookupID(readRequiredAttribute(TO_PROPERTY));\n-            } catch (NumberFormatException e) {\n-                throw new SAXException(e);\n+            if (groupCallback == null || folder instanceof Group) {\n+                Runnable addToParent = () -> folder.addElement(group);\n+                if (invokeLater) {\n+                    SwingUtilities.invokeLater(addToParent);\n+                } else {\n+                    addToParent.run();\n+                }\n@@ -466,2 +327,1 @@\n-            InputEdge conn = new InputEdge((char) fromIndex, (char) toIndex, from, to, label, type == null ? \"\" : type);\n-            return start(conn);\n+            return new SerialData<>(group, getParentObject().contexts());\n@@ -470,2 +330,2 @@\n-        protected InputEdge start(InputEdge conn) {\n-            return conn;\n+        @Override\n+        protected void end(String text) {\n@@ -473,3 +333,3 @@\n-    }\n-    \/\/ <edge>\n-    private final EdgeElementHandler edgeHandler = new EdgeElementHandler(EDGE_ELEMENT) {\n+    };\n+    \/\/ <graph>\n+    private final ElementHandler<SerialData<InputGraph>, SerialData<Group>> graphHandler = new XMLParser.ElementHandler<>(GRAPH_ELEMENT) {\n@@ -478,3 +338,21 @@\n-        protected InputEdge start(InputEdge conn) {\n-            getParentObject().data().addEdge(conn);\n-            return conn;\n+        protected SerialData<InputGraph> start() {\n+            Group group = getParentObject().data();\n+            String name = readAttribute(GRAPH_NAME_PROPERTY);\n+            InputGraph curGraph = new InputGraph(name);\n+            if (differenceEncoding.get(group)) {\n+                InputGraph previous = lastParsedGraph.get(group);\n+                lastParsedGraph.put(group, curGraph);\n+                if (previous != null) {\n+                    for (InputNode n : previous.getNodes()) {\n+                        curGraph.addNode(n);\n+                    }\n+                    for (InputEdge e : previous.getEdges()) {\n+                        curGraph.addEdge(e);\n+                    }\n+                }\n+            }\n+            ParseMonitor monitor = getMonitor();\n+            if (monitor != null) {\n+                monitor.updateProgress();\n+            }\n+            return new SerialData<>(curGraph, new HashSet<>());\n@@ -482,3 +360,0 @@\n-    };\n-    \/\/ <removeEdge>\n-    private final EdgeElementHandler removeEdgeHandler = new EdgeElementHandler(REMOVE_EDGE_ELEMENT) {\n@@ -487,3 +362,61 @@\n-        protected InputEdge start(InputEdge conn) {\n-            getParentObject().data().removeEdge(conn);\n-            return conn;\n+        protected void end(String text) {\n+            \/\/ NOTE: Some graphs intentionally don't provide blocks. Instead,\n+            \/\/       they later generate the blocks from other information such\n+            \/\/       as node properties (example: ServerCompilerScheduler).\n+            \/\/       Thus, we shouldn't assign nodes that don't belong to any\n+            \/\/       block to some artificial block below unless blocks are\n+            \/\/       defined and nodes are assigned to them.\n+\n+            final InputGraph graph = getObject().data();\n+\n+            final Group parent = getParentObject().data();\n+            if (!graph.getBlocks().isEmpty()) {\n+                boolean blocksContainNodes = false;\n+                for (InputBlock b : graph.getBlocks()) {\n+                    if (!b.getNodes().isEmpty()) {\n+                        blocksContainNodes = true;\n+                        break;\n+                    }\n+                }\n+\n+                if (!blocksContainNodes) {\n+                    graph.clearBlocks();\n+                    blockConnections.clear();\n+                } else {\n+                    \/\/ Blocks and their nodes defined: add other nodes to an\n+                    \/\/  artificial \"no block\" block\n+                    InputBlock noBlock = null;\n+                    for (InputNode n : graph.getNodes()) {\n+                        if (graph.getBlock(n) == null) {\n+                            if (noBlock == null) {\n+                                noBlock = graph.addArtificialBlock();\n+                            }\n+\n+                            noBlock.addNode(n.getId());\n+                        }\n+\n+                        assert graph.getBlock(n) != null;\n+                    }\n+                }\n+            }\n+\n+            \/\/ Resolve block successors\n+            for (Pair<String, String> p : blockConnections) {\n+                final InputBlock left = graph.getBlock(p.getLeft());\n+                assert left != null;\n+                final InputBlock right = graph.getBlock(p.getRight());\n+                assert right != null;\n+                graph.addBlockEdge(left, right);\n+            }\n+            blockConnections.clear();\n+\n+            Runnable addToParent = () -> parent.addElement(graph);\n+            Runnable addContext = () -> getParentObject().contexts().addAll(getObject().contexts());\n+            if (invokeLater) {\n+                SwingUtilities.invokeLater(addToParent);\n+                SwingUtilities.invokeLater(addContext);\n+\n+            } else {\n+                addToParent.run();\n+                addContext.run();\n+            }\n@@ -493,2 +426,0 @@\n-    private final HandoverElementHandler<Properties.Provider> propertiesHandler = new HandoverElementHandler<>(PROPERTIES_ELEMENT);\n-    \/\/ <properties>\n@@ -510,14 +441,0 @@\n-    \/\/ <property>\n-    private final ElementHandler<String, Properties.Provider> propertyHandler = new XMLParser.ElementHandler<>(PROPERTY_ELEMENT, true) {\n-\n-        @Override\n-        public String start() throws SAXException {\n-            return readRequiredAttribute(PROPERTY_NAME_PROPERTY);\n-        }\n-\n-        @Override\n-        public void end(String text) {\n-            getParentObject().getProperties().setProperty(getObject(), text.trim());\n-        }\n-    };\n-\n@@ -527,1 +444,0 @@\n-\n@@ -581,0 +497,25 @@\n+    private int lookupID(String i) {\n+        try {\n+            return Integer.parseInt(i);\n+        } catch (NumberFormatException nfe) {\n+            \/\/ ignore\n+        }\n+        Integer id = idCache.get(i);\n+        if (id == null) {\n+            id = maxId++;\n+            idCache.put(i, id);\n+        }\n+        return id;\n+    }\n+\n+    private InputMethod parseMethod(XMLParser.ElementHandler<?, ?> handler, Group group) throws SAXException {\n+        String s = handler.readRequiredAttribute(METHOD_BCI_PROPERTY);\n+        int bci;\n+        try {\n+            bci = Integer.parseInt(s);\n+        } catch (NumberFormatException e) {\n+            throw new SAXException(e);\n+        }\n+        return new InputMethod(group, handler.readRequiredAttribute(METHOD_NAME_PROPERTY), handler.readRequiredAttribute(METHOD_SHORT_NAME_PROPERTY), bci);\n+    }\n+\n@@ -621,0 +562,48 @@\n+\n+    \/\/ Local class for edge elements\n+    private class EdgeElementHandler extends ElementHandler<InputEdge, SerialData<InputGraph>> {\n+\n+        public EdgeElementHandler(String name) {\n+            super(name);\n+        }\n+\n+        @Override\n+        protected InputEdge start() throws SAXException {\n+            int fromIndex = 0;\n+            int toIndex = 0;\n+            int from;\n+            int to;\n+            String label;\n+            String type;\n+\n+            try {\n+                String fromIndexString = readAttribute(FROM_INDEX_PROPERTY);\n+                if (fromIndexString != null) {\n+                    fromIndex = Integer.parseInt(fromIndexString);\n+                }\n+\n+                String toIndexString = readAttribute(TO_INDEX_PROPERTY);\n+                if (toIndexString == null) {\n+                    toIndexString = readAttribute(TO_INDEX_ALT_PROPERTY);\n+                }\n+                if (toIndexString != null) {\n+                    toIndex = Integer.parseInt(toIndexString);\n+                }\n+\n+                label = readAttribute(LABEL_PROPERTY);\n+                type = readAttribute(TYPE_PROPERTY);\n+\n+                from = lookupID(readRequiredAttribute(FROM_PROPERTY));\n+                to = lookupID(readRequiredAttribute(TO_PROPERTY));\n+            } catch (NumberFormatException e) {\n+                throw new SAXException(e);\n+            }\n+\n+            InputEdge conn = new InputEdge((char) fromIndex, (char) toIndex, from, to, label, type == null ? \"\" : type);\n+            return start(conn);\n+        }\n+\n+        protected InputEdge start(InputEdge conn) {\n+            return conn;\n+        }\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/Parser.java","additions":240,"deletions":251,"binary":false,"changes":491,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import com.sun.hotspot.igv.data.Properties;\n@@ -30,1 +29,2 @@\n-import java.util.*;\n+import java.util.HashSet;\n+import java.util.Set;\n@@ -40,7 +40,1 @@\n-    public record GraphContext(InputGraph inputGraph, AtomicInteger posDiff, Set<Integer> hiddenNodes) {}\n-\n-    public record SerialData<T extends Properties.Provider>(T data, Set<GraphContext> contexts) implements Properties.Provider {\n-        @Override\n-        public Properties getProperties() {\n-            return data.getProperties();\n-        }\n+    public Printer() {\n@@ -49,2 +43,0 @@\n-    public Printer() {}\n-\n@@ -190,1 +182,0 @@\n-\n@@ -222,1 +213,0 @@\n-\n@@ -266,0 +256,11 @@\n+\n+    public record GraphContext(InputGraph inputGraph, AtomicInteger posDiff, Set<Integer> hiddenNodes) {\n+    }\n+\n+    public record SerialData<T extends Properties.Provider>(T data,\n+                                                            Set<GraphContext> contexts) implements Properties.Provider {\n+        @Override\n+        public Properties getProperties() {\n+            return data.getProperties();\n+        }\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/Printer.java","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- *\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/main\/java\/com\/sun\/hotspot\/igv\/data\/services\/GraphViewer.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/src\/test\/java\/com\/sun\/hotspot\/igv\/data\/serialization\/ParserTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n- *\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/FilterAction.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n- *\n@@ -41,0 +40,5 @@\n+    public MoveFilterDownAction() {\n+        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n+        putValue(Action.SHORT_DESCRIPTION, \"Move selected filter downwards\");\n+    }\n+\n@@ -54,5 +58,0 @@\n-    public MoveFilterDownAction() {\n-        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n-        putValue(Action.SHORT_DESCRIPTION, \"Move selected filter downwards\");\n-    }\n-\n@@ -67,1 +66,1 @@\n-            Filter.class\n+                Filter.class\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/MoveFilterDownAction.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n- *\n@@ -41,0 +40,5 @@\n+    public MoveFilterUpAction() {\n+        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n+        putValue(Action.SHORT_DESCRIPTION, \"Move selected filter upwards\");\n+    }\n+\n@@ -54,5 +58,0 @@\n-    public MoveFilterUpAction() {\n-        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n-        putValue(Action.SHORT_DESCRIPTION, \"Move selected filter upwards\");\n-    }\n-\n@@ -67,1 +66,1 @@\n-            Filter.class\n+                Filter.class\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/MoveFilterUpAction.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n- *\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/NewFilterAction.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n- *\n@@ -44,0 +43,5 @@\n+    public RemoveFilterAction() {\n+        putValue(Action.SHORT_DESCRIPTION, \"Remove selected filter\");\n+        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n+    }\n+\n@@ -47,2 +51,2 @@\n-            \"No\",\n-            \"Cancel\"\n+                \"No\",\n+                \"Cancel\"\n@@ -75,5 +79,0 @@\n-    public RemoveFilterAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Remove selected filter\");\n-        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n-\n@@ -83,1 +82,1 @@\n-            Filter.class\n+                Filter.class\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/RemoveFilterAction.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n- *\n@@ -39,0 +38,5 @@\n+    public RemoveFilterSettingsAction() {\n+        putValue(Action.SHORT_DESCRIPTION, \"Delete current filter profile\");\n+        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n+    }\n+\n@@ -49,5 +53,0 @@\n-    public RemoveFilterSettingsAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Delete current filter profile\");\n-        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/RemoveFilterSettingsAction.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n- *\n@@ -39,0 +38,5 @@\n+    public SaveFilterSettingsAction() {\n+        putValue(Action.SHORT_DESCRIPTION, \"Save filter configuration as profile...\");\n+        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n+    }\n+\n@@ -49,5 +53,0 @@\n-    public SaveFilterSettingsAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Save filter configuration as profile...\");\n-        putValue(Action.SMALL_ICON, ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/actions\/SaveFilterSettingsAction.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,0 @@\n- *\n@@ -65,0 +64,4 @@\n+    private static final JPanel quickSearchPresenter = (JPanel) ((Presenter.Toolbar) Utilities.actionsForPath(\"Actions\/Search\").get(0)).getToolbarPresenter();\n+    private static final String PREFERRED_ID = \"EditorTopComponent\";\n+    private static final String SATELLITE_STRING = \"satellite\";\n+    private static final String SCENE_STRING = \"scene\";\n@@ -72,4 +75,2 @@\n-    private static final JPanel quickSearchPresenter = (JPanel) ((Presenter.Toolbar) Utilities.actionsForPath(\"Actions\/Search\").get(0)).getToolbarPresenter();\n-    private static final String PREFERRED_ID = \"EditorTopComponent\";\n-    private static final String SATELLITE_STRING = \"satellite\";\n-    private static final String SCENE_STRING = \"scene\";\n+    \/\/ Variables declaration - do not modify\/\/GEN-BEGIN:variables\n+    private javax.swing.JCheckBox jCheckBox1;\n@@ -128,2 +129,1 @@\n-        if (group.getParent() instanceof GraphDocument) {\n-            final GraphDocument doc = (GraphDocument) group.getParent();\n+        if (group.getParent() instanceof GraphDocument doc) {\n@@ -154,1 +154,2 @@\n-            public void mouseMoved(MouseEvent e) {}\n+            public void mouseMoved(MouseEvent e) {\n+            }\n@@ -163,1 +164,1 @@\n-        toolBar.setMinimumSize(new Dimension(0,0)); \/\/ MacOS BUG with ToolbarWithOverflow\n+        toolBar.setMinimumSize(new Dimension(0, 0)); \/\/ MacOS BUG with ToolbarWithOverflow\n@@ -253,0 +254,29 @@\n+    public static boolean isOpen(EditorTopComponent editor) {\n+        return WindowManager.getDefault().isOpenedEditorTopComponent(editor);\n+    }\n+\n+    public static EditorTopComponent getActive() {\n+        TopComponent topComponent = getRegistry().getActivated();\n+        if (topComponent instanceof EditorTopComponent) {\n+            return (EditorTopComponent) topComponent;\n+        }\n+        return null;\n+    }\n+\n+    public static EditorTopComponent findEditorForGraph(InputGraph graph) {\n+        WindowManager manager = WindowManager.getDefault();\n+        for (Mode m : manager.getModes()) {\n+            List<TopComponent> l = new ArrayList<>();\n+            l.add(m.getSelectedTopComponent());\n+            l.addAll(Arrays.asList(manager.getOpenedTopComponents(m)));\n+            for (TopComponent t : l) {\n+                if (t instanceof EditorTopComponent etc) {\n+                    if (etc.getModel().getGroup().getGraphs().contains(graph)) {\n+                        return etc;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n@@ -293,30 +323,0 @@\n-    public static boolean isOpen(EditorTopComponent editor) {\n-        return WindowManager.getDefault().isOpenedEditorTopComponent(editor);\n-    }\n-\n-    public static EditorTopComponent getActive() {\n-        TopComponent topComponent = getRegistry().getActivated();\n-        if (topComponent instanceof EditorTopComponent) {\n-            return (EditorTopComponent) topComponent;\n-        }\n-        return null;\n-    }\n-\n-    public static EditorTopComponent findEditorForGraph(InputGraph graph) {\n-        WindowManager manager = WindowManager.getDefault();\n-        for (Mode m : manager.getModes()) {\n-            List<TopComponent> l = new ArrayList<>();\n-            l.add(m.getSelectedTopComponent());\n-            l.addAll(Arrays.asList(manager.getOpenedTopComponents(m)));\n-            for (TopComponent t : l) {\n-                if (t instanceof EditorTopComponent) {\n-                    EditorTopComponent etc = (EditorTopComponent) t;\n-                    if (etc.getModel().getGroup().getGraphs().contains(graph)) {\n-                        return etc;\n-                    }\n-                }\n-            }\n-        }\n-        return null;\n-    }\n-\n@@ -410,2 +410,1 @@\n-                if (topComponent instanceof EditorTopComponent) {\n-                    EditorTopComponent editor = (EditorTopComponent) topComponent;\n+                if (topComponent instanceof EditorTopComponent editor) {\n@@ -452,1 +451,2 @@\n-    \/** This method is called from within the constructor to\n+    \/**\n+     * This method is called from within the constructor to\n@@ -468,2 +468,0 @@\n-    \/\/ Variables declaration - do not modify\/\/GEN-BEGIN:variables\n-    private javax.swing.JCheckBox jCheckBox1;\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":43,"deletions":45,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n- *\n@@ -35,1 +34,1 @@\n-@ServiceProvider(service=GraphViewer.class)\n+@ServiceProvider(service = GraphViewer.class)\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/GraphViewerImplementation.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,2 +81,2 @@\n-                       lcFileName.endsWith(\".svg\") ||\n-                       f.isDirectory();\n+                        lcFileName.endsWith(\".svg\") ||\n+                        f.isDirectory();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExportAction.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ModelAwareAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ZoomInAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ZoomOutAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ZoomResetAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}