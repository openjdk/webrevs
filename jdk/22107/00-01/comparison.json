{"files":[{"patch":"@@ -62,2 +62,2 @@\n-                                    case CustomAttribute a -> throw new AssertionError(\"Unexpected custom attribute: \" + a.attributeName());\n-                                    case UnknownAttribute a -> throw new AssertionError(\"Unexpected unknown attribute: \" + a.attributeName());\n+                                    case CustomAttribute a -> throw new AssertionError(\"Unexpected custom attribute: \" + a.attributeName().stringValue());\n+                                    case UnknownAttribute a -> throw new AssertionError(\"Unexpected unknown attribute: \" + a.attributeName().stringValue());\n@@ -94,2 +94,2 @@\n-                                    case CustomAttribute a -> throw new AssertionError(\"Unexpected custom attribute: \" + a.attributeName());\n-                                    case UnknownAttribute a -> throw new AssertionError(\"Unexpected unknown attribute: \" + a.attributeName());\n+                                    case CustomAttribute a -> throw new AssertionError(\"Unexpected custom attribute: \" + a.attributeName().stringValue());\n+                                    case UnknownAttribute a -> throw new AssertionError(\"Unexpected unknown attribute: \" + a.attributeName().stringValue());\n@@ -134,1 +134,1 @@\n-                                        default -> throw new AssertionError(\"Unexpected record component attribute: \" + rca.attributeName());\n+                                        default -> throw new AssertionError(\"Unexpected record component attribute: \" + rca.attributeName().stringValue());\n@@ -145,2 +145,2 @@\n-                    case CustomAttribute a -> throw new AssertionError(\"Unexpected custom attribute: \" + a.attributeName());\n-                    case UnknownAttribute a -> throw new AssertionError(\"Unexpected unknown attribute: \" + a.attributeName());\n+                    case CustomAttribute a -> throw new AssertionError(\"Unexpected custom attribute: \" + a.attributeName().stringValue());\n+                    case UnknownAttribute a -> throw new AssertionError(\"Unexpected unknown attribute: \" + a.attributeName().stringValue());\n@@ -598,1 +598,1 @@\n-                    throw new AssertionError(\"Unexpected custom attribute: \" + a.attributeName());\n+                    throw new AssertionError(\"Unexpected custom attribute: \" + a.attributeName().stringValue());\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/RebuildingTransformation.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-                checkEquals(attr.attributeName(),\n+                checkEquals(attr.attributeName().stringValue(),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/AnnotationDefault\/AnnotationDefaultTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-                checkEquals(attr.attributeName(),\n+                checkEquals(attr.attributeName().stringValue(),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/EnclosingMethod\/EnclosingMethodTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-            if (attribute.attributeName().equals(attr.name())) {\n+            if (attribute.attributeName().equalsString(attr.name())) {\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/LineNumberTable\/LineNumberTestBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-            checkEquals(attribute.attributeName(),\n+            checkEquals(attribute.attributeName().stringValue(),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/Signature\/Driver.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-        assertEquals(attribute.attributeName(), Attributes.sourceFile().name(), \"Incorrect attribute name\");\n+        assertEquals(attribute.attributeName().stringValue(), Attributes.sourceFile().name(), \"Incorrect attribute name\");\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/SourceFile\/SourceFileTestBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-            checkEquals(\"Deprecated\", attr.attributeName(),\n+            checkEquals(\"Deprecated\", attr.attributeName().stringValue(),\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/deprecated\/DeprecatedTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -209,1 +209,1 @@\n-            checkEquals(innerClasses.attributeName(), \"InnerClasses\",\n+            checkEquals(innerClasses.attributeName().stringValue(), \"InnerClasses\",\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/innerclasses\/InnerClassesTestBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-                    if (attr.attributeName().equals(\"PermittedSubclasses\")) {\n+                    if (attr.attributeName().equalsString(\"PermittedSubclasses\")) {\n@@ -102,1 +102,1 @@\n-                    if (attr.attributeName().equals(\"PermittedSubclasses\")) {\n+                    if (attr.attributeName().equalsString(\"PermittedSubclasses\")) {\n","filename":"test\/langtools\/tools\/javac\/sealed\/CheckSubtypesOfSealedTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-                            + \" found \" + mm.attributes().get(index).attributeName());\n+                            + \" found \" + mm.attributes().get(index).attributeName().stringValue());\n","filename":"test\/langtools\/tools\/javap\/T6716452.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}