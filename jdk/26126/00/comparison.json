{"files":[{"patch":"@@ -64,2 +64,2 @@\n-    public static final long MASK_THROTTLE               = 1 << 62;\n-    public static final long MASK_THROTTLE_CHECK         = 1 << 63;\n+    public static final long MASK_THROTTLE               = 1L << 62;\n+    public static final long MASK_THROTTLE_CHECK         = 1L << 63;\n@@ -485,0 +485,5 @@\n+        if (throttled) {\n+            blockCodeBuilder.aload(0);\n+            blockCodeBuilder.lload(1);\n+            putfield(blockCodeBuilder, eventClassDesc, ImplicitFields.FIELD_START_TIME);\n+        }\n@@ -494,1 +499,1 @@\n-        blockCodeBuilder.lconst_0();\n+        blockCodeBuilder.lconst_0(); \/\/ also blocks throttled event\n@@ -530,3 +535,1 @@\n-            blockCodeBuilder.aload(0);\n-            \/\/ stack: [EW] [EW] [this]\n-            getfield(blockCodeBuilder, eventClassDesc, ImplicitFields.FIELD_DURATION);\n+            getDuration(blockCodeBuilder);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventInstrumentation.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -26,5 +26,1 @@\n-import java.lang.annotation.Annotation;\n-import java.lang.annotation.ElementType;\n-import java.lang.annotation.Retention;\n-import java.lang.annotation.RetentionPolicy;\n-import java.lang.annotation.Target;\n+import java.io.IOException;\n@@ -32,0 +28,2 @@\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n@@ -33,3 +31,1 @@\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n+import java.time.Instant;\n@@ -38,2 +34,0 @@\n-import java.util.concurrent.atomic.AtomicLong;\n-import java.util.concurrent.atomic.AtomicReference;\n@@ -41,6 +35,0 @@\n-import jdk.jfr.AnnotationElement;\n-import jdk.jfr.Event;\n-import jdk.jfr.EventType;\n-import jdk.jfr.MetadataDefinition;\n-import jdk.jfr.Name;\n-import jdk.jfr.Threshold;\n@@ -48,0 +36,1 @@\n+import jdk.jfr.Event;\n@@ -49,0 +38,1 @@\n+import jdk.jfr.SettingControl;\n@@ -50,1 +40,1 @@\n-import jdk.jfr.SettingDescriptor;\n+import jdk.jfr.Threshold;\n@@ -52,1 +42,0 @@\n-import jdk.jfr.ValueDescriptor;\n@@ -54,0 +43,1 @@\n+import jdk.jfr.consumer.RecordingFile;\n@@ -55,3 +45,0 @@\n-import jdk.test.lib.Asserts;\n-import jdk.test.lib.jfr.Events;\n-import jdk.jfr.SettingControl;\n@@ -68,0 +55,3 @@\n+    public static class UnthrottledEvent extends Event {\n+    }\n+\n@@ -133,0 +123,2 @@\n+    private static Instant startTime;\n+\n@@ -134,0 +126,2 @@\n+        startTime = determineMinimumTime();\n+        testUnthrottled(); \/\/ To ensure problem is specific to throttled events\n@@ -143,0 +137,14 @@\n+    private static void testUnthrottled() throws Exception {\n+        testEvent(UnthrottledEvent.class, true);\n+    }\n+\n+    private static Instant determineMinimumTime() throws IOException {\n+        try (Recording r = new Recording()) {\n+            r.enable(\"jdk.JVMInformation\");\n+            r.start();\n+            Path p = Path.of(\"start.jfr\");\n+            r.dump(p);\n+            return RecordingFile.readAllEvents(p).get(0).getStartTime();\n+        }\n+    }\n+\n@@ -223,2 +231,0 @@\n-\n-            r.stop();\n@@ -275,1 +281,5 @@\n-        for (RecordedEvent event : Events.fromRecording(r)) {\n+        r.stop();\n+        Duration d = Duration.between(r.getStartTime(), r.getStopTime());\n+        Path file = Path.of(\"dump.jfr\");\n+        r.dump(file);\n+        for (RecordedEvent event : RecordingFile.readAllEvents(file)) {\n@@ -279,0 +289,12 @@\n+            if (event.getDuration().isNegative()) {\n+                System.out.println(event);\n+                throw new Exception(\"Unexpected negative duration\");\n+            }\n+            if (event.getStartTime().isBefore(startTime)) {\n+                System.out.println(event);\n+                throw new Exception(\"Unexpected early start time\");\n+            }\n+            if (event.getDuration().toMillis() > 2 * d.toMillis()) {\n+                System.out.println(event);\n+                throw new Exception(\"Duration exceed twice the length of the recording\");\n+            }\n@@ -283,0 +305,1 @@\n+        Files.delete(file);\n","filename":"test\/jdk\/jdk\/jfr\/api\/metadata\/annotations\/TestThrottle.java","additions":47,"deletions":24,"binary":false,"changes":71,"status":"modified"}]}