{"files":[{"patch":"@@ -285,0 +285,1 @@\n+                boolean timeIsLastParam = false;\n@@ -295,0 +296,1 @@\n+\n@@ -301,0 +303,5 @@\n+                    } else if (Platform.isCoreutilsSingleExecutable(\"sleep\")) {\n+                        \/\/ With coreutils single executable sleep is just a script around coreutils.\n+                        \/\/ The coreutils executable is seen as ProcessHandle.Info command.\n+                        expected = \"\/usr\/bin\/coreutils\";\n+                        timeIsLastParam = true;\n@@ -310,0 +317,1 @@\n+\n@@ -313,1 +321,5 @@\n-                        Assert.assertEquals(args[0], String.valueOf(sleepTime));\n+                        if (timeIsLastParam) {\n+                            Assert.assertEquals(args[args.length - 1], String.valueOf(sleepTime));\n+                        } else {\n+                            Assert.assertEquals(args[0], String.valueOf(sleepTime));\n+                        }\n","filename":"test\/jdk\/java\/lang\/ProcessHandle\/InfoTest.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -128,0 +128,17 @@\n+    public static boolean isCoreutilsSingleExecutable(String tool) {\n+        try {\n+            ProcessBuilder pb = new ProcessBuilder(\"coreutils\", \"--help\");\n+            pb.redirectErrorStream(true);\n+            Process p = pb.start();\n+            BufferedReader b = new BufferedReader(new InputStreamReader(p.getInputStream()));\n+            String line;\n+            while ((line = b.readLine()) != null) {\n+                if (line.contains(tool)) {\n+                    return true;\n+                }\n+            }\n+        } catch(Exception e) {\n+        }\n+        return false;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"}]}