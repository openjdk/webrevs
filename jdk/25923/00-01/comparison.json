{"files":[{"patch":"@@ -5344,36 +5344,0 @@\n-\/**\n- * Multiply 32 bit by 32 bit first loop.\n- *\/\n-void MacroAssembler::multiply_32_x_32_loop(Register x, Register xstart, Register x_xstart,\n-                                           Register y, Register y_idx, Register z,\n-                                           Register carry, Register product,\n-                                           Register idx, Register kdx) {\n-  \/\/ jlong carry, x[], y[], z[];\n-  \/\/ for (int idx=ystart, kdx=ystart+1+xstart; idx >= 0; idx--, kdx--) {\n-  \/\/     long product = y[idx] * x[xstart] + carry;\n-  \/\/     z[kdx] = (int)product;\n-  \/\/     carry = product >>> 32;\n-  \/\/ }\n-  \/\/ z[xstart] = (int)carry;\n-\n-  Label L_first_loop, L_first_loop_exit;\n-  blez(idx, L_first_loop_exit);\n-\n-  shadd(t0, xstart, x, t0, LogBytesPerInt);\n-  lwu(x_xstart, Address(t0, 0));\n-\n-  bind(L_first_loop);\n-  subiw(idx, idx, 1);\n-  shadd(t0, idx, y, t0, LogBytesPerInt);\n-  lwu(y_idx, Address(t0, 0));\n-  mul(product, x_xstart, y_idx);\n-  add(product, product, carry);\n-  srli(carry, product, 32);\n-  subiw(kdx, kdx, 1);\n-  shadd(t0, kdx, z, t0, LogBytesPerInt);\n-  sw(product, Address(t0, 0));\n-  bgtz(idx, L_first_loop);\n-\n-  bind(L_first_loop_exit);\n-}\n-\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":0,"deletions":36,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -1387,4 +1387,0 @@\n-  void multiply_32_x_32_loop(Register x, Register xstart, Register x_xstart,\n-                             Register y, Register y_idx, Register z,\n-                             Register carry, Register product,\n-                             Register idx, Register kdx);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}