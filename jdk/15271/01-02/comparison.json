{"files":[{"patch":"@@ -143,1 +143,1 @@\n-  _buffer = new StubQueue(new ICStubInterface, InlineCacheBufferSize, InlineCacheBuffer_lock, \"InlineCacheBuffer\");\n+  _buffer = new StubQueue(new ICStubInterface, checked_cast<int>(InlineCacheBufferSize), InlineCacheBuffer_lock, \"InlineCacheBuffer\");\n","filename":"src\/hotspot\/share\/code\/icBuffer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -220,2 +220,0 @@\n-  guarantee(_buffer_size  % stub_alignment() == 0, \"_buffer_size  not aligned\");\n-  guarantee(_buffer_limit % stub_alignment() == 0, \"_buffer_limit not aligned\");\n","filename":"src\/hotspot\/share\/code\/stubs.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -500,0 +500,5 @@\n+  } else if (InlineCacheBufferSize >= NonNMethodCodeHeapSize) {\n+    jio_fprintf(defaultStream::error_stream(),\n+                \"Invalid InlineCacheBufferSize=\" SIZE_FORMAT \"K. Must be less than NonNMethodCodeHeapSize=\" SIZE_FORMAT \"K.\\n\",\n+                InlineCacheBufferSize\/K, NonNMethodCodeHeapSize\/K);\n+    status = false;\n","filename":"src\/hotspot\/share\/compiler\/compilerDefinitions.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -442,26 +442,0 @@\n-JVMFlag::Error InlineCacheBufferSizeConstraintFunc(int value, bool verbose) {\n-  if (value <= 0) {\n-      JVMFlag::printError(verbose,\n-                          \"InlineCacheBufferSize (%d) must be \"\n-                          \"greater than %d\\n\",\n-                          value, 0);\n-      return JVMFlag::VIOLATES_CONSTRAINT;\n-  }\n-\n-  if ((uintx)value >= NonNMethodCodeHeapSize) {\n-    JVMFlag::printError(verbose,\n-                        \"InlineCacheBufferSize (%d) must be \"\n-                        \"less than NonNMethodCodeHeapSize (\" UINTX_FORMAT \")\\n\",\n-                        value, NonNMethodCodeHeapSize);\n-    return JVMFlag::VIOLATES_CONSTRAINT;\n-  }\n-\n-  if ((value % CodeEntryAlignment) != 0) {\n-    JVMFlag::printError(verbose,\n-                        \"InlineCacheBufferSize (%d) must be a multiple of \" INTX_FORMAT \"\\n\",\n-                        value, CodeEntryAlignment);\n-    return JVMFlag::VIOLATES_CONSTRAINT;\n-  }\n-\n-  return JVMFlag::SUCCESS;\n-}\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsCompiler.cpp","additions":0,"deletions":26,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -55,1 +55,0 @@\n-  f(int,   InlineCacheBufferSizeConstraintFunc)         \\\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsCompiler.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -298,1 +298,1 @@\n-  product(int, InlineCacheBufferSize, 10*K, EXPERIMENTAL,                   \\\n+  product(size_t, InlineCacheBufferSize, 10*K, EXPERIMENTAL,                \\\n@@ -300,1 +300,0 @@\n-          constraint(InlineCacheBufferSizeConstraintFunc, AfterErgo)        \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}