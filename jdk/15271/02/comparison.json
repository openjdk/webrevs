{"files":[{"patch":"@@ -143,1 +143,1 @@\n-  _buffer = new StubQueue(new ICStubInterface, 10*K, InlineCacheBuffer_lock, \"InlineCacheBuffer\");\n+  _buffer = new StubQueue(new ICStubInterface, checked_cast<int>(InlineCacheBufferSize), InlineCacheBuffer_lock, \"InlineCacheBuffer\");\n","filename":"src\/hotspot\/share\/code\/icBuffer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -220,2 +220,0 @@\n-  guarantee(_buffer_size  % stub_alignment() == 0, \"_buffer_size  not aligned\");\n-  guarantee(_buffer_limit % stub_alignment() == 0, \"_buffer_limit not aligned\");\n","filename":"src\/hotspot\/share\/code\/stubs.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -500,0 +500,5 @@\n+  } else if (InlineCacheBufferSize >= NonNMethodCodeHeapSize) {\n+    jio_fprintf(defaultStream::error_stream(),\n+                \"Invalid InlineCacheBufferSize=\" SIZE_FORMAT \"K. Must be less than NonNMethodCodeHeapSize=\" SIZE_FORMAT \"K.\\n\",\n+                InlineCacheBufferSize\/K, NonNMethodCodeHeapSize\/K);\n+    status = false;\n","filename":"src\/hotspot\/share\/compiler\/compilerDefinitions.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -298,0 +298,3 @@\n+  product(size_t, InlineCacheBufferSize, 10*K, EXPERIMENTAL,                \\\n+          \"InlineCacheBuffer size\")                                         \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}