{"files":[{"patch":"@@ -56,0 +56,1 @@\n+    private static final boolean COMPACT_STRINGS;\n@@ -63,0 +64,1 @@\n+            COMPACT_STRINGS = isCompactStrings();\n@@ -123,0 +125,3 @@\n+        if (!COMPACT_STRINGS) {\n+            assertEquals(UTF16, coder(orig), \"Non-COMPACT STRINGS coder must be UTF16\");\n+        }\n@@ -210,1 +215,1 @@\n-                    System.out.println(\"StringUTF16.compress returned 0, may not be intrinsic\");\n+                    System.err.println(\"Intrinsic for StringUTF16.compress returned 0, may not have been updated.\");\n@@ -310,3 +315,0 @@\n-                if (i >= 1_000_000) {\n-                    System.out.printf(\"Unable to produce a UTF16 string in %d iterations: %s%n\", i, original);\n-                }\n@@ -323,1 +325,1 @@\n-        if (original.chars().max().orElseThrow() > 256) {\n+        if (original.chars().max().getAsInt() >= 256) {\n@@ -356,3 +358,0 @@\n-                if (i >= 1_000_000) {\n-                    System.out.printf(\"Unable to produce a UTF16 string in %d iterations: %s%n\", i, original);\n-                }\n@@ -370,1 +369,1 @@\n-        if (original.chars().max().orElseThrow() > 256) {\n+        if (original.chars().max().getAsInt() >= 256) {\n@@ -403,3 +402,0 @@\n-                if (i >= 1_000_000) {\n-                    System.out.printf(\"Unable to create a string in %d iterations: %s%n\", i, original);\n-                }\n","filename":"test\/jdk\/java\/lang\/String\/StringRacyConstructor.java","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"}]}