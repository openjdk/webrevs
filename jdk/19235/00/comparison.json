{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import java.lang.reflect.Array;\n@@ -40,1 +41,0 @@\n-import java.util.Collection;\n@@ -246,0 +246,4 @@\n+        Class<?> componentType = makePrimitiveType(typeName);\n+        if (componentType == null) {\n+            return null;\n+        }\n@@ -247,58 +251,3 @@\n-        switch (typeName) {\n-        case \"int\":\n-            int[] ints = new int[length];\n-            for (int i = 0; i < length; i++) {\n-                ints[i] = (int) values.get(i);\n-            }\n-            return ints;\n-        case \"long\":\n-            long[] longs = new long[length];\n-            for (int i = 0; i < length; i++) {\n-                longs[i] = (long) values.get(i);\n-            }\n-            return longs;\n-\n-        case \"float\":\n-            float[] floats = new float[length];\n-            for (int i = 0; i < length; i++) {\n-                floats[i] = (float) values.get(i);\n-            }\n-            return floats;\n-\n-        case \"double\":\n-            double[] doubles = new double[length];\n-            for (int i = 0; i < length; i++) {\n-                doubles[i] = (double) values.get(i);\n-            }\n-            return doubles;\n-\n-        case \"short\":\n-            short[] shorts = new short[length];\n-            for (int i = 0; i < length; i++) {\n-                shorts[i] = (short) values.get(i);\n-            }\n-            return shorts;\n-        case \"char\":\n-            char[] chars = new char[length];\n-            for (int i = 0; i < length; i++) {\n-                chars[i] = (char) values.get(i);\n-            }\n-            return chars;\n-        case \"byte\":\n-            byte[] bytes = new byte[length];\n-            for (int i = 0; i < length; i++) {\n-                bytes[i] = (byte) values.get(i);\n-            }\n-            return bytes;\n-        case \"boolean\":\n-            boolean[] booleans = new boolean[length];\n-            for (int i = 0; i < length; i++) {\n-                booleans[i] = (boolean) values.get(i);\n-            }\n-            return booleans;\n-        case \"java.lang.String\":\n-            String[] strings = new String[length];\n-            for (int i = 0; i < length; i++) {\n-                strings[i] = (String) values.get(i);\n-            }\n-            return strings;\n+        Object array =  Array.newInstance(componentType, length);\n+        for (int index = 0; index < length; index++) {\n+            Array.set(array, index, values.get(index));\n@@ -306,1 +255,9 @@\n-        return null;\n+        return array;\n+    }\n+\n+    private static Class<?> makePrimitiveType(String typeName) {\n+        return switch(typeName) {\n+            case \"void\" -> null;\n+            case \"java.lang.String\" -> String.class;\n+            default -> Class.forPrimitiveName(typeName);\n+        };\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/util\/Utils.java","additions":17,"deletions":60,"binary":false,"changes":77,"status":"modified"}]}