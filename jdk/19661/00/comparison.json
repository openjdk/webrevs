{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -359,0 +359,1 @@\n+            Objects.requireNonNull(items); \/\/ ensure NPE is thrown before assert\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/ResponseSubscribers.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -749,0 +749,1 @@\n+        if (bufs == null) return 0;\n@@ -757,0 +758,1 @@\n+        if (bufs == null) return false;\n@@ -765,0 +767,1 @@\n+        if (bufs == null) return false;\n@@ -773,0 +776,1 @@\n+        if (bufs == null) return 0L;\n@@ -781,0 +785,1 @@\n+        if (bufs == null) return 0L;\n@@ -786,1 +791,2 @@\n-    public static int remaining(List<ByteBuffer> bufs, int max) {\n+    public static long remaining(List<ByteBuffer> bufs, long max) {\n+        if (bufs == null) return 0;\n@@ -797,1 +803,7 @@\n-    public static int remaining(ByteBuffer[] refs, int max) {\n+    public static int remaining(List<ByteBuffer> bufs, int max) {\n+        \/\/ safe cast since max is an int\n+        return (int) remaining(bufs, (long) max);\n+    }\n+\n+    public static long remaining(ByteBuffer[] refs, long max) {\n+        if (refs == null) return 0;\n@@ -808,0 +820,5 @@\n+    public static int remaining(ByteBuffer[] refs, int max) {\n+        \/\/ safe cast since max is an int\n+        return (int) remaining(refs, (long) max);\n+    }\n+\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/Utils.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @bug 8225583\n+ * @bug 8225583 8334028\n","filename":"test\/jdk\/java\/net\/httpclient\/BodySubscribersTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}