{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import sun.awt.AppContext;\n@@ -78,7 +77,1 @@\n-    private Window fullScreenWindow;\n-    private AppContext fullScreenAppContext; \/\/ tracks which AppContext\n-                                             \/\/ created the FS window\n-    \/\/ this lock is used for making synchronous changes to the AppContext's\n-    \/\/ current full screen window\n-    private final Object fsAppContextLock = new Object();\n-\n+    private volatile Window fullScreenWindow;\n@@ -306,9 +299,1 @@\n-        synchronized (fsAppContextLock) {\n-            \/\/ Associate fullscreen window with current AppContext\n-            if (w == null) {\n-                fullScreenAppContext = null;\n-            } else {\n-                fullScreenAppContext = AppContext.getAppContext();\n-            }\n-            fullScreenWindow = w;\n-        }\n+        fullScreenWindow = w;\n@@ -322,1 +307,1 @@\n-            if (SunToolkit.isDispatchThreadForAppContext(fullScreenWindow)) {\n+            if (EventQueue.isDispatchThread()) {\n@@ -345,9 +330,1 @@\n-        Window returnWindow = null;\n-        synchronized (fsAppContextLock) {\n-            \/\/ Only return a handle to the current fs window if we are in the\n-            \/\/ same AppContext that set the fs window\n-            if (fullScreenAppContext == AppContext.getAppContext()) {\n-                returnWindow = fullScreenWindow;\n-            }\n-        }\n-        return returnWindow;\n+        return fullScreenWindow;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/GraphicsDevice.java","additions":5,"deletions":28,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.Window;\n+\n+\/**\n+ * @test\n+ * @key headful\n+ * @bug 8359266\n+ * @summary Tests for a race condition when setting a full-screen window\n+ *\/\n+public final class FullScreenWindowRace {\n+\n+    public static void main(String[] args) throws InterruptedException {\n+        Window window = new Window(null);\n+        GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment()\n+                                               .getDefaultScreenDevice();\n+\n+        Thread thread = new Thread(() -> {\n+            while (gd.getFullScreenWindow() == null) {\n+                \/\/ Busy wait - can be optimized away without volatile\n+            }\n+        });\n+\n+        thread.setDaemon(true);\n+        thread.start();\n+\n+        \/\/ Give thread some time to start and begin the loop\n+        Thread.sleep(2000);\n+\n+        gd.setFullScreenWindow(window);\n+\n+        thread.join(15000);\n+\n+        boolean alive = thread.isAlive();\n+\n+        gd.setFullScreenWindow(null);\n+        window.dispose();\n+        if (alive) {\n+            throw new RuntimeException(\"Full screen window is NOT detected!\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/GraphicsDevice\/FullScreenWindowRace.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"}]}