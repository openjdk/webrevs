{"files":[{"patch":"@@ -361,1 +361,3 @@\n-            final ArrayDeque<Future<R>> window = new ArrayDeque<>(maxConcurrency);\n+            \/\/ ArrayDeque default initial size is 16\n+            final ArrayDeque<Future<R>> window =\n+                    new ArrayDeque<>(Math.min(maxConcurrency, 16));\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Gatherers.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -62,18 +62,0 @@\n-    private final static void assertThrowsNPE(Supplier<? extends Object> supplier) {\n-        try {\n-            var discard = supplier.get();\n-        } catch (NullPointerException npe) {\n-            return;\n-        }\n-        fail(\"Expected NullPointerException but wasn't thrown!\");\n-    }\n-\n-    private final static <T> void assertThrowsUOE(Supplier<T> supplier) {\n-        try {\n-            var discard = supplier.get();\n-        } catch (UnsupportedOperationException uoe) {\n-            return;\n-        }\n-        fail(\"Expected NullPointerException but wasn't thrown!\");\n-    }\n-\n@@ -115,21 +97,36 @@\n-        assertThrowsNPE(() -> Gatherer.of(nullInitializer, integrator, combiner, finisher));\n-        assertThrowsNPE(() -> Gatherer.of(initializer, nullIntegrator, combiner, finisher));\n-        assertThrowsNPE(() -> Gatherer.of(initializer, integrator, nullCombiner, finisher));\n-        assertThrowsNPE(() -> Gatherer.of(initializer, integrator, combiner, nullFinisher));\n-\n-        assertThrowsNPE(() -> Gatherer.of(nullIntegrator));\n-\n-        assertThrowsNPE(() -> Gatherer.of(nullIntegrator, finisher));\n-        assertThrowsNPE(() -> Gatherer.of(integrator, nullFinisher));\n-\n-        assertThrowsNPE(() -> Gatherer.ofSequential(nullInitializer, integrator));\n-        assertThrowsNPE(() -> Gatherer.ofSequential(initializer, nullIntegrator));\n-\n-        assertThrowsNPE(() -> Gatherer.ofSequential(nullIntegrator));\n-\n-        assertThrowsNPE(() -> Gatherer.ofSequential(nullIntegrator, finisher));\n-        assertThrowsNPE(() -> Gatherer.ofSequential(integrator, nullFinisher));\n-\n-        assertThrowsNPE(() -> Gatherer.ofSequential(nullInitializer, integrator, finisher));\n-        assertThrowsNPE(() -> Gatherer.ofSequential(initializer, nullIntegrator, finisher));\n-        assertThrowsNPE(() -> Gatherer.ofSequential(initializer, integrator, nullFinisher));\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.of(nullInitializer, integrator, combiner, finisher));\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.of(initializer, nullIntegrator, combiner, finisher));\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.of(initializer, integrator, nullCombiner, finisher));\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.of(initializer, integrator, combiner, nullFinisher));\n+\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.of(nullIntegrator));\n+\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.of(nullIntegrator, finisher));\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.of(integrator, nullFinisher));\n+\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.ofSequential(nullInitializer, integrator));\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.ofSequential(initializer, nullIntegrator));\n+\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.ofSequential(nullIntegrator));\n+\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.ofSequential(nullIntegrator, finisher));\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.ofSequential(integrator, nullFinisher));\n+\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.ofSequential(nullInitializer, integrator, finisher));\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.ofSequential(initializer, nullIntegrator, finisher));\n+        assertThrows(NullPointerException.class,\n+                () -> Gatherer.ofSequential(initializer, integrator, nullFinisher));\n","filename":"test\/jdk\/java\/util\/stream\/GathererAPITest.java","additions":36,"deletions":39,"binary":false,"changes":75,"status":"modified"}]}