{"files":[{"patch":"@@ -4491,1 +4491,3 @@\n-      _igvn.replace_node(opaque_node, _igvn.intcon(1));\n+      ConINode* one = _igvn.intcon(1);\n+      set_ctrl(one, C->root());\n+      _igvn.replace_node(opaque_node, one);\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,85 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8314116\n- * @summary We fail to remove a Template Assertion Predicate of a dying loop causing an assert. This will only be fixed\n- *          completely with JDK-8288981 and 8314116 just mitigates the problem.\n- * @requires vm.compiler2.enabled\n- * @run main\/othervm -Xbatch -XX:-TieredCompilation\n- *                   -XX:CompileCommand=compileonly,compiler.predicates.TestTemplateAssertionPredicateNotRemoved::*\n- *                   compiler.predicates.TestTemplateAssertionPredicateNotRemoved\n- * @run main\/othervm -Xbatch -XX:-TieredCompilation -XX:LoopMaxUnroll=0\n- *                   -XX:CompileCommand=compileonly,compiler.predicates.TestTemplateAssertionPredicateNotRemoved::*\n- *                   compiler.predicates.TestTemplateAssertionPredicateNotRemoved\n- *\/\n-\n-package compiler.predicates;\n-\n-public class TestTemplateAssertionPredicateNotRemoved {\n-    static int[] iArrFld = new int[10];\n-    static long x;\n-    public static void main(String[] strArr) {\n-        for (int i = 0; i < 10000; i++) {\n-            test(i);\n-            test2(i);\n-        }\n-    }\n-\n-    static void test(int i1) {\n-        int i5, i6 = 8;\n-\n-        for (int i3 = 100; i3 > 3; --i3) {\n-            for (i5 = 1; i5 < 5; i5++) {\n-                switch (i1) {\n-                    case 1:\n-                    case 4:\n-                    case 47:\n-                        i6 = 4;\n-                }\n-                iArrFld[i5] = 23;\n-            }\n-        }\n-    }\n-\n-    static void test2(int i1) {\n-        int i3, i4 = 70, i5, i6 = 8, iArr1[] = new int[10];\n-        double d1 = 0.41007;\n-        for (i3 = 100; i3 > 3; --i3) {\n-            i4 += 3;\n-            for (i5 = 1; i5 < 5; i5++) {\n-                switch (i1) {\n-                    case 1:\n-                    case 4:\n-                    case 47:\n-                        i6 = 34;\n-                }\n-                x \/= 34;\n-                iArrFld[i5] = 23;\n-            }\n-        }\n-\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/compiler\/predicates\/TestTemplateAssertionPredicateNotRemoved.java","additions":0,"deletions":85,"binary":false,"changes":85,"status":"deleted"},{"patch":"","filename":"test\/hotspot\/jtreg\/compiler\/predicates\/assertion\/TestAssertionPredicateDoesntConstantFold.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/hotspot\/jtreg\/compiler\/predicates\/TestAssertionPredicateDoesntConstantFold.java","status":"renamed"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8343137\n+ * @requires vm.debug == true & vm.compiler2.enabled\n+ * @summary Test that set_ctrl() is properly set for true constant when folding useless Template Assertion Predicate.\n+ * @run main\/othervm -Xcomp -XX:+VerifyLoopOptimizations\n+ *                   -XX:CompileCommand=compileonly,compiler.predicates.assertion.TestMissingSetCtrlForTrueConstant::test\n+ *                   compiler.predicates.assertion.TestMissingSetCtrlForTrueConstant\n+ *\/\n+\n+package compiler.predicates.assertion;\n+\n+public class TestMissingSetCtrlForTrueConstant {\n+    static long iFld;\n+    static int[] iArrFld = new int[100];\n+    static double[] dArrFld = new double[100];\n+\n+    public static void main(String[] strArr) {\n+        test();\n+    }\n+\n+    static void test() {\n+        long l = 34;\n+        for (int i = 78; i > 8; --i) {\n+            switch (i) {\n+                case 24:\n+                    l += iFld - 34;\n+                case 25:\n+                    iFld = iArrFld[i] += i;\n+            }\n+            dArrFld[i + 1] += i;\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/predicates\/assertion\/TestMissingSetCtrlForTrueConstant.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8314116\n+ * @summary We fail to remove a Template Assertion Predicate of a dying loop causing an assert. This will only be fixed\n+ *          completely with JDK-8288981 and 8314116 just mitigates the problem.\n+ * @requires vm.compiler2.enabled\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation\n+ *                   -XX:CompileCommand=compileonly,compiler.predicates.assertion.TestTemplateAssertionPredicateNotRemoved::*\n+ *                   compiler.predicates.assertion.TestTemplateAssertionPredicateNotRemoved\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation -XX:LoopMaxUnroll=0\n+ *                   -XX:CompileCommand=compileonly,compiler.predicates.assertion.TestTemplateAssertionPredicateNotRemoved::*\n+ *                   compiler.predicates.assertion.TestTemplateAssertionPredicateNotRemoved\n+ *\/\n+\n+package compiler.predicates.assertion;\n+\n+public class TestTemplateAssertionPredicateNotRemoved {\n+    static int[] iArrFld = new int[10];\n+    static long x;\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 10000; i++) {\n+            test(i);\n+            test2(i);\n+        }\n+    }\n+\n+    static void test(int i1) {\n+        int i5, i6 = 8;\n+\n+        for (int i3 = 100; i3 > 3; --i3) {\n+            for (i5 = 1; i5 < 5; i5++) {\n+                switch (i1) {\n+                    case 1:\n+                    case 4:\n+                    case 47:\n+                        i6 = 4;\n+                }\n+                iArrFld[i5] = 23;\n+            }\n+        }\n+    }\n+\n+    static void test2(int i1) {\n+        int i3, i4 = 70, i5, i6 = 8, iArr1[] = new int[10];\n+        double d1 = 0.41007;\n+        for (i3 = 100; i3 > 3; --i3) {\n+            i4 += 3;\n+            for (i5 = 1; i5 < 5; i5++) {\n+                switch (i1) {\n+                    case 1:\n+                    case 4:\n+                    case 47:\n+                        i6 = 34;\n+                }\n+                x \/= 34;\n+                iArrFld[i5] = 23;\n+            }\n+        }\n+\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/predicates\/assertion\/TestTemplateAssertionPredicateNotRemoved.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -30,2 +30,2 @@\n- *                   -XX:CompileCommand=compileonly,compiler.predicates.TestTemplateAssertionPredicateWithTwoUCTs::test\n- *                   compiler.predicates.TestTemplateAssertionPredicateWithTwoUCTs\n+ *                   -XX:CompileCommand=compileonly,compiler.predicates.assertion.TestTemplateAssertionPredicateWithTwoUCTs::test\n+ *                   compiler.predicates.assertion.TestTemplateAssertionPredicateWithTwoUCTs\n@@ -34,1 +34,1 @@\n-package compiler.predicates;\n+package compiler.predicates.assertion;\n","filename":"test\/hotspot\/jtreg\/compiler\/predicates\/assertion\/TestTemplateAssertionPredicateWithTwoUCTs.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/hotspot\/jtreg\/compiler\/predicates\/TestTemplateAssertionPredicateWithTwoUCTs.java","status":"renamed"}]}