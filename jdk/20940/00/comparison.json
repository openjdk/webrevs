{"files":[{"patch":"@@ -1375,0 +1375,1 @@\n+            .filter(p -> p.getFileName().toString().matches(\"africa|antarctica|asia|australasia|backward|backzone|etcetera|europe|factory|northamerica|southamerica\"))\n@@ -1397,1 +1398,2 @@\n-\n+                        var tokens = line.split(\"[ \\t]+\", -1);\n+                        var token0len = tokens.length > 0 ? tokens[0].length() : 0;\n@@ -1399,1 +1401,1 @@\n-                        if (line.startsWith(\"Zone\")) {\n+                        if (token0len > 0 && tokens[0].regionMatches(true, 0, \"Zone\", 0, token0len)) {\n@@ -1403,4 +1405,3 @@\n-                            var zl = line.split(\"[ \\t]+\", -1);\n-                            zone = zl[1];\n-                            rule = zl[3];\n-                            format = flipIfNeeded(inVanguard, zl[4]);\n+                            zone = tokens[1];\n+                            rule = tokens[3];\n+                            format = flipIfNeeded(inVanguard, tokens[4]);\n@@ -1409,2 +1410,3 @@\n-                                if (line.startsWith(\"Rule\") ||\n-                                    line.startsWith(\"Link\")) {\n+                                if (token0len > 0 &&\n+                                   (tokens[0].regionMatches(true, 0, \"Rule\", 0, token0len) ||\n+                                    tokens[0].regionMatches(true, 0, \"Link\", 0, token0len))) {\n@@ -1416,3 +1418,2 @@\n-                                    var s = line.split(\"[ \\t]+\", -1);\n-                                    rule = s[2];\n-                                    format = flipIfNeeded(inVanguard, s[3]);\n+                                    rule = tokens[2];\n+                                    format = flipIfNeeded(inVanguard, tokens[3]);\n@@ -1424,4 +1425,3 @@\n-                        if (line.startsWith(\"Rule\")) {\n-                            var rl = line.split(\"[ \\t]+\", -1);\n-                            tzdbSubstLetters.put(rl[1] + NBSP + (rl[8].equals(\"0\") ? STD : DST),\n-                                    rl[9].replace(NO_SUBST, \"\"));\n+                        if (token0len > 0 && tokens[0].regionMatches(true, 0, \"Rule\", 0, token0len)) {\n+                            tzdbSubstLetters.put(tokens[1] + NBSP + (tokens[8].equals(\"0\") ? STD : DST),\n+                                    tokens[9].replace(NO_SUBST, \"\"));\n@@ -1431,3 +1431,2 @@\n-                        if (line.startsWith(\"Link\")) {\n-                            var ll = line.split(\"[ \\t]+\", -1);\n-                            tzdbLinks.put(ll[2], ll[1]);\n+                        if (token0len > 0 && tokens[0].regionMatches(true, 0, \"Link\", 0, token0len)) {\n+                            tzdbLinks.put(tokens[2], tokens[1]);\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/CLDRConverter.java","additions":17,"deletions":18,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -167,1 +167,2 @@\n-                    if (line.startsWith(\"Zone\")) {        \/\/ parse Zone line\n+                    int token0len = tokens.length > 0 ? tokens[0].length() : line.length();\n+                    if (line.regionMatches(true, 0, \"Zone\", 0, token0len)) {        \/\/ parse Zone line\n@@ -185,1 +186,1 @@\n-                    } else if (line.startsWith(\"Rule\")) { \/\/ parse Rule line\n+                    } else if (line.regionMatches(true, 0, \"Rule\", 0, token0len)) { \/\/ parse Rule line\n@@ -191,1 +192,1 @@\n-                    } else if (line.startsWith(\"Link\")) { \/\/ parse link line\n+                    } else if (line.regionMatches(true, 0, \"Link\", 0, token0len)) { \/\/ parse link line\n@@ -307,1 +308,1 @@\n-                if (dayRule.startsWith(\"last\")) {\n+                if (dayRule.regionMatches(true, 0, \"last\", 0, 4)) {\n@@ -358,5 +359,6 @@\n-            switch (year.toLowerCase()) {\n-            case \"min\":  return 1900;\n-            case \"max\":  return Year.MAX_VALUE;\n-            case \"only\": return defaultYear;\n-            }\n+            int len = year.length();\n+\n+            if (year.regionMatches(true, 0, \"minimum\", 0, len)) return 1900;\n+            if (year.regionMatches(true, 0, \"maximum\", 0, len)) return Year.MAX_VALUE;\n+            if (year.regionMatches(true, 0, \"only\", 0, len)) return defaultYear;\n+\n","filename":"make\/jdk\/src\/classes\/build\/tools\/tzdb\/TzdbZoneRulesProvider.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,1 +171,2 @@\n-                if (\"min\".equals(token) || \"minimum\".equals(token)) {\n+                int len = token.length();\n+                if (token.regionMatches(true, 0, \"minimum\", 0, len)) {\n@@ -173,1 +174,1 @@\n-                } else if (\"max\".equals(token) || \"maximum\".equals(token)) {\n+                } else if (token.regionMatches(true, 0, \"maximum\", 0, len)) {\n@@ -176,1 +177,1 @@\n-                } else if (\"only\".equals(token)) {\n+                } else if (token.regionMatches(true, 0, \"only\", 0, len)) {\n","filename":"test\/jdk\/sun\/util\/calendar\/zi\/RuleRec.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -243,0 +243,1 @@\n+                int len = token.length();\n@@ -244,1 +245,1 @@\n-                if (continued || \"Zone\".equals(token)) {\n+                if (continued || token.regionMatches(true, 0, \"Zone\", 0, len)){\n@@ -271,1 +272,1 @@\n-                } else if (\"Rule\".equals(token)) {\n+                } else if (token.regionMatches(true, 0, \"Rule\", 0, len)) {\n@@ -284,1 +285,1 @@\n-                } else if (\"Link\".equals(token)) {\n+                } else if (token.regionMatches(true, 0, \"Link\", 0, len)) {\n","filename":"test\/jdk\/sun\/util\/calendar\/zi\/Zoneinfo.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}