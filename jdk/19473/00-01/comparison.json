{"files":[{"patch":"@@ -45,0 +45,1 @@\n+    private static final VectorSpecies<Long> L_SPECIES = LongVector.SPECIES_MAX;\n@@ -47,4 +48,1 @@\n-    private static final VectorSpecies<Long> L_SPECIES = LongVector.SPECIES_MAX.length() == 1 ? LongVector.SPECIES_128\n-                                                       : LongVector.SPECIES_MAX;\n-    private static final VectorSpecies<Double> D_SPECIES = DoubleVector.SPECIES_MAX.length() == 1 ? DoubleVector.SPECIES_128\n-                                                         : DoubleVector.SPECIES_MAX;\n+    private static final VectorSpecies<Double> D_SPECIES = DoubleVector.SPECIES_MAX;\n@@ -105,1 +103,1 @@\n-            longMask[i] = i % 2 == 0;\n+            longMask[i] = L_SPECIES.length() > 1 && i % 2 == 0;\n@@ -131,1 +129,1 @@\n-            doubleMask[i] = i % 2 == 0;\n+            doubleMask[i] = D_SPECIES.length() > 1 && i % 2 == 0;\n@@ -165,1 +163,1 @@\n-        Asserts.assertNotEquals(res, res2);\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && res.equals(res2));\n@@ -173,1 +171,1 @@\n-        Asserts.assertNotEquals(res, res2);\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && res.equals(res2));\n@@ -181,1 +179,1 @@\n-        Asserts.assertNotEquals(res, res2);\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && res.equals(res2));\n@@ -229,1 +227,1 @@\n-        Asserts.assertNotEquals(res, res2);\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && res.equals(res2));\n@@ -237,1 +235,1 @@\n-        Asserts.assertNotEquals(res, res2);\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && res.equals(res2));\n@@ -331,1 +329,1 @@\n-        Asserts.assertNotEquals(res, res2);\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && res.equals(res2));\n@@ -339,1 +337,1 @@\n-        Asserts.assertNotEquals(res, res2);\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && res.equals(res2));\n@@ -347,1 +345,1 @@\n-        Asserts.assertNotEquals(res, res2);\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && res.equals(res2));\n@@ -395,1 +393,1 @@\n-        Asserts.assertNotEquals(res, res2);\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && res.equals(res2));\n@@ -403,1 +401,1 @@\n-        Asserts.assertNotEquals(res, res2);\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && res.equals(res2));\n@@ -501,1 +499,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, res2));\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && Arrays.equals(res, res2));\n@@ -511,1 +509,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, res2));\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && Arrays.equals(res, res2));\n@@ -521,1 +519,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, res2));\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && Arrays.equals(res, res2));\n@@ -581,1 +579,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, res2));\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && Arrays.equals(res, res2));\n@@ -591,1 +589,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, res2));\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && Arrays.equals(res, res2));\n@@ -707,1 +705,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, res2));\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && Arrays.equals(res, res2));\n@@ -717,1 +715,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, res2));\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && Arrays.equals(res, res2));\n@@ -727,1 +725,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, res2));\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && Arrays.equals(res, res2));\n@@ -787,1 +785,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, res2));\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && Arrays.equals(res, res2));\n@@ -797,1 +795,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, res2));\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && Arrays.equals(res, res2));\n@@ -914,1 +912,1 @@\n-        Asserts.assertNotEquals(res, longVector);\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && res.equals(longVector));\n@@ -923,1 +921,1 @@\n-        Asserts.assertNotEquals(res, longVector);\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && res.equals(longVector));\n@@ -950,1 +948,1 @@\n-        Asserts.assertNotEquals(res2, longVector);\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && res2.equals(longVector));\n@@ -1046,1 +1044,1 @@\n-        Asserts.assertNotEquals(res, doubleVector);\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && res.equals(doubleVector));\n@@ -1055,1 +1053,1 @@\n-        Asserts.assertNotEquals(res, doubleVector);\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && res.equals(doubleVector));\n@@ -1082,1 +1080,1 @@\n-        Asserts.assertNotEquals(res2, doubleVector);\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && res2.equals(doubleVector));\n@@ -1180,1 +1178,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, longArray));\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && Arrays.equals(res, longArray));\n@@ -1189,1 +1187,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, longArray));\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && Arrays.equals(res, longArray));\n@@ -1216,1 +1214,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, longArray));\n+        Asserts.assertFalse(L_SPECIES.length() != 1 && Arrays.equals(res, longArray));\n@@ -1294,1 +1292,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, doubleArray));\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && Arrays.equals(res, doubleArray));\n@@ -1303,1 +1301,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, doubleArray));\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && Arrays.equals(res, doubleArray));\n@@ -1330,1 +1328,1 @@\n-        Asserts.assertFalse(Arrays.equals(res, doubleArray));\n+        Asserts.assertFalse(D_SPECIES.length() != 1 && Arrays.equals(res, doubleArray));\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorGatherMaskFoldingTest.java","additions":36,"deletions":38,"binary":false,"changes":74,"status":"modified"}]}