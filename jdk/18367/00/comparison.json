{"files":[{"patch":"@@ -1,43 +0,0 @@\n-<!--\n- Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--  \n-  @test\n-  @bug 4464714 6365898\n-  @summary Frames cannot be shown initially maximized\n-  @author Valeriy Ushakov: area=toplevel\n-  @run applet\/manual=yesno InitialMaximizedTest.html\n-  -->\n-<head>\n-<title> InitialMaximizedTest <\/title>\n-<\/head>\n-<body>\n-\n-<h1>InitialMaximizedTest<br>Bug ID: 4464714<\/h1>\n-\n-<p> See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"InitialMaximizedTest.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/Frame\/InitialMaximizedTest\/InitialMaximizedTest.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,10 @@\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.Insets;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+\n@@ -25,5 +35,4 @@\n-  test\n-  @bug 4464714 6365898\n-  @summary Frames cannot be shown initially maximized\n-  @author Valeriy Ushakov: area=toplevel\n-  @run applet\/manual=yesno InitialMaximizedTest.html\n+ * @test\n+ * @bug 4464714 6365898\n+ * @key headful\n+ * @summary Frames cannot be shown initially maximized\n@@ -32,80 +41,23 @@\n-\n-\/**\n- * InitialMaximizedTest.java\n- *\n- * summary:\n- *\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n-\n-\n-public class InitialMaximizedTest extends Applet\n-{\n-    Frame f;\n-\n-    public void init()\n-    {\n-        this.setLayout (new BorderLayout ());\n-\n-        String[] instructions =\n-        {\n-            \"This test creates a frame that is initially maximized.\",\n-            \"Press PASS if frame is shown initially maximized, else press FAIL\"\n-        };\n-        Sysout.createDialogWithInstructions( instructions );\n-\n-    }\/\/End  init()\n-\n-    public void start ()\n-    {\n-        \/\/Get things going.  Request focus, set size, et cetera\n-        setSize (200,200);\n-        setVisible(true);\n-        validate();\n-\n-        f = new Frame(\"The frame SHOULD be shown MAXIMIZED\");\n-        f.setSize(300, 300);\n-        f.setLocation(50, 50);\n-        f.setExtendedState(Frame.MAXIMIZED_BOTH);\n-        f.setVisible(true);\n-    }\/\/ start()\n-\n-}\/\/ class InitialMaximizedTest\n-\n-\/* Place other classes related to the test after this line *\/\n-\n-\n-\n-\n-\n-\/****************************************************\n- Standard Test Machinery\n- DO NOT modify anything below -- it's a standard\n-  chunk of code whose purpose is to make user\n-  interaction uniform, and thereby make it simpler\n-  to read and understand someone else's test.\n- ****************************************************\/\n-\n-\/**\n- This is part of the standard test machinery.\n- It creates a dialog (with the instructions), and is the interface\n-  for sending text messages to the user.\n- To print the instructions, send an array of strings to Sysout.createDialog\n-  WithInstructions method.  Put one line of instructions per array entry.\n- To display a message for the tester to see, simply call Sysout.println\n-  with the string to be displayed.\n- This mimics System.out.println but works within the test harness as well\n-  as standalone.\n- *\/\n-\n-class Sysout\n-{\n-    private static TestDialog dialog;\n-\n-    public static void createDialogWithInstructions( String[] instructions )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        dialog.printInstructions( instructions );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n+public class InitialMaximizedTest {\n+\n+    static Frame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        if (!Toolkit.getDefaultToolkit()\n+                    .isFrameStateSupported(Frame.MAXIMIZED_BOTH)) {\n+            return;\n+        }\n+\n+        Robot robot = new Robot();\n+        try {\n+            EventQueue.invokeAndWait(InitialMaximizedTest::createAndShowFrame);\n+            robot.waitForIdle();\n+            robot.delay(2000);\n+            EventQueue.invokeAndWait(InitialMaximizedTest::checkMaximized);\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n@@ -114,8 +66,2 @@\n-    public static void createDialog( )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-        dialog.printInstructions( defInstr );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n+    private static void checkMaximized() {\n+        Rectangle frameBounds = frame.getBounds();\n@@ -123,0 +69,2 @@\n+        GraphicsConfiguration gc = frame.getGraphicsConfiguration();\n+        Rectangle workArea = gc.getBounds();\n@@ -124,4 +72,5 @@\n-    public static void printInstructions( String[] instructions )\n-    {\n-        dialog.printInstructions( instructions );\n-    }\n+        Insets screenInsets = Toolkit.getDefaultToolkit().getScreenInsets(gc);\n+        workArea.x += screenInsets.left;\n+        workArea.y += screenInsets.top;\n+        workArea.width -= screenInsets.left + screenInsets.right;\n+        workArea.height -= screenInsets.top + screenInsets.bottom;\n@@ -129,0 +78,4 @@\n+        System.out.println(\"Frame bounds \" + frameBounds);\n+        System.out.println(\"GraphicsConfiguration bounds \" + gc.getBounds());\n+        System.out.println(\"Screen insets: \" + screenInsets);\n+        System.out.println(\"Work area: \" + workArea);\n@@ -130,3 +83,4 @@\n-    public static void println( String messageIn )\n-    {\n-        dialog.displayMessage( messageIn );\n+        \/\/frame bounds can exceed screen size on Windows, see 8231043\n+        if (!frameBounds.contains(workArea)) {\n+            throw new RuntimeException(\"Frame is not maximized\");\n+        }\n@@ -135,80 +89,12 @@\n-}\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog\n-{\n-\n-    TextArea instructionsText;\n-    TextArea messageText;\n-    int maxStringLength = 80;\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public TestDialog( Frame frame, String name )\n-    {\n-        super( frame, name );\n-        int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-        instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-        add( \"North\", instructionsText );\n-\n-        messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-        add(\"Center\", messageText);\n-\n-        pack();\n-\n-        setVisible(true);\n-    }\/\/ TestDialog()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void printInstructions( String[] instructions )\n-    {\n-        \/\/Clear out any current instructions\n-        instructionsText.setText( \"\" );\n-\n-        \/\/Go down array of instruction strings\n-\n-        String printStr, remainingStr;\n-        for( int i=0; i < instructions.length; i++ )\n-        {\n-            \/\/chop up each into pieces maxSringLength long\n-            remainingStr = instructions[ i ];\n-            while( remainingStr.length() > 0 )\n-            {\n-                \/\/if longer than max then chop off first max chars to print\n-                if( remainingStr.length() >= maxStringLength )\n-                {\n-                    \/\/Try to chop on a word boundary\n-                    int posOfSpace = remainingStr.\n-                        lastIndexOf( ' ', maxStringLength - 1 );\n-\n-                    if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-                    printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-                    remainingStr = remainingStr.substring( posOfSpace + 1 );\n-                }\n-                \/\/else just print\n-                else\n-                {\n-                    printStr = remainingStr;\n-                    remainingStr = \"\";\n-                }\n-\n-                instructionsText.append( printStr + \"\\n\" );\n-\n-            }\/\/ while\n-\n-        }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void displayMessage( String messageIn )\n-    {\n-        messageText.append( messageIn + \"\\n\" );\n-        System.out.println(messageIn);\n+    private static void createAndShowFrame() {\n+        frame = new Frame(\"The frame SHOULD be shown MAXIMIZED\");\n+        frame.setSize(300, 300);\n+        frame.setLocation(50, 50);\n+        frame.setExtendedState(Frame.MAXIMIZED_BOTH);\n+        frame.addWindowListener(new WindowAdapter() {\n+            @Override\n+            public void windowClosing(WindowEvent e) {\n+                frame.dispose();\n+            }\n+        });\n+        frame.setVisible(true);\n@@ -216,2 +102,1 @@\n-\n-}\/\/ TestDialog  class\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/InitialMaximizedTest\/InitialMaximizedTest.java","additions":68,"deletions":183,"binary":false,"changes":251,"status":"modified"}]}