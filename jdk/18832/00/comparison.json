{"files":[{"patch":"@@ -1078,16 +1078,1 @@\n-            Set<JCMethodInvocation> prevInvocationsWithPatternMatchingCatch = invocationsWithPatternMatchingCatch;\n-            ListBuffer<int[]> prevRanges = patternMatchingInvocationRanges;\n-            State startState = code.state.dup();\n-            try {\n-                invocationsWithPatternMatchingCatch = tree.patternMatchingCatch.calls2Handle();\n-                patternMatchingInvocationRanges = new ListBuffer<>();\n-                doVisitBlock(tree);\n-            } finally {\n-                Chain skipCatch = code.branch(goto_);\n-                JCCatch handler = tree.patternMatchingCatch.handler();\n-                code.entryPoint(startState, handler.param.sym.type);\n-                genPatternMatchingCatch(handler, env, patternMatchingInvocationRanges.toList());\n-                code.resolve(skipCatch);\n-                invocationsWithPatternMatchingCatch = prevInvocationsWithPatternMatchingCatch;\n-                patternMatchingInvocationRanges = prevRanges;\n-            }\n+            visitBlockWithPatterns(tree);\n@@ -1095,1 +1080,20 @@\n-            doVisitBlock(tree);\n+            internalVisitBlock(tree);\n+        }\n+    }\n+\n+    private void visitBlockWithPatterns(JCBlock tree) {\n+        Set<JCMethodInvocation> prevInvocationsWithPatternMatchingCatch = invocationsWithPatternMatchingCatch;\n+        ListBuffer<int[]> prevRanges = patternMatchingInvocationRanges;\n+        State startState = code.state.dup();\n+        try {\n+            invocationsWithPatternMatchingCatch = tree.patternMatchingCatch.calls2Handle();\n+            patternMatchingInvocationRanges = new ListBuffer<>();\n+            internalVisitBlock(tree);\n+        } finally {\n+            Chain skipCatch = code.branch(goto_);\n+            JCCatch handler = tree.patternMatchingCatch.handler();\n+            code.entryPoint(startState, handler.param.sym.type);\n+            genPatternMatchingCatch(handler, env, patternMatchingInvocationRanges.toList());\n+            code.resolve(skipCatch);\n+            invocationsWithPatternMatchingCatch = prevInvocationsWithPatternMatchingCatch;\n+            patternMatchingInvocationRanges = prevRanges;\n@@ -1099,1 +1103,1 @@\n-    private void doVisitBlock(JCBlock tree) {\n+    private void internalVisitBlock(JCBlock tree) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java","additions":22,"deletions":18,"binary":false,"changes":40,"status":"modified"}]}