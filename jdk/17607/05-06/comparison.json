{"files":[{"patch":"@@ -46,1 +46,1 @@\n- * @library \/test\/lib \/java\/awt\/regtesthelpers\n+ * @library \/java\/awt\/regtesthelpers\n@@ -69,2 +69,0 @@\n-            \" You must have a printer available to perform this test\\n\" +\n-            \"\\n\" +\n@@ -80,2 +78,3 @@\n-        myImageableRightLabel.setText(\"Format Right Margin = \" + (myPageFormat.getWidth()\n-                - (myPageFormat.getImageableX() + myPageFormat.getImageableWidth())));\n+        myImageableRightLabel.setText(\"Format Right Margin = \"\n+                + (myPageFormat.getWidth()\n+                        - (myPageFormat.getImageableX() + myPageFormat.getImageableWidth())));\n@@ -86,2 +85,3 @@\n-        myImageableBottomLabel.setText(\"Format Bottom Margin = \" + (myPageFormat.getHeight()\n-                - (myPageFormat.getImageableY() + myPageFormat.getImageableHeight())));\n+        myImageableBottomLabel.setText(\"Format Bottom Margin = \"\n+                + (myPageFormat.getHeight()\n+                        - (myPageFormat.getImageableY() + myPageFormat.getImageableHeight())));\n@@ -111,2 +111,3 @@\n-        pgrm.setText(\"Paper Right Margin = \" + (p.getWidth()\n-                - (p.getImageableX() + p.getImageableWidth())));\n+        pgrm.setText(\"Paper Right Margin = \"\n+                + (p.getWidth()\n+                        - (p.getImageableX() + p.getImageableWidth())));\n@@ -115,2 +116,3 @@\n-        pgbm.setText(\"Paper Bottom Margin = \" + (p.getHeight()\n-                - (p.getImageableY() + p.getImageableHeight())));\n+        pgbm.setText(\"Paper Bottom Margin = \"\n+                + (p.getHeight()\n+                        - (p.getImageableY() + p.getImageableHeight())));\n@@ -176,1 +178,0 @@\n-                    PassFailJFrame.forceFail( \"Test Failed\");\n@@ -178,0 +179,1 @@\n+                    PassFailJFrame.forceFail(\"Test failed because of PrinterException\");\n@@ -189,1 +191,0 @@\n-                    PassFailJFrame.forceFail( \"Test Failed\");\n@@ -191,0 +192,1 @@\n+                    PassFailJFrame.forceFail(\"Test failed because of PrinterException\");\n","filename":"test\/jdk\/java\/awt\/print\/PageFormat\/PageSetupDialog.java","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @library \/test\/lib \/java\/awt\/regtesthelpers\n+ * @library \/java\/awt\/regtesthelpers\n@@ -48,4 +48,3 @@\n-            \"Test that print job cancellation works.\\n\" +\n-            \"You must have a printer available to perform this test.\\n\" +\n-            \"This test silently starts a print job and while the job is\\n\" +\n-            \"still being printed, cancels the print job\\n\" +\n+            \"Test that print job cancellation works.\\n\\n\" +\n+            \"This test starts after clicking OK \/ Print button, while the job is\\n\" +\n+            \"progress automatically cancels the print job.\\n\" +\n@@ -53,3 +52,1 @@\n-            \"was properly cancelled.\\n\" +\n-            \"You will need to kill the application manually since regression\\n\" +\n-            \"tests apparently aren't supposed to call System.exit()\";\n+            \"was properly cancelled.\";\n@@ -75,1 +72,3 @@\n-\n+        else {\n+            PassFailJFrame.forceFail(\"User cancelled\");\n+        }\n@@ -95,0 +94,1 @@\n+            prex.printStackTrace();\n@@ -97,1 +97,0 @@\n-            prex.printStackTrace();\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/Cancel\/PrinterJobCancel.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * @library \/test\/lib \/java\/awt\/regtesthelpers\n+ * @library \/java\/awt\/regtesthelpers\n@@ -50,2 +50,0 @@\n-            \"You must have a printer available to perform this test.\\n\" +\n-            \"\\n\" +\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintAllFonts.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import javax.swing.JOptionPane;\n@@ -46,1 +47,1 @@\n- * @library \/test\/lib \/java\/awt\/regtesthelpers\n+ * @library \/java\/awt\/regtesthelpers\n@@ -70,2 +71,3 @@\n-        myImageableRightLabel.setText(\"Format Right Margin = \" + drnd(myPageFormat.getWidth()\n-                - (myPageFormat.getImageableX() + myPageFormat.getImageableWidth())));\n+        myImageableRightLabel.setText(\"Format Right Margin = \"\n+                + drnd(myPageFormat.getWidth()\n+                        - (myPageFormat.getImageableX() + myPageFormat.getImageableWidth())));\n@@ -76,2 +78,3 @@\n-        myImageableBottomLabel.setText(\"Format Bottom Margin = \" + drnd(myPageFormat.getHeight()\n-                - (myPageFormat.getImageableY() + myPageFormat.getImageableHeight())));\n+        myImageableBottomLabel.setText(\"Format Bottom Margin = \"\n+                + drnd(myPageFormat.getHeight()\n+                        - (myPageFormat.getImageableY() + myPageFormat.getImageableHeight())));\n@@ -96,2 +99,3 @@\n-        pgrm.setText(\"Paper Right Margin = \" + drnd(p.getWidth()\n-                - (p.getImageableX() + p.getImageableWidth())));\n+        pgrm.setText(\"Paper Right Margin = \"\n+                + drnd(p.getWidth()\n+                        - (p.getImageableX() + p.getImageableWidth())));\n@@ -99,2 +103,3 @@\n-        pgbm.setText(\"Paper Bottom Margin = \" + drnd(p.getHeight()\n-                - (p.getImageableY() + p.getImageableHeight())));\n+        pgbm.setText(\"Paper Bottom Margin = \"\n+                + drnd(p.getHeight()\n+                        - (p.getImageableY() + p.getImageableHeight())));\n@@ -104,10 +109,1 @@\n-        d = d * 10.0 + 0.5;\n-        d = Math.floor(d) \/ 10.0;\n-        String ds = Double.toString(d);\n-        int decimal_pos = ds.indexOf(\".\");\n-        int len = ds.length();\n-        if (len > decimal_pos + 2) {\n-            return ds.substring(0, decimal_pos + 2);\n-        } else {\n-            return ds;\n-        }\n+        return String.format(\"%.2f\", d);\n@@ -188,1 +184,0 @@\n-                PassFailJFrame.forceFail( \"Test Failed\");\n@@ -190,0 +185,1 @@\n+                PassFailJFrame.forceFail(\"Test failed because of PrinterException\");\n@@ -216,2 +212,3 @@\n-                PassFailJFrame.forceFail( \"Test Failed\");\n-                nfe.printStackTrace();\n+                JOptionPane.showMessageDialog(null,\n+                        \"NumberFormatException occured\",\"Error\",\n+                        JOptionPane.ERROR_MESSAGE);\n@@ -228,1 +225,0 @@\n-        String ls = System.getProperty(\"line.Separator\", \"\\n\");\n@@ -230,7 +226,7 @@\n-                \"When validating a page, the process is 1st to find the closest matching \" + ls +\n-                \"paper size, next to make sure the requested imageable area fits within \" + ls +\n-                \"the printer's imageable area for that paper size. Finally the top and \" + ls +\n-                \"left margins will be shrunk if they are too great for the adjusted \" + ls +\n-                \"imageable area to fit at that position. They will shrink by the minimum\" + ls +\n-                \"needed to accomodate the imageable area.\" + ls + ls +\n-                \"To test 6229507, put the minimum margins (all 0s) in Page Setup dialog.\" + ls +\n+                \"When validating a page, the process is 1st to find the closest matching \\n\" +\n+                \"paper size, next to make sure the requested imageable area fits within \\n\" +\n+                \"the printer's imageable area for that paper size. Finally the top and \\n\" +\n+                \"left margins will be shrunk if they are too great for the adjusted \\n\" +\n+                \"imageable area to fit at that position. They will shrink by the minimum\\n\" +\n+                \"needed to accomodate the imageable area.\\n \\n \\n\" +\n+                \"To test 6229507, put the minimum margins (all 0s) in Page Setup dialog.\\n\" +\n@@ -279,1 +275,0 @@\n-            \"You must have a printer available to perform this test\\n\" +\n@@ -281,1 +276,1 @@\n-            \"There are several buttons.\\n\" +\n+            \"There are several buttons.\\n\\n\" +\n@@ -284,2 +279,2 @@\n-            \"test validatePage.\\n\" +\n-            \"Default Page: sets a default page. This should always be valid.\\n\" +\n+            \"test validatePage.\\n\\n\" +\n+            \"Default Page: sets a default page. This should always be valid.\\n\\n\" +\n@@ -288,1 +283,1 @@\n-            \"orientation and margins - which of course affect imageable area.\\n\" +\n+            \"orientation and margins - which of course affect imageable area.\\n\\n\" +\n@@ -291,6 +286,5 @@\n-            \"You must OK this dialog for it to have any effect.\\n\" +\n-            \"Validate Page:\\n\" +\n-            \"The most important button in the test. By setting nonsensical\\n\" +\n-            \"or valid papers with varying margins etc, this should always find\\n\" +\n-            \"the closest\\n\" +\n-            \"match within the limits of what is possible on the current printer.\\n\" +\n+            \"You must OK this dialog for it to have any effect.\\n\\n\" +\n+            \"Validate Page:The most important button in the test.\\n\" +\n+            \"By setting nonsensical or valid papers with varying margins etc,\\n\" +\n+            \"this should always find the closest match within the limits of\\n\" +\n+            \"what is possible on the current printer.\\n\\n\" +\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/ValidatePage\/ValidatePage.java","additions":35,"deletions":41,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * @library \/test\/lib \/java\/awt\/regtesthelpers\n+ * @library \/java\/awt\/regtesthelpers\n@@ -54,1 +54,0 @@\n-            \"You must have a printer available to perform this test\\n\" +\n@@ -99,1 +98,0 @@\n-                PassFailJFrame.forceFail( \"Test Failed\");\n@@ -101,0 +99,1 @@\n+                PassFailJFrame.forceFail(\"Test failed because of PrinterException\");\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/raster\/RasterTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}