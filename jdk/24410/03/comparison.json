{"files":[{"patch":"@@ -1322,0 +1322,5 @@\n+  \/\/ Mod by zero?  Throw an exception at runtime!\n+  if (type_divisor->is_con() && type_divisor->get_con() == 0) {\n+    return TypeClass::POS;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/divnode.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8351660\n+ * @summary Test that modulo by zero throws exception at runtime in case of unsigned values.\n+ * @library \/test\/lib\n+ * @run main\/othervm -Xbatch\n+ *                   -XX:CompileCommand=compileonly,compiler.integerArithmetic.TestUnsignedModByZero::testInt\n+ *                   -XX:CompileCommand=compileonly,compiler.integerArithmetic.TestUnsignedModByZero::testLong\n+ *                   compiler.integerArithmetic.TestUnsignedModByZero\n+ *\/\n+\n+ package compiler.integerArithmetic;\n+\n+ import jdk.test.lib.Asserts;\n+\n+\n+ public class TestUnsignedModByZero {\n+\n+     public static Object testInt() {\n+        double x = 1.0;\n+        return Integer.remainderUnsigned(1, (int)(x % x));\n+    }\n+\n+     public static Object testLong() {\n+        double x = 1.0;\n+        return Long.remainderUnsigned(1, (long)(x % x));\n+    }\n+\n+     public static void main(String[] args) {\n+        for (int i = 0; i < 10_000; i++) {\n+             Asserts.assertThrows(ArithmeticException.class, TestUnsignedModByZero::testInt);\n+             Asserts.assertThrows(ArithmeticException.class, TestUnsignedModByZero::testLong);\n+        }\n+     }\n+ }\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/integerArithmetic\/TestUnsignedModByZero.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}