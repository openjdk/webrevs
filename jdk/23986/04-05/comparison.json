{"files":[{"patch":"@@ -43,5 +43,2 @@\n- * The {@linkplain #UTF8 UTF-8 ZipCoder instance}, which gets returned by {@link #get(Charset)}\n- * for {@linkplain java.nio.charset.StandardCharsets#UTF_8 UTF-8 Charset} is thread-safe\n- * and can be used concurrently by multiple threads. All other {@code ZipCoder} instances\n- * are not thread-safe and external synchronization is required by callers, if those\n- * instances are to be used concurrently by multiple threads.\n+ * The {@code ZipCoder} for UTF-8 charset is thread safe, {@code ZipCoder}\n+ * for other charsets require external synchronization.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -85,2 +85,1 @@\n-    \/\/ the ZipCoder instance is derived from the Charset passed to the ZipFile constructor\n-    \/\/ and will be used for decoding the non-UTF-8 entry names and the ZIP file comment.\n+    \/\/ ZipCoder for entry names and comments when not using UTF-8\n@@ -1146,4 +1145,1 @@\n-    \/\/ Implementation note: This class must be thread-safe.\n-    \/\/ Each instance of Source could be shared between multiple different instances of ZipFile.\n-    \/\/ Although ZipFile isn't thread-safe, the fact that separate instances of ZipFile could\n-    \/\/ still concurrently use the same Source instance, mandates that Source must be thread-safe.\n+    \/\/ Implementation note: This class is be thread safe.\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}