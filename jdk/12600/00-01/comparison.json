{"files":[{"patch":"@@ -2389,0 +2389,4 @@\n+     *\n+     * @apiNote An invocation of this method on a {@link String} {@code s}\n+     * is behaviorally equivalent to the invocation\n+     * {@code s.indexOf(ch, 0, s.length())}.\n@@ -2432,0 +2436,4 @@\n+     *\n+     * @apiNote An invocation of this method on a {@link String} {@code s}\n+     * is behaviorally equivalent to the invocation\n+     * {@code s.indexOf(ch, fromIndex, s.length())}.\n@@ -2462,1 +2470,1 @@\n-     * {@code toIndex}. Negative values have the same effect as it they were zero.\n+     * {@code toIndex}. Negative values have the same effect as if they were zero.\n@@ -2479,0 +2487,1 @@\n+     * @since   21\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-    private static int indexOfChar(byte[] value, int ch, int fromIndex, int toIndex) {\n+    private static int indexOfChar(byte[] value, int ch, int fromIndex, int max) {\n@@ -218,1 +218,1 @@\n-        for (int i = fromIndex; i < toIndex; i++) {\n+        for (int i = fromIndex; i < max; i++) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -537,3 +537,3 @@\n-    private static int indexOfChar(byte[] value, int ch, int fromIndex, int toIndex) {\n-        checkBoundsBeginEnd(fromIndex, toIndex, value);\n-        return indexOfCharUnsafe(value, ch, fromIndex, toIndex);\n+    private static int indexOfChar(byte[] value, int ch, int fromIndex, int max) {\n+        checkBoundsBeginEnd(fromIndex, max, value);\n+        return indexOfCharUnsafe(value, ch, fromIndex, max);\n@@ -542,2 +542,2 @@\n-    private static int indexOfCharUnsafe(byte[] value, int ch, int fromIndex, int toIndex) {\n-        for (int i = fromIndex; i < toIndex; i++) {\n+    private static int indexOfCharUnsafe(byte[] value, int ch, int fromIndex, int max) {\n+        for (int i = fromIndex; i < max; i++) {\n@@ -554,1 +554,1 @@\n-    private static int indexOfSupplementary(byte[] value, int ch, int fromIndex, int toIndex) {\n+    private static int indexOfSupplementary(byte[] value, int ch, int fromIndex, int max) {\n@@ -558,2 +558,2 @@\n-            checkBoundsBeginEnd(fromIndex, toIndex, value);\n-            for (int i = fromIndex; i < toIndex - 1; i++) {\n+            checkBoundsBeginEnd(fromIndex, max, value);\n+            for (int i = fromIndex; i < max - 1; i++) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}