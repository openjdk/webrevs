{"files":[{"patch":"@@ -2434,2 +2434,2 @@\n-     * As opposed to how {@link #substring(int)} behaves, this method does not\n-     * throw an exception when {@code fromIndex} is outside the valid range.\n+     * Unlike {@link #substring(int)}, for example, this method does not throw\n+     * an exception when {@code fromIndex} is outside the valid range.\n@@ -2453,2 +2453,2 @@\n-     * specified character, starting the search at {@code fromIndex} and\n-     * stopping before {@code toIndex}.\n+     * specified character, starting the search at {@code beginIndex} and\n+     * stopping before {@code endIndex}.\n@@ -2458,2 +2458,2 @@\n-     * object at an index no smaller than {@code fromIndex} but smaller than\n-     * {@code toIndex}, then\n+     * object at an index no smaller than {@code beginIndex} but smaller than\n+     * {@code endIndex}, then\n@@ -2464,1 +2464,1 @@\n-     * (this.charAt(<i>k<\/i>) == ch) &amp;&amp; (fromIndex &lt;= <i>k<\/i> &lt; toIndex)\n+     * (this.charAt(<i>k<\/i>) == ch) &amp;&amp; (beginIndex &lt;= <i>k<\/i> &lt; endIndex)\n@@ -2469,1 +2469,1 @@\n-     * (this.codePointAt(<i>k<\/i>) == ch) &amp;&amp; (fromIndex &lt;= <i>k<\/i> &lt; toIndex)\n+     * (this.codePointAt(<i>k<\/i>) == ch) &amp;&amp; (beginIndex &lt;= <i>k<\/i> &lt; endIndex)\n@@ -2472,2 +2472,2 @@\n-     * string at or after position {@code fromIndex} and before position\n-     * {@code toIndex}, then {@code -1} is returned.\n+     * string at or after position {@code beginIndex} and before position\n+     * {@code endIndex}, then {@code -1} is returned.\n@@ -2479,2 +2479,2 @@\n-     * @param   fromIndex   the index to start the search from (included).\n-     * @param   toIndex     the index to stop the search at (excluded).\n+     * @param   beginIndex  the index to start the search from (included).\n+     * @param   endIndex    the index to stop the search at (excluded).\n@@ -2483,1 +2483,1 @@\n-     *          than or equal to {@code fromIndex} and less than {@code toIndex},\n+     *          than or equal to {@code beginIndex} and less than {@code endIndex},\n@@ -2485,4 +2485,4 @@\n-     * @throws  StringIndexOutOfBoundsException if {@code fromIndex}\n-     *          is negative, or {@code toIndex} is larger than the length of\n-     *          this {@code String} object, or {@code fromIndex} is larger than\n-     *          {@code toIndex}.\n+     * @throws  StringIndexOutOfBoundsException if {@code beginIndex}\n+     *          is negative, or {@code endIndex} is larger than the length of\n+     *          this {@code String} object, or {@code beginIndex} is larger than\n+     *          {@code endIndex}.\n@@ -2491,4 +2491,4 @@\n-    public int indexOf(int ch, int fromIndex, int toIndex) {\n-        checkBoundsBeginEnd(fromIndex, toIndex, length());\n-        return isLatin1() ? StringLatin1.indexOf(value, ch, fromIndex, toIndex)\n-                : StringUTF16.indexOf(value, ch, fromIndex, toIndex);\n+    public int indexOf(int ch, int beginIndex, int endIndex) {\n+        checkBoundsBeginEnd(beginIndex, endIndex, length());\n+        return isLatin1() ? StringLatin1.indexOf(value, ch, beginIndex, endIndex)\n+                : StringUTF16.indexOf(value, ch, beginIndex, endIndex);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"}]}