{"files":[{"patch":"@@ -2434,3 +2434,6 @@\n-     * Rather than throwing an exception, this method returns -1 when\n-     * {@code fromIndex} is larger than the length of the string. This result is\n-     * indistinguishable from a genuine absence of {@code ch} in the string.\n+     * As opposed to how {@link #substring(int)} behaves, this method does not\n+     * throw an exception when {@code fromIndex} is outside the valid range.\n+     * Rather, it returns -1 when {@code fromIndex} is larger than the length of\n+     * the string.\n+     * This result is, by itself, indistinguishable from a genuine absence of\n+     * {@code ch} in the string.\n@@ -2438,1 +2441,2 @@\n-     * should be considered instead. On a string {@code s}, for example,\n+     * should be considered instead.\n+     * On a {@link String} {@code s}, for example,\n@@ -2440,1 +2444,1 @@\n-     * {@code fromIndex} were larger than the string length, or even negative.\n+     * {@code fromIndex} were larger than the string length, or were negative.\n@@ -2443,2 +2447,2 @@\n-        return isLatin1() ? StringLatin1.indexOf(value, ch, fromIndex, value.length)\n-                : StringUTF16.indexOf(value, ch, fromIndex, value.length >> 1);\n+        return isLatin1() ? StringLatin1.indexOf(value, ch, fromIndex, length())\n+                : StringUTF16.indexOf(value, ch, fromIndex, length());\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"}]}