{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.util.Locale;\n@@ -84,14 +83,0 @@\n-    public void setEra(CalendarDate date, String eraName) {\n-        if (eras == null) {\n-            return; \/\/ should report an error???\n-        }\n-        for (int i = 0; i < eras.length; i++) {\n-            Era e = eras[i];\n-            if (e != null && e.getName().equals(eraName)) {\n-                date.setEra(e);\n-                return;\n-            }\n-        }\n-        throw new IllegalArgumentException(\"unknown era name: \" + eraName);\n-    }\n-\n@@ -261,9 +246,0 @@\n-    \/**\n-     * Returns 7 in this default implementation.\n-     *\n-     * @return 7\n-     *\/\n-    public int getWeekLength() {\n-        return 7;\n-    }\n-\n@@ -344,1 +320,1 @@\n-     * @param date a <code>CalendarDate<\/code> to stored the\n+     * @param date a <code>CalendarDate<\/code> to store the\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/AbstractCalendar.java","additions":2,"deletions":26,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -310,4 +310,0 @@\n-    public int getYearLengthInMonths(CalendarDate date) {\n-        return 12;\n-    }\n-\n@@ -530,1 +526,1 @@\n-     * @see BaseCalendar#isGregorianLeapYear\n+     * @see CalendarUtils#isGregorianLeapYear\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/BaseCalendar.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,1 +155,1 @@\n-     * @see BaseCalendar#isGregorianLeapYear\n+     * @see CalendarUtils#isGregorianLeapYear\n@@ -197,8 +197,0 @@\n-    public CalendarDate addDayOfMonth(int n) {\n-        if (n != 0) {\n-            dayOfMonth += n;\n-            normalized = false;\n-        }\n-        return this;\n-    }\n-\n@@ -250,8 +242,0 @@\n-    public CalendarDate addMinutes(int n) {\n-        if (n != 0) {\n-            minutes += n;\n-            normalized = false;\n-        }\n-        return this;\n-    }\n-\n@@ -270,8 +254,0 @@\n-    public CalendarDate addSeconds(int n) {\n-        if (n != 0) {\n-            seconds += n;\n-            normalized = false;\n-        }\n-        return this;\n-    }\n-\n@@ -290,8 +266,0 @@\n-    public CalendarDate addMillis(int n) {\n-        if (n != 0) {\n-            millis += n;\n-            normalized = false;\n-        }\n-        return this;\n-    }\n-\n@@ -312,7 +280,0 @@\n-    public CalendarDate addDate(int year, int month, int dayOfMonth) {\n-        addYear(year);\n-        addMonth(month);\n-        addDayOfMonth(dayOfMonth);\n-        return this;\n-    }\n-\n@@ -327,8 +288,0 @@\n-    public CalendarDate addTimeOfDay(int hours, int minutes, int seconds, int millis) {\n-        addHours(hours);\n-        addMinutes(minutes);\n-        addSeconds(seconds);\n-        addMillis(millis);\n-        return this;\n-    }\n-\n@@ -348,4 +301,0 @@\n-    public void setStandardTime(boolean standardTime) {\n-        forceStandardTime = standardTime;\n-    }\n-\n@@ -385,1 +334,1 @@\n-        if (!(obj instanceof CalendarDate)) {\n+        if (!(obj instanceof CalendarDate that)) {\n@@ -388,1 +337,0 @@\n-        CalendarDate that = (CalendarDate) obj;\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/CalendarDate.java","additions":3,"deletions":55,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,8 +237,0 @@\n-    \/**\n-     * Returns the number of months of the specified year. This method\n-     * does not perform the normalization with the specified\n-     * <code>CalendarDate<\/code>. The <code>CalendarDate<\/code> must\n-     * be normalized to get a correct value.\n-     *\/\n-    public abstract int getYearLengthInMonths(CalendarDate date);\n-\n@@ -258,7 +250,0 @@\n-    \/**\n-     * Returns the length in days of a week in this calendar\n-     * system. If this calendar system has multiple radix weeks, this\n-     * method returns only one of them.\n-     *\/\n-    public abstract int getWeekLength();\n-\n@@ -290,7 +275,0 @@\n-    \/**\n-     * @throws IllegalArgumentException if the specified era name is\n-     * unknown to this calendar system.\n-     * @see Era\n-     *\/\n-    public abstract void setEra(CalendarDate date, String eraName);\n-\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/CalendarSystem.java","additions":1,"deletions":23,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.util.HashMap;\n-import java.util.Map;\n-\n@@ -112,23 +109,0 @@\n-    \/**\n-     * Divides two integers and returns the floor of the quotient and\n-     * the modulus remainder.  For example,\n-     * <code>floorDivide(-1,4)<\/code> returns <code>-1<\/code> with\n-     * <code>3<\/code> as its remainder, while <code>-1\/4<\/code> is\n-     * <code>0<\/code> and <code>-1%4<\/code> is <code>-1<\/code>.\n-     *\n-     * @param n the numerator\n-     * @param d a divisor which must be {@literal > 0}\n-     * @param r an array of at least one element in which the value\n-     * <code>mod(n, d)<\/code> is returned.\n-     * @return the floor of the quotient.\n-     *\/\n-    public static final int floorDivide(long n, int d, int[] r) {\n-        if (n >= 0) {\n-            r[0] = (int)(n % d);\n-            return (int)(n \/ d);\n-        }\n-        int q = (int)(((n + 1) \/ d) - 1);\n-        r[0] = (int)(n - (q * d));\n-        return q;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/CalendarUtils.java","additions":1,"deletions":27,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,3 +82,3 @@\n-        Gregorian gcal = CalendarSystem.getGregorianCalendar();\n-        BaseCalendar.Date d = gcal.newCalendarDate(null);\n-        gcal.getCalendarDate(since, d);\n+        Gregorian gCal = CalendarSystem.getGregorianCalendar();\n+        BaseCalendar.Date d = gCal.newCalendarDate(null);\n+        gCal.getCalendarDate(since, d);\n@@ -100,4 +100,0 @@\n-    public String getDiaplayAbbreviation(Locale locale) {\n-        return abbr;\n-    }\n-\n@@ -121,1 +117,1 @@\n-        if (!(o instanceof Era)) {\n+        if (!(o instanceof Era that)) {\n@@ -124,1 +120,0 @@\n-        Era that = (Era) o;\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/Era.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,4 +89,0 @@\n-    public CalendarDate addDayOfMonth(int n) {\n-        unsupported(); return this;\n-    }\n-\n@@ -117,4 +113,0 @@\n-    public CalendarDate addMinutes(int n) {\n-        unsupported(); return this;\n-    }\n-\n@@ -129,4 +121,0 @@\n-    public CalendarDate addSeconds(int n) {\n-        unsupported(); return this;\n-    }\n-\n@@ -141,4 +129,0 @@\n-    public CalendarDate addMillis(int n) {\n-        unsupported(); return this;\n-    }\n-\n@@ -153,4 +137,0 @@\n-    public CalendarDate addDate(int year, int month, int dayOfMonth) {\n-        unsupported(); return this;\n-    }\n-\n@@ -161,4 +141,0 @@\n-    public CalendarDate addTimeOfDay(int hours, int minutes, int seconds, int millis) {\n-        unsupported(); return this;\n-    }\n-\n@@ -177,4 +153,0 @@\n-    public void setStandardTime(boolean standardTime) {\n-        unsupported();\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ImmutableGregorianDate.java","additions":1,"deletions":29,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.security.AccessController;\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/LocalGregorianCalendar.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,0 @@\n-    private static final long ABBR_MASK = 0xf00L;\n@@ -397,1 +396,1 @@\n-        dateInMillis -= (long) rawOffset; \/\/ make it UTC\n+        dateInMillis -= rawOffset; \/\/ make it UTC\n@@ -407,1 +406,1 @@\n-     * @see getRawOffset\n+     * @see #getRawOffset\n@@ -528,14 +527,0 @@\n-\/\/    \/**\n-\/\/     * @return the last year in the transition table or -1 if this\n-\/\/     * time zone doesn't observe any daylight saving time.\n-\/\/     *\/\n-\/\/    public int getMaxTransitionYear() {\n-\/\/      if (transitions == null) {\n-\/\/          return -1;\n-\/\/      }\n-\/\/      long val = transitions[transitions.length - 1];\n-\/\/      int offset = this.offsets[(int)(val & OFFSET_MASK)] + rawOffsetDiff;\n-\/\/      val = (val >> TRANSITION_NSHIFT) + offset;\n-\/\/      CalendarDate lastDate = Gregorian.getCalendarDate(val);\n-\/\/      return lastDate.getYear();\n-\/\/    }\n@@ -672,1 +657,1 @@\n-        if (!(obj instanceof ZoneInfo)) {\n+        if (!(obj instanceof ZoneInfo that)) {\n@@ -675,1 +660,0 @@\n-        ZoneInfo that = (ZoneInfo) obj;\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ZoneInfo.java","additions":4,"deletions":20,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -300,1 +300,1 @@\n-     * @throws Exception if an error occurs\n+     * @throws IOException if an error occurs\n@@ -302,1 +302,1 @@\n-    private static void load(DataInputStream dis) throws ClassNotFoundException, IOException {\n+    private static void load(DataInputStream dis) throws IOException {\n@@ -421,1 +421,2 @@\n-    \/* Get a ZoneInfo instance.\n+    \/**\n+     * Get a ZoneInfo instance.\n@@ -714,1 +715,0 @@\n-                    int saving = (dst == 0) ? 0 : offsets[dst];\n@@ -716,1 +716,0 @@\n-                    int offset = offsets[index];\n@@ -783,2 +782,0 @@\n-        int month = (marchMonth0 + 2) % 12 + 1;\n-        int dom = marchDoy0 - (marchMonth0 * 306 + 5) \/ 10 + 1;\n@@ -789,1 +786,1 @@\n-    private static final int toCalendarDOW[] = new int[] {\n+    private static final int[] toCalendarDOW = new int[] {\n@@ -800,1 +797,1 @@\n-    private static final int toSTZTime[] = new int[] {\n+    private static final int[] toSTZTime = new int[] {\n@@ -824,2 +821,2 @@\n-    private static int addTrans(long transitions[], int nTrans,\n-                                int offsets[], int nOffsets,\n+    private static int addTrans(long[] transitions, int nTrans,\n+                                int[] offsets, int nOffsets,\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ZoneInfoFile.java","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"}]}