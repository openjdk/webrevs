{"files":[{"patch":"@@ -35,0 +35,1 @@\n+import java.io.IOException;\n@@ -161,0 +162,8 @@\n+\n+    static int create() throws IOException {\n+        int res = kqueue_h.kqueue();\n+        if (res < 0) {\n+            throw ErrnoUtils.IOExceptionWithErrnoString(-res, \"kqueue failed\");\n+        }\n+        return res;\n+    }\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/ch\/KQueue.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -45,6 +45,1 @@\n-        int res = kqueue_h.kqueue();\n-        if (res < 0) {\n-            throw ErrnoUtils.IOExceptionWithErrnoString(-res,\n-                    \"kqueue failed\");\n-        }\n-        this.kqfd = res;\n+        this.kqfd = KQueue.create();\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/ch\/KQueuePoller.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -92,6 +92,1 @@\n-        int res = kqueue_h.kqueue();\n-        if (res < 0) {\n-            throw ErrnoUtils.IOExceptionWithErrnoString(-res,\n-                    \"kqueue failed\");\n-        }\n-        this.kqfd = res;\n+        this.kqfd = KQueue.create();\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/ch\/KQueuePort.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -84,6 +84,1 @@\n-        int res = kqueue_h.kqueue();\n-        if (res < 0) {\n-            throw ErrnoUtils.IOExceptionWithErrnoString(-res,\n-                    \"kqueue failed\");\n-        }\n-        this.kqfd = res;\n+        this.kqfd = KQueue.create();\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/ch\/KQueueSelectorImpl.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"}]}