{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @run junit\/othervm -Djava.locale.providers=CLDR CurrencyFormat\n+ * @run junit CurrencyFormat\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/CurrencyFormat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @run main\/othervm -Djava.locale.providers=CLDR Bug8007038 CLDR\n+ * @run main Bug8007038 CLDR\n","filename":"test\/jdk\/java\/util\/Calendar\/Bug8007038.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * @run main\/othervm -Djava.locale.providers=CLDR Bug8167273 testCldr\n+ * @run main Bug8167273 testCldr\n","filename":"test\/jdk\/java\/util\/Calendar\/Bug8167273.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @run main\/othervm -Djava.locale.providers=CLDR CldrFormatNamesTest\n+ * @run main CldrFormatNamesTest\n","filename":"test\/jdk\/java\/util\/Calendar\/CldrFormatNamesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- *          geneic time zone names in English.\n+ *          generic time zone names in English.\n@@ -31,1 +31,0 @@\n- * @comment Locale providers: default\n@@ -33,2 +32,0 @@\n- * @comment Locale providers: CLDR\n- * @run main\/othervm -Djava.locale.providers=CLDR GenericTimeZoneNamesTest en-US\n","filename":"test\/jdk\/java\/util\/Calendar\/GenericTimeZoneNamesTest.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,1 @@\n- * @run testng\/othervm JapaneseEraNameTest\n- * @run testng\/othervm -Djava.locale.providers=CLDR JapaneseEraNameTest\n+ * @run testng JapaneseEraNameTest\n","filename":"test\/jdk\/java\/util\/Calendar\/JapaneseEraNameTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @run main\/othervm -Djava.locale.providers=CLDR NarrowNamesTest CLDR\n+ * @run main NarrowNamesTest CLDR\n","filename":"test\/jdk\/java\/util\/Calendar\/NarrowNamesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,2 +61,1 @@\n-    \/\/ Locale flag for testJVM\n-    private static final String JAVA_OPTS = \"-Djava.locale.providers=CLDR\";\n+\n@@ -85,1 +84,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(JAVA_OPTS, TEST_CLASS);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(TEST_CLASS);\n","filename":"test\/jdk\/java\/util\/Formatter\/BasicTestLauncher.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @run junit\/othervm -Djava.locale.providers=CLDR AliasesShouldBeRecognizedInCLDR\n+ * @run junit AliasesShouldBeRecognizedInCLDR\n","filename":"test\/jdk\/java\/util\/Locale\/AliasesShouldBeRecognizedInCLDR.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @run testng\/othervm -Djava.locale.providers=CLDR RequiredAvailableLocalesTest\n+ * @run testng RequiredAvailableLocalesTest\n","filename":"test\/jdk\/java\/util\/Locale\/RequiredAvailableLocalesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @run testng\/othervm -Djava.locale.providers=CLDR CurrencyFormatTests\n+ * @run testng CurrencyFormatTests\n","filename":"test\/jdk\/java\/util\/Locale\/bcp47u\/CurrencyFormatTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @run testng\/othervm -Djava.locale.providers=CLDR DisplayNameTests\n+ * @run testng DisplayNameTests\n","filename":"test\/jdk\/java\/util\/Locale\/bcp47u\/DisplayNameTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @run testng\/othervm -Djava.locale.providers=CLDR FormatTests\n+ * @run testng FormatTests\n","filename":"test\/jdk\/java\/util\/Locale\/bcp47u\/FormatTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @run testng\/othervm -Djava.locale.providers=CLDR SymbolsTests\n+ * @run testng SymbolsTests\n","filename":"test\/jdk\/java\/util\/Locale\/bcp47u\/SymbolsTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * @run main\/othervm -Djava.locale.providers=CLDR Bug8167143 testCldr\n+ * @run main Bug8167143 testCldr\n@@ -100,3 +100,0 @@\n-            case \"testCompat\":\n-                testImplicitCompatLocales();\n-                break;\n@@ -231,44 +228,0 @@\n-\n-    \/**\n-     * checks that locales nn-NO  and nb-NO should be present in list of supported locales for\n-     * all Providers for COMPAT.\n-     *\/\n-    private static void testImplicitCompatLocales() {\n-        LocaleProviderAdapter jre = LocaleProviderAdapter.forJRE();\n-        checkPresenceCompat(\"BreakIteratorProvider\",\n-            jre.getBreakIteratorProvider().getAvailableLocales());\n-        checkPresenceCompat(\"CollatorProvider\",\n-            jre.getCollatorProvider().getAvailableLocales());\n-        checkPresenceCompat(\"DateFormatProvider\",\n-            jre.getDateFormatProvider().getAvailableLocales());\n-        checkPresenceCompat(\"DateFormatSymbolsProvider\",\n-            jre.getDateFormatSymbolsProvider().getAvailableLocales());\n-        checkPresenceCompat(\"DecimalFormatSymbolsProvider\",\n-            jre.getDecimalFormatSymbolsProvider().getAvailableLocales());\n-        checkPresenceCompat(\"NumberFormatProvider\",\n-            jre.getNumberFormatProvider().getAvailableLocales());\n-        checkPresenceCompat(\"CurrencyNameProvider\",\n-            jre.getCurrencyNameProvider().getAvailableLocales());\n-        checkPresenceCompat(\"LocaleNameProvider\",\n-            jre.getLocaleNameProvider().getAvailableLocales());\n-        checkPresenceCompat(\"TimeZoneNameProvider\",\n-            jre.getTimeZoneNameProvider().getAvailableLocales());\n-        checkPresenceCompat(\"CalendarDataProvider\",\n-            jre.getCalendarDataProvider().getAvailableLocales());\n-        checkPresenceCompat(\"CalendarNameProvider\",\n-            jre.getCalendarNameProvider().getAvailableLocales());\n-        checkPresenceCompat(\"CalendarProvider\",\n-            jre.getCalendarProvider().getAvailableLocales());\n-    }\n-\n-    private static void checkPresenceCompat(String testName, Locale[] got) {\n-        List<Locale> gotLocalesList = Arrays.asList(got);\n-        List<Locale> gotList = new ArrayList<>(gotLocalesList);\n-            if (!gotList.removeAll(COMPAT_IMPLICIT_LOCS)) {\n-                \/\/ check which Implicit locale are not present in retrievedLocales List.\n-                List<Locale> implicitLocales = new ArrayList<>(COMPAT_IMPLICIT_LOCS);\n-                implicitLocales.removeAll(gotList);\n-                throw new RuntimeException(\"Locales those not correctly reflected are \"\n-                        + implicitLocales + \" for test \" + testName);\n-            }\n-    }\n","filename":"test\/jdk\/java\/util\/TimeZone\/Bug8167143.java","additions":2,"deletions":49,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run main\/othervm -Djava.locale.providers=CLDR CLDRDisplayNamesTest\n+ * @run main CLDRDisplayNamesTest\n","filename":"test\/jdk\/java\/util\/TimeZone\/CLDRDisplayNamesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @run testng\/othervm -Djava.locale.providers=CLDR ChineseTimeZoneNameTest\n+ * @run testng ChineseTimeZoneNameTest\n","filename":"test\/jdk\/sun\/util\/resources\/TimeZone\/ChineseTimeZoneNameTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @run main\/othervm -Djava.locale.providers=CLDR Bug8134250\n+ * @run main Bug8134250\n","filename":"test\/jdk\/sun\/util\/resources\/cldr\/Bug8134250.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/othervm -Djava.locale.providers=CLDR Bug8134384\n+ * @run main Bug8134384\n","filename":"test\/jdk\/sun\/util\/resources\/cldr\/Bug8134384.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @run junit\/othervm -Djava.locale.providers=CLDR LikelySubtagLocalesTest\n+ * @run junit LikelySubtagLocalesTest\n","filename":"test\/jdk\/sun\/util\/resources\/cldr\/LikelySubtagLocalesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @run testng\/othervm -Djava.locale.providers=CLDR TimeZoneNamesTest\n+ * @run testng TimeZoneNamesTest\n","filename":"test\/jdk\/sun\/util\/resources\/cldr\/TimeZoneNamesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}