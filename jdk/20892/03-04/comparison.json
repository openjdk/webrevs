{"files":[{"patch":"@@ -441,2 +441,3 @@\n-                \/\/ integer overflow (timeout is an int)\n-                long pktTimeout = (timeout * (1L << retry));\n+                \/\/ integer overflow (timeout is an int).\n+                \/\/ no point in supporting timeout > Integer.MAX_VALUE, clamp if needed\n+                long pktTimeout = Math.clamp(timeout * (1L << retry), 0, Integer.MAX_VALUE);\n@@ -446,2 +447,1 @@\n-                \/\/ no point in supporting timeout > Integer.MAX_VALUE, clamp if needed\n-                long timeoutLeft = Math.clamp(pktTimeout, 0, Integer.MAX_VALUE);\n+                long timeoutLeft = pktTimeout;\n@@ -450,0 +450,1 @@\n+                long start = System.nanoTime();\n@@ -463,1 +464,0 @@\n-                    long start = System.nanoTime();\n@@ -465,1 +465,0 @@\n-                    long end = System.nanoTime();\n@@ -478,3 +477,3 @@\n-                    long elapsedMillis = TimeUnit.NANOSECONDS.toMillis(end - start);\n-                    \/\/ Setting the Math.clamp min to 1 ensures that the timeout is decreased\n-                    timeoutLeft = timeoutLeft - Math.clamp(elapsedMillis, 1, Integer.MAX_VALUE);\n+                    long elapsedMillis = TimeUnit.NANOSECONDS\n+                                                 .toMillis(System.nanoTime() - start);\n+                    timeoutLeft = pktTimeout - Math.clamp(elapsedMillis, 0, Integer.MAX_VALUE);\n","filename":"src\/jdk.naming.dns\/share\/classes\/com\/sun\/jndi\/dns\/DnsClient.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"}]}