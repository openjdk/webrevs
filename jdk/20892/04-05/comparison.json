{"files":[{"patch":"@@ -443,1 +443,1 @@\n-                long pktTimeout = Math.clamp(timeout * (1L << retry), 0, Integer.MAX_VALUE);\n+                long pktTimeout = Math.clamp(timeout * (1L << retry), 0L, Integer.MAX_VALUE);\n@@ -479,1 +479,1 @@\n-                    timeoutLeft = pktTimeout - Math.clamp(elapsedMillis, 0, Integer.MAX_VALUE);\n+                    timeoutLeft = pktTimeout - elapsedMillis;\n","filename":"src\/jdk.naming.dns\/share\/classes\/com\/sun\/jndi\/dns\/DnsClient.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-                timeout = val;\n+                timeout = Math.max(val, 0);\n@@ -185,1 +185,1 @@\n-                retries = val;\n+                retries = Math.clamp(val, 1, 31);\n@@ -260,1 +260,1 @@\n-            : Integer.parseInt(val);\n+            : Math.max(Integer.parseInt(val), 0);\n@@ -264,1 +264,1 @@\n-            : Integer.parseInt(val);\n+            : Math.clamp(Integer.parseInt(val), 1, 31);\n","filename":"src\/jdk.naming.dns\/share\/classes\/com\/sun\/jndi\/dns\/DnsContext.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-            Duration expectedTime = Duration.ofMillis(TIMEOUT)\n+            Duration minAllowedTime = Duration.ofMillis(TIMEOUT)\n@@ -107,0 +107,6 @@\n+            Duration maxAllowedTime = Duration.ofMillis(TIMEOUT)\n+                    .multipliedBy((1 << RETRIES) - 1)\n+                    \/\/ max allowed timeout value is set to 1.75 * expected timeout\n+                    .multipliedBy(7)\n+                    .dividedBy(4);\n+\n@@ -108,1 +114,3 @@\n-            DNSTestUtils.debug(\"Expected (ms): \" + expectedTime.toMillis());\n+            String expectedRangeMsg = \"%s - %s\"\n+                    .formatted(minAllowedTime.toMillis(), maxAllowedTime.toMillis());\n+            DNSTestUtils.debug(\"Expected range (ms): \" + expectedRangeMsg);\n@@ -111,7 +119,3 @@\n-            \/\/ not more than 67% greater. Given the min DNS timeout\n-            \/\/ correction above the threshold value is equal to 61%.\n-            if (elapsedTime.compareTo(expectedTime) >= 0 &&\n-                    elapsedTime.multipliedBy(3)\n-                            .compareTo(expectedTime.multipliedBy(5)) <= 0) {\n-                \/\/ 3 * elapsedTime <= expectedTime*5\n-                \/\/ elapsedTime <= 1.67 expectedTime\n+            \/\/ not more than 75% greater.\n+            if (elapsedTime.compareTo(minAllowedTime) >= 0 &&\n+                elapsedTime.compareTo(maxAllowedTime) <= 0) {\n@@ -122,2 +126,2 @@\n-                    \"Failed: timeout in \" + elapsedTime.toMillis()\n-                            + \" ms, expected \" + expectedTime.toMillis() + \" ms\");\n+                    \"Failed: timeout in \" + elapsedTime.toMillis() +\n+                    \" ms, expected to be in a range (ms): \" + expectedRangeMsg);\n","filename":"test\/jdk\/com\/sun\/jndi\/dns\/ConfigTests\/Timeout.java","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-                    Duration expectedTime = Duration.ofMillis(TIMEOUT)\n+                    Duration minAllowedTime = Duration.ofMillis(TIMEOUT)\n@@ -165,0 +165,5 @@\n+                    Duration maxAllowedTime = Duration.ofMillis(TIMEOUT)\n+                            .multipliedBy((1 << RETRIES) - 1)\n+                            \/\/ max allowed timeout value is set to 1.75 * expected timeout\n+                            .multipliedBy(7)\n+                            .dividedBy(4);\n@@ -167,1 +172,3 @@\n-                    DNSTestUtils.debug(\"Expected (ms): \" + expectedTime.toMillis());\n+                    String expectedRangeMsg = \"%s - %s\"\n+                            .formatted(minAllowedTime.toMillis(), maxAllowedTime.toMillis());\n+                    DNSTestUtils.debug(\"Expected range (ms): \" + expectedRangeMsg);\n@@ -170,7 +177,3 @@\n-                    \/\/ not more than 67% greater. Given the min DNS timeout\n-                    \/\/ correction above the threshold value is equal to 61%.\n-                    if (elapsedTime.compareTo(expectedTime) >= 0 &&\n-                            elapsedTime.multipliedBy(3)\n-                                    .compareTo(expectedTime.multipliedBy(5)) <= 0) {\n-                        \/\/ 3 * elapsedTime <= expectedTime*5\n-                        \/\/ elapsedTime <= 1.67 expectedTime\n+                    \/\/ not more than 75% greater.\n+                    if (elapsedTime.compareTo(minAllowedTime) >= 0 &&\n+                        elapsedTime.compareTo(maxAllowedTime) <= 0) {\n@@ -178,1 +181,0 @@\n-\n@@ -182,1 +184,1 @@\n-                                        \" ms, expected \" + expectedTime.toMillis() + \" ms\");\n+                                \" ms, expected to be in a range (ms): \" + expectedRangeMsg);\n","filename":"test\/jdk\/com\/sun\/jndi\/dns\/ConfigTests\/TimeoutWithEmptyDatagrams.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"}]}