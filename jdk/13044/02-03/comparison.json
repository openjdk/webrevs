{"files":[{"patch":"@@ -59,0 +59,1 @@\n+import java.util.stream.Collectors;\n@@ -885,3 +886,7 @@\n-            \/\/ protect from unintended change\n-            orderedMembers.replaceAll((k, l) -> l == null ? List.of() : Collections.unmodifiableList(l));\n-            namedMembers.replaceAll((k, m) -> m == null ? Map.of() : Collections.unmodifiableMap(m));\n+            \/\/ protect element lists from unintended changes by clients\n+            orderedMembers.replaceAll(this::sealList);\n+            namedMembers.values().forEach(m -> m.replaceAll(this::sealList));\n+        }\n+\n+        private <K, V> List<V> sealList(K unusedKey, List<V> v) {\n+            return Collections.unmodifiableList(v);\n@@ -898,1 +903,1 @@\n-            return orderedMembers.get(kind);\n+            return orderedMembers.getOrDefault(kind, List.of());\n@@ -902,1 +907,2 @@\n-            return namedMembers.get(kind).getOrDefault(simpleName, List.of());\n+            return namedMembers.getOrDefault(kind, Map.of())\n+                    .getOrDefault(simpleName, List.of());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"}]}