{"files":[{"patch":"@@ -108,0 +108,1 @@\n+        SystemDictionaryShared::copy_unregistered_class_size_and_crc32(ik);\n","filename":"src\/hotspot\/share\/cds\/finalImageRecipes.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -466,0 +466,15 @@\n+void SystemDictionaryShared::copy_unregistered_class_size_and_crc32(InstanceKlass* klass) {\n+  precond(CDSConfig::is_dumping_final_static_archive());\n+  precond(klass->is_shared());\n+\n+  \/\/ A shared class must have a RunTimeClassInfo record\n+  const RunTimeClassInfo* record = find_record(&_static_archive._unregistered_dictionary,\n+                                               nullptr, klass->name());\n+  precond(record != nullptr);\n+  precond(record->klass() == klass);\n+\n+  DumpTimeClassInfo* info = get_info(klass);\n+  info->_clsfile_size = record->crc()->_clsfile_size;\n+  info->_clsfile_crc32 = record->crc()->_clsfile_crc32;\n+}\n+\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -251,0 +251,1 @@\n+  static void copy_unregistered_class_size_and_crc32(InstanceKlass* klass);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -479,0 +479,14 @@\n+  bool update_resolved_reference = true;\n+  if (CDSConfig::is_dumping_final_static_archive()) {\n+    ConstantPool* src_cp = ArchiveBuilder::current()->get_source_addr(this);\n+    InstanceKlass* src_holder = src_cp->pool_holder();\n+    if (src_holder->is_shared_unregistered_class()) {\n+      \/\/ Unregistered classes are not loaded in the AOT assembly phase. The resolved reference length\n+      \/\/ is already saved during the training run.\n+      precond(!src_holder->is_loaded());\n+      precond(resolved_reference_length() >= 0);\n+      precond(resolved_references() == nullptr);\n+      update_resolved_reference = false;\n+    }\n+  }\n+\n@@ -481,1 +495,1 @@\n-  if (cache() != nullptr) {\n+  if (update_resolved_reference && cache() != nullptr) {\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * @build BulkLoaderTest SimpleCusty\n+ * @build jdk.test.whitebox.WhiteBox BulkLoaderTest SimpleCusty\n@@ -41,0 +41,1 @@\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar WhiteBox.jar jdk.test.whitebox.WhiteBox\n@@ -56,2 +57,2 @@\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:. BulkLoaderTest DYNAMIC\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar WhiteBox.jar jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:WhiteBox.jar BulkLoaderTest DYNAMIC\n@@ -66,1 +67,1 @@\n- * @build InitiatingLoaderTester BadOldClassA BadOldClassB\n+ * @build jdk.test.whitebox.WhiteBox InitiatingLoaderTester BadOldClassA BadOldClassB\n@@ -70,0 +71,1 @@\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar WhiteBox.jar jdk.test.whitebox.WhiteBox\n@@ -87,0 +89,1 @@\n+import jdk.test.whitebox.WhiteBox;\n@@ -125,0 +128,1 @@\n+            useWhiteBox(ClassFileInstaller.getJarPath(\"WhiteBox.jar\"));\n@@ -296,0 +300,1 @@\n+        WhiteBox wb = WhiteBox.getWhiteBox();\n@@ -299,0 +304,13 @@\n+            Class c = o.getClass();\n+            if (wb.isSharedClass(BulkLoaderTestApp.class)) {\n+                \/\/ We are running with BulkLoaderTestApp from the AOT cache (or CDS achive)\n+                if (i == 0) {\n+                    if (!wb.isSharedClass(c)) {\n+                        throw new RuntimeException(\"The first loader should load SimpleCusty from AOT cache (or CDS achive)\");\n+                    }\n+                } else {\n+                    if (wb.isSharedClass(c)) {\n+                        throw new RuntimeException(\"The second loader should not load SimpleCusty from AOT cache (or CDS achive)\");\n+                    }\n+                }\n+            }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotClassLinking\/BulkLoaderTest.java","additions":22,"deletions":4,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+    private String whiteBoxJar = null;\n@@ -153,0 +154,4 @@\n+    public final void useWhiteBox(String whiteBoxJar) {\n+        this.whiteBoxJar = whiteBoxJar;\n+    }\n+\n@@ -202,0 +207,6 @@\n+    private String[] addCommonVMArgs(RunMode runMode, String[] cmdLine) {\n+        cmdLine = addClassOrModulePath(runMode, cmdLine);\n+        cmdLine = addWhiteBox(cmdLine);\n+        return cmdLine;\n+    }\n+\n@@ -217,0 +228,10 @@\n+    private String[] addWhiteBox(String[] cmdLine) {\n+        if (whiteBoxJar != null) {\n+            cmdLine = StringArrayUtils.concat(cmdLine,\n+                                              \"-XX:+UnlockDiagnosticVMOptions\",\n+                                              \"-XX:+WhiteBoxAPI\",\n+                                              \"-Xbootclasspath\/a:\" + whiteBoxJar);\n+        }\n+        return cmdLine;\n+    }\n+\n@@ -226,1 +247,1 @@\n-        cmdLine = addClassOrModulePath(runMode, cmdLine);\n+        cmdLine = addCommonVMArgs(runMode, cmdLine);\n@@ -238,1 +259,1 @@\n-        cmdLine = addClassOrModulePath(runMode, cmdLine);\n+        cmdLine = addCommonVMArgs(runMode, cmdLine);\n@@ -256,1 +277,1 @@\n-        cmdLine = addClassOrModulePath(runMode, cmdLine);\n+        cmdLine = addCommonVMArgs(runMode, cmdLine);\n@@ -274,1 +295,1 @@\n-        cmdLine = addClassOrModulePath(runMode, cmdLine);\n+        cmdLine = addCommonVMArgs(runMode, cmdLine);\n@@ -320,1 +341,1 @@\n-          cmdLine = addClassOrModulePath(runMode, cmdLine);\n+          cmdLine = addCommonVMArgs(runMode, cmdLine);\n@@ -345,1 +366,1 @@\n-        cmdLine = addClassOrModulePath(runMode, cmdLine);\n+        cmdLine = addCommonVMArgs(runMode, cmdLine);\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSAppTester.java","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"}]}