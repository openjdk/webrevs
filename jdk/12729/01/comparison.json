{"files":[{"patch":"@@ -54,2 +54,1 @@\n- * past.  If no delay has expired there is no head and {@code poll}\n- * will return {@code null}. Expiration occurs when an element's\n+ * past. Expiration occurs when an element's\n@@ -184,1 +183,1 @@\n-     * Retrieves and removes the head of this queue, or returns {@code null}\n+     * Retrieves and removes the expired head of this queue, or returns {@code null}\n@@ -204,2 +203,3 @@\n-     * Retrieves and removes the head of this queue, waiting if necessary\n-     * until an element with an expired delay is available on this queue.\n+     * Retrieves and removes the expired head of this queue,\n+     * waiting if necessary until an element with an expired delay is available\n+     * on this queue.\n@@ -245,3 +245,3 @@\n-     * Retrieves and removes the head of this queue, waiting if necessary\n-     * until an element with an expired delay is available on this queue,\n-     * or the specified wait time expires.\n+     * Retrieves and removes the expired head of this queue,\n+     * waiting if necessary until an element with an expired delay is available\n+     * on this queue, or the specified wait time expires.\n@@ -296,5 +296,5 @@\n-     * Retrieves, but does not remove, the head of this queue, or\n-     * returns {@code null} if this queue is empty.  Unlike\n-     * {@code poll}, if no expired elements are available in the queue,\n-     * this method returns the element that will expire next,\n-     * if one exists.\n+     * Retrieves, but does not remove, the head of this queue regardless of its\n+     * expiration status, or returns {@code null} if this queue is empty.\n+     * Unlike {@code poll} and {@code take}, if no expired elements are\n+     * available in the queue, this method returns the element that will expire\n+     * next, if one exists.\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/DelayQueue.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"}]}