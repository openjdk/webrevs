{"files":[{"patch":"@@ -638,1 +638,0 @@\n-        ensureCapacityInternal(count + 4);\n@@ -640,0 +639,1 @@\n+        ensureCapacityInternal(count + 4);\n@@ -642,4 +642,4 @@\n-            val[count++] = 'n';\n-            val[count++] = 'u';\n-            val[count++] = 'l';\n-            val[count++] = 'l';\n+            val[count    ] = 'n';\n+            val[count + 1] = 'u';\n+            val[count + 2] = 'l';\n+            val[count + 3] = 'l';\n@@ -647,1 +647,1 @@\n-            count = StringUTF16.putCharsAt(val, count, 'n', 'u', 'l', 'l');\n+            StringUTF16.putCharsAt(val, count, 'n', 'u', 'l', 'l');\n@@ -649,1 +649,1 @@\n-        this.count = count;\n+        this.count = count + 4;\n@@ -769,1 +769,0 @@\n-        ensureCapacityInternal(count + (b ? 4 : 5));\n@@ -771,0 +770,2 @@\n+        int spaceNeeded = count + (b ? 4 : 5);\n+        ensureCapacityInternal(spaceNeeded);\n@@ -774,4 +775,4 @@\n-                val[count++] = 't';\n-                val[count++] = 'r';\n-                val[count++] = 'u';\n-                val[count++] = 'e';\n+                val[count    ] = 't';\n+                val[count + 1] = 'r';\n+                val[count + 2] = 'u';\n+                val[count + 3] = 'e';\n@@ -779,5 +780,5 @@\n-                val[count++] = 'f';\n-                val[count++] = 'a';\n-                val[count++] = 'l';\n-                val[count++] = 's';\n-                val[count++] = 'e';\n+                val[count    ] = 'f';\n+                val[count + 1] = 'a';\n+                val[count + 2] = 'l';\n+                val[count + 3] = 's';\n+                val[count + 4] = 'e';\n@@ -787,1 +788,1 @@\n-                count = StringUTF16.putCharsAt(val, count, 't', 'r', 'u', 'e');\n+                StringUTF16.putCharsAt(val, count, 't', 'r', 'u', 'e');\n@@ -789,1 +790,1 @@\n-                count = StringUTF16.putCharsAt(val, count, 'f', 'a', 'l', 's', 'e');\n+                StringUTF16.putCharsAt(val, count, 'f', 'a', 'l', 's', 'e');\n@@ -792,1 +793,1 @@\n-        this.count = count;\n+        this.count = spaceNeeded;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":21,"deletions":20,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -1551,21 +1551,22 @@\n-    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n-        int end = i + 4;\n-        checkBoundsBeginEnd(i, end, value);\n-        putChar(value, i++, c1);\n-        putChar(value, i++, c2);\n-        putChar(value, i++, c3);\n-        putChar(value, i++, c4);\n-        assert(i == end);\n-        return end;\n-    }\n-\n-    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n-        int end = i + 5;\n-        checkBoundsBeginEnd(i, end, value);\n-        putChar(value, i++, c1);\n-        putChar(value, i++, c2);\n-        putChar(value, i++, c3);\n-        putChar(value, i++, c4);\n-        putChar(value, i++, c5);\n-        assert(i == end);\n-        return end;\n+    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n+        \/\/ Don't use the putChar method, Its instrinsic will cause C2 unable to combining values into larger stores.\n+        i <<= 1;\n+        putChar0(value, i    , c1);\n+        putChar0(value, i + 2, c2);\n+        putChar0(value, i + 4, c3);\n+        putChar0(value, i + 6, c4);\n+    }\n+\n+    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n+        \/\/ Don't use the putChar method, Its instrinsic will cause C2 unable to combining values into larger stores\n+        i <<= 1;\n+        putChar0(value, i    , c1);\n+        putChar0(value, i + 2, c2);\n+        putChar0(value, i + 4, c3);\n+        putChar0(value, i + 6, c4);\n+        putChar0(value, i + 8, c5);\n+    }\n+\n+    private static void putChar0(byte[] value, int i, int c) {\n+        value[i    ] = (byte)(c >> HI_BYTE_SHIFT);\n+        value[i + 1] = (byte)(c >> LO_BYTE_SHIFT);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":22,"deletions":21,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -111,7 +111,0 @@\n-            putCharsAt(val2, -1, '1', '2', '3', '4');\n-            putCharsAt(val2,  0, '1', '2', '3', '4');\n-            putCharsAt(val2,  2, '1', '2', '3', '4');\n-            putCharsAt(val2, -1, '1', '2', '3', '4', '5');\n-            putCharsAt(val2,  0, '1', '2', '3', '4', '5');\n-            putCharsAt(val2,  2, '1', '2', '3', '4', '5');\n-\n@@ -251,16 +244,0 @@\n-    static void putCharsAt(byte[] v, int i, char c1, char c2, char c3, char c4) {\n-        try {\n-            Helper.putCharsAt(v, i, c1, c2, c3, c4);\n-            throw new AssertionError(\"putCharsAt\");\n-        } catch (IndexOutOfBoundsException io) {\n-        }\n-    }\n-\n-    static void putCharsAt(byte[] v, int i, char c1, char c2, char c3, char c4, char c5) {\n-        try {\n-            Helper.putCharsAt(v, i, c1, c2, c3, c4, c5);\n-            throw new AssertionError(\"putCharsAt\");\n-        } catch (IndexOutOfBoundsException io) {\n-        }\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestStringUTF16IntrinsicRangeChecks.java","additions":0,"deletions":23,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -135,8 +135,0 @@\n-    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n-        return StringUTF16.putCharsAt(value, i, c1, c2, c3, c4);\n-    }\n-\n-    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n-        return StringUTF16.putCharsAt(value, i, c1, c2, c3, c4, c5);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/patches\/java.base\/java\/lang\/Helper.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -229,11 +229,62 @@\n-    public String toStringCharWithBool8() {\n-        StringBuilder result = new StringBuilder();\n-        result.append(true);\n-        result.append(false);\n-        result.append(true);\n-        result.append(true);\n-        result.append(false);\n-        result.append(true);\n-        result.append(false);\n-        result.append(false);\n-        return result.toString();\n+    public int toStringCharWithBool8Latin1() {\n+        StringBuilder buf = sbLatin1;\n+        buf.delete(0, buf.length());\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(true);\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(false);\n+        return buf.length();\n+    }\n+\n+\n+    @Benchmark\n+    public int toStringCharWithBool8Utf16() {\n+        StringBuilder buf = sbUtf16;\n+        buf.delete(0, buf.length());\n+        buf.append('\\uFF16');\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(true);\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(false);\n+        return buf.length();\n+    }\n+\n+\n+    @Benchmark\n+    public int toStringCharWithNull8Latin1() {\n+        StringBuilder buf = sbLatin1;\n+        buf.delete(0, buf.length());\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        return buf.length();\n+    }\n+\n+\n+    @Benchmark\n+    public int toStringCharWithNull8Utf16() {\n+        StringBuilder buf = sbUtf16;\n+        buf.delete(0, buf.length());\n+        buf.append('\\uFF16');\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        return buf.length();\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringBuilders.java","additions":62,"deletions":11,"binary":false,"changes":73,"status":"modified"}]}