{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,0 +111,7 @@\n+            putCharsAt(val2, -1, '1', '2', '3', '4');\n+            putCharsAt(val2,  0, '1', '2', '3', '4');\n+            putCharsAt(val2,  2, '1', '2', '3', '4');\n+            putCharsAt(val2, -1, '1', '2', '3', '4', '5');\n+            putCharsAt(val2,  0, '1', '2', '3', '4', '5');\n+            putCharsAt(val2,  2, '1', '2', '3', '4', '5');\n+\n@@ -244,0 +251,16 @@\n+    static void putCharsAt(byte[] v, int i, char c1, char c2, char c3, char c4) {\n+        try {\n+            Helper.putCharsAt(v, i, c1, c2, c3, c4);\n+            throw new AssertionError(\"putCharsAt\");\n+        } catch (IndexOutOfBoundsException io) {\n+        }\n+    }\n+\n+    static void putCharsAt(byte[] v, int i, char c1, char c2, char c3, char c4, char c5) {\n+        try {\n+            Helper.putCharsAt(v, i, c1, c2, c3, c4, c5);\n+            throw new AssertionError(\"putCharsAt\");\n+        } catch (IndexOutOfBoundsException io) {\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestStringUTF16IntrinsicRangeChecks.java","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -135,0 +135,10 @@\n+    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n+        StringUTF16.putCharsAt(value, i, c1, c2, c3, c4);\n+        return i + 4;\n+    }\n+\n+    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n+        StringUTF16.putCharsAt(value, i, c1, c2, c3, c4, c5);\n+        return i + 5;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/patches\/java.base\/java\/lang\/Helper.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}