{"files":[{"patch":"@@ -642,4 +642,1 @@\n-            val[count    ] = 'n';\n-            val[count + 1] = 'u';\n-            val[count + 2] = 'l';\n-            val[count + 3] = 'l';\n+            StringLatin1.putCharsAt(val, count, 'n', 'u', 'l', 'l');\n@@ -775,4 +772,1 @@\n-                val[count    ] = 't';\n-                val[count + 1] = 'r';\n-                val[count + 2] = 'u';\n-                val[count + 3] = 'e';\n+                StringLatin1.putCharsAt(val, count, 't', 'r', 'u', 'e');\n@@ -780,5 +774,1 @@\n-                val[count    ] = 'f';\n-                val[count + 1] = 'a';\n-                val[count + 2] = 'l';\n-                val[count + 3] = 's';\n-                val[count + 4] = 'e';\n+                StringLatin1.putCharsAt(val, count, 'f', 'a', 'l', 's', 'e');\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":3,"deletions":13,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import jdk.internal.misc.Unsafe;\n@@ -827,0 +828,21 @@\n+    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4) {\n+        assert index >= 0 && index + 3 < length(val) : \"Trusted caller missed bounds check\";\n+        \/\/ Don't use the putChar method, Its instrinsic will cause C2 unable to combining values into larger stores.\n+        Unsafe UNSAFE = Unsafe.getUnsafe();\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index    , (byte)(c1));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 1, (byte)(c2));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 2, (byte)(c3));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 3, (byte)(c4));\n+    }\n+\n+    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4, int c5) {\n+        assert index >= 0 && index + 4 < length(val) : \"Trusted caller missed bounds check\";\n+        \/\/ Don't use the putChar method, Its instrinsic will cause C2 unable to combining values into larger stores.\n+        Unsafe UNSAFE = Unsafe.getUnsafe();\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index    , (byte)(c1));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 1, (byte)(c2));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 2, (byte)(c3));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 3, (byte)(c4));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 4, (byte)(c5));\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1550,1 +1550,1 @@\n-    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n+    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4) {\n@@ -1552,7 +1552,14 @@\n-        putChar1(value, i    , c1);\n-        putChar1(value, i + 1, c2);\n-        putChar1(value, i + 2, c3);\n-        putChar1(value, i + 3, c4);\n-    }\n-\n-    public static void putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n+        index <<= 1;\n+        assert index >= 0 && index + 3 < length(val) : \"Trusted caller missed bounds check\";\n+        Unsafe UNSAFE = Unsafe.getUnsafe();\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index    , (byte)(c1 >> HI_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 1, (byte)(c1 >> LO_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 2, (byte)(c2 >> HI_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 3, (byte)(c2 >> LO_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 4, (byte)(c3 >> HI_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 5, (byte)(c3 >> LO_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 6, (byte)(c4 >> HI_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 7, (byte)(c4 >> LO_BYTE_SHIFT));\n+    }\n+\n+    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4, int c5) {\n@@ -1560,11 +1567,13 @@\n-        putChar1(value, i    , c1);\n-        putChar1(value, i + 1, c2);\n-        putChar1(value, i + 2, c3);\n-        putChar1(value, i + 3, c4);\n-        putChar1(value, i + 4, c5);\n-    }\n-\n-    static void putChar1(byte[] value, int i, char c) {\n-        int address = Unsafe.ARRAY_BYTE_BASE_OFFSET + (i << 1);\n-        Unsafe.getUnsafe().putByte(value, address    , (byte)(c >> HI_BYTE_SHIFT));\n-        Unsafe.getUnsafe().putByte(value, address + 1, (byte)(c >> LO_BYTE_SHIFT));\n+        assert index >= 0 && index + 4 < length(val) : \"Trusted caller missed bounds check\";\n+        index <<= 1;\n+        Unsafe UNSAFE = Unsafe.getUnsafe();\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index    , (byte)(c1 >> HI_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 1, (byte)(c1 >> LO_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 2, (byte)(c2 >> HI_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 3, (byte)(c2 >> LO_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 4, (byte)(c3 >> HI_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 5, (byte)(c3 >> LO_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 6, (byte)(c4 >> HI_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 7, (byte)(c4 >> LO_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 8, (byte)(c5 >> HI_BYTE_SHIFT));\n+        UNSAFE.putByte(val, Unsafe.ARRAY_BYTE_BASE_OFFSET + index + 9, (byte)(c5 >> LO_BYTE_SHIFT));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":28,"deletions":19,"binary":false,"changes":47,"status":"modified"}]}