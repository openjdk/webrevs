{"files":[{"patch":"@@ -643,4 +643,1 @@\n-            val[count++] = 'n';\n-            val[count++] = 'u';\n-            val[count++] = 'l';\n-            val[count++] = 'l';\n+            StringLatin1.putCharsAt(val, count, 'n', 'u', 'l', 'l');\n@@ -648,1 +645,1 @@\n-            count = StringUTF16.putCharsAt(val, count, 'n', 'u', 'l', 'l');\n+            StringUTF16.putCharsAt(val, count, 'n', 'u', 'l', 'l');\n@@ -650,1 +647,1 @@\n-        this.count = count;\n+        this.count = count + 4;\n@@ -775,4 +772,1 @@\n-                val[count++] = 't';\n-                val[count++] = 'r';\n-                val[count++] = 'u';\n-                val[count++] = 'e';\n+                StringLatin1.putCharsAt(val, count, 't', 'r', 'u', 'e');\n@@ -780,5 +774,1 @@\n-                val[count++] = 'f';\n-                val[count++] = 'a';\n-                val[count++] = 'l';\n-                val[count++] = 's';\n-                val[count++] = 'e';\n+                StringLatin1.putCharsAt(val, count, 'f', 'a', 'l', 's', 'e');\n@@ -788,1 +778,1 @@\n-                count = StringUTF16.putCharsAt(val, count, 't', 'r', 'u', 'e');\n+                StringUTF16.putCharsAt(val, count, 't', 'r', 'u', 'e');\n@@ -790,1 +780,1 @@\n-                count = StringUTF16.putCharsAt(val, count, 'f', 'a', 'l', 's', 'e');\n+                StringUTF16.putCharsAt(val, count, 'f', 'a', 'l', 's', 'e');\n@@ -793,1 +783,1 @@\n-        this.count = count;\n+        this.count = count + (b ? 4 : 5);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":8,"deletions":18,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import jdk.internal.misc.Unsafe;\n@@ -45,0 +46,2 @@\n+    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n+\n@@ -827,0 +830,21 @@\n+    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4) {\n+        assert index >= 0 && index + 3 < length(val) : \"Trusted caller missed bounds check\";\n+        \/\/ Don't use the putChar method, Its instrinsic will cause C2 unable to combining values into larger stores.\n+        long address  = Unsafe.ARRAY_BYTE_BASE_OFFSET + index;\n+        UNSAFE.putByte(val, address    , (byte)(c1));\n+        UNSAFE.putByte(val, address + 1, (byte)(c2));\n+        UNSAFE.putByte(val, address + 2, (byte)(c3));\n+        UNSAFE.putByte(val, address + 3, (byte)(c4));\n+    }\n+\n+    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4, int c5) {\n+        assert index >= 0 && index + 4 < length(val) : \"Trusted caller missed bounds check\";\n+        \/\/ Don't use the putChar method, Its instrinsic will cause C2 unable to combining values into larger stores.\n+        long address  = Unsafe.ARRAY_BYTE_BASE_OFFSET + index;\n+        UNSAFE.putByte(val, address    , (byte)(c1));\n+        UNSAFE.putByte(val, address + 1, (byte)(c2));\n+        UNSAFE.putByte(val, address + 2, (byte)(c3));\n+        UNSAFE.putByte(val, address + 3, (byte)(c4));\n+        UNSAFE.putByte(val, address + 4, (byte)(c5));\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-\n@@ -1551,21 +1550,14 @@\n-    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4) {\n-        int end = i + 4;\n-        checkBoundsBeginEnd(i, end, value);\n-        putChar(value, i++, c1);\n-        putChar(value, i++, c2);\n-        putChar(value, i++, c3);\n-        putChar(value, i++, c4);\n-        assert(i == end);\n-        return end;\n-    }\n-\n-    public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5) {\n-        int end = i + 5;\n-        checkBoundsBeginEnd(i, end, value);\n-        putChar(value, i++, c1);\n-        putChar(value, i++, c2);\n-        putChar(value, i++, c3);\n-        putChar(value, i++, c4);\n-        putChar(value, i++, c5);\n-        assert(i == end);\n-        return end;\n+    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4) {\n+        assert index >= 0 && index + 3 < length(val) : \"Trusted caller missed bounds check\";\n+        putChar(val, index    , c1);\n+        putChar(val, index + 1, c2);\n+        putChar(val, index + 2, c3);\n+        putChar(val, index + 3, c4);\n+    }\n+\n+    static void putCharsAt(byte[] val, int index, int c1, int c2, int c3, int c4, int c5) {\n+        putChar(val, index    , c1);\n+        putChar(val, index + 1, c2);\n+        putChar(val, index + 2, c3);\n+        putChar(val, index + 3, c4);\n+        putChar(val, index + 4, c5);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":14,"deletions":22,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,1 +136,4 @@\n-        return StringUTF16.putCharsAt(value, i, c1, c2, c3, c4);\n+        int end = i + 4;\n+        StringUTF16.checkBoundsBeginEnd(i, end, value);\n+        StringUTF16.putCharsAt(value, i, c1, c2, c3, c4);\n+        return end;\n@@ -140,1 +143,4 @@\n-        return StringUTF16.putCharsAt(value, i, c1, c2, c3, c4, c5);\n+        int end = i + 5;\n+        StringUTF16.checkBoundsBeginEnd(i, end, value);\n+        StringUTF16.putCharsAt(value, i, c1, c2, c3, c4, c5);\n+        return end;\n","filename":"test\/hotspot\/jtreg\/compiler\/patches\/java.base\/java\/lang\/Helper.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -229,11 +229,60 @@\n-    public String toStringCharWithBool8() {\n-        StringBuilder result = new StringBuilder();\n-        result.append(true);\n-        result.append(false);\n-        result.append(true);\n-        result.append(true);\n-        result.append(false);\n-        result.append(true);\n-        result.append(false);\n-        result.append(false);\n-        return result.toString();\n+    public int appendWithBool8Latin1() {\n+        StringBuilder buf = sbLatin1;\n+        buf.setLength(0);\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(true);\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(false);\n+        return buf.length();\n+    }\n+\n+\n+    @Benchmark\n+    public int appendWithBool8Utf16() {\n+        StringBuilder buf = sbUtf16;\n+        buf.setLength(0);\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(true);\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(true);\n+        buf.append(false);\n+        buf.append(false);\n+        return buf.length();\n+    }\n+\n+\n+    @Benchmark\n+    public int appendWithNull8Latin1() {\n+        StringBuilder buf = sbLatin1;\n+        buf.setLength(0);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        return buf.length();\n+    }\n+\n+\n+    @Benchmark\n+    public int appendWithNull8Utf16() {\n+        StringBuilder buf = sbUtf16;\n+        buf.setLength(0);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        buf.append((String) null);\n+        return buf.length();\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringBuilders.java","additions":60,"deletions":11,"binary":false,"changes":71,"status":"modified"}]}