{"files":[{"patch":"@@ -761,1 +761,1 @@\n-    Node *n = body().at(i);\n+    Node* n = body().at(i);\n@@ -767,2 +767,2 @@\n-  const GrowableArray<PhiNode*> &mem_slice_head = vloop_analyzer().memory_slices().heads();\n-  const GrowableArray<MemNode*> &mem_slice_tail = vloop_analyzer().memory_slices().tails();\n+  const GrowableArray<PhiNode*>& mem_slice_head = vloop_analyzer().memory_slices().heads();\n+  const GrowableArray<MemNode*>& mem_slice_tail = vloop_analyzer().memory_slices().tails();\n@@ -2932,1 +2932,1 @@\n-const char* VLoopBody::construct() {\n+VStatus VLoopBody::construct() {\n@@ -2956,1 +2956,1 @@\n-        return VLoopBody::FAILURE_NODE_NOT_ALLOWED;\n+        return VStatus::make_failure(VLoopBody::FAILURE_NODE_NOT_ALLOWED);\n@@ -3028,1 +3028,1 @@\n-  return nullptr; \/\/ success\n+  return VStatus::make_success();\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -43,6 +43,2 @@\n-  const char* return_state = check_preconditions_helper();\n-  assert(return_state != nullptr, \"must have return state\");\n-  if (return_state == VLoop::SUCCESS) {\n-    return true; \/\/ success\n-  }\n-\n+  VStatus status = check_preconditions_helper();\n+  if (!status.is_success()) {\n@@ -50,3 +46,3 @@\n-  if (is_trace_preconditions()) {\n-    tty->print_cr(\"VLoop::check_preconditions: failed: %s\", return_state);\n-  }\n+    if (is_trace_preconditions()) {\n+      tty->print_cr(\"VLoop::check_preconditions: failed: %s\", status.failure_reason());\n+    }\n@@ -54,1 +50,3 @@\n-  return false; \/\/ failure\n+    return false; \/\/ failure\n+  }\n+  return true; \/\/ success\n@@ -57,1 +55,1 @@\n-const char* VLoop::check_preconditions_helper() {\n+VStatus VLoop::check_preconditions_helper() {\n@@ -61,1 +59,1 @@\n-    return VLoop::FAILURE_VECTOR_WIDTH;\n+    return VStatus::make_failure(VLoop::FAILURE_VECTOR_WIDTH);\n@@ -66,1 +64,1 @@\n-    return VLoop::FAILURE_VALID_COUNTED_LOOP;\n+    return VStatus::make_failure(VLoop::FAILURE_VALID_COUNTED_LOOP);\n@@ -72,1 +70,1 @@\n-    return VLoop::FAILURE_ALREADY_VECTORIZED;\n+    return VStatus::make_failure(VLoop::FAILURE_ALREADY_VECTORIZED);\n@@ -76,1 +74,1 @@\n-    return VLoop::FAILURE_UNROLL_ONLY;\n+    return VStatus::make_failure(VLoop::FAILURE_UNROLL_ONLY);\n@@ -92,1 +90,1 @@\n-    return VLoop::FAILURE_CONTROL_FLOW;\n+    return VStatus::make_failure(VLoop::FAILURE_CONTROL_FLOW);\n@@ -97,1 +95,1 @@\n-    return VLoop::FAILURE_BACKEDGE;\n+    return VStatus::make_failure(VLoop::FAILURE_BACKEDGE);\n@@ -105,1 +103,1 @@\n-      return VLoop::FAILURE_PRE_LOOP_LIMIT;\n+      return VStatus::make_failure(VLoop::FAILURE_PRE_LOOP_LIMIT);\n@@ -109,1 +107,1 @@\n-      return VLoop::FAILURE_PRE_LOOP_LIMIT;\n+      return VStatus::make_failure(VLoop::FAILURE_PRE_LOOP_LIMIT);\n@@ -114,1 +112,1 @@\n-  return VLoop::SUCCESS;\n+  return VStatus::make_success();\n@@ -127,5 +125,2 @@\n-  const char* state = setup_submodules_helper();\n-    if (state == VLoopAnalyzer::SUCCESS) {\n-    return true; \/\/ success\n-  }\n-\n+  VStatus status = setup_submodules_helper();\n+  if (!status.is_success()) {\n@@ -133,3 +128,3 @@\n-  if (vloop().is_trace_loop_analyzer()) {\n-    tty->print_cr(\"\\nVLoopAnalyze::setup_submodules: failed: %s\", state);\n-  }\n+    if (vloop().is_trace_loop_analyzer()) {\n+      tty->print_cr(\"\\nVLoopAnalyze::setup_submodules: failed: %s\", status.failure_reason());\n+    }\n@@ -137,1 +132,3 @@\n-  return false; \/\/ failed\n+    return false; \/\/ failed\n+  }\n+  return true; \/\/ success\n@@ -140,2 +137,1 @@\n-\/\/ Return SUCCESS string iff all submodules are setup successfully\n-const char* VLoopAnalyzer::setup_submodules_helper() {\n+VStatus VLoopAnalyzer::setup_submodules_helper() {\n@@ -144,1 +140,1 @@\n-    return VLoopAnalyzer::FAILURE_NO_MAX_UNROLL;\n+    return VStatus::make_failure(VLoopAnalyzer::FAILURE_NO_MAX_UNROLL);\n@@ -153,1 +149,1 @@\n-  \/\/ If there is no memory slice detected, that means there is no store.\n+  \/\/ If there is no memory slice detected, it means there is no store.\n@@ -158,1 +154,1 @@\n-    return VLoopAnalyzer::FAILURE_NO_REDUCTION_OR_STORE;\n+    return VStatus::make_failure(VLoopAnalyzer::FAILURE_NO_REDUCTION_OR_STORE);\n@@ -161,3 +157,3 @@\n-  const char* body_failure = _body.construct();\n-  if (body_failure != nullptr) {\n-    return body_failure;\n+  VStatus body_status = _body.construct();\n+  if (!body_status.is_success()) {\n+    return body_status;\n@@ -168,1 +164,1 @@\n-  return VLoopAnalyzer::SUCCESS;\n+  return VStatus::make_success();\n","filename":"src\/hotspot\/share\/opto\/vectorization.cpp","additions":34,"deletions":38,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -36,0 +36,22 @@\n+class VStatus : public StackObj {\n+private:\n+  const char* _failure_reason;\n+\n+  VStatus(const char* failure_reason) : _failure_reason(failure_reason) {}\n+\n+public:\n+  static VStatus make_success() { return VStatus(nullptr); }\n+\n+  static VStatus make_failure(const char* failure_reason) {\n+    assert(failure_reason != nullptr, \"must have reason\");\n+    return VStatus(failure_reason);\n+  }\n+\n+  bool is_success() const { return _failure_reason == nullptr; }\n+\n+  const char* failure_reason() const {\n+    assert(!is_success(), \"only failures have reason\");\n+    return _failure_reason;\n+  }\n+};\n+\n@@ -65,1 +87,0 @@\n-  static constexpr char const* SUCCESS                    = \"success\";\n@@ -148,1 +169,1 @@\n-  const char* check_preconditions_helper();\n+  VStatus check_preconditions_helper();\n@@ -240,0 +261,1 @@\n+\n@@ -245,0 +267,1 @@\n+\n@@ -247,0 +270,1 @@\n+\n@@ -248,0 +272,1 @@\n+\n@@ -254,0 +279,1 @@\n+\n@@ -257,0 +283,1 @@\n+\n@@ -322,1 +349,1 @@\n-  const char* construct();\n+  VStatus construct();\n@@ -428,1 +455,0 @@\n-  static constexpr char const* SUCCESS                       = \"success\";\n@@ -463,2 +489,0 @@\n-  Arena* arena()       { return &_arena; }\n-\n@@ -474,1 +498,1 @@\n-  const char* setup_submodules_helper();\n+  VStatus setup_submodules_helper();\n","filename":"src\/hotspot\/share\/opto\/vectorization.hpp","additions":31,"deletions":7,"binary":false,"changes":38,"status":"modified"}]}