{"files":[{"patch":"@@ -43,0 +43,1 @@\n+  _vloop(vloop_analyzer.vloop()),\n@@ -45,1 +46,1 @@\n-  _node_info(arena(), vloop().estimated_body_length(), 0, SWNodeInfo::initial), \/\/ info needed per node\n+  _node_info(arena(), _vloop.estimated_body_length(), 0, SWNodeInfo::initial), \/\/ info needed per node\n@@ -302,1 +303,1 @@\n-  CountedLoopNode* cl = vloop().cl();\n+  CountedLoopNode* cl = _vloop.cl();\n@@ -314,1 +315,1 @@\n-    if (phi == vloop().iv()) {\n+    if (phi == _vloop.iv()) {\n@@ -338,1 +339,1 @@\n-          first, input, vloop().lpt()->_body.size(),\n+          first, input, _vloop.lpt()->_body.size(),\n@@ -340,1 +341,1 @@\n-                                      vloop().in_bb(n); },\n+                                      _vloop.in_bb(n); },\n@@ -359,1 +360,1 @@\n-        if (!vloop().in_bb(u)) {\n+        if (!_vloop.in_bb(u)) {\n@@ -536,1 +537,1 @@\n-    VPointer align_to_ref_p(mem_ref, vloop());\n+    VPointer align_to_ref_p(mem_ref, _vloop);\n@@ -542,1 +543,1 @@\n-        VPointer p2(s, vloop());\n+        VPointer p2(s, _vloop);\n@@ -601,1 +602,1 @@\n-    VPointer p1(s1, vloop());\n+    VPointer p1(s1, _vloop);\n@@ -605,1 +606,1 @@\n-        VPointer p2(s2, vloop());\n+        VPointer p2(s2, _vloop);\n@@ -626,1 +627,1 @@\n-      VPointer p(s, vloop());\n+      VPointer p(s, _vloop);\n@@ -649,1 +650,1 @@\n-        VPointer p(s, vloop());\n+        VPointer p(s, _vloop);\n@@ -722,1 +723,1 @@\n-  VPointer align_to_ref_p(mem_ref, vloop());\n+  VPointer align_to_ref_p(mem_ref, _vloop);\n@@ -767,2 +768,2 @@\n-  const GrowableArray<PhiNode*>& mem_slice_head = vloop_analyzer().memory_slices().heads();\n-  const GrowableArray<MemNode*>& mem_slice_tail = vloop_analyzer().memory_slices().tails();\n+  const GrowableArray<PhiNode*>& mem_slice_head = _vloop_analyzer.memory_slices().heads();\n+  const GrowableArray<MemNode*>& mem_slice_tail = _vloop_analyzer.memory_slices().tails();\n@@ -779,1 +780,1 @@\n-    vloop_analyzer().memory_slices().get_slice(head, tail, slice_nodes);\n+    _vloop_analyzer.memory_slices().get_slice(head, tail, slice_nodes);\n@@ -797,1 +798,1 @@\n-      VPointer p1(s1->as_Mem(), vloop());\n+      VPointer p1(s1->as_Mem(), _vloop);\n@@ -803,1 +804,1 @@\n-        VPointer p2(s2->as_Mem(), vloop());\n+        VPointer p2(s2->as_Mem(), _vloop);\n@@ -834,1 +835,1 @@\n-  CountedLoopNode* cl = vloop().cl();\n+  CountedLoopNode* cl = _vloop.cl();\n@@ -839,1 +840,1 @@\n-    if (phi != nullptr && vloop().in_bb(phi) && phi->is_memory_phi()) {\n+    if (phi != nullptr && _vloop.in_bb(phi) && phi->is_memory_phi()) {\n@@ -848,1 +849,1 @@\n-  NOT_PRODUCT( if (vloop().is_trace_memory_slices()) { print(); } )\n+  NOT_PRODUCT( if (_vloop.is_trace_memory_slices()) { print(); } )\n@@ -868,1 +869,1 @@\n-    assert(vloop().in_bb(n), \"must be in block\");\n+    assert(_vloop.in_bb(n), \"must be in block\");\n@@ -872,1 +873,1 @@\n-        if (vloop().in_bb(out)) {\n+        if (_vloop.in_bb(out)) {\n@@ -877,1 +878,1 @@\n-        if (out->is_MergeMem() && !vloop().in_bb(out)) {\n+        if (out->is_MergeMem() && !_vloop.in_bb(out)) {\n@@ -880,1 +881,1 @@\n-        } else if (out->is_memory_phi() && !vloop().in_bb(out)) {\n+        } else if (out->is_memory_phi() && !_vloop.in_bb(out)) {\n@@ -898,1 +899,1 @@\n-  if (vloop().is_trace_memory_slices()) {\n+  if (_vloop.is_trace_memory_slices()) {\n@@ -973,2 +974,2 @@\n-  VPointer p1(s1->as_Mem(), vloop());\n-  VPointer p2(s2->as_Mem(), vloop());\n+  VPointer p1(s1->as_Mem(), _vloop);\n+  VPointer p2(s2->as_Mem(), _vloop);\n@@ -1605,2 +1606,2 @@\n-  VPointer mem_ref_p(mem_ref, vloop());\n-  const CountedLoopEndNode* pre_end = vloop().pre_loop_end();\n+  VPointer mem_ref_p(mem_ref, _vloop);\n+  const CountedLoopEndNode* pre_end = _vloop.pre_loop_end();\n@@ -2276,1 +2277,1 @@\n-  const GrowableArray<PhiNode*> &mem_slice_head = vloop_analyzer().memory_slices().heads();\n+  const GrowableArray<PhiNode*> &mem_slice_head = _vloop_analyzer.memory_slices().heads();\n@@ -2397,1 +2398,1 @@\n-          VPointer p_store(mem->as_Mem(), vloop());\n+          VPointer p_store(mem->as_Mem(), _vloop);\n@@ -2940,2 +2941,2 @@\n-  for (uint i = 0; i < vloop().lpt()->_body.size(); i++) {\n-    Node* n = vloop().lpt()->_body.at(i);\n+  for (uint i = 0; i < _vloop.lpt()->_body.size(); i++) {\n+    Node* n = _vloop.lpt()->_body.at(i);\n@@ -2943,1 +2944,1 @@\n-    if (vloop().in_bb(n)) {\n+    if (_vloop.in_bb(n)) {\n@@ -2951,1 +2952,1 @@\n-        if (vloop().is_trace_body()) {\n+        if (_vloop.is_trace_body()) {\n@@ -2964,1 +2965,1 @@\n-          if (def != nullptr && vloop().in_bb(def)) {\n+          if (def != nullptr && _vloop.in_bb(def)) {\n@@ -2981,2 +2982,2 @@\n-  visited.set(bb_idx(vloop().cl()));\n-  stack.push(vloop().cl());\n+  visited.set(bb_idx(_vloop.cl()));\n+  stack.push(_vloop.cl());\n@@ -2995,1 +2996,1 @@\n-        if (vloop().in_bb(use) && !visited.test(bb_idx(use)) &&\n+        if (_vloop.in_bb(use) && !visited.test(bb_idx(use)) &&\n@@ -2997,1 +2998,1 @@\n-            (!use->is_Phi() || n == vloop().cl())) {\n+            (!use->is_Phi() || n == _vloop.cl())) {\n@@ -3022,1 +3023,1 @@\n-  if (vloop().is_trace_body()) {\n+  if (_vloop.is_trace_body()) {\n@@ -3123,1 +3124,1 @@\n-  if (vloop().is_trace_vector_element_type()) {\n+  if (_vloop.is_trace_vector_element_type()) {\n@@ -3154,1 +3155,1 @@\n-            vloop().in_bb(in) &&\n+            _vloop.in_bb(in) &&\n@@ -3160,1 +3161,1 @@\n-            if (!vloop().in_bb(use) || !same_velt_type(use, n)) {\n+            if (!_vloop.in_bb(use) || !same_velt_type(use, n)) {\n@@ -3178,1 +3179,1 @@\n-                  vloop().in_bb(load) &&\n+                  _vloop.in_bb(load) &&\n@@ -3203,1 +3204,1 @@\n-      assert(vloop().in_bb(nn->in(1)) || vloop().in_bb(nn->in(2)),\n+      assert(_vloop.in_bb(nn->in(1)) || _vloop.in_bb(nn->in(2)),\n@@ -3205,1 +3206,1 @@\n-      if (vloop().in_bb(nn->in(1))) {\n+      if (_vloop.in_bb(nn->in(1))) {\n@@ -3213,1 +3214,1 @@\n-  if (vloop().is_trace_vector_element_type()) {\n+  if (_vloop.is_trace_vector_element_type()) {\n@@ -3232,1 +3233,1 @@\n-  VPointer p(s, vloop());\n+  VPointer p(s, _vloop);\n@@ -3272,1 +3273,1 @@\n-  const Type* t = vloop().phase()->igvn().type(n);\n+  const Type* t = _vloop.phase()->igvn().type(n);\n@@ -3282,2 +3283,2 @@\n-  return vloop().phase()->C->get_alias_index(m1->adr_type()) ==\n-         vloop().phase()->C->get_alias_index(m2->adr_type());\n+  return _vloop.phase()->C->get_alias_index(m1->adr_type()) ==\n+         _vloop.phase()->C->get_alias_index(m2->adr_type());\n@@ -3366,1 +3367,1 @@\n-  Opaque1Node* pre_opaq = vloop().pre_loop_end()->limit()->as_Opaque1();\n+  Opaque1Node* pre_opaq = _vloop.pre_loop_end()->limit()->as_Opaque1();\n@@ -3372,1 +3373,1 @@\n-  Node* pre_ctrl = vloop().pre_loop_head()->in(LoopNode::EntryControl);\n+  Node* pre_ctrl = _vloop.pre_loop_head()->in(LoopNode::EntryControl);\n@@ -3378,1 +3379,1 @@\n-  VPointer align_to_ref_p(align_to_ref, vloop());\n+  VPointer align_to_ref_p(align_to_ref, _vloop);\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":57,"deletions":56,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -201,0 +201,1 @@\n+  const VLoop&         _vloop;\n@@ -225,3 +226,0 @@\n-  \/\/ VLoopAnalyzer Accessors\n-  const VLoopAnalyzer& vloop_analyzer() const { return _vloop_analyzer; }\n-\n@@ -229,6 +227,5 @@\n-  const VLoop& vloop()                  const { return vloop_analyzer().vloop(); }\n-  PhaseIdealLoop* phase()               const { return vloop().phase(); }\n-  PhaseIterGVN& igvn()                  const { return vloop().phase()->igvn(); }\n-  IdealLoopTree* lpt()                  const { return vloop().lpt(); }\n-  CountedLoopNode* cl()                 const { return vloop().cl(); }\n-  PhiNode* iv()                         const { return vloop().iv(); }\n+  PhaseIdealLoop* phase()               const { return _vloop.phase(); }\n+  PhaseIterGVN& igvn()                  const { return _vloop.phase()->igvn(); }\n+  IdealLoopTree* lpt()                  const { return _vloop.lpt(); }\n+  CountedLoopNode* cl()                 const { return _vloop.cl(); }\n+  PhiNode* iv()                         const { return _vloop.iv(); }\n@@ -236,1 +233,1 @@\n-  bool in_bb(const Node* n)             const { return vloop().in_bb(n); }\n+  bool in_bb(const Node* n)             const { return _vloop.in_bb(n); }\n@@ -240,1 +237,1 @@\n-    return vloop_analyzer().reductions().is_marked_reduction(n);\n+    return _vloop_analyzer.reductions().is_marked_reduction(n);\n@@ -244,1 +241,1 @@\n-    return vloop_analyzer().reductions().is_marked_reduction_pair(n1, n2);\n+    return _vloop_analyzer.reductions().is_marked_reduction_pair(n1, n2);\n@@ -249,1 +246,1 @@\n-    return vloop_analyzer().memory_slices().same_memory_slice(n1, n2);\n+    return _vloop_analyzer.memory_slices().same_memory_slice(n1, n2);\n@@ -254,1 +251,1 @@\n-    return vloop_analyzer().body().body();\n+    return _vloop_analyzer.body().body();\n@@ -258,1 +255,1 @@\n-    return vloop_analyzer().body().bb_idx(n);\n+    return _vloop_analyzer.body().bb_idx(n);\n@@ -263,1 +260,1 @@\n-    return vloop_analyzer().types().velt_type(n);\n+    return _vloop_analyzer.types().velt_type(n);\n@@ -267,1 +264,1 @@\n-    return vloop_analyzer().types().velt_basic_type(n);\n+    return _vloop_analyzer.types().velt_basic_type(n);\n@@ -271,1 +268,1 @@\n-    return vloop_analyzer().types().same_velt_type(n1, n2);\n+    return _vloop_analyzer.types().same_velt_type(n1, n2);\n@@ -275,1 +272,1 @@\n-    return vloop_analyzer().types().data_size(n);\n+    return _vloop_analyzer.types().data_size(n);\n@@ -279,1 +276,1 @@\n-    return vloop_analyzer().types().vector_width(n);\n+    return _vloop_analyzer.types().vector_width(n);\n@@ -283,1 +280,1 @@\n-    return vloop_analyzer().types().vector_width_in_bytes(n);\n+    return _vloop_analyzer.types().vector_width_in_bytes(n);\n@@ -290,1 +287,1 @@\n-    return vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_ALIGNMENT);\n+    return _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_ALIGNMENT);\n@@ -295,1 +292,1 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_DEPENDENCE_GRAPH);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_DEPENDENCE_GRAPH);\n@@ -300,1 +297,1 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_ADJACENT_MEMOPS);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_ADJACENT_MEMOPS);\n@@ -305,1 +302,1 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_REJECTIONS);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_REJECTIONS);\n@@ -310,1 +307,1 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_PACKSET);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_PACKSET);\n@@ -315,1 +312,1 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_INFO);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_INFO);\n@@ -320,1 +317,1 @@\n-    return vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_VERBOSE);\n+    return _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_VERBOSE);\n@@ -326,7 +323,7 @@\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_ALIGNMENT) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_DEPENDENCE_GRAPH) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_ADJACENT_MEMOPS) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_REJECTIONS) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_PACKSET) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_INFO) ||\n-           vloop().vtrace().is_trace(TraceAutoVectorizationTag::SW_VERBOSE);\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_ALIGNMENT) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_DEPENDENCE_GRAPH) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_ADJACENT_MEMOPS) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_REJECTIONS) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_PACKSET) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_INFO) ||\n+           _vloop.vtrace().is_trace(TraceAutoVectorizationTag::SW_VERBOSE);\n@@ -336,1 +333,1 @@\n-    return vloop().vtrace().is_trace(TraceAutoVectorizationTag::ALIGN_VECTOR) ||\n+    return _vloop.vtrace().is_trace(TraceAutoVectorizationTag::ALIGN_VECTOR) ||\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":33,"deletions":36,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-  if (vloop().is_trace_loop_analyzer()) {\n+  if (_vloop.is_trace_loop_analyzer()) {\n@@ -120,2 +120,2 @@\n-    vloop().lpt()->dump_head();\n-    vloop().cl()->dump();\n+    _vloop.lpt()->dump_head();\n+    _vloop.cl()->dump();\n@@ -128,1 +128,1 @@\n-    if (vloop().is_trace_loop_analyzer()) {\n+    if (_vloop.is_trace_loop_analyzer()) {\n@@ -139,1 +139,1 @@\n-  if (SuperWordLoopUnrollAnalysis && vloop().cl()->slp_max_unroll() == 0) {\n+  if (SuperWordLoopUnrollAnalysis && _vloop.cl()->slp_max_unroll() == 0) {\n@@ -287,1 +287,1 @@\n-      return phase()->is_dominator(n_c, vloop().pre_loop_head());\n+      return phase()->is_dominator(n_c, _vloop.pre_loop_head());\n","filename":"src\/hotspot\/share\/opto\/vectorization.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-    return vtrace().is_trace(TraceAutoVectorizationTag::PRECONDITIONS);\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::PRECONDITIONS);\n@@ -137,1 +137,1 @@\n-    return vtrace().is_trace(TraceAutoVectorizationTag::LOOP_ANALYZER);\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::LOOP_ANALYZER);\n@@ -141,1 +141,1 @@\n-    return vtrace().is_trace(TraceAutoVectorizationTag::MEMORY_SLICES);\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::MEMORY_SLICES);\n@@ -145,1 +145,1 @@\n-    return vtrace().is_trace(TraceAutoVectorizationTag::BODY);\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::BODY);\n@@ -149,1 +149,1 @@\n-    return vtrace().is_trace(TraceAutoVectorizationTag::TYPES);\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::TYPES);\n@@ -153,1 +153,1 @@\n-    return vtrace().is_trace(TraceAutoVectorizationTag::POINTER_ANALYSIS);\n+    return _vtrace.is_trace(TraceAutoVectorizationTag::POINTER_ANALYSIS);\n@@ -224,1 +224,0 @@\n-  const VLoop& vloop() const { return _vloop; }\n@@ -298,2 +297,0 @@\n-  const VLoop& vloop() const { return _vloop; }\n-\n@@ -339,2 +336,0 @@\n-  const VLoop& vloop() const { return _vloop; }\n-\n@@ -387,3 +382,0 @@\n-  const VLoop& vloop() const    { return _vloop; }\n-  const VLoopBody& body() const { return _body; }\n-\n@@ -403,2 +395,2 @@\n-    assert(vloop().in_bb(n), \"only call on nodes in loop\");\n-    const Type* t = _velt_type.at(body().bb_idx(n));\n+    assert(_vloop.in_bb(n), \"only call on nodes in loop\");\n+    const Type* t = _velt_type.at(_body.bb_idx(n));\n@@ -442,2 +434,2 @@\n-    assert(vloop().in_bb(n), \"only call on nodes in loop\");\n-    _velt_type.at_put(body().bb_idx(n), t);\n+    assert(_vloop.in_bb(n), \"only call on nodes in loop\");\n+    _velt_type.at_put(_body.bb_idx(n), t);\n@@ -481,1 +473,1 @@\n-    _types           (&_arena, vloop, body())\n+    _types           (&_arena, vloop, _body)\n@@ -525,4 +517,3 @@\n-  const VLoop&    vloop() const { return _vloop; }\n-  PhaseIdealLoop* phase() const { return vloop().phase(); }\n-  IdealLoopTree*  lpt() const   { return vloop().lpt(); }\n-  PhiNode*        iv() const    { return vloop().iv(); }\n+  PhaseIdealLoop* phase() const { return _vloop.phase(); }\n+  IdealLoopTree*  lpt() const   { return _vloop.lpt(); }\n+  PhiNode*        iv() const    { return _vloop.iv(); }\n@@ -601,1 +592,1 @@\n-      VPointer p_mem(mem, vloop());\n+      VPointer p_mem(mem, _vloop);\n","filename":"src\/hotspot\/share\/opto\/vectorization.hpp","additions":15,"deletions":24,"binary":false,"changes":39,"status":"modified"}]}