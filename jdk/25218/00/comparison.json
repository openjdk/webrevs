{"files":[{"patch":"@@ -1447,1 +1447,1 @@\n-  if (profiled_method != nullptr) {\n+  if (profiled_method != nullptr && TypeProfileCasts) {\n@@ -1457,1 +1457,1 @@\n-  if (profiled_method != nullptr) {\n+  if (profiled_method != nullptr && TypeProfileCasts) {\n@@ -1469,1 +1469,1 @@\n-  if (profiled_method != nullptr) {\n+  if (profiled_method != nullptr && TypeProfileCasts) {\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test TypeProfileCasts\n+ * @summary Check that turning of TypeProfileCasts is tolerated\n+ * @requires vm.debug == true\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ *\n+ * @run main\/othervm -XX:+TieredCompilation -XX:-BackgroundCompilation -XX:-TypeProfileCasts\n+ *                   -XX:CompileCommand=compileonly,compiler.tiered.TypeProfileCasts::test_instanceof\n+ *                   compiler.tiered.TypeProfileCasts\n+ * @run main\/othervm -XX:+TieredCompilation -XX:-BackgroundCompilation -XX:+TypeProfileCasts\n+ *                   -XX:CompileCommand=compileonly,compiler.tiered.TypeProfileCasts::test_instanceof\n+ *                   compiler.tiered.TypeProfileCasts\n+ * @run main\/othervm -XX:+TieredCompilation -XX:-BackgroundCompilation -XX:-TypeProfileCasts\n+ *                   -XX:CompileCommand=compileonly,compiler.tiered.TypeProfileCasts::test_checkcast\n+ *                   compiler.tiered.TypeProfileCasts\n+ * @run main\/othervm -XX:+TieredCompilation -XX:-BackgroundCompilation -XX:+TypeProfileCasts\n+ *                   -XX:CompileCommand=compileonly,compiler.tiered.TypeProfileCasts::test_checkcast\n+ *                   compiler.tiered.TypeProfileCasts\n+ * @run main\/othervm -XX:+TieredCompilation -XX:-BackgroundCompilation -XX:-TypeProfileCasts\n+ *                   -XX:CompileCommand=compileonly,compiler.tiered.TypeProfileCasts::test_array_store\n+ *                   compiler.tiered.TypeProfileCasts\n+ * @run main\/othervm -XX:+TieredCompilation -XX:-BackgroundCompilation -XX:+TypeProfileCasts\n+ *                   -XX:CompileCommand=compileonly,compiler.tiered.TypeProfileCasts::test_array_store\n+ *                   compiler.tiered.TypeProfileCasts\n+ *\/\n+\n+package compiler.tiered;\n+\n+public class TypeProfileCasts {\n+    static class Foo { }\n+    public static int sideEffect = 0;\n+\n+    private static void test_instanceof(Object o) {\n+      \/\/ instanceof\n+      if (o instanceof Foo) {\n+        sideEffect++;\n+      }\n+    }\n+\n+    private static void test_checkcast(Object o) {\n+      \/\/ checkcast\n+      Foo f = (Foo) o;\n+\n+      sideEffect++;\n+    }\n+\n+    private static void test_array_store(Object o) {\n+      \/\/ array store type check\n+      Foo[] fs = new Foo[1];\n+      Object[] os = fs;\n+      os[0] = o;\n+\n+      sideEffect++;\n+    }\n+\n+    public static void main(String... args) {\n+      for (int i = 0; i < 100_000; i++) {\n+        test_instanceof(new Foo());\n+        test_checkcast(new Foo());\n+        test_array_store(new Foo());\n+      }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/tiered\/TypeProfileCasts.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"}]}