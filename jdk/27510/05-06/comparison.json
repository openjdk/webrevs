{"files":[{"patch":"@@ -95,2 +95,0 @@\n-  product(bool, AvoidUnalignedAccesses, true,                                    \\\n-          \"Avoid generating unaligned memory accesses\")                          \\\n","filename":"src\/hotspot\/cpu\/riscv\/globals_riscv.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -161,0 +161,7 @@\n+  \/\/ See JDK-8026049\n+  \/\/ This machine has fast unaligned memory accesses\n+  if (FLAG_IS_DEFAULT(UseUnalignedAccesses)) {\n+    FLAG_SET_DEFAULT(UseUnalignedAccesses,\n+      (unaligned_scalar.value() == MISALIGNED_SCALAR_FAST));\n+  }\n+\n@@ -169,7 +176,0 @@\n-  \/\/ See JDK-8026049\n-  \/\/ This machine has fast unaligned memory accesses\n-  if (FLAG_IS_DEFAULT(UseUnalignedAccesses)) {\n-    FLAG_SET_DEFAULT(UseUnalignedAccesses,\n-      (unaligned_scalar.value() == MISALIGNED_SCALAR_FAST));\n-  }\n-\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}