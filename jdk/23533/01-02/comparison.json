{"files":[{"patch":"@@ -74,14 +74,29 @@\n-\/\/ CodeBlob\n-\/\/  nmethod              : JIT Compiled Java methods\n-\/\/  RuntimeBlob          : Non-compiled method code; generated glue code\n-\/\/   BufferBlob          : Used for non-relocatable code such as interpreter, stubroutines, etc.\n-\/\/    AdapterBlob        : Used to hold C2I\/I2C adapters\n-\/\/    VtableBlob         : Used for holding vtable chunks\n-\/\/    MethodHandlesAdapterBlob : Used to hold MethodHandles adapters\n-\/\/   RuntimeStub         : Call to VM runtime methods\n-\/\/   SingletonBlob       : Super-class for all blobs that exist in only one instance\n-\/\/    DeoptimizationBlob : Used for deoptimization\n-\/\/    ExceptionBlob      : Used for stack unrolling\n-\/\/    SafepointBlob      : Used to handle illegal instruction exceptions\n-\/\/    UncommonTrapBlob   : Used to handle uncommon traps\n-\/\/   UpcallStub  : Used for upcalls from native code\n+\/\/ Add proxy vtables.\n+\/\/ We need only few for now - they are used only from prints.\n+const nmethod::Vptr                  nmethod::_vptr;\n+const BufferBlob::Vptr               BufferBlob::_vptr;\n+const RuntimeStub::Vptr              RuntimeStub::_vptr;\n+const SingletonBlob::Vptr            SingletonBlob::_vptr;\n+const DeoptimizationBlob::Vptr       DeoptimizationBlob::_vptr;\n+const UpcallStub::Vptr               UpcallStub::_vptr;\n+\n+const CodeBlob::Vptr* CodeBlob::vptr() const {\n+  constexpr const CodeBlob::Vptr* array[(size_t)CodeBlobKind::Number_Of_Kinds] = {\n+      nullptr\/* None *\/,\n+      &nmethod::_vptr,\n+      &BufferBlob::_vptr,\n+      &AdapterBlob::_vptr,\n+      &VtableBlob::_vptr,\n+      &MethodHandlesAdapterBlob::_vptr,\n+      &RuntimeStub::_vptr,\n+      &DeoptimizationBlob::_vptr,\n+      &SafepointBlob::_vptr,\n+#ifdef COMPILER2\n+      &ExceptionBlob::_vptr,\n+      &UncommonTrapBlob::_vptr,\n+#endif\n+      &UpcallStub::_vptr\n+  };\n+\n+  return array[(size_t)_kind];\n+}\n@@ -421,1 +436,1 @@\n-: RuntimeBlob(name, CodeBlobKind::Runtime_Stub, cb, size, sizeof(RuntimeStub),\n+: RuntimeBlob(name, CodeBlobKind::RuntimeStub, cb, size, sizeof(RuntimeStub),\n@@ -517,0 +532,1 @@\n+#ifdef COMPILER2\n@@ -521,1 +537,0 @@\n-#ifdef COMPILER2\n@@ -528,1 +543,1 @@\n-: SingletonBlob(\"UncommonTrapBlob\", CodeBlobKind::Uncommon_Trap, cb,\n+: SingletonBlob(\"UncommonTrapBlob\", CodeBlobKind::UncommonTrap, cb,\n@@ -551,4 +566,0 @@\n-\n-#endif \/\/ COMPILER2\n-\n-\n@@ -558,1 +569,0 @@\n-#ifdef COMPILER2\n@@ -588,1 +598,0 @@\n-\n@@ -591,1 +600,0 @@\n-\n@@ -685,7 +693,2 @@\n-void CodeBlob::print() const {\n-  if (is_nmethod()) {\n-    ttyLocker ttyl;   \/\/ keep the following output all in one block\n-    as_nmethod()->print_on2(tty);\n-  } else {\n-    print_on(tty);\n-  }\n+void CodeBlob::print_on_v(outputStream* st) const {\n+  vptr()->print_on(this, st);\n@@ -694,40 +697,1 @@\n-void CodeBlob::print_value_on(outputStream* st) const {\n-  switch (_kind) {\n-    case CodeBlobKind::Nmethod: {\n-      st->print_cr(\"nmethod (\" INTPTR_FORMAT  \")\", p2i(this));\n-#if defined(SUPPORT_DATA_STRUCTS)\n-      as_nmethod()->print_on_with_msg(st, nullptr);\n-#endif\n-    }\n-    case CodeBlobKind::MH_Adapter: \/\/ fall through for subclasses\n-    case CodeBlobKind::Adapter:\n-    case CodeBlobKind::Vtable:\n-    case CodeBlobKind::Buffer: {\n-      st->print_cr(\"BufferBlob (\" INTPTR_FORMAT  \") used for %s\", p2i(this), name());;\n-      break;\n-    }\n-    case CodeBlobKind::Runtime_Stub: {\n-      st->print(\"RuntimeStub (\" INTPTR_FORMAT \"): %s\", p2i(this), name());\n-      break;\n-    }\n-    case CodeBlobKind::Deoptimization: {\n-      st->print_cr(\"DeoptimizationBlob (frame not available) (\" INTPTR_FORMAT  \")\", p2i(this));\n-      break;\n-    }\n-#ifdef COMPILER2\n-    case CodeBlobKind::Uncommon_Trap: \/\/ fall through for subclasses\n-    case CodeBlobKind::Exception:\n-#endif\n-    case CodeBlobKind::Safepoint: {\n-      st->print_cr(\"%s (\" INTPTR_FORMAT  \")\", name(), p2i(this));\n-      break;\n-    }\n-    case CodeBlobKind::Upcall: {\n-      st->print_cr(\"UpcallStub (\" INTPTR_FORMAT  \") used for %s\", p2i(this), name());\n-      break;\n-    }\n-    default: {\n-      assert(false, \"Unknown kind of CodeBlob %d (\" INTPTR_FORMAT  \")\", (int)_kind, p2i(this));\n-    }\n-  }\n-}\n+void CodeBlob::print() const { print_on_v(tty); }\n@@ -735,2 +699,3 @@\n-void CodeBlob::print_on(outputStream* st) const {\n-  ttyLocker ttyl;\n+void CodeBlob::print_value_on_v(outputStream* st) const {\n+  vptr()->print_value_on(this, st);;\n+}\n@@ -738,0 +703,1 @@\n+void CodeBlob::print_on_nv(outputStream* st) const {\n@@ -740,0 +706,1 @@\n+}\n@@ -741,38 +708,2 @@\n-  print_value_on(st);\n-\n-  switch (_kind) {\n-    case CodeBlobKind::Nmethod: {\n-      break; \/\/ do nothing - print_value_on() produces output for nmethod\n-    }\n-    case CodeBlobKind::MH_Adapter: \/\/ fall through for subclasses\n-    case CodeBlobKind::Adapter:\n-    case CodeBlobKind::Vtable:\n-    case CodeBlobKind::Buffer: {\n-      break;\n-    }\n-    case CodeBlobKind::Runtime_Stub: {\n-      Disassembler::decode((RuntimeBlob*)this, st);\n-      break;\n-    }\n-    case CodeBlobKind::Deoptimization: \/\/ fall through for subclasses\n-#ifdef COMPILER2\n-    case CodeBlobKind::Uncommon_Trap:\n-    case CodeBlobKind::Exception:\n-#endif\n-    case CodeBlobKind::Safepoint: {\n-      Disassembler::decode((RuntimeBlob*)this, st);\n-      break;\n-    }\n-    case CodeBlobKind::Upcall: {\n-      UpcallStub* upcall = this->as_upcall_stub();\n-      st->print_cr(\"Frame data offset: %d\", (int) upcall->frame_data_offset());\n-      oop recv = JNIHandles::resolve(upcall->receiver());\n-      st->print(\"Receiver MH=\");\n-      recv->print_on(st);\n-      Disassembler::decode((RuntimeBlob*)this, st);\n-      break;\n-    }\n-    default: {\n-      assert(false, \"Unknown kind of CodeBlob %d (\" INTPTR_FORMAT  \")\", (int)_kind, p2i(this));\n-    }\n-  }\n+void CodeBlob::print_value_on_nv(outputStream* st) const {\n+  st->print_cr(\"[CodeBlob]\");\n@@ -848,1 +779,1 @@\n-      nm->print_on2(st);\n+      nm->print_on_v(st);\n@@ -853,1 +784,10 @@\n-  print_on(st);\n+  print_on_v(st);\n+}\n+\n+void BufferBlob::print_on(outputStream* st) const {\n+  RuntimeBlob::print_on_nv(st);\n+  print_value_on(st);\n+}\n+\n+void BufferBlob::print_value_on(outputStream* st) const {\n+  st->print_cr(\"BufferBlob (\" INTPTR_FORMAT  \") used for %s\", p2i(this), name());\n@@ -856,0 +796,40 @@\n+void RuntimeStub::print_on(outputStream* st) const {\n+  ttyLocker ttyl;\n+  RuntimeBlob::print_on_nv(st);\n+  st->print(\"Runtime Stub (\" INTPTR_FORMAT \"): \", p2i(this));\n+  st->print_cr(\"%s\", name());\n+  Disassembler::decode((RuntimeBlob*)this, st);\n+}\n+\n+void RuntimeStub::print_value_on(outputStream* st) const {\n+  st->print(\"RuntimeStub (\" INTPTR_FORMAT \"): \", p2i(this)); st->print(\"%s\", name());\n+}\n+\n+void SingletonBlob::print_on(outputStream* st) const {\n+  ttyLocker ttyl;\n+  RuntimeBlob::print_on_nv(st);\n+  st->print_cr(\"%s\", name());\n+  Disassembler::decode((RuntimeBlob*)this, st);\n+}\n+\n+void SingletonBlob::print_value_on(outputStream* st) const {\n+  st->print_cr(\"%s\", name());\n+}\n+\n+void DeoptimizationBlob::print_value_on(outputStream* st) const {\n+  st->print_cr(\"Deoptimization (frame not available)\");\n+}\n+\n+void UpcallStub::print_on(outputStream* st) const {\n+  RuntimeBlob::print_on_nv(st);\n+  print_value_on(st);\n+  st->print_cr(\"Frame data offset: %d\", (int) _frame_data_offset);\n+  oop recv = JNIHandles::resolve(_receiver);\n+  st->print(\"Receiver MH=\");\n+  recv->print_on(st);\n+  Disassembler::decode((RuntimeBlob*)this, st);\n+}\n+\n+void UpcallStub::print_value_on(outputStream* st) const {\n+  st->print_cr(\"UpcallStub (\" INTPTR_FORMAT  \") used for %s\", p2i(this), name());\n+}\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":93,"deletions":113,"binary":false,"changes":206,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-\/\/    ExceptionBlob      : Used for stack unrolling\n@@ -66,0 +65,1 @@\n+\/\/    ExceptionBlob      : Used for stack unrolling\n@@ -83,2 +83,2 @@\n-  MH_Adapter,\n-  Runtime_Stub,\n+  MHAdapter,\n+  RuntimeStub,\n@@ -86,1 +86,0 @@\n-  Exception,\n@@ -88,1 +87,4 @@\n-  Uncommon_Trap,\n+#ifdef COMPILER2\n+  Exception,\n+  UncommonTrap,\n+#endif\n@@ -131,0 +133,11 @@\n+ struct Vptr {\n+    virtual void print_on(const CodeBlob* instance, outputStream* st) const {\n+      instance->print_on_nv(st);\n+    }\n+    virtual void print_value_on(const CodeBlob* instance, outputStream* st) const {\n+      instance->print_value_on_nv(st);\n+    }\n+  };\n+\n+  const Vptr* vptr() const;\n+\n@@ -155,1 +168,1 @@\n-  bool is_runtime_stub() const                { return _kind == CodeBlobKind::Runtime_Stub; }\n+  bool is_runtime_stub() const                { return _kind == CodeBlobKind::RuntimeStub; }\n@@ -157,1 +170,1 @@\n-  bool is_uncommon_trap_stub() const          { return _kind == CodeBlobKind::Uncommon_Trap; }\n+  bool is_uncommon_trap_stub() const          { return _kind == CodeBlobKind::UncommonTrap; }\n@@ -162,1 +175,1 @@\n-  bool is_method_handles_adapter_blob() const { return _kind == CodeBlobKind::MH_Adapter; }\n+  bool is_method_handles_adapter_blob() const { return _kind == CodeBlobKind::MHAdapter; }\n@@ -238,2 +251,5 @@\n-  void print_on(outputStream* st) const;\n-  void print_value_on(outputStream* st) const;\n+  void print_on_v(outputStream* st) const;\n+  void print_value_on_v(outputStream* st) const;\n+  void print_on_nv(outputStream* st) const;\n+  void print_value_on_nv(outputStream* st) const;\n+\n@@ -314,0 +330,14 @@\n+\n+  void print_on(outputStream* st) const;\n+  void print_value_on(outputStream* st) const;\n+\n+  class Vptr : public CodeBlob::Vptr {\n+    void print_on(const CodeBlob* instance, outputStream* st) const override {\n+      ((const BufferBlob*)instance)->print_on(st);\n+    }\n+    void print_value_on(const CodeBlob* instance, outputStream* st) const override {\n+      ((const BufferBlob*)instance)->print_value_on(st);\n+    }\n+  };\n+\n+  static const Vptr _vptr;\n@@ -346,1 +376,1 @@\n-  MethodHandlesAdapterBlob(int size): BufferBlob(\"MethodHandles adapters\", CodeBlobKind::MH_Adapter, size) {}\n+  MethodHandlesAdapterBlob(int size): BufferBlob(\"MethodHandles adapters\", CodeBlobKind::MHAdapter, size) {}\n@@ -388,0 +418,14 @@\n+\n+  void print_on(outputStream* st) const;\n+  void print_value_on(outputStream* st) const;\n+\n+  class Vptr : public CodeBlob::Vptr {\n+    void print_on(const CodeBlob* instance, outputStream* st) const override {\n+      instance->as_runtime_stub()->print_on(st);\n+    }\n+    void print_value_on(const CodeBlob* instance, outputStream* st) const override {\n+      instance->as_runtime_stub()->print_value_on(st);\n+    }\n+  };\n+\n+  static const Vptr _vptr;\n@@ -414,0 +458,14 @@\n+\n+  void print_on(outputStream* st) const;\n+  void print_value_on(outputStream* st) const;\n+\n+  class Vptr : public CodeBlob::Vptr {\n+    void print_on(const CodeBlob* instance, outputStream* st) const override {\n+      ((const SingletonBlob*)instance)->print_on(st);\n+    }\n+    void print_value_on(const CodeBlob* instance, outputStream* st) const override {\n+      ((const SingletonBlob*)instance)->print_value_on(st);\n+    }\n+  };\n+\n+  static const Vptr _vptr;\n@@ -487,0 +545,10 @@\n+\n+  void print_value_on(outputStream* st) const;\n+\n+  class Vptr : public CodeBlob::Vptr {\n+    void print_value_on(const CodeBlob* instance, outputStream* st) const override {\n+      ((const DeoptimizationBlob*)instance)->print_value_on(st);\n+    }\n+  };\n+\n+  static const Vptr _vptr;\n@@ -602,0 +670,14 @@\n+\n+  void print_on(outputStream* st) const;\n+  void print_value_on(outputStream* st) const;\n+\n+  class Vptr : public CodeBlob::Vptr {\n+    void print_on(const CodeBlob* instance, outputStream* st) const override {\n+      instance->as_upcall_stub()->print_on(st);\n+    }\n+    void print_value_on(const CodeBlob* instance, outputStream* st) const override {\n+      instance->as_upcall_stub()->print_value_on(st);\n+    }\n+  };\n+\n+  static const Vptr _vptr;\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":93,"deletions":11,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -881,1 +881,1 @@\n-      _code->print_value_on(st);\n+      _code->print_value_on_v(st);\n","filename":"src\/hotspot\/share\/code\/dependencies.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        nm->print_on(&ls);\n+        nm->print_on_v(&ls);\n@@ -221,1 +221,1 @@\n-      nm->print_on_with_msg(tty, \"nmethod\");\n+      nm->print_on(tty, \"nmethod\");\n","filename":"src\/hotspot\/share\/code\/dependencyContext.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -955,1 +955,1 @@\n-    print_on(&ss);\n+    print_on_v(&ss);\n@@ -1622,1 +1622,1 @@\n-void nmethod::print_on_with_msg(outputStream* st, const char* msg) const {\n+void nmethod::print_on(outputStream* st, const char* msg) const {\n@@ -1974,1 +1974,1 @@\n-    print_on_with_msg(tty, \"made not entrant\");\n+    print_on(tty, \"made not entrant\");\n@@ -3031,1 +3031,2 @@\n-void nmethod::print_on2(outputStream* st) const {\n+\n+void nmethod::print_on(outputStream* st) const {\n@@ -3046,1 +3047,1 @@\n-  print_on_with_msg(st, nullptr);\n+  print_on(st, nullptr);\n@@ -3397,1 +3398,1 @@\n-  this->print_on2(st);\n+  this->print_on_v(st);\n@@ -3946,0 +3947,7 @@\n+#if defined(SUPPORT_DATA_STRUCTS)\n+void nmethod::print_value_on(outputStream* st) const {\n+  st->print(\"nmethod\");\n+  print_on(st, nullptr);\n+}\n+#endif\n+\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -915,1 +915,1 @@\n-  void print_on2(outputStream* st) const;\n+  void print_on(outputStream* st) const;\n@@ -924,0 +924,1 @@\n+  void print_value_on(outputStream* st) const;\n@@ -942,1 +943,1 @@\n-  void print_on_with_msg(outputStream* st, const char* msg) const;\n+  void print_on(outputStream* st, const char* msg) const;\n@@ -987,0 +988,14 @@\n+\n+  struct Vptr : public CodeBlob::Vptr {\n+    void print_on(const CodeBlob* instance, outputStream* st) const override {\n+      ttyLocker ttyl;\n+      instance->as_nmethod()->print_on(st);\n+    }\n+#if defined(SUPPORT_DATA_STRUCTS)\n+    void print_value_on(const CodeBlob* instance, outputStream* st) const override {\n+      ((const nmethod*)instance)->print_value_on(st);\n+    }\n+#endif\n+  };\n+\n+  static const Vptr _vptr;\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -567,1 +567,1 @@\n-  cb->print_value_on(tty);  tty->cr();\n+  cb->print_value_on_v(tty);  tty->cr();\n","filename":"src\/hotspot\/share\/compiler\/oopMap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -652,1 +652,1 @@\n-      cb->print_value_on(tty);\n+      cb->print_value_on_v(tty);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2368,1 +2368,1 @@\n-    code()->print_value_on(st);\n+    code()->print_value_on_v(st);\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -322,1 +322,1 @@\n-    nm->print_value_on(&ls);\n+    nm->print_value_on_v(&ls);\n@@ -540,1 +540,1 @@\n-    _cb->print_value_on(st);\n+    _cb->print_value_on_v(st);\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-      nm()->print_on(&ss);\n+      nm()->print_on_v(&ss);\n","filename":"src\/hotspot\/share\/runtime\/vframe.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2387,2 +2387,2 @@\n-  declare_constant(CodeBlobKind::MH_Adapter)                              \\\n-  declare_constant(CodeBlobKind::Runtime_Stub)                            \\\n+  declare_constant(CodeBlobKind::MHAdapter)                               \\\n+  declare_constant(CodeBlobKind::RuntimeStub)                             \\\n@@ -2392,1 +2392,1 @@\n-  declare_constant(CodeBlobKind::Uncommon_Trap)                           \\\n+  declare_constant(CodeBlobKind::UncommonTrap)                            \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -99,2 +99,2 @@\n-    MHAdapterKind      = db.lookupIntConstant(\"CodeBlobKind::MH_Adapter\").intValue();\n-    RuntimeStubKind    = db.lookupIntConstant(\"CodeBlobKind::Runtime_Stub\").intValue();\n+    MHAdapterKind      = db.lookupIntConstant(\"CodeBlobKind::MHAdapter\").intValue();\n+    RuntimeStubKind    = db.lookupIntConstant(\"CodeBlobKind::RuntimeStub\").intValue();\n@@ -106,1 +106,1 @@\n-      UncommonTrapKind = db.lookupIntConstant(\"CodeBlobKind::Uncommon_Trap\").intValue();\n+      UncommonTrapKind = db.lookupIntConstant(\"CodeBlobKind::UncommonTrap\").intValue();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/CodeBlob.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}