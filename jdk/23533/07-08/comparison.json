{"files":[{"patch":"@@ -693,1 +693,1 @@\n-void CodeBlob::print_on_v(outputStream* st) const {\n+void CodeBlob::print_on(outputStream* st) const {\n@@ -697,1 +697,1 @@\n-void CodeBlob::print() const { print_on_v(tty); }\n+void CodeBlob::print() const { print_on(tty); }\n@@ -699,2 +699,2 @@\n-void CodeBlob::print_value_on_v(outputStream* st) const {\n-  vptr()->print_value_on(this, st);;\n+void CodeBlob::print_value_on(outputStream* st) const {\n+  vptr()->print_value_on(this, st);\n@@ -703,1 +703,1 @@\n-void CodeBlob::print_on_nv(outputStream* st) const {\n+void CodeBlob::print_on_impl(outputStream* st) const {\n@@ -708,1 +708,1 @@\n-void CodeBlob::print_value_on_nv(outputStream* st) const {\n+void CodeBlob::print_value_on_impl(outputStream* st) const {\n@@ -779,1 +779,1 @@\n-      nm->print_on_v(st);\n+      nm->print_on(st);\n@@ -784,1 +784,1 @@\n-  print_on_v(st);\n+  print_on(st);\n@@ -787,3 +787,3 @@\n-void BufferBlob::print_on(outputStream* st) const {\n-  RuntimeBlob::print_on_nv(st);\n-  print_value_on(st);\n+void BufferBlob::print_on_impl(outputStream* st) const {\n+  RuntimeBlob::print_on_impl(st);\n+  print_value_on_impl(st);\n@@ -792,1 +792,1 @@\n-void BufferBlob::print_value_on(outputStream* st) const {\n+void BufferBlob::print_value_on_impl(outputStream* st) const {\n@@ -796,1 +796,1 @@\n-void RuntimeStub::print_on(outputStream* st) const {\n+void RuntimeStub::print_on_impl(outputStream* st) const {\n@@ -798,1 +798,1 @@\n-  RuntimeBlob::print_on_nv(st);\n+  RuntimeBlob::print_on_impl(st);\n@@ -804,1 +804,1 @@\n-void RuntimeStub::print_value_on(outputStream* st) const {\n+void RuntimeStub::print_value_on_impl(outputStream* st) const {\n@@ -808,1 +808,1 @@\n-void SingletonBlob::print_on(outputStream* st) const {\n+void SingletonBlob::print_on_impl(outputStream* st) const {\n@@ -810,1 +810,1 @@\n-  RuntimeBlob::print_on_nv(st);\n+  RuntimeBlob::print_on_impl(st);\n@@ -815,1 +815,1 @@\n-void SingletonBlob::print_value_on(outputStream* st) const {\n+void SingletonBlob::print_value_on_impl(outputStream* st) const {\n@@ -819,1 +819,1 @@\n-void DeoptimizationBlob::print_value_on(outputStream* st) const {\n+void DeoptimizationBlob::print_value_on_impl(outputStream* st) const {\n@@ -823,3 +823,3 @@\n-void UpcallStub::print_on(outputStream* st) const {\n-  RuntimeBlob::print_on_nv(st);\n-  print_value_on(st);\n+void UpcallStub::print_on_impl(outputStream* st) const {\n+  RuntimeBlob::print_on_impl(st);\n+  print_value_on_impl(st);\n@@ -833,1 +833,1 @@\n-void UpcallStub::print_value_on(outputStream* st) const {\n+void UpcallStub::print_value_on_impl(outputStream* st) const {\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -133,7 +133,7 @@\n- struct Vptr {\n-    virtual void print_on(const CodeBlob* instance, outputStream* st) const {\n-      instance->print_on_nv(st);\n-    }\n-    virtual void print_value_on(const CodeBlob* instance, outputStream* st) const {\n-      instance->print_value_on_nv(st);\n-    }\n+  void print_on_impl(outputStream* st) const;\n+  void print_value_on_impl(outputStream* st) const;\n+\n+  class Vptr {\n+   public:\n+    virtual void print_on(const CodeBlob* instance, outputStream* st) const = 0;\n+    virtual void print_value_on(const CodeBlob* instance, outputStream* st) const = 0;\n@@ -186,1 +186,1 @@\n-  CodeBlob* as_codeblob_or_null() const       { return (CodeBlob*) this; }\n+  CodeBlob* as_codeblob() const               { return (CodeBlob*) this; }\n@@ -256,4 +256,4 @@\n-  void print_on_v(outputStream* st) const;\n-  void print_value_on_v(outputStream* st) const;\n-  void print_on_nv(outputStream* st) const;\n-  void print_value_on_nv(outputStream* st) const;\n+  void print_on(outputStream* st) const;\n+  void print_value_on(outputStream* st) const;\n+\/\/  void print_on_impl(outputStream* st) const;\n+\/\/  void print_value_on_impl(outputStream* st) const;\n@@ -308,0 +308,3 @@\n+\n+  class Vptr : public CodeBlob::Vptr {\n+  };\n@@ -336,2 +339,2 @@\n-  void print_on(outputStream* st) const;\n-  void print_value_on(outputStream* st) const;\n+  void print_on_impl(outputStream* st) const;\n+  void print_value_on_impl(outputStream* st) const;\n@@ -339,1 +342,1 @@\n-  class Vptr : public CodeBlob::Vptr {\n+  class Vptr : public RuntimeBlob::Vptr {\n@@ -341,1 +344,1 @@\n-      ((const BufferBlob*)instance)->print_on(st);\n+      ((const BufferBlob*)instance)->print_on_impl(st);\n@@ -344,1 +347,1 @@\n-      ((const BufferBlob*)instance)->print_value_on(st);\n+      ((const BufferBlob*)instance)->print_value_on_impl(st);\n@@ -422,1 +425,1 @@\n-  address entry_point() const                    { return code_begin(); }\n+  address entry_point() const         { return code_begin(); }\n@@ -424,2 +427,2 @@\n-  void print_on(outputStream* st) const;\n-  void print_value_on(outputStream* st) const;\n+  void print_on_impl(outputStream* st) const;\n+  void print_value_on_impl(outputStream* st) const;\n@@ -427,1 +430,1 @@\n-  class Vptr : public CodeBlob::Vptr {\n+  class Vptr : public RuntimeBlob::Vptr {\n@@ -429,1 +432,1 @@\n-      instance->as_runtime_stub()->print_on(st);\n+      instance->as_runtime_stub()->print_on_impl(st);\n@@ -432,1 +435,1 @@\n-      instance->as_runtime_stub()->print_value_on(st);\n+      instance->as_runtime_stub()->print_value_on_impl(st);\n@@ -464,2 +467,2 @@\n-  void print_on(outputStream* st) const;\n-  void print_value_on(outputStream* st) const;\n+  void print_on_impl(outputStream* st) const;\n+  void print_value_on_impl(outputStream* st) const;\n@@ -467,1 +470,1 @@\n-  class Vptr : public CodeBlob::Vptr {\n+  class Vptr : public RuntimeBlob::Vptr {\n@@ -469,1 +472,1 @@\n-      ((const SingletonBlob*)instance)->print_on(st);\n+      ((const SingletonBlob*)instance)->print_on_impl(st);\n@@ -472,1 +475,1 @@\n-      ((const SingletonBlob*)instance)->print_value_on(st);\n+      ((const SingletonBlob*)instance)->print_value_on_impl(st);\n@@ -551,1 +554,1 @@\n-  void print_value_on(outputStream* st) const;\n+  void print_value_on_impl(outputStream* st) const;\n@@ -553,1 +556,1 @@\n-  class Vptr : public CodeBlob::Vptr {\n+  class Vptr : public SingletonBlob::Vptr {\n@@ -555,1 +558,1 @@\n-      ((const DeoptimizationBlob*)instance)->print_value_on(st);\n+      ((const DeoptimizationBlob*)instance)->print_value_on_impl(st);\n@@ -668,2 +671,1 @@\n-  jobject  receiver()          { return _receiver; }\n-  ByteSize frame_data_offset() { return _frame_data_offset; }\n+  jobject receiver() { return _receiver; }\n@@ -676,2 +678,2 @@\n-  void print_on(outputStream* st) const;\n-  void print_value_on(outputStream* st) const;\n+  void print_on_impl(outputStream* st) const;\n+  void print_value_on_impl(outputStream* st) const;\n@@ -679,1 +681,1 @@\n-  class Vptr : public CodeBlob::Vptr {\n+  class Vptr : public RuntimeBlob::Vptr {\n@@ -681,1 +683,1 @@\n-      instance->as_upcall_stub()->print_on(st);\n+      instance->as_upcall_stub()->print_on_impl(st);\n@@ -684,1 +686,1 @@\n-      instance->as_upcall_stub()->print_value_on(st);\n+      instance->as_upcall_stub()->print_value_on_impl(st);\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":40,"deletions":38,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -881,1 +881,1 @@\n-      _code->print_value_on_v(st);\n+      _code->print_value_on(st);\n","filename":"src\/hotspot\/share\/code\/dependencies.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        nm->print_on_v(&ls);\n+        nm->print_on(&ls);\n@@ -221,1 +221,1 @@\n-      nm->print_on(tty, \"nmethod\");\n+      nm->print_on_with_msg(tty, \"nmethod\");\n","filename":"src\/hotspot\/share\/code\/dependencyContext.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -955,1 +955,1 @@\n-    print_on_v(&ss);\n+    print_on(&ss);\n@@ -1622,1 +1622,1 @@\n-void nmethod::print_on(outputStream* st, const char* msg) const {\n+void nmethod::print_on_with_msg(outputStream* st, const char* msg) const {\n@@ -1974,1 +1974,1 @@\n-    print_on(tty, \"made not entrant\");\n+    print_on_with_msg(tty, \"made not entrant\");\n@@ -3032,1 +3032,1 @@\n-void nmethod::print_on(outputStream* st) const {\n+void nmethod::print_on_impl(outputStream* st) const {\n@@ -3047,1 +3047,1 @@\n-  print_on(st, nullptr);\n+  print_on_with_msg(st, nullptr);\n@@ -3398,1 +3398,1 @@\n-  this->print_on_v(st);\n+  this->print_on(st);\n@@ -3947,0 +3947,2 @@\n+void nmethod::print_value_on_impl(outputStream* st) const {\n+  st->print_cr(\"nmethod\");\n@@ -3948,4 +3950,1 @@\n-void nmethod::print_value_on(outputStream* st) const {\n-  st->print(\"nmethod\");\n-  print_on(st, nullptr);\n-}\n+  print_on_with_msg(st, nullptr);\n@@ -3953,0 +3952,1 @@\n+}\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -915,1 +915,1 @@\n-  void print_on(outputStream* st) const;\n+  void print_on_impl(outputStream* st) const;\n@@ -917,0 +917,1 @@\n+  void print_value_on_impl(outputStream* st) const;\n@@ -924,1 +925,0 @@\n-  void print_value_on(outputStream* st) const;\n@@ -943,1 +943,1 @@\n-  void print_on(outputStream* st, const char* msg) const;\n+  void print_on_with_msg(outputStream* st, const char* msg) const;\n@@ -989,1 +989,1 @@\n-  struct Vptr : public CodeBlob::Vptr {\n+  class Vptr : public CodeBlob::Vptr {\n@@ -992,1 +992,1 @@\n-      instance->as_nmethod()->print_on(st);\n+      instance->as_nmethod()->print_on_impl(st);\n@@ -994,1 +994,0 @@\n-#if defined(SUPPORT_DATA_STRUCTS)\n@@ -996,1 +995,1 @@\n-      ((const nmethod*)instance)->print_value_on(st);\n+      instance->as_nmethod()->print_value_on_impl(st);\n@@ -998,1 +997,0 @@\n-#endif\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -567,1 +567,1 @@\n-  cb->print_value_on_v(tty);  tty->cr();\n+  cb->print_value_on(tty);  tty->cr();\n","filename":"src\/hotspot\/share\/compiler\/oopMap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -652,1 +652,1 @@\n-      cb->print_value_on_v(tty);\n+      cb->print_value_on(tty);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2368,1 +2368,1 @@\n-    code()->print_value_on_v(st);\n+    code()->print_value_on(st);\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -322,1 +322,1 @@\n-    nm->print_value_on_v(&ls);\n+    nm->print_value_on(&ls);\n@@ -540,1 +540,1 @@\n-    _cb->print_value_on_v(st);\n+    _cb->print_value_on(st);\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-      nm()->print_on_v(&ss);\n+      nm()->print_on(&ss);\n","filename":"src\/hotspot\/share\/runtime\/vframe.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,2 +66,2 @@\n-  public CodeBlob findBlob(Address start) {\n-    CodeBlob result = findBlobUnsafe(start);\n+  public CodeBlob findBlob(Address addr) {\n+    CodeBlob result = findBlobUnsafe(addr);\n@@ -77,1 +77,1 @@\n-  public CodeBlob findBlobUnsafe(Address start) {\n+  public CodeBlob findBlobUnsafe(Address addr) {\n@@ -80,1 +80,1 @@\n-      if (heapArray.at(i).contains(start)) {\n+      if (heapArray.at(i).contains(addr)) {\n@@ -89,2 +89,2 @@\n-    Address cbAddr = containing_heap.findStart(start);\n-    if (cbAddr == null) return null;\n+    Address cbStart = containing_heap.findStart(addr);\n+    if (cbStart == null) return null;\n@@ -92,1 +92,1 @@\n-    return createCodeBlobWrapper(cbAddr, start);\n+    return createCodeBlobWrapper(cbStart, addr);\n@@ -95,4 +95,4 @@\n-  \/\/ cbAddr - address of a code blob\n-  \/\/ cbPC   - address inside of a code blob\n-  public CodeBlob createCodeBlobWrapper(Address cbAddr, Address cbPC) {\n-    Class<?> cbClass = CodeBlob.getClassFor(cbAddr);\n+  \/\/ cbStart - address of a code blob\n+  \/\/ addr    - address inside of a code blob\n+  public CodeBlob createCodeBlobWrapper(Address cbStart, Address addr) {\n+    Class<?> cbClass = CodeBlob.getClassFor(cbStart);\n@@ -101,2 +101,2 @@\n-      message = message + \"@\" + cbAddr + \" \";\n-      message = message + \"for PC=\" + cbPC;\n+      message = message + \"@\" + cbStart + \" \";\n+      message = message + \"for PC=\" + addr;\n@@ -106,1 +106,1 @@\n-    CodeBlob result = (CodeBlob) VMObjectFactory.newObject(cbClass, cbAddr);\n+    CodeBlob result = (CodeBlob) VMObjectFactory.newObject(cbClass, cbStart);\n@@ -112,2 +112,2 @@\n-      Assert.that(result.blobContains(cbPC) ||\n-                  result.blobContains(cbPC.addOffsetTo(2 * VM.getVM().getAddressSize())),\n+      Assert.that(result.blobContains(addr) ||\n+                  result.blobContains(addr.addOffsetTo(2 * VM.getVM().getAddressSize())),\n@@ -119,2 +119,2 @@\n-  public NMethod findNMethod(Address start) {\n-    CodeBlob cb = findBlob(start);\n+  public NMethod findNMethod(Address addr) {\n+    CodeBlob cb = findBlob(addr);\n@@ -127,2 +127,2 @@\n-  public NMethod findNMethodUnsafe(Address start) {\n-    CodeBlob cb = findBlobUnsafe(start);\n+  public NMethod findNMethodUnsafe(Address addr) {\n+    CodeBlob cb = findBlobUnsafe(addr);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/CodeCache.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"}]}