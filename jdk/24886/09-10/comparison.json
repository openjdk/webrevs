{"files":[{"patch":"@@ -62,0 +62,1 @@\n+#include \"oops\/trainingData.hpp\"\n@@ -233,0 +234,5 @@\n+  _type_profile_level = TypeProfileLevel;\n+  _type_profile_width = TypeProfileWidth;\n+  _bci_profile_width = BciProfileWidth;\n+  _profile_traps = ProfileTraps;\n+  _spec_trap_limit_extra_entries = SpecTrapLimitExtraEntries;\n@@ -1871,0 +1877,36 @@\n+  if (TrainingData::have_data()) {\n+    if (_type_profile_level != TypeProfileLevel) {\n+      log_info(cds)(\"The %s's TypeProfileLevel setting (%d)\"\n+                    \" does not equal the current TypeProfileLevel setting (%d).\", file_type,\n+                    _type_profile_level, TypeProfileLevel);\n+      return false;\n+    }\n+    if (_type_profile_width != TypeProfileWidth) {\n+      log_info(cds)(\"The %s's TypeProfileWidth setting (%ld)\"\n+                    \" does not equal the current TypeProfileWidth setting (%ld).\", file_type,\n+                    _type_profile_width, TypeProfileWidth);\n+      return false;\n+\n+    }\n+    if (_bci_profile_width != BciProfileWidth) {\n+      log_info(cds)(\"The %s's BciProfileWidth setting (%ld)\"\n+                    \" does not equal the current BciProfileWidth setting (%ld).\", file_type,\n+                    _bci_profile_width, BciProfileWidth);\n+      return false;\n+    }\n+    if (_profile_traps != ProfileTraps) {\n+      log_info(cds)(\"The %s's ProfileTraps setting (%s)\"\n+                    \" does not equal the current ProfileTraps setting (%s).\", file_type,\n+                    _profile_traps ? \"enabled\" : \"disabled\",\n+                    ProfileTraps   ? \"enabled\" : \"disabled\");\n+\n+      return false;\n+    }\n+    if (_spec_trap_limit_extra_entries != SpecTrapLimitExtraEntries) {\n+      log_info(cds)(\"The %s's SpecTrapLimitExtraEntries setting (%d)\"\n+                    \" does not equal the current SpecTrapLimitExtraEntries setting (%d).\", file_type,\n+                    _spec_trap_limit_extra_entries, SpecTrapLimitExtraEntries);\n+      return false;\n+\n+    }\n+  }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":42,"deletions":0,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-  int     _narrow_klass_shift;                    \/\/ save shift width used to pre-compute narrowKlass IDs in archived heap objects\n+  int     _narrow_klass_shift;                    \/\/ save shift width used to pre-compute narrowKlass IDs in archived heap objectsa\n@@ -148,0 +148,8 @@\n+\n+  \/\/ The following are parameters that affect MethodData layout.\n+  uint    _type_profile_level;\n+  intx    _type_profile_width;\n+  intx    _bci_profile_width;\n+  bool    _profile_traps;\n+  int     _spec_trap_limit_extra_entries;\n+\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -194,1 +194,3 @@\n-    replay_training_at_init_impl(ik, THREAD);\n+    if (ik != nullptr) {\n+      replay_training_at_init_impl(ik, THREAD);\n+    }\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}