{"files":[{"patch":"@@ -2337,1 +2337,1 @@\n-  int size = MIN2((UseSVE > 0) ? 256 : 16, (int)MaxVectorSize);\n+  int size = MIN2((UseSVE > 0) ? (int)FloatRegister::sve_vl_max : (int)FloatRegister::neon_vl, (int)MaxVectorSize);\n@@ -2376,1 +2376,1 @@\n-  if (UseSVE > 0 && 16 < len && len <= 256) {\n+  if (UseSVE > 0 && FloatRegister::neon_vl < len && len <= FloatRegister::sve_vl_max) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-    if (UseSVE == 0 && length_in_bytes > 16) {\n+    if (UseSVE == 0 && length_in_bytes > FloatRegister::neon_vl) {\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6416,0 +6416,3 @@\n+  if (!UseSVE || VM_Version::get_max_supported_sve_vector_length() == FloatRegister::sve_vl_min) {\n+    return;\n+  }\n@@ -6417,1 +6420,0 @@\n-  if (!UseSVE) return;\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,1 +169,7 @@\n-    extra_save_slots_per_neon_register = slots_per_neon_register - save_slots_per_register\n+    extra_save_slots_per_neon_register = slots_per_neon_register - save_slots_per_register,\n+    neon_vl = 16,\n+    \/\/ VLmax: The maximum sve vector length is determined by the hardware\n+    \/\/ sve_vl_min <= VLmax <= sve_vl_max.\n+    sve_vl_min = 16,\n+    \/\/ Maximum supported vector length across all CPUs\n+    sve_vl_max = 256\n","filename":"src\/hotspot\/cpu\/aarch64\/register_aarch64.hpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"register_aarch64.hpp\"\n@@ -47,0 +48,1 @@\n+int VM_Version::_max_supported_sve_vector_length;\n@@ -510,2 +512,3 @@\n-    } else if (MaxVectorSize < 16) {\n-      warning(\"SVE does not support vector length less than 16 bytes. Disabling SVE.\");\n+    } else if (MaxVectorSize < FloatRegister::sve_vl_min) {\n+      warning(\"SVE does not support vector length less than %d bytes. Disabling SVE.\",\n+              FloatRegister::sve_vl_min);\n@@ -513,14 +516,1 @@\n-    } else if ((MaxVectorSize % 16) == 0 && is_power_of_2(MaxVectorSize)) {\n-      int new_vl = set_and_get_current_sve_vector_length(MaxVectorSize);\n-      _initial_sve_vector_length = new_vl;\n-      \/\/ Update MaxVectorSize to the largest supported value.\n-      if (new_vl < 0) {\n-        vm_exit_during_initialization(\n-          err_msg(\"Current system does not support SVE vector length for MaxVectorSize: %d\",\n-                  (int)MaxVectorSize));\n-      } else if (new_vl != MaxVectorSize) {\n-        warning(\"Current system only supports max SVE vector length %d. Set MaxVectorSize to %d\",\n-                new_vl, new_vl);\n-      }\n-      MaxVectorSize = new_vl;\n-    } else {\n+    } else if (!((MaxVectorSize % FloatRegister::sve_vl_min) == 0 && is_power_of_2(MaxVectorSize))) {\n@@ -529,0 +519,19 @@\n+\n+    if (UseSVE > 0) {\n+      \/\/ Acquire the largest supported vector length of this machine\n+      _max_supported_sve_vector_length = set_and_get_current_sve_vector_length(FloatRegister::sve_vl_max);\n+\n+      if (MaxVectorSize != _max_supported_sve_vector_length) {\n+        int new_vl = set_and_get_current_sve_vector_length(MaxVectorSize);\n+        if (new_vl < 0) {\n+          vm_exit_during_initialization(\n+            err_msg(\"Current system does not support SVE vector length for MaxVectorSize: %d\",\n+                    (int)MaxVectorSize));\n+        } else if (new_vl != MaxVectorSize) {\n+          warning(\"Current system only supports max SVE vector length %d. Set MaxVectorSize to %d\",\n+                  new_vl, new_vl);\n+        }\n+        MaxVectorSize = new_vl;\n+      }\n+      _initial_sve_vector_length = MaxVectorSize;\n+    }\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":25,"deletions":16,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+  static int _max_supported_sve_vector_length;\n@@ -167,1 +168,2 @@\n-  static int get_initial_sve_vector_length()  { return _initial_sve_vector_length; };\n+  static int get_initial_sve_vector_length()        { return _initial_sve_vector_length; };\n+  static int get_max_supported_sve_vector_length()  { return _max_supported_sve_vector_length; };\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}