{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,0 +57,1 @@\n+            flagsFile.deleteOnExit();\n","filename":"test\/jdk\/com\/sun\/management\/HotSpotDiagnosticMXBean\/CheckOrigin.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -365,1 +365,1 @@\n-        File tmpFile = File.createTempFile(CHECK_PERMISSION_TEST, null);\n+        File tmpFile = File.createTempFile(CHECK_PERMISSION_TEST, null, new File(\".\"));\n@@ -371,1 +371,1 @@\n-        tmpFile = File.createTempFile(CHECK_PERMISSION_TEST, null, null);\n+        tmpFile = File.createTempFile(CHECK_PERMISSION_TEST, null, new File(\".\"));\n","filename":"test\/jdk\/java\/io\/File\/CheckPermission.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+ * @library \/test\/lib\n@@ -40,0 +41,2 @@\n+import jdk.test.lib.Utils;\n+\n@@ -48,1 +51,1 @@\n-        Path tmp = Files.createTempFile(null, null);\n+        Path tmp = Utils.createTempFile(null, null);\n","filename":"test\/jdk\/java\/io\/FileInputStream\/NegativeAvailable.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -191,0 +191,1 @@\n+            usa.getPath().toFile().deleteOnExit();\n@@ -323,0 +324,1 @@\n+            usa.getPath().toFile().deleteOnExit();\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/Bind.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.net.UnixDomainSocketAddress;\n@@ -57,0 +58,3 @@\n+            UnixDomainSocketAddress addr =\n+                    (UnixDomainSocketAddress) serverSocketChannel.getLocalAddress();\n+            addr.getPath().toFile().deleteOnExit();\n","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/NonBlockingAccept.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,2 @@\n+import jdk.test.lib.Utils;\n+\n@@ -48,0 +50,1 @@\n+ * @library \/test\/lib\n@@ -53,1 +56,1 @@\n-        Path path = Files.createTempFile(\"bad\", \".zip\");\n+        Path path = Utils.createTempFile(\"bad\", \".zip\");\n@@ -89,1 +92,1 @@\n-        Path path = Files.createTempFile(\"out\", \".zip\");\n+        Path path = Utils.createTempFile(\"out\", \".zip\");\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/ZeroDate.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-import java.nio.file.Files;\n@@ -38,0 +37,1 @@\n+import jdk.test.lib.Utils;\n@@ -151,1 +151,1 @@\n-            Path p = Files.createTempFile(\"recording\", \".jfr\");\n+            Path p = Utils.createTempFile(\"recording\", \".jfr\");\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/filestream\/TestOrdered.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import jdk.test.lib.Utils;\n@@ -121,1 +122,1 @@\n-            Path p = Files.createTempFile(\"recording\", \".jfr\");\n+            Path p = Utils.createTempFile(\"recording\", \".jfr\");\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/filestream\/TestReuse.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import jdk.test.lib.Utils;\n@@ -81,1 +82,1 @@\n-            Path p = Files.createTempFile(\"test\", \".jfr\");\n+            Path p = Utils.createTempFile(\"test\", \".jfr\");\n","filename":"test\/jdk\/jdk\/jfr\/threading\/TestManyVirtualThreads.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,2 @@\n+import jdk.test.lib.Utils;\n+\n@@ -53,0 +55,1 @@\n+ * @library \/test\/lib\n@@ -58,1 +61,1 @@\n-        Path path = Files.createTempFile(\"bad\", \".zip\");\n+        Path path = Utils.createTempFile(\"bad\", \".zip\");\n@@ -94,1 +97,1 @@\n-        Path path = Files.createTempFile(\"out\", \".zip\");\n+        Path path = Utils.createTempFile(\"out\", \".zip\");\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/ZeroDate.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,0 +69,1 @@\n+        ksFile.deleteOnExit();\n","filename":"test\/jdk\/sun\/security\/pkcs12\/P12SecretKey.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}