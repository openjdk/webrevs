{"files":[{"patch":"@@ -945,1 +945,1 @@\n-      if (ik->is_generated_shared_class()) {\n+      if (ik->is_aot_generated_class()) {\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-        klass->set_is_generated_shared_class();\n+        klass->set_is_aot_generated_class();\n@@ -225,1 +225,1 @@\n-  result->set_is_generated_shared_class();\n+  result->set_is_aot_generated_class();\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1149,1 +1149,1 @@\n-    if (record->klass()->is_generated_shared_class() && JvmtiExport::should_post_class_file_load_hook()) {\n+    if (record->klass()->is_aot_generated_class() && JvmtiExport::should_post_class_file_load_hook()) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -767,8 +767,0 @@\n-  \/\/ Indicates presence of @AOTSafeClassInitializer. Also see AOTClassInitializer for more details.\n-  bool has_aot_safe_initializer() const { return _misc_flags.has_aot_safe_initializer(); }\n-  void set_has_aot_safe_initializer()   { _misc_flags.set_has_aot_safe_initializer(true); }\n-\n-  \/\/ Indicates @AOTRuntimeSetup private static void runtimeSetup() presence.\n-  bool is_runtime_setup_required() const { return _misc_flags.is_runtime_setup_required(); }\n-  void set_is_runtime_setup_required()   { _misc_flags.set_is_runtime_setup_required(true); }\n-\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,2 +57,0 @@\n-    flag(has_aot_safe_initializer           , 1 << 14) \/* has @AOTSafeClassInitializer annotation *\/ \\\n-    flag(is_runtime_setup_required          , 1 << 15) \/* has a runtimeSetup method to be called *\/ \\\n","filename":"src\/hotspot\/share\/oops\/instanceKlassFlags.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-  CDS_ONLY(_shared_class_flags = 0;)\n+  CDS_ONLY(_aot_class_flags = 0;)\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,2 +177,2 @@\n-  u2 _shared_class_flags;\n-  enum CDSSharedClassFlags {\n+  u2 _aot_class_flags;\n+  enum  {\n@@ -184,5 +184,7 @@\n-    \/\/ This class was not loaded from a classfile in the module image\n-    \/\/ or classpath.\n-    _is_generated_shared_class             = 1 << 5,\n-    \/\/ archived mirror already initialized by AOT-cache assembly: no further need to call <clinit>\n-    _has_aot_initialized_mirror            = 1 << 6,\n+    _is_aot_generated_class                = 1 << 5, \/\/ this class was not loaded from a classfile in the module image\n+                                                     \/\/ or classpath, but was generated during AOT cache assembly.\n+    _has_aot_initialized_mirror            = 1 << 6, \/\/ archived mirror already initialized by AOT cache assembly.\n+                                                     \/\/ no further need to call <clinit>\n+    _has_aot_safe_initializer              = 1 << 7, \/\/ has @AOTSafeClassInitializer annotation\n+    _is_runtime_setup_required             = 1 << 8, \/\/ has a runtimeSetup method to be called when\n+                                                     \/\/ this class is loaded from AOT cache\n@@ -328,1 +330,1 @@\n-    CDS_ONLY(_shared_class_flags |= _archived_lambda_proxy_is_available;)\n+    CDS_ONLY(_aot_class_flags |= _archived_lambda_proxy_is_available;)\n@@ -331,1 +333,1 @@\n-    CDS_ONLY(_shared_class_flags &= (u2)(~_archived_lambda_proxy_is_available);)\n+    CDS_ONLY(_aot_class_flags &= (u2)(~_archived_lambda_proxy_is_available);)\n@@ -334,1 +336,1 @@\n-    CDS_ONLY(return (_shared_class_flags & _archived_lambda_proxy_is_available) != 0;)\n+    CDS_ONLY(return (_aot_class_flags & _archived_lambda_proxy_is_available) != 0;)\n@@ -339,1 +341,1 @@\n-    CDS_ONLY(_shared_class_flags |= _has_value_based_class_annotation;)\n+    CDS_ONLY(_aot_class_flags |= _has_value_based_class_annotation;)\n@@ -342,1 +344,1 @@\n-    CDS_ONLY(_shared_class_flags &= (u2)(~_has_value_based_class_annotation);)\n+    CDS_ONLY(_aot_class_flags &= (u2)(~_has_value_based_class_annotation);)\n@@ -345,1 +347,1 @@\n-    CDS_ONLY(return (_shared_class_flags & _has_value_based_class_annotation) != 0;)\n+    CDS_ONLY(return (_aot_class_flags & _has_value_based_class_annotation) != 0;)\n@@ -350,1 +352,1 @@\n-    CDS_ONLY(_shared_class_flags |= _verified_at_dump_time;)\n+    CDS_ONLY(_aot_class_flags |= _verified_at_dump_time;)\n@@ -353,1 +355,1 @@\n-    CDS_ONLY(return (_shared_class_flags & _verified_at_dump_time) != 0;)\n+    CDS_ONLY(return (_aot_class_flags & _verified_at_dump_time) != 0;)\n@@ -358,1 +360,1 @@\n-    CDS_ONLY(_shared_class_flags |= _has_archived_enum_objs;)\n+    CDS_ONLY(_aot_class_flags |= _has_archived_enum_objs;)\n@@ -361,1 +363,1 @@\n-    CDS_ONLY(return (_shared_class_flags & _has_archived_enum_objs) != 0;)\n+    CDS_ONLY(return (_aot_class_flags & _has_archived_enum_objs) != 0;)\n@@ -365,2 +367,2 @@\n-  void set_is_generated_shared_class() {\n-    CDS_ONLY(_shared_class_flags |= _is_generated_shared_class;)\n+  void set_is_aot_generated_class() {\n+    CDS_ONLY(_aot_class_flags |= _is_aot_generated_class;)\n@@ -368,2 +370,2 @@\n-  bool is_generated_shared_class() const {\n-    CDS_ONLY(return (_shared_class_flags & _is_generated_shared_class) != 0;)\n+  bool is_aot_generated_class() const {\n+    CDS_ONLY(return (_aot_class_flags & _is_aot_generated_class) != 0;)\n@@ -374,1 +376,1 @@\n-    CDS_ONLY(_shared_class_flags |= _has_aot_initialized_mirror;)\n+    CDS_ONLY(_aot_class_flags |= _has_aot_initialized_mirror;)\n@@ -377,1 +379,19 @@\n-    CDS_ONLY(return (_shared_class_flags & _has_aot_initialized_mirror) != 0;)\n+    CDS_ONLY(return (_aot_class_flags & _has_aot_initialized_mirror) != 0;)\n+    NOT_CDS(return false;)\n+  }\n+\n+  \/\/ Indicates presence of @AOTSafeClassInitializer. Also see AOTClassInitializer for more details.\n+  void set_has_aot_safe_initializer() {\n+    CDS_ONLY(_aot_class_flags |= _has_aot_safe_initializer;)\n+  }\n+  bool has_aot_safe_initializer() const {\n+    CDS_ONLY(return (_aot_class_flags & _has_aot_safe_initializer) != 0;)\n+    NOT_CDS(return false;)\n+  }\n+\n+  \/\/ Indicates @AOTRuntimeSetup private static void runtimeSetup() presence.\n+  void set_is_runtime_setup_required() {\n+    CDS_ONLY(_aot_class_flags |= _is_runtime_setup_required;)\n+  }\n+  bool is_runtime_setup_required() const {\n+    CDS_ONLY(return (_aot_class_flags & _is_runtime_setup_required) != 0;)\n@@ -382,1 +402,1 @@\n-    CDS_ONLY(return (_shared_class_flags & _in_aot_cache) != 0;)\n+    CDS_ONLY(return (_aot_class_flags & _in_aot_cache) != 0;)\n@@ -387,1 +407,1 @@\n-    CDS_ONLY(_shared_class_flags |= _in_aot_cache;)\n+    CDS_ONLY(_aot_class_flags |= _in_aot_cache;)\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":45,"deletions":25,"binary":false,"changes":70,"status":"modified"}]}