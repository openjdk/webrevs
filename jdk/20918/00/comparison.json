{"files":[{"patch":"@@ -39,0 +39,1 @@\n+import javax.lang.model.element.PackageElement;\n@@ -156,0 +157,21 @@\n+\n+            @Override\n+            protected List<? extends BlockTagTree> getBlockTags(Element e) {\n+                var tags = utils.getBlockTags(e, a -> a.getKind() == tagKind);\n+                if (tags.isEmpty()) {\n+                    tags = getDefaultBlockTags(e, this::accepts);\n+                }\n+                if (tagKind == DocTree.Kind.SINCE\n+                        && tags.isEmpty()\n+                        && e.getKind().isDeclaredType()\n+                        && (e.getEnclosingElement() instanceof PackageElement || isNestedType(e))) {\n+                        tags = utils.getBlockTags(getPackageElement(e), a -> a.getKind() == tagKind);\n+                }\n+                return tags;\n+            }\n+            private Element getPackageElement(Element e) {\n+                while (e != null && !(e instanceof PackageElement)) {\n+                    e = e.getEnclosingElement();\n+                }\n+                return e;\n+            }\n@@ -198,1 +220,1 @@\n-    private boolean accepts(BlockTagTree tree) {\n+    protected boolean accepts(BlockTagTree tree) {\n@@ -225,1 +247,1 @@\n-    private List<? extends BlockTagTree> getBlockTags(Element e) {\n+    protected List<? extends BlockTagTree> getBlockTags(Element e) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SimpleTaglet.java","additions":24,"deletions":2,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug      7180906 8026567 8239804 8324342 8332039\n+ * @bug      7180906 8026567 8239804 8324342 8332039 8335870\n@@ -190,0 +190,36 @@\n+\n+    @Test\n+    public void testSinceInfer_Package(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                          \/**\n+                           * package p\n+                           * @since 24\n+                           *\/\n+                        package p;\n+                         \"\"\",\n+                         \"\"\"\n+                        package p;\n+                        \/**\n+                         * Class C.\n+                         *\/\n+                         public class C {\n+                             public class Nested { }\n+                         }\"\"\");\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+        checkOutput(\"p\/C.html\", true,\n+                \"\"\"\n+                        <dl class=\"notes\">\n+                        <dt>Since:<\/dt>\n+                        <dd>24<\/dd>\"\"\");\n+\n+        checkOutput(\"p\/C.Nested.html\", true,\n+                \"\"\"\n+                        <dl class=\"notes\">\n+                        <dt>Since:<\/dt>\n+                        <dd>24<\/dd>\"\"\");\n+\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSinceTag\/TestSinceTag.java","additions":37,"deletions":1,"binary":false,"changes":38,"status":"modified"}]}