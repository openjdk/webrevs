{"files":[{"patch":"@@ -80,3 +80,2 @@\n- JavaThread* thread = JavaThread::cast(current);\n- bool is_owning = &thread->lock_stack() == this;\n- assert(is_owning == (get_thread() == thread), \"is_owning sanity\");\n+ bool is_owning = &current->lock_stack() == this;\n+ assert(is_owning == (get_thread() == current), \"is_owning sanity\");\n","filename":"src\/hotspot\/share\/runtime\/lockStack.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-  bool is_owning_thread(JavaThread* current) const PRODUCT_RETURN_({ return false; })\n+  NOT_PRODUCT(bool is_owning_thread(JavaThread* current) const;)\n","filename":"src\/hotspot\/share\/runtime\/lockStack.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}