{"files":[{"patch":"@@ -1,56 +0,0 @@\n-\/*\n- * Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.security.action;\n-\n-import java.util.Map;\n-\n-import java.security.Provider;\n-import java.security.PrivilegedAction;\n-\n-\/**\n- * A convenience PrivilegedAction class for setting the properties of\n- * a provider. See the SunRsaSign provider for a usage example.\n- *\n- * @see sun.security.rsa.SunRsaSign\n- * @author  Andreas Sterbenz\n- * @since   1.5\n- *\/\n-public class PutAllAction implements PrivilegedAction<Void> {\n-\n-    private final Provider provider;\n-    private final Map<?, ?> map;\n-\n-    public PutAllAction(Provider provider, Map<?, ?> map) {\n-        this.provider = provider;\n-        this.map = map;\n-    }\n-\n-    public Void run() {\n-        provider.putAll(map);\n-        return null;\n-    }\n-\n-}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/action\/PutAllAction.java","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.HashMap;\n@@ -67,1 +66,1 @@\n-    private static final HashMap<String, String> MECH_MAP = constructMechMap();\n+    private static final Oid[] MECH_OIDS = getMechOIDs();\n@@ -70,1 +69,1 @@\n-    private static HashMap<String, String> constructMechMap() {\n+    private static Oid[] getMechOIDs() {\n@@ -115,4 +114,3 @@\n-                 HashMap<String, String> map = new HashMap<>();\n-                 for (int i = 0; i < mechs.length; i++) {\n-                     if (DEBUG) {\n-                         debug(\"Native MF for \" + mechs[i]);\n+                 if (DEBUG) {\n+                     for (Oid mech : mechs) {\n+                         debug(\"Native MF for \" + mech);\n@@ -120,1 +118,0 @@\n-                     map.put(\"GssApiMechanism.\" + mechs[i], MF_CLASS);\n@@ -122,1 +119,1 @@\n-                 return map;\n+                 return mechs;\n@@ -128,1 +125,1 @@\n-    \/\/ initialize INSTANCE after MECH_MAP is constructed\n+    \/\/ initialize INSTANCE after MECH_OIDS is constructed\n@@ -135,2 +132,5 @@\n-        if (MECH_MAP != null) {\n-            putAll(MECH_MAP);\n+        if (MECH_OIDS != null) {\n+            for (Oid mech : MECH_OIDS) {\n+                putService(new Service(this, \"GssApiMechanism\",\n+                        mech.toString(), MF_CLASS, null, null));\n+            }\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/wrapper\/SunNativeProvider.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}