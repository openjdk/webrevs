{"files":[{"patch":"@@ -41,1 +41,1 @@\n-HSDIS_TOOLCHAIN := TOOLCHAIN_DEFAULT\n+HSDIS_LINK_TYPE := C\n@@ -62,0 +62,1 @@\n+  HSDIS_LINK_TYPE := C++\n@@ -63,1 +64,0 @@\n-  HSDIS_TOOLCHAIN := TOOLCHAIN_LINK_CXX\n@@ -94,8 +94,5 @@\n-    $(eval $(call DefineNativeToolchain, TOOLCHAIN_MINGW, \\\n-        CC := $(MINGW_BASE)-gcc, \\\n-        LD := $(MINGW_BASE)-ld, \\\n-        OBJCOPY := $(MINGW_BASE)-objcopy, \\\n-        RC := $(RC), \\\n-        SYSROOT_CFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n-        SYSROOT_LDFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n-    ))\n+    BUILD_HSDIS_CC := $(MINGW_BASE)-gcc\n+    BUILD_HSDIS_LD := $(MINGW_BASE)-ld\n+    BUILD_HSDIS_OBJCOPY := $(MINGW_BASE)-objcopy\n+    BUILD_HSDIS_SYSROOT_CFLAGS := --sysroot=$(MINGW_SYSROOT)\n+    BUILD_HSDIS_SYSROOT_LDFLAGS := --sysroot=$(MINGW_SYSROOT)\n@@ -134,1 +131,0 @@\n-    HSDIS_TOOLCHAIN := TOOLCHAIN_MINGW\n@@ -147,0 +143,1 @@\n+    LINK_TYPE := $(HSDIS_LINK_TYPE), \\\n@@ -149,1 +146,0 @@\n-    TOOLCHAIN := $(HSDIS_TOOLCHAIN), \\\n","filename":"make\/Hsdis.gmk","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-include native\/ToolchainDefinitions.gmk\n@@ -58,1 +57,2 @@\n-#   TOOLCHAIN Name of toolchain setup to use. Defaults to TOOLCHAIN_DEFAULT.\n+#   TARGET_TYPE The type to target, BUILD or TARGET. Defaults to TARGET.\n+#   LINK_TYPE The language to use for the linker, C or C++. Defaults to C.\n@@ -92,2 +92,12 @@\n-#   CC the compiler to use, default is $(CC)\n-#   LD the linker to use, default is $(LD)\n+#   CC the C compiler to use\n+#   CXX the C++ compiler to use\n+#   LD the Linker to use\n+#   AR the static linker to use\n+#   LIB the Windows lib tool to use for creating static libraries\n+#   AS the assembler to use\n+#   MT the Windows MT tool to use\n+#   RC the Windows RC tool to use\n+#   OBJCOPY the objcopy tool for debug symbol handling\n+#   STRIP the tool to use for stripping debug symbols\n+#   SYSROOT_CFLAGS the compiler flags for using the specific sysroot\n+#   SYSROOT_LDFLAGS the linker flags for using the specific sysroot\n@@ -292,0 +302,38 @@\n+################################################################################\n+# Setup the toolchain variables\n+define SetupToolchain\n+  ifeq ($$($1_TARGET_TYPE), BUILD)\n+    $$(call SetIfEmpty, $1_CC, $(BUILD_CC))\n+    $$(call SetIfEmpty, $1_CXX, $(BUILD_CXX))\n+    $$(call SetIfEmpty, $1_AR, $(BUILD_AR))\n+    $$(call SetIfEmpty, $1_LIB, $(BUILD_LIB))\n+    $$(call SetIfEmpty, $1_AS, $(BUILD_AS))\n+    $$(call SetIfEmpty, $1_OBJCOPY, $(BUILD_OBJCOPY))\n+    $$(call SetIfEmpty, $1_STRIP, $(BUILD_STRIP))\n+    $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $(BUILD_SYSROOT_CFLAGS))\n+    $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $(BUILD_SYSROOT_LDFLAGS))\n+    ifeq ($$($1_LINK_TYPE), C++)\n+      $$(call SetIfEmpty, $1_LD, $(BUILD_LDCXX))\n+    else\n+      $$(call SetIfEmpty, $1_LD, $(BUILD_LD))\n+    endif\n+  else\n+    $$(call SetIfEmpty, $1_CC, $(CC))\n+    $$(call SetIfEmpty, $1_CXX, $(CXX))\n+    $$(call SetIfEmpty, $1_AR, $(AR))\n+    $$(call SetIfEmpty, $1_LIB, $(LIB))\n+    $$(call SetIfEmpty, $1_AS, $(AS))\n+    $$(call SetIfEmpty, $1_MT, $(MT))\n+    $$(call SetIfEmpty, $1_RC, $(RC))\n+    $$(call SetIfEmpty, $1_OBJCOPY, $(OBJCOPY))\n+    $$(call SetIfEmpty, $1_STRIP, $(STRIP))\n+    $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $(SYSROOT_CFLAGS))\n+    $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $(SYSROOT_LDFLAGS))\n+    ifeq ($$($1_LINK_TYPE), C++)\n+      $$(call SetIfEmpty, $1_LD, $(LDCXX))\n+    else\n+      $$(call SetIfEmpty, $1_LD, $(LD))\n+    endif\n+  endif\n+endef\n+\n","filename":"make\/common\/NativeCompilation.gmk","additions":52,"deletions":4,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,0 +106,1 @@\n+        LINK_TYPE := $(if $$(filter %.cpp, $$(file)), C++, C), \\\n@@ -116,1 +117,0 @@\n-        TOOLCHAIN := $(if $$(filter %.cpp, $$(file)), TOOLCHAIN_LINK_CXX, TOOLCHAIN_DEFAULT), \\\n","filename":"make\/common\/TestFilesCompilation.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,130 +0,0 @@\n-#\n-# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-################################################################################\n-# This file contains functionality related to setting up our toolchain\n-# definition variables.\n-\n-################################################################################\n-# Define a native toolchain configuration that can be used by\n-# SetupNativeCompilation calls\n-#\n-# Parameter 1 is the name of the toolchain definition\n-#\n-# Remaining parameters are named arguments:\n-#   EXTENDS - Optional parent definition to get defaults from\n-#   CC - The C compiler\n-#   CXX - The C++ compiler\n-#   LD - The Linker\n-#   AR - Static linker\n-#   LIB - lib, a Windows for creating static libraries\n-#   AS - Assembler\n-#   MT - Windows MT tool\n-#   RC - Windows RC tool\n-#   OBJCOPY - The objcopy tool for debug symbol handling\n-#   STRIP - The tool to use for stripping debug symbols\n-#   SYSROOT_CFLAGS - Compiler flags for using the specific sysroot\n-#   SYSROOT_LDFLAGS - Linker flags for using the specific sysroot\n-DefineNativeToolchain = $(NamedParamsMacroTemplate)\n-define DefineNativeToolchainBody\n-  # If extending another definition, get default values from that,\n-  # otherwise, nothing more needs to be done as variable assignments\n-  # already happened in NamedParamsMacroTemplate.\n-  ifneq ($$($1_EXTENDS), )\n-    $$(call SetIfEmpty, $1_CC, $$($$($1_EXTENDS)_CC))\n-    $$(call SetIfEmpty, $1_CXX, $$($$($1_EXTENDS)_CXX))\n-    $$(call SetIfEmpty, $1_LD, $$($$($1_EXTENDS)_LD))\n-    $$(call SetIfEmpty, $1_AR, $$($$($1_EXTENDS)_AR))\n-    $$(call SetIfEmpty, $1_LIB, $$($$($1_EXTENDS)_LIB))\n-    $$(call SetIfEmpty, $1_AS, $$($$($1_EXTENDS)_AS))\n-    $$(call SetIfEmpty, $1_MT, $$($$($1_EXTENDS)_MT))\n-    $$(call SetIfEmpty, $1_RC, $$($$($1_EXTENDS)_RC))\n-    $$(call SetIfEmpty, $1_OBJCOPY, $$($$($1_EXTENDS)_OBJCOPY))\n-    $$(call SetIfEmpty, $1_STRIP, $$($$($1_EXTENDS)_STRIP))\n-    $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $$($$($1_EXTENDS)_SYSROOT_CFLAGS))\n-    $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $$($$($1_EXTENDS)_SYSROOT_LDFLAGS))\n-  endif\n-endef\n-\n-# Create a default toolchain with the main compiler and linker\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_DEFAULT, \\\n-    CC := $(CC), \\\n-    CXX := $(CXX), \\\n-    LD := $(LD), \\\n-    AR := $(AR), \\\n-    LIB := $(LIB), \\\n-    AS := $(AS), \\\n-    MT := $(MT), \\\n-    RC := $(RC), \\\n-    OBJCOPY := $(OBJCOPY), \\\n-    STRIP := $(STRIP), \\\n-    SYSROOT_CFLAGS := $(SYSROOT_CFLAGS), \\\n-    SYSROOT_LDFLAGS := $(SYSROOT_LDFLAGS), \\\n-))\n-\n-# Create a toolchain where linking is done with the C++ linker\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_LINK_CXX, \\\n-    EXTENDS := TOOLCHAIN_DEFAULT, \\\n-    LD := $(LDCXX), \\\n-))\n-\n-# Create a toolchain with the BUILD compiler, used for build tools that\n-# are to be run during the build.\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_BUILD, \\\n-    CC := $(BUILD_CC), \\\n-    CXX := $(BUILD_CXX), \\\n-    LD := $(BUILD_LD), \\\n-    AR := $(BUILD_AR), \\\n-    LIB := $(BUILD_LIB), \\\n-    AS := $(BUILD_AS), \\\n-    OBJCOPY := $(BUILD_OBJCOPY), \\\n-    STRIP := $(BUILD_STRIP), \\\n-    SYSROOT_CFLAGS := $(BUILD_SYSROOT_CFLAGS), \\\n-    SYSROOT_LDFLAGS := $(BUILD_SYSROOT_LDFLAGS), \\\n-))\n-\n-# BUILD toolchain with the C++ linker\n-$(eval $(call DefineNativeToolchain, TOOLCHAIN_BUILD_LINK_CXX, \\\n-    EXTENDS := TOOLCHAIN_BUILD, \\\n-    LD := $(BUILD_LDCXX), \\\n-))\n-\n-################################################################################\n-# Setup the toolchain to be used\n-define SetupToolchain\n-  $$(call SetIfEmpty, $1_TOOLCHAIN, TOOLCHAIN_DEFAULT)\n-  $$(call SetIfEmpty, $1_CC, $$($$($1_TOOLCHAIN)_CC))\n-  $$(call SetIfEmpty, $1_CXX, $$($$($1_TOOLCHAIN)_CXX))\n-  $$(call SetIfEmpty, $1_LD, $$($$($1_TOOLCHAIN)_LD))\n-  $$(call SetIfEmpty, $1_AR, $$($$($1_TOOLCHAIN)_AR))\n-  $$(call SetIfEmpty, $1_LIB, $$($$($1_TOOLCHAIN)_LIB))\n-  $$(call SetIfEmpty, $1_AS, $$($$($1_TOOLCHAIN)_AS))\n-  $$(call SetIfEmpty, $1_MT, $$($$($1_TOOLCHAIN)_MT))\n-  $$(call SetIfEmpty, $1_RC, $$($$($1_TOOLCHAIN)_RC))\n-  $$(call SetIfEmpty, $1_OBJCOPY, $$($$($1_TOOLCHAIN)_OBJCOPY))\n-  $$(call SetIfEmpty, $1_STRIP, $$($$($1_TOOLCHAIN)_STRIP))\n-  $$(call SetIfEmpty, $1_SYSROOT_CFLAGS, $$($$($1_TOOLCHAIN)_SYSROOT_CFLAGS))\n-  $$(call SetIfEmpty, $1_SYSROOT_LDFLAGS, $$($$($1_TOOLCHAIN)_SYSROOT_LDFLAGS))\n-endef\n","filename":"make\/common\/native\/ToolchainDefinitions.gmk","additions":0,"deletions":130,"binary":false,"changes":130,"status":"deleted"},{"patch":"@@ -74,1 +74,2 @@\n-      TOOLCHAIN := TOOLCHAIN_BUILD_LINK_CXX, \\\n+      TARGET_TYPE := BUILD, \\\n+      LINK_TYPE := C++, \\\n","filename":"make\/hotspot\/gensrc\/GensrcAdlc.gmk","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+    LINK_TYPE := C++, \\\n@@ -82,1 +82,1 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+    LINK_TYPE := C++, \\\n@@ -131,1 +131,0 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n@@ -134,0 +133,1 @@\n+    LINK_TYPE := C++, \\\n","filename":"make\/hotspot\/lib\/CompileGtest.gmk","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+    LINK_TYPE := C++, \\\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -245,1 +245,1 @@\n-      TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+      LINK_TYPE := C++, \\\n","filename":"make\/modules\/java.base\/Lib.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,1 +118,1 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+    LINK_TYPE := C++, \\\n","filename":"make\/modules\/java.base\/lib\/CoreLibraries.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,1 @@\n+  LIBJSOUND_LINK_TYPE := C\n@@ -55,1 +56,1 @@\n-    LIBJSOUND_TOOLCHAIN := TOOLCHAIN_LINK_CXX\n+    LIBJSOUND_LINK_TYPE := C++\n@@ -60,1 +61,1 @@\n-      TOOLCHAIN := $(LIBJSOUND_TOOLCHAIN), \\\n+      LINK_TYPE := $(LIBJSOUND_LINK_TYPE), \\\n","filename":"make\/modules\/java.desktop\/Lib.gmk","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -565,0 +565,1 @@\n+    LINK_TYPE := C++, \\\n@@ -567,1 +568,0 @@\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-SA_TOOLCHAIN := $(TOOLCHAIN_DEFAULT)\n+SA_LINK_TYPE := C\n@@ -50,1 +50,1 @@\n-  SA_TOOLCHAIN := TOOLCHAIN_LINK_CXX\n+  SA_LINK_TYPE := C++\n@@ -57,1 +57,1 @@\n-    TOOLCHAIN := $(SA_TOOLCHAIN), \\\n+    LINK_TYPE := $(SA_LINK_TYPE), \\\n","filename":"make\/modules\/jdk.hotspot.agent\/Lib.gmk","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-      TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+      LINK_TYPE := C++, \\\n","filename":"make\/modules\/jdk.internal.le\/Lib.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-  JPACKAGE_APPLAUNCHER_TOOLCHAIN := TOOLCHAIN_DEFAULT\n+  JPACKAGE_APPLAUNCHER_LINK_TYPE := C\n@@ -41,1 +41,1 @@\n-  JPACKAGE_APPLAUNCHER_TOOLCHAIN := TOOLCHAIN_LINK_CXX\n+  JPACKAGE_APPLAUNCHER_LINK_TYPE := C++\n@@ -62,0 +62,1 @@\n+    LINK_TYPE := $(JPACKAGE_APPLAUNCHER_LINK_TYPE), \\\n@@ -66,1 +67,0 @@\n-    TOOLCHAIN := $(JPACKAGE_APPLAUNCHER_TOOLCHAIN), \\\n@@ -106,1 +106,1 @@\n-      TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+      LINK_TYPE := C++, \\\n@@ -180,0 +180,1 @@\n+      LINK_TYPE := $(BUILD_JPACKAGE_APPLAUNCHEREXE_LINK_TYPE), \\\n@@ -183,1 +184,0 @@\n-      TOOLCHAIN := $(BUILD_JPACKAGE_APPLAUNCHEREXE_TOOLCHAIN), \\\n","filename":"make\/modules\/jdk.jpackage\/Lib.gmk","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}