{"files":[{"patch":"@@ -393,1 +393,2 @@\n-be able to build the JDK.<\/p>\n+be able to build the JDK. (Note: The Windows 32-bit x86 port is\n+deprecated and may be removed in a future release.)<\/p>\n@@ -410,2 +411,25 @@\n-<p>Note: The Windows 32-bit x86 port is deprecated and may be removed in\n-a future release.<\/p>\n+<h4 id=\"locale-requirements\">Locale Requirements<\/h4>\n+<p>Building and testing the JDK requires a well-defined locale to be\n+guaranteed to run correctly. On non-Windows operating systems, this is\n+achieved using the <code>LC_*<\/code> variables, which propagate to all\n+child processes of the build. Unfortunately, there is no way to set the\n+locale for a specific process like this in Windows. Instead, changes to\n+locale can only be made globally, which will affect all applications run\n+by the user. Furthermore, Windows makes a difference between user locale\n+and system locale, where the latter determines e.g. the file path\n+encoding. Both this locale settings affect building and testing the\n+JDK.<\/p>\n+<p>The <strong>recommended<\/strong> and <strong>supported<\/strong> way\n+of building the JDK on Windows is to set both the system locale and the\n+user locale to <strong>US English<\/strong>. The system setting can be\n+changed by going to the Control Panel, choosing \"Regional Settings\"\n+-&gt; \"Administrative\" and then pressing on the \"Change System Locale\"\n+button.<\/p>\n+<p>Since this is annoying for users who prefer another locale, we strive\n+to get the building and testing to work on other locales as well. This\n+is on a \"best effort\" level, so beware! You might get odd results in\n+both building and testing. If you do, remember that locales other than\n+US English are not supported nor recommended.<\/p>\n+<p>It is also imperative to install the US English language pack in\n+Visual Studio. For details, see <a\n+href=\"#microsoft-visual-studio\">Microsoft Visual Studio<\/a>.<\/p>\n@@ -629,0 +653,21 @@\n+<p>You must install the US English locale, otherwise the build system\n+might not be able to interact properly with the compiler. You can add\n+additional language packs when installing Visual Studio.<\/p>\n+<p>If you have already installed Visual Studio without the US English\n+language pack, you can modify the installation to add this. You can\n+either do this via a GUI like this:<\/p>\n+<ul>\n+<li>Click on \"Visual Studio Installer\" in Start menu.<\/li>\n+<li>Click \"Modify\".<\/li>\n+<li>Select the tab \"Language packs\".<\/li>\n+<li>Choose \"English\".<\/li>\n+<li>Click \"Modify\".<\/li>\n+<\/ul>\n+<p>or you can run it on the command line. For this to work, you need to\n+start <code>cmd.exe<\/code> using \"Run as Administrator\". Then execute\n+the following line: (note that the \" characters are essential)<\/p>\n+<pre><code>&quot;C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vs_installer.exe&quot; modify --channelId VisualStudio.16.Release --productId Microsoft.VisualStudio.Product.BuildTools --addProductLang en-us -p<\/code><\/pre>\n+<p><code>VisualStudio.16.Release<\/code> represent VS 2019, so adjust the\n+version number accordingly. If you have not installed the\n+<code>BuildTools<\/code>, but e.g. <code>Professional<\/code>, adjust the\n+product ID accordingly.<\/p>\n","filename":"doc\/building.html","additions":48,"deletions":3,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -194,1 +194,2 @@\n-build the JDK.\n+build the JDK. (Note: The Windows 32-bit x86 port is deprecated and may be\n+removed in a future release.)\n@@ -212,2 +213,26 @@\n-Note: The Windows 32-bit x86 port is deprecated and may be removed in a future\n-release.\n+#### Locale Requirements\n+\n+Building and testing the JDK requires a well-defined locale to be guaranteed to\n+run correctly. On non-Windows operating systems, this is achieved using the\n+`LC_*` variables, which propagate to all child processes of the build.\n+Unfortunately, there is no way to set the locale for a specific process like\n+this in Windows. Instead, changes to locale can only be made globally, which\n+will affect all applications run by the user. Furthermore, Windows makes a\n+difference between user locale and system locale, where the latter determines\n+e.g. the file path encoding. Both this locale settings affect building and\n+testing the JDK.\n+\n+The **recommended** and **supported** way of building the JDK on Windows is to\n+set both the system locale and the user locale to **US English**. The system\n+setting can be changed by going to the Control Panel, choosing \"Regional\n+Settings\" -> \"Administrative\" and then pressing on the \"Change System Locale\"\n+button.\n+\n+Since this is annoying for users who prefer another locale, we strive to get\n+the building and testing to work on other locales as well. This is on a \"best\n+effort\" level, so beware! You might get odd results in both building and\n+testing. If you do, remember that locales other than US English are not\n+supported nor recommended.\n+\n+It is also imperative to install the US English language pack in Visual Studio.\n+For details, see [Microsoft Visual Studio](#microsoft-visual-studio).\n@@ -439,0 +464,26 @@\n+You must install the US English locale, otherwise the build system might not be\n+able to interact properly with the compiler. You can add additional language\n+packs when installing Visual Studio.\n+\n+If you have already installed Visual Studio without the US English language\n+pack, you can modify the installation to add this. You can either do this via a\n+GUI like this:\n+\n+* Click on \"Visual Studio Installer\" in Start menu.\n+* Click \"Modify\".\n+* Select the tab \"Language packs\".\n+* Choose \"English\".\n+* Click \"Modify\".\n+\n+or you can run it on the command line. For this to work, you need to start\n+`cmd.exe` using \"Run as Administrator\". Then execute the following line: (note\n+that the \" characters are essential)\n+\n+```\n+\"C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vs_installer.exe\" modify --channelId VisualStudio.16.Release --productId Microsoft.VisualStudio.Product.BuildTools --addProductLang en-us -p\n+```\n+\n+`VisualStudio.16.Release` represent VS 2019, so adjust the version number\n+accordingly. If you have not installed the `BuildTools`, but e.g.\n+`Professional`, adjust the product ID accordingly.\n+\n","filename":"doc\/building.md","additions":54,"deletions":3,"binary":false,"changes":57,"status":"modified"}]}