{"files":[{"patch":"@@ -142,0 +142,1 @@\n+        static boolean mnemonicShowHideFlag = false;\n@@ -148,7 +149,9 @@\n-                MenuElement[] path = new MenuElement[2];\n-                path[0] = (MenuElement)menuBar;\n-                path[1] = (MenuElement)menu;\n-                msm.setSelectedPath(path);\n-\n-                \/\/ show mnemonics\n-                WindowsLookAndFeel.setMnemonicHidden(false);\n+                MenuElement[] selectedPath = msm.getSelectedPath();\n+                if (selectedPath.length > 0 && (selectedPath[0] instanceof JMenuBar)) {\n+                    msm.clearSelectedPath();\n+                    WindowsLookAndFeel.setMnemonicHidden(true);\n+                } else {\n+                    MenuElement[] path = {menuBar, menu};\n+                    msm.setSelectedPath(path);\n+                    WindowsLookAndFeel.setMnemonicHidden(false);\n+                }\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/WindowsMenuBarUI.java","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,133 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8326458\n+ * @key headful\n+ * @requires (os.family == \"windows\")\n+ * @modules java.desktop\/com.sun.java.swing.plaf.windows\n+ * @summary Verifies if menu mnemonics toggle between show or hide\n+ *          on F10 press in windows LAF.\n+ * @run main TestMenuMnemonic\n+ *\/\n+\n+import java.awt.event.KeyEvent;\n+import java.awt.Robot;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuItem;\n+import javax.swing.JMenuBar;\n+import javax.swing.MenuElement;\n+import javax.swing.MenuSelectionManager;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import com.sun.java.swing.plaf.windows.WindowsLookAndFeel;\n+\n+public class TestMenuMnemonic {\n+\n+    private static JFrame frame;\n+    private static JMenuBar menuBar;\n+    private static JMenu fileMenu;\n+    private static JMenu editMenu;\n+    private static JMenuItem item1;\n+    private static JMenuItem item2;\n+    private static int expectedMnemonicShowHideCount = 5;\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        int mnemonicHideCount = 0;\n+        int mnemonicShowCount = 0;\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                createAndShowUI();\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            for (int i = 0; i < 10; i++) {\n+                robot.keyPress(KeyEvent.VK_F10);\n+                robot.waitForIdle();\n+                robot.delay(50);\n+                robot.keyRelease(KeyEvent.VK_F10);\n+                MenuSelectionManager msm =\n+                        MenuSelectionManager.defaultManager();\n+                MenuElement[] selectedPath = msm.getSelectedPath();\n+                if (WindowsLookAndFeel.isMnemonicHidden()) {\n+                    mnemonicHideCount++;\n+                    \/\/ check if selection is cleared when mnemonics are hidden\n+                    if (selectedPath.length != 0) {\n+                        throw new RuntimeException(\"Menubar is active even after\" +\n+                                \" mnemonics are hidden\");\n+                    }\n+                } else {\n+                    mnemonicShowCount++;\n+                    if (selectedPath.length == 0 &&\n+                        (selectedPath[0] != menuBar || selectedPath[1] != fileMenu)) {\n+                        throw new RuntimeException(\"No Menu and Menubar is active when\" +\n+                                \" mnemonics are shown\");\n+                    }\n+                }\n+            }\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            if (mnemonicShowCount != expectedMnemonicShowHideCount\n+                && mnemonicHideCount != expectedMnemonicShowHideCount) {\n+                throw new RuntimeException(\"Mismatch in Mnemonic show\/hide on F10 press\");\n+            }\n+\n+\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        frame = new JFrame(\"Test Menu Mnemonic Show\/Hide\");\n+        menuBar  = new JMenuBar();\n+        fileMenu = new JMenu(\"File\");\n+        editMenu = new JMenu(\"Edit\");\n+        fileMenu.setMnemonic(KeyEvent.VK_F);\n+        editMenu.setMnemonic(KeyEvent.VK_E);\n+        item1 = new JMenuItem(\"Item 1\");\n+        item2 = new JMenuItem(\"Item 2\");\n+        fileMenu.add(item1);\n+        fileMenu.add(item2);\n+        menuBar.add(fileMenu);\n+        menuBar.add(editMenu);\n+        frame.setJMenuBar(menuBar);\n+        frame.pack();\n+        frame.setSize(250, 200);\n+        frame.setLocationRelativeTo(null);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JMenu\/TestMenuMnemonic.java","additions":133,"deletions":0,"binary":false,"changes":133,"status":"added"}]}