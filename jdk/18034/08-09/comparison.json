{"files":[{"patch":"@@ -1320,1 +1320,1 @@\n-ReductionNode* ReductionNode::make(int opc, Node *ctrl, Node* n1, Node* n2, BasicType bt,\n+ReductionNode* ReductionNode::make(int opc, Node* ctrl, Node* n1, Node* n2, BasicType bt,\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -244,2 +244,2 @@\n-  #ifndef PRODUCT\n-  void dump_spec(outputStream *st) const {\n+#ifndef PRODUCT\n+  void dump_spec(outputStream* st) const {\n@@ -252,1 +252,1 @@\n-  #endif\n+#endif\n@@ -259,1 +259,1 @@\n-  AddReductionVINode(Node * ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n+  AddReductionVINode(Node* ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n@@ -267,1 +267,1 @@\n-  AddReductionVLNode(Node *ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n+  AddReductionVLNode(Node* ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n@@ -282,1 +282,1 @@\n-  AddReductionVFNode(Node *ctrl, Node* in1, Node* in2, bool requires_strict_order = true) :\n+  AddReductionVFNode(Node* ctrl, Node* in1, Node* in2, bool requires_strict_order = true) :\n@@ -309,1 +309,1 @@\n-  AddReductionVDNode(Node *ctrl, Node* in1, Node* in2, bool requires_strict_order = true) :\n+  AddReductionVDNode(Node* ctrl, Node* in1, Node* in2, bool requires_strict_order = true) :\n@@ -459,1 +459,1 @@\n-  MulReductionVINode(Node *ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n+  MulReductionVINode(Node* ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n@@ -467,1 +467,1 @@\n-  MulReductionVLNode(Node *ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n+  MulReductionVLNode(Node* ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n@@ -481,1 +481,1 @@\n-  MulReductionVFNode(Node *ctrl, Node* in1, Node* in2, bool requires_strict_order = true) :\n+  MulReductionVFNode(Node* ctrl, Node* in1, Node* in2, bool requires_strict_order = true) :\n@@ -507,1 +507,1 @@\n-  MulReductionVDNode(Node *ctrl, Node* in1, Node* in2, bool requires_strict_order = true) :\n+  MulReductionVDNode(Node* ctrl, Node* in1, Node* in2, bool requires_strict_order = true) :\n@@ -848,1 +848,1 @@\n-  AndReductionVNode(Node *ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n+  AndReductionVNode(Node* ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n@@ -865,1 +865,1 @@\n-  OrReductionVNode(Node *ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n+  OrReductionVNode(Node* ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n@@ -882,1 +882,1 @@\n-  XorReductionVNode(Node *ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n+  XorReductionVNode(Node* ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n@@ -890,1 +890,1 @@\n-  MinReductionVNode(Node *ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n+  MinReductionVNode(Node* ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n@@ -898,1 +898,1 @@\n-  MaxReductionVNode(Node *ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n+  MaxReductionVNode(Node* ctrl, Node* in1, Node* in2) : ReductionNode(ctrl, in1, in2) {}\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @requires os.arch == \"aarch64\"\n@@ -54,2 +53,2 @@\n-    @IR(applyIf = {\"UseSVE\", \"0\"}, failOn = {IRNode.ADD_REDUCTION_VF})\n-    @IR(applyIf = {\"UseSVE\", \">0\"}, counts = {\"requires_strict_order\", \">=1\", IRNode.ADD_REDUCTION_VF, \">=1\"},\n+    @IR(applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sve\", \"false\"}, failOn = {IRNode.ADD_REDUCTION_VF})\n+    @IR(applyIfCPUFeature = {\"sve\", \"true\"}, counts = {\"requires_strict_order\", \">=1\", IRNode.ADD_REDUCTION_VF, \">=1\"},\n@@ -59,1 +58,1 @@\n-        for(int i = 0; i < SIZE; i++) {\n+        for (int i = 0; i < SIZE; i++) {\n@@ -66,2 +65,2 @@\n-    @IR(applyIf = {\"UseSVE\", \"0\"}, failOn = {IRNode.ADD_REDUCTION_VD})\n-    @IR(applyIf = {\"UseSVE\", \">0\"}, counts = {\"requires_strict_order\", \">=1\", IRNode.ADD_REDUCTION_VD, \">=1\"},\n+    @IR(applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sve\", \"false\"}, failOn = {IRNode.ADD_REDUCTION_VD})\n+    @IR(applyIfCPUFeature = {\"sve\", \"true\"}, counts = {\"requires_strict_order\", \">=1\", IRNode.ADD_REDUCTION_VD, \">=1\"},\n@@ -71,1 +70,1 @@\n-        for(int i = 0; i < SIZE; i++) {\n+        for (int i = 0; i < SIZE; i++) {\n@@ -78,2 +77,2 @@\n-    @IR(applyIf = {\"UseSVE\", \"0\"}, failOn = {IRNode.MUL_REDUCTION_VF})\n-    @IR(applyIf = {\"UseSVE\", \">0\"}, counts = {\"requires_strict_order\", \">=1\", IRNode.MUL_REDUCTION_VF, \">=1\"},\n+    @IR(applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sve\", \"false\"}, failOn = {IRNode.MUL_REDUCTION_VF})\n+    @IR(applyIfCPUFeature = {\"sve\", \"true\"}, counts = {\"requires_strict_order\", \">=1\", IRNode.MUL_REDUCTION_VF, \">=1\"},\n@@ -83,1 +82,1 @@\n-        for(int i = 0; i < SIZE; i++) {\n+        for (int i = 0; i < SIZE; i++) {\n@@ -90,2 +89,2 @@\n-    @IR(applyIf = {\"UseSVE\", \"0\"}, failOn = {IRNode.MUL_REDUCTION_VD})\n-    @IR(applyIf = {\"UseSVE\", \">0\"}, counts = {\"requires_strict_order\", \">=1\", IRNode.MUL_REDUCTION_VD, \">=1\"},\n+    @IR(applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sve\", \"false\"}, failOn = {IRNode.MUL_REDUCTION_VD})\n+    @IR(applyIfCPUFeature = {\"sve\", \"true\"}, counts = {\"requires_strict_order\", \">=1\", IRNode.MUL_REDUCTION_VD, \">=1\"},\n@@ -95,1 +94,1 @@\n-        for(int i = 0; i < SIZE; i++) {\n+        for (int i = 0; i < SIZE; i++) {\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestVectorFPReduction.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    private static float [] fa;\n+    private static float[] fa;\n@@ -57,1 +57,1 @@\n-    private static double [] da;\n+    private static double[] da;\n@@ -73,1 +73,1 @@\n-    public static void testFloatAddKernel(VectorSpecies SPECIES, float [] f) {\n+    public static void testFloatAddKernel(VectorSpecies SPECIES, float[] f) {\n@@ -110,1 +110,1 @@\n-    public static void testDoubleAddKernel(VectorSpecies SPECIES, double [] d) {\n+    public static void testDoubleAddKernel(VectorSpecies SPECIES, double[] d) {\n@@ -143,1 +143,1 @@\n-    public static void testFloatMulKernel(VectorSpecies SPECIES, float [] f) {\n+    public static void testFloatMulKernel(VectorSpecies SPECIES, float[] f) {\n@@ -166,1 +166,1 @@\n-    public static void testDoubleMulKernel(VectorSpecies SPECIES, double [] d) {\n+    public static void testDoubleMulKernel(VectorSpecies SPECIES, double[] d) {\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestVectorAddMulReduction.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}