{"files":[{"patch":"@@ -172,1 +172,1 @@\n-        return FloatingDecimal.parseDoubleDigits(decimalAt, digits, count);\n+        return FloatingDecimal.parseDoubleSignlessDigits(decimalAt, digits, count);\n","filename":"src\/java.base\/share\/classes\/java\/text\/DigitList.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -134,2 +134,2 @@\n-    public static double parseDoubleDigits(int decExp, char[] digits, int length) throws NumberFormatException {\n-        return readDoubleDigits(decExp, digits, length).doubleValue();\n+    public static double parseDoubleSignlessDigits(int decExp, char[] digits, int length) {\n+        return readDoubleSignlessDigits(decExp, digits, length).doubleValue();\n@@ -1840,1 +1840,1 @@\n-    static ASCIIToBinaryConverter readDoubleDigits(int decExp, char[] digits, int length) {\n+    static ASCIIToBinaryConverter readDoubleSignlessDigits(int decExp, char[] digits, int length) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FloatingDecimal.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8354522\n+ * @bug 8354522 8358880\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/CloneTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-import java.text.NumberFormat;\n@@ -28,1 +27,0 @@\n-import java.util.Locale;\n@@ -69,1 +67,1 @@\n-    private NumberFormat dnf = new DecimalFormat();\n+    private DecimalFormat dnf = new DecimalFormat();\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/text\/DecimalFormatParseBench.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}