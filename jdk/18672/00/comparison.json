{"files":[{"patch":"@@ -46,8 +46,2 @@\n-    public int dispatchCompilation(String[] args) {\n-        Log log = Log.get();\n-        try {\n-            return pool.submit(() -> Server.runCompiler(log, args)).get();\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-            throw new RuntimeException(\"Error during compile\", e);\n-        }\n+    public void execute(Runnable runnable) {\n+        this.pool.execute(runnable);\n","filename":"make\/langtools\/tools\/javacserver\/server\/CompilerThreadPool.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -171,4 +171,2 @@\n-                 \/\/ Handle each incoming request in a separate thread. This is just for socket communication,\n-                 \/\/ the actual compilation will be done by the threadpool.\n-                Thread requestHandler = new Thread(() -> handleRequest(socket));\n-                requestHandler.start();\n+                 \/\/ Handle each incoming request in a threapool thread\n+                compilerThreadPool.execute(() -> handleRequest(socket));\n@@ -209,3 +207,3 @@\n-                \/\/ Perform compilation. This will call runCompiler() on a\n-                \/\/ thread in the thread pool\n-                int exitCode = compilerThreadPool.dispatchCompilation(args);\n+                \/\/ Perform compilation\n+                int exitCode = runCompiler(args);\n+\n@@ -223,0 +221,1 @@\n+            ex.printStackTrace();\n@@ -229,3 +228,1 @@\n-    public static int runCompiler(Log log, String[] args) {\n-        Log.setLogForCurrentThread(log);\n-\n+    public static int runCompiler(String[] args) {\n","filename":"make\/langtools\/tools\/javacserver\/server\/Server.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"}]}