{"files":[{"patch":"@@ -369,0 +369,1 @@\n+    bool found_waiter = false;\n@@ -370,1 +371,0 @@\n-      \/\/ Wake up thread that blocks on the compile task.\n@@ -372,1 +372,14 @@\n-      current->lock()->notify();\n+      assert(current->waiting_for_completion_count() <= 1, \"more than one thread are waiting for task\");\n+      if (current->waiting_for_completion_count() > 0) {\n+        \/\/ If another thread waits for this task, we must wake them up\n+        \/\/ so they will stop waiting and free the task.\n+        current->lock()->notify();\n+        found_waiter = true;\n+      }\n+    }\n+    if (!found_waiter) {\n+      \/\/ If no one was waiting for this task, we need to free it ourselves. In this case, the task\n+      \/\/ is also certainly unlocked, because, again, there is no waiter.\n+      \/\/ Otherwise, by convention, it's the waiters responsibility to free the task.\n+      \/\/ Put the task back on the freelist.\n+      CompileTask::free(current);\n@@ -374,2 +387,0 @@\n-    \/\/ Put the task back on the freelist.\n-    CompileTask::free(current);\n@@ -1740,0 +1751,1 @@\n+    task->inc_waiting_for_completion();\n@@ -1743,0 +1755,1 @@\n+    task->dec_waiting_for_completion();\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -110,0 +110,2 @@\n+  _waiting_count = 0;\n+\n","filename":"src\/hotspot\/share\/compiler\/compileTask.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,0 +101,1 @@\n+  int                  _waiting_count;  \/\/ See waiting_for_completion_count()\n@@ -177,0 +178,17 @@\n+  \/\/ See how many threads are waiting for this task. Must have lock to read this.\n+  int waiting_for_completion_count() {\n+    assert(_lock->owned_by_self(), \"must have lock to use waiting_for_completion_count()\");\n+    return _waiting_count;\n+  }\n+  \/\/ Indicates that a thread is waiting for this task to complete. Must have lock to use this.\n+  void inc_waiting_for_completion() {\n+    assert(_lock->owned_by_self(), \"must have lock to use inc_waiting_for_completion()\");\n+    _waiting_count++;\n+  }\n+  \/\/ Indicates that a thread stopped waiting for this task to complete. Must have lock to use this.\n+  void dec_waiting_for_completion() {\n+    assert(_lock->owned_by_self(), \"must have lock to use dec_waiting_for_completion()\");\n+    assert(_waiting_count > 0, \"waiting count is not positive\");\n+    _waiting_count--;\n+  }\n+\n","filename":"src\/hotspot\/share\/compiler\/compileTask.hpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}