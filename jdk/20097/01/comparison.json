{"files":[{"patch":"@@ -187,1 +187,0 @@\n-     * @throws ClassNotFoundException if the class cannot be located\n@@ -190,1 +189,1 @@\n-    ClassLoader newClassLoaderFor(ClassLoader parent, String mainClassName) throws ClassNotFoundException, Fault {\n+    ClassLoader newClassLoaderFor(ClassLoader parent, String mainClassName) throws Fault {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/launcher\/MemoryContext.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -201,0 +201,2 @@\n+        ClassLoader loader = context.newClassLoaderFor(parentLoader, firstClassName);\n+        Thread.currentThread().setContextClassLoader(loader);\n@@ -202,1 +204,0 @@\n-            ClassLoader loader = context.newClassLoaderFor(parentLoader, firstClassName);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/launcher\/SourceLauncher.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8192920 8204588 8246774 8248843 8268869 8235876 8328339\n+ * @bug 8192920 8204588 8246774 8248843 8268869 8235876 8328339 8335896\n@@ -279,0 +279,21 @@\n+    @Test\n+    public void testThreadContextClassLoader(Path base) throws IOException {\n+        tb.writeJavaFiles(base, \/\/language=java\n+                \"\"\"\n+                class ThreadContextClassLoader {\n+                    public static void main(String... args) {\n+                        var expected = ThreadContextClassLoader.class.getClassLoader();\n+                        var actual = Thread.currentThread().getContextClassLoader();\n+                        System.out.println(expected == actual);\n+                    }\n+                }\n+                \"\"\");\n+\n+        Path file = base.resolve(\"ThreadContextClassLoader.java\");\n+        String log = new JavaTask(tb)\n+                .className(file.toString())\n+                .run(Task.Expect.SUCCESS)\n+                .getOutput(Task.OutputKind.STDOUT);\n+        checkEqual(\"stdout\", log.trim(), \"true\");\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/launcher\/SourceLauncherTest.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"}]}