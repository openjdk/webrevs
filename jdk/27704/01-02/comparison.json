{"files":[{"patch":"@@ -43,0 +43,3 @@\n+\/\/ This is similar to IGVN optimization. But we are a bit lazy, and don't care about\n+\/\/ notification \/ worklist, since the list of nodes is rather small, and we don't\n+\/\/ expect optimizations that trickle over the whole graph.\n@@ -46,2 +49,5 @@\n-  while (true) {\n-    bool progress = false;\n+  bool progress = true;\n+  DEBUG_ONLY(int pass_count = 0;)\n+  while (progress) {\n+    progress = false;\n+    assert(++pass_count < 10, \"ensure we do not have endless loops\");\n@@ -66,1 +72,0 @@\n-    if (!progress) { break; }\n@@ -97,1 +102,1 @@\n-  int num_alive_nodes = count_alive_vtnodes();\n+  const int num_alive_nodes = count_alive_vtnodes();\n@@ -1071,5 +1076,0 @@\n-  int sopc     = scalar_opcode();\n-  uint vlen    = vector_length();\n-  BasicType bt = element_basic_type();\n-  int ropc     = vector_reduction_opcode();\n-\n@@ -1099,1 +1099,5 @@\n-  const int vopc = VectorNode::opcode(sopc, bt);\n+  const int sopc     = scalar_opcode();\n+  const uint vlen    = vector_length();\n+  const BasicType bt = element_basic_type();\n+  const int ropc     = vector_reduction_opcode();\n+  const int vopc     = VectorNode::opcode(sopc, bt);\n","filename":"src\/hotspot\/share\/opto\/vtransform.cpp","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"}]}