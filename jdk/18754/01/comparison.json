{"files":[{"patch":"@@ -551,0 +551,5 @@\n+  if (barrier_data() != 0) {\n+    st->print(\" barrier(\");\n+    BarrierSet::barrier_set()->barrier_set_c2()->dump_barrier_data(this, st);\n+    st->print(\") \");\n+  }\n@@ -563,0 +568,1 @@\n+  MachNode::dump_spec(st);\n@@ -568,5 +574,0 @@\n-  if (barrier_data() != 0) {\n-    st->print(\" barrier(\");\n-    BarrierSet::barrier_set()->barrier_set_c2()->dump_barrier_data(this, st);\n-    st->print(\")\");\n-  }\n","filename":"src\/hotspot\/share\/opto\/machnode.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2079,0 +2079,6 @@\n+    public static final String Z_COMPARE_AND_SWAP_P_WITH_BARRIER_FLAG = COMPOSITE_PREFIX + \"Z_COMPARE_AND_SWAP_P_WITH_BARRIER_FLAG\" + POSTFIX;\n+    static {\n+        String regex = START + \"zCompareAndSwapP\" + MID + \"barrier\\\\(\\\\s*\" + IS_REPLACED + \"\\\\s*\\\\)\" + END;\n+        machOnly(Z_COMPARE_AND_SWAP_P_WITH_BARRIER_FLAG, regex);\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package ir_framework.examples;\n+\n+import compiler.lib.ir_framework.*;\n+import java.lang.invoke.VarHandle;\n+import java.lang.invoke.MethodHandles;\n+\n+\/**\n+ * @test\n+ * @summary Example test that illustrates the use of the IR test framework for\n+ *          verification of late-expanded GC barriers.\n+ * @library \/test\/lib \/\n+ * @run driver ir_framework.examples.GCBarrierIRExample\n+ *\/\n+\n+public class GCBarrierIRExample {\n+\n+    static class Outer {\n+        Object f;\n+    }\n+\n+    static final VarHandle fVarHandle;\n+    static {\n+        MethodHandles.Lookup l = MethodHandles.lookup();\n+        try {\n+            fVarHandle = l.findVarHandle(Outer.class, \"f\", Object.class);\n+        } catch (Exception e) {\n+            throw new Error(e);\n+        }\n+    }\n+    static Outer o = new Outer();\n+    static Object oldVal = new Object();\n+    static Object newVal = new Object();\n+\n+    public static void main(String[] args) {\n+        \/\/ These rules apply only to collectors that expand barriers at code\n+        \/\/ emission, such as ZGC. Because the collector selection flags are not\n+        \/\/ whitelisted (see IR framework's README.md file), the user (as opposed\n+        \/\/ to jtreg) needs to set these flags here.\n+        TestFramework.runWithFlags(\"-XX:+UseZGC\", \"-XX:+ZGenerational\");\n+    }\n+\n+    @Test\n+    \/\/ IR rules can be used to verify collector-specific barrier info (in this\n+    \/\/ case, that a ZGC barrier corresponds to a strong OOP reference). Barrier\n+    \/\/ info can only be verified after matching, e.g. at the FINAL_CODE phase.\n+    @IR(counts = {IRNode.Z_COMPARE_AND_SWAP_P_WITH_BARRIER_FLAG, \"strong\", \"1\"},\n+        phase  = CompilePhase.FINAL_CODE)\n+    static boolean testBarrierOfCompareAndSwap() {\n+        return fVarHandle.compareAndSet(o, oldVal, newVal);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/examples\/GCBarrierIRExample.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"}]}