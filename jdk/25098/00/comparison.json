{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-public @interface MissingAnnotation { }\n+public @interface Anno {}\n","filename":"test\/langtools\/tools\/javac\/8351232\/Anno.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/java\/lang\/annotation\/typeAnnotations\/MissingAnnotation.java","status":"copied"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+public class Cls<K, V> {\n+\n+  public static Cls<Object, Object> newInstance() {\n+    return new Cls<>();\n+  }\n+\n+  public <K1 extends K, V1 extends @Anno V> V1 doSomething(Intf1 arg) {\n+      throw new UnsupportedOperationException();\n+  }\n+\n+  public <K1 extends K, V1 extends @Anno V> V1 doSomething(Intf2 arg) {\n+      throw new UnsupportedOperationException();\n+  }\n+}\n","filename":"test\/langtools\/tools\/javac\/8351232\/Cls.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -22,1 +22,0 @@\n- *\n@@ -25,2 +24,4 @@\n-module com.needsjdkaddexport {\n-    exports com.needsjdkaddexport;\n+public interface Intf1 {\n+\n+    Object foo(Object bar);\n+\n","filename":"test\/langtools\/tools\/javac\/8351232\/Intf1.java","additions":4,"deletions":3,"binary":false,"changes":7,"previous_filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/modulepath\/src\/com.needsjdkaddexport\/module-info.java","status":"copied"},{"patch":"@@ -22,1 +22,0 @@\n- *\n@@ -25,2 +24,1 @@\n-module com.needsjdkaddexport {\n-    exports com.needsjdkaddexport;\n+public interface Intf2 extends Intf1 {\n","filename":"test\/langtools\/tools\/javac\/8351232\/Intf2.java","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/modulepath\/src\/com.needsjdkaddexport\/module-info.java","status":"copied"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+public class TestClass {\n+  void test() {\n+    Cls.newInstance()\n+        .<Void, Void>doSomething(\n+            image -> {\n+              return;\n+            });\n+  }\n+}\n","filename":"test\/langtools\/tools\/javac\/8351232\/TestClass.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8351232\n+ * @summary NPE when type annotation missing on classpath\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *\/\n+\n+import java.io.File;\n+import com.sun.tools.javac.api.*;\n+\n+public class TypeAnnotationSymNullTest {\n+    public static void main(String[] args) {\n+        File testSrc = new File(System.getProperty(\"test.src\", \".\"));\n+\n+        File ANNO = new File(\"ANNO\");\n+        ANNO.mkdirs();\n+\n+        \/\/ first, compile Anno to the ANNO directory\n+        compile(0, \"-d\", ANNO.getPath(), new File(testSrc, \"Anno.java\").getPath());\n+\n+        File CLP = new File(\"CLP\");\n+        CLP.mkdirs();\n+\n+        \/\/ second, compile Cls, Intf1 and Intf2 to the CLP directory with ANNO on classpath\n+        compile(0, \"-cp\", ANNO.getPath(), \"-d\", CLP.getPath(), new File(testSrc, \"Cls.java\").getPath(),\n+                                                            new File(testSrc, \"Intf1.java\").getPath(),\n+                                                            new File(testSrc, \"Intf2.java\").getPath());\n+\n+        \/\/ now compile TestClass with CLP on classpath (but Anno.class missing)\n+        \/\/ compilation fails (exit code 1) but should not get NPE from compiler (exit code 4)\n+        compile(1, \"-cp\", CLP.getPath(), \"-d\", \".\", new File(testSrc, \"TestClass.java\").getPath());\n+    }\n+\n+    private static void compile(int expectedExit, String... args) {\n+        int exitCode = JavacTool.create().run(null, null, null, args);\n+        if (exitCode != expectedExit) {\n+            throw new AssertionError(\"test compilation failed with exit code: \" + exitCode);\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/8351232\/TypeAnnotationSymNullTest.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}