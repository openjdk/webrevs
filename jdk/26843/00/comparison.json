{"files":[{"patch":"@@ -320,2 +320,3 @@\n-        \/\/ If a stylesheet file is not specified, copy the default stylesheet\n-        \/\/ and replace newline with platform-specific newline.\n+        \/\/ If a stylesheet file is not specified, copy the default stylesheet,\n+        \/\/ replace newline with platform-specific newline,\n+        \/\/ and remove the reference to fonts if --no-fonts is used.\n@@ -323,1 +324,1 @@\n-            copyResource(DocPaths.STYLESHEET, DocPaths.RESOURCE_FILES.resolve(DocPaths.STYLESHEET), true);\n+            copyStylesheet(options);\n@@ -464,6 +465,1 @@\n-        DocPath resourcePath = DocPaths.RESOURCES.resolve(sourcePath);\n-        \/\/ Resolve resources against doclets.formats.html package\n-        URL resourceURL = HtmlConfiguration.class.getResource(resourcePath.getPath());\n-        if (resourceURL == null) {\n-            throw new ResourceIOException(sourcePath, new FileNotFoundException(resourcePath.getPath()));\n-        }\n+        ReadableResource resource = resolveResource(sourcePath);\n@@ -473,1 +469,1 @@\n-            f.copyResource(resourcePath, resourceURL, configuration.docResources);\n+            f.copyResource(resource.path(), resource.url(), configuration.docResources);\n@@ -475,1 +471,1 @@\n-            f.copyResource(resourcePath, resourceURL, replaceNewLine);\n+            f.copyResource(resource.path(), resource.url(), replaceNewLine);\n@@ -504,0 +500,17 @@\n+    private void copyStylesheet(HtmlOptions options) throws DocletException {\n+        ReadableResource resource = resolveResource(DocPaths.STYLESHEET);\n+        var targetPath = DocPaths.RESOURCE_FILES.resolve(DocPaths.STYLESHEET);\n+        DocFile f = DocFile.createFileForOutput(configuration, targetPath);\n+\n+        if (options.noFonts()) {\n+            f.copyResource(resource.path(), resource.url(), line -> {\n+                if (line.startsWith(\"@import url('fonts\")) {\n+                    return null; \/\/ remove the line\n+                }\n+                return line;\n+            });\n+        } else {\n+            f.copyResource(resource.path(), resource.url(), true);\n+        }\n+    }\n+\n@@ -520,0 +533,13 @@\n+\n+    private ReadableResource resolveResource(DocPath sourcePath) throws ResourceIOException {\n+        DocPath resolvedPath = DocPaths.RESOURCES.resolve(sourcePath);\n+        \/\/ Resolve resources against doclets.formats.html package\n+        URL resourceURL = HtmlConfiguration.class.getResource(resolvedPath.getPath());\n+        if (resourceURL == null) {\n+            throw new ResourceIOException(sourcePath, new FileNotFoundException(resolvedPath.getPath()));\n+        }\n+        return new ReadableResource(resolvedPath, resourceURL);\n+    }\n+\n+    private record ReadableResource(DocPath path, URL url) {\n+    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":37,"deletions":11,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.util.function.UnaryOperator;\n@@ -191,1 +192,1 @@\n-        copyResource(resource, url, replaceNewLine, null);\n+        copyResource(resource, url, replaceNewLine, UnaryOperator.identity());\n@@ -205,1 +206,1 @@\n-        copyResource(resource, url, true, resources);\n+        copyResource(resource, url, resources == null ? UnaryOperator.identity() : line -> localize(line, resources));\n@@ -208,2 +209,16 @@\n-    private void copyResource(DocPath resource, URL url, boolean replaceNewLine, Resources resources)\n-                throws DocFileIOException, ResourceIOException {\n+    \/**\n+     * Copy the contents of a resource file to this file while transforming and filtering its lines.\n+     *\n+     * @param resource the path of the resource\n+     * @param url the URL of the resource\n+     * @param lineTransformer the transforming function that is called for each line; may return\n+     * {@code null} to remove a line.\n+     *\n+     * @throws DocFileIOException if there is a problem while writing the copy\n+     * @throws ResourceIOException if there is a problem while reading the resource\n+     *\/\n+    public void copyResource(DocPath resource, URL url, UnaryOperator<String> lineTransformer) throws DocFileIOException, ResourceIOException {\n+        copyResource(resource, url, true, lineTransformer);\n+    }\n+\n+    private void copyResource(DocPath resource, URL url, boolean replaceNewLine, UnaryOperator<String> lineTransformer) throws ResourceIOException, DocFileIOException {\n@@ -219,2 +234,5 @@\n-                                write(this, writer, resources == null ? line : localize(line, resources));\n-                                write(this, writer, PLATFORM_LINE_SEPARATOR);\n+                                String transformedLine = lineTransformer.apply(line);\n+                                if (transformedLine != null) {\n+                                    write(this, writer, transformedLine);\n+                                    write(this, writer, PLATFORM_LINE_SEPARATOR);\n+                                }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFile.java","additions":24,"deletions":6,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -67,0 +67,2 @@\n+        checkOutput(\"resource-files\/stylesheet.css\", true,\n+                \"@import url('fonts\/dejavu.css');\");\n@@ -118,0 +120,2 @@\n+        checkOutput(\"resource-files\/stylesheet.css\", false,\n+                \"@import url('fonts\/dejavu.css');\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testFonts\/TestFonts.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+        setUseDefaultOptions(false);\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testStylesheet\/TestStylesheet.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}