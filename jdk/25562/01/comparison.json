{"files":[{"patch":"@@ -845,7 +845,16 @@\n-  Management::initialize(THREAD);\n-\n-  if (HAS_PENDING_EXCEPTION) {\n-    \/\/ management agent fails to start possibly due to\n-    \/\/ configuration problem and is responsible for printing\n-    \/\/ stack trace if appropriate. Simply exit VM.\n-    vm_exit(1);\n+  bool start_agent = true;\n+#if INCLUDE_CDS\n+  start_agent = !CDSConfig::is_dumping_final_static_archive();\n+  if (!start_agent) {\n+    log_info(aot)(\"Not starting management agent during creation of AOT cache.\");\n+  }\n+#endif \/\/ INCLUDE_CDS\n+  if (start_agent) {\n+    Management::initialize(THREAD);\n+\n+    if (HAS_PENDING_EXCEPTION) {\n+      \/\/ management agent fails to start possibly due to\n+      \/\/ configuration problem and is responsible for printing\n+      \/\/ stack trace if appropriate. Simply exit VM.\n+      vm_exit(1);\n+    }\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @bug 8352187\n+ * @summary ManagementAgent will not be started during AOT cache creation.\n+ * @requires vm.cds.supports.aot.class.linking\n+ * @comment work around JDK-8345635\n+ * @requires !vm.jvmci.enabled\n+ * @library \/test\/lib\n+ * @build HelloAOTCache\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar app.jar HelloAOTCacheApp\n+ * @run driver ManagementAgent\n+ *\/\n+\n+import jdk.test.lib.cds.SimpleCDSAppTester;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class ManagementAgent {\n+    public static void main(String... args) throws Exception {\n+        SimpleCDSAppTester.of(\"HelloAOTCache-with-management-agent\")\n+            \/\/ test with the initialization of a management agent\n+            .addVmArgs(\"-Xlog:class+load\", \"-Dcom.sun.management.jmxremote=true\")\n+            .classpath(\"app.jar\")\n+            .appCommandLine(\"HelloAOTCacheApp\")\n+            .setAssemblyChecker((OutputAnalyzer out) -> {\n+                    out.shouldContain(\"Not starting management agent during creation of AOT cache.\");\n+                })\n+            .setProductionChecker((OutputAnalyzer out) -> {\n+                    out.shouldMatch(\"class,load.*HelloAOTCacheApp.*shared objects\");\n+                    out.shouldContain(\"HelloWorld\");\n+                })\n+            .runAOTWorkflow();\n+    }\n+}\n+\n+class HelloAOTCacheApp {\n+    public static void main(String[] args) {\n+        System.out.println(\"HelloWorld\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/ManagementAgent.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"}]}