{"files":[{"patch":"@@ -845,7 +845,16 @@\n-  Management::initialize(THREAD);\n-\n-  if (HAS_PENDING_EXCEPTION) {\n-    \/\/ management agent fails to start possibly due to\n-    \/\/ configuration problem and is responsible for printing\n-    \/\/ stack trace if appropriate. Simply exit VM.\n-    vm_exit(1);\n+  bool start_agent = true;\n+#if INCLUDE_CDS\n+  start_agent = !CDSConfig::is_dumping_final_static_archive();\n+  if (!start_agent) {\n+    log_info(aot)(\"Not starting management agent during creation of AOT cache.\");\n+  }\n+#endif \/\/ INCLUDE_CDS\n+  if (start_agent) {\n+    Management::initialize(THREAD);\n+\n+    if (HAS_PENDING_EXCEPTION) {\n+      \/\/ management agent fails to start possibly due to\n+      \/\/ configuration problem and is responsible for printing\n+      \/\/ stack trace if appropriate. Simply exit VM.\n+      vm_exit(1);\n+    }\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -52,0 +52,11 @@\n+\n+        SimpleCDSAppTester.of(\"HelloAOTCache-with-manangment-agent\")\n+            \/\/ test with the initialization of a management agent\n+            .addVmArgs(\"-Xlog:class+load\", \"-Dcom.sun.management.jmxremote=true\")\n+            .classpath(\"app.jar\")\n+            .appCommandLine(\"HelloAOTCacheApp\")\n+            .setProductionChecker((OutputAnalyzer out) -> {\n+                    out.shouldMatch(\"class,load.*HelloAOTCacheApp.*shared objects\");\n+                    out.shouldContain(\"HelloWorld\");\n+                })\n+            .runAOTWorkflow();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/HelloAOTCache.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}