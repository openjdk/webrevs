{"files":[{"patch":"@@ -55,1 +55,1 @@\n-    static boolean supportsUserDefinedFileAttributeView(Path obj) {\n+    private static boolean supportsUserDefinedFileAttributeView(UnixPath file) {\n@@ -57,1 +57,1 @@\n-            FileStore store = Files.getFileStore(obj);\n+            FileStore store = new AixFileStore(file);\n@@ -71,2 +71,4 @@\n-            return !supportsUserDefinedFileAttributeView(obj) ? null :\n-                (V) new AixUserDefinedFileAttributeView(UnixPath.toUnixPath(obj), Util.followLinks(options));\n+            UnixPath file = UnixPath.toUnixPath(obj);\n+            return supportsUserDefinedFileAttributeView(file) ?\n+                (V) new AixUserDefinedFileAttributeView(file, Util.followLinks(options))\n+                : null;\n@@ -83,2 +85,4 @@\n-            return !supportsUserDefinedFileAttributeView(obj) ? null :\n-                new AixUserDefinedFileAttributeView(UnixPath.toUnixPath(obj), Util.followLinks(options));\n+            UnixPath file = UnixPath.toUnixPath(obj);\n+            return supportsUserDefinedFileAttributeView(file) ?\n+                new AixUserDefinedFileAttributeView(file, Util.followLinks(options))\n+                : null;\n","filename":"src\/java.base\/aix\/classes\/sun\/nio\/fs\/AixFileSystemProvider.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -70,0 +70,10 @@\n+    static <V extends FileAttributeView> void testFileAttributes(Path file,\n+                                                                 Class<V> viewClass,\n+                                                                 String viewName) throws IOException {\n+        FileStore store = Files.getFileStore(file);\n+        boolean supported = store.supportsFileAttributeView(viewClass);\n+        assertTrue(store.supportsFileAttributeView(viewName) == supported);\n+        boolean haveView = Files.getFileAttributeView(file, viewClass) != null;\n+        assertTrue(haveView == supported);\n+    }\n+\n@@ -100,15 +110,5 @@\n-        assertTrue(store1.supportsFileAttributeView(BasicFileAttributeView.class));\n-        assertTrue(store1.supportsFileAttributeView(\"posix\") ==\n-            store1.supportsFileAttributeView(PosixFileAttributeView.class));\n-        assertTrue(store1.supportsFileAttributeView(\"dos\") ==\n-            store1.supportsFileAttributeView(DosFileAttributeView.class));\n-        assertTrue(store1.supportsFileAttributeView(\"acl\") ==\n-            store1.supportsFileAttributeView(AclFileAttributeView.class));\n-        assertTrue(store1.supportsFileAttributeView(\"user\") ==\n-            store1.supportsFileAttributeView(UserDefinedFileAttributeView.class));\n-\n-        \/\/ check if getFileAttributeView behaves as specified if the user defined view is unsupported\n-        if (!store1.supportsFileAttributeView(UserDefinedFileAttributeView.class) &&\n-            Files.getFileAttributeView(dir, UserDefinedFileAttributeView.class) != null) {\n-            throw new RuntimeException(\"UserDefinedFileAttributeView not supported, getFileAttributeView should return null\");\n-        }\n+        testFileAttributes(dir, BasicFileAttributeView.class, \"basic\");\n+        testFileAttributes(dir, PosixFileAttributeView.class, \"posix\");\n+        testFileAttributes(dir, DosFileAttributeView.class, \"dos\");\n+        testFileAttributes(dir, AclFileAttributeView.class, \"acl\");\n+        testFileAttributes(dir, UserDefinedFileAttributeView.class, \"user\");\n","filename":"test\/jdk\/java\/nio\/file\/FileStore\/Basic.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"}]}