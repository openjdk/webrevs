{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: Mar 2023\n+ * @LastModified: Nov 2024\n@@ -201,1 +201,1 @@\n-            String value = SecuritySupport.getSystemProperty(systemProperty);\n+            String value = System.getProperty(systemProperty);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/utils\/FeaturePropertyBase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: Nov 2024\n@@ -60,1 +60,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -63,5 +62,0 @@\n-        if (System.getSecurityManager()!=null) {\n-            \/\/this will ensure bootclassloader is used\n-            return null;\n-        }\n-\n@@ -126,2 +120,1 @@\n-        @SuppressWarnings(\"removal\")\n-        ClassLoader cl = System.getSecurityManager()!=null ? null : findClassLoader();\n+        ClassLoader cl = findClassLoader();\n@@ -164,18 +157,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n-        try{\n-            if (security != null){\n-                if (className.startsWith(JAXP_INTERNAL) ||\n-                    className.startsWith(STAX_INTERNAL)) {\n-                    cl = null;\n-                } else {\n-                    final int lastDot = className.lastIndexOf(\".\");\n-                    String packageName = className;\n-                    if (lastDot != -1) packageName = className.substring(0, lastDot);\n-                    security.checkPackageAccess(packageName);\n-                }\n-             }\n-        }catch(SecurityException e){\n-            throw e;\n-        }\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/utils\/ObjectFactory.java","additions":3,"deletions":28,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @LastModified: Jan 2022\n+ * @LastModified: Nov 2024\n@@ -1031,5 +1031,0 @@\n-        {ErrorMsg.DESERIALIZE_TRANSLET_ERR, \"When Java security is enabled, \"\n-              + \"support for deserializing TemplatesImpl is disabled. This can be \"\n-              + \"overridden by setting the jdk.xml.enableTemplatesImplDeserialization\"\n-              + \" system property to true.\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMessages.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @LastModified: Jan 2022\n+ * @LastModified: Nov 2024\n@@ -984,2 +984,0 @@\n-        {ErrorMsg.DESERIALIZE_TRANSLET_ERR, \"Wenn die Java-Sicherheit aktiviert ist, wird die Unterst\\u00FCtzung f\\u00FCr das Deserialisieren von TemplatesImpl deaktiviert. Dieses Verhalten kann durch Setzen der Systemeigenschaft jdk.xml.enableTemplatesImplDeserialization auf \\\"true\\\" au\\u00DFer Kraft gesetzt werden.\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMessages_de.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -982,3 +982,0 @@\n-\n-         {ErrorMsg.DESERIALIZE_TRANSLET_ERR, \"Cuando la seguridad de Java est\\u00E1 activada, el soporte para anular la serializaci\\u00F3n de TemplatesImpl est\\u00E1 desactivado. Esto se puede sustituir definiendo la propiedad del sistema jdk.xml.enableTemplatesImplDeserialization en true.\"}\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMessages_es.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -983,2 +983,0 @@\n-         {ErrorMsg.DESERIALIZE_TRANSLET_ERR, \"Lorsque la s\\u00E9curit\\u00E9 Java est activ\\u00E9e, la prise en charge de la d\\u00E9s\\u00E9rialisation de TemplatesImpl est d\\u00E9sactiv\\u00E9e. La d\\u00E9finition de la propri\\u00E9t\\u00E9 syst\\u00E8me jdk.xml.enableTemplatesImplDeserialization sur True permet de remplacer ce param\\u00E8tre.\"}\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMessages_fr.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -983,2 +983,0 @@\n-         {ErrorMsg.DESERIALIZE_TRANSLET_ERR, \"Quando la sicurezza Java \\u00E8 abilitata, il supporto per la deserializzazione TemplatesImpl \\u00E8 disabilitato. \\u00C8 possibile ignorare questa condizione impostando su true la propriet\\u00E0 di sistema jdk.xml.enableTemplatesImplDeserialization.\"}\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMessages_it.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @LastModified: Jan 2022\n+ * @LastModified: Nov 2024\n@@ -984,2 +984,0 @@\n-        {ErrorMsg.DESERIALIZE_TRANSLET_ERR, \"Java\\u30BB\\u30AD\\u30E5\\u30EA\\u30C6\\u30A3\\u304C\\u6709\\u52B9\\u5316\\u3055\\u308C\\u3066\\u3044\\u308B\\u5834\\u5408\\u3001TemplatesImpl\\u306E\\u30C7\\u30B7\\u30EA\\u30A2\\u30E9\\u30A4\\u30BA\\u306E\\u30B5\\u30DD\\u30FC\\u30C8\\u306F\\u7121\\u52B9\\u5316\\u3055\\u308C\\u307E\\u3059\\u3002\\u3053\\u308C\\u306F\\u3001jdk.xml.enableTemplatesImplDeserialization\\u30B7\\u30B9\\u30C6\\u30E0\\u30FB\\u30D7\\u30ED\\u30D1\\u30C6\\u30A3\\u3092true\\u306B\\u8A2D\\u5B9A\\u3057\\u3066\\u30AA\\u30FC\\u30D0\\u30FC\\u30E9\\u30A4\\u30C9\\u3067\\u304D\\u307E\\u3059\\u3002\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMessages_ja.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -983,2 +983,0 @@\n-         {ErrorMsg.DESERIALIZE_TRANSLET_ERR, \"Java \\uBCF4\\uC548\\uC774 \\uC0AC\\uC6A9\\uC73C\\uB85C \\uC124\\uC815\\uB41C \\uACBD\\uC6B0 TemplatesImpl \\uC9C1\\uB82C\\uD654 \\uD574\\uC81C\\uC5D0 \\uB300\\uD55C \\uC9C0\\uC6D0\\uC774 \\uC0AC\\uC6A9 \\uC548\\uD568\\uC73C\\uB85C \\uC124\\uC815\\uB429\\uB2C8\\uB2E4. jdk.xml.enableTemplatesImplDeserialization \\uC2DC\\uC2A4\\uD15C \\uC18D\\uC131\\uC744 true\\uB85C \\uC124\\uC815\\uD558\\uBA74 \\uC774\\uB97C \\uBB34\\uD6A8\\uD654\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"}\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMessages_ko.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -983,2 +983,0 @@\n-         {ErrorMsg.DESERIALIZE_TRANSLET_ERR, \"Quando a seguran\\u00E7a do Java est\\u00E1 ativada, o suporte para desserializar TemplatesImpl fica desativado. Essa situa\\u00E7\\u00E3o pode ser corrigida definindo a propriedade do sistema jdk.xml.enableTemplatesImplDeserialization como true.\"}\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMessages_pt_BR.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -983,2 +983,0 @@\n-         {ErrorMsg.DESERIALIZE_TRANSLET_ERR, \"N\\u00E4r Java-s\\u00E4kerheten \\u00E4r aktiverad \\u00E4r st\\u00F6det f\\u00F6r avserialisering av TemplatesImpl avaktiverat. Du kan \\u00E5sidos\\u00E4tta det h\\u00E4r genom att st\\u00E4lla in systemegenskapen jdk.xml.enableTemplatesImplDeserialization till sant.\"}\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMessages_sv.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @LastModified: Jan 2022\n+ * @LastModified: Nov 2024\n@@ -984,2 +984,0 @@\n-        {ErrorMsg.DESERIALIZE_TRANSLET_ERR, \"\\u542F\\u7528\\u4E86 Java \\u5B89\\u5168\\u65F6\\uFF0C\\u5C06\\u7981\\u7528\\u5BF9\\u53CD\\u5E8F\\u5217\\u5316 TemplatesImpl \\u7684\\u652F\\u6301\\u3002\\u53EF\\u4EE5\\u901A\\u8FC7\\u5C06 jdk.xml.enableTemplatesImplDeserialization \\u7CFB\\u7EDF\\u5C5E\\u6027\\u8BBE\\u7F6E\\u4E3A true \\u6765\\u8986\\u76D6\\u6B64\\u8BBE\\u7F6E\\u3002\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMessages_zh_CN.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -983,2 +983,0 @@\n-         {ErrorMsg.DESERIALIZE_TRANSLET_ERR, \"\\u555F\\u7528 Java \\u5B89\\u5168\\u6642\\uFF0C\\u6703\\u505C\\u7528\\u9084\\u539F\\u5E8F\\u5217\\u5316 TemplatesImpl \\u7684\\u652F\\u63F4\\u3002\\u5C07 jdk.xml.enableTemplatesImplDeserialization \\u7CFB\\u7D71\\u5C6C\\u6027\\u8A2D\\u70BA\\u771F\\u5373\\u53EF\\u8986\\u5BEB\\u6B64\\u8A2D\\u5B9A\\u3002\"}\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMessages_zh_TW.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n- * @LastModified: Jul 2022\n+ * @LastModified: Nov 2024\n@@ -172,2 +172,0 @@\n-    public static final String DESERIALIZE_TRANSLET_ERR = \"DESERIALIZE_TRANSLET_ERR\";\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/ErrorMsg.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: Nov 2024\n@@ -68,4 +68,0 @@\n-            \/\/\n-            @SuppressWarnings(\"removal\")\n-            java.security.AccessControlContext acc = java.security.AccessController.getContext();\n-            acc.checkPermission(new RuntimePermission(\"getContextClassLoader\"));\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/Type.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @LastModified: Sep 2017\n+ * @LastModified: Nov 2024\n@@ -38,1 +38,1 @@\n-        String temp = SecuritySupport.getSystemProperty(\"file.separator\", \"\/\");\n+        String temp = System.getProperty(\"file.separator\", \"\/\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/util\/Util.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: Nov 2024\n@@ -152,1 +152,0 @@\n-               SecurityException,\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/dom\/NodeSortRecordFactory.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,0 @@\n-import java.security.AccessController;\n@@ -49,1 +48,0 @@\n-import java.security.PrivilegedAction;\n@@ -63,1 +61,0 @@\n-import jdk.xml.internal.SecuritySupport;\n@@ -71,1 +68,1 @@\n- * @LastModified: May 2021\n+ * @LastModified: Nov 2024\n@@ -265,10 +262,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n-        if (security != null){\n-            String temp = SecuritySupport.getSystemProperty(DESERIALIZE_TRANSLET);\n-            if (temp == null || !(temp.length()==0 || temp.equalsIgnoreCase(\"true\"))) {\n-                ErrorMsg err = new ErrorMsg(ErrorMsg.DESERIALIZE_TRANSLET_ERR);\n-                throw new UnsupportedOperationException(err.toString());\n-            }\n-        }\n-\n@@ -444,4 +431,1 @@\n-        PrivilegedAction<ModuleLayer> pa = () -> bootLayer.defineModules(cf, name -> loader);\n-        @SuppressWarnings(\"removal\")\n-        ModuleLayer layer = AccessController.doPrivileged(pa);\n-\n+        ModuleLayer layer = bootLayer.defineModules(cf, _ -> loader);\n@@ -466,1 +450,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -468,3 +451,1 @@\n-                AccessController.doPrivileged(new PrivilegedAction<TransletClassLoader>() {\n-                public TransletClassLoader run() {\n-                    return new TransletClassLoader(ObjectFactory.findClassLoader(),\n+                new TransletClassLoader(ObjectFactory.findClassLoader(),\n@@ -472,2 +453,0 @@\n-                }\n-            });\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/trax\/TemplatesImpl.java","additions":4,"deletions":25,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,1 +91,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Nov 2024\n@@ -268,1 +268,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -270,6 +269,0 @@\n-\n-        if (System.getSecurityManager() != null) {\n-            _isSecureMode = true;\n-            _isNotSecureProcessing = false;\n-        }\n-\n@@ -1395,1 +1388,1 @@\n-            transletParentDir = SecuritySupport.getSystemProperty(\"user.dir\");\n+            transletParentDir = System.getProperty(\"user.dir\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/trax\/TransformerFactoryImpl.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Nov 2024\n@@ -210,4 +210,0 @@\n-        catch (SecurityException e) {\n-            ErrorMsg err = new ErrorMsg(ErrorMsg.FILE_ACCESS_ERR, systemId);\n-            throw new TransformerConfigurationException(err.toString());\n-        }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/trax\/Util.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n- * @LastModified: Apr 2022\n+ * @LastModified: Nov 2024\n@@ -309,1 +309,1 @@\n-        String systemProp = SecuritySupport.getSystemProperty(Constants.SUN_DOM_PROPERTY_PREFIX+Constants.SUN_DOM_ANCESTOR_CHECCK);\n+        String systemProp = System.getProperty(Constants.SUN_DOM_PROPERTY_PREFIX+Constants.SUN_DOM_ANCESTOR_CHECCK);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/dom\/CoreDocumentImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n- * @LastModified: Feb 2024\n+ * @LastModified: Nov 2024\n@@ -2013,6 +2013,1 @@\n-        String userDir = \"\";\n-        try {\n-            userDir = SecuritySupport.getSystemProperty(\"user.dir\");\n-        }\n-        catch (SecurityException se) {\n-        }\n+        String userDir = System.getProperty(\"user.dir\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/XMLEntityManager.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * @LastModified: Apr 2019\n+ * @LastModified: Nov 2024\n@@ -44,1 +44,1 @@\n-            Boolean.parseBoolean(SecuritySupport.getSystemProperty(\n+            Boolean.parseBoolean(System.getProperty(\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/dv\/xs\/TypeValidator.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Nov 2024\n@@ -223,1 +223,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -231,5 +230,0 @@\n-            if (System.getSecurityManager() != null && (!value)) {\n-                throw new ParserConfigurationException(\n-                        SAXMessageFormatter.formatMessage(null,\n-                        \"jaxp-secureprocessing-feature\", null));\n-            }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/DocumentBuilderFactoryImpl.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Nov 2024\n@@ -119,1 +119,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -128,5 +127,0 @@\n-            if (System.getSecurityManager() != null && (!value)) {\n-                throw new ParserConfigurationException(\n-                        SAXMessageFormatter.formatMessage(null,\n-                        \"jaxp-secureprocessing-feature\", null));\n-            }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/SAXParserFactoryImpl.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -193,1 +193,1 @@\n- * @LastModified: Aug 2020\n+ * @LastModified: Nov 2024\n@@ -2421,3 +2421,3 @@\n-        String lang = SecuritySupport.getSystemProperty(\"user.language.format\");\n-        String country = SecuritySupport.getSystemProperty(\"user.country.format\");\n-        String variant = SecuritySupport.getSystemProperty(\"user.variant.format\");\n+        String lang = System.getProperty(\"user.language.format\");\n+        String country = System.getProperty(\"user.country.format\");\n+        String variant = System.getProperty(\"user.variant.format\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/datatype\/XMLGregorianCalendarImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Nov 2024\n@@ -426,1 +426,1 @@\n-    @SuppressWarnings({\"removal\",\"deprecation\"})\n+    @SuppressWarnings(\"deprecation\")\n@@ -444,6 +444,0 @@\n-            if (System.getSecurityManager() != null && (!value)) {\n-                throw new SAXNotSupportedException(\n-                        SAXMessageFormatter.formatMessage(null,\n-                        \"jaxp-secureprocessing-feature\", null));\n-            }\n-\n@@ -467,2 +461,1 @@\n-            if (System.getSecurityManager() != null)\n-                return;\n+            return;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/validation\/XMLSchemaFactory.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Nov 2024\n@@ -233,1 +233,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -296,5 +295,0 @@\n-        if (System.getSecurityManager() != null) {\n-            _isSecureMode = true;\n-            secureProcessing = true;\n-        }\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/validation\/XMLSchemaValidatorComponentManager.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: Nov 2024\n@@ -58,7 +58,3 @@\n-        try {\n-            String val = SecuritySupport.getSystemProperty(\"xerces.debug\");\n-            \/\/ Allow simply setting the prop to turn on debug\n-            return (val != null && (!\"false\".equals(val)));\n-        }\n-        catch (SecurityException se) {}\n-        return false;\n+        String val = System.getProperty(\"xerces.debug\");\n+        \/\/ Allow simply setting the prop to turn on debug\n+        return (val != null && (!\"false\".equals(val)));\n@@ -78,1 +74,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -82,4 +77,0 @@\n-        if (System.getSecurityManager()!=null) {\n-            \/\/this will ensure bootclassloader is used\n-            return null;\n-        }\n@@ -141,1 +132,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -145,6 +135,1 @@\n-        if (System.getSecurityManager()!=null) {\n-            return newInstance(className, null, doFallback);\n-        } else {\n-            return newInstance(className,\n-                findClassLoader (), doFallback);\n-        }\n+        return newInstance(className, findClassLoader (), doFallback);\n@@ -194,15 +179,0 @@\n-        \/\/throw security exception if the calling thread is not allowed to access the package\n-        \/\/restrict the access to package as speicified in java.security policy\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n-        if (security != null) {\n-            if (className.startsWith(JAXP_INTERNAL) ||\n-                    className.startsWith(STAX_INTERNAL)) {\n-                cl = null;\n-            } else {\n-                final int lastDot = className.lastIndexOf(\".\");\n-                String packageName = className;\n-                if (lastDot != -1) packageName = className.substring(0, lastDot);\n-                security.checkPackageAccess(packageName);\n-            }\n-        }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/utils\/ObjectFactory.java","additions":6,"deletions":36,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -227,1 +227,1 @@\n-            String value = SecuritySupport.getSystemProperty(systemProperty);\n+            String value = System.getProperty(systemProperty);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/utils\/XMLSecurityPropertyManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: Nov 2024\n@@ -77,1 +77,1 @@\n-        list = SecuritySupport.getSystemProperty( FactoriesProperty );\n+        list = System.getProperty( FactoriesProperty );\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serialize\/SerializerFactory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: Nov 2024\n@@ -232,1 +232,6 @@\n-            try\n+            \/\/ Get the default system character encoding.  This may be\n+            \/\/ incorrect if they passed in a writer, but right now there\n+            \/\/ seems to be no way to get the encoding from a writer.\n+            encoding = System.getProperty(\"file.encoding\", \"UTF8\");\n+\n+            if (null != encoding)\n@@ -235,30 +240,17 @@\n-                \/\/ Get the default system character encoding.  This may be\n-                \/\/ incorrect if they passed in a writer, but right now there\n-                \/\/ seems to be no way to get the encoding from a writer.\n-                encoding = SecuritySupport.getSystemProperty(\"file.encoding\", \"UTF8\");\n-\n-                if (null != encoding)\n-                {\n-\n-                    \/*\n-                    * See if the mime type is equal to UTF8.  If you don't\n-                    * do that, then  convertJava2MimeEncoding will convert\n-                    * 8859_1 to \"ISO-8859-1\", which is not what we want,\n-                    * I think, and I don't think I want to alter the tables\n-                    * to convert everything to UTF-8.\n-                    *\/\n-                    String jencoding =\n-                        (encoding.equalsIgnoreCase(\"Cp1252\")\n-                            || encoding.equalsIgnoreCase(\"ISO8859_1\")\n-                            || encoding.equalsIgnoreCase(\"8859_1\")\n-                            || encoding.equalsIgnoreCase(\"UTF8\"))\n-                            ? DEFAULT_MIME_ENCODING\n-                            : convertJava2MimeEncoding(encoding);\n-\n-                    encoding =\n-                        (null != jencoding) ? jencoding : DEFAULT_MIME_ENCODING;\n-                }\n-                else\n-                {\n-                    encoding = DEFAULT_MIME_ENCODING;\n-                }\n+                \/*\n+                * See if the mime type is equal to UTF8.  If you don't\n+                * do that, then  convertJava2MimeEncoding will convert\n+                * 8859_1 to \"ISO-8859-1\", which is not what we want,\n+                * I think, and I don't think I want to alter the tables\n+                * to convert everything to UTF-8.\n+                *\/\n+                String jencoding =\n+                    (encoding.equalsIgnoreCase(\"Cp1252\")\n+                        || encoding.equalsIgnoreCase(\"ISO8859_1\")\n+                        || encoding.equalsIgnoreCase(\"8859_1\")\n+                        || encoding.equalsIgnoreCase(\"UTF8\"))\n+                        ? DEFAULT_MIME_ENCODING\n+                        : convertJava2MimeEncoding(encoding);\n+\n+                encoding =\n+                    (null != jencoding) ? jencoding : DEFAULT_MIME_ENCODING;\n@@ -266,1 +258,1 @@\n-            catch (SecurityException se)\n+            else\n@@ -332,5 +324,1 @@\n-            try {\n-                urlString = SecuritySupport.getSystemProperty(ENCODINGS_PROP, \"\");\n-            } catch (SecurityException e) {\n-            }\n-\n+            urlString = System.getProperty(ENCODINGS_PROP, \"\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/Encodings.java","additions":27,"deletions":39,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n- * @LastModified: May 2021\n+ * @LastModified: Nov 2024\n@@ -357,1 +357,1 @@\n-            String sys = SecuritySupport.getSystemProperty(keys[i]);\n+            String sys = System.getProperty(keys[i]);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/OutputPropertiesFactory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * @LastModified: Jan 2022\n+ * @LastModified: Nov 2024\n@@ -55,2 +55,1 @@\n-   * to the system property \"user.dir\" if it is available; if not (i.e. in an\n-   * Applet perhaps which throws SecurityException) then we just return the\n+   * to the system property \"user.dir\" if it is available; if not then we just return the\n@@ -74,2 +73,0 @@\n-      try\n-      {\n@@ -77,6 +74,0 @@\n-      }\n-      \/\/ user.dir not accessible from applet\n-      catch (SecurityException se)\n-      {\n-        return \"file:\" + localPath;\n-      }\n@@ -247,3 +238,2 @@\n-              try {\n-                if (!isAbsolutePath(localPath))\n-                  absoluteURI = systemId.substring(0, secondColonIndex-1) +\n+              if (!isAbsolutePath(localPath))\n+                absoluteURI = systemId.substring(0, secondColonIndex-1) +\n@@ -251,4 +241,0 @@\n-              }\n-              catch (SecurityException se) {\n-                return systemId;\n-              }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/utils\/SystemIDResolver.java","additions":5,"deletions":19,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: Nov 2024\n@@ -141,1 +141,1 @@\n-      catch (InstantiationException | IllegalAccessException | SecurityException |\n+      catch (InstantiationException | IllegalAccessException |\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/utils\/ObjectPool.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * @LastModified: Sept 2021\n+ * @LastModified: Nov 2024\n@@ -48,2 +48,1 @@\n-   * to the system property \"user.dir\" if it is available; if not (i.e. in an\n-   * Applet perhaps which throws SecurityException) then we just return the\n+   * to the system property \"user.dir\" if it is available; if not then we just return the\n@@ -67,2 +66,0 @@\n-      try\n-      {\n@@ -70,6 +67,0 @@\n-      }\n-      \/\/ user.dir not accessible from applet\n-      catch (SecurityException se)\n-      {\n-        return \"file:\" + localPath;\n-      }\n@@ -240,8 +231,3 @@\n-              try {\n-                if (!isAbsolutePath(localPath))\n-                  absoluteURI = systemId.substring(0, secondColonIndex-1) +\n-                                getAbsolutePathFromRelativePath(localPath);\n-              }\n-              catch (SecurityException se) {\n-                return systemId;\n-              }\n+              if (!isAbsolutePath(localPath))\n+                absoluteURI = systemId.substring(0, secondColonIndex-1) +\n+                              getAbsolutePathFromRelativePath(localPath);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/utils\/SystemIDResolver.java","additions":6,"deletions":20,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Nov 2024\n@@ -121,1 +121,1 @@\n-        String factory = SecuritySupport.getSystemProperty(property);\n+        String factory = System.getProperty(property);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/utils\/XMLReaderManager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -24,2 +24,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -27,3 +25,0 @@\n-import java.util.Locale;\n-import java.util.MissingResourceException;\n-import java.util.ResourceBundle;\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/utils\/res\/XResourceBundle.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: Nov 2024\n@@ -351,1 +351,1 @@\n-          }catch (InstantiationException | IllegalAccessException | SecurityException |\n+          }catch (InstantiationException | IllegalAccessException |\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/compiler\/FunctionTable.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * @LastModified: Sep 2017\n+ * @LastModified: Nov 2024\n@@ -99,12 +99,2 @@\n-        try\n-        {\n-          result = SecuritySupport.getSystemProperty(propName);\n-\n-          if (null == result)\n-          {\n-\n-            \/\/ result = System.getenv(propName);\n-            return XString.EMPTYSTRING;\n-          }\n-        }\n-        catch (SecurityException se)\n+        result = System.getProperty(propName);\n+        if (null == result)\n@@ -112,3 +102,1 @@\n-          warn(xctxt, XPATHErrorResources.WG_SECURITY_EXCEPTION,\n-               new Object[]{ fullName });  \/\/\"SecurityException when trying to access XSL system property: \"+fullName);\n-\n+          \/\/ result = System.getenv(propName);\n@@ -121,3 +109,1 @@\n-      try\n-      {\n-        result = SecuritySupport.getSystemProperty(fullName);\n+      result = System.getProperty(fullName);\n@@ -125,8 +111,1 @@\n-        if (null == result)\n-        {\n-\n-          \/\/ result = System.getenv(fullName);\n-          return XString.EMPTYSTRING;\n-        }\n-      }\n-      catch (SecurityException se)\n+      if (null == result)\n@@ -134,3 +113,1 @@\n-        warn(xctxt, XPATHErrorResources.WG_SECURITY_EXCEPTION,\n-             new Object[]{ fullName });  \/\/\"SecurityException when trying to access XSL system property: \"+fullName);\n-\n+        \/\/ result = System.getenv(fullName);\n@@ -166,1 +143,0 @@\n-      \/\/ Use SecuritySupport class to provide privileged access to property file\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/functions\/FuncSystemProperty.java","additions":8,"deletions":32,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @LastModified: Jan 2022\n+ * @LastModified: Nov 2024\n@@ -81,1 +81,0 @@\n-        @SuppressWarnings(\"removal\")\n@@ -83,4 +82,0 @@\n-            if (System.getSecurityManager() != null) {\n-                _isSecureMode = true;\n-                _isNotSecureProcessing = false;\n-            }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/jaxp\/XPathFactoryImpl.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: Jul 2022\n+ * @LastModified: Nov 2024\n@@ -340,1 +340,0 @@\n-  public static final String WG_SECURITY_EXCEPTION = \"WG_SECURITY_EXCEPTION\";\n@@ -885,3 +884,0 @@\n-  { WG_SECURITY_EXCEPTION,\n-      \"SecurityException when trying to access XSL system property: {0}\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/res\/XPATHErrorResources.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: Jul 2022\n+ * @LastModified: Nov 2024\n@@ -340,1 +340,0 @@\n-  public static final String WG_SECURITY_EXCEPTION = \"WG_SECURITY_EXCEPTION\";\n@@ -883,3 +882,0 @@\n-  { WG_SECURITY_EXCEPTION,\n-      \"SecurityException beim Versuch, auf XSL-Systemeigenschaft {0} zuzugreifen\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/res\/XPATHErrorResources_de.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: May 2022\n+ * @LastModified: Nov 2024\n@@ -329,1 +329,0 @@\n-  public static final String WG_SECURITY_EXCEPTION = \"WG_SECURITY_EXCEPTION\";\n@@ -842,3 +841,0 @@\n-  { WG_SECURITY_EXCEPTION,\n-      \"Excepci\\u00F3n de seguridad al intentar acceder a la propiedad del sistema XSL: {0}\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/res\/XPATHErrorResources_es.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: May 2022\n+ * @LastModified: Nov 2024\n@@ -329,1 +329,0 @@\n-  public static final String WG_SECURITY_EXCEPTION = \"WG_SECURITY_EXCEPTION\";\n@@ -842,3 +841,0 @@\n-  { WG_SECURITY_EXCEPTION,\n-      \"Exception SecurityException g\\u00E9n\\u00E9r\\u00E9e lors de la tentative d''acc\\u00E8s \\u00E0 la propri\\u00E9t\\u00E9 syst\\u00E8me XSL : {0}\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/res\/XPATHErrorResources_fr.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: May 2022\n+ * @LastModified: Nov 2024\n@@ -329,1 +329,0 @@\n-  public static final String WG_SECURITY_EXCEPTION = \"WG_SECURITY_EXCEPTION\";\n@@ -842,3 +841,0 @@\n-  { WG_SECURITY_EXCEPTION,\n-      \"SecurityException nel tentativo di accedere alla propriet\\u00E0 di sistema XSL {0}\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/res\/XPATHErrorResources_it.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: Jul 2022\n+ * @LastModified: Nov 2024\n@@ -340,1 +340,0 @@\n-  public static final String WG_SECURITY_EXCEPTION = \"WG_SECURITY_EXCEPTION\";\n@@ -883,3 +882,0 @@\n-  { WG_SECURITY_EXCEPTION,\n-      \"XSL\\u30B7\\u30B9\\u30C6\\u30E0\\u30FB\\u30D7\\u30ED\\u30D1\\u30C6\\u30A3{0}\\u306B\\u30A2\\u30AF\\u30BB\\u30B9\\u3057\\u3088\\u3046\\u3068\\u3057\\u305F\\u3068\\u304D\\u306BSecurityException\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/res\/XPATHErrorResources_ja.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: May 2022\n+ * @LastModified: Nov 2024\n@@ -329,1 +329,0 @@\n-  public static final String WG_SECURITY_EXCEPTION = \"WG_SECURITY_EXCEPTION\";\n@@ -842,3 +841,0 @@\n-  { WG_SECURITY_EXCEPTION,\n-      \"XSL \\uC2DC\\uC2A4\\uD15C \\uC18D\\uC131\\uC5D0 \\uC561\\uC138\\uC2A4\\uD558\\uB824\\uACE0 \\uC2DC\\uB3C4\\uD558\\uB294 \\uC911 SecurityException \\uBC1C\\uC0DD: {0}\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/res\/XPATHErrorResources_ko.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: May 2022\n+ * @LastModified: Nov 2024\n@@ -329,1 +329,0 @@\n-  public static final String WG_SECURITY_EXCEPTION = \"WG_SECURITY_EXCEPTION\";\n@@ -842,3 +841,0 @@\n-  { WG_SECURITY_EXCEPTION,\n-      \"SecurityException ao tentar acessar a propriedade de sistema XSL: {0}\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/res\/XPATHErrorResources_pt_BR.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: May 2022\n+ * @LastModified: Nov 2024\n@@ -329,1 +329,0 @@\n-  public static final String WG_SECURITY_EXCEPTION = \"WG_SECURITY_EXCEPTION\";\n@@ -842,3 +841,0 @@\n-  { WG_SECURITY_EXCEPTION,\n-      \"SecurityException vid f\\u00F6rs\\u00F6k att f\\u00E5 \\u00E5tkomst till XSL-systemegenskap: {0}\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/res\/XPATHErrorResources_sv.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: Jul 2022\n+ * @LastModified: Nov 2024\n@@ -340,1 +340,0 @@\n-  public static final String WG_SECURITY_EXCEPTION = \"WG_SECURITY_EXCEPTION\";\n@@ -883,3 +882,0 @@\n-  { WG_SECURITY_EXCEPTION,\n-      \"\\u5C1D\\u8BD5\\u8BBF\\u95EE XSL \\u7CFB\\u7EDF\\u5C5E\\u6027\\u65F6\\u51FA\\u73B0 SecurityException: {0}\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/res\/XPATHErrorResources_zh_CN.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @LastModified: May 2022\n+ * @LastModified: Nov 2024\n@@ -329,1 +329,0 @@\n-  public static final String WG_SECURITY_EXCEPTION = \"WG_SECURITY_EXCEPTION\";\n@@ -842,3 +841,0 @@\n-  { WG_SECURITY_EXCEPTION,\n-      \"\\u5617\\u8A66\\u5B58\\u53D6 XSL \\u7CFB\\u7D71\\u5C6C\\u6027\\u6642\\u767C\\u751F SecurityException: {0}\"},\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/res\/XPATHErrorResources_zh_TW.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -407,6 +407,1 @@\n-        String userDir = \"\";\n-        try {\n-            userDir = SecuritySupport.getSystemProperty(\"user.dir\");\n-        }\n-        catch (SecurityException se) {\n-        }\n+        String userDir = System.getProperty(\"user.dir\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/xml\/internal\/stream\/XMLEntityStorage.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -243,1 +243,1 @@\n-            String encoding = SecuritySupport.getSystemProperty(\"file.encoding\");\n+            String encoding = System.getProperty(\"file.encoding\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/xml\/internal\/stream\/writers\/WriterUtility.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -342,1 +342,1 @@\n-            encoding = SecuritySupport.getSystemProperty(\"file.encoding\");\n+            encoding = System.getProperty(\"file.encoding\");\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/xml\/internal\/stream\/writers\/XMLStreamWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -600,1 +600,1 @@\n-            String value = SecuritySupport.getSystemProperty(sysPropertyName);\n+            String value = System.getProperty(sysPropertyName);\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/catalog\/CatalogFeatures.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -54,10 +52,3 @@\n-        \/\/ Use try\/catch block to support applets, which throws\n-        \/\/ SecurityException out of this code.\n-        try {\n-            String val = SecuritySupport.getSystemProperty(\"jaxp.debug\");\n-            \/\/ Allow simply setting the prop to turn on debug\n-            debug = val != null && !\"false\".equals(val);\n-        }\n-        catch (SecurityException se) {\n-            debug = false;\n-        }\n+        String val = System.getProperty(\"jaxp.debug\");\n+        \/\/ Allow simply setting the prop to turn on debug\n+        debug = val != null && !\"false\".equals(val);\n@@ -156,1 +147,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -163,8 +153,0 @@\n-        \/\/ make sure we have access to restricted packages\n-        if (System.getSecurityManager() != null) {\n-            if (className != null && className.startsWith(DEFAULT_PACKAGE)) {\n-                cl = null;\n-                useBSClsLoader = true;\n-            }\n-        }\n-\n@@ -212,9 +194,4 @@\n-        try {\n-            String systemProp = SecuritySupport.getSystemProperty(factoryId);\n-            if (systemProp != null) {\n-                dPrint(()->\"found system property, value=\" + systemProp);\n-                return newInstance(type, systemProp, null, true);\n-            }\n-        }\n-        catch (SecurityException se) {\n-            if (debug) se.printStackTrace();\n+        String systemProp = System.getProperty(factoryId);\n+        if (systemProp != null) {\n+            dPrint(()->\"found system property, value=\" + systemProp);\n+            return newInstance(type, systemProp, null, true);\n@@ -250,1 +227,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -255,11 +231,7 @@\n-            return AccessController.doPrivileged(new PrivilegedAction<T>() {\n-                public T run() {\n-                    final ServiceLoader<T> serviceLoader = ServiceLoader.load(type);\n-                    final Iterator<T> iterator = serviceLoader.iterator();\n-                    if (iterator.hasNext()) {\n-                        return iterator.next();\n-                    } else {\n-                        return null;\n-                    }\n-                }\n-            });\n+            final ServiceLoader<T> serviceLoader = ServiceLoader.load(type);\n+            final Iterator<T> iterator = serviceLoader.iterator();\n+            if (iterator.hasNext()) {\n+                return iterator.next();\n+            } else {\n+                return null;\n+            }\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/datatype\/FactoryFinder.java","additions":15,"deletions":43,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -53,10 +51,3 @@\n-        \/\/ Use try\/catch block to support applets, which throws\n-        \/\/ SecurityException out of this code.\n-        try {\n-            String val = SecuritySupport.getSystemProperty(\"jaxp.debug\");\n-            \/\/ Allow simply setting the prop to turn on debug\n-            debug = val != null && !\"false\".equals(val);\n-        }\n-        catch (SecurityException se) {\n-            debug = false;\n-        }\n+        String val = System.getProperty(\"jaxp.debug\");\n+        \/\/ Allow simply setting the prop to turn on debug\n+        debug = val != null && !\"false\".equals(val);\n@@ -156,1 +147,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -162,7 +152,0 @@\n-        \/\/ make sure we have access to restricted packages\n-        if (System.getSecurityManager() != null) {\n-            if (className != null && className.startsWith(DEFAULT_PACKAGE)) {\n-                cl = null;\n-                useBSClsLoader = true;\n-            }\n-        }\n@@ -210,9 +193,4 @@\n-        try {\n-            String systemProp = SecuritySupport.getSystemProperty(factoryId);\n-            if (systemProp != null) {\n-                dPrint(()->\"found system property, value=\" + systemProp);\n-                return newInstance(type, systemProp, null, true);\n-            }\n-        }\n-        catch (SecurityException se) {\n-            if (debug) se.printStackTrace();\n+        String systemProp = System.getProperty(factoryId);\n+        if (systemProp != null) {\n+            dPrint(()->\"found system property, value=\" + systemProp);\n+            return newInstance(type, systemProp, null, true);\n@@ -248,1 +226,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -251,11 +228,7 @@\n-            return AccessController.doPrivileged(new PrivilegedAction<T>() {\n-                public T run() {\n-                    final ServiceLoader<T> serviceLoader = ServiceLoader.load(type);\n-                    final Iterator<T> iterator = serviceLoader.iterator();\n-                    if (iterator.hasNext()) {\n-                        return iterator.next();\n-                    } else {\n-                        return null;\n-                    }\n-                 }\n-            });\n+            final ServiceLoader<T> serviceLoader = ServiceLoader.load(type);\n+            final Iterator<T> iterator = serviceLoader.iterator();\n+            if (iterator.hasNext()) {\n+                return iterator.next();\n+            } else {\n+                return null;\n+            }\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/parsers\/FactoryFinder.java","additions":15,"deletions":42,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -55,10 +53,3 @@\n-        \/\/ Use try\/catch block to support applets, which throws\n-        \/\/ SecurityException out of this code.\n-        try {\n-            String val = SecuritySupport.getSystemProperty(\"jaxp.debug\");\n-            \/\/ Allow simply setting the prop to turn on debug\n-            debug = val != null && !\"false\".equals(val);\n-        }\n-        catch (SecurityException se) {\n-            debug = false;\n-        }\n+        String val = System.getProperty(\"jaxp.debug\");\n+        \/\/ Allow simply setting the prop to turn on debug\n+        debug = val != null && !\"false\".equals(val);\n@@ -157,1 +148,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -164,8 +154,0 @@\n-        \/\/ make sure we have access to restricted packages\n-        if (System.getSecurityManager() != null) {\n-            if (className != null && className.startsWith(DEFAULT_PACKAGE)) {\n-                cl = null;\n-                useBSClsLoader = true;\n-            }\n-        }\n-\n@@ -238,12 +220,5 @@\n-        try {\n-\n-            final String systemProp;\n-            if (type.getName().equals(factoryId)) {\n-                systemProp = SecuritySupport.getSystemProperty(factoryId);\n-            } else {\n-                systemProp = System.getProperty(factoryId);\n-            }\n-            if (systemProp != null) {\n-                dPrint(()->\"found system property, value=\" + systemProp);\n-                return newInstance(type, systemProp, cl, true);\n-            }\n+        final String systemProp;\n+        if (type.getName().equals(factoryId)) {\n+            systemProp = System.getProperty(factoryId);\n+        } else {\n+            systemProp = System.getProperty(factoryId);\n@@ -251,3 +226,3 @@\n-        catch (SecurityException se) {\n-            throw new FactoryConfigurationError(\n-                    \"Failed to read factoryId '\" + factoryId + \"'\", se);\n+        if (systemProp != null) {\n+            dPrint(()->\"found system property, value=\" + systemProp);\n+            return newInstance(type, systemProp, cl, true);\n@@ -290,1 +265,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -293,18 +267,13 @@\n-            return AccessController.doPrivileged(new PrivilegedAction<T>() {\n-                @Override\n-                public T run() {\n-                    final ServiceLoader<T> serviceLoader;\n-                    if (cl == null) {\n-                        \/\/the current thread's context class loader\n-                        serviceLoader = ServiceLoader.load(type);\n-                    } else {\n-                        serviceLoader = ServiceLoader.load(type, cl);\n-                    }\n-                    final Iterator<T> iterator = serviceLoader.iterator();\n-                    if (iterator.hasNext()) {\n-                        return iterator.next();\n-                    } else {\n-                        return null;\n-                    }\n-                }\n-            });\n+            final ServiceLoader<T> serviceLoader;\n+            if (cl == null) {\n+                \/\/the current thread's context class loader\n+                serviceLoader = ServiceLoader.load(type);\n+            } else {\n+                serviceLoader = ServiceLoader.load(type, cl);\n+            }\n+            final Iterator<T> iterator = serviceLoader.iterator();\n+            if (iterator.hasNext()) {\n+                return iterator.next();\n+            } else {\n+                return null;\n+            }\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/stream\/FactoryFinder.java","additions":25,"deletions":56,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -54,10 +52,3 @@\n-        \/\/ Use try\/catch block to support applets, which throws\n-        \/\/ SecurityException out of this code.\n-        try {\n-            String val = SecuritySupport.getSystemProperty(\"jaxp.debug\");\n-            \/\/ Allow simply setting the prop to turn on debug\n-            debug = val != null && !\"false\".equals(val);\n-        }\n-        catch (SecurityException se) {\n-            debug = false;\n-        }\n+        String val = System.getProperty(\"jaxp.debug\");\n+        \/\/ Allow simply setting the prop to turn on debug\n+        debug = val != null && !\"false\".equals(val);\n@@ -131,1 +122,1 @@\n-     * @param overrideDefaultParser True to allow overriding the system-default\n+     * @param doFallback True to allow overriding the system-default\n@@ -134,1 +125,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -142,7 +132,0 @@\n-        \/\/ make sure we have access to restricted packages\n-        if (System.getSecurityManager() != null) {\n-            if (className != null && className.startsWith(DEFAULT_PACKAGE)) {\n-                cl = null;\n-                useBSClsLoader = true;\n-            }\n-        }\n@@ -194,9 +177,4 @@\n-        try {\n-            String systemProp = SecuritySupport.getSystemProperty(factoryId);\n-            if (systemProp != null) {\n-                dPrint(()->\"found system property, value=\" + systemProp);\n-                return newInstance(type, systemProp, null, true);\n-            }\n-        }\n-        catch (SecurityException se) {\n-            if (debug) se.printStackTrace();\n+        String systemProp = System.getProperty(factoryId);\n+        if (systemProp != null) {\n+            dPrint(()->\"found system property, value=\" + systemProp);\n+            return newInstance(type, systemProp, null, true);\n@@ -232,1 +210,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -237,11 +214,7 @@\n-            return AccessController.doPrivileged(new PrivilegedAction<T>() {\n-                public T run() {\n-                    final ServiceLoader<T> serviceLoader = ServiceLoader.load(type);\n-                    final Iterator<T> iterator = serviceLoader.iterator();\n-                    if (iterator.hasNext()) {\n-                        return iterator.next();\n-                    } else {\n-                        return null;\n-                    }\n-                 }\n-            });\n+            final ServiceLoader<T> serviceLoader = ServiceLoader.load(type);\n+            final Iterator<T> iterator = serviceLoader.iterator();\n+            if (iterator.hasNext()) {\n+                return iterator.next();\n+            } else {\n+                return null;\n+            }\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/transform\/FactoryFinder.java","additions":16,"deletions":43,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,0 @@\n-import java.security.AccessControlContext;\n-import java.security.AccessController;\n@@ -36,1 +34,0 @@\n-import java.security.PrivilegedAction;\n@@ -233,1 +230,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -238,8 +234,1 @@\n-\n-        if (System.getSecurityManager() == null) {\n-            return getLocationString();\n-        } else {\n-            return AccessController.doPrivileged((PrivilegedAction<String>) () ->\n-                getLocationString(),\n-                new AccessControlContext(new ProtectionDomain[] {getNonPrivDomain()}));\n-        }\n+        return getLocationString();\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/transform\/TransformerException.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,3 +30,0 @@\n-import java.security.AccessControlContext;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -52,6 +49,1 @@\n-        \/\/ Use try\/catch block to support applets\n-        try {\n-            debug = SecuritySupport.getSystemProperty(\"jaxp.debug\") != null;\n-        } catch (Exception unused) {\n-            debug = false;\n-        }\n+        debug = System.getProperty(\"jaxp.debug\") != null;\n@@ -155,1 +147,1 @@\n-            String r = SecuritySupport.getSystemProperty(propertyName);\n+            String r = System.getProperty(propertyName);\n@@ -204,1 +196,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -207,8 +198,0 @@\n-        \/\/ make sure we have access to restricted packages\n-        boolean internal = false;\n-        if (System.getSecurityManager() != null) {\n-            if (className != null && className.startsWith(DEFAULT_PACKAGE)) {\n-                internal = true;\n-            }\n-        }\n-\n@@ -216,1 +199,1 @@\n-            if (classLoader != null && !internal) {\n+            if (classLoader != null) {\n@@ -261,2 +244,1 @@\n-            InstantiationException | InvocationTargetException | NoSuchMethodException |\n-            SecurityException ex) {\n+            InstantiationException | InvocationTargetException | NoSuchMethodException ex) {\n@@ -273,12 +255,0 @@\n-    \/\/ Call isSchemaLanguageSupported with initial context.\n-    @SuppressWarnings(\"removal\")\n-    private boolean isSchemaLanguageSupportedBy(final SchemaFactory factory,\n-            final String schemaLanguage,\n-            AccessControlContext acc) {\n-        return AccessController.doPrivileged(new PrivilegedAction<Boolean>() {\n-            public Boolean run() {\n-                return factory.isSchemaLanguageSupported(schemaLanguage);\n-            }\n-        }, acc);\n-    }\n-\n@@ -294,1 +264,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -297,2 +266,0 @@\n-        \/\/ store current context.\n-        final AccessControlContext acc = AccessController.getContext();\n@@ -300,12 +267,6 @@\n-            return AccessController.doPrivileged(new PrivilegedAction<SchemaFactory>() {\n-                public SchemaFactory run() {\n-                    final ServiceLoader<SchemaFactory> loader =\n-                            ServiceLoader.load(SERVICE_CLASS);\n-                    for (SchemaFactory factory : loader) {\n-                        \/\/ restore initial context to call\n-                        \/\/ factory.isSchemaLanguageSupported\n-                        if (isSchemaLanguageSupportedBy(factory, schemaLanguage, acc)) {\n-                            return factory;\n-                        }\n-                    }\n-                    return null; \/\/ no factory found.\n+            final ServiceLoader<SchemaFactory> loader =\n+                    ServiceLoader.load(SERVICE_CLASS);\n+            for (SchemaFactory factory : loader) {\n+                \/\/ factory.isSchemaLanguageSupported\n+                if (factory.isSchemaLanguageSupported(schemaLanguage)) {\n+                    return factory;\n@@ -313,1 +274,2 @@\n-            });\n+            }\n+            return null; \/\/ no factory found.\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/validation\/SchemaFactoryFinder.java","additions":13,"deletions":51,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,3 +30,0 @@\n-import java.security.AccessControlContext;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -51,6 +48,1 @@\n-        \/\/ Use try\/catch block to support applets\n-        try {\n-            debug = SecuritySupport.getSystemProperty(\"jaxp.debug\") != null;\n-        } catch (Exception unused) {\n-            debug = false;\n-        }\n+        debug = System.getProperty(\"jaxp.debug\") != null;\n@@ -160,1 +152,1 @@\n-            String r = SecuritySupport.getSystemProperty(propertyName);\n+            String r = System.getProperty(propertyName);\n@@ -211,1 +203,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -214,7 +205,0 @@\n-        \/\/ make sure we have access to restricted packages\n-        boolean internal = false;\n-        if (System.getSecurityManager() != null) {\n-            if (className != null && className.startsWith(DEFAULT_PACKAGE)) {\n-                internal = true;\n-            }\n-        }\n@@ -224,1 +208,1 @@\n-            if (classLoader != null && !internal) {\n+            if (classLoader != null) {\n@@ -267,2 +251,1 @@\n-            InstantiationException | InvocationTargetException | NoSuchMethodException |\n-            SecurityException ex) {\n+            InstantiationException | InvocationTargetException | NoSuchMethodException ex) {\n@@ -279,12 +262,0 @@\n-    \/\/ Call isObjectModelSupportedBy with initial context.\n-    @SuppressWarnings(\"removal\")\n-    private boolean isObjectModelSupportedBy(final XPathFactory factory,\n-            final String objectModel,\n-            AccessControlContext acc) {\n-        return AccessController.doPrivileged(new PrivilegedAction<Boolean>() {\n-                    public Boolean run() {\n-                        return factory.isObjectModelSupported(objectModel);\n-                    }\n-                }, acc);\n-    }\n-\n@@ -300,1 +271,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -305,2 +275,0 @@\n-        \/\/ store current context.\n-        final AccessControlContext acc = AccessController.getContext();\n@@ -308,12 +276,6 @@\n-            return AccessController.doPrivileged(new PrivilegedAction<XPathFactory>() {\n-                public XPathFactory run() {\n-                    final ServiceLoader<XPathFactory> loader =\n-                            ServiceLoader.load(SERVICE_CLASS);\n-                    for (XPathFactory factory : loader) {\n-                        \/\/ restore initial context to call\n-                        \/\/ factory.isObjectModelSupportedBy\n-                        if (isObjectModelSupportedBy(factory, objectModel, acc)) {\n-                            return factory;\n-                        }\n-                    }\n-                    return null; \/\/ no factory found.\n+            final ServiceLoader<XPathFactory> loader =\n+                    ServiceLoader.load(SERVICE_CLASS);\n+            for (XPathFactory factory : loader) {\n+                \/\/ factory.isObjectModelSupportedBy\n+                if (factory.isObjectModelSupported(objectModel)) {\n+                    return factory;\n@@ -321,1 +283,2 @@\n-            });\n+            }\n+            return null; \/\/ no factory found.\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/xpath\/XPathFactoryFinder.java","additions":13,"deletions":50,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -404,1 +404,1 @@\n-            String value = SecuritySupport.getSystemProperty(sysPropertyName);\n+            String value = System.getProperty(sysPropertyName);\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/JdkXmlFeatures.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,2 @@\n-    public static final boolean IS_WINDOWS = SecuritySupport.getSystemProperty(\"os.name\").contains(\"Windows\");\n-    public static final String JAVA_HOME = SecuritySupport.getSystemProperty(\"java.home\");\n+    public static final boolean IS_WINDOWS = System.getProperty(\"os.name\").contains(\"Windows\");\n+    public static final String JAVA_HOME = System.getProperty(\"java.home\");\n@@ -301,1 +301,1 @@\n-        String spSAXDriver = SecuritySupport.getSystemProperty(SAX_DRIVER);\n+        String spSAXDriver = System.getProperty(SAX_DRIVER);\n@@ -404,1 +404,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -409,1 +408,1 @@\n-        if (spDOMFactory != null && System.getSecurityManager() == null) {\n+        if (spDOMFactory != null) {\n@@ -431,1 +430,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -435,1 +433,1 @@\n-        if (spSAXFactory != null && System.getSecurityManager() == null) {\n+        if (spSAXFactory != null) {\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/JdkXmlUtils.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.security.AccessController;\n@@ -37,3 +36,0 @@\n-import java.security.PrivilegedAction;\n-import java.security.PrivilegedActionException;\n-import java.security.PrivilegedExceptionAction;\n@@ -80,50 +76,0 @@\n-    \/**\n-     * Reads a system property with privilege\n-     *\n-     * @param propName the name of the property\n-     * @return the value of the property\n-     *\/\n-    @SuppressWarnings(\"removal\")\n-    public static String getSystemProperty(final String propName) {\n-        return\n-        AccessController.doPrivileged(\n-                (PrivilegedAction<String>) () -> System.getProperty(propName));\n-    }\n-\n-    \/**\n-     * Reads a system property with privilege\n-     *\n-     * @param propName the name of the property\n-     * @return the value of the property\n-     *\/\n-    public static String getSystemProperty(final String propName, String defValue) {\n-        String value = getSystemProperty(propName);\n-        if (value == null) {\n-            return defValue;\n-        }\n-        return value;\n-    }\n-\n-    \/**\n-     * Reads a system property with specified type.\n-     *\n-     * @param <T> the type of the property value\n-     * @param type the type of the property value\n-     * @param propName the name of the property\n-     * @param defValue the default value\n-     * @return the value of the property, or the default value if no system\n-     * property is found\n-     *\/\n-    public static <T> T getSystemProperty(Class<T> type, String propName, String defValue) {\n-        String value = getSystemProperty(propName);\n-        if (value == null) {\n-            value = defValue;\n-        }\n-        if (Integer.class == type) {\n-            return type.cast(Integer.parseInt(value));\n-        } else if (Boolean.class == type) {\n-            return type.cast(Boolean.parseBoolean(value));\n-        }\n-        return type.cast(value);\n-    }\n-\n@@ -162,1 +108,1 @@\n-        String value = getSystemProperty(propName);\n+        String value = System.getProperty(propName);\n@@ -202,1 +148,1 @@\n-                            Paths.get(SecuritySupport.getSystemProperty(\"java.home\"),\n+                            Paths.get(System.getProperty(\"java.home\"),\n@@ -209,1 +155,1 @@\n-                            Paths.get(SecuritySupport.getSystemProperty(\"java.home\"),\n+                            Paths.get(System.getProperty(\"java.home\"),\n@@ -216,1 +162,1 @@\n-                    String configFile = SecuritySupport.getSystemProperty(JdkConstants.CONFIG_FILE_PROPNAME);\n+                    String configFile = System.getProperty(JdkConstants.CONFIG_FILE_PROPNAME);\n@@ -252,1 +198,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -254,2 +199,1 @@\n-        return (AccessController.doPrivileged((PrivilegedAction<Boolean>) ()\n-                -> f.isDirectory()));\n+        return f.isDirectory();\n@@ -264,1 +208,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -266,2 +209,1 @@\n-        return (AccessController.doPrivileged((PrivilegedAction<Boolean>) ()\n-                -> f.exists()));\n+        return f.exists();\n@@ -276,1 +218,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -278,2 +219,1 @@\n-        return (AccessController.doPrivileged((PrivilegedAction<Boolean>) ()\n-                -> f.isFile()));\n+        return f.isFile();\n@@ -288,1 +228,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -291,6 +230,1 @@\n-        try {\n-            return AccessController.doPrivileged((PrivilegedExceptionAction<FileInputStream>) ()\n-                    -> new FileInputStream(file));\n-        } catch (PrivilegedActionException e) {\n-            throw (FileNotFoundException) e.getException();\n-        }\n+        return new FileInputStream(file);\n@@ -305,1 +239,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -308,6 +241,1 @@\n-        try {\n-            return AccessController.doPrivileged((PrivilegedExceptionAction<InputStream>) ()\n-                    -> uc.getInputStream());\n-        } catch (PrivilegedActionException e) {\n-            throw (IOException) e.getException();\n-        }\n+        return uc.getInputStream();\n@@ -321,1 +249,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -323,2 +250,1 @@\n-        return AccessController.doPrivileged((PrivilegedAction<InputStream>) () ->\n-                SecuritySupport.class.getResourceAsStream(\"\/\"+name));\n+        return SecuritySupport.class.getResourceAsStream(\"\/\"+name);\n@@ -332,1 +258,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -334,2 +259,1 @@\n-        return AccessController.doPrivileged((PrivilegedAction<URL>) () ->\n-                SecuritySupport.class.getResource(name));\n+        return SecuritySupport.class.getResource(name);\n@@ -353,1 +277,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -355,1 +278,3 @@\n-        return AccessController.doPrivileged((PrivilegedAction<ResourceBundle>) () -> {\n+        try {\n+            return ResourceBundle.getBundle(bundle, locale);\n+        } catch (MissingResourceException e) {\n@@ -357,8 +282,4 @@\n-                return ResourceBundle.getBundle(bundle, locale);\n-            } catch (MissingResourceException e) {\n-                try {\n-                    return ResourceBundle.getBundle(bundle, Locale.US);\n-                } catch (MissingResourceException e2) {\n-                    throw new MissingResourceException(\n-                            \"Could not load any resource bundle by \" + bundle, bundle, \"\");\n-                }\n+                return ResourceBundle.getBundle(bundle, Locale.US);\n+            } catch (MissingResourceException e2) {\n+                throw new MissingResourceException(\n+                        \"Could not load any resource bundle by \" + bundle, bundle, \"\");\n@@ -366,1 +287,1 @@\n-        });\n+        }\n@@ -374,1 +295,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -376,11 +296,1 @@\n-        return (AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> f.exists()));\n-    }\n-\n-    \/**\n-     * Checks the LastModified attribute of a file.\n-     * @param f the specified file\n-     * @return the LastModified attribute\n-     *\/\n-    @SuppressWarnings(\"removal\")\n-    static long getLastModified(final File f) {\n-        return (AccessController.doPrivileged((PrivilegedAction<Long>) () -> f.lastModified()));\n+        return f.exists();\n@@ -468,1 +378,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -470,6 +379,4 @@\n-        return AccessController.doPrivileged((PrivilegedAction<ClassLoader>) () -> {\n-            ClassLoader cl = Thread.currentThread().getContextClassLoader();\n-            if (cl == null)\n-                cl = ClassLoader.getSystemClassLoader();\n-            return cl;\n-        });\n+        ClassLoader cl = Thread.currentThread().getContextClassLoader();\n+        if (cl == null)\n+            cl = ClassLoader.getSystemClassLoader();\n+        return cl;\n@@ -478,2 +385,0 @@\n-\n-    @SuppressWarnings(\"removal\")\n@@ -481,8 +386,1 @@\n-        return AccessController.doPrivileged((PrivilegedAction<ClassLoader>) () -> {\n-            ClassLoader cl = null;\n-            try {\n-                cl = ClassLoader.getSystemClassLoader();\n-            } catch (SecurityException ex) {\n-            }\n-            return cl;\n-        });\n+        return ClassLoader.getSystemClassLoader();\n@@ -491,1 +389,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -493,6 +390,1 @@\n-        return AccessController.doPrivileged((PrivilegedAction<ClassLoader>) () -> {\n-            ClassLoader parent = null;\n-            try {\n-                parent = cl.getParent();\n-            } catch (SecurityException ex) {\n-            }\n+        ClassLoader parent = cl.getParent();\n@@ -500,4 +392,3 @@\n-            \/\/ eliminate loops in case of the boot\n-            \/\/ ClassLoader returning itself as a parent\n-            return (parent == cl) ? null : parent;\n-        });\n+        \/\/ eliminate loops in case of the boot\n+        \/\/ ClassLoader returning itself as a parent\n+        return (parent == cl) ? null : parent;\n@@ -508,1 +399,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -510,9 +400,7 @@\n-        return AccessController.doPrivileged((PrivilegedAction<String>) () -> {\n-            CodeSource cs = cls.getProtectionDomain().getCodeSource();\n-            if (cs != null) {\n-                URL loc = cs.getLocation();\n-                return loc != null ? loc.toString() : \"(no location)\";\n-            } else {\n-                return \"(no code source)\";\n-            }\n-        });\n+        CodeSource cs = cls.getProtectionDomain().getCodeSource();\n+        if (cs != null) {\n+            URL loc = cs.getLocation();\n+            return loc != null ? loc.toString() : \"(no location)\";\n+        } else {\n+            return \"(no code source)\";\n+        }\n@@ -526,1 +414,0 @@\n-     * @throws SecurityException\n@@ -528,7 +415,5 @@\n-    @SuppressWarnings(\"removal\")\n-    public static ClassLoader getClassLoader() throws SecurityException{\n-        return AccessController.doPrivileged((PrivilegedAction<ClassLoader>)() -> {\n-            ClassLoader cl = Thread.currentThread().getContextClassLoader();\n-            if (cl == null) {\n-                cl = ClassLoader.getSystemClassLoader();\n-            }\n+    public static ClassLoader getClassLoader() {\n+        ClassLoader cl = Thread.currentThread().getContextClassLoader();\n+        if (cl == null) {\n+            cl = ClassLoader.getSystemClassLoader();\n+        }\n@@ -536,2 +421,1 @@\n-            return cl;\n-        });\n+        return cl;\n@@ -540,1 +424,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -543,9 +426,7 @@\n-        return AccessController.doPrivileged((PrivilegedAction<InputStream>) () -> {\n-            InputStream ris;\n-            if (cl == null) {\n-                ris = SecuritySupport.class.getResourceAsStream(name);\n-            } else {\n-                ris = cl.getResourceAsStream(name);\n-            }\n-            return ris;\n-        });\n+        InputStream ris;\n+        if (cl == null) {\n+            ris = SecuritySupport.class.getResourceAsStream(name);\n+        } else {\n+            ris = cl.getResourceAsStream(name);\n+        }\n+        return ris;\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/SecuritySupport.java","additions":49,"deletions":168,"binary":false,"changes":217,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,8 +44,3 @@\n-        try {\n-            String val = SecuritySupport.getSystemProperty(\"jaxp.debug\");\n-            \/\/ Allow simply setting the prop to turn on debug\n-            debug = val != null && !\"false\".equals(val);\n-        }\n-        catch (SecurityException se) {\n-            debug = false;\n-        }\n+        String val = System.getProperty(\"jaxp.debug\");\n+        \/\/ Allow simply setting the prop to turn on debug\n+        debug = val != null && !\"false\".equals(val);\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/Utils.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -719,1 +719,1 @@\n-            String value = SecuritySupport.getSystemProperty(sysPropertyName);\n+            String value = System.getProperty(sysPropertyName);\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/XMLSecurityManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,2 +49,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -146,1 +144,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -176,9 +173,2 @@\n-                \/\/ make sure we have access to restricted packages\n-                boolean internal = false;\n-                if (System.getSecurityManager() != null) {\n-                    if (sourceName != null && sourceName.startsWith(DEFAULT_PACKAGE)) {\n-                        internal = true;\n-                    }\n-                }\n-                Class<?> sourceClass = null;\n-                if (classLoader != null && !internal) {\n+                Class<?> sourceClass;\n+                if (classLoader != null) {\n@@ -344,1 +334,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -346,12 +335,1 @@\n-        return AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() {\n-                @Override\n-                public ClassLoader run() {\n-                    ClassLoader classLoader = null;\n-                    try {\n-                        classLoader =\n-                            Thread.currentThread().getContextClassLoader();\n-                    } catch (SecurityException ex) {\n-                    }\n-                    return classLoader;\n-                }\n-            });\n+        return Thread.currentThread().getContextClassLoader();\n@@ -361,2 +339,1 @@\n-     * This method returns the system property indicated by the specified name\n-     * after checking access control privileges.\n+     * This method returns the system property indicated by the specified name.\n@@ -367,1 +344,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -369,6 +345,1 @@\n-        return AccessController.doPrivileged(new PrivilegedAction<String>() {\n-                    @Override\n-                    public String run() {\n-                        return System.getProperty(name);\n-                    }\n-                });\n+        return System.getProperty(name);\n@@ -378,3 +349,2 @@\n-     * This method returns an Inputstream for the reading resource\n-     * META_INF\/services\/org.w3c.dom.DOMImplementationSourceList after checking\n-     * access control privileges.\n+     * This method returns an InputStream for the reading resource\n+     * META_INF\/services\/org.w3c.dom.DOMImplementationSourceList.\n@@ -384,1 +354,1 @@\n-     * @return an Inputstream for the resource specified\n+     * @return an InputStream for the resource specified\n@@ -386,1 +356,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -389,13 +358,3 @@\n-        return AccessController.doPrivileged(new PrivilegedAction<InputStream>() {\n-                @Override\n-                public InputStream run() {\n-                    InputStream ris;\n-                    if (classLoader == null) {\n-                        ris =\n-                            ClassLoader.getSystemResourceAsStream(name);\n-                    } else {\n-                        ris = classLoader.getResourceAsStream(name);\n-                    }\n-                    return ris;\n-                }\n-            });\n+        return (classLoader == null)\n+            ? ClassLoader.getSystemResourceAsStream(name)\n+            : classLoader.getResourceAsStream(name);\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/bootstrap\/DOMImplementationRegistry.java","additions":11,"deletions":52,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -68,7 +67,0 @@\n-        boolean internal = false;\n-        if (System.getSecurityManager() != null) {\n-            if (className != null && className.startsWith(DEFAULT_PACKAGE)) {\n-                internal = true;\n-            }\n-        }\n-\n@@ -76,1 +68,1 @@\n-        if (classLoader == null || internal) {\n+        if (classLoader == null) {\n@@ -84,1 +76,1 @@\n-        } catch (NoSuchMethodException | SecurityException | InvocationTargetException ex) {\n+        } catch (NoSuchMethodException | InvocationTargetException ex) {\n","filename":"src\/java.xml\/share\/classes\/org\/xml\/sax\/helpers\/NewInstance.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-        String driver = SecuritySupport.getSystemProperty(\"org.xml.sax.parser\");\n+        String driver = System.getProperty(\"org.xml.sax.parser\");\n","filename":"src\/java.xml\/share\/classes\/org\/xml\/sax\/helpers\/ParserAdapter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-        String className = SecuritySupport.getSystemProperty(\"org.xml.sax.parser\");\n+        String className = System.getProperty(\"org.xml.sax.parser\");\n","filename":"src\/java.xml\/share\/classes\/org\/xml\/sax\/helpers\/ParserFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -132,1 +130,1 @@\n-            className = SecuritySupport.getSystemProperty(property);\n+            className = System.getProperty(property);\n@@ -239,1 +237,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -244,10 +241,1 @@\n-            return AccessController.doPrivileged((PrivilegedAction<T>) () -> {\n-                final ServiceLoader<T> serviceLoader;\n-                serviceLoader = ServiceLoader.load(type, cl);\n-                final Iterator<T> iterator = serviceLoader.iterator();\n-                if (iterator.hasNext()) {\n-                    return iterator.next();\n-                } else {\n-                    return null;\n-                }\n-            });\n+            return ServiceLoader.load(type, cl).findFirst().orElse(null);\n","filename":"src\/java.xml\/share\/classes\/org\/xml\/sax\/helpers\/XMLReaderFactory.java","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"}]}