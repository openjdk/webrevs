{"files":[{"patch":"@@ -274,0 +274,5 @@\n+bool ShenandoahBarrierSetC2::is_shenandoah_clone_call(Node* call) {\n+  return call->is_CallLeaf() &&\n+         call->as_CallLeaf()->entry_point() == CAST_FROM_FN_PTR(address, ShenandoahRuntime::shenandoah_clone_barrier);\n+}\n+\n@@ -677,1 +682,0 @@\n-\/\/ Support for GC barriers emitted during parsing\n@@ -679,12 +683,3 @@\n-  if (node->Opcode() == Op_ShenandoahLoadReferenceBarrier) return true;\n-  if (node->Opcode() != Op_CallLeaf && node->Opcode() != Op_CallLeafNoFP) {\n-    return false;\n-  }\n-  CallLeafNode *call = node->as_CallLeaf();\n-  if (call->_name == nullptr) {\n-    return false;\n-  }\n-\n-  return strcmp(call->_name, \"shenandoah_clone_barrier\") == 0 ||\n-         strcmp(call->_name, \"shenandoah_cas_obj\") == 0 ||\n-         strcmp(call->_name, \"shenandoah_wb_pre\") == 0;\n+  return is_shenandoah_lrb_call(node) ||\n+         is_shenandoah_wb_pre_call(node) ||\n+         is_shenandoah_clone_call(node);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":8,"deletions":13,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -88,0 +88,1 @@\n+  static bool is_shenandoah_clone_call(Node* call);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -417,1 +417,1 @@\n-        \"shenandoah_clone_barrier\",\n+        \"shenandoah_clone\",\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}