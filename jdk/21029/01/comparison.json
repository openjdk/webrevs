{"files":[{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+\/*\n+ * @test\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests menu item font is big\n+ * @run main\/manual GiantFontTest\n+ *\/\n+\n+public class GiantFontTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                        A frame with one menu will appear.\n+                        On Solaris, the menu's font should be quite large (48 point).\n+                        If not, test fails.\n+\n+                        On Windows, the font should be normal size.  If so, test passes.\n+                        If the menu text is clipped by the title bar, or is painted over\n+                        the title bar or client area, the test fails.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"GiantFontTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(GiantFontTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createAndShowUI() {\n+        Font giantFont = new Font(\"Dialog\", Font.PLAIN, 48);\n+        Frame f = new Frame(\"GiantFontTest\");\n+        MenuBar mb = new MenuBar();\n+        Menu m = new Menu(\"My font is too big!\");\n+        m.setFont(giantFont);\n+        for (int i = 0; i < 5; i++) {\n+            m.add(new MenuItem(\"Some MenuItems\"));\n+        }\n+        mb.add(m);\n+        f.setMenuBar(mb);\n+        f.setSize(450, 400);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/GiantFontTest.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n+\n+import java.util.List;\n+\n+\/*\n+ * @test\n+ * @bug 4175790\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Win32: Running out of command ids for menu items\n+ * @run main\/manual LotsOfMenuItemsTest\n+ *\/\n+\n+public class LotsOfMenuItemsTest extends ComponentAdapter {\n+    private static final int NUM_WINDOWS = 400;\n+    private static TestFrame firstFrame;\n+    private static TestFrame testFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+        LotsOfMenuItemsTest obj = new LotsOfMenuItemsTest();\n+        String INSTRUCTIONS = \"\"\"\n+                This test creates lots of frames with menubars.\n+                When it's done you will see two frames.\n+                Try to select menu items from each of them.\n+\n+                If everything seems to work - test passed.\n+                Click \"Pass\" button in the test harness window.\n+\n+                If test crashes on you - test failed.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"LotsOfMenuItemsTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(obj.createAndShowUI())\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private List<Frame> createAndShowUI() {\n+        firstFrame = new TestFrame(\"First frame\");\n+        firstFrame.addComponentListener(this);\n+\n+        for (int i = 1; i < NUM_WINDOWS - 1; ++i) {\n+            testFrame = new TestFrame(\"Running(\" + i + \")...\");\n+            testFrame.setVisible(false);\n+            testFrame.dispose();\n+        }\n+        testFrame = new TestFrame(\"Last Frame\");\n+        return List.of(firstFrame, testFrame);\n+    }\n+\n+    public void componentShown(ComponentEvent e) {\n+        PassFailJFrame.positionTestWindow(firstFrame,\n+                PassFailJFrame.Position.HORIZONTAL);\n+        testFrame.setLocation(firstFrame.getX(),\n+                firstFrame.getY() + firstFrame.getHeight() + 8);\n+    }\n+\n+    private static class TestFrame extends Frame {\n+        static int n = 0;\n+\n+        public TestFrame(String title) {\n+            super(title);\n+            MenuBar mb = new MenuBar();\n+            for (int i = 0; i < 10; ++i) {\n+                Menu m = new Menu(\"Menu_\" + (i + 1));\n+                for (int j = 0; j < 20; ++j) {\n+                    MenuItem mi = new MenuItem(\"Menu item \" + ++n);\n+                    m.add(mi);\n+                }\n+                mb.add(m);\n+            }\n+            setMenuBar(mb);\n+            setSize(450, 150);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/LotsOfMenuItemsTest.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+\/*\n+ * @test\n+ * @bug 4066657 8009454\n+ * @requires os.family != \"mac\"\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests that setting a font on the Menu with MenuItem takes effect.\n+ * @run main\/manual MenuSetFontTest\n+ *\/\n+\n+public class MenuSetFontTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                    Look at the menu in the upper left corner of the 'SetFont Test' frame.\n+                    Click on the \"File\" menu. You will see \"menu item\" item.\n+                    Press Pass if menu item is displayed using bold and large font,\n+                    otherwise press Fail.\n+                    If you do not see menu at all, press Fail.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"MenuSetFontTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(MenuSetFontTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createAndShowUI() {\n+        Frame frame = new Frame(\"SetFont Test\");\n+        MenuBar menuBar = new MenuBar();\n+        Menu menu = new Menu(\"File\");\n+        MenuItem item = new MenuItem(\"menu item\");\n+        menu.add(item);\n+        menuBar.add(menu);\n+        menuBar.setFont(new Font(Font.MONOSPACED, Font.BOLD, 24));\n+        frame.setMenuBar(menuBar);\n+        frame.setSize(300, 200);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/MenuSetFontTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 4251036\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary MenuItem setLabel(null\/\"\") behaves differently under Win32 and Solaris\n+ * @run main\/manual NullOrEmptyStringLabelTest\n+ *\/\n+\n+public class NullOrEmptyStringLabelTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                The bug is reproducible under Win32 and Solaris.\n+                Setting 'null' and \"\" as a label of menu item\n+                should set blank label on all platforms according to the specification.\n+                But under Solaris setting \"\" as a label of menu item used to\n+                cause some garbage to be set as label.\n+                Under Win32 setting 'null' as a label used to result in\n+                throwing NullPointerException.\n+\n+                If you see any of these things happen test fails otherwise\n+                it passes.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"NullOrEmptyStringLabelTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(NullOrEmptyStringLabelTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createAndShowUI() {\n+        Frame frame = new Frame(\"Null Or Empty String Label Test\");\n+        Menu menu = new Menu(\"Menu\");\n+        MenuItem mi = new MenuItem(\"Item\");\n+        MenuBar mb = new MenuBar();\n+        Button button1 = new Button(\"Set MenuItem label to 'null'\");\n+        Button button2 = new Button(\"Set MenuItem label to \\\"\\\"\");\n+        Button button3 = new Button(\"Set MenuItem label to 'text'\");\n+        button1.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent ev) {\n+                System.out.println(\"Setting MenuItem label to null\");\n+                mi.setLabel(null);\n+            }\n+        });\n+        button2.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent ev) {\n+                System.out.println(\"Setting MenuItem label to \\\"\\\"\");\n+                mi.setLabel(\"\");\n+            }\n+        });\n+        button3.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent ev) {\n+                System.out.println(\"Setting MenuItem label to 'text'\");\n+                mi.setLabel(\"text\");\n+            }\n+        });\n+        menu.add(mi);\n+        mb.add(menu);\n+        frame.add(button1, BorderLayout.NORTH);\n+        frame.add(button2, BorderLayout.CENTER);\n+        frame.add(button3, BorderLayout.SOUTH);\n+        frame.setMenuBar(mb);\n+        frame.setSize(200, 135);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/NullOrEmptyStringLabelTest.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+\/*\n+ * @test\n+ * @bug 4099695\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary menu items with Unicode labels treated as separators\n+ * @run main\/manual UnicodeMenuItemTest\n+ *\/\n+\n+public class UnicodeMenuItemTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                Click on the \"Menu\" on the top-left corner of frame.\n+\n+                The menu should have four entries:\n+                1) a row of five unicode characters: \\u00c4\\u00cb\\u00cf\\u00d6\\u00dc\n+                2) a menu separator\n+                3) a unicode character:  \\u012d\n+                4) a unicode character:  \\u022d\n+\n+                If the menu items look like the list above, the test passes.\n+                It is okay if the unicode characters look like empty boxes\n+                or something - as long as they are not separators.\n+\n+                If either of the last two menu items show up as separators,\n+                the test FAILS.\n+\n+                Press 'Pass' if above instructions hold good else press 'Fail'.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"UnicodeMenuItemTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(UnicodeMenuItemTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+    private static Frame createAndShowUI() {\n+        Frame frame = new Frame(\"Unicode MenuItem Test\");\n+        MenuBar mb = new MenuBar();\n+        Menu m = new Menu(\"Menu\");\n+\n+        MenuItem mi1 = new MenuItem(\"\\u00c4\\u00cb\\u00cf\\u00d6\\u00dc\");\n+        m.add(mi1);\n+\n+        MenuItem separator = new MenuItem(\"-\");\n+        m.add(separator);\n+\n+        MenuItem mi2 = new MenuItem(\"\\u012d\");\n+        m.add(mi2);\n+\n+        MenuItem mi3 = new MenuItem(\"\\u022d\");\n+        m.add(mi3);\n+\n+        mb.add(m);\n+\n+        frame.setMenuBar(mb);\n+        frame.setSize(450, 150);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/UnicodeMenuItemTest.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"}]}