{"files":[{"patch":"@@ -55,1 +55,0 @@\n-                .testTimeOut(5)\n@@ -72,1 +71,1 @@\n-        f.setSize (450, 400);\n+        f.setSize(450, 400);\n","filename":"test\/jdk\/java\/awt\/MenuItem\/GiantFontTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import java.awt.Rectangle;\n+import java.awt.event.ComponentAdapter;\n@@ -30,1 +30,0 @@\n-import java.awt.event.ComponentListener;\n@@ -32,1 +31,0 @@\n-import java.util.ArrayList;\n@@ -38,1 +36,0 @@\n- * @requires os.family == \"windows\"\n@@ -45,1 +42,1 @@\n-public class LotsOfMenuItemsTest implements ComponentListener {\n+public class LotsOfMenuItemsTest extends ComponentAdapter {\n@@ -47,2 +44,2 @@\n-    private static TestFrame firstFrame, testFrame;\n-    private static Rectangle rect;\n+    private static TestFrame firstFrame;\n+    private static TestFrame testFrame;\n@@ -53,1 +50,1 @@\n-                This test creates a lots of frames with menubars.\n+                This test creates lots of frames with menubars.\n@@ -58,1 +55,1 @@\n-                Click \"Done\" button in the test harness window.\n+                Click \"Pass\" button in the test harness window.\n@@ -67,1 +64,0 @@\n-                .testTimeOut(5)\n@@ -73,2 +69,1 @@\n-    private List<? extends Frame> createAndShowUI() {\n-        List<Frame> list = new ArrayList<>();\n+    private List<Frame> createAndShowUI() {\n@@ -78,1 +73,1 @@\n-        for (int i = 1; i < NUM_WINDOWS; ++i) {\n+        for (int i = 1; i < NUM_WINDOWS - 1; ++i) {\n@@ -80,6 +75,2 @@\n-            if (i != (NUM_WINDOWS - 1)) {\n-                testFrame.setVisible(false);\n-                testFrame.dispose();\n-            } else {\n-                testFrame.setTitle(\"Last Frame\");\n-            }\n+            testFrame.setVisible(false);\n+            testFrame.dispose();\n@@ -87,3 +78,2 @@\n-        list.add(firstFrame);\n-        list.add(testFrame);\n-        return list;\n+        testFrame = new TestFrame(\"Last Frame\");\n+        return List.of(firstFrame, testFrame);\n@@ -91,3 +81,0 @@\n-    public void componentMoved(ComponentEvent e) {}\n-\n-    public void componentHidden(ComponentEvent e) {}\n@@ -96,2 +83,4 @@\n-        firstFrame.setLocation(970, 350);\n-        testFrame.setLocation(970, 510);\n+        PassFailJFrame.positionTestWindow(firstFrame,\n+                PassFailJFrame.Position.HORIZONTAL);\n+        testFrame.setLocation(firstFrame.getX(),\n+                firstFrame.getY() + firstFrame.getHeight() + 8);\n@@ -100,5 +89,2 @@\n-    public void componentResized(ComponentEvent e) {}\n-}\n-\n-class TestFrame extends Frame {\n-    static int n = 0;\n+    private static class TestFrame extends Frame {\n+        static int n = 0;\n@@ -106,8 +92,10 @@\n-    public TestFrame(String title) {\n-        super(title);\n-        MenuBar mb = new MenuBar();\n-        for (int i = 0; i < 10; ++i) {\n-            Menu m = new Menu(\"Menu_\" + (i + 1));\n-            for (int j = 0; j < 20; ++j) {\n-                MenuItem mi = new MenuItem(\"Menu item \" + ++n);\n-                m.add(mi);\n+        public TestFrame(String title) {\n+            super(title);\n+            MenuBar mb = new MenuBar();\n+            for (int i = 0; i < 10; ++i) {\n+                Menu m = new Menu(\"Menu_\" + (i + 1));\n+                for (int j = 0; j < 20; ++j) {\n+                    MenuItem mi = new MenuItem(\"Menu item \" + ++n);\n+                    m.add(mi);\n+                }\n+                mb.add(m);\n@@ -115,1 +103,2 @@\n-            mb.add(m);\n+            setMenuBar(mb);\n+            setSize(450, 150);\n@@ -117,2 +106,0 @@\n-        setMenuBar(mb);\n-        setSize(450, 150);\n","filename":"test\/jdk\/java\/awt\/MenuItem\/LotsOfMenuItemsTest.java","additions":30,"deletions":43,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -46,2 +46,3 @@\n-                    Press pass if menu item is displayed using bold and large font else fail.\n-                    If you do not see menu at all, press fail.\"\"\";\n+                    Press Pass if menu item is displayed using bold and large font,\n+                    otherwise press Fail.\n+                    If you do not see menu at all, press Fail.\"\"\";\n@@ -54,1 +55,0 @@\n-                .testTimeOut(5)\n@@ -67,1 +67,1 @@\n-        menuBar.setFont(new Font(\"Monospaced\", 1, 24));\n+        menuBar.setFont(new Font(Font.MONOSPACED, Font.BOLD, 24));\n","filename":"test\/jdk\/java\/awt\/MenuItem\/MenuSetFontTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+import java.awt.BorderLayout;\n@@ -47,1 +48,1 @@\n-                should by the spec set blank label on all platforms.\n+                should set blank label on all platforms according to the specification.\n@@ -61,1 +62,0 @@\n-                .testTimeOut(5)\n@@ -76,0 +76,1 @@\n+            @Override\n@@ -82,0 +83,1 @@\n+            @Override\n@@ -88,0 +90,1 @@\n+            @Override\n@@ -95,3 +98,3 @@\n-        frame.add(\"North\", button1);\n-        frame.add(\"South\", button2);\n-        frame.add(\"Center\", button3);\n+        frame.add(button1, BorderLayout.NORTH);\n+        frame.add(button2, BorderLayout.CENTER);\n+        frame.add(button3, BorderLayout.SOUTH);\n","filename":"test\/jdk\/java\/awt\/MenuItem\/NullOrEmptyStringLabelTest.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-                .testTimeOut(5)\n@@ -74,2 +73,2 @@\n-        MenuItem mi2 = new MenuItem(\"\\u00c4\\u00cb\\u00cf\\u00d6\\u00dc\");\n-        m.add(mi2);\n+        MenuItem mi1 = new MenuItem(\"\\u00c4\\u00cb\\u00cf\\u00d6\\u00dc\");\n+        m.add(mi1);\n@@ -80,2 +79,2 @@\n-        MenuItem mi6 = new MenuItem(\"\\u012d\");\n-        m.add(mi6);\n+        MenuItem mi2 = new MenuItem(\"\\u012d\");\n+        m.add(mi2);\n@@ -83,2 +82,2 @@\n-        MenuItem mi7 = new MenuItem(\"\\u022d\");\n-        m.add(mi7);\n+        MenuItem mi3 = new MenuItem(\"\\u022d\");\n+        m.add(mi3);\n","filename":"test\/jdk\/java\/awt\/MenuItem\/UnicodeMenuItemTest.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"}]}