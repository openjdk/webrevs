{"files":[{"patch":"@@ -30,1 +30,0 @@\n-#include \"gc\/g1\/g1CollectedHeap.hpp\"\n","filename":"src\/hotspot\/share\/compiler\/compileTask.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -90,1 +90,4 @@\n-  class Lock : StackObj {\n+  void spin_lock();\n+  void spin_unlock();\n+\n+  class SpinLocker : StackObj {\n@@ -95,4 +98,2 @@\n-    Lock(UnloadableMethodHandle* handle) : _handle(handle) {\n-      assert(_handle->_spin_lock_owner != Thread::current(), \"Re-entering already owned lock, about to deadlock\");\n-      Thread::SpinAcquire(&_handle->_spin_lock);\n-      DEBUG_ONLY(_handle->_spin_lock_owner = Thread::current();)\n+    SpinLocker(UnloadableMethodHandle* handle) : _handle(handle) {\n+      _handle->spin_lock();\n@@ -100,3 +101,2 @@\n-    ~Lock() {\n-      DEBUG_ONLY(_handle->_spin_lock_owner = nullptr;)\n-      Thread::SpinRelease(&_handle->_spin_lock);\n+    ~SpinLocker() {\n+      _handle->spin_unlock();\n","filename":"src\/hotspot\/share\/oops\/unloadableMethodHandle.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -63,0 +63,11 @@\n+inline void UnloadableMethodHandle::spin_lock() {\n+  assert(_spin_lock_owner != Thread::current(), \"Re-entering already owned lock, about to deadlock\");\n+  Thread::SpinAcquire(&_spin_lock);\n+  DEBUG_ONLY(_spin_lock_owner = Thread::current();)\n+}\n+\n+inline void UnloadableMethodHandle::spin_unlock() {\n+  DEBUG_ONLY(_spin_lock_owner = nullptr;)\n+  Thread::SpinRelease(&_spin_lock);\n+}\n+\n@@ -94,1 +105,1 @@\n-      Lock lock(this);\n+      SpinLocker locker(this);\n@@ -134,1 +145,1 @@\n-      Lock lock(this);\n+      SpinLocker locker(this);\n@@ -162,1 +173,1 @@\n-      Lock lock(this);\n+      SpinLocker locker(this);\n","filename":"src\/hotspot\/share\/oops\/unloadableMethodHandle.inline.hpp","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"}]}