{"files":[{"patch":"@@ -83,0 +83,1 @@\n+    PERMANENT,\n","filename":"src\/hotspot\/share\/oops\/unloadableMethodHandle.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    set_state(STRONG);\n+    set_state(PERMANENT);\n@@ -101,0 +101,5 @@\n+    case PERMANENT: {\n+      _method = nullptr;\n+      set_state(RELEASED);\n+      break;\n+    }\n@@ -103,2 +108,1 @@\n-      \/\/ Release only once.\n-      \/\/ This also coordinates with is_safe check.\n+      \/\/ Release handles only once.\n@@ -106,2 +110,1 @@\n-      if (get_state() == STRONG || get_state() == WEAK) {\n-        _strong_handle.release(Universe::vm_global());\n+      if (get_state() != RELEASED) {\n@@ -109,0 +112,1 @@\n+        _strong_handle.release(Universe::vm_global());\n@@ -118,0 +122,3 @@\n+  assert(_method == nullptr, \"Should be\");\n+  assert(_weak_handle.is_empty(), \"Should be\");\n+  assert(_strong_handle.is_empty(), \"Should be\");\n@@ -124,0 +131,1 @@\n+    case PERMANENT:\n@@ -143,2 +151,2 @@\n-      \/\/ Safety 2: Need to take a lock to coordinate with concurrent\n-      \/\/ release that would change the weak handle state.\n+      \/\/ Safety 2: Need to take a lock to coordinate with weak handle\n+      \/\/ modifications at release or make_always_safe.\n@@ -165,0 +173,1 @@\n+    case PERMANENT:\n@@ -172,1 +181,0 @@\n-      \/\/ Otherwise, this leaks strong handles.\n","filename":"src\/hotspot\/share\/oops\/unloadableMethodHandle.inline.hpp","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"}]}