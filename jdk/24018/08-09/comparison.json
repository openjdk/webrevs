{"files":[{"patch":"@@ -46,6 +46,5 @@\n-  oop klass_holder = method->method_holder()->klass_holder();\n-  if (klass_holder != nullptr) {\n-    \/\/ Normal class, return the holder that would block unloading.\n-    \/\/ This would be either classloader oop for non-hidden classes,\n-    \/\/ or Java mirror oop for hidden classes.\n-    return klass_holder;\n+\n+  InstanceKlass* holder = method->method_holder();\n+  if (holder->class_loader_data()->is_permanent_class_loader_data()) {\n+    \/\/ Method holder class cannot be unloaded.\n+    return nullptr;\n@@ -54,2 +53,6 @@\n-  \/\/ Null holder, the relevant class would not be unloaded.\n-  return nullptr;\n+  \/\/ Return the holder that would block unloading.\n+  \/\/ This would be either classloader oop for non-hidden classes,\n+  \/\/ or Java mirror oop for hidden classes.\n+  oop klass_holder = holder->klass_holder();\n+  assert(klass_holder != nullptr, \"Should be\");\n+  return klass_holder;\n","filename":"src\/hotspot\/share\/runtime\/unloadableMethodHandle.inline.hpp","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"}]}