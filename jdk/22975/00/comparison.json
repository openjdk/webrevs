{"files":[{"patch":"@@ -989,0 +989,3 @@\n+    } else {\n+      assert(!SystemDictionaryShared::has_class_failed_verification(ik), \"sanity\");\n+      ik->compute_has_loops_flag_for_methods();\n@@ -990,1 +993,0 @@\n-    ik->compute_has_loops_flag_for_methods();\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8346457\n+ * @summary VM should not crash during AOT cache creation when encountering a\n+ *          class with VerifyError.\n+ * @requires vm.cds\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\n+ * @compile test-classes\/BadLookupSwitch.jcod\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar badlookupswitch.jar BadLookupSwitch\n+ * @run driver CreateAOTCacheVerifyError\n+ *\/\n+\n+import jdk.test.lib.helpers.ClassFileInstaller;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class CreateAOTCacheVerifyError {\n+\n+    public static void main(String[] args) throws Exception {\n+        String appJar = ClassFileInstaller.getJarPath(\"badlookupswitch.jar\");\n+        String classList[] = { BadLookupSwitch.class.getName() };\n+        OutputAnalyzer out = TestCommon.testDump(appJar, classList);\n+        out.shouldContain(\"Preload Warning: Verification failed for BadLookupSwitch\");\n+        out.shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/CreateAOTCacheVerifyError.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,118 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+class BadLookupSwitch {\n+  0xCAFEBABE;\n+  0;\n+  50;\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #12; \/\/ #1 at 0x0A\n+    class #15; \/\/ #2 at 0x0D\n+    Method #2 #4; \/\/ #3 at 0x10\n+    NameAndType #6 #5; \/\/ #4 at 0x15\n+    Utf8 \"()V\"; \/\/ #5 at 0x1A\n+    Utf8 \"<init>\"; \/\/ #6 at 0x20\n+    Utf8 \"Code\"; \/\/ #7 at 0x29\n+    Utf8 \"ConstantValue\"; \/\/ #8 at 0x30\n+    Utf8 \"Exceptions\"; \/\/ #9 at 0x40\n+    Utf8 \"LineNumberTable\"; \/\/ #10 at 0x4D\n+    Utf8 \"LocalVariables\"; \/\/ #11 at 0x5F\n+    Utf8 \"BadLookupSwitch\"; \/\/ #12 at 0x70\n+    Utf8 \"SourceFile\"; \/\/ #13 at 0x76\n+    Utf8 \"f.java\"; \/\/ #14 at 0x83\n+    Utf8 \"java\/lang\/Object\"; \/\/ #15 at 0x8C\n+    Utf8 \"m\"; \/\/ #16 at 0x9F\n+    Utf8 \"StackMapTable\"; \/\/ #17    \n+  } \/\/ Constant Pool\n+\n+  0x0020; \/\/ access\n+  #1;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [0] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [0] { \/\/ fields\n+  } \/\/ fields\n+\n+  [2] { \/\/ methods\n+    { \/\/ Member at 0xAF\n+      0x0001; \/\/ access\n+      #16; \/\/ name_cpx\n+      #5; \/\/ sig_cpx\n+      [] {  \/\/ Attributes\n+        Attr(#7) { \/\/ Code at 0xB7\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[29] {\n+            0x04AB00000000001B; \/\/ iconst_1;\n+\/* right:\n+            0x0000000200000001; \/\/ lookupswitch 27 2 1 27 2 27;\n+            0x0000001B00000002;\n+            0x0000001B;\n+end right *\/\n+\/\/ wrong:\n+            0x0000000200000002; \/\/ lookupswitch 27 2 2 27 1 27;\n+            0x0000001B00000001;\n+            0x0000001B;\n+\/\/ end wrong\n+            0xB1;               \/\/ return\n+          };\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] {  \/\/ Attributes\n+            Attr(#17) { \/\/ StackMap\n+              [] { \/\/ \n+                255b,  28, []{O,1}, []{};\n+              }\n+            } \/\/ end StackMap\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member at 0xD6\n+      0x0000; \/\/ access\n+      #6; \/\/ name_cpx\n+      #5; \/\/ sig_cpx\n+      [1] {  \/\/ Attributes\n+        Attr(#7) { \/\/ Code at 0xDE\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[5] {\n+            0x2AB70003B1;\n+          };\n+          [0] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] {  \/\/ Attributes\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+  } \/\/ methods\n+\n+  [] {  \/\/ Attributes\n+  } \/\/ Attributes\n+} \/\/ end class\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\/BadLookupSwitch.jcod","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"}]}