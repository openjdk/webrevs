{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,4 +44,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = { \"java.lang.management.ManagementPermission\", \"monitor\", nullptr };\n-    return p;\n-  }\n","filename":"src\/hotspot\/os\/linux\/mallocInfoDcmd.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = { \"java.lang.management.ManagementPermission\", \"control\", nullptr };\n-    return p;\n-  }\n","filename":"src\/hotspot\/os\/linux\/trimCHeapDCmd.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,5 +49,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n","filename":"src\/hotspot\/share\/classfile\/classLoaderHierarchyDCmd.hpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -61,6 +61,0 @@\n-\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n","filename":"src\/hotspot\/share\/classfile\/classLoaderStats.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,4 +62,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -87,4 +83,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -112,4 +104,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -137,4 +125,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -162,4 +146,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -187,4 +167,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -228,4 +204,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"monitor\", nullptr};\n-    return p;\n-  }\n","filename":"src\/hotspot\/share\/jfr\/dcmd\/jfrDcmds.hpp","additions":1,"deletions":29,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -61,5 +61,0 @@\n-\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"control\", nullptr};\n-    return p;\n-  }\n","filename":"src\/hotspot\/share\/logging\/logDiagnosticCommand.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,5 +55,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceDCmd.hpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,5 +56,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n","filename":"src\/hotspot\/share\/nmt\/nmtDCmd.hpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -154,2 +154,1 @@\n-  \/\/ These commands won't be exported via the DiagnosticCommandMBean until an\n-  \/\/ appropriate permission is created for them\n+  \/\/ These commands not currently exported via the DiagnosticCommandMBean\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -67,5 +67,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.util.PropertyPermission\",\n-                        \"java.vm.version\", \"read\"};\n-    return p;\n-  }\n@@ -83,5 +78,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -104,5 +94,0 @@\n-    static const JavaPermission permission() {\n-      JavaPermission p = {\"java.util.PropertyPermission\",\n-                          \"*\", \"read\"};\n-      return p;\n-    }\n@@ -126,5 +111,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -149,5 +129,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -167,5 +142,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -189,5 +159,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -211,5 +176,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -243,5 +203,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -287,5 +242,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-      \"monitor\", nullptr};\n-      return p;\n-  }\n@@ -306,5 +256,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-      \"monitor\", nullptr};\n-      return p;\n-  }\n@@ -337,5 +282,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -363,5 +303,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -390,5 +325,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -415,5 +345,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -439,5 +364,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -549,6 +469,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n-\n@@ -571,5 +485,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -595,5 +504,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -616,5 +520,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -636,5 +535,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -662,5 +556,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -683,5 +572,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -703,5 +587,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -726,5 +605,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -746,5 +620,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -812,5 +681,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -835,5 +699,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -858,5 +717,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -881,5 +735,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -905,5 +754,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -932,4 +776,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\", \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -955,5 +795,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"monitor\", nullptr};\n-    return p;\n-  }\n@@ -973,5 +808,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n@@ -991,5 +821,0 @@\n-  static const JavaPermission permission() {\n-    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n-                        \"control\", nullptr};\n-    return p;\n-  }\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":0,"deletions":175,"binary":false,"changes":175,"status":"modified"},{"patch":"@@ -590,1 +590,1 @@\n-                    factory->permission(), factory->num_arguments(),\n+                    factory->num_arguments(),\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,10 +43,0 @@\n-\/\/ Warning: strings referenced by the JavaPermission struct are passed to\n-\/\/ the native part of the JDK. Avoid use of dynamically allocated strings\n-\/\/ that could be de-allocated before the JDK native code had time to\n-\/\/ convert them into Java Strings.\n-struct JavaPermission {\n-  const char* _class;\n-  const char* _name;\n-  const char* _action;\n-};\n-\n@@ -130,1 +120,0 @@\n-  const JavaPermission _permission;  \/* Java Permission required to execute this command if any *\/\n@@ -137,1 +126,0 @@\n-          JavaPermission permission,\n@@ -140,1 +128,1 @@\n-  : _name(name), _description(description), _impact(impact), _permission(permission),\n+  : _name(name), _description(description), _impact(impact),\n@@ -146,1 +134,0 @@\n-  const JavaPermission& permission() const { return _permission; }\n@@ -264,13 +251,0 @@\n-  \/\/ The permission() method returns the description of Java Permission. This\n-  \/\/ permission is required when the diagnostic command is invoked via the\n-  \/\/ DiagnosticCommandMBean. The rationale for this permission check is that\n-  \/\/ the DiagnosticCommandMBean can be used to perform remote invocations of\n-  \/\/ diagnostic commands through the PlatformMBeanServer. The (optional) Java\n-  \/\/ Permission associated with each diagnostic command should ease the work\n-  \/\/ of system administrators to write policy files granting permissions to\n-  \/\/ execute diagnostic commands to remote users. Any diagnostic command with\n-  \/\/ a potential impact on security should overwrite this method.\n-  static const JavaPermission permission() {\n-    JavaPermission p = {nullptr, nullptr, nullptr};\n-    return p;\n-  }\n@@ -390,1 +364,0 @@\n-  virtual const JavaPermission permission() const = 0;\n@@ -434,3 +407,0 @@\n-  const JavaPermission permission() const {\n-    return DCmdClass::permission();\n-  }\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.hpp","additions":1,"deletions":31,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2016,4 +2016,0 @@\n-    JavaPermission p = info->permission();\n-    infoArray[i].permission_class = p._class;\n-    infoArray[i].permission_name = p._name;\n-    infoArray[i].permission_action = p._action;\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,20 +141,0 @@\n- *     <th scope=\"row\">dcmd.permissionClass<\/th><td>String<\/td>\n- *     <td>Some diagnostic command might require a specific permission to be\n- *          executed, in addition to the MBeanPermission to invoke their\n- *          associated MBean operation. This field returns the fully qualified\n- *          name of the permission class or null if no permission is required\n- *   <\/td>\n- *   <\/tr>\n- *   <tr>\n- *     <th scope=\"row\">dcmd.permissionName<\/th><td>String<\/td>\n- *     <td>The fist argument of the permission required to execute this\n- *          diagnostic command or null if no permission is required<\/td>\n- *   <\/tr>\n- *   <tr>\n- *     <th scope=\"row\">dcmd.permissionAction<\/th><td>String<\/td>\n- *     <td>The second argument of the permission required to execute this\n- *          diagnostic command or null if the permission constructor has only\n- *          one argument (like the ManagementPermission) or if no permission\n- *          is required<\/td>\n- *   <\/tr>\n- *   <tr>\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/DiagnosticCommandMBean.java","additions":1,"deletions":21,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.security.Permission;\n@@ -107,1 +106,0 @@\n-        Permission permission;\n@@ -114,35 +112,0 @@\n-            this.permission = null;\n-            Exception cause = null;\n-            if (info.getPermissionClass() != null) {\n-                try {\n-                    Class<?> c = Class.forName(info.getPermissionClass());\n-                    if (info.getPermissionAction() == null) {\n-                        try {\n-                            Constructor<?> constructor = c.getConstructor(String.class);\n-                            permission = (Permission) constructor.newInstance(info.getPermissionName());\n-\n-                        } catch (InstantiationException | IllegalAccessException\n-                                | IllegalArgumentException | InvocationTargetException\n-                                | NoSuchMethodException | SecurityException ex) {\n-                            cause = ex;\n-                        }\n-                    }\n-                    if (permission == null) {\n-                        try {\n-                            Constructor<?> constructor = c.getConstructor(String.class, String.class);\n-                            permission = (Permission) constructor.newInstance(\n-                                    info.getPermissionName(),\n-                                    info.getPermissionAction());\n-                        } catch (InstantiationException | IllegalAccessException\n-                                | IllegalArgumentException | InvocationTargetException\n-                                | NoSuchMethodException | SecurityException ex) {\n-                            cause = ex;\n-                        }\n-                    }\n-                } catch (ClassNotFoundException ex) { }\n-                if (permission == null) {\n-                    InstantiationException iex =\n-                            new InstantiationException(\"Unable to instantiate required permission\");\n-                    iex.initCause(cause);\n-                }\n-            }\n@@ -152,7 +115,0 @@\n-            if (permission != null) {\n-                @SuppressWarnings(\"removal\")\n-                SecurityManager sm = System.getSecurityManager();\n-                if (sm != null) {\n-                    sm.checkPermission(permission);\n-                }\n-            }\n@@ -307,3 +263,0 @@\n-        map.put(\"dcmd.permissionClass\", w.info.getPermissionClass());\n-        map.put(\"dcmd.permissionName\", w.info.getPermissionName());\n-        map.put(\"dcmd.permissionAction\", w.info.getPermissionAction());\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/internal\/DiagnosticCommandImpl.java","additions":0,"deletions":47,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,3 +41,0 @@\n-    private final String permissionClass;\n-    private final String permissionName;\n-    private final String permissionAction;\n@@ -76,37 +73,0 @@\n-    \/**\n-     * Returns the name of the permission class required to be allowed\n-     *         to invoke the diagnostic command, or null if no permission\n-     *         is required.\n-     *\n-     * @return the name of the permission class name required to be allowed\n-     *         to invoke the diagnostic command, or null if no permission\n-     *         is required\n-     *\/\n-    String getPermissionClass() {\n-        return permissionClass;\n-    }\n-\n-    \/**\n-     * Returns the permission name required to be allowed to invoke the\n-     *         diagnostic command, or null if no permission is required.\n-     *\n-     * @return the permission name required to be allowed to invoke the\n-     *         diagnostic command, or null if no permission is required\n-     *\/\n-    String getPermissionName() {\n-        return permissionName;\n-    }\n-\n-    \/**\n-     * Returns the permission action required to be allowed to invoke the\n-     *         diagnostic command, or null if no permission is required or\n-     *         if the permission has no action specified.\n-     *\n-     * @return the permission action required to be allowed to invoke the\n-     *         diagnostic command, or null if no permission is required or\n-     *         if the permission has no action specified\n-     *\/\n-    String getPermissionAction() {\n-        return permissionAction;\n-    }\n-\n@@ -137,2 +97,1 @@\n-                                    String impact, String permissionClass,\n-                                    String permissionName, String permissionAction,\n+                                    String impact,\n@@ -145,3 +104,0 @@\n-        this.permissionClass = permissionClass;\n-        this.permissionName = permissionName;\n-        this.permissionAction = permissionAction;\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/internal\/DiagnosticCommandInfo.java","additions":2,"deletions":46,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -194,1 +194,1 @@\n-      \/\/ Ensure capacity for 6 + 3 local refs:\n+      \/\/ Ensure capacity for 6 local refs:\n@@ -196,2 +196,1 @@\n-      \/\/  3 => permission class, name, action\n-      (*env)->PushLocalFrame(env, 6 + 3);\n+      (*env)->PushLocalFrame(env, 6);\n@@ -221,1 +220,1 @@\n-                                \"(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;ZLjava\/util\/List;)V\",\n+                                \"(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;ZLjava\/util\/List;)V\",\n@@ -223,3 +222,0 @@\n-                                dcmd_info_array[i].permission_class==NULL?NULL:(*env)->NewStringUTF(env,dcmd_info_array[i].permission_class),\n-                                dcmd_info_array[i].permission_name==NULL?NULL:(*env)->NewStringUTF(env,dcmd_info_array[i].permission_name),\n-                                dcmd_info_array[i].permission_action==NULL?NULL:(*env)->NewStringUTF(env,dcmd_info_array[i].permission_action),\n","filename":"src\/jdk.management\/share\/native\/libmanagement_ext\/DiagnosticCommandImpl.c","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"}]}