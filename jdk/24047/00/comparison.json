{"files":[{"patch":"@@ -1453,0 +1453,10 @@\n+  void fminm_h(FloatRegister Rd, FloatRegister Rs1, FloatRegister Rs2) {\n+    assert_cond(UseZfa);\n+    fp_base<H_16_hp, 0b00101>(Rd, Rs1, Rs2, 0b010);\n+  }\n+\n+  void fmaxm_h(FloatRegister Rd, FloatRegister Rs1, FloatRegister Rs2) {\n+    assert_cond(UseZfa);\n+    fp_base<H_16_hp, 0b00101>(Rd, Rs1, Rs2, 0b011);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -8385,0 +8385,1 @@\n+  predicate(!UseZfa);\n@@ -8403,0 +8404,30 @@\n+instruct minHF_reg_zfa(fRegF dst, fRegF src1, fRegF src2)\n+%{\n+  predicate(UseZfa);\n+  match(Set dst (MinHF src1 src2));\n+\n+  format %{ \"min_hf $dst, $src1, $src2\" %}\n+\n+  ins_encode %{\n+    __ fminm_h(as_FloatRegister($dst$$reg),\n+               as_FloatRegister($src1$$reg), as_FloatRegister($src2$$reg));\n+  %}\n+\n+  ins_pipe(pipe_class_default);\n+%}\n+\n+instruct maxHF_reg_zfa(fRegF dst, fRegF src1, fRegF src2)\n+%{\n+  predicate(UseZfa);\n+  match(Set dst (MaxHF src1 src2));\n+\n+  format %{ \"max_hf $dst, $src1, $src2\" %}\n+\n+  ins_encode %{\n+    __ fmaxm_h(as_FloatRegister($dst$$reg),\n+               as_FloatRegister($src1$$reg), as_FloatRegister($src2$$reg));\n+  %}\n+\n+  ins_pipe(pipe_class_default);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":31,"deletions":0,"binary":false,"changes":31,"status":"modified"}]}