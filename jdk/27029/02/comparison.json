{"files":[{"patch":"@@ -37,0 +37,1 @@\n+import jdk.internal.classfile.impl.StackMapGenerator;\n@@ -104,1 +105,1 @@\n-        int ITEM_TOP = 0;\n+        int ITEM_TOP = StackMapGenerator.ITEM_TOP;\n@@ -107,1 +108,1 @@\n-        int ITEM_INTEGER = 1;\n+        int ITEM_INTEGER = StackMapGenerator.ITEM_INTEGER;\n@@ -110,1 +111,1 @@\n-        int ITEM_FLOAT = 2;\n+        int ITEM_FLOAT = StackMapGenerator.ITEM_FLOAT;\n@@ -113,1 +114,1 @@\n-        int ITEM_DOUBLE = 3;\n+        int ITEM_DOUBLE = StackMapGenerator.ITEM_DOUBLE;\n@@ -116,1 +117,1 @@\n-        int ITEM_LONG = 4;\n+        int ITEM_LONG = StackMapGenerator.ITEM_LONG;\n@@ -119,1 +120,1 @@\n-        int ITEM_NULL = 5;\n+        int ITEM_NULL = StackMapGenerator.ITEM_NULL;\n@@ -122,1 +123,1 @@\n-        int ITEM_UNINITIALIZED_THIS = 6;\n+        int ITEM_UNINITIALIZED_THIS = StackMapGenerator.ITEM_UNINITIALIZED_THIS;\n@@ -125,1 +126,1 @@\n-        int ITEM_OBJECT = 7;\n+        int ITEM_OBJECT = StackMapGenerator.ITEM_OBJECT;\n@@ -128,1 +129,1 @@\n-        int ITEM_UNINITIALIZED = 8;\n+        int ITEM_UNINITIALIZED = StackMapGenerator.ITEM_UNINITIALIZED;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/attribute\/StackMapFrameInfo.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import static jdk.internal.classfile.impl.StackMapGenerator.*;\n@@ -295,1 +296,1 @@\n-            if (frameType < 64) {\n+            if (frameType <= SAME_FRAME_END) {\n@@ -299,1 +300,1 @@\n-            else if (frameType < 128) {\n+            else if (frameType <= SAME_LOCALS_1_STACK_ITEM_FRAME_END) {\n@@ -305,1 +306,1 @@\n-                    case 247 -> {\n+                    case SAME_LOCALS_1_STACK_ITEM_EXTENDED -> {\n@@ -309,1 +310,1 @@\n-                    case 248, 249, 250, 251 -> {\n+                    case CHOP_FRAME_START, CHOP_FRAME_START + 1, CHOP_FRAME_END, SAME_FRAME_EXTENDED -> {\n@@ -313,1 +314,1 @@\n-                    case 252, 253, 254 -> {\n+                    case APPEND_FRAME_START, APPEND_FRAME_START + 1, APPEND_FRAME_END -> {\n@@ -315,1 +316,1 @@\n-                        int k = frameType - 251;\n+                        int k = frameType - APPEND_FRAME_START + 1;\n@@ -321,1 +322,1 @@\n-                    case 255 -> {\n+                    case FULL_FRAME -> {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/CodeImpl.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n-import static java.lang.classfile.attribute.StackMapFrameInfo.VerificationTypeInfo.*;\n@@ -49,0 +48,1 @@\n+import static jdk.internal.classfile.impl.StackMapGenerator.*;\n@@ -52,3 +52,0 @@\n-    private static final int\n-                    SAME_LOCALS_1_STACK_ITEM_EXTENDED = 247,\n-                    SAME_EXTENDED = 251;\n@@ -139,1 +136,1 @@\n-                if (diffLocalsSize == 0 && offsetDelta < 64) { \/\/same frame\n+                if (diffLocalsSize == 0 && offsetDelta <= SAME_FRAME_END) { \/\/same frame\n@@ -142,1 +139,1 @@\n-                    out.writeU1U2(251 + diffLocalsSize, offsetDelta);\n+                    out.writeU1U2(SAME_FRAME_EXTENDED + diffLocalsSize, offsetDelta);\n@@ -148,2 +145,2 @@\n-            if (offsetDelta < 64) {  \/\/same locals 1 stack item frame\n-                out.writeU1(64 + offsetDelta);\n+            if (offsetDelta <= SAME_LOCALS_1_STACK_ITEM_FRAME_END  - SAME_LOCALS_1_STACK_ITEM_FRAME_START) {  \/\/same locals 1 stack item frame\n+                out.writeU1(SAME_LOCALS_1_STACK_ITEM_FRAME_START + offsetDelta);\n@@ -151,1 +148,1 @@\n-                out.writeU1U2(247, offsetDelta);\n+                out.writeU1U2(SAME_LOCALS_1_STACK_ITEM_EXTENDED, offsetDelta);\n@@ -157,1 +154,1 @@\n-        out.writeU1U2U2(255, offsetDelta, fr.locals().size());\n+        out.writeU1U2U2(FULL_FRAME, offsetDelta, fr.locals().size());\n@@ -191,1 +188,1 @@\n-            if (frameType < 64) {\n+            if (frameType <= SAME_FRAME_END) {\n@@ -194,2 +191,2 @@\n-            } else if (frameType < 128) {\n-                bci += frameType - 63;\n+            } else if (frameType <= SAME_LOCALS_1_STACK_ITEM_FRAME_END) {\n+                bci += frameType - SAME_LOCALS_1_STACK_ITEM_FRAME_START + 1;\n@@ -203,2 +200,2 @@\n-                } else if (frameType < SAME_EXTENDED) {\n-                    locals = locals.subList(0, locals.size() + frameType - SAME_EXTENDED);\n+                } else if (frameType < SAME_FRAME_EXTENDED) {\n+                    locals = locals.subList(0, locals.size() + frameType - SAME_FRAME_EXTENDED);\n@@ -206,1 +203,1 @@\n-                } else if (frameType == SAME_EXTENDED) {\n+                } else if (frameType == SAME_FRAME_EXTENDED) {\n@@ -208,1 +205,1 @@\n-                } else if (frameType < SAME_EXTENDED + 4) {\n+                } else if (frameType <= APPEND_FRAME_END) {\n@@ -210,1 +207,1 @@\n-                    var newLocals = locals.toArray(new VerificationTypeInfo[actSize + frameType - SAME_EXTENDED]);\n+                    var newLocals = locals.toArray(new VerificationTypeInfo[actSize + frameType - SAME_FRAME_EXTENDED]);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapDecoder.java","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -169,1 +169,2 @@\n-    private static final int ITEM_TOP = 0,\n+    public static final int\n+            ITEM_TOP = 0,\n@@ -183,1 +184,16 @@\n-            ITEM_DOUBLE_2ND = 14;\n+            ITEM_DOUBLE_2ND = 14,\n+            ITEM_BOGUS = -1;\n+\n+    \/\/ Ranges represented by these constants are inclusive on both ends\n+    public static final int\n+            SAME_FRAME_END = 63,\n+            SAME_LOCALS_1_STACK_ITEM_FRAME_START = 64,\n+            SAME_LOCALS_1_STACK_ITEM_FRAME_END = 127,\n+            RESERVED_END = 246,\n+            SAME_LOCALS_1_STACK_ITEM_EXTENDED = 247,\n+            CHOP_FRAME_START = 248,\n+            CHOP_FRAME_END = 250,\n+            SAME_FRAME_EXTENDED = 251,\n+            APPEND_FRAME_START = 252,\n+            APPEND_FRAME_END = 254,\n+            FULL_FRAME = 255;\n@@ -1232,1 +1248,1 @@\n-                    if (diffLocalsSize == 0 && offsetDelta < 64) { \/\/same frame\n+                    if (diffLocalsSize == 0 && offsetDelta <= SAME_FRAME_END) { \/\/same frame\n@@ -1235,1 +1251,1 @@\n-                        out.writeU1U2(251 + diffLocalsSize, offsetDelta);\n+                        out.writeU1U2(SAME_FRAME_EXTENDED + diffLocalsSize, offsetDelta);\n@@ -1241,2 +1257,2 @@\n-                if (offsetDelta < 64) {  \/\/same locals 1 stack item frame\n-                    out.writeU1(64 + offsetDelta);\n+                if (offsetDelta <= SAME_LOCALS_1_STACK_ITEM_FRAME_END  - SAME_LOCALS_1_STACK_ITEM_FRAME_START) {  \/\/same locals 1 stack item frame\n+                    out.writeU1(SAME_LOCALS_1_STACK_ITEM_FRAME_START + offsetDelta);\n@@ -1244,1 +1260,1 @@\n-                    out.writeU1U2(247, offsetDelta);\n+                    out.writeU1U2(SAME_LOCALS_1_STACK_ITEM_EXTENDED, offsetDelta);\n@@ -1250,1 +1266,1 @@\n-            out.writeU1U2U2(255, offsetDelta, localsSize);\n+            out.writeU1U2U2(FULL_FRAME, offsetDelta, localsSize);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+import static jdk.internal.classfile.impl.StackMapGenerator.*;\n@@ -452,6 +453,6 @@\n-        if (ft < 64) return 1;\n-        if (ft < 128) return 1 + verificationTypeSize(frame.stack().getFirst());\n-        if (ft > 246) {\n-            if (ft == 247) return 3 + verificationTypeSize(frame.stack().getFirst());\n-            if (ft < 252) return 3;\n-            if (ft < 255) {\n+        if (ft <= SAME_FRAME_END) return 1;\n+        if (ft <= SAME_LOCALS_1_STACK_ITEM_FRAME_END) return 1 + verificationTypeSize(frame.stack().getFirst());\n+        if (ft > RESERVED_END) {\n+            if (ft == SAME_LOCALS_1_STACK_ITEM_EXTENDED) return 3 + verificationTypeSize(frame.stack().getFirst());\n+            if (ft <= SAME_FRAME_EXTENDED) return 3;\n+            if (ft <= APPEND_FRAME_END) {\n@@ -460,1 +461,2 @@\n-                for (int i = loc.size() + 251 - ft; i < loc.size(); i++) {\n+                var k = ft - APPEND_FRAME_START + 1;\n+                for (int i = loc.size() - k; i < loc.size(); i++) {\n@@ -465,1 +467,1 @@\n-            if (ft == 255) {\n+            if (ft == FULL_FRAME) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/ParserVerifier.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,3 +30,1 @@\n-import static jdk.internal.classfile.impl.verifier.VerificationType.ITEM_Object;\n-import static jdk.internal.classfile.impl.verifier.VerificationType.ITEM_Uninitialized;\n-import static jdk.internal.classfile.impl.verifier.VerificationType.ITEM_UninitializedThis;\n+import static jdk.internal.classfile.impl.StackMapGenerator.*;\n@@ -161,5 +159,0 @@\n-        private static final int\n-                        SAME_LOCALS_1_STACK_ITEM_EXTENDED = 247,\n-                        SAME_EXTENDED = 251,\n-                        FULL = 255;\n-\n@@ -255,1 +248,1 @@\n-            if (tag < ITEM_UninitializedThis) {\n+            if (tag < ITEM_UNINITIALIZED_THIS) {\n@@ -258,1 +251,1 @@\n-            if (tag == ITEM_Object) {\n+            if (tag == ITEM_OBJECT) {\n@@ -266,1 +259,1 @@\n-            if (tag == ITEM_UninitializedThis) {\n+            if (tag == ITEM_UNINITIALIZED_THIS) {\n@@ -272,1 +265,1 @@\n-            if (tag == ITEM_Uninitialized) {\n+            if (tag == ITEM_UNINITIALIZED) {\n@@ -288,1 +281,1 @@\n-            if (frame_type < 64) {\n+            if (frame_type <= SAME_FRAME_END) {\n@@ -305,1 +298,1 @@\n-            if (frame_type < 128) {\n+            if (frame_type <= SAME_LOCALS_1_STACK_ITEM_FRAME_END) {\n@@ -307,1 +300,1 @@\n-                    offset = frame_type - 64;\n+                    offset = frame_type - SAME_LOCALS_1_STACK_ITEM_FRAME_START;\n@@ -312,1 +305,1 @@\n-                    offset = _prev_frame.offset() + frame_type - 63;\n+                    offset = _prev_frame.offset() + frame_type - SAME_LOCALS_1_STACK_ITEM_FRAME_START + 1;\n@@ -359,1 +352,1 @@\n-            if (frame_type <= SAME_EXTENDED) {\n+            if (frame_type <= SAME_FRAME_EXTENDED) {\n@@ -362,1 +355,1 @@\n-                int chops = SAME_EXTENDED - frame_type;\n+                int chops = SAME_FRAME_EXTENDED - frame_type;\n@@ -392,2 +385,2 @@\n-            } else if (frame_type < SAME_EXTENDED + 4) {\n-                int appends = frame_type - SAME_EXTENDED;\n+            } else if (frame_type <= APPEND_FRAME_END) {\n+                int appends = frame_type - APPEND_FRAME_START + 1;\n@@ -421,1 +414,1 @@\n-            if (frame_type == FULL) {\n+            if (frame_type == FULL_FRAME) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/VerificationTable.java","additions":14,"deletions":21,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import static jdk.internal.classfile.impl.StackMapGenerator.*;\n@@ -43,12 +44,0 @@\n-    static final int\n-            ITEM_Top = 0,\n-            ITEM_Integer = 1,\n-            ITEM_Float = 2,\n-            ITEM_Double = 3,\n-            ITEM_Long = 4,\n-            ITEM_Null = 5,\n-            ITEM_UninitializedThis = 6,\n-            ITEM_Object = 7,\n-            ITEM_Uninitialized = 8,\n-            ITEM_Bogus = -1;\n-\n@@ -95,3 +84,0 @@\n-    private static final int\n-            ITEM_Boolean = 9, ITEM_Byte = 10, ITEM_Short = 11, ITEM_Char = 12,\n-            ITEM_Long_2nd = 13, ITEM_Double_2nd = 14;\n@@ -119,11 +105,11 @@\n-                            Bogus                            = (ITEM_Bogus            << 2 * BitsPerByte) | Primitive,\n-                            Boolean                        = (ITEM_Boolean        << 2 * BitsPerByte) | Category1,\n-                            Byte                             = (ITEM_Byte             << 2 * BitsPerByte) | Category1,\n-                            Short                            = (ITEM_Short            << 2 * BitsPerByte) | Category1,\n-                            Char                             = (ITEM_Char             << 2 * BitsPerByte) | Category1,\n-                            Integer                        = (ITEM_Integer        << 2 * BitsPerByte) | Category1,\n-                            Float                            = (ITEM_Float            << 2 * BitsPerByte) | Category1,\n-                            Long                             = (ITEM_Long             << 2 * BitsPerByte) | Category2,\n-                            Double                         = (ITEM_Double         << 2 * BitsPerByte) | Category2,\n-                            Long_2nd                     = (ITEM_Long_2nd     << 2 * BitsPerByte) | Category2_2nd,\n-                            Double_2nd                 = (ITEM_Double_2nd << 2 * BitsPerByte) | Category2_2nd,\n+                            Bogus                            = (ITEM_BOGUS            << 2 * BitsPerByte) | Primitive,\n+                            Boolean                        = (ITEM_BOOLEAN        << 2 * BitsPerByte) | Category1,\n+                            Byte                             = (ITEM_BYTE             << 2 * BitsPerByte) | Category1,\n+                            Short                            = (ITEM_SHORT            << 2 * BitsPerByte) | Category1,\n+                            Char                             = (ITEM_CHAR             << 2 * BitsPerByte) | Category1,\n+                            Integer                        = (ITEM_INTEGER        << 2 * BitsPerByte) | Category1,\n+                            Float                            = (ITEM_FLOAT            << 2 * BitsPerByte) | Category1,\n+                            Long                             = (ITEM_LONG             << 2 * BitsPerByte) | Category2,\n+                            Double                         = (ITEM_DOUBLE         << 2 * BitsPerByte) | Category2,\n+                            Long_2nd                     = (ITEM_LONG_2ND     << 2 * BitsPerByte) | Category2_2nd,\n+                            Double_2nd                 = (ITEM_DOUBLE_2ND << 2 * BitsPerByte) | Category2_2nd,\n@@ -367,6 +353,6 @@\n-            case ITEM_Top:         return bogus_type;\n-            case ITEM_Integer: return integer_type;\n-            case ITEM_Float:     return float_type;\n-            case ITEM_Double:    return double_type;\n-            case ITEM_Long:        return long_type;\n-            case ITEM_Null:        return null_type;\n+            case ITEM_TOP:         return bogus_type;\n+            case ITEM_INTEGER: return integer_type;\n+            case ITEM_FLOAT:     return float_type;\n+            case ITEM_DOUBLE:    return double_type;\n+            case ITEM_LONG:        return long_type;\n+            case ITEM_NULL:        return null_type;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/verifier\/VerificationType.java","additions":18,"deletions":32,"binary":false,"changes":50,"status":"modified"}]}