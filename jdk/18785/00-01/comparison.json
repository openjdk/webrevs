{"files":[{"patch":"@@ -282,1 +282,1 @@\n-    __ restore_cpu_control_state_after_jni(t0, t1);\n+    __ restore_cpu_control_state_after_jni(t0);\n","filename":"src\/hotspot\/cpu\/riscv\/downcallLinker_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1170,1 +1170,1 @@\n-void MacroAssembler::restore_cpu_control_state_after_jni(Register tmp1, Register tmp2) {\n+void MacroAssembler::restore_cpu_control_state_after_jni(Register tmp) {\n@@ -1173,2 +1173,1 @@\n-    frrm(tmp1);\n-    mv(tmp2, RoundingMode::rne);\n+    frrm(tmp);\n@@ -1177,1 +1176,2 @@\n-    beq(tmp1, tmp2, skip_fsrmi);        \/\/ Only reset FRM if it's wrong\n+    guarantee(RoundingMode::rne == 0, \"must be\");\n+    beq(tmp, zr, skip_fsrmi);        \/\/ Only reset FRM if it's wrong\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -585,1 +585,1 @@\n-  void restore_cpu_control_state_after_jni(Register tmp1, Register tmp2);\n+  void restore_cpu_control_state_after_jni(Register tmp);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1713,1 +1713,1 @@\n-  __ restore_cpu_control_state_after_jni(t0, t1);\n+  __ restore_cpu_control_state_after_jni(t0);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1161,1 +1161,1 @@\n-  __ restore_cpu_control_state_after_jni(t0, t1);\n+  __ restore_cpu_control_state_after_jni(t0);\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}