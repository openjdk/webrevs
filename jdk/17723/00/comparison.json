{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2011, 2023, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Red Hat Inc. All rights reserved.\n@@ -39,1 +39,1 @@\n-StaticHugePageSupport::StaticHugePageSupport() :\n+ExplicitHugePageSupport::ExplicitHugePageSupport() :\n@@ -42,1 +42,1 @@\n-os::PageSizes StaticHugePageSupport::pagesizes() const {\n+os::PageSizes ExplicitHugePageSupport::pagesizes() const {\n@@ -47,1 +47,1 @@\n-size_t StaticHugePageSupport::default_hugepage_size() const {\n+size_t ExplicitHugePageSupport::default_hugepage_size() const {\n@@ -135,1 +135,1 @@\n-void StaticHugePageSupport::print_on(outputStream* os) {\n+void ExplicitHugePageSupport::print_on(outputStream* os) {\n@@ -137,1 +137,1 @@\n-    os->print_cr(\"Static hugepage support:\");\n+    os->print_cr(\"Explicit hugepage support:\");\n@@ -146,1 +146,1 @@\n-    os->print_cr(\"  Support inconsistent. JVM will not use static hugepages.\");\n+    os->print_cr(\"  Support inconsistent. JVM will not use explicit hugepages.\");\n@@ -150,1 +150,1 @@\n-void StaticHugePageSupport::scan_os() {\n+void ExplicitHugePageSupport::scan_os() {\n@@ -157,1 +157,1 @@\n-    \/\/ sure about the state of hugepage support by the kernel, so we won't use static hugepages.\n+    \/\/ sure about the state of hugepage support by the kernel, so we won't use explicit hugepages.\n@@ -310,1 +310,1 @@\n-StaticHugePageSupport HugePages::_static_hugepage_support;\n+ExplicitHugePageSupport HugePages::_explicit_hugepage_support;\n@@ -315,1 +315,1 @@\n-  _static_hugepage_support.scan_os();\n+  _explicit_hugepage_support.scan_os();\n@@ -321,1 +321,1 @@\n-  _static_hugepage_support.print_on(os);\n+  _explicit_hugepage_support.print_on(os);\n","filename":"src\/hotspot\/os\/linux\/hugepages.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2011, 2023, Red Hat Inc. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Red Hat Inc. All rights reserved.\n@@ -37,1 +37,1 @@\n-\/\/ - class StaticHugePageSupport - about static (non-THP) hugepages\n+\/\/ - class ExplicitHugePageSupport - about explicit (non-THP) hugepages\n@@ -43,1 +43,1 @@\n-class StaticHugePageSupport {\n+class ExplicitHugePageSupport {\n@@ -59,1 +59,1 @@\n-  StaticHugePageSupport();\n+  ExplicitHugePageSupport();\n@@ -125,1 +125,1 @@\n-  static StaticHugePageSupport _static_hugepage_support;\n+  static ExplicitHugePageSupport _explicit_hugepage_support;\n@@ -131,1 +131,1 @@\n-  static const StaticHugePageSupport& static_info() { return _static_hugepage_support; }\n+  static const ExplicitHugePageSupport& explicit_hugepage_info() { return _explicit_hugepage_support; }\n@@ -135,2 +135,2 @@\n-  static size_t default_static_hugepage_size()  { return _static_hugepage_support.default_hugepage_size(); }\n-  static bool supports_static_hugepages()       { return default_static_hugepage_size() > 0 && !_static_hugepage_support.inconsistent(); }\n+  static size_t default_explicit_hugepage_size() { return _explicit_hugepage_support.default_hugepage_size(); }\n+  static bool supports_explicit_hugepages()      { return default_explicit_hugepage_size() > 0 && !_explicit_hugepage_support.inconsistent(); }\n","filename":"src\/hotspot\/os\/linux\/hugepages.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -3741,1 +3741,1 @@\n-  if (page_size != HugePages::default_static_hugepage_size()) {\n+  if (page_size != HugePages::default_explicit_hugepage_size()) {\n@@ -3748,1 +3748,1 @@\n-  const os::PageSizes page_sizes = HugePages::static_info().pagesizes();\n+  const os::PageSizes page_sizes = HugePages::explicit_hugepage_info().pagesizes();\n@@ -3928,2 +3928,2 @@\n-  \/\/ Check if the OS supports static hugepages.\n-  if (!UseTransparentHugePages && !HugePages::supports_static_hugepages()) {\n+  \/\/ Check if the OS supports explicit hugepages.\n+  if (!UseTransparentHugePages && !HugePages::supports_explicit_hugepages()) {\n@@ -3948,2 +3948,2 @@\n-    \/\/ In static hugepage mode:\n-    \/\/ - os::large_page_size() is the default static hugepage size (\/proc\/meminfo \"Hugepagesize\")\n+    \/\/ In explicit hugepage mode:\n+    \/\/ - os::large_page_size() is the default explicit hugepage size (\/proc\/meminfo \"Hugepagesize\")\n@@ -3952,2 +3952,2 @@\n-    os::PageSizes all_large_pages = HugePages::static_info().pagesizes();\n-    const size_t default_large_page_size = HugePages::default_static_hugepage_size();\n+    os::PageSizes all_large_pages = HugePages::explicit_hugepage_info().pagesizes();\n+    const size_t default_large_page_size = HugePages::default_explicit_hugepage_size();\n@@ -4037,1 +4037,1 @@\n-  assert(!UseTransparentHugePages, \"Should only get here for static hugepage mode\");\n+  assert(!UseTransparentHugePages, \"Should only get here for explicit hugepage mode\");\n@@ -4071,1 +4071,1 @@\n-  const os::PageSizes page_sizes = HugePages::static_info().pagesizes();\n+  const os::PageSizes page_sizes = HugePages::explicit_hugepage_info().pagesizes();\n@@ -4150,1 +4150,1 @@\n-\/\/ static hugepages (hugetlbfs) allow application to commit large page memory\n+\/\/ explicit hugepages (hugetlbfs) allow application to commit large page memory\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-static bool using_static_hugepages()  { return UseLargePages && !UseTransparentHugePages; }\n+static bool using_explicit_hugepages()  { return UseLargePages && !UseTransparentHugePages; }\n@@ -78,1 +78,1 @@\n-  if (!using_static_hugepages()) {\n+  if (!using_explicit_hugepages()) {\n@@ -94,1 +94,1 @@\n-  if (!using_static_hugepages()) {\n+  if (!using_explicit_hugepages()) {\n@@ -121,1 +121,1 @@\n-  if (!using_static_hugepages()) {\n+  if (!using_explicit_hugepages()) {\n@@ -162,1 +162,1 @@\n-  if (!using_static_hugepages()) {\n+  if (!using_explicit_hugepages()) {\n@@ -224,1 +224,1 @@\n-    if (!using_static_hugepages()) {\n+    if (!using_explicit_hugepages()) {\n@@ -235,1 +235,1 @@\n-    if (!using_static_hugepages()) {\n+    if (!using_explicit_hugepages()) {\n@@ -326,1 +326,1 @@\n-    if (!using_static_hugepages()) {\n+    if (!using_explicit_hugepages()) {\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_linux.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023, Red Hat Inc.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat Inc.\n@@ -38,1 +38,1 @@\n-    public static class StaticHugePageConfig implements Comparable<StaticHugePageConfig> {\n+    public static class ExplicitHugePageConfig implements Comparable<ExplicitHugePageConfig> {\n@@ -50,1 +50,1 @@\n-            return \"StaticHugePageConfig{\" +\n+            return \"ExplicitHugePageConfig{\" +\n@@ -58,1 +58,1 @@\n-        public int compareTo(StaticHugePageConfig o) {\n+        public int compareTo(ExplicitHugePageConfig o) {\n@@ -63,2 +63,2 @@\n-    Set<StaticHugePageConfig> _staticHugePageConfigurations;\n-    long _staticDefaultHugePageSize = -1;\n+    Set<ExplicitHugePageConfig> _explicitHugePageConfigurations;\n+    long _explicitDefaultHugePageSize = -1;\n@@ -73,2 +73,2 @@\n-    public Set<StaticHugePageConfig> getStaticHugePageConfigurations() {\n-        return _staticHugePageConfigurations;\n+    public Set<ExplicitHugePageConfig> getExplicitHugePageConfigurations() {\n+        return _explicitHugePageConfigurations;\n@@ -77,2 +77,2 @@\n-    public long getStaticDefaultHugePageSize() {\n-        return _staticDefaultHugePageSize;\n+    public long getExplicitDefaultHugePageSize() {\n+        return _explicitDefaultHugePageSize;\n@@ -98,3 +98,3 @@\n-    \/\/ Returns true if static huge pages are supported (whether or not we have configured the pools)\n-    public boolean supportsStaticHugePages() {\n-        return _staticDefaultHugePageSize > 0 && _staticHugePageConfigurations.size() > 0;\n+    \/\/ Returns true if explicit huge pages are supported (whether or not we have configured the pools)\n+    public boolean supportsExplicitHugePages() {\n+        return _explicitDefaultHugePageSize > 0 && _explicitHugePageConfigurations.size() > 0;\n@@ -103,3 +103,3 @@\n-    public HugePageConfiguration(Set<StaticHugePageConfig> _staticHugePageConfigurations, long _staticDefaultHugePageSize, THPMode _thpMode, long _thpPageSize, ShmemTHPMode _shmemThpMode) {\n-        this._staticHugePageConfigurations = _staticHugePageConfigurations;\n-        this._staticDefaultHugePageSize = _staticDefaultHugePageSize;\n+    public HugePageConfiguration(Set<ExplicitHugePageConfig> explicitHugePageConfigurations, long explicitDefaultHugePageSize, THPMode _thpMode, long _thpPageSize, ShmemTHPMode _shmemThpMode) {\n+        this._explicitHugePageConfigurations = explicitHugePageConfigurations;\n+        this._explicitDefaultHugePageSize = explicitDefaultHugePageSize;\n@@ -114,2 +114,2 @@\n-                \"_staticHugePageConfigurations=\" + _staticHugePageConfigurations +\n-                \", _staticDefaultHugePageSize=\" + _staticDefaultHugePageSize +\n+                \"_explicitHugePageConfigurations=\" + _explicitHugePageConfigurations +\n+                \", _explicitDefaultHugePageSize=\" + _explicitDefaultHugePageSize +\n@@ -127,2 +127,2 @@\n-        return _staticDefaultHugePageSize == that._staticDefaultHugePageSize && _thpPageSize == that._thpPageSize &&\n-                Objects.equals(_staticHugePageConfigurations, that._staticHugePageConfigurations) && _thpMode == that._thpMode &&\n+        return _explicitDefaultHugePageSize == that._explicitDefaultHugePageSize && _thpPageSize == that._thpPageSize &&\n+                Objects.equals(_explicitHugePageConfigurations, that._explicitHugePageConfigurations) && _thpMode == that._thpMode &&\n@@ -148,2 +148,2 @@\n-    private static Set<StaticHugePageConfig> readSupportedHugePagesFromOS() throws IOException {\n-        TreeSet<StaticHugePageConfig> hugePageConfigs = new TreeSet<>();\n+    private static Set<ExplicitHugePageConfig> readSupportedHugePagesFromOS() throws IOException {\n+        TreeSet<ExplicitHugePageConfig> hugePageConfigs = new TreeSet<>();\n@@ -157,1 +157,1 @@\n-                    StaticHugePageConfig config = new StaticHugePageConfig();\n+                    ExplicitHugePageConfig config = new ExplicitHugePageConfig();\n@@ -260,1 +260,1 @@\n-        \/\/ [0.001s][info][pagesize] Static hugepage support:\n+        \/\/ [0.001s][info][pagesize] Explicit hugepage support:\n@@ -269,1 +269,1 @@\n-        TreeSet<StaticHugePageConfig> staticHugePageConfigs = new TreeSet<>();\n+        TreeSet<ExplicitHugePageConfig> explicitHugePageConfigs = new TreeSet<>();\n@@ -283,1 +283,1 @@\n-                StaticHugePageConfig config = new StaticHugePageConfig();\n+                ExplicitHugePageConfig config = new ExplicitHugePageConfig();\n@@ -285,1 +285,1 @@\n-                staticHugePageConfigs.add(config);\n+                explicitHugePageConfigs.add(config);\n@@ -312,1 +312,1 @@\n-        return new HugePageConfiguration(staticHugePageConfigs, defaultHugepageSize, thpMode, thpPageSize, shmemThpMode);\n+        return new HugePageConfiguration(explicitHugePageConfigs, defaultHugepageSize, thpMode, thpPageSize, shmemThpMode);\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/HugePageConfiguration.java","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023, Red Hat Inc.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Red Hat Inc.\n@@ -85,1 +85,1 @@\n-        \/\/ Static hugepages:\n+        \/\/ Explicit hugepages:\n@@ -98,5 +98,5 @@\n-        boolean haveUsableStaticHugePages = false;\n-        if (configuration.supportsStaticHugePages()) {\n-            long defaultLargePageSize = configuration.getStaticDefaultHugePageSize();\n-            Set<HugePageConfiguration.StaticHugePageConfig> configs = configuration.getStaticHugePageConfigurations();\n-            for (HugePageConfiguration.StaticHugePageConfig config: configs) {\n+        boolean haveUsableExplicitHugePages = false;\n+        if (configuration.supportsExplicitHugePages()) {\n+            long defaultLargePageSize = configuration.getExplicitDefaultHugePageSize();\n+            Set<HugePageConfiguration.ExplicitHugePageConfig> configs = configuration.getExplicitHugePageConfigurations();\n+            for (HugePageConfiguration.ExplicitHugePageConfig config: configs) {\n@@ -105,1 +105,1 @@\n-                        haveUsableStaticHugePages = true; break;\n+                        haveUsableExplicitHugePages = true; break;\n@@ -118,1 +118,1 @@\n-                 (!configuration.supportsStaticHugePages() || !haveUsableStaticHugePages)) {\n+                 (!configuration.supportsExplicitHugePages() || !haveUsableExplicitHugePages)) {\n@@ -123,2 +123,2 @@\n-                 configuration.supportsStaticHugePages() && haveUsableStaticHugePages) {\n-            out.shouldContain(\"[info][pagesize] Using the default large page size: \" + buildSizeString(configuration.getStaticDefaultHugePageSize()));\n+                 configuration.supportsExplicitHugePages() && haveUsableExplicitHugePages) {\n+            out.shouldContain(\"[info][pagesize] Using the default large page size: \" + buildSizeString(configuration.getExplicitDefaultHugePageSize()));\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDecisionsAtVMStartup.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}