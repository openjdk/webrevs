{"files":[{"patch":"@@ -59,0 +59,1 @@\n+#include \"services\/nmtDCmd.hpp\"\n@@ -83,1 +84,1 @@\n-void DCmdRegistrant::register_dcmds(){\n+void DCmd::register_dcmds(){\n@@ -156,1 +157,0 @@\n-}\n@@ -158,3 +158,1 @@\n-#ifndef HAVE_EXTRA_DCMD\n-void DCmdRegistrant::register_dcmds_ext(){\n-   \/\/ Do nothing here\n+  DCmdFactory::register_DCmdFactory(new DCmdFactoryImpl<NMTDCmd>(full_export, true, false));\n@@ -162,2 +160,0 @@\n-#endif\n-\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -313,0 +313,5 @@\n+\n+  \/\/ Convenience method to register Dcmds, without a need to change\n+  \/\/ management.cpp every time.\n+  static void register_dcmds();\n+\n@@ -455,13 +460,0 @@\n-\/\/ This class provides a convenient way to register Dcmds, without a need to change\n-\/\/ management.cpp every time. Body of these two methods resides in\n-\/\/ diagnosticCommand.cpp\n-\n-class DCmdRegistrant : public AllStatic {\n-\n-private:\n-    static void register_dcmds();\n-    static void register_dcmds_ext();\n-\n-    friend class Management;\n-};\n-\n","filename":"src\/hotspot\/share\/services\/diagnosticFramework.hpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-#include \"services\/nmtDCmd.hpp\"\n@@ -148,5 +147,1 @@\n-  DCmdRegistrant::register_dcmds();\n-  DCmdRegistrant::register_dcmds_ext();\n-  uint32_t full_export = DCmd_Source_Internal | DCmd_Source_AttachAPI\n-                         | DCmd_Source_MBean;\n-  DCmdFactory::register_DCmdFactory(new DCmdFactoryImpl<NMTDCmd>(full_export, true, false));\n+  DCmd::register_dcmds();\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"}]}