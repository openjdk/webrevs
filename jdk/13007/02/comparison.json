{"files":[{"patch":"@@ -43,0 +43,2 @@\n+#include \"logging\/log.hpp\"\n+#include \"logging\/logStream.hpp\"\n@@ -731,6 +733,8 @@\n-  if (TraceDependencies && target() != nullptr && target() != root_m->get_Method()) {\n-    tty->print(\"found a non-root unique target method\");\n-    tty->print_cr(\"  context = %s\", actual_recv->get_Klass()->external_name());\n-    tty->print(\"  method  = \");\n-    target->print_short_name(tty);\n-    tty->cr();\n+  LogTarget(Debug, dependencies) lt;\n+  if (lt.is_enabled() && target() != nullptr && target() != root_m->get_Method()) {\n+    LogStream ls(&lt);\n+    ls.print(\"found a non-root unique target method\");\n+    ls.print_cr(\"  context = %s\", actual_recv->get_Klass()->external_name());\n+    ls.print(\"  method  = \");\n+    target->print_short_name(&ls);\n+    ls.cr();\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -62,0 +62,2 @@\n+bool Dependencies::_verify_in_progress = false;  \/\/ don't -Xlog:dependencies\n+\n@@ -641,1 +643,1 @@\n-          deps.print_dependency(witness, true, &st);\n+          deps.print_dependency(&st, witness, true);\n@@ -869,1 +871,1 @@\n-void Dependencies::DepStream::print_dependency(Klass* witness, bool verbose, outputStream* st) {\n+void Dependencies::DepStream::print_dependency(outputStream* st, Klass* witness, bool verbose) {\n@@ -1766,1 +1768,1 @@\n-      FlagSetting fs(TraceDependencies, false);\n+      FlagSetting fs(_verify_in_progress, true);\n@@ -2061,0 +2063,1 @@\n+  if (_verify_in_progress) return;  \/\/ don't log\n@@ -2062,2 +2065,4 @@\n-    if (TraceDependencies) {\n-      print_dependency(witness, \/*verbose=*\/ true);\n+    LogTarget(Debug, dependencies) lt;\n+    if (lt.is_enabled()) {\n+      LogStream ls(&lt);\n+      print_dependency(&ls, witness, \/*verbose=*\/ true);\n@@ -2173,1 +2178,3 @@\n-void DepChange::print() {\n+void DepChange::print() { print_on(tty); }\n+\n+void DepChange::print_on(outputStream* st) {\n@@ -2179,1 +2186,1 @@\n-      tty->print_cr(\"  dependee = %s\", k->external_name());\n+      st->print_cr(\"  dependee = %s\", k->external_name());\n@@ -2185,1 +2192,1 @@\n-        tty->print_cr(\"  context super = %s\", k->external_name());\n+        st->print_cr(\"  context super = %s\", k->external_name());\n@@ -2192,1 +2199,1 @@\n-        tty->print_cr(\"  context interface = %s\", k->external_name());\n+        st->print_cr(\"  context interface = %s\", k->external_name());\n@@ -2200,1 +2207,1 @@\n-    tty->print_cr(\"  context supers = %d, interfaces = %d\", nsup, nint);\n+    st->print_cr(\"  context supers = %d, interfaces = %d\", nsup, nint);\n","filename":"src\/hotspot\/share\/code\/dependencies.cpp","additions":17,"deletions":10,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -468,0 +468,2 @@\n+  static bool _verify_in_progress;  \/\/ turn off logging dependencies\n+\n@@ -643,1 +645,1 @@\n-    void print_dependency(Klass* witness = nullptr, bool verbose = false, outputStream* st = tty);\n+    void print_dependency(outputStream* st, Klass* witness = nullptr, bool verbose = false);\n@@ -704,0 +706,1 @@\n+  void print_on(outputStream* st);\n","filename":"src\/hotspot\/share\/code\/dependencies.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+#include \"logging\/log.hpp\"\n+#include \"logging\/logStream.hpp\"\n@@ -75,1 +77,2 @@\n-        if (TraceDependencies) {\n+        LogTarget(Info, dependencies) lt;\n+        if (lt.is_enabled()) {\n@@ -77,4 +80,5 @@\n-          tty->print_cr(\"Marked for deoptimization\");\n-          changes.print();\n-          nm->print();\n-          nm->print_dependencies();\n+          LogStream ls(&lt);\n+          ls.print_cr(\"Marked for deoptimization\");\n+          changes.print_on(&ls);\n+          nm->print_on(&ls);\n+          nm->print_dependencies_on(&ls);\n@@ -213,1 +217,1 @@\n-      nm->print_dependencies();\n+      nm->print_dependencies_on(tty);\n","filename":"src\/hotspot\/share\/code\/dependencyContext.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1047,1 +1047,1 @@\n-      print_dependencies();\n+      print_dependencies_on(tty);\n@@ -2153,1 +2153,1 @@\n-  NOT_PRODUCT( FlagSetting fs(TraceDependencies, false) );\n+  NOT_PRODUCT( FlagSetting fs(Dependencies::_verify_in_progress, true));\n@@ -2183,1 +2183,1 @@\n-            nm->print_dependencies();\n+            nm->print_dependencies_on(tty);\n@@ -2484,1 +2484,1 @@\n-void nmethod::print_dependencies() {\n+void nmethod::print_dependencies_on(outputStream* out) {\n@@ -2486,2 +2486,2 @@\n-  ttyLocker ttyl;   \/\/ keep the following output all in one block\n-  tty->print_cr(\"Dependencies:\");\n+  stringStream st;\n+  st.print_cr(\"Dependencies:\");\n@@ -2489,1 +2489,1 @@\n-    deps.print_dependency();\n+    deps.print_dependency(&st);\n@@ -2493,1 +2493,1 @@\n-        tty->print_cr(\"   [nmethod<=klass]%s\", ctxk->external_name());\n+        st.print_cr(\"   [nmethod<=klass]%s\", ctxk->external_name());\n@@ -2498,0 +2498,1 @@\n+  out->print_raw(st.as_string());\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -470,1 +470,1 @@\n-  void print_dependencies()                       PRODUCT_RETURN;\n+  void print_dependencies_on(outputStream* out) PRODUCT_RETURN;\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,0 +71,1 @@\n+  LOG_TAG(dependencies) \\\n","filename":"src\/hotspot\/share\/logging\/logTag.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3589,1 +3589,1 @@\n-      PrintAssembly || TraceDeoptimization || TraceDependencies ||\n+      PrintAssembly || TraceDeoptimization || log_is_enabled(Debug, dependencies) ||\n@@ -4002,3 +4002,4 @@\n-  if (TraceDependencies && VerifyDependencies) {\n-    if (!FLAG_IS_DEFAULT(TraceDependencies)) {\n-      warning(\"TraceDependencies results may be inflated by VerifyDependencies\");\n+  bool trace_dependencies = log_is_enabled(Debug, dependencies);\n+  if (trace_dependencies && VerifyDependencies) {\n+    if (trace_dependencies) {\n+      warning(\"dependency logging results may be inflated by VerifyDependencies\");\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -309,4 +309,6 @@\n-  if (TraceDependencies) {\n-    tty->print(\"checking (%s) \", nm->is_marked_for_deoptimization() ? \"true\" : \"false\");\n-    nm->print_value_on(tty);\n-    tty->cr();\n+  LogTarget(Debug, dependencies) lt;\n+  if (lt.is_enabled()) {\n+    LogStream ls(&lt);\n+    ls.print(\"checking (%s) \", nm->is_marked_for_deoptimization() ? \"true\" : \"false\");\n+    nm->print_value_on(&ls);\n+    ls.cr();\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -860,3 +860,0 @@\n-  develop(bool, TraceDependencies, false,                                   \\\n-          \"Trace dependencies\")                                             \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n- *                   -XX:+PrintCompilation -XX:+PrintInlining -XX:+TraceDependencies -verbose:class -XX:CompileCommand=quiet\n+ *                   -XX:+PrintCompilation -XX:+PrintInlining -Xlog:dependencies=debug -verbose:class -XX:CompileCommand=quiet\n@@ -45,1 +45,1 @@\n- *                   -XX:+PrintCompilation -XX:+PrintInlining -XX:+TraceDependencies -verbose:class -XX:CompileCommand=quiet\n+ *                   -XX:+PrintCompilation -XX:+PrintInlining -Xlog:dependencies=debug -verbose:class -XX:CompileCommand=quiet\n","filename":"test\/hotspot\/jtreg\/compiler\/cha\/AbstractRootMethod.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n- *                   -XX:+PrintCompilation -XX:+PrintInlining -XX:+TraceDependencies -verbose:class -XX:CompileCommand=quiet\n+ *                   -XX:+PrintCompilation -XX:+PrintInlining -Xlog:dependencies=debug -verbose:class -XX:CompileCommand=quiet\n@@ -45,1 +45,1 @@\n- *                   -XX:+PrintCompilation -XX:+PrintInlining -XX:+TraceDependencies -verbose:class -XX:CompileCommand=quiet\n+ *                   -XX:+PrintCompilation -XX:+PrintInlining -Xlog:dependencies=debug -verbose:class -XX:CompileCommand=quiet\n","filename":"test\/hotspot\/jtreg\/compiler\/cha\/DefaultRootMethod.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n- *                   -XX:+PrintCompilation -XX:+PrintInlining -XX:+TraceDependencies -verbose:class -XX:CompileCommand=quiet\n+ *                   -XX:+PrintCompilation -XX:+PrintInlining -Xlog:dependencies=debug -verbose:class -XX:CompileCommand=quiet\n@@ -45,1 +45,1 @@\n- *                   -XX:+PrintCompilation -XX:+PrintInlining -XX:+TraceDependencies -verbose:class -XX:CompileCommand=quiet\n+ *                   -XX:+PrintCompilation -XX:+PrintInlining -Xlog:dependencies=debug -verbose:class -XX:CompileCommand=quiet\n","filename":"test\/hotspot\/jtreg\/compiler\/cha\/StrengthReduceInterfaceCall.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- *                                 -XX:+PrintCompilation -XX:+TraceDependencies -XX:+TraceReferenceGC\n+ *                                 -XX:+PrintCompilation -Xlog:dependencies=debug -XX:+TraceReferenceGC\n","filename":"test\/hotspot\/jtreg\/compiler\/jsr292\/CallSiteDepContextTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}