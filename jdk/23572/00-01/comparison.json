{"files":[{"patch":"@@ -1276,2 +1276,5 @@\n-    java_class->obj_field_put(_component_mirror_offset, comp_mirror);\n-  }\n+  assert(java_lang_Class::as_Klass(java_class) != nullptr &&\n+         java_lang_Class::as_Klass(java_class)->is_array_klass(), \"must be\");\n+  java_class->obj_field_put(_component_mirror_offset, comp_mirror);\n+}\n+\n@@ -1358,2 +1361,1 @@\n-  \/\/ This should be improved by adding a field at the Java level or by\n-  \/\/ introducing a new VM klass (see comment in ClassFileParser)\n+  \/\/ Mirrors for basic types have a null klass field, which makes them special.\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -302,1 +302,1 @@\n-  if (is_primitive) {\n+  if (java_class->bool_field(_is_primitive_offset)) {\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -549,9 +549,0 @@\n-JNIEXPORT jobject JNICALL\n-JVM_GetProtectionDomain(JNIEnv *env, jclass cls);\n-\n-JNIEXPORT jboolean JNICALL\n-JVM_IsArrayClass(JNIEnv *env, jclass cls);\n-\n-JNIEXPORT jboolean JNICALL\n-JVM_IsPrimitiveClass(JNIEnv *env, jclass cls);\n-\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"}]}