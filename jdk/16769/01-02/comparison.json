{"files":[{"patch":"@@ -312,1 +312,0 @@\n-    assert(method_entry->has_resolved_references_index(), \"sanity\");\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -77,0 +77,5 @@\n+#ifdef ASSERT\n+    if (_has_table_index) {\n+      st->print_cr(\" - Table Index: %d\", table_index());\n+    }\n+#else\n@@ -78,0 +83,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/oops\/resolvedMethodEntry.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -80,4 +80,4 @@\n-  DEBUG_ONLY(\n-      bool _has_interface_klass;\n-      bool _has_table_index;\n-  )\n+#ifdef ASSERT\n+  bool _has_interface_klass;\n+  bool _has_table_index;\n+#endif\n@@ -96,4 +96,4 @@\n-        DEBUG_ONLY(\n-          _has_interface_klass = false;\n-          _has_table_index = false;\n-        )\n+#ifdef ASSERT\n+        _has_interface_klass = false;\n+        _has_table_index = false;\n+#endif\n@@ -194,6 +194,6 @@\n-    DEBUG_ONLY(\n-      assert(has_resolved_references_index() == false &&\n-             _has_table_index                == false,\n-             \"Mutually exclusive fields %d %d %d\", has_resolved_references_index(), _has_interface_klass, _has_table_index);\n-      _has_interface_klass = true;\n-    )\n+    assert(has_resolved_references_index() == false &&\n+           _has_table_index                == false,\n+           \"Mutually exclusive fields %d %d %d\", has_resolved_references_index(), _has_interface_klass, _has_table_index);\n+#ifdef ASSERT\n+    _has_interface_klass = true;\n+#endif\n@@ -204,5 +204,3 @@\n-    DEBUG_ONLY(\n-      assert(_has_interface_klass            == false &&\n-             _has_table_index                == false,\n-             \"Mutually exclusive fields %d %d %d\", has_resolved_references_index(), _has_interface_klass, _has_table_index);\n-    )\n+    assert(_has_interface_klass            == false &&\n+           _has_table_index                == false,\n+           \"Mutually exclusive fields %d %d %d\", has_resolved_references_index(), _has_interface_klass, _has_table_index);\n@@ -214,6 +212,6 @@\n-    DEBUG_ONLY(\n-      assert(has_resolved_references_index() == false &&\n-             _has_interface_klass            == false,\n-             \"Mutually exclusive fields %d %d %d\", has_resolved_references_index(), _has_interface_klass, _has_table_index);\n-      _has_table_index = true;\n-    )\n+    assert(has_resolved_references_index() == false &&\n+           _has_interface_klass            == false,\n+           \"Mutually exclusive fields %d %d %d\", has_resolved_references_index(), _has_interface_klass, _has_table_index);\n+#ifdef ASSERT\n+    _has_table_index = true;\n+#endif\n","filename":"src\/hotspot\/share\/oops\/resolvedMethodEntry.hpp","additions":23,"deletions":25,"binary":false,"changes":48,"status":"modified"}]}