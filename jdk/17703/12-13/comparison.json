{"files":[{"patch":"@@ -1171,1 +1171,1 @@\n-        if (maxValue >= MAX_EXPONENTIAL) {\n+        if (maxValue >= Math.nextDown(MAX_EXPONENTIAL)) {\n@@ -1174,2 +1174,2 @@\n-            \/\/ Conversion to long rounds toward zero\n-            maxExtraMinus1 = (long) (maxValue \/ DoubleZigguratTables.exponentialX0);\n+            \/\/ Add 1 because casting to long rounds down, and we want to round up\n+            maxExtraMinus1 = ((long) (maxValue \/ DoubleZigguratTables.exponentialX0)) + 1;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/random\/RandomSupport.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -15,1 +15,1 @@\n-        boolean havePreviousOutput = false;\n+        boolean oddNumberOutputsSoFar = false;\n@@ -18,1 +18,1 @@\n-            if (havePreviousOutput) {\n+            if (oddNumberOutputsSoFar) {\n@@ -21,1 +21,2 @@\n-                return Long.MIN_VALUE;\n+                oddNumberOutputsSoFar = false;\n+                return 0;\n@@ -23,1 +24,1 @@\n-                havePreviousOutput = true;\n+                oddNumberOutputsSoFar = true;\n@@ -36,1 +37,1 @@\n-        for (int i = 5; i < 30; i++) {\n+        for (int i = 5; i < 24; i++) {\n","filename":"test\/jdk\/jdk\/internal\/util\/random\/RandomSupportTest.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"}]}