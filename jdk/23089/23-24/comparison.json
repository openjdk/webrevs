{"files":[{"patch":"@@ -42,1 +42,1 @@\n-  if(val_0 > hi_0 || val_0 < S(0) || val_1 > hi_1 || val_1 < S(0)) {\n+  if (val_0 > hi_0 || val_0 < S(0) || val_1 > hi_1 || val_1 < S(0)) {\n@@ -46,2 +46,0 @@\n-\/\/    std::cout << std::hex << hi_0 << \" \" << hi_1 << \" \" << val_0 <<  \" \" << val_1 << std::endl;\n-\n@@ -54,4 +52,3 @@\n-void test_sample_values(S hi_0, S hi_1){\n-\n-  for(S i = 0; i <= 3; i++){\n-    for(S j = 0; j <= 3; j++){\n+void test_sample_values(S hi_0, S hi_1) {\n+  for (S i = 0; i <= 3; i++) {\n+    for (S j = 0; j <= 3; j++) {\n@@ -70,2 +67,2 @@\n-  for(S hi_0 = lo; hi_0 <= hi; hi_0++){\n-    for(S hi_1 = hi_0; hi_1 <=hi; hi_1++){\n+  for (S hi_0 = lo; hi_0 <= hi; hi_0++) {\n+    for (S hi_1 = hi_0; hi_1 <=hi; hi_1++) {\n@@ -78,5 +75,5 @@\n-void test_exhaustive(S limit){\n-  for(S hi_0 = 0; hi_0 <= limit; hi_0++){\n-    for(S hi_1 = hi_0; hi_1 <= limit; hi_1++){\n-      for(S val_0 = 0; val_0 <= hi_0; val_0++){\n-        for(S val_1 = val_0; val_1 <= hi_1; val_1++){\n+void test_exhaustive(S limit) {\n+  for (S hi_0 = 0; hi_0 <= limit; hi_0++) {\n+    for (S hi_1 = hi_0; hi_1 <= limit; hi_1++) {\n+      for (S val_0 = 0; val_0 <= hi_0; val_0++) {\n+        for (S val_1 = val_0; val_1 <= hi_1; val_1++) {\n@@ -91,1 +88,1 @@\n-void exec_tests(){\n+void exec_tests() {\n","filename":"test\/hotspot\/gtest\/opto\/test_xor_node.cpp","additions":12,"deletions":15,"binary":false,"changes":27,"status":"modified"}]}