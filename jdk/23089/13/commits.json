[{"commit":{"message":"clean up comments"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"710012b424df4839ee113010b28c883656456ec8"},{"commit":{"message":"add missed test file"},"files":[{"filename":"test\/hotspot\/gtest\/opto\/test_xor_node.cpp"}],"sha":"9bc2afb4d0d11793a425d34d70719782954f4ee9"},{"commit":{"message":"extract static methods for testing; add GTESTs; more extensive int ir tests; remove some ir tests for longs due to difficulty in applying constant clamping."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/addnode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorINodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorLNodeIdealizationTests.java"}],"sha":"7ef5c5c7108d06fe3fce50aa9ea0ddf5e15dab4f"},{"commit":{"message":"avoid MIN_VALUE in test"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorINodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorLNodeIdealizationTests.java"}],"sha":"03fcdb1e60fdfd46a28f81225feba63d00b59f12"},{"commit":{"message":"avoid MIN_VALUE in test"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorINodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorLNodeIdealizationTests.java"}],"sha":"61e9182141139625d000ca709c2e16665bdd1fc4"},{"commit":{"message":"add extra info test assert messages"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorINodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorLNodeIdealizationTests.java"}],"sha":"fa56def3f314e550fb110961a427505dbf149e12"},{"commit":{"message":"test cleanup, stub of a test with gtest"},"files":[{"filename":"test\/hotspot\/gtest\/opto\/test_xor_node.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorINodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorLNodeIdealizationTests.java"}],"sha":"db16d38c5ffb60f9c3e47664d65fda64ea01882d"},{"commit":{"message":"clean up comments"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorINodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorLNodeIdealizationTests.java"}],"sha":"f882eba330a670f919fc31b9b932efec27f1f959"},{"commit":{"message":"formatting"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"cafdbfd705d69ea62039bb0de9830d3c979d2b89"},{"commit":{"message":"simplified version of bounds check"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"0bf5aa7f391c7160a69f2043273720f23047d9d8"},{"commit":{"message":"tests for xor hi=power of 2"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorINodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorLNodeIdealizationTests.java"}],"sha":"1ed7d338fb51fdfafa64b540e9a53068ffdd2474"},{"commit":{"message":"move tests to Xor*NodeIdealizationTests"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorINodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorLNodeIdealizationTests.java"}],"sha":"4d4eeb15f89529cb0dcb2e866713dab1a6e7e483"},{"commit":{"message":"remove redundant boolean check"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"002a53f9044714b75d2ba95ae58000f8dfced5e1"},{"commit":{"message":"invert logic in const check, formatting, add test for boolean values"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"3886c58d4f6a565fed322da1838040070488bb39"},{"commit":{"message":"fix test names"},"files":[],"sha":"51da0c6d3e84209b3d98047ab4e044a20d462db6"},{"commit":{"message":"Merge branch 'openjdk:master' into xor_const"},"files":[],"sha":"fdede5111c92fec262a78ff1d8f82abef05b841b"},{"commit":{"message":"move tests, add correctness checks"},"files":[],"sha":"fe3b4282653a92606bc7910e86fb58705f00f680"},{"commit":{"message":"Merge remote-tracking branch 'origin\/xor_const' into xor_const"},"files":[],"sha":"1e877aed8e3e3930b7073d3b45d9e26bf94ad088"},{"commit":{"message":"move logic from Value to add_node XorL"},"files":[],"sha":"8ec4313c55d9b0f34cb048de8fb2d4fa9635124a"},{"commit":{"message":"move logic from Value to add_node XorI"},"files":[],"sha":"7cd18f8994cde5de3af8494369365e5c7225fe78"},{"commit":{"message":"format, copyright date"},"files":[],"sha":"21979d99f07d36bd300f310d310ab4e5b9aa9982"},{"commit":{"message":"xor const folding"},"files":[],"sha":"6b4e80da6c993f45300eb65cc326b95999a2a7eb"},{"commit":{"message":"test for xor const folding"},"files":[],"sha":"621f0d86992f012f000fc00a4f8091b64478f396"},{"commit":{"message":"move logic from Value to add_node XorL"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"55f4b26a42bc83df04894343b4adfa587e909774"},{"commit":{"message":"move logic from Value to add_node XorI"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"862db731a59a540ae320e33379b7851a8f4edd2b"},{"commit":{"message":"format, copyright date"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"3f5f5aa5213b5908ecdb88ea98ad448ad6d739df"},{"commit":{"message":"xor const folding"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"17dcb39ced64b97d0c4d7a16a403bbba9b07a8a2"},{"commit":{"message":"test for xor const folding"},"files":[],"sha":"bbdad2c6108790451acc864a2bd8a8f0caf3295e"}]