{"files":[{"patch":"@@ -128,1 +128,1 @@\n-               \"], Empty Old Collecto range [%zd, %zd]\",\n+               \"], Empty Old Collector range [%zd, %zd]\",\n@@ -1300,0 +1300,7 @@\n+    if (r->is_trash() && r->is_young()) {\n+      \/\/ If this is a trash region and is still affiliated with the young generation\n+      \/\/ we need to recycle it before decreasing the capacity of the young generation.\n+      \/\/ Otherwise, we may violate the constraint that the size of regions affiliated\n+      \/\/ with the young generation is always less than or equal to its maximum capacity\n+      r->try_recycle_under_lock();\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1028,9 +1028,13 @@\n-  \/\/ This detects arithmetic wraparound on _used\n-  assert(ShenandoahHeap::heap()->is_full_gc_in_progress() ||\n-         (used_regions_size() >= used()),\n-         \"Affiliated regions must hold more than what is currently used\");\n-  assert(ShenandoahHeap::heap()->is_full_gc_in_progress() ||\n-         (_used <= _max_capacity), \"Cannot use more than capacity\");\n-  assert(ShenandoahHeap::heap()->is_full_gc_in_progress() ||\n-         (used_regions_size() <= _max_capacity),\n-         \"Cannot use more than capacity\");\n+#ifdef ASSERT\n+  if (!ShenandoahHeap::heap()->is_full_gc_in_progress()) {\n+    assert(used_regions_size() >= used(),\n+           \"Affiliated regions (\" PROPERFMT \") must at least hold what is currently used (\" PROPERFMT \")\",\n+           PROPERFMTARGS(used_regions_size()), PROPERFMTARGS(used()));\n+    assert(_used <= _max_capacity,\n+           \"Cannot use (\" PROPERFMT \") more than capacity (\" PROPERFMT \")\",\n+           PROPERFMTARGS(_used), PROPERFMTARGS(_max_capacity));\n+    assert(used_regions_size() <= _max_capacity,\n+           \"Affiliated regions (\" PROPERFMT \") cannot use more than capacity (\" PROPERFMT \")\",\n+           PROPERFMTARGS(used_regions_size()),PROPERFMTARGS(_max_capacity));\n+  }\n+#endif\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"}]}