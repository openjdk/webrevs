{"files":[{"patch":"@@ -47,0 +47,2 @@\n+    EXTRA_HEADER_DIRS := \\\n+        libjava\/nio\/ch, \\\n@@ -77,0 +79,1 @@\n+        libjava\/nio\/ch \\\n","filename":"make\/modules\/java.base\/Lib.gmk","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        libnio\/ch, \\\n+        libjava\/nio\/ch, \\\n@@ -71,1 +71,1 @@\n-    LIBS_windows := advapi32.lib ole32.lib shell32.lib version.lib mswsock.lib ws2_32.lib, \\\n+    LIBS_windows := advapi32.lib mswsock.lib ole32.lib shell32.lib version.lib ws2_32.lib, \\\n","filename":"make\/modules\/java.base\/lib\/CoreLibraries.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n-          java.base:libnio \\\n-          java.base:libnio\/ch, \\\n+          java.base:libjava\/nio \\\n+          java.base:libjava\/nio\/ch, \\\n","filename":"make\/modules\/jdk.sctp\/Lib.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"","filename":"src\/java.base\/share\/native\/libjava\/nio\/ch\/nio.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/java.base\/share\/native\/libnio\/ch\/nio.h","status":"renamed"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"jni.h\"\n+#include \"jni_util.h\"\n+#include \"jvm.h\"\n+#include \"jlong.h\"\n+#include <errno.h>\n+#include <sys\/types.h>\n+#include <sys\/un.h>\n+\n+\/* NIO utility procedures *\/\n+\n+\n+\/* Defined in IOUtil.c *\/\n+\n+jint fdval(JNIEnv *env, jobject fdo);\n+void setfdval(JNIEnv *env, jobject fdo, jint value);\n+\n+jint convertReturnVal(JNIEnv *env, jint n, jboolean reading);\n+jlong convertLongReturnVal(JNIEnv *env, jlong n, jboolean reading);\n+\n","filename":"src\/java.base\/unix\/native\/libjava\/nio\/ch\/nio_util.h","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,2 @@\n+#include \"Net.h\"\n+\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/DatagramChannelImpl.c","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,5 @@\n+\/* Defined in UnixDomainSockets.c *\/\n+extern jbyteArray sockaddrToUnixAddressBytes(JNIEnv *env,\n+                                             struct sockaddr_un *sa,\n+                                             socklen_t len);\n+\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/InheritedChannel.c","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +45,2 @@\n+#include \"Net.h\"\n+\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/Net.c","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,1 @@\n-#ifndef JNI_UTIL_MD_H\n-#define JNI_UTIL_MD_H\n+#include \"jni.h\"\n@@ -29,1 +28,0 @@\n-#endif \/* JNI_UTIL_MD_H *\/\n@@ -31,0 +29,3 @@\n+\/* Defined in Net.c *\/\n+\n+jint handleSocketError(JNIEnv *env, jint errorValue);\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/Net.h","additions":4,"deletions":3,"binary":false,"changes":7,"previous_filename":"src\/java.base\/windows\/native\/libjava\/jni_util_md.h","status":"copied"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+#include \"Net.h\"\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/UnixAsynchronousSocketChannelImpl.c","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,8 @@\n+#include \"Net.h\"\n+\n+\/* 2 bytes to allow for null at end of string and null at start of string\n+ * for abstract name\n+ *\/\n+#define MAX_UNIX_DOMAIN_PATH_LEN \\\n+        (int)(sizeof(((struct sockaddr_un *)0)->sun_path)-2)\n+\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/UnixDomainSockets.c","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,77 +0,0 @@\n-\/*\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"jni.h\"\n-#include \"jni_util.h\"\n-#include \"jvm.h\"\n-#include \"jlong.h\"\n-#include <errno.h>\n-#include <sys\/types.h>\n-#include <sys\/un.h>\n-\n-\/* Defines SO_REUSEPORT *\/\n-#ifndef SO_REUSEPORT\n-#ifdef __linux__\n-#define SO_REUSEPORT 15\n-#elif defined(AIX) || defined(MACOSX)\n-#define SO_REUSEPORT 0x0200\n-#else\n-#define SO_REUSEPORT 0\n-#endif\n-#endif\n-\n-\/* 2 bytes to allow for null at end of string and null at start of string\n- * for abstract name\n- *\/\n-#define MAX_UNIX_DOMAIN_PATH_LEN \\\n-        (int)(sizeof(((struct sockaddr_un *)0)->sun_path)-2)\n-\n-\/* NIO utility procedures *\/\n-\n-\n-\/* Defined in IOUtil.c *\/\n-\n-jint fdval(JNIEnv *env, jobject fdo);\n-void setfdval(JNIEnv *env, jobject fdo, jint value);\n-\n-jint convertReturnVal(JNIEnv *env, jint n, jboolean reading);\n-jlong convertLongReturnVal(JNIEnv *env, jlong n, jboolean reading);\n-\n-\n-\/* Defined in Net.c *\/\n-\n-jint handleSocketError(JNIEnv *env, jint errorValue);\n-\n-\/* Defined in UnixDomainSockets.c *\/\n-\n-jbyteArray sockaddrToUnixAddressBytes(JNIEnv *env,\n-                                      struct sockaddr_un *sa,\n-                                      socklen_t len);\n-\n-jint unixSocketAddressToSockaddr(JNIEnv *env,\n-                                jbyteArray uaddr,\n-                                struct sockaddr_un *sa,\n-                                int *len);\n-\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/nio_util.h","additions":0,"deletions":77,"binary":false,"changes":77,"status":"deleted"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <winsock2.h>\n+#include <ws2tcpip.h>\n+#include <afunix.h>\n+\n+#include \"jni.h\"\n+\n+\/* Defined in IOUtil.c *\/\n+\n+JNIEXPORT jint fdval(JNIEnv *env, jobject fdo);\n+JNIEXPORT void setfdval(JNIEnv *env, jobject fdo, jint val);\n+JNIEXPORT jlong handleval(JNIEnv *env, jobject fdo);\n+JNIEXPORT jint convertReturnVal(JNIEnv *env, jint n, jboolean r);\n+JNIEXPORT jlong convertLongReturnVal(JNIEnv *env, jlong n, jboolean r);\n+\n+#ifdef _WIN64\n+\n+struct iovec {\n+    jlong  iov_base;\n+    jint  iov_len;\n+};\n+\n+#else\n+\n+struct iovec {\n+    jint  iov_base;\n+    jint  iov_len;\n+};\n+\n+#endif\n+\n","filename":"src\/java.base\/windows\/native\/libjava\/nio\/ch\/nio_util.h","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,3 @@\n+\/* Defined in DatagramChannelImpl.c *\/\n+extern jboolean purgeOutstandingICMP(JNIEnv *env, jclass clazz, jint fd);\n+\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/DatagramDispatcher.c","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,9 @@\n+\/**\n+ * The maximum buffer size for WSASend\/WSARecv. Microsoft recommendation for\n+ * blocking operations is to use buffers no larger than 64k. We need the\n+ * maximum to be less than 128k to support asynchronous close on Windows\n+ * Server 2003 and newer editions of Windows.\n+ *\/\n+#define MAX_BUFFER_SIZE             ((128*1024)-1)\n+\n+\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/SocketDispatcher.c","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,6 @@\n+\/* 2 bytes to allow for null at end of string and null at start of string\n+ * for abstract name\n+ *\/\n+#define MAX_UNIX_DOMAIN_PATH_LEN \\\n+        (int)(sizeof(((struct sockaddr_un *)0)->sun_path)-2)\n+\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/UnixDomainSockets.c","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,72 +0,0 @@\n-\/*\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include <winsock2.h>\n-#include <ws2tcpip.h>\n-#include <afunix.h>\n-\n-#include \"jni.h\"\n-\n-\/**\n- * The maximum buffer size for WSASend\/WSARecv. Microsoft recommendation for\n- * blocking operations is to use buffers no larger than 64k. We need the\n- * maximum to be less than 128k to support asynchronous close on Windows\n- * Server 2003 and newer editions of Windows.\n- *\/\n-#define MAX_BUFFER_SIZE             ((128*1024)-1)\n-\n-#define MAX_UNIX_DOMAIN_PATH_LEN \\\n-        (int)(sizeof(((struct sockaddr_un *)0)->sun_path)-2)\n-\n-JNIEXPORT jint fdval(JNIEnv *env, jobject fdo);\n-JNIEXPORT void setfdval(JNIEnv *env, jobject fdo, jint val);\n-JNIEXPORT jlong handleval(JNIEnv *env, jobject fdo);\n-JNIEXPORT jint convertReturnVal(JNIEnv *env, jint n, jboolean r);\n-JNIEXPORT jlong convertLongReturnVal(JNIEnv *env, jlong n, jboolean r);\n-jboolean purgeOutstandingICMP(JNIEnv *env, jclass clazz, jint fd);\n-\n-#ifdef _WIN64\n-\n-struct iovec {\n-    jlong  iov_base;\n-    jint  iov_len;\n-};\n-\n-#else\n-\n-struct iovec {\n-    jint  iov_base;\n-    jint  iov_len;\n-};\n-\n-#endif\n-\n-\/* Defined in UnixDomainSockets.c *\/\n-\n-jbyteArray sockaddrToUnixAddressBytes(JNIEnv *env, struct sockaddr_un *sa, socklen_t len);\n-\n-jint unixSocketAddressToSockaddr(JNIEnv *env, jbyteArray uaddr,\n-                                struct sockaddr_un *sa, int *len);\n-\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/nio_util.h","additions":0,"deletions":72,"binary":false,"changes":72,"status":"deleted"}]}