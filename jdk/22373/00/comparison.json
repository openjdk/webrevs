{"files":[{"patch":"@@ -82,1 +82,0 @@\n-        checkSecurity();\n@@ -91,7 +90,0 @@\n-    private static void checkSecurity() {\n-        @SuppressWarnings(\"removal\")\n-        final SecurityManager security = System.getSecurityManager();\n-        if (security == null) return;\n-        security.checkPermission(new RuntimePermission(\"canProcessApplicationEvents\"));\n-    }\n-\n@@ -104,1 +96,0 @@\n-        checkSecurity();\n@@ -121,1 +112,0 @@\n-        checkSecurity();\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eawt\/Application.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -257,5 +257,0 @@\n-        @SuppressWarnings(\"removal\")\n-        final SecurityManager security = System.getSecurityManager();\n-        if (security != null) {\n-            security.checkPermission(new RuntimePermission(\"canExamineFileSystem\"));\n-        }\n@@ -285,5 +280,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n-        if (security != null) {\n-            security.checkPermission(new RuntimePermission(\"canOpenURLs\"));\n-        }\n@@ -337,4 +327,0 @@\n-                @SuppressWarnings(\"removal\")\n-                final SecurityManager security = System.getSecurityManager();\n-                if (security != null) security.checkPermission(new RuntimePermission(\"canReadBundle\"));\n-\n@@ -356,3 +342,0 @@\n-                @SuppressWarnings(\"removal\")\n-                SecurityManager security = System.getSecurityManager();\n-                if (security != null) security.checkPermission(new RuntimePermission(\"canReadBundle\"));\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eio\/FileManager.java","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-        return jobSetup(getPageable(), checkAllowedToPrintToFile());\n+        return jobSetup(getPageable());\n@@ -574,2 +574,2 @@\n-    private boolean jobSetup(Pageable doc, boolean allowPrintToFile) {\n-        CPrinterDialog printerDialog = new CPrinterJobDialog(null, this, doc, allowPrintToFile);\n+    private boolean jobSetup(Pageable doc) {\n+        CPrinterDialog printerDialog = new CPrinterJobDialog(null, this, doc);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterJob.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-    private boolean fAllowPrintToFile;\n@@ -37,1 +36,1 @@\n-    CPrinterJobDialog(Frame parent, CPrinterJob printerJob, Pageable doc, boolean allowPrintToFile) {\n+    CPrinterJobDialog(Frame parent, CPrinterJob printerJob, Pageable doc) {\n@@ -40,1 +39,0 @@\n-        fAllowPrintToFile = allowPrintToFile;\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterJobDialog.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.io.FilePermission;\n@@ -1234,7 +1233,0 @@\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        if (sm != null) {\n-            FilePermission filePermission =\n-                new FilePermission(fontFile.getPath(), \"read\");\n-            sm.checkPermission(filePermission);\n-        }\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Font.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -180,13 +180,0 @@\n-    \/**\n-     *  Calls to the security manager's {@code checkPermission} method with\n-     *  an {@code RuntimePermission(\"canProcessApplicationEvents\")} permissions.\n-     *\/\n-    private void checkEventsProcessingPermission(){\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        if (sm != null) {\n-            sm.checkPermission(new RuntimePermission(\n-                    \"canProcessApplicationEvents\"));\n-        }\n-    }\n-\n@@ -268,1 +255,0 @@\n-        checkEventsProcessingPermission();\n@@ -285,1 +271,0 @@\n-        checkEventsProcessingPermission();\n@@ -299,1 +284,0 @@\n-        checkEventsProcessingPermission();\n@@ -312,1 +296,0 @@\n-        checkEventsProcessingPermission();\n@@ -325,1 +308,0 @@\n-        checkEventsProcessingPermission();\n@@ -342,1 +324,0 @@\n-        checkEventsProcessingPermission();\n@@ -363,1 +344,0 @@\n-        checkEventsProcessingPermission();\n@@ -383,1 +363,0 @@\n-        checkEventsProcessingPermission();\n@@ -399,1 +378,0 @@\n-        checkEventsProcessingPermission();\n@@ -429,1 +407,0 @@\n-        checkEventsProcessingPermission();\n@@ -461,1 +438,0 @@\n-        checkEventsProcessingPermission();\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Taskbar.java","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import java.io.FilePermission;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_Profile.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -55,31 +55,0 @@\n-        \/\/ Use a permission check when calling a private constructor to check\n-        \/\/ that the proper security permission has been granted before the\n-        \/\/ {@code Object} superclass is called. If an exception is thrown before\n-        \/\/ the {@code Object} superclass is constructed a finalizer in a\n-        \/\/ subclass of this class will not be run. This protects against a\n-        \/\/ finalizer vulnerability.\n-        this(checkPermission());\n-    }\n-\n-    \/**\n-     * Allows to check a permission before the {@code Object} is called.\n-     *\n-     * @param  ignore unused stub to call a {@link #checkPermission()}}\n-     *\/\n-    private AccessibilityProvider(Void ignore) { }\n-\n-    \/**\n-     * If this code is running with a security manager and if the permission\n-     * {@code \"accessibilityProvider\"} has not been granted\n-     * {@code SecurityException} will be thrown.\n-     *\n-     * @return {@code null} if {@code SecurityException} was not thrown\n-     * @throws SecurityException If a security manager has been installed and it\n-     *         denies {@link RuntimePermission} {@code \"accessibilityProvider\"}\n-     *\/\n-    private static Void checkPermission() {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        if (sm != null)\n-            sm.checkPermission(new RuntimePermission(\"accessibilityProvider\"));\n-        return null;\n","filename":"src\/java.desktop\/share\/classes\/javax\/accessibility\/AccessibilityProvider.java","additions":0,"deletions":31,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.io.FilePermission;\n@@ -173,3 +172,1 @@\n-     * and returns the decision.  This method helps to prevent mysterious\n-     * SecurityExceptions to be thrown when this convenience class is used\n-     * in an applet, for example.\n+     * and returns the decision.\n@@ -179,1 +176,0 @@\n-\n@@ -183,34 +179,0 @@\n-            try {\n-                @SuppressWarnings(\"removal\")\n-                SecurityManager security = System.getSecurityManager();\n-                if (security != null) {\n-                    File cachedir = getCacheDirectory();\n-                    String cachepath;\n-\n-                    if (cachedir != null) {\n-                        cachepath = cachedir.getPath();\n-                    } else {\n-                        cachepath = getTempDir();\n-\n-                        if (cachepath == null || cachepath.isEmpty()) {\n-                            getCacheInfo().setHasPermission(Boolean.FALSE);\n-                            return false;\n-                        }\n-                    }\n-\n-                    \/\/ we have to check whether we can read, write,\n-                    \/\/ and delete cache files.\n-                    \/\/ So, compose cache file path and check it.\n-                    String filepath = cachepath;\n-                    if (!filepath.endsWith(File.separator)) {\n-                        filepath += File.separator;\n-                    }\n-                    filepath += \"*\";\n-\n-                    security.checkPermission(new FilePermission(filepath, \"read, write, delete\"));\n-                }\n-            } catch (SecurityException e) {\n-                getCacheInfo().setHasPermission(Boolean.FALSE);\n-                return false;\n-            }\n-\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/ImageIO.java","additions":1,"deletions":39,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-import java.io.FilePermission;\n@@ -354,1 +353,0 @@\n-            throwPrintToFile();\n@@ -1267,13 +1265,0 @@\n-    private void throwPrintToFile() {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n-        FilePermission printToFilePermission = null;\n-        if (security != null) {\n-            if (printToFilePermission == null) {\n-                printToFilePermission =\n-                    new FilePermission(\"<<ALL FILES>>\", \"read,write\");\n-            }\n-            security.checkPermission(printToFilePermission);\n-        }\n-    }\n-\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/PrintJob2D.java","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.io.FilePermission;\n-\n@@ -259,5 +257,0 @@\n-   \/**\n-    * Print to file permission variables.\n-    *\/\n-    private FilePermission printToFilePermission;\n-\n@@ -2504,31 +2497,0 @@\n-\n-   \/**\n-    * User dialogs should disable \"File\" buttons if this returns false.\n-    *\n-    *\/\n-    public boolean checkAllowedToPrintToFile() {\n-        try {\n-            throwPrintToFile();\n-            return true;\n-        } catch (SecurityException e) {\n-            return false;\n-        }\n-    }\n-\n-    \/**\n-     * Break this out as it may be useful when we allow API to\n-     * specify printing to a file. In that case its probably right\n-     * to throw a SecurityException if the permission is not granted\n-     *\/\n-    private void throwPrintToFile() {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n-        if (security != null) {\n-            if (printToFilePermission == null) {\n-                printToFilePermission =\n-                    new FilePermission(\"<<ALL FILES>>\", \"read,write\");\n-            }\n-            security.checkPermission(printToFilePermission);\n-        }\n-    }\n-\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/RasterPrinterJob.java","additions":0,"deletions":38,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import java.io.FilePermission;\n@@ -683,1 +682,0 @@\n-        private FilePermission printToFilePermission;\n@@ -690,1 +688,0 @@\n-        private boolean filePermission;\n@@ -747,2 +744,0 @@\n-\n-            filePermission = allowedToPrintToFile();\n@@ -876,23 +871,1 @@\n-            try {\n-                throwPrintToFile();\n-                return true;\n-            } catch (SecurityException e) {\n-                return false;\n-            }\n-        }\n-\n-        \/**\n-         * Break this out as it may be useful when we allow API to\n-         * specify printing to a file. In that case its probably right\n-         * to throw a SecurityException if the permission is not granted.\n-         *\/\n-        private void throwPrintToFile() {\n-            @SuppressWarnings(\"removal\")\n-            SecurityManager security = System.getSecurityManager();\n-            if (security != null) {\n-                if (printToFilePermission == null) {\n-                    printToFilePermission =\n-                        new FilePermission(\"<<ALL FILES>>\", \"read,write\");\n-                }\n-                security.checkPermission(printToFilePermission);\n-            }\n+            return true;\n@@ -905,2 +878,0 @@\n-            boolean dstAllowed = filePermission ?\n-                allowedToPrintToFile() : false;\n@@ -926,3 +897,2 @@\n-            cbPrintToFile.setEnabled(dstSupported && dstAllowed);\n-            cbPrintToFile.setSelected(dstSelected && dstAllowed\n-                                      && dstSupported);\n+            cbPrintToFile.setEnabled(dstSupported);\n+            cbPrintToFile.setSelected(dstSelected && dstSupported);\n","filename":"src\/java.desktop\/share\/classes\/sun\/print\/ServiceDialog.java","additions":3,"deletions":33,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -101,1 +101,0 @@\n-import java.io.FilePermission;\n@@ -1909,17 +1908,0 @@\n-\n-\n-    private boolean getPrintToFileEnabled() {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager security = System.getSecurityManager();\n-        if (security != null) {\n-            FilePermission printToFilePermission =\n-                new FilePermission(\"<<ALL FILES>>\", \"read,write\");\n-            try {\n-                security.checkPermission(printToFilePermission);\n-            } catch (SecurityException e) {\n-                return false;\n-            }\n-        }\n-        return true;\n-    }\n-\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/windows\/WPrinterJob.java","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -75,1 +75,0 @@\n-jmethodID AwtPrintControl::getPrintToFileEnabledID;\n@@ -372,5 +371,0 @@\n-    AwtPrintControl::getPrintToFileEnabledID =\n-      env->GetMethodID(cls, \"getPrintToFileEnabled\", \"()Z\");\n-    DASSERT(AwtPrintControl::getPrintToFileEnabledID != NULL);\n-    CHECK_NULL(AwtPrintControl::getPrintToFileEnabledID);\n-\n@@ -812,5 +806,0 @@\n-    if (!env->CallBooleanMethod(printCtrl,\n-                                AwtPrintControl::getPrintToFileEnabledID)) {\n-      pd.Flags |= PD_DISABLEPRINTTOFILE;\n-    }\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintControl.cpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -66,1 +66,0 @@\n-    static jmethodID getPrintToFileEnabledID;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintControl.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}