{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-  log_info_p(gc, init)(\"Probing address space for the highest valid bit: \" SIZE_FORMAT, max_address_bit);\n+  log_info_p(gc, init)(\"Probing address space for the highest valid bit: %zu\", max_address_bit);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zAddress_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-\/\/ Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -286,1 +286,1 @@\n-    st->print   (\"SUB    R_SP, R_SP, \" SIZE_FORMAT,framesize);\n+    st->print   (\"SUB    R_SP, R_SP, %zu\", framesize);\n@@ -365,1 +365,1 @@\n-    st->print(\"ADD    R_SP, R_SP, \" SIZE_FORMAT \"\\n\\t\",framesize);\n+    st->print(\"ADD    R_SP, R_SP, %zu\\n\\t\",framesize);\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-  log_info_p(gc, init)(\"Probing address space for the highest valid bit: \" SIZE_FORMAT, max_address_bit);\n+  log_info_p(gc, init)(\"Probing address space for the highest valid bit: %zu\", max_address_bit);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/z\/zAddress_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-  log_info_p(gc, init)(\"Probing address space for the highest valid bit: \" SIZE_FORMAT, max_address_bit);\n+  log_info_p(gc, init)(\"Probing address space for the highest valid bit: %zu\", max_address_bit);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/zAddress_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-    guarantee(false, \"displacement = \" SIZE_FORMAT_X \", out of range for LA\/LAY\", a.disp());\n+    guarantee(false, \"displacement = 0x%zx, out of range for LA\/LAY\", a.disp());\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-  assert(index == 0 || is_power_of_2(index), \"Incorrect load shift: \" SIZE_FORMAT, index);\n+  assert(index == 0 || is_power_of_2(index), \"Incorrect load shift: %zu\", index);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/z\/zAddress_x86.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -207,1 +207,1 @@\n-  trcVerbose(\"loadquery buffer size is \" SIZE_FORMAT \".\", buflen);\n+  trcVerbose(\"loadquery buffer size is %zu.\", buflen);\n@@ -266,1 +266,1 @@\n-    trcVerbose(\"entry: %p \" SIZE_FORMAT \", %p \" SIZE_FORMAT \", %s %s %s, %d\",\n+    trcVerbose(\"entry: %p %zu, %p %zu, %s %s %s, %d\",\n","filename":"src\/hotspot\/os\/aix\/loadlib_aix.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -454,1 +454,1 @@\n-              log_warning(pagesize)(\"real page size (\" SIZE_FORMAT_X \") differs.\", real_pagesize);\n+              log_warning(pagesize)(\"real page size (0x%zx) differs.\", real_pagesize);\n@@ -636,1 +636,1 @@\n-             \", stack [\" PTR_FORMAT \" - \" PTR_FORMAT \" (\" SIZE_FORMAT \"k using %luk pages)).\",\n+             \", stack [\" PTR_FORMAT \" - \" PTR_FORMAT \" (%zuk using %luk pages)).\",\n@@ -737,1 +737,1 @@\n-    log_warning(os, thread)(\"The %sthread stack size specified is invalid: \" SIZE_FORMAT \"k\",\n+    log_warning(os, thread)(\"The %sthread stack size specified is invalid: %zuk\",\n@@ -773,1 +773,1 @@\n-    log_warning(os, thread)(\"Checking JVM parameter MaxExpectedDataSegmentSize (currently \" SIZE_FORMAT \"k)  might be helpful\", MaxExpectedDataSegmentSize\/K);\n+    log_warning(os, thread)(\"Checking JVM parameter MaxExpectedDataSegmentSize (currently %zuk)  might be helpful\", MaxExpectedDataSegmentSize\/K);\n@@ -844,1 +844,1 @@\n-                       \", stack: \" PTR_FORMAT \" - \" PTR_FORMAT \" (\" SIZE_FORMAT \"K) ).\",\n+                       \", stack: \" PTR_FORMAT \" - \" PTR_FORMAT \" (%zuK) ).\",\n@@ -1195,4 +1195,4 @@\n-    st->print_cr(\"physical total : \" SIZE_FORMAT, mi.real_total);\n-    st->print_cr(\"physical free  : \" SIZE_FORMAT, mi.real_free);\n-    st->print_cr(\"swap total     : \" SIZE_FORMAT, mi.pgsp_total);\n-    st->print_cr(\"swap free      : \" SIZE_FORMAT, mi.pgsp_free);\n+    st->print_cr(\"physical total : %zu\", mi.real_total);\n+    st->print_cr(\"physical free  : %zu\", mi.real_free);\n+    st->print_cr(\"swap total     : %zu\", mi.pgsp_total);\n+    st->print_cr(\"swap free      : %zu\", mi.pgsp_free);\n@@ -1206,1 +1206,1 @@\n-    st->print_cr(\"Program break now          : \" PTR_FORMAT \" (distance: \" SIZE_FORMAT \"k).\",\n+    st->print_cr(\"Program break now          : \" PTR_FORMAT \" (distance: %zuk).\",\n@@ -1209,1 +1209,1 @@\n-  st->print_cr(\"MaxExpectedDataSegmentSize    : \" SIZE_FORMAT \"k.\", MaxExpectedDataSegmentSize \/ K);\n+  st->print_cr(\"MaxExpectedDataSegmentSize    : %zuk.\", MaxExpectedDataSegmentSize \/ K);\n@@ -1534,1 +1534,1 @@\n-    log_trace(os, map)(\"pagesize is, surprisingly, \" SIZE_FORMAT,\n+    log_trace(os, map)(\"pagesize is, surprisingly, %zu\",\n@@ -1760,3 +1760,2 @@\n-  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", \" SIZE_FORMAT\n-          \", %d) failed; error='%s' (errno=%d)\", p2i(addr), size, exec,\n-          os::errno_name(err), err);\n+  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", %zu, %d) failed; error='%s' (errno=%d)\",\n+          p2i(addr), size, exec, os::errno_name(err), err);\n@@ -1779,1 +1778,1 @@\n-    \"addr \" PTR_FORMAT \" not aligned to vm_page_size (\" SIZE_FORMAT \")\",\n+    \"addr \" PTR_FORMAT \" not aligned to vm_page_size (%zu)\",\n@@ -1782,1 +1781,1 @@\n-    \"size \" PTR_FORMAT \" not aligned to vm_page_size (\" SIZE_FORMAT \")\",\n+    \"size \" PTR_FORMAT \" not aligned to vm_page_size (%zu)\",\n@@ -1814,1 +1813,1 @@\n-    \"addr \" PTR_FORMAT \" not aligned to vm_page_size (\" SIZE_FORMAT \")\",\n+    \"addr \" PTR_FORMAT \" not aligned to vm_page_size (%zu)\",\n@@ -1817,1 +1816,1 @@\n-    \"size \" PTR_FORMAT \" not aligned to vm_page_size (\" SIZE_FORMAT \")\",\n+    \"size \" PTR_FORMAT \" not aligned to vm_page_size (%zu)\",\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-  log_trace(gc, heap)(\"Committing memory: \" SIZE_FORMAT \"M-\" SIZE_FORMAT \"M (\" SIZE_FORMAT \"M)\",\n+  log_trace(gc, heap)(\"Committing memory: %zuM-%zuM (%zuM)\",\n@@ -152,1 +152,1 @@\n-  log_trace(gc, heap)(\"Uncommitting memory: \" SIZE_FORMAT \"M-\" SIZE_FORMAT \"M (\" SIZE_FORMAT \"M)\",\n+  log_trace(gc, heap)(\"Uncommitting memory: %zuM-%zuM (%zuM)\",\n","filename":"src\/hotspot\/os\/bsd\/gc\/z\/zPhysicalMemoryBacking_bsd.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -748,1 +748,1 @@\n-                       \", stack: \" PTR_FORMAT \" - \" PTR_FORMAT \" (\" SIZE_FORMAT \"K) ).\",\n+                       \", stack: \" PTR_FORMAT \" - \" PTR_FORMAT \" (%zuK) ).\",\n@@ -1462,1 +1462,1 @@\n-  st->print(\" \" SIZE_FORMAT \"k page\", os::vm_page_size()>>10);\n+  st->print(\" %zuk page\", os::vm_page_size()>>10);\n@@ -1589,1 +1589,1 @@\n-  warning(\"INFO: os::commit_memory(\" INTPTR_FORMAT \", \" SIZE_FORMAT\n+  warning(\"INFO: os::commit_memory(\" INTPTR_FORMAT \", %zu\"\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -188,1 +188,1 @@\n-    ZInitialize::error(\"Filesystem backing the heap has incompatible block size (\" SIZE_FORMAT \")\",\n+    ZInitialize::error(\"Filesystem backing the heap has incompatible block size (%zu)\",\n@@ -194,1 +194,1 @@\n-    ZInitialize::error(\"%s filesystem has unexpected block size \" SIZE_FORMAT \" (expected \" SIZE_FORMAT \")\",\n+    ZInitialize::error(\"%s filesystem has unexpected block size %zu (expected %zu)\",\n@@ -319,1 +319,1 @@\n-  log_info_p(gc, init)(\"Available space on backing filesystem: \" SIZE_FORMAT \"M\", _available \/ M);\n+  log_info_p(gc, init)(\"Available space on backing filesystem: %zuM\", _available \/ M);\n@@ -327,1 +327,1 @@\n-    log_warning_p(gc)(\"size (\" SIZE_FORMAT \"M). Please adjust the size of the backing filesystem accordingly \"\n+    log_warning_p(gc)(\"size (%zuM). Please adjust the size of the backing filesystem accordingly \"\n@@ -329,1 +329,1 @@\n-    log_warning_p(gc)(\"space is currently \" SIZE_FORMAT \"M). Continuing execution with the current filesystem \"\n+    log_warning_p(gc)(\"space is currently %zuM). Continuing execution with the current filesystem \"\n@@ -345,1 +345,1 @@\n-  const int result = fscanf(file, SIZE_FORMAT, &actual_max_map_count);\n+  const int result = fscanf(file, \"%zu\", &actual_max_map_count);\n@@ -362,1 +362,1 @@\n-    log_warning_p(gc)(\"max Java heap size (\" SIZE_FORMAT \"M). Please adjust %s to allow for at\",\n+    log_warning_p(gc)(\"max Java heap size (%zuM). Please adjust %s to allow for at\",\n@@ -364,1 +364,1 @@\n-    log_warning_p(gc)(\"least \" SIZE_FORMAT \" mappings (current limit is \" SIZE_FORMAT \"). Continuing execution \"\n+    log_warning_p(gc)(\"least %zu mappings (current limit is %zu). Continuing execution \"\n@@ -601,1 +601,1 @@\n-  log_trace(gc, heap)(\"Committing memory: \" SIZE_FORMAT \"M-\" SIZE_FORMAT \"M (\" SIZE_FORMAT \"M)\",\n+  log_trace(gc, heap)(\"Committing memory: %zuM-%zuM (%zuM)\",\n@@ -701,1 +701,1 @@\n-  log_trace(gc, heap)(\"Uncommitting memory: \" SIZE_FORMAT \"M-\" SIZE_FORMAT \"M (\" SIZE_FORMAT \"M)\",\n+  log_trace(gc, heap)(\"Uncommitting memory: %zuM-%zuM (%zuM)\",\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zPhysicalMemoryBacking_linux.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n-    if (::fscanf(f, SIZE_FORMAT, out) == 1) {\n+    if (::fscanf(f, \"%zu\", out) == 1) {\n@@ -158,1 +158,1 @@\n-      log_info(pagesize)(\"Unexpected configuration: default pagesize (\" SIZE_FORMAT \") \"\n+      log_info(pagesize)(\"Unexpected configuration: default pagesize (%zu) \"\n","filename":"src\/hotspot\/os\/linux\/hugepages.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -928,1 +928,1 @@\n-  log_info(os, thread)(\"Stack size adjustment for TLS is \" SIZE_FORMAT,\n+  log_info(os, thread)(\"Stack size adjustment for TLS is %zu\",\n@@ -1035,1 +1035,1 @@\n-    log_warning(os, thread)(\"The %sthread stack size specified is invalid: \" SIZE_FORMAT \"k\",\n+    log_warning(os, thread)(\"The %sthread stack size specified is invalid: %zuk\",\n@@ -1174,1 +1174,1 @@\n-                       \", stack: \" PTR_FORMAT \" - \" PTR_FORMAT \" (\" SIZE_FORMAT \"K) ).\",\n+                       \", stack: \" PTR_FORMAT \" - \" PTR_FORMAT \" (%zuK) ).\",\n@@ -1460,2 +1460,2 @@\n-    log_info(os, thread)(\"Capturing initial stack in %s thread: req. size: \" SIZE_FORMAT \"K, actual size: \"\n-                         SIZE_FORMAT \"K, top=\" INTPTR_FORMAT \", bottom=\" INTPTR_FORMAT,\n+    log_info(os, thread)(\"Capturing initial stack in %s thread: req. size: %zuK, actual size: \"\n+                         \"%zuK, top=\" INTPTR_FORMAT \", bottom=\" INTPTR_FORMAT,\n@@ -2393,1 +2393,1 @@\n-  st->print_cr(\"C-Heap outstanding allocations: \" SIZE_FORMAT \"K, retained: \" SIZE_FORMAT \"K%s\",\n+  st->print_cr(\"C-Heap outstanding allocations: %zuK, retained: %zuK%s\",\n@@ -2521,1 +2521,1 @@\n-  st->print(\" \" SIZE_FORMAT \"k page\", os::vm_page_size()>>10);\n+  st->print(\" %zuk page\", os::vm_page_size()>>10);\n@@ -2886,3 +2886,2 @@\n-  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", \" SIZE_FORMAT\n-          \", %d) failed; error='%s' (errno=%d)\", p2i(addr), size, exec,\n-          os::strerror(err), err);\n+  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", %zu, %d) failed; error='%s' (errno=%d)\",\n+          p2i(addr), size, exec, os::strerror(err), err);\n@@ -2894,3 +2893,2 @@\n-  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", \" SIZE_FORMAT\n-          \", \" SIZE_FORMAT \", %d) failed; error='%s' (errno=%d)\", p2i(addr), size,\n-          alignment_hint, exec, os::strerror(err), err);\n+  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", %zu, %zu, %d) failed; error='%s' (errno=%d)\",\n+          p2i(addr), size, alignment_hint, exec, os::strerror(err), err);\n@@ -3046,1 +3044,1 @@\n-      log_info(gc, os)(\"::madvise(\" PTR_FORMAT \", \" SIZE_FORMAT \", %d) failed; \"\n+      log_info(gc, os)(\"::madvise(\" PTR_FORMAT \", %zu, %d) failed; \"\n@@ -3763,1 +3761,1 @@\n-      log_info(pagesize)(\"Large page size (\" SIZE_FORMAT \"%s) failed sanity check, \"\n+      log_info(pagesize)(\"Large page size (%zu%s) failed sanity check, \"\n@@ -3775,1 +3773,1 @@\n-          log_info(pagesize)(\"Large page size (\" SIZE_FORMAT \"%s) passed sanity check\",\n+          log_info(pagesize)(\"Large page size (%zu%s) passed sanity check\",\n@@ -3974,1 +3972,1 @@\n-     log_info(pagesize)(\"Using the default large page size: \" SIZE_FORMAT \"%s\",\n+     log_info(pagesize)(\"Using the default large page size: %zu%s\",\n@@ -3980,2 +3978,2 @@\n-        log_info(pagesize)(\"Overriding default large page size (\" SIZE_FORMAT \"%s) \"\n-                           \"using LargePageSizeInBytes: \" SIZE_FORMAT \"%s\",\n+        log_info(pagesize)(\"Overriding default large page size (%zu%s) \"\n+                           \"using LargePageSizeInBytes: %zu%s\",\n@@ -3988,2 +3986,2 @@\n-        log_info(pagesize)(\"LargePageSizeInBytes is not a valid large page size (\" SIZE_FORMAT \"%s) \"\n-                           \"using the default large page size: \" SIZE_FORMAT \"%s\",\n+        log_info(pagesize)(\"LargePageSizeInBytes is not a valid large page size (%zu%s) \"\n+                           \"using the default large page size: %zu%s\",\n@@ -4034,1 +4032,1 @@\n-                     \" size: \" SIZE_FORMAT \"%s, page size: \" SIZE_FORMAT \"%s, (errno = %d)\",\n+                     \" size: %zu%s, page size: %zu%s, (errno = %d)\",\n@@ -4063,2 +4061,1 @@\n-  log_debug(pagesize)(\"Commit special mapping: \" PTR_FORMAT \", size=\" SIZE_FORMAT \"%s, page size=\"\n-                      SIZE_FORMAT \"%s\",\n+  log_debug(pagesize)(\"Commit special mapping: \" PTR_FORMAT \", size=%zu%s, page size=%zu%s\",\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":21,"deletions":24,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -976,1 +976,1 @@\n-  jio_snprintf(buf, buflen, \"stacksize: \" SIZE_FORMAT \"k, guardsize: \" SIZE_FORMAT \"k, %s\",\n+  jio_snprintf(buf, buflen, \"stacksize: %zuk, guardsize: %zuk, %s\",\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1098,1 +1098,1 @@\n-    log_info(os)(\"os::release_memory failed (\" PTR_FORMAT \", \" SIZE_FORMAT \")\", p2i(addr), bytes);\n+    log_info(os)(\"os::release_memory failed (\" PTR_FORMAT \", %zu)\", p2i(addr), bytes);\n@@ -1230,1 +1230,1 @@\n-  log_debug(perf, memops)(\"mapped \" SIZE_FORMAT \" bytes for vmid %d at \"\n+  log_debug(perf, memops)(\"mapped %zu bytes for vmid %d at \"\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-  fatal(msg \": \" PTR_FORMAT \" \" SIZE_FORMAT \"M (%d)\", \\\n+  fatal(msg \": \" PTR_FORMAT \" %zuM (%d)\", \\\n@@ -254,1 +254,1 @@\n-    fatal(\"Failed to unreserve memory: \" PTR_FORMAT \" \" SIZE_FORMAT \"M (%d)\",\n+    fatal(\"Failed to unreserve memory: \" PTR_FORMAT \" %zuM (%d)\",\n","filename":"src\/hotspot\/os\/windows\/gc\/z\/zMapper_windows.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -160,1 +160,1 @@\n-      fatal(\"Failed to allocate physical memory \" SIZE_FORMAT \"M @ \" PTR_FORMAT \" (%d)\",\n+      fatal(\"Failed to allocate physical memory %zuM @ \" PTR_FORMAT \" (%d)\",\n@@ -163,1 +163,1 @@\n-      log_debug(gc)(\"Allocated physical memory: \" SIZE_FORMAT \"M @ \" PTR_FORMAT, size \/ M, untype(offset));\n+      log_debug(gc)(\"Allocated physical memory: %zuM @ \" PTR_FORMAT, size \/ M, untype(offset));\n@@ -178,1 +178,1 @@\n-      fatal(\"Failed to uncommit physical memory \" SIZE_FORMAT \"M @ \" PTR_FORMAT \" (%d)\",\n+      fatal(\"Failed to uncommit physical memory %zuM @ \" PTR_FORMAT \" (%d)\",\n@@ -191,1 +191,1 @@\n-      fatal(\"Failed to map view \" PTR_FORMAT \" \" SIZE_FORMAT \"M @ \" PTR_FORMAT \" (%d)\",\n+      fatal(\"Failed to map view \" PTR_FORMAT \" %zuM @ \" PTR_FORMAT \" (%d)\",\n@@ -201,1 +201,1 @@\n-      fatal(\"Failed to unmap view \" PTR_FORMAT \" \" SIZE_FORMAT \"M (%d)\",\n+      fatal(\"Failed to unmap view \" PTR_FORMAT \" %zuM (%d)\",\n@@ -227,1 +227,1 @@\n-  log_trace(gc, heap)(\"Committing memory: \" SIZE_FORMAT \"M-\" SIZE_FORMAT \"M (\" SIZE_FORMAT \"M)\",\n+  log_trace(gc, heap)(\"Committing memory: %zuM-%zuM (%zuM)\",\n@@ -234,1 +234,1 @@\n-  log_trace(gc, heap)(\"Uncommitting memory: \" SIZE_FORMAT \"M-\" SIZE_FORMAT \"M (\" SIZE_FORMAT \"M)\",\n+  log_trace(gc, heap)(\"Uncommitting memory: %zuM-%zuM (%zuM)\",\n","filename":"src\/hotspot\/os\/windows\/gc\/z\/zPhysicalMemoryBacking_windows.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-    log_trace(os)(\"VirtualAlloc(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x, %x) returned \" PTR_FORMAT \"%s.\",\n+    log_trace(os)(\"VirtualAlloc(\" PTR_FORMAT \", %zu, %x, %x) returned \" PTR_FORMAT \"%s.\",\n@@ -207,1 +207,1 @@\n-    log_info(os)(\"VirtualAlloc(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x, %x) failed (%u).\",\n+    log_info(os)(\"VirtualAlloc(\" PTR_FORMAT \", %zu, %x, %x) failed (%u).\",\n@@ -217,1 +217,1 @@\n-    log_trace(os)(\"VirtualFree(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x) succeeded\",\n+    log_trace(os)(\"VirtualFree(\" PTR_FORMAT \", %zu, %x) succeeded\",\n@@ -221,1 +221,1 @@\n-    log_info(os)(\"VirtualFree(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x) failed (%u).\",\n+    log_info(os)(\"VirtualFree(\" PTR_FORMAT \", %zu, %x) failed (%u).\",\n@@ -232,1 +232,1 @@\n-    log_trace(os)(\"VirtualAllocExNuma(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x, %x, %x) returned \" PTR_FORMAT \"%s.\",\n+    log_trace(os)(\"VirtualAllocExNuma(\" PTR_FORMAT \", %zu, %x, %x, %x) returned \" PTR_FORMAT \"%s.\",\n@@ -237,1 +237,1 @@\n-    log_info(os)(\"VirtualAllocExNuma(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x, %x, %x) failed (%u).\",\n+    log_info(os)(\"VirtualAllocExNuma(\" PTR_FORMAT \", %zu, %x, %x, %x) failed (%u).\",\n@@ -249,1 +249,1 @@\n-    log_trace(os)(\"MapViewOfFileEx(\" PTR_FORMAT \", \" SIZE_FORMAT \") returned \" PTR_FORMAT \"%s.\",\n+    log_trace(os)(\"MapViewOfFileEx(\" PTR_FORMAT \", %zu) returned \" PTR_FORMAT \"%s.\",\n@@ -254,1 +254,1 @@\n-    log_info(os)(\"MapViewOfFileEx(\" PTR_FORMAT \", \" SIZE_FORMAT \") failed (%u).\",\n+    log_info(os)(\"MapViewOfFileEx(\" PTR_FORMAT \", %zu) failed (%u).\",\n@@ -548,1 +548,1 @@\n-  log_info(os, thread)(\"Thread is alive (tid: %zu, stacksize: \" SIZE_FORMAT \"k).\", os::current_thread_id(), thread->stack_size() \/ K);\n+  log_info(os, thread)(\"Thread is alive (tid: %zu, stacksize: %zuk).\", os::current_thread_id(), thread->stack_size() \/ K);\n@@ -634,1 +634,1 @@\n-                       PTR_FORMAT \" - \" PTR_FORMAT \" (\" SIZE_FORMAT \"K) ).\",\n+                       PTR_FORMAT \" - \" PTR_FORMAT \" (%zuK) ).\",\n@@ -667,1 +667,1 @@\n-    ss.print(\"stacksize: \" SIZE_FORMAT \"k, \", stacksize \/ K);\n+    ss.print(\"stacksize: %zuk, \", stacksize \/ K);\n@@ -2087,1 +2087,1 @@\n-  st->print(\" \" SIZE_FORMAT \"k page\", os::vm_page_size()>>10);\n+  st->print(\" %zuk page\", os::vm_page_size()>>10);\n@@ -3437,1 +3437,1 @@\n-  log_debug(pagesize)(\"Reserving large pages at an aligned address, alignment=\" SIZE_FORMAT \"%s\",\n+  log_debug(pagesize)(\"Reserving large pages at an aligned address, alignment=%zu%s\",\n@@ -3499,1 +3499,1 @@\n-  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", \" SIZE_FORMAT\n+  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", %zu\"\n@@ -3729,1 +3729,1 @@\n-    warning(\"INFO: os::protect_memory(\" PTR_FORMAT \", \" SIZE_FORMAT\n+    warning(\"INFO: os::protect_memory(\" PTR_FORMAT \", %zu\"\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1564,1 +1564,1 @@\n-      warning(\"unexpected file size: size = \" SIZE_FORMAT \"\\n\",\n+      warning(\"unexpected file size: size = %zu\\n\",\n@@ -1663,1 +1663,1 @@\n-  log_debug(perf, memops)(\"mapped \" SIZE_FORMAT \" bytes for vmid %d at \"\n+  log_debug(perf, memops)(\"mapped %zu bytes for vmid %d at \"\n","filename":"src\/hotspot\/os\/windows\/perfMemory_windows.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}