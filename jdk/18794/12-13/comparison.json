{"files":[{"patch":"@@ -90,12 +90,0 @@\n-    \/**\n-     * {@return a String representation of the provided {@code stable}}\n-     * @param stable to extract a string representation from\n-     *\/\n-    static String toString(StableValue<?> stable,\n-                           Function<Object, String> errorMessageMapper) {\n-        return \"StableValue\" +\n-                (stable.isSet()\n-                        ? \"[\" + stable.orThrow() + \"]\"\n-                        : stable.isError() ? \".error(\" + errorMessageMapper.apply(stable) + \")\" : \".unset\");\n-    }\n-\n@@ -139,0 +127,3 @@\n+            \/\/ Make sure all fields are visible under plain semantics\n+            \/\/ This is not strictly needed as no field is currently set in the StableValueImpl constructor\n+            Holder.UNSAFE.storeStoreFence();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/lang\/stable\/StableUtil.java","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -40,0 +40,5 @@\n+\/**\n+ * The one and only implementation of a StableValue.\n+ *\n+ * @param <V> value type\n+ *\/\n@@ -42,11 +47,5 @@\n-    private static final long MUTEX_OFFSET =\n-            UNSAFE.objectFieldOffset(StableValueImpl.class, \"mutex\");\n-\n-    private static final long VALUE_OFFSET =\n-            UNSAFE.objectFieldOffset(StableValueImpl.class, \"value\");\n-\n-    private static final long STATE_OFFSET =\n-            UNSAFE.objectFieldOffset(StableValueImpl.class, \"state\");\n-\n-    private static final long COMPUTE_INVOKED_OFFSET =\n-            UNSAFE.objectFieldOffset(StableValueImpl.class, \"computeInvoked\");\n+    \/\/ Offsets for Unsafe operations\n+    private static final long MUTEX_OFFSET = fieldOffset(\"mutex\");\n+    private static final long VALUE_OFFSET = fieldOffset(\"value\");\n+    private static final long STATE_OFFSET = fieldOffset(\"state\");\n+    private static final long COMPUTE_INVOKED_OFFSET = fieldOffset(\"computeInvoked\");\n@@ -261,9 +260,0 @@\n-    private static final Function<Object, String> ERROR_MESSAGE_EXTRACTOR = new Function<Object, String>() {\n-        @Override\n-        public String apply(Object stableValue) {\n-            StableValueImpl<?> svi = (StableValueImpl<?>) stableValue;\n-            return ((Class<?>) svi.acquireMutex())\n-                    .getName();\n-        }\n-    };\n-\n@@ -272,1 +262,7 @@\n-        return StableUtil.toString(this, ERROR_MESSAGE_EXTRACTOR);\n+        return \"StableValue\" + switch (stateVolatile()) {\n+            case UNSET        -> \".unset\";\n+            case SET_NON_NULL -> \"[\" + orThrow() + \"]\";\n+            case SET_NULL     -> \"[null]\";\n+            case ERROR        -> \".error(\" + ((Class<?>) acquireMutex()).getName() + \")\";\n+            default           -> throw shouldNotReachHere();\n+        };\n@@ -324,0 +320,4 @@\n+    private static long fieldOffset(String name) {\n+        return UNSAFE.objectFieldOffset(StableValueImpl.class, name);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/lang\/stable\/StableValueImpl.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"}]}