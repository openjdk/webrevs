{"files":[{"patch":"@@ -384,1 +384,1 @@\n-    static <T> Supplier<T> ofSupplier(Supplier<? extends T> original) {\n+    static <T> Supplier<T> memoizedSupplier(Supplier<? extends T> original) {\n@@ -406,2 +406,2 @@\n-    static <R> IntFunction<R> ofIntFunction(int size,\n-                                            IntFunction<? extends R> original) {\n+    static <R> IntFunction<R> memoizedIntFunction(int size,\n+                                                  IntFunction<? extends R> original) {\n@@ -434,2 +434,2 @@\n-    static <T, R> Function<T, R> ofFunction(Set<? extends T> inputs,\n-                                            Function<? super T, ? extends R> original) {\n+    static <T, R> Function<T, R> memoizedFunction(Set<? extends T> inputs,\n+                                                  Function<? super T, ? extends R> original) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/lang\/StableValue.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-                StableValue.ofSupplier( () -> Logger.getLogger(\"com.foo.Bar\") );\n+                StableValue.memoizedSupplier( () -> Logger.getLogger(\"com.foo.Bar\") );\n@@ -307,1 +307,1 @@\n-                StableValue.ofIntFunction(SIZE, ListDemo3::readFromFile);\n+                StableValue.memoizedIntFunction(SIZE, ListDemo3::readFromFile);\n@@ -355,1 +355,1 @@\n-            fibFunction = StableValue.ofIntFunction(upperBound, this::fib);\n+            fibFunction = StableValue.memoizedIntFunction(upperBound, this::fib);\n@@ -401,1 +401,1 @@\n-                    StableValue.ofIntFunction(upperBound, this::fib));\n+                    StableValue.memoizedIntFunction(upperBound, this::fib));\n@@ -500,1 +500,1 @@\n-                    StableValue.ofFunction(\n+                    StableValue.memoizedFunction(\n","filename":"test\/jdk\/java\/lang\/StableValue\/JepDemo.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-        Function<Integer, Integer> memoized = StableValue.ofFunction(Set.of(0, 1, FIRST), counting);\n+        Function<Integer, Integer> memoized = StableValue.memoizedFunction(Set.of(0, 1, FIRST), counting);\n","filename":"test\/jdk\/java\/lang\/StableValue\/MemoizedFunctionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        IntFunction<Integer> memoized = StableValue.ofIntFunction(FIRST + 1, counting);\n+        IntFunction<Integer> memoized = StableValue.memoizedIntFunction(FIRST + 1, counting);\n","filename":"test\/jdk\/java\/lang\/StableValue\/MemoizedIntFunctionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        Supplier<Integer> memoized = StableValue.ofSupplier(counting);\n+        Supplier<Integer> memoized = StableValue.memoizedSupplier(counting);\n","filename":"test\/jdk\/java\/lang\/StableValue\/MemoizedSupplierTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}