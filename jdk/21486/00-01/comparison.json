{"files":[{"patch":"@@ -753,15 +753,12 @@\n-        byte[] newBytes = ClassFile.of().transformClass(cm1, new ClassTransform() {\n-            @Override\n-            public void accept(ClassBuilder builder, ClassElement element) {\n-                if (element instanceof ModuleAttribute attr) {\n-                    List<ModuleRequireInfo> requires = new ArrayList<>();\n-\n-                    for (ModuleRequireInfo mri : attr.requires()) {\n-                        if (mri.requires().name().equalsString(\"java.base\")) {\n-                            requires.add(ModuleRequireInfo.of(mri.requires(),\n-                                                              List.of(AccessFlag.TRANSITIVE),\n-                                                              mri.requiresVersion()\n-                                                                 .orElse(null)));\n-                        } else {\n-                            requires.add(mri);\n-                        }\n+        byte[] newBytes = ClassFile.of().transformClass(cm1, (builder, element) -> {\n+            if (element instanceof ModuleAttribute attr) {\n+                List<ModuleRequireInfo> requires = new ArrayList<>();\n+\n+                for (ModuleRequireInfo mri : attr.requires()) {\n+                    if (mri.requires().name().equalsString(\"java.base\")) {\n+                        requires.add(ModuleRequireInfo.of(mri.requires(),\n+                                                          List.of(AccessFlag.TRANSITIVE),\n+                                                          mri.requiresVersion()\n+                                                             .orElse(null)));\n+                    } else {\n+                        requires.add(mri);\n@@ -769,12 +766,0 @@\n-\n-                    builder.accept(ModuleAttribute.of(attr.moduleName(),\n-                                                      attr.moduleFlagsMask(),\n-                                                      attr.moduleVersion()\n-                                                          .orElseGet(() -> null),\n-                                                      requires,\n-                                                      attr.exports(),\n-                                                      attr.opens(),\n-                                                      attr.uses(),\n-                                                      attr.provides()));\n-                } else {\n-                    builder.accept(element);\n@@ -782,0 +767,12 @@\n+\n+                builder.accept(ModuleAttribute.of(attr.moduleName(),\n+                                                  attr.moduleFlagsMask(),\n+                                                  attr.moduleVersion()\n+                                                      .orElseGet(() -> null),\n+                                                  requires,\n+                                                  attr.exports(),\n+                                                  attr.opens(),\n+                                                  attr.uses(),\n+                                                  attr.provides()));\n+            } else {\n+                builder.accept(element);\n","filename":"test\/langtools\/tools\/javac\/modules\/AnnotationsOnModules.java","additions":24,"deletions":27,"binary":false,"changes":51,"status":"modified"}]}