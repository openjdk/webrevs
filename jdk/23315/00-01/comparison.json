{"files":[{"patch":"@@ -49,32 +49,28 @@\n-        try {\n-            \/**\n-             * Certificate is created without extensions. Invoking getExtensionValue\n-             * with oid must return NULL else it is incorrect\n-             *\/\n-            Asserts.assertNull(x509Certimpl.getExtensionValue(\"2.5.29.17\"));\n-            \/**\n-             * Certificate is created with extensions. Invoking getExtensionValue\n-             * with oid must not return NULL else it is incorrect\n-             *\/\n-            x509Certimpl.getInfo().setExtensions(createCertificateExtensions(\n-                    x509Certimpl.getInfo().getKey().getKey()));\n-            Asserts.assertNotNull(x509Certimpl.getExtensionValue(\"2.5.29.17\"));\n-            \/**\n-             * Certificate is created with extensions. Invoking getExtensionValue\n-             * with invalid oid must return NULL else it is incorrect\n-             *\/\n-            Asserts.assertNull(x509Certimpl.getExtensionValue(\"1.2.3.4\"));\n-            \/**\n-             * Certificate is created with extensions. Invoking getKeyUsage\n-             * must not return NULL else it is incorrect\n-             *\/\n-            Asserts.assertNotNull(x509Certimpl.getKeyUsage());\n-            \/**\n-             * Certificate is created without extensions. Invoking getKeyUsage\n-             * must return NULL else it is incorrect\n-             *\/\n-            x509Certimpl.getInfo().setExtensions(null);\n-            Asserts.assertNull(x509Certimpl.getKeyUsage());\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n+        \/**\n+         * Certificate is created without extensions. Invoking getExtensionValue\n+         * with oid must return NULL else it is incorrect\n+         *\/\n+        Asserts.assertNull(x509Certimpl.getExtensionValue(\"2.5.29.17\"));\n+        \/**\n+         * Certificate is created with extensions. Invoking getExtensionValue\n+         * with oid must not return NULL else it is incorrect\n+         *\/\n+        x509Certimpl.getInfo().setExtensions(createCertificateExtensions(\n+                x509Certimpl.getInfo().getKey().getKey()));\n+        Asserts.assertNotNull(x509Certimpl.getExtensionValue(\"2.5.29.17\"));\n+        \/**\n+         * Certificate is created with extensions. Invoking getExtensionValue\n+         * with invalid oid must return NULL else it is incorrect\n+         *\/\n+        Asserts.assertNull(x509Certimpl.getExtensionValue(\"1.2.3.4\"));\n+        \/**\n+         * Certificate is created with extensions. Invoking getKeyUsage\n+         * must not return NULL else it is incorrect\n+         *\/\n+        Asserts.assertNotNull(x509Certimpl.getKeyUsage());\n+        \/**\n+         * Certificate is created without extensions. Invoking getKeyUsage\n+         * must return NULL else it is incorrect\n+         *\/\n+        x509Certimpl.getInfo().setExtensions(null);\n+        Asserts.assertNull(x509Certimpl.getKeyUsage());\n@@ -127,1 +123,0 @@\n-\n","filename":"test\/jdk\/java\/security\/cert\/X509Certificate\/CertificateExtensions.java","additions":28,"deletions":33,"binary":false,"changes":61,"status":"modified"}]}