[{"commit":{"message":"Add copyright header"},"files":[{"filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicDirectoryModel\/ConcurrentModification.java"}],"sha":"0dfff7015d62dd7d0f4e3e1d54cb52e8cd14cdfe"},{"commit":{"message":"Explicitly run the test in headless mode\n\nIt's important to do it on macOS, otherwise the test won't fail\nbecause BasicDirectoryModel isn't used in headful environment on macOS."},"files":[{"filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicDirectoryModel\/ConcurrentModification.java"}],"sha":"0d6be7a4e4368ea67382af4321b9483236276e5a"},{"commit":{"message":"Rename the class"},"files":[{"filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicDirectoryModel\/ConcurrentModification.java"}],"sha":"f9a68239ae93476249308376b481b43e1903d017"},{"commit":{"message":"Move the test under jx.s.plaf.basic\/BasicDirectoryModel"},"files":[{"filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicDirectoryModel\/ConcurrentModification.java"}],"sha":"1fd22f2ebe3f000bc49a0ea3ec56b316ea830d16"},{"commit":{"message":"Add comment for fields, explain usage of ThreadGroup"},"files":[],"sha":"2fa5672d11a5aca0a2acdaa7c631c80ec99847b4"},{"commit":{"message":"Reduce the parameters: files: 50; file limit: 10; timer: 250"},"files":[],"sha":"7db8375e4d0af2ea6925eed88464544500f4a606"},{"commit":{"message":"Merge master"},"files":[],"sha":"65c4e4024c0dbb455ac3f0edc06ea801a3452a1d"},{"commit":{"message":"The test is for Linux and macOS only\n\nOn Windows, the test usually fails with OutOfMemoryException.\nBecause ShellFolder.invoke() runs on COM thread on Windows,\nall the (worker) threads are serialised on COM thread, reducing\nthe opportunity to concurrently modify fileCache.\nOn Linux and *headless* macOS, ShellFolder.invoke() runs in the\nsame thread, therefore all the threads run simultaneously."},"files":[],"sha":"1ddd8bc5a3eae566b8118095b9a569b15bfeab0d"},{"commit":{"message":"Set 'Test Runner' name to the (main) runner"},"files":[],"sha":"c7f53dedc334c0b12b389c73fdbcc9243e761bc4"},{"commit":{"message":"Back to initial parameters: 1,000 files, 5 threads, 2,000 repeats"},"files":[],"sha":"7c766f9927b5a5ef342cd73fec373dc17a578958"},{"commit":{"message":"Amend the summary of the test"},"files":[],"sha":"7d54690d26bc2d19a11a625a6c8fb023c5203dad"},{"commit":{"message":"Specify the correct bugids for the test\n\nAll the 8323670, 8307091, 8240690 are about the same problem where\nConcurrentModificationException is thrown from BasicDirectoryModel."},"files":[],"sha":"cec784406a7638d553d7568f2246fc9537a0cec0"},{"commit":{"message":"Make parameters constants and describe them"},"files":[],"sha":"be7b29aa47b62cc9e31a2a8925a6be7b7a7e9502"},{"commit":{"message":"Use stream to create threads"},"files":[],"sha":"16a335d7a63c3361bf2ca5980c04e2d373aa3552"},{"commit":{"message":"Refactor file creation: re-use existing method to create files in timer"},"files":[],"sha":"885d6966ea580dc9f14c9dde545ef8ad5e563d53"},{"commit":{"message":"Wrap test execution into a thread group\n\nWhen all the test threads are created within a new ThreadGroup,\nuncaughtException can catch ConcurrentModificationException which\noccurs in the 'Basic L&F File Loading Thread'. In this case,\nthe test exits quickly and cleans up the files.\n\nRestructure the source file: main, wrapper, runTest; exception handlers;\nhelper classes.\n\nChange the test parameters."},"files":[],"sha":"356cd4dd5fbff62cceb102463860b28c48807ae2"},{"commit":{"message":"Make start and end barriers static"},"files":[],"sha":"a9ddefdec5394176d637186b7ca67b8887c3c379"},{"commit":{"message":"Create files in the current directory\n\nIt's more jtreg friendly, files are created in the scratch directory\nwhich is cleaned up automatically. Otherwise, the directory could\nbe left on the system when the test failed.\nConcurrentModificationException is thrown in a thread where this test\ndoesn't catch the exception.\n\nMark timeStart as final."},"files":[],"sha":"73fc8b32acf5ea115212e871e105315a45c90258"},{"commit":{"message":"Revert \"Reduce number of threads to 1; decrease delay up to 10 ms\"\n\nThis reverts commit a7de79002432a4d9acadf87e92058f9b6aa5ac86."},"files":[],"sha":"7cdf8c3610898557e91190d2bae440829a663376"},{"commit":{"message":"Reduce number of threads to 1; decrease delay up to 10 ms"},"files":[],"sha":"a7de79002432a4d9acadf87e92058f9b6aa5ac86"},{"commit":{"message":"Display test duration"},"files":[],"sha":"5a19d49e37b17132b3d67cda6c98862766ef3b3d"},{"commit":{"message":"Handle exceptions in threads and timer task\n\nEnsure the test cleans up after itself:\n * Handle exceptions in the threads and timer task,\n * Interrupt threads in this case,\n * Pass the first exception as the test result,\n * Add as suppressed exceptions if more exceptions occur."},"files":[],"sha":"2736b0e001b4fe2f051e17d8be61d1a7df9136d3"},{"commit":{"message":"Try using 5 threads only"},"files":[],"sha":"8dbb71fd27a5962324c2030ff09b4d10e31f87e8"},{"commit":{"message":"Use a loop to create and start threads rather than streams"},"files":[],"sha":"84e2b4b2aa05693c141fc3588bc5f3559b6b1780"},{"commit":{"message":"Reduce number of threads to 10, increase repeats to 2,000"},"files":[],"sha":"9764f73b779e589f0cc125c25ac4a3710bd00e5c"},{"commit":{"message":"Add random delays between calls to rescan\n\nMake the timer create a random number of files and more frequently."},"files":[],"sha":"ec493656e8a8b506f2efa0983d3163dcdef516d8"},{"commit":{"message":"Test case for JDK-8323670 which concurrently updates file cache\n\nThis test creates 10 threads which concurrently call\nrescanFileSystem that calls BasicDirectoryModel.validateFileCache."},"files":[],"sha":"1f7cfe4cbed9ae910f7facd6f976216218aba101"}]