{"files":[{"patch":"@@ -68,2 +68,2 @@\n- * A Java virtual machine implementation may support measuring\n- * the CPU time for the current thread, for any thread, or for no threads.\n+ * A Java virtual machine implementation may support measuring the CPU time\n+ * for the current platform thread, for any platform thread, or for no threads.\n@@ -74,3 +74,3 @@\n- * thread.  The {@link #isCurrentThreadCpuTimeSupported} method can\n- * be used to determine if a Java virtual machine supports measuring of\n- * the CPU time for the current  thread.\n+ * platform thread.  The {@link #isCurrentThreadCpuTimeSupported()} method\n+ * can be used to determine if a Java virtual machine supports measuring of\n+ * the CPU time for the current platform thread.\n@@ -78,1 +78,2 @@\n- * for any thread will also support that for the current thread.\n+ * for any platform thread will also support that for the current platform\n+ * thread.\n@@ -415,1 +416,2 @@\n-     * measurement is enabled; {@code -1} otherwise.\n+     * measurement is enabled; {@code -1} if not enabled or the current\n+     * thread is a virtual thread\n@@ -442,1 +444,2 @@\n-     * measurement is enabled; {@code -1} otherwise.\n+     * measurement is enabled; @code -1} if not enabled or the current\n+     * thread is a virtual thread\n@@ -477,2 +480,2 @@\n-     * and CPU time measurement is enabled;\n-     * {@code -1} otherwise.\n+     * and CPU time measurement is enabled; {@code -1} if not enabled\n+     * or the specified ID is a virtual thread\n@@ -512,2 +515,2 @@\n-     * and CPU time measurement is enabled;\n-     * {@code -1} otherwise.\n+     * and CPU time measurement is enabled; {@code -1} if not enabled\n+     * or the specified ID is a virtual thread\n@@ -544,2 +547,3 @@\n-     * Tests if the Java virtual machine supports CPU time\n-     * measurement for the current thread.\n+     * Tests if the Java virtual machine supports CPU time measurement with the\n+     * {@link #getCurrentThreadCpuTime()} and {@link #getCurrentThreadUserTime()}\n+     * methods when called from a platform thread.\n@@ -547,1 +551,1 @@\n-     * returns {@code true} and the current thread is a platform thread.\n+     * returns {@code true}.\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/ThreadMXBean.java","additions":19,"deletions":15,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -101,5 +101,1 @@\n-        if (Thread.currentThread().isVirtual()) {\n-            return false;\n-        } else {\n-            return jvm.isCurrentThreadCpuTimeSupported();\n-        }\n+        return jvm.isCurrentThreadCpuTimeSupported();\n@@ -222,4 +218,0 @@\n-        \/\/ check if Thread CPU time measurement is supported.\n-        if (Thread.currentThread().isVirtual()) {\n-            throw new UnsupportedOperationException(\"Not supported by virtual threads\");\n-        }\n@@ -235,1 +227,1 @@\n-        if (verifyCurrentThreadCpuTime()) {\n+        if (verifyCurrentThreadCpuTime() && !Thread.currentThread().isVirtual()) {\n@@ -298,1 +290,1 @@\n-        if (verifyCurrentThreadCpuTime()) {\n+        if (verifyCurrentThreadCpuTime() && !Thread.currentThread().isVirtual()) {\n@@ -370,5 +362,1 @@\n-                if (thread.isVirtual()) {\n-                    return -1L;\n-                } else {\n-                    return getThreadAllocatedMemory0(0);\n-                }\n+                return thread.isVirtual() ? -1L : getThreadAllocatedMemory0(0);\n","filename":"src\/java.management\/share\/classes\/sun\/management\/ThreadImpl.java","additions":4,"deletions":16,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -267,0 +267,3 @@\n+        ThreadMXBean bean = ManagementFactory.getThreadMXBean();\n+        assumeTrue(bean.isThreadCpuTimeSupported(), \"Thread CPU time measurement not supported\");\n+\n@@ -283,0 +286,3 @@\n+        ThreadMXBean bean = ManagementFactory.getThreadMXBean();\n+        assumeTrue(bean.isThreadCpuTimeSupported(), \"Thread CPU time measurement not supported\");\n+\n@@ -291,2 +297,2 @@\n-     * Test that ThreadMXBean::isCurrentThreadCpuTimeSupported returns false\n-     * when invoked on a virtual thread.\n+     * Test that ThreadMXBean::isCurrentThreadCpuTimeSupported returns true when\n+     * CPU time measurement for the current thread is supported.\n@@ -296,0 +302,4 @@\n+        ThreadMXBean bean = ManagementFactory.getThreadMXBean();\n+        assumeTrue(bean.isCurrentThreadCpuTimeSupported(),\n+                \"Thread CPU time measurement for the current thread not supported\");\n+\n@@ -297,1 +307,1 @@\n-            assertFalse(ManagementFactory.getThreadMXBean().isCurrentThreadCpuTimeSupported());\n+            assertTrue(bean.isCurrentThreadCpuTimeSupported());\n@@ -302,2 +312,2 @@\n-     * Test that ThreadMXBean::getCurrentThreadCpuTime throws UOE when invoked\n-     * on a virtual thread.\n+     * Test that ThreadMXBean::getCurrentThreadCpuTime returns -1 when invoked\n+     * from a virtual thread.\n@@ -307,0 +317,4 @@\n+        ThreadMXBean bean = ManagementFactory.getThreadMXBean();\n+        assumeTrue(bean.isCurrentThreadCpuTimeSupported(),\n+                \"Thread CPU time measurement for the current thread not supported\");\n+\n@@ -308,2 +322,1 @@\n-            assertThrows(UnsupportedOperationException.class,\n-                    () -> ManagementFactory.getThreadMXBean().getCurrentThreadCpuTime());\n+            assertEquals(-1L, bean.getCurrentThreadCpuTime());\n@@ -314,2 +327,2 @@\n-     * Test that ThreadMXBean::getCurrentThreadUserTime throws UOE when\n-     * invoked on a virtual thread.\n+     * Test that ThreadMXBean::getCurrentThreadUserTime returns -1 when invoked\n+     * from a virtual thread.\n@@ -319,5 +332,3 @@\n-        VThreadRunner.run(() -> {\n-            assertThrows(UnsupportedOperationException.class,\n-                    () -> ManagementFactory.getThreadMXBean().getCurrentThreadUserTime());\n-        });\n-    }\n+        ThreadMXBean bean = ManagementFactory.getThreadMXBean();\n+        assumeTrue(bean.isCurrentThreadCpuTimeSupported(),\n+                \"Thread CPU time measurement for the current thread not supported\");\n@@ -325,6 +336,0 @@\n-    \/**\n-     * Test that ThreadMXBean::getCurrentThreadAllocatedBytes returns -1 when\n-     * invoked on a virtual thread.\n-     *\/\n-    @Test\n-    void testGetCurrentThreadAllocatedBytes() throws Exception {\n@@ -332,3 +337,1 @@\n-            long allocated = ManagementFactory.getPlatformMXBean(com.sun.management.ThreadMXBean.class)\n-                    .getCurrentThreadAllocatedBytes();\n-            assertEquals(-1L, allocated);\n+            assertEquals(-1L, bean.getCurrentThreadUserTime());\n","filename":"test\/jdk\/java\/lang\/management\/ThreadMXBean\/VirtualThreads.java","additions":26,"deletions":23,"binary":false,"changes":49,"status":"modified"}]}