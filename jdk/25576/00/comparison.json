{"files":[{"patch":"@@ -115,0 +115,5 @@\n+\n+    template <typename T>\n+    static oop oop_atomic_cmpxchg_not_in_heap(T* addr, oop compare_value, oop new_value);\n+    template <typename T>\n+    static oop oop_atomic_xchg_not_in_heap(T* addr, oop new_value);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BarrierSet.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -135,0 +135,22 @@\n+template <DecoratorSet decorators, typename BarrierSetT>\n+template <typename T>\n+inline oop G1BarrierSet::AccessBarrier<decorators, BarrierSetT>::\n+oop_atomic_cmpxchg_not_in_heap(T* addr, oop compare_value, oop new_value) {\n+  \/\/ Apply SATB barriers for all non-heap references, to allow\n+  \/\/ concurrent scanning of such references.\n+  G1BarrierSet *bs = barrier_set_cast<G1BarrierSet>(BarrierSet::barrier_set());\n+  bs->write_ref_field_pre<decorators>(addr);\n+  return Raw::oop_atomic_cmpxchg(addr, compare_value, new_value);\n+}\n+\n+template <DecoratorSet decorators, typename BarrierSetT>\n+template <typename T>\n+inline oop G1BarrierSet::AccessBarrier<decorators, BarrierSetT>::\n+oop_atomic_xchg_not_in_heap(T* addr, oop new_value) {\n+  \/\/ Apply SATB barriers for all non-heap references, to allow\n+  \/\/ concurrent scanning of such references.\n+  G1BarrierSet *bs = barrier_set_cast<G1BarrierSet>(BarrierSet::barrier_set());\n+  bs->write_ref_field_pre<decorators>(addr);\n+  return Raw::oop_atomic_xchg(addr, new_value);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BarrierSet.inline.hpp","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}