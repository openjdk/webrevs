{"files":[{"patch":"@@ -385,2 +385,2 @@\n-  if (!should_alloc_in_eden(size) || GCLocker::is_active()) {\n-    \/\/ Size is too big for eden, or gc is locked out.\n+  if (!should_alloc_in_eden(size)) {\n+    \/\/ Size is too big for eden.\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -286,1 +286,0 @@\n-\/\/ . gc locker is occupied (jni critical section)\n@@ -291,1 +290,0 @@\n-         || GCLocker::is_active()\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,7 @@\n-  OrderAccess::storeload();\n+  \/\/ The _is_gc_request_pending and _jni_active_critical (inside\n+  \/\/ in_critical()) variables form a Dekker duality. On the GC side, the\n+  \/\/ _is_gc_request_pending is set and _jni_active_critical is subsequently\n+  \/\/ loaded. For Java threads, the opposite is true, just like a Dekker lock.\n+  \/\/ That's why there is a fence to order the accesses involved in the Dekker\n+  \/\/ synchronization.\n+  OrderAccess::fence();\n@@ -100,1 +106,1 @@\n-    while (cur->in_critical_atomic()) {\n+    while (cur->in_critical()) {\n@@ -129,1 +135,4 @@\n-    OrderAccess::storeload();\n+\n+    \/\/ Same as fast path.\n+    OrderAccess::fence();\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/gcLocker.cpp","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -37,1 +37,4 @@\n-    OrderAccess::storeload();\n+\n+    \/\/ Matching the fence in GCLocker::block.\n+    OrderAccess::fence();\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/gcLocker.inline.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -938,2 +938,0 @@\n-  bool in_critical_atomic()    { return Atomic::load(&_jni_active_critical) > 0; }\n-\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}