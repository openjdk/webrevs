{"files":[{"patch":"@@ -29,0 +29,1 @@\n+#include \"nmt\/memflags.hpp\"\n@@ -30,0 +31,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -34,0 +36,4 @@\n+\/\/ The malloc header, as well as the coming VMATree implementation, rely on MEMFLAGS\n+\/\/ fitting into eight bits.\n+STATIC_ASSERT(sizeof(MEMFLAGS) == sizeof(uint8_t));\n+\n","filename":"src\/hotspot\/share\/nmt\/mallocHeader.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"nmt\/memflags.hpp\"\n@@ -31,0 +30,1 @@\n+#include \"nmt\/memflags.hpp\"\n","filename":"src\/hotspot\/share\/nmt\/mallocTracker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,32 +0,0 @@\n-\/*\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-\n-#include \"nmt\/memflags.hpp\"\n-#include \"utilities\/debug.hpp\"\n-\n-\/\/ Extra insurance that MEMFLAGS truly has the same size as uint8_t.\n-STATIC_ASSERT(sizeof(MEMFLAGS) == sizeof(uint8_t));\n-\n","filename":"src\/hotspot\/share\/nmt\/memflags.cpp","additions":0,"deletions":32,"binary":false,"changes":32,"status":"deleted"},{"patch":"@@ -27,1 +27,0 @@\n-\n","filename":"src\/hotspot\/share\/services\/mallocLimit.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}