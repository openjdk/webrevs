{"files":[{"patch":"@@ -225,0 +225,10 @@\n+    \/**\n+     * The overflow threshold (for round to nearest) is MAX_VALUE + 1\/2 ulp.\n+     *\/\n+    private static final double OVERFLOW_THRESH = 0x1.ffcp15 + 0x0.002p15;\n+\n+    \/**\n+     * The underflow threshold (for round to nearest) is MIN_VALUE * 0.5.\n+     *\/\n+    private static final double UNDERFLOW_THRESH = 0x1.0p-24d * 0.5d;\n+\n@@ -353,2 +363,1 @@\n-        \/\/ The overflow threshold is binary16 MAX_VALUE + 1\/2 ulp\n-        if (abs_d >= (0x1.ffcp15 + 0x0.002p15) ) {\n+        if (abs_d >= OVERFLOW_THRESH) {\n@@ -359,4 +368,3 @@\n-        \/\/ Smallest magnitude nonzero representable binary16 value\n-        \/\/ is equal to 0x1.0p-24; half-way and smaller rounds to zero.\n-        if (abs_d <= 0x1.0p-24d * 0.5d) { \/\/ Covers double zeros and subnormals.\n-            return new Float16(sign_bit); \/\/ Positive or negative zero\n+        if (abs_d <= UNDERFLOW_THRESH) { \/\/ Covers double zeros and subnormals.\n+            \/\/ positive or negative zero\n+            return new Float16(sign_bit);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float16.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"}]}