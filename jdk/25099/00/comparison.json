{"files":[{"patch":"@@ -91,3 +91,0 @@\n-#ifdef USE_LIBRARY_BASED_TLS_ONLY\n-static volatile bool _lookup_shared_first = false;\n-#else\n@@ -95,1 +92,1 @@\n-\/\/ are updating \"lookup success history\" in a global shared variable. If built-in TLS is available, use it.\n+\/\/ are updating \"lookup success history\" in a global shared variable, so use built-in TLS\n@@ -97,1 +94,0 @@\n-#endif\n","filename":"src\/hotspot\/share\/classfile\/symbolTable.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -55,2 +55,0 @@\n-#ifndef USE_LIBRARY_BASED_TLS_ONLY\n-\/\/ Current thread is maintained as a thread-local variable\n@@ -58,1 +56,0 @@\n-#endif\n@@ -161,1 +158,0 @@\n-#ifndef USE_LIBRARY_BASED_TLS_ONLY\n@@ -164,1 +160,0 @@\n-#endif\n@@ -172,1 +167,0 @@\n-#ifndef USE_LIBRARY_BASED_TLS_ONLY\n@@ -174,1 +168,0 @@\n-#endif\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -116,1 +116,0 @@\n-#ifndef USE_LIBRARY_BASED_TLS_ONLY\n@@ -119,1 +118,0 @@\n-#endif\n@@ -663,1 +661,0 @@\n-#ifndef USE_LIBRARY_BASED_TLS_ONLY\n@@ -665,6 +662,0 @@\n-#else\n-  if (ThreadLocalStorage::is_initialized()) {\n-    return ThreadLocalStorage::thread();\n-  }\n-  return nullptr;\n-#endif\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"}]}