{"files":[{"patch":"@@ -47,0 +47,1 @@\n+#include \"utilities\/events.hpp\"\n@@ -675,2 +676,6 @@\n-  if (preempt_old_marking(generation)) {\n-    log_info(gc)(\"Preempting old generation mark to allow %s GC\", generation->name());\n+  MonitorLocker ml(&_control_lock, Mutex::_no_safepoint_check_flag);\n+  if (gc_mode() == servicing_old) {\n+    if (!preempt_old_marking(generation)) {\n+      log_debug(gc, thread)(\"Cannot start young, old collection is not preemptible\");\n+      return false;\n+    }\n@@ -679,3 +684,2 @@\n-    \/\/ We are using the fact old is only preemptible when the control thread mode is servicing_old\n-    MonitorLocker ml(&_control_lock, Mutex::_no_safepoint_check_flag);\n-    while (gc_mode() != concurrent_normal) {\n+    log_info(gc)(\"Preempting old generation mark to allow %s GC\", generation->name());\n+    while (gc_mode() == servicing_old) {\n@@ -686,1 +690,0 @@\n-\n@@ -690,1 +693,0 @@\n-  MonitorLocker ml(&_control_lock, Mutex::_no_safepoint_check_flag);\n@@ -797,0 +799,1 @@\n+    EventMark event(\"Control thread transition from: %s, to %s\", gc_mode_name(_mode), gc_mode_name(new_mode));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalControlThread.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"}]}