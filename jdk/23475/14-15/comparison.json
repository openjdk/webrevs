{"files":[{"patch":"@@ -63,1 +63,0 @@\n-  _old_gen(generation),\n@@ -570,1 +569,1 @@\n-    size_t old_available = _old_gen->available() \/ HeapWordSize;\n+    size_t old_available = _old_generation->available() \/ HeapWordSize;\n@@ -572,1 +571,1 @@\n-    size_t old_unaffiliated_available = _old_gen->free_unaffiliated_regions() * region_size_words;\n+    size_t old_unaffiliated_available = _old_generation->free_unaffiliated_regions() * region_size_words;\n@@ -606,2 +605,2 @@\n-  size_t old_used = _old_gen->used() + _old_gen->get_humongous_waste();\n-  size_t trigger_threshold = _old_gen->usage_trigger_threshold();\n+  size_t old_used = _old_generation->used() + _old_generation->get_humongous_waste();\n+  size_t trigger_threshold = _old_generation->usage_trigger_threshold();\n@@ -611,1 +610,1 @@\n-         _old_gen->used(), _old_gen->get_humongous_waste(), _heap->capacity());\n+         _old_generation->used(), _old_generation->get_humongous_waste(), _heap->capacity());\n@@ -626,0 +625,1 @@\n+    assert(_old_generation->state() == ShenandoahOldGeneration::MARKING, \"Unexpected old gen state: %s\", _old_generation->state_name());\n@@ -631,0 +631,1 @@\n+    assert(_old_generation->state() == ShenandoahOldGeneration::FILLING, \"Unexpected old gen state: %s\", _old_generation->state_name());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n-  ShenandoahOldGeneration* _old_gen;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}