{"files":[{"patch":"@@ -623,0 +623,15 @@\n+bool ShenandoahOldHeuristics::resume_old_cycle() {\n+  \/\/ If we are preparing to mark old, or if we are already marking old, then try to continue that work.\n+  if (_old_generation->is_concurrent_mark_in_progress()) {\n+    log_trigger(\"Resume marking old\");\n+    return true;\n+  }\n+\n+  if (_old_generation->is_preparing_for_mark()) {\n+    log_trigger(\"Resume preparing to mark old\");\n+    return true;\n+  }\n+\n+  return false;\n+}\n+\n@@ -635,11 +650,0 @@\n-  \/\/ If we are preparing to mark old, or if we are already marking old, then try to continue that work.\n-  if (_old_generation->is_concurrent_mark_in_progress()) {\n-    log_trigger(\"Resume marking old\");\n-    return true;\n-  }\n-\n-  if (_old_generation->is_preparing_for_mark()) {\n-    log_trigger(\"Resume preparing to mark old\");\n-    return true;\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -188,0 +188,1 @@\n+  bool resume_old_cycle();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -118,1 +118,0 @@\n-  }\n@@ -120,2 +119,5 @@\n-  _requested_gc_cause = GCCause::_no_gc;\n-  _requested_generation = nullptr;\n+    \/\/ Only clear these if we made a request from them. In the case of a cancelled gc,\n+    \/\/ we do not want to inadvertently lose this pending request.\n+    _requested_gc_cause = GCCause::_no_gc;\n+    _requested_generation = nullptr;\n+  }\n@@ -207,1 +209,1 @@\n-  log_debug(gc, thread)(\"Starting GC: %s\", GCCause::to_string(request.cause));\n+  log_debug(gc, thread)(\"Starting GC (%s): %s, %s\", gc_mode_name(gc_mode()), GCCause::to_string(request.cause), request.generation->name());\n@@ -312,0 +314,3 @@\n+\n+  log_debug(gc, thread)(\"Completed GC (%s): %s, %s, cancelled: %s\",\n+    gc_mode_name(gc_mode()), GCCause::to_string(request.cause), request.generation->name(), GCCause::to_string(_heap->cancelled_cause()));\n@@ -400,1 +405,1 @@\n-        log_info(gc)(\"Preparation for old generation cycle was cancelled\");\n+        log_info(gc, thread)(\"Preparation for old generation cycle was cancelled\");\n@@ -590,0 +595,1 @@\n+    log_debug(gc, thread)(\"Cancellation detected, reason: %s\", GCCause::to_string(_heap->cancelled_cause()));\n@@ -597,0 +603,3 @@\n+    log_debug(gc, thread)(\"Cancellation detected:, reason: %s, degen point: %s\",\n+                          GCCause::to_string(_heap->cancelled_cause()),\n+                          ShenandoahGC::degen_point_to_string(_degen_point));\n@@ -605,0 +614,1 @@\n+  log_debug(gc, thread)(\"Stopping control thread\");\n@@ -647,0 +657,1 @@\n+    log_debug(gc,thread)(\"Notify control (%s): %s\", gc_mode_name(gc_mode()), GCCause::to_string(cause));\n@@ -712,0 +723,1 @@\n+  log_debug(gc, thread)(\"Notify control (%s): %s, %s\", gc_mode_name(gc_mode()), GCCause::to_string(cause), generation->name());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalControlThread.cpp","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2130,1 +2130,1 @@\n-    log_info(gc)(\"%s\", msg.buffer());\n+    log_info(gc,thread)(\"%s\", msg.buffer());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -498,1 +498,1 @@\n-    log_debug(gc)(\"Old generation transition from %s to %s\", state_name(_state), state_name(new_state));\n+    log_debug(gc, thread)(\"Old generation transition from %s to %s\", state_name(_state), state_name(new_state));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,0 +77,4 @@\n+        } else if (_old_heuristics->resume_old_cycle() || _old_heuristics->should_start_gc()) {\n+          if (request_concurrent_gc(_heap->old_generation())) {\n+            log_debug(gc)(\"Heuristics request to resume old collection accepted\");\n+          }\n@@ -127,1 +131,1 @@\n-bool ShenandoahRegulatorThread::start_old_cycle() {\n+bool ShenandoahRegulatorThread::start_old_cycle() const {\n@@ -131,1 +135,1 @@\n-bool ShenandoahRegulatorThread::start_young_cycle() {\n+bool ShenandoahRegulatorThread::start_young_cycle() const {\n@@ -135,1 +139,1 @@\n-bool ShenandoahRegulatorThread::start_global_cycle() {\n+bool ShenandoahRegulatorThread::start_global_cycle() const {\n@@ -139,1 +143,1 @@\n-bool ShenandoahRegulatorThread::request_concurrent_gc(ShenandoahGeneration* generation) {\n+bool ShenandoahRegulatorThread::request_concurrent_gc(ShenandoahGeneration* generation) const {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+class ShenandoahOldHeuristics;\n@@ -63,3 +64,4 @@\n-  bool start_old_cycle();\n-  bool start_young_cycle();\n-  bool start_global_cycle();\n+  bool start_old_cycle() const;\n+  bool start_young_cycle() const;\n+  bool start_global_cycle() const;\n+  bool resume_old_cycle();\n@@ -75,1 +77,1 @@\n-  bool request_concurrent_gc(ShenandoahGeneration* generation);\n+  bool request_concurrent_gc(ShenandoahGeneration* generation) const;\n@@ -80,1 +82,1 @@\n-  ShenandoahHeuristics* _old_heuristics;\n+  ShenandoahOldHeuristics* _old_heuristics;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.hpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -478,1 +478,1 @@\n-  log_info(gc, remset)(\"Scan remembered set using bitmap: %s\", BOOL_TO_STR(old_bitmap_stable));\n+  log_debug(gc, remset)(\"Scan remembered set using bitmap: %s\", BOOL_TO_STR(old_bitmap_stable));\n@@ -656,1 +656,1 @@\n-  log_info(gc, remset)(\"Scan remembered set using bitmap: %s\", BOOL_TO_STR(old_bitmap_stable));\n+  log_debug(gc, remset)(\"Scan remembered set using bitmap: %s\", BOOL_TO_STR(old_bitmap_stable));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}