{"files":[{"patch":"@@ -28,0 +28,2 @@\n+\n+#include \"shenandoahCollectorPolicy.hpp\"\n@@ -62,1 +64,1 @@\n-    while (heap->cancelled_gc()) {\n+    while (ShenandoahCollectorPolicy::is_allocation_failure(heap->cancelled_cause())) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahController.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -263,1 +263,1 @@\n-  \/\/ If this was the allocation failure GC cycle, notify waiters about it\n+  \/\/ If this was an allocation failure GC cycle, notify waiters about it\n@@ -265,1 +265,0 @@\n-    assert(!_heap->cancelled_gc(), \"GC should no longer be cancelled after this cycle\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalControlThread.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}