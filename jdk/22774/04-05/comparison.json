{"files":[{"patch":"@@ -2072,1 +2072,1 @@\n-     * same resource string defined in their own Resources.java.\n+     * same resource string defined in their own properties file.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-actions.can.only.be.read.=Aktionen können nur \\\"lesen\\\" sein\n+actions.can.only.be.read.=Aktionen können nur \"lesen\" sein\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/resources\/security_de.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,11 +30,11 @@\n-provclass.not.a.provider=%s\\u4E0D\\u662F\\u63D0\\u4F9B\\u65B9\n-provider.name.not.found=\\u672A\\u627E\\u5230\\u540D\\u4E3A \"%s\" \\u7684\\u63D0\\u4F9B\\u65B9\n-provider.class.not.found=\\u672A\\u627E\\u5230\\u63D0\\u4F9B\\u65B9 \"%s\"\n-jarsigner.error.=jarsigner \\u9519\\u8BEF:\\u0020\n-Illegal.option.=\\u975E\\u6CD5\\u9009\\u9879:\\u0020\n-.keystore.must.be.NONE.if.storetype.is.{0}=\\u5982\\u679C -storetype \\u4E3A {0}, \\u5219 -keystore \\u5FC5\\u987B\\u4E3A NONE\n-.keypass.can.not.be.specified.if.storetype.is.{0}=\\u5982\\u679C -storetype \\u4E3A {0}, \\u5219\\u4E0D\\u80FD\\u6307\\u5B9A -keypass\n-If.protected.is.specified.then.storepass.and.keypass.must.not.be.specified=\\u5982\\u679C\\u6307\\u5B9A\\u4E86 -protected, \\u5219\\u4E0D\\u80FD\\u6307\\u5B9A -storepass \\u548C -keypass\n-If.keystore.is.not.password.protected.then.storepass.and.keypass.must.not.be.specified=\\u5982\\u679C\\u5BC6\\u94A5\\u5E93\\u672A\\u53D7\\u53E3\\u4EE4\\u4FDD\\u62A4, \\u5219\\u4E0D\\u80FD\\u6307\\u5B9A -storepass \\u548C -keypass\n-Usage.jarsigner.options.jar.file.alias=\\u7528\\u6CD5: jarsigner [\\u9009\\u9879] jar-file \\u522B\\u540D\n-.jarsigner.verify.options.jar.file.alias.=\\u0020      jarsigner -verify [\\u9009\\u9879] jar-file [\\u522B\\u540D...]\n+provclass.not.a.provider=%s不是提供方\n+provider.name.not.found=未找到名为 \"%s\" 的提供方\n+provider.class.not.found=未找到提供方 \"%s\"\n+jarsigner.error.=jarsigner 错误:\\u0020\n+Illegal.option.=非法选项:\\u0020\n+.keystore.must.be.NONE.if.storetype.is.{0}=如果 -storetype 为 {0}, 则 -keystore 必须为 NONE\n+.keypass.can.not.be.specified.if.storetype.is.{0}=如果 -storetype 为 {0}, 则不能指定 -keypass\n+If.protected.is.specified.then.storepass.and.keypass.must.not.be.specified=如果指定了 -protected, 则不能指定 -storepass 和 -keypass\n+If.keystore.is.not.password.protected.then.storepass.and.keypass.must.not.be.specified=如果密钥库未受口令保护, 则不能指定 -storepass 和 -keypass\n+Usage.jarsigner.options.jar.file.alias=用法: jarsigner [选项] jar-file 别名\n+.jarsigner.verify.options.jar.file.alias.=\\u0020      jarsigner -verify [选项] jar-file [别名...]\n@@ -42,38 +42,38 @@\n-.keystore.url.keystore.location=[-keystore <url>]           \\u5BC6\\u94A5\\u5E93\\u4F4D\\u7F6E\n-.storepass.password.password.for.keystore.integrity=[-storepass <\\u53E3\\u4EE4>]         \\u7528\\u4E8E\\u5BC6\\u94A5\\u5E93\\u5B8C\\u6574\\u6027\\u7684\\u53E3\\u4EE4\n-.storetype.type.keystore.type=[-storetype <\\u7C7B\\u578B>]         \\u5BC6\\u94A5\\u5E93\\u7C7B\\u578B\n-.keypass.password.password.for.private.key.if.different.=[-keypass <\\u53E3\\u4EE4>]           \\u79C1\\u6709\\u5BC6\\u94A5\\u7684\\u53E3\\u4EE4 (\\u5982\\u679C\\u4E0D\\u540C)\n-.certchain.file.name.of.alternative.certchain.file=[-certchain <\\u6587\\u4EF6>]         \\u66FF\\u4EE3\\u8BC1\\u4E66\\u94FE\\u6587\\u4EF6\\u7684\\u540D\\u79F0\n-.sigfile.file.name.of.SF.DSA.file=[-sigfile <\\u6587\\u4EF6>]           .SF\/.DSA \\u6587\\u4EF6\\u7684\\u540D\\u79F0\n-.signedjar.file.name.of.signed.JAR.file=[-signedjar <\\u6587\\u4EF6>]         \\u5DF2\\u7B7E\\u540D\\u7684 JAR \\u6587\\u4EF6\\u7684\\u540D\\u79F0\n-.digestalg.algorithm.name.of.digest.algorithm=[-digestalg <\\u7B97\\u6CD5>]        \\u6458\\u8981\\u7B97\\u6CD5\\u7684\\u540D\\u79F0\n-.sigalg.algorithm.name.of.signature.algorithm=[-sigalg <\\u7B97\\u6CD5>]           \\u7B7E\\u540D\\u7B97\\u6CD5\\u7684\\u540D\\u79F0\n-.verify.verify.a.signed.JAR.file=[-verify]                   \\u9A8C\\u8BC1\\u5DF2\\u7B7E\\u540D\\u7684 JAR \\u6587\\u4EF6\n-.version.print.the.program.version=[-version]                  \\u8F93\\u51FA\\u7A0B\\u5E8F\\u7248\\u672C\n-.verbose.suboptions.verbose.output.when.signing.verifying.=[-verbose[:suboptions]]     \\u7B7E\\u540D\/\\u9A8C\\u8BC1\\u65F6\\u8F93\\u51FA\\u8BE6\\u7EC6\\u4FE1\\u606F\\u3002\n-.suboptions.can.be.all.grouped.or.summary=\\u0020                           \\u5B50\\u9009\\u9879\\u53EF\\u4EE5\\u662F all, grouped \\u6216 summary\n-.certs.display.certificates.when.verbose.and.verifying=[-certs]                    \\u8F93\\u51FA\\u8BE6\\u7EC6\\u4FE1\\u606F\\u548C\\u9A8C\\u8BC1\\u65F6\\u663E\\u793A\\u8BC1\\u4E66\n-.certs.revocation.check=[-revCheck]                 \\u542F\\u7528\\u8BC1\\u4E66\\u64A4\\u6D88\\u68C0\\u67E5\n-.tsa.url.location.of.the.Timestamping.Authority=[-tsa <url>]                \\u65F6\\u95F4\\u6233\\u9881\\u53D1\\u673A\\u6784\\u7684\\u4F4D\\u7F6E\n-.tsacert.alias.public.key.certificate.for.Timestamping.Authority=[-tsacert <\\u522B\\u540D>]           \\u65F6\\u95F4\\u6233\\u9881\\u53D1\\u673A\\u6784\\u7684\\u516C\\u5171\\u5BC6\\u94A5\\u8BC1\\u4E66\n-.tsapolicyid.tsapolicyid.for.Timestamping.Authority=[-tsapolicyid <oid>]        \\u65F6\\u95F4\\u6233\\u9881\\u53D1\\u673A\\u6784\\u7684 TSAPolicyID\n-.tsadigestalg.algorithm.of.digest.data.in.timestamping.request=[-tsadigestalg <\\u7B97\\u6CD5>]      \\u65F6\\u95F4\\u6233\\u8BF7\\u6C42\\u4E2D\\u7684\\u6458\\u8981\\u6570\\u636E\\u7684\\u7B97\\u6CD5\n-.internalsf.include.the.SF.file.inside.the.signature.block=[-internalsf]               \\u5728\\u7B7E\\u540D\\u5757\\u5185\\u5305\\u542B .SF \\u6587\\u4EF6\n-.sectionsonly.don.t.compute.hash.of.entire.manifest=[-sectionsonly]             \\u4E0D\\u8BA1\\u7B97\\u6574\\u4E2A\\u6E05\\u5355\\u7684\\u6563\\u5217\n-.protected.keystore.has.protected.authentication.path=[-protected]                \\u5BC6\\u94A5\\u5E93\\u5177\\u6709\\u53D7\\u4FDD\\u62A4\\u9A8C\\u8BC1\\u8DEF\\u5F84\n-.providerName.name.provider.name=[-providerName <\\u540D\\u79F0>]      \\u63D0\\u4F9B\\u65B9\\u540D\\u79F0\n-.add.provider.option=[-addprovider <\\u540D\\u79F0>        \\u6309\\u540D\\u79F0 (\\u4F8B\\u5982 SunPKCS11) \\u6DFB\\u52A0\\u5B89\\u5168\\u63D0\\u4F9B\\u65B9\n-.providerArg.option.1=\\u0020 [-providerArg <\\u53C2\\u6570>]] ... \\u914D\\u7F6E -addprovider \\u7684\\u53C2\\u6570\n-.providerClass.option=[-providerClass <\\u7C7B>     \\u6309\\u5168\\u9650\\u5B9A\\u7C7B\\u540D\\u6DFB\\u52A0\\u5B89\\u5168\\u63D0\\u4F9B\\u65B9\n-.providerArg.option.2=\\u0020 [-providerArg <\\u53C2\\u6570>]] ... \\u914D\\u7F6E -providerClass \\u7684\\u53C2\\u6570\n-.providerPath.option=[-providerPath <list>]      \\u63D0\\u4F9B\\u65B9\\u7C7B\\u8DEF\\u5F84\n-.strict.treat.warnings.as.errors=[-strict]                   \\u5C06\\u8B66\\u544A\\u89C6\\u4E3A\\u9519\\u8BEF\n-.conf.url.specify.a.pre.configured.options.file=[-conf <url>]               \\u6307\\u5B9A\\u9884\\u914D\\u7F6E\\u7684\\u9009\\u9879\\u6587\\u4EF6\n-.print.this.help.message=[-? -h --help]              \\u8F93\\u51FA\\u6B64\\u5E2E\\u52A9\\u6D88\\u606F\n-Option.lacks.argument=\\u9009\\u9879\\u7F3A\\u5C11\\u53C2\\u6570\n-Please.type.jarsigner.help.for.usage=\\u8BF7\\u952E\\u5165 jarsigner --help \\u4EE5\\u4E86\\u89E3\\u7528\\u6CD5\n-Please.specify.jarfile.name=\\u8BF7\\u6307\\u5B9A jarfile \\u540D\\u79F0\n-Please.specify.alias.name=\\u8BF7\\u6307\\u5B9A\\u522B\\u540D\n-Only.one.alias.can.be.specified=\\u53EA\\u80FD\\u6307\\u5B9A\\u4E00\\u4E2A\\u522B\\u540D\n-This.jar.contains.signed.entries.which.is.not.signed.by.the.specified.alias.es.=\\u6B64 jar \\u5305\\u542B\\u672A\\u7531\\u6307\\u5B9A\\u522B\\u540D\\u7B7E\\u540D\\u7684\\u5DF2\\u7B7E\\u540D\\u6761\\u76EE\\u3002\n-This.jar.contains.signed.entries.that.s.not.signed.by.alias.in.this.keystore.=\\u6B64 jar \\u5305\\u542B\\u672A\\u7531\\u6B64\\u5BC6\\u94A5\\u5E93\\u4E2D\\u7684\\u522B\\u540D\\u7B7E\\u540D\\u7684\\u5DF2\\u7B7E\\u540D\\u6761\\u76EE\\u3002\n+.keystore.url.keystore.location=[-keystore <url>]           密钥库位置\n+.storepass.password.password.for.keystore.integrity=[-storepass <口令>]         用于密钥库完整性的口令\n+.storetype.type.keystore.type=[-storetype <类型>]         密钥库类型\n+.keypass.password.password.for.private.key.if.different.=[-keypass <口令>]           私有密钥的口令 (如果不同)\n+.certchain.file.name.of.alternative.certchain.file=[-certchain <文件>]         替代证书链文件的名称\n+.sigfile.file.name.of.SF.DSA.file=[-sigfile <文件>]           .SF\/.DSA 文件的名称\n+.signedjar.file.name.of.signed.JAR.file=[-signedjar <文件>]         已签名的 JAR 文件的名称\n+.digestalg.algorithm.name.of.digest.algorithm=[-digestalg <算法>]        摘要算法的名称\n+.sigalg.algorithm.name.of.signature.algorithm=[-sigalg <算法>]           签名算法的名称\n+.verify.verify.a.signed.JAR.file=[-verify]                   验证已签名的 JAR 文件\n+.version.print.the.program.version=[-version]                  输出程序版本\n+.verbose.suboptions.verbose.output.when.signing.verifying.=[-verbose[:suboptions]]     签名\/验证时输出详细信息。\n+.suboptions.can.be.all.grouped.or.summary=\\u0020                           子选项可以是 all, grouped 或 summary\n+.certs.display.certificates.when.verbose.and.verifying=[-certs]                    输出详细信息和验证时显示证书\n+.certs.revocation.check=[-revCheck]                 启用证书撤消检查\n+.tsa.url.location.of.the.Timestamping.Authority=[-tsa <url>]                时间戳颁发机构的位置\n+.tsacert.alias.public.key.certificate.for.Timestamping.Authority=[-tsacert <别名>]           时间戳颁发机构的公共密钥证书\n+.tsapolicyid.tsapolicyid.for.Timestamping.Authority=[-tsapolicyid <oid>]        时间戳颁发机构的 TSAPolicyID\n+.tsadigestalg.algorithm.of.digest.data.in.timestamping.request=[-tsadigestalg <算法>]      时间戳请求中的摘要数据的算法\n+.internalsf.include.the.SF.file.inside.the.signature.block=[-internalsf]               在签名块内包含 .SF 文件\n+.sectionsonly.don.t.compute.hash.of.entire.manifest=[-sectionsonly]             不计算整个清单的散列\n+.protected.keystore.has.protected.authentication.path=[-protected]                密钥库具有受保护验证路径\n+.providerName.name.provider.name=[-providerName <名称>]      提供方名称\n+.add.provider.option=[-addprovider <名称>        按名称 (例如 SunPKCS11) 添加安全提供方\n+.providerArg.option.1=\\u0020 [-providerArg <参数>]] ... 配置 -addprovider 的参数\n+.providerClass.option=[-providerClass <类>     按全限定类名添加安全提供方\n+.providerArg.option.2=\\u0020 [-providerArg <参数>]] ... 配置 -providerClass 的参数\n+.providerPath.option=[-providerPath <list>]      提供方类路径\n+.strict.treat.warnings.as.errors=[-strict]                   将警告视为错误\n+.conf.url.specify.a.pre.configured.options.file=[-conf <url>]               指定预配置的选项文件\n+.print.this.help.message=[-? -h --help]              输出此帮助消息\n+Option.lacks.argument=选项缺少参数\n+Please.type.jarsigner.help.for.usage=请键入 jarsigner --help 以了解用法\n+Please.specify.jarfile.name=请指定 jarfile 名称\n+Please.specify.alias.name=请指定别名\n+Only.one.alias.can.be.specified=只能指定一个别名\n+This.jar.contains.signed.entries.which.is.not.signed.by.the.specified.alias.es.=此 jar 包含未由指定别名签名的已签名条目。\n+This.jar.contains.signed.entries.that.s.not.signed.by.alias.in.this.keystore.=此 jar 包含未由此密钥库中的别名签名的已签名条目。\n@@ -85,18 +85,18 @@\n-.and.d.more.=(%d \\u53CA\\u4EE5\\u4E0A)\n-.s.signature.was.verified.=\\u0020 s = \\u5DF2\\u9A8C\\u8BC1\\u7B7E\\u540D\\u0020\n-.m.entry.is.listed.in.manifest=\\u0020 m = \\u5728\\u6E05\\u5355\\u4E2D\\u5217\\u51FA\\u6761\\u76EE\n-.k.at.least.one.certificate.was.found.in.keystore=\\u0020 k = \\u5728\\u5BC6\\u94A5\\u5E93\\u4E2D\\u81F3\\u5C11\\u627E\\u5230\\u4E86\\u4E00\\u4E2A\\u8BC1\\u4E66\n-.X.not.signed.by.specified.alias.es.=\\u0020 X = \\u672A\\u7531\\u6307\\u5B9A\\u522B\\u540D\\u7B7E\\u540D\n-.q.unsigned.entry=\\u0020 ? = \\u672A\\u7B7E\\u540D\\u6761\\u76EE\n-no.manifest.=\\u6CA1\\u6709\\u6E05\\u5355\\u3002\n-.Signature.related.entries.=(\\u4E0E\\u7B7E\\u540D\\u76F8\\u5173\\u7684\\u6761\\u76EE)\n-.Unsigned.entries.=(\\u672A\\u7B7E\\u540D\\u6761\\u76EE)\n-.Directory.entries.=\\uFF08\\u76EE\\u5F55\\u6761\\u76EE\\uFF09\n-jar.is.unsigned=jar \\u672A\\u7B7E\\u540D\\u3002\n-jar.treated.unsigned=\\u8B66\\u544A: \\u7B7E\\u540D\\u65E0\\u6CD5\\u89E3\\u6790\\u6216\\u9A8C\\u8BC1, \\u8BE5 jar \\u5C06\\u88AB\\u89C6\\u4E3A\\u672A\\u7B7E\\u540D\\u3002\\u6709\\u5173\\u8BE6\\u7EC6\\u4FE1\\u606F, \\u8BF7\\u5728\\u542F\\u7528\\u8C03\\u8BD5\\u7684\\u60C5\\u51B5\\u4E0B\\u91CD\\u65B0\\u8FD0\\u884C jarsigner (-J-Djava.security.debug=jar)\\u3002\n-jar.treated.unsigned.see.weak=\\u7531\\u4E8E\\u8BE5 jar \\u662F\\u4F7F\\u7528\\u76EE\\u524D\\u5DF2\\u7981\\u7528\\u7684\\u5F31\\u7B97\\u6CD5\\u7B7E\\u540D\\u7684, \\u56E0\\u6B64\\u8BE5 jar \\u5C06\\u88AB\\u89C6\\u4E3A\\u672A\\u7B7E\\u540D\\u3002\\n\\n\\u6709\\u5173\\u8BE6\\u7EC6\\u4FE1\\u606F, \\u8BF7\\u4F7F\\u7528 -verbose \\u9009\\u9879\\u91CD\\u65B0\\u8FD0\\u884C jarsigner\\u3002\n-jar.treated.unsigned.see.weak.verbose=\\u8B66\\u544A: \\u8BE5 jar \\u5C06\\u88AB\\u89C6\\u4E3A\\u672A\\u7B7E\\u540D, \\u56E0\\u4E3A\\u5B83\\u662F\\u7531\\u76EE\\u524D\\u5B89\\u5168\\u5C5E\\u6027\\u7981\\u7528\\u7684\\u5F31\\u7B97\\u6CD5\\u7B7E\\u540D\\u7684:\n-jar.signed.=jar \\u5DF2\\u7B7E\\u540D\\u3002\n-jar.signed.with.signer.errors.=jar \\u5DF2\\u7B7E\\u540D, \\u4F46\\u51FA\\u73B0\\u7B7E\\u540D\\u8005\\u9519\\u8BEF\\u3002\n-jar.verified.=jar \\u5DF2\\u9A8C\\u8BC1\\u3002\n-jar.verified.with.signer.errors.=jar \\u5DF2\\u9A8C\\u8BC1, \\u4F46\\u51FA\\u73B0\\u7B7E\\u540D\\u8005\\u9519\\u8BEF\\u3002\n+.and.d.more.=(%d 及以上)\n+.s.signature.was.verified.=\\u0020 s = 已验证签名\\u0020\n+.m.entry.is.listed.in.manifest=\\u0020 m = 在清单中列出条目\n+.k.at.least.one.certificate.was.found.in.keystore=\\u0020 k = 在密钥库中至少找到了一个证书\n+.X.not.signed.by.specified.alias.es.=\\u0020 X = 未由指定别名签名\n+.q.unsigned.entry=\\u0020 ? = 未签名条目\n+no.manifest.=没有清单。\n+.Signature.related.entries.=(与签名相关的条目)\n+.Unsigned.entries.=(未签名条目)\n+.Directory.entries.=（目录条目）\n+jar.is.unsigned=jar 未签名。\n+jar.treated.unsigned=警告: 签名无法解析或验证, 该 jar 将被视为未签名。有关详细信息, 请在启用调试的情况下重新运行 jarsigner (-J-Djava.security.debug=jar)。\n+jar.treated.unsigned.see.weak=由于该 jar 是使用目前已禁用的弱算法签名的, 因此该 jar 将被视为未签名。\\n\\n有关详细信息, 请使用 -verbose 选项重新运行 jarsigner。\n+jar.treated.unsigned.see.weak.verbose=警告: 该 jar 将被视为未签名, 因为它是由目前安全属性禁用的弱算法签名的:\n+jar.signed.=jar 已签名。\n+jar.signed.with.signer.errors.=jar 已签名, 但出现签名者错误。\n+jar.verified.=jar 已验证。\n+jar.verified.with.signer.errors.=jar 已验证, 但出现签名者错误。\n@@ -104,6 +104,6 @@\n-history.with.ts=- \\u7531 \"%1$s\" \\u7B7E\\u540D\\n    \\u6458\\u8981\\u7B97\\u6CD5: %2$s\\n    \\u7B7E\\u540D\\u7B97\\u6CD5: %3$s, %4$s\\n  \\u7531 \"%6$s\" \\u4E8E %5$tc \\u52A0\\u65F6\\u95F4\\u6233\\n    \\u65F6\\u95F4\\u6233\\u6458\\u8981\\u7B97\\u6CD5: %7$s\\n    \\u65F6\\u95F4\\u6233\\u7B7E\\u540D\\u7B97\\u6CD5: %8$s, %9$s\n-history.without.ts=- \\u7531 \"%1$s\" \\u7B7E\\u540D\\n    \\u6458\\u8981\\u7B97\\u6CD5: %2$s\\n    \\u7B7E\\u540D\\u7B97\\u6CD5: %3$s, %4$s\n-history.nonexistent.entries=\\u8B66\\u544A\\uFF1A\\u4E0D\\u5B58\\u5728\\u7684\\u7B7E\\u540D\\u6761\\u76EE\\uFF1A\\u0020\n-history.unparsable=- \\u65E0\\u6CD5\\u89E3\\u6790\\u7684\\u4E0E\\u7B7E\\u540D\\u76F8\\u5173\\u7684\\u6587\\u4EF6 %s\n-history.nosf=- \\u7F3A\\u5C11\\u4E0E\\u7B7E\\u540D\\u76F8\\u5173\\u7684\\u6587\\u4EF6 META-INF\/%s.SF\n-history.nobk=- \\u4E0E\\u7B7E\\u540D\\u76F8\\u5173\\u7684\\u6587\\u4EF6 META-INF\/%s.SF \\u7F3A\\u5C11\\u5757\\u6587\\u4EF6\n+history.with.ts=- 由 \"%1$s\" 签名\\n    摘要算法: %2$s\\n    签名算法: %3$s, %4$s\\n  由 \"%6$s\" 于 %5$tc 加时间戳\\n    时间戳摘要算法: %7$s\\n    时间戳签名算法: %8$s, %9$s\n+history.without.ts=- 由 \"%1$s\" 签名\\n    摘要算法: %2$s\\n    签名算法: %3$s, %4$s\n+history.nonexistent.entries=警告：不存在的签名条目：\\u0020\n+history.unparsable=- 无法解析的与签名相关的文件 %s\n+history.nosf=- 缺少与签名相关的文件 META-INF\/%s.SF\n+history.nobk=- 与签名相关的文件 META-INF\/%s.SF 缺少块文件\n@@ -111,9 +111,9 @@\n-with.weak=%s (\\u5F31)\n-with.algparams.weak=%1$s \\u4F7F\\u7528 %2$s\\uFF08\\u5F31\\uFF09\n-with.disabled=%s\\uFF08\\u7981\\u7528\\uFF09\n-with.algparams.disabled=%1$s \\u4F7F\\u7528 %2$s\\uFF08\\u7981\\u7528\\uFF09\n-key.bit=%s \\u5BC6\\u94A5\n-key.bit.weak=%s \\u5BC6\\u94A5\\uFF08\\u5F31\\uFF09\n-key.bit.disabled=%s \\u5BC6\\u94A5\\uFF08\\u5DF2\\u7981\\u7528\\uFF09\n-nonexistent.entries.found=\\u6B64 jar \\u7684\\u6587\\u4EF6\\u5305\\u542B\\u4E0D\\u5B58\\u5728\\u7684\\u7B7E\\u540D\\u6761\\u76EE\\u3002\\u6709\\u5173\\u66F4\\u591A\\u8BE6\\u7EC6\\u4FE1\\u606F\\uFF0C\\u8BF7\\u53C2\\u89C1 -verbose \\u8F93\\u51FA\\u3002\n-external.file.attributes.detected=\\u68C0\\u6D4B\\u5230 POSIX \\u6587\\u4EF6\\u6743\\u9650\\u548C\/\\u6216 symlink \\u5C5E\\u6027\\u3002\\u8FD9\\u4E9B\\u5C5E\\u6027\\u5728\\u8FDB\\u884C\\u7B7E\\u540D\\u65F6\\u4F1A\\u88AB\\u5FFD\\u7565\\uFF0C\\u4E0D\\u53D7\\u8BE5\\u7B7E\\u540D\\u7684\\u4FDD\\u62A4\\u3002\n+with.weak=%s (弱)\n+with.algparams.weak=%1$s 使用 %2$s（弱）\n+with.disabled=%s（禁用）\n+with.algparams.disabled=%1$s 使用 %2$s（禁用）\n+key.bit=%s 密钥\n+key.bit.weak=%s 密钥（弱）\n+key.bit.disabled=%s 密钥（已禁用）\n+nonexistent.entries.found=此 jar 的文件包含不存在的签名条目。有关更多详细信息，请参见 -verbose 输出。\n+external.file.attributes.detected=检测到 POSIX 文件权限和\/或 symlink 属性。这些属性在进行签名时会被忽略，不受该签名的保护。\n@@ -122,39 +122,39 @@\n-signature.filename.must.consist.of.the.following.characters.A.Z.0.9.or.=\\u7B7E\\u540D\\u6587\\u4EF6\\u540D\\u5FC5\\u987B\\u5305\\u542B\\u4EE5\\u4E0B\\u5B57\\u7B26: A-Z, 0-9, _ \\u6216 -\n-unable.to.open.jar.file.=\\u65E0\\u6CD5\\u6253\\u5F00 jar \\u6587\\u4EF6:\\u0020\n-unable.to.create.=\\u65E0\\u6CD5\\u521B\\u5EFA:\\u0020\n-.adding.=\\u0020  \\u6B63\\u5728\\u6DFB\\u52A0:\\u0020\n-.updating.=\\u0020\\u6B63\\u5728\\u66F4\\u65B0:\\u0020\n-.signing.=\\u0020 \\u6B63\\u5728\\u7B7E\\u540D:\\u0020\n-attempt.to.rename.signedJarFile.to.jarFile.failed=\\u5C1D\\u8BD5\\u5C06{0}\\u91CD\\u547D\\u540D\\u4E3A{1}\\u65F6\\u5931\\u8D25\n-attempt.to.rename.jarFile.to.origJar.failed=\\u5C1D\\u8BD5\\u5C06{0}\\u91CD\\u547D\\u540D\\u4E3A{1}\\u65F6\\u5931\\u8D25\n-unable.to.sign.jar.=\\u65E0\\u6CD5\\u5BF9 jar \\u8FDB\\u884C\\u7B7E\\u540D:\\u0020\n-Enter.Passphrase.for.keystore.=\\u8F93\\u5165\\u5BC6\\u94A5\\u5E93\\u7684\\u5BC6\\u7801\\u77ED\\u8BED:\\u0020\n-keystore.load.=\\u5BC6\\u94A5\\u5E93\\u52A0\\u8F7D:\\u0020\n-certificate.exception.=\\u8BC1\\u4E66\\u5F02\\u5E38\\u9519\\u8BEF:\\u0020\n-unable.to.instantiate.keystore.class.=\\u65E0\\u6CD5\\u5B9E\\u4F8B\\u5316\\u5BC6\\u94A5\\u5E93\\u7C7B:\\u0020\n-Certificate.chain.not.found.for.alias.alias.must.reference.a.valid.KeyStore.key.entry.containing.a.private.key.and=\\u627E\\u4E0D\\u5230{0}\\u7684\\u8BC1\\u4E66\\u94FE\\u3002{1}\\u5FC5\\u987B\\u5F15\\u7528\\u5305\\u542B\\u79C1\\u6709\\u5BC6\\u94A5\\u548C\\u76F8\\u5E94\\u7684\\u516C\\u5171\\u5BC6\\u94A5\\u8BC1\\u4E66\\u94FE\\u7684\\u6709\\u6548\\u5BC6\\u94A5\\u5E93\\u5BC6\\u94A5\\u6761\\u76EE\\u3002\n-File.specified.by.certchain.does.not.exist=\\u7531 -certchain \\u6307\\u5B9A\\u7684\\u6587\\u4EF6\\u4E0D\\u5B58\\u5728\n-Cannot.restore.certchain.from.file.specified=\\u65E0\\u6CD5\\u4ECE\\u6307\\u5B9A\\u7684\\u6587\\u4EF6\\u8FD8\\u539F certchain\n-Certificate.chain.not.found.in.the.file.specified.=\\u5728\\u6307\\u5B9A\\u7684\\u6587\\u4EF6\\u4E2D\\u627E\\u4E0D\\u5230\\u8BC1\\u4E66\\u94FE\\u3002\n-found.non.X.509.certificate.in.signer.s.chain=\\u5728\\u7B7E\\u540D\\u8005\\u7684\\u94FE\\u4E2D\\u627E\\u5230\\u975E X.509 \\u8BC1\\u4E66\n-Enter.key.password.for.alias.=\\u8F93\\u5165{0}\\u7684\\u5BC6\\u94A5\\u53E3\\u4EE4:\\u0020\n-unable.to.recover.key.from.keystore=\\u65E0\\u6CD5\\u4ECE\\u5BC6\\u94A5\\u5E93\\u4E2D\\u6062\\u590D\\u5BC6\\u94A5\n-key.associated.with.alias.not.a.private.key=\\u4E0E{0}\\u5173\\u8054\\u7684\\u5BC6\\u94A5\\u4E0D\\u662F\\u79C1\\u6709\\u5BC6\\u94A5\n-you.must.enter.key.password=\\u5FC5\\u987B\\u8F93\\u5165\\u5BC6\\u94A5\\u53E3\\u4EE4\n-unable.to.read.password.=\\u65E0\\u6CD5\\u8BFB\\u53D6\\u53E3\\u4EE4:\\u0020\n-certificate.is.valid.from=\\u8BC1\\u4E66\\u7684\\u6709\\u6548\\u671F\\u4E3A{0}\\u81F3{1}\n-certificate.expired.on=\\u8BC1\\u4E66\\u5230\\u671F\\u65E5\\u671F\\u4E3A {0}\n-certificate.is.not.valid.until=\\u76F4\\u5230{0}, \\u8BC1\\u4E66\\u624D\\u6709\\u6548\n-certificate.will.expire.on=\\u8BC1\\u4E66\\u5C06\\u5728{0}\\u5230\\u671F\n-.Invalid.certificate.chain.=[\\u65E0\\u6548\\u7684\\u8BC1\\u4E66\\u94FE:\\u0020\n-.Invalid.TSA.certificate.chain.=[\\u65E0\\u6548 TSA \\u7684\\u8BC1\\u4E66\\u94FE:\\u0020\n-requesting.a.signature.timestamp=\\u6B63\\u5728\\u8BF7\\u6C42\\u7B7E\\u540D\\u65F6\\u95F4\\u6233\n-TSA.location.=TSA \\u4F4D\\u7F6E:\\u0020\n-TSA.certificate.=TSA \\u8BC1\\u4E66:\\u0020\n-no.response.from.the.Timestamping.Authority.=\\u65F6\\u95F4\\u6233\\u9881\\u53D1\\u673A\\u6784\\u6CA1\\u6709\\u54CD\\u5E94\\u3002\\u5982\\u679C\\u8981\\u4ECE\\u9632\\u706B\\u5899\\u540E\\u9762\\u8FDE\\u63A5, \\u5219\\u53EF\\u80FD\\u9700\\u8981\\u6307\\u5B9A HTTP \\u6216 HTTPS \\u4EE3\\u7406\\u3002\\u8BF7\\u4E3A jarsigner \\u63D0\\u4F9B\\u4EE5\\u4E0B\\u9009\\u9879:\\u0020\n-or=\\u6216\n-Certificate.not.found.for.alias.alias.must.reference.a.valid.KeyStore.entry.containing.an.X.509.public.key.certificate.for.the=\\u627E\\u4E0D\\u5230{0}\\u7684\\u8BC1\\u4E66\\u3002{1}\\u5FC5\\u987B\\u5F15\\u7528\\u5305\\u542B\\u65F6\\u95F4\\u6233\\u9881\\u53D1\\u673A\\u6784\\u7684 X.509 \\u516C\\u5171\\u5BC6\\u94A5\\u8BC1\\u4E66\\u7684\\u6709\\u6548\\u5BC6\\u94A5\\u5E93\\u6761\\u76EE\\u3002\n-entry.was.signed.on=\\u6761\\u76EE\\u7684\\u7B7E\\u540D\\u65E5\\u671F\\u4E3A {0}\n-Warning.=\\u8B66\\u544A:\\u0020\n-Error.=\\u9519\\u8BEF:\\u0020\n-...Signer=>>> \\u7B7E\\u540D\\u8005\n+signature.filename.must.consist.of.the.following.characters.A.Z.0.9.or.=签名文件名必须包含以下字符: A-Z, 0-9, _ 或 -\n+unable.to.open.jar.file.=无法打开 jar 文件:\\u0020\n+unable.to.create.=无法创建:\\u0020\n+.adding.=\\u0020  正在添加:\\u0020\n+.updating.=\\u0020正在更新:\\u0020\n+.signing.=\\u0020 正在签名:\\u0020\n+attempt.to.rename.signedJarFile.to.jarFile.failed=尝试将{0}重命名为{1}时失败\n+attempt.to.rename.jarFile.to.origJar.failed=尝试将{0}重命名为{1}时失败\n+unable.to.sign.jar.=无法对 jar 进行签名:\\u0020\n+Enter.Passphrase.for.keystore.=输入密钥库的密码短语:\\u0020\n+keystore.load.=密钥库加载:\\u0020\n+certificate.exception.=证书异常错误:\\u0020\n+unable.to.instantiate.keystore.class.=无法实例化密钥库类:\\u0020\n+Certificate.chain.not.found.for.alias.alias.must.reference.a.valid.KeyStore.key.entry.containing.a.private.key.and=找不到{0}的证书链。{1}必须引用包含私有密钥和相应的公共密钥证书链的有效密钥库密钥条目。\n+File.specified.by.certchain.does.not.exist=由 -certchain 指定的文件不存在\n+Cannot.restore.certchain.from.file.specified=无法从指定的文件还原 certchain\n+Certificate.chain.not.found.in.the.file.specified.=在指定的文件中找不到证书链。\n+found.non.X.509.certificate.in.signer.s.chain=在签名者的链中找到非 X.509 证书\n+Enter.key.password.for.alias.=输入{0}的密钥口令:\\u0020\n+unable.to.recover.key.from.keystore=无法从密钥库中恢复密钥\n+key.associated.with.alias.not.a.private.key=与{0}关联的密钥不是私有密钥\n+you.must.enter.key.password=必须输入密钥口令\n+unable.to.read.password.=无法读取口令:\\u0020\n+certificate.is.valid.from=证书的有效期为{0}至{1}\n+certificate.expired.on=证书到期日期为 {0}\n+certificate.is.not.valid.until=直到{0}, 证书才有效\n+certificate.will.expire.on=证书将在{0}到期\n+.Invalid.certificate.chain.=[无效的证书链:\\u0020\n+.Invalid.TSA.certificate.chain.=[无效 TSA 的证书链:\\u0020\n+requesting.a.signature.timestamp=正在请求签名时间戳\n+TSA.location.=TSA 位置:\\u0020\n+TSA.certificate.=TSA 证书:\\u0020\n+no.response.from.the.Timestamping.Authority.=时间戳颁发机构没有响应。如果要从防火墙后面连接, 则可能需要指定 HTTP 或 HTTPS 代理。请为 jarsigner 提供以下选项:\\u0020\n+or=或\n+Certificate.not.found.for.alias.alias.must.reference.a.valid.KeyStore.entry.containing.an.X.509.public.key.certificate.for.the=找不到{0}的证书。{1}必须引用包含时间戳颁发机构的 X.509 公共密钥证书的有效密钥库条目。\n+entry.was.signed.on=条目的签名日期为 {0}\n+Warning.=警告:\\u0020\n+Error.=错误:\\u0020\n+...Signer=>>> 签名者\n@@ -162,46 +162,46 @@\n-trusted.certificate=\\u53EF\\u4FE1\\u8BC1\\u4E66\n-This.jar.contains.unsigned.entries.which.have.not.been.integrity.checked.=\\u6B64 jar \\u5305\\u542B\\u5C1A\\u672A\\u8FDB\\u884C\\u5B8C\\u6574\\u6027\\u68C0\\u67E5\\u7684\\u672A\\u7B7E\\u540D\\u6761\\u76EE\\u3002\\u0020\n-This.jar.contains.entries.whose.signer.certificate.has.expired.=\\u6B64 jar \\u5305\\u542B\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u5DF2\\u8FC7\\u671F\\u7684\\u6761\\u76EE\\u3002\\u0020\n-This.jar.contains.entries.whose.signer.certificate.will.expire.within.six.months.=\\u6B64 jar \\u5305\\u542B\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u5C06\\u5728\\u516D\\u4E2A\\u6708\\u5185\\u8FC7\\u671F\\u7684\\u6761\\u76EE\\u3002\\u0020\n-This.jar.contains.entries.whose.signer.certificate.is.not.yet.valid.=\\u6B64 jar \\u5305\\u542B\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u4ECD\\u65E0\\u6548\\u7684\\u6761\\u76EE\\u3002\\u0020\n-This.jar.contains.entries.whose.signer.certificate.is.self.signed.=\\u6B64 jar \\u5305\\u542B\\u5176\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u4E3A\\u81EA\\u7B7E\\u540D\\u8BC1\\u4E66\\u7684\\u6761\\u76EE\\u3002\n-Re.run.with.the.verbose.and.certs.options.for.more.details.=\\u6709\\u5173\\u8BE6\\u7EC6\\u4FE1\\u606F, \\u8BF7\\u4F7F\\u7528 -verbose \\u548C -certs \\u9009\\u9879\\u91CD\\u65B0\\u8FD0\\u884C\\u3002\n-The.signer.certificate.has.expired.=\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u5DF2\\u8FC7\\u671F\\u3002\n-The.timestamp.expired.1.but.usable.2=\\u65F6\\u95F4\\u6233\\u5230\\u671F\\u65E5\\u671F\\u4E3A %1$tY-%1$tm-%1$td\\u3002\\u4E0D\\u8FC7\\uFF0C\\u5728\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u4E8E %2$tY-%2$tm-%2$td \\u5230\\u671F\\u4E4B\\u524D\\uFF0CJAR \\u5C06\\u6709\\u6548\\u3002\n-The.timestamp.has.expired.=\\u65F6\\u95F4\\u6233\\u5DF2\\u5230\\u671F\\u3002\n-The.signer.certificate.will.expire.within.six.months.=\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u5C06\\u5728\\u516D\\u4E2A\\u6708\\u5185\\u8FC7\\u671F\\u3002\n-The.timestamp.will.expire.within.one.year.on.1=\\u65F6\\u95F4\\u6233\\u5C06\\u5728\\u4E00\\u5E74\\u5185\\u4E8E %1$tY-%1$tm-%1$td \\u5230\\u671F\\u3002\n-The.timestamp.will.expire.within.one.year.on.1.but.2=\\u65F6\\u95F4\\u6233\\u5C06\\u5728\\u4E00\\u5E74\\u5185\\u4E8E %1$tY-%1$tm-%1$td \\u5230\\u671F\\u3002\\u4E0D\\u8FC7\\uFF0C\\u5728\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u4E8E %2$tY-%2$tm-%2$td \\u5230\\u671F\\u4E4B\\u524D\\uFF0CJAR \\u5C06\\u6709\\u6548\\u3002\n-The.signer.certificate.is.not.yet.valid.=\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u4ECD\\u65E0\\u6548\\u3002\n-The.signer.certificate.s.KeyUsage.extension.doesn.t.allow.code.signing.=\\u7531\\u4E8E\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u7684 KeyUsage \\u6269\\u5C55\\u800C\\u65E0\\u6CD5\\u8FDB\\u884C\\u4EE3\\u7801\\u7B7E\\u540D\\u3002\n-The.signer.certificate.s.ExtendedKeyUsage.extension.doesn.t.allow.code.signing.=\\u7531\\u4E8E\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u7684 ExtendedKeyUsage \\u6269\\u5C55\\u800C\\u65E0\\u6CD5\\u8FDB\\u884C\\u4EE3\\u7801\\u7B7E\\u540D\\u3002\n-The.signer.certificate.s.NetscapeCertType.extension.doesn.t.allow.code.signing.=\\u7531\\u4E8E\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u7684 NetscapeCertType \\u6269\\u5C55\\u800C\\u65E0\\u6CD5\\u8FDB\\u884C\\u4EE3\\u7801\\u7B7E\\u540D\\u3002\n-This.jar.contains.entries.whose.signer.certificate.s.KeyUsage.extension.doesn.t.allow.code.signing.=\\u6B64 jar \\u5305\\u542B\\u7531\\u4E8E\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u7684 KeyUsage \\u6269\\u5C55\\u800C\\u65E0\\u6CD5\\u8FDB\\u884C\\u4EE3\\u7801\\u7B7E\\u540D\\u7684\\u6761\\u76EE\\u3002\n-This.jar.contains.entries.whose.signer.certificate.s.ExtendedKeyUsage.extension.doesn.t.allow.code.signing.=\\u6B64 jar \\u5305\\u542B\\u7531\\u4E8E\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u7684 ExtendedKeyUsage \\u6269\\u5C55\\u800C\\u65E0\\u6CD5\\u8FDB\\u884C\\u4EE3\\u7801\\u7B7E\\u540D\\u7684\\u6761\\u76EE\\u3002\n-This.jar.contains.entries.whose.signer.certificate.s.NetscapeCertType.extension.doesn.t.allow.code.signing.=\\u6B64 jar \\u5305\\u542B\\u7531\\u4E8E\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u7684 NetscapeCertType \\u6269\\u5C55\\u800C\\u65E0\\u6CD5\\u8FDB\\u884C\\u4EE3\\u7801\\u7B7E\\u540D\\u7684\\u6761\\u76EE\\u3002\n-.{0}.extension.does.not.support.code.signing.=[{0} \\u6269\\u5C55\\u4E0D\\u652F\\u6301\\u4EE3\\u7801\\u7B7E\\u540D]\n-The.signer.s.certificate.chain.is.invalid.reason.1=\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u94FE\\u65E0\\u6548\\u3002\\u539F\\u56E0: %s\n-The.tsa.certificate.chain.is.invalid.reason.1=TSA \\u8BC1\\u4E66\\u94FE\\u65E0\\u6548\\u3002\\u539F\\u56E0: %s\n-The.signer.s.certificate.is.self.signed.=\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u4E3A\\u81EA\\u7B7E\\u540D\\u8BC1\\u4E66\\u3002\n-The.1.algorithm.specified.for.the.2.option.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=\\u4E3A %2$s \\u9009\\u9879\\u6307\\u5B9A\\u7684 %1$s \\u7B97\\u6CD5\\u88AB\\u89C6\\u4E3A\\u5B58\\u5728\\u5B89\\u5168\\u98CE\\u9669\\u3002\\u6B64\\u7B97\\u6CD5\\u5C06\\u5728\\u672A\\u6765\\u7684\\u66F4\\u65B0\\u4E2D\\u88AB\\u7981\\u7528\\u3002\n-The.1.algorithm.specified.for.the.2.option.is.considered.a.security.risk.and.is.disabled.=\\u4E3A %2$s \\u9009\\u9879\\u6307\\u5B9A\\u7684 %1$s \\u7B97\\u6CD5\\u88AB\\u89C6\\u4E3A\\u5B58\\u5728\\u5B89\\u5168\\u98CE\\u9669\\u800C\\u4E14\\u88AB\\u7981\\u7528\\u3002\n-The.timestamp.digest.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=%1$s \\u65F6\\u95F4\\u6233\\u6458\\u8981\\u7B97\\u6CD5\\u88AB\\u89C6\\u4E3A\\u5B58\\u5728\\u5B89\\u5168\\u98CE\\u9669\\u3002\\u6B64\\u7B97\\u6CD5\\u5C06\\u5728\\u672A\\u6765\\u7684\\u66F4\\u65B0\\u4E2D\\u88AB\\u7981\\u7528\\u3002\n-The.digest.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=%1$s \\u6458\\u8981\\u7B97\\u6CD5\\u88AB\\u89C6\\u4E3A\\u5B58\\u5728\\u5B89\\u5168\\u98CE\\u9669\\u3002\\u6B64\\u7B97\\u6CD5\\u5C06\\u5728\\u672A\\u6765\\u7684\\u66F4\\u65B0\\u4E2D\\u88AB\\u7981\\u7528\\u3002\n-The.signature.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=%1$s \\u7B7E\\u540D\\u7B97\\u6CD5\\u88AB\\u89C6\\u4E3A\\u5B58\\u5728\\u5B89\\u5168\\u98CE\\u9669\\u3002\\u6B64\\u7B97\\u6CD5\\u5C06\\u5728\\u672A\\u6765\\u7684\\u66F4\\u65B0\\u4E2D\\u88AB\\u7981\\u7528\\u3002\n-size.bit.alg=%1$d \\u4F4D %2$s\n-The.full.keyAlgName.signing.key.is.considered.a.security.risk..It.will.be.disabled.in.a.future.update.=%s \\u7B7E\\u540D\\u5BC6\\u94A5\\u88AB\\u89C6\\u4E3A\\u5B89\\u5168\\u98CE\\u9669\\u3002\\u5728\\u5C06\\u6765\\u7684\\u66F4\\u65B0\\u4E2D\\u5C06\\u7981\\u7528\\u5B83\\u3002\n-The.full.keyAlgName.signing.key.is.considered.a.security.risk.and.is.disabled.=%s \\u7B7E\\u540D\\u5BC6\\u94A5\\u88AB\\u89C6\\u4E3A\\u5B89\\u5168\\u98CE\\u9669\\u5E76\\u88AB\\u7981\\u7528\\u3002\n-This.jar.contains.entries.whose.certificate.chain.is.invalid.reason.1=\\u6B64 jar \\u5305\\u542B\\u5176\\u8BC1\\u4E66\\u94FE\\u65E0\\u6548\\u7684\\u6761\\u76EE\\u3002\\u539F\\u56E0: %s\n-This.jar.contains.entries.whose.tsa.certificate.chain.is.invalid.reason.1=\\u6B64 jar \\u5305\\u542B\\u5176 TSA \\u8BC1\\u4E66\\u94FE\\u65E0\\u6548\\u7684\\u6761\\u76EE\\u3002\\u539F\\u56E0: %s\n-no.timestamp.signing=\\u672A\\u63D0\\u4F9B -tsa \\u6216 -tsacert, \\u6B64 jar \\u6CA1\\u6709\\u65F6\\u95F4\\u6233\\u3002\\u5982\\u679C\\u6CA1\\u6709\\u65F6\\u95F4\\u6233, \\u5219\\u5728\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u7684\\u5230\\u671F\\u65E5\\u671F (%1$tY-%1$tm-%1$td) \\u4E4B\\u540E, \\u7528\\u6237\\u53EF\\u80FD\\u65E0\\u6CD5\\u9A8C\\u8BC1\\u6B64 jar\\u3002\n-invalid.timestamp.signing=\\u65F6\\u95F4\\u6233\\u65E0\\u6548\\u3002\\u5982\\u679C\\u6CA1\\u6709\\u6709\\u6548\\u7684\\u65F6\\u95F4\\u6233\\uFF0C\\u5219\\u5728\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u7684\\u5230\\u671F\\u65E5\\u671F (%1$tY-%1$tm-%1$td) \\u4E4B\\u540E\\uFF0C\\u7528\\u6237\\u53EF\\u80FD\\u65E0\\u6CD5\\u9A8C\\u8BC1\\u6B64 jar\\u3002\n-no.timestamp.verifying=\\u6B64 jar \\u5305\\u542B\\u7684\\u7B7E\\u540D\\u6CA1\\u6709\\u65F6\\u95F4\\u6233\\u3002\\u5982\\u679C\\u6CA1\\u6709\\u65F6\\u95F4\\u6233, \\u5219\\u5728\\u5176\\u4E2D\\u4EFB\\u4E00\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u5230\\u671F (\\u6700\\u65E9\\u4E3A %1$tY-%1$tm-%1$td) \\u4E4B\\u540E, \\u7528\\u6237\\u53EF\\u80FD\\u65E0\\u6CD5\\u9A8C\\u8BC1\\u6B64 jar\\u3002\n-bad.timestamp.verifying=\\u6B64 jar \\u5305\\u542B\\u5E26\\u6709\\u65E0\\u6548\\u65F6\\u95F4\\u6233\\u7684\\u7B7E\\u540D\\u3002\\u5982\\u679C\\u6CA1\\u6709\\u6709\\u6548\\u65F6\\u95F4\\u6233, \\u5219\\u5728\\u5176\\u4E2D\\u4EFB\\u4E00\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u5230\\u671F (\\u6700\\u65E9\\u4E3A %1$tY-%1$tm-%1$td) \\u4E4B\\u540E, \\u7528\\u6237\\u53EF\\u80FD\\u65E0\\u6CD5\\u9A8C\\u8BC1\\u6B64 jar\\u3002\\n\\u6709\\u5173\\u8BE6\\u7EC6\\u4FE1\\u606F, \\u8BF7\\u4F7F\\u7528 -J-Djava.security.debug=jar \\u91CD\\u65B0\\u8FD0\\u884C jarsigner\\u3002\n-The.signer.certificate.will.expire.on.1.=\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u5C06\\u4E8E %1$tY-%1$tm-%1$td \\u5230\\u671F\\u3002\n-The.timestamp.will.expire.on.1.=\\u65F6\\u95F4\\u6233\\u5C06\\u4E8E %1$tY-%1$tm-%1$td \\u5230\\u671F\\u3002\n-signer.cert.expired.1.but.timestamp.good.2.=\\u7B7E\\u540D\\u8005\\u8BC1\\u4E66\\u5230\\u671F\\u65E5\\u671F\\u4E3A %1$tY-%1$tm-%1$td\\u3002\\u4E0D\\u8FC7\\uFF0C\\u5728\\u65F6\\u95F4\\u6233\\u4E8E %2$tY-%2$tm-%2$td \\u5230\\u671F\\u4E4B\\u524D\\uFF0CJAR \\u5C06\\u6709\\u6548\\u3002\n-Unknown.password.type.=\\u672A\\u77E5\\u53E3\\u4EE4\\u7C7B\\u578B:\\u0020\n-Cannot.find.environment.variable.=\\u627E\\u4E0D\\u5230\\u73AF\\u5883\\u53D8\\u91CF:\\u0020\n-Cannot.find.file.=\\u627E\\u4E0D\\u5230\\u6587\\u4EF6:\\u0020\n-event.ocsp.check=\\u6B63\\u5728\\u8054\\u7CFB\\u4F4D\\u4E8E %s \\u7684 OCSP \\u670D\\u52A1\\u5668...\n-event.crl.check=\\u6B63\\u5728\\u4ECE %s \\u4E0B\\u8F7D CRL...\n+trusted.certificate=可信证书\n+This.jar.contains.unsigned.entries.which.have.not.been.integrity.checked.=此 jar 包含尚未进行完整性检查的未签名条目。\\u0020\n+This.jar.contains.entries.whose.signer.certificate.has.expired.=此 jar 包含签名者证书已过期的条目。\\u0020\n+This.jar.contains.entries.whose.signer.certificate.will.expire.within.six.months.=此 jar 包含签名者证书将在六个月内过期的条目。\\u0020\n+This.jar.contains.entries.whose.signer.certificate.is.not.yet.valid.=此 jar 包含签名者证书仍无效的条目。\\u0020\n+This.jar.contains.entries.whose.signer.certificate.is.self.signed.=此 jar 包含其签名者证书为自签名证书的条目。\n+Re.run.with.the.verbose.and.certs.options.for.more.details.=有关详细信息, 请使用 -verbose 和 -certs 选项重新运行。\n+The.signer.certificate.has.expired.=签名者证书已过期。\n+The.timestamp.expired.1.but.usable.2=时间戳到期日期为 %1$tY-%1$tm-%1$td。不过，在签名者证书于 %2$tY-%2$tm-%2$td 到期之前，JAR 将有效。\n+The.timestamp.has.expired.=时间戳已到期。\n+The.signer.certificate.will.expire.within.six.months.=签名者证书将在六个月内过期。\n+The.timestamp.will.expire.within.one.year.on.1=时间戳将在一年内于 %1$tY-%1$tm-%1$td 到期。\n+The.timestamp.will.expire.within.one.year.on.1.but.2=时间戳将在一年内于 %1$tY-%1$tm-%1$td 到期。不过，在签名者证书于 %2$tY-%2$tm-%2$td 到期之前，JAR 将有效。\n+The.signer.certificate.is.not.yet.valid.=签名者证书仍无效。\n+The.signer.certificate.s.KeyUsage.extension.doesn.t.allow.code.signing.=由于签名者证书的 KeyUsage 扩展而无法进行代码签名。\n+The.signer.certificate.s.ExtendedKeyUsage.extension.doesn.t.allow.code.signing.=由于签名者证书的 ExtendedKeyUsage 扩展而无法进行代码签名。\n+The.signer.certificate.s.NetscapeCertType.extension.doesn.t.allow.code.signing.=由于签名者证书的 NetscapeCertType 扩展而无法进行代码签名。\n+This.jar.contains.entries.whose.signer.certificate.s.KeyUsage.extension.doesn.t.allow.code.signing.=此 jar 包含由于签名者证书的 KeyUsage 扩展而无法进行代码签名的条目。\n+This.jar.contains.entries.whose.signer.certificate.s.ExtendedKeyUsage.extension.doesn.t.allow.code.signing.=此 jar 包含由于签名者证书的 ExtendedKeyUsage 扩展而无法进行代码签名的条目。\n+This.jar.contains.entries.whose.signer.certificate.s.NetscapeCertType.extension.doesn.t.allow.code.signing.=此 jar 包含由于签名者证书的 NetscapeCertType 扩展而无法进行代码签名的条目。\n+.{0}.extension.does.not.support.code.signing.=[{0} 扩展不支持代码签名]\n+The.signer.s.certificate.chain.is.invalid.reason.1=签名者证书链无效。原因: %s\n+The.tsa.certificate.chain.is.invalid.reason.1=TSA 证书链无效。原因: %s\n+The.signer.s.certificate.is.self.signed.=签名者证书为自签名证书。\n+The.1.algorithm.specified.for.the.2.option.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=为 %2$s 选项指定的 %1$s 算法被视为存在安全风险。此算法将在未来的更新中被禁用。\n+The.1.algorithm.specified.for.the.2.option.is.considered.a.security.risk.and.is.disabled.=为 %2$s 选项指定的 %1$s 算法被视为存在安全风险而且被禁用。\n+The.timestamp.digest.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=%1$s 时间戳摘要算法被视为存在安全风险。此算法将在未来的更新中被禁用。\n+The.digest.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=%1$s 摘要算法被视为存在安全风险。此算法将在未来的更新中被禁用。\n+The.signature.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=%1$s 签名算法被视为存在安全风险。此算法将在未来的更新中被禁用。\n+size.bit.alg=%1$d 位 %2$s\n+The.full.keyAlgName.signing.key.is.considered.a.security.risk..It.will.be.disabled.in.a.future.update.=%s 签名密钥被视为安全风险。在将来的更新中将禁用它。\n+The.full.keyAlgName.signing.key.is.considered.a.security.risk.and.is.disabled.=%s 签名密钥被视为安全风险并被禁用。\n+This.jar.contains.entries.whose.certificate.chain.is.invalid.reason.1=此 jar 包含其证书链无效的条目。原因: %s\n+This.jar.contains.entries.whose.tsa.certificate.chain.is.invalid.reason.1=此 jar 包含其 TSA 证书链无效的条目。原因: %s\n+no.timestamp.signing=未提供 -tsa 或 -tsacert, 此 jar 没有时间戳。如果没有时间戳, 则在签名者证书的到期日期 (%1$tY-%1$tm-%1$td) 之后, 用户可能无法验证此 jar。\n+invalid.timestamp.signing=时间戳无效。如果没有有效的时间戳，则在签名者证书的到期日期 (%1$tY-%1$tm-%1$td) 之后，用户可能无法验证此 jar。\n+no.timestamp.verifying=此 jar 包含的签名没有时间戳。如果没有时间戳, 则在其中任一签名者证书到期 (最早为 %1$tY-%1$tm-%1$td) 之后, 用户可能无法验证此 jar。\n+bad.timestamp.verifying=此 jar 包含带有无效时间戳的签名。如果没有有效时间戳, 则在其中任一签名者证书到期 (最早为 %1$tY-%1$tm-%1$td) 之后, 用户可能无法验证此 jar。\\n有关详细信息, 请使用 -J-Djava.security.debug=jar 重新运行 jarsigner。\n+The.signer.certificate.will.expire.on.1.=签名者证书将于 %1$tY-%1$tm-%1$td 到期。\n+The.timestamp.will.expire.on.1.=时间戳将于 %1$tY-%1$tm-%1$td 到期。\n+signer.cert.expired.1.but.timestamp.good.2.=签名者证书到期日期为 %1$tY-%1$tm-%1$td。不过，在时间戳于 %2$tY-%2$tm-%2$td 到期之前，JAR 将有效。\n+Unknown.password.type.=未知口令类型:\\u0020\n+Cannot.find.environment.variable.=找不到环境变量:\\u0020\n+Cannot.find.file.=找不到文件:\\u0020\n+event.ocsp.check=正在联系位于 %s 的 OCSP 服务器...\n+event.crl.check=正在从 %s 下载 CRL...\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/resources\/jarsigner_zh_CN.properties","additions":167,"deletions":167,"binary":false,"changes":334,"status":"modified"}]}