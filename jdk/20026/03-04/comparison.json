{"files":[{"patch":"@@ -5397,1 +5397,1 @@\n-   *  c_rarg6   - isMIME, Decoding MIME block - unused here\n+   *  c_rarg6   - isMIME, Decoding MIME block\n@@ -5457,1 +5457,1 @@\n-    Label ProcessScalar, ProcessVector;\n+    Label ProcessScalar, ScalarLoop;\n@@ -5460,1 +5460,1 @@\n-    \/\/ and in this intrinsic we only processe data of length in multiple of 4,\n+    \/\/ and in this intrinsic we only process data of length in multiple of 4,\n@@ -5476,64 +5476,0 @@\n-\n-    \/\/ scalar version\n-    {\n-      Label ScalarLoop;\n-\n-      Register byte0 = soff, byte1 = send, byte2 = doff, byte3 = isURL;\n-      Register combined32Bits = x29; \/\/ t5\n-\n-      if (UseRVV) {\n-        __ bnez(isMIME, ScalarLoop);\n-        __ mv(t0, MaxVectorSize * 4);\n-        __ bge(length, t0, ProcessVector);\n-        __ BIND(ProcessScalar);\n-        __ beqz(length, Exit);\n-      }\n-\n-      __ BIND(ScalarLoop);\n-      {\n-        \/\/ encoded:   [byte0[5:0] : byte1[5:0] : byte2[5:0]] : byte3[5:0]] =>\n-        \/\/ plain:     [byte0[5:0]+byte1[5:4] : byte1[3:0]+byte2[5:2] : byte2[1:0]+byte3[5:0]]\n-\n-        \/\/ load 4 bytes encoded src data\n-        __ lbu(byte0, Address(src, 0));\n-        __ lbu(byte1, Address(src, 1));\n-        __ lbu(byte2, Address(src, 2));\n-        __ lbu(byte3, Address(src, 3));\n-        __ addi(src, src, 4);\n-\n-        \/\/ get codec index and decode (ie. load from codec by index)\n-        __ add(byte0, codec, byte0);\n-        __ add(byte1, codec, byte1);\n-        __ lb(byte0, Address(byte0, 0));\n-        __ lb(byte1, Address(byte1, 0));\n-        __ add(byte2, codec, byte2);\n-        __ add(byte3, codec, byte3);\n-        __ lb(byte2, Address(byte2, 0));\n-        __ lb(byte3, Address(byte3, 0));\n-        __ slliw(byte0, byte0, 18);\n-        __ slliw(byte1, byte1, 12);\n-        __ orr(byte0, byte0, byte1);\n-        __ orr(byte0, byte0, byte3);\n-        __ slliw(byte2, byte2, 6);\n-        __ orr(combined32Bits, byte0, byte2);\n-\n-        \/\/ error check\n-        __ bltz(combined32Bits, Exit);\n-\n-        \/\/ store 3 bytes decoded data\n-        __ sraiw(byte0, combined32Bits, 16);\n-        __ sraiw(byte1, combined32Bits, 8);\n-        __ sb(byte0, Address(dst, 0));\n-        __ sb(byte1, Address(dst, 1));\n-        __ sb(combined32Bits, Address(dst, 2));\n-\n-        __ sub(length, length, 4);\n-        __ addi(dst, dst, 3);\n-        \/\/ loop back\n-        __ bnez(length, ScalarLoop);\n-\n-        __ j(Exit);\n-      }\n-    }\n-\n-\n@@ -5542,1 +5478,1 @@\n-      __ BIND(ProcessVector);\n+      __ bnez(isMIME, ScalarLoop);\n@@ -5578,1 +5514,1 @@\n-      \/\/ Assembler::m2\n+      \/\/ Assembler::m1\n@@ -5593,1 +5529,52 @@\n-      __ beq(failedIdx, minusOne, ProcessScalar);\n+      __ bne(failedIdx, minusOne, Exit);\n+\n+      __ BIND(ProcessScalar);\n+      __ beqz(length, Exit);\n+    }\n+\n+    \/\/ scalar version\n+    {\n+      Register byte0 = soff, byte1 = send, byte2 = doff, byte3 = isURL;\n+      Register combined32Bits = x29; \/\/ t5\n+\n+      \/\/ encoded:   [byte0[5:0] : byte1[5:0] : byte2[5:0]] : byte3[5:0]] =>\n+      \/\/ plain:     [byte0[5:0]+byte1[5:4] : byte1[3:0]+byte2[5:2] : byte2[1:0]+byte3[5:0]]\n+      __ BIND(ScalarLoop);\n+\n+      \/\/ load 4 bytes encoded src data\n+      __ lbu(byte0, Address(src, 0));\n+      __ lbu(byte1, Address(src, 1));\n+      __ lbu(byte2, Address(src, 2));\n+      __ lbu(byte3, Address(src, 3));\n+      __ addi(src, src, 4);\n+\n+      \/\/ get codec index and decode (ie. load from codec by index)\n+      __ add(byte0, codec, byte0);\n+      __ add(byte1, codec, byte1);\n+      __ lb(byte0, Address(byte0, 0));\n+      __ lb(byte1, Address(byte1, 0));\n+      __ add(byte2, codec, byte2);\n+      __ add(byte3, codec, byte3);\n+      __ lb(byte2, Address(byte2, 0));\n+      __ lb(byte3, Address(byte3, 0));\n+      __ slliw(byte0, byte0, 18);\n+      __ slliw(byte1, byte1, 12);\n+      __ orr(byte0, byte0, byte1);\n+      __ orr(byte0, byte0, byte3);\n+      __ slliw(byte2, byte2, 6);\n+      __ orr(combined32Bits, byte0, byte2);\n+\n+      \/\/ error check\n+      __ bltz(combined32Bits, Exit);\n+\n+      \/\/ store 3 bytes decoded data\n+      __ sraiw(byte0, combined32Bits, 16);\n+      __ sraiw(byte1, combined32Bits, 8);\n+      __ sb(byte0, Address(dst, 0));\n+      __ sb(byte1, Address(dst, 1));\n+      __ sb(combined32Bits, Address(dst, 2));\n+\n+      __ sub(length, length, 4);\n+      __ addi(dst, dst, 3);\n+      \/\/ loop back\n+      __ bnez(length, ScalarLoop);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":57,"deletions":70,"binary":false,"changes":127,"status":"modified"}]}