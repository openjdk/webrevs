{"files":[{"patch":"@@ -503,11 +503,9 @@\n-  if (_outer->max_locals() > 0) {\n-    Cell limit = local(_outer->max_locals() - 1);\n-    for (Cell c = start_cell(); c <= limit; c = next_cell(c)) {\n-      ciType* t1 = type_at(c);\n-      ciType* t2 = incoming->type_at(c);\n-      if (!t1->equals(t2)) {\n-        ciType* new_type = type_meet(t1, t2);\n-        if (!t1->equals(new_type)) {\n-          set_type_at(c, new_type);\n-          different = true;\n-        }\n+  Cell limit = local_limit_cell();\n+  for (Cell c = start_cell(); c < limit; c = next_cell(c)) {\n+    ciType* t1 = type_at(c);\n+    ciType* t2 = incoming->type_at(c);\n+    if (!t1->equals(t2)) {\n+      ciType* new_type = type_meet(t1, t2);\n+      if (!t1->equals(new_type)) {\n+        set_type_at(c, new_type);\n+        different = true;\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -216,0 +216,2 @@\n+    Cell local_limit_cell() const { return (Cell) outer()->max_locals(); }\n+\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}