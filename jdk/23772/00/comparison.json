{"files":[{"patch":"@@ -503,9 +503,11 @@\n-  Cell limit = local(_outer->max_locals()-1);\n-  for (Cell c = start_cell(); c <= limit; c = next_cell(c)) {\n-    ciType* t1 = type_at(c);\n-    ciType* t2 = incoming->type_at(c);\n-    if (!t1->equals(t2)) {\n-      ciType* new_type = type_meet(t1, t2);\n-      if (!t1->equals(new_type)) {\n-        set_type_at(c, new_type);\n-        different = true;\n+  if (_outer->max_locals() > 0) {\n+    Cell limit = local(_outer->max_locals() - 1);\n+    for (Cell c = start_cell(); c <= limit; c = next_cell(c)) {\n+      ciType* t1 = type_at(c);\n+      ciType* t2 = incoming->type_at(c);\n+      if (!t1->equals(t2)) {\n+        ciType* new_type = type_meet(t1, t2);\n+        if (!t1->equals(new_type)) {\n+          set_type_at(c, new_type);\n+          different = true;\n+        }\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -219,0 +219,1 @@\n+      assert(Cell_0 <= lnum && lnum <= Cell_max, \"out of Cell's range\");\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}