{"files":[{"patch":"@@ -220,1 +220,0 @@\n-            \/\/ MD5 is used in this test case, don't disable MD5 algorithm.\n","filename":"test\/jdk\/javax\/net\/ssl\/HttpsURLConnection\/CriticalSubjectAltName.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -214,1 +214,0 @@\n-            \/\/ MD5 is used in this test case, don't disable MD5 algorithm.\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/DNSIdentities.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -204,1 +204,0 @@\n-            \/\/ MD5 is used in this test case, don't disable MD5 algorithm.\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/IPAddressIPIdentities.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -205,1 +205,0 @@\n-            \/\/ MD5 is used in this test case, don't disable MD5 algorithm.\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/IPIdentities.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -221,1 +221,0 @@\n-            \/\/ MD5 is used in this test case, don't disable MD5 algorithm.\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/Identities.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-    protected SSLContext getSSLContext(X509Certificate trustedCert,\n+    private SSLContext getSSLContext(X509Certificate trustedCert,\n@@ -169,4 +169,3 @@\n-        if (keyCert != null) {\n-            Certificate[] chain = new Certificate[2];\n-            chain[0] = keyCert;\n-            chain[1] = trustedCert;\n+        Certificate[] chain = new Certificate[2];\n+        chain[0] = keyCert;\n+        chain[1] = trustedCert;\n@@ -174,3 +173,2 @@\n-            \/\/ import the key entry.\n-            ks.setKeyEntry(\"Whatever\", key.getPrivate(), passphrase, chain);\n-        }\n+        \/\/ import the key entry.\n+        ks.setKeyEntry(\"Whatever\", key.getPrivate(), passphrase, chain);\n@@ -183,9 +181,3 @@\n-\n-        if (keyCert != null) {\n-            KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n-            kmf.init(ks, passphrase);\n-\n-            ctx.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n-        } else {\n-            ctx.init(null, tmf.getTrustManagers(), null);\n-        }\n+        KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n+        kmf.init(ks, passphrase);\n+        ctx.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/IdentitiesBase.java","additions":9,"deletions":17,"binary":false,"changes":26,"status":"modified"}]}