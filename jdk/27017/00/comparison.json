{"files":[{"patch":"@@ -27,1 +27,1 @@\n-#include \"cds\/metaspaceShared.hpp\"\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -120,1 +120,1 @@\n-        if (MetaspaceShared::in_aot_cache(fault_addr)) {\n+        if (AOTMetaspace::in_aot_cache(fault_addr)) {\n","filename":"src\/hotspot\/os\/posix\/vmError_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"cds\/metaspaceShared.hpp\"\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -54,1 +54,1 @@\n-        if (MetaspaceShared::in_aot_cache(fault_addr)) {\n+        if (AOTMetaspace::in_aot_cache(fault_addr)) {\n","filename":"src\/hotspot\/os\/windows\/vmError_windows.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"cds\/metaspaceShared.hpp\"\n+#include \"cds\/aotMetaspace.hpp\"\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/javaThread_bsd_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -30,1 +31,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -48,1 +48,1 @@\n-  return mapinfo->region_at(MetaspaceShared::ac)->used_aligned();\n+  return mapinfo->region_at(AOTMetaspace::ac)->used_aligned();\n","filename":"src\/hotspot\/share\/cds\/aotCacheAccess.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -31,1 +32,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -255,1 +255,1 @@\n-    MetaspaceShared::unrecoverable_loading_error();\n+    AOTMetaspace::unrecoverable_loading_error();\n@@ -1037,1 +1037,1 @@\n-        MetaspaceShared::unrecoverable_loading_error();\n+        AOTMetaspace::unrecoverable_loading_error();\n@@ -1040,1 +1040,1 @@\n-      MetaspaceShared::report_loading_error(\"%s%s\", mismatch_msg, hint_msg);\n+      AOTMetaspace::report_loading_error(\"%s%s\", mismatch_msg, hint_msg);\n","filename":"src\/hotspot\/share\/cds\/aotClassLocation.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -224,1 +224,1 @@\n-          MetaspaceShared::unrecoverable_loading_error();\n+          AOTMetaspace::unrecoverable_loading_error();\n@@ -437,1 +437,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"src\/hotspot\/share\/cds\/aotLinkedClassBulkLoader.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -221,2 +221,2 @@\n-  FileMapRegion* rw = mapinfo->region_at(MetaspaceShared::rw);\n-  FileMapRegion* ro = mapinfo->region_at(MetaspaceShared::ro);\n+  FileMapRegion* rw = mapinfo->region_at(AOTMetaspace::rw);\n+  FileMapRegion* ro = mapinfo->region_at(AOTMetaspace::ro);\n@@ -785,1 +785,1 @@\n-  int heap_region_index = MetaspaceShared::hp;\n+  int heap_region_index = AOTMetaspace::hp;\n","filename":"src\/hotspot\/share\/cds\/aotMapLogger.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -50,1 +51,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -107,9 +107,9 @@\n-ReservedSpace MetaspaceShared::_symbol_rs;\n-VirtualSpace MetaspaceShared::_symbol_vs;\n-bool MetaspaceShared::_archive_loading_failed = false;\n-bool MetaspaceShared::_remapped_readwrite = false;\n-void* MetaspaceShared::_aot_metaspace_static_top = nullptr;\n-intx MetaspaceShared::_relocation_delta;\n-char* MetaspaceShared::_requested_base_address;\n-Array<Method*>* MetaspaceShared::_archived_method_handle_intrinsics = nullptr;\n-bool MetaspaceShared::_use_optimized_module_handling = true;\n+ReservedSpace AOTMetaspace::_symbol_rs;\n+VirtualSpace AOTMetaspace::_symbol_vs;\n+bool AOTMetaspace::_archive_loading_failed = false;\n+bool AOTMetaspace::_remapped_readwrite = false;\n+void* AOTMetaspace::_aot_metaspace_static_top = nullptr;\n+intx AOTMetaspace::_relocation_delta;\n+char* AOTMetaspace::_requested_base_address;\n+Array<Method*>* AOTMetaspace::_archived_method_handle_intrinsics = nullptr;\n+bool AOTMetaspace::_use_optimized_module_handling = true;\n@@ -124,1 +124,1 @@\n-\/\/ These regions are aligned with MetaspaceShared::core_region_alignment().\n+\/\/ These regions are aligned with AOTMetaspace::core_region_alignment().\n@@ -127,1 +127,1 @@\n-\/\/ [0] All classes are loaded in MetaspaceShared::preload_classes(). All metadata are\n+\/\/ [0] All classes are loaded in AOTMetaspace::preload_classes(). All metadata are\n@@ -142,1 +142,1 @@\n-char* MetaspaceShared::symbol_space_alloc(size_t num_bytes) {\n+char* AOTMetaspace::symbol_space_alloc(size_t num_bytes) {\n@@ -155,1 +155,1 @@\n-size_t MetaspaceShared::core_region_alignment() {\n+size_t AOTMetaspace::core_region_alignment() {\n@@ -159,1 +159,1 @@\n-size_t MetaspaceShared::protection_zone_size() {\n+size_t AOTMetaspace::protection_zone_size() {\n@@ -220,1 +220,1 @@\n-void MetaspaceShared::dump_loaded_classes(const char* file_name, TRAPS) {\n+void AOTMetaspace::dump_loaded_classes(const char* file_name, TRAPS) {\n@@ -248,1 +248,1 @@\n-  size_t alignment = MetaspaceShared::core_region_alignment();\n+  size_t alignment = AOTMetaspace::core_region_alignment();\n@@ -294,1 +294,1 @@\n-void MetaspaceShared::initialize_for_static_dump() {\n+void AOTMetaspace::initialize_for_static_dump() {\n@@ -321,1 +321,1 @@\n-    MetaspaceShared::unrecoverable_writing_error();\n+    AOTMetaspace::unrecoverable_writing_error();\n@@ -327,1 +327,1 @@\n-void MetaspaceShared::post_initialize(TRAPS) {\n+void AOTMetaspace::post_initialize(TRAPS) {\n@@ -340,1 +340,1 @@\n-    static_mapinfo->unmap_region(MetaspaceShared::bm);\n+    static_mapinfo->unmap_region(AOTMetaspace::bm);\n@@ -344,1 +344,1 @@\n-      dynamic_mapinfo->unmap_region(MetaspaceShared::bm);\n+      dynamic_mapinfo->unmap_region(AOTMetaspace::bm);\n@@ -361,1 +361,1 @@\n-void MetaspaceShared::read_extra_data(JavaThread* current, const char* filename) {\n+void AOTMetaspace::read_extra_data(JavaThread* current, const char* filename) {\n@@ -375,1 +375,1 @@\n-      MetaspaceShared::unrecoverable_loading_error();\n+      AOTMetaspace::unrecoverable_loading_error();\n@@ -410,1 +410,1 @@\n-void MetaspaceShared::make_method_handle_intrinsics_shareable() {\n+void AOTMetaspace::make_method_handle_intrinsics_shareable() {\n@@ -419,1 +419,1 @@\n-void MetaspaceShared::write_method_handle_intrinsics() {\n+void AOTMetaspace::write_method_handle_intrinsics() {\n@@ -455,1 +455,1 @@\n-\/\/ of these xxx::serialize() functions inside MetaspaceShared::serialize(), which\n+\/\/ of these xxx::serialize() functions inside AOTMetaspace::serialize(), which\n@@ -461,1 +461,1 @@\n-\/\/ MetaspaceShared::early_serialize(). Such functions must not produce side effects that\n+\/\/ AOTMetaspace::early_serialize(). Such functions must not produce side effects that\n@@ -464,1 +464,1 @@\n-void MetaspaceShared::early_serialize(SerializeClosure* soc) {\n+void AOTMetaspace::early_serialize(SerializeClosure* soc) {\n@@ -471,1 +471,1 @@\n-void MetaspaceShared::serialize(SerializeClosure* soc) {\n+void AOTMetaspace::serialize(SerializeClosure* soc) {\n@@ -544,1 +544,1 @@\n-void MetaspaceShared::rewrite_nofast_bytecodes_and_calculate_fingerprints(Thread* thread, InstanceKlass* ik) {\n+void AOTMetaspace::rewrite_nofast_bytecodes_and_calculate_fingerprints(Thread* thread, InstanceKlass* ik) {\n@@ -620,1 +620,1 @@\n-  MetaspaceShared::early_serialize(&wc);\n+  AOTMetaspace::early_serialize(&wc);\n@@ -636,1 +636,1 @@\n-  MetaspaceShared::write_method_handle_intrinsics();\n+  AOTMetaspace::write_method_handle_intrinsics();\n@@ -649,1 +649,1 @@\n-  MetaspaceShared::serialize(&wc);\n+  AOTMetaspace::serialize(&wc);\n@@ -687,1 +687,1 @@\n-  MetaspaceShared::make_method_handle_intrinsics_shareable();\n+  AOTMetaspace::make_method_handle_intrinsics_shareable();\n@@ -715,1 +715,1 @@\n-  _map_info->populate_header(MetaspaceShared::core_region_alignment());\n+  _map_info->populate_header(AOTMetaspace::core_region_alignment());\n@@ -757,1 +757,1 @@\n-bool MetaspaceShared::may_be_eagerly_linked(InstanceKlass* ik) {\n+bool AOTMetaspace::may_be_eagerly_linked(InstanceKlass* ik) {\n@@ -776,1 +776,1 @@\n-void MetaspaceShared::link_shared_classes(TRAPS) {\n+void AOTMetaspace::link_shared_classes(TRAPS) {\n@@ -819,1 +819,1 @@\n-void MetaspaceShared::preload_and_dump(TRAPS) {\n+void AOTMetaspace::preload_and_dump(TRAPS) {\n@@ -835,1 +835,1 @@\n-      MetaspaceShared::writing_error();\n+      AOTMetaspace::writing_error();\n@@ -840,1 +840,1 @@\n-      MetaspaceShared::writing_error(err_msg(\"Unexpected exception, use -Xlog:aot%s,exceptions=trace for detail\",\n+      AOTMetaspace::writing_error(err_msg(\"Unexpected exception, use -Xlog:aot%s,exceptions=trace for detail\",\n@@ -867,1 +867,1 @@\n-void MetaspaceShared::adjust_heap_sizes_for_dumping() {\n+void AOTMetaspace::adjust_heap_sizes_for_dumping() {\n@@ -890,1 +890,1 @@\n-void MetaspaceShared::get_default_classlist(char* default_classlist, const size_t buf_size) {\n+void AOTMetaspace::get_default_classlist(char* default_classlist, const size_t buf_size) {\n@@ -896,1 +896,1 @@\n-void MetaspaceShared::preload_classes(TRAPS) {\n+void AOTMetaspace::preload_classes(TRAPS) {\n@@ -931,1 +931,1 @@\n-void MetaspaceShared::exercise_runtime_cds_code(TRAPS) {\n+void AOTMetaspace::exercise_runtime_cds_code(TRAPS) {\n@@ -940,1 +940,1 @@\n-void MetaspaceShared::preload_and_dump_impl(StaticArchiveBuilder& builder, TRAPS) {\n+void AOTMetaspace::preload_and_dump_impl(StaticArchiveBuilder& builder, TRAPS) {\n@@ -1061,2 +1061,2 @@\n-bool MetaspaceShared::write_static_archive(ArchiveBuilder* builder, FileMapInfo* map_info, ArchiveHeapInfo* heap_info) {\n-  \/\/ relocate the data so that it can be mapped to MetaspaceShared::requested_base_address()\n+bool AOTMetaspace::write_static_archive(ArchiveBuilder* builder, FileMapInfo* map_info, ArchiveHeapInfo* heap_info) {\n+  \/\/ relocate the data so that it can be mapped to AOTMetaspace::requested_base_address()\n@@ -1180,1 +1180,1 @@\n-void MetaspaceShared::fork_and_dump_final_static_archive(TRAPS) {\n+void AOTMetaspace::fork_and_dump_final_static_archive(TRAPS) {\n@@ -1206,1 +1206,1 @@\n-bool MetaspaceShared::try_link_class(JavaThread* current, InstanceKlass* ik) {\n+bool AOTMetaspace::try_link_class(JavaThread* current, InstanceKlass* ik) {\n@@ -1255,1 +1255,1 @@\n-void MetaspaceShared::set_aot_metaspace_range(void* base, void *static_top, void* top) {\n+void AOTMetaspace::set_aot_metaspace_range(void* base, void *static_top, void* top) {\n@@ -1261,1 +1261,1 @@\n-bool MetaspaceShared::in_aot_cache_dynamic_region(void* p) {\n+bool AOTMetaspace::in_aot_cache_dynamic_region(void* p) {\n@@ -1270,1 +1270,1 @@\n-bool MetaspaceShared::in_aot_cache_static_region(void* p) {\n+bool AOTMetaspace::in_aot_cache_static_region(void* p) {\n@@ -1283,1 +1283,1 @@\n-void MetaspaceShared::unrecoverable_loading_error(const char* message) {\n+void AOTMetaspace::unrecoverable_loading_error(const char* message) {\n@@ -1295,1 +1295,1 @@\n-void MetaspaceShared::report_loading_error(const char* format, ...) {\n+void AOTMetaspace::report_loading_error(const char* format, ...) {\n@@ -1328,1 +1328,1 @@\n-void MetaspaceShared::unrecoverable_writing_error(const char* message) {\n+void AOTMetaspace::unrecoverable_writing_error(const char* message) {\n@@ -1335,1 +1335,1 @@\n-void MetaspaceShared::writing_error(const char* message) {\n+void AOTMetaspace::writing_error(const char* message) {\n@@ -1342,1 +1342,1 @@\n-void MetaspaceShared::initialize_runtime_shared_and_meta_spaces() {\n+void AOTMetaspace::initialize_runtime_shared_and_meta_spaces() {\n@@ -1388,1 +1388,1 @@\n-      MetaspaceShared::unrecoverable_loading_error(\"Unable to use shared archive.\");\n+      AOTMetaspace::unrecoverable_loading_error(\"Unable to use shared archive.\");\n@@ -1391,1 +1391,1 @@\n-        MetaspaceShared::unrecoverable_loading_error(\"Unable to map shared spaces\");\n+        AOTMetaspace::unrecoverable_loading_error(\"Unable to map shared spaces\");\n@@ -1409,1 +1409,1 @@\n-      MetaspaceShared::unrecoverable_loading_error(\"Unable to map shared spaces\");\n+      AOTMetaspace::unrecoverable_loading_error(\"Unable to map shared spaces\");\n@@ -1413,1 +1413,1 @@\n-FileMapInfo* MetaspaceShared::open_static_archive() {\n+FileMapInfo* AOTMetaspace::open_static_archive() {\n@@ -1424,1 +1424,1 @@\n-FileMapInfo* MetaspaceShared::open_dynamic_archive() {\n+FileMapInfo* AOTMetaspace::open_dynamic_archive() {\n@@ -1437,1 +1437,1 @@\n-      MetaspaceShared::unrecoverable_loading_error(\"Failed to initialize dynamic archive\");\n+      AOTMetaspace::unrecoverable_loading_error(\"Failed to initialize dynamic archive\");\n@@ -1447,2 +1447,2 @@\n-MapArchiveResult MetaspaceShared::map_archives(FileMapInfo* static_mapinfo, FileMapInfo* dynamic_mapinfo,\n-                                               bool use_requested_addr) {\n+MapArchiveResult AOTMetaspace::map_archives(FileMapInfo* static_mapinfo, FileMapInfo* dynamic_mapinfo,\n+                                            bool use_requested_addr) {\n@@ -1520,1 +1520,1 @@\n-    if (MetaspaceShared::use_windows_memory_mapping()) {\n+    if (AOTMetaspace::use_windows_memory_mapping()) {\n@@ -1724,6 +1724,6 @@\n-char* MetaspaceShared::reserve_address_space_for_archives(FileMapInfo* static_mapinfo,\n-                                                          FileMapInfo* dynamic_mapinfo,\n-                                                          bool use_archive_base_addr,\n-                                                          ReservedSpace& total_space_rs,\n-                                                          ReservedSpace& archive_space_rs,\n-                                                          ReservedSpace& class_space_rs) {\n+char* AOTMetaspace::reserve_address_space_for_archives(FileMapInfo* static_mapinfo,\n+                                                       FileMapInfo* dynamic_mapinfo,\n+                                                       bool use_archive_base_addr,\n+                                                       ReservedSpace& total_space_rs,\n+                                                       ReservedSpace& archive_space_rs,\n+                                                       ReservedSpace& class_space_rs) {\n@@ -1882,3 +1882,3 @@\n-void MetaspaceShared::release_reserved_spaces(ReservedSpace& total_space_rs,\n-                                              ReservedSpace& archive_space_rs,\n-                                              ReservedSpace& class_space_rs) {\n+void AOTMetaspace::release_reserved_spaces(ReservedSpace& total_space_rs,\n+                                           ReservedSpace& archive_space_rs,\n+                                           ReservedSpace& class_space_rs) {\n@@ -1903,1 +1903,1 @@\n-static int archive_regions[]     = { MetaspaceShared::rw, MetaspaceShared::ro };\n+static int archive_regions[]     = { AOTMetaspace::rw, AOTMetaspace::ro };\n@@ -1906,1 +1906,1 @@\n-MapArchiveResult MetaspaceShared::map_archive(FileMapInfo* mapinfo, char* mapped_base_address, ReservedSpace rs) {\n+MapArchiveResult AOTMetaspace::map_archive(FileMapInfo* mapinfo, char* mapped_base_address, ReservedSpace rs) {\n@@ -1949,1 +1949,1 @@\n-void MetaspaceShared::unmap_archive(FileMapInfo* mapinfo) {\n+void AOTMetaspace::unmap_archive(FileMapInfo* mapinfo) {\n@@ -1953,1 +1953,1 @@\n-    mapinfo->unmap_region(MetaspaceShared::bm);\n+    mapinfo->unmap_region(AOTMetaspace::bm);\n@@ -1974,1 +1974,1 @@\n-void MetaspaceShared::initialize_shared_spaces() {\n+void AOTMetaspace::initialize_shared_spaces() {\n@@ -2055,1 +2055,1 @@\n-bool MetaspaceShared::remap_shared_readonly_as_readwrite() {\n+bool AOTMetaspace::remap_shared_readonly_as_readwrite() {\n@@ -2075,1 +2075,1 @@\n-void MetaspaceShared::print_on(outputStream* st) {\n+void AOTMetaspace::print_on(outputStream* st) {\n","filename":"src\/hotspot\/share\/cds\/aotMetaspace.cpp","additions":83,"deletions":83,"binary":false,"changes":166,"previous_filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","status":"renamed"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef SHARE_CDS_METASPACESHARED_HPP\n-#define SHARE_CDS_METASPACESHARED_HPP\n+#ifndef SHARE_CDS_AOTMETASPACE_HPP\n+#define SHARE_CDS_AOTMETASPACE_HPP\n@@ -52,1 +52,1 @@\n-class MetaspaceShared : AllStatic {\n+class AOTMetaspace : AllStatic {\n@@ -66,2 +66,2 @@\n-    rw = 0,  \/\/ read-write shared space\n-    ro = 1,  \/\/ read-only shared space\n+    rw = 0,  \/\/ read-write\n+    ro = 1,  \/\/ read-only\n@@ -205,1 +205,1 @@\n-#endif \/\/ SHARE_CDS_METASPACESHARED_HPP\n+#endif \/\/ SHARE_CDS_AOTMETASPACE_HPP\n","filename":"src\/hotspot\/share\/cds\/aotMetaspace.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","status":"renamed"},{"patch":"@@ -212,1 +212,1 @@\n-      MetaspaceShared::unrecoverable_writing_error();\n+      AOTMetaspace::unrecoverable_writing_error();\n","filename":"src\/hotspot\/share\/cds\/aotReferenceObjSupport.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -38,1 +39,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -333,1 +333,1 @@\n-                                             MetaspaceShared::core_region_alignment(),\n+                                             AOTMetaspace::core_region_alignment(),\n@@ -338,1 +338,1 @@\n-    MetaspaceShared::unrecoverable_writing_error();\n+    AOTMetaspace::unrecoverable_writing_error();\n@@ -360,1 +360,1 @@\n-  _requested_static_archive_bottom = (address)MetaspaceShared::requested_base_address();\n+  _requested_static_archive_bottom = (address)AOTMetaspace::requested_base_address();\n@@ -375,1 +375,1 @@\n-    my_archive_requested_bottom = align_up(_requested_static_archive_top, MetaspaceShared::core_region_alignment());\n+    my_archive_requested_bottom = align_up(_requested_static_archive_top, AOTMetaspace::core_region_alignment());\n@@ -390,1 +390,1 @@\n-    MetaspaceShared::unrecoverable_writing_error();\n+    AOTMetaspace::unrecoverable_writing_error();\n@@ -396,1 +396,1 @@\n-    _pz_region.allocate(MetaspaceShared::protection_zone_size());\n+    _pz_region.allocate(AOTMetaspace::protection_zone_size());\n@@ -543,1 +543,1 @@\n-    if (CDSConfig::is_dumping_dynamic_archive() && MetaspaceShared::in_aot_cache_static_region(bottom)) {\n+    if (CDSConfig::is_dumping_dynamic_archive() && AOTMetaspace::in_aot_cache_static_region(bottom)) {\n@@ -556,1 +556,1 @@\n-  if (CDSConfig::is_dumping_dynamic_archive() && MetaspaceShared::in_aot_cache(obj)) {\n+  if (CDSConfig::is_dumping_dynamic_archive() && AOTMetaspace::in_aot_cache(obj)) {\n@@ -964,1 +964,1 @@\n-      MetaspaceShared::rewrite_nofast_bytecodes_and_calculate_fingerprints(Thread::current(), ik);\n+      AOTMetaspace::rewrite_nofast_bytecodes_and_calculate_fingerprints(Thread::current(), ik);\n@@ -1196,2 +1196,2 @@\n-  \/\/ MetaspaceShared::n_regions (internal to hotspot).\n-  assert(NUM_CDS_REGIONS == MetaspaceShared::n_regions, \"sanity\");\n+  \/\/ AOTMetaspace::n_regions (internal to hotspot).\n+  assert(NUM_CDS_REGIONS == AOTMetaspace::n_regions, \"sanity\");\n@@ -1199,3 +1199,3 @@\n-  write_region(mapinfo, MetaspaceShared::rw, &_rw_region, \/*read_only=*\/false,\/*allow_exec=*\/false);\n-  write_region(mapinfo, MetaspaceShared::ro, &_ro_region, \/*read_only=*\/true, \/*allow_exec=*\/false);\n-  write_region(mapinfo, MetaspaceShared::ac, &_ac_region, \/*read_only=*\/false,\/*allow_exec=*\/false);\n+  write_region(mapinfo, AOTMetaspace::rw, &_rw_region, \/*read_only=*\/false,\/*allow_exec=*\/false);\n+  write_region(mapinfo, AOTMetaspace::ro, &_ro_region, \/*read_only=*\/true, \/*allow_exec=*\/false);\n+  write_region(mapinfo, AOTMetaspace::ac, &_ac_region, \/*read_only=*\/false,\/*allow_exec=*\/false);\n@@ -1216,1 +1216,1 @@\n-  mapinfo->set_requested_base((char*)MetaspaceShared::requested_base_address());\n+  mapinfo->set_requested_base((char*)AOTMetaspace::requested_base_address());\n@@ -1247,2 +1247,2 @@\n-  const size_t bitmap_used = mapinfo->region_at(MetaspaceShared::bm)->used();\n-  const size_t bitmap_reserved = mapinfo->region_at(MetaspaceShared::bm)->used_aligned();\n+  const size_t bitmap_used = mapinfo->region_at(AOTMetaspace::bm)->used();\n+  const size_t bitmap_reserved = mapinfo->region_at(AOTMetaspace::bm)->used_aligned();\n@@ -1292,1 +1292,1 @@\n-  MetaspaceShared::unrecoverable_writing_error();\n+  AOTMetaspace::unrecoverable_writing_error();\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -28,1 +29,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -264,1 +264,1 @@\n-  FileMapRegion* r = mapinfo->region_at(MetaspaceShared::hp);\n+  FileMapRegion* r = mapinfo->region_at(AOTMetaspace::hp);\n@@ -272,1 +272,1 @@\n-  loaded_region->_region_index = MetaspaceShared::hp;\n+  loaded_region->_region_index = AOTMetaspace::hp;\n@@ -450,1 +450,1 @@\n-    *p = (Metadata*)(address(*p) + MetaspaceShared::relocation_delta());\n+    *p = (Metadata*)(address(*p) + AOTMetaspace::relocation_delta());\n@@ -456,1 +456,1 @@\n-  if (MetaspaceShared::relocation_delta() == 0) {\n+  if (AOTMetaspace::relocation_delta() == 0) {\n@@ -460,1 +460,1 @@\n-  FileMapRegion* r = FileMapInfo::current_info()->region_at(MetaspaceShared::hp);\n+  FileMapRegion* r = FileMapInfo::current_info()->region_at(AOTMetaspace::hp);\n@@ -463,1 +463,1 @@\n-    BitMapView bm = FileMapInfo::current_info()->ptrmap_view(MetaspaceShared::hp);\n+    BitMapView bm = FileMapInfo::current_info()->ptrmap_view(AOTMetaspace::hp);\n","filename":"src\/hotspot\/share\/cds\/archiveHeapLoader.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -36,1 +37,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -120,1 +120,1 @@\n-    \/\/ MetaspaceShared::default_base_address()==0, we can't distinguish between a pointer\n+    \/\/ AOTMetaspace::default_base_address()==0, we can't distinguish between a pointer\n@@ -212,1 +212,1 @@\n-      MetaspaceShared::unrecoverable_writing_error();\n+      AOTMetaspace::unrecoverable_writing_error();\n@@ -239,1 +239,1 @@\n-    MetaspaceShared::unrecoverable_writing_error();\n+    AOTMetaspace::unrecoverable_writing_error();\n@@ -243,1 +243,1 @@\n-  if (_rs->base() == (char*)MetaspaceShared::symbol_rs_base()) {\n+  if (_rs->base() == (char*)AOTMetaspace::symbol_rs_base()) {\n@@ -301,1 +301,1 @@\n-    _end = (char*)align_up(_top, MetaspaceShared::core_region_alignment());\n+    _end = (char*)align_up(_top, AOTMetaspace::core_region_alignment());\n@@ -304,1 +304,1 @@\n-  _end = (char*)align_up(_top, MetaspaceShared::core_region_alignment());\n+  _end = (char*)align_up(_top, AOTMetaspace::core_region_alignment());\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -33,1 +34,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -83,1 +83,1 @@\n-        if (is_dynamic_dump && MetaspaceShared::in_aot_cache(ptr)) {\n+        if (is_dynamic_dump && AOTMetaspace::in_aot_cache(ptr)) {\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -770,1 +770,1 @@\n-      MetaspaceShared::unrecoverable_loading_error();\n+      AOTMetaspace::unrecoverable_loading_error();\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-    MetaspaceShared::unrecoverable_writing_error();\n+    AOTMetaspace::unrecoverable_writing_error();\n","filename":"src\/hotspot\/share\/cds\/cdsHeapVerifier.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-    assert(MetaspaceShared::in_aot_cache(pkg_entry), \"must be\");\n+    assert(AOTMetaspace::in_aot_cache(pkg_entry), \"must be\");\n","filename":"src\/hotspot\/share\/cds\/cdsProtectionDomain.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -31,1 +32,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -188,1 +188,1 @@\n-    MetaspaceShared::try_link_class(THREAD, ik);\n+    AOTMetaspace::try_link_class(THREAD, ik);\n@@ -677,1 +677,1 @@\n-    MetaspaceShared::try_link_class(THREAD, ik);\n+    AOTMetaspace::try_link_class(THREAD, ik);\n","filename":"src\/hotspot\/share\/cds\/classListParser.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -29,1 +30,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -324,1 +324,1 @@\n-  assert(MetaspaceShared::in_aot_cache(m), \"must be\");\n+  assert(AOTMetaspace::in_aot_cache(m), \"must be\");\n","filename":"src\/hotspot\/share\/cds\/cppVtables.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -31,1 +32,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -234,1 +234,1 @@\n-    uintx delta = k->name() - MetaspaceShared::symbol_rs_base();\n+    uintx delta = k->name() - AOTMetaspace::symbol_rs_base();\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -37,1 +38,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -190,1 +190,1 @@\n-      assert(MetaspaceShared::in_aot_cache_static_region((void*)k),\n+      assert(AOTMetaspace::in_aot_cache_static_region((void*)k),\n@@ -219,1 +219,1 @@\n-  for (int i = 0; i < MetaspaceShared::n_regions; i++) {\n+  for (int i = 0; i < AOTMetaspace::n_regions; i++) {\n@@ -256,1 +256,1 @@\n-  if (MetaspaceShared::in_aot_cache(ik)) {\n+  if (AOTMetaspace::in_aot_cache(ik)) {\n@@ -290,1 +290,1 @@\n-      assert(MetaspaceShared::in_aot_cache(name) || is_in_buffer_space(name), \"must be\");\n+      assert(AOTMetaspace::in_aot_cache(name) || is_in_buffer_space(name), \"must be\");\n@@ -296,1 +296,1 @@\n-      assert(MetaspaceShared::in_aot_cache(name) || is_in_buffer_space(name), \"must be\");\n+      assert(AOTMetaspace::in_aot_cache(name) || is_in_buffer_space(name), \"must be\");\n@@ -370,1 +370,1 @@\n-      if (MetaspaceShared::in_aot_cache_static_region(elem)) {\n+      if (AOTMetaspace::in_aot_cache_static_region(elem)) {\n@@ -377,1 +377,1 @@\n-        assert(!MetaspaceShared::in_aot_cache_static_region(oak),\n+        assert(!AOTMetaspace::in_aot_cache_static_region(oak),\n@@ -438,1 +438,1 @@\n-      assert(MetaspaceShared::in_aot_cache_static_region((void*)elm), \"must be\");\n+      assert(AOTMetaspace::in_aot_cache_static_region((void*)elm), \"must be\");\n@@ -479,1 +479,1 @@\n-  MetaspaceShared::link_shared_classes(CHECK);\n+  AOTMetaspace::link_shared_classes(CHECK);\n@@ -535,1 +535,1 @@\n-  for (int i = 0; i < MetaspaceShared::n_regions; i++) {\n+  for (int i = 0; i < AOTMetaspace::n_regions; i++) {\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  int _base_region_crc[MetaspaceShared::n_regions];\n+  int _base_region_crc[AOTMetaspace::n_regions];\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -36,1 +37,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -332,1 +332,1 @@\n-      MetaspaceShared::set_archive_loading_failed();\n+      AOTMetaspace::set_archive_loading_failed();\n@@ -341,1 +341,1 @@\n-    MetaspaceShared::report_loading_error(\"optimized module handling: disabled because extra module path(s) are specified\");\n+    AOTMetaspace::report_loading_error(\"optimized module handling: disabled because extra module path(s) are specified\");\n@@ -412,1 +412,1 @@\n-      MetaspaceShared::report_loading_error(\"Specified %s not found (%s)\", CDSConfig::type_of_archive_being_loaded(), _archive_name);\n+      AOTMetaspace::report_loading_error(\"Specified %s not found (%s)\", CDSConfig::type_of_archive_being_loaded(), _archive_name);\n@@ -697,1 +697,1 @@\n-  for (int i = 0; i < MetaspaceShared::n_regions; i++) {\n+  for (int i = 0; i < AOTMetaspace::n_regions; i++) {\n@@ -711,1 +711,1 @@\n-    MetaspaceShared::unrecoverable_loading_error();\n+    AOTMetaspace::unrecoverable_loading_error();\n@@ -766,1 +766,1 @@\n-    MetaspaceShared::writing_error();\n+    AOTMetaspace::writing_error();\n@@ -776,1 +776,1 @@\n-  header_bytes = align_up(header_bytes, MetaspaceShared::core_region_alignment());\n+  header_bytes = align_up(header_bytes, AOTMetaspace::core_region_alignment());\n@@ -791,1 +791,1 @@\n-  return align_up(used(), MetaspaceShared::core_region_alignment());\n+  return align_up(used(), AOTMetaspace::core_region_alignment());\n@@ -797,1 +797,1 @@\n-  _is_bitmap_region = (region_index == MetaspaceShared::bm);\n+  _is_bitmap_region = (region_index == AOTMetaspace::bm);\n@@ -893,1 +893,1 @@\n-  if (region == MetaspaceShared::bm) {\n+  if (region == AOTMetaspace::bm) {\n@@ -911,1 +911,1 @@\n-    char* requested_SharedBaseAddress = (char*)MetaspaceShared::requested_base_address();\n+    char* requested_SharedBaseAddress = (char*)AOTMetaspace::requested_base_address();\n@@ -987,1 +987,1 @@\n-  region_at(MetaspaceShared::rw)->init_ptrmap(0, rw_ptrmap->size());\n+  region_at(AOTMetaspace::rw)->init_ptrmap(0, rw_ptrmap->size());\n@@ -990,1 +990,1 @@\n-  region_at(MetaspaceShared::ro)->init_ptrmap(written, ro_ptrmap->size());\n+  region_at(AOTMetaspace::ro)->init_ptrmap(written, ro_ptrmap->size());\n@@ -994,1 +994,1 @@\n-    FileMapRegion* r = region_at(MetaspaceShared::hp);\n+    FileMapRegion* r = region_at(AOTMetaspace::hp);\n@@ -1003,1 +1003,1 @@\n-  write_region(MetaspaceShared::bm, (char*)buffer, size_in_bytes, \/*read_only=*\/true, \/*allow_exec=*\/false);\n+  write_region(AOTMetaspace::bm, (char*)buffer, size_in_bytes, \/*read_only=*\/true, \/*allow_exec=*\/false);\n@@ -1010,1 +1010,1 @@\n-  write_region(MetaspaceShared::hp, buffer_start, buffer_size, false, false);\n+  write_region(AOTMetaspace::hp, buffer_start, buffer_size, false, false);\n@@ -1025,1 +1025,1 @@\n-      MetaspaceShared::writing_error(\"Unable to write to AOT configuration file.\");\n+      AOTMetaspace::writing_error(\"Unable to write to AOT configuration file.\");\n@@ -1027,1 +1027,1 @@\n-      MetaspaceShared::writing_error(\"Unable to write to AOT cache.\");\n+      AOTMetaspace::writing_error(\"Unable to write to AOT cache.\");\n@@ -1029,1 +1029,1 @@\n-      MetaspaceShared::writing_error(\"Unable to write to shared archive.\");\n+      AOTMetaspace::writing_error(\"Unable to write to shared archive.\");\n@@ -1037,1 +1037,1 @@\n-                                  MetaspaceShared::core_region_alignment());\n+                                  AOTMetaspace::core_region_alignment());\n@@ -1045,1 +1045,1 @@\n-                                    MetaspaceShared::core_region_alignment());\n+                                    AOTMetaspace::core_region_alignment());\n@@ -1071,1 +1071,1 @@\n-      MetaspaceShared::unrecoverable_loading_error(\"Unable to close the shared archive file.\");\n+      AOTMetaspace::unrecoverable_loading_error(\"Unable to close the shared archive file.\");\n@@ -1096,1 +1096,1 @@\n-  int idx = MetaspaceShared::ro;\n+  int idx = AOTMetaspace::ro;\n@@ -1203,1 +1203,1 @@\n-  if (MetaspaceShared::use_windows_memory_mapping()) {\n+  if (AOTMetaspace::use_windows_memory_mapping()) {\n@@ -1215,1 +1215,1 @@\n-  if (MetaspaceShared::use_windows_memory_mapping() && rs.is_reserved()) {\n+  if (AOTMetaspace::use_windows_memory_mapping() && rs.is_reserved()) {\n@@ -1221,1 +1221,1 @@\n-      MetaspaceShared::report_loading_error(\"Failed to read %s shared space into reserved space at \" INTPTR_FORMAT,\n+      AOTMetaspace::report_loading_error(\"Failed to read %s shared space into reserved space at \" INTPTR_FORMAT,\n@@ -1230,1 +1230,1 @@\n-    \/\/ space (Posix). See also comment in MetaspaceShared::map_archives().\n+    \/\/ space (Posix). See also comment in AOTMetaspace::map_archives().\n@@ -1235,1 +1235,1 @@\n-      MetaspaceShared::report_loading_error(\"Unable to map %s shared space at \" INTPTR_FORMAT,\n+      AOTMetaspace::report_loading_error(\"Unable to map %s shared space at \" INTPTR_FORMAT,\n@@ -1261,1 +1261,1 @@\n-  FileMapRegion* r = region_at(MetaspaceShared::bm);\n+  FileMapRegion* r = region_at(AOTMetaspace::bm);\n@@ -1270,1 +1270,1 @@\n-    MetaspaceShared::report_loading_error(\"failed to map relocation bitmap\");\n+    AOTMetaspace::report_loading_error(\"failed to map relocation bitmap\");\n@@ -1286,2 +1286,2 @@\n-                MetaspaceShared::bm, p2i(r->mapped_base()), p2i(r->mapped_end()),\n-                shared_region_name[MetaspaceShared::bm]);\n+                AOTMetaspace::bm, p2i(r->mapped_base()), p2i(r->mapped_end()),\n+                shared_region_name[AOTMetaspace::bm]);\n@@ -1292,1 +1292,1 @@\n-  FileMapRegion* r = region_at(MetaspaceShared::ac);\n+  FileMapRegion* r = region_at(AOTMetaspace::ac);\n@@ -1299,3 +1299,3 @@\n-  if (MetaspaceShared::use_windows_memory_mapping()) {\n-    if (!read_region(MetaspaceShared::ac, requested_base, r->used_aligned(), \/* do_commit = *\/ true)) {\n-      MetaspaceShared::report_loading_error(\"Failed to read aot code shared space into reserved space at \" INTPTR_FORMAT,\n+  if (AOTMetaspace::use_windows_memory_mapping()) {\n+    if (!read_region(AOTMetaspace::ac, requested_base, r->used_aligned(), \/* do_commit = *\/ true)) {\n+      AOTMetaspace::report_loading_error(\"Failed to read aot code shared space into reserved space at \" INTPTR_FORMAT,\n@@ -1314,1 +1314,1 @@\n-    MetaspaceShared::report_loading_error(\"failed to map aot code region\");\n+    AOTMetaspace::report_loading_error(\"failed to map aot code region\");\n@@ -1321,2 +1321,2 @@\n-                  MetaspaceShared::ac, p2i(r->mapped_base()), p2i(r->mapped_end()),\n-                  shared_region_name[MetaspaceShared::ac]);\n+                  AOTMetaspace::ac, p2i(r->mapped_base()), p2i(r->mapped_end()),\n+                  shared_region_name[AOTMetaspace::ac]);\n@@ -1362,2 +1362,2 @@\n-    BitMapView rw_ptrmap = ptrmap_view(MetaspaceShared::rw);\n-    BitMapView ro_ptrmap = ptrmap_view(MetaspaceShared::ro);\n+    BitMapView rw_ptrmap = ptrmap_view(AOTMetaspace::rw);\n+    BitMapView ro_ptrmap = ptrmap_view(AOTMetaspace::ro);\n@@ -1401,1 +1401,1 @@\n-    \/\/ The MetaspaceShared::bm region will be unmapped in MetaspaceShared::initialize_shared_spaces().\n+    \/\/ The AOTMetaspace::bm region will be unmapped in AOTMetaspace::initialize_shared_spaces().\n@@ -1424,1 +1424,1 @@\n-    FileMapRegion* r = FileMapInfo::current_info()->region_at(MetaspaceShared::ro);\n+    FileMapRegion* r = FileMapInfo::current_info()->region_at(AOTMetaspace::ro);\n@@ -1428,1 +1428,1 @@\n-    FileMapRegion* r = FileMapInfo::dynamic_info()->region_at(MetaspaceShared::ro);\n+    FileMapRegion* r = FileMapInfo::dynamic_info()->region_at(AOTMetaspace::ro);\n@@ -1438,1 +1438,1 @@\n-  return (region_at(MetaspaceShared::hp)->used() > 0);\n+  return (region_at(AOTMetaspace::hp)->used() > 0);\n@@ -1446,1 +1446,1 @@\n-  FileMapRegion* r = region_at(MetaspaceShared::hp);\n+  FileMapRegion* r = region_at(AOTMetaspace::hp);\n@@ -1468,1 +1468,1 @@\n-        MetaspaceShared::report_loading_error(\"Cannot use CDS heap data. Selected GC not compatible -XX:-UseCompressedOops\");\n+        AOTMetaspace::report_loading_error(\"Cannot use CDS heap data. Selected GC not compatible -XX:-UseCompressedOops\");\n@@ -1470,1 +1470,1 @@\n-        MetaspaceShared::report_loading_error(\"Cannot use CDS heap data. UseEpsilonGC, UseG1GC, UseSerialGC, UseParallelGC, or UseShenandoahGC are required.\");\n+        AOTMetaspace::report_loading_error(\"Cannot use CDS heap data. UseEpsilonGC, UseG1GC, UseSerialGC, UseParallelGC, or UseShenandoahGC are required.\");\n@@ -1485,1 +1485,1 @@\n-      MetaspaceShared::unrecoverable_loading_error();\n+      AOTMetaspace::unrecoverable_loading_error();\n@@ -1578,1 +1578,1 @@\n-  FileMapRegion* r = region_at(MetaspaceShared::hp);\n+  FileMapRegion* r = region_at(AOTMetaspace::hp);\n@@ -1592,1 +1592,1 @@\n-  FileMapRegion* r = region_at(MetaspaceShared::hp);\n+  FileMapRegion* r = region_at(AOTMetaspace::hp);\n@@ -1646,1 +1646,1 @@\n-  FileMapRegion* r = region_at(MetaspaceShared::hp);\n+  FileMapRegion* r = region_at(AOTMetaspace::hp);\n@@ -1660,1 +1660,1 @@\n-    MetaspaceShared::report_loading_error(\"UseSharedSpaces: Unable to allocate java heap region for archive heap.\");\n+    AOTMetaspace::report_loading_error(\"UseSharedSpaces: Unable to allocate java heap region for archive heap.\");\n@@ -1671,1 +1671,1 @@\n-  if (MetaspaceShared::use_windows_memory_mapping() || UseLargePages) {\n+  if (AOTMetaspace::use_windows_memory_mapping() || UseLargePages) {\n@@ -1675,1 +1675,1 @@\n-    if (!read_region(MetaspaceShared::hp, addr,\n+    if (!read_region(AOTMetaspace::hp, addr,\n@@ -1690,1 +1690,1 @@\n-      MetaspaceShared::report_loading_error(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n+      AOTMetaspace::report_loading_error(\"UseSharedSpaces: Unable to map at required address in java heap. \"\n@@ -1698,1 +1698,1 @@\n-      MetaspaceShared::report_loading_error(\"UseSharedSpaces: mapped heap region is corrupt\");\n+      AOTMetaspace::report_loading_error(\"UseSharedSpaces: mapped heap region is corrupt\");\n@@ -1722,1 +1722,1 @@\n-      MetaspaceShared::report_loading_error(\"CDS heap cannot be used because bitmap region cannot be mapped\");\n+      AOTMetaspace::report_loading_error(\"CDS heap cannot be used because bitmap region cannot be mapped\");\n@@ -1737,1 +1737,1 @@\n-  FileMapRegion* r = region_at(MetaspaceShared::hp);\n+  FileMapRegion* r = region_at(AOTMetaspace::hp);\n@@ -1749,1 +1749,1 @@\n-  FileMapRegion* r = region_at(MetaspaceShared::hp);\n+  FileMapRegion* r = region_at(AOTMetaspace::hp);\n@@ -1752,1 +1752,1 @@\n-      (address)(region_at(MetaspaceShared::bm)->mapped_base()) + r->oopmap_offset(),\n+      (address)(region_at(AOTMetaspace::bm)->mapped_base()) + r->oopmap_offset(),\n@@ -1808,1 +1808,1 @@\n-    MetaspaceShared::unrecoverable_loading_error(\"Mark mismatch while restoring from shared file.\");\n+    AOTMetaspace::unrecoverable_loading_error(\"Mark mismatch while restoring from shared file.\");\n@@ -1835,1 +1835,1 @@\n-    MetaspaceShared::report_loading_error(\"CDS is disabled because early JVMTI ClassFileLoadHook is in use.\");\n+    AOTMetaspace::report_loading_error(\"CDS is disabled because early JVMTI ClassFileLoadHook is in use.\");\n@@ -1841,1 +1841,1 @@\n-      MetaspaceShared::report_loading_error(\"Loading static archive failed.\");\n+      AOTMetaspace::report_loading_error(\"Loading static archive failed.\");\n@@ -1844,1 +1844,1 @@\n-      MetaspaceShared::report_loading_error(\"Loading dynamic archive failed.\");\n+      AOTMetaspace::report_loading_error(\"Loading dynamic archive failed.\");\n@@ -1897,1 +1897,1 @@\n-  return region_at(MetaspaceShared::rw);\n+  return region_at(AOTMetaspace::rw);\n@@ -1901,1 +1901,1 @@\n-  return region_at(MetaspaceShared::ro);\n+  return region_at(AOTMetaspace::ro);\n@@ -1928,1 +1928,1 @@\n-    MetaspaceShared::report_loading_error(\"The %s's ObjectAlignmentInBytes of %d\"\n+    AOTMetaspace::report_loading_error(\"The %s's ObjectAlignmentInBytes of %d\"\n@@ -1934,1 +1934,1 @@\n-    MetaspaceShared::report_loading_error(\"The %s's CompactStrings setting (%s)\"\n+    AOTMetaspace::report_loading_error(\"The %s's CompactStrings setting (%s)\"\n@@ -1952,1 +1952,1 @@\n-    MetaspaceShared::report_loading_error(\"The %s's JIT compiler setting (%s)\"\n+    AOTMetaspace::report_loading_error(\"The %s's JIT compiler setting (%s)\"\n@@ -1959,1 +1959,1 @@\n-      MetaspaceShared::report_loading_error(\"The %s's TypeProfileLevel setting (%d)\"\n+      AOTMetaspace::report_loading_error(\"The %s's TypeProfileLevel setting (%d)\"\n@@ -1965,1 +1965,1 @@\n-      MetaspaceShared::report_loading_error(\"The %s's TypeProfileArgsLimit setting (%d)\"\n+      AOTMetaspace::report_loading_error(\"The %s's TypeProfileArgsLimit setting (%d)\"\n@@ -1971,1 +1971,1 @@\n-      MetaspaceShared::report_loading_error(\"The %s's TypeProfileParamsLimit setting (%d)\"\n+      AOTMetaspace::report_loading_error(\"The %s's TypeProfileParamsLimit setting (%d)\"\n@@ -1978,1 +1978,1 @@\n-      MetaspaceShared::report_loading_error(\"The %s's TypeProfileWidth setting (%d)\"\n+      AOTMetaspace::report_loading_error(\"The %s's TypeProfileWidth setting (%d)\"\n@@ -1985,1 +1985,1 @@\n-      MetaspaceShared::report_loading_error(\"The %s's BciProfileWidth setting (%d)\"\n+      AOTMetaspace::report_loading_error(\"The %s's BciProfileWidth setting (%d)\"\n@@ -1991,1 +1991,1 @@\n-      MetaspaceShared::report_loading_error(\"The %s's TypeProfileCasts setting (%s)\"\n+      AOTMetaspace::report_loading_error(\"The %s's TypeProfileCasts setting (%s)\"\n@@ -2000,1 +2000,1 @@\n-      MetaspaceShared::report_loading_error(\"The %s's ProfileTraps setting (%s)\"\n+      AOTMetaspace::report_loading_error(\"The %s's ProfileTraps setting (%s)\"\n@@ -2008,1 +2008,1 @@\n-      MetaspaceShared::report_loading_error(\"The %s's SpecTrapLimitExtraEntries setting (%d)\"\n+      AOTMetaspace::report_loading_error(\"The %s's SpecTrapLimitExtraEntries setting (%d)\"\n@@ -2021,1 +2021,1 @@\n-      MetaspaceShared::report_loading_error(\"%s has aot-linked classes. It cannot be used when the \"\n+      AOTMetaspace::report_loading_error(\"%s has aot-linked classes. It cannot be used when the \"\n@@ -2035,1 +2035,1 @@\n-    MetaspaceShared::report_loading_error(\"The %s's BytecodeVerificationLocal setting (%s)\"\n+    AOTMetaspace::report_loading_error(\"The %s's BytecodeVerificationLocal setting (%s)\"\n@@ -2059,1 +2059,1 @@\n-    MetaspaceShared::report_loading_error(\"The setting of the AllowArchivingWithJavaAgent is different \"\n+    AOTMetaspace::report_loading_error(\"The setting of the AllowArchivingWithJavaAgent is different \"\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":82,"deletions":82,"binary":false,"changes":164,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -29,1 +30,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -74,1 +74,1 @@\n-  size_t used_aligned()             const; \/\/ aligned up to MetaspaceShared::core_region_alignment()\n+  size_t used_aligned()             const; \/\/ aligned up to AOTMetaspace::core_region_alignment()\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-          MetaspaceShared::unrecoverable_writing_error();\n+          AOTMetaspace::unrecoverable_writing_error();\n@@ -211,1 +211,1 @@\n-      MetaspaceShared::unrecoverable_writing_error(\"Unexpected exception, use -Xlog:aot,exceptions=trace for detail\");\n+      AOTMetaspace::unrecoverable_writing_error(\"Unexpected exception, use -Xlog:aot,exceptions=trace for detail\");\n","filename":"src\/hotspot\/share\/cds\/finalImageRecipes.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -38,1 +39,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -876,1 +876,1 @@\n-  MetaspaceShared::unrecoverable_writing_error();\n+  AOTMetaspace::unrecoverable_writing_error();\n@@ -1512,1 +1512,1 @@\n-    MetaspaceShared::unrecoverable_writing_error();\n+    AOTMetaspace::unrecoverable_writing_error();\n@@ -1565,1 +1565,1 @@\n-      MetaspaceShared::unrecoverable_writing_error();\n+      AOTMetaspace::unrecoverable_writing_error();\n@@ -1595,1 +1595,1 @@\n-        MetaspaceShared::unrecoverable_writing_error();\n+        AOTMetaspace::unrecoverable_writing_error();\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -29,1 +30,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -435,1 +435,1 @@\n-    CDS_JAVA_HEAP_ONLY(return (idx == MetaspaceShared::hp);)\n+    CDS_JAVA_HEAP_ONLY(return (idx == AOTMetaspace::hp);)\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -29,1 +30,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -222,1 +222,1 @@\n-  MetaspaceShared::try_link_class(THREAD, result);\n+  AOTMetaspace::try_link_class(THREAD, result);\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -29,1 +30,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n","filename":"src\/hotspot\/share\/cds\/lambdaProxyClassDictionary.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-  if (MetaspaceShared::in_aot_cache(this)) {\n+  if (AOTMetaspace::in_aot_cache(this)) {\n","filename":"src\/hotspot\/share\/cds\/runTimeClassInfo.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -31,1 +32,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n","filename":"src\/hotspot\/share\/cds\/runTimeClassInfo.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -30,1 +31,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -28,1 +29,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -604,1 +604,1 @@\n-      MetaspaceShared::report_loading_error(\"Mismatched values for property %s: %s specified during dump time but not during runtime\", _prop, _archived_value);\n+      AOTMetaspace::report_loading_error(\"Mismatched values for property %s: %s specified during dump time but not during runtime\", _prop, _archived_value);\n@@ -609,1 +609,1 @@\n-      MetaspaceShared::report_loading_error(\"Mismatched values for property %s: %s specified during runtime but not during dump time\", _prop, runtime_value);\n+      AOTMetaspace::report_loading_error(\"Mismatched values for property %s: %s specified during runtime but not during dump time\", _prop, runtime_value);\n@@ -612,1 +612,1 @@\n-      MetaspaceShared::report_loading_error(\"Mismatched values for property %s: runtime %s dump time %s\", _prop, runtime_value, _archived_value);\n+      AOTMetaspace::report_loading_error(\"Mismatched values for property %s: runtime %s dump time %s\", _prop, runtime_value, _archived_value);\n@@ -618,1 +618,1 @@\n-    MetaspaceShared::report_loading_error(\"Disabling optimized module handling\");\n+    AOTMetaspace::report_loading_error(\"Disabling optimized module handling\");\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -996,1 +996,1 @@\n-      MetaspaceShared::unrecoverable_writing_error();\n+      AOTMetaspace::unrecoverable_writing_error();\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-      \/\/ We have allocated with MetaspaceShared::symbol_space_alloc(). No deallocation is needed.\n+      \/\/ We have allocated with AOTMetaspace::symbol_space_alloc(). No deallocation is needed.\n@@ -188,1 +188,1 @@\n-      void* p = (void*)MetaspaceShared::symbol_space_alloc(alloc_size);\n+      void* p = (void*)AOTMetaspace::symbol_space_alloc(alloc_size);\n","filename":"src\/hotspot\/share\/classfile\/symbolTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2004,1 +2004,1 @@\n-  Array<Method*>* list = MetaspaceShared::archived_method_handle_intrinsics();\n+  Array<Method*>* list = AOTMetaspace::archived_method_handle_intrinsics();\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -41,1 +42,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -208,1 +208,1 @@\n-  if (CDSConfig::is_dumping_dynamic_archive() && MetaspaceShared::in_aot_cache(k)) {\n+  if (CDSConfig::is_dumping_dynamic_archive() && AOTMetaspace::in_aot_cache(k)) {\n@@ -303,1 +303,1 @@\n-      \/\/ Most loaded classes should have been speculatively linked by MetaspaceShared::link_class_for_cds().\n+      \/\/ Most loaded classes should have been speculatively linked by AOTMetaspace::link_class_for_cds().\n@@ -694,1 +694,1 @@\n-      \/\/ already been linked in MetaspaceShared::link_class_for_cds().\n+      \/\/ already been linked in AOTMetaspace::link_class_for_cds().\n@@ -1127,1 +1127,1 @@\n-  if (!MetaspaceShared::in_aot_cache_dynamic_region(name)) {\n+  if (!AOTMetaspace::in_aot_cache_dynamic_region(name)) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -31,1 +32,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -99,1 +99,1 @@\n-\/\/ MetaspaceShared::open_static_archive() which is calles\n+\/\/ AOTMetaspace::open_static_archive() which is calles\n@@ -168,1 +168,1 @@\n-\/\/ It is called from MetaspaceShared::initialize_shared_spaces()\n+\/\/ It is called from AOTMetaspace::initialize_shared_spaces()\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"cds\/metaspaceShared.hpp\"\n+#include \"cds\/aotMetaspace.hpp\"\n","filename":"src\/hotspot\/share\/interpreter\/abstractInterpreter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -26,1 +27,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n","filename":"src\/hotspot\/share\/interpreter\/rewriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -28,1 +29,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -724,1 +724,1 @@\n-    MetaspaceShared::initialize_for_static_dump();\n+    AOTMetaspace::initialize_for_static_dump();\n@@ -743,1 +743,1 @@\n-    MetaspaceShared::initialize_runtime_shared_and_meta_spaces();\n+    AOTMetaspace::initialize_runtime_shared_and_meta_spaces();\n@@ -856,1 +856,1 @@\n-      CDS_ONLY(MetaspaceShared::print_on(&ls);)\n+      CDS_ONLY(AOTMetaspace::print_on(&ls);)\n@@ -1040,1 +1040,1 @@\n-  return MetaspaceShared::in_aot_cache(ptr);\n+  return AOTMetaspace::in_aot_cache(ptr);\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-class MetaspaceShared;\n+class AOTMetaspace;\n@@ -46,1 +46,1 @@\n-  friend class MetaspaceShared;\n+  friend class AOTMetaspace;\n","filename":"src\/hotspot\/share\/memory\/metaspace.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -29,1 +30,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -881,1 +881,1 @@\n-  MetaspaceShared::adjust_heap_sizes_for_dumping();\n+  AOTMetaspace::adjust_heap_sizes_for_dumping();\n@@ -907,1 +907,1 @@\n-    MetaspaceShared::initialize_shared_spaces();\n+    AOTMetaspace::initialize_shared_spaces();\n@@ -1164,1 +1164,1 @@\n-  MetaspaceShared::post_initialize(CHECK_false);\n+  AOTMetaspace::post_initialize(CHECK_false);\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-  friend class MetaspaceShared;\n+  friend class AOTMetaspace;\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -26,1 +27,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -262,1 +262,1 @@\n-    if (MetaspaceShared::in_aot_cache_dynamic_region((void*)k)) {\n+    if (AOTMetaspace::in_aot_cache_dynamic_region((void*)k)) {\n@@ -264,1 +264,1 @@\n-    } else if (MetaspaceShared::in_aot_cache_static_region((void*)k)) {\n+    } else if (AOTMetaspace::in_aot_cache_static_region((void*)k)) {\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -31,1 +32,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -2767,1 +2767,1 @@\n-             MetaspaceShared::in_aot_cache(_package_entry)) {\n+             AOTMetaspace::in_aot_cache(_package_entry)) {\n@@ -2849,1 +2849,1 @@\n-  if (MetaspaceShared::in_aot_cache(this)) {\n+  if (AOTMetaspace::in_aot_cache(this)) {\n@@ -3092,1 +3092,1 @@\n-      assert(MetaspaceShared::in_aot_cache(_package_entry), \"must be\");\n+      assert(AOTMetaspace::in_aot_cache(_package_entry), \"must be\");\n@@ -3975,1 +3975,1 @@\n-    if (MetaspaceShared::in_aot_cache_dynamic_region((void*)this)) {\n+    if (AOTMetaspace::in_aot_cache_dynamic_region((void*)this)) {\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"cds\/metaspaceShared.hpp\"\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -53,1 +53,1 @@\n-  return _klass->in_aot_cache() && !MetaspaceShared::remapped_readwrite() && _klass->verified_at_dump_time();\n+  return _klass->in_aot_cache() && !AOTMetaspace::remapped_readwrite() && _klass->verified_at_dump_time();\n@@ -1095,2 +1095,2 @@\n-  if (MetaspaceShared::in_aot_cache((void*)&_method) &&\n-     !MetaspaceShared::remapped_readwrite() &&\n+  if (AOTMetaspace::in_aot_cache((void*)&_method) &&\n+     !AOTMetaspace::remapped_readwrite() &&\n","filename":"src\/hotspot\/share\/oops\/klassVtable.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -27,1 +28,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n@@ -443,1 +443,1 @@\n-  if (in_aot_cache() && !MetaspaceShared::remapped_readwrite() && method_holder()->verified_at_dump_time()) {\n+  if (in_aot_cache() && !AOTMetaspace::remapped_readwrite() && method_holder()->verified_at_dump_time()) {\n@@ -454,1 +454,1 @@\n-  if (in_aot_cache() && !MetaspaceShared::remapped_readwrite() && method_holder()->verified_at_dump_time()) {\n+  if (in_aot_cache() && !AOTMetaspace::remapped_readwrite() && method_holder()->verified_at_dump_time()) {\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -26,1 +27,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n","filename":"src\/hotspot\/share\/oops\/symbol.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -26,1 +27,0 @@\n-#include \"cds\/metaspaceShared.hpp\"\n","filename":"src\/hotspot\/share\/oops\/trainingData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3507,1 +3507,1 @@\n-  MetaspaceShared::dump_loaded_classes(file_name, THREAD);\n+  AOTMetaspace::dump_loaded_classes(file_name, THREAD);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"cds\/metaspaceShared.hpp\"\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -257,1 +257,1 @@\n-    if (!MetaspaceShared::remap_shared_readonly_as_readwrite()) {\n+    if (!AOTMetaspace::remap_shared_readonly_as_readwrite()) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"cds\/metaspaceShared.hpp\"\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -1887,1 +1887,1 @@\n-WB_ENTRY(jlong, WB_MetaspaceSharedRegionAlignment(JNIEnv* env, jobject wb))\n+WB_ENTRY(jlong, WB_AOTMetaspaceRegionAlignment(JNIEnv* env, jobject wb))\n@@ -1889,1 +1889,1 @@\n-  return (jlong)MetaspaceShared::core_region_alignment();\n+  return (jlong)AOTMetaspace::core_region_alignment();\n@@ -2157,1 +2157,1 @@\n-  return (jboolean)MetaspaceShared::in_aot_cache(java_lang_Class::as_Klass(JNIHandles::resolve_non_null(clazz)));\n+  return (jboolean)AOTMetaspace::in_aot_cache(java_lang_Class::as_Klass(JNIHandles::resolve_non_null(clazz)));\n@@ -2887,1 +2887,1 @@\n-  {CC\"metaspaceSharedRegionAlignment\", CC\"()J\",       (void*)&WB_MetaspaceSharedRegionAlignment },\n+  {CC\"metaspaceSharedRegionAlignment\", CC\"()J\",       (void*)&WB_AOTMetaspaceRegionAlignment },\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -451,1 +451,1 @@\n-    MetaspaceShared::preload_and_dump(thread);\n+    AOTMetaspace::preload_and_dump(thread);\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#include \"cds\/metaspaceShared.hpp\"\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -892,1 +892,1 @@\n-    MetaspaceShared::preload_and_dump(CHECK_JNI_ERR);\n+    AOTMetaspace::preload_and_dump(CHECK_JNI_ERR);\n@@ -895,1 +895,1 @@\n-    MetaspaceShared::preload_and_dump(CHECK_JNI_ERR);\n+    AOTMetaspace::preload_and_dump(CHECK_JNI_ERR);\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"cds\/metaspaceShared.hpp\"\n+#include \"cds\/aotMetaspace.hpp\"\n@@ -1202,1 +1202,1 @@\n-    CDS_ONLY(MetaspaceShared::print_on(st);)\n+    CDS_ONLY(AOTMetaspace::print_on(st);)\n@@ -1417,1 +1417,1 @@\n-    CDS_ONLY(MetaspaceShared::print_on(st);)\n+    CDS_ONLY(AOTMetaspace::print_on(st);)\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}