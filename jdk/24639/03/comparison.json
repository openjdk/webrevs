{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-*\/\n+ *\/\n@@ -35,0 +35,4 @@\n+import java.awt.Frame;\n+import java.awt.Window;\n+import java.util.List;\n+import java.util.Locale;\n@@ -36,0 +40,1 @@\n+import javax.swing.JDialog;\n@@ -37,1 +42,2 @@\n-import java.util.Locale;\n+import javax.swing.JLabel;\n+import javax.swing.JWindow;\n@@ -40,0 +46,1 @@\n+    private static JFrame frame;\n@@ -41,8 +48,29 @@\n-        1. You will see a frame with five buttons.\n-        2. Confirm that each button is placed as follows:\n-             NORTH\n-        END  CENTER  START\n-             SOUTH\n-        3. Press the \"NORTH\" button and confirm the button is focused.\n-        4. Press TAB repeatedly and confirm that the TAB focus moves from right to left.\n-             (NORTH - START - CENTER - END - SOUTH - NORTH - START - CENTER - ...)\n+        This test verifies tab movement on RTL component orientation\n+        in JWindow, JFrame and JDialog.\n+\n+        When test starts 3 test windows are displayed - JFrame, JWindow and JDialog.\n+        Follow the instructions below and if any condition does not hold\n+        press FAIL.\n+\n+        1. Confirm that each button in the child window is placed as follows:\n+\n+            For JFrame:\n+                 NORTH\n+            END  CENTER  START\n+                 SOUTH\n+\n+            For JWindow:\n+            END  CENTER  START\n+                  QUIT\n+\n+            For JDialog:\n+            END  CENTER  START\n+\n+        3. Press on the \"START\" button in case of JWindow & JDialog and \"NORTH\"\n+           in case of JFrame, confirm that the respective button is focused.\n+\n+        4. Press TAB repeatedly and confirm that the TAB focus moves\n+           from right to left.\n+\n+            For JFrame:\n+            (NORTH - START - CENTER - END - SOUTH - NORTH - START - CENTER - ...)\n@@ -50,1 +78,8 @@\n-            If there's anything different from the above items, click Fail else click Pass.\"\"\";\n+            For JWindow:\n+            (START - CENTER - END - QUIT - START - CENTER - END - QUIT - ...)\n+\n+            For JDialog:\n+            (START - CENTER - END - START - CENTER - END - ...)\n+\n+        If all of the above conditions are true press PASS else FAIL.\n+        \"\"\";\n@@ -54,1 +89,0 @@\n-                .title(\"Tab movement Instructions\")\n@@ -56,3 +90,4 @@\n-                .rows((int) INSTRUCTIONS.lines().count() + 2)\n-                .columns(48)\n-                .testUI(bug4419914::createTestUI)\n+                .columns(45)\n+                .testTimeOut(10)\n+                .testUI(bug4419914::createAndShowUI)\n+                .positionTestUI(WindowLayouts::rightOneColumn)\n@@ -63,2 +98,6 @@\n-    private static JFrame createTestUI() {\n-        JFrame frame = new JFrame(\"bug4419914\");\n+    private static List<Window> createAndShowUI() {\n+        return List.of(createJFrame(), createJWindow(), createJDialog());\n+    }\n+\n+    private static JFrame createJFrame() {\n+        frame = new JFrame(\"bug4419914 JFrame\");\n@@ -66,0 +105,1 @@\n+        \/\/ Tab movement set to RTL\n@@ -70,0 +110,1 @@\n+        \/\/ Component placement within content pane set to RTL\n@@ -71,1 +112,1 @@\n-                               ComponentOrientation.RIGHT_TO_LEFT);\n+                ComponentOrientation.RIGHT_TO_LEFT);\n@@ -73,1 +114,1 @@\n-        frame.getContentPane().setLayout(new BorderLayout());\n+        frame.setLayout(new BorderLayout());\n@@ -79,1 +120,1 @@\n-        frame.setSize(300, 150);\n+        frame.setSize(300, 160);\n@@ -82,0 +123,45 @@\n+\n+    private static JWindow createJWindow() {\n+        JWindow window = new JWindow(frame);\n+        window.setFocusableWindowState(true);\n+        \/\/ Tab movement set to RTL\n+        window.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);\n+        window.setLocale(new Locale(\"en\"));\n+        window.enableInputMethods(false);\n+\n+        \/\/ Component placement within content pane set to RTL\n+        window.getContentPane().setComponentOrientation(\n+                ComponentOrientation.RIGHT_TO_LEFT);\n+        window.getContentPane().setLocale(new Locale(\"en\"));\n+        window.setLayout(new BorderLayout());\n+        window.add(new JLabel(\"bug4419914 JWindow\"), BorderLayout.NORTH);\n+        window.add(new JButton(\"START\"), BorderLayout.LINE_START);\n+        window.add(new JButton(\"CENTER\"), BorderLayout.CENTER);\n+        window.add(new JButton(\"END\"), BorderLayout.LINE_END);\n+\n+        JButton quitButton = new JButton(\"QUIT\");\n+        quitButton.addActionListener(e1 -> window.dispose());\n+        window.add(quitButton, BorderLayout.SOUTH);\n+        window.setSize(300, 153);\n+        window.requestFocus();\n+        return window;\n+    }\n+\n+    private static JDialog createJDialog() {\n+        JDialog dialog = new JDialog((Frame) null, \"bug4419914 JDialog\");\n+        \/\/ Tab movement set to RTL\n+        dialog.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);\n+        dialog.setLocale(new Locale(\"en\"));\n+        dialog.enableInputMethods(false);\n+\n+        \/\/ Component placement within content pane set to RTL\n+        dialog.getContentPane().setComponentOrientation(\n+                ComponentOrientation.RIGHT_TO_LEFT);\n+        dialog.getContentPane().setLocale(new Locale(\"en\"));\n+        dialog.setLayout(new BorderLayout());\n+        dialog.add(new JButton(\"CENTER\"), BorderLayout.CENTER);\n+        dialog.add(new JButton(\"END\"), BorderLayout.LINE_END);\n+        dialog.add(new JButton(\"START\"), BorderLayout.LINE_START);\n+        dialog.setSize(300, 160);\n+        return dialog;\n+    }\n","filename":"test\/jdk\/javax\/swing\/JFrame\/bug4419914.java","additions":107,"deletions":21,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4614623\n+ * @requires (os.family == \"windows\")\n+ * @summary Tests that w2k mnemonic underlining works when there's no\n+            focus owner\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4614623\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.UIManager;\n+\n+public class bug4614623 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This test verifies if the short-cut character\n+            (menu mnemonic) is underlined when the ALT key is held down.\n+\n+            Check if the following is true.\n+            1) Press Alt key. The letter 'F' (menu mnemonic) of\n+            the \"File\" menu should now be underlined.\n+            2) Release the Alt key, the selection background (light grey)\n+            should appear around the \"File\" menu. Compare \"About\" menu\n+            with \"File\" menu to see the light grey selection background.\n+\n+            If the above is true, press PASS else FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\n+\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(62)\n+                .rows(12)\n+                .testUI(bug4614623::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JFrame createAndShowUI() {\n+        JFrame frame = new JFrame(\"bug4614623 - File menu test\");\n+        JMenuBar menuBar = new JMenuBar();\n+\n+        JMenu fileMenu = new JMenu(\"File\");\n+        fileMenu.setMnemonic('F');\n+        menuBar.add(fileMenu);\n+\n+        JMenu about = new JMenu(\"About\");\n+        menuBar.add(about);\n+        menuBar.setSize(300, 100);\n+\n+        frame.setJMenuBar(menuBar);\n+        menuBar.requestFocus();\n+        frame.setSize(300, 200);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JRootPane\/bug4614623.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4613811\n+ * @summary Scrollable Buttons of JTabbedPane don't\n+ *          get enabled or disabled on selecting tab\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4613811\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JTabbedPane;\n+\n+public class bug4613811 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Select different tabs and check that the scrollable\n+            buttons are correctly enabled and disabled.\n+\n+            When the very first tab (Tab 1) is fully visible\n+            On macOS:\n+            the left arrow button should NOT be visible.\n+\n+            On other platforms:\n+            the left arrow button should be disabled.\n+\n+            If the last tab (Tab 5) is fully visible\n+            On macOS:\n+            the right arrow button should NOT be visible.\n+\n+            On other platforms:\n+            the right arrow button should be disabled.\n+\n+            If the above is true press PASS else FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(30)\n+                .testUI(bug4613811::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createAndShowUI() {\n+        JFrame frame = new JFrame(\"bug4613811 - JTabbedPane Test\");\n+        final JTabbedPane tabPane = new JTabbedPane(JTabbedPane.TOP,\n+                                                    JTabbedPane.SCROLL_TAB_LAYOUT);\n+        for (int i = 1; i <= 5; i++) {\n+            tabPane.addTab(\"TabbedPane: Tab \" + i, null, new JLabel(\"Tab \" + i));\n+        }\n+        frame.add(tabPane, BorderLayout.CENTER);\n+        frame.setResizable(false);\n+        frame.setSize(400, 200);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/bug4613811.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4251781\n+ * @summary Tests that JWindow repaint is optimized (background is not\n+            cleared).\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4251781\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Container;\n+import javax.swing.JButton;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPopupMenu;\n+import javax.swing.JWindow;\n+\n+public class bug4251781 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Press the button at the bottom-right corner of the gray\n+            window with the mouse.\n+            If the window DOES NOT flicker when you press and\/or release\n+            the mouse button press PASS else FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(bug4251781::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JWindow createAndShowUI() {\n+        JWindow w = new JWindow();\n+        final Container pane = w.getContentPane();\n+        pane.setLayout(null);\n+        pane.setBackground(Color.GRAY.darker());\n+\n+        final JPopupMenu popup = new JPopupMenu();\n+        popup.add(new JMenuItem(\"item 1\"));\n+        popup.add(new JMenuItem(\"exit\"));\n+\n+        JButton b = new JButton(\"menu\");\n+        b.setBounds(350, 250, 50, 50);\n+        b.addActionListener(ev -> popup.show(pane, 0, 0));\n+        pane.add(b);\n+\n+        w.setSize(400, 300);\n+        return w;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JWindow\/bug4251781.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"}]}