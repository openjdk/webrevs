{"files":[{"patch":"@@ -217,1 +217,2 @@\n-    \/\/ On Windows, we also support forward slash as the file separator for Class-Path: attribute.\n+    \/\/ On Windows, we also support forward slash as the file separator when locating entries in the Class-Path: attribute.\n+    const char* dir_tail2 = strrchr(dir_name, '\/');\n@@ -219,1 +220,3 @@\n-      dir_tail = strrchr(dir_name, '\/');\n+      dir_tail = dir_tail2;\n+    } else if (dir_tail2 != nullptr && dir_tail2 > dir_tail) {\n+      dir_tail = dir_tail2;\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,0 @@\n-\n@@ -94,1 +93,1 @@\n-          \/\/ Setup jar direcotry and names.\n+          \/\/ Setup jar directory and names.\n@@ -119,0 +118,34 @@\n+\n+          \/\/ Go one directory up.\n+          int idx2 = jar1.substring(0, idx - 1).lastIndexOf(File.separator);\n+          if (idx2 != -1) {\n+              \/\/ Setup jar directory and names.\n+              jarDir = jar1.substring(0, idx2);\n+              \/\/ Set relative path to jar containing '\\' and '\/' file separators\n+              \/\/ e.g. d1\\d2\/A.jar\n+              jar1Name = jar1.substring(idx2 + 1).replace(\"\\\\\", \"\/\");\n+              jar4Name = jar4.substring(idx2 + 1).replace(\"\\\\\", \"\/\");\n+              jar1Name = jar1Name.replaceFirst(\"\/\", \"\\\\\\\\\");\n+              jar4Name = jar4Name.replaceFirst(\"\/\", \"\\\\\\\\\");\n+\n+              newCp = jar1Name + File.pathSeparator + jar4Name;\n+              out = TestCommon.testDump(jarDir, newCp, classlist, \"-Xlog:class+path=info\");\n+              if (i == 1) {\n+                  out.shouldContain(\"opened: scratch\\\\0\/cpattr1.jar\"); \/\/ first jar on -cp\n+              } else {\n+                  \/\/ first jar on -cp with long Class-Path: attribute\n+                  out.shouldContain(\"opened: scratch\\\\0\/cpattr1_long.jar\");\n+              }\n+              \/\/ one of the jar in the Class-Path: attribute of cpattr1.jar\n+              out.shouldContain(\"opened: scratch\\\\0\/cpattr2.jar\");\n+\n+              TestCommon.runWithRelativePath(\n+                  jarDir.replace(\"\\\\\", \"\/\"),\n+                  \"-Xlog:class+path,class+load\",\n+                  \"-cp\", newCp,\n+                  \"CpAttr1\")\n+                .assertNormalExit(output -> {\n+                    output.shouldMatch(\"checking shared classpath entry: .*cpattr2.jar\");\n+                    output.shouldMatch(\"checking shared classpath entry: .*cpattr3.jar\");\n+                  });\n+          }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ClassPathAttr.java","additions":36,"deletions":3,"binary":false,"changes":39,"status":"modified"}]}