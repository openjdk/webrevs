{"files":[{"patch":"@@ -216,0 +216,6 @@\n+#ifdef _WINDOWS\n+    \/\/ On Windows, we also support forward slash as the file separator for Class-Path: attribute.\n+    if (dir_tail == nullptr) {\n+      dir_tail = strrchr(dir_name, '\/');\n+    }\n+#endif\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import jdk.test.lib.Platform;\n@@ -85,0 +86,34 @@\n+\n+      \/\/ Test handling of forward slash ('\/') file separator for Class-Path attribute on Windows.\n+      if (Platform.isWindows()) {\n+\n+          \/\/ Test with relative path\n+          \/\/ Find the index to the dir before the jar file.\n+          int idx = jar1.lastIndexOf(File.separator);\n+          idx = jar1.substring(0, idx - 1).lastIndexOf(File.separator);\n+          \/\/ Setup jar direcotry and names.\n+          String jarDir = jar1.substring(0, idx);\n+          String jar1Name = jar1.substring(idx + 1);\n+          String jar4Name = jar4.substring(idx + 1);\n+          String newCp = jar1Name.replace(\"\\\\\", \"\/\") + File.pathSeparator + jar4Name.replace(\"\\\\\", \"\/\");\n+\n+          OutputAnalyzer out = TestCommon.testDump(jarDir, newCp, classlist, \"-Xlog:class+path=info\");\n+          if (i == 1) {\n+              out.shouldContain(\"opened: 0\/cpattr1.jar\"); \/\/ first jar on -cp\n+          } else {\n+              \/\/ first jar on -cp with long Class-Path: attribute\n+              out.shouldContain(\"opened: 0\/cpattr1_long.jar\");\n+          }\n+          \/\/ one of the jar in the Class-Path: attribute of cpattr1.jar\n+          out.shouldContain(\"opened: 0\/cpattr2.jar\");\n+\n+          TestCommon.runWithRelativePath(\n+              jarDir.replace(\"\\\\\", \"\/\"),\n+              \"-Xlog:class+path,class+load\",\n+              \"-cp\", newCp,\n+              \"CpAttr1\")\n+            .assertNormalExit(output -> {\n+                output.shouldMatch(\"checking shared classpath entry: .*cpattr2.jar\");\n+                output.shouldMatch(\"checking shared classpath entry: .*cpattr3.jar\");\n+              });\n+      }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ClassPathAttr.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"}]}