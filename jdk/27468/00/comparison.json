{"files":[{"patch":"@@ -82,1 +82,1 @@\n-        -Wl,-bernotok -Wl,-bdatapsize:64k -Wl,-btextpsize:64k -Wl,-bstackpsize:64k\"\n+        -Wl,-bernotok -Wl,-bcdtors:mbr::s -Wl,-bdatapsize:64k -Wl,-btextpsize:64k -Wl,-bstackpsize:64k\"\n","filename":"make\/autoconf\/flags-ldflags.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -568,0 +568,4 @@\n+  # In the ubsan case we have to link every binary with the C++-compiler as linker, because inherently\n+  # the C-Compiler and the C++-compiler used as linker provide a different set of ubsan exports.\n+  # Linkung an executable with the C-compiler and one of its shared libraries with the C++-compiler\n+  # leeds to unresolved symbols.\n@@ -569,2 +573,3 @@\n-      UBSAN_CFLAGS=\"$UBSAN_CFLAGS -fno-sanitize=function,vptr -DLLVM_SYMBOLIZER=$(dirname $(dirname $CC))\/tools\/ibm-llvm-symbolizer\"\n-      UBSAN_LDFLAGS=\"$UBSAN_LDFLAGS -fno-sanitize=function,vptr -Wl,-bbigtoc\"\n+      UBSAN_CFLAGS=\"$UBSAN_CFLAGS -DLLVM_SYMBOLIZER=$(dirname $(dirname $CC))\/tools\/ibm-llvm-symbolizer\"\n+      UBSAN_LDFLAGS=\"$UBSAN_LDFLAGS -Wl,-bbigtoc\"\n+      LD=\"$LDCXX\"\n","filename":"make\/autoconf\/jdk-options.m4","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-      LP64_ONLY(p2u(_base) + (uintptr_t)nth_bit(narrow_klass_pointer_bits() + _shift))\n+      LP64_ONLY((p2u(_base) + (uintptr_t)nth_bit(narrow_klass_pointer_bits() + _shift)))\n","filename":"src\/hotspot\/share\/oops\/compressedKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}