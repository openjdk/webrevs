{"files":[{"patch":"@@ -1,70 +0,0 @@\n-\/*\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.internal.lang.stable;\n-\n-import jdk.internal.vm.annotation.ForceInline;\n-\n-import java.util.Collections;\n-import java.util.function.Function;\n-\n-\/**\n- * An empty stable function with no allowed inputs\n- *\n- * @implNote This implementation can be used early in the boot sequence as it does not\n- *           rely on reflection, MethodHandles, Streams etc.\n- *\n- * @param original     the original Function\n- * @param <T>          the type of the input to the function\n- * @param <R>          the type of the result of the function\n- *\/\n-record EmptyStableFunction<T, R>(Function<? super T, ? extends R> original) implements Function<T, R> {\n-\n-    @ForceInline\n-    @Override\n-    public R apply(T value) {\n-        throw new IllegalArgumentException(\"Input not allowed: \" + value);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return System.identityHashCode(this);\n-    }\n-\n-    @Override\n-    public boolean equals(Object obj) {\n-        return obj == this;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return StableUtil.renderMappings(this, \"StableFunction\", Collections.emptyList());\n-    }\n-\n-    static <T, R> Function<T, R> of(Function<? super T, ? extends R> original) {\n-        return new EmptyStableFunction<>(original);\n-    }\n-\n-}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/lang\/stable\/EmptyStableFunction.java","additions":0,"deletions":70,"binary":false,"changes":70,"status":"deleted"},{"patch":"@@ -30,0 +30,2 @@\n+import java.util.Collection;\n+import java.util.Collections;\n@@ -51,0 +53,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/lang\/stable\/StableFunction.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,4 +41,1 @@\n-        if (inputs.isEmpty()) {\n-            return EmptyStableFunction.of(original);\n-        }\n-        return inputs instanceof EnumSet<?>\n+        return inputs instanceof EnumSet<?> && !inputs.isEmpty()\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/lang\/stable\/StableValueFactories.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-        assertThrows(IllegalArgumentException.class, () -> f0.apply(null));\n+        assertThrows(NullPointerException.class, () -> f0.apply(null));\n@@ -178,1 +178,1 @@\n-        assertEquals(\"jdk.internal.lang.stable.EmptyStableFunction\", emptyFunction.getClass().getName());\n+        assertEquals(\"jdk.internal.lang.stable.StableFunction\", emptyFunction.getClass().getName());\n","filename":"test\/jdk\/java\/lang\/StableValue\/StableFunctionTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}