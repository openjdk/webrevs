{"files":[{"patch":"@@ -50,1 +50,1 @@\n- * A stable value is a deferred holder of shallowly immutable content.\n+ * A stable value is a holder of shallowly immutable content that can be lazily computed.\n@@ -78,1 +78,1 @@\n- *    private final StableValue<Logger> logger = StableValue.of();\n+ *    private static final StableValue<Logger> logger = StableValue.of();\n@@ -95,2 +95,2 @@\n- * In the example above, the {@code logger} field is declared {@code final} which is\n- * a prerequisite for being treated as a constant by the JVM.\n+ * In the example above, the {@code logger} field is declared {@code static final} which\n+ * is a prerequisite for being treated as a constant by the JVM.\n@@ -110,1 +110,1 @@\n- *    private final StableValue<Logger> logger = StableValue.of();\n+ *    private static final StableValue<Logger> logger = StableValue.of();\n@@ -146,1 +146,1 @@\n- *     private final Supplier<Logger> logger =\n+ *     private static final Supplier<Logger> logger =\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StableValue.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1533,1 +1533,1 @@\n-                return StableUtil.renderMappings(this, \"StableSet\", delegateEntrySet);\n+                return StableUtil.renderMappings(this, \"StableSet\", delegateEntrySet, false);\n@@ -1600,1 +1600,1 @@\n-            return StableUtil.renderMappings(this, \"StableMap\", delegate.entrySet());\n+            return StableUtil.renderMappings(this, \"StableMap\", delegate.entrySet(), true);\n","filename":"src\/java.base\/share\/classes\/java\/util\/ImmutableCollections.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-        return StableUtil.renderMappings(this, \"StableFunction\", entries);\n+        return StableUtil.renderMappings(this, \"StableFunction\", entries, true);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/lang\/stable\/StableEnumFunction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-        return StableUtil.renderMappings(this, \"StableFunction\", values.entrySet());\n+        return StableUtil.renderMappings(this, \"StableFunction\", values.entrySet(), true);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/lang\/stable\/StableFunction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,2 @@\n-                                               Iterable<Map.Entry<K, StableValueImpl<V>>> delegates) {\n+                                               Iterable<Map.Entry<K, StableValueImpl<V>>> delegates,\n+                                               boolean curly) {\n@@ -43,1 +44,1 @@\n-        sb.append(\"{\");\n+        sb.append(curly ? \"{\" : \"[\");\n@@ -55,1 +56,1 @@\n-        sb.append(\"}\");\n+        sb.append(curly ? \"}\" : \"]\");\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/lang\/stable\/StableUtil.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -178,0 +178,3 @@\n+        assertTrue(entrySet.toString().startsWith(\"[\"));\n+        assertTrue(entrySet.toString().endsWith(\"]\"));\n+\n","filename":"test\/jdk\/java\/lang\/StableValue\/StableMapTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,1 +33,2 @@\n- * @run main MOAT\n+ * @compile --enable-preview -source ${jdk.version} MOAT.java\n+ * @run main\/othervm --enable-preview MOAT\n@@ -220,0 +221,2 @@\n+        testEmptyList(StableValue.list(0, i -> i));\n+        testEmptyList(StableValue.list(3, i -> i).subList(0, 0));\n@@ -222,0 +225,1 @@\n+        testListMutatorsAlwaysThrow(StableValue.list(0, i -> i));\n@@ -224,0 +228,2 @@\n+        testEmptyListMutatorsAlwaysThrow(StableValue.list(0, i -> i));\n+        testEmptyListMutatorsAlwaysThrow(StableValue.list(3, i -> i).subList(0, 0));\n@@ -245,1 +251,4 @@\n-                Stream.of(1, null, 3, 4).toList())) {\n+                Stream.of(1, null, 3, 4).toList(),\n+                StableValue.list(0, i -> i),\n+                StableValue.list(3, i -> i),\n+                StableValue.list(10, i -> i))) {\n@@ -357,0 +366,3 @@\n+        testEmptyMap(StableValue.map(Set.of(), k -> k));\n+        testMapMutatorsAlwaysThrow(StableValue.map(Set.of(), k -> k));\n+        testEmptyMapMutatorsAlwaysThrow(StableValue.map(Set.of(), k -> k));\n@@ -369,1 +381,4 @@\n-                Map.ofEntries(ea))) {\n+                Map.ofEntries(ea),\n+                StableValue.map(Set.<Integer>of(), k -> k),\n+                StableValue.map(Set.of(1), k -> k),\n+                StableValue.map(Set.of(1, 2, 3), k -> k))) {\n","filename":"test\/jdk\/java\/util\/Collection\/MOAT.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"}]}