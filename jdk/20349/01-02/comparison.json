{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.tools.javac.code.Symbol.VarSymbol;\n@@ -32,0 +33,1 @@\n+import com.sun.tools.javac.util.ListBuffer;\n@@ -45,1 +47,1 @@\n-     * the owner tree\n+     * The tree under analysis.\n@@ -47,1 +49,1 @@\n-    final JCTree ownerTree;\n+    private final JCTree tree;\n@@ -49,1 +51,4 @@\n-    final Set<Symbol.VarSymbol> seenVars = new HashSet<>();\n+    \/**\n+     * The set of local variable declarations encountered in the tree under analysis.\n+     *\/\n+    private final Set<Symbol.VarSymbol> seenVars = new HashSet<>();\n@@ -55,2 +60,1 @@\n-    List<Symbol.VarSymbol> fvs = List.nil();\n-\n+    private final ListBuffer<VarSymbol> fvs = new ListBuffer<>();\n@@ -58,2 +62,2 @@\n-    CaptureScanner(JCTree ownerTree) {\n-        this.ownerTree = ownerTree;\n+    public CaptureScanner(JCTree ownerTree) {\n+        this.tree = ownerTree;\n@@ -76,4 +80,4 @@\n-    void addFreeVar(Symbol.VarSymbol v) {\n-        for (List<Symbol.VarSymbol> l = fvs; l.nonEmpty(); l = l.tail)\n-            if (l.head == v) return;\n-        fvs = fvs.prepend(v);\n+    protected void addFreeVar(Symbol.VarSymbol v) {\n+        if (!fvs.contains(v)) {\n+            fvs.prepend(v);\n+        }\n@@ -90,0 +94,3 @@\n+    \/**\n+     * Obtains the list of captured local variables in the tree under analysis.\n+     *\/\n@@ -91,2 +98,2 @@\n-        scan(ownerTree);\n-        return fvs;\n+        scan(tree);\n+        return fvs.toList();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/CaptureScanner.java","additions":20,"deletions":13,"binary":false,"changes":33,"status":"modified"}]}