{"files":[{"patch":"@@ -85,2 +85,0 @@\n-    private static final Map<TypePairs, String> typePairToName;\n-\n@@ -102,1 +100,0 @@\n-        typePairToName = TypePairs.initialize();\n@@ -510,1 +507,1 @@\n-                            String methodName = typePairToName.get(typePair);\n+                            String methodName = TypePairs.typePairToName.get(typePair);\n@@ -687,0 +684,3 @@\n+\n+        private static final Map<TypePairs, String> typePairToName = initialize();\n+\n@@ -694,0 +694,11 @@\n+        public int hashCode() {\n+            return 31 * from.hashCode() + to.hashCode();\n+        }\n+\n+        public boolean equals(Object other) {\n+            if (other instanceof TypePairs otherPair) {\n+                return otherPair.from == from && otherPair.to == to;\n+            }\n+            return false;\n+        }\n+\n@@ -696,5 +707,0 @@\n-            typePairToName.put(new TypePairs(byte.class,   char.class),   \"isIntToCharExact\");      \/\/ redirected\n-            typePairToName.put(new TypePairs(short.class,  byte.class),   \"isIntToByteExact\");      \/\/ redirected\n-            typePairToName.put(new TypePairs(short.class,  char.class),   \"isIntToCharExact\");      \/\/ redirected\n-            typePairToName.put(new TypePairs(char.class,   byte.class),   \"isIntToByteExact\");      \/\/ redirected\n-            typePairToName.put(new TypePairs(char.class,   short.class),  \"isIntToShortExact\");     \/\/ redirected\n@@ -722,1 +728,1 @@\n-            return typePairToName;\n+            return Map.copyOf(typePairToName);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/SwitchBootstraps.java","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"}]}