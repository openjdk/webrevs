{"files":[{"patch":"@@ -41,0 +41,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -56,1 +57,3 @@\n-    private Boolean isOther = null;\n+    \/\/ if isOther is true, then the file being read is not a regular file,\n+    \/\/ nor a directory, nor a symbolic link, hence possibly not seekable\n+    private @Stable Boolean isOther;\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/ChannelInputStream.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -533,1 +533,5 @@\n-    public int available() throws IOException {\n+    \/**\n+     * Returns an estimate of the number of remaining bytes that can be read\n+     * from this channel without blocking.\n+     *\/\n+    int available() throws IOException {\n@@ -552,1 +556,5 @@\n-    public boolean isOther() throws IOException {\n+    \/**\n+     * Tells whether the channel represents something other than a regular\n+     * file, directory, or symbolic link.\n+     *\/\n+    boolean isOther() throws IOException {\n@@ -561,6 +569,1 @@\n-            boolean attempted = Blocker.begin();\n-            try {\n-                return isOther = nd.isOther(fd);\n-            } finally {\n-                Blocker.end(attempted);\n-            }\n+            return isOther = nd.isOther(fd);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -438,1 +438,2 @@\n-    GetFileInformationByHandle(handle, &finfo);\n+    if (!GetFileInformationByHandle(handle, &finfo))\n+        JNU_ThrowIOExceptionWithLastError(env, \"isOther failed\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/FileDispatcherImpl.c","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,2 +28,1 @@\n- * @build jdk.test.lib.Platform\n- * @run main InputStreamTest\n+ * @run junit InputStreamTest\n@@ -41,1 +40,7 @@\n-import jdk.test.lib.Platform;\n+\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.condition.DisabledOnOs;\n+import org.junit.jupiter.api.condition.OS;\n+import static org.junit.jupiter.api.Assertions.*;\n@@ -45,9 +50,10 @@\n-    public static void main(String[] args) throws IOException {\n-        Path dir = TestUtil.createTemporaryDirectory();\n-        try {\n-            testSkip(dir);\n-            if (!Platform.isWindows())\n-                testAvailable();\n-        } finally {\n-            TestUtil.removeAll(dir);\n-        }\n+    private static Path TMPDIR;\n+\n+    @BeforeAll\n+    static void createDir() throws IOException {\n+        TMPDIR = TestUtil.createTemporaryDirectory();\n+    }\n+\n+    @AfterAll\n+    static void deleteDir() throws IOException {\n+        TestUtil.removeAll(TMPDIR);\n@@ -59,2 +65,3 @@\n-    static void testSkip(Path tmpdir) throws IOException {\n-        Path file = createFile(tmpdir.resolve(\"foo\"));\n+    @Test\n+    void skip() throws IOException {\n+        Path file = createFile(TMPDIR.resolve(\"foo\"));\n@@ -134,1 +141,3 @@\n-    static void testAvailable() throws IOException {\n+    @Test\n+    @DisabledOnOs(OS.WINDOWS)\n+    void availableStdin() throws IOException {\n@@ -137,2 +146,3 @@\n-            InputStream s = Files.newInputStream(stdin);\n-            s.available();\n+            try (InputStream s = Files.newInputStream(stdin);) {\n+                s.available();\n+            }\n@@ -142,3 +152,12 @@\n-    static void assertTrue(boolean okay) {\n-        if (!okay)\n-            throw new RuntimeException(\"Assertion Failed\");\n+    \/**\n+     * Tests that Files.newInputStream(Path).skip(0) does not throw\n+     *\/\n+    @Test\n+    @DisabledOnOs(OS.WINDOWS)\n+    void skipStdin() throws IOException {\n+        Path stdin = Path.of(\"\/dev\", \"stdin\");\n+        if (Files.exists(stdin)) {\n+            try (InputStream s = Files.newInputStream(stdin);) {\n+                s.skip(0);\n+            }\n+        }\n","filename":"test\/jdk\/java\/nio\/file\/Files\/InputStreamTest.java","additions":39,"deletions":20,"binary":false,"changes":59,"status":"modified"}]}