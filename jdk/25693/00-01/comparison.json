{"files":[{"patch":"@@ -155,7 +155,1 @@\n-  const zaddress addr = ZObjectAllocator::eden()->alloc_object(size_in_bytes);\n-\n-  if (is_null(addr)) {\n-    ZHeap::heap()->out_of_memory();\n-  }\n-\n-  return (HeapWord*)addr;\n+  return (HeapWord*)ZHeap::heap()->alloc_object(size_in_bytes);\n","filename":"src\/hotspot\/share\/gc\/z\/zCollectedHeap.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-void ZHeap::out_of_memory() {\n+void ZHeap::out_of_memory() const {\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-  void out_of_memory();\n+  void out_of_memory() const;\n@@ -114,0 +114,1 @@\n+  zaddress alloc_object(size_t size_in_bytes) const;\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"gc\/z\/zObjectAllocator.inline.hpp\"\n@@ -77,0 +78,10 @@\n+inline zaddress ZHeap::alloc_object(size_t size_in_bytes) const {\n+  const zaddress addr = ZObjectAllocator::eden()->alloc_object(size_in_bytes);\n+\n+  if (is_null(addr)) {\n+    out_of_memory();\n+  }\n+\n+  return addr;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.inline.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  return _allocators->at(untype(age));\n+  return _allocators->at((int)untype(age));\n@@ -47,1 +47,1 @@\n-    _allocators->at(untype(age))->retire_pages();\n+    _allocators->at((int)untype(age))->retire_pages();\n","filename":"src\/hotspot\/share\/gc\/z\/zObjectAllocator.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}