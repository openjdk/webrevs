{"files":[{"patch":"@@ -40,1 +40,0 @@\n-#include \"gc\/z\/zObjectAllocator.inline.hpp\"\n@@ -139,1 +138,1 @@\n-  const zaddress addr = ZObjectAllocator::eden()->alloc_tlab(size_in_bytes);\n+  const zaddress addr = ZHeap::heap()->alloc_tlab(size_in_bytes);\n","filename":"src\/hotspot\/share\/gc\/z\/zCollectedHeap.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -844,1 +844,1 @@\n-  ZObjectAllocator::retire_pages(ZPageAgeRangeYoung);\n+  ZObjectAllocators::retire_pages(ZPageAgeRangeYoung);\n@@ -1201,1 +1201,1 @@\n-  ZObjectAllocator::retire_pages(ZPageAgeRangeOld);\n+  ZObjectAllocators::retire_pages(ZPageAgeRangeOld);\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-#include \"gc\/z\/zObjectAllocator.inline.hpp\"\n+#include \"gc\/z\/zObjectAllocator.hpp\"\n@@ -146,1 +146,1 @@\n-  size_t size = ZObjectAllocator::eden()->remaining();\n+  size_t size = ZObjectAllocators::remaining_in_eden();\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -114,1 +114,2 @@\n-  zaddress alloc_object(size_t size_in_bytes) const;\n+  zaddress alloc_object(size_t size) const;\n+  zaddress alloc_tlab(size_t size) const;\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-#include \"gc\/z\/zObjectAllocator.inline.hpp\"\n+#include \"gc\/z\/zObjectAllocator.hpp\"\n@@ -78,2 +78,2 @@\n-inline zaddress ZHeap::alloc_object(size_t size_in_bytes) const {\n-  const zaddress addr = ZObjectAllocator::eden()->alloc_object(size_in_bytes);\n+inline zaddress ZHeap::alloc_object(size_t size) const {\n+  const zaddress addr = ZObjectAllocators::alloc_object(size, ZPageAge::eden);\n@@ -88,0 +88,5 @@\n+inline zaddress ZHeap::alloc_tlab(size_t size) const {\n+  guarantee(size <= max_tlab_size(), \"TLAB too large\");\n+  return ZObjectAllocators::alloc_object(size, ZPageAge::eden);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zHeap.inline.hpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-  ZObjectAllocator::initialize();\n+  ZObjectAllocators::initialize();\n","filename":"src\/hotspot\/share\/gc\/z\/zInitialize.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,6 +43,1 @@\n-ZObjectAllocator::Allocators ZObjectAllocator::_allocators;\n-\n-void ZObjectAllocator::initialize() {\n-  ZPageAgeRange::Iterator it = ZPageAgeRange().begin();\n-  _allocators.initialize(it);\n-}\n+ZObjectAllocators::Allocators ZObjectAllocators::_allocators;\n@@ -206,1 +201,26 @@\n-zaddress ZObjectAllocator::alloc_object(size_t size) {\n+void ZObjectAllocator::retire_pages() {\n+  assert(SafepointSynchronize::is_at_safepoint(), \"Should be at safepoint\");\n+\n+  \/\/ Reset allocation pages\n+  _shared_medium_page.set(nullptr);\n+  _shared_small_page.set_all(nullptr);\n+}\n+\n+void ZObjectAllocators::initialize() {\n+  ZPageAgeRange::Iterator it = ZPageAgeRange().begin();\n+  _allocators.initialize(it);\n+}\n+\n+size_t ZObjectAllocators::remaining_in_eden() {\n+  assert(Thread::current()->is_Java_thread(), \"Should be a Java thread\");\n+\n+  ZPage** const shared_addr = allocator(ZPageAge::eden)->shared_small_page_addr();\n+  const ZPage* const page = Atomic::load_acquire(shared_addr);\n+  if (page != nullptr) {\n+    return page->remaining();\n+  }\n+\n+  return 0;\n+}\n+\n+zaddress ZObjectAllocators::alloc_object(size_t size, ZPageAge age) {\n@@ -209,1 +229,1 @@\n-  if (_age != ZPageAge::eden) {\n+  if (age != ZPageAge::eden) {\n@@ -214,1 +234,1 @@\n-  return alloc_object(size, flags);\n+  return allocator(age)->alloc_object(size, flags);\n@@ -217,1 +237,1 @@\n-void ZObjectAllocator::undo_alloc_object(zaddress addr, size_t size) {\n+void ZObjectAllocators::undo_alloc_object(zaddress addr, size_t size, ZPageAge age) {\n@@ -221,1 +241,1 @@\n-    undo_alloc_page(page);\n+    allocator(age)->undo_alloc_page(page);\n@@ -231,19 +251,0 @@\n-\n-size_t ZObjectAllocator::remaining() const {\n-  assert(Thread::current()->is_Java_thread(), \"Should be a Java thread\");\n-\n-  const ZPage* const page = Atomic::load_acquire(shared_small_page_addr());\n-  if (page != nullptr) {\n-    return page->remaining();\n-  }\n-\n-  return 0;\n-}\n-\n-void ZObjectAllocator::retire_pages() {\n-  assert(SafepointSynchronize::is_at_safepoint(), \"Should be at safepoint\");\n-\n-  \/\/ Reset allocation pages\n-  _shared_medium_page.set(nullptr);\n-  _shared_small_page.set_all(nullptr);\n-}\n","filename":"src\/hotspot\/share\/gc\/z\/zObjectAllocator.cpp","additions":31,"deletions":30,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -40,5 +40,1 @@\n-public:\n-  static constexpr uint NumAllocators = ZPageAgeCount;\n-  static constexpr uint NumRelocationAllocators = NumAllocators - 1;\n-\n-  typedef Deferred<ValueObjArray<ZObjectAllocator, NumAllocators>> Allocators;\n+  friend class ZObjectAllocators;\n@@ -47,2 +43,0 @@\n-  static Allocators  _allocators;\n-\n@@ -80,1 +74,2 @@\n-  static void initialize();\n+  ZObjectAllocator(ZPageAge age);\n+};\n@@ -82,0 +77,9 @@\n+class ZObjectAllocators : public AllStatic {\n+public:\n+  static constexpr uint NumAllocators = ZPageAgeCount;\n+  static constexpr uint NumRelocationAllocators = NumAllocators - 1;\n+\n+private:\n+  using Allocators = Deferred<ValueObjArray<ZObjectAllocator, NumAllocators>>;\n+\n+  static Allocators _allocators;\n@@ -83,1 +87,3 @@\n-  static ZObjectAllocator* eden();\n+\n+public:\n+  static void initialize();\n@@ -87,1 +93,1 @@\n-  ZObjectAllocator(ZPageAge age);\n+  static size_t remaining_in_eden();\n@@ -90,5 +96,2 @@\n-  zaddress alloc_tlab(size_t size);\n-  zaddress alloc_object(size_t size);\n-  void undo_alloc_object(zaddress addr, size_t size);\n-\n-  size_t remaining() const;\n+  static zaddress alloc_object(size_t size, ZPageAge age);\n+  static void undo_alloc_object(zaddress addr, size_t size, ZPageAge age);\n","filename":"src\/hotspot\/share\/gc\/z\/zObjectAllocator.hpp","additions":18,"deletions":15,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"gc\/z\/zHeap.hpp\"\n@@ -32,1 +31,1 @@\n-inline ZObjectAllocator* ZObjectAllocator::allocator(ZPageAge age) {\n+inline ZObjectAllocator* ZObjectAllocators::allocator(ZPageAge age) {\n@@ -36,10 +35,1 @@\n-inline ZObjectAllocator* ZObjectAllocator::eden() {\n-  return allocator(ZPageAge::eden);\n-}\n-\n-inline zaddress ZObjectAllocator::alloc_tlab(size_t size) {\n-  guarantee(size <= ZHeap::heap()->max_tlab_size(), \"TLAB too large\");\n-  return alloc_object(size);\n-}\n-\n-inline void ZObjectAllocator::retire_pages(ZPageAgeRange range) {\n+inline void ZObjectAllocators::retire_pages(ZPageAgeRange range) {\n@@ -47,1 +37,1 @@\n-    _allocators->at((int)untype(age))->retire_pages();\n+    allocator(age)->retire_pages();\n","filename":"src\/hotspot\/share\/gc\/z\/zObjectAllocator.inline.hpp","additions":3,"deletions":13,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-#include \"gc\/z\/zObjectAllocator.inline.hpp\"\n+#include \"gc\/z\/zObjectAllocator.hpp\"\n@@ -37,1 +37,1 @@\n-#include \"gc\/z\/zPageAge.hpp\"\n+#include \"gc\/z\/zPageAge.inline.hpp\"\n@@ -328,0 +328,1 @@\n+  const ZPageAge to_age = forwarding->to_age();\n@@ -329,3 +330,1 @@\n-  ZObjectAllocator* allocator = ZObjectAllocator::allocator(forwarding->to_age());\n-\n-  const zaddress to_addr = allocator->alloc_object(size);\n+  const zaddress to_addr = ZObjectAllocators::alloc_object(size, to_age);\n@@ -346,1 +345,1 @@\n-    allocator->undo_alloc_object(to_addr, size);\n+    ZObjectAllocators::undo_alloc_object(to_addr, size, to_age);\n@@ -473,1 +472,1 @@\n-  ZPage*             _shared[ZObjectAllocator::NumRelocationAllocators];\n+  ZPage*             _shared[ZObjectAllocators::NumRelocationAllocators];\n@@ -486,1 +485,1 @@\n-    for (uint i = 0; i < ZObjectAllocator::NumRelocationAllocators; ++i) {\n+    for (uint i = 0; i < ZObjectAllocators::NumRelocationAllocators; ++i) {\n@@ -567,1 +566,1 @@\n-  ZPage*              _target[ZObjectAllocator::NumRelocationAllocators];\n+  ZPage*              _target[ZObjectAllocators::NumRelocationAllocators];\n@@ -921,1 +920,1 @@\n-    for (uint i = 0; i < ZObjectAllocator::NumRelocationAllocators; ++i) {\n+    for (uint i = 0; i < ZObjectAllocators::NumRelocationAllocators; ++i) {\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocate.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"}]}