{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -574,2 +574,2 @@\n-  \/\/ but not if I2 is a constant.\n-  if (n_op == Op_AddP) {\n+  \/\/ but not if I2 is a constant. Skip for irreducible loops.\n+  if (n_op == Op_AddP && n_loop->_head->is_Loop()) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8326638\n+ * @summary Test handling of irreducible loops in PhaseIdealLoop::remix_address_expressions.\n+ * @run main\/othervm -XX:-TieredCompilation -Xbatch\n+ *                   -XX:CompileCommand=compileonly,TestRemixAddressExpressionsWithIrreducibleLoop::test\n+ *                   TestRemixAddressExpressionsWithIrreducibleLoop\n+ *\/\n+\n+public class TestRemixAddressExpressionsWithIrreducibleLoop {\n+\n+    public static void main(String[] args) {\n+        test(\"4\");\n+    }\n+\n+    public static void test(String arg) {\n+        for (int i = 0; i < 100_000; ++i) {\n+            int j = 0;\n+            while (true) {\n+                boolean tmp = \"1\\ufff0\".startsWith(arg, 2 - arg.length());\n+                if (j++ > 100)\n+                    break;\n+            }\n+        loop:\n+            while (i >= 100) {\n+                for (int i2 = 0; i2 < 1; i2 = 1)\n+                    if (j > 300)\n+                        break loop;\n+                j++;\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestRemixAddressExpressionsWithIrreducibleLoop.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}