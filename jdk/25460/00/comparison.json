{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,2 @@\n- * @summary FloatingDecimal parsing methods (use -Dseed=X to set seed)\n+ * @summary FloatingDecimal parsing methods (use -Dseed=X to set seed,\n+ *      use -Dcount=N to set the number of random samples per test)\n@@ -37,0 +38,1 @@\n+import org.junit.jupiter.api.BeforeAll;\n@@ -58,1 +60,1 @@\n-    private static final int COUNT = 10_000;  \/\/ random samples per test\n+\n@@ -61,0 +63,1 @@\n+    private static int count;  \/\/ random samples per test\n@@ -63,1 +66,1 @@\n-        return Stream.generate(() -> randomDec(false)).limit(COUNT);\n+        return Stream.generate(() -> randomDec(false)).limit(count);\n@@ -67,1 +70,1 @@\n-        return Stream.generate(() -> randomDec(true)).limit(COUNT);\n+        return Stream.generate(() -> randomDec(true)).limit(count);\n@@ -71,1 +74,1 @@\n-        return Stream.generate(() -> randomHex(false)).limit(COUNT);\n+        return Stream.generate(() -> randomHex(false)).limit(count);\n@@ -75,1 +78,16 @@\n-        return Stream.generate(() -> randomHex(true)).limit(COUNT);\n+        return Stream.generate(() -> randomHex(true)).limit(count);\n+    }\n+\n+    private static final String COUNT_PROP = \"count\";\n+\n+    @BeforeAll\n+    static void setCount() {\n+        String prop = System.getProperty(COUNT_PROP, \"10000\");  \/\/ 10_000\n+        try {\n+            count = Integer.parseInt(prop);\n+            if (count <= 0) {\n+                throw new NumberFormatException();\n+            }\n+        } catch (NumberFormatException _) {\n+            throw new IllegalArgumentException(\"-D\" + COUNT_PROP + \"=\" + prop + \" must specify a valid positive decimal integer.\");\n+        }\n","filename":"test\/jdk\/jdk\/internal\/math\/FloatingDecimal\/TestRandomFloatingDecimal.java","additions":25,"deletions":7,"binary":false,"changes":32,"status":"modified"}]}