{"files":[{"patch":"@@ -38,0 +38,3 @@\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n@@ -88,0 +91,46 @@\n+    private static long getDefaultTasksMax() throws IOException {\n+        String output = runSystemctlShow();\n+        long value = parseDefaultTasksMax(output);\n+\n+        \/\/ Example check: ensure it's a positive number\n+        if (value <= 0) {\n+            throw new AssertionError(\"DefaultTasksMax should be greater than 0\");\n+        }\n+        return value;\n+    }\n+\n+    private static String runSystemctlShow() throws IOException {\n+        ProcessBuilder pb = new ProcessBuilder(\"systemctl\", \"show\", \"--property=DefaultTasksMax\");\n+        pb.redirectErrorStream(true);\n+        Process process = pb.start();\n+\n+        try (BufferedReader reader = new BufferedReader(\n+                new InputStreamReader(process.getInputStream()))) {\n+            String line = reader.readLine();\n+            if (line == null || !line.startsWith(\"DefaultTasksMax=\")) {\n+                throw new IOException(\"Unexpected output: \" + line);\n+            }\n+            return line;\n+        }\n+    }\n+\n+    private static long parseDefaultTasksMax(String line) {\n+        String[] parts = line.split(\"=\", 2);\n+        if (parts.length != 2) {\n+            throw new IllegalArgumentException(\"Invalid format: \" + line);\n+        }\n+\n+        String valueStr = parts[1].trim();\n+\n+        if (\"infinity\".equalsIgnoreCase(valueStr)) {\n+            \/\/ Represent \"infinity\" with -1 or Long.MAX_VALUE depending on your needs\n+            return Long.MAX_VALUE;\n+        }\n+\n+        try {\n+            return Long.parseLong(valueStr);\n+        } catch (NumberFormatException e) {\n+            throw new IllegalArgumentException(\"Not a number: \" + valueStr);\n+        }\n+    }\n+\n@@ -124,2 +173,9 @@\n-                            if (ai > 20000) {\n-                                System.out.println(\"Limit value \" + ai + \" got accepted as unlimited, log line was \" + line);\n+                            long tasksMax;\n+                            try {\n+                                tasksMax = getDefaultTasksMax();\n+                            } catch (IOException ex) {\n+                                throw new RuntimeException(\"Cannot find out systemd's DefaultTasksMax: \" + ex.getMessage());\n+                            }\n+                            String tail = \"accepted as unlimited (DefaultTasksMax = \" + tasksMax + \"), log line was \" + line;\n+                            if (ai >= tasksMax) {\n+                                System.out.println(\"Limit value \" + ai + \" got \" + tail;\n@@ -127,1 +183,1 @@\n-                                throw new RuntimeException(\"Limit value \" + ai + \" is not accepted as unlimited, log line was \" + line);\n+                                throw new RuntimeException(\"Limit value \" + ai + \" is not \" + tail;\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestPids.java","additions":59,"deletions":3,"binary":false,"changes":62,"status":"modified"}]}