{"files":[{"patch":"@@ -243,0 +243,3 @@\n+  \/\/ Track allocation rate even if we decide to start a cycle for other reasons.\n+  double rate = _allocation_rate.sample(allocated);\n+\n@@ -248,2 +251,0 @@\n-  \/\/ Track allocation rate even if we decide to start a cycle for other reasons.\n-  double rate = _allocation_rate.sample(allocated);\n@@ -382,1 +383,1 @@\n-double ShenandoahAllocationRate::sample(size_t allocated, bool force_update) {\n+double ShenandoahAllocationRate::sample(size_t allocated) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  double sample(size_t allocated, bool force_update = false);\n+  double sample(size_t allocated);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}