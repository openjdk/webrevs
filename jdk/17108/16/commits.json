[{"commit":{"message":"use of jdk.internal.constant to improve performance"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/ClassSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleProxies.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/TypeConvertingMethodAdapter.java"}],"sha":"e814749a1cfd131b91842a02464e79dd343e9d76"},{"commit":{"message":"fixed imports"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java"}],"sha":"902b02ee0b87caba0b496dbc167f6d1c389e1a36"},{"commit":{"message":"Apply suggestions from code review\r\n\r\nThere are new possibilities with decoupled constants implementation, thank you for the reminder.\n\nCo-authored-by: ExE Boss <3889017+ExE-Boss@users.noreply.github.com>"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java"}],"sha":"019633bd5fb8745c6f4d0c7b78a5530ae3aecd86"},{"commit":{"message":"Merge branch 'master' into JDK-8294960-invoke\n\n# Conflicts:\n#\tsrc\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodType.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java"}],"sha":"9360b0ebdc9984aca84e9330fe30e77addbbd7e9"},{"commit":{"message":"Merge branch 'master' into JDK-8294960-invoke\n\n# Conflicts:\n#\tsrc\/java.base\/share\/classes\/java\/lang\/classfile\/Attributes.java"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java"}],"sha":"e1dbabcb3789eb1abcc0d83209931713208467db"},{"commit":{"message":"fixed CodeBuilder use in j.l.invoke"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/ClassSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/TypeConvertingMethodAdapter.java"}],"sha":"eea36525cb0acb87c817a32b318d4ff7615349ba"},{"commit":{"message":"Merge branch 'master' into JDK-8294960-invoke"},"files":[],"sha":"107507be5248f3b981fe199c358155ac443a70b2"},{"commit":{"message":"Merge pull request #4 from cl4es\/boxunbox_holder\n\nOnly create box\/unbox MethodRefEntries on request"},"files":[],"sha":"1099de72d364cd1c3e70452c3b5f541f3c3c6cec"},{"commit":{"message":"Only create box\/unbox MethodRefEntries on request"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/TypeConvertingMethodAdapter.java"}],"sha":"1717d0a71755d0bce51152d50710211155a79028"},{"commit":{"message":"Merge pull request #3 from cl4es\/minor_init_improvements\n\nReduce init overhead of InvokeBytecodeGenerator and StackMapGenerator"},"files":[],"sha":"75d4a09f35c0867f5ae250a1964f2d2e89f5ed9e"},{"commit":{"message":"Remove stray MRE_LF_interpretWithArguments"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"}],"sha":"ee3a70ac92c17417e2fa25539d35e690f2318c4e"},{"commit":{"message":"Reduce init overhead of InvokeBytecodeGenerator and StackMapGenerator"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java"}],"sha":"c2776be5f337defce739bfd1cd750d7bef0b41fe"},{"commit":{"message":"Deferred initialization of attributes map by moving into a holder class\n\nCo-authored-by: Claes Redestad <redestad@openjdk.org>"},"files":[],"sha":"803c804d00bc79b7d01f23a649252b57854ce6cd"},{"commit":{"message":"Merge branch 'master' into JDK-8294960-invoke"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaForm.java"}],"sha":"d5cbbc69cbc1370be5022e425a0a0e251bcb44c2"},{"commit":{"message":"Merge branch 'master' into JDK-8294960-invoke\n\n# Conflicts:\n#\tsrc\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"}],"sha":"bae31c64e95dc9207fb298daa787e3728861e4db"},{"commit":{"message":"applied suggested changes"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/ClassSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/TypeConvertingMethodAdapter.java"}],"sha":"304054b9d14994e06264ec48670914307f70578b"},{"commit":{"message":"Merge branch 'master' into JDK-8294960-invoke"},"files":[],"sha":"9eade3396160e5b39665095cbf810d151a6b3870"},{"commit":{"message":"Reversion of ClassBuilder changes"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"}],"sha":"500bb8f0995a7881046e97faa14d979f42d3b860"},{"commit":{"message":"Merge branch 'master' into JDK-8294960-invoke"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"}],"sha":"1baa86744d4de542d0e68c1518fc12500ec01889"},{"commit":{"message":"Apply suggestions from code review\n\nCo-authored-by: liach <7806504+liach@users.noreply.github.com>"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/TypeConvertingMethodAdapter.java"}],"sha":"098df109a9d6e1e655160a8361016f20301224a8"},{"commit":{"message":"Apply suggestions from code review\n\nCo-authored-by: liach <7806504+liach@users.noreply.github.com>"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"}],"sha":"8fee4564be84c58b2d2b0083953b0f629b61f9ec"},{"commit":{"message":"added missing comment"},"files":[],"sha":"0f356eb33575fd22a71c4a98c6b9c37b913a867b"},{"commit":{"message":"fixed InnerClassLambdaMetafactory for hidden caller classes"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"}],"sha":"dc53d750c2733b1a015464d87651444aa4f1a392"},{"commit":{"message":"performance improvements"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/ClassSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/TypeConvertingMethodAdapter.java"}],"sha":"52f08e1de95db546db6937482df40e8302eb119e"},{"commit":{"message":"consolidation of descriptors handling"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/ClassSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/TypeConvertingMethodAdapter.java"}],"sha":"c1b413bc04ba2a7cd99105ec7c14dd10f951e991"},{"commit":{"message":"InvokerBytecodeGenerator::emit... improvements"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"}],"sha":"57461c53ed6c048c794ed7f21ebd6bf68a1f7f59"},{"commit":{"message":"8294960: Convert java.base\/java.lang.invoke package to use the Classfile API to generate lambdas and method handlers"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/ClassSpecializer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaForm.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodType.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/TypeConvertingMethodAdapter.java"}],"sha":"d193947147e9c3742aea7c619a32b694b81336fc"}]