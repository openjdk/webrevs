{"files":[{"patch":"@@ -39,1 +39,2 @@\n-    private static final ConstantPoolBuilder CP = ConstantPoolBuilder.of();\n+    private static class BoxHolder {\n+        private static final ConstantPoolBuilder CP = ConstantPoolBuilder.of();\n@@ -41,3 +42,3 @@\n-    private static MethodRefEntry box(ClassDesc primitive, ClassDesc target) {\n-        return CP.methodRefEntry(target, \"valueOf\", MethodTypeDesc.of(target, primitive));\n-    }\n+        private static MethodRefEntry box(ClassDesc primitive, ClassDesc target) {\n+            return CP.methodRefEntry(target, \"valueOf\", MethodTypeDesc.of(target, primitive));\n+        }\n@@ -45,12 +46,12 @@\n-    private static final MethodRefEntry BOX_BOOLEAN = box(CD_boolean, CD_Boolean),\n-                                        BOX_BYTE    = box(CD_byte, CD_Byte),\n-                                        BOX_SHORT   = box(CD_short, CD_Short),\n-                                        BOX_CHAR    = box(CD_char, CD_Character),\n-                                        BOX_INT     = box(CD_int, CD_Integer),\n-                                        BOX_LONG    = box(CD_long, CD_Long),\n-                                        BOX_FLOAT   = box(CD_float, CD_Float),\n-                                        BOX_DOUBLE  = box(CD_double, CD_Double);\n-\n-    private static MethodRefEntry unbox(ClassDesc owner, String methodName, ClassDesc primitiveTarget) {\n-        return CP.methodRefEntry(owner, methodName, MethodTypeDesc.of(primitiveTarget));\n-    }\n+        private static final MethodRefEntry BOX_BOOLEAN = box(CD_boolean, CD_Boolean),\n+                                            BOX_BYTE    = box(CD_byte, CD_Byte),\n+                                            BOX_SHORT   = box(CD_short, CD_Short),\n+                                            BOX_CHAR    = box(CD_char, CD_Character),\n+                                            BOX_INT     = box(CD_int, CD_Integer),\n+                                            BOX_LONG    = box(CD_long, CD_Long),\n+                                            BOX_FLOAT   = box(CD_float, CD_Float),\n+                                            BOX_DOUBLE  = box(CD_double, CD_Double);\n+\n+        private static MethodRefEntry unbox(ClassDesc owner, String methodName, ClassDesc primitiveTarget) {\n+            return CP.methodRefEntry(owner, methodName, MethodTypeDesc.of(primitiveTarget));\n+        }\n@@ -58,8 +59,9 @@\n-    private static final MethodRefEntry UNBOX_BOOLEAN = unbox(CD_Boolean, \"booleanValue\", CD_boolean),\n-                                        UNBOX_BYTE    = unbox(CD_Number, \"byteValue\", CD_byte),\n-                                        UNBOX_SHORT   = unbox(CD_Number, \"shortValue\", CD_short),\n-                                        UNBOX_CHAR    = unbox(CD_Character, \"charValue\", CD_char),\n-                                        UNBOX_INT     = unbox(CD_Number, \"intValue\", CD_int),\n-                                        UNBOX_LONG    = unbox(CD_Number, \"longValue\", CD_long),\n-                                        UNBOX_FLOAT   = unbox(CD_Number, \"floatValue\", CD_float),\n-                                        UNBOX_DOUBLE  = unbox(CD_Number, \"doubleValue\", CD_double);\n+        private static final MethodRefEntry UNBOX_BOOLEAN = unbox(CD_Boolean, \"booleanValue\", CD_boolean),\n+                                            UNBOX_BYTE    = unbox(CD_Number, \"byteValue\", CD_byte),\n+                                            UNBOX_SHORT   = unbox(CD_Number, \"shortValue\", CD_short),\n+                                            UNBOX_CHAR    = unbox(CD_Character, \"charValue\", CD_char),\n+                                            UNBOX_INT     = unbox(CD_Number, \"intValue\", CD_int),\n+                                            UNBOX_LONG    = unbox(CD_Number, \"longValue\", CD_long),\n+                                            UNBOX_FLOAT   = unbox(CD_Number, \"floatValue\", CD_float),\n+                                            UNBOX_DOUBLE  = unbox(CD_Number, \"doubleValue\", CD_double);\n+    }\n@@ -93,8 +95,8 @@\n-            case BooleanType -> cob.invokestatic(BOX_BOOLEAN);\n-            case ByteType    -> cob.invokestatic(BOX_BYTE);\n-            case CharType    -> cob.invokestatic(BOX_CHAR);\n-            case DoubleType  -> cob.invokestatic(BOX_DOUBLE);\n-            case FloatType   -> cob.invokestatic(BOX_FLOAT);\n-            case IntType     -> cob.invokestatic(BOX_INT);\n-            case LongType    -> cob.invokestatic(BOX_LONG);\n-            case ShortType   -> cob.invokestatic(BOX_SHORT);\n+            case BooleanType -> cob.invokestatic(BoxHolder.BOX_BOOLEAN);\n+            case ByteType    -> cob.invokestatic(BoxHolder.BOX_BYTE);\n+            case CharType    -> cob.invokestatic(BoxHolder.BOX_CHAR);\n+            case DoubleType  -> cob.invokestatic(BoxHolder.BOX_DOUBLE);\n+            case FloatType   -> cob.invokestatic(BoxHolder.BOX_FLOAT);\n+            case IntType     -> cob.invokestatic(BoxHolder.BOX_INT);\n+            case LongType    -> cob.invokestatic(BoxHolder.BOX_LONG);\n+            case ShortType   -> cob.invokestatic(BoxHolder.BOX_SHORT);\n@@ -106,8 +108,8 @@\n-            case BooleanType -> cob.invokevirtual(UNBOX_BOOLEAN);\n-            case ByteType    -> cob.invokevirtual(UNBOX_BYTE);\n-            case CharType    -> cob.invokevirtual(UNBOX_CHAR);\n-            case DoubleType  -> cob.invokevirtual(UNBOX_DOUBLE);\n-            case FloatType   -> cob.invokevirtual(UNBOX_FLOAT);\n-            case IntType     -> cob.invokevirtual(UNBOX_INT);\n-            case LongType    -> cob.invokevirtual(UNBOX_LONG);\n-            case ShortType   -> cob.invokevirtual(UNBOX_SHORT);\n+            case BooleanType -> cob.invokevirtual(BoxHolder.UNBOX_BOOLEAN);\n+            case ByteType    -> cob.invokevirtual(BoxHolder.UNBOX_BYTE);\n+            case CharType    -> cob.invokevirtual(BoxHolder.UNBOX_CHAR);\n+            case DoubleType  -> cob.invokevirtual(BoxHolder.UNBOX_DOUBLE);\n+            case FloatType   -> cob.invokevirtual(BoxHolder.UNBOX_FLOAT);\n+            case IntType     -> cob.invokevirtual(BoxHolder.UNBOX_INT);\n+            case LongType    -> cob.invokevirtual(BoxHolder.UNBOX_LONG);\n+            case ShortType   -> cob.invokevirtual(BoxHolder.UNBOX_SHORT);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/TypeConvertingMethodAdapter.java","additions":42,"deletions":40,"binary":false,"changes":82,"status":"modified"}]}