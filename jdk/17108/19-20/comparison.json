{"files":[{"patch":"@@ -72,19 +72,0 @@\n-\n-    \/\/ Serialization support\n-    private static final ClassDesc CD_SerializedLambda = ReferenceClassDescImpl.ofValidated(\"Ljava\/lang\/invoke\/SerializedLambda;\");\n-    private static final ClassDesc CD_NotSerializableException = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/NotSerializableException;\");\n-    private static final ClassDesc CD_ObjectOutputStream = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/ObjectOutputStream;\");\n-    private static final ClassDesc CD_ObjectInputStream = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/ObjectInputStream;\");\n-    private static final MethodTypeDesc MTD_Object = MethodTypeDescImpl.ofValidated(CD_Object);\n-    private static final MethodTypeDesc MTD_void_ObjectOutputStream = MethodTypeDescImpl.ofValidated(CD_void, CD_ObjectOutputStream);\n-    private static final MethodTypeDesc MTD_void_ObjectInputStream = MethodTypeDescImpl.ofValidated(CD_void, CD_ObjectInputStream);\n-\n-    private static final String NAME_METHOD_WRITE_REPLACE = \"writeReplace\";\n-    private static final String NAME_METHOD_READ_OBJECT = \"readObject\";\n-    private static final String NAME_METHOD_WRITE_OBJECT = \"writeObject\";\n-\n-    private static final MethodTypeDesc MTD_CTOR_SERIALIZED_LAMBDA = MethodTypeDescImpl.ofValidated(CD_void,\n-            CD_Class, CD_String, CD_String, CD_String, CD_int, CD_String, CD_String, CD_String, CD_String, ReferenceClassDescImpl.ofValidated(\"[Ljava\/lang\/Object;\"));\n-\n-    private static final MethodTypeDesc MTD_CTOR_NOT_SERIALIZABLE_EXCEPTION = MethodTypeDescImpl.ofValidated(CD_void, CD_String);\n-\n@@ -443,0 +424,20 @@\n+    private static class SerializationSupport {\n+        \/\/ Serialization support\n+        private static final ClassDesc CD_SerializedLambda = ReferenceClassDescImpl.ofValidated(\"Ljava\/lang\/invoke\/SerializedLambda;\");\n+        private static final ClassDesc CD_ObjectOutputStream = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/ObjectOutputStream;\");\n+        private static final ClassDesc CD_ObjectInputStream = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/ObjectInputStream;\");\n+        private static final MethodTypeDesc MTD_Object = MethodTypeDescImpl.ofValidated(CD_Object);\n+        private static final MethodTypeDesc MTD_void_ObjectOutputStream = MethodTypeDescImpl.ofValidated(CD_void, CD_ObjectOutputStream);\n+        private static final MethodTypeDesc MTD_void_ObjectInputStream = MethodTypeDescImpl.ofValidated(CD_void, CD_ObjectInputStream);\n+\n+        private static final String NAME_METHOD_WRITE_REPLACE = \"writeReplace\";\n+        private static final String NAME_METHOD_READ_OBJECT = \"readObject\";\n+        private static final String NAME_METHOD_WRITE_OBJECT = \"writeObject\";\n+\n+        static final ClassDesc CD_NotSerializableException = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/NotSerializableException;\");\n+        static final MethodTypeDesc MTD_CTOR_NOT_SERIALIZABLE_EXCEPTION = MethodTypeDescImpl.ofValidated(CD_void, CD_String);\n+        static final MethodTypeDesc MTD_CTOR_SERIALIZED_LAMBDA = MethodTypeDescImpl.ofValidated(CD_void,\n+                CD_Class, CD_String, CD_String, CD_String, CD_int, CD_String, CD_String, CD_String, CD_String, ReferenceClassDescImpl.ofValidated(\"[Ljava\/lang\/Object;\"));\n+\n+    }\n+\n@@ -447,1 +448,1 @@\n-        clb.withMethod(NAME_METHOD_WRITE_REPLACE, MTD_Object, ACC_PRIVATE | ACC_FINAL,\n+        clb.withMethod(SerializationSupport.NAME_METHOD_WRITE_REPLACE, SerializationSupport.MTD_Object, ACC_PRIVATE | ACC_FINAL,\n@@ -451,1 +452,1 @@\n-                        cob.new_(CD_SerializedLambda)\n+                        cob.new_(SerializationSupport.CD_SerializedLambda)\n@@ -472,1 +473,2 @@\n-                        cob.invokespecial(CD_SerializedLambda, INIT_NAME, MTD_CTOR_SERIALIZED_LAMBDA)\n+                        cob.invokespecial(SerializationSupport.CD_SerializedLambda, INIT_NAME,\n+                                          SerializationSupport.MTD_CTOR_SERIALIZED_LAMBDA)\n@@ -478,19 +480,0 @@\n-    private static final Consumer<MethodBuilder> NOT_SERIALIZABLE_METHOD = new Consumer<MethodBuilder>() {\n-        @Override\n-        public void accept(MethodBuilder mb) {\n-            ConstantPoolBuilder cp = mb.constantPool();\n-            ClassEntry nseCE = cp.classEntry(CD_NotSerializableException);\n-            mb.with(ExceptionsAttribute.of(nseCE))\n-              .withCode(new Consumer<CodeBuilder>(){\n-                    @Override\n-                    public void accept(CodeBuilder cob) {\n-                        cob.new_(nseCE)\n-                           .dup()\n-                           .ldc(\"Non-serializable lambda\")\n-                           .invokespecial(cp.methodRefEntry(nseCE, cp.nameAndTypeEntry(INIT_NAME, MTD_CTOR_NOT_SERIALIZABLE_EXCEPTION)))\n-                           .athrow();\n-                    }\n-              });\n-        }\n-    };\n-\n@@ -501,2 +484,23 @@\n-        clb.withMethod(NAME_METHOD_WRITE_OBJECT, MTD_void_ObjectOutputStream, ACC_PRIVATE + ACC_FINAL, NOT_SERIALIZABLE_METHOD);\n-        clb.withMethod(NAME_METHOD_READ_OBJECT, MTD_void_ObjectInputStream, ACC_PRIVATE + ACC_FINAL, NOT_SERIALIZABLE_METHOD);\n+        var hostileMethod = new Consumer<MethodBuilder>() {\n+            @Override\n+            public void accept(MethodBuilder mb) {\n+                ConstantPoolBuilder cp = mb.constantPool();\n+                ClassEntry nseCE = cp.classEntry(SerializationSupport.CD_NotSerializableException);\n+                mb.with(ExceptionsAttribute.of(nseCE))\n+                        .withCode(new Consumer<CodeBuilder>() {\n+                            @Override\n+                            public void accept(CodeBuilder cob) {\n+                                cob.new_(nseCE)\n+                                        .dup()\n+                                        .ldc(\"Non-serializable lambda\")\n+                                        .invokespecial(cp.methodRefEntry(nseCE, cp.nameAndTypeEntry(INIT_NAME,\n+                                                SerializationSupport.MTD_CTOR_NOT_SERIALIZABLE_EXCEPTION)))\n+                                        .athrow();\n+                            }\n+                        });\n+            }\n+        };\n+        clb.withMethod(SerializationSupport.NAME_METHOD_WRITE_OBJECT, SerializationSupport.MTD_void_ObjectOutputStream,\n+                ACC_PRIVATE + ACC_FINAL, hostileMethod);\n+        clb.withMethod(SerializationSupport.NAME_METHOD_READ_OBJECT, SerializationSupport.MTD_void_ObjectInputStream,\n+                ACC_PRIVATE + ACC_FINAL, hostileMethod);\n@@ -505,0 +509,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":48,"deletions":43,"binary":false,"changes":91,"status":"modified"}]}