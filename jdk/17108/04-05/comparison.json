{"files":[{"patch":"@@ -32,1 +32,0 @@\n-import static java.lang.constant.ConstantDescs.*;\n@@ -34,4 +33,1 @@\n-import jdk.internal.loader.BootLoader;\n-import jdk.internal.vm.annotation.Stable;\n-import sun.invoke.util.BytecodeName;\n-\n+import java.lang.invoke.LambdaForm.BasicType;\n@@ -48,1 +44,6 @@\n-import static java.lang.invoke.LambdaForm.*;\n+import jdk.internal.loader.BootLoader;\n+import jdk.internal.vm.annotation.Stable;\n+import sun.invoke.util.BytecodeName;\n+\n+import static java.lang.classfile.ClassFile.*;\n+import static java.lang.constant.ConstantDescs.*;\n@@ -53,1 +54,0 @@\n-import static java.lang.classfile.ClassFile.*;\n@@ -606,1 +606,1 @@\n-        private static final MethodTypeDesc MTD_transformHelper = MethodTypeDesc.of(CD_MethodHandle, CD_int);\n+        private static final MethodTypeDesc MTD_TRANFORM_HELPER = MethodTypeDesc.of(CD_MethodHandle, CD_int);\n@@ -608,1 +608,0 @@\n-        private static final ClassFile CC = ClassFile.of();\n@@ -614,1 +613,1 @@\n-            return CC.build(classDesc, clb -> {\n+            return ClassFile.of().build(classDesc, clb -> {\n@@ -776,1 +775,1 @@\n-                               .invokevirtual(CD_SPECIES_DATA, \"transformHelper\", MTD_transformHelper);\n+                               .invokevirtual(CD_SPECIES_DATA, \"transformHelper\", MTD_TRANFORM_HELPER);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/ClassSpecializer.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n-import java.lang.classfile.ClassFile;\n-import java.lang.classfile.attribute.SourceFileAttribute;\n-import java.lang.constant.ClassDesc;\n@@ -34,0 +31,3 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.attribute.SourceFileAttribute;\n+import java.lang.constant.ClassDesc;\n@@ -45,2 +45,0 @@\n-import static java.lang.invoke.MethodHandleStatics.CLASSFILE_VERSION;\n-import static java.lang.invoke.MethodTypeForm.*;\n@@ -48,0 +46,1 @@\n+import static java.lang.invoke.MethodTypeForm.*;\n@@ -72,1 +71,0 @@\n-    private static final ClassFile CC = ClassFile.of();\n@@ -523,1 +521,1 @@\n-        return CC.build(ClassDesc.ofInternalName(className), clb -> {\n+        return ClassFile.of().build(ClassDesc.ofInternalName(className), clb -> {\n@@ -526,1 +524,1 @@\n-               .with(SourceFileAttribute.of(clb.constantPool().utf8Entry(className.substring(className.lastIndexOf('\/') + 1))));\n+               .with(SourceFileAttribute.of(className.substring(className.lastIndexOf('\/') + 1)));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/GenerateJLIClassesHelper.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import static java.lang.classfile.ClassFile.*;\n@@ -43,1 +42,0 @@\n-import static java.lang.constant.ConstantDescs.*;\n@@ -47,1 +45,0 @@\n-import java.util.function.Consumer;\n@@ -51,0 +48,1 @@\n+import java.util.function.Consumer;\n@@ -52,0 +50,2 @@\n+import static java.lang.classfile.ClassFile.*;\n+import static java.lang.constant.ConstantDescs.*;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,0 +38,5 @@\n+import java.lang.classfile.constantpool.ClassEntry;\n+import java.lang.classfile.constantpool.ConstantPoolBuilder;\n+import java.lang.classfile.constantpool.FieldRefEntry;\n+import java.lang.classfile.constantpool.InterfaceMethodRefEntry;\n+import java.lang.classfile.constantpool.MethodRefEntry;\n@@ -41,1 +46,0 @@\n-import static java.lang.constant.ConstantDescs.*;\n@@ -43,0 +47,3 @@\n+import java.lang.invoke.LambdaForm.BasicType;\n+import java.lang.invoke.LambdaForm.Name;\n+import java.lang.invoke.LambdaForm.NamedFunction;\n@@ -53,5 +60,1 @@\n-import java.lang.classfile.constantpool.ClassEntry;\n-import java.lang.classfile.constantpool.ConstantPoolBuilder;\n-import java.lang.classfile.constantpool.FieldRefEntry;\n-import java.lang.classfile.constantpool.InterfaceMethodRefEntry;\n-import java.lang.classfile.constantpool.MethodRefEntry;\n+import static java.lang.constant.ConstantDescs.*;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n-import java.lang.classfile.ClassFile;\n-import java.lang.constant.ClassDesc;\n-import java.lang.constant.MethodTypeDesc;\n@@ -44,0 +41,3 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.constant.ClassDesc;\n+import java.lang.constant.MethodTypeDesc;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import static java.lang.classfile.ClassFile.*;\n-import java.lang.classfile.ClassModel;\n@@ -44,0 +42,1 @@\n+import java.lang.classfile.ClassModel;\n@@ -46,0 +45,1 @@\n+import java.lang.invoke.MethodHandleImpl.Intrinsic;\n@@ -64,0 +64,1 @@\n+import static java.lang.classfile.ClassFile.*;\n@@ -65,1 +66,0 @@\n-import static java.lang.invoke.MethodHandleImpl.Intrinsic;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+\n@@ -35,9 +36,0 @@\n-import static sun.invoke.util.Wrapper.BOOLEAN;\n-import static sun.invoke.util.Wrapper.BYTE;\n-import static sun.invoke.util.Wrapper.CHAR;\n-import static sun.invoke.util.Wrapper.DOUBLE;\n-import static sun.invoke.util.Wrapper.FLOAT;\n-import static sun.invoke.util.Wrapper.INT;\n-import static sun.invoke.util.Wrapper.LONG;\n-import static sun.invoke.util.Wrapper.SHORT;\n-import static sun.invoke.util.Wrapper.VOID;\n@@ -75,1 +67,1 @@\n-    static private TypeKind primitiveTypeKindFromClass(Class<?> type) {\n+    private static TypeKind primitiveTypeKindFromClass(Class<?> type) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/TypeConvertingMethodAdapter.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"}]}