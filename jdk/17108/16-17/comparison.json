{"files":[{"patch":"@@ -69,7 +69,7 @@\n-    private static final ClassDesc CD_SERIALIZED_LAMBDA = ReferenceClassDescImpl.ofValidated(\"Ljava\/lang\/invoke\/SerializedLambda;\");\n-    private static final ClassDesc CD_NOT_SERIALIZABLE_EXCEPTION = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/NotSerializableException;\");\n-    private static final ClassDesc CD_OBJECTOUTPUTSTREAM = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/ObjectOutputStream;\");\n-    private static final ClassDesc CD_OBJECTINPUTSTREAM = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/ObjectInputStream;\");\n-    private static final MethodTypeDesc MTD_METHOD_WRITE_REPLACE = MethodTypeDescImpl.ofValidated(CD_Object);\n-    private static final MethodTypeDesc MTD_METHOD_WRITE_OBJECT = MethodTypeDescImpl.ofValidated(CD_void, CD_OBJECTOUTPUTSTREAM);\n-    private static final MethodTypeDesc MTD_METHOD_READ_OBJECT = MethodTypeDescImpl.ofValidated(CD_void, CD_OBJECTINPUTSTREAM);\n+    private static final ClassDesc CD_SerializedLambda = ReferenceClassDescImpl.ofValidated(\"Ljava\/lang\/invoke\/SerializedLambda;\");\n+    private static final ClassDesc CD_NotSerializableException = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/NotSerializableException;\");\n+    private static final ClassDesc CD_ObjectOutputStream = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/ObjectOutputStream;\");\n+    private static final ClassDesc CD_ObjectInputStream = ReferenceClassDescImpl.ofValidated(\"Ljava\/io\/ObjectInputStream;\");\n+    private static final MethodTypeDesc MTD_Object = MethodTypeDescImpl.ofValidated(CD_Object);\n+    private static final MethodTypeDesc MTD_void_ObjectOutputStream = MethodTypeDescImpl.ofValidated(CD_void, CD_ObjectOutputStream);\n+    private static final MethodTypeDesc MTD_void_ObjectInputStream = MethodTypeDescImpl.ofValidated(CD_void, CD_ObjectInputStream);\n@@ -442,1 +442,1 @@\n-        clb.withMethod(NAME_METHOD_WRITE_REPLACE, MTD_METHOD_WRITE_REPLACE, ACC_PRIVATE | ACC_FINAL,\n+        clb.withMethod(NAME_METHOD_WRITE_REPLACE, MTD_Object, ACC_PRIVATE | ACC_FINAL,\n@@ -446,1 +446,1 @@\n-                        cob.new_(CD_SERIALIZED_LAMBDA)\n+                        cob.new_(CD_SerializedLambda)\n@@ -467,1 +467,1 @@\n-                        cob.invokespecial(CD_SERIALIZED_LAMBDA, INIT_NAME, MTD_CTOR_SERIALIZED_LAMBDA)\n+                        cob.invokespecial(CD_SerializedLambda, INIT_NAME, MTD_CTOR_SERIALIZED_LAMBDA)\n@@ -477,1 +477,1 @@\n-        clb.withMethod(NAME_METHOD_WRITE_OBJECT, MTD_METHOD_WRITE_OBJECT, ACC_PRIVATE + ACC_FINAL,\n+        clb.withMethod(NAME_METHOD_WRITE_OBJECT, MTD_void_ObjectOutputStream, ACC_PRIVATE + ACC_FINAL,\n@@ -481,1 +481,1 @@\n-                    cob.new_(CD_NOT_SERIALIZABLE_EXCEPTION)\n+                    cob.new_(CD_NotSerializableException)\n@@ -484,1 +484,1 @@\n-                       .invokespecial(CD_NOT_SERIALIZABLE_EXCEPTION, INIT_NAME, MTD_CTOR_NOT_SERIALIZABLE_EXCEPTION)\n+                       .invokespecial(CD_NotSerializableException, INIT_NAME, MTD_CTOR_NOT_SERIALIZABLE_EXCEPTION)\n@@ -488,1 +488,1 @@\n-        clb.withMethod(NAME_METHOD_READ_OBJECT, MTD_METHOD_READ_OBJECT, ACC_PRIVATE + ACC_FINAL,\n+        clb.withMethod(NAME_METHOD_READ_OBJECT, MTD_void_ObjectInputStream, ACC_PRIVATE + ACC_FINAL,\n@@ -492,1 +492,1 @@\n-                    cob.new_(CD_NOT_SERIALIZABLE_EXCEPTION)\n+                    cob.new_(CD_NotSerializableException)\n@@ -495,1 +495,1 @@\n-                       .invokespecial(CD_NOT_SERIALIZABLE_EXCEPTION, INIT_NAME, MTD_CTOR_NOT_SERIALIZABLE_EXCEPTION)\n+                       .invokespecial(CD_NotSerializableException, INIT_NAME, MTD_CTOR_NOT_SERIALIZABLE_EXCEPTION)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -35,4 +35,0 @@\n-import java.lang.classfile.constantpool.ClassEntry;\n-import java.lang.classfile.constantpool.ConstantPoolBuilder;\n-import java.lang.classfile.constantpool.InterfaceMethodRefEntry;\n-import java.lang.classfile.constantpool.MethodRefEntry;\n@@ -82,0 +78,5 @@\n+    private static final MethodTypeDesc MTD_boolean_Object = MethodTypeDescImpl.ofValidated(CD_boolean, CD_Object);\n+    private static final MethodTypeDesc MTD_Object_int = MethodTypeDescImpl.ofValidated(CD_Object, CD_int);\n+    private static final MethodTypeDesc MTD_Object_Class = MethodTypeDescImpl.ofValidated(CD_Object, CD_Class);\n+    private static final MethodTypeDesc MTD_Object_Object = MethodTypeDescImpl.ofValidated(CD_Object, CD_Object);\n+\n@@ -85,9 +86,0 @@\n-    private static final ConstantPoolBuilder CP = ConstantPoolBuilder.of();\n-    private static final ClassEntry CE_Object = CP.classEntry(CD_Object);\n-    private static final ClassEntry CE_OBJARY = CP.classEntry(CD_Object_array);\n-    private static final ClassEntry CE_MethodHandle = CP.classEntry(CD_MethodHandle);\n-    private static final InterfaceMethodRefEntry MRE_List_get = CP.interfaceMethodRefEntry(CD_List, \"get\", MethodTypeDescImpl.ofValidated(CD_Object, CD_int));\n-    private static final MethodRefEntry MRE_MethodHandles_classData = CP.methodRefEntry(CD_MethodHandles, \"classData\", MethodTypeDescImpl.ofValidated(CD_Object, CD_Class));\n-    private static final MethodRefEntry MRE_Class_cast = CP.methodRefEntry(CD_Class, \"cast\", MethodTypeDescImpl.ofValidated(CD_Object, CD_Object));\n-    private static final MethodRefEntry MRE_Class_isInstance = CP.methodRefEntry(CD_Class, \"isInstance\", MethodTypeDescImpl.ofValidated(CD_boolean, CD_Object));\n-\n@@ -101,0 +93,1 @@\n+\n@@ -346,1 +339,1 @@\n-                   .invokestatic(MRE_MethodHandles_classData);\n+                   .invokestatic(CD_MethodHandles, \"classData\", MTD_Object_Class);\n@@ -355,0 +348,1 @@\n+                    var listGet = cob.constantPool().interfaceMethodRefEntry(CD_List, \"get\", MTD_Object_int);\n@@ -359,1 +353,1 @@\n-                           .invokeinterface(MRE_List_get)\n+                           .invokeinterface(listGet)\n@@ -460,1 +454,1 @@\n-               .invokevirtual(MRE_Class_cast);\n+               .invokevirtual(CD_Class, \"cast\", MTD_Object_Object);\n@@ -462,1 +456,1 @@\n-                cob.checkcast(CE_OBJARY);\n+                cob.checkcast(CD_Object_array);\n@@ -464,1 +458,1 @@\n-                cob.checkcast(CE_Object);\n+                cob.checkcast(CD_Object);\n@@ -605,1 +599,1 @@\n-                               .checkcast(CE_MethodHandle);\n+                               .checkcast(CD_MethodHandle);\n@@ -1003,1 +997,1 @@\n-        cob.invokevirtual(MRE_Class_isInstance);\n+        cob.invokevirtual(CD_Class, \"isInstance\", MTD_boolean_Object);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"}]}