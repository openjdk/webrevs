{"files":[{"patch":"@@ -70,2 +70,2 @@\n-            if (address1 != 0) CallBufferCache.free(address1);\n-            if (address2 != 0) CallBufferCache.free(address2);\n+            if (address1 != 0) UNSAFE.freeMemory(address1);\n+            if (address2 != 0) UNSAFE.freeMemory(address2);\n@@ -75,9 +75,0 @@\n-    @SuppressWarnings(\"restricted\")\n-    public static long allocate(long size) {\n-        return UNSAFE.allocateMemory(size);\n-    }\n-\n-    public static void free(long address) {\n-        UNSAFE.freeMemory(address);\n-    }\n-\n@@ -96,1 +87,1 @@\n-    \/\/ visible only for tests\n+    \/\/ acquire\/release visible only for tests\n@@ -126,1 +117,1 @@\n-            address = allocate(bufferSize);\n+            address = UNSAFE.allocateMemory(bufferSize);\n@@ -134,1 +125,1 @@\n-            free(segment.address());\n+            UNSAFE.freeMemory(segment.address());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/CallBufferCache.java","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @modules java.base\/jdk.internal.foreign.abi\n+ * @modules java.base\/jdk.internal.foreign.abi  java.base\/jdk.internal.misc\n@@ -31,0 +31,1 @@\n+import jdk.internal.misc.Unsafe;\n@@ -36,1 +37,2 @@\n-\n+    Unsafe UNSAFE = Unsafe.getUnsafe();\n+    \n@@ -42,9 +44,0 @@\n-    @Test\n-    public void testAllocate() {\n-        long address1 = CallBufferCache.allocate(123);\n-        long address2 = CallBufferCache.allocate(123);\n-        assertNotEquals(address1, address2);\n-        CallBufferCache.free(address1);\n-        CallBufferCache.free(address2);\n-    }\n-\n@@ -56,3 +49,3 @@\n-        long address1 = CallBufferCache.allocate(128);\n-        long address2 = CallBufferCache.allocate(128);\n-        long address3 = CallBufferCache.allocate(128);\n+        long address1 = UNSAFE.allocateMemory(128);\n+        long address2 = UNSAFE.allocateMemory(128);\n+        long address3 = UNSAFE.allocateMemory(128);\n@@ -79,3 +72,3 @@\n-        CallBufferCache.free(address1);\n-        CallBufferCache.free(address2);\n-        CallBufferCache.free(address3);\n+        UNSAFE.freeMemory(address1);\n+        UNSAFE.freeMemory(address2);\n+        UNSAFE.freeMemory(address3);\n@@ -86,1 +79,1 @@\n-        long address = CallBufferCache.allocate(128);\n+        long address = UNSAFE.allocateMemory(128);\n@@ -94,1 +87,1 @@\n-        CallBufferCache.free(address);\n+        UNSAFE.freeMemory(address);\n@@ -99,1 +92,1 @@\n-        long address = CallBufferCache.allocate(128);\n+        long address = UNSAFE.allocateMemory(128);\n","filename":"test\/jdk\/java\/foreign\/CallBufferCacheTest.java","additions":13,"deletions":20,"binary":false,"changes":33,"status":"modified"}]}