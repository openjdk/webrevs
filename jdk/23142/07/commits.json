[{"commit":{"message":"Back buffer allocation with a single carrier-local segment."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/BufferStack.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"d408852d167f4940aafd8be9268038fe78d10ac5"},{"commit":{"message":"restore 3 forks"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadByValue.java"}],"sha":"5a8491f125d1687885b68b8a263483520fdc3aa9"},{"commit":{"message":"whitespace :scream:"},"files":[],"sha":"a523278acea3c2a69e1d4b18531d769f33e65910"},{"commit":{"message":"remove stray -Xlog:gc\ntest single call overhead"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadByValue.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libCallOverheadByValue.c"}],"sha":"f68a930bb715e6b6dcb07bf6f1cbf7a39586389e"},{"commit":{"message":"reduce visibility"},"files":[],"sha":"0023eb456344f29ea1a67c84e7d3569ca00a6b37"},{"commit":{"message":"shift api boundary"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"4f8a9a978a98af841f8e0f5d5f7ba01775896912"},{"commit":{"message":"move bench"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/CallOverheadByValue.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/libCallOverheadByValue.c"}],"sha":"643efd7a35bbe9f21cd0fd413e5a86d595dbb4e6"},{"commit":{"message":"revert formatting"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"b7be3a615a1641f55cfca4405eb51440d8969f4a"},{"commit":{"message":"Implementation notes."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"35a3a156fd5fdfb65fbbf5eebfe170f0eeb61d49"},{"commit":{"message":"tiny stylistic changes"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"4a2210dfbb21ad9a2d1d9f4d098379017b0cb76b"},{"commit":{"message":"Storing segment addresses instead of objects in the cache appears to be slightly faster. Write barrier?"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"343909b1da04e0fd39f1254219cb19b7fe5f5248"},{"commit":{"message":"(c)"},"files":[],"sha":"873ffa65dc2c21e2138155d94f714d6bdff3df9d"},{"commit":{"message":"unit test"},"files":[],"sha":"d9a49c6761c5c14dd2e3fb3727b9140e895b303e"},{"commit":{"message":"move CallBufferCache out"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"001c785ce04e055e8d1ecceb45c542cbf74871e0"},{"commit":{"message":"shave off a couple more nanos"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"5b750a365c740f9ded4c84561afde67e8575658b"},{"commit":{"message":"Add comparison benchmark for out-parameter.\n\nBy value is now almost competitive:\n```\nBenchmark                                        Mode  Cnt    Score    Error   Units\nPointsAlloc.circle_by_ptr                        avgt    5    9.151 ±  0.196   ns\/op\nPointsAlloc.circle_by_ptr:·gc.alloc.rate         avgt    5  233.423 ±  5.019  MB\/sec\nPointsAlloc.circle_by_ptr:·gc.alloc.rate.norm    avgt    5    2.240 ±  0.001    B\/op\nPointsAlloc.circle_by_ptr:·gc.count              avgt    5    6.000           counts\nPointsAlloc.circle_by_ptr:·gc.time               avgt    5   10.000               ms\nPointsAlloc.circle_by_value                      avgt    5   15.445 ±  0.433   ns\/op\nPointsAlloc.circle_by_value:·gc.alloc.rate       avgt    5  138.301 ±  3.855  MB\/sec\nPointsAlloc.circle_by_value:·gc.alloc.rate.norm  avgt    5    2.240 ±  0.001    B\/op\nPointsAlloc.circle_by_value:·gc.count            avgt    5    3.000           counts\nPointsAlloc.circle_by_value:·gc.time             avgt    5    6.000               ms\n```"},"files":[],"sha":"4940f39bf0fc6693ad244cf953deba11b9a292a9"},{"commit":{"message":"copyright header"},"files":[],"sha":"46bf3425f9243583b25fd46dea0770f056301479"},{"commit":{"message":"Benchmark:\n\nExercise intermediate buffer in downcall handle returning an Arm64 \"HFA\".\n\n# VM version: JDK 25-ea, OpenJDK 64-Bit Server VM, 25-ea+3-283\nPointsAlloc.panama_by_value                      avgt    5     50.479 ±    3.653   ns\/op\nPointsAlloc.panama_by_value:·gc.alloc.rate       avgt    5  16490.820 ± 1193.776  MB\/sec\nPointsAlloc.panama_by_value:·gc.alloc.rate.norm  avgt    5    218.240 ±    0.001    B\/op\nPointsAlloc.panama_by_value:·gc.count            avgt    5    136.000             counts\nPointsAlloc.panama_by_value:·gc.time             avgt    5     56.000                 ms\n\n# VM version: JDK 25-internal, OpenJDK 64-Bit Server VM, 25-internal-adhoc.mernst.jdk\nPointsAlloc.panama_by_value                      avgt    5   17.549 ±  1.046   ns\/op\nPointsAlloc.panama_by_value:·gc.alloc.rate       avgt    5  486.807 ± 28.467  MB\/sec\nPointsAlloc.panama_by_value:·gc.alloc.rate.norm  avgt    5    2.240 ±  0.001    B\/op\nPointsAlloc.panama_by_value:·gc.count            avgt    5   11.000           counts\nPointsAlloc.panama_by_value:·gc.time             avgt    5   19.000               ms"},"files":[],"sha":"09e9c9ddfd75d5fcfad3a87a57b7ab44d21f298e"},{"commit":{"message":"move pinned cache lookup out of constructor.\n\nSee https:\/\/github.com\/mernst-github\/repro\/tree\/main\/escape-analysis."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"1f2110a55a2d1c0a9fa85c8d9f630b743f36b632"},{"commit":{"message":"move scoping"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"195f68aabf8e08062d19671c67fcffd55c68ce58"},{"commit":{"message":"reorder"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"634b909b0e076fbe517e01f0a7dcbce6bc636ae4"},{"commit":{"message":"revert SlicingAllocator"},"files":[],"sha":"021d037bf746cc678d7f240f16a68edb4bbc4760"},{"commit":{"message":"Merge remote-tracking branch 'origin\/mernst\/cache-segments' into mernst\/cache-segments\n\n# Conflicts:\n#\tsrc\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},"files":[],"sha":"edaa0a0baa0ceffbcf7ed0ebb28ab61fe14486b4"},{"commit":{"message":"cache the bounded area\/slicing allocator\n\nno need to recreate these\nsimplifies code and no longer needs @ForceInlining"},"files":[],"sha":"68d4bcc43cf61c3939c014d64094315c571e83dd"},{"commit":{"message":"no need to use SlicingAllocator directly"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"c0b2beb12888f110e7b06c01bc9e53a345a76adb"},{"commit":{"message":"Merge branch 'master' into mernst\/cache-segments"},"files":[],"sha":"fd9e791afd8bab67b662720965264358b808b97f"},{"commit":{"message":"confine buffers.\n\nCareful massaging to get scalar replacement. Triggers fastdebug assertion, though."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"b35cc8691cea693c7688caa1d7a7600af79a4553"},{"commit":{"message":"minimal continuation pinning\n\nShould really just protect the CTL handling.\nalloc\/free should happen outside (even if it practically doesn't matter)"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"0a41dce3ec4c90a732c385498c1572558b7cf781"},{"commit":{"message":"feedback:\n- 2 element cache to support upcall\n- avoid shared session\n\nWith this, escape analysis kicks in and the \"BoundedArena\" seems to get scalar-replaced. The call becomes allocation-free.\n\nIntroducing a confined session per call kills this and costs ~50%."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"a0ac383c85eac1308b3e20632d60c11f02f108e3"},{"commit":{"message":"add pinned sections around CTL manipulation"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"f2cd14497ba1d2002a201364cf98572e8443d99a"},{"commit":{"message":"final"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"2964f84b39b57c2440deeff074477f78237608d9"},{"commit":{"message":"final"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"9cf9837bbfcb07d7da2dec6b1c23718cb49933fc"},{"commit":{"message":"!!@# format"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"61f35c97ffb436bea37e9cebd6e06bb5d147f566"},{"commit":{"message":"avoid TL lookup if not necessary"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"2bda29ae3be5d11469c82968fbbe7a406ae2ef6c"},{"commit":{"message":"readability"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"f96d963d2b89b83a36661a9ba6149a1ea3f68df1"},{"commit":{"message":"merge master"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"e27798de9667cd0c6cda3c35083b884ff0709fcd"},{"commit":{"message":"Merge branch 'master' into mernst\/cache-segments\n\n# Conflicts:\n#\tsrc\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"6e6bcfbaa572d5d9dc52caa0967a613c1a1e20d6"},{"commit":{"message":"readability"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"93280dad2fcf0211c404dc47176524a0b6e933d8"},{"commit":{"message":"Cache intermediate segments allocated during FFM stub invocations."},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/SharedUtils.java"}],"sha":"d4136b51c027cc7d36d8a9c44a72cacdfa3fdbe9"}]