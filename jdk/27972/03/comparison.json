{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-            \/\/ Preserve interrupt status\n+            \/\/ Preserve interrupted status\n","filename":"make\/langtools\/tools\/javacserver\/server\/CompilerThreadPool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -386,1 +386,1 @@\n-                \/\/ virtual thread's interrupt status needs to be cleared\n+                \/\/ virtual thread's interrupted status needs to be cleared\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Object.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -777,1 +777,1 @@\n-     * {@code waitFor} is interrupted, the thread's interrupt status is preserved.\n+     * {@code waitFor} is interrupted, the thread's interrupted status is preserved.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Process.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-    \/\/ interrupt status (read\/written by VM)\n+    \/\/ interrupted status (read\/written by VM)\n@@ -358,1 +358,1 @@\n-     * after setting this thread's interrupt status.\n+     * after setting this thread's interrupted status.\n@@ -1538,1 +1538,1 @@\n-     * methods of this class, then its interrupt status will be cleared and it\n+     * methods of this class, then its interrupted status will be cleared and it\n@@ -1543,1 +1543,1 @@\n-     * then the channel will be closed, the thread's interrupt\n+     * then the channel will be closed, the thread's interrupted\n@@ -1548,1 +1548,1 @@\n-     * then the thread's interrupt status will be set and it will return\n+     * then the thread's interrupted status will be set and it will return\n@@ -1553,1 +1553,1 @@\n-     * <p> If none of the previous conditions hold then this thread's interrupt\n+     * <p> If none of the previous conditions hold then this thread's interrupted\n@@ -1563,1 +1563,1 @@\n-        \/\/ Setting the interrupt status must be done before reading nioBlocker.\n+        \/\/ Setting the interrupted status must be done before reading nioBlocker.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Thread.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -486,1 +486,1 @@\n-        \/\/ sync up carrier thread interrupt status if needed\n+        \/\/ sync up carrier thread interrupted status if needed\n@@ -491,1 +491,1 @@\n-                \/\/ need to recheck interrupt status\n+                \/\/ need to recheck interrupted status\n@@ -724,1 +724,1 @@\n-     * yield). It also completes immediately if the interrupt status is set.\n+     * yield). It also completes immediately if the interrupted status is set.\n@@ -759,1 +759,1 @@\n-     * if the interrupt status is set or the waiting time is {@code <= 0}.\n+     * if the interrupted status is set or the waiting time is {@code <= 0}.\n@@ -802,1 +802,1 @@\n-     * interrupt status will be propagated to the carrier thread.\n+     * interrupted status will be propagated to the carrier thread.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/VirtualThread.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -614,2 +614,2 @@\n-     *        java.nio.channels.ClosedByInterruptException} with the interrupt\n-     *        status set.\n+     *        java.nio.channels.ClosedByInterruptException} with the thread's\n+     *        interrupted status set.\n@@ -620,1 +620,1 @@\n-     *        {@code SocketException} with the interrupt status set.\n+     *        {@code SocketException} with the thread's interrupted status set.\n","filename":"src\/java.base\/share\/classes\/java\/net\/DatagramSocket.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -409,2 +409,2 @@\n-     *        java.nio.channels.ClosedByInterruptException} with the interrupt\n-     *        status set.\n+     *        java.nio.channels.ClosedByInterruptException} with the thread's\n+     *        interrupted status set.\n@@ -415,1 +415,1 @@\n-     *        {@code SocketException} with the interrupt status set.\n+     *        {@code SocketException} with the thread's interrupted status set.\n","filename":"src\/java.base\/share\/classes\/java\/net\/ServerSocket.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -576,1 +576,2 @@\n-     *        {@link ClosedByInterruptException} with the interrupt status set.\n+     *        {@link ClosedByInterruptException} with the thread's interrupted\n+     *        status set.\n@@ -581,1 +582,1 @@\n-     *        {@code SocketException} with the interrupt status set.\n+     *        {@code SocketException} with the thread's interrupted status set.\n@@ -616,1 +617,2 @@\n-     *        {@link ClosedByInterruptException} with the interrupt status set.\n+     *        {@link ClosedByInterruptException} with the thread's interrupted\n+     *        status set.\n@@ -621,1 +623,1 @@\n-     *        {@code SocketException} with the interrupt status set.\n+     *        {@code SocketException} with the thread's interrupted status set.\n@@ -889,2 +891,2 @@\n-     *        throw {@link ClosedByInterruptException} with the interrupt\n-     *        status set.\n+     *        throw {@link ClosedByInterruptException} with the thread's\n+     *        interrupted status set.\n@@ -895,1 +897,2 @@\n-     *        throw {@code SocketException} with the interrupt status set.\n+     *        throw {@code SocketException} with the thread's interrupted\n+     *        status set.\n@@ -1029,2 +1032,2 @@\n-     *        throw {@link ClosedByInterruptException} with the interrupt status\n-     *        set.\n+     *        throw {@link ClosedByInterruptException} with the thread's\n+     *        interrupted status set.\n@@ -1035,1 +1038,2 @@\n-     *        throw {@code SocketException} with the interrupt status set.\n+     *        throw {@code SocketException} with the thread's interrupted\n+     *        status set.\n","filename":"src\/java.base\/share\/classes\/java\/net\/Socket.java","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * exception is thrown the channel will have been closed and the interrupt\n+ * exception is thrown the channel will have been closed and the interrupted\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/ClosedByInterruptException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -293,1 +293,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -392,1 +392,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -446,1 +446,1 @@\n-     *          interrupt status\n+     *          interrupted status\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/DatagramChannel.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -665,1 +665,1 @@\n-     *          setting the current thread's interrupt status\n+     *          setting the current thread's interrupted status\n@@ -735,1 +735,1 @@\n-     *          setting the current thread's interrupt status\n+     *          setting the current thread's interrupted status\n@@ -783,1 +783,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -832,1 +832,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -1096,1 +1096,1 @@\n-     * lock then its interrupt status will be set and a {@link\n+     * lock then its interrupted status will be set and a {@link\n@@ -1098,2 +1098,2 @@\n-     * interrupt status is set when this method is invoked then that exception\n-     * will be thrown immediately; the thread's interrupt status will not be\n+     * interrupted status is set when this method is invoked then that exception\n+     * will be thrown immediately; the thread's interrupted status will not be\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * the interrupt status of the previously-blocked thread will have been set.\n+ * the interrupted status of the previously-blocked thread will have been set.\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileLockInterruptionException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -126,1 +126,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -164,1 +164,1 @@\n-     *          interrupt status\n+     *          interrupted status\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/GatheringByteChannel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n- * thread's interrupt status to be set.\n+ * thread's interrupted status to be set.\n@@ -50,1 +50,1 @@\n- * <p> If a thread's interrupt status is already set and it invokes a blocking\n+ * <p> If a thread's interrupted status is already set and it invokes a blocking\n@@ -52,1 +52,1 @@\n- * will immediately receive a {@link ClosedByInterruptException}; its interrupt\n+ * will immediately receive a {@link ClosedByInterruptException}; its interrupted\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/InterruptibleChannel.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-     *          interrupt status\n+     *          interrupted status\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/ReadableByteChannel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -122,1 +122,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -163,1 +163,1 @@\n-     *          interrupt status\n+     *          interrupted status\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/ScatteringByteChannel.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -239,1 +239,1 @@\n- *   interrupt status will be set and the selector's {@link #wakeup wakeup}\n+ *   interrupted status will be set and the selector's {@link #wakeup wakeup}\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/Selector.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -331,1 +331,1 @@\n-     *          interrupt status\n+     *          interrupted status\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/ServerSocketChannel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -253,1 +253,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -488,1 +488,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -545,1 +545,1 @@\n-     *          interrupt status\n+     *          interrupted status\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/SocketChannel.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-     *          interrupt status\n+     *          interrupted status\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/WritableByteChannel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n- *     \/\/ Preserve interrupt status\n+ *     \/\/ Preserve interrupted status\n@@ -378,1 +378,1 @@\n-     * execution are not executed. The interrupt status will be re-asserted\n+     * execution are not executed. The interrupted status will be re-asserted\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ExecutorService.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -878,1 +878,1 @@\n-     * independently from the interrupt status of threads running\n+     * independently from the interrupted status of threads running\n@@ -903,1 +903,1 @@\n-     * usages of ForkJoinTasks ignore interrupt status when executing\n+     * usages of ForkJoinTasks ignore interrupted status when executing\n@@ -4174,1 +4174,1 @@\n-     * execution are not executed. The interrupt status will be\n+     * execution are not executed. The interrupted status will be\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ForkJoinPool.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-     * avoid surprising users about retaining interrupt status during\n+     * avoid surprising users about retaining interrupted status during\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/FutureTask.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -337,1 +337,1 @@\n-     * occurred.  When the thread does return from this method its interrupt\n+     * occurred.  When the thread does return from this method its interrupted\n@@ -497,1 +497,1 @@\n-     * from this method its interrupt status will be set.\n+     * from this method its interrupted status will be set.\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/Semaphore.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -655,1 +655,1 @@\n-     * Implemented by first checking interrupt status, then invoking\n+     * Implemented by first checking interrupted status, then invoking\n@@ -677,1 +677,1 @@\n-     * checking interrupt status, then invoking at least once {@link\n+     * checking interrupted status, then invoking at least once {@link\n@@ -744,1 +744,1 @@\n-     * by first checking interrupt status, then invoking at least once\n+     * by first checking interrupted status, then invoking at least once\n@@ -766,1 +766,1 @@\n-     * checking interrupt status, then invoking at least once {@link\n+     * checking interrupted status, then invoking at least once {@link\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedLongSynchronizer.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1035,1 +1035,1 @@\n-     * Implemented by first checking interrupt status, then invoking\n+     * Implemented by first checking interrupted status, then invoking\n@@ -1057,1 +1057,1 @@\n-     * checking interrupt status, then invoking at least once {@link\n+     * checking interrupted status, then invoking at least once {@link\n@@ -1124,1 +1124,1 @@\n-     * by first checking interrupt status, then invoking at least once\n+     * by first checking interrupted status, then invoking at least once\n@@ -1146,1 +1146,1 @@\n-     * checking interrupt status, then invoking at least once {@link\n+     * checking interrupted status, then invoking at least once {@link\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/AbstractQueuedSynchronizer.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n- *     \/\/ ensure correct interrupt status on return\n+ *     \/\/ ensure correct interrupted status on return\n@@ -210,1 +210,1 @@\n-     * for example, the interrupt status of the thread upon return.\n+     * for example, the interrupted status of the thread upon return.\n@@ -255,1 +255,1 @@\n-     * for example, the interrupt status of the thread, or the elapsed time\n+     * for example, the interrupted status of the thread, or the elapsed time\n@@ -303,1 +303,1 @@\n-     * for example, the interrupt status of the thread, or the current time\n+     * for example, the interrupted status of the thread, or the current time\n@@ -363,1 +363,1 @@\n-     * for example, the interrupt status of the thread upon return.\n+     * for example, the interrupted status of the thread upon return.\n@@ -398,1 +398,1 @@\n-     * for example, the interrupt status of the thread, or the elapsed time\n+     * for example, the interrupted status of the thread, or the elapsed time\n@@ -437,1 +437,1 @@\n-     * for example, the interrupt status of the thread, or the current time\n+     * for example, the interrupted status of the thread, or the current time\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/locks\/LockSupport.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -382,1 +382,1 @@\n-     * finish, before completing with the interrupt status set.\n+     * finish, before completing with the interrupted status set.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/ThreadFlock.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-     * with the current thread's interrupt status set. This method must not block.\n+     * with the current thread's interrupted status set. This method must not block.\n@@ -45,1 +45,1 @@\n-     * beginning an I\/O operation with the current thread's interrupt status set, or at\n+     * beginning an I\/O operation with the current thread's interrupted status set, or at\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/Interruptible.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -281,1 +281,1 @@\n-                \/\/ Log and reset the interrupt state\n+                \/\/ Log and reset the interrupted state\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/StatusResponseManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -720,2 +720,2 @@\n-     * immediately with the interrupt status set. If the interrupted status is\n-     * already set, this method returns immediately with the interrupt status\n+     * immediately with the interrupted status set. If the interrupted status is\n+     * already set, this method returns immediately with the interrupted status\n@@ -739,1 +739,1 @@\n-                thread.interrupt(); \/\/ Preserve interrupt status\n+                thread.interrupt(); \/\/ Preserve interrupted status\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Robot.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -936,1 +936,1 @@\n-     * The interrupt status will be re-asserted before this method returns.\n+     * The interrupted status will be re-asserted before this method returns.\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpClient.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1333,1 +1333,1 @@\n-         * thread interrupt status set} if the thread is interrupted\n+         * thread interrupted status set} if the thread is interrupted\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpResponse.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -929,1 +929,1 @@\n-                \/\/reset interrupt state\n+                \/\/reset interrupted state\n@@ -986,1 +986,1 @@\n-                \/\/reset interrupt state\n+                \/\/reset interrupted state\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/parsers\/DOMParserImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -205,1 +205,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -425,1 +425,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -486,1 +486,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -555,1 +555,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -779,1 +779,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -846,1 +846,1 @@\n-     *          interrupt status\n+     *          interrupted status\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/SctpChannel.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -599,1 +599,1 @@\n-     *          interrupt status\n+     *          interrupted status\n@@ -685,1 +685,1 @@\n-     *          interrupt status\n+     *          interrupted status\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/SctpMultiChannel.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,1 +135,1 @@\n-     *          interrupt status\n+     *          interrupted status\n","filename":"src\/jdk.sctp\/share\/classes\/com\/sun\/nio\/sctp\/SctpServerChannel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-            \/\/ re-test with interrupt status set\n+            \/\/ re-test with interrupted status set\n@@ -146,1 +146,1 @@\n-                \/\/ re-test with interrupt status set\n+                \/\/ re-test with interrupted status set\n@@ -195,1 +195,1 @@\n-                \/\/ re-test with interrupt status set\n+                \/\/ re-test with interrupted status set\n@@ -247,1 +247,1 @@\n-                \/\/ re-test with interrupt status set\n+                \/\/ re-test with interrupted status set\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/GetThreadState\/GetThreadStateTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- *       - the running thread get interrupt status\n+ *       - the running thread get interrupted status\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/InterruptThread\/intrpthrd001\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -386,1 +386,1 @@\n-                \/\/ virtual thread's interrupt status needs to be cleared\n+                \/\/ virtual thread's interrupted status needs to be cleared\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/bcinstr\/BI04\/bi04t002\/newclass02\/java.base\/java\/lang\/Object.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n- *     4935244 TEST BUG: wrong interrupt status flag tests.\n+ *     4935244 TEST BUG: wrong interrupted status flag tests.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP01\/sp01t002\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n- *     4935244 TEST BUG: wrong interrupt status flag tests.\n+ *     4935244 TEST BUG: wrong interrupted status flag tests.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP01\/sp01t003\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-                \/\/ Ensure that interrupt status is not lost\n+                \/\/ Ensure that interrupted status is not lost\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/AllDiag.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-                \/\/ Ensure that interrupt status is not lost\n+                \/\/ Ensure that interrupted status is not lost\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/FinDiag.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-                \/\/ Ensure that interrupt status is not lost\n+                \/\/ Ensure that interrupted status is not lost\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/runner\/MemDiag.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -193,1 +193,1 @@\n-                \/* reset thread interrupt status *\/\n+                \/* reset thread interrupted status *\/\n","filename":"test\/jdk\/com\/sun\/nio\/sctp\/SctpServerChannel\/Accept.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-     * Test invoking join with interrupt status set.\n+     * Test invoking join with interrupted status set.\n@@ -144,1 +144,1 @@\n-            \/\/ interrupt status should be cleared\n+            \/\/ interrupted status should be cleared\n","filename":"test\/jdk\/java\/lang\/Thread\/JoinWithDuration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-     * Test Thread.sleep with interrupt status set.\n+     * Test Thread.sleep with interrupted status set.\n@@ -97,1 +97,1 @@\n-            \/\/ interrupt status should be cleared\n+            \/\/ interrupted status should be cleared\n","filename":"test\/jdk\/java\/lang\/Thread\/SleepWithDuration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -207,1 +207,1 @@\n-     * Test running task with the carrier interrupt status set.\n+     * Test running task with the carrier's interrupted status set.\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/CustomScheduler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -422,1 +422,1 @@\n-     * Testing invoking Object.wait with interrupt status set.\n+     * Testing invoking Object.wait with interrupted status set.\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/MonitorWaitNotify.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-     * Park with interrupt status set.\n+     * Park with interrupted status set.\n@@ -199,1 +199,1 @@\n-     * Park while holding monitor and with interrupt status set.\n+     * Park while holding monitor and with interrupted status set.\n@@ -321,1 +321,1 @@\n-     * Park with parkNanos and interrupt status set.\n+     * Park with parkNanos and interrupted status set.\n@@ -348,1 +348,1 @@\n-     * Park with parkNanos while holding monitor and with interrupt status set.\n+     * Park with parkNanos while holding monitor and with interrupted status set.\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/Parking.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -406,1 +406,1 @@\n-     * Test platform thread invoking Thread.join with interrupt status set.\n+     * Test platform thread invoking Thread.join with interrupted status set.\n@@ -422,1 +422,1 @@\n-     * Test virtual thread invoking Thread.join with interrupt status set.\n+     * Test virtual thread invoking Thread.join with interrupted status set.\n@@ -430,1 +430,1 @@\n-     * Test platform thread invoking timed-Thread.join with interrupt status set.\n+     * Test platform thread invoking timed-Thread.join with interrupted status set.\n@@ -446,1 +446,1 @@\n-     * Test virtual thread invoking timed-Thread.join with interrupt status set.\n+     * Test virtual thread invoking timed-Thread.join with interrupted status set.\n@@ -454,1 +454,1 @@\n-     * Test platform thread invoking timed-Thread.join with interrupt status set.\n+     * Test platform thread invoking timed-Thread.join with interrupted status set.\n@@ -471,1 +471,1 @@\n-     * Test virtual thread invoking timed-Thread.join with interrupt status set.\n+     * Test virtual thread invoking timed-Thread.join with interrupted status set.\n@@ -596,1 +596,1 @@\n-     * Test virtual thread with interrupt status set calling Thread.join to wait\n+     * Test virtual thread with interrupted status set calling Thread.join to wait\n@@ -735,1 +735,1 @@\n-            Thread.interrupted();  \/\/ clear interrupt status\n+            Thread.interrupted();  \/\/ clear interrupted status\n@@ -763,1 +763,1 @@\n-     * Test termination with interrupt status set.\n+     * Test termination with interrupted status set.\n@@ -808,1 +808,1 @@\n-                    \/\/ interrupt status should be reset\n+                    \/\/ interrupted status should be reset\n@@ -842,1 +842,1 @@\n-     * Test trying to park with interrupt status set.\n+     * Test trying to park with interrupted status set.\n@@ -855,1 +855,1 @@\n-     * Test trying to wait with interrupt status set.\n+     * Test trying to wait with interrupted status set.\n@@ -874,1 +874,1 @@\n-     * Test trying to block with interrupt status set.\n+     * Test trying to block with interrupted status set.\n@@ -1240,1 +1240,1 @@\n-     * Test Thread.sleep with interrupt status set.\n+     * Test Thread.sleep with interrupted status set.\n@@ -1259,1 +1259,1 @@\n-     * Test Thread.sleep with interrupt status set and a negative duration.\n+     * Test Thread.sleep with interrupted status set and a negative duration.\n@@ -1295,1 +1295,1 @@\n-                \/\/ interrupt status should be cleared\n+                \/\/ interrupted status should be cleared\n@@ -1359,1 +1359,1 @@\n-     * Test Thread.sleep when pinned and with interrupt status set.\n+     * Test Thread.sleep when pinned and with interrupted status set.\n@@ -1392,1 +1392,1 @@\n-                \/\/ interrupt status should be cleared\n+                \/\/ interrupted status should be cleared\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/ThreadAPI.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -445,1 +445,1 @@\n-     * Test timed accept with the thread interrupt status set.\n+     * Test timed accept with the thread interrupted status set.\n@@ -464,1 +464,1 @@\n-                Thread.interrupted(); \/\/ clear interrupt status\n+                Thread.interrupted(); \/\/ clear interrupted status\n@@ -491,1 +491,1 @@\n-                Thread.interrupted(); \/\/ clear interrupt status\n+                Thread.interrupted(); \/\/ clear interrupted status\n","filename":"test\/jdk\/java\/net\/Socket\/Timeouts.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -610,1 +610,1 @@\n-                \/\/ from the main thread: the interrupt status could have\n+                \/\/ from the main thread: the interrupted status could have\n","filename":"test\/jdk\/java\/net\/httpclient\/CancelRequestTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,1 +133,1 @@\n-     * Test interrupt status set before read.\n+     * Test interrupted status set before read.\n@@ -223,1 +223,1 @@\n-     * Test interrupt status set before write.\n+     * Test interrupted status set before write.\n","filename":"test\/jdk\/java\/nio\/channels\/Channels\/SocketChannelStreams.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-     * Call DatagramChannel.receive with the interrupt status set, the DatagramChannel\n+     * Call DatagramChannel.receive with the interrupted status set, the DatagramChannel\n@@ -75,1 +75,1 @@\n-            Thread.interrupted();  \/\/ clear interrupt status\n+            Thread.interrupted();  \/\/ clear interrupted status\n@@ -92,1 +92,1 @@\n-            Thread.interrupted();  \/\/ clear interrupt status\n+            Thread.interrupted();  \/\/ clear interrupted status\n@@ -97,1 +97,1 @@\n-     * Call DatagramChannel.receive with the interrupt status set, the DatagramChannel\n+     * Call DatagramChannel.receive with the interrupted status set, the DatagramChannel\n@@ -114,1 +114,1 @@\n-            Thread.interrupted();  \/\/ clear interrupt status\n+            Thread.interrupted();  \/\/ clear interrupted status\n@@ -139,1 +139,1 @@\n-            Thread.interrupted();  \/\/ clear interrupt status\n+            Thread.interrupted();  \/\/ clear interrupted status\n@@ -144,1 +144,1 @@\n-     * Call DatagramChannel.send with the interrupt status set, the DatagramChannel\n+     * Call DatagramChannel.send with the interrupted status set, the DatagramChannel\n@@ -161,1 +161,1 @@\n-     * Call DatagramChannel.send with the interrupt status set, the DatagramChannel\n+     * Call DatagramChannel.send with the interrupted status set, the DatagramChannel\n@@ -174,1 +174,1 @@\n-            Thread.interrupted();  \/\/ clear interrupt status\n+            Thread.interrupted();  \/\/ clear interrupted status\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/InterruptibleOrNot.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -235,1 +235,1 @@\n-     * current thread's interrupt status.\n+     * current thread's interrupted status.\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/CloseDuringTransfer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -147,1 +147,1 @@\n-                        expected(e + \" thrown and interrupt status set\");\n+                        expected(e + \" thrown and interrupted status set\");\n@@ -149,1 +149,1 @@\n-                        unexpected(e + \" thrown but interrupt status not set\");\n+                        unexpected(e + \" thrown but interrupted status not set\");\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/ClosedByInterrupt.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-                               exc = new RuntimeException(\"interrupt status reset\");\n+                               exc = new RuntimeException(\"interrupted status reset\");\n","filename":"test\/jdk\/java\/nio\/channels\/Pipe\/PipeInterrupt.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-                    \/\/ clear interrupt status and consume wakeup\n+                    \/\/ clear interrupted status and consume wakeup\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/LotsOfInterrupts.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -363,1 +363,1 @@\n-     * Test invoking select with interrupt status set\n+     * Test invoking select with interrupted status set\n@@ -374,1 +374,1 @@\n-            Thread.currentThread().interrupted();  \/\/ clear interrupt status\n+            Thread.currentThread().interrupted();  \/\/ clear interrupted status\n@@ -387,1 +387,1 @@\n-            Thread.currentThread().interrupted();  \/\/ clear interrupt status\n+            Thread.currentThread().interrupted();  \/\/ clear interrupted status\n@@ -403,1 +403,1 @@\n-            Thread.currentThread().interrupted();  \/\/ clear interrupt status\n+            Thread.currentThread().interrupted();  \/\/ clear interrupted status\n@@ -414,1 +414,1 @@\n-            Thread.currentThread().interrupted();  \/\/ clear interrupt status\n+            Thread.currentThread().interrupted();  \/\/ clear interrupted status\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/SelectWithConsumer.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @summary Invoking wakeup on closed Selector can throw NPE if close resets interrupt status\n+ * @summary Invoking wakeup on closed Selector can throw NPE if close resets interrupted status\n","filename":"test\/jdk\/java\/nio\/channels\/Selector\/WakeupAfterClose.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,1 +109,1 @@\n-     * Test interrupt status set before read\n+     * Test interrupted status set before read\n@@ -206,1 +206,1 @@\n-     * Test interrupt status set before timed read\n+     * Test interrupted status set before timed read\n@@ -260,1 +260,1 @@\n-     * Test interrupt status set before write\n+     * Test interrupted status set before write\n","filename":"test\/jdk\/java\/nio\/channels\/SocketChannel\/AdaptorStreams.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -256,1 +256,1 @@\n-     * Test calling select with interrupt status set.\n+     * Test calling select with interrupted status set.\n@@ -273,1 +273,1 @@\n-     * Test calling select with interrupt status set and thread is pinned.\n+     * Test calling select with interrupted status set and thread is pinned.\n","filename":"test\/jdk\/java\/nio\/channels\/vthread\/SelectorOps.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @summary Test invoking Files methods with the interrupt status set\n+ * @summary Test invoking Files methods with the interrupted status set\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CallWithInterruptSet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -123,1 +123,1 @@\n-                    throw new RuntimeException(\"Interrupt status was not set\");\n+                    throw new RuntimeException(\"Interrupted status was not set\");\n","filename":"test\/jdk\/java\/nio\/file\/Files\/InterruptCopy.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- * @summary CompletableFuture.get may swallow interrupt status\n+ * @summary CompletableFuture.get may swallow interrupted status\n@@ -41,3 +41,3 @@\n- * with the interrupt status set. CompletableFuture.get should either complete\n- * immediately with the interrupt status set, or else throw InterruptedException\n- * with the interrupt status cleared.\n+ * with the interrupted status set. CompletableFuture.get should either complete\n+ * immediately with the interrupted status set, or else throw InterruptedException\n+ * with the interrupted status cleared.\n@@ -66,1 +66,1 @@\n-                            \"interrupt status not cleared, run=\" + i);\n+                            \"interrupted status not cleared, run=\" + i);\n","filename":"test\/jdk\/java\/util\/concurrent\/CompletableFuture\/LostInterrupt.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-                            \"Future.get completed with interrupt status not set\"));\n+                            \"Future.get completed with interrupted status not set\"));\n@@ -65,1 +65,1 @@\n-                            \"InterruptedException with interrupt status set\"));\n+                            \"InterruptedException with interrupted status set\"));\n","filename":"test\/jdk\/java\/util\/concurrent\/CompletableFuture\/SwallowedInterruptedException.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -210,1 +210,1 @@\n-     * Test invoking close with interrupt status set.\n+     * Test invoking close with interrupted status set.\n@@ -228,1 +228,1 @@\n-            Thread.interrupted();  \/\/ clear interrupt status\n+            Thread.interrupted();  \/\/ clear interrupted status\n@@ -262,1 +262,1 @@\n-            Thread.interrupted();  \/\/ clear interrupt status\n+            Thread.interrupted();  \/\/ clear interrupted status\n","filename":"test\/jdk\/java\/util\/concurrent\/ExecutorService\/CloseTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -287,1 +287,1 @@\n-     * Test invokeAny with interrupt status set.\n+     * Test invokeAny with interrupted status set.\n@@ -533,1 +533,1 @@\n-     * Test invokeAll with interrupt status set.\n+     * Test invokeAll with interrupted status set.\n@@ -558,1 +558,1 @@\n-     * Test timed-invokeAll with interrupt status set.\n+     * Test timed-invokeAll with interrupted status set.\n","filename":"test\/jdk\/java\/util\/concurrent\/ExecutorService\/InvokeTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -428,1 +428,1 @@\n-     * Test join with interrupt status set.\n+     * Test join with interrupted status set.\n@@ -447,1 +447,1 @@\n-                assertFalse(Thread.interrupted());   \/\/ interrupt status should be cleared\n+                assertFalse(Thread.interrupted());   \/\/ interrupted status should be cleared\n@@ -473,1 +473,1 @@\n-                assertFalse(Thread.interrupted());   \/\/ interrupt status should be clear\n+                assertFalse(Thread.interrupted());   \/\/ interrupted status should be clear\n@@ -748,1 +748,1 @@\n-     * Test close with interrupt status set.\n+     * Test close with interrupted status set.\n@@ -779,1 +779,1 @@\n-            \/\/ invoke close with interrupt status set\n+            \/\/ invoke close with interrupted status set\n@@ -784,1 +784,1 @@\n-                assertTrue(Thread.interrupted());   \/\/ clear interrupt status\n+                assertTrue(Thread.interrupted());   \/\/ clear interrupted status\n@@ -832,1 +832,1 @@\n-                assertTrue(Thread.interrupted());   \/\/ clear interrupt status\n+                assertTrue(Thread.interrupted());   \/\/ clear interrupted status\n","filename":"test\/jdk\/java\/util\/concurrent\/StructuredTaskScope\/StructuredTaskScopeTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-     * Invoke close with interrupt status set.\n+     * Invoke close with interrupted status set.\n@@ -596,1 +596,1 @@\n-     * Test invokeAny with interrupt status set.\n+     * Test invokeAny with interrupted status set.\n@@ -825,1 +825,1 @@\n-     * Test untimed-invokeAll with interrupt status set.\n+     * Test untimed-invokeAll with interrupted status set.\n@@ -849,1 +849,1 @@\n-     * Test timed-invokeAll with interrupt status set.\n+     * Test timed-invokeAll with interrupted status set.\n","filename":"test\/jdk\/java\/util\/concurrent\/ThreadPerTaskExecutor\/ThreadPerTaskExecutorTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -835,1 +835,1 @@\n-     * Triggers test case failure if interrupt status is set in the main thread.\n+     * Triggers test case failure if interrupted status is set in the main thread.\n@@ -851,1 +851,1 @@\n-            tearDownFail(\"interrupt status set in main thread\");\n+            tearDownFail(\"interrupted status set in main thread\");\n@@ -1463,1 +1463,1 @@\n-     * be interrupted.  Clears the interrupt status before returning.\n+     * be interrupted.  Clears the interrupted status before returning.\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/JSR166TestCase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -413,1 +413,1 @@\n-     * Non-interruptible operations ignore and preserve interrupt status\n+     * Non-interruptible operations ignore and preserve interrupted status\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/StampedLockTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-            throw new Error(\"Wrong interrupt status\");\n+            throw new Error(\"Wrong interrupted status\");\n","filename":"test\/jdk\/java\/util\/zip\/InterruptibleZip.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -533,1 +533,1 @@\n-     * Test awaitAll with interrupt status set, should interrupt thread.\n+     * Test awaitAll with interrupted status set, should interrupt thread.\n@@ -553,1 +553,1 @@\n-            \/\/ invoke awaitAll with interrupt status set.\n+            \/\/ invoke awaitAll with interrupted status set.\n@@ -559,1 +559,1 @@\n-                \/\/ interrupt status should be clear\n+                \/\/ interrupted status should be clear\n@@ -563,1 +563,1 @@\n-            \/\/ invoke awaitAll(Duration) with interrupt status set.\n+            \/\/ invoke awaitAll(Duration) with interrupted status set.\n@@ -571,1 +571,1 @@\n-                \/\/ interrupt status should be clear\n+                \/\/ interrupted status should be clear\n@@ -612,1 +612,1 @@\n-                \/\/ interrupt status should be clear\n+                \/\/ interrupted status should be clear\n@@ -623,1 +623,1 @@\n-                \/\/ interrupt status should be clear\n+                \/\/ interrupted status should be clear\n@@ -844,1 +844,1 @@\n-     * Test close with interrupt status set, should not interrupt threads.\n+     * Test close with interrupted status set, should not interrupt threads.\n","filename":"test\/jdk\/jdk\/internal\/misc\/ThreadFlock\/ThreadFlockTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-                \/\/ Force the interrupt flag to be set on the thread that\n+                \/\/ Force the interrupted flag to be set on the thread that\n","filename":"test\/jdk\/sun\/security\/ssl\/Stapling\/java.base\/sun\/security\/ssl\/StatusResponseManagerTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}