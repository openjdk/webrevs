{"files":[{"patch":"@@ -642,6 +642,3 @@\n-  if (_old_generation->is_doing_mixed_evacuations()) {\n-    \/\/ Do not try to start an old cycle if we are waiting for old regions to be evacuated (we need\n-    \/\/ a young cycle for this). Note that the young heuristic has a feature to expedite old evacuations.\n-    \/\/ Future refinement: under certain circumstances, we might be more sophisticated about this choice.\n-    \/\/ For example, we could choose to abandon the previous old collection before it has completed evacuations.\n-    log_debug(gc)(\"Not starting an old cycle because we are waiting for mixed evacuations\");\n+  if (!_old_generation->is_idle()) {\n+    \/\/ Do not try to start an old cycle if old-gen is marking, doing mixed evacuations, or coalescing and filling.\n+    log_debug(gc)(\"Not starting an old cycle because old gen is busy\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -124,0 +124,1 @@\n+        log_debug(gc)(\"Young heuristics declines to trigger because old_time_elapsed < ShenandoahMinimumOldTimeMs\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -70,12 +70,1 @@\n-        if (_young_heuristics->should_start_gc()) {\n-          \/\/ Give the old generation a chance to run. The old generation cycle\n-          \/\/ begins with a 'bootstrap' cycle that will also collect young.\n-          if (start_old_cycle()) {\n-            log_debug(gc)(\"Heuristics request for old collection accepted\");\n-            _young_heuristics->cancel_trigger_request();\n-            _old_heuristics->cancel_trigger_request();\n-          } else if (request_concurrent_gc(_heap->young_generation())) {\n-            log_debug(gc)(\"Heuristics request for young collection accepted\");\n-            _young_heuristics->cancel_trigger_request();\n-          }\n-        } else if (_old_heuristics->should_resume_old_cycle() || _old_heuristics->should_start_gc()) {\n+        if (_old_heuristics->should_resume_old_cycle()) {\n@@ -86,0 +75,7 @@\n+        } else if (start_old_cycle()) {\n+          log_debug(gc)(\"Heuristics request for old collection accepted\");\n+          _young_heuristics->cancel_trigger_request();\n+          _old_heuristics->cancel_trigger_request();\n+        } else if (start_young_cycle()) {\n+            log_debug(gc)(\"Heuristics request for young collection accepted\");\n+            _young_heuristics->cancel_trigger_request();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.cpp","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"}]}