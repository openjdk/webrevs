{"files":[{"patch":"@@ -252,0 +252,1 @@\n+                isValid = false;\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/Validator.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -223,0 +223,10 @@\n+    @Test\n+    public void testValidateJar() throws IOException {\n+        var zip = Path.of(\"Regular.jar\");\n+        writeManifestAsFirstSecondAndFourthEntry(zip, false, false);\n+        try {\n+            jar(\"--validate --file \" + zip.toString());\n+        } catch (IOException e) {\n+            fail(\"Expecting zero exit code\");\n+        }\n+    }\n@@ -230,0 +240,1 @@\n+            fail(\"Expecting non-zero exit code\");\n@@ -245,0 +256,1 @@\n+            fail(\"Expecting non-zero exit code\");\n@@ -261,0 +273,1 @@\n+            fail(\"Expecting non-zero exit code\");\n@@ -276,3 +289,2 @@\n-            String err = jar(\"--validate --file \" + f.toString());\n-            System.out.println(err);\n-            assertTrue(err.contains(\"Warning: Central directory and local file header entries are not in the same order\"));\n+            jar(\"--validate --file \" + f.toString());\n+            fail(\"Expecting non-zero exit code\");\n@@ -280,1 +292,2 @@\n-            fail(\"Ordering is not guaranteed by specification\");\n+            var err = e.getMessage();\n+            assertTrue(err.contains(\"Warning: Central directory and local file header entries are not in the same order\"));\n@@ -290,0 +303,1 @@\n+            fail(\"Expecting non-zero exit code\");\n@@ -320,4 +334,0 @@\n-\n-    private Stream<Path> mkpath(String... args) {\n-        return Arrays.stream(args).map(d -> Path.of(\".\", d.split(\"\/\")));\n-    }\n","filename":"test\/jdk\/tools\/jar\/ValidatorTest.java","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"}]}