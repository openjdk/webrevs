{"files":[{"patch":"@@ -450,5 +450,2 @@\n-        try (ZipFile zf = new ZipFile(file);\n-            ZipInputStream zis = new ZipInputStream(new BufferedInputStream(\n-                    new FileInputStream(file)))) {\n-\n-            return Validator.validate(this, zf, zis);\n+        try {\n+            return Validator.validate(this, file);\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/Main.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,0 +28,3 @@\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n@@ -102,2 +105,6 @@\n-    static boolean validate(Main main, ZipFile zf, ZipInputStream zis) throws IOException {\n-        return new Validator(main, zf, zis).validate();\n+    static boolean validate(Main main, File zipFile) throws IOException {\n+        try (ZipFile zf = new ZipFile(zipFile);\n+            ZipInputStream zis = new ZipInputStream(new BufferedInputStream(\n+                    new FileInputStream(zipFile)))) {\n+            return new Validator(main, zf, zis).validate();\n+        }\n@@ -119,1 +126,1 @@\n-     * @param entryName CEN\/LOC header file name field entry\n+     * @param entryName ZIP entry name\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/Validator.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,2 +110,2 @@\n-:   Validate the contents of the jar archive.\n-    See `Integrity of a jar Archive` section below for more details.\n+:   Validate the contents of the JAR file.\n+    See `Integrity of a JAR File` section below for more details.\n@@ -220,2 +220,2 @@\n-## Integrity of a jar Archive\n-As a jar archive is based on ZIP format, it is possible to create a jar archive using tools\n+## Integrity of a JAR File\n+As a JAR file is based on ZIP format, it is possible to create a JAR file using tools\n@@ -223,1 +223,1 @@\n-integrity checks against a jar archive:\n+integrity checks against a JAR file:\n@@ -225,2 +225,2 @@\n-- That there are no duplicate Zip Entry file names\n-- Verify that the Zip Entry file name:\n+- That there are no duplicate Zip entry file names\n+- Verify that the Zip entry file name:\n@@ -235,4 +235,4 @@\n-The jar tool returns a status code of 0 if there were no integrity issues encountered, otherwise\n-a non-zero status code would be returned.\n-When an integrity issue is reported, it will often require that the jar file is re-created by the\n-original source of the jar file.\n+The jar tool returns an exit code of 0 if there were no integrity issues encountered, otherwise\n+a non-zero exit code would be returned.\n+When an integrity issue is reported, it will often require that the JAR file is re-created by the\n+original source of the JAR file.\n","filename":"src\/jdk.jartool\/share\/man\/jar.md","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"}]}