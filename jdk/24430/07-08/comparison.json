{"files":[{"patch":"@@ -65,1 +65,1 @@\n-     * - path element does not include '..'\n+     * - path element does not include '.' or '..'\n@@ -116,2 +116,2 @@\n-     * Also validate that the file name is not \".\" and that any name element is\n-     * not equal to \"..\"\n+     * Also validate that the file name is not \".\" or \"..\", and that any name\n+     * element is not equal to \".\" or \"..\"\n@@ -131,2 +131,6 @@\n-     * NOTE: This implementation assumes CEN entries are to be added before\n-     *       add any LOC entries.\n+     *\n+     * NOTE: In order to check the encounter order based on the CEN listing,\n+     *       this implementation assumes CEN entries are to be added before\n+     *       add any LOC entries. That is, addCenEntry should be called before\n+     *       calls to addLocEntry to ensure encounter order can be compared\n+     *       properly.\n@@ -155,0 +159,3 @@\n+            \/**\n+             * True if this entry is not in the directory.\n+             *\/\n@@ -206,1 +213,0 @@\n-                assert !entryInfo.cen().isPlaceHolder();\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/Validator.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -284,4 +284,2 @@\n-\\                             This option also check for multiple copies of same file\\n\\\n-\\                             or invalid file names that could lead to unintended effects.\\n\\\n-\\                             Check with the developer to ensure the jar archive integrity\\n\\\n-\\                             when warnings observed after using this option.\n+\\                             Warn if there are duplicate or invalid file names\n+\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/resources\/jar.properties","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -111,2 +111,0 @@\n-    Check with the developer to ensure the jar archive integrity\n-    when warnings observed after using this option.\n@@ -223,14 +221,19 @@\n-As a jar archive is based on ZIP format, it is possible to manufacture a jar archive using tools\n-other than the `jar` command. The `--validate` options checks a jar archive for some integrity\n-straights:\n-\n--   Entries in the centrail directory should be consistent with the local file headers.\n--   Same names entry should only have one copy. Duplicated entries in a jar file could lead to\n-    override desired content.\n--   Entries names should be valid. An entry name should not:\n-    - contain a drive or device letter,\n-    - contain a leading slash\n-    - contain backwards slashes '\\'\n-    - have any name element is \".\" or \"..\"\n--   The API exported by a multi-release jar archive is consistent across all different release\n-    versions.\n+As a jar archive is based on ZIP format, it is possible to create a jar archive using tools\n+other than the `jar` command. The `--validate` option performs the following integrity checks:\n+\n+- That there are no duplicate Zip Entry file names\n+- Verify that the Zip Entry file name:\n+    - is not an absolute path\n+    - the file name is not '.' or '..'\n+    - does not contain a backslash, '\\\\'\n+    - does not contain a drive letter\n+    - path element does not include '.' or '..\n+- The API exported by a multi-release jar archive is consistent across all different release\n+  versions.\n+\n+The jar tool will return a status code of 0 if there were no integrity issues encountered and a\n+status code of 1 an issue was found. When an integrity issue is reported, it will often require\n+that the jar file is re-created by the original source of the jar file.\n+\n+Check with the developer to ensure the jar archive integrity when warnings observed after using\n+the `--validate` option.\n","filename":"src\/jdk.jartool\/share\/man\/jar.md","additions":19,"deletions":16,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -324,15 +324,0 @@\n-\n-    private void rm(String cmdline) {\n-        System.out.println(\"rm -rf \" + cmdline);\n-        mkpath(cmdline.split(\" +\")).forEach(p -> {\n-            try {\n-                if (Files.isDirectory(p)) {\n-                    FileUtils.deleteFileTreeWithRetry(p);\n-                } else {\n-                    FileUtils.deleteFileIfExistsWithRetry(p);\n-                }\n-            } catch (IOException x) {\n-                throw new UncheckedIOException(x);\n-            }\n-        });\n-    }\n","filename":"test\/jdk\/tools\/jar\/ValidatorTest.java","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"}]}