{"files":[{"patch":"@@ -43,7 +43,1 @@\n-        \/\/ transformations w\/ only 2 components\n-        test(\"AES\/\", provider);\n-        test(\"AES\/ \", provider);\n-        test(\"AES\/CBC\", provider);\n-        test(\"PBEWithHmacSHA512\/224AndAES_128\/\", provider);\n-        test(\"PBEWithHmacSHA512\/256AndAES_128\/ \", provider);\n-        test(\"PBEWithHmacSHA512\/224AndAES_128\/CBC\", provider);\n+        System.out.println(\"Testing against \" + provider.getName());\n@@ -51,17 +45,25 @@\n-        \/\/ 3-component transformations w\/ empty component(s)\n-        test(\"AES\/\/\", provider);\n-        test(\"AES\/ \/\", provider);\n-        test(\"AES\/\/ \", provider);\n-        test(\"AES\/ \/ \", provider);\n-        test(\"AES\/CBC\/\", provider);\n-        test(\"AES\/CBC\/ \", provider);\n-        test(\"AES\/\/PKCS5Padding\", provider);\n-        test(\"AES\/ \/NoPadding\", provider);\n-        test(\"PBEWithHmacSHA512\/224AndAES_128\/\/\", provider);\n-        test(\"PBEWithHmacSHA512\/224AndAES_128\/ \/\", provider);\n-        test(\"PBEWithHmacSHA512\/224AndAES_128\/\/ \", provider);\n-        test(\"PBEWithHmacSHA512\/224AndAES_128\/ \/ \", provider);\n-        test(\"PBEWithHmacSHA512\/256AndAES_128\/CBC\/\", provider);\n-        test(\"PBEWithHmacSHA512\/256AndAES_128\/CBC\/ \", provider);\n-        test(\"PBEWithHmacSHA512\/256AndAES_128\/\/PKCS5Padding\", provider);\n-        test(\"PBEWithHmacSHA512\/256AndAES_128\/ \/PKCS5Padding\", provider);\n+        String[] testTransformations = {\n+            \/\/ transformations w\/ only 1 component, i.e. algo\n+            \" \",\n+            \/\/ transformations w\/ only 2 components\n+            \"AES\/\", \"AES\/ \", \"AES\/CBC\",\n+            \"PBEWithHmacSHA512\/224AndAES_128\/\",\n+            \"PBEWithHmacSHA512\/256AndAES_128\/ \",\n+            \"PBEWithHmacSHA512\/224AndAES_128\/CBC\",\n+            \/\/ 3-component transformations w\/ empty component(s)\n+            \"AES\/\/\", \"AES\/ \/\", \"AES\/\/ \", \"AES\/ \/ \",\n+            \"AES\/CBC\/\", \"AES\/CBC\/ \",\n+            \"AES\/\/PKCS5Padding\", \"AES\/ \/NoPadding\",\n+            \"PBEWithHmacSHA512\/224AndAES_128\/\/\",\n+            \"PBEWithHmacSHA512\/224AndAES_128\/ \/\",\n+            \"PBEWithHmacSHA512\/224AndAES_128\/\/ \",\n+            \"PBEWithHmacSHA512\/224AndAES_128\/ \/ \",\n+            \"PBEWithHmacSHA512\/256AndAES_128\/CBC\/\",\n+            \"PBEWithHmacSHA512\/256AndAES_128\/CBC\/ \",\n+            \"PBEWithHmacSHA512\/256AndAES_128\/\/PKCS5Padding\",\n+            \"PBEWithHmacSHA512\/256AndAES_128\/ \/PKCS5Padding\",\n+        };\n+\n+        for (String t : testTransformations) {\n+            test(t, provider);\n+        };\n@@ -70,3 +72,1 @@\n-    private static void test(String transformation, Provider provider)\n-            throws Exception {\n-        System.out.println(\"Testing \" + transformation);\n+    private static void test(String t, Provider p) throws Exception {\n@@ -74,2 +74,2 @@\n-            Cipher c = Cipher.getInstance(transformation, provider);\n-            throw new RuntimeException(\"Expected NSAE not thrown\");\n+            Cipher c = Cipher.getInstance(t, p);\n+            throw new RuntimeException(\"Should throw NSAE for \\'\" + t + \"\\'\");\n@@ -77,1 +77,2 @@\n-            System.out.println(\"Expected NSAE thrown: \" + nsae.getMessage());\n+            \/\/ transformation info is already in the NSAE message\n+            System.out.println(\"Expected NSAE: \" + nsae.getMessage());\n","filename":"test\/jdk\/javax\/crypto\/Cipher\/TestEmptyModePadding.java","additions":31,"deletions":30,"binary":false,"changes":61,"status":"modified"}]}