{"files":[{"patch":"@@ -101,4 +101,5 @@\n-        if (filesLoader != null) {\n-            filesLoader.loadThread.interrupt();\n-            filesLoader.cancelRunnables();\n-            filesLoader = null;\n+        synchronized (this) {\n+            if (filesLoader != null) {\n+                filesLoader.loadThread.interrupt();\n+                filesLoader = null;\n+            }\n@@ -159,4 +160,4 @@\n-        if (filesLoader != null) {\n-            filesLoader.loadThread.interrupt();\n-            filesLoader.cancelRunnables();\n-        }\n+        synchronized (this) {\n+            if (filesLoader != null) {\n+                filesLoader.loadThread.interrupt();\n+            }\n@@ -164,3 +165,4 @@\n-        int fid = fetchID.incrementAndGet();\n-        setBusy(true, fid);\n-        filesLoader = new FilesLoader(currentDirectory, fid);\n+            int fid = fetchID.incrementAndGet();\n+            setBusy(true, fid);\n+            filesLoader = new FilesLoader(currentDirectory, fid);\n+        }\n@@ -279,1 +281,0 @@\n-        private volatile DoChangeContents runnable;\n@@ -300,2 +301,0 @@\n-            FileSystemView fileSystem = fileSystemView;\n-\n@@ -306,1 +305,1 @@\n-            File[] list = fileSystem.getFiles(currentDirectory, useFileHiding);\n+            File[] list = fileSystemView.getFiles(currentDirectory, useFileHiding);\n@@ -313,1 +312,1 @@\n-            Vector<File> newFiles = new Vector<File>();\n+            final Vector<File> newFiles = new Vector<File>();\n@@ -315,1 +314,1 @@\n-            \/\/ run through the file list, add directories and selectable files to fileCache\n+            \/\/ Run through the file list, add directories and selectable files to fileCache\n@@ -342,1 +341,1 @@\n-            runnable = ShellFolder.invoke(new Callable<DoChangeContents>() {\n+            DoChangeContents runnable = ShellFolder.invoke(new Callable<DoChangeContents>() {\n@@ -398,1 +397,1 @@\n-                                cancelRunnables();\n+                                return null;\n@@ -411,6 +410,0 @@\n-\n-        private void cancelRunnables() {\n-            if (runnable != null) {\n-                runnable.cancel();\n-            }\n-        }\n@@ -525,1 +518,0 @@\n-        private boolean doFire = true;\n@@ -527,2 +519,2 @@\n-        private int addStart = 0;\n-        private int remStart = 0;\n+        private final int addStart;\n+        private final int remStart;\n@@ -530,2 +522,3 @@\n-        DoChangeContents(List<File> addFiles, int addStart, List<File> remFiles,\n-                         int remStart, int fid) {\n+        private DoChangeContents(List<File> addFiles, int addStart,\n+                                 List<File> remFiles, int remStart,\n+                                 int fid) {\n@@ -539,3 +532,5 @@\n-        synchronized void cancel() {\n-            doFire = false;\n-        }\n+        @Override\n+        public void run() {\n+            if (fetchID.get() != fid) {\n+                return;\n+            }\n@@ -543,13 +538,6 @@\n-        public synchronized void run() {\n-            if (fetchID.get() == fid && doFire) {\n-                int remSize = (remFiles == null) ? 0 : remFiles.size();\n-                int addSize = (addFiles == null) ? 0 : addFiles.size();\n-                synchronized(fileCache) {\n-                    if (remSize > 0) {\n-                        fileCache.removeAll(remFiles);\n-                    }\n-                    if (addSize > 0) {\n-                        fileCache.addAll(addStart, addFiles);\n-                    }\n-                    files = null;\n-                    directories = null;\n+            final int remSize = (remFiles == null) ? 0 : remFiles.size();\n+            final int addSize = (addFiles == null) ? 0 : addFiles.size();\n+            final int cacheSize;\n+            synchronized (fileCache) {\n+                if (remSize > 0) {\n+                    fileCache.removeAll(remFiles);\n@@ -557,6 +545,2 @@\n-                if (remSize > 0 && addSize == 0) {\n-                    fireIntervalRemoved(BasicDirectoryModel.this, remStart, remStart + remSize - 1);\n-                } else if (addSize > 0 && remSize == 0 && addStart + addSize <= fileCache.size()) {\n-                    fireIntervalAdded(BasicDirectoryModel.this, addStart, addStart + addSize - 1);\n-                } else {\n-                    fireContentsChanged();\n+                if (addSize > 0) {\n+                    fileCache.addAll(addStart, addFiles);\n@@ -564,0 +548,10 @@\n+                files = null;\n+                directories = null;\n+                cacheSize = fileCache.size();\n+            }\n+            if (remSize > 0 && addSize == 0) {\n+                fireIntervalRemoved(BasicDirectoryModel.this, remStart, remStart + remSize - 1);\n+            } else if (addSize > 0 && remSize == 0 && addStart + addSize <= cacheSize) {\n+                fireIntervalAdded(BasicDirectoryModel.this, addStart, addStart + addSize - 1);\n+            } else {\n+                fireContentsChanged();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicDirectoryModel.java","additions":46,"deletions":52,"binary":false,"changes":98,"status":"modified"}]}