{"files":[{"patch":"@@ -158,1 +158,1 @@\n-  inline MallocMemory* by_tag(MemTag mem_tag) {\n+  inline MallocMemory* by_type(MemTag mem_tag) {\n@@ -163,1 +163,1 @@\n-  inline const MallocMemory* by_tag(MemTag mem_tag) const {\n+  inline const MallocMemory* by_type(MemTag mem_tag) const {\n@@ -223,1 +223,1 @@\n-     as_snapshot()->by_tag(mem_tag)->record_malloc(size);\n+     as_snapshot()->by_type(mem_tag)->record_malloc(size);\n@@ -228,1 +228,1 @@\n-     as_snapshot()->by_tag(mem_tag)->record_free(size);\n+     as_snapshot()->by_type(mem_tag)->record_free(size);\n@@ -233,1 +233,1 @@\n-     as_snapshot()->by_tag(mem_tag)->record_new_arena();\n+     as_snapshot()->by_type(mem_tag)->record_new_arena();\n@@ -237,1 +237,1 @@\n-     as_snapshot()->by_tag(mem_tag)->record_arena_free();\n+     as_snapshot()->by_type(mem_tag)->record_arena_free();\n@@ -241,1 +241,1 @@\n-     as_snapshot()->by_tag(mem_tag)->record_arena_size_change(size);\n+     as_snapshot()->by_type(mem_tag)->record_arena_size_change(size);\n","filename":"src\/hotspot\/share\/nmt\/mallocTracker.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-        const MallocMemory* mm = as_snapshot()->by_tag(mem_tag);\n+        const MallocMemory* mm = as_snapshot()->by_type(mem_tag);\n","filename":"src\/hotspot\/share\/nmt\/mallocTracker.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-int compare_malloc_site_and_tag(const MallocSite& s1, const MallocSite& s2) {\n+int compare_malloc_site_and_type(const MallocSite& s1, const MallocSite& s2) {\n@@ -234,2 +234,2 @@\n-    case by_site_and_tag:\n-      malloc_sites_to_allocation_site_and_tag_order();\n+    case by_site_and_type:\n+      malloc_sites_to_allocation_site_and_type_order();\n@@ -275,1 +275,1 @@\n-  if (_malloc_sites_order != by_site && _malloc_sites_order != by_site_and_tag) {\n+  if (_malloc_sites_order != by_site && _malloc_sites_order != by_site_and_type) {\n@@ -285,3 +285,3 @@\n-void MemBaseline::malloc_sites_to_allocation_site_and_tag_order() {\n-  if (_malloc_sites_order != by_site_and_tag) {\n-    SortedLinkedList<MallocSite, compare_malloc_site_and_tag> tmp;\n+void MemBaseline::malloc_sites_to_allocation_site_and_type_order() {\n+  if (_malloc_sites_order != by_site_and_type) {\n+    SortedLinkedList<MallocSite, compare_malloc_site_and_type> tmp;\n@@ -292,1 +292,1 @@\n-    _malloc_sites_order = by_site_and_tag;\n+    _malloc_sites_order = by_site_and_type;\n","filename":"src\/hotspot\/share\/nmt\/memBaseline.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    by_site_and_tag \/\/ by call site and memory tag\n+    by_site_and_type \/\/ by call site and memory tag\n@@ -149,1 +149,1 @@\n-    return _malloc_memory_snapshot.by_tag(mem_tag);\n+    return _malloc_memory_snapshot.by_type(mem_tag);\n@@ -154,1 +154,1 @@\n-    return _virtual_memory_snapshot.by_tag(mem_tag);\n+    return _virtual_memory_snapshot.by_type(mem_tag);\n@@ -207,1 +207,1 @@\n-  void malloc_sites_to_allocation_site_and_tag_order();\n+  void malloc_sites_to_allocation_site_and_type_order();\n","filename":"src\/hotspot\/share\/nmt\/memBaseline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -186,2 +186,2 @@\n-    MallocMemory* malloc_memory = _malloc_snapshot->by_tag(mem_tag);\n-    VirtualMemory* virtual_memory = _vm_snapshot->by_tag(mem_tag);\n+    MallocMemory* malloc_memory = _malloc_snapshot->by_type(mem_tag);\n+    VirtualMemory* virtual_memory = _vm_snapshot->by_type(mem_tag);\n@@ -202,1 +202,1 @@\n-      (const VirtualMemory*)_vm_snapshot->by_tag(mtThreadStack);\n+      (const VirtualMemory*)_vm_snapshot->by_type(mtThreadStack);\n@@ -244,1 +244,1 @@\n-     _vm_snapshot->by_tag(mtThreadStack);\n+     _vm_snapshot->by_type(mtThreadStack);\n@@ -810,2 +810,2 @@\n-  MallocSiteIterator early_itr = _early_baseline.malloc_sites(MemBaseline::by_site_and_tag);\n-  MallocSiteIterator current_itr = _current_baseline.malloc_sites(MemBaseline::by_site_and_tag);\n+  MallocSiteIterator early_itr = _early_baseline.malloc_sites(MemBaseline::by_site_and_type);\n+  MallocSiteIterator current_itr = _current_baseline.malloc_sites(MemBaseline::by_site_and_type);\n","filename":"src\/hotspot\/share\/nmt\/memReporter.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    VirtualMemory* summary = file->_summary.by_tag(NMTUtil::index_to_tag(i));\n+    VirtualMemory* summary = file->_summary.by_type(NMTUtil::index_to_tag(i));\n@@ -56,1 +56,1 @@\n-    VirtualMemory* summary = file->_summary.by_tag(NMTUtil::index_to_tag(i));\n+    VirtualMemory* summary = file->_summary.by_type(NMTUtil::index_to_tag(i));\n@@ -180,1 +180,1 @@\n-    VirtualMemory* snap = snapshot->by_tag(tag);\n+    VirtualMemory* snap = snapshot->by_type(tag);\n","filename":"src\/hotspot\/share\/nmt\/memoryFileTracker.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        f(NMTUtil::index_to_tag(i), file->_summary.by_tag(NMTUtil::index_to_tag(i)));\n+        f(NMTUtil::index_to_tag(i), file->_summary.by_type(NMTUtil::index_to_tag(i)));\n","filename":"src\/hotspot\/share\/nmt\/memoryFileTracker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n-#define MEMORY_TAG_DECLARE_NAME(tag, human_readable) \\\n-  { #tag, human_readable },\n+#define MEMORY_TAG_DECLARE_NAME(type, human_readable) \\\n+  { #type, human_readable },\n","filename":"src\/hotspot\/share\/nmt\/nmtCommon.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-    assert(tag_is_valid(mem_tag), \"Invalid tag (%u)\", (unsigned)mem_tag);\n+    assert(tag_is_valid(mem_tag), \"Invalid type (%u)\", (unsigned)mem_tag);\n","filename":"src\/hotspot\/share\/nmt\/nmtCommon.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    const MallocMemory* mm = ms->by_tag(mem_tag);\n+    const MallocMemory* mm = ms->by_type(mem_tag);\n@@ -86,1 +86,1 @@\n-    const VirtualMemory* vm = vms->by_tag(mem_tag);\n+    const VirtualMemory* vm = vms->by_type(mem_tag);\n","filename":"src\/hotspot\/share\/nmt\/nmtUsage.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -112,2 +112,2 @@\n-    reserved = VirtualMemorySummary::as_snapshot()->by_tag(tag)->reserved();\n-    committed = VirtualMemorySummary::as_snapshot()->by_tag(tag)->committed();\n+    reserved = VirtualMemorySummary::as_snapshot()->by_type(tag)->reserved();\n+    committed = VirtualMemorySummary::as_snapshot()->by_type(tag)->committed();\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-  inline VirtualMemory* by_tag(MemTag mem_tag) {\n+  inline VirtualMemory* by_type(MemTag mem_tag) {\n@@ -119,1 +119,1 @@\n-  inline const VirtualMemory* by_tag(MemTag mem_tag) const {\n+  inline const VirtualMemory* by_type(MemTag mem_tag) const {\n@@ -159,1 +159,1 @@\n-    as_snapshot()->by_tag(mem_tag)->reserve_memory(size);\n+    as_snapshot()->by_type(mem_tag)->reserve_memory(size);\n@@ -163,1 +163,1 @@\n-    as_snapshot()->by_tag(mem_tag)->commit_memory(size);\n+    as_snapshot()->by_type(mem_tag)->commit_memory(size);\n@@ -167,1 +167,1 @@\n-    as_snapshot()->by_tag(mem_tag)->uncommit_memory(size);\n+    as_snapshot()->by_type(mem_tag)->uncommit_memory(size);\n@@ -171,1 +171,1 @@\n-    as_snapshot()->by_tag(mem_tag)->release_memory(size);\n+    as_snapshot()->by_type(mem_tag)->release_memory(size);\n@@ -179,2 +179,2 @@\n-    as_snapshot()->by_tag(from)->release_memory(size);\n-    as_snapshot()->by_tag(to)->reserve_memory(size);\n+    as_snapshot()->by_type(from)->release_memory(size);\n+    as_snapshot()->by_type(to)->reserve_memory(size);\n@@ -184,2 +184,2 @@\n-    as_snapshot()->by_tag(from)->uncommit_memory(size);\n-    as_snapshot()->by_tag(to)->commit_memory(size);\n+    as_snapshot()->by_type(from)->uncommit_memory(size);\n+    as_snapshot()->by_type(to)->commit_memory(size);\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.hpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    EXPECT_EQ(file->_summary.by_tag(mtTest)->committed(), sz(100));\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(100));\n@@ -38,1 +38,1 @@\n-    EXPECT_EQ(file->_summary.by_tag(mtTest)->committed(), sz(200));\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(200));\n@@ -40,1 +40,1 @@\n-    EXPECT_EQ(file->_summary.by_tag(mtTest)->committed(), sz(300));\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(300));\n@@ -42,1 +42,1 @@\n-    EXPECT_EQ(file->_summary.by_tag(mtTest)->committed(), sz(0));\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(0));\n@@ -44,1 +44,1 @@\n-    EXPECT_EQ(file->_summary.by_tag(mtTest)->committed(), sz(100));\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(100));\n@@ -46,1 +46,1 @@\n-    EXPECT_EQ(file->_summary.by_tag(mtTest)->committed(), sz(90));\n+    EXPECT_EQ(file->_summary.by_type(mtTest)->committed(), sz(90));\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmt_memoryfiletracker.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}