{"files":[{"patch":"@@ -3641,0 +3641,2 @@\n+#ifdef ASSERT\n+      os::print_memory_mappings((char*)start, bytes, tty);\n@@ -3642,0 +3644,1 @@\n+#endif\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,1 +54,2 @@\n-  MemTracker::record_virtual_memory_reserve((address)base, size, stack, mtThreadStack);\n+  MemTracker::NmtVirtualMemoryLocker nvml;\n+  VirtualMemoryTracker::Instance::add_reserved_region((address)base, size, stack, mtThreadStack);\n","filename":"src\/hotspot\/share\/nmt\/threadStackTracker.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-  MemTracker::assert_locked();\n+  MemTracker::NmtVirtualMemoryLocker nvml;\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,0 +113,3 @@\n+    if (MemTracker::NmtVirtualMemoryLocker::is_safe_to_use()) {\n+      assert_lock_strong(NmtVirtualMemory_lock);\n+    }\n","filename":"src\/hotspot\/share\/nmt\/vmtCommon.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}