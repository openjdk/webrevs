{"files":[{"patch":"@@ -198,18 +198,0 @@\n-\n-    SummaryDiff apply(SummaryDiff other) {\n-      SummaryDiff out;\n-      for (int i = 0; i < mt_number_of_tags; i++) {\n-        out.tag[i] = SingleDiff {\n-          this->tag[i].reserve + other.tag[i].reserve,\n-          this->tag[i].commit + other.tag[i].commit\n-        };\n-      }\n-      return out;\n-    }\n-\n-    void print_self() {\n-      for (int i = 0; i < mt_number_of_tags; i++) {\n-        if (tag[i].reserve == 0 && tag[i].commit == 0) { continue; }\n-        tty->print_cr(\"Flag %s R: \" INT64_FORMAT \" C: \" INT64_FORMAT, NMTUtil::tag_to_enum_name((MemTag)i), tag[i].reserve, tag[i].commit);\n-      }\n-    }\n@@ -217,1 +199,0 @@\n-\n@@ -253,1 +234,0 @@\n-\n@@ -258,1 +238,0 @@\n-\n@@ -260,8 +239,0 @@\n-\n-  void print_self() {\n-    visit_in_order([&](TreapNode* current) {\n-      tty->print(\"(%s) - %s - \", NMTUtil::tag_to_name(current->val().out.mem_tag()), statetype_to_string(current->val().out.type()));\n-      return true;\n-    });\n-    tty->cr();\n-  }\n@@ -269,1 +240,0 @@\n-\n","filename":"src\/hotspot\/share\/nmt\/vmatree.hpp","additions":0,"deletions":30,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-private:\n+ private:\n@@ -56,17 +56,0 @@\n-  enum class ProcessAppendResult {\n-    \/\/ Indicates that the candidate was indeed an append and process_append_candidate processed it\n-    \/\/ accordingly (added it to the StringConcat etc.)\n-    AppendWasAdded,\n-    \/\/ The candidate turned out not to be an append call. process_append_candidate did not do anything.\n-    CandidateIsNotAppend,\n-    \/\/ The candidate is an append call, but circumstances completely preventing string concat\n-    \/\/ optimization were detected and the optimization must abort.\n-    AbortOptimization\n-  };\n-\n-  \/\/ Called from build_candidate. Looks at an \"append candidate\", a call that might be a call\n-  \/\/ to StringBuilder::append. If so, adds it to the StringConcat.\n-  ProcessAppendResult process_append_candidate(CallStaticJavaNode* cnode, StringConcat* sc,\n-                                               ciMethod* m, ciSymbol* string_sig, ciSymbol* int_sig,\n-                                               ciSymbol* char_sig);\n-\n@@ -125,1 +108,1 @@\n-public:\n+ public:\n@@ -130,2 +113,1 @@\n-\n-private:\n+ private:\n","filename":"src\/hotspot\/share\/opto\/stringopts.hpp","additions":4,"deletions":22,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -150,90 +150,0 @@\n-\n-  static double treap_upsert(int n) {\n-    TreapCHeap<int, int, Cmp> treap;\n-    double st = os::elapsedTime();\n-    for (int i = 0; i < n; i++) {\n-      int a = (os::random() % n) * 100;\n-      treap.upsert(a, 0);\n-    }\n-    double d = os::elapsedTime() - st;\n-    return d;\n-  }\n-\n-  static double treap_remove(int n) {\n-    TreapCHeap<int, int, Cmp> treap;\n-    for (int i = 0; i < (n + 100); i++) {\n-      treap.upsert(i * 100, 0);\n-    }\n-    double st = os::elapsedTime();\n-    for (int i = 0; i < n; i++) {\n-      int a = (os::random() % n) * 100;\n-      treap.remove(a);\n-    }\n-    double d = os::elapsedTime() - st;\n-    return d;\n-  }\n-\n-\n-  static double sorted_list_insert(int n) {\n-    SortedLinkedList<ReservedMemoryRegion, compare_reserved_region_base> regions;\n-    const size_t page_size = 1024;\n-    double st = os::elapsedTime();\n-    for (int i = 0; i < n; i++) {\n-      int page_no = os::random() % n;\n-      ReservedMemoryRegion rmr((address) (1000UL + page_no * page_size), page_size - 128);\n-      regions.add(rmr);\n-    }\n-    return os::elapsedTime() - st;\n-  }\n-\n-  static double sorted_list_remove(int n) {\n-    SortedLinkedList<ReservedMemoryRegion, compare_reserved_region_base> regions;\n-    const size_t page_size = 1024;\n-    for (int i = 0; i < n; i++) {\n-      int page_no = i;\n-      ReservedMemoryRegion rmr((address) (1000UL + page_no * page_size), page_size - 128);\n-      regions.add(rmr);\n-    }\n-    double st = os::elapsedTime();\n-    for (int i = 0; i < n; i++) {\n-      int page_no = os::random() % n;\n-      ReservedMemoryRegion rmr((address) (1000UL + page_no * page_size), page_size - 128);\n-      regions.remove(rmr);\n-    }\n-    return os::elapsedTime() - st;\n-  }\n-\n-  static void compare_insert_SLL_with_Treap() {\n-    const int N = 10000;\n-    const int REPEATS = 10;\n-    double sll_sum = 0;\n-    double treap_sum = 0;\n-    int unexpected_count = 0;\n-    for (int i = 0; i < REPEATS; i++) {\n-      double d_sll = sorted_list_insert(N);\n-      double d_treap = treap_upsert(N);\n-      if (d_sll < d_treap) unexpected_count++;\n-      sll_sum += d_sll;\n-      treap_sum += d_treap;\n-    }\n-    tty->print_cr(\"Insert Test *** Unexp.Cnt: %d, SSL Avg: %lf, Treap Avg: %lf, SLL\/Treap: %lf\", unexpected_count, sll_sum \/ REPEATS, treap_sum \/ REPEATS, sll_sum \/ treap_sum);\n-    EXPECT_LE(unexpected_count, REPEATS \/ 2) << \"SSL Avg: \" << sll_sum \/ REPEATS << \" Treap Avg: \" << treap_sum \/ REPEATS;\n-  }\n-\n-  static void compare_remove_SLL_with_Treap() {\n-    const int N = 10000;\n-    const int REPEATS = 10;\n-    double sll_sum = 0;\n-    double treap_sum = 0;\n-    int unexpected_count = 0;\n-    for (int i = 0; i < REPEATS; i++) {\n-      double d_sll = sorted_list_remove(N);\n-      double d_treap = treap_remove(N);\n-      if (d_sll < d_treap) unexpected_count++;\n-      sll_sum += d_sll;\n-      treap_sum += d_treap;\n-    }\n-    tty->print_cr(\"Remove Test *** Unexp.Cnt: %d, SSL Avg: %lf, Treap Avg: %lf, SLL\/Treap: %lf\", unexpected_count, sll_sum \/ REPEATS, treap_sum \/ REPEATS, sll_sum \/ treap_sum);\n-    EXPECT_LE(unexpected_count, REPEATS \/ 2) << \"SSL Avg: \" << sll_sum \/ REPEATS << \" Treap Avg: \" << treap_sum \/ REPEATS;\n-  }\n-\n@@ -242,4 +152,0 @@\n-TEST_VM_F(NMTTreapTest, InsertingDuplicatesResultsInOneValue) {\n-  this->inserting_duplicates_results_in_one_value();\n-}\n-\n@@ -393,5 +299,0 @@\n-TEST_VM_F(NMTTreapTest, PerformanceComparison) {\n-  compare_insert_SLL_with_Treap();\n-  compare_remove_SLL_with_Treap();\n-}\n-\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmt_treap.cpp","additions":0,"deletions":99,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -323,0 +323,4 @@\n+        \/\/ On ARM Thumb the stack is not walkable, so the location is not available and\n+        \/\/ \"from\" string will not be present in the output.\n+        \/\/ Disable assertion for ARM32.\n+        String fromString = Platform.isARM() ? \"\" : \"from.*\";\n@@ -324,2 +328,2 @@\n-                            + Long.toHexString(addr + size)\n-                            + \"\\\\] committed \" + sizeString);\n+                           + Long.toHexString(addr + size)\n+                           + \"\\\\] committed \" + sizeString + \" \" + fromString);\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/VirtualAllocCommitMerge.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -174,2 +174,2 @@\n-                                      \" PreTouch amount: \" + pretouch_committed +\n-                                      \" NoPreTouch amount: \" + (no_pretouch_committed + expected_delta));\n+                                       \"PreTouch amount: \" + pretouch_committed +\n+                                       \"NoPreTouch amount: \" + (no_pretouch_committed + expected_delta));\n@@ -179,1 +179,1 @@\n-                                      \"Expected: \" + expected_delta + \" Actual: \" + actual_delta);\n+                                       \"Expected: \" + expected_delta + \" Actual: \" + actual_delta);\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/TestAlwaysPreTouchStacks.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}