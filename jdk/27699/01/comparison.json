{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,3 @@\n- * @build JfrReporter\n- * @run driver TestJFREvents\n+ * @build JfrReporter jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar whitebox.jar jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:whitebox.jar -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI TestJFREvents\n@@ -43,0 +44,1 @@\n+import jdk.internal.platform.Metrics;\n@@ -49,1 +51,1 @@\n-import jdk.internal.platform.Metrics;\n+import jdk.test.whitebox.WhiteBox;\n@@ -57,1 +59,0 @@\n-    private static final int UNKNOWN = -100;\n@@ -59,0 +60,1 @@\n+    private static final WhiteBox wb = WhiteBox.getWhiteBox();\n@@ -102,1 +104,1 @@\n-        long hostTotalMemory = getHostTotalMemory();\n+        long hostTotalMemory = wb.hostPhysicalMemory();\n@@ -114,12 +116,0 @@\n-    private static long getHostTotalMemory() throws Exception {\n-        DockerRunOptions opts = Common.newOpts(imageName);\n-\n-        String hostMem = Common.run(opts).firstMatch(\"total physical memory: (\\\\d+)\", 1);\n-        try {\n-            return Long.parseLong(hostMem);\n-        } catch (NumberFormatException e) {\n-            System.out.println(\"Could not parse total physical memory '\" + hostMem + \"' returning \" + UNKNOWN);\n-            return UNKNOWN;\n-        }\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestJFREvents.java","additions":8,"deletions":18,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -143,1 +143,1 @@\n-            .shouldMatch(\"container memory limit (ignored: \" + badMem + \"|unlimited: -1), using host value \" + hostMaxMem);\n+            .shouldMatch(\"container memory limit (ignored: \" + badMem + \"|unlimited: -1), upper bound is \" + hostMaxMem);\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMemoryAwareness.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}