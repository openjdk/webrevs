{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -219,12 +219,4 @@\n-                \/\/ Every second check if line is printed and if process is still alive\n-                Utils.waitForCondition(() -> latch.getCount() == 0 || !p.isAlive(),\n-                        unit.toMillis(Utils.adjustTimeout(timeout)), 1000);\n-\n-                if (latch.getCount() > 0) {\n-                    if (!p.isAlive()) {\n-                        \/\/ Give some extra time for the StreamPumper to run after the process completed\n-                        Thread.sleep(1000);\n-                        if (latch.getCount() > 0) {\n-                            throw new RuntimeException(\"Started process \" + name + \" terminated before producing the expected output.\");\n-                        }\n-                    } else {\n+                if (timeout == 0) {\n+                    latch.await();\n+                } else {\n+                    if (!latch.await(Utils.adjustTimeout(timeout), unit)) {\n@@ -235,1 +227,1 @@\n-        } catch (TimeoutException | RuntimeException | InterruptedException e) {\n+        } catch (TimeoutException | InterruptedException e) {\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,9 +153,3 @@\n-            try {\n-                this.process = ProcessTools.startProcess(name, processBuilder, waitfor);\n-            } catch (Throwable t) {\n-                System.out.println(String.format(\"ProcessThread[%s] failed: %s\", name, t.toString()));\n-                throw t;\n-            } finally {\n-                \/\/ Release when process is started or failed\n-                latch.countDown();\n-            }\n+            this.process = ProcessTools.startProcess(name, processBuilder, waitfor);\n+            \/\/ Release when process is started\n+            latch.countDown();\n@@ -163,0 +157,1 @@\n+            \/\/ Will block...\n@@ -164,2 +159,0 @@\n-                output = new OutputAnalyzer(this.process);\n-                \/\/ Will block...\n@@ -167,0 +160,1 @@\n+                output = new OutputAnalyzer(this.process);\n@@ -168,0 +162,1 @@\n+                String name = Thread.currentThread().getName();\n","filename":"test\/lib\/jdk\/test\/lib\/thread\/ProcessThread.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"}]}