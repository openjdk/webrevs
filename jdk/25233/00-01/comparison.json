{"files":[{"patch":"@@ -4614,2 +4614,1 @@\n-static bool is_symbolic_link(const wchar_t* wide_path)\n-{\n+static bool is_symbolic_link(const wchar_t* wide_path) {\n@@ -4619,1 +4618,1 @@\n-  if (0 == ::FindClose(f)) {\n+  if (::FindClose(f) == 0) {\n@@ -4621,1 +4620,0 @@\n-    return false;\n@@ -4627,5 +4625,2 @@\n-static WCHAR* get_path_to_target(const wchar_t* wide_path)\n-{\n-  HANDLE hFile;\n-\n-  hFile = CreateFileW(wide_path, GENERIC_READ, FILE_SHARE_READ, nullptr,\n+static WCHAR* get_path_to_target(const wchar_t* wide_path) {\n+  HANDLE hFile = CreateFileW(wide_path, GENERIC_READ, FILE_SHARE_READ, nullptr,\n@@ -4637,2 +4632,1 @@\n-  if (target_path_size == 0)\n-  {\n+  if (target_path_size == 0) {\n@@ -4648,1 +4642,1 @@\n-  if (0 == ::CloseHandle(hFile)) {\n+  if (::CloseHandle(hFile) == 0) {\n@@ -4733,2 +4727,3 @@\n-      \/\/ it is a symbolic link, but we failed to resolve it\n-      errno = err;\n+      \/\/ it is a symbolic link, but we failed to resolve it,\n+      \/\/ errno has been set in the call to get_path_to_target(),\n+      \/\/ no need to overwrite it\n@@ -4942,2 +4937,3 @@\n-      \/\/ it is a symbolic link, but we failed to resolve it\n-      errno = err;\n+      \/\/ it is a symbolic link, but we failed to resolve it,\n+      \/\/ errno has been set in the call to get_path_to_target(),\n+      \/\/ no need to overwrite it\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":12,"deletions":16,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -35,5 +35,0 @@\n-import jdk.test.lib.util.FileUtils;\n-import jdk.test.lib.compiler.CompilerUtils;\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-\n@@ -45,0 +40,4 @@\n+import jdk.test.lib.compiler.CompilerUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.util.FileUtils;\n@@ -68,1 +67,1 @@\n-                .shouldHaveExitValue(0);\n+            .shouldHaveExitValue(0);\n@@ -81,1 +80,1 @@\n-                .shouldHaveExitValue(0);\n+            .shouldHaveExitValue(0);\n@@ -87,1 +86,1 @@\n-    public static void createLinkInSeparateFolder( final String pathToFolderForSymlink, final Path target, final String className) throws IOException {\n+    public static void createLinkInSeparateFolder(final String pathToFolderForSymlink, final Path target, final String className) throws IOException {\n@@ -89,1 +88,1 @@\n-        if (!theDir.exists()){\n+        if (!theDir.exists()) {\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/TestSymlinkLoad.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"}]}