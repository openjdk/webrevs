{"files":[{"patch":"@@ -4617,3 +4617,12 @@\n-  const bool result = fd.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT && fd.dwReserved0 == IO_REPARSE_TAG_SYMLINK;\n-  ::FindClose(f);\n-  return result;\n+  if (f != INVALID_HANDLE_VALUE) {\n+    const bool result = fd.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT && fd.dwReserved0 == IO_REPARSE_TAG_SYMLINK;\n+    if (::FindClose(f) == 0) {\n+      errno = ::GetLastError();\n+      log_debug(os)(\"is_symbolic_link() failed to FindClose: GetLastError->%ld.\", errno);\n+    }\n+    return result;\n+  } else {\n+    errno = ::GetLastError();\n+    log_debug(os)(\"is_symbolic_link() failed to FindFirstFileW: GetLastError->%ld.\", errno);\n+    return false;\n+  }\n@@ -4625,1 +4634,6 @@\n-    OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, nullptr);\n+                             OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, nullptr);\n+  if (hFile == INVALID_HANDLE_VALUE) {\n+    errno = ::GetLastError();\n+    log_debug(os)(\"get_path_to_target() failed to CreateFileW: GetLastError->%ld.\", errno);\n+    return nullptr;\n+  }\n@@ -4628,2 +4642,1 @@\n-    FILE_NAME_NORMALIZED);\n-\n+                                                              FILE_NAME_NORMALIZED);\n@@ -4632,0 +4645,1 @@\n+    log_debug(os)(\"get_path_to_target() failed to GetFinalPathNameByHandleW: GetLastError->%ld.\", errno);\n@@ -4637,2 +4651,7 @@\n-  ::GetFinalPathNameByHandleW(hFile, path_to_target, static_cast<DWORD>(target_path_size + 1),\n-    FILE_NAME_NORMALIZED);\n+  const size_t res = ::GetFinalPathNameByHandleW(hFile, path_to_target, static_cast<DWORD>(target_path_size + 1),\n+                                                 FILE_NAME_NORMALIZED);\n+  if (res == 0) {\n+    errno = ::GetLastError();\n+    log_debug(os)(\"get_path_to_target() failed to GetFinalPathNameByHandleW: GetLastError->%ld.\", errno);\n+    return nullptr;\n+  }\n@@ -4642,0 +4661,1 @@\n+    log_debug(os)(\"get_path_to_target() failed to CloseHandle: GetLastError->%ld.\", errno);\n@@ -4720,2 +4740,1 @@\n-  if (is_symlink)\n-  {\n+  if (is_symlink) {\n@@ -4723,2 +4742,1 @@\n-    if (path_to_target == nullptr)\n-    {\n+    if (path_to_target == nullptr) {\n@@ -4728,0 +4746,1 @@\n+      os::free(wide_path);\n@@ -4733,3 +4752,1 @@\n-  BOOL bret = ::GetFileAttributesExW(is_symlink && path_to_target != nullptr ? path_to_target : wide_path, GetFileExInfoStandard, &file_data);\n-  os::free(wide_path);\n-  os::free(path_to_target);\n+  BOOL bret = ::GetFileAttributesExW(is_symlink ? path_to_target : wide_path, GetFileExInfoStandard, &file_data);\n@@ -4737,0 +4754,1 @@\n+  \/\/ if getting attributes failed, GetLastError should be called immediately after that\n@@ -4739,0 +4757,3 @@\n+    log_debug(os)(\"os::stat() failed to GetFileAttributesExW: GetLastError->%ld.\", errno);\n+    os::free(wide_path);\n+    os::free(path_to_target);\n@@ -4742,0 +4763,3 @@\n+  os::free(wide_path);\n+  os::free(path_to_target);\n+\n@@ -4930,2 +4954,1 @@\n-  if (is_symlink)\n-  {\n+  if (is_symlink) {\n@@ -4933,2 +4956,1 @@\n-    if (path_to_target == nullptr)\n-    {\n+    if (path_to_target == nullptr) {\n@@ -4938,0 +4960,1 @@\n+      os::free(wide_path);\n@@ -4942,3 +4965,1 @@\n-  int fd = ::_wopen(is_symlink && path_to_target != nullptr ? path_to_target : wide_path, oflag | O_BINARY | O_NOINHERIT, mode);\n-  os::free(wide_path);\n-  os::free(path_to_target);\n+  int fd = ::_wopen(is_symlink ? path_to_target : wide_path, oflag | O_BINARY | O_NOINHERIT, mode);\n@@ -4946,0 +4967,1 @@\n+  \/\/ if opening files failed, GetLastError should be called immediately after that\n@@ -4948,0 +4970,1 @@\n+    log_debug(os)(\"os::open() failed to _wopen: GetLastError->%ld.\", errno);\n@@ -4949,0 +4972,2 @@\n+  os::free(wide_path);\n+  os::free(path_to_target);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":47,"deletions":22,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-            .shouldHaveExitValue(0);\n+              .shouldHaveExitValue(0);\n@@ -80,1 +80,1 @@\n-            .shouldHaveExitValue(0);\n+              .shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/TestSymlinkLoad.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}