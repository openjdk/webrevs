{"files":[{"patch":"@@ -4641,3 +4641,1 @@\n-  \/\/ One does not need extra character in the end, from documentation:\n-  \/\/ \"If the function fails because lpszFilePath is too small to hold the string plus the terminating null character,\n-  \/\/ the return value is the required buffer size, in TCHARs. This value INCLUDES the size of the terminating null character.\"\n+  \/\/ Returned value includes the terminating null character.\n@@ -4654,4 +4652,1 @@\n-  \/\/ Here is a tricky call of the same method. From documentation:\n-  \/\/ \"If the function succeeds, the return value is the length of the string received by lpszFilePath,\n-  \/\/ in TCHARs.This value DOES NOT INCLUDE the size of the terminating null character.\"\n-  \/\/ So the return value is ONE LESS than target_path_size if everything is ok\n+  \/\/ The returned size is the length excluding the terminating null character.\n@@ -4672,1 +4667,0 @@\n-  path_to_target[target_path_size - 1] = '\\0';\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,4 +29,1 @@\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n- *          jdk.jartool\/sun.tools.jar\n- * @run driver TestSymlinkLoad\n+ * @run testng\/othervm TestSymlinkLoad\n@@ -44,0 +41,2 @@\n+import org.testng.SkipException;\n+import org.testng.annotations.Test;\n@@ -46,1 +45,3 @@\n-    public static void main(String args[]) throws Exception {\n+\n+    @Test\n+    public void testSymlinkClassLoading() throws Exception {\n@@ -93,1 +94,7 @@\n-        Files.createSymbolicLink(link, target);\n+        try {\n+            Files.createSymbolicLink(link, target);\n+        } catch (UnsupportedOperationException uoe) {\n+            throw new SkipException(\"Symbolic link creation not supported.\", uoe);\n+        } catch (IOException ioe) {\n+            throw new SkipException(\"Probably insufficient privileges to create symbolic links (Windows)\", ioe);\n+        }\n@@ -95,1 +102,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/LoadClass\/TestSymlinkLoad.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"}]}