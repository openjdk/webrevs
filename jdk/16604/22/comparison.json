{"files":[{"patch":"@@ -1111,1 +1111,1 @@\n-void *os::dll_load(const char *filename, char *ebuf, int ebuflen) {\n+static void* dll_load_library(const char *filename, char *ebuf, int ebuflen) {\n@@ -1114,1 +1114,0 @@\n-\n@@ -1162,0 +1161,37 @@\n+\/*\n+ Load library named <filename>\n+ dll_build_name constructs the entire path as libfilename.so\n+ Search order:\n+ Load \"libfilename.so\" first, then load libfilename.a, on failure.\n+ In OpenJ9, the libary with .so extension is loaded first and then .a extension, on failure.\n+*\/\n+void *os::dll_load(const char *filename, char *ebuf, int ebuflen) {\n+  void* result = nullptr;\n+  char *file_path = strdup(filename);\n+  char* const pointer_to_dot = strrchr(file_path, '.');\n+  char const *old_extension = \".so\";\n+  char const *new_extension = \".a\";\n+  if (pointer_to_dot == nullptr) {\n+    log_info(os)(\"Attempting to load a shared object without extension %s\", filename);\n+    FREE_C_HEAP_ARRAY(char, file_path);\n+    return result;\n+  }\n+  \/\/ First try to load the existing file.\n+  result = dll_load_library(filename, ebuf, ebuflen);\n+  int error_code = errno;\n+  \/\/ If the load fails,we try to reload by changing the extension to .a for .so files only.\n+  \/\/ Shared object in .so format dont have braces, hence they get removed for archives with members.\n+  if (error_code == EACCES || error_code == ENOENT) {\n+    if (strlen(new_extension) > strlen(old_extension)){\n+      log_info(os)(\"New extension length must be less than existing one\");\n+      FREE_C_HEAP_ARRAY(char, file_path);\n+      return result;\n+    }\n+    if (strcmp(pointer_to_dot, old_extension) == 0) {\n+      sprintf(pointer_to_dot, \"%s\", new_extension);\n+      result = dll_load_library(file_path, ebuf, ebuflen);\n+    }\n+  }\n+  FREE_C_HEAP_ARRAY(char, file_path);\n+  return result;\n+}\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":38,"deletions":2,"binary":false,"changes":40,"status":"modified"}]}