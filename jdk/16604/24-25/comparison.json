{"files":[{"patch":"@@ -1161,7 +1161,2 @@\n-\/*\n- Load library named <filename>\n- dll_build_name constructs the entire path as libfilename.so\n- Search order:\n- Load \"libfilename.so\" first, then load libfilename.a, on failure.\n- In OpenJ9, the libary with .so extension is loaded first and then .a extension, on failure.\n-*\/\n+\/\/ Load library named <filename>\n+\/\/ If filename matches <name>.so, and loading fails, repeat with <name>.a.\n@@ -1170,1 +1165,1 @@\n-  char *file_path = strdup(filename);\n+  char* const file_path = strdup(filename);\n@@ -1172,7 +1167,3 @@\n-  char const *old_extension = \".so\";\n-  char const *new_extension = \".a\";\n-  if (pointer_to_dot == nullptr) {\n-    log_info(os)(\"Attempting to load a shared object without extension %s\", filename);\n-    FREE_C_HEAP_ARRAY(char, file_path);\n-    return result;\n-  }\n+  const char old_extension[] = \".so\";\n+  const char new_extension[] = \".a\";\n+  STATIC_ASSERT(sizeof(old_extension) >= sizeof(new_extension));\n@@ -1183,2 +1174,1 @@\n-  if (result == nullptr) {\n-    assert(strlen(new_extension) < strlen(old_extension), \"New extension length must be less than existing one\");\n+  if (result == nullptr && pointer_to_dot != nullptr && strcmp(pointer_to_dot, old_extension) == 0) {\n@@ -1186,1 +1176,1 @@\n-      sprintf(pointer_to_dot, \"%s\", new_extension);\n+      snprintf(pointer_to_dot, sizeof(old_extension), \"%s\", new_extension);\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":8,"deletions":18,"binary":false,"changes":26,"status":"modified"}]}