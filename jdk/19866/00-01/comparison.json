{"files":[{"patch":"@@ -671,1 +671,0 @@\n-  ConstantPoolCache* cache = pool->cache();\n","filename":"src\/hotspot\/share\/interpreter\/interpreterRuntime.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1345,1 +1345,1 @@\n-                                 \/*need_selected_method*\/true, CHECK);\n+                                 \/*is_abstract_interpretation*\/ false, CHECK);\n@@ -1353,2 +1353,2 @@\n-                                 \/*check_null_and_abstract*\/false,\n-                                 \/*need_selected_method*\/false, CHECK);\n+                                 \/*check_null_and_abstract*\/ false,\n+                                 \/*is_abstract_interpretation*\/ true, CHECK);\n@@ -1406,1 +1406,1 @@\n-                                                  bool need_selected_method,\n+                                                  bool is_abstract_interpretation,\n@@ -1408,0 +1408,3 @@\n+  \/\/ is_abstract_interpretation is true IFF CDS is resolving method references without\n+  \/\/ running any actual bytecode. Therefore, we don't have an actual recv\/recv_klass, so\n+  \/\/ we cannot check the actual selected_method (which is not needed by CDS anyway).\n@@ -1428,1 +1431,1 @@\n-    if (need_selected_method) {\n+    if (!is_abstract_interpretation) {\n@@ -1444,1 +1447,1 @@\n-      if (need_selected_method) {\n+      if (!is_abstract_interpretation) {\n@@ -1448,1 +1451,1 @@\n-      if (need_selected_method) {\n+      if (!is_abstract_interpretation) {\n@@ -1454,1 +1457,1 @@\n-  if (need_selected_method) {\n+  if (!is_abstract_interpretation) {\n@@ -1465,1 +1468,0 @@\n-  }\n@@ -1467,4 +1469,5 @@\n-  if (log_develop_is_enabled(Trace, vtables)) {\n-    trace_method_resolution(\"invokevirtual selected method: receiver-class:\",\n-                            recv_klass, resolved_klass, selected_method(),\n-                            false, vtable_index);\n+    if (log_develop_is_enabled(Trace, vtables)) {\n+      trace_method_resolution(\"invokevirtual selected method: receiver-class:\",\n+                              recv_klass, resolved_klass, selected_method(),\n+                              false, vtable_index);\n+    }\n@@ -1472,0 +1475,1 @@\n+\n@@ -1487,1 +1491,1 @@\n-                                   \/*need_selected_method*\/ true, CHECK);\n+                                   \/*is_abstract_interpretation*\/ false, CHECK);\n@@ -1495,1 +1499,1 @@\n-                                   \/*need_selected_method*\/ false, CHECK);\n+                                   \/*is_abstract_interpretation*\/ true, CHECK);\n@@ -1515,1 +1519,2 @@\n-                                                    bool need_selected_method, TRAPS) {\n+                                                    bool is_abstract_interpretation, TRAPS) {\n+  \/\/ is_abstract_interpretation -- see comments in runtime_resolve_virtual_method()\n@@ -1523,1 +1528,1 @@\n-  if (need_selected_method && !recv_klass->is_subtype_of(resolved_klass)) {\n+  if (!is_abstract_interpretation && !recv_klass->is_subtype_of(resolved_klass)) {\n@@ -1534,1 +1539,1 @@\n-  if (need_selected_method) {\n+  if (!is_abstract_interpretation) {\n@@ -1539,1 +1544,1 @@\n-  if (need_selected_method && !resolved_method()->is_private()) {\n+  if (!is_abstract_interpretation && !resolved_method()->is_private()) {\n@@ -1585,1 +1590,1 @@\n-    assert(!need_selected_method || vtable_index == selected_method->vtable_index(), \"sanity check\");\n+    assert(is_abstract_interpretation || vtable_index == selected_method->vtable_index(), \"sanity check\");\n@@ -1602,1 +1607,1 @@\n-  if (need_selected_method) {\n+  if (!is_abstract_interpretation) {\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":26,"deletions":21,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-                                                 bool need_selected_method, TRAPS);\n+                                                 bool is_abstract_interpretation, TRAPS);\n@@ -253,1 +253,1 @@\n-                                                 bool needs_selected_methods, TRAPS);\n+                                                 bool is_abstract_interpretation, TRAPS);\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}