{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/cds\/archiveHeapWriter.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1580,2 +1580,4 @@\n-  \/\/ We want to keep track of how many zeros were removed\n-  size_t new_zeros = map->find_first_set_bit(0);\n+  DEBUG_ONLY(\n+    size_t new_zeros = map->find_first_set_bit(0);\n+    assert(new_zeros == 0, \"Should have removed leading zeros\");\n+  )\n@@ -1583,1 +1585,0 @@\n-  assert(new_zeros == 0, \"Should have removed leading zeros\");\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}