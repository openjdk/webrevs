{"files":[{"patch":"@@ -1000,0 +1000,1 @@\n+                                     \"Z\"                                                                                                       \\\n@@ -1003,1 +1004,0 @@\n-                                     \"Z\"                                                                                                       \\\n@@ -1015,0 +1015,1 @@\n+                                            \"Z\"                                                                                                \\\n@@ -1020,1 +1021,0 @@\n-                                            \"Z\"                                                                                                \\\n@@ -1031,0 +1031,1 @@\n+                                      \"Z\"                                                                                                      \\\n@@ -1034,1 +1035,0 @@\n-                                      \"Z\"                                                                                                      \\\n@@ -1046,0 +1046,1 @@\n+                                             \"Z\"                                                                                               \\\n@@ -1050,1 +1051,0 @@\n-                                             \"Z\"                                                                                               \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -947,19 +947,20 @@\n-\/\/ public static\n-\/\/ <C,\n-\/\/  VM,\n-\/\/  E,\n-\/\/  S extends VectorSpecies<E>>\n-\/\/ VM load(Class<? extends VM> vmClass, Class<E> elementType, int length,\n-\/\/         Object base, long offset,    \/\/ Unsafe addressing\n-\/\/         C container, long index, S s,  boolean from_ms,    \/\/ Arguments for default implementation\n-\/\/         LoadOperation<C, VM, E, S> defaultImpl)\n-\/\/\n-\/\/ public static\n-\/\/ <C,\n-\/\/  V extends Vector<?>>\n-\/\/ void store(Class<?> vectorClass, Class<?> elementType, int length,\n-\/\/            Object base, long offset,    \/\/ Unsafe addressing\n-\/\/            V v,\n-\/\/            C container, long index, boolean from_ms, \/\/ Arguments for default implementation\n-\/\/            StoreVectorOperation<C, V> defaultImpl)\n-\n+\/\/  public static\n+\/\/  <C,\n+\/\/   VM extends VectorPayload,\n+\/\/   E,\n+\/\/   S extends VectorSpecies<E>>\n+\/\/  VM load(Class<? extends VM> vmClass, Class<E> eClass,\n+\/\/          int length,\n+\/\/          Object base, long offset,            \/\/ Unsafe addressing\n+\/\/          boolean fromSegment,\n+\/\/          C container, long index, S s,        \/\/ Arguments for default implementation\n+\/\/          LoadOperation<C, VM, S> defaultImpl) {\n+\/\/  public static\n+\/\/  <C,\n+\/\/   V extends VectorPayload>\n+\/\/  void store(Class<?> vClass, Class<?> eClass,\n+\/\/             int length,\n+\/\/             Object base, long offset,        \/\/ Unsafe addressing\n+\/\/             boolean fromSegment,\n+\/\/             V v, C container, long index,    \/\/ Arguments for default implementation\n+\/\/             StoreVectorOperation<C, V> defaultImpl) {\n@@ -970,1 +971,1 @@\n-  const TypeInt*     from_ms      = gvn().type(argument(10))->isa_int();\n+  const TypeInt*     from_ms      = gvn().type(argument(6))->isa_int();\n@@ -979,1 +980,1 @@\n-                    NodeClassNames[argument(10)->Opcode()]);\n+                    NodeClassNames[argument(6)->Opcode()]);\n@@ -1103,1 +1104,1 @@\n-    Node* val = unbox_vector(argument(6), vbox_type, elem_bt, num_elem);\n+    Node* val = unbox_vector(argument(7), vbox_type, elem_bt, num_elem);\n@@ -1153,21 +1154,24 @@\n-\/\/ public static\n-\/\/ <C,\n-\/\/  V extends Vector<?>,\n-\/\/  E,\n-\/\/  S extends VectorSpecies<E>,\n-\/\/  M extends VectorMask<E>>\n-\/\/ V loadMasked(Class<? extends V> vClass, Class<M> mClass, Class<E> eClass,\n-\/\/              int length, Object base, long offset,\n-\/\/              M m, int offsetInRange,\n-\/\/              C container, long index, S s, boolean from_m, \/\/ Arguments for default implementation\n-\/\/              LoadVectorMaskedOperation<C, V, S, M> defaultImpl) {\n-\/\/ public static\n-\/\/ <C,\n-\/\/  V extends Vector<E>,\n-\/\/  M extends VectorMask<E>,\n-\/\/  E>\n-\/\/ void storeMasked(Class<? extends V> vClass, Class<M> mClass, Class<E> eClass,\n-\/\/                  int length,\n-\/\/                  Object base, long offset,\n-\/\/                  V v, M m, C container, long index, boolean from_ms, \/\/ Arguments for default implementation\n-\/\/                  StoreVectorMaskedOperation<C, V, M> defaultImpl) {\n+\/\/  public static\n+\/\/  <C,\n+\/\/   V extends Vector<?>,\n+\/\/   E,\n+\/\/   S extends VectorSpecies<E>,\n+\/\/   M extends VectorMask<E>>\n+\/\/  V loadMasked(Class<? extends V> vClass, Class<M> mClass, Class<E> eClass,\n+\/\/               int length, Object base, long offset,          \/\/ Unsafe addressing\n+\/\/               boolean fromSegment,\n+\/\/               M m, int offsetInRange,\n+\/\/               C container, long index, S s,                  \/\/ Arguments for default implementation\n+\/\/               LoadVectorMaskedOperation<C, V, S, M> defaultImpl) {\n+\/\/  public static\n+\/\/  <C,\n+\/\/   V extends Vector<E>,\n+\/\/   M extends VectorMask<E>,\n+\/\/   E>\n+\/\/  void storeMasked(Class<? extends V> vClass, Class<M> mClass, Class<E> eClass,\n+\/\/                   int length,\n+\/\/                   Object base, long offset,                  \/\/ Unsafe addressing\n+\/\/                   boolean fromSegment,\n+\/\/                   V v, M m, C container, long index,         \/\/ Arguments for default implementation\n+\/\/                   StoreVectorMaskedOperation<C, V, M> defaultImpl) {\n+\n@@ -1179,1 +1183,1 @@\n-  const TypeInt*     from_ms      = gvn().type(argument(is_store ? 12 : 13))->isa_int();\n+  const TypeInt*     from_ms      = gvn().type(argument(7))->isa_int();\n@@ -1190,1 +1194,1 @@\n-                    NodeClassNames[argument(is_store ? 12 : 13)->Opcode()]);\n+                    NodeClassNames[argument(7)->Opcode()]);\n@@ -1257,1 +1261,1 @@\n-      const TypeInt* offset_in_range = gvn().type(argument(8))->isa_int();\n+      const TypeInt* offset_in_range = gvn().type(argument(9))->isa_int();\n@@ -1335,1 +1339,1 @@\n-  Node* mask = unbox_vector(is_store ? argument(8) : argument(7), mbox_type, elem_bt, num_elem);\n+  Node* mask = unbox_vector(is_store ? argument(9) : argument(8), mbox_type, elem_bt, num_elem);\n@@ -1339,2 +1343,2 @@\n-                    is_store ? NodeClassNames[argument(8)->Opcode()]\n-                             : NodeClassNames[argument(7)->Opcode()]);\n+                    is_store ? NodeClassNames[argument(9)->Opcode()]\n+                             : NodeClassNames[argument(8)->Opcode()]);\n@@ -1348,1 +1352,1 @@\n-    Node* val = unbox_vector(argument(7), vbox_type, elem_bt, num_elem);\n+    Node* val = unbox_vector(argument(8), vbox_type, elem_bt, num_elem);\n@@ -1352,1 +1356,1 @@\n-                      NodeClassNames[argument(7)->Opcode()]);\n+                      NodeClassNames[argument(8)->Opcode()]);\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":55,"deletions":51,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -358,2 +358,2 @@\n-                    msp.unsafeGetBase(), msp.unsafeGetOffset() + offset,\n-                    msp, offset, s, true,\n+                    msp.unsafeGetBase(), msp.unsafeGetOffset() + offset, true,\n+                    msp, offset, s,\n@@ -400,2 +400,2 @@\n-                    msp.unsafeGetBase(), msp.unsafeGetOffset() + offset, m, offsetInRange,\n-                    msp, offset, s, true,\n+                    msp.unsafeGetBase(), msp.unsafeGetOffset() + offset, true, m, offsetInRange,\n+                    msp, offset, s,\n@@ -441,1 +441,1 @@\n-                    msp.unsafeGetBase(), msp.unsafeGetOffset() + offset,\n+                    msp.unsafeGetBase(), msp.unsafeGetOffset() + offset, true,\n@@ -443,1 +443,1 @@\n-                    msp, offset, true,\n+                    msp, offset,\n@@ -483,1 +483,1 @@\n-                    msp.unsafeGetBase(), msp.unsafeGetOffset() + offset,\n+                    msp.unsafeGetBase(), msp.unsafeGetOffset() + offset, true,\n@@ -485,1 +485,1 @@\n-                    msp, offset, true,\n+                    msp, offset,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -424,2 +424,2 @@\n-            Object base, long offset,\n-            C container, long index, S s, boolean from_ms,\n+            Object base, long offset, boolean fromSegment,\n+            C container, long index, S s,\n@@ -448,1 +448,1 @@\n-                 int length, Object base, long offset,\n+                 int length, Object base, long offset, boolean fromSegment,\n@@ -450,1 +450,1 @@\n-                 C container, long index, S s, boolean from_ms,\n+                 C container, long index, S s,\n@@ -497,2 +497,2 @@\n-               Object base, long offset,\n-               V v, C container, long index, boolean from_ms,\n+               Object base, long offset, boolean fromSegment,\n+               V v, C container, long index,\n@@ -518,2 +518,2 @@\n-                     Object base, long offset,\n-                     V v, M m, C container, long index, boolean from_ms,\n+                     Object base, long offset, boolean fromSegment,\n+                     V v, M m, C container, long index,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/vector\/VectorSupport.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -77,2 +77,2 @@\n-            bits, (long) i + Unsafe.ARRAY_BOOLEAN_BASE_OFFSET,\n-            this, bits, i, false,\n+            bits, (long) i + Unsafe.ARRAY_BOOLEAN_BASE_OFFSET, false,\n+            this, bits, i,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractMask.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3376,1 +3376,1 @@\n-            a, arrayAddress(a, offset),\n+            a, arrayAddress(a, offset), false,\n@@ -3378,1 +3378,1 @@\n-            a, offset, false,\n+            a, offset,\n@@ -3529,1 +3529,1 @@\n-            a, booleanArrayAddress(a, offset),\n+            a, booleanArrayAddress(a, offset), false,\n@@ -3531,1 +3531,1 @@\n-            a, offset, false,\n+            a, offset,\n@@ -3740,2 +3740,2 @@\n-            a, arrayAddress(a, offset),\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false,\n+            a, offset, vsp,\n@@ -3757,2 +3757,2 @@\n-            a, arrayAddress(a, offset), m, offsetInRange,\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false, m, offsetInRange,\n+            a, offset, vsp,\n@@ -3774,2 +3774,2 @@\n-            a, booleanArrayAddress(a, offset),\n-            a, offset, vsp, false,\n+            a, booleanArrayAddress(a, offset), false,\n+            a, offset, vsp,\n@@ -3791,2 +3791,2 @@\n-            a, booleanArrayAddress(a, offset), m, offsetInRange,\n-            a, offset, vsp, false,\n+            a, booleanArrayAddress(a, offset), false, m, offsetInRange,\n+            a, offset, vsp,\n@@ -3839,2 +3839,2 @@\n-            a, arrayAddress(a, offset),\n-            this, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, a, offset,\n@@ -3856,2 +3856,2 @@\n-            a, arrayAddress(a, offset),\n-            this, m, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, m, a, offset,\n@@ -3875,2 +3875,2 @@\n-            a, booleanArrayAddress(a, offset),\n-            normalized, m, a, offset, false,\n+            a, booleanArrayAddress(a, offset), false,\n+            normalized, m, a, offset,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -3064,1 +3064,1 @@\n-            a, arrayAddress(a, offset),\n+            a, arrayAddress(a, offset), false,\n@@ -3066,1 +3066,1 @@\n-            a, offset, false,\n+            a, offset,\n@@ -3297,2 +3297,2 @@\n-            a, arrayAddress(a, offset),\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false,\n+            a, offset, vsp,\n@@ -3314,2 +3314,2 @@\n-            a, arrayAddress(a, offset), m, offsetInRange,\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false, m, offsetInRange,\n+            a, offset, vsp,\n@@ -3416,2 +3416,2 @@\n-            a, arrayAddress(a, offset),\n-            this, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, a, offset,\n@@ -3433,2 +3433,2 @@\n-            a, arrayAddress(a, offset),\n-            this, m, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, m, a, offset,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -3070,1 +3070,1 @@\n-            a, arrayAddress(a, offset),\n+            a, arrayAddress(a, offset), false,\n@@ -3072,1 +3072,1 @@\n-            a, offset, false,\n+            a, offset,\n@@ -3284,2 +3284,2 @@\n-            a, arrayAddress(a, offset),\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false,\n+            a, offset, vsp,\n@@ -3301,2 +3301,2 @@\n-            a, arrayAddress(a, offset), m, offsetInRange,\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false, m, offsetInRange,\n+            a, offset, vsp,\n@@ -3385,2 +3385,2 @@\n-            a, arrayAddress(a, offset),\n-            this, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, a, offset,\n@@ -3402,2 +3402,2 @@\n-            a, arrayAddress(a, offset),\n-            this, m, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, m, a, offset,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -3226,1 +3226,1 @@\n-            a, arrayAddress(a, offset),\n+            a, arrayAddress(a, offset), false,\n@@ -3228,1 +3228,1 @@\n-            a, offset, false,\n+            a, offset,\n@@ -3440,2 +3440,2 @@\n-            a, arrayAddress(a, offset),\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false,\n+            a, offset, vsp,\n@@ -3457,2 +3457,2 @@\n-            a, arrayAddress(a, offset), m, offsetInRange,\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false, m, offsetInRange,\n+            a, offset, vsp,\n@@ -3541,2 +3541,2 @@\n-            a, arrayAddress(a, offset),\n-            this, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, a, offset,\n@@ -3558,2 +3558,2 @@\n-            a, arrayAddress(a, offset),\n-            this, m, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, m, a, offset,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -3105,1 +3105,1 @@\n-            a, arrayAddress(a, offset),\n+            a, arrayAddress(a, offset), false,\n@@ -3107,1 +3107,1 @@\n-            a, offset, false,\n+            a, offset,\n@@ -3338,2 +3338,2 @@\n-            a, arrayAddress(a, offset),\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false,\n+            a, offset, vsp,\n@@ -3355,2 +3355,2 @@\n-            a, arrayAddress(a, offset), m, offsetInRange,\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false, m, offsetInRange,\n+            a, offset, vsp,\n@@ -3457,2 +3457,2 @@\n-            a, arrayAddress(a, offset),\n-            this, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, a, offset,\n@@ -3474,2 +3474,2 @@\n-            a, arrayAddress(a, offset),\n-            this, m, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, m, a, offset,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -3375,1 +3375,1 @@\n-            a, arrayAddress(a, offset),\n+            a, arrayAddress(a, offset), false,\n@@ -3377,1 +3377,1 @@\n-            a, offset, false,\n+            a, offset,\n@@ -3523,1 +3523,1 @@\n-            a, charArrayAddress(a, offset),\n+            a, charArrayAddress(a, offset), false,\n@@ -3525,1 +3525,1 @@\n-            a, offset, false,\n+            a, offset,\n@@ -3726,2 +3726,2 @@\n-            a, arrayAddress(a, offset),\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false,\n+            a, offset, vsp,\n@@ -3743,2 +3743,2 @@\n-            a, arrayAddress(a, offset), m, offsetInRange,\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false, m, offsetInRange,\n+            a, offset, vsp,\n@@ -3759,2 +3759,2 @@\n-            a, charArrayAddress(a, offset),\n-            a, offset, vsp, false,\n+            a, charArrayAddress(a, offset), false,\n+            a, offset, vsp,\n@@ -3776,2 +3776,2 @@\n-                a, charArrayAddress(a, offset), m, offsetInRange,\n-                a, offset, vsp, false,\n+                a, charArrayAddress(a, offset), false, m, offsetInRange,\n+                a, offset, vsp,\n@@ -3825,2 +3825,2 @@\n-            a, arrayAddress(a, offset),\n-            this, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, a, offset,\n@@ -3842,2 +3842,2 @@\n-            a, arrayAddress(a, offset),\n-            this, m, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, m, a, offset,\n@@ -3892,2 +3892,2 @@\n-            a, charArrayAddress(a, offset),\n-            this, m, a, offset, false,\n+            a, charArrayAddress(a, offset), false,\n+            this, m, a, offset,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -210,2 +210,2 @@\n-                bits, (long) offset + Unsafe.ARRAY_BOOLEAN_BASE_OFFSET,\n-                bits, offset, vsp, false,\n+                bits, (long) offset + Unsafe.ARRAY_BOOLEAN_BASE_OFFSET, false,\n+                bits, offset, vsp,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorMask.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4181,1 +4181,1 @@\n-            a, arrayAddress(a, offset),\n+            a, arrayAddress(a, offset), false,\n@@ -4183,1 +4183,1 @@\n-            a, offset, false,\n+            a, offset,\n@@ -4400,1 +4400,1 @@\n-            a, charArrayAddress(a, offset),\n+            a, charArrayAddress(a, offset), false,\n@@ -4402,1 +4402,1 @@\n-            a, offset, false,\n+            a, offset,\n@@ -4561,1 +4561,1 @@\n-            a, booleanArrayAddress(a, offset),\n+            a, booleanArrayAddress(a, offset), false,\n@@ -4563,1 +4563,1 @@\n-            a, offset, false,\n+            a, offset,\n@@ -4773,2 +4773,2 @@\n-            a, arrayAddress(a, offset),\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false,\n+            a, offset, vsp,\n@@ -4790,2 +4790,2 @@\n-            a, arrayAddress(a, offset), m, offsetInRange,\n-            a, offset, vsp, false,\n+            a, arrayAddress(a, offset), false, m, offsetInRange,\n+            a, offset, vsp,\n@@ -4867,2 +4867,2 @@\n-            a, charArrayAddress(a, offset),\n-            a, offset, vsp, false,\n+            a, charArrayAddress(a, offset), false,\n+            a, offset, vsp,\n@@ -4884,2 +4884,2 @@\n-                a, charArrayAddress(a, offset), m, offsetInRange,\n-                a, offset, vsp, false,\n+                a, charArrayAddress(a, offset), false, m, offsetInRange,\n+                a, offset, vsp,\n@@ -4901,2 +4901,2 @@\n-            a, booleanArrayAddress(a, offset),\n-            a, offset, vsp, false,\n+            a, booleanArrayAddress(a, offset), false,\n+            a, offset, vsp,\n@@ -4918,2 +4918,2 @@\n-            a, booleanArrayAddress(a, offset), m, offsetInRange,\n-            a, offset, vsp, false,\n+            a, booleanArrayAddress(a, offset), false, m, offsetInRange,\n+            a, offset, vsp,\n@@ -4967,2 +4967,2 @@\n-            a, arrayAddress(a, offset),\n-            this, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, a, offset,\n@@ -4984,2 +4984,2 @@\n-            a, arrayAddress(a, offset),\n-            this, m, a, offset, false,\n+            a, arrayAddress(a, offset), false,\n+            this, m, a, offset,\n@@ -5065,2 +5065,2 @@\n-            a, booleanArrayAddress(a, offset),\n-            normalized, m, a, offset, false,\n+            a, booleanArrayAddress(a, offset), false,\n+            normalized, m, a, offset,\n@@ -5115,2 +5115,2 @@\n-            a, charArrayAddress(a, offset),\n-            this, m, a, offset, false,\n+            a, charArrayAddress(a, offset), false,\n+            this, m, a, offset,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"}]}