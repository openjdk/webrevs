{"files":[{"patch":"@@ -42,4 +42,4 @@\n- * logically they should extend ArrayList<Attribute> etc.  They are\n- * all specified to have a method asList() with return type\n- * List<Attribute> etc, and to refuse to add any object other than\n- * an Attribute etc once this method has been called, but not before.\n+ * logically they should extend ArrayList<Attribute> etc.\n+ *\n+ * Before JDK-8359809, their method asList() had to be called, to make\n+ * the class refuse to add any object other than the intended type.\n@@ -52,2 +52,7 @@\n-        for (Class c : classes)\n-            test((Class<? extends ArrayList>) c);\n+        Object[] objects =  {\n+            new Attribute(\"myAttr\", \"myVal\"), new Role(\"myRole\", new ArrayList<ObjectName>()),\n+            new RoleUnresolved(\"myRoleUnresolved\", new ArrayList<ObjectName>(), RoleStatus.NO_ROLE_WITH_NAME)\n+        };\n+        for (int i = 0; i < classes.length; i++) {\n+            test((Class<? extends ArrayList>) classes[i], objects[i]);\n+        }\n@@ -56,1 +61,1 @@\n-    private static void test(Class<? extends ArrayList> c) throws Exception {\n+    private static void test(Class<? extends ArrayList> c, Object o) throws Exception {\n@@ -59,1 +64,1 @@\n-        test(al);\n+        test(al, o);\n@@ -62,2 +67,2 @@\n-    private static void test(ArrayList al) throws Exception {\n-        test(al, false);\n+    private static void test(ArrayList al, Object o) throws Exception {\n+        test0(al, o);\n@@ -66,2 +71,2 @@\n-        m.invoke(al);\n-        test(al, false);\n+        m.invoke(al); \/\/ Calling asList() does not change behaviour\n+        test0(al, o);\n@@ -70,2 +75,2 @@\n-    private static void test(ArrayList al, boolean allowsBogus) throws Exception {\n-        for (int i = 0; i < 5; i++) {\n+    private static void test0(ArrayList al, Object o) throws Exception {\n+        for (int i = 0; i < 6; i++) {\n@@ -89,0 +94,7 @@\n+                    case 5:\n+                        \/\/ Add the correct kind of element, so we can iterate.\n+                        al.add(o);\n+                        ListIterator iter = al.listIterator();\n+                        Object x = iter.next();\n+                        iter.set(\"blah\"); \/\/ Should fail like the others\n+                        break;\n@@ -92,2 +104,1 @@\n-                if (!allowsBogus)\n-                    throw new Exception(\"op \" + i + \" allowed but should fail on \" + al.getClass());\n+                throw new Exception(\"op \" + i + \" allowed but should fail on \" + al.getClass());\n@@ -95,2 +106,1 @@\n-                if (allowsBogus)\n-                    throw new Exception(\"got exception but should not\", e);\n+                System.out.println(\"op \" + i + \" got expected \" + e + \" on \" + al.getClass());\n","filename":"test\/jdk\/javax\/management\/generified\/ListTypeCheckTest.java","additions":28,"deletions":18,"binary":false,"changes":46,"status":"modified"}]}