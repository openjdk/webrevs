{"files":[{"patch":"@@ -1560,0 +1560,1 @@\n+        private volatile Class<?> constructorParameterClass;\n@@ -1566,0 +1567,9 @@\n+\n+        Class<?> getConstructorParameterClass() throws ClassNotFoundException {\n+            Class<?> clazz = constructorParameterClass;\n+            if (clazz == null) {\n+                clazz = Class.forName(constructorParameterClassName);\n+                constructorParameterClass = clazz;\n+            }\n+            return clazz;\n+        }\n@@ -1899,1 +1909,1 @@\n-                        null : Class.forName(cap.constructorParameterClassName);\n+                        null : cap.getConstructorParameterClass();\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+package org.openjdk.bench.java.security;\n+\n+import org.openjdk.jmh.annotations.*;\n+\n+import java.security.SecureRandom;\n+import java.util.concurrent.TimeUnit;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@Warmup(iterations = 5, time = 1)\n+@Measurement(iterations = 5, time = 1)\n+@Fork(value = 3)\n+public class SecureRandomBench {\n+\n+    @Benchmark\n+    public SecureRandom create() throws Exception {\n+        return new SecureRandom();\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/SecureRandomBench.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}