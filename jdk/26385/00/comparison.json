{"files":[{"patch":"@@ -2449,1 +2449,1 @@\n-void nmethod::oops_do(OopClosure* f, bool allow_dead) {\n+void nmethod::oops_do(OopClosure* f) {\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -922,2 +922,1 @@\n-  void oops_do(OopClosure* f) { oops_do(f, false); }\n-  void oops_do(OopClosure* f, bool allow_dead);\n+  void oops_do(OopClosure* f);\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-  nm->oops_do(&cl, true \/* allow_dead *\/);\n+  nm->oops_do(&cl);\n","filename":"src\/hotspot\/share\/gc\/shared\/gcBehaviours.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-void ShenandoahNMethod::assert_same_oops(bool allow_dead) {\n+void ShenandoahNMethod::assert_same_oops() {\n@@ -183,1 +183,1 @@\n-  nm()->oops_do(&detector, allow_dead);\n+  nm()->oops_do(&detector);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNMethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-  void assert_same_oops(bool allow_dead = false) NOT_DEBUG_RETURN;\n+  void assert_same_oops() NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNMethod.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}