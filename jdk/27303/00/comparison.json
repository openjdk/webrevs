{"files":[{"patch":"@@ -2263,0 +2263,12 @@\n+inline Klass* get_klass_considering_redefinition(jclass cls, JavaThread *thread) {\n+  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n+  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n+  return k;\n+}\n+\n+inline InstanceKlass* get_instance_klass_considering_redefinition(jclass cls, JavaThread *thread) {\n+  InstanceKlass* ik = java_lang_Class::as_InstanceKlass(JNIHandles::resolve_non_null(cls));\n+  ik = JvmtiThreadState::class_to_verify_considering_redefinition(ik, thread);\n+  return ik;\n+}\n+\n@@ -2278,1 +2290,0 @@\n-\n@@ -2280,2 +2291,1 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n+  Klass* k = get_klass_considering_redefinition(cls, thread);\n@@ -2287,2 +2297,1 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n+  Klass* k = get_klass_considering_redefinition(cls, thread);\n@@ -2302,2 +2311,1 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n+  Klass* k = get_klass_considering_redefinition(cls, thread);\n@@ -2309,2 +2317,1 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n+  Klass* k = get_klass_considering_redefinition(cls, thread);\n@@ -2316,2 +2323,1 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n+  Klass* k = get_klass_considering_redefinition(cls, thread);\n@@ -2328,3 +2334,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2342,3 +2347,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2350,3 +2354,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2358,3 +2361,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2366,3 +2368,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2378,3 +2379,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2386,3 +2386,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2394,3 +2393,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  return InstanceKlass::cast(k)->field_access_flags(field_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  return ik->field_access_flags(field_index);\n@@ -2401,3 +2399,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2409,3 +2406,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2417,3 +2413,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2426,3 +2421,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2435,3 +2429,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2442,3 +2435,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2450,3 +2442,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2465,3 +2456,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2480,3 +2470,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2496,3 +2485,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2512,3 +2500,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2527,3 +2514,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2536,3 +2522,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2554,3 +2539,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2573,6 +2557,4 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  Klass* k_called = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(called_cls));\n-  k        = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  k_called = JvmtiThreadState::class_to_verify_considering_redefinition(k_called, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n-  ConstantPool* cp_called = InstanceKlass::cast(k_called)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  InstanceKlass* ik_called = get_instance_klass_considering_redefinition(called_cls, thread);\n+  ConstantPool* cp = ik->constants();\n+  ConstantPool* cp_called = ik_called->constants();\n@@ -2583,2 +2565,1 @@\n-      InstanceKlass* ik = InstanceKlass::cast(k_called);\n-      for (JavaFieldStream fs(ik); !fs.done(); fs.next()) {\n+      for (JavaFieldStream fs(ik_called); !fs.done(); fs.next()) {\n@@ -2600,5 +2581,3 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  Klass* k_called = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(called_cls));\n-  k        = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  k_called = JvmtiThreadState::class_to_verify_considering_redefinition(k_called, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  InstanceKlass* ik_called = get_instance_klass_considering_redefinition(called_cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2610,1 +2589,1 @@\n-      Array<Method*>* methods = InstanceKlass::cast(k_called)->methods();\n+      Array<Method*>* methods = ik_called->methods();\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":70,"deletions":91,"binary":false,"changes":161,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-  return InstanceKlass::cast(java_lang_Class::as_Klass(mirror));\n+  return java_lang_Class::as_InstanceKlass(mirror);\n@@ -1313,1 +1313,1 @@\n-  Klass*            _scratch_class;\n+  InstanceKlass*    _scratch_class;\n@@ -1318,1 +1318,1 @@\n-  RedefineVerifyMark(Klass* the_class, Klass* scratch_class,\n+  RedefineVerifyMark(InstanceKlass* the_class, InstanceKlass* scratch_class,\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"oops\/instanceKlass.hpp\"\n@@ -211,1 +212,1 @@\n-  Klass*                _class_being_redefined;\n+  InstanceKlass*        _class_being_redefined;\n@@ -374,1 +375,1 @@\n-  inline void set_class_being_redefined(Klass* k, JvmtiClassLoadKind kind) {\n+  inline void set_class_being_redefined(InstanceKlass* k, JvmtiClassLoadKind kind) {\n@@ -384,1 +385,1 @@\n-  inline Klass* get_class_being_redefined() {\n+  inline InstanceKlass* get_class_being_redefined() {\n@@ -423,2 +424,2 @@\n-  Klass* _the_class_for_redefinition_verification;\n-  Klass* _scratch_class_for_redefinition_verification;\n+  InstanceKlass* _the_class_for_redefinition_verification;\n+  InstanceKlass* _scratch_class_for_redefinition_verification;\n@@ -427,2 +428,2 @@\n-  inline void set_class_versions_map(Klass* the_class,\n-                                     Klass* scratch_class) {\n+  inline void set_class_versions_map(InstanceKlass* the_class,\n+                                     InstanceKlass* scratch_class) {\n@@ -437,1 +438,14 @@\n-                                                    JavaThread *thread) {\n+                                                  JavaThread *thread) {\n+    if (!klass->is_instance_klass()) {\n+      \/\/ set_class_being_redefined() records ONLY InstanceKlass* that are being redefined, so\n+      \/\/ other Klasses will never match.\n+      return klass;\n+    } else {\n+      return class_to_verify_considering_redefinition(InstanceKlass::cast(klass),\n+                                                      thread);\n+    }\n+  }\n+\n+  static inline\n+  InstanceKlass* class_to_verify_considering_redefinition(InstanceKlass* klass,\n+                                                          JavaThread *thread) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.hpp","additions":22,"deletions":8,"binary":false,"changes":30,"status":"modified"}]}