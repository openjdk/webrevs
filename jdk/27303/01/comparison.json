{"files":[{"patch":"@@ -2256,6 +2256,20 @@\n-\/\/ All functions from this section should call the jvmtiThreadSate function:\n-\/\/   Klass* class_to_verify_considering_redefinition(Klass* klass).\n-\/\/ The function returns a Klass* of the _scratch_class if the verifier\n-\/\/ was invoked in the middle of the class redefinition.\n-\/\/ Otherwise it returns its argument value which is the _the_class Klass*.\n-\/\/ Please, refer to the description in the jvmtiThreadState.hpp.\n+\/\/ All functions from this section, unless noted otherwise, should call the functions\n+\/\/   get_klass_considering_redefinition(), or\n+\/\/   get_instance_klass_considering_redefinition()\n+\/\/ These function return JvmtiThreadState::_scratch_class if the verifier\n+\/\/ was invoked in the middle of the redefinition of cls.\n+\/\/ See jvmtiThreadState.hpp for details.\n+\n+inline Klass* get_klass_considering_redefinition(jclass cls, JavaThread* thread) {\n+  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n+  if (k->is_instance_klass()) {\n+    return JvmtiThreadState::class_to_verify_considering_redefinition(InstanceKlass::cast(k), thread);\n+  } else {\n+    return k;\n+  }\n+}\n+\n+inline InstanceKlass* get_instance_klass_considering_redefinition(jclass cls, JavaThread* thread) {\n+  InstanceKlass* ik = java_lang_Class::as_InstanceKlass(JNIHandles::resolve_non_null(cls));\n+  return JvmtiThreadState::class_to_verify_considering_redefinition(ik, thread);\n+}\n@@ -2269,1 +2283,1 @@\n-  \/\/ This isn't necessary since answer is the same since redefinition\n+  \/\/ This isn't necessary since answer is the same because redefinition\n@@ -2271,1 +2285,1 @@\n-  \/\/ k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n+  \/\/ k = get_klass_considering_redefinition(cls, thread)\n@@ -2278,1 +2292,0 @@\n-\n@@ -2280,0 +2293,1 @@\n+  \/\/ No need to call get_klass_considering_redefinition() as redefinition cannot change a class's name.\n@@ -2281,1 +2295,0 @@\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n@@ -2287,2 +2300,1 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n+  Klass* k = get_klass_considering_redefinition(cls, thread);\n@@ -2302,2 +2314,1 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n+  Klass* k = get_klass_considering_redefinition(cls, thread);\n@@ -2309,2 +2320,1 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n+  Klass* k = get_klass_considering_redefinition(cls, thread);\n@@ -2316,2 +2326,1 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n+  Klass* k = get_klass_considering_redefinition(cls, thread);\n@@ -2328,3 +2337,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2342,3 +2350,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2350,3 +2357,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2358,3 +2364,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2366,3 +2371,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2378,3 +2382,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2386,3 +2389,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2394,3 +2396,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  return InstanceKlass::cast(k)->field_access_flags(field_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  return ik->field_access_flags(field_index);\n@@ -2401,3 +2402,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2409,3 +2409,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2417,3 +2416,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2426,3 +2424,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2435,3 +2432,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2442,3 +2438,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2450,3 +2445,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  Method* method = InstanceKlass::cast(k)->methods()->at(method_index);\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  Method* method = ik->methods()->at(method_index);\n@@ -2465,3 +2459,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2480,3 +2473,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2496,3 +2488,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2512,3 +2503,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2527,3 +2517,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2536,3 +2525,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2554,3 +2542,2 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  k = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2573,6 +2560,4 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  Klass* k_called = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(called_cls));\n-  k        = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  k_called = JvmtiThreadState::class_to_verify_considering_redefinition(k_called, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n-  ConstantPool* cp_called = InstanceKlass::cast(k_called)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  InstanceKlass* ik_called = get_instance_klass_considering_redefinition(called_cls, thread);\n+  ConstantPool* cp = ik->constants();\n+  ConstantPool* cp_called = ik_called->constants();\n@@ -2583,2 +2568,1 @@\n-      InstanceKlass* ik = InstanceKlass::cast(k_called);\n-      for (JavaFieldStream fs(ik); !fs.done(); fs.next()) {\n+      for (JavaFieldStream fs(ik_called); !fs.done(); fs.next()) {\n@@ -2600,5 +2584,3 @@\n-  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(cls));\n-  Klass* k_called = java_lang_Class::as_Klass(JNIHandles::resolve_non_null(called_cls));\n-  k        = JvmtiThreadState::class_to_verify_considering_redefinition(k, thread);\n-  k_called = JvmtiThreadState::class_to_verify_considering_redefinition(k_called, thread);\n-  ConstantPool* cp = InstanceKlass::cast(k)->constants();\n+  InstanceKlass* ik = get_instance_klass_considering_redefinition(cls, thread);\n+  InstanceKlass* ik_called = get_instance_klass_considering_redefinition(called_cls, thread);\n+  ConstantPool* cp = ik->constants();\n@@ -2610,1 +2592,1 @@\n-      Array<Method*>* methods = InstanceKlass::cast(k_called)->methods();\n+      Array<Method*>* methods = ik_called->methods();\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":80,"deletions":98,"binary":false,"changes":178,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-  return InstanceKlass::cast(java_lang_Class::as_Klass(mirror));\n+  return java_lang_Class::as_InstanceKlass(mirror);\n@@ -1313,1 +1313,1 @@\n-  Klass*            _scratch_class;\n+  InstanceKlass*    _scratch_class;\n@@ -1318,1 +1318,1 @@\n-  RedefineVerifyMark(Klass* the_class, Klass* scratch_class,\n+  RedefineVerifyMark(InstanceKlass* the_class, InstanceKlass* scratch_class,\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"oops\/instanceKlass.hpp\"\n@@ -211,1 +212,1 @@\n-  Klass*                _class_being_redefined;\n+  InstanceKlass*        _class_being_redefined;\n@@ -374,1 +375,1 @@\n-  inline void set_class_being_redefined(Klass* k, JvmtiClassLoadKind kind) {\n+  inline void set_class_being_redefined(InstanceKlass* k, JvmtiClassLoadKind kind) {\n@@ -384,1 +385,1 @@\n-  inline Klass* get_class_being_redefined() {\n+  inline InstanceKlass* get_class_being_redefined() {\n@@ -423,2 +424,2 @@\n-  Klass* _the_class_for_redefinition_verification;\n-  Klass* _scratch_class_for_redefinition_verification;\n+  InstanceKlass* _the_class_for_redefinition_verification;\n+  InstanceKlass* _scratch_class_for_redefinition_verification;\n@@ -427,2 +428,2 @@\n-  inline void set_class_versions_map(Klass* the_class,\n-                                     Klass* scratch_class) {\n+  inline void set_class_versions_map(InstanceKlass* the_class,\n+                                     InstanceKlass* scratch_class) {\n@@ -436,2 +437,2 @@\n-  Klass* class_to_verify_considering_redefinition(Klass* klass,\n-                                                    JavaThread *thread) {\n+  InstanceKlass* class_to_verify_considering_redefinition(InstanceKlass* klass,\n+                                                          JavaThread* thread) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.hpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"}]}