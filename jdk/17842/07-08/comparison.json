{"files":[{"patch":"@@ -458,0 +458,6 @@\n+  \/\/ Assert here that we only try to create a clone from an If node with the same profiling if that actually makes sense.\n+  \/\/ Some If node subtypes should not be cloned in this way. In theory, we should not clone BaseCountedLoopEndNodes.\n+  \/\/ But they can end up being used as normal If nodes when peeling a loop - they serve as zero-trip guard.\n+  \/\/ Allow them as well.\n+  assert(if_node_profile->Opcode() == Op_If || if_node_profile->is_RangeCheck()\n+         || if_node_profile->is_BaseCountedLoopEnd(), \"should not clone other nodes\");\n@@ -462,6 +468,1 @@\n-    \/\/ Not a RangeCheckNode? Fall back to IfNode. Assert here that we only try to create a clone from an If node with\n-    \/\/ the same profiling if that actually makes sense. Some If node subtypes should not be cloned in this way.\n-    \/\/ In theory, we should not clone BaseCountedLoopEndNodes. But they can end up being used as normal If nodes when\n-    \/\/ peeling a loop - they serve as zero-trip guard. Allow them as well.\n-    assert(if_node_profile->Opcode() == Op_If || if_node_profile->is_RangeCheck()\n-           || if_node_profile->is_BaseCountedLoopEnd(), \"should not clone other nodes\");\n+    \/\/ Not a RangeCheckNode? Fall back to IfNode.\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestBaseCountedEndLoopUnswitchCandidate.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}