{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,3 +105,1 @@\n-                                chc.sslConfig,\n-                                chc.algorithmConstraints, chc.activeProtocols,\n-                                CERTIFICATE_SCOPE);\n+                                chc, CERTIFICATE_SCOPE);\n@@ -195,4 +193,1 @@\n-                            shc.sslConfig,\n-                            shc.algorithmConstraints, shc.negotiatedProtocol,\n-                            spec.signatureSchemes,\n-                            CERTIFICATE_SCOPE);\n+                            shc, spec.signatureSchemes, CERTIFICATE_SCOPE);\n@@ -251,4 +246,1 @@\n-                                shc.sslConfig,\n-                                shc.algorithmConstraints,\n-                                List.of(shc.negotiatedProtocol),\n-                                CERTIFICATE_SCOPE);\n+                                shc, CERTIFICATE_SCOPE);\n@@ -341,4 +333,1 @@\n-                            chc.sslConfig,\n-                            chc.algorithmConstraints, chc.negotiatedProtocol,\n-                            spec.signatureSchemes,\n-                            CERTIFICATE_SCOPE);\n+                            chc, spec.signatureSchemes, CERTIFICATE_SCOPE);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertSignAlgsExtension.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -50,3 +50,0 @@\n-import static sun.security.ssl.SignatureScheme.CERTIFICATE_SCOPE;\n-import static sun.security.ssl.SignatureScheme.HANDSHAKE_SCOPE;\n-\n@@ -1057,2 +1054,1 @@\n-                            ka, hc.negotiatedProtocol,\n-                            HANDSHAKE_SCOPE) != null\n+                            ka, hc.negotiatedProtocol) != null\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateMessage.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -642,3 +642,1 @@\n-                                shc.sslConfig,\n-                                shc.algorithmConstraints, shc.activeProtocols,\n-                                HANDSHAKE_SCOPE);\n+                                shc, HANDSHAKE_SCOPE);\n@@ -650,3 +648,1 @@\n-                                shc.sslConfig,\n-                                shc.algorithmConstraints, shc.activeProtocols,\n-                                CERTIFICATE_SCOPE);\n+                                shc, CERTIFICATE_SCOPE);\n@@ -754,9 +750,1 @@\n-                            chc.sslConfig,\n-                            chc.algorithmConstraints, chc.negotiatedProtocol,\n-                            crm.algorithmIds,\n-                            HANDSHAKE_SCOPE);\n-\n-            if (signAlgs.isEmpty()) {\n-                throw chc.conContext.fatal(Alert.HANDSHAKE_FAILURE,\n-                        \"No supported signature algorithm\");\n-            }\n+                            chc, crm.algorithmIds, HANDSHAKE_SCOPE);\n@@ -766,4 +754,1 @@\n-                            chc.sslConfig,\n-                            chc.algorithmConstraints, chc.negotiatedProtocol,\n-                            crm.algorithmIds,\n-                            CERTIFICATE_SCOPE);\n+                            chc, crm.algorithmIds, CERTIFICATE_SCOPE);\n@@ -771,1 +756,1 @@\n-            if (signCertAlgs.isEmpty()) {\n+            if (signAlgs.isEmpty() || signCertAlgs.isEmpty()) {\n@@ -829,2 +814,1 @@\n-                            ka, hc.negotiatedProtocol,\n-                            HANDSHAKE_SCOPE) != null\n+                            ka, hc.negotiatedProtocol) != null\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateRequest.java","additions":7,"deletions":23,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/HandshakeContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/PostHandshakeContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -451,3 +451,1 @@\n-                            shc.sslConfig,\n-                            shc.algorithmConstraints, shc.activeProtocols,\n-                            CERTIFICATE_SCOPE);\n+                            shc, CERTIFICATE_SCOPE);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/PreSharedKeyExtension.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLAlgorithmConstraints.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSessionImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -278,3 +278,1 @@\n-                                shc.sslConfig,\n-                                shc.algorithmConstraints, shc.activeProtocols,\n-                                HANDSHAKE_SCOPE);\n+                                shc, HANDSHAKE_SCOPE);\n@@ -286,3 +284,1 @@\n-                                    shc.sslConfig,\n-                                    shc.algorithmConstraints, shc.activeProtocols,\n-                                    CERTIFICATE_SCOPE);\n+                                    shc, CERTIFICATE_SCOPE);\n@@ -528,3 +524,1 @@\n-                                shc.sslConfig,\n-                                shc.algorithmConstraints, shc.activeProtocols,\n-                                HANDSHAKE_SCOPE);\n+                                shc, HANDSHAKE_SCOPE);\n@@ -536,3 +530,1 @@\n-                                    shc.sslConfig,\n-                                    shc.algorithmConstraints, shc.activeProtocols,\n-                                    CERTIFICATE_SCOPE);\n+                                    shc, CERTIFICATE_SCOPE);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ServerHello.java","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -359,3 +359,1 @@\n-                                chc.sslConfig,\n-                                chc.algorithmConstraints, chc.activeProtocols,\n-                                CERTIFICATE_SCOPE);\n+                                chc, CERTIFICATE_SCOPE);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SessionTicketExtension.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -193,3 +193,1 @@\n-                            chc.sslConfig,\n-                            chc.algorithmConstraints, chc.activeProtocols,\n-                            HANDSHAKE_SCOPE);\n+                            chc, HANDSHAKE_SCOPE);\n@@ -282,4 +280,1 @@\n-                            shc.sslConfig,\n-                            shc.algorithmConstraints, shc.negotiatedProtocol,\n-                            spec.signatureSchemes,\n-                            HANDSHAKE_SCOPE);\n+                            shc, spec.signatureSchemes, HANDSHAKE_SCOPE);\n@@ -422,4 +417,1 @@\n-                            shc.sslConfig,\n-                            shc.algorithmConstraints,\n-                            List.of(shc.negotiatedProtocol),\n-                            HANDSHAKE_SCOPE);\n+                            shc, HANDSHAKE_SCOPE);\n@@ -513,4 +505,1 @@\n-                            chc.sslConfig,\n-                            chc.algorithmConstraints, chc.negotiatedProtocol,\n-                            spec.signatureSchemes,\n-                            HANDSHAKE_SCOPE);\n+                            chc, spec.signatureSchemes, HANDSHAKE_SCOPE);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SignatureAlgorithmsExtension.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -377,1 +377,1 @@\n-    \/\/ constraints.\n+    \/\/ constraints and SSL scopes.\n@@ -379,4 +379,1 @@\n-            SSLConfiguration config,\n-            SSLAlgorithmConstraints constraints,\n-            List<ProtocolVersion> activeProtocols,\n-            Set<SSLScope> scopes) {\n+            HandshakeContext hc, Set<SSLScope> scopes) {\n@@ -385,0 +382,4 @@\n+        List<ProtocolVersion> activeProtocols = hc.negotiatedProtocol != null\n+                ? List.of(hc.negotiatedProtocol)\n+                : hc.activeProtocols;\n+\n@@ -386,1 +387,1 @@\n-                config.signatureSchemes == null ?\n+                hc.sslConfig.signatureSchemes == null ?\n@@ -388,1 +389,1 @@\n-                    namesOfAvailable(config.signatureSchemes);\n+                    namesOfAvailable(hc.sslConfig.signatureSchemes);\n@@ -402,1 +403,1 @@\n-                if (ss.supportedProtocols.contains(pv)) {\n+                if (ss.isSupportedProtocol(pv, scopes)) {\n@@ -409,1 +410,1 @@\n-                if (ss.isPermitted(constraints, scopes)) {\n+                if (ss.isPermitted(hc.algorithmConstraints, scopes)) {\n@@ -427,5 +428,1 @@\n-            SSLConfiguration config,\n-            SSLAlgorithmConstraints constraints,\n-            ProtocolVersion protocolVersion,\n-            int[] algorithmIds,\n-            Set<SSLScope> scopes) {\n+            HandshakeContext hc, int[] algorithmIds, Set<SSLScope> scopes) {\n@@ -441,5 +438,3 @@\n-            } else if (ss.isAvailable &&\n-                    ss.supportedProtocols.contains(protocolVersion) &&\n-                    (config.signatureSchemes == null ||\n-                        Utilities.contains(config.signatureSchemes, ss.name)) &&\n-                    ss.isPermitted(constraints, scopes)) {\n+            } else if ((hc.sslConfig.signatureSchemes == null\n+                        || Utilities.contains(hc.sslConfig.signatureSchemes, ss.name))\n+                    && ss.isAllowed(hc.algorithmConstraints, hc.negotiatedProtocol, scopes)) {\n@@ -462,2 +457,1 @@\n-            ProtocolVersion version,\n-            Set<SSLScope> scopes) {\n+            ProtocolVersion version) {\n@@ -466,4 +460,2 @@\n-            if (ss.isAvailable &&\n-                    ss.handshakeSupportedProtocols.contains(version) &&\n-                    keyAlgorithm.equalsIgnoreCase(ss.keyAlgorithm) &&\n-                    ss.isPermitted(constraints, scopes)) {\n+            if (keyAlgorithm.equalsIgnoreCase(ss.keyAlgorithm)\n+                    && ss.isAllowed(constraints, version, HANDSHAKE_SCOPE)) {\n@@ -495,2 +487,1 @@\n-            if (ss.isAvailable && (keySize >= ss.minimalKeySize) &&\n-                    ss.handshakeSupportedProtocols.contains(version) &&\n+            if (keySize >= ss.minimalKeySize &&\n@@ -498,1 +489,1 @@\n-                    ss.isPermitted(constraints, HANDSHAKE_SCOPE)) {\n+                    ss.isAllowed(constraints, version, HANDSHAKE_SCOPE)) {\n@@ -558,0 +549,19 @@\n+    \/\/ Returns true if this signature scheme is supported for the given\n+    \/\/ protocol version and SSL scopes.\n+    boolean isSupportedProtocol(ProtocolVersion version, Set<SSLScope> scopes) {\n+        if (scopes != null && scopes.equals(HANDSHAKE_SCOPE)) {\n+            return this.handshakeSupportedProtocols.contains(version);\n+        } else {\n+            return this.supportedProtocols.contains(version);\n+        }\n+    }\n+\n+    \/\/ Returns true if this signature scheme is available, supported and\n+    \/\/ permitted for the given constraints, protocol version and SSL scopes.\n+    boolean isAllowed(SSLAlgorithmConstraints constraints,\n+            ProtocolVersion version, Set<SSLScope> scopes) {\n+        return isAvailable\n+                && isSupportedProtocol(version, scopes)\n+                && isPermitted(constraints, scopes);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SignatureScheme.java","additions":39,"deletions":29,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -896,1 +896,1 @@\n-        SSLContext ctx = SSLContext.getInstance(\"TLS\");\n+        SSLContext ctx = SSLContext.getInstance(\"TLSv1.2\");\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/DNSIdentities.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -904,1 +904,1 @@\n-        SSLContext ctx = SSLContext.getInstance(\"TLS\");\n+        SSLContext ctx = SSLContext.getInstance(\"TLSv1.2\");\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/IPAddressIPIdentities.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -903,1 +903,1 @@\n-        SSLContext ctx = SSLContext.getInstance(\"TLS\");\n+        SSLContext ctx = SSLContext.getInstance(\"TLSv1.2\");\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/IPIdentities.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/Identities.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    protected static final String HANDSHAKE_DISABLED_SIG = \"rsa_pkcs1_sha1\";\n+    protected static final String HANDSHAKE_DISABLED_SIG = \"rsa_pss_rsae_sha384\";\n@@ -47,1 +47,1 @@\n-    protected static final String CERTIFICATE_DISABLED_SIG = \"rsa_pkcs1_sha384\";\n+    protected static final String CERTIFICATE_DISABLED_SIG = \"ecdsa_secp384r1_sha384\";\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/DisableSignatureSchemePerScopeTLS12.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,0 +35,3 @@\n+import static jdk.test.lib.Asserts.assertFalse;\n+import static jdk.test.lib.Asserts.assertTrue;\n+\n@@ -36,0 +39,1 @@\n+import java.util.List;\n@@ -40,0 +44,9 @@\n+    \/\/ Signature schemes not supported in TLSv1.3 only for the handshake.\n+    \/\/ This is regardless of jdk.tls.disabledAlgorithms configuration.\n+    List<String> NOT_SUPPORTED_FOR_HANDSHAKE = List.of(\n+            \"rsa_pkcs1_sha1\",\n+            \"rsa_pkcs1_sha256\",\n+            \"rsa_pkcs1_sha384\",\n+            \"rsa_pkcs1_sha512\"\n+    );\n+\n@@ -55,0 +68,28 @@\n+    @Override\n+    protected void checkClientHello() throws Exception {\n+        super.checkClientHello();\n+\n+        \/\/ Get signature_algorithms extension signature schemes.\n+        List<String> sigAlgsSS = getSigSchemesCliHello(\n+                extractHandshakeMsg(cTOs, TLS_HS_CLI_HELLO),\n+                SIG_ALGS_EXT);\n+\n+        \/\/ Should not be present in signature_algorithms extension.\n+        NOT_SUPPORTED_FOR_HANDSHAKE.forEach(ss ->\n+                assertFalse(sigAlgsSS.contains(ss),\n+                        \"Signature Scheme \" + ss\n+                        + \" present in ClientHello's signature_algorithms extension\"));\n+\n+        \/\/ Get signature_algorithms_cert extension signature schemes.\n+        List<String> sigAlgsCertSS = getSigSchemesCliHello(\n+                extractHandshakeMsg(cTOs, TLS_HS_CLI_HELLO),\n+                SIG_ALGS_CERT_EXT);\n+\n+        \/\/ Should be present in signature_algorithms_cert extension.\n+        NOT_SUPPORTED_FOR_HANDSHAKE.forEach(ss ->\n+                assertTrue(sigAlgsCertSS.contains(ss),\n+                        \"Signature Scheme \" + ss\n+                        + \" isn't present in ClientHello's\"\n+                        + \" signature_algorithms extension\"));\n+    }\n+\n","filename":"test\/jdk\/sun\/security\/ssl\/SignatureScheme\/DisableSignatureSchemePerScopeTLS13.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"modified"}]}