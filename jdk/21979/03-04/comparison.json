{"files":[{"patch":"@@ -77,6 +77,6 @@\n-#define EXCEPTION_CHECK(situationDescription, returnVal)                                        \\\n-    if (jniEnv->ExceptionCheck(jniEnv)) {                                                       \\\n-        PrintDebugString(\"[ERROR]: *** Exception occured while doing: %s; returning %d\", situationDescription, returnVal);   \\\n-        jniEnv->ExceptionDescribe();                                                            \\\n-        jniEnv->ExceptionClear();                                                               \\\n-        return (returnVal);                                                                     \\\n+#define EXCEPTION_CHECK(situationDescription, returnVal)                                            \\\n+    if (jniEnv->ExceptionCheck()) {                                                                 \\\n+        PrintDebugString(\"[ERROR]: *** Exception occured while doing: %s; returning %d\", situationDescription, returnVal);  \\\n+        jniEnv->ExceptionDescribe();                                                                \\\n+        jniEnv->ExceptionClear();                                                                   \\\n+        return (returnVal);                                                                         \\\n@@ -85,14 +85,14 @@\n-#define EXCEPTION_CHECK_WITH_RELEASE(situationDescription, returnVal, js, stringBytes)          \\\n-    if (jniEnv->ExceptionCheck(jniEnv)) {                                                       \\\n-        PrintDebugString(\"[ERROR]: *** Exception occured while doing: %s - call to GetStringLength; returning %d\", situationDescription, returnVal);   \\\n-        jniEnv->ExceptionDescribe();                                                            \\\n-        jniEnv->ExceptionClear();                                                               \\\n-        jniEnv->ReleaseStringChars(js, stringBytes);                                            \\\n-        return (returnVal);                                                                     \\\n-    }                                                                                           \\\n-    jniEnv->ReleaseStringChars(js, stringBytes);                                                \\\n-    if (jniEnv->ExceptionCheck(jniEnv)) {                                                       \\\n-        PrintDebugString(\"[ERROR]: *** Exception occured while doing: %s - call to ReleaseStringChars; returning %d\", situationDescription, returnVal);   \\\n-        jniEnv->ExceptionDescribe();                                                            \\\n-        jniEnv->ExceptionClear();                                                               \\\n-        return (returnVal);                                                                     \\\n+#define EXCEPTION_CHECK_WITH_RELEASE(situationDescription, returnVal, js, stringBytes)              \\\n+    if (jniEnv->ExceptionCheck()) {                                                                 \\\n+        PrintDebugString(\"[ERROR]: *** Exception occured while doing: %s - call to GetStringLength; returning %d\", situationDescription, returnVal);    \\\n+        jniEnv->ExceptionDescribe();                                                                \\\n+        jniEnv->ExceptionClear();                                                                   \\\n+        jniEnv->ReleaseStringChars(js, stringBytes);                                                \\\n+        return (returnVal);                                                                         \\\n+    }                                                                                               \\\n+    jniEnv->ReleaseStringChars(js, stringBytes);                                                    \\\n+    if (jniEnv->ExceptionCheck()) {                                                                 \\\n+        PrintDebugString(\"[ERROR]: *** Exception occured while doing: %s - call to ReleaseStringChars; returning %d\", situationDescription, returnVal); \\\n+        jniEnv->ExceptionDescribe();                                                                \\\n+        jniEnv->ExceptionClear();                                                                   \\\n+        return (returnVal);                                                                         \\\n@@ -101,2 +101,2 @@\n-#define EXCEPTION_CHECK_VOID(situationDescription)                                              \\\n-    if (jniEnv->ExceptionCheck(jniEnv)) {                                                       \\\n+#define EXCEPTION_CHECK_VOID(situationDescription)                                                  \\\n+    if (jniEnv->ExceptionCheck()) {                                                                 \\\n@@ -104,3 +104,3 @@\n-        jniEnv->ExceptionDescribe();                                                            \\\n-        jniEnv->ExceptionClear();                                                               \\\n-        return;                                                                                 \\\n+        jniEnv->ExceptionDescribe();                                                                \\\n+        jniEnv->ExceptionClear();                                                                   \\\n+        return;                                                                                     \\\n","filename":"src\/jdk.accessibility\/windows\/native\/libjavaaccessbridge\/AccessBridgeJavaEntryPoints.cpp","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"}]}