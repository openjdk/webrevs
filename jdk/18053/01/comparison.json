{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-            pipe = SocketIOPipe.createClientIOPipe(log, \"localhost\", portNumber, 0);\n+            pipe = SocketIOPipe.createClientIOPipe(log, portNumber, 0);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/AttachingConnector\/attach\/attach004\/attach004t.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        pipe = SocketIOPipe.createClientIOPipe(log, \"localhost\", argParser.getPort(), 0);\n+        pipe = SocketIOPipe.createClientIOPipe(log, argParser.getPort(), 0);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/aod\/DummyTargetApplication.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -344,1 +344,1 @@\n-                pipe = SocketIOPipe.createClientIOPipe(log, \"localhost\", argParser.getPort(), 0);\n+                pipe = SocketIOPipe.createClientIOPipe(log, argParser.getPort(), 0);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/aod\/TargetApplicationWaitingAgents.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-     * \"<i>localhost<\/i>\" string by default.\n+     * empty string (represents an address of the loopback interface) by default.\n@@ -116,1 +116,1 @@\n-        return options.getProperty(\"test.host\", \"localhost\");\n+        return options.getProperty(\"test.host\", \"\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeArgumentHandler.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,1 @@\n-                pipeServerSocket.bind(null);\n+                pipeServerSocket.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeBinder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.net.InetAddress;\n@@ -38,1 +39,1 @@\n- * and 'createClientIOPipe(Log log, String host, int port, long timeout)' for client SocketIOPipe.\n+ * and 'createClientIOPipe(Log log, int port, long timeout)' for client SocketIOPipe.\n@@ -43,2 +44,2 @@\n- * For example, if client process should send string 'OK' to the server process which is run\n- * at the host 'SERVER_HOST' following code can be written:\n+ * For example, if client process should send string 'OK' to the server process,\n+ * the following code can be written:\n@@ -56,2 +57,2 @@\n- *  \/\/ initialize SocketIOPipe with given values of server host name and port\n- *  SocketIOPipe pipe = SocketIOPipe.createClientIOPipe(log, 'SERVER_HOST', port, timeoutValue);\n+ *  \/\/ initialize SocketIOPipe with given port\n+ *  SocketIOPipe pipe = SocketIOPipe.createClientIOPipe(log, port, timeoutValue);\n@@ -126,1 +127,1 @@\n-            ss.bind(new InetSocketAddress(port));\n+            ss.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), port));\n@@ -146,2 +147,3 @@\n-    public static SocketIOPipe createClientIOPipe(Log log, String host, int port, long timeout) {\n-        return new SocketIOPipe(log, DEFAULT_PIPE_LOG_PREFIX, host, port, timeout, false);\n+    public static SocketIOPipe createClientIOPipe(Log log, int port, long timeout) {\n+        \/\/ use null for host to connect to loopback address\n+        return new SocketIOPipe(log, DEFAULT_PIPE_LOG_PREFIX, null, port, timeout, false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/SocketIOPipe.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"}]}