{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,3 +35,9 @@\n- * block.  However, the interfaces can model some structures only\n- * appearing inside method bodies, such as local variables and\n- * anonymous classes.\n+ * block. Concretely, there is no model of the abstract syntax tree\n+ * (AST) structure of a Java program.\n+ * However, the interfaces can model some structures only\n+ * appearing inside method bodies, such as {@linkplain ElementKind#LOCAL_VARIABLE local variables},\n+ * {@linkplain NestingKind#ANONYMOUS anonymous classes}, and\n+ * {@linkplain ElementKind#EXCEPTION_PARAMETER exception parameters}.\n+ * Therefore, these interfaces can be used by an AST API to model the\n+ * declarations found in the method bodies of Java compilation units\n+ * (JLS {@jls 7.3}).\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/package-info.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"}]}