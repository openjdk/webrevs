{"files":[{"patch":"@@ -838,8 +838,6 @@\n-        \/\/ Call resolve_super so class circularity is checked\n-        interf = SystemDictionary::resolve_with_circularity_detection(\n-                                                  _class_name,\n-                                                  unresolved_klass,\n-                                                  Handle(THREAD, _loader_data->class_loader()),\n-                                                  _protection_domain,\n-                                                  false,\n-                                                  CHECK);\n+        \/\/ Call resolve on the interface class name with class circularity checking\n+        interf = SystemDictionary::resolve_super_or_fail(_class_name,\n+                                                         unresolved_klass,\n+                                                         Handle(THREAD, _loader_data->class_loader()),\n+                                                         _protection_domain,\n+                                                         false, CHECK);\n@@ -5939,2 +5937,1 @@\n-                       SystemDictionary::resolve_with_circularity_detection(\n-                                                               _class_name,\n+                       SystemDictionary::resolve_super_or_fail(_class_name,\n@@ -5944,2 +5941,1 @@\n-                                                               true,\n-                                                               CHECK);\n+                                                               true, CHECK);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-                            Symbol* next_klass_name){\n+                                   Symbol* next_klass_name){\n","filename":"src\/hotspot\/share\/classfile\/placeholders.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,3 +84,3 @@\n-  SymbolHandle      _next_klass_name; \/\/ next step in the recursive process of class loading\n-  JavaThread*       _definer;         \/\/ owner of define token\n-  InstanceKlass*    _instanceKlass;   \/\/ InstanceKlass from successful define\n+  SymbolHandle      _next_klass_name;     \/\/ next step in the recursive process of class loading\n+  JavaThread*       _definer;             \/\/ owner of define token\n+  InstanceKlass*    _instanceKlass;       \/\/ InstanceKlass from successful define\n@@ -89,2 +89,2 @@\n-                                    \/\/ This can't be multiple threads since class loading waits for\n-                                    \/\/ this token to be removed.\n+                                          \/\/ This can't be multiple threads since class loading\n+                                          \/\/ waits for this token to be removed.\n@@ -102,1 +102,1 @@\n-  SeenThread*        circularityThreadQ()        const { return _circularityThreadQ; }\n+  SeenThread*        circularityThreadQ()  const { return _circularityThreadQ; }\n","filename":"src\/hotspot\/share\/classfile\/placeholders.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -408,5 +408,5 @@\n-                                                       Symbol* next_name,\n-                                                       Handle class_loader,\n-                                                       Handle protection_domain,\n-                                                       bool is_superclass,\n-                                                       TRAPS) {\n+                                                                    Symbol* next_name,\n+                                                                    Handle class_loader,\n+                                                                    Handle protection_domain,\n+                                                                    bool is_superclass,\n+                                                                    TRAPS) {\n@@ -443,1 +443,0 @@\n-    \/\/ Otherwise, a LinkageError will be thrown later.\n@@ -445,4 +444,4 @@\n-        ((quicksuperk = klassk->java_super()) != nullptr) &&\n-         ((quicksuperk->name() == next_name) &&\n-            (quicksuperk->class_loader() == class_loader()))) {\n-           return quicksuperk;\n+       ((quicksuperk = klassk->java_super()) != nullptr) &&\n+       ((quicksuperk->name() == next_name) &&\n+         (quicksuperk->class_loader() == class_loader()))) {\n+      return quicksuperk;\n@@ -505,1 +504,4 @@\n-  \/\/ superk is not used; resolve_super_or_fail is called for circularity check only.\n+  \/\/ superk is not used; resolve_with_circularity_detection is called for circularity check only.\n+  \/\/ This passes true to is_superclass even though it might not be the super to perform the optimization anyway.\n+  \/\/ The only thing that takes different action for is_superclass is dumping the static archive, which doesn't\n+  \/\/ reach this path.\n@@ -508,5 +510,5 @@\n-                                                          superclassname,\n-                                                          class_loader,\n-                                                          protection_domain,\n-                                                          false,\n-                                                          CHECK);\n+                                                                       superclassname,\n+                                                                       class_loader,\n+                                                                       protection_domain,\n+                                                                       true,\n+                                                                       CHECK);\n@@ -579,0 +581,1 @@\n+  DEBUG_ONLY(ResourceMark rm(THREAD));\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":19,"deletions":16,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -105,3 +105,0 @@\n-  \/\/ Resolve a superclass or superinterface. Called from ClassFileParser,\n-  \/\/ parse_interfaces, resolve_instance_class_or_null, load_shared_class\n-  \/\/ \"class_name\" is the class whose super class or interface is being resolved.\n@@ -114,0 +111,11 @@\n+\n+  \/\/ Resolve a superclass or superinterface. Called from ClassFileParser,\n+  \/\/ parse_interfaces, resolve_instance_class_or_null, load_shared_class\n+  \/\/ \"class_name\" is the class whose super class or interface is being resolved.\n+  static InstanceKlass* resolve_super_or_fail(Symbol* class_name, Symbol* super_name,\n+                                              Handle class_loader,\n+                                              Handle protection_domain, bool is_superclass, TRAPS) {\n+    return resolve_with_circularity_detection(class_name, super_name, class_loader, protection_domain,\n+                                              is_superclass, THREAD);\n+  }\n+\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}