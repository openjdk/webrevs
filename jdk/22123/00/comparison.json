{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,4 @@\n+            \/\/ This test could possibly cause some unexpected SA exceptions because one\n+            \/\/ or more threads are active during the stack trace. Ignore them. The threads\n+            \/\/ we care about should still be present in the output.\n+            test.ignoreExceptions();\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbCDSJstackPrintAll.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+    private boolean ignoreExceptions;\n@@ -47,0 +48,5 @@\n+        ignoreExceptions = false;\n+    }\n+\n+    public void ignoreExceptions() {\n+        ignoreExceptions = true;\n@@ -150,6 +156,8 @@\n-        \/\/ This will detect most SA failures, including during the attach.\n-        oa.shouldNotMatch(\"^sun.jvm.hotspot.debugger.DebuggerException:.*$\");\n-        oa.shouldNotMatch(\"sun.jvm.hotspot.utilities.AssertionFailure\");\n-        \/\/ This will detect unexpected exceptions, like NPEs and asserts, that are caught\n-        \/\/ by sun.jvm.hotspot.CommandProcessor.\n-        oa.shouldNotMatch(\"^Error: .*$\");\n+        if (!ignoreExceptions) {\n+            \/\/ This will detect most SA failures, including during the attach.\n+            oa.shouldNotMatch(\"^sun.jvm.hotspot.debugger.DebuggerException:.*$\");\n+            oa.shouldNotMatch(\"sun.jvm.hotspot.utilities.AssertionFailure\");\n+            \/\/ This will detect unexpected exceptions, like NPEs and asserts, that are caught\n+            \/\/ by sun.jvm.hotspot.CommandProcessor.\n+            oa.shouldNotMatch(\"^Error: .*$\");\n+        }\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbLauncher.java","additions":15,"deletions":7,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,4 @@\n+            \/\/ This test could possibly cause some unexpected SA exceptions because one\n+            \/\/ or more threads are active during the stack trace. Ignore them. The threads\n+            \/\/ we care about should still be present in the output.\n+            test.ignoreExceptions();\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbWhere.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}