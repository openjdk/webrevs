{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,0 +72,7 @@\n+$(eval $(call SetupCopyFiles,COPY_CLDRCONVERTER_PROPERTIES, \\\n+    SRC := $(TOPDIR)\/make\/jdk\/src\/classes\/build\/tools\/cldrconverter, \\\n+    DEST := $(BUILDTOOLS_OUTPUTDIR)\/jdk_tools_classes\/build\/tools\/cldrconverter, \\\n+    FILES := $(wildcard $(TOPDIR)\/make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/*.properties)))\n+\n+TARGETS += $(COPY_CLDRCONVERTER_PROPERTIES)\n+\n","filename":"make\/CompileToolsJdk.gmk","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,141 @@\n+#\tcoverageLevels.txt\n+#\tCopyright © 2022 Unicode, Inc.\n+#\tCLDR data files are interpreted according to the LDML specification (http:\/\/unicode.org\/reports\/tr35\/)\n+#\tFor terms of use, see http:\/\/www.unicode.org\/copyright.html\n+#\n+#\tProvides the Coverage Level of locales at Basic or Above.\n+#\tFor more info,see the Locale Coverage Chart for this version.\n+#\tGenerated by ShowLocaleCoverage.\n+#\n+#Locale ;\tLevel\n+af ;\tmodern\n+am ;\tmodern\n+ar ;\tmodern\n+as ;\tmodern\n+ast ;\tbasic\n+az ;\tmodern\n+be ;\tmodern\n+bg ;\tmodern\n+bgc ;\tbasic\n+bho ;\tbasic\n+bn ;\tmodern\n+br ;\tmoderate\n+brx ;\tbasic\n+bs ;\tmodern\n+bs_Cyrl ;\tbasic\n+ca ;\tmodern\n+ceb ;\tmoderate\n+chr ;\tmodern\n+cs ;\tmodern\n+cv ;\tmoderate\n+cy ;\tmodern\n+da ;\tmodern\n+de ;\tmodern\n+doi ;\tbasic\n+dsb ;\tmodern\n+el ;\tmodern\n+en ;\tmodern\n+es ;\tmodern\n+et ;\tmodern\n+eu ;\tmodern\n+fa ;\tmodern\n+ff_Adlm ;\tbasic\n+fi ;\tmodern\n+fil ;\tmodern\n+fo ;\tbasic\n+fr ;\tmodern\n+ga ;\tmodern\n+gd ;\tmodern\n+gl ;\tmodern\n+gu ;\tmodern\n+ha ;\tmodern\n+he ;\tmodern\n+hi ;\tmodern\n+hi_Latn ;\tmodern\n+hr ;\tmodern\n+hsb ;\tmodern\n+hu ;\tmodern\n+hy ;\tmodern\n+ia ;\tbasic\n+id ;\tmodern\n+ig ;\tmodern\n+is ;\tmodern\n+it ;\tmodern\n+ja ;\tmodern\n+jv ;\tmodern\n+ka ;\tmodern\n+kea ;\tbasic\n+kgp ;\tbasic\n+kk ;\tmodern\n+km ;\tmodern\n+kn ;\tmodern\n+ko ;\tmodern\n+kok ;\tmodern\n+ks ;\tbasic\n+ks_Deva ;\tbasic\n+ky ;\tmodern\n+lo ;\tmodern\n+lt ;\tmodern\n+lv ;\tmodern\n+mai ;\tbasic\n+mi ;\tbasic\n+mk ;\tmodern\n+ml ;\tmodern\n+mn ;\tmodern\n+mni ;\tbasic\n+mr ;\tmodern\n+ms ;\tmodern\n+my ;\tmodern\n+ne ;\tmodern\n+nl ;\tmodern\n+nn ;\tmodern\n+no ;\tmodern\n+or ;\tmodern\n+pa ;\tmodern\n+pcm ;\tmodern\n+pl ;\tmodern\n+ps ;\tmodern\n+pt ;\tmodern\n+qu ;\tmoderate\n+raj ;\tbasic\n+rm ;\tbasic\n+ro ;\tmodern\n+ru ;\tmodern\n+sa ;\tbasic\n+sat ;\tbasic\n+sc ;\tmoderate\n+sd ;\tmodern\n+sd_Deva ;\tbasic\n+si ;\tmodern\n+sk ;\tmodern\n+sl ;\tmodern\n+so ;\tmodern\n+sq ;\tmodern\n+sr ;\tmodern\n+su ;\tbasic\n+sv ;\tmodern\n+sw ;\tmodern\n+ta ;\tmodern\n+te ;\tmodern\n+tg ;\tbasic\n+th ;\tmodern\n+ti ;\tbasic\n+tk ;\tmodern\n+to ;\tbasic\n+tr ;\tmodern\n+tt ;\tbasic\n+uk ;\tmodern\n+ur ;\tmodern\n+uz ;\tmodern\n+uz_Cyrl ;\tbasic\n+vi ;\tmodern\n+wo ;\tbasic\n+xh ;\tmoderate\n+yo ;\tmodern\n+yrl ;\tbasic\n+yue ;\tmodern\n+yue_Hans ;\tmodern\n+zh ;\tmodern\n+zh_Hant ;\tmodern\n+zu ;\tmodern\n+#EOF\n","filename":"make\/data\/cldr\/common\/properties\/coverageLevels.txt","additions":141,"deletions":0,"binary":false,"changes":141,"status":"added"},{"patch":"@@ -72,0 +72,1 @@\n+    private static String COVERAGELEVELS_FILE;\n@@ -261,0 +262,1 @@\n+        COVERAGELEVELS_FILE = CLDR_BASE + \"\/properties\/coverageLevels.txt\";\n@@ -362,0 +364,1 @@\n+        var coverageMap = coverageLevelsMap();\n@@ -368,1 +371,5 @@\n-                    StringBuilder sb = getCandLocales(cldrLoc);\n+                    List<Locale> candList = getCandidateLocales(cldrLoc);\n+                    if (!\"root\".equals(id) && candList.stream().noneMatch(coverageMap::containsKey)) {\n+                        continue;\n+                    }\n+                    StringBuilder sb = getCandLocales(candList);\n@@ -513,2 +520,1 @@\n-    private static StringBuilder getCandLocales(Locale cldrLoc) {\n-        List<Locale> candList = getCandidateLocales(cldrLoc);\n+    private static StringBuilder getCandLocales(List<Locale> candList) {\n@@ -1198,0 +1204,20 @@\n+    private static Map<Locale, String> coverageLevelsMap() throws Exception {\n+        \/\/ First, parse `coverageLevels.txt` file\n+        var covMap = Files.readAllLines(Path.of(COVERAGELEVELS_FILE)).stream()\n+            .filter(line -> !line.isBlank() && !line.startsWith(\"#\"))\n+            .map(line -> line.split(\"[\\s\\t]*;[\\s\\t]*\", 3))\n+            .filter(a -> a[1].matches(\"basic|moderate|modern|comprehensive\"))\n+            .collect(Collectors.toMap(\n+                    a -> Locale.forLanguageTag(a[0].replaceAll(\"_\", \"-\")),\n+                    a -> a[1],\n+                    (v1, v2) -> v2, \/\/ should never happen\n+                    HashMap::new));\n+\n+        \/\/ Add other common (non-seed) locales (below `basic` coverage level) as of v42\n+        ResourceBundle.getBundle(CLDRConverter.class.getPackageName() + \".OtherCommonLocales\")\n+            .keySet()\n+            .forEach(k -> covMap.put(Locale.forLanguageTag(k), \"\"));\n+\n+        return covMap;\n+    }\n+\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/CLDRConverter.java","additions":29,"deletions":3,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -0,0 +1,140 @@\n+#\n+# Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+# Other common (non-seed) locales that are below `Basic` coverage level\n+# as of CLDR v42 (Extracted from\n+# https:\/\/github.com\/unicode-org\/cldr-staging\/blob\/main\/docs\/charts\/42\/tsv\/locale-coverage.tsv)\n+\n+agq=Aghem\n+ak=Akan\n+ann=Obolo\n+asa=Asu\n+az-Cyrl=Azerbaijani (Cyrillic)\n+bas=Basaa\n+bem=Bemba\n+bez=Bena\n+bm=Bambara\n+bo=Tibetan\n+ccp=Chakma\n+ce=Chechen\n+cgg=Chiga\n+ckb=Central Kurdish\n+dav=Taita\n+dje=Zarma\n+dua=Duala\n+dyo=Jola-Fonyi\n+dz=Dzongkha\n+ebu=Embu\n+ee=Ewe\n+eo=Esperanto\n+ewo=Ewondo\n+ff=Fula\n+frr=Northern Frisian\n+fur=Friulian\n+fy=Western Frisian\n+gsw=Swiss German\n+guz=Gusii\n+gv=Manx\n+haw=Hawaiian\n+ii=Sichuan Yi\n+jgo=Ngomba\n+jmc=Machame\n+kab=Kabyle\n+kam=Kamba\n+kde=Makonde\n+khq=Koyra Chiini\n+ki=Kikuyu\n+kkj=Kako\n+kl=Kalaallisut\n+kln=Kalenjin\n+ksb=Shambala\n+ksf=Bafia\n+ksh=Colognian\n+ku=Kurdish\n+kw=Cornish\n+lag=Langi\n+lb=Luxembourgish\n+lg=Ganda\n+lkt=Lakota\n+ln=Lingala\n+lrc=Northern Luri\n+lu=Luba-Katanga\n+luo=Luo\n+luy=Luyia\n+mas=Masai\n+mdf=Moksha\n+mer=Meru\n+mfe=Morisyen\n+mg=Malagasy\n+mgh=Makhuwa-Meetto\n+mgo=Meta��\n+mt=Maltese\n+mua=Mundang\n+mzn=Mazanderani\n+naq=Nama\n+nd=North Ndebele\n+nds=Low German\n+nmg=Kwasio\n+nnh=Ngiemboon\n+nus=Nuer\n+nyn=Nyankole\n+oc=Occitan\n+om=Oromo\n+os=Ossetic\n+pa-Arab=Punjabi (Arabic)\n+pis=Pijin\n+rn=Rundi\n+rof=Rombo\n+rw=Kinyarwanda\n+rwk=Rwa\n+sah=Yakut\n+saq=Samburu\n+sbp=Sangu\n+se=Northern Sami\n+seh=Sena\n+ses=Koyraboro Senni\n+sg=Sango\n+shi=Tachelhit\n+shi-Latn=Tachelhit (Latin)\n+smn=Inari Sami\n+sms=Skolt Sami\n+sn=Shona\n+teo=Teso\n+tok=Toki Pona\n+twq=Tasawaq\n+tzm=Central Atlas Tamazight\n+ug=Uyghur\n+uz-Arab=Uzbek (Arabic)\n+vai=Vai\n+vai-Latn=Vai (Latin)\n+vun=Vunjo\n+wae=Walser\n+xog=Soga\n+yav=Yangben\n+yi=Yiddish\n+zgh=Standard Moroccan Tamazight\n+\n+# Not listed, but existed\n+sr-Latn=Serbian (Latin)\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/OtherCommonLocales.properties","additions":140,"deletions":0,"binary":false,"changes":140,"status":"added"}]}