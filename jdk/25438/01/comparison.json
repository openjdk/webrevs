{"files":[{"patch":"@@ -1885,12 +1885,0 @@\n-    \/\/ Current test shows that, it brings performance gain when MaxVectorSize >= 32, but brings\n-    \/\/ regression when MaxVectorSize == 16. So only enable the intrinsic when MaxVectorSize >= 32.\n-    case Op_RoundVF:\n-      return UseRVV && MaxVectorSize >= 32;\n-\n-    \/\/ For double, current test shows that even with MaxVectorSize == 32, there is still some regression.\n-    \/\/ Although there is no hardware to verify it for now, from the trend of performance data on hardwares\n-    \/\/ (with vlenb == 16 and 32 respectively), it's promising to bring better performance rather than\n-    \/\/ regression for double when MaxVectorSize == 64+. So only enable the intrinsic when MaxVectorSize >= 64.\n-    case Op_RoundVD:\n-      return UseRVV && MaxVectorSize >= 64;\n-\n@@ -1920,3 +1908,0 @@\n-    case Op_FmaVF:\n-    case Op_FmaVD:\n-      return UseRVV && UseFMA;\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -125,0 +125,16 @@\n+      case Op_FmaVF:\n+      case Op_FmaVD:\n+        return UseFMA;\n+\n+      \/\/ Current test shows that, it brings performance gain when vlen >= 8, but brings\n+      \/\/ regression when vlen == 4. So only enable this intrinsic when vlen >= 8.\n+      case Op_RoundVF:\n+        return vlen >= 8\n+\n+      \/\/ For double, current test shows that even with vlen == 4, there is still some regression.\n+      \/\/ Although there is no hardware to verify it, from the trend of performance data on hardwares\n+      \/\/ (with vlen == 2 and 4 respectively), it's promising to bring better performance rather than\n+      \/\/ regression for double when vlen == 8. So only enable this intrinsic when vlen >= 8.\n+      case Op_RoundVD:\n+        return vlen >= 8\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}