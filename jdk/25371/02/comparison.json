{"files":[{"patch":"@@ -1694,1 +1694,1 @@\n-        String subtag = tag.getLanguage();\n+        String subtag = tag.language();\n@@ -1699,1 +1699,1 @@\n-        subtag = tag.getScript();\n+        subtag = tag.script();\n@@ -1705,1 +1705,1 @@\n-        subtag = tag.getRegion();\n+        subtag = tag.region();\n@@ -1711,1 +1711,1 @@\n-        List<String>subtags = tag.getVariants();\n+        List<String>subtags = tag.variants();\n@@ -1718,1 +1718,1 @@\n-        subtags = tag.getExtensions();\n+        subtags = tag.extensions();\n@@ -1724,1 +1724,1 @@\n-        subtag = tag.getPrivateuse();\n+        subtag = tag.privateuse();\n","filename":"src\/java.base\/share\/classes\/java\/util\/Locale.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -350,2 +350,2 @@\n-        if (!langtag.getExtlangs().isEmpty()) {\n-            language = langtag.getExtlangs().get(0);\n+        if (!langtag.extlangs().isEmpty()) {\n+            language = langtag.extlangs().get(0);\n@@ -353,1 +353,1 @@\n-            String lang = langtag.getLanguage();\n+            String lang = langtag.language();\n@@ -358,2 +358,2 @@\n-        script = langtag.getScript();\n-        region = langtag.getRegion();\n+        script = langtag.script();\n+        region = langtag.region();\n@@ -361,1 +361,1 @@\n-        List<String> bcpVariants = langtag.getVariants();\n+        List<String> bcpVariants = langtag.variants();\n@@ -371,1 +371,1 @@\n-        setExtensions(langtag.getExtensions(), langtag.getPrivateuse());\n+        setExtensions(langtag.extensions(), langtag.privateuse());\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/InternalLocaleBuilder.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -45,4 +45,4 @@\n-public class LanguageTag {\n-    \/\/\n-    \/\/ static fields\n-    \/\/\n+\/\/ List fields are unmodifiable\n+public record LanguageTag(String language, String script, String region, String privateuse,\n+                          List<String> extlangs, List<String> variants, List<String> extensions) {\n+\n@@ -53,0 +53,2 @@\n+    private static final String EMPTY_SUBTAG = \"\";\n+    private static final List<String> EMPTY_SUBTAGS = Collections.emptyList();\n@@ -54,11 +56,0 @@\n-    \/\/\n-    \/\/ Language subtag fields\n-    \/\/\n-    private String language = \"\";      \/\/ language subtag\n-    private String script = \"\";        \/\/ script subtag\n-    private String region = \"\";        \/\/ region subtag\n-    private String privateuse = \"\";    \/\/ privateuse\n-\n-    private List<String> extlangs = Collections.emptyList();   \/\/ extlang subtags\n-    private List<String> variants = Collections.emptyList();   \/\/ variant subtags\n-    private List<String> extensions = Collections.emptyList(); \/\/ extensions\n@@ -68,1 +59,1 @@\n-    private static final Map<String, String[]> LEGACY = new HashMap<>();\n+    private static final Map<String, String[]> LEGACY;\n@@ -131,0 +122,1 @@\n+        LEGACY = HashMap.newHashMap(entries.length);\n@@ -136,3 +128,0 @@\n-    private LanguageTag() {\n-    }\n-\n@@ -198,2 +187,6 @@\n-        LanguageTag tag = new LanguageTag();\n-\n+        String language = parseLanguage(itr, pp);\n+        List<String> extlangs;\n+        String script;\n+        String region;\n+        List<String> variants;\n+        List<String> extensions;\n@@ -201,6 +194,12 @@\n-        if (tag.parseLanguage(itr, pp)) {\n-            tag.parseExtlangs(itr, pp);\n-            tag.parseScript(itr, pp);\n-            tag.parseRegion(itr, pp);\n-            tag.parseVariants(itr, pp);\n-            tag.parseExtensions(itr, pp, errorMsg);\n+        if (!language.isEmpty()) {\n+            extlangs = parseExtlangs(itr, pp);\n+            script = parseScript(itr, pp);\n+            region = parseRegion(itr, pp);\n+            variants = parseVariants(itr, pp);\n+            extensions = parseExtensions(itr, pp, errorMsg);\n+        } else {\n+            extlangs = EMPTY_SUBTAGS;\n+            script = EMPTY_SUBTAG;\n+            region = EMPTY_SUBTAG;\n+            variants = EMPTY_SUBTAGS;\n+            extensions = EMPTY_SUBTAGS;\n@@ -208,1 +207,1 @@\n-        tag.parsePrivateuse(itr, pp, errorMsg);\n+        String privateuse = parsePrivateuse(itr, pp, errorMsg);\n@@ -224,1 +223,1 @@\n-        return tag;\n+        return new LanguageTag(language, script, region, privateuse, extlangs, variants, extensions);\n@@ -231,1 +230,1 @@\n-    private boolean parseLanguage(StringTokenIterator itr, ParsePosition pp) {\n+    private static String parseLanguage(StringTokenIterator itr, ParsePosition pp) {\n@@ -233,1 +232,1 @@\n-            return false;\n+            return EMPTY_SUBTAG;\n@@ -236,2 +235,0 @@\n-        boolean found = false;\n-\n@@ -240,2 +237,0 @@\n-            found = true;\n-            language = s;\n@@ -244,0 +239,1 @@\n+            return s;\n@@ -246,1 +242,1 @@\n-        return found;\n+        return EMPTY_SUBTAG;\n@@ -249,1 +245,1 @@\n-    private boolean parseExtlangs(StringTokenIterator itr, ParsePosition pp) {\n+    private static List<String> parseExtlangs(StringTokenIterator itr, ParsePosition pp) {\n@@ -251,1 +247,1 @@\n-            return false;\n+            return EMPTY_SUBTAGS;\n@@ -253,3 +249,1 @@\n-\n-        boolean found = false;\n-\n+        List<String> extlangs = null;\n@@ -261,2 +255,1 @@\n-            found = true;\n-            if (extlangs.isEmpty()) {\n+            if (extlangs == null) {\n@@ -268,1 +261,0 @@\n-\n@@ -274,2 +266,2 @@\n-\n-        return found;\n+        return extlangs == null ? EMPTY_SUBTAGS :\n+                Collections.unmodifiableList(extlangs);\n@@ -278,1 +270,1 @@\n-    private boolean parseScript(StringTokenIterator itr, ParsePosition pp) {\n+    private static String parseScript(StringTokenIterator itr, ParsePosition pp) {\n@@ -280,1 +272,1 @@\n-            return false;\n+            return EMPTY_SUBTAG;\n@@ -283,2 +275,0 @@\n-        boolean found = false;\n-\n@@ -287,2 +277,0 @@\n-            found = true;\n-            script = s;\n@@ -291,0 +279,1 @@\n+            return s;\n@@ -293,1 +282,1 @@\n-        return found;\n+        return EMPTY_SUBTAG;\n@@ -296,1 +285,1 @@\n-    private boolean parseRegion(StringTokenIterator itr, ParsePosition pp) {\n+    private static String parseRegion(StringTokenIterator itr, ParsePosition pp) {\n@@ -298,1 +287,1 @@\n-            return false;\n+            return EMPTY_SUBTAG;\n@@ -300,3 +289,0 @@\n-\n-        boolean found = false;\n-\n@@ -305,2 +291,0 @@\n-            found = true;\n-            region = s;\n@@ -309,0 +293,1 @@\n+            return s;\n@@ -311,1 +296,1 @@\n-        return found;\n+        return EMPTY_SUBTAG;\n@@ -314,1 +299,1 @@\n-    private boolean parseVariants(StringTokenIterator itr, ParsePosition pp) {\n+    private static List<String> parseVariants(StringTokenIterator itr, ParsePosition pp) {\n@@ -316,1 +301,1 @@\n-            return false;\n+            return EMPTY_SUBTAGS;\n@@ -318,2 +303,1 @@\n-\n-        boolean found = false;\n+        List<String> variants = null;\n@@ -326,2 +310,1 @@\n-            found = true;\n-            if (variants.isEmpty()) {\n+            if (variants == null) {\n@@ -335,1 +318,2 @@\n-        return found;\n+        return variants == null ? EMPTY_SUBTAGS :\n+                Collections.unmodifiableList(variants);\n@@ -338,1 +322,1 @@\n-    private boolean parseExtensions(StringTokenIterator itr, ParsePosition pp,\n+    private static List<String> parseExtensions(StringTokenIterator itr, ParsePosition pp,\n@@ -341,1 +325,1 @@\n-            return false;\n+            return EMPTY_SUBTAGS;\n@@ -343,2 +327,1 @@\n-\n-        boolean found = false;\n+        List<String> extensions = null;\n@@ -371,1 +354,1 @@\n-                if (extensions.isEmpty()) {\n+                if (extensions == null) {\n@@ -375,1 +358,0 @@\n-                found = true;\n@@ -380,1 +362,2 @@\n-        return found;\n+        return extensions == null ? EMPTY_SUBTAGS :\n+                Collections.unmodifiableList(extensions);\n@@ -383,1 +366,1 @@\n-    private boolean parsePrivateuse(StringTokenIterator itr, ParsePosition pp,\n+    private static String parsePrivateuse(StringTokenIterator itr, ParsePosition pp,\n@@ -386,1 +369,1 @@\n-            return false;\n+            return EMPTY_SUBTAG;\n@@ -389,2 +372,0 @@\n-        boolean found = false;\n-\n@@ -413,2 +394,1 @@\n-                privateuse = sb.toString();\n-                found = true;\n+                return sb.toString();\n@@ -418,1 +398,1 @@\n-        return found;\n+        return EMPTY_SUBTAG;\n@@ -465,1 +445,0 @@\n-        LanguageTag tag = new LanguageTag();\n@@ -467,4 +446,8 @@\n-        String language = baseLocale.getLanguage();\n-        String script = baseLocale.getScript();\n-        String region = baseLocale.getRegion();\n-        String variant = baseLocale.getVariant();\n+        String language = EMPTY_SUBTAG;\n+        String script = EMPTY_SUBTAG;\n+        String region = EMPTY_SUBTAG;\n+\n+        String baseLanguage = baseLocale.getLanguage();\n+        String baseScript = baseLocale.getScript();\n+        String baseRegion = baseLocale.getRegion();\n+        String baseVariant = baseLocale.getVariant();\n@@ -476,1 +459,1 @@\n-        if (isLanguage(language)) {\n+        if (isLanguage(baseLanguage)) {\n@@ -478,8 +461,7 @@\n-            if (language.equals(\"iw\")) {\n-                language = \"he\";\n-            } else if (language.equals(\"ji\")) {\n-                language = \"yi\";\n-            } else if (language.equals(\"in\")) {\n-                language = \"id\";\n-            }\n-            tag.language = language;\n+            baseLanguage = switch (baseLanguage) {\n+                case \"iw\" -> \"he\";\n+                case \"ji\" -> \"yi\";\n+                case \"in\" -> \"id\";\n+                default -> baseLanguage;\n+            };\n+            language = baseLanguage;\n@@ -488,2 +470,2 @@\n-        if (isScript(script)) {\n-            tag.script = canonicalizeScript(script);\n+        if (isScript(baseScript)) {\n+            script = canonicalizeScript(baseScript);\n@@ -493,2 +475,2 @@\n-        if (isRegion(region)) {\n-            tag.region = canonicalizeRegion(region);\n+        if (isRegion(baseRegion)) {\n+            region = canonicalizeRegion(baseRegion);\n@@ -499,3 +481,3 @@\n-        if (tag.language.equals(\"no\") && tag.region.equals(\"NO\") && variant.equals(\"NY\")) {\n-            tag.language = \"nn\";\n-            variant = \"\";\n+        if (language.equals(\"no\") && region.equals(\"NO\") && baseVariant.equals(\"NY\")) {\n+            language = \"nn\";\n+            baseVariant = EMPTY_SUBTAG;\n@@ -504,3 +486,3 @@\n-        if (!variant.isEmpty()) {\n-            List<String> variants = null;\n-            StringTokenIterator varitr = new StringTokenIterator(variant, BaseLocale.SEP);\n+        List<String> variants = null;\n+        if (!baseVariant.isEmpty()) {\n+            StringTokenIterator varitr = new StringTokenIterator(baseVariant, BaseLocale.SEP);\n@@ -519,1 +501,0 @@\n-                tag.variants = variants;\n@@ -559,1 +540,0 @@\n-            tag.extensions = extensions;\n@@ -573,5 +553,1 @@\n-        if (privateuse != null) {\n-            tag.privateuse = privateuse;\n-        }\n-\n-        if (tag.language.isEmpty() && (hasSubtag || privateuse == null)) {\n+        if (language.isEmpty() && (hasSubtag || privateuse == null)) {\n@@ -581,17 +557,1 @@\n-            tag.language = UNDETERMINED;\n-        }\n-\n-        return tag;\n-    }\n-\n-    \/\/\n-    \/\/ Getter methods for language subtag fields\n-    \/\/\n-\n-    public String getLanguage() {\n-        return language;\n-    }\n-\n-    public List<String> getExtlangs() {\n-        if (extlangs.isEmpty()) {\n-            return Collections.emptyList();\n+            language = UNDETERMINED;\n@@ -599,10 +559,0 @@\n-        return Collections.unmodifiableList(extlangs);\n-    }\n-\n-    public String getScript() {\n-        return script;\n-    }\n-\n-    public String getRegion() {\n-        return region;\n-    }\n@@ -610,13 +560,5 @@\n-    public List<String> getVariants() {\n-        if (variants.isEmpty()) {\n-            return Collections.emptyList();\n-        }\n-        return Collections.unmodifiableList(variants);\n-    }\n-\n-    public List<String> getExtensions() {\n-        if (extensions.isEmpty()) {\n-            return Collections.emptyList();\n-        }\n-        return Collections.unmodifiableList(extensions);\n-    }\n+        privateuse = privateuse == null ? EMPTY_SUBTAG : privateuse;\n+        extensions = extensions == null ? EMPTY_SUBTAGS :\n+                Collections.unmodifiableList(extensions);\n+        variants = variants == null ? EMPTY_SUBTAGS :\n+                Collections.unmodifiableList(variants);\n@@ -624,2 +566,2 @@\n-    public String getPrivateuse() {\n-        return privateuse;\n+        \/\/ extlangs always empty for locale parse\n+        return new LanguageTag(language, script, region, privateuse, EMPTY_SUBTAGS, variants, extensions);\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/LanguageTag.java","additions":97,"deletions":155,"binary":false,"changes":252,"status":"modified"}]}