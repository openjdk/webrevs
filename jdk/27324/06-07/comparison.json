{"files":[{"patch":"@@ -485,21 +485,1 @@\n-        String canonicalPath = canonicalize0(path);\n-        String finalPath = null;\n-        try {\n-            String fp = getFinalPath(canonicalPath);\n-\n-            \/\/ if getFinalPath converted a drive letter to a UNC-style path,\n-            \/\/ then fall back to using the result of canonicalize0 because\n-            \/\/ there does not appear to be a reliable way to map the prefix\n-            \/\/ of the result of getFinalPath back to a drive letter\n-            if (fp.charAt(0) == '\\\\' && fp.charAt(1) == '\\\\' &&\n-                isLetter(canonicalPath.charAt(0)) &&\n-                canonicalPath.charAt(1) == ':')\n-            {\n-                finalPath = canonicalPath;\n-            } else {\n-                finalPath = fp;\n-            }\n-        } catch (IOException ignored) {\n-            finalPath = canonicalPath;\n-        }\n-        return finalPath;\n+        return canonicalize0(path);\n@@ -518,0 +498,1 @@\n+\n","filename":"src\/java.base\/windows\/classes\/java\/io\/WinNTFileSystem.java","additions":2,"deletions":21,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+#include <wchar.h>\n@@ -149,0 +150,39 @@\n+\/\/\n+\/\/ Get the final path of 'path' placing the result in 'finalPath'.\n+\/\/ Zero is returned on success, non-zero on error.\n+\/\/\n+int getFinalPath(WCHAR* path, WCHAR* finalPath, DWORD size)\n+{\n+    HANDLE h = CreateFileW(path,\n+                           FILE_READ_ATTRIBUTES,\n+                           FILE_SHARE_DELETE |\n+                           FILE_SHARE_READ | FILE_SHARE_WRITE,\n+                           NULL,\n+                           OPEN_EXISTING,\n+                           FILE_FLAG_BACKUP_SEMANTICS,\n+                           NULL);\n+\n+    if (h != INVALID_HANDLE_VALUE) {\n+        DWORD len = GetFinalPathNameByHandleW(h, finalPath, size, 0);\n+        CloseHandle(h);\n+        if (len > 0 && len <= size) {\n+            if (finalPath[0] == L'\\\\' && finalPath[1] == L'\\\\' &&\n+                finalPath[2] == L'?' && finalPath[3] == L'\\\\')\n+            {\n+                \/\/ Strip prefix (should be \\\\?\\ or \\\\?\\UNC)\n+                int isUnc = (finalPath[4] == L'U' &&\n+                             finalPath[5] == L'N' &&\n+                             finalPath[6] == L'C');\n+                int prefixLen = (isUnc) ? 7 : 4;\n+                \/\/ the amount to copy includes terminator\n+                int amountToCopy = len - prefixLen + 1;\n+                wmemmove(finalPath, finalPath + prefixLen, amountToCopy);\n+            }\n+\n+            return 0;\n+        }\n+    }\n+\n+    return -1;\n+}\n+\n@@ -240,0 +280,9 @@\n+\n+            \/\/ If a reparse point is encountered, get the final path.\n+            if ((fd.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT) != 0) {\n+                if (getFinalPath(path, result, size) != 0)\n+                    goto err;\n+                free(path);\n+                return 0;\n+            }\n+\n","filename":"src\/java.base\/windows\/native\/libjava\/canonicalize_md.c","additions":49,"deletions":0,"binary":false,"changes":49,"status":"modified"}]}