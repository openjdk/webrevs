{"files":[{"patch":"@@ -1292,1 +1292,1 @@\n-    \/\/ not jump (i.e. move src to dst) if cmp1 == cmp2\n+    \/\/ fallthrough (i.e. move src to dst) if cmp1 == cmp2\n@@ -1321,1 +1321,1 @@\n-    \/\/ not jump (i.e. move src to dst) if cmp1 != cmp2, including the case of NaN\n+    \/\/ fallthrough (i.e. move src to dst) if cmp1 != cmp2, including the case of NaN\n@@ -1353,1 +1353,1 @@\n-    \/\/ not jump (i.e. move src to dst) if cmp1 <= cmp2 or either is NaN\n+    \/\/ fallthrough (i.e. move src to dst) if cmp1 <= cmp2 or either is NaN\n@@ -1385,1 +1385,1 @@\n-    \/\/ not jump (i.e. move src to dst) if cmp1 >= cmp2\n+    \/\/ fallthrough (i.e. move src to dst) if cmp1 >= cmp2\n@@ -1417,1 +1417,1 @@\n-    \/\/ not jump (i.e. move src to dst) if cmp1 < cmp2 or either is NaN\n+    \/\/ fallthrough (i.e. move src to dst) if cmp1 < cmp2 or either is NaN\n@@ -1449,1 +1449,1 @@\n-    \/\/ not jump (i.e. move src to dst) if cmp1 > cmp2\n+    \/\/ fallthrough (i.e. move src to dst) if cmp1 > cmp2\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -70,11 +70,1 @@\n-        framework.addFlags(\"-XX:-TieredCompilation\", \"-XX:+UseZicond\", \"-Xlog:jit+compilation=trace\").start();\n-        Asserts.assertTrue(TestFramework.getLastTestVMOutput().contains(\"C2_MacroAssembler::enc_cmove_cmp_fp => BoolTest::ge\"),\n-                           \"Not trigger BoolTest::ge\");\n-\n-        framework = new TestFramework(Test_ge_1.class);\n-        framework.addFlags(\"-XX:-TieredCompilation\", \"-XX:-UseZicond\", \"-Xlog:jit+compilation=trace\").start();\n-        Asserts.assertTrue(TestFramework.getLastTestVMOutput().contains(\"C2_MacroAssembler::enc_cmove_cmp_fp => BoolTest::ge\"),\n-                           \"Not trigger BoolTest::ge\");\n-\n-        framework = new TestFramework(Test_ge_2.class);\n-        framework.addFlags(\"-XX:-TieredCompilation\", \"-XX:+UseZicond\", \"-Xlog:jit+compilation=trace\").start();\n+        framework.addFlags(\"-XX:-TieredCompilation\", \"-Xlog:jit+compilation=trace\").start();\n@@ -85,1 +75,1 @@\n-        framework.addFlags(\"-XX:-TieredCompilation\", \"-XX:-UseZicond\", \"-Xlog:jit+compilation=trace\").start();\n+        framework.addFlags(\"-XX:-TieredCompilation\", \"-Xlog:jit+compilation=trace\").start();\n@@ -91,11 +81,1 @@\n-        framework.addFlags(\"-XX:-TieredCompilation\", \"-XX:+UseZicond\", \"-Xlog:jit+compilation=trace\").start();\n-        Asserts.assertTrue(TestFramework.getLastTestVMOutput().contains(\"C2_MacroAssembler::enc_cmove_cmp_fp => BoolTest::gt\"),\n-                           \"Not trigger BoolTest::gt\");\n-\n-        framework = new TestFramework(Test_gt_1.class);\n-        framework.addFlags(\"-XX:-TieredCompilation\", \"-XX:-UseZicond\", \"-Xlog:jit+compilation=trace\").start();\n-        Asserts.assertTrue(TestFramework.getLastTestVMOutput().contains(\"C2_MacroAssembler::enc_cmove_cmp_fp => BoolTest::gt\"),\n-                           \"Not trigger BoolTest::gt\");\n-\n-        framework = new TestFramework(Test_gt_2.class);\n-        framework.addFlags(\"-XX:-TieredCompilation\", \"-XX:+UseZicond\", \"-Xlog:jit+compilation=trace\").start();\n+        framework.addFlags(\"-XX:-TieredCompilation\", \"-Xlog:jit+compilation=trace\").start();\n@@ -106,1 +86,1 @@\n-        framework.addFlags(\"-XX:-TieredCompilation\", \"-XX:-UseZicond\", \"-Xlog:jit+compilation=trace\").start();\n+        framework.addFlags(\"-XX:-TieredCompilation\", \"-Xlog:jit+compilation=trace\").start();\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestFPComparison2.java","additions":4,"deletions":24,"binary":false,"changes":28,"status":"modified"}]}