{"files":[{"patch":"@@ -38,1 +38,1 @@\n-public class UninitializedThisException {\n+public class UninitializedThisException extends Base {\n@@ -41,2 +41,1 @@\n-        Objects.requireNonNull(s1);\n-        Objects.requireNonNull(s2);\n+        super(s1, s2);\n@@ -47,2 +46,2 @@\n-                           \"-nest(\" + o2.fail() + \")\" +\n-                           \"-post(\" + o3.fail() + \")\");\n+                    \"-nest(\" + o2.fail() + \")\" +\n+                    \"-post(\" + o3.fail() + \")\");\n@@ -60,1 +59,1 @@\n-                           \"-post(\" + o3.fail() + \")\");\n+                    \"-post(\" + o3.fail() + \")\");\n@@ -72,1 +71,1 @@\n-                           \"-post(\" + o3.fail() + \")\");\n+                    \"-post(\" + o3.fail() + \")\");\n@@ -84,1 +83,1 @@\n-                           \"-nest(\" + o2.fail() + \")\");\n+                    \"-nest(\" + o2.fail() + \")\");\n@@ -127,0 +126,89 @@\n+    public UninitializedThisException(R o1, R o2, R o3, boolean superMarker) {\n+        out.println(\"-pre(\" + o1.fail() + \")\" +\n+                    \"-nest(\" + o2.fail() + \")\" +\n+                    \"-post(\" + o3.fail() + \")\" +\n+                    \"-super\");\n+        String val1 = o1 instanceof R(String s, _) ? s : null;\n+        out.println(\"check1\");\n+        super(val1, o2 instanceof R(String s, _) ? s : null);\n+        out.println(\"check2\");\n+        String val2 = o3 instanceof R(String s, _) ? s : null;\n+        out.println(\"check3\");\n+        Objects.requireNonNull(val2);\n+    }\n+\n+    public UninitializedThisException(String o1, R o2, R o3, boolean superMarker) {\n+        out.println(\"-nest(\" + o2.fail() + \")\" +\n+                    \"-post(\" + o3.fail() + \")\" +\n+                    \"-super\");\n+        String val1 = o1;\n+        out.println(\"check1\");\n+        super(val1, o2 instanceof R(String s, _) ? s : null);\n+        out.println(\"check2\");\n+        String val2 = o3 instanceof R(String s, _) ? s : null;\n+        out.println(\"check3\");\n+        Objects.requireNonNull(val2);\n+    }\n+\n+    public UninitializedThisException(R o1, String o2, R o3, boolean superMarker) {\n+        out.println(\"-pre(\" + o1.fail() + \")\" +\n+                    \"-post(\" + o3.fail() + \")\" +\n+                    \"-super\");\n+        String val1 = o1 instanceof R(String s, _) ? s : null;\n+        out.println(\"check1\");\n+        super(val1, o2);\n+        out.println(\"check2\");\n+        String val2 = o3 instanceof R(String s, _) ? s : null;\n+        out.println(\"check3\");\n+        Objects.requireNonNull(val2);\n+    }\n+\n+    public UninitializedThisException(R o1, R o2, String o3, boolean superMarker) {\n+        out.println(\"-pre(\" + o1.fail() + \")\" +\n+                    \"-nest(\" + o2.fail() + \")\" +\n+                    \"-super\");\n+        String val1 = o1 instanceof R(String s, _) ? s : null;\n+        out.println(\"check1\");\n+        super(val1, o2 instanceof R(String s, _) ? s : null);\n+        out.println(\"check2\");\n+        String val2 = o3;\n+        out.println(\"check3\");\n+        Objects.requireNonNull(val2);\n+    }\n+\n+    public UninitializedThisException(R o1, String o2, String o3, boolean superMarker) {\n+        out.println(\"-pre(\" + o1.fail() + \")\" +\n+                    \"-super\");\n+        String val1 = o1 instanceof R(String s, _) ? s : null;\n+        out.println(\"check1\");\n+        super(val1, o2);\n+        out.println(\"check2\");\n+        String val2 = o3;\n+        out.println(\"check3\");\n+        Objects.requireNonNull(val2);\n+    }\n+\n+    public UninitializedThisException(String o1, R o2, String o3, boolean superMarker) {\n+        out.println(\"-nest(\" + o2.fail() + \")\" +\n+                    \"-super\");\n+        String val1 = o1;\n+        out.println(\"check1\");\n+        super(val1, o2 instanceof R(String s, _) ? s : null);\n+        out.println(\"check2\");\n+        String val2 = o3;\n+        out.println(\"check3\");\n+        Objects.requireNonNull(val2);\n+    }\n+\n+    public UninitializedThisException(String o1, String o2, R o3, boolean superMarker) {\n+        out.println(\"-post(\" + o3.fail() + \")\" +\n+                    \"-super\");\n+        String val1 = o1;\n+        out.println(\"check1\");\n+        super(val1, o2);\n+        out.println(\"check2\");\n+        String val2 = o3 instanceof R(String s, _) ? s : null;\n+        out.println(\"check3\");\n+        Objects.requireNonNull(val2);\n+    }\n+\n@@ -166,0 +254,38 @@\n+        runAndCatch(() -> new UninitializedThisException(new R(\"\", true), new R(\"\", false), new R(\"\", false), true));\n+        runAndCatch(() -> new UninitializedThisException(new R(\"\", false), new R(\"\", true), new R(\"\", false), true));\n+        runAndCatch(() -> new UninitializedThisException(new R(\"\", false), new R(\"\", false), new R(\"\", true), true));\n+        new UninitializedThisException(new R(\"\", false), new R(\"\", false), new R(\"\", false), true);\n+\n+        out.println();\n+\n+        runAndCatch(() -> new UninitializedThisException(\"\", new R(\"\", true), new R(\"\", false), true));\n+        runAndCatch(() -> new UninitializedThisException(\"\", new R(\"\", false), new R(\"\", true), true));\n+        new UninitializedThisException(\"\", new R(\"\", false), new R(\"\", false), true);\n+\n+        out.println();\n+\n+        runAndCatch(() -> new UninitializedThisException(new R(\"\", true), \"\", new R(\"\", false), true));\n+        runAndCatch(() -> new UninitializedThisException(new R(\"\", false), \"\", new R(\"\", true), true));\n+        new UninitializedThisException(new R(\"\", false), \"\", new R(\"\", false), true);\n+\n+        out.println();\n+\n+        runAndCatch(() -> new UninitializedThisException(new R(\"\", true), new R(\"\", false), \"\", true));\n+        runAndCatch(() -> new UninitializedThisException(new R(\"\", false), new R(\"\", true), \"\", true));\n+        new UninitializedThisException(new R(\"\", false), new R(\"\", false), \"\", true);\n+\n+        out.println();\n+\n+        runAndCatch(() -> new UninitializedThisException(new R(\"\", true), \"\", \"\", true));\n+        new UninitializedThisException(new R(\"\", false), \"\", \"\", true);\n+\n+        out.println();\n+\n+        runAndCatch(() -> new UninitializedThisException(\"\", new R(\"\", true), \"\", true));\n+        new UninitializedThisException(\"\", new R(\"\", false), \"\", true);\n+\n+        out.println();\n+\n+        runAndCatch(() -> new UninitializedThisException(\"\", \"\", new R(\"\", true), true));\n+        new UninitializedThisException(\"\", \"\", new R(\"\", false), true);\n+\n@@ -167,0 +293,2 @@\n+        String expectedLog = EXPECTED_LOG_PATTERN.replace(\"${super}\", \"\") +\n+                             EXPECTED_LOG_PATTERN.replace(\"${super}\", \"-super\");\n@@ -168,2 +296,2 @@\n-        if (!Objects.equals(actualLog, EXPECTED_LOG)) {\n-            throw new AssertionError(\"Expected log:\\n\" + EXPECTED_LOG +\n+        if (!Objects.equals(actualLog, expectedLog)) {\n+            throw new AssertionError(\"Expected log:\\n\" + expectedLog +\n@@ -174,1 +302,1 @@\n-    static final String EXPECTED_LOG =\n+    static final String EXPECTED_LOG_PATTERN =\n@@ -176,2 +304,2 @@\n-            -pre(true)-nest(false)-post(false)\n-            -pre(false)-nest(true)-post(false)\n+            -pre(true)-nest(false)-post(false)${super}\n+            -pre(false)-nest(true)-post(false)${super}\n@@ -179,1 +307,1 @@\n-            -pre(false)-nest(false)-post(true)\n+            -pre(false)-nest(false)-post(true)${super}\n@@ -182,1 +310,1 @@\n-            -pre(false)-nest(false)-post(false)\n+            -pre(false)-nest(false)-post(false)${super}\n@@ -187,1 +315,1 @@\n-            -nest(true)-post(false)\n+            -nest(true)-post(false)${super}\n@@ -189,1 +317,1 @@\n-            -nest(false)-post(true)\n+            -nest(false)-post(true)${super}\n@@ -192,1 +320,1 @@\n-            -nest(false)-post(false)\n+            -nest(false)-post(false)${super}\n@@ -197,2 +325,2 @@\n-            -pre(true)-post(false)\n-            -pre(false)-post(true)\n+            -pre(true)-post(false)${super}\n+            -pre(false)-post(true)${super}\n@@ -201,1 +329,1 @@\n-            -pre(false)-post(false)\n+            -pre(false)-post(false)${super}\n@@ -206,2 +334,2 @@\n-            -pre(true)-nest(false)\n-            -pre(false)-nest(true)\n+            -pre(true)-nest(false)${super}\n+            -pre(false)-nest(true)${super}\n@@ -209,1 +337,1 @@\n-            -pre(false)-nest(false)\n+            -pre(false)-nest(false)${super}\n@@ -214,2 +342,2 @@\n-            -pre(true)\n-            -pre(false)\n+            -pre(true)${super}\n+            -pre(false)${super}\n@@ -220,1 +348,1 @@\n-            -nest(true)\n+            -nest(true)${super}\n@@ -222,1 +350,1 @@\n-            -nest(false)\n+            -nest(false)${super}\n@@ -227,1 +355,1 @@\n-            -post(true)\n+            -post(true)${super}\n@@ -230,1 +358,1 @@\n-            -post(false)\n+            -post(false)${super}\n@@ -256,1 +384,7 @@\n-}\n\\ No newline at end of file\n+}\n+class Base {\n+    public Base(String s1, String s2) {\n+        Objects.requireNonNull(s1);\n+        Objects.requireNonNull(s2);\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/UninitializedThisException.java","additions":165,"deletions":31,"binary":false,"changes":196,"status":"modified"}]}