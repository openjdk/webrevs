{"files":[{"patch":"@@ -3196,1 +3196,1 @@\n-\/\/ Note: this method also kills Z_R1_scratch register; Beware of Register clobbering in future\n+\/\/ Note: this method also kills Z_R1_scratch register on machines older than z15\n@@ -3227,1 +3227,3 @@\n-  clear_reg(r_result, true \/* whole_reg *\/, false \/* set_cc *\/); \/\/ r_result = 0, let's hope that search will be a success\n+  \/\/ load 0 in r_result by default. In case search fails, r_result will be loaded\n+  \/\/ with value 1 (failure) at the end of this method.\n+  clear_reg(r_result, true \/* whole_reg *\/, false \/* set_cc *\/); \/\/ r_result = 0\n@@ -3327,2 +3329,2 @@\n-  \/\/ NOTE: please load 0 only in r_result, for now lookup_secondary_supers_table sets r_result to 0\n-  \/\/ clear_reg(r_result, true \/* whole_reg *\/, false \/* set_cc *\/); \/\/ let's hope that search will be a success\n+  \/\/ r_result is set to 0 by lookup_secondary_supers_table.\n+  \/\/ clear_reg(r_result, true \/* whole_reg *\/, false \/* set_cc *\/);\n@@ -3359,1 +3361,1 @@\n-    z_locgr(r_array_index, r_result, bcondHigh); \/\/ r_result is containing 0, so we're good :)\n+    z_locgr(r_array_index, r_result, bcondHigh); \/\/ r_result is containing 0\n@@ -3382,1 +3384,1 @@\n-    z_bru(L_done); \/\/ whatever we got from repne_scan, forward it\n+    z_bru(L_done); \/\/ forward the result we got from repne_scan\n@@ -3417,1 +3419,1 @@\n-    z_srlk(r_array_base, r_result, 1); \/\/ r_array_base will be loaded again, so fine if we use it here\n+    z_srlk(r_array_base, r_result, 1); \/\/ r_array_base is free here\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.cpp","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"}]}