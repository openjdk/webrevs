{"files":[{"patch":"@@ -45,1 +45,0 @@\n-    private final long hmacMechanism;\n@@ -71,2 +70,11 @@\n-    P11HKDF(Token token, String algorithm, long hmacMechanism,\n-            KDFParameters kdfParameters)\n+    private void checkMechanismEnabled(long mechanism) {\n+        if (!token.provider.config.isEnabled(mechanism)) {\n+            throw new ProviderException(\"Mechanism \" +\n+                    Functions.getMechanismName(mechanism) +\n+                    \" is disabled through 'enabledMechanisms' or \" +\n+                    \"'disabledMechanisms' in \" + token.provider.getName() +\n+                    \" configuration.\");\n+        }\n+    }\n+\n+    P11HKDF(Token token, String algorithm, KDFParameters kdfParameters)\n@@ -77,1 +85,0 @@\n-        this.hmacMechanism = hmacMechanism;\n@@ -120,0 +127,3 @@\n+        long mechanism = isData ? CKM_HKDF_DATA : CKM_HKDF_DERIVE;\n+        checkMechanismEnabled(mechanism);\n+\n@@ -185,1 +195,1 @@\n-                    hmacMechanism, saltType, saltBytes, p11SaltKey != null ?\n+                    svcKi.hmacMech, saltType, saltBytes, p11SaltKey != null ?\n@@ -190,2 +200,1 @@\n-                    new CK_MECHANISM(isData ? CKM_HKDF_DATA : CKM_HKDF_DERIVE,\n-                    params), baseKeyID, attrs);\n+                    new CK_MECHANISM(mechanism, params), baseKeyID, attrs);\n@@ -252,7 +261,1 @@\n-            if (!token.provider.config.isEnabled(ckMech.mechanism)) {\n-                throw new ProviderException(\"Mechanism \" +\n-                        Functions.getMechanismName(ckMech.mechanism) +\n-                        \" is either not supported in the token or \" +\n-                        \"disabled through 'disabledMechanisms' in \" +\n-                        token.provider.getName() + \" configuration.\");\n-            }\n+            checkMechanismEnabled(ckMech.mechanism);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11HKDF.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -150,0 +150,1 @@\n+        public final long hmacMech;\n@@ -154,0 +155,1 @@\n+            hmacMech = hmacKi.mech;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11SecretKeyFactory.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1083,6 +1083,6 @@\n-        d(KDF, \"HKDF-SHA256\", P11HKDF, m(CKM_SHA256_HMAC),\n-                m(CKM_HKDF_DERIVE, CKM_HKDF_DATA));\n-        d(KDF, \"HKDF-SHA384\", P11HKDF, m(CKM_SHA384_HMAC),\n-                m(CKM_HKDF_DERIVE, CKM_HKDF_DATA));\n-        d(KDF, \"HKDF-SHA512\", P11HKDF, m(CKM_SHA512_HMAC),\n-                m(CKM_HKDF_DERIVE, CKM_HKDF_DATA));\n+        d(KDF, \"HKDF-SHA256\", P11HKDF, m(CKM_HKDF_DERIVE, CKM_HKDF_DATA),\n+                m(CKM_SHA256_HMAC));\n+        d(KDF, \"HKDF-SHA384\", P11HKDF, m(CKM_HKDF_DERIVE, CKM_HKDF_DATA),\n+                m(CKM_SHA384_HMAC));\n+        d(KDF, \"HKDF-SHA512\", P11HKDF, m(CKM_HKDF_DERIVE, CKM_HKDF_DATA),\n+                m(CKM_SHA512_HMAC));\n@@ -1525,2 +1525,1 @@\n-                    return new P11HKDF(token, algorithm, mechanism,\n-                            (KDFParameters) param);\n+                    return new P11HKDF(token, algorithm, (KDFParameters) param);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/SunPKCS11.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"}]}