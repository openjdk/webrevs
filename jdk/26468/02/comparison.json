{"files":[{"patch":"@@ -155,1 +155,1 @@\n-void Jfr::on_vm_shutdown(bool exception_handler, bool halt) {\n+void Jfr::on_vm_shutdown(bool emit_old_object_samples, bool emit_event_shutdown, bool halt) {\n@@ -157,1 +157,1 @@\n-    JfrEmergencyDump::on_vm_shutdown(exception_handler);\n+    JfrEmergencyDump::on_vm_shutdown(emit_old_object_samples, emit_event_shutdown);\n","filename":"src\/hotspot\/share\/jfr\/jfr.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-  static void on_vm_shutdown(bool exception_handler = false, bool halt = false);\n+  static void on_vm_shutdown(bool emit_old_object_samples, bool emit_event_shutdown, bool halt = false);\n","filename":"src\/hotspot\/share\/jfr\/jfr.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -559,2 +559,5 @@\n-static void post_events(bool exception_handler, Thread* thread) {\n-  if (exception_handler) {\n+static void post_events(bool emit_old_object_samples, bool emit_event_shutdown, Thread* thread) {\n+  if (emit_old_object_samples) {\n+    LeakProfiler::emit_events(max_jlong, false, false);\n+  }\n+  if (emit_event_shutdown) {\n@@ -564,3 +567,0 @@\n-  } else {\n-    \/\/ OOM\n-    LeakProfiler::emit_events(max_jlong, false, false);\n@@ -569,1 +569,1 @@\n-  event.set_reason(exception_handler ? \"Crash\" : \"Out of Memory\");\n+  event.set_reason(emit_old_object_samples ? \"Out of Memory\" : \"Crash\");\n@@ -574,1 +574,1 @@\n-void JfrEmergencyDump::on_vm_shutdown(bool exception_handler) {\n+void JfrEmergencyDump::on_vm_shutdown(bool emit_old_object_samples, bool emit_event_shutdown) {\n@@ -587,1 +587,1 @@\n-  post_events(exception_handler, thread);\n+  post_events(emit_old_object_samples, emit_event_shutdown, thread);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-  static void on_vm_shutdown(bool exception_handler);\n+  static void on_vm_shutdown(bool emit_old_object_samples, bool emit_event_shutdown);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -466,1 +466,4 @@\n-  JFR_ONLY(Jfr::on_vm_shutdown(false, halt);)\n+  \/\/ 2nd argument (emit_event_shutdown) should be set to false\n+  \/\/ because EventShutdown would be emitted at Threads::destroy_vm().\n+  \/\/ (one of the callers of before_exit())\n+  JFR_ONLY(Jfr::on_vm_shutdown(true, false, halt);)\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1859,1 +1859,1 @@\n-  JFR_ONLY(Jfr::on_vm_shutdown(true);)\n+  JFR_ONLY(Jfr::on_vm_shutdown(static_cast<VMErrorType>(_id) == OOM_JAVA_HEAP_FATAL, true);)\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}