{"files":[{"patch":"@@ -245,4 +245,16 @@\n-void CDSConfig::handle_incompatible_property(const char* prop) {\n-  stop_dumping_full_module_graph();\n-  stop_using_full_module_graph();\n-  log_info(cds)(\"full module graph: disabled due to incompatible property: %s\", prop);\n+void CDSConfig::check_incompatible_property(const char* key, const char* value) {\n+  static const char* incompatible_properties[] = {\n+    \"java.system.class.loader\",\n+    \"jdk.module.showModuleResolution\",\n+    \"jdk.module.validation\"\n+  };\n+\n+  for (uint i = 0; i < ARRAY_SIZE(incompatible_properties); i++) {\n+    if (strcmp(key, incompatible_properties[i]) == 0) {\n+      stop_dumping_full_module_graph();\n+      stop_using_full_module_graph();\n+      log_info(cds)(\"full module graph: disabled due to incompatible property: %s=%s\", key, value);\n+      break;\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-  static void handle_incompatible_property(const char* prop) NOT_CDS_RETURN;\n+  static void check_incompatible_property(const char* key, const char* value) NOT_CDS_RETURN;\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1260,0 +1260,4 @@\n+  if (internal == ExternalProperty) {\n+    CDSConfig::check_incompatible_property(key, value);\n+  }\n+\n@@ -2495,5 +2499,0 @@\n-      if (match_option(option, \"-Djava.system.class.loader=\", &value) ||\n-          match_option(option, \"-Djdk.module.showModuleResolution\", &value) ||\n-          match_option(option, \"-Djdk.module.validation\", &value)) {\n-        CDSConfig::handle_incompatible_property((const char*)option->optionString + 2);\n-      }\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}