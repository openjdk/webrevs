{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.awt.event.MouseWheelEvent;\n@@ -32,1 +33,1 @@\n- * @summary [Win] To verify the support for high resolution mouse wheel on Windows.\n+ * @summary To verify the support for high resolution mouse wheel.\n@@ -34,1 +35,0 @@\n- * @requires (os.family == \"windows\")\n@@ -41,3 +41,6 @@\n-    public static final String INSTRUCTIONS = \"\"\"\n-            This test is relevant for windows platforms and mouses with high-resolution wheel,\n-            please just press pass if this is not the case.\n+    private static int wheelEventCount = 0;\n+    private static final String INSTRUCTIONS = \"\"\"\n+            <html>\n+            <body>\n+            This test is relevant on platforms with high-resolution mouse wheel,\n+            please press PASS if this is not the case.<br> <br>\n@@ -47,3 +50,1 @@\n-            below the instruction window.\n-            Please make sure that some of the messages have non-zero 'wheelRotation' value,\n-            and also check if the test works OK if the mouse wheel is rotated very slow.\n+            below the instruction window.<br> <br>\n@@ -51,1 +52,13 @@\n-            If the above is true press PASS, else FAIL.\n+            Check if the test works OK when the mouse wheel is rotated very slow.<br> <br>\n+\n+            This is a semi-automated test, when 5 or more MouseWheelEvents with\n+            <br><b> scrollType=WHEEL_UNIT_SCROLL and wheelRotation != 0 <\/b> <br>\n+            are recorded, the test automatically passes.<br>\n+            The events are also logged in the logging panel\n+            for user reference.<br> <br>\n+\n+            <hr>\n+            PS: If you don't see events with scrollType=WHEEL_UNIT_SCROLL,\n+            then the mouse doesn't support high-resolution scrolling.<br> <br>\n+            <\/body>\n+            <\/html>\n@@ -54,1 +67,1 @@\n-    public static void main (String[] args) throws Exception {\n+    public static void main(String[] args) throws Exception {\n@@ -58,3 +71,3 @@\n-                .rows((int) INSTRUCTIONS.lines().count() + 2)\n-                .columns(45)\n-                .logArea(8)\n+                .rows(18)\n+                .columns(50)\n+                .logArea(10)\n@@ -66,1 +79,1 @@\n-    private static Frame createUI () {\n+    private static Frame createUI() {\n@@ -70,2 +83,11 @@\n-        panel.addMouseWheelListener(e -> PassFailJFrame.log(e.toString()));\n-        frame.setSize (200, 200);\n+        panel.addMouseWheelListener(e -> {\n+            PassFailJFrame.log(e.toString());\n+            if (e.getScrollType() == MouseWheelEvent.WHEEL_UNIT_SCROLL\n+                    && e.getWheelRotation() != 0) {\n+                wheelEventCount++;\n+            }\n+            if (wheelEventCount > 5) {\n+                PassFailJFrame.forcePass();\n+            }\n+        });\n+        frame.setSize (400, 200);\n","filename":"test\/jdk\/java\/awt\/event\/MouseEvent\/AWTPanelSmoothWheel.java","additions":38,"deletions":16,"binary":false,"changes":54,"status":"modified"}]}