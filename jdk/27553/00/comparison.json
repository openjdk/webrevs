{"files":[{"patch":"@@ -2523,0 +2523,1 @@\n+volatile uint AdapterHandlerLibrary::_id_counter = 0;\n@@ -2603,1 +2604,6 @@\n-  return AdapterHandlerEntry::allocate(fingerprint);\n+  uint id = (uint)AtomicAccess::add((int*)&_id_counter, 1);\n+  if (id == 0) {\n+    \/\/ id_counter overflow\n+    return nullptr;\n+  }\n+  return AdapterHandlerEntry::allocate(id, fingerprint);\n@@ -2757,2 +2763,2 @@\n-  const char* name = AdapterHandlerLibrary::name(handler->fingerprint());\n-  const uint32_t id = AdapterHandlerLibrary::id(handler->fingerprint());\n+  const char* name = AdapterHandlerLibrary::name(handler);\n+  const uint32_t id = AdapterHandlerLibrary::id(handler);\n@@ -2853,2 +2859,2 @@\n-    const char* name = AdapterHandlerLibrary::name(handler->fingerprint());\n-    const uint32_t id = AdapterHandlerLibrary::id(handler->fingerprint());\n+    const char* name = AdapterHandlerLibrary::name(handler);\n+    const uint32_t id = AdapterHandlerLibrary::id(handler);\n@@ -2994,0 +3000,1 @@\n+  uint max_id = 0;\n@@ -2995,1 +3002,1 @@\n-  _aot_adapter_handler_table.iterate([](AdapterHandlerEntry* entry) {\n+  _aot_adapter_handler_table.iterate([&](AdapterHandlerEntry* entry) {\n@@ -2998,0 +3005,1 @@\n+    max_id = MAX2(max_id, entry->id());\n@@ -2999,0 +3007,2 @@\n+  \/\/ Set adapter id to the maximum id found in the AOTCache\n+  _id_counter = max_id;\n@@ -3363,2 +3373,2 @@\n-const char* AdapterHandlerLibrary::name(AdapterFingerPrint* fingerprint) {\n-  return fingerprint->as_basic_args_string();\n+const char* AdapterHandlerLibrary::name(AdapterHandlerEntry* handler) {\n+  return handler->fingerprint()->as_basic_args_string();\n@@ -3367,3 +3377,2 @@\n-uint32_t AdapterHandlerLibrary::id(AdapterFingerPrint* fingerprint) {\n-  unsigned int hash = fingerprint->compute_hash();\n-  return hash;\n+uint32_t AdapterHandlerLibrary::id(AdapterHandlerEntry* handler) {\n+  return handler->id();\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":20,"deletions":11,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -687,0 +687,1 @@\n+  uint _id;\n@@ -700,1 +701,2 @@\n-  AdapterHandlerEntry(AdapterFingerPrint* fingerprint) :\n+  AdapterHandlerEntry(int id, AdapterFingerPrint* fingerprint) :\n+    _id(id),\n@@ -723,2 +725,2 @@\n-  static AdapterHandlerEntry* allocate(AdapterFingerPrint* fingerprint) {\n-    return new(0) AdapterHandlerEntry(fingerprint);\n+  static AdapterHandlerEntry* allocate(uint id, AdapterFingerPrint* fingerprint) {\n+    return new(0) AdapterHandlerEntry(id, fingerprint);\n@@ -775,0 +777,1 @@\n+  uint id() const { return _id; }\n@@ -801,0 +804,1 @@\n+  static volatile uint _id_counter; \/\/ counter for generating unique adapter ids, range = [1,UINT_MAX]\n@@ -840,2 +844,2 @@\n-  static const char* name(AdapterFingerPrint* fingerprint);\n-  static uint32_t id(AdapterFingerPrint* fingerprint);\n+  static const char* name(AdapterHandlerEntry* handler);\n+  static uint32_t id(AdapterHandlerEntry* handler);\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"}]}