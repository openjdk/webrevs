{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,12 @@\n+\n+    \/**\n+     * Test that the completeOnTimeout task is cancelled if the CompletableFuture is completed Exceptionally\n+     *\/\n+    @Test\n+    void testCompleteOnTimeoutWithCompleteExceptionallyDoesNotLeak() {\n+        var count = 0L;\n+        while(count < 2_000_000) {\n+            new CompletableFuture<>().completeOnTimeout(null, 12, TimeUnit.HOURS).completeExceptionally(new RuntimeException(\"This is fine\"));\n+            ++count;\n+        }\n+    }\n","filename":"test\/jdk\/java\/util\/concurrent\/CompletableFuture\/CompletableFutureOrTimeoutExceptionallyTest.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}