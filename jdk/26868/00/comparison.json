{"files":[{"patch":"@@ -26,2 +26,1 @@\n-import jtreg.SkippedException;\n-\n+import java.io.IOException;\n@@ -93,1 +92,1 @@\n-     * @throws SkippedException thrown if the artifact cannot be found\n+     * @throws IOException thrown if the artifact cannot be found\n@@ -95,1 +94,1 @@\n-    public static Path fetchOne(Class<?> klass) {\n+    public static Path fetchOne(Class<?> klass) throws IOException {\n@@ -101,1 +100,1 @@\n-            throw new SkippedException(\"Cannot find the artifact \" + artifact.name(), e);\n+            throw new IOException(\"Cannot find the artifact \" + artifact.name(), e);\n","filename":"test\/lib\/jdk\/test\/lib\/artifacts\/ArtifactResolver.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.io.IOException;\n@@ -51,1 +52,1 @@\n-     * @throws SkippedException if a valid version of OpenSSL cannot be found\n+     * @throws IOException if a valid version of OpenSSL cannot be found\n@@ -53,9 +54,2 @@\n-    public static String getOpensslPath() {\n-        String path = getOpensslFromSystemProp(OPENSSL_BUNDLE_VERSION);\n-        if (path != null) {\n-            return path;\n-        }\n-        path = getDefaultSystemOpensslPath(OPENSSL_BUNDLE_VERSION);\n-        if (path != null) {\n-            return path;\n-        }\n+    public static String getOpensslPath() throws IOException {\n+        String path;\n@@ -64,1 +58,1 @@\n-                path = fetchOpenssl(LINUX_X64.class);\n+                return fetchOpenssl(LINUX_X64.class);\n@@ -66,1 +60,1 @@\n-                path = fetchOpenssl(MACOSX_X64.class);\n+                return fetchOpenssl(MACOSX_X64.class);\n@@ -68,1 +62,1 @@\n-                path = fetchOpenssl(WINDOWS_X64.class);\n+                return fetchOpenssl(WINDOWS_X64.class);\n@@ -72,1 +66,1 @@\n-                path = fetchOpenssl(LINUX_AARCH64.class);\n+                return fetchOpenssl(LINUX_AARCH64.class);\n@@ -75,1 +69,1 @@\n-                path = fetchOpenssl(MACOSX_AARCH64.class);\n+                return fetchOpenssl(MACOSX_AARCH64.class);\n@@ -79,7 +73,2 @@\n-        if (!verifyOpensslVersion(path, OPENSSL_BUNDLE_VERSION)) {\n-            String exMsg = \"Can't find the version: \"\n-                    + OpensslArtifactFetcher.getTestOpensslBundleVersion()\n-                    + \" of openssl binary on this machine, please install\"\n-                    + \" and set openssl path with property 'test.openssl.path'\";\n-            throw new SkippedException(exMsg);\n-        } else {\n+        path = getOpensslFromSystemProp(OPENSSL_BUNDLE_VERSION);\n+        if (path != null) {\n@@ -88,0 +77,8 @@\n+\n+        path = getDefaultSystemOpensslPath(OPENSSL_BUNDLE_VERSION);\n+        if (path != null) {\n+            return path;\n+        }\n+\n+        throw new SkippedException(String.format(\"No OpenSSL %s found for %s\/%s\",\n+                OPENSSL_BUNDLE_VERSION, Platform.getOsName(), Platform.getOsArch()));\n@@ -122,1 +119,1 @@\n-    private static String fetchOpenssl(Class<?> clazz) {\n+    private static String fetchOpenssl(Class<?> clazz) throws IOException {\n","filename":"test\/lib\/jdk\/test\/lib\/security\/OpensslArtifactFetcher.java","additions":20,"deletions":23,"binary":false,"changes":43,"status":"modified"}]}