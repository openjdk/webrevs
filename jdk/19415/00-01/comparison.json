{"files":[{"patch":"@@ -392,5 +392,5 @@\n-instruct vadd_immI(vReg dst_src, immI5 con) %{\n-  match(Set dst_src (AddVB dst_src (Replicate con)));\n-  match(Set dst_src (AddVS dst_src (Replicate con)));\n-  match(Set dst_src (AddVI dst_src (Replicate con)));\n-  format %{ \"vadd_immI $dst_src, $dst_src, $con\" %}\n+instruct vadd_immI(vReg dst, vReg src1, immI5 con) %{\n+  match(Set dst (AddVB src1 (Replicate con)));\n+  match(Set dst (AddVS src1 (Replicate con)));\n+  match(Set dst (AddVI src1 (Replicate con)));\n+  format %{ \"vadd_immI $dst, $src1, $con\" %}\n@@ -400,2 +400,2 @@\n-    __ vadd_vi(as_VectorRegister($dst_src$$reg),\n-               as_VectorRegister($dst_src$$reg),\n+    __ vadd_vi(as_VectorRegister($dst$$reg),\n+               as_VectorRegister($src1$$reg),\n@@ -407,3 +407,3 @@\n-instruct vadd_immL(vReg dst_src, immL5 con) %{\n-  match(Set dst_src (AddVL dst_src (Replicate con)));\n-  format %{ \"vadd_immL $dst_src, $dst_src, $con\" %}\n+instruct vadd_immL(vReg dst, vReg src1, immL5 con) %{\n+  match(Set dst (AddVL src1 (Replicate con)));\n+  format %{ \"vadd_immL $dst, $src1, $con\" %}\n@@ -413,2 +413,2 @@\n-    __ vadd_vi(as_VectorRegister($dst_src$$reg),\n-               as_VectorRegister($dst_src$$reg),\n+    __ vadd_vi(as_VectorRegister($dst$$reg),\n+               as_VectorRegister($src1$$reg),\n@@ -422,5 +422,5 @@\n-instruct vadd_regI(vReg dst_src, iRegIorL2I src) %{\n-  match(Set dst_src (AddVB dst_src (Replicate src)));\n-  match(Set dst_src (AddVS dst_src (Replicate src)));\n-  match(Set dst_src (AddVI dst_src (Replicate src)));\n-  format %{ \"vadd_regI $dst_src, $dst_src, $src\" %}\n+instruct vadd_regI(vReg dst, vReg src1, iRegIorL2I src2) %{\n+  match(Set dst (AddVB src1 (Replicate src2)));\n+  match(Set dst (AddVS src1 (Replicate src2)));\n+  match(Set dst (AddVI src1 (Replicate src2)));\n+  format %{ \"vadd_regI $dst, $src1, $src2\" %}\n@@ -430,3 +430,3 @@\n-    __ vadd_vx(as_VectorRegister($dst_src$$reg),\n-               as_VectorRegister($dst_src$$reg),\n-               as_Register($src$$reg));\n+    __ vadd_vx(as_VectorRegister($dst$$reg),\n+               as_VectorRegister($src1$$reg),\n+               as_Register($src2$$reg));\n@@ -437,3 +437,3 @@\n-instruct vadd_regL(vReg dst_src, iRegL src) %{\n-  match(Set dst_src (AddVL dst_src (Replicate src)));\n-  format %{ \"vadd_regL $dst_src, $dst_src, $src\" %}\n+instruct vadd_regL(vReg dst, vReg src1, iRegL src2) %{\n+  match(Set dst (AddVL src1 (Replicate src2)));\n+  format %{ \"vadd_regL $dst, $src1, $src2\" %}\n@@ -443,3 +443,3 @@\n-    __ vadd_vx(as_VectorRegister($dst_src$$reg),\n-               as_VectorRegister($dst_src$$reg),\n-               as_Register($src$$reg));\n+    __ vadd_vx(as_VectorRegister($dst$$reg),\n+               as_VectorRegister($src1$$reg),\n+               as_Register($src2$$reg));\n@@ -482,5 +482,5 @@\n-instruct vadd_regI_masked(vReg dst_src, iRegIorL2I src, vRegMask_V0 v0) %{\n-  match(Set dst_src (AddVB (Binary dst_src (Replicate src)) v0));\n-  match(Set dst_src (AddVS (Binary dst_src (Replicate src)) v0));\n-  match(Set dst_src (AddVI (Binary dst_src (Replicate src)) v0));\n-  format %{ \"vadd_regI_masked $dst_src, $dst_src, $src\" %}\n+instruct vadd_regI_masked(vReg dst_src, iRegIorL2I src2, vRegMask_V0 v0) %{\n+  match(Set dst_src (AddVB (Binary dst_src (Replicate src2)) v0));\n+  match(Set dst_src (AddVS (Binary dst_src (Replicate src2)) v0));\n+  match(Set dst_src (AddVI (Binary dst_src (Replicate src2)) v0));\n+  format %{ \"vadd_regI_masked $dst_src, $dst_src, $src2\" %}\n@@ -492,1 +492,1 @@\n-               as_Register($src$$reg), Assembler::v0_t);\n+               as_Register($src2$$reg), Assembler::v0_t);\n@@ -497,3 +497,3 @@\n-instruct vadd_regL_masked(vReg dst_src, iRegL src, vRegMask_V0 v0) %{\n-  match(Set dst_src (AddVL (Binary dst_src (Replicate src)) v0));\n-  format %{ \"vadd_regL_masked $dst_src, $dst_src, $src\" %}\n+instruct vadd_regL_masked(vReg dst_src, iRegL src2, vRegMask_V0 v0) %{\n+  match(Set dst_src (AddVL (Binary dst_src (Replicate src2)) v0));\n+  format %{ \"vadd_regL_masked $dst_src, $dst_src, $src2\" %}\n@@ -505,1 +505,1 @@\n-               as_Register($src$$reg), Assembler::v0_t);\n+               as_Register($src2$$reg), Assembler::v0_t);\n@@ -576,5 +576,5 @@\n-instruct vsub_regI(vReg dst_src, iRegIorL2I src) %{\n-  match(Set dst_src (SubVB dst_src (Replicate src)));\n-  match(Set dst_src (SubVS dst_src (Replicate src)));\n-  match(Set dst_src (SubVI dst_src (Replicate src)));\n-  format %{ \"vsub_regI $dst_src, $dst_src, $src\" %}\n+instruct vsub_regI(vReg dst, vReg src1, iRegIorL2I src2) %{\n+  match(Set dst (SubVB src1 (Replicate src2)));\n+  match(Set dst (SubVS src1 (Replicate src2)));\n+  match(Set dst (SubVI src1 (Replicate src2)));\n+  format %{ \"vsub_regI $dst, $src1, $src2\" %}\n@@ -584,3 +584,3 @@\n-    __ vsub_vx(as_VectorRegister($dst_src$$reg),\n-               as_VectorRegister($dst_src$$reg),\n-               as_Register($src$$reg));\n+    __ vsub_vx(as_VectorRegister($dst$$reg),\n+               as_VectorRegister($src1$$reg),\n+               as_Register($src2$$reg));\n@@ -591,3 +591,3 @@\n-instruct vsub_regL(vReg dst_src, iRegL src) %{\n-  match(Set dst_src (SubVL dst_src (Replicate src)));\n-  format %{ \"vsub_regL $dst_src, $dst_src, $src\" %}\n+instruct vsub_regL(vReg dst, vReg src1, iRegL src2) %{\n+  match(Set dst (SubVL src1 (Replicate src2)));\n+  format %{ \"vsub_regL $dst, $src1, $src2\" %}\n@@ -597,3 +597,3 @@\n-    __ vsub_vx(as_VectorRegister($dst_src$$reg),\n-               as_VectorRegister($dst_src$$reg),\n-               as_Register($src$$reg));\n+    __ vsub_vx(as_VectorRegister($dst$$reg),\n+               as_VectorRegister($src1$$reg),\n+               as_Register($src2$$reg));\n@@ -606,5 +606,5 @@\n-instruct vsub_regI_masked(vReg dst_src, iRegIorL2I src, vRegMask_V0 v0) %{\n-  match(Set dst_src (SubVB (Binary dst_src (Replicate src)) v0));\n-  match(Set dst_src (SubVS (Binary dst_src (Replicate src)) v0));\n-  match(Set dst_src (SubVI (Binary dst_src (Replicate src)) v0));\n-  format %{ \"vsub_regI_masked $dst_src, $dst_src, $src\" %}\n+instruct vsub_regI_masked(vReg dst_src, iRegIorL2I src2, vRegMask_V0 v0) %{\n+  match(Set dst_src (SubVB (Binary dst_src (Replicate src2)) v0));\n+  match(Set dst_src (SubVS (Binary dst_src (Replicate src2)) v0));\n+  match(Set dst_src (SubVI (Binary dst_src (Replicate src2)) v0));\n+  format %{ \"vsub_regI_masked $dst_src, $dst_src, $src2\" %}\n@@ -616,1 +616,1 @@\n-               as_Register($src$$reg), Assembler::v0_t);\n+               as_Register($src2$$reg), Assembler::v0_t);\n@@ -621,3 +621,3 @@\n-instruct vsub_regL_masked(vReg dst_src, iRegL src, vRegMask_V0 v0) %{\n-  match(Set dst_src (SubVL (Binary dst_src (Replicate src)) v0));\n-  format %{ \"vsub_regL_masked $dst_src, $dst_src, $src\" %}\n+instruct vsub_regL_masked(vReg dst_src, iRegL src2, vRegMask_V0 v0) %{\n+  match(Set dst_src (SubVL (Binary dst_src (Replicate src2)) v0));\n+  format %{ \"vsub_regL_masked $dst_src, $dst_src, $src2\" %}\n@@ -629,1 +629,1 @@\n-               as_Register($src$$reg), Assembler::v0_t);\n+               as_Register($src2$$reg), Assembler::v0_t);\n@@ -1652,5 +1652,5 @@\n-instruct vmul_regI(vReg dst_src, iRegIorL2I src) %{\n-  match(Set dst_src (MulVB dst_src (Replicate src)));\n-  match(Set dst_src (MulVS dst_src (Replicate src)));\n-  match(Set dst_src (MulVI dst_src (Replicate src)));\n-  format %{ \"vmul_regI $dst_src, $dst_src, $src\" %}\n+instruct vmul_regI(vReg dst, vReg src1, iRegIorL2I src2) %{\n+  match(Set dst (MulVB src1 (Replicate src2)));\n+  match(Set dst (MulVS src1 (Replicate src2)));\n+  match(Set dst (MulVI src1 (Replicate src2)));\n+  format %{ \"vmul_regI $dst, $src1, $src2\" %}\n@@ -1660,3 +1660,3 @@\n-    __ vmul_vx(as_VectorRegister($dst_src$$reg),\n-               as_VectorRegister($dst_src$$reg),\n-               as_Register($src$$reg));\n+    __ vmul_vx(as_VectorRegister($dst$$reg),\n+               as_VectorRegister($src1$$reg),\n+               as_Register($src2$$reg));\n@@ -1667,3 +1667,3 @@\n-instruct vmul_regL(vReg dst_src, iRegL src) %{\n-  match(Set dst_src (MulVL dst_src (Replicate src)));\n-  format %{ \"vmul_regL $dst_src, $dst_src, $src\" %}\n+instruct vmul_regL(vReg dst, vReg src1, iRegL src2) %{\n+  match(Set dst (MulVL src1 (Replicate src2)));\n+  format %{ \"vmul_regL $dst, $src1, $src2\" %}\n@@ -1673,3 +1673,3 @@\n-    __ vmul_vx(as_VectorRegister($dst_src$$reg),\n-               as_VectorRegister($dst_src$$reg),\n-               as_Register($src$$reg));\n+    __ vmul_vx(as_VectorRegister($dst$$reg),\n+               as_VectorRegister($src1$$reg),\n+               as_Register($src2$$reg));\n@@ -1682,5 +1682,5 @@\n-instruct vmul_regI_masked(vReg dst_src, iRegIorL2I src, vRegMask_V0 v0) %{\n-  match(Set dst_src (MulVB (Binary dst_src (Replicate src)) v0));\n-  match(Set dst_src (MulVS (Binary dst_src (Replicate src)) v0));\n-  match(Set dst_src (MulVI (Binary dst_src (Replicate src)) v0));\n-  format %{ \"vmul_regI_masked $dst_src, $dst_src, $src\" %}\n+instruct vmul_regI_masked(vReg dst_src, iRegIorL2I src2, vRegMask_V0 v0) %{\n+  match(Set dst_src (MulVB (Binary dst_src (Replicate src2)) v0));\n+  match(Set dst_src (MulVS (Binary dst_src (Replicate src2)) v0));\n+  match(Set dst_src (MulVI (Binary dst_src (Replicate src2)) v0));\n+  format %{ \"vmul_regI_masked $dst_src, $dst_src, $src2\" %}\n@@ -1692,1 +1692,1 @@\n-               as_Register($src$$reg), Assembler::v0_t);\n+               as_Register($src2$$reg), Assembler::v0_t);\n@@ -1697,3 +1697,3 @@\n-instruct vmul_regL_masked(vReg dst_src, iRegL src, vRegMask_V0 v0) %{\n-  match(Set dst_src (MulVL (Binary dst_src (Replicate src)) v0));\n-  format %{ \"vmul_regL_masked $dst_src, $dst_src, $src\" %}\n+instruct vmul_regL_masked(vReg dst_src, iRegL src2, vRegMask_V0 v0) %{\n+  match(Set dst_src (MulVL (Binary dst_src (Replicate src2)) v0));\n+  format %{ \"vmul_regL_masked $dst_src, $dst_src, $src2\" %}\n@@ -1705,1 +1705,1 @@\n-               as_Register($src$$reg), Assembler::v0_t);\n+               as_Register($src2$$reg), Assembler::v0_t);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":84,"deletions":84,"binary":false,"changes":168,"status":"modified"}]}