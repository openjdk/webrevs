{"files":[{"patch":"@@ -415,21 +415,19 @@\n-  JImageLocationRef location = (*JImageFindResource)(jimage_non_null(), \"\", get_jimage_version_string(), name, &size);\n-\n-  if (location == 0) {\n-    TempNewSymbol class_name = SymbolTable::new_symbol(name);\n-    TempNewSymbol pkg_name = ClassLoader::package_from_class_name(class_name);\n-\n-    if (pkg_name != nullptr) {\n-      if (!Universe::is_module_initialized()) {\n-        location = (*JImageFindResource)(jimage_non_null(), JAVA_BASE_NAME, get_jimage_version_string(), name, &size);\n-      } else {\n-        PackageEntry* package_entry = ClassLoader::get_package_entry(pkg_name, loader_data);\n-        if (package_entry != nullptr) {\n-          ResourceMark rm(current);\n-          \/\/ Get the module name\n-          ModuleEntry* module = package_entry->module();\n-          assert(module != nullptr, \"Boot classLoader package missing module\");\n-          assert(module->is_named(), \"Boot classLoader package is in unnamed module\");\n-          const char* module_name = module->name()->as_C_string();\n-          if (module_name != nullptr) {\n-            location = (*JImageFindResource)(jimage_non_null(), module_name, get_jimage_version_string(), name, &size);\n-          }\n+  JImageLocationRef location;\n+\n+  TempNewSymbol class_name = SymbolTable::new_symbol(name);\n+  TempNewSymbol pkg_name = ClassLoader::package_from_class_name(class_name);\n+\n+  if (pkg_name != nullptr) {\n+    if (!Universe::is_module_initialized()) {\n+      location = (*JImageFindResource)(jimage_non_null(), JAVA_BASE_NAME, get_jimage_version_string(), name, &size);\n+    } else {\n+      PackageEntry* package_entry = ClassLoader::get_package_entry(pkg_name, loader_data);\n+      if (package_entry != nullptr) {\n+        ResourceMark rm(current);\n+        \/\/ Get the module name\n+        ModuleEntry* module = package_entry->module();\n+        assert(module != nullptr, \"Boot classLoader package missing module\");\n+        assert(module->is_named(), \"Boot classLoader package is in unnamed module\");\n+        const char* module_name = module->name()->as_C_string();\n+        if (module_name != nullptr) {\n+          location = (*JImageFindResource)(jimage_non_null(), module_name, get_jimage_version_string(), name, &size);\n@@ -440,0 +438,1 @@\n+\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":20,"deletions":21,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-    \/\/ TBD:   assert(moduleNameLen > 0 && \"module name must be non-empty\");\n+    assert(moduleNameLen > 0 && \"module name must be non-empty\");\n","filename":"src\/java.base\/share\/native\/libjimage\/jimage.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}