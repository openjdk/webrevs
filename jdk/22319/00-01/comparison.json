{"files":[{"patch":"@@ -27,0 +27,1 @@\n+ * @modules java.base\/sun.net.www.protocol.jar:open\n@@ -38,1 +39,0 @@\n-import java.io.OutputStream;\n@@ -41,1 +41,0 @@\n-import java.net.JarURLConnection;\n@@ -49,0 +48,1 @@\n+import java.util.Map;\n@@ -51,1 +51,0 @@\n-import java.util.jar.JarFile;\n@@ -55,1 +54,1 @@\n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n@@ -99,0 +98,3 @@\n+        \/\/ Sanity check that the JarFileFactory caches are unpopulated\n+        assertEmptyJarFileCache();\n+\n@@ -151,0 +153,15 @@\n+\n+    \/\/ Assert that JarFileFactory.fileCache and JarFileFactory.urlCache are empty\n+    private void assertEmptyJarFileCache() {\n+        try {\n+            Class<?> clazz = getClass().getClassLoader().loadClass(\"sun.net.www.protocol.jar.JarFileFactory\");\n+            for (var fieldName : Set.of(\"fileCache\", \"urlCache\")) {\n+                var field = clazz.getDeclaredField(fieldName);\n+                field.setAccessible(true);\n+                var map = (Map) field.get(null);\n+                assertEquals(0, map.size(), \"Expected empty cache map for field \" + fieldName);\n+            }\n+        } catch (ClassNotFoundException | IllegalAccessException | NoSuchFieldException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n","filename":"test\/jdk\/java\/net\/URLClassLoader\/RemoveJar.java","additions":21,"deletions":4,"binary":false,"changes":25,"status":"modified"}]}