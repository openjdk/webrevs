{"files":[{"patch":"@@ -75,0 +75,1 @@\n+bool AOTStreamedHeapLoader::_loading_all_objects;\n@@ -579,0 +580,1 @@\n+\n@@ -615,0 +617,1 @@\n+        materialized_words += value_size;\n@@ -635,1 +638,1 @@\n-      \/\/ Skip over the object value, already materialized\n+      \/\/ Skip over the string value, already materialized\n@@ -809,1 +812,1 @@\n-  const bool is_async = CDSConfig::is_using_full_module_graph() && !AOTEagerlyLoadObjects;\n+  const bool is_async = _loading_all_objects && !AOTEagerlyLoadObjects;\n@@ -940,1 +943,1 @@\n-  if (CDSConfig::is_using_full_module_graph()) {\n+  if (_loading_all_objects) {\n@@ -1013,1 +1016,5 @@\n-  if (!CDSConfig::is_using_full_module_graph()) {\n+  \/\/ If the full module graph is not available or the JVMTI class file load hook is on, we\n+  \/\/ will prune the object graph to not include cached objects in subgraphs that are not intended\n+  \/\/ to be loaded.\n+  _loading_all_objects = CDSConfig::is_using_full_module_graph() && !JvmtiExport::should_post_class_file_load_hook();\n+  if (!_loading_all_objects) {\n","filename":"src\/hotspot\/share\/cds\/aotStreamedHeapLoader.cpp","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -149,0 +149,1 @@\n+  static bool _loading_all_objects;\n","filename":"src\/hotspot\/share\/cds\/aotStreamedHeapLoader.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"cds\/heapShared.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}