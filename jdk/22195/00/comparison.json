{"files":[{"patch":"@@ -3260,1 +3260,4 @@\n-  Node* excluded_mask = _gvn.intcon(32768);\n+  \/\/ The most significant bit of the u2 is used to denote thread exclusion\n+  Node* excluded_shift = _gvn.intcon(15);\n+  Node* excluded_mask = _gvn.intcon(1 << 15);\n+  \/\/ The epoch generation is the range [1-32767]\n@@ -3414,1 +3417,1 @@\n-  PhiNode* exclusion = new PhiNode(vthread_compare_rgn, TypeInt::BOOL);\n+  PhiNode* exclusion = new PhiNode(vthread_compare_rgn, TypeInt::CHAR);\n@@ -3479,1 +3482,2 @@\n-  store_to_memory(tid_is_not_equal, event_writer_excluded_field, _gvn.transform(exclusion), T_BOOLEAN, MemNode::unordered);\n+  Node* excluded_bool = _gvn.transform(new URShiftINode(_gvn.transform(exclusion), excluded_shift));\n+  store_to_memory(tid_is_not_equal, event_writer_excluded_field, excluded_bool, T_BOOLEAN, MemNode::unordered);\n@@ -3546,1 +3550,3 @@\n-  Node* excluded_mask = _gvn.intcon(32768);\n+  \/\/ The most significant bit of the u2 is used to denote thread exclusion\n+  Node* excluded_mask = _gvn.intcon(1 << 15);\n+  \/\/ The epoch generation is the range [1-32767]\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-jdk\/jfr\/jvm\/TestVirtualThreadExclusion.java                     8344199 generic-all\n","filename":"test\/jdk\/ProblemList-Xcomp.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}