{"files":[{"patch":"@@ -31,2 +31,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -50,1 +48,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -52,2 +49,2 @@\n-        boolean noDisplay =\n-            AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {\n+        final String display = System.getenv(\"DISPLAY\");\n+        boolean noDisplay = (display == null || display.trim().isEmpty());\n@@ -55,3 +52,0 @@\n-               final String display = System.getenv(\"DISPLAY\");\n-               return display == null || display.trim().isEmpty();\n-            });\n@@ -70,12 +64,10 @@\n-        boolean headless =\n-            AccessController.doPrivileged((PrivilegedAction<Boolean>) () -> {\n-                String[] libDirs = System.getProperty(\"sun.boot.library.path\", \"\").split(\":\");\n-                for (String libDir : libDirs) {\n-                    File headlessLib = new File(libDir, \"libawt_headless.so\");\n-                    File xawtLib = new File(libDir, \"libawt_xawt.so\");\n-                    if (headlessLib.exists() && !xawtLib.exists()) {\n-                        return true;\n-                    }\n-                }\n-                return false;\n-            });\n+        boolean headless = false;\n+        String[] libDirs = System.getProperty(\"sun.boot.library.path\", \"\").split(\":\");\n+        for (String libDir : libDirs) {\n+            File headlessLib = new File(libDir, \"libawt_headless.so\");\n+            File xawtLib = new File(libDir, \"libawt_xawt.so\");\n+            if (headlessLib.exists() && !xawtLib.exists()) {\n+                headless = true;\n+                break;\n+            }\n+        }\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/PlatformGraphicsInfo.java","additions":12,"deletions":20,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -108,3 +108,1 @@\n-        @SuppressWarnings(\"removal\")\n-        Integer dt = AccessController.doPrivileged(\n-                new GetIntegerAction(\"sun.awt.datatransfer.timeout\"));\n+        Integer dt = Integer.getInteger(\"sun.awt.datatransfer.timeout\");\n@@ -121,4 +119,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String gsi = AccessController.doPrivileged(\n-                        (PrivilegedAction<String>) ()\n-                                -> System.getenv(\"GNOME_DESKTOP_SESSION_ID\"));\n+        String gsi = System.getenv(\"GNOME_DESKTOP_SESSION_ID\");\n@@ -129,4 +124,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String desktop = AccessController.doPrivileged(\n-                (PrivilegedAction<String>) ()\n-                        -> System.getenv(\"XDG_CURRENT_DESKTOP\"));\n+        String desktop = System.getenv(\"XDG_CURRENT_DESKTOP\");\n@@ -255,5 +247,1 @@\n-                        @SuppressWarnings(\"removal\")\n-                        Integer gnomeShellMajorVersion =\n-                                AccessController\n-                                        .doPrivileged((PrivilegedAction<Integer>)\n-                                                this::getGnomeShellMajorVersion);\n+                        Integer gnomeShellMajorVersion = getGnomeShellMajorVersion();\n@@ -489,3 +477,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String version = AccessController.doPrivileged(\n-                new GetPropertyAction(\"jdk.gtk.version\"));\n+        String version = System.getProperty(\"jdk.gtk.version\");\n@@ -502,1 +488,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -504,2 +489,1 @@\n-        return AccessController.doPrivileged((PrivilegedAction<Boolean>)()\n-                -> Boolean.getBoolean(\"jdk.gtk.verbose\"));\n+        return Boolean.getBoolean(\"jdk.gtk.verbose\");\n@@ -510,1 +494,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -517,0 +500,1 @@\n+                    final String display = System.getenv(\"WAYLAND_DISPLAY\");\n@@ -519,9 +503,1 @@\n-                            = AccessController.doPrivileged(\n-                            (PrivilegedAction<Boolean>) () -> {\n-                                final String display =\n-                                        System.getenv(\"WAYLAND_DISPLAY\");\n-\n-                                return display != null\n-                                        && !display.trim().isEmpty();\n-                            }\n-                    );\n+                            = (display != null && !display.trim().isEmpty());\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/UNIXToolkit.java","additions":8,"deletions":32,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -50,2 +50,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -230,10 +228,2 @@\n-                        @SuppressWarnings(\"removal\")\n-                        Point pointer = AccessController.doPrivileged(\n-                            new PrivilegedAction<Point>() {\n-                                public Point run() {\n-                                    if (!isPointerOverTrayIcon(liveArguments.getBounds())) {\n-                                        return null;\n-                                    }\n-                                    return MouseInfo.getPointerInfo().getLocation();\n-                                }\n-                            });\n+                        Point pointer = !isPointerOverTrayIcon(liveArguments.getBounds())\n+                                        ? null : MouseInfo.getPointerInfo().getLocation();\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/InfoWindow.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -46,7 +44,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String dataModelProp = AccessController.doPrivileged(\n-            new PrivilegedAction<String>() {\n-                public String run() {\n-                    return System.getProperty(\"sun.arch.data.model\");\n-                }\n-            });\n+        String dataModelProp = System.getProperty(\"sun.arch.data.model\");\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/Native.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.security.AccessController;\n@@ -39,1 +38,0 @@\n-import sun.security.action.GetIntegerAction;\n@@ -132,1 +130,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -136,3 +133,2 @@\n-                pollInterval = AccessController.doPrivileged(\n-                        new GetIntegerAction(\"awt.datatransfer.clipboard.poll.interval\",\n-                                             defaultPollInterval));\n+                pollInterval = Integer.getInteger(\"awt.datatransfer.clipboard.poll.interval\"\n+                                                  , defaultPollInterval);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XClipboard.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -38,3 +38,0 @@\n-import java.security.AccessController;\n-import sun.security.action.GetBooleanAction;\n-\n@@ -442,1 +439,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -447,1 +443,1 @@\n-            if (AccessController.doPrivileged(new GetBooleanAction(\"sun.awt.xembed.testing\"))) {\n+            if (Boolean.getBoolean(\"sun.awt.xembed.testing\")) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XEmbedCanvasPeer.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.security.AccessController;\n@@ -29,1 +28,0 @@\n-import sun.security.action.GetBooleanAction;\n@@ -62,3 +60,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private static boolean noisyAwtHandler = AccessController.doPrivileged(\n-        new GetBooleanAction(\"sun.awt.noisyerrorhandler\"));\n+    private static boolean noisyAwtHandler = Boolean.getBoolean(\"sun.awt.noisyerrorhandler\");\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XErrorHandlerUtil.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,2 +35,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -142,1 +140,1 @@\n-    @SuppressWarnings({\"removal\",\"deprecation\"})\n+    @SuppressWarnings(\"deprecation\")\n@@ -154,6 +152,1 @@\n-        userDir = AccessController.doPrivileged(\n-            new PrivilegedAction<String>() {\n-                public String run() {\n-                    return System.getProperty(\"user.dir\");\n-                }\n-            });\n+        userDir = System.getProperty(\"user.dir\");\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XFileDialogPeer.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.security.AccessController;\n@@ -39,1 +38,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -41,1 +39,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -53,4 +50,2 @@\n-                     AccessController.doPrivileged(\n-                             new GetPropertyAction(\"awt.robot.gtk\",\n-                                     \"true\")\n-                     ));\n+                            System.getProperty(\"awt.robot.gtk\", \"true\")\n+                 );\n@@ -64,2 +59,1 @@\n-        screenshotMethod = AccessController.doPrivileged(\n-                new GetPropertyAction(\n+        screenshotMethod = System.getProperty(\n@@ -70,1 +64,1 @@\n-                ));\n+                );\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XRobotPeer.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -34,3 +34,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-import sun.security.action.GetPropertyAction;\n@@ -47,4 +44,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String de = AccessController.doPrivileged(\n-                        (PrivilegedAction<String>) ()\n-                                -> System.getenv(\"XDG_CURRENT_DESKTOP\"));\n+        String de = System.getenv(\"XDG_CURRENT_DESKTOP\");\n@@ -58,3 +52,1 @@\n-                @SuppressWarnings(\"removal\")\n-                String dname = AccessController.doPrivileged(\n-                                new GetPropertyAction(\"java.desktop.appName\", \"\"));\n+                String dname = System.getProperty(\"java.desktop.appName\", \"\");\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XTaskbarPeer.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -114,2 +114,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -150,2 +148,0 @@\n-import sun.security.action.GetBooleanAction;\n-import sun.security.action.GetPropertyAction;\n@@ -249,3 +245,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String runtime = AccessController.doPrivileged(\n-                             new GetPropertyAction(\"java.runtime.version\"));\n+        String runtime = System.getProperty(\"java.runtime.version\");\n@@ -329,1 +323,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -342,7 +335,4 @@\n-            AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-                areExtraMouseButtonsEnabled =\n-                    Boolean.parseBoolean(System.getProperty(extraButtons, \"true\"));\n-                \/\/set system property if not yet assigned\n-                System.setProperty(extraButtons, \"\"+areExtraMouseButtonsEnabled);\n-                return null;\n-            });\n+            areExtraMouseButtonsEnabled =\n+                Boolean.parseBoolean(System.getProperty(extraButtons, \"true\"));\n+            \/\/set system property if not yet assigned\n+            System.setProperty(extraButtons, \"\" + areExtraMouseButtonsEnabled);\n@@ -373,20 +363,12 @@\n-        PrivilegedAction<Void> a = () -> {\n-            Runnable r = () -> {\n-                XSystemTrayPeer peer = XSystemTrayPeer.getPeerInstance();\n-                if (peer != null) {\n-                    peer.dispose();\n-                }\n-                if (xs != null) {\n-                    ((XAWTXSettings)xs).dispose();\n-                }\n-                freeXKB();\n-                if (log.isLoggable(PlatformLogger.Level.FINE)) {\n-                    dumpPeers();\n-                }\n-            };\n-            String name = \"XToolkt-Shutdown-Thread\";\n-            Thread shutdownThread = new Thread(\n-                    ThreadGroupUtils.getRootThreadGroup(), r, name, 0, false);\n-            shutdownThread.setContextClassLoader(null);\n-            Runtime.getRuntime().addShutdownHook(shutdownThread);\n-            return null;\n+        Runnable r = () -> {\n+            XSystemTrayPeer peer = XSystemTrayPeer.getPeerInstance();\n+            if (peer != null) {\n+                peer.dispose();\n+            }\n+            if (xs != null) {\n+                ((XAWTXSettings)xs).dispose();\n+            }\n+            freeXKB();\n+            if (log.isLoggable(PlatformLogger.Level.FINE)) {\n+                dumpPeers();\n+            }\n@@ -394,1 +376,5 @@\n-        AccessController.doPrivileged(a);\n+        String name = \"XToolkt-Shutdown-Thread\";\n+        Thread shutdownThread = new Thread(\n+                ThreadGroupUtils.getRootThreadGroup(), r, name, 0, false);\n+        shutdownThread.setContextClassLoader(null);\n+        Runtime.getRuntime().addShutdownHook(shutdownThread);\n@@ -412,1 +398,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -435,3 +420,2 @@\n-            toolkitThread = AccessController.doPrivileged((PrivilegedAction<Thread>) () -> {\n-                String name = \"AWT-XAWT\";\n-                Thread thread = new Thread(\n+            String name = \"AWT-XAWT\";\n+            toolkitThread = new Thread(\n@@ -440,5 +424,3 @@\n-                thread.setContextClassLoader(null);\n-                thread.setPriority(Thread.NORM_PRIORITY + 1);\n-                thread.setDaemon(true);\n-                return thread;\n-            });\n+            toolkitThread.setContextClassLoader(null);\n+            toolkitThread.setPriority(Thread.NORM_PRIORITY + 1);\n+            toolkitThread.setDaemon(true);\n@@ -1123,1 +1105,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -1126,2 +1107,1 @@\n-            sunAwtDisableGtkFileDialogs = AccessController.doPrivileged(\n-                                              new GetBooleanAction(\"sun.awt.disableGtkFileDialogs\"));\n+            sunAwtDisableGtkFileDialogs = Boolean.getBoolean(\"sun.awt.disableGtkFileDialogs\");\n@@ -2142,3 +2122,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String prop = AccessController.doPrivileged(\n-                new sun.security.action.GetPropertyAction(\"sun.awt.backingStore\"));\n+        String prop = System.getProperty(\"sun.awt.backingStore\");\n@@ -2568,1 +2546,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -2570,1 +2547,1 @@\n-        return AccessController.doPrivileged(new GetBooleanAction(\"sun.awt.disablegrab\"));\n+        return Boolean.getBoolean(\"sun.awt.disablegrab\");\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XToolkit.java","additions":30,"deletions":53,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -69,1 +67,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -87,6 +84,1 @@\n-        AccessController.doPrivileged(new PrivilegedAction<Object>() {\n-            public Object run() {\n-                eframe.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);\n-                return null;\n-            }\n-        });\n+        eframe.setModalExclusionType(Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XTrayIconPeer.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.security.AccessController;\n-\n@@ -31,1 +29,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -588,3 +585,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String dataModelProp = AccessController.doPrivileged(\n-            new GetPropertyAction(\"sun.arch.data.model\"));\n+        String dataModelProp = System.getProperty(\"sun.arch.data.model\");\n@@ -642,3 +637,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String javaVersion = AccessController.doPrivileged(\n-                                 new GetPropertyAction(\"java.version\"));\n+        String javaVersion = System.getProperty(\"java.version\");\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XlibWrapper.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -36,2 +36,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -450,1 +448,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -477,8 +474,6 @@\n-            PrivilegedAction<Void> a = () -> {\n-                Runnable r = () -> {\n-                    Window old = getFullScreenWindow();\n-                    if (old != null) {\n-                        exitFullScreenExclusive(old);\n-                        if (isDisplayChangeSupported()) {\n-                            setDisplayMode(origDisplayMode);\n-                        }\n+            Runnable r = () -> {\n+                Window old = getFullScreenWindow();\n+                if (old != null) {\n+                    exitFullScreenExclusive(old);\n+                    if (isDisplayChangeSupported()) {\n+                        setDisplayMode(origDisplayMode);\n@@ -486,7 +481,1 @@\n-                };\n-                String name = \"Display-Change-Shutdown-Thread-\" + screen;\n-                Thread t = new Thread(\n-                      ThreadGroupUtils.getRootThreadGroup(), r, name, 0, false);\n-                t.setContextClassLoader(null);\n-                Runtime.getRuntime().addShutdownHook(t);\n-                return null;\n+                }\n@@ -494,1 +483,5 @@\n-            AccessController.doPrivileged(a);\n+            String name = \"Display-Change-Shutdown-Thread-\" + screen;\n+            Thread t = new Thread(\n+                  ThreadGroupUtils.getRootThreadGroup(), r, name, 0, false);\n+            t.setContextClassLoader(null);\n+            Runtime.getRuntime().addShutdownHook(t);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11GraphicsDevice.java","additions":12,"deletions":19,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    @SuppressWarnings({\"removal\", \"restricted\"})\n+    @SuppressWarnings(\"restricted\")\n@@ -64,22 +64,19 @@\n-        java.security.AccessController.doPrivileged(\n-                          new java.security.PrivilegedAction<Object>() {\n-            public Object run() {\n-                System.loadLibrary(\"awt\");\n-\n-                \/*\n-                 * Note: The XToolkit object depends on the static initializer\n-                 * of X11GraphicsEnvironment to initialize the connection to\n-                 * the X11 server.\n-                 *\/\n-                if (!isHeadless()) {\n-                    \/\/ first check the OGL system property\n-                    boolean glxRequested = false;\n-                    String prop = System.getProperty(\"sun.java2d.opengl\");\n-                    if (prop != null) {\n-                        if (prop.equals(\"true\") || prop.equals(\"t\")) {\n-                            glxRequested = true;\n-                        } else if (prop.equals(\"True\") || prop.equals(\"T\")) {\n-                            glxRequested = true;\n-                            glxVerbose = true;\n-                        }\n-                    }\n+        System.loadLibrary(\"awt\");\n+\n+        \/*\n+         * Note: The XToolkit object depends on the static initializer\n+         * of X11GraphicsEnvironment to initialize the connection to\n+         * the X11 server.\n+         *\/\n+        if (!isHeadless()) {\n+            \/\/ first check the OGL system property\n+            boolean glxRequested = false;\n+            String prop = System.getProperty(\"sun.java2d.opengl\");\n+            if (prop != null) {\n+                if (prop.equals(\"true\") || prop.equals(\"t\")) {\n+                    glxRequested = true;\n+                } else if (prop.equals(\"True\") || prop.equals(\"T\")) {\n+                    glxRequested = true;\n+                    glxVerbose = true;\n+                }\n+            }\n@@ -87,16 +84,11 @@\n-                    \/\/ Now check for XRender system property\n-                    boolean xRenderRequested = true;\n-                    boolean xRenderIgnoreLinuxVersion = false;\n-                    String xProp = System.getProperty(\"sun.java2d.xrender\");\n-                        if (xProp != null) {\n-                        if (xProp.equals(\"false\") || xProp.equals(\"f\")) {\n-                            xRenderRequested = false;\n-                        } else if (xProp.equals(\"True\") || xProp.equals(\"T\")) {\n-                            xRenderRequested = true;\n-                            xRenderVerbose = true;\n-                        }\n-\n-                        if(xProp.equalsIgnoreCase(\"t\") || xProp.equalsIgnoreCase(\"true\")) {\n-                            xRenderIgnoreLinuxVersion = true;\n-                        }\n-                    }\n+            \/\/ Now check for XRender system property\n+            boolean xRenderRequested = true;\n+            boolean xRenderIgnoreLinuxVersion = false;\n+            String xProp = System.getProperty(\"sun.java2d.xrender\");\n+                if (xProp != null) {\n+                if (xProp.equals(\"false\") || xProp.equals(\"f\")) {\n+                    xRenderRequested = false;\n+                } else if (xProp.equals(\"True\") || xProp.equals(\"T\")) {\n+                    xRenderRequested = true;\n+                    xRenderVerbose = true;\n+                }\n@@ -104,12 +96,4 @@\n-                    \/\/ initialize the X11 display connection\n-                    initDisplay(glxRequested);\n-\n-                    \/\/ only attempt to initialize GLX if it was requested\n-                    if (glxRequested) {\n-                        glxAvailable = initGLX();\n-                        if (glxVerbose && !glxAvailable) {\n-                            System.out.println(\n-                                \"Could not enable OpenGL \" +\n-                                \"pipeline (GLX 1.3 not available)\");\n-                        }\n-                    }\n+                if (xProp.equalsIgnoreCase(\"t\") || xProp.equalsIgnoreCase(\"true\")) {\n+                    xRenderIgnoreLinuxVersion = true;\n+                }\n+            }\n@@ -117,8 +101,2 @@\n-                    \/\/ only attempt to initialize Xrender if it was requested\n-                    if (xRenderRequested) {\n-                        xRenderAvailable = initXRender(xRenderVerbose, xRenderIgnoreLinuxVersion);\n-                        if (xRenderVerbose && !xRenderAvailable) {\n-                            System.out.println(\n-                                         \"Could not enable XRender pipeline\");\n-                        }\n-                    }\n+            \/\/ initialize the X11 display connection\n+            initDisplay(glxRequested);\n@@ -126,3 +104,16 @@\n-                    if (xRenderAvailable) {\n-                        XRSurfaceData.initXRSurfaceData();\n-                    }\n+            \/\/ only attempt to initialize GLX if it was requested\n+            if (glxRequested) {\n+                glxAvailable = initGLX();\n+                if (glxVerbose && !glxAvailable) {\n+                    System.out.println(\n+                        \"Could not enable OpenGL \" +\n+                        \"pipeline (GLX 1.3 not available)\");\n+                }\n+            }\n+\n+            \/\/ only attempt to initialize Xrender if it was requested\n+            if (xRenderRequested) {\n+                xRenderAvailable = initXRender(xRenderVerbose, xRenderIgnoreLinuxVersion);\n+                if (xRenderVerbose && !xRenderAvailable) {\n+                    System.out.println(\n+                                 \"Could not enable XRender pipeline\");\n@@ -130,0 +121,1 @@\n+            }\n@@ -131,1 +123,2 @@\n-                return null;\n+            if (xRenderAvailable) {\n+                XRSurfaceData.initXRSurfaceData();\n@@ -133,1 +126,1 @@\n-         });\n+        }\n@@ -302,3 +295,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String isRemote = java.security.AccessController.doPrivileged(\n-            new sun.security.action.GetPropertyAction(\"sun.java2d.remote\"));\n+        String isRemote = System.getProperty(\"sun.java2d.remote\");\n@@ -325,20 +316,16 @@\n-        @SuppressWarnings(\"removal\")\n-        Boolean result = java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Boolean>() {\n-            public Boolean run() {\n-                InetAddress[] remAddr = null;\n-                Enumeration<InetAddress> locals = null;\n-                Enumeration<NetworkInterface> interfaces = null;\n-                try {\n-                    interfaces = NetworkInterface.getNetworkInterfaces();\n-                    remAddr = InetAddress.getAllByName(hostName);\n-                    if (remAddr == null) {\n-                        return Boolean.FALSE;\n-                    }\n-                } catch (UnknownHostException e) {\n-                    System.err.println(\"Unknown host: \" + hostName);\n-                    return Boolean.FALSE;\n-                } catch (SocketException e1) {\n-                    System.err.println(e1.getMessage());\n-                    return Boolean.FALSE;\n-                }\n+        InetAddress[] remAddr = null;\n+        Enumeration<InetAddress> locals = null;\n+        Enumeration<NetworkInterface> interfaces = null;\n+        try {\n+            interfaces = NetworkInterface.getNetworkInterfaces();\n+            remAddr = InetAddress.getAllByName(hostName);\n+            if (remAddr == null) {\n+                return false;\n+            }\n+        } catch (UnknownHostException e) {\n+            System.err.println(\"Unknown host: \" + hostName);\n+            return false;\n+        } catch (SocketException e1) {\n+            System.err.println(e1.getMessage());\n+            return false;\n+        }\n@@ -346,9 +333,7 @@\n-                for (; interfaces.hasMoreElements();) {\n-                    locals = interfaces.nextElement().getInetAddresses();\n-                    for (; locals.hasMoreElements();) {\n-                        final InetAddress localAddr = locals.nextElement();\n-                        for (int i = 0; i < remAddr.length; i++) {\n-                            if (localAddr.equals(remAddr[i])) {\n-                                return Boolean.TRUE;\n-                            }\n-                        }\n+        for (; interfaces.hasMoreElements();) {\n+            locals = interfaces.nextElement().getInetAddresses();\n+            for (; locals.hasMoreElements();) {\n+                final InetAddress localAddr = locals.nextElement();\n+                for (int i = 0; i < remAddr.length; i++) {\n+                    if (localAddr.equals(remAddr[i])) {\n+                        return true;\n@@ -357,3 +342,3 @@\n-                return Boolean.FALSE;\n-            }});\n-        return result.booleanValue();\n+            }\n+        }\n+        return false;\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11GraphicsEnvironment.java","additions":84,"deletions":99,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -37,1 +36,0 @@\n-import java.security.AccessController;\n@@ -51,1 +49,0 @@\n-@SuppressWarnings(\"removal\")\n@@ -73,7 +70,1 @@\n-        SCREENCAST_DEBUG = Boolean.parseBoolean(\n-                               AccessController.doPrivileged(\n-                                       new GetPropertyAction(\n-                                               \"awt.robot.screenshotDebug\",\n-                                               \"false\"\n-                                       )\n-                               ));\n+        SCREENCAST_DEBUG = Boolean.getBoolean(\"awt.robot.screenshotDebug\");\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/ScreencastHelper.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -40,2 +40,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -76,8 +74,0 @@\n-    @SuppressWarnings(\"removal\")\n-    private static void doPrivilegedRunnable(Runnable runnable) {\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            runnable.run();\n-            return null;\n-        });\n-    }\n-\n@@ -85,3 +75,1 @@\n-        @SuppressWarnings(\"removal\")\n-        Path propsPath = AccessController\n-                .doPrivileged((PrivilegedAction<Path>) () -> setupPath());\n+        Path propsPath = setupPath();\n@@ -229,1 +217,1 @@\n-                        doPrivilegedRunnable(() -> setFilePermission(PROPS_PATH));\n+                        setFilePermission(PROPS_PATH);\n@@ -231,1 +219,1 @@\n-                        doPrivilegedRunnable(() -> readTokens(PROPS_PATH));\n+                        readTokens(PROPS_PATH);\n@@ -247,17 +235,15 @@\n-        doPrivilegedRunnable(() -> {\n-            try {\n-                watchService =\n-                        FileSystems.getDefault().newWatchService();\n-\n-                PROPS_PATH\n-                        .getParent()\n-                        .register(watchService,\n-                                ENTRY_CREATE,\n-                                ENTRY_DELETE,\n-                                ENTRY_MODIFY);\n-\n-            } catch (Exception e) {\n-                if (SCREENCAST_DEBUG) {\n-                    System.err.printf(\"Token storage: failed to setup \" +\n-                            \"file watch %s\\n\", e);\n-                }\n+        try {\n+            watchService =\n+                    FileSystems.getDefault().newWatchService();\n+\n+            PROPS_PATH\n+                    .getParent()\n+                    .register(watchService,\n+                            ENTRY_CREATE,\n+                            ENTRY_DELETE,\n+                            ENTRY_MODIFY);\n+\n+        } catch (Exception e) {\n+            if (SCREENCAST_DEBUG) {\n+                System.err.printf(\"Token storage: failed to setup \" +\n+                        \"file watch %s\\n\", e);\n@@ -265,1 +251,1 @@\n-        });\n+        }\n@@ -320,1 +306,1 @@\n-                doPrivilegedRunnable(() -> store(PROPS_PATH, \"save tokens\"));\n+                store(PROPS_PATH, \"save tokens\");\n@@ -375,1 +361,1 @@\n-        doPrivilegedRunnable(() -> removeMalformedRecords(malformed));\n+        removeMalformedRecords(malformed);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/TokenStorage.java","additions":21,"deletions":35,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -366,5 +366,0 @@\n-            \/\/ NB need security permissions to get true IP address, and\n-            \/\/ we should have those as the whole initialisation is in a\n-            \/\/ doPrivileged block. But in this case no exception is thrown,\n-            \/\/ and it returns the loop back address, and so we end up with\n-            \/\/ \"localhost\"\n","filename":"src\/java.desktop\/unix\/classes\/sun\/font\/FcFontConfiguration.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -213,3 +213,1 @@\n-            @SuppressWarnings(\"removal\")\n-            String xtextpipe = java.security.AccessController.doPrivileged\n-                (new sun.security.action.GetPropertyAction(\"sun.java2d.xtextpipe\"));\n+            String xtextpipe = System.getProperty(\"sun.java2d.xtextpipe\");\n@@ -251,3 +249,1 @@\n-                @SuppressWarnings(\"removal\")\n-                String prop = java.security.AccessController.doPrivileged(\n-                        new sun.security.action.GetPropertyAction(\"sun.java2d.pmoffscreen\"));\n+                String prop = System.getProperty(\"sun.java2d.pmoffscreen\");\n","filename":"src\/java.desktop\/unix\/classes\/sun\/java2d\/x11\/X11SurfaceData.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -96,7 +94,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String gradProp =\n-            AccessController.doPrivileged(new PrivilegedAction<String>() {\n-                public String run() {\n-                    return System.getProperty(\"sun.java2d.xrgradcache\");\n-                }\n-            });\n+        String gradProp = System.getProperty(\"sun.java2d.xrgradcache\");\n","filename":"src\/java.desktop\/unix\/classes\/sun\/java2d\/xr\/XRCompositeManager.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-    @SuppressWarnings({\"removal\", \"restricted\"})\n+    @SuppressWarnings(\"restricted\")\n@@ -96,7 +96,1 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Void>() {\n-                public Void run() {\n-                    System.loadLibrary(\"awt\");\n-                    return null;\n-                }\n-            });\n+        System.loadLibrary(\"awt\");\n@@ -311,12 +305,6 @@\n-                @SuppressWarnings(\"removal\")\n-                OutputStream os = java.security.AccessController.\n-                    doPrivileged(new java.security.PrivilegedAction<OutputStream>() {\n-                        public OutputStream run() {\n-                            try {\n-                                return urlConnection.getOutputStream();\n-                            } catch (Exception e) {\n-                               IPPPrintService.debug_println(debugPrefix+e);\n-                            }\n-                            return null;\n-                        }\n-                    });\n+                OutputStream os = null;\n+                try {\n+                    os = urlConnection.getOutputStream();\n+                } catch (Exception e) {\n+                   IPPPrintService.debug_println(debugPrefix+e);\n+                }\n@@ -427,11 +415,5 @@\n-                @SuppressWarnings(\"removal\")\n-                OutputStream os = java.security.AccessController.\n-                    doPrivileged(new java.security.PrivilegedAction<OutputStream>() {\n-                        public OutputStream run() {\n-                            try {\n-                                return urlConnection.getOutputStream();\n-                            } catch (Exception e) {\n-                            }\n-                            return null;\n-                        }\n-                    });\n+                OutputStream os = null;\n+                try {\n+                    os = urlConnection.getOutputStream();\n+                } catch (Exception e) {\n+                }\n@@ -510,1 +492,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -513,3 +494,1 @@\n-            return java.security.AccessController\n-                    .doPrivileged((java.security.PrivilegedAction<Boolean>) () ->\n-                            System.getenv(\"APP_SANDBOX_CONTAINER_ID\") != null);\n+            return (System.getenv(\"APP_SANDBOX_CONTAINER_ID\") != null);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/CUPSPrinter.java","additions":14,"deletions":35,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -122,3 +122,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String debugStr = java.security.AccessController.doPrivileged(\n-                  new sun.security.action.GetPropertyAction(FORCE_PIPE_PROP));\n+        String debugStr = System.getProperty(FORCE_PIPE_PROP);\n@@ -1877,11 +1875,0 @@\n-            @SuppressWarnings(\"removal\")\n-            OutputStream os = java.security.AccessController.\n-                doPrivileged(new java.security.PrivilegedAction<OutputStream>() {\n-                    public OutputStream run() {\n-                        try {\n-                            return urlConnection.getOutputStream();\n-                        } catch (Exception e) {\n-                        }\n-                        return null;\n-                    }\n-                });\n@@ -1889,0 +1876,5 @@\n+            OutputStream os = null;\n+            try {\n+                os = urlConnection.getOutputStream();\n+            } catch (Exception e) {\n+            }\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/IPPPrintService.java","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.security.PrivilegedAction;\n@@ -34,3 +33,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedActionException;\n-import java.security.PrivilegedExceptionAction;\n@@ -98,3 +94,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String pollStr = java.security.AccessController.doPrivileged(\n-            new sun.security.action.GetPropertyAction(\"sun.java2d.print.polling\"));\n+        String pollStr = System.getProperty(\"sun.java2d.print.polling\");\n@@ -114,4 +108,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String refreshTimeStr = java.security.AccessController.doPrivileged(\n-            new sun.security.action.GetPropertyAction(\n-                \"sun.java2d.print.minRefreshTime\"));\n+        String refreshTimeStr = System.getProperty(\"sun.java2d.print.minRefreshTime\");\n@@ -135,3 +126,1 @@\n-            @SuppressWarnings(\"removal\")\n-            String aixPrinterEnumerator = java.security.AccessController.doPrivileged(\n-                new sun.security.action.GetPropertyAction(\"sun.java2d.print.aix.lpstat\"));\n+            String aixPrinterEnumerator = System.getProperty(\"sun.java2d.print.aix.lpstat\");\n@@ -205,1 +194,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -209,8 +197,6 @@\n-            AccessController.doPrivileged((PrivilegedAction<Thread>) () -> {\n-                Thread thr = new Thread(ThreadGroupUtils.getRootThreadGroup(),\n-                                        new PrinterChangeListener(),\n-                                        \"PrinterListener\", 0, false);\n-                thr.setContextClassLoader(null);\n-                thr.setDaemon(true);\n-                return thr;\n-            }).start();\n+            Thread thr = new Thread(ThreadGroupUtils.getRootThreadGroup(),\n+                                    new PrinterChangeListener(),\n+                                    \"PrinterListener\", 0, false);\n+            thr.setContextClassLoader(null);\n+            thr.setDaemon(true);\n+            thr.start();\n@@ -874,1 +860,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -889,3 +874,5 @@\n-            results = AccessController.doPrivileged(\n-                new PrivilegedExceptionAction<ArrayList<String>>() {\n-                    public ArrayList<String> run() throws IOException {\n+            Process proc;\n+            BufferedReader bufferedReader = null;\n+            File f = Files.createTempFile(\"prn\", \"xc\")\n+                          .toFile();\n+            cmd[2] = cmd[2] + \">\" + f.getAbsolutePath();\n@@ -893,15 +880,10 @@\n-                        Process proc;\n-                        BufferedReader bufferedReader = null;\n-                        File f = Files.createTempFile(\"prn\",\"xc\").toFile();\n-                        cmd[2] = cmd[2]+\">\"+f.getAbsolutePath();\n-\n-                        proc = Runtime.getRuntime().exec(cmd);\n-                        try {\n-                            boolean done = false; \/\/ in case of interrupt.\n-                            while (!done) {\n-                                try {\n-                                    proc.waitFor();\n-                                    done = true;\n-                                } catch (InterruptedException e) {\n-                                }\n-                            }\n+            proc = Runtime.getRuntime().exec(cmd);\n+            try {\n+                boolean done = false; \/\/ in case of interrupt.\n+                while (!done) {\n+                    try {\n+                        proc.waitFor();\n+                        done = true;\n+                    } catch (InterruptedException ignored) {\n+                    }\n+                }\n@@ -909,22 +891,7 @@\n-                            if (proc.exitValue() == 0) {\n-                                FileReader reader = new FileReader(f);\n-                                bufferedReader = new BufferedReader(reader);\n-                                String line;\n-                                ArrayList<String> results = new ArrayList<>();\n-                                while ((line = bufferedReader.readLine())\n-                                       != null) {\n-                                    results.add(line);\n-                                }\n-                                return results;\n-                            }\n-                        } finally {\n-                            f.delete();\n-                            \/\/ promptly close all streams.\n-                            if (bufferedReader != null) {\n-                                bufferedReader.close();\n-                            }\n-                            proc.getInputStream().close();\n-                            proc.getErrorStream().close();\n-                            proc.getOutputStream().close();\n-                        }\n-                        return null;\n+                if (proc.exitValue() == 0) {\n+                    FileReader reader = new FileReader(f);\n+                    bufferedReader = new BufferedReader(reader);\n+                    String line;\n+                    while ((line = bufferedReader.readLine())\n+                           != null) {\n+                        results.add(line);\n@@ -932,2 +899,16 @@\n-                });\n-        } catch (PrivilegedActionException e) {\n+                }\n+            } finally {\n+                f.delete();\n+                \/\/ promptly close all streams.\n+                if (bufferedReader != null) {\n+                    bufferedReader.close();\n+                }\n+                proc.getInputStream()\n+                    .close();\n+                proc.getErrorStream()\n+                    .close();\n+                proc.getOutputStream()\n+                    .close();\n+            }\n+        } catch (IOException io) {\n+            io.printStackTrace();\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/PrintServiceLookupProvider.java","additions":47,"deletions":66,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -89,1 +89,0 @@\n-\n@@ -528,2 +527,1 @@\n-        @SuppressWarnings(\"removal\")\n-        var dummy = java.security.AccessController.doPrivileged(po);\n+        po.run();\n@@ -602,2 +600,1 @@\n-            @SuppressWarnings(\"removal\")\n-            var dummy2 = java.security.AccessController.doPrivileged(spooler);\n+            spooler.run();\n@@ -914,3 +911,1 @@\n-    \/\/ Inner class to run \"privileged\" to open the printer output stream.\n-\n-    private class PrinterOpener implements java.security.PrivilegedAction<OutputStream> {\n+    private class PrinterOpener {\n@@ -944,3 +939,1 @@\n-    \/\/ Inner class to run \"privileged\" to invoke the system print command\n-\n-    private class PrinterSpooler implements java.security.PrivilegedAction<Object> {\n+    private class PrinterSpooler {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/UnixPrintJob.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -148,3 +148,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private static String encoding = java.security.AccessController.doPrivileged(\n-            new sun.security.action.GetPropertyAction(\"file.encoding\"));\n+    private static String encoding = System.getProperty(\"file.encoding\");\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/UnixPrintService.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}