{"files":[{"patch":"@@ -627,0 +627,5 @@\n+#if INCLUDE_CDS\n+  \/\/ For old shared classes, in order to avoid writing into the CDS archive, don't update\n+  \/\/ the methods with jsr bytecode.\n+  bool do_update = !(UseSharedSpaces && _klass->is_shared() && _klass->major_version() < 50);\n+#endif\n@@ -640,1 +645,4 @@\n-      methods->at_put(i, m());\n+#if INCLUDE_CDS\n+      if (do_update)\n+#endif\n+        methods->at_put(i, m());\n","filename":"src\/hotspot\/share\/interpreter\/rewriter.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\/*\n+ * @test\n+ * @bug 8302795\n+ * @summary CDS support of old classes with major version < JDK_6 (50) for static archive.\n+ *          Test old class with jsr bytecode.\n+ * @requires vm.cds\n+ * @library \/test\/lib\n+ * @compile test-classes\/OldClassWithjsrApp.jasm\n+ * @run driver OldClassWithjsr\n+ *\/\n+\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class OldClassWithjsr {\n+    public static void main(String[] args) throws Exception {\n+        String mainClass = \"OldClassWithjsrApp\";\n+        String namePrefix = \"oldclasswithjsr\";\n+        String appClasses[] = TestCommon.list(mainClass);\n+        JarBuilder.build(namePrefix, appClasses);\n+        String appJar = TestCommon.getTestJar(namePrefix + \".jar\");\n+\n+        boolean dynamicMode = CDSTestUtils.DYNAMIC_DUMP;\n+\n+        \/\/ create archive with class list\n+        OutputAnalyzer output = TestCommon.dump(appJar, appClasses, \"-Xlog:class+load,cds=debug,verification=trace\");\n+        TestCommon.checkExecReturn(output, 0,\n+                                   dynamicMode ? true : false,\n+                                   \"Skipping \" + mainClass + \": Old class has been linked\");\n+\n+        \/\/ run with archive\n+        TestCommon.run(\n+            \"-cp\", appJar,\n+            \"-Xlog:class+load,cds=debug,verification=trace\",\n+            mainClass, \"1\")\n+          .assertNormalExit(out -> {\n+              out.shouldContain(\"Verifying class \" + mainClass + \" with old format\");\n+              if (!dynamicMode) {\n+                  out.shouldContain(mainClass + \" source: shared objects file\");\n+              } else {\n+                  \/\/ Old classes were already linked before dynamic dump happened,\n+                  \/\/ so they couldn't be archived.\n+                  out.shouldMatch(\".class.load.*\" + mainClass + \" source:.*\" + namePrefix + \".jar\");\n+              }\n+          });\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/OldClassWithjsr.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+super public class OldClassWithjsrApp\n+        version 49:0\n+{\n+\n+\n+public Method \"<init>\":\"()V\"\n+        stack 1 locals 1\n+{\n+\/\/ null\n+                aload_0;\n+                invokespecial   Method java\/lang\/Object.\"<init>\":\"()V\";\n+                return;\n+}\n+\n+public static Method main:\"([Ljava\/lang\/String;)V\"\n+        stack 6 locals 2\n+{\n+                aload_0;\n+                iconst_0;\n+                aaload;\n+                invokestatic    Method java\/lang\/Integer.parseInt:\"(Ljava\/lang\/String;)I\";\n+                istore_1;\n+        L12:    return;\n+        L13:    iload_1;\n+                ifeq    L12;\n+                jsr     L23;\n+                goto    L24;\n+        L23:    return;\n+        L24:    aconst_null;\n+                goto    L13;\n+                return;\n+}\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\/OldClassWithjsrApp.jasm","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}