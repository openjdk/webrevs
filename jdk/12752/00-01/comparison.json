{"files":[{"patch":"@@ -627,5 +627,0 @@\n-#if INCLUDE_CDS\n-  \/\/ For old shared classes, in order to avoid writing into the CDS archive, don't update\n-  \/\/ the methods with jsr bytecode.\n-  bool do_update = !(UseSharedSpaces && _klass->is_shared() && _klass->major_version() < 50);\n-#endif\n@@ -645,4 +640,1 @@\n-#if INCLUDE_CDS\n-      if (do_update)\n-#endif\n-        methods->at_put(i, m());\n+      methods->at_put(i, m());\n","filename":"src\/hotspot\/share\/interpreter\/rewriter.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2409,1 +2409,15 @@\n-  it->push(&_methods);\n+#if INCLUDE_CDS\n+  \/\/ For \"old\" classes with methods containing the jsr bytecode, the _methods array will\n+  \/\/ be rewritten during runtime (see Rewriter::rewrite_jsrs()). So setting the _methods to\n+  \/\/ be writable. The length check on the _methods is necessary because classes which\n+  \/\/ don't have any methods share the Universe::_the_empty_method_array which is in the RO region.\n+  if (_methods != nullptr && _methods->length() > 0 &&\n+      !can_be_verified_at_dumptime() && methods_contain_jsr_bytecode()) {\n+    \/\/ To handle jsr bytecode, new Method* maybe stored into _methods\n+    it->push(&_methods, MetaspaceClosure::_writable);\n+  } else {\n+#endif\n+    it->push(&_methods);\n+#if INCLUDE_CDS\n+  }\n+#endif\n@@ -2617,0 +2631,15 @@\n+\n+bool InstanceKlass::methods_contain_jsr_bytecode() const {\n+  Thread* thread = Thread::current();\n+  for (int i = 0; i < _methods->length(); i++) {\n+    methodHandle m(thread, _methods->at(i));\n+    BytecodeStream bcs(m);\n+    while (!bcs.is_last_bytecode()) {\n+      Bytecodes::Code opcode = bcs.next();\n+      if (opcode == Bytecodes::_jsr || opcode == Bytecodes::_jsr_w) {\n+        return true;\n+      }\n+    }\n+  }\n+  return false;\n+}\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":30,"deletions":1,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1147,0 +1147,1 @@\n+  bool methods_contain_jsr_bytecode() const;\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}