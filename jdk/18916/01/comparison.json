{"files":[{"patch":"@@ -493,0 +493,1 @@\n+  assert(cmp->Opcode() == Op_CmpP || cmp->Opcode() == Op_CmpN, \"not expected node: %s\", cmp->Name());\n@@ -496,2 +497,1 @@\n-  return (cmp->Opcode() == Op_CmpP || cmp->Opcode() == Op_CmpN) &&\n-         (left == n || right == n) &&\n+  return (left == n || right == n) &&\n@@ -571,5 +571,8 @@\n-          Node* iff_cmp = iff->in(1)->in(1); \/\/ if->bool->cmp\n-          if (!can_reduce_cmp(n, iff_cmp)) {\n-            NOT_PRODUCT(if (TraceReduceAllocationMerges) tty->print_cr(\"Can NOT reduce Phi %d on invocation %d. CastPP %d doesn't have simple control.\", n->_idx, _invocation, use->_idx);)\n-            NOT_PRODUCT(n->dump(5);)\n-            return false;\n+          if (iff->Opcode() == Op_If && iff->in(1)->is_Bool() && iff->in(1)->in(1)->is_Cmp()) {\n+            Node* iff_cmp = iff->in(1)->in(1);\n+            int opc = iff_cmp->Opcode();\n+            if ((opc == Op_CmpP || opc == Op_CmpN) && !can_reduce_cmp(n, iff_cmp)) {\n+              NOT_PRODUCT(if (TraceReduceAllocationMerges) tty->print_cr(\"Can NOT reduce Phi %d on invocation %d. CastPP %d doesn't have simple control.\", n->_idx, _invocation, use->_idx);)\n+              NOT_PRODUCT(n->dump(5);)\n+              return false;\n+            }\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"}]}