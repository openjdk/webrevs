{"files":[{"patch":"@@ -26,0 +26,1 @@\n+#include \"runtime\/atomicAccess.hpp\"\n@@ -30,0 +31,1 @@\n+#include \"utilities\/macros.hpp\"\n@@ -32,3 +34,3 @@\n-static jlong _epoch = 0;\n-static bool rdtsc_elapsed_counter_enabled = false;\n-static jlong tsc_frequency = 0;\n+DEBUG_ONLY(volatile int Rdtsc::_initalized = 0;)\n+jlong Rdtsc::_epoch = 0;\n+jlong Rdtsc::_tsc_frequency = 0;\n@@ -36,1 +38,1 @@\n-static jlong set_epoch() {\n+jlong Rdtsc::set_epoch() {\n@@ -44,1 +46,1 @@\n-static void do_time_measurements(volatile jlong& time_base,\n+void Rdtsc::do_time_measurements(volatile jlong& time_base,\n@@ -85,2 +87,2 @@\n-static jlong initialize_frequency() {\n-  assert(0 == tsc_frequency, \"invariant\");\n+jlong Rdtsc::initialize_frequency() {\n+  assert(0 == _tsc_frequency, \"invariant\");\n@@ -139,3 +141,3 @@\n-static bool initialize_elapsed_counter() {\n-  tsc_frequency = initialize_frequency();\n-  return tsc_frequency != 0 && _epoch != 0;\n+bool Rdtsc::initialize_elapsed_counter() {\n+  _tsc_frequency = initialize_frequency();\n+  return _tsc_frequency != 0 && _epoch != 0;\n@@ -170,2 +172,9 @@\n-bool Rdtsc::is_supported() {\n-  return VM_Version::supports_tscinv_ext();\n+bool Rdtsc::initialize() {\n+  precond(AtomicAccess::xchg(&_initalized, 1) == 0);\n+  assert(0 == _tsc_frequency, \"invariant\");\n+  assert(0 == _epoch, \"invariant\");\n+  bool result = initialize_elapsed_counter(); \/\/ init hw\n+  if (result) {\n+    result = ergonomics(); \/\/ check logical state\n+  }\n+  return result;\n@@ -174,2 +183,2 @@\n-bool Rdtsc::is_elapsed_counter_enabled() {\n-  return rdtsc_elapsed_counter_enabled;\n+bool Rdtsc::is_supported() {\n+  return VM_Version::supports_tscinv_ext();\n@@ -179,1 +188,1 @@\n-  return tsc_frequency;\n+  return _tsc_frequency;\n@@ -194,14 +203,3 @@\n-bool Rdtsc::initialize() {\n-  static bool initialized = false;\n-  if (!initialized) {\n-    assert(!rdtsc_elapsed_counter_enabled, \"invariant\");\n-    assert(0 == tsc_frequency, \"invariant\");\n-    assert(0 == _epoch, \"invariant\");\n-    bool result = initialize_elapsed_counter(); \/\/ init hw\n-    if (result) {\n-      result = ergonomics(); \/\/ check logical state\n-    }\n-    rdtsc_elapsed_counter_enabled = result;\n-    initialized = true;\n-  }\n-  return rdtsc_elapsed_counter_enabled;\n+bool Rdtsc::enabled() {\n+  static bool enabled = initialize();\n+  return enabled;\n","filename":"src\/hotspot\/cpu\/x86\/rdtsc_x86.cpp","additions":27,"deletions":29,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -41,0 +41,16 @@\n+ private:\n+  DEBUG_ONLY(static volatile int _initalized;)\n+  static jlong _epoch;\n+  static jlong _tsc_frequency;\n+\n+  static jlong set_epoch();\n+\n+  static void do_time_measurements(volatile jlong& time_base,\n+                                   volatile jlong& time_fast,\n+                                   volatile jlong& time_base_elapsed,\n+                                   volatile jlong& time_fast_elapsed);\n+\n+  static jlong initialize_frequency();\n+  static bool  initialize_elapsed_counter();\n+  static bool  initialize();\n+\n@@ -46,1 +62,0 @@\n-  static bool  is_elapsed_counter_enabled(); \/\/ turn off with -XX:-UseFastUnorderedTimeStamps\n@@ -48,1 +63,1 @@\n-  static bool  initialize();\n+  static bool  enabled();\n","filename":"src\/hotspot\/cpu\/x86\/rdtsc_x86.hpp","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    _ft_enabled = Rdtsc::initialize();\n+    _ft_enabled = Rdtsc::enabled();\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrTime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-  static bool valid_rdtsc = Rdtsc::initialize();\n+  static bool valid_rdtsc = Rdtsc::enabled();\n@@ -76,1 +76,1 @@\n-  static bool valid_rdtsc = Rdtsc::initialize();\n+  static bool valid_rdtsc = Rdtsc::enabled();\n@@ -108,6 +108,1 @@\n-  static bool initialized = false;\n-  static bool valid_rdtsc = false;\n-  if (!initialized) {\n-    valid_rdtsc = Rdtsc::initialize();\n-    initialized = true;\n-  }\n+  static bool valid_rdtsc = Rdtsc::enabled();\n","filename":"src\/hotspot\/share\/utilities\/ticks.cpp","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"}]}