{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -139,2 +139,1 @@\n-                                    Object srcData, Object dstData,\n-                                    int srcType, int dstType);\n+                                    Object srcData, Object dstData);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/lcms\/LCMS.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import java.lang.annotation.Native;\n@@ -72,6 +71,0 @@\n-    @Native\n-    private static final int DT_BYTE = 0;\n-    @Native\n-    private static final int DT_SHORT = 1;\n-    @Native\n-    private static final int DT_INT = 2;\n@@ -79,1 +72,0 @@\n-    int dataType;\n@@ -96,1 +88,0 @@\n-     * @param  dt the type of data array: DT_BYTE, DT_SHORT or DT_INT\n@@ -99,1 +90,1 @@\n-    private LCMSImageLayout(Object data, int length, int nc, int dt, int size) {\n+    private LCMSImageLayout(Object data, int length, int nc, int size) {\n@@ -101,1 +92,0 @@\n-        dataType = dt;\n@@ -112,1 +102,1 @@\n-        this(data, data.length, nc, DT_BYTE, Byte.BYTES);\n+        this(data, data.length, nc, Byte.BYTES);\n@@ -116,1 +106,1 @@\n-        this(data, data.length, nc, DT_SHORT, Short.BYTES);\n+        this(data, data.length, nc, Short.BYTES);\n@@ -189,1 +179,0 @@\n-                l.dataType = DT_INT;\n@@ -204,1 +193,0 @@\n-                l.dataType = DT_BYTE;\n@@ -215,1 +203,0 @@\n-                l.dataType = DT_SHORT;\n@@ -322,1 +309,0 @@\n-            l.dataType = DT_BYTE;\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/lcms\/LCMSImageLayout.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -124,2 +124,1 @@\n-                          in.dataArray, out.dataArray,\n-                          in.dataType, out.dataType);\n+                          in.dataArray, out.dataArray);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/lcms\/LCMSTransform.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-#include \"sun_java2d_cmm_lcms_LCMSImageLayout.h\"\n@@ -49,4 +48,0 @@\n-#define DT_BYTE     sun_java2d_cmm_lcms_LCMSImageLayout_DT_BYTE\n-#define DT_SHORT    sun_java2d_cmm_lcms_LCMSImageLayout_DT_SHORT\n-#define DT_INT      sun_java2d_cmm_lcms_LCMSImageLayout_DT_INT\n-\n@@ -467,28 +462,0 @@\n-static void *getILData(JNIEnv *env, jobject data, jint type) {\n-    switch (type) {\n-        case DT_BYTE:\n-            return (*env)->GetByteArrayElements(env, data, 0);\n-        case DT_SHORT:\n-            return (*env)->GetShortArrayElements(env, data, 0);\n-        case DT_INT:\n-            return (*env)->GetIntArrayElements(env, data, 0);\n-        default:\n-            return NULL;\n-    }\n-}\n-\n-static void releaseILData(JNIEnv *env, void *pData, jint type, jobject data,\n-                          jint mode) {\n-    switch (type) {\n-        case DT_BYTE:\n-            (*env)->ReleaseByteArrayElements(env, data, (jbyte *) pData, mode);\n-            break;\n-        case DT_SHORT:\n-            (*env)->ReleaseShortArrayElements(env, data, (jshort *) pData, mode);\n-            break;\n-        case DT_INT:\n-            (*env)->ReleaseIntArrayElements(env, data, (jint *) pData, mode);\n-            break;\n-    }\n-}\n-\n@@ -498,1 +465,1 @@\n- * Signature: (JIIIIIIZZLjava\/lang\/Object;Ljava\/lang\/Object;)V\n+ * Signature: (JIIIIIILjava\/lang\/Object;Ljava\/lang\/Object;)V\n@@ -503,1 +470,1 @@\n-   jobject srcData, jobject dstData, jint srcDType, jint dstDType)\n+   jobject srcData, jobject dstData)\n@@ -506,1 +473,0 @@\n-\n@@ -514,1 +480,1 @@\n-    void *inputBuffer = getILData(env, srcData, srcDType);\n+    void *inputBuffer = (*env)->GetPrimitiveArrayCritical(env, srcData, NULL);\n@@ -516,1 +482,0 @@\n-        J2dRlsTraceLn(J2D_TRACE_ERROR, \"\");\n@@ -520,0 +485,4 @@\n+    void *outputBuffer = (*env)->GetPrimitiveArrayCritical(env, dstData, NULL);\n+    if (outputBuffer != NULL) {\n+        char *input = (char *) inputBuffer + srcOffset;\n+        char *output = (char *) outputBuffer + dstOffset;\n@@ -521,6 +490,2 @@\n-    void *outputBuffer = getILData(env, dstData, dstDType);\n-    if (outputBuffer == NULL) {\n-        releaseILData(env, inputBuffer, srcDType, srcData, JNI_ABORT);\n-        \/\/ An exception should have already been thrown.\n-        return;\n-    }\n+        cmsDoTransformLineStride(sTrans, input, output, width, height,\n+                                 srcNextRowOffset, dstNextRowOffset, 0, 0);\n@@ -528,8 +493,3 @@\n-    char *input = (char *) inputBuffer + srcOffset;\n-    char *output = (char *) outputBuffer + dstOffset;\n-\n-    cmsDoTransformLineStride(sTrans, input, output, width, height,\n-                             srcNextRowOffset, dstNextRowOffset, 0, 0);\n-\n-    releaseILData(env, inputBuffer, srcDType, srcData, JNI_ABORT);\n-    releaseILData(env, outputBuffer, dstDType, dstData, 0);\n+        (*env)->ReleasePrimitiveArrayCritical(env, dstData, outputBuffer, 0);\n+    }\n+    (*env)->ReleasePrimitiveArrayCritical(env, srcData, inputBuffer, JNI_ABORT);\n","filename":"src\/java.desktop\/share\/native\/liblcms\/LCMS.c","additions":13,"deletions":53,"binary":false,"changes":66,"status":"modified"}]}