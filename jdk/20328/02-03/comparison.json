{"files":[{"patch":"@@ -51,0 +51,3 @@\n+#if INCLUDE_SHENANDOAHGC\n+#include \"gc\/shenandoah\/shenandoahHeap.inline.hpp\"\n+#endif\n@@ -145,3 +148,4 @@\n-    \/\/ mark word uses by Shenandoah itself, if we hit the op during the concurrent\n-    \/\/ GC cycle.\n-    return ShenandoahHeap::heap()->is_idle();\n+    \/\/ mark word uses by Shenandoah itself. This is a problem if we hit the op\n+    \/\/ when Shenandoah has forwarded objects, which means it uses mark words\n+    \/\/ to carry GC metadata.\n+    return !ShenandoahHeap::heap()->has_forwarded_objects();\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/pathToGcRootsOperation.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}