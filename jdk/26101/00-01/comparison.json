{"files":[{"patch":"@@ -765,0 +765,3 @@\n+  \/\/ load msg into c_rarg0 so we can access it from the signal handler\n+  \/\/ ExternalAddress enables saving and restoring via the code cache\n+  la(c_rarg0, ExternalAddress((address) str));\n@@ -766,1 +769,0 @@\n-  emit_int64((uintptr_t)str);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -250,5 +250,2 @@\n-        \/\/ Pull a pointer to the error message out of the instruction\n-        \/\/ stream.\n-        const uint64_t *detail_msg_ptr\n-          = (uint64_t*)(pc + NativeInstruction::instruction_size);\n-        const char *detail_msg = (const char *)*detail_msg_ptr;\n+        \/\/ A pointer to the message will have been placed in a0\n+        const char *detail_msg = (const char *)(uc->uc_mcontext.__gregs[REG_A0]);\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/os_linux_riscv.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -199,1 +199,1 @@\n-#endif \/\/ defined(AMD64) || defined(AARCH64)\n+#endif \/\/ defined(AMD64) || defined(AARCH64) || defined(RISCV64)\n","filename":"src\/hotspot\/share\/code\/aotCodeCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}