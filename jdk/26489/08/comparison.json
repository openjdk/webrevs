{"files":[{"patch":"@@ -507,3 +507,3 @@\n-     *         is {@code null}, empty, in an invalid format,\n-     *         or if no provider supports a {@code CipherSpi}\n-     *         implementation for the specified algorithm\n+     *         is {@code null}, empty or in an invalid format;\n+     *         or if a {@code CipherSpi} implementation is not found or\n+     *         is found but does not support the mode\n@@ -511,2 +511,2 @@\n-     * @throws NoSuchPaddingException if {@code transformation}\n-     *         contains a padding scheme that is not available\n+     * @throws NoSuchPaddingException if a {@code CipherSpi} implementation\n+     *         is found but does not support the padding scheme\n@@ -558,0 +558,3 @@\n+        if (failure instanceof NoSuchPaddingException nspe) {\n+            throw nspe;\n+        }\n@@ -559,1 +562,2 @@\n-            (\"Cannot find any provider supporting \" + transformation, failure);\n+                (\"Cannot find any provider supporting \" + transformation,\n+                failure);\n@@ -567,2 +571,2 @@\n-     * {@code CipherSpi} implementation from the specified provider\n-     * is returned.  The specified provider must be registered\n+     * {@code CipherSpi} implementation from the specified {@code provider}\n+     * is returned.  The specified {@code provider} must be registered\n@@ -602,4 +606,4 @@\n-     *         is {@code null}, empty, in an invalid format,\n-     *         or if a {@code CipherSpi} implementation for the\n-     *         specified algorithm is not available from the specified\n-     *         provider\n+     *         is {@code null}, empty or in an invalid format;\n+     *         or if a {@code CipherSpi} implementation from the specified\n+     *         {@code provider} is not found or is found but does not support\n+     *         the mode\n@@ -607,2 +611,3 @@\n-     * @throws NoSuchPaddingException if {@code transformation}\n-     *         contains a padding scheme that is not available\n+     * @throws NoSuchPaddingException if a {@code CipherSpi} implementation\n+     *         from the specified {@code provider} is found but does not\n+     *         support the padding scheme\n@@ -610,1 +615,1 @@\n-     * @throws NoSuchProviderException if the specified provider is not\n+     * @throws NoSuchProviderException if the specified {@code provider} is not\n@@ -675,7 +680,8 @@\n-     *         is {@code null}, empty, in an invalid format,\n-     *         or if a {@code CipherSpi} implementation for the\n-     *         specified algorithm is not available from the specified\n-     *         {@code provider} object\n-     *\n-     * @throws NoSuchPaddingException if {@code transformation}\n-     *         contains a padding scheme that is not available\n+     *         is {@code null}, empty or in an invalid format;\n+     *         or if a {@code CipherSpi} implementation from the specified\n+     *         {@code provider} is not found or is found but does not support\n+     *         the mode\n+     *\n+     * @throws NoSuchPaddingException if a {@code CipherSpi} implementation\n+     *         from the specified {@code provider} is found but does not\n+     *         support the padding scheme\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":28,"deletions":22,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8153029\n+ * @bug 8153029 8360463\n@@ -41,0 +41,1 @@\n+import javax.crypto.NoSuchPaddingException;\n@@ -69,4 +70,2 @@\n-        checkTransformation(\"ChaCha20\", true);\n-        checkTransformation(\"ChaCha20\/None\/NoPadding\", true);\n-        checkTransformation(\"ChaCha20-Poly1305\", true);\n-        checkTransformation(\"ChaCha20-Poly1305\/None\/NoPadding\", true);\n+        Class NSAE = NoSuchAlgorithmException.class;\n+        Class NSPE = NoSuchPaddingException.class;\n@@ -74,4 +73,8 @@\n-        checkTransformation(\"ChaCha20\/ECB\/NoPadding\", false);\n-        checkTransformation(\"ChaCha20\/None\/PKCS5Padding\", false);\n-        checkTransformation(\"ChaCha20-Poly1305\/ECB\/NoPadding\", false);\n-        checkTransformation(\"ChaCha20-Poly1305\/None\/PKCS5Padding\", false);\n+        checkTransformation(\"ChaCha20\", null);\n+        checkTransformation(\"ChaCha20\/None\/NoPadding\", null);\n+        checkTransformation(\"ChaCha20-Poly1305\", null);\n+        checkTransformation(\"ChaCha20-Poly1305\/None\/NoPadding\", null);\n+        checkTransformation(\"ChaCha20\/ECB\/NoPadding\", NSAE);\n+        checkTransformation(\"ChaCha20\/None\/PKCS5Padding\", NSPE);\n+        checkTransformation(\"ChaCha20-Poly1305\/ECB\/NoPadding\", NSAE);\n+        checkTransformation(\"ChaCha20-Poly1305\/None\/PKCS5Padding\", NSPE);\n@@ -80,2 +83,2 @@\n-    private static void checkTransformation(String transformation,\n-            boolean expected) throws Exception {\n+    private static void checkTransformation(String transformation, Class exCls)\n+            throws Exception {\n@@ -83,4 +86,5 @@\n-            Cipher.getInstance(transformation);\n-            if (!expected) {\n-                throw new RuntimeException(\n-                        \"Unexpected transformation: \" + transformation);\n+            Cipher.getInstance(transformation,\n+                    System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+            if (exCls != null) {\n+                throw new RuntimeException(\"Expected Exception not thrown: \" +\n+                        exCls);\n@@ -88,1 +92,1 @@\n-                System.out.println(\"Expected transformation: \" + transformation);\n+                System.out.println(transformation + \": pass\");\n@@ -90,3 +94,3 @@\n-        } catch (NoSuchAlgorithmException e) {\n-            if (!expected) {\n-                System.out.println(\"Unexpected transformation: \" + transformation);\n+        } catch (NoSuchAlgorithmException | NoSuchPaddingException e) {\n+            if (e.getClass() != exCls) {\n+                throw new RuntimeException(\"Unexpected Exception\", e);\n@@ -94,1 +98,2 @@\n-                throw new RuntimeException(\"Unexpected fail: \" + transformation, e);\n+                System.out.println(transformation + \": got expected \" +\n+                        exCls.getName());\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/ChaCha20\/unittest\/ChaCha20CipherUnitTest.java","additions":26,"deletions":21,"binary":false,"changes":47,"status":"modified"}]}