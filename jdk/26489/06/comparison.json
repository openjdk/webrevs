{"files":[{"patch":"@@ -508,2 +508,2 @@\n-     *         or if no provider supports a {@code CipherSpi}\n-     *         implementation for the specified algorithm\n+     *         or if a {@code CipherSpi} implementation is not found, or\n+     *         is found but does not support the mode\n@@ -511,2 +511,2 @@\n-     * @throws NoSuchPaddingException if {@code transformation}\n-     *         contains a padding scheme that is not available\n+     * @throws NoSuchPaddingException if a {@code CipherSpi} implementation\n+     *         is found but does not support the padding scheme\n@@ -558,0 +558,3 @@\n+        if (failure instanceof NoSuchPaddingException nspe) {\n+            throw nspe;\n+        }\n@@ -559,1 +562,2 @@\n-            (\"Cannot find any provider supporting \" + transformation, failure);\n+                (\"Cannot find any provider supporting \" + transformation,\n+                failure);\n@@ -567,2 +571,2 @@\n-     * {@code CipherSpi} implementation from the specified provider\n-     * is returned.  The specified provider must be registered\n+     * {@code CipherSpi} implementation from the specified {@code provider}\n+     * is returned.  The specified {@code provider} must be registered\n@@ -603,3 +607,3 @@\n-     *         or if a {@code CipherSpi} implementation for the\n-     *         specified algorithm is not available from the specified\n-     *         provider\n+     *         or if a {@code CipherSpi} implementation from the specified\n+     *         {@code provider} is not found, or is found but does not support\n+     *         the mode\n@@ -607,2 +611,3 @@\n-     * @throws NoSuchPaddingException if {@code transformation}\n-     *         contains a padding scheme that is not available\n+     * @throws NoSuchPaddingException if a {@code CipherSpi} implementation\n+     *         from the specified {@code provider} is found but does not\n+     *         support the padding scheme\n@@ -610,1 +615,1 @@\n-     * @throws NoSuchProviderException if the specified provider is not\n+     * @throws NoSuchProviderException if the specified {@code provider} is not\n@@ -676,3 +681,3 @@\n-     *         or if a {@code CipherSpi} implementation for the\n-     *         specified algorithm is not available from the specified\n-     *         {@code provider} object\n+     *         or if a {@code CipherSpi} implementation from the specified\n+     *         {@code provider} is not found, or is found but does not support\n+     *         the mode\n@@ -680,2 +685,3 @@\n-     * @throws NoSuchPaddingException if {@code transformation}\n-     *         contains a padding scheme that is not available\n+     * @throws NoSuchPaddingException if a {@code CipherSpi} implementation\n+     *         from the specified {@code provider} is found but does not\n+     *         support the padding scheme\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":24,"deletions":18,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8153029\n+ * @bug 8153029 8360463\n@@ -41,0 +41,1 @@\n+import javax.crypto.NoSuchPaddingException;\n@@ -59,0 +60,6 @@\n+    enum Expected {\n+        PASS,\n+        NSAE,\n+        NSAE_OR_NSPE \/\/ depends on provider registration\n+    }\n+\n@@ -69,4 +76,7 @@\n-        checkTransformation(\"ChaCha20\", true);\n-        checkTransformation(\"ChaCha20\/None\/NoPadding\", true);\n-        checkTransformation(\"ChaCha20-Poly1305\", true);\n-        checkTransformation(\"ChaCha20-Poly1305\/None\/NoPadding\", true);\n+        checkTransformation(\"ChaCha20\", Expected.PASS);\n+        checkTransformation(\"ChaCha20\/None\/NoPadding\", Expected.PASS);\n+        checkTransformation(\"ChaCha20-Poly1305\", Expected.PASS);\n+        checkTransformation(\"ChaCha20-Poly1305\/None\/NoPadding\", Expected.PASS);\n+\n+        checkTransformation(\"ChaCha20-Poly1305\/BAD_MODE\/NoPadding\", Expected.NSAE);\n+        checkTransformation(\"ChaCha20-Poly1305\/BAD_MODE\/PKCS5Padding\", Expected.NSAE);\n@@ -74,4 +84,6 @@\n-        checkTransformation(\"ChaCha20\/ECB\/NoPadding\", false);\n-        checkTransformation(\"ChaCha20\/None\/PKCS5Padding\", false);\n-        checkTransformation(\"ChaCha20-Poly1305\/ECB\/NoPadding\", false);\n-        checkTransformation(\"ChaCha20-Poly1305\/None\/PKCS5Padding\", false);\n+        checkTransformation(\"ChaCha20\/ECB\/NoPadding\", Expected.NSAE_OR_NSPE);\n+        checkTransformation(\"ChaCha20\/None\/PKCS5Padding\", Expected.NSAE_OR_NSPE);\n+        checkTransformation(\"ChaCha20-Poly1305\/ECB\/NoPadding\",\n+                Expected.NSAE_OR_NSPE);\n+        checkTransformation(\"ChaCha20-Poly1305\/None\/PKCS5Padding\",\n+                Expected.NSAE_OR_NSPE);\n@@ -80,2 +92,2 @@\n-    private static void checkTransformation(String transformation,\n-            boolean expected) throws Exception {\n+    private static void checkTransformation(String transformation, Expected e)\n+            throws Exception {\n@@ -84,1 +96,3 @@\n-            if (!expected) {\n+            if (e == Expected.PASS) {\n+                System.out.println(\"Expected PASS: \" + transformation);\n+            } else {\n@@ -86,1 +100,5 @@\n-                        \"Unexpected transformation: \" + transformation);\n+                        \"Unexpected PASS for \" + transformation);\n+            }\n+        } catch (NoSuchAlgorithmException nsae) {\n+            if (e == Expected.NSAE || e == Expected.NSAE_OR_NSPE) {\n+                System.out.println(\"Expected NSAE: \" + transformation);\n@@ -88,1 +106,2 @@\n-                System.out.println(\"Expected transformation: \" + transformation);\n+                throw new RuntimeException(\"Unexpected NSAE for \" +\n+                        transformation);\n@@ -90,3 +109,3 @@\n-        } catch (NoSuchAlgorithmException e) {\n-            if (!expected) {\n-                System.out.println(\"Unexpected transformation: \" + transformation);\n+        } catch (NoSuchPaddingException nspe) {\n+            if (e == Expected.NSAE_OR_NSPE) {\n+                System.out.println(\"Expected NSPE: \" + transformation);\n@@ -94,1 +113,2 @@\n-                throw new RuntimeException(\"Unexpected fail: \" + transformation, e);\n+                throw new RuntimeException(\"Unexpected NSPE for \" +\n+                        transformation);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/ChaCha20\/unittest\/ChaCha20CipherUnitTest.java","additions":39,"deletions":19,"binary":false,"changes":58,"status":"modified"}]}