{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.awt.Graphics;\n@@ -36,0 +35,1 @@\n+import java.awt.event.MouseAdapter;\n@@ -37,2 +37,4 @@\n-import java.awt.event.MouseListener;\n-import java.awt.event.MouseMotionListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.util.concurrent.CountDownLatch;\n+\n@@ -43,1 +45,3 @@\n-public class bug4323121 {\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+\n+public final class bug4323121 {\n@@ -46,5 +50,10 @@\n-    static testButton button;\n-    static volatile Point pt;\n-    static volatile int buttonW;\n-    static volatile int buttonH;\n-    static volatile boolean failed = false;\n+    static JButton button;\n+\n+    static volatile Point buttonCenter;\n+\n+    private static final CountDownLatch windowGainedFocus = new CountDownLatch(1);\n+\n+    private static final CountDownLatch mouseEntered = new CountDownLatch(1);\n+\n+    \/\/ Usage of this flag is thread-safe because of using the mouseEntered latch\n+    private static boolean modelArmed;\n@@ -55,0 +64,1 @@\n+\n@@ -57,0 +67,11 @@\n+                button = new TestButton(\"gotcha\");\n+                button.addMouseListener(new MouseAdapter() {\n+                    @Override\n+                    public void mouseEntered(MouseEvent e) {\n+                        if (button.getModel().isArmed()) {\n+                            modelArmed = true;\n+                        }\n+                        mouseEntered.countDown();\n+                    }\n+                });\n+\n@@ -58,1 +79,0 @@\n-                button = new testButton(\"gotcha\");\n@@ -60,0 +80,8 @@\n+\n+                frame.addWindowFocusListener(new WindowAdapter() {\n+                    @Override\n+                    public void windowGainedFocus(WindowEvent e) {\n+                        windowGainedFocus.countDown();\n+                    }\n+                });\n+\n@@ -65,0 +93,4 @@\n+\n+            if (!windowGainedFocus.await(1, SECONDS)) {\n+                throw new RuntimeException(\"Window didn't gain focus\");\n+            }\n@@ -66,1 +98,1 @@\n-            robot.delay(1000);\n+\n@@ -68,3 +100,3 @@\n-                pt = button.getLocationOnScreen();\n-                buttonW = button.getSize().width;\n-                buttonH = button.getSize().height;\n+                Point location = button.getLocationOnScreen();\n+                buttonCenter = new Point(location.x + button.getWidth() \/ 2,\n+                                         location.y + button.getHeight() \/ 2);\n@@ -72,5 +104,9 @@\n-            robot.mouseMove(pt.x + buttonW \/ 2, pt.y + buttonH \/ 2);\n-            robot.waitForIdle();\n-            if (failed) {\n-                throw new RuntimeException(\"Any created button returns \" +\n-                                    \"true for isArmed()\");\n+\n+            robot.mouseMove(buttonCenter.x , buttonCenter.y);\n+\n+            if (!mouseEntered.await(1, SECONDS)) {\n+                throw new RuntimeException(\"Mouse entered event wasn't received\");\n+            }\n+            if (modelArmed) {\n+                throw new RuntimeException(\"getModel().isArmed() returns true \"\n+                                           + \"for a subclass of JButton\");\n@@ -79,1 +115,1 @@\n-                SwingUtilities.invokeAndWait(() -> {\n+            SwingUtilities.invokeAndWait(() -> {\n@@ -87,2 +123,2 @@\n-    static class testButton extends JButton implements MouseMotionListener, MouseListener {\n-        public testButton(String label) {\n+    private static final class TestButton extends JButton {\n+        public TestButton(String label) {\n@@ -90,33 +126,0 @@\n-            addMouseMotionListener(this);\n-            addMouseListener(this);\n-        }\n-\n-        protected void paintComponent(Graphics g) {\n-            super.paintComponent(g);\n-        }\n-\n-        protected void paintBorder(Graphics g) {\n-        }\n-\n-        public void mousePressed(MouseEvent e) {\n-        }\n-\n-        public void mouseDragged(MouseEvent e) {\n-        }\n-\n-        public void mouseMoved(MouseEvent e) {\n-        }\n-\n-        public void mouseReleased(MouseEvent e) {\n-        }\n-\n-        public void mouseEntered(MouseEvent e) {\n-            if (getModel().isArmed()) {\n-                failed = true;\n-            }\n-        }\n-\n-        public void mouseExited(MouseEvent e) {\n-        }\n-\n-        public void mouseClicked(MouseEvent e) {\n@@ -125,0 +128,1 @@\n+\n","filename":"test\/jdk\/javax\/swing\/JButton\/bug4323121.java","additions":60,"deletions":56,"binary":false,"changes":116,"status":"modified"}]}