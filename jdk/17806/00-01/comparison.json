{"files":[{"patch":"@@ -235,1 +235,1 @@\n-                            uint32_t imms, uint64_t &bimm)\n+                                  uint32_t imms, uint64_t &bimm)\n","filename":"src\/hotspot\/cpu\/aarch64\/immediate_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4090,2 +4090,3 @@\n-static int register_section_sizes(RegSet gp_registers, XMMRegSet xmm_registers, bool save_fpu,\n-                           int& gp_area_size, int& fp_area_size, int& xmm_area_size) {\n+static int register_section_sizes(RegSet gp_registers, XMMRegSet xmm_registers,\n+                                  bool save_fpu, int& gp_area_size,\n+                                  int& fp_area_size, int& xmm_area_size) {\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-                         MachNode* (*new_root)(), uint inst0_rule, bool imm) {\n+                                MachNode* (*new_root)(), uint inst0_rule, bool imm) {\n","filename":"src\/hotspot\/cpu\/x86\/peephole_x86_64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -562,3 +562,3 @@\n-                     XMMRegister a, XMMRegister b,\n-                     XMMRegister xmmt, Register rt,\n-                     bool min, bool single) {\n+                            XMMRegister a, XMMRegister b,\n+                            XMMRegister xmmt, Register rt,\n+                            bool min, bool single) {\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1272,1 +1272,2 @@\n-static int _print_dll_info_cb(const char * name, address base_address, address top_address, void * param) {\n+static int _print_dll_info_cb(const char * name, address base_address,\n+                              address top_address, void * param) {\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1668,2 +1668,2 @@\n-                 char *addr, size_t bytes, bool read_only,\n-                 bool allow_exec, MEMFLAGS flags = mtNone) {\n+                        char *addr, size_t bytes, bool read_only,\n+                        bool allow_exec, MEMFLAGS flags = mtNone) {\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1015,1 +1015,1 @@\n-                                      const GrowableArray<ModuleClassPathList*>* const module_list) {\n+                                             const GrowableArray<ModuleClassPathList*>* const module_list) {\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -300,1 +300,1 @@\n-                        ClassLoaderData* loader1, ClassLoaderData* loader2) {\n+                                   ClassLoaderData* loader1, ClassLoaderData* loader2) {\n","filename":"src\/hotspot\/share\/classfile\/loaderConstraints.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-                            Symbol* supername){\n+                                   Symbol* supername){\n","filename":"src\/hotspot\/share\/classfile\/placeholders.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,4 +147,4 @@\n-                                                  double serial_gc_time_passed,\n-                                                  double parallel_gc_time_passed,\n-                                                  bool conservative_alloc_rate,\n-                                                  size_t capacity) {\n+                                                         double serial_gc_time_passed,\n+                                                         double parallel_gc_time_passed,\n+                                                         bool conservative_alloc_rate,\n+                                                         size_t capacity) {\n@@ -218,2 +218,2 @@\n-                                                       double serial_gc_time_passed,\n-                                                       double parallel_gc_time_passed) {\n+                                                              double serial_gc_time_passed,\n+                                                              double parallel_gc_time_passed) {\n@@ -228,2 +228,2 @@\n-                                                            double serial_gc_time_passed,\n-                                                            double parallel_gc_time_passed) {\n+                                                                   double serial_gc_time_passed,\n+                                                                   double parallel_gc_time_passed) {\n@@ -238,2 +238,2 @@\n-                                                       double serial_gc_time_passed,\n-                                                       double parallel_gc_time_passed) {\n+                                                              double serial_gc_time_passed,\n+                                                              double parallel_gc_time_passed) {\n","filename":"src\/hotspot\/share\/gc\/z\/zDirector.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -928,4 +928,4 @@\n-                             InstanceKlass* ik,\n-                             const char* method,\n-                             Symbol* signature,\n-                             bool is_static, TRAPS)\n+                                    InstanceKlass* ik,\n+                                    const char* method,\n+                                    Symbol* signature,\n+                                    bool is_static, TRAPS)\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -323,0 +323,1 @@\n+\n","filename":"src\/hotspot\/share\/nmt\/memBaseline.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-                        ciKlass* prof_klass, int site_count, int receiver_count) {\n+                               ciKlass* prof_klass, int site_count, int receiver_count) {\n","filename":"src\/hotspot\/share\/opto\/doCall.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}