{"files":[{"patch":"@@ -29,1 +29,0 @@\n-#include \"runtime\/globals_extension.hpp\"\n@@ -81,2 +80,2 @@\n-  \/\/ like to exhibit exactly the same behavior as the standard ASAN error reporter, we honor\n-  \/\/ \"abort_on_error=1\" by ending the JVM with exit(3) (we just switch off CreateCoredumpOnCrash).\n+  \/\/ like to exhibit exactly the same behavior as the standard ASAN error reporter, we disable\n+  \/\/ core files if ASAN would inhibit them (we just switch off CreateCoredumpOnCrash).\n@@ -93,4 +92,6 @@\n-  const bool abort_on_error = (asan_options != nullptr) && ::strstr(asan_options, \"abort_on_error=1\");\n-  if (!abort_on_error) {\n-    if (CreateCoredumpOnCrash && FLAG_IS_CMDLINE(CreateCoredumpOnCrash)) {\n-      log_warning(asan)(\"CreateCoredumpOnCrash overruled by%s abort_on_error, core generation will be disabled.\",\n+  const bool asan_inhibits_cores = (asan_options == nullptr) ||\n+                                   (::strstr(asan_options, \"abort_on_error=1\") == nullptr) ||\n+                                   (::strstr(asan_options, \"disable_coredump=0\") == nullptr);\n+  if (asan_inhibits_cores) {\n+    if (CreateCoredumpOnCrash) {\n+      log_info(asan)(\"CreateCoredumpOnCrash overruled by%s asan options. Core generation disabled.\",\n@@ -98,1 +99,2 @@\n-      log_warning(asan)(\"Use 'ASAN_OPTIONS=abort_on_error=1:disable_coredump=0:unmap_shadow_on_exit=1' to enable core generation.\");\n+      log_info(asan)(\"Use 'ASAN_OPTIONS=abort_on_error=1:disable_coredump=0:unmap_shadow_on_exit=1' \"\n+                     \"to enable core generation.\");\n","filename":"src\/hotspot\/share\/sanitizers\/address.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"}]}