{"files":[{"patch":"@@ -1177,3 +1177,2 @@\n-      if (r->rem_set()->is_empty()) {\n-        return false;\n-      }\n+\n+      assert(r->rem_set()->is_complete(), \"humongous candidates must have complete remset\");\n@@ -1184,1 +1183,2 @@\n-      _cl.merge_card_set_for_region(r);\n+      if (!r->rem_set()->is_empty()) {\n+        _cl.merge_card_set_for_region(r);\n@@ -1186,7 +1186,8 @@\n-      \/\/ We should only clear the card based remembered set here as we will not\n-      \/\/ implicitly rebuild anything else during eager reclaim. Note that at the moment\n-      \/\/ (and probably never) we do not enter this path if there are other kind of\n-      \/\/ remembered sets for this region.\n-      \/\/ We want to continue collecting remembered set entries for humongous regions\n-      \/\/ that were not reclaimed.\n-      r->rem_set()->clear(true \/* only_cardset *\/, true \/* keep_tracked *\/);\n+        \/\/ We should only clear the card based remembered set here as we will not\n+        \/\/ implicitly rebuild anything else during eager reclaim. Note that at the moment\n+        \/\/ (and probably never) we do not enter this path if there are other kind of\n+        \/\/ remembered sets for this region.\n+        \/\/ We want to continue collecting remembered set entries for humongous regions\n+        \/\/ that were not reclaimed.\n+        r->rem_set()->clear(true \/* only_cardset *\/, true \/* keep_tracked *\/);\n+      }\n@@ -1194,1 +1195,2 @@\n-      assert(r->rem_set()->is_empty() && r->rem_set()->is_complete(), \"must be for eager reclaim candidates\");\n+      assert(r->rem_set()->is_empty(), \"must be empty after flushing\");\n+      assert(r->rem_set()->is_complete(), \"should still be after flushing\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"}]}