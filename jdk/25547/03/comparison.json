{"files":[{"patch":"@@ -457,2 +457,2 @@\n-        String mode = parts[1];\n-        String pad = parts[2];\n+        String mode = (parts[1].length() == 0 ? null : parts[1]);\n+        String pad = (parts[2].length() == 0 ? null : parts[2]);\n@@ -460,1 +460,1 @@\n-        if ((mode.length() == 0) && (pad.length() == 0)) {\n+        if ((mode == null || mode.isEmpty()) && (pad == null || pad.isEmpty())) {\n@@ -467,1 +467,3 @@\n-            list.add(new Transform(alg, \"\/\" + mode + \"\/\" + pad, null, null));\n+            if ((mode != null) && (pad != null)) {\n+                list.add(new Transform(alg, \"\/\" + mode + \"\/\" + pad, null, null));\n+            }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2025 IBM Corporation. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8358159\n+ * @summary test that the Cipher.getInstance() handles\n+ * transformations with empty mode and\/or padding\n+ * @run main TestEmptyModePadding\n+ *\/\n+\n+\n+import java.security.*;\n+import javax.crypto.*;\n+\n+public class TestEmptyModePadding {\n+\n+    public static void main(String[] args) throws Exception {\n+        Provider provider = Security.getProvider(System.getProperty(\"test.provider.name\", \"SunJCE\"));\n+\n+        test(\"AES\", provider);\n+        test(\"AES\/ECB\/PKCS5Padding\", provider);\n+        test(\"AES\/\/PKCS5Padding\", provider);        \/\/ Empty mode\n+        test(\"AES\/CBC\/\", provider);                 \/\/ Empty padding\n+        test(\"AES\/ \/NoPadding\", provider);          \/\/ Mode is a space\n+        test(\"AES\/CBC\/ \", provider);                \/\/ Padding is a space\n+        test(\"AES\/ \/ \", provider);                  \/\/ Both mode and padding are spaces\n+        test(\"AES\/\/\", provider);                    \/\/ Both mode and padding are missing\n+\n+    }\n+\n+    private static void test(String transformation, Provider provider) throws Exception {\n+        Cipher c = Cipher.getInstance(transformation, provider);\n+    }\n+}\n","filename":"test\/jdk\/javax\/crypto\/Cipher\/TestEmptyModePadding.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"}]}