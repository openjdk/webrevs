{"files":[{"patch":"@@ -10,1 +10,0 @@\n-import java.io.FileNotFoundException;\n@@ -12,0 +11,1 @@\n+import java.io.IOException;\n@@ -13,0 +13,2 @@\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n@@ -92,1 +94,1 @@\n-    public static JSONValue loadJson(String[] args) throws FileNotFoundException {\n+    public static JSONValue loadJson(String[] args) throws IOException {\n@@ -94,6 +96,4 @@\n-        InputStreamReader reader;\n-        if (args.length > 0)\n-            reader = new FileReader(args[0]);\n-        else {\n-            reader = new InputStreamReader(System.in);\n-        }\n+        Charset charset = StandardCharsets.UTF_8;   \/\/ Fix the JSON encoding to UTF-8\n+        InputStreamReader reader = args.length > 0\n+                ? new FileReader(args[0], charset)\n+                : new InputStreamReader(System.in, charset);\n","filename":"make\/jdk\/src\/classes\/build\/tools\/pandocfilter\/PandocFilter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-import java.io.FileNotFoundException;\n+import java.io.IOException;\n@@ -62,1 +62,1 @@\n-    public static void main(String[] args) throws FileNotFoundException {\n+    public static void main(String[] args) throws IOException {\n","filename":"make\/jdk\/src\/classes\/build\/tools\/pandocfilter\/PandocManPageHtmlFilter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-import java.io.FileNotFoundException;\n+import java.io.IOException;\n@@ -92,1 +92,1 @@\n-    public static void main(String[] args) throws FileNotFoundException {\n+    public static void main(String[] args) throws IOException {\n","filename":"make\/jdk\/src\/classes\/build\/tools\/pandocfilter\/PandocManPageTroffFilter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -247,0 +247,2 @@\n+        assert stream != System.in\n+                : \"Unexpected `System.in'! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/CDS.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.io.InputStream;\n@@ -171,3 +172,5 @@\n-                try (BufferedReader br =\n-                     new BufferedReader(new InputStreamReader(\n-                         url.openStream()))) {\n+\n+                try (InputStream is = url.openStream();\n+                     BufferedReader br = new BufferedReader(new InputStreamReader(is))) {\n+                    assert is != System.in\n+                            : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/KeyStoreUtil.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.nio.charset.Charset;\n@@ -1476,1 +1477,1 @@\n-        BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n+        BufferedReader reader = stdinAwareReader(in);\n@@ -2831,1 +2832,1 @@\n-        BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n+        BufferedReader reader = stdinAwareReader(in);\n@@ -3536,2 +3537,1 @@\n-        return (new BufferedReader(new InputStreamReader(\n-                                        System.in))).readLine();\n+        return stdinAwareReader(System.in).readLine();\n@@ -3547,2 +3547,8 @@\n-        return (new BufferedReader(new InputStreamReader(\n-                                        System.in))).readLine();\n+        return stdinAwareReader(System.in).readLine();\n+    }\n+\n+    private static BufferedReader stdinAwareReader(InputStream in) {\n+        InputStreamReader reader = in == System.in\n+                ? new InputStreamReader(in, Charset.forName(System.getProperty(\"stdin.encoding\")))\n+                : new InputStreamReader(in);\n+        return new BufferedReader(reader);\n@@ -3735,1 +3741,1 @@\n-        in = new BufferedReader(new InputStreamReader(System.in));\n+        in = stdinAwareReader(System.in);\n@@ -4241,2 +4247,1 @@\n-            reply = (new BufferedReader(new InputStreamReader\n-                                        (System.in))).readLine();\n+            reply = stdinAwareReader(System.in).readLine();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,2 +133,2 @@\n-        String result = new BufferedReader\n-            (new InputStreamReader(System.in)).readLine();\n+        InputStreamReader reader = new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\"));\n+        String result = new BufferedReader(reader).readLine();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ConsoleCallbackHandler.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -809,0 +809,3 @@\n+        if (encoding == null && stream == System.in) {\n+            encoding = System.getProperty(\"stdin.encoding\");\n+        }\n","filename":"src\/java.datatransfer\/share\/classes\/java\/awt\/datatransfer\/DataFlavor.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -209,0 +209,2 @@\n+        assert is != System.in\n+                : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/java.datatransfer\/share\/classes\/java\/awt\/datatransfer\/SystemFlavorMap.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,0 +89,2 @@\n+            assert stream != System.in\n+                    : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/JARSoundbankReader.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -593,0 +593,3 @@\n+            if (charset == null && in == System.in) {\n+                charset = System.getProperty(\"stdin.encoding\");\n+            }\n@@ -612,0 +615,4 @@\n+        String charset = (String) getClientProperty(\"charset\");\n+        if (charset == null && in == System.in) {\n+            charset = System.getProperty(\"stdin.encoding\");\n+        }\n@@ -617,1 +624,0 @@\n-        String charset = (String) getClientProperty(\"charset\");\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JEditorPane.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,2 +151,4 @@\n-\n-        read(new InputStreamReader(in), doc, pos);\n+        InputStreamReader reader = in == System.in\n+                ? new InputStreamReader(in, System.getProperty(\"stdin.encoding\"))\n+                : new InputStreamReader(in);\n+        read(reader, doc, pos);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/DefaultEditorKit.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -521,0 +521,2 @@\n+            assert is != System.in\n+                    : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/StyleSheet.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.nio.charset.Charset;\n@@ -258,2 +259,2 @@\n-            BufferedReader in = new BufferedReader\n-                    (new InputStreamReader(getIn()));\n+            Charset charset = Charset.forName(System.getProperty(\"stdin.encoding\"));\n+            BufferedReader in = new BufferedReader(new InputStreamReader(System.in, charset));\n@@ -374,0 +375,2 @@\n+            assert is != System.in\n+                    : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n@@ -405,5 +408,0 @@\n-    \/\/ input stream from where we will read\n-    private static InputStream getIn() {\n-        return System.in;\n-    }\n-\n","filename":"src\/java.scripting\/share\/classes\/com\/sun\/tools\/script\/shell\/Main.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.nio.charset.Charset;\n@@ -89,1 +90,1 @@\n-        this(new InputStreamReader(System.in),\n+        this(new InputStreamReader(System.in, Charset.forName(System.getProperty(\"stdin.encoding\"))),\n","filename":"src\/java.scripting\/share\/classes\/javax\/script\/SimpleScriptContext.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -307,2 +307,2 @@\n-                BufferedReader cis =\n-                    new BufferedReader(new InputStreamReader(System.in));\n+                BufferedReader cis = new BufferedReader(new InputStreamReader(\n+                        System.in, System.getProperty(\"stdin.encoding\")));\n@@ -415,2 +415,2 @@\n-                BufferedReader cis =\n-                    new BufferedReader(new InputStreamReader(System.in));\n+                BufferedReader cis = new BufferedReader(new InputStreamReader(\n+                        System.in, System.getProperty(\"stdin.encoding\")));\n","filename":"src\/java.security.jgss\/windows\/classes\/sun\/security\/krb5\/internal\/tools\/Ktab.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.io.InputStream;\n@@ -31,0 +32,1 @@\n+import java.nio.charset.Charset;\n@@ -351,1 +353,1 @@\n-        BufferedReader bufReader = new BufferedReader(new InputStreamReader(x));\n+        BufferedReader bufReader = stdinAwareReader(x);\n@@ -375,1 +377,1 @@\n-        BufferedReader bufReader = new BufferedReader(new InputStreamReader(x));\n+        BufferedReader bufReader = stdinAwareReader(x);\n@@ -390,0 +392,7 @@\n+    private static BufferedReader stdinAwareReader(InputStream in) {\n+        InputStreamReader reader = in == System.in\n+                ? new InputStreamReader(in, Charset.forName(System.getProperty(\"stdin.encoding\")))\n+                : new InputStreamReader(in);\n+        return new BufferedReader(reader);\n+    }\n+\n","filename":"src\/java.sql.rowset\/share\/classes\/javax\/sql\/rowset\/serial\/SQLOutputImpl.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: May 2025\n@@ -146,8 +146,0 @@\n-        XPathLexer (java.io.InputStream instream) {\n-                this ();\n-                if (null == instream) {\n-                        throw (new Error(\"Error: Bad input stream initializer.\"));\n-                }\n-                yy_reader = new java.io.BufferedReader(new java.io.InputStreamReader(instream));\n-        }\n-\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/compiler\/XPathLexer.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -258,0 +258,2 @@\n+                assert is != System.in\n+                        : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/CharInfo.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -448,0 +448,2 @@\n+            assert is != System.in\n+                    : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/utils\/ListingErrorHandler.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -305,1 +305,2 @@\n-\n+            assert is != System.in\n+                    : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/java.xml\/share\/classes\/org\/w3c\/dom\/bootstrap\/DOMImplementationRegistry.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -467,0 +467,2 @@\n+        assert in != System.in\n+                : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/jdk.attach\/share\/classes\/sun\/tools\/attach\/HotSpotVirtualMachine.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import java.nio.charset.Charset;\n@@ -109,2 +110,2 @@\n-        BufferedReader in =\n-            new BufferedReader(new InputStreamReader(System.in));\n+        Charset charset = Charset.forName(System.getProperty(\"stdin.encoding\"));\n+        BufferedReader in = new BufferedReader(new InputStreamReader(System.in, charset));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/CLHSDB.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.nio.charset.Charset;\n@@ -94,1 +95,3 @@\n-    input = new BufferedReader(new InputStreamReader(istr));\n+    input = new BufferedReader(istr == System.in\n+            ? new InputStreamReader(istr, Charset.forName(System.getProperty(\"stdin.encoding\")))\n+            : new InputStreamReader(istr));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/StreamMonitor.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,1 +168,1 @@\n-                Scanner scanner = new Scanner(System.in);\n+                Scanner scanner = new Scanner(System.in, System.getProperty(\"stdin.encoding\"));\n","filename":"src\/jdk.internal.ed\/share\/classes\/jdk\/internal\/editor\/external\/ExternalEditor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,2 +115,4 @@\n-        BufferedReader r = new BufferedReader(\n-                new InputStreamReader(inputfile.openStream()));\n+        InputStream is = inputfile.openStream();\n+        assert is != System.in\n+                : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n+        BufferedReader r = new BufferedReader(new InputStreamReader(is));\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/AliasFileParser.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+        assert is != System.in\n+                : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/reader\/impl\/InputRC.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,0 +120,2 @@\n+        assert in != System.in\n+                : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/jdk.internal.opt\/share\/classes\/jdk\/internal\/opt\/CommandLine.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -356,0 +356,2 @@\n+                assert in != System.in\n+                        : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlConfiguration.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -487,0 +487,2 @@\n+                assert in != System.in\n+                        : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,0 +215,2 @@\n+                    assert in != System.in\n+                            : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFile.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -526,0 +526,2 @@\n+        assert input != System.in\n+                : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Extern.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,4 @@\n-                Reader r = new BufferedReader(\n-                        new InputStreamReader(u.openStream()));\n+                InputStream is = u.openStream();\n+                assert is != System.in\n+                        : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n+                Reader r = new BufferedReader(new InputStreamReader(is));\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/OptionFinder.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,2 +59,4 @@\n-                Reader r = new BufferedReader(\n-                        new InputStreamReader(u.openStream()));\n+                InputStream is = u.openStream();\n+                assert is != System.in\n+                        : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n+                Reader r = new BufferedReader(new InputStreamReader(is));\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jstat\/OptionLister.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,3 @@\n+import java.io.InputStreamReader;\n+import java.nio.charset.Charset;\n+\n@@ -485,1 +488,1 @@\n-    this(encoding == null ? new java.io.InputStreamReader(dstream) : new java.io.InputStreamReader(dstream, encoding), startline, startcolumn, buffersize);\n+    this(encoding == null ? stdinAwareReader(dstream) : new java.io.InputStreamReader(dstream, encoding), startline, startcolumn, buffersize);\n@@ -492,1 +495,1 @@\n-    this(new java.io.InputStreamReader(dstream), startline, startcolumn, 4096);\n+    this(stdinAwareReader(dstream), startline, startcolumn, 4096);\n@@ -525,1 +528,1 @@\n-    ReInit(encoding == null ? new java.io.InputStreamReader(dstream) : new java.io.InputStreamReader(dstream, encoding), startline, startcolumn, buffersize);\n+    ReInit(encoding == null ? stdinAwareReader(dstream) : new java.io.InputStreamReader(dstream, encoding), startline, startcolumn, buffersize);\n@@ -532,1 +535,7 @@\n-    ReInit(new java.io.InputStreamReader(dstream), startline, startcolumn, buffersize);\n+    ReInit(stdinAwareReader(dstream), startline, startcolumn, buffersize);\n+  }\n+\n+  private static InputStreamReader stdinAwareReader(java.io.InputStream is) {\n+    return is == System.in\n+        ? new InputStreamReader(is, Charset.forName(System.getProperty(\"stdin.encoding\")))\n+        : new InputStreamReader(is);\n@@ -534,0 +543,1 @@\n+\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/JavaCharStream.java","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+import java.nio.charset.Charset;\n@@ -799,2 +800,2 @@\n-            BufferedReader in =\n-                    new BufferedReader(new InputStreamReader(System.in));\n+            Charset charset = Charset.forName(System.getProperty(\"stdin.encoding\"));\n+            BufferedReader in = new BufferedReader(new InputStreamReader(System.in, charset));\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/TTY.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -485,0 +485,2 @@\n+        assert stream != System.in\n+                : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/VMConnection.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.nio.charset.Charset;\n@@ -43,1 +44,2 @@\n-            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n+            Charset charset = Charset.forName(System.getProperty(\"stdin.encoding\"));\n+            BufferedReader br = new BufferedReader(new InputStreamReader(System.in, charset));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/jfc\/model\/UserInterface.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,0 +100,2 @@\n+                    assert traceFile != System.in\n+                            : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/GenerateJLIClassesPlugin.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3240,0 +3240,2 @@\n+            assert in != System.in\n+                    : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellTool.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -197,1 +197,1 @@\n-                    new BufferedReader(new InputStreamReader(System.in));\n+                    new BufferedReader(new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\")));\n","filename":"src\/utils\/src\/build\/tools\/commentchecker\/CommentChecker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,2 @@\n-        BufferedReader inputStreamReader = new BufferedReader(new InputStreamReader(System.in));\n+        BufferedReader inputStreamReader = new BufferedReader(new InputStreamReader(\n+                System.in, System.getProperty(\"stdin.encoding\")));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach010\/attach010Agent00.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,1 +176,1 @@\n-            new InputStreamReader(System.in));\n+            new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\")));\n@@ -1279,0 +1279,2 @@\n+            assert is != System.in\n+                    : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/BindServer.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,1 @@\n+import java.nio.charset.Charset;\n@@ -139,1 +140,2 @@\n-        final InputStreamReader isr = new InputStreamReader(System.in);\n+        final InputStreamReader isr = new InputStreamReader(\n+                System.in, Charset.forName(System.getProperty(\"stdin.encoding\")));\n","filename":"test\/jdk\/com\/sun\/jdi\/MultiBreakpointsTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,1 +133,1 @@\n-            (new InputStreamReader(System.in)).readLine();\n+            (new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\"))).readLine();\n","filename":"test\/jdk\/com\/sun\/security\/sasl\/ClientCallbackHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,1 +133,1 @@\n-            (new InputStreamReader(System.in)).readLine();\n+            (new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\"))).readLine();\n","filename":"test\/jdk\/com\/sun\/security\/sasl\/digest\/ClientCallbackHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,2 @@\n-        try (BufferedReader br = new BufferedReader(new InputStreamReader(System.in))) {\n+        try (BufferedReader br = new BufferedReader(new InputStreamReader(\n+                System.in, System.getProperty(\"stdin.encoding\")))) {\n","filename":"test\/jdk\/com\/sun\/tools\/attach\/Application.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-                int n = new InputStreamReader(System.in).read(buf,0,buf.length);\n+                int n = new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\")).read(buf,0,buf.length);\n@@ -2594,0 +2594,2 @@\n+                assert is != System.in\n+                        : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/Basic.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -315,1 +315,1 @@\n-                        try (Reader reader = new InputStreamReader(System.in);\n+                        try (Reader reader = new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\"));\n","filename":"test\/jdk\/java\/lang\/ProcessHandle\/JavaChild.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -510,0 +510,2 @@\n+                assert is != System.in\n+                        : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"test\/jdk\/java\/net\/httpclient\/AbstractThrowingPushPromises.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -383,0 +383,2 @@\n+            assert is != System.in\n+                    : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"test\/jdk\/java\/net\/httpclient\/DependentActionsTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -468,0 +468,2 @@\n+            assert is != System.in\n+                    : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"test\/jdk\/java\/net\/httpclient\/DependentPromiseActionsTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -90,0 +90,2 @@\n+                    assert sin != System.in\n+                            : \"Unexpected `System.in`! It requires `stdin.encoding` to be passed to `InputStreamReader::new`\";\n","filename":"test\/jdk\/java\/net\/httpclient\/Http1ChunkedTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import java.io.ByteArrayInputStream;\n@@ -75,2 +76,1 @@\n-        out.println(\"Default: \"\n-                    + new InputStreamReader(System.in).getEncoding());\n+        out.println(\"Default: \" + System.getProperty(\"stdin.encoding\"));\n","filename":"test\/jdk\/java\/nio\/charset\/spi\/CharsetTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        reader = new InputStreamReader(System.in);\n+        reader = new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\"));\n","filename":"test\/jdk\/javax\/script\/MyContext.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,2 +79,2 @@\n-                nc.setName((new BufferedReader\n-                        (new InputStreamReader(System.in))).readLine());\n+                Reader stdinReader = new InputStreamReader(System.in, System.getProperty(\"stdin.encoding\")));\n+                nc.setName(new BufferedReader(stdinReader).readLine());\n","filename":"test\/jdk\/javax\/security\/auth\/login\/LoginContext\/DefaultHandlerImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,2 +102,2 @@\n-        \"java.util.Scanner input = new java.util.Scanner(System.in)\",\n-        \"java.util.Scanner input = new java.util.Scanner(System.in) { }\",\n+        \"java.util.Scanner input = new java.util.Scanner(System.in, System.getProperty(\\\"stdin.encoding\\\"))\",\n+        \"java.util.Scanner input = new java.util.Scanner(System.in, System.getProperty(\\\"stdin.encoding\\\")) { }\",\n","filename":"test\/langtools\/jdk\/jshell\/CompletenessTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-        assertEval(\"Scanner s = new Scanner(System.in);\");\n+        assertEval(\"Scanner s = new Scanner(System.in, System.getProperty(\\\"stdin.encoding\\\"));\");\n","filename":"test\/langtools\/jdk\/jshell\/UserInputTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}