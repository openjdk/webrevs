{"files":[{"patch":"@@ -3077,1 +3077,1 @@\n-    if (!iter.repeat()) { \n+    if (!iter.repeat()) {\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -198,0 +198,8 @@\n+  enum class BacktrackNullSlot : int {\n+    \/\/ This NullPointerException is explicitly constructed\n+    NPE_EXPLICIT_CONSTRUCTED = -2,\n+    \/\/ There cannot be a NullPointerException at the given BCI\n+    INVALID_BYTECODE_ENCOUNTERED = -1,\n+    \/\/ A slot is found\n+    FOUND\n+  };\n@@ -217,1 +225,1 @@\n-  int get_NPE_null_slot(int bci);\n+  BacktrackNullSlot get_NPE_null_slot(int bci);\n@@ -1109,3 +1117,1 @@\n-#define INVALID_BYTECODE_ENCOUNTERED -1\n-#define NPE_EXPLICIT_CONSTRUCTED -2\n-int ExceptionMessageBuilder::get_NPE_null_slot(int bci) {\n+ExceptionMessageBuilder::BacktrackNullSlot ExceptionMessageBuilder::get_NPE_null_slot(int bci) {\n@@ -1127,1 +1133,1 @@\n-      return 0;\n+      return static_cast<BacktrackNullSlot>(0);\n@@ -1136,1 +1142,1 @@\n-      return 1;\n+      return static_cast<BacktrackNullSlot>(1);\n@@ -1143,1 +1149,1 @@\n-      return 2;\n+      return static_cast<BacktrackNullSlot>(2);\n@@ -1146,1 +1152,1 @@\n-      return 3;\n+      return static_cast<BacktrackNullSlot>(3);\n@@ -1154,1 +1160,1 @@\n-        return type2size[bt];\n+        return static_cast<BacktrackNullSlot>(type2size[bt]);\n@@ -1172,1 +1178,1 @@\n-          return ArgumentSizeComputer(signature).size();\n+          return static_cast<BacktrackNullSlot>(ArgumentSizeComputer(signature).size());\n@@ -1174,1 +1180,1 @@\n-          return NPE_EXPLICIT_CONSTRUCTED;\n+          return BacktrackNullSlot::NPE_EXPLICIT_CONSTRUCTED;\n@@ -1182,1 +1188,1 @@\n-  return INVALID_BYTECODE_ENCOUNTERED;\n+  return BacktrackNullSlot::INVALID_BYTECODE_ENCOUNTERED;\n@@ -1466,1 +1472,1 @@\n-bool BytecodeUtils::get_NPE_message_at(outputStream* ss, Method* method, int bci, int slot) {\n+bool BytecodeUtils::get_NPE_message_at(outputStream* ss, Method* method, int bci, NullSlot slot) {\n@@ -1481,1 +1487,1 @@\n-  if (slot >= 0) {\n+  if (slot != NullSlot::SEARCH) {\n@@ -1484,1 +1490,1 @@\n-    return emb.print_NPE_cause(ss, bci, slot, false);\n+    return emb.print_NPE_cause(ss, bci, static_cast<int>(slot), false);\n@@ -1489,1 +1495,1 @@\n-  slot = emb.get_NPE_null_slot(bci);\n+  ExceptionMessageBuilder::BacktrackNullSlot backtrackSlot = emb.get_NPE_null_slot(bci);\n@@ -1492,1 +1498,1 @@\n-  if (slot == NPE_EXPLICIT_CONSTRUCTED) {\n+  if (backtrackSlot == ExceptionMessageBuilder::BacktrackNullSlot::NPE_EXPLICIT_CONSTRUCTED) {\n@@ -1495,1 +1501,1 @@\n-  } else if (slot == INVALID_BYTECODE_ENCOUNTERED) {\n+  } else if (backtrackSlot == ExceptionMessageBuilder::BacktrackNullSlot::INVALID_BYTECODE_ENCOUNTERED) {\n@@ -1505,1 +1511,1 @@\n-    if (!emb.print_NPE_cause(ss, bci, slot, true)) {\n+    if (!emb.print_NPE_cause(ss, bci, static_cast<int>(backtrackSlot), true)) {\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeUtils.cpp","additions":25,"deletions":19,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -37,0 +37,7 @@\n+  \/\/ The slot where the null value comes from.\n+  enum class NullSlot : int {\n+    \/\/ Unknown; perform a search at the given bci to check instead.\n+    SEARCH = -1,\n+    \/\/ A given slot value to search from.\n+    EXPLICIT\n+  };\n@@ -39,1 +46,1 @@\n-  \/\/ If slot is negative (default), also search for the action that caused the NPE before\n+  \/\/ If slot is SEARCH (default), also search for the action that caused the NPE before\n@@ -41,1 +48,1 @@\n-  static bool get_NPE_message_at(outputStream* ss, Method* method, int bci, int slot = -1);\n+  static bool get_NPE_message_at(outputStream* ss, Method* method, int bci, NullSlot slot = NullSlot::SEARCH);\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeUtils.hpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -511,1 +511,2 @@\n-  bool explicit_search = search_slot >= 0;\n+  BytecodeUtils::NullSlot slot = search_slot >= 0 ? static_cast<BytecodeUtils::NullSlot>(search_slot)\n+                                                  : BytecodeUtils::NullSlot::SEARCH;\n@@ -515,1 +516,1 @@\n-  int depth = explicit_search ? stack_offset : 0; \/\/ 1-based depth\n+  int depth = slot != BytecodeUtils::NullSlot::SEARCH ? stack_offset : 0; \/\/ 1-based depth\n@@ -517,1 +518,1 @@\n-  if (!java_lang_Throwable::get_method_and_bci(exc, &method, &bci, depth + 1, explicit_search)) {\n+  if (!java_lang_Throwable::get_method_and_bci(exc, &method, &bci, depth + 1, slot != BytecodeUtils::NullSlot::SEARCH)) {\n@@ -525,1 +526,1 @@\n-  bool ok = BytecodeUtils::get_NPE_message_at(&ss, method, bci, search_slot);\n+  bool ok = BytecodeUtils::get_NPE_message_at(&ss, method, bci, slot);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}