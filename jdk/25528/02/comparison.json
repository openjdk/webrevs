{"files":[{"patch":"@@ -55,1 +55,2 @@\n-    comma.\n+    comma. Each trace message includes the thread id, timestamp and caller\n+    information.\n@@ -58,15 +59,0 @@\n-<h2>Printing Thread and Timestamp Information<\/h2>\n-<p>\n-    You can append the following strings to any option specified in the\n-    <code>java.security.debug<\/code> system property to print additional\n-    information:\n-<ul>\n-    <li><code>+thread<\/code>: Print thread and caller information<\/li>\n-    <li><code>+timestamp<\/code>: Print timestamp information<\/li>\n-<\/ul>\n-<p>\n-    For example, to add thread, caller, and timestamp information to all\n-    debugging output, set the <code>java.security.debug<\/code> system property\n-    on the command line as follows:\n-    <pre><code>java -Djava.security.debug=all+thread+timestamp MyApp<\/code><\/pre>\n-\n","filename":"src\/java.base\/share\/classes\/java\/security\/doc-files\/debug-system-property.html","additions":2,"deletions":16,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -44,3 +44,0 @@\n-    private boolean printDateTime;\n-    private boolean printThreadDetails;\n-\n@@ -48,4 +45,0 @@\n-    private static boolean threadInfoAll;\n-    private static boolean timeStampInfoAll;\n-    private static final String TIMESTAMP_OPTION = \"+timestamp\";\n-    private static final String THREAD_OPTION = \"+thread\";\n@@ -69,10 +62,0 @@\n-            } else if (args.contains(\"all\")) {\n-                \/\/ \"all\" option has special handling for decorator options\n-                \/\/ If the thread or timestamp decorator option is detected\n-                \/\/ with the \"all\" option, then it impacts decorator options\n-                \/\/ for other categories\n-                int beginIndex = args.lastIndexOf(\"all\") + \"all\".length();\n-                int commaIndex = args.indexOf(',', beginIndex);\n-                if (commaIndex == -1) commaIndex = args.length();\n-                threadInfoAll = args.substring(beginIndex, commaIndex).contains(THREAD_OPTION);\n-                timeStampInfoAll = args.substring(beginIndex, commaIndex).contains(TIMESTAMP_OPTION);\n@@ -109,5 +92,0 @@\n-        System.err.println(\"+timestamp can be appended to any of above options to print\");\n-        System.err.println(\"              a timestamp for that debug option\");\n-        System.err.println(\"+thread can be appended to any of above options to print\");\n-        System.err.println(\"              thread and caller information for that debug option\");\n-        System.err.println();\n@@ -154,1 +132,0 @@\n-            d.configureExtras(option);\n@@ -169,26 +146,0 @@\n-    \/\/ parse an option string to determine if extra details,\n-    \/\/ like thread and timestamp, should be printed\n-    private void configureExtras(String option) {\n-        \/\/ treat \"all\" as special case, only used for java.security.debug property\n-        this.printDateTime = timeStampInfoAll;\n-        this.printThreadDetails = threadInfoAll;\n-\n-        if (printDateTime && printThreadDetails) {\n-            \/\/ nothing left to configure\n-            return;\n-        }\n-\n-        \/\/ args is converted to lower case for the most part via marshal method\n-        int optionIndex = args.lastIndexOf(option);\n-        if (optionIndex == -1) {\n-            \/\/ option not in args list. Only here since \"all\" was present\n-            \/\/ in debug property argument. \"all\" option already parsed\n-            return;\n-        }\n-        int beginIndex = optionIndex + option.length();\n-        int commaIndex = args.indexOf(',', beginIndex);\n-        if (commaIndex == -1) commaIndex = args.length();\n-        String subOpt = args.substring(beginIndex, commaIndex);\n-        printDateTime = printDateTime || subOpt.contains(TIMESTAMP_OPTION);\n-        printThreadDetails = printThreadDetails || subOpt.contains(THREAD_OPTION);\n-    }\n@@ -211,5 +162,0 @@\n-     * +timestamp string can be appended to property value\n-     * to print timestamp information. (e.g. true+timestamp)\n-     * +thread string can be appended to property value\n-     * to print thread and caller information. (e.g. true+thread)\n-     *\n@@ -224,2 +170,0 @@\n-            d.printThreadDetails = property.contains(THREAD_OPTION);\n-            d.printDateTime = property.contains(TIMESTAMP_OPTION);\n@@ -288,4 +232,5 @@\n-     * If thread debug option enabled, include information containing\n-     * hex value of threadId and the current thread name\n-     * If timestamp debug option enabled, include timestamp string\n-     * @return extra info if debug option enabled.\n+     * Include information containing:\n+     * - hex value of threadId\n+     * - the current thread name\n+     * - timestamp string\n+     * @return String with above metadata\n@@ -294,11 +239,5 @@\n-        String retString = \"\";\n-        if (printThreadDetails) {\n-            retString = \"0x\" + Long.toHexString(\n-                    Thread.currentThread().threadId()).toUpperCase(Locale.ROOT) +\n-                    \"|\" + Thread.currentThread().getName() + \"|\" + formatCaller();\n-        }\n-        if (printDateTime) {\n-            retString += (retString.isEmpty() ? \"\" : \"|\")\n-                    + FormatHolder.DATE_TIME_FORMATTER.format(Instant.now());\n-        }\n-        return retString.isEmpty() ? \"\" : \"[\" + retString + \"]\";\n+        return String.format(\"[0x%s|%s|%s|%s]\",\n+                Long.toHexString(Thread.currentThread().threadId()).toUpperCase(Locale.ROOT),\n+                Thread.currentThread().getName(),\n+                formatCaller(),\n+                FormatHolder.DATE_TIME_FORMATTER.format(Instant.now()));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Debug.java","additions":10,"deletions":71,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,2 +50,2 @@\n-                        \"krb5loginmodule:\",\n-                        \"krb5loginmodule\\\\[\"),\n+                        \"krb5loginmodule\\\\[.*\\\\|main|\" + DATE_REGEX + \".*\\\\]:\",\n+                        \"krb5loginmodule:\"),\n@@ -62,1 +62,1 @@\n-                \/\/ thread info only\n+                \/\/ test for thread and timestamp info\n@@ -65,10 +65,0 @@\n-                        \"krb5loginmodule\\\\[.*\\\\|main|\\\\.*java.*]:\",\n-                        \"\\\\|\" + DATE_REGEX + \".*\\\\]:\"),\n-                \/\/ timestamp info only\n-                Arguments.of(\"debug\",\n-                        \"true+timestamp\",\n-                        \"krb5loginmodule\\\\[\" + DATE_REGEX + \".*\\\\]\",\n-                        \"\\\\|main\\\\]:\"),\n-                \/\/ both thread and timestamp\n-                Arguments.of(\"debug\",\n-                        \"true+timestamp+thread\",\n@@ -107,1 +97,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/LoginModuleDebug.java","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    private static final String DATE_REGEX = \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";\n@@ -56,0 +57,2 @@\n+\n+\n@@ -77,4 +80,4 @@\n-        debugMessages.put(\"javax.net.debug\",\n-                List.of(\"properties: Initial security property:\",\n-                        \"certpath: Cert path validation succeeded\"));\n-        debugMessages.put(\"logger\",\n+        debugMessages.put(\"java.security.debug\",\n+                List.of(\"properties\\\\[.*\\\\|main\\\\|.*\" + DATE_REGEX + \".*\\\\]:\",\n+                        \"certpath\\\\[.*\\\\|main\\\\|.*\" + DATE_REGEX + \".*\\\\]:\"));\n+        debugMessages.put(\"javax.net.debug.logger\",\n@@ -154,1 +157,1 @@\n-                        List.of(\"handshake\", \"javax.net.debug\", \"keymanager\",\n+                        List.of(\"handshake\", \"java.security.debug\", \"keymanager\",\n@@ -160,2 +163,3 @@\n-                        List.of(\"handshake\", \"keymanager\", \"logger\", \"packet\",\n-                                \"plaintext\", \"record\", \"session\", \"ssl\",\n+                        List.of(\"handshake\", \"javax.net.debug.logger\",\n+                                \"keymanager\", \"packet\",  \"plaintext\",\n+                                \"record\", \"session\", \"ssl\",\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLLogger\/DebugPropertyValuesTest.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8051959\n+ * @bug 8051959 8350689\n@@ -46,0 +46,9 @@\n+    static final String EXPECTED_PROP_REGEX =\n+            \"properties\\\\[.*\\\\|main|\" + DATE_REGEX + \".*\\\\]:\";\n+    static final String EXPECTED_PROP_KEYSTORE_REGEX =\n+            \"properties\\\\[.*\\\\|main|\" + DATE_REGEX +\n+                    \".*\\\\Rkeystore\\\\[.*\\\\|main|\" + DATE_REGEX + \".*\\\\]:\";\n+    static final String EXPECTED_ALL_REGEX =\n+            \"properties\\\\[.*\\\\|main.*\\\\|\" + DATE_REGEX +\n+                    \".*\\\\]((.*\\\\R)*)keystore\\\\[.*\\\\|main.*\\\\|\"\n+                    + DATE_REGEX + \".*\\\\]:\";\n@@ -49,1 +58,1 @@\n-                \/\/ no extra info present\n+                \/\/ test for thread and timestamp info\n@@ -51,3 +60,3 @@\n-                        \"properties: Initial\",\n-                        \"properties\\\\[\"),\n-                \/\/ thread info only\n+                        EXPECTED_PROP_REGEX,\n+                        \"properties:\"),\n+                \/\/ test for thread and timestamp info\n@@ -55,9 +64,1 @@\n-                        \"properties\\\\[.*\\\\|main\\\\|.*java.*]:\",\n-                        \"properties\\\\[\" + DATE_REGEX),\n-                \/\/ timestamp info only\n-                Arguments.of(\"properties+timestamp\",\n-                        \"properties\\\\[\" + DATE_REGEX + \".*\\\\]\",\n-                        \"\\\\|main\\\\]:\"),\n-                \/\/ both thread and timestamp\n-                Arguments.of(\"properties+timestamp+thread\",\n-                        \"properties\\\\[.*\\\\|main|\" + DATE_REGEX + \".*\\\\]:\",\n+                        EXPECTED_PROP_REGEX,\n@@ -67,1 +68,1 @@\n-                        \"properties\\\\[.*\\\\|main|\" + DATE_REGEX + \".*\\\\]:\",\n+                        EXPECTED_PROP_REGEX,\n@@ -69,32 +70,3 @@\n-                \/\/ comma not valid separator, ignore extra info printing request\n-                Arguments.of(\"properties,thread,timestamp\",\n-                        \"properties:\",\n-                        \"properties\\\\[.*\\\\|main|\" + DATE_REGEX + \".*\\\\]:\"),\n-                \/\/ no extra info for keystore debug prints\n-                Arguments.of(\"properties+thread+timestamp,keystore\",\n-                        \"properties\\\\[.*\\\\|main|\" + DATE_REGEX + \".*\\\\]:\",\n-                        \"keystore\\\\[\"),\n-                \/\/ flip arguments around in last test - same outcome expected\n-                Arguments.of(\"keystore,properties+thread+timestamp\",\n-                        \"properties\\\\[.*\\\\|main|\" + DATE_REGEX + \".*\\\\]:\",\n-                        \"keystore\\\\[\"),\n-                \/\/ turn on thread info for both keystore and properties components\n-                Arguments.of(\"keystore+thread,properties+thread\",\n-                        \"properties\\\\[.*\\\\|main|.*\\\\Rkeystore\\\\[.*\\\\|main|.*\\\\]:\",\n-                        \"\\\\|\" + DATE_REGEX + \".*\\\\]:\"),\n-                \/\/ same as above with erroneous comma at end of string. same output expected\n-                Arguments.of(\"keystore+thread,properties+thread,\",\n-                        \"properties\\\\[.*\\\\|main|.*\\\\Rkeystore\\\\[.*\\\\|main|.*\\\\]:\",\n-                        \"\\\\|\" + DATE_REGEX + \".*\\\\]:\"),\n-                \/\/ turn on thread info for properties and timestamp for keystore\n-                Arguments.of(\"keystore+timestamp,properties+thread\",\n-                        \"properties\\\\[.*\\\\|main|.*\\\\Rkeystore\\\\[\" + DATE_REGEX + \".*\\\\]:\",\n-                        \"properties\\\\[.*\\\\|\" + DATE_REGEX + \".*\\\\]:\"),\n-                \/\/ turn on thread info for all components\n-                Arguments.of(\"all+thread\",\n-                        \"properties\\\\[.*\\\\|main.*((.*\\\\R)*)keystore\\\\[.*\\\\|main.*java.*\\\\]:\",\n-                        \"properties\\\\[\" + DATE_REGEX + \".*\\\\]:\"),\n-                \/\/ turn on thread info and timestamp for all components\n-                Arguments.of(\"all+thread+timestamp\",\n-                        \"properties\\\\[.*\\\\|main.*\\\\|\" + DATE_REGEX +\n-                                \".*\\\\]((.*\\\\R)*)keystore\\\\[.*\\\\|main.*\\\\|\" + DATE_REGEX + \".*\\\\]:\",\n+                \/\/ regular keystore,properties component string\n+                Arguments.of(\"keystore,properties\",\n+                        EXPECTED_PROP_KEYSTORE_REGEX,\n@@ -102,4 +74,3 @@\n-                \/\/ all decorator option should override other component options\n-                Arguments.of(\"all+thread+timestamp,properties\",\n-                        \"properties\\\\[.*\\\\|main.*\\\\|\" + DATE_REGEX +\n-                                \".*\\\\]((.*\\\\R)*)keystore\\\\[.*\\\\|main.*\\\\|\" + DATE_REGEX + \".*\\\\]:\",\n+                \/\/ turn on all\n+                Arguments.of(\"all\",\n+                        EXPECTED_ALL_REGEX,\n@@ -107,8 +78,3 @@\n-                \/\/ thread details should only be printed for properties option\n-                Arguments.of(\"properties+thread,all\",\n-                        \"properties\\\\[.*\\\\|main\\\\|.*\\\\]:\",\n-                        \"keystore\\\\[.*\\\\|main\\\\|.*\\\\]:\"),\n-                \/\/ thread details should be printed for all statements\n-                Arguments.of(\"properties,all+thread\",\n-                        \"properties\\\\[.*\\\\|main.*java\" +\n-                                \".*\\\\]((.*\\\\R)*)keystore\\\\[.*\\\\|main.*java.*\\\\]:\",\n+                \/\/ expect thread and timestamp info\n+                Arguments.of(\"all+thread\",\n+                        EXPECTED_ALL_REGEX,\n","filename":"test\/jdk\/sun\/security\/util\/Debug\/DebugOptions.java","additions":26,"deletions":60,"binary":false,"changes":86,"status":"modified"}]}