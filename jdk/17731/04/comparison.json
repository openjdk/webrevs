{"files":[{"patch":"@@ -282,0 +282,5 @@\n+If \\f[V]--enable-preview\\f[R] is specified, the \\f[V]--source N\\f[R]\n+arguments can be omitted.\n+If the Java runtime version is \\f[V]N\\f[R], then \\f[V]`--release N`\\f[R]\n+is implied when compiling source files.\n+.IP \\[bu] 2\n","filename":"src\/java.base\/share\/man\/java.1","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,3 @@\n-                        throw new Fault(Errors.EnablePreviewRequiresSource);\n+                        String feature = String.valueOf(Runtime.version().feature());\n+                        programOptions.addAll(List.of(\"--release\", feature));\n+                        subsequentOptions.addAll(List.of(\"--release\", feature));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/launcher\/RelevantJavacOptions.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -142,3 +142,0 @@\n-launcher.err.enable.preview.requires.source=\\\n-    --enable-preview must be used with --source\n-\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/launcher.properties","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,2 +103,0 @@\n-        \/\/ Replace with plain Run.of(hi) once implict classes are out of preview\n-        System.setProperty(\"jdk.internal.javac.source\", String.valueOf(Runtime.version().feature()));\n@@ -106,2 +104,0 @@\n-        System.clearProperty(\"jdk.internal.javac.source\");\n-\n","filename":"test\/langtools\/tools\/javac\/launcher\/BasicSourceLauncherTests.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,0 @@\n-import java.util.HashMap;\n-import java.util.Map;\n@@ -59,1 +57,0 @@\n-import java.util.stream.Collectors;\n@@ -537,4 +534,3 @@\n-                .run(Task.Expect.FAIL)\n-                .getOutputLines(Task.OutputKind.STDERR);\n-        log = log.stream().filter(s->!s.matches(\"^Picked up .*JAVA.*OPTIONS:.*\")).collect(Collectors.toList());\n-        checkEqual(\"stderr\", log, List.of(\"error: --enable-preview must be used with --source\"));\n+                .run(Task.Expect.SUCCESS)\n+                .getOutputLines(Task.OutputKind.STDOUT);\n+        checkEqual(\"stdout\", log, List.of(\"Hello World! []\"));\n","filename":"test\/langtools\/tools\/javac\/launcher\/SourceLauncherTest.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"}]}