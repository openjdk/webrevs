{"files":[{"patch":"@@ -3807,0 +3807,4 @@\n+  \/\/ Set the _monitor_owner_id to the next thread_id temporarily while initialization runs.\n+  \/\/ Do it now before we make this thread visible in Threads::add().\n+  thread->set_monitor_owner_id(ThreadIdentifier::next());\n+\n@@ -3846,0 +3850,3 @@\n+  \/\/ Update the _monitor_owner_id with the tid value.\n+  thread->set_monitor_owner_id(java_lang_Thread::thread_id(thread->threadObj()));\n+\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -239,2 +239,0 @@\n-  \/\/ Set the _monitor_owner_id to the next thread_id temporarily while initialization runs.\n-  set_monitor_owner_id(ThreadIdentifier::next());\n@@ -266,2 +264,0 @@\n-  \/\/ Update the _monitor_owner_id with the tid value.\n-  set_monitor_owner_id(java_lang_Thread::thread_id(thread_oop()));\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-    assert(id >= ThreadIdentifier::initial() && id < ThreadIdentifier::current(), \"\");\n+    ThreadIdentifier::verify_id(id);\n@@ -176,1 +176,5 @@\n-  int64_t monitor_owner_id() const { return _monitor_owner_id; }\n+  int64_t monitor_owner_id() const {\n+    int64_t id = _monitor_owner_id;\n+    ThreadIdentifier::verify_id(id);\n+    return id;\n+  }\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,3 +44,1 @@\n-  int64_t id = thread->monitor_owner_id();\n-  assert(id >= ThreadIdentifier::initial() && id < ThreadIdentifier::current(), \"must be reasonable\");\n-  return id;\n+  return thread->monitor_owner_id();\n@@ -51,1 +49,1 @@\n-  assert(id >= ThreadIdentifier::initial() && id < ThreadIdentifier::current(), \"must be reasonable\");\n+  ThreadIdentifier::verify_id(id);\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.inline.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,0 +51,7 @@\n+\n+#ifdef ASSERT\n+void ThreadIdentifier::verify_id(int64_t id) {\n+  int64_t current_id = current();\n+  assert(id >= initial() && id < current_id, \"invalid id, \" INT64_FORMAT \" and current is \" INT64_FORMAT, id, current_id);\n+}\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/threadIdentifier.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+  static void verify_id(int64_t id) NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/runtime\/threadIdentifier.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1034,0 +1034,1 @@\n+  assert(p->monitor_owner_id() != 0, \"should be set\");\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}