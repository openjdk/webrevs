{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,0 @@\n- * @author Scott Violet\n@@ -45,0 +44,2 @@\n+ * @summary Verifies if Alt+mnemonic char works when\n+ *          menu & menuitem have same mnemonic char\n@@ -48,1 +49,0 @@\n-\n@@ -51,7 +51,3 @@\n-    private JMenu menu;\n-\n-    private JFrame frame;\n-\n-    public static void main(String[] args) throws Throwable {\n-        new bug4213634();\n-    }\n+    private static JMenu menu;\n+    private static JFrame frame;\n+    private static Robot robot;\n@@ -59,7 +55,4 @@\n-    bug4213634() throws AWTException, InterruptedException, InvocationTargetException {\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            @Override\n-            public void run() {\n-                createAndShowGUI();\n-            }\n-        });\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> createAndShowGUI());\n@@ -67,1 +60,10 @@\n-        test();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            test();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n@@ -70,2 +72,2 @@\n-    public  void createAndShowGUI() {\n-        frame = new JFrame(\"TEST\");\n+    public static void createAndShowGUI() {\n+        frame = new JFrame(\"bug4213634\");\n@@ -76,2 +78,0 @@\n-        JTextArea ta = new JTextArea(\"This test dedicated to Nancy and Kathleen, testers and bowlers extraordinaire\\n\\n\\nNo exception means pass.\");\n-        frame.getContentPane().add(\"Center\", ta);\n@@ -80,1 +80,2 @@\n-        frame.setBounds(100, 100, 400, 400);\n+        frame.setSize(300, 300);\n+        frame.setLocationRelativeTo(null);\n@@ -85,4 +86,1 @@\n-    private void test() throws AWTException, InterruptedException, InvocationTargetException {\n-        Robot robot = new Robot();\n-        robot.setAutoDelay(50);\n-        robot.waitForIdle();\n+    private static void test() throws Exception {\n@@ -92,0 +90,1 @@\n+        robot.delay(100);\n@@ -93,10 +92,6 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            @Override\n-            public void run() {\n-                if (!menu.isSelected()) {\n-                    throw new RuntimeException(\n-                        \"Failed: Menu didn't remain posted at end of test\");\n-                } else {\n-                    System.out.println(\"Test passed!\");\n-                    frame.dispose();\n-                }\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (!menu.isSelected()) {\n+                throw new RuntimeException(\n+                    \"Failed: Menu didn't remain posted at end of test\");\n+            } else {\n+                System.out.println(\"Test passed!\");\n@@ -106,1 +101,2 @@\n-    private JMenu createMenu(String str, boolean bFlag) {\n+\n+    private static JMenu createMenu(String str, boolean bFlag) {\n@@ -111,1 +107,1 @@\n-        for(int i = 0; i < 10; i ++) {\n+        for (int i = 0; i < 10; i++) {\n@@ -113,5 +109,2 @@\n-            menuitem.addActionListener(new ActionListener() {\n-                public void actionPerformed(ActionEvent e) {\n-                    throw new RuntimeException(\n-                        \"Failed: Mnemonic activated\");\n-                }\n+            menuitem.addActionListener(e -> {\n+                throw new RuntimeException(\"Failed: Mnemonic activated\");\n@@ -119,1 +112,1 @@\n-            if(bFlag)\n+            if (bFlag) {\n@@ -121,0 +114,1 @@\n+            }\n","filename":"test\/jdk\/javax\/swing\/JMenu\/4213634\/bug4213634.java","additions":39,"deletions":45,"binary":false,"changes":84,"status":"modified"}]}