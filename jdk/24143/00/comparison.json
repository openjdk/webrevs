{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,4 @@\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.locks.Condition;\n+import jdk.test.lib.util.ForceGC;\n+\n+import java.lang.ref.PhantomReference;\n+import java.util.concurrent.atomic.AtomicInteger;\n@@ -35,1 +37,3 @@\n- * @run main FinalizerHistogramTest\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.util.ForceGC\n+ * @run main\/othervm FinalizerHistogramTest\n@@ -40,3 +44,3 @@\n-    static volatile int wasInitialized = 0;\n-    static volatile int wasTrapped = 0;\n-    static final int objectsCount = 1000;\n+    static final AtomicInteger wasInitialized = new AtomicInteger(0);\n+    static final AtomicInteger wasTrapped = new AtomicInteger(0);\n+    static final int OBJECTS_COUNT = 1000;\n@@ -47,1 +51,1 @@\n-            wasInitialized += 1;\n+            wasInitialized.incrementAndGet();\n@@ -52,1 +56,1 @@\n-            wasTrapped += 1;\n+            wasTrapped.incrementAndGet();\n@@ -60,1 +64,3 @@\n-            for(int i = 0; i < objectsCount; ++i) {\n+            final PhantomReference<MyObject> ref1 = new PhantomReference<>(new MyObject(), null);\n+            final PhantomReference<MyObject> ref2 = new PhantomReference<>(new MyObject(), null);\n+            for(int i = 2; i < OBJECTS_COUNT; ++i) {\n@@ -63,3 +69,7 @@\n-            System.out.println(\"Objects intialized: \" + objectsCount);\n-            System.gc();\n-            while(wasTrapped < 1);\n+            System.out.println(\"Objects intialized: \" + wasInitialized.get());\n+            \/\/ GC and wait for at least 2 MyObjects to be ready for finalization,\n+            \/\/ and one MyObject to be stuck in finalize().\n+            ForceGC.wait(() -> { return ref1.refersTo(null) &&\n+                                        ref2.refersTo(null) &&\n+                                        wasTrapped.intValue() > 0;\n+            });\n","filename":"test\/jdk\/java\/lang\/ref\/FinalizerHistogramTest.java","additions":23,"deletions":13,"binary":false,"changes":36,"status":"modified"}]}