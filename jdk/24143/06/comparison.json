{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,3 @@\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.locks.Condition;\n+import jdk.test.whitebox.WhiteBox;\n+\n+import java.util.concurrent.atomic.AtomicInteger;\n@@ -35,1 +36,8 @@\n- * @run main FinalizerHistogramTest\n+ * @library \/test\/lib\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm\n+ *      -Xbootclasspath\/a:.\n+ *      -XX:+UnlockDiagnosticVMOptions\n+ *      -XX:+WhiteBoxAPI\n+ *      FinalizerHistogramTest\n@@ -40,3 +48,6 @@\n-    static volatile int wasInitialized = 0;\n-    static volatile int wasTrapped = 0;\n-    static final int objectsCount = 1000;\n+    static final AtomicInteger initializedCount = new AtomicInteger(0);\n+    static final AtomicInteger trappedCount = new AtomicInteger(0);\n+    static final int OBJECTS_COUNT = 1000;\n+\n+    static WhiteBox wb;\n+    static boolean refProResult;\n@@ -47,1 +58,1 @@\n-            wasInitialized += 1;\n+            initializedCount.incrementAndGet();\n@@ -52,1 +63,1 @@\n-            wasTrapped += 1;\n+            trappedCount.incrementAndGet();\n@@ -57,1 +68,1 @@\n-    public static void main(String[] argvs) {\n+    public static void main(String[] argvs) throws InterruptedException {\n@@ -60,1 +71,1 @@\n-            for(int i = 0; i < objectsCount; ++i) {\n+            for(int i = 0; i < OBJECTS_COUNT; ++i) {\n@@ -63,3 +74,6 @@\n-            System.out.println(\"Objects intialized: \" + objectsCount);\n-            System.gc();\n-            while(wasTrapped < 1);\n+            System.out.println(\"Objects intialized: \" + initializedCount.get());\n+            wb = WhiteBox.getWhiteBox();\n+            wb.fullGC();\n+            refProResult = wb.waitForReferenceProcessing();\n+            System.out.println(\"waitForReferenceProcessing returned: \" + refProResult);\n+            while(trappedCount.get() < 1);\n","filename":"test\/jdk\/java\/lang\/ref\/FinalizerHistogramTest.java","additions":28,"deletions":14,"binary":false,"changes":42,"status":"modified"}]}