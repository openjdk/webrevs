{"files":[{"patch":"@@ -1397,1 +1397,1 @@\n-      Node* base = new CheckCastPPNode(ctrl, orig_base, orig_base->bottom_type(), ConstraintCastNode::StrongDependency);\n+      Node* base = new CheckCastPPNode(ctrl, orig_base, orig_base->bottom_type(), ConstraintCastNode::NonFloatingNarrowingDependency);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,4 +38,4 @@\n-const ConstraintCastNode::DependencyType ConstraintCastNode::RegularDependency(true, true, \"regular dependency\"); \/\/ not pinned, narrows type\n-const ConstraintCastNode::DependencyType ConstraintCastNode::WidenTypeDependency(true, false, \"widen type dependency\"); \/\/ not pinned, doesn't narrow type\n-const ConstraintCastNode::DependencyType ConstraintCastNode::StrongDependency(false, true, \"strong dependency\"); \/\/ pinned, narrows type\n-const ConstraintCastNode::DependencyType ConstraintCastNode::UnconditionalDependency(false, false, \"unconditional dependency\"); \/\/ pinned, doesn't narrow type\n+const ConstraintCastNode::DependencyType ConstraintCastNode::FloatingNarrowingDependency(true, true, \"floating narrowing dependency\"); \/\/ not pinned, narrows type\n+const ConstraintCastNode::DependencyType ConstraintCastNode::FloatingNonNarrowingDependency(true, false, \"floating non narrowing dependency\"); \/\/ not pinned, doesn't narrow type\n+const ConstraintCastNode::DependencyType ConstraintCastNode::NonFloatingNarrowingDependency(false, true, \"now floating narrowing dependency\"); \/\/ pinned, narrows type\n+const ConstraintCastNode::DependencyType ConstraintCastNode::NonFloatingNonNarrowingDependency(false, false, \"non floating non narrowing dependency\"); \/\/ pinned, doesn't narrow type\n@@ -610,2 +610,3 @@\n-    const TypeInteger* wide_t = widen_type(phase, t, bt);\n-    if (wide_t != t) {\n+    const Type* bottom_t = bottom_type();\n+    const TypeInteger* wide_t = widen_type(phase, bottom_t, bt);\n+    if (wide_t != bottom_t) {\n","filename":"src\/hotspot\/share\/opto\/castnode.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-      : _depends_only_on_test(depends_on_test),\n+      : _floating(depends_on_test),\n@@ -56,2 +56,2 @@\n-    bool depends_only_on_test() const {\n-      return _depends_only_on_test;\n+    bool floating() const {\n+      return _floating;\n@@ -68,1 +68,1 @@\n-      return (_depends_only_on_test ? 1 : 0) + (_narrows_type ? 2 : 0);\n+      return (_floating ? 1 : 0) + (_narrows_type ? 2 : 0);\n@@ -72,1 +72,1 @@\n-      return _depends_only_on_test == other._depends_only_on_test && _narrows_type == other._narrows_type;\n+      return _floating == other._floating && _narrows_type == other._narrows_type;\n@@ -76,2 +76,2 @@\n-      if (_depends_only_on_test) {\n-        return WidenTypeDependency;\n+      if (_floating) {\n+        return FloatingNonNarrowingDependency;\n@@ -79,1 +79,1 @@\n-      return UnconditionalDependency;\n+      return NonFloatingNonNarrowingDependency;\n@@ -84,1 +84,1 @@\n-        return StrongDependency;\n+        return NonFloatingNarrowingDependency;\n@@ -86,1 +86,1 @@\n-      return UnconditionalDependency;\n+      return NonFloatingNonNarrowingDependency;\n@@ -90,1 +90,1 @@\n-    const bool _depends_only_on_test; \/\/ Does this Cast depends on its control input or is it pinned?\n+    const bool _floating; \/\/ Does this Cast depends on its control input or is it pinned?\n@@ -97,4 +97,14 @@\n-  static const DependencyType RegularDependency;\n-  static const DependencyType WidenTypeDependency;\n-  static const DependencyType StrongDependency;\n-  static const DependencyType UnconditionalDependency;\n+  \/\/ All the possible combinations of floating\/narrowing. Example use cases for each:\n+  \/\/ FloatingNarrowingDependency is used for range checks: the range check CastII is dependent on the range check and if\n+  \/\/ its input's type is narrower than the type of the range check, it's safe to be removed.\n+  \/\/ NonFloatingNonNarrowingDependency is used when a floating node is sunk out of loop: we don't want the cast that\n+  \/\/ forces the node to be out of loop to be removed in any case\n+  \/\/ NonFloatingNarrowingDependency is used when an array access is no longer dependent on a single range check (range\n+  \/\/ check smearing for instance)\n+  \/\/ FloatingNonNarrowingDependency is used after loop opts when Cast nodes' types are widen so Casts that only differ\n+  \/\/ by slightly different types can common. Given the type carried by the Cast is no longer accurate, removing a Cast\n+  \/\/ because its input has a narrower type causes the dependency carried by the Cast to be lost\n+  static const DependencyType FloatingNarrowingDependency;\n+  static const DependencyType FloatingNonNarrowingDependency;\n+  static const DependencyType NonFloatingNarrowingDependency;\n+  static const DependencyType NonFloatingNonNarrowingDependency;\n@@ -102,1 +112,1 @@\n-  protected:\n+protected:\n@@ -135,2 +145,2 @@\n-  bool carry_dependency() const { return !_dependency.cmp(RegularDependency); }\n-  virtual bool depends_only_on_test() const { return _dependency.depends_only_on_test(); }\n+  bool carry_dependency() const { return !_dependency.cmp(FloatingNarrowingDependency); }\n+  virtual bool depends_only_on_test() const { return _dependency.floating(); }\n@@ -172,1 +182,1 @@\n-  CastIINode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = RegularDependency, bool range_check_dependency = false, const TypeTuple* types = nullptr)\n+  CastIINode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = FloatingNarrowingDependency, bool range_check_dependency = false, const TypeTuple* types = nullptr)\n@@ -202,1 +212,1 @@\n-  CastLLNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = RegularDependency, const TypeTuple* types = nullptr)\n+  CastLLNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = FloatingNarrowingDependency, const TypeTuple* types = nullptr)\n@@ -223,1 +233,1 @@\n-  CastHHNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = RegularDependency, const TypeTuple* types = nullptr)\n+  CastHHNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = FloatingNarrowingDependency, const TypeTuple* types = nullptr)\n@@ -234,1 +244,1 @@\n-  CastFFNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = RegularDependency, const TypeTuple* types = nullptr)\n+  CastFFNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = FloatingNarrowingDependency, const TypeTuple* types = nullptr)\n@@ -245,1 +255,1 @@\n-  CastDDNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = RegularDependency, const TypeTuple* types = nullptr)\n+  CastDDNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = FloatingNarrowingDependency, const TypeTuple* types = nullptr)\n@@ -256,1 +266,1 @@\n-  CastVVNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = RegularDependency, const TypeTuple* types = nullptr)\n+  CastVVNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = FloatingNarrowingDependency, const TypeTuple* types = nullptr)\n@@ -270,1 +280,1 @@\n-  CastPPNode (Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = RegularDependency, const TypeTuple* types = nullptr)\n+  CastPPNode (Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = FloatingNarrowingDependency, const TypeTuple* types = nullptr)\n@@ -282,1 +292,1 @@\n-  CheckCastPPNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = RegularDependency, const TypeTuple* types = nullptr)\n+  CheckCastPPNode(Node* ctrl, Node* n, const Type* t, const DependencyType& dependency = FloatingNarrowingDependency, const TypeTuple* types = nullptr)\n","filename":"src\/hotspot\/share\/opto\/castnode.hpp","additions":36,"deletions":26,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2194,1 +2194,1 @@\n-          cast = new CastPPNode(r, uin, phi_type, ConstraintCastNode::StrongDependency, extra_types);\n+          cast = new CastPPNode(r, uin, phi_type, ConstraintCastNode::NonFloatingNarrowingDependency, extra_types);\n@@ -2204,1 +2204,1 @@\n-            cast = new CastPPNode(r, uin, TypePtr::NOTNULL, ConstraintCastNode::StrongDependency, extra_types);\n+            cast = new CastPPNode(r, uin, TypePtr::NOTNULL, ConstraintCastNode::NonFloatingNarrowingDependency, extra_types);\n@@ -2216,1 +2216,1 @@\n-            cast = new CheckCastPPNode(r, n, phi_type, ConstraintCastNode::StrongDependency, extra_types);\n+            cast = new CheckCastPPNode(r, n, phi_type, ConstraintCastNode::NonFloatingNarrowingDependency, extra_types);\n@@ -2219,1 +2219,1 @@\n-            cast = new CastPPNode(r, uin, phi_type, ConstraintCastNode::StrongDependency, extra_types);\n+            cast = new CastPPNode(r, uin, phi_type, ConstraintCastNode::NonFloatingNarrowingDependency, extra_types);\n@@ -2223,1 +2223,1 @@\n-        cast = ConstraintCastNode::make_cast_for_type(r, uin, phi_type, ConstraintCastNode::StrongDependency, extra_types);\n+        cast = ConstraintCastNode::make_cast_for_type(r, uin, phi_type, ConstraintCastNode::NonFloatingNarrowingDependency, extra_types);\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -4573,1 +4573,1 @@\n-    value = new CastIINode(ctrl, value, itype, carry_dependency ? ConstraintCastNode::StrongDependency : ConstraintCastNode::RegularDependency, true \/* range check dependency *\/);\n+    value = new CastIINode(ctrl, value, itype, carry_dependency ? ConstraintCastNode::NonFloatingNarrowingDependency : ConstraintCastNode::FloatingNarrowingDependency, true \/* range check dependency *\/);\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -736,1 +736,1 @@\n-  return _igvn->transform(ConstraintCastNode::make_cast_for_type(not_eq_control, base, _igvn->type(castpp), ConstraintCastNode::UnconditionalDependency, nullptr));\n+  return _igvn->transform(ConstraintCastNode::make_cast_for_type(not_eq_control, base, _igvn->type(castpp), ConstraintCastNode::NonFloatingNonNarrowingDependency, nullptr));\n@@ -1223,1 +1223,1 @@\n-    nsr_merge_pointer = _igvn->transform(ConstraintCastNode::make_cast_for_type(cast->in(0), cast->in(1), new_t, ConstraintCastNode::RegularDependency, nullptr));\n+    nsr_merge_pointer = _igvn->transform(ConstraintCastNode::make_cast_for_type(cast->in(0), cast->in(1), new_t, ConstraintCastNode::FloatingNarrowingDependency, nullptr));\n@@ -1360,1 +1360,1 @@\n-        Node* new_cast = ConstraintCastNode::make_cast_for_type(out->in(0), out->in(1), out_new_t, ConstraintCastNode::StrongDependency, nullptr);\n+        Node* new_cast = ConstraintCastNode::make_cast_for_type(out->in(0), out->in(1), out_new_t, ConstraintCastNode::NonFloatingNarrowingDependency, nullptr);\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1185,1 +1185,1 @@\n-      ConstraintCastNode::RegularDependency, bt);\n+      ConstraintCastNode::FloatingNarrowingDependency, bt);\n@@ -1215,1 +1215,1 @@\n-      ConstraintCastNode::RegularDependency, bt);\n+      ConstraintCastNode::FloatingNarrowingDependency, bt);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1369,1 +1369,1 @@\n-  Node* castii = new CastIINode(ctrl, incr, TypeInt::INT, ConstraintCastNode::UnconditionalDependency);\n+  Node* castii = new CastIINode(ctrl, incr, TypeInt::INT, ConstraintCastNode::NonFloatingNonNarrowingDependency);\n@@ -3211,1 +3211,1 @@\n-      ConstraintCastNode::UnconditionalDependency, T_INT);\n+      ConstraintCastNode::NonFloatingNonNarrowingDependency, T_INT);\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1004,1 +1004,1 @@\n-    inner_iters_actual_int = new CastIINode(outer_head, inner_iters_actual_int, inner_iters_actual_int_range, ConstraintCastNode::UnconditionalDependency);\n+    inner_iters_actual_int = new CastIINode(outer_head, inner_iters_actual_int, inner_iters_actual_int_range, ConstraintCastNode::NonFloatingNonNarrowingDependency);\n@@ -1291,1 +1291,1 @@\n-                                                             ConstraintCastNode::UnconditionalDependency, bt);\n+                                                             ConstraintCastNode::NonFloatingNonNarrowingDependency, bt);\n@@ -1310,1 +1310,1 @@\n-                                                             ConstraintCastNode::UnconditionalDependency, bt);\n+                                                             ConstraintCastNode::NonFloatingNonNarrowingDependency, bt);\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1827,1 +1827,1 @@\n-                                                              ConstraintCastNode::UnconditionalDependency, nullptr);\n+                                                              ConstraintCastNode::NonFloatingNonNarrowingDependency, nullptr);\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}