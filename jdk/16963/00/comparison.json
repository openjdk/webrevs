{"files":[{"patch":"@@ -493,1 +493,6 @@\n-                    if (!def.hasTag(METHODDEF) && ((TreeInfo.flags(def) & STATIC) != 0) == isStatic)\n+                    \/* we need to check for flags in the symbol too as there could be cases for which implicit flags are\n+                     * represented in the symbol but not in the tree modifiers as they were not originally in the source\n+                     * code\n+                     *\/\n+                    boolean isDefStatic = ((TreeInfo.flags(def) | (TreeInfo.symbolFor(def) == null ? 0 : TreeInfo.symbolFor(def).flags_field)) & STATIC) != 0;\n+                    if (!def.hasTag(METHODDEF) && (isDefStatic == isStatic))\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8321207\n+ * @summary javac is not accepting correct code\n+ * @compile LambdaCapture08.java\n+ *\/\n+\n+import java.util.function.*;\n+\n+interface LambdaCapture08 {\n+    Object O = new Object() {\n+        IntSupplier x(int m) {\n+            return () -> m;\n+        }\n+    };\n+}\n","filename":"test\/langtools\/tools\/javac\/lambda\/LambdaCapture08.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"}]}