{"files":[{"patch":"@@ -2288,0 +2288,9 @@\n+  \/\/ use the same logic as in os::pd_attempt_reserve_memory_at to decide\n+  \/\/ if mmap with granularity vm_page_size() or shmat with granularity 256MB is used.\n+  if (os::vm_page_size() == 4*K) {\n+    \/\/ mmap used\n+    OSInfo::set_vm_shm_allocation_granularity(page_size);\n+  } else {\n+    \/\/ shmat used\n+    OSInfo::set_vm_shm_allocation_granularity(256 * M);\n+  }\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2034,0 +2034,1 @@\n+  OSInfo::set_vm_shm_allocation_granularity(page_size);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4413,0 +4413,1 @@\n+  OSInfo::set_vm_shm_allocation_granularity(page_size);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4005,0 +4005,1 @@\n+  OSInfo::set_vm_shm_allocation_granularity(si.dwAllocationGranularity);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -519,3 +519,1 @@\n-  const size_t os_attach_point_alignment =\n-    AIX_ONLY(SIZE_256M)  \/\/ Known shm boundary alignment.\n-    NOT_AIX(os::vm_allocation_granularity());\n+  const size_t os_attach_point_alignment = os::vm_shm_allocation_granularity();\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1896,1 +1896,1 @@\n-  const size_t alignment_adjusted = MAX2(alignment, os::vm_allocation_granularity());\n+  const size_t alignment_adjusted = MAX2(alignment, os::vm_shm_allocation_granularity());\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -435,0 +435,2 @@\n+  static size_t vm_shm_allocation_granularity() { return OSInfo::vm_shm_allocation_granularity(); }\n+\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+size_t OSInfo::_vm_shm_allocation_granularity = 0;\n","filename":"src\/hotspot\/share\/runtime\/osInfo.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+  static size_t    _vm_shm_allocation_granularity;\n@@ -44,0 +45,2 @@\n+  static size_t vm_shm_allocation_granularity() { return _vm_shm_allocation_granularity; }\n+\n@@ -53,0 +56,5 @@\n+\n+  static void set_vm_shm_allocation_granularity(size_t n) {\n+    assert(_vm_shm_allocation_granularity == 0, \"init only once\");\n+    _vm_shm_allocation_granularity = n;\n+  }\n","filename":"src\/hotspot\/share\/runtime\/osInfo.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -38,4 +38,0 @@\n-\/\/ On AIX, these tests make no sense as long as JDK-8315321 remains unfixed since the attach\n-\/\/ addresses are not predictable.\n-#ifndef AIX\n-\n@@ -65,1 +61,1 @@\n-    EXPECT_TRUE(is_aligned(addr, os::vm_allocation_granularity())) << ERRINFO;\n+    EXPECT_TRUE(is_aligned(addr, os::vm_shm_allocation_granularity())) << ERRINFO;\n@@ -181,1 +177,1 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+  const size_t ag = os::vm_shm_allocation_granularity();\n@@ -260,1 +256,1 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+  const size_t ag = os::vm_shm_allocation_granularity();\n@@ -278,1 +274,1 @@\n-  for (size_t range_size = os::vm_allocation_granularity(); range_size <= large_end; range_size *= 2) {\n+  for (size_t range_size = os::vm_shm_allocation_granularity(); range_size <= large_end; range_size *= 2) {\n@@ -283,1 +279,1 @@\n-        for (size_t alignment = os::vm_allocation_granularity(); alignment < large_end; alignment *= 2) {\n+        for (size_t alignment = os::vm_shm_allocation_granularity(); alignment < large_end; alignment *= 2) {\n@@ -294,1 +290,1 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+  const size_t ag = os::vm_shm_allocation_granularity();\n@@ -334,1 +330,1 @@\n-  const size_t ag = os::vm_allocation_granularity();\n+  const size_t ag = os::vm_shm_allocation_granularity();\n@@ -345,2 +341,0 @@\n-\n-#endif \/\/ AIX\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_reserve_between.cpp","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -107,1 +107,0 @@\n-runtime\/CompressedOops\/CompressedClassPointers.java 8322943 aix-ppc64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}