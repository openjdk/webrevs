{"files":[{"patch":"@@ -39,0 +39,1 @@\n+#include \"gc\/shared\/isGCActiveMark.hpp\"\n@@ -123,0 +124,1 @@\n+    IsAnyGCActiveMark gc_active_mark;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkThread.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -247,0 +247,1 @@\n+  _is_any_gc_active(false),\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -94,0 +94,1 @@\n+  friend class IsAnyGCActiveMark; \/\/ Block structured external access to _is_any_gc_active\n@@ -115,0 +116,1 @@\n+  bool _is_any_gc_active;\n@@ -379,0 +381,3 @@\n+  \/\/ Returns \"true\" iff there is a GC in progress.\n+  bool is_any_gc_active() const { return _is_any_gc_active; }\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,1 +32,2 @@\n-\/\/ _is_stw_gc_active state without requiring accessors in CollectedHeap\n+\/\/ _is_stw_gc_active \/ _is_any_gc_active state without requiring\n+\/\/ accessors in CollectedHeap\n@@ -45,0 +46,17 @@\n+\n+IsAnyGCActiveMark::IsAnyGCActiveMark() {\n+  CollectedHeap* heap = Universe::heap();\n+  _doit = !heap->is_any_gc_active();\n+  if (_doit) {\n+    assert(!heap->is_any_gc_active(), \"Sanity\");\n+    heap->_is_any_gc_active = true;\n+  }\n+}\n+\n+IsAnyGCActiveMark::~IsAnyGCActiveMark() {\n+  CollectedHeap* heap = Universe::heap();\n+  if (_doit) {\n+    assert(heap->is_any_gc_active(), \"Sanity\");\n+    heap->_is_any_gc_active = false;\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/shared\/isGCActiveMark.cpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -31,1 +31,2 @@\n-\/\/ _is_stw_gc_active state without requiring accessors in CollectedHeap\n+\/\/ _is_stw_gc_active, _is_any_gc_active state without requiring\n+\/\/ accessors in CollectedHeap\n@@ -33,2 +34,10 @@\n-class IsSTWGCActiveMark : public StackObj {\n- public:\n+class IsAnyGCActiveMark : public StackObj {\n+private:\n+  bool _doit;\n+public:\n+  IsAnyGCActiveMark();\n+  ~IsAnyGCActiveMark();\n+};\n+\n+class IsSTWGCActiveMark : public IsAnyGCActiveMark {\n+public:\n","filename":"src\/hotspot\/share\/gc\/shared\/isGCActiveMark.hpp","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+  _gc_active_mark(),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+  IsAnyGCActiveMark const _gc_active_mark;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -395,0 +395,1 @@\n+  IsAnyGCActiveMark          _gc_active_mark;\n@@ -403,0 +404,1 @@\n+      _gc_active_mark(),\n","filename":"src\/hotspot\/share\/gc\/x\/xDriver.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/shared\/isGCActiveMark.hpp\"\n@@ -171,0 +172,1 @@\n+  IsAnyGCActiveMark            _gc_active_mark;\n@@ -179,0 +181,1 @@\n+      _gc_active_mark(),\n@@ -383,0 +386,1 @@\n+  IsAnyGCActiveMark            _gc_active_mark;\n@@ -391,0 +395,1 @@\n+      _gc_active_mark(),\n","filename":"src\/hotspot\/share\/gc\/z\/zDriver.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}