{"files":[{"patch":"@@ -39,0 +39,1 @@\n+#include \"gc\/shared\/isGCActiveMark.hpp\"\n@@ -123,0 +124,1 @@\n+    IsAnyGCActiveMark gc_active_mark;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkThread.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -246,0 +246,1 @@\n+  _any_gc_count(0),\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -94,0 +94,1 @@\n+  friend class IsAnyGCActiveMark; \/\/ Block structured external access to _any_gc_count;\n@@ -114,0 +115,5 @@\n+  \/\/ Number of GCs currently running. Can be modified concurrently\n+  \/\/ by different parts of GC subsystems. Updated atomically.\n+  volatile int _any_gc_count;\n+\n+  \/\/ Number of STW GCs currently running. Only modified at safepoint.\n@@ -379,0 +385,3 @@\n+  \/\/ Returns \"true\" iff there is a GC in progress.\n+  bool is_any_gc_active() const { return Atomic::load(&_any_gc_count) > 0; }\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -32,1 +32,2 @@\n-\/\/ _is_stw_gc_active state without requiring accessors in CollectedHeap\n+\/\/ _is_stw_gc_active \/ _any_gc_count state without requiring\n+\/\/ accessors in CollectedHeap\n@@ -45,0 +46,10 @@\n+\n+IsAnyGCActiveMark::IsAnyGCActiveMark() {\n+  CollectedHeap* heap = Universe::heap();\n+  Atomic::inc(&heap->_any_gc_count, memory_order_relaxed);\n+}\n+\n+IsAnyGCActiveMark::~IsAnyGCActiveMark() {\n+  CollectedHeap* heap = Universe::heap();\n+  Atomic::dec(&heap->_any_gc_count, memory_order_relaxed);\n+}\n","filename":"src\/hotspot\/share\/gc\/shared\/isGCActiveMark.cpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -31,1 +31,2 @@\n-\/\/ _is_stw_gc_active state without requiring accessors in CollectedHeap\n+\/\/ _is_stw_gc_active, _is_any_gc_active state without requiring\n+\/\/ accessors in CollectedHeap\n@@ -33,1 +34,9 @@\n-class IsSTWGCActiveMark : public StackObj {\n+class IsAnyGCActiveMark : public StackObj {\n+ private:\n+  bool _skip;\n+ public:\n+  IsAnyGCActiveMark();\n+  ~IsAnyGCActiveMark();\n+};\n+\n+class IsSTWGCActiveMark : public IsAnyGCActiveMark {\n","filename":"src\/hotspot\/share\/gc\/shared\/isGCActiveMark.hpp","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+  _gc_active_mark(),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+  IsAnyGCActiveMark const _gc_active_mark;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -395,0 +395,1 @@\n+  IsAnyGCActiveMark          _gc_active_mark;\n@@ -403,0 +404,1 @@\n+      _gc_active_mark(),\n","filename":"src\/hotspot\/share\/gc\/x\/xDriver.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/shared\/isGCActiveMark.hpp\"\n@@ -171,0 +172,1 @@\n+  IsAnyGCActiveMark            _gc_active_mark;\n@@ -179,0 +181,1 @@\n+      _gc_active_mark(),\n@@ -383,0 +386,1 @@\n+  IsAnyGCActiveMark            _gc_active_mark;\n@@ -391,0 +395,1 @@\n+      _gc_active_mark(),\n","filename":"src\/hotspot\/share\/gc\/z\/zDriver.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}