{"files":[{"patch":"@@ -391,0 +391,1 @@\n+    mem_zap_start_padding(mem);\n@@ -398,0 +399,14 @@\n+void ObjArrayAllocator::mem_zap_start_padding(HeapWord* mem) const {\n+  const BasicType element_type = ArrayKlass::cast(_klass)->element_type();\n+  const size_t base_offset_in_bytes = arrayOopDesc::base_offset_in_bytes(element_type);\n+  const size_t header_size_in_bytes = arrayOopDesc::header_size_in_bytes();\n+\n+  const address base = reinterpret_cast<address>(mem) + base_offset_in_bytes;\n+  const address header_end = reinterpret_cast<address>(mem) + header_size_in_bytes;\n+\n+  if (header_end < base) {\n+    const size_t padding_in_bytes = base - header_end;\n+    Copy::fill_to_bytes(header_end, padding_in_bytes, heapPaddingByteVal);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -97,0 +97,1 @@\n+  void mem_zap_start_padding(HeapWord* mem) const PRODUCT_RETURN;\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -142,0 +142,2 @@\n+  mem_zap_start_padding(mem);\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zObjArrayAllocator.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}