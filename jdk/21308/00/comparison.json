{"files":[{"patch":"@@ -52,0 +52,32 @@\n+\n+# Collect hs_errs for build-time crashes, e.g. javac, jmod, jlink, CDS.\n+# These usually land in make\/\n+hs_err_files=$(ls make\/hs_err*.log 2> \/dev\/null || true)\n+\n+for hs_err in $hs_err_files; do\n+  echo \"<details><summary><b>View HotSpot error log: \"$hs_err\"<\/b><\/summary>\"\n+  echo ''\n+  echo '```'\n+  echo \"$hs_err:\"\n+  echo ''\n+  cat \"$hs_err\"\n+  echo '```'\n+  echo '<\/details>'\n+  echo ''\n+done >> $GITHUB_STEP_SUMMARY\n+\n+# With large hs_errs, the summary can easily exceed 1024 kB, the limit set by Github\n+# Trim it down if so.\n+summary_size=$(wc -c < $GITHUB_STEP_SUMMARY)\n+if [[ $summary_size -gt 1000000 ]]; then\n+  # Trim to below 1024 kB, and cut off after the last detail group\n+  head -c 1000000 $GITHUB_STEP_SUMMARY | tac | sed -n -e '\/<\\\/details>\/,$ p' | tac > $GITHUB_STEP_SUMMARY.tmp\n+  mv $GITHUB_STEP_SUMMARY.tmp $GITHUB_STEP_SUMMARY\n+  (\n+    echo ''\n+    echo ':x: **WARNING: Summary is too large and has been truncated.**'\n+    echo ''\n+  )  >> $GITHUB_STEP_SUMMARY\n+fi\n+\n+echo ':arrow_right: To see the entire build log, click the job in the list to the left.'  >> $GITHUB_STEP_SUMMARY\n","filename":".github\/scripts\/gen-build-failure-report.sh","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -281,0 +281,2 @@\n+  assert(false, \"GHA TEST FAILURE POINT. REMOVE BEFORE FLIGHT\"); \/\/ Or wait for Friday and integrate for extra fun.\n+\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}