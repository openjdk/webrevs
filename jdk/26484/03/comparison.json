{"files":[{"patch":"@@ -1091,1 +1091,11 @@\n-     * Initiates handshaking (initial or renegotiation) on this SSLEngine.\n+     * Begins handshaking on this {@code SSLEngine}.\n+     * <P>\n+     * Common reasons include a need to initiate a new protected session,\n+     * create new encryption keys, or to change cipher suites. To force\n+     * complete reauthentication, the current session should be invalidated\n+     * before starting this handshake.\n+     * <P>\n+     * The behavior of this method is protocol (and possibly implementation)\n+     * dependent. For example, in TLSv1.3 calling this method after the\n+     * connection has been established will force a key update. For prior TLS\n+     * versions it will force a renegotiation (re-handshake).\n@@ -1105,3 +1115,0 @@\n-     * To force a complete SSL\/TLS\/DTLS session renegotiation, the current\n-     * session should be invalidated prior to calling this method.\n-     * <P>\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLEngine.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -505,6 +505,13 @@\n-     * Starts an SSL handshake on this connection.  Common reasons include\n-     * a need to use new encryption keys, to change cipher suites, or to\n-     * initiate a new session.  To force complete reauthentication, the\n-     * current session could be invalidated before starting this handshake.\n-     *\n-     * <P> If data has already been sent on the connection, it continues\n+     * Starts handshaking on this {@code SSLSocket}.\n+     * <P>\n+     * Common reasons include a need to initiate a new protected session,\n+     * create new encryption keys, or to change cipher suites. To force\n+     * complete reauthentication, the current session should be invalidated\n+     * before starting this handshake.\n+     * <P>\n+     * The behavior of this method is protocol (and possibly implementation)\n+     * dependent. For example, in TLSv1.3 calling this method after the\n+     * connection has been established will force a key update. For prior TLS\n+     * versions it will force a renegotiation (re-handshake).\n+     * <P>\n+     * If data has already been sent on the connection, it continues\n@@ -513,1 +520,1 @@\n-     *\n+     * <P>\n@@ -517,1 +524,1 @@\n-     * and may throw an IOException.\n+     * and may throw an {@code IOException}.\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLSocket.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"}]}