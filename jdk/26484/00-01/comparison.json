{"files":[{"patch":"@@ -1091,1 +1091,4 @@\n-     * Initiates handshaking (initial or renegotiation) on this SSLEngine.\n+     * Initiates handshaking on this SSLEngine. Common reasons include a need\n+     * to initiate a new session, to use new encryption keys or to change\n+     * cipher suites. To force complete reauthentication, the current session\n+     * could be invalidated before starting this handshake.\n@@ -1093,3 +1096,5 @@\n-     * For TLSv1.3 and later versions calling this method after the connection\n-     * has been established will force producing a KeyUpdate message. For prior\n-     * TLS versions it will force a renegotiation (re-handshake).\n+     * The behavior of this method is protocol (and possibly implementation)\n+     * dependent. For example, in TLSv1.3 and later versions calling this\n+     * method after the connection has been established will force producing\n+     * a KeyUpdate message. For prior TLS versions it will force a\n+     * renegotiation (re-handshake).\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLEngine.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -505,4 +505,4 @@\n-     * Starts an SSL handshake on this connection.  Common reasons include\n-     * a need to use new encryption keys, to change cipher suites, or to\n-     * initiate a new session.  To force complete reauthentication, the\n-     * current session could be invalidated before starting this handshake.\n+     * Initiates handshaking on this connection. Common reasons include a need\n+     * to initiate a new session, to use new encryption keys or to change\n+     * cipher suites. To force complete reauthentication, the current session\n+     * could be invalidated before starting this handshake.\n@@ -510,3 +510,5 @@\n-     * For TLSv1.3 and later versions calling this method after the connection\n-     * has been established will force producing a KeyUpdate message. For prior\n-     * TLS versions it will force a renegotiation (re-handshake).\n+     * The behavior of this method is protocol (and possibly implementation)\n+     * dependent. For example, in TLSv1.3 and later versions calling this\n+     * method after the connection has been established will force producing\n+     * a KeyUpdate message. For prior TLS versions it will force a\n+     * renegotiation (re-handshake).\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLSocket.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"}]}