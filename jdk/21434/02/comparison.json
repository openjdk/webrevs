{"files":[{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.TextArea;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 5003402\n+ * @summary TextArea must scroll automatically when calling append and select, even when not in focus\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextAreaAppendScrollTest\n+ *\/\n+\n+public class TextAreaAppendScrollTest extends Frame implements ActionListener {\n+    int phase;\n+    int pos1, pos2;\n+    TextArea area;\n+    private static final String INSTRUCTIONS = \"\"\"\n+                Press \"Click Here\" button.\n+                The word \"First\" should be visible in the TextArea.\n+\n+                Press \"Click Here\" button again.\n+                The word \"Next\" should be visible in the TextArea.\n+\n+                Press \"Click Here\" button again.\n+                The word \"Last\" should be visible in the TextArea.\n+                If you have seen all three words, press Pass, else press Fail.\n+                \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TextAreaAppendScrollTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(TextAreaAppendScrollTest::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public TextAreaAppendScrollTest() {\n+        area = new TextArea();\n+        add(\"Center\", area);\n+        Button bt1 = new Button(\"Click Here\");\n+        add(\"South\", bt1);\n+        String filler = \"\";\n+        for (int i = 0; i < 100; i++) {\n+            filler = filler + i + \"\\n\";\n+        }\n+        String text = filler;\n+        pos1 = text.length();\n+        text = text + \"First\\n\" + filler;\n+        pos2 = text.length();\n+        text = text + \"Next\\n\" + filler;\n+        area.setText(text);\n+        phase = 0;\n+        bt1.addActionListener(this);\n+        pack();\n+    }\n+\n+    public void actionPerformed(ActionEvent ev) {\n+        if (phase == 0) {\n+            area.select(pos1, pos1);\n+            phase = 1;\n+        } else if (phase == 1) {\n+            area.select(pos2, pos2);\n+            phase = 2;\n+        } else {\n+            area.append(\"Last\\n\");\n+            phase = 0;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaAppendScrollTest.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Cursor;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.TextArea;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 4060320\n+ * @summary Test TextArea cursor shape on its scrollbars\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextAreaCursorTest\n+ *\/\n+\n+public class TextAreaCursorTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Move the cursor into textarea and on scrollbar. Verify that the shape of\n+            cursor on scrollbar should not be I-beam. Also, when the cursor in textarea\n+            is set to some other shape, it does not affect the cursor shape on the\n+            scrollbars.\n+            \"\"\";\n+\n+    public static void main(String args[]) throws Exception {\n+            PassFailJFrame.builder()\n+                    .title(\"TextAreaCursorTest\")\n+                    .instructions(INSTRUCTIONS)\n+                    .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                    .columns(40)\n+                    .testUI(TextAreaCursorTest::createGUI)\n+                    .build()\n+                    .awaitAndCheck();\n+    }\n+\n+    public static Frame createGUI () {\n+        Frame f = new Frame(\"TextAreaCursorTest\");\n+        BorderLayout layout = new BorderLayout();\n+        f.setLayout(layout);\n+\n+        TextArea ta = new TextArea(\"A test to make sure that cursor \\n\" +\n+                \"on scrollbars has the correct shape\\n\\n\" +\n+                \"Press button to change the textarea\\n\" +\n+                \"cursor to Hand_Cursor\\n\" +\n+                \"Make sure that the cursor on scrollbars\\n\" +\n+                \"remains the same\", 10, 30);\n+\n+        Button bu = new Button(\"Change Cursor\");\n+\n+        f.add(ta, BorderLayout.NORTH);\n+        f.add(bu, BorderLayout.SOUTH);\n+        bu.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                Cursor curs1 = new Cursor(Cursor.HAND_CURSOR);\n+                ta.setCursor(curs1);\n+            }\n+        });\n+        f.pack();\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaCursorTest.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.TextArea;\n+\n+\/*\n+ * @test\n+ * @bug 6240876\n+ * @summary Number pad up & down arrows don't work in XToolkit TextArea\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextAreaKeypadTest\n+ *\/\n+\n+public class TextAreaKeypadTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Press pass if you can move the caret in the textarea with _number pad_ UP\/DOWN keys.\n+            Press fail if you don't.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TextAreaKeypadTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(TextAreaKeypadTest::createGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createGUI() {\n+        Frame frame = new Frame(\"TextAreaKeypadTest\");\n+        frame.setLayout(new BorderLayout());\n+        TextArea area = new TextArea(\"One\\nTwo\\nThree\", 3, 3, TextArea.SCROLLBARS_NONE);\n+        frame.add(\"Center\", area);\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaKeypadTest.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.TextArea;\n+import java.awt.TextField;\n+\n+\/*\n+ * @test\n+ * @bug 4095946\n+ * @summary 592677:TEXTFIELD TAB SELECTION CONFUSING; REMOVE ES_NOHIDESEL STYLE IN\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TextAreaSelectionTest\n+ *\/\n+\n+public class TextAreaSelectionTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+                Please look at the 'TextAreaSelectionTest' frame.\n+\n+                If you see that the all TextFields and TextAreas have\n+                the highlighted selections, the test FAILED. Else, if\n+                you see that the text of the focused component is\n+                highlighted, it is ok.\n+\n+                Try to traverse the focus through all components by\n+                pressing CTRL+TAB. If the focused component highlights\n+                its selection, the test is passed for a while.\n+\n+                Please select the entire\/part of the text of some component\n+                by mouse and choose some menu item. If the highlighted\n+                selection is hidden, the test FAILED.\n+\n+                Please select the entire\/part of the text of some component\n+                by mouse and click right mouse button. A context menu\n+                should appear. Please check its items.\n+                Press ESC to hide the context menu. If the selection\n+                of the text component is not visible, the test FAILED.\n+\n+                Please double click on the word 'DoubleClickMe' in the\n+                first text area. If there are several words selected, the\n+                test FAILED, if the word 'DoubleClickMe' is selected only,\n+                the test PASSED!\n+                \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"TextAreaSelectionTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(TextAreaSelectionTest::createGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createGUI() {\n+        Frame f = new Frame(\"TextAreaSelectionTest\");\n+        f.setLayout(new FlowLayout());\n+\n+        MenuBar mb = new MenuBar();\n+        String name = \"Submenu\";\n+        Menu m = new Menu(name, false);\n+        m.add(new MenuItem(name + \" item 1\"));\n+        m.add(new MenuItem(name + \" item 2\"));\n+        m.add(new MenuItem(name + \" item 3\"));\n+        mb.add(m);\n+\n+        TextField tf1, tf2;\n+        TextArea ta1, ta2;\n+        f.setMenuBar(mb);\n+        f.add(tf1 = new TextField(\"some text\"));\n+        f.add(tf2 = new TextField(\"more text\"));\n+        String eoln = System.getProperty(\"line.separator\", \"\\n\");\n+        f.add(ta1 = new TextArea(\"some text\" + eoln + eoln + \"DoubleClickMe\"));\n+        f.add(ta2 = new TextArea(\"more text\"));\n+\n+        tf1.selectAll();\n+        tf2.selectAll();\n+        ta1.selectAll();\n+        ta2.selectAll();\n+\n+        f.pack();\n+        return f;\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/awt\/TextArea\/TextAreaSelectionTest.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"}]}