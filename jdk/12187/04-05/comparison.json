{"files":[{"patch":"@@ -47,3 +47,3 @@\n-  virtual bool           do_late_inline_check(Compile* C, JVMState* jvms) { ShouldNotReachHere(); return false; }\n-  virtual CallGenerator* inline_cg()    const                             { ShouldNotReachHere(); return nullptr;  }\n-  virtual bool           is_pure_call() const                             { ShouldNotReachHere(); return false; }\n+  virtual bool           do_late_inline_check(Compile* C, JVMState* jvms) { ShouldNotReachHere(); return false;  }\n+  virtual CallGenerator* inline_cg()    const                             { ShouldNotReachHere(); return nullptr;}\n+  virtual bool           is_pure_call() const                             { ShouldNotReachHere(); return false;  }\n","filename":"src\/hotspot\/share\/opto\/callGenerator.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -837,1 +837,1 @@\n-                                 (inst_t->instance_klass() == boxing_klass))) {\n+                                   (inst_t->instance_klass() == boxing_klass))) {\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -627,1 +627,1 @@\n-    set_req(0, nullptr);           \/\/ Null control input for region copy\n+    set_req(0, nullptr);        \/\/ Null control input for region copy\n@@ -1776,1 +1776,1 @@\n-    return nullptr;                \/\/ Bail out on funny non-value stuff\n+    return nullptr;             \/\/ Bail out on funny non-value stuff\n@@ -1778,1 +1778,1 @@\n-    return nullptr;                \/\/ third unequal input to be worth doing\n+    return nullptr;             \/\/ third unequal input to be worth doing\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -382,1 +382,1 @@\n-    _live = nullptr;                 \/\/ Mark live as being not available\n+    _live = nullptr;              \/\/ Mark live as being not available\n","filename":"src\/hotspot\/share\/opto\/chaitin.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-  if (root() != nullptr)     { useful.push(root()); }\n+  if (root() != nullptr)  { useful.push(root()); }\n@@ -303,1 +303,1 @@\n-  if( cached_top_node() ) { useful.push(cached_top_node()); }\n+  if (cached_top_node())  { useful.push(cached_top_node()); }\n@@ -1617,1 +1617,1 @@\n-  if (adr_type == nullptr)             return alias_type(AliasIdxTop);\n+  if (adr_type == nullptr)          return alias_type(AliasIdxTop);\n@@ -1760,1 +1760,1 @@\n-  if (adr_type == nullptr)                 return true;  \/\/ null serves as TypePtr::TOP\n+  if (adr_type == nullptr)              return true;  \/\/ null serves as TypePtr::TOP\n@@ -1778,1 +1778,1 @@\n-  if (adr_type == nullptr)                 return false; \/\/ null serves as TypePtr::TOP\n+  if (adr_type == nullptr)              return false; \/\/ null serves as TypePtr::TOP\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -466,2 +466,2 @@\n-  if( t == TypeInt::ONE )       \/\/ Identity?\n-    return nullptr;                \/\/ Skip it\n+  if( t == TypeInt::ONE )      \/\/ Identity?\n+    return nullptr;            \/\/ Skip it\n@@ -482,1 +482,1 @@\n-  if (i == 0) return nullptr;      \/\/ Dividing by zero constant does not idealize\n+  if (i == 0) return nullptr;   \/\/ Dividing by zero constant does not idealize\n@@ -573,1 +573,1 @@\n-    return nullptr;                \/\/ Skip it\n+    return nullptr;             \/\/ Skip it\n@@ -581,1 +581,1 @@\n-    set_req(0, nullptr);           \/\/ Yank control input\n+    set_req(0, nullptr);         \/\/ Yank control input\n@@ -588,1 +588,1 @@\n-  if (l == 0) return nullptr;      \/\/ Dividing by zero constant does not idealize\n+  if (l == 0) return nullptr;   \/\/ Dividing by zero constant does not idealize\n@@ -724,1 +724,1 @@\n-    return nullptr;                \/\/ Skip it\n+    return nullptr;              \/\/ Skip it\n@@ -816,1 +816,1 @@\n-    return nullptr;                \/\/ Skip it\n+    return nullptr;              \/\/ Skip it\n","filename":"src\/hotspot\/share\/opto\/divnode.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -283,1 +283,1 @@\n-  Block* deepb           = nullptr;        \/\/ Deepest block so far\n+  Block* deepb           = nullptr;     \/\/ Deepest block so far\n@@ -431,1 +431,1 @@\n-  if (buse == nullptr)    return LCA;   \/\/ Unused killing Projs have no use block\n+  if (buse == nullptr) return LCA;   \/\/ Unused killing Projs have no use block\n","filename":"src\/hotspot\/share\/opto\/gcm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-  if (map() == nullptr)           return true;\n+  if (map() == nullptr)        return true;\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2417,1 +2417,1 @@\n-           (can_access_non_heap && field == nullptr))    \/\/ - heap_base_oop is potentially null\n+           (can_access_non_heap && field == nullptr)) \/\/ - heap_base_oop is potentially null\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -470,1 +470,1 @@\n-      return nullptr;             \/\/ Nope, unknown stride, bail out\n+      return nullptr;          \/\/ Nope, unknown stride, bail out\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3697,1 +3697,1 @@\n-  if (base == nullptr)     return -1;  \/\/ something is dead,\n+  if (base == nullptr)  return -1;  \/\/ something is dead,\n@@ -3720,1 +3720,1 @@\n-    if (n == nullptr)      continue;   \/\/ (can this really happen?)\n+    if (n == nullptr)   continue;   \/\/ (can this really happen?)\n@@ -3944,1 +3944,1 @@\n-    return nullptr;                \/\/ something is dead\n+    return nullptr;              \/\/ something is dead\n@@ -3994,2 +3994,2 @@\n-  if (i == 0)  return nullptr;     \/\/ bail out\n-  Node* prev_mem = nullptr;        \/\/ raw memory for the captured store\n+  if (i == 0)  return nullptr;  \/\/ bail out\n+  Node* prev_mem = nullptr;     \/\/ raw memory for the captured store\n@@ -4166,1 +4166,1 @@\n-          nodes[j] = nullptr;      \/\/ undo nodes[j] = st\n+          nodes[j] = nullptr;   \/\/ undo nodes[j] = st\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-  if (n == nullptr)       return;  \/\/ should be assert, but NodeHash makes bogons\n+  if (n == nullptr)    return;  \/\/ should be assert, but NodeHash makes bogons\n","filename":"src\/hotspot\/share\/opto\/multnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1050,1 +1050,1 @@\n-  _in[i] = n;                                \/\/ Stuff prec edge over null\n+  _in[i] = n;                                   \/\/ Stuff prec edge over null\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -528,2 +528,2 @@\n-    _in[gap] = last; \/\/ Move last slot to empty one.\n-    _in[i] = nullptr;   \/\/ null out last slot.\n+    _in[gap] = last;  \/\/ Move last slot to empty one.\n+    _in[i] = nullptr; \/\/ null out last slot.\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2292,1 +2292,1 @@\n-        n->set_req(0, nullptr);        \/\/ Cut selfreference\n+        n->set_req(0, nullptr);     \/\/ Cut selfreference\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}