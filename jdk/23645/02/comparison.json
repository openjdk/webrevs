{"files":[{"patch":"@@ -32,4 +32,2 @@\n-StackMapTable::StackMapTable(StackMapReader* reader, StackMapFrame* init_frame,\n-                             u2 max_locals, u2 max_stack,\n-                             char* code_data, int code_len, TRAPS) {\n-  _code_length = code_len;\n+StackMapTable::StackMapTable(StackMapReader* reader, TRAPS) {\n+  _code_length = reader->code_length();\n@@ -38,14 +36,5 @@\n-    _frame_array = NEW_RESOURCE_ARRAY_IN_THREAD(THREAD,\n-                                                StackMapFrame*, _frame_count);\n-    StackMapFrame* pre_frame = init_frame;\n-    for (int32_t i = 0; i < _frame_count; i++) {\n-      StackMapFrame* frame = reader->next(\n-        pre_frame, i == 0, max_locals, max_stack,\n-        CHECK_VERIFY(pre_frame->verifier()));\n-      _frame_array[i] = frame;\n-      int offset = frame->offset();\n-      if (offset >= code_len || code_data[offset] == 0) {\n-        frame->verifier()->verify_error(\n-            ErrorContext::bad_stackmap(i, frame),\n-            \"StackMapTable error: bad offset\");\n-        return;\n+    _frame_array = new GrowableArray<StackMapFrame*>(_frame_count);\n+    while (!reader->at_end()) {\n+      StackMapFrame* frame = reader->next(CHECK_VERIFY(reader->prev_frame()->verifier()));\n+      if (frame != nullptr) {\n+        _frame_array->push(frame);\n@@ -53,1 +42,0 @@\n-      pre_frame = frame;\n@@ -55,0 +43,24 @@\n+    reader->check_end(CHECK);\n+    \/\/ Correct frame count based on how many actual frames are generated\n+    _frame_count = _frame_array->length();\n+  }\n+}\n+\n+void StackMapReader::check_offset(StackMapFrame* frame) {\n+  int offset = frame->offset();\n+  if (offset >= _code_length || _code_data[offset] == 0) {\n+    _verifier->verify_error(ErrorContext::bad_stackmap(0, frame),\n+                            \"StackMapTable error: bad offset\");\n+  }\n+}\n+\n+void StackMapReader::check_size(TRAPS) {\n+  if (_frame_count < _parsed_frame_count) {\n+    StackMapStream::stackmap_format_error(\"wrong attribute size\", THREAD);\n+  }\n+}\n+\n+void StackMapReader::check_end(TRAPS) {\n+  assert(_stream->at_end(), \"must be\");\n+  if (_frame_count != _parsed_frame_count) {\n+    StackMapStream::stackmap_format_error(\"wrong attribute size\", THREAD);\n@@ -56,1 +68,0 @@\n-  reader->check_end(CHECK);\n@@ -63,1 +74,1 @@\n-    if (_frame_array[i]->offset() == offset) {\n+    if (_frame_array->at(i)->offset() == offset) {\n@@ -98,1 +109,1 @@\n-  StackMapFrame *stackmap_frame = _frame_array[frame_index];\n+  StackMapFrame* stackmap_frame = _frame_array->at(frame_index);\n@@ -140,1 +151,1 @@\n-      _frame_array[i]->print_on(str);\n+      _frame_array->at(i)->print_on(str);\n@@ -146,4 +157,8 @@\n-StackMapReader::StackMapReader(ClassVerifier* v, StackMapStream* stream, char* code_data,\n-                               int32_t code_len, TRAPS) :\n-                               _verifier(v), _stream(stream),\n-                               _code_data(code_data), _code_length(code_len) {\n+StackMapReader::StackMapReader(ClassVerifier* v, StackMapStream* stream,\n+                               char* code_data, int32_t code_len,\n+                               StackMapFrame* init_frame,\n+                               u2 max_locals, u2 max_stack, TRAPS) :\n+                                  _verifier(v), _stream(stream), _code_data(code_data),\n+                                  _code_length(code_len), _parsed_frame_count(0),\n+                                  _prev_frame(init_frame), _max_locals(max_locals),\n+                                  _max_stack(max_stack), _first(true) {\n@@ -213,2 +228,12 @@\n-StackMapFrame* StackMapReader::next(\n-    StackMapFrame* pre_frame, bool first, u2 max_locals, u2 max_stack, TRAPS) {\n+StackMapFrame* StackMapReader::next(TRAPS) {\n+  _parsed_frame_count++;\n+  check_size(CHECK_NULL);\n+  StackMapFrame* frame = next_helper(CHECK_VERIFY_(_verifier, nullptr));\n+  if (frame != nullptr) {\n+    check_offset(frame);\n+    _prev_frame = frame;\n+  }\n+  return frame;\n+}\n+\n+StackMapFrame* StackMapReader::next_helper(TRAPS) {\n@@ -221,1 +246,1 @@\n-    if (first) {\n+    if (_first) {\n@@ -224,1 +249,1 @@\n-      if (pre_frame->locals_size() > 0) {\n+      if (_prev_frame->locals_size() > 0) {\n@@ -226,1 +251,1 @@\n-          THREAD, VerificationType, pre_frame->locals_size());\n+          THREAD, VerificationType, _prev_frame->locals_size());\n@@ -229,2 +254,2 @@\n-      offset = pre_frame->offset() + frame_type + 1;\n-      locals = pre_frame->locals();\n+      offset = _prev_frame->offset() + frame_type + 1;\n+      locals = _prev_frame->locals();\n@@ -233,4 +258,4 @@\n-      offset, pre_frame->flags(), pre_frame->locals_size(), 0,\n-      max_locals, max_stack, locals, nullptr, _verifier);\n-    if (first && locals != nullptr) {\n-      frame->copy_locals(pre_frame);\n+      offset, _prev_frame->flags(), _prev_frame->locals_size(), 0,\n+      _max_locals, _max_stack, locals, nullptr, _verifier);\n+    if (_first && locals != nullptr) {\n+      frame->copy_locals(_prev_frame);\n@@ -238,0 +263,1 @@\n+    _first = false;\n@@ -242,1 +268,1 @@\n-    if (first) {\n+    if (_first) {\n@@ -245,1 +271,1 @@\n-      if (pre_frame->locals_size() > 0) {\n+      if (_prev_frame->locals_size() > 0) {\n@@ -247,1 +273,1 @@\n-          THREAD, VerificationType, pre_frame->locals_size());\n+          THREAD, VerificationType, _prev_frame->locals_size());\n@@ -250,2 +276,2 @@\n-      offset = pre_frame->offset() + frame_type - 63;\n-      locals = pre_frame->locals();\n+      offset = _prev_frame->offset() + frame_type - 63;\n+      locals = _prev_frame->locals();\n@@ -262,1 +288,1 @@\n-      stack_size, max_stack, CHECK_VERIFY_(_verifier, nullptr));\n+      stack_size, _max_stack, CHECK_VERIFY_(_verifier, nullptr));\n@@ -264,4 +290,4 @@\n-      offset, pre_frame->flags(), pre_frame->locals_size(), stack_size,\n-      max_locals, max_stack, locals, stack, _verifier);\n-    if (first && locals != nullptr) {\n-      frame->copy_locals(pre_frame);\n+      offset, _prev_frame->flags(), _prev_frame->locals_size(), stack_size,\n+      _max_locals, _max_stack, locals, stack, _verifier);\n+    if (_first && locals != nullptr) {\n+      frame->copy_locals(_prev_frame);\n@@ -269,0 +295,1 @@\n+    _first = false;\n@@ -282,1 +309,1 @@\n-    if (first) {\n+    if (_first) {\n@@ -285,1 +312,1 @@\n-      if (pre_frame->locals_size() > 0) {\n+      if (_prev_frame->locals_size() > 0) {\n@@ -287,1 +314,1 @@\n-          THREAD, VerificationType, pre_frame->locals_size());\n+          THREAD, VerificationType, _prev_frame->locals_size());\n@@ -290,2 +317,2 @@\n-      offset = pre_frame->offset() + offset_delta + 1;\n-      locals = pre_frame->locals();\n+      offset = _prev_frame->offset() + offset_delta + 1;\n+      locals = _prev_frame->locals();\n@@ -302,1 +329,1 @@\n-      stack_size, max_stack, CHECK_VERIFY_(_verifier, nullptr));\n+      stack_size, _max_stack, CHECK_VERIFY_(_verifier, nullptr));\n@@ -304,4 +331,4 @@\n-      offset, pre_frame->flags(), pre_frame->locals_size(), stack_size,\n-      max_locals, max_stack, locals, stack, _verifier);\n-    if (first && locals != nullptr) {\n-      frame->copy_locals(pre_frame);\n+      offset, _prev_frame->flags(), _prev_frame->locals_size(), stack_size,\n+      _max_locals, _max_stack, locals, stack, _verifier);\n+    if (_first && locals != nullptr) {\n+      frame->copy_locals(_prev_frame);\n@@ -309,0 +336,1 @@\n+    _first = false;\n@@ -314,2 +342,2 @@\n-    locals = pre_frame->locals();\n-    int length = pre_frame->locals_size();\n+    locals = _prev_frame->locals();\n+    int length = _prev_frame->locals_size();\n@@ -318,1 +346,1 @@\n-    u1 flags = pre_frame->flags();\n+    u1 flags = _prev_frame->flags();\n@@ -322,1 +350,1 @@\n-        new_length, max_locals, CHECK_VERIFY_(_verifier, nullptr));\n+        new_length, _max_locals, CHECK_VERIFY_(_verifier, nullptr));\n@@ -332,1 +360,1 @@\n-    if (first) {\n+    if (_first) {\n@@ -342,1 +370,1 @@\n-      offset = pre_frame->offset() + offset_delta + 1;\n+      offset = _prev_frame->offset() + offset_delta + 1;\n@@ -345,1 +373,1 @@\n-      offset, flags, new_length, 0, max_locals, max_stack,\n+      offset, flags, new_length, 0, _max_locals, _max_stack,\n@@ -347,2 +375,2 @@\n-    if (first && locals != nullptr) {\n-      frame->copy_locals(pre_frame);\n+    if (_first && locals != nullptr) {\n+      frame->copy_locals(_prev_frame);\n@@ -350,0 +378,1 @@\n+    _first = false;\n@@ -354,1 +383,1 @@\n-    int real_length = pre_frame->locals_size();\n+    int real_length = _prev_frame->locals_size();\n@@ -357,3 +386,2 @@\n-    VerificationType* pre_locals = pre_frame->locals();\n-    int i;\n-    for (i=0; i<pre_frame->locals_size(); i++) {\n+    VerificationType* pre_locals = _prev_frame->locals();\n+    for (int i = 0; i < _prev_frame->locals_size(); i++) {\n@@ -362,2 +390,2 @@\n-    u1 flags = pre_frame->flags();\n-    for (i=0; i<appends; i++) {\n+    u1 flags = _prev_frame->flags();\n+    for (int i = 0; i < appends; i++) {\n@@ -372,2 +400,2 @@\n-      real_length, max_locals, CHECK_VERIFY_(_verifier, nullptr));\n-    if (first) {\n+      real_length, _max_locals, CHECK_VERIFY_(_verifier, nullptr));\n+    if (_first) {\n@@ -376,1 +404,1 @@\n-      offset = pre_frame->offset() + offset_delta + 1;\n+      offset = _prev_frame->offset() + offset_delta + 1;\n@@ -379,2 +407,3 @@\n-      offset, flags, real_length, 0, max_locals,\n-      max_stack, locals, nullptr, _verifier);\n+      offset, flags, real_length, 0, _max_locals,\n+      _max_stack, locals, nullptr, _verifier);\n+    _first = false;\n@@ -392,2 +421,1 @@\n-    int i;\n-    for (i=0; i<locals_size; i++) {\n+    for (int i = 0; i < locals_size; i++) {\n@@ -403,1 +431,1 @@\n-      real_locals_size, max_locals, CHECK_VERIFY_(_verifier, nullptr));\n+      real_locals_size, _max_locals, CHECK_VERIFY_(_verifier, nullptr));\n@@ -411,1 +439,1 @@\n-    for (i=0; i<stack_size; i++) {\n+    for (int i = 0; i < stack_size; i++) {\n@@ -420,2 +448,2 @@\n-      real_stack_size, max_stack, CHECK_VERIFY_(_verifier, nullptr));\n-    if (first) {\n+      real_stack_size, _max_stack, CHECK_VERIFY_(_verifier, nullptr));\n+    if (_first) {\n@@ -424,1 +452,1 @@\n-      offset = pre_frame->offset() + offset_delta + 1;\n+      offset = _prev_frame->offset() + offset_delta + 1;\n@@ -428,1 +456,2 @@\n-      max_locals, max_stack, locals, stack, _verifier);\n+      _max_locals, _max_stack, locals, stack, _verifier);\n+    _first = false;\n@@ -433,1 +462,1 @@\n-    \"reserved frame type\", CHECK_VERIFY_(pre_frame->verifier(), nullptr));\n+    \"reserved frame type\", CHECK_VERIFY_(_prev_frame->verifier(), nullptr));\n","filename":"src\/hotspot\/share\/classfile\/stackMapTable.cpp","additions":116,"deletions":87,"binary":false,"changes":203,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  StackMapFrame**       _frame_array;\n+  GrowableArray<StackMapFrame*>* _frame_array;\n@@ -50,3 +50,1 @@\n-  StackMapTable(StackMapReader* reader, StackMapFrame* init_frame,\n-                u2 max_locals, u2 max_stack,\n-                char* code_data, int code_len, TRAPS);\n+  StackMapTable(StackMapReader* reader, TRAPS);\n@@ -56,1 +54,1 @@\n-    return _frame_array[index]->offset();\n+    return _frame_array->at(index)->offset();\n@@ -119,2 +117,2 @@\n-  \/\/ information get from the attribute\n-  int32_t  _frame_count;       \/\/ frame count\n+  \/\/ information from the attribute\n+  int32_t  _frame_count;\n@@ -122,0 +120,16 @@\n+  \/\/ Number of frames parsed\n+  int32_t  _parsed_frame_count;\n+\n+  \/\/ Previous frame buffer\n+  StackMapFrame* _prev_frame;\n+\n+  \/\/ information from method\n+  u2 _max_locals;\n+  u2 _max_stack;\n+\n+  \/\/ Check if reading first entry\n+  bool _first;\n+\n+  StackMapFrame* next_helper(TRAPS);\n+  void check_offset(StackMapFrame* frame);\n+  void check_size(TRAPS);\n@@ -144,12 +158,13 @@\n-  StackMapReader(ClassVerifier* v, StackMapStream* stream, char* code_data,\n-                 int32_t code_len, TRAPS);\n-\n-  inline int32_t get_frame_count() const                { return _frame_count; }\n-  StackMapFrame* next(StackMapFrame* pre_frame, bool first,\n-                      u2 max_locals, u2 max_stack, TRAPS);\n-\n-  void check_end(TRAPS) {\n-    if (!_stream->at_end()) {\n-      StackMapStream::stackmap_format_error(\"wrong attribute size\", CHECK);\n-    }\n-  }\n+  StackMapReader(ClassVerifier* v, StackMapStream* stream,\n+                 char* code_data, int32_t code_len,\n+                 StackMapFrame* init_frame,\n+                 u2 max_locals, u2 max_stack, TRAPS);\n+\n+  inline int32_t get_frame_count()   const { return _frame_count; }\n+  inline StackMapFrame* prev_frame() const { return _prev_frame; }\n+  inline char* code_data()           const { return _code_data; }\n+  inline int32_t code_length()       const { return _code_length; }\n+  inline bool at_end()               const { return _stream->at_end(); }\n+\n+  StackMapFrame* next(TRAPS);\n+  void check_end(TRAPS);\n","filename":"src\/hotspot\/share\/classfile\/stackMapTable.hpp","additions":34,"deletions":19,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -739,3 +739,2 @@\n-  StackMapReader reader(this, &stream, code_data, code_length, THREAD);\n-  StackMapTable stackmap_table(&reader, &current_frame, max_locals, max_stack,\n-                               code_data, code_length, CHECK_VERIFY(this));\n+  StackMapReader reader(this, &stream, code_data, code_length, &current_frame, max_locals, max_stack, THREAD);\n+  StackMapTable stackmap_table(&reader, CHECK_VERIFY(this));\n","filename":"src\/hotspot\/share\/classfile\/verifier.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}