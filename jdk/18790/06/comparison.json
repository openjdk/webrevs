{"files":[{"patch":"@@ -34,0 +34,1 @@\n+#include \"classfile\/classLoader.hpp\"\n@@ -121,0 +122,3 @@\n+    log_info(cds,dynamic)(\"CDS dynamic dump: clinit = \" JLONG_FORMAT \"ms)\",\n+                          ClassLoader::class_init_time_ms());\n+\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -81,0 +81,1 @@\n+#include \"utilities\/ostream.hpp\"\n@@ -121,0 +122,4 @@\n+PerfCounter*    ClassLoader::_perf_ik_link_methods_time = nullptr;\n+PerfCounter*    ClassLoader::_perf_method_adapters_time = nullptr;\n+PerfCounter*    ClassLoader::_perf_ik_link_methods_count = nullptr;\n+PerfCounter*    ClassLoader::_perf_method_adapters_count = nullptr;\n@@ -124,0 +129,24 @@\n+PerfCounter*    ClassLoader::_perf_resolve_indy_time = nullptr;\n+PerfCounter*    ClassLoader::_perf_resolve_invokehandle_time = nullptr;\n+PerfCounter*    ClassLoader::_perf_resolve_mh_time = nullptr;\n+PerfCounter*    ClassLoader::_perf_resolve_mt_time = nullptr;\n+\n+PerfCounter*    ClassLoader::_perf_resolve_indy_count = nullptr;\n+PerfCounter*    ClassLoader::_perf_resolve_invokehandle_count = nullptr;\n+PerfCounter*    ClassLoader::_perf_resolve_mh_count = nullptr;\n+PerfCounter*    ClassLoader::_perf_resolve_mt_count = nullptr;\n+\n+void ClassLoader::print_counters(outputStream *st) {\n+  assert(log_is_enabled(Info, perf, class, link), \"already checked by the caller\");\n+  st->print_cr(\"ClassLoader:\");\n+  st->print_cr(\"  clinit:               \" JLONG_FORMAT \"ms \/ \" JLONG_FORMAT \" events\", ClassLoader::class_init_time_ms(), ClassLoader::class_init_count());\n+  st->print_cr(\"  link methods:         \" JLONG_FORMAT \"ms \/ \" JLONG_FORMAT \" events\", Management::ticks_to_ms(_perf_ik_link_methods_time->get_value())   , _perf_ik_link_methods_count->get_value());\n+  st->print_cr(\"  method adapters:      \" JLONG_FORMAT \"ms \/ \" JLONG_FORMAT \" events\", Management::ticks_to_ms(_perf_method_adapters_time->get_value())   , _perf_method_adapters_count->get_value());\n+  st->print_cr(\"  resolve...\");\n+  st->print_cr(\"    invokedynamic:   \" JLONG_FORMAT \"ms \/ \" JLONG_FORMAT \" events\", Management::ticks_to_ms(_perf_resolve_indy_time->get_value())         , _perf_resolve_indy_count->get_value());\n+  st->print_cr(\"    invokehandle:    \" JLONG_FORMAT \"ms \/ \" JLONG_FORMAT \" events\", Management::ticks_to_ms(_perf_resolve_invokehandle_time->get_value()) , _perf_resolve_invokehandle_count->get_value());\n+  st->print_cr(\"    CP_MethodHandle: \" JLONG_FORMAT \"ms \/ \" JLONG_FORMAT \" events\", Management::ticks_to_ms(_perf_resolve_mh_time->get_value())           , _perf_resolve_mh_count->get_value());\n+  st->print_cr(\"    CP_MethodType:   \" JLONG_FORMAT \"ms \/ \" JLONG_FORMAT \" events\", Management::ticks_to_ms(_perf_resolve_mt_time->get_value())           , _perf_resolve_mt_count->get_value());\n+  st->cr();\n+}\n+\n@@ -1339,1 +1368,0 @@\n-\n@@ -1344,0 +1372,17 @@\n+  if (Arguments::perf_class_link()) {\n+    NEWPERFTICKCOUNTER(_perf_ik_link_methods_time, SUN_CLS, \"linkMethodsTime\");\n+    NEWPERFTICKCOUNTER(_perf_method_adapters_time, SUN_CLS, \"makeAdaptersTime\");\n+    NEWPERFEVENTCOUNTER(_perf_ik_link_methods_count, SUN_CLS, \"linkMethodsCount\");\n+    NEWPERFEVENTCOUNTER(_perf_method_adapters_count, SUN_CLS, \"makeAdaptersCount\");\n+\n+    NEWPERFTICKCOUNTER(_perf_resolve_indy_time, SUN_CLS, \"resolve_invokedynamic_time\");\n+    NEWPERFTICKCOUNTER(_perf_resolve_invokehandle_time, SUN_CLS, \"resolve_invokehandle_time\");\n+    NEWPERFTICKCOUNTER(_perf_resolve_mh_time, SUN_CLS, \"resolve_MethodHandle_time\");\n+    NEWPERFTICKCOUNTER(_perf_resolve_mt_time, SUN_CLS, \"resolve_MethodType_time\");\n+\n+    NEWPERFEVENTCOUNTER(_perf_resolve_indy_count, SUN_CLS, \"resolve_invokedynamic_count\");\n+    NEWPERFEVENTCOUNTER(_perf_resolve_invokehandle_count, SUN_CLS, \"resolve_invokehandle_count\");\n+    NEWPERFEVENTCOUNTER(_perf_resolve_mh_count, SUN_CLS, \"resolve_MethodHandle_count\");\n+    NEWPERFEVENTCOUNTER(_perf_resolve_mt_count, SUN_CLS, \"resolve_MethodType_count\");\n+  }\n+\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":46,"deletions":1,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"utilities\/ostream.hpp\"\n@@ -169,0 +170,14 @@\n+  static PerfCounter* _perf_ik_link_methods_time;\n+  static PerfCounter* _perf_method_adapters_time;\n+  static PerfCounter* _perf_ik_link_methods_count;\n+  static PerfCounter* _perf_method_adapters_count;\n+\n+  static PerfCounter* _perf_resolve_indy_time;\n+  static PerfCounter* _perf_resolve_invokehandle_time;\n+  static PerfCounter* _perf_resolve_mh_time;\n+  static PerfCounter* _perf_resolve_mt_time;\n+\n+  static PerfCounter* _perf_resolve_indy_count;\n+  static PerfCounter* _perf_resolve_invokehandle_count;\n+  static PerfCounter* _perf_resolve_mh_count;\n+  static PerfCounter* _perf_resolve_mt_count;\n@@ -288,0 +303,17 @@\n+  static PerfCounter* perf_ik_link_methods_time() { return _perf_ik_link_methods_time; }\n+  static PerfCounter* perf_method_adapters_time() { return _perf_method_adapters_time; }\n+  static PerfCounter* perf_ik_link_methods_count() { return _perf_ik_link_methods_count; }\n+  static PerfCounter* perf_method_adapters_count() { return _perf_method_adapters_count; }\n+\n+  static PerfCounter* perf_resolve_invokedynamic_time() { return _perf_resolve_indy_time; }\n+  static PerfCounter* perf_resolve_invokehandle_time() { return _perf_resolve_invokehandle_time; }\n+  static PerfCounter* perf_resolve_method_handle_time() { return _perf_resolve_mh_time; }\n+  static PerfCounter* perf_resolve_method_type_time() { return _perf_resolve_mt_time; }\n+\n+  static PerfCounter* perf_resolve_invokedynamic_count() { return _perf_resolve_indy_count; }\n+  static PerfCounter* perf_resolve_invokehandle_count() { return _perf_resolve_invokehandle_count; }\n+  static PerfCounter* perf_resolve_method_handle_count() { return _perf_resolve_mh_count; }\n+  static PerfCounter* perf_resolve_method_type_count() { return _perf_resolve_mt_count; }\n+\n+  static void print_counters(outputStream *st);\n+\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"classfile\/classLoader.hpp\"\n@@ -58,1 +59,2 @@\n-#include \"runtime\/javaThread.hpp\"\n+#include \"runtime\/javaThread.inline.hpp\"\n+#include \"runtime\/perfData.hpp\"\n@@ -1731,0 +1733,4 @@\n+\n+  PerfTraceTimedEvent timer(ClassLoader::perf_resolve_invokehandle_time(),\n+                            ClassLoader::perf_resolve_invokehandle_count());\n+\n@@ -1782,0 +1788,3 @@\n+  PerfTraceTimedEvent timer(ClassLoader::perf_resolve_invokedynamic_time(),\n+                            ClassLoader::perf_resolve_invokedynamic_count());\n+\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -113,0 +113,1 @@\n+  LOG_TAG(link) \\\n","filename":"src\/hotspot\/share\/logging\/logTag.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"classfile\/classLoader.hpp\"\n@@ -65,1 +66,2 @@\n-#include \"runtime\/javaThread.hpp\"\n+#include \"runtime\/javaThread.inline.hpp\"\n+#include \"runtime\/perfData.hpp\"\n@@ -1017,1 +1019,3 @@\n-    {\n+    { PerfTraceTimedEvent timer(ClassLoader::perf_resolve_invokedynamic_time(),\n+                                ClassLoader::perf_resolve_invokedynamic_count());\n+\n@@ -1075,1 +1079,3 @@\n-    {\n+    { PerfTraceTimedEvent timer(ClassLoader::perf_resolve_method_handle_time(),\n+                                ClassLoader::perf_resolve_method_handle_count());\n+\n@@ -1123,1 +1129,3 @@\n-    {\n+    { PerfTraceTimedEvent timer(ClassLoader::perf_resolve_method_type_time(),\n+                                ClassLoader::perf_resolve_method_type_count());\n+\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -981,0 +981,2 @@\n+  PerfTraceTime timer(ClassLoader::perf_ik_link_methods_time());\n+\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"classfile\/classLoader.hpp\"\n@@ -65,0 +66,1 @@\n+#include \"runtime\/arguments.hpp\"\n@@ -71,0 +73,1 @@\n+#include \"runtime\/perfData.hpp\"\n@@ -1171,0 +1174,4 @@\n+  if (Arguments::perf_class_link()) {\n+    ClassLoader::perf_ik_link_methods_count()->inc();\n+  }\n+\n@@ -1222,0 +1229,2 @@\n+  PerfTraceTime timer(ClassLoader::perf_method_adapters_time());\n+\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -127,0 +127,3 @@\n+\/\/ True if -Xlog:perf+class+link was specified\n+bool Arguments::_perf_class_link = false;\n+\n@@ -3767,0 +3770,9 @@\n+  if (log_is_enabled(Info, perf, class, link)) {\n+    if (!UsePerfData) {\n+      warning(\"Disabling -Xlog:perf+class+link since UsePerfData is turned off.\");\n+      LogConfiguration::configure_stdout(LogLevel::Off, false, LOG_TAGS(perf, class, link));\n+    } else {\n+      _perf_class_link = true;\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -255,0 +255,3 @@\n+  \/\/ true if -Xlog:perf+class+link is specified, default to false\n+  static bool _perf_class_link;\n+\n@@ -488,0 +491,2 @@\n+  static bool perf_class_link() { return _perf_class_link; }\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"classfile\/classLoader.hpp\"\n@@ -159,0 +160,6 @@\n+void log_vm_stats(outputStream *st) {\n+  LogStreamHandle(Info, perf, class, link) log;\n+  if (log.is_enabled()) {\n+    ClassLoader::print_counters(st);\n+  }\n+}\n@@ -359,0 +366,2 @@\n+\n+  log_vm_stats(tty);\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -62,0 +62,2 @@\n+extern void log_vm_stats(outputStream *st);\n+\n","filename":"src\/hotspot\/share\/runtime\/java.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -299,1 +299,1 @@\n-  assert(!_all->contains(p->name()), \"duplicate name added\");\n+  assert(!_all->contains(p->name()), \"duplicate name added: %s\", p->name());\n@@ -530,5 +530,0 @@\n-PerfTraceTime::~PerfTraceTime() {\n-  if (!UsePerfData) return;\n-  _t.stop();\n-  _timerp->inc(_t.ticks());\n-}\n","filename":"src\/hotspot\/share\/runtime\/perfData.cpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -834,1 +834,1 @@\n-      if (!UsePerfData) return;\n+      if (!UsePerfData || timerp == nullptr) { return; }\n@@ -838,1 +838,10 @@\n-    ~PerfTraceTime();\n+    const char* name() const {\n+      assert(_timerp != nullptr, \"sanity\");\n+      return _timerp->name();\n+    }\n+\n+    ~PerfTraceTime() {\n+      if (!UsePerfData || !_t.is_active()) { return; }\n+      _t.stop();\n+      _timerp->inc(_t.ticks());\n+    }\n@@ -867,1 +876,1 @@\n-      if (!UsePerfData) return;\n+      if (!UsePerfData || timerp == nullptr) { return; }\n","filename":"src\/hotspot\/share\/runtime\/perfData.hpp","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"classfile\/classLoader.hpp\"\n@@ -58,0 +59,1 @@\n+#include \"runtime\/arguments.hpp\"\n@@ -66,0 +68,1 @@\n+#include \"runtime\/perfData.hpp\"\n@@ -2573,0 +2576,3 @@\n+  if (Arguments::perf_class_link()) {\n+    ClassLoader::perf_method_adapters_count()->inc();\n+  }\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -831,0 +831,6 @@\n+  if (Arguments::perf_class_link()) {\n+    LogStreamHandle(Info, perf, class, link) log;\n+    log.print_cr(\"At VM initialization completion:\");\n+    log_vm_stats(&log);\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}