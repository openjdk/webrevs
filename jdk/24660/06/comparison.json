{"files":[{"patch":"@@ -75,7 +75,0 @@\n-  if (DiagnoseSyncOnValueBasedClasses != 0) {\n-    load_klass(hdr, obj);\n-    ldrb(hdr, Address(hdr, Klass::misc_flags_offset()));\n-    tst(hdr, KlassFlags::_misc_is_value_based_class);\n-    br(Assembler::NE, slow_case);\n-  }\n-\n@@ -85,0 +78,8 @@\n+\n+    if (DiagnoseSyncOnValueBasedClasses != 0) {\n+      load_klass(hdr, obj);\n+      ldrb(hdr, Address(hdr, Klass::misc_flags_offset()));\n+      tst(hdr, KlassFlags::_misc_is_value_based_class);\n+      br(Assembler::NE, slow_case);\n+    }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -363,1 +363,1 @@\n-    \/\/ Clear cache in case fast locking succeeds.\n+    \/\/ Clear cache in case fast locking succeeds or we need to take the slow-path.\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -696,7 +696,0 @@\n-    if (DiagnoseSyncOnValueBasedClasses != 0) {\n-      load_klass(tmp, obj_reg);\n-      ldrb(tmp, Address(tmp, Klass::misc_flags_offset()));\n-      tst(tmp, KlassFlags::_misc_is_value_based_class);\n-      br(Assembler::NE, slow_case);\n-    }\n-\n@@ -707,0 +700,8 @@\n+\n+      if (DiagnoseSyncOnValueBasedClasses != 0) {\n+        load_klass(tmp, obj_reg);\n+        ldrb(tmp, Address(tmp, Klass::misc_flags_offset()));\n+        tst(tmp, KlassFlags::_misc_is_value_based_class);\n+        br(Assembler::NE, slow_case);\n+      }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -7037,1 +7037,1 @@\n-    \/\/ Clear cache in case fast locking succeeds.\n+    \/\/ Clear cache in case fast locking succeeds or we need to take the slow-path.\n@@ -7041,0 +7041,7 @@\n+  if (DiagnoseSyncOnValueBasedClasses != 0) {\n+    load_klass(t1, obj);\n+    ldrb(t1, Address(t1, Klass::misc_flags_offset()));\n+    tst(t1, KlassFlags::_misc_is_value_based_class);\n+    br(Assembler::NE, slow);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -86,7 +86,0 @@\n-  if (DiagnoseSyncOnValueBasedClasses != 0) {\n-    load_klass(Rscratch, Roop);\n-    lbz(Rscratch, in_bytes(Klass::misc_flags_offset()), Rscratch);\n-    testbitdi(CR0, R0, Rscratch, exact_log2(KlassFlags::_misc_is_value_based_class));\n-    bne(CR0, slow_int);\n-  }\n-\n@@ -96,0 +89,8 @@\n+\n+    if (DiagnoseSyncOnValueBasedClasses != 0) {\n+      load_klass(Rscratch, Roop);\n+      lbz(Rscratch, in_bytes(Klass::misc_flags_offset()), Rscratch);\n+      testbitdi(CR0, R0, Rscratch, exact_log2(KlassFlags::_misc_is_value_based_class));\n+      bne(CR0, slow_int);\n+    }\n+\n","filename":"src\/hotspot\/cpu\/ppc\/c1_MacroAssembler_ppc.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -961,7 +961,0 @@\n-    if (DiagnoseSyncOnValueBasedClasses != 0) {\n-      load_klass(tmp, object);\n-      lbz(tmp, in_bytes(Klass::misc_flags_offset()), tmp);\n-      testbitdi(CR0, R0, tmp, exact_log2(KlassFlags::_misc_is_value_based_class));\n-      bne(CR0, slow_case);\n-    }\n-\n@@ -972,0 +965,8 @@\n+\n+      if (DiagnoseSyncOnValueBasedClasses != 0) {\n+        load_klass(tmp, object);\n+        lbz(tmp, in_bytes(Klass::misc_flags_offset()), tmp);\n+        testbitdi(CR0, R0, tmp, exact_log2(KlassFlags::_misc_is_value_based_class));\n+        bne(CR0, slow_case);\n+      }\n+\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -3003,1 +3003,1 @@\n-    \/\/ Clear cache in case fast locking succeeds.\n+    \/\/ Clear cache in case fast locking succeeds or we need to take the slow-path.\n@@ -5002,1 +5002,1 @@\n-  assert_different_registers(box, obj, t1, t2);\n+  assert_different_registers(box, obj, t1, t2, R0);\n@@ -5005,2 +5005,0 @@\n-  const Register top = t1;\n-  const Register mark = t2;\n@@ -5010,1 +5008,1 @@\n-    \/\/ Clear cache in case fast locking succeeds.\n+    \/\/ Clear cache in case fast locking succeeds or we need to take the slow-path.\n@@ -5015,0 +5013,10 @@\n+  if (DiagnoseSyncOnValueBasedClasses != 0) {\n+    load_klass(t1, obj);\n+    lbz(t1, in_bytes(Klass::misc_flags_offset()), t1);\n+    testbitdi(CR0, R0, t1, exact_log2(KlassFlags::_misc_is_value_based_class));\n+    bne(CR0, slow);\n+  }\n+\n+  const Register top = t1;\n+  const Register mark = t2;\n+\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -64,7 +64,0 @@\n-  if (DiagnoseSyncOnValueBasedClasses != 0) {\n-    load_klass(hdr, obj);\n-    lbu(hdr, Address(hdr, Klass::misc_flags_offset()));\n-    test_bit(temp, hdr, exact_log2(KlassFlags::_misc_is_value_based_class));\n-    bnez(temp, slow_case, true \/* is_far *\/);\n-  }\n-\n@@ -74,0 +67,8 @@\n+\n+    if (DiagnoseSyncOnValueBasedClasses != 0) {\n+      load_klass(hdr, obj);\n+      lbu(hdr, Address(hdr, Klass::misc_flags_offset()));\n+      test_bit(temp, hdr, exact_log2(KlassFlags::_misc_is_value_based_class));\n+      bnez(temp, slow_case, \/* is_far *\/ true);\n+    }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -292,1 +292,1 @@\n-    \/\/ Clear cache in case fast locking succeeds.\n+    \/\/ Clear cache in case fast locking succeeds or we need to take the slow-path.\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -739,7 +739,0 @@\n-    if (DiagnoseSyncOnValueBasedClasses != 0) {\n-      load_klass(tmp, obj_reg);\n-      lbu(tmp, Address(tmp, Klass::misc_flags_offset()));\n-      test_bit(tmp, tmp, exact_log2(KlassFlags::_misc_is_value_based_class));\n-      bnez(tmp, slow_case);\n-    }\n-\n@@ -750,0 +743,8 @@\n+\n+      if (DiagnoseSyncOnValueBasedClasses != 0) {\n+        load_klass(tmp, obj_reg);\n+        lbu(tmp, Address(tmp, Klass::misc_flags_offset()));\n+        test_bit(tmp, tmp, exact_log2(KlassFlags::_misc_is_value_based_class));\n+        bnez(tmp, slow_case);\n+      }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -6365,1 +6365,1 @@\n-    \/\/ Clear cache in case fast locking succeeds.\n+    \/\/ Clear cache in case fast locking succeeds or we need to take the slow-path.\n@@ -6369,0 +6369,7 @@\n+  if (DiagnoseSyncOnValueBasedClasses != 0) {\n+    load_klass(tmp1, obj);\n+    lbu(tmp1, Address(tmp1, Klass::misc_flags_offset()));\n+    test_bit(tmp1, tmp1, exact_log2(KlassFlags::_misc_is_value_based_class));\n+    bnez(tmp1, slow, \/* is_far *\/ true);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -72,6 +72,0 @@\n-  if (DiagnoseSyncOnValueBasedClasses != 0) {\n-    load_klass(tmp, Roop);\n-    z_tm(Address(tmp, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n-    branch_optimized(Assembler::bcondAllOne, slow_case);\n-  }\n-\n@@ -83,0 +77,7 @@\n+\n+    if (DiagnoseSyncOnValueBasedClasses != 0) {\n+      load_klass(tmp, Roop);\n+      z_tm(Address(tmp, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n+      branch_optimized(Assembler::bcondAllOne, slow_case);\n+    }\n+\n","filename":"src\/hotspot\/cpu\/s390\/c1_MacroAssembler_s390.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1005,6 +1005,0 @@\n-  if (DiagnoseSyncOnValueBasedClasses != 0) {\n-    load_klass(tmp, object);\n-    z_tm(Address(tmp, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n-    z_btrue(slow_case);\n-  }\n-\n@@ -1015,0 +1009,6 @@\n+    if (DiagnoseSyncOnValueBasedClasses != 0) {\n+      load_klass(tmp, object);\n+      z_tm(Address(tmp, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n+      z_btrue(slow_case);\n+    }\n+\n","filename":"src\/hotspot\/cpu\/s390\/interp_masm_s390.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -6366,1 +6366,1 @@\n-    \/\/ Clear cache in case fast locking succeeds.\n+    \/\/ Clear cache in case fast locking succeeds or we need to take the slow-path.\n@@ -6371,0 +6371,6 @@\n+  if (DiagnoseSyncOnValueBasedClasses != 0) {\n+    load_klass(temp1, obj);\n+    z_tm(Address(temp1, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n+    z_brne(slow);\n+  }\n+\n@@ -6504,1 +6510,1 @@\n-    \/\/ Clear cache in case fast locking succeeds.\n+    \/\/ Clear cache in case fast locking succeeds or we need to take the slow-path.\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -58,6 +58,0 @@\n-  if (DiagnoseSyncOnValueBasedClasses != 0) {\n-    load_klass(hdr, obj, rscratch1);\n-    testb(Address(hdr, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n-    jcc(Assembler::notZero, slow_case);\n-  }\n-\n@@ -68,0 +62,7 @@\n+\n+    if (DiagnoseSyncOnValueBasedClasses != 0) {\n+      load_klass(hdr, obj, rscratch1);\n+      testb(Address(hdr, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n+      jcc(Assembler::notZero, slow_case);\n+    }\n+\n","filename":"src\/hotspot\/cpu\/x86\/c1_MacroAssembler_x86.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -479,1 +479,1 @@\n-    \/\/ Clear cache in case fast locking succeeds.\n+    \/\/ Clear cache in case fast locking succeeds or we need to take the slow-path.\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1026,6 +1026,0 @@\n-    if (DiagnoseSyncOnValueBasedClasses != 0) {\n-      load_klass(tmp_reg, obj_reg, rklass_decode_tmp);\n-      testb(Address(tmp_reg, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n-      jcc(Assembler::notZero, slow_case);\n-    }\n-\n@@ -1035,0 +1029,6 @@\n+      if (DiagnoseSyncOnValueBasedClasses != 0) {\n+        load_klass(tmp_reg, obj_reg, rklass_decode_tmp);\n+        testb(Address(tmp_reg, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n+        jcc(Assembler::notZero, slow_case);\n+      }\n+\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -10362,1 +10362,1 @@\n-    \/\/ Clear cache in case fast locking succeeds.\n+    \/\/ Clear cache in case fast locking succeeds or we need to take the slow-path.\n@@ -10366,0 +10366,6 @@\n+  if (DiagnoseSyncOnValueBasedClasses != 0) {\n+    load_klass(tmp, obj, rscratch1);\n+    testb(Address(tmp, Klass::misc_flags_offset()), KlassFlags::_misc_is_value_based_class);\n+    jcc(Assembler::notZero, slow);\n+  }\n+\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}