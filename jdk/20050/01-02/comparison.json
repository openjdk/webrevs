{"files":[{"patch":"@@ -405,4 +405,0 @@\n-    static int getPort(SocketAddress address) {\n-        return ((InetSocketAddress) address).getPort();\n-    }\n-\n@@ -430,1 +426,1 @@\n-        do {\n+        while (true) {\n@@ -433,1 +429,1 @@\n-            if (getPort(p.getSocketAddress()) == getPort(s.getLocalSocketAddress())) {\n+            if (p.getPort() == s.getLocalPort()) {\n@@ -445,1 +441,1 @@\n-        } while(true);\n+        }\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/AdaptorMulticasting.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -121,0 +121,7 @@\n+                \/\/ When connecting an unbound datagram channel, the underlying\n+                \/\/ socket will first be bound to the wildcard address. On macOS,\n+                \/\/ the system may allocate the same port on which another socket\n+                \/\/ is already bound with a more specific address. This may prevent\n+                \/\/ datagrams directed at the connected socket to reach it.\n+                \/\/ To avoid this, when on macOS, we preemptively bind `dc` to the\n+                \/\/ specific address instead of letting it bind to the wildcard.\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/Connect.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-            System.out.println(\"Checks that connect() binds the socket\");\n+            System.out.println(\"Check that connect() binds the socket\");\n@@ -126,1 +126,1 @@\n-            System.out.println(\"Checks that send() binds the socket\");\n+            System.out.println(\"Check that send() binds the socket\");\n@@ -139,1 +139,1 @@\n-            System.out.println(\"Checks that blocking receive() binds the socket\");\n+            System.out.println(\"Check that blocking receive() binds the socket\");\n@@ -154,1 +154,1 @@\n-            System.out.println(\"Checks that non-blocking receive() binds the socket\");\n+            System.out.println(\"Check that non-blocking receive() binds the socket\");\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/NotBound.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}