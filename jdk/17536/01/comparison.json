{"files":[{"patch":"@@ -30,1 +30,1 @@\n- * @run testng\/othervm -ea -esa MaxStreams\n+ * @run testng\/othervm MaxStreams\n@@ -47,1 +47,0 @@\n-import java.util.concurrent.Semaphore;\n@@ -74,1 +73,0 @@\n-    volatile CountDownLatch latch;\n@@ -76,1 +74,0 @@\n-    final Semaphore canStartTestRun = new Semaphore(1);\n@@ -98,1 +95,1 @@\n-    @Test(dataProvider = \"uris\", timeOut=20000)\n+    @Test(dataProvider = \"uris\")\n@@ -100,3 +97,1 @@\n-        System.err.println(\"Semaphore acquire\");\n-        canStartTestRun.acquire();\n-        latch = new CountDownLatch(1);\n+        CountDownLatch latch = new CountDownLatch(1);\n@@ -209,1 +204,0 @@\n-            int c = -1;\n@@ -214,1 +208,1 @@\n-                c = counter.getAndIncrement();\n+                int c = counter.getAndIncrement();\n@@ -223,0 +217,6 @@\n+                } else if (c == MAX_STREAMS + 1) {\n+                    \/\/ client issues MAX_STREAMS + 3 requests in total\n+                    \/\/ but server should only see MAX_STREAMS + 2 in total. One is rejected by client\n+                    \/\/ counter c captured before increment so final value is MAX_STREAMS + 1\n+                    System.err.println(\"Counter reset\");\n+                    counter.set(0);\n@@ -226,9 +226,0 @@\n-            } finally {\n-                \/\/ client issues MAX_STREAMS + 3 requests in total\n-                \/\/ but server should only see MAX_STREAMS + 2 in total. One is rejected by client\n-                \/\/ counter c captured before increment so final value is MAX_STREAMS + 1\n-                if (c == MAX_STREAMS + 1) {\n-                    System.err.println(\"Semaphore release\");\n-                    counter.set(0);\n-                    canStartTestRun.release();\n-                }\n","filename":"test\/jdk\/java\/net\/httpclient\/MaxStreams.java","additions":10,"deletions":19,"binary":false,"changes":29,"status":"modified"}]}