{"files":[{"patch":"@@ -37,1 +37,0 @@\n- *             jdk.test.whitebox.WhiteBox$WhiteBoxPermission\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousConcurrentStartUndo.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -133,30 +133,0 @@\n-    \/\/ Add commonly used inner classes that are often omitted by mistake. Currently\n-    \/\/ we support only jdk\/test\/whitebox\/WhiteBox$WhiteBoxPermission.\n-    \/\/ See JDK-8199290\n-    private static String[] addInnerClasses(String[] classes, int startIdx) {\n-        boolean seenNewWb = false;\n-        boolean seenNewWbInner = false;\n-        \/\/ This method is different than ClassFileInstaller.addInnerClasses which\n-        \/\/ uses \".\" as the package delimiter :-(\n-        final String newWb = \"jdk\/test\/whitebox\/WhiteBox\";\n-        final String newWbInner = newWb + \"$WhiteBoxPermission\";\n-\n-        ArrayList<String> list = new ArrayList<>();\n-\n-        for (int i = startIdx; i < classes.length; i++) {\n-            String cls = classes[i];\n-            list.add(cls);\n-            switch (cls) {\n-            case newWb:      seenNewWb      = true; break;\n-            case newWbInner: seenNewWbInner = true; break;\n-            }\n-        }\n-        if (seenNewWb && !seenNewWbInner) {\n-            list.add(newWbInner);\n-        }\n-        String[] array = new String[list.size()];\n-        list.toArray(array);\n-        return array;\n-    }\n-\n-\n@@ -178,2 +148,0 @@\n-        classNames = addInnerClasses(classNames, 0);\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/JarBuilder.java","additions":0,"deletions":32,"binary":false,"changes":32,"status":"modified"}]}