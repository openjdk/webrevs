{"files":[{"patch":"@@ -1,1 +1,1 @@\n-#  Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+#  Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,3 @@\n+langtools_slow = \\\n+    jdk\/internal\/shellsupport\/doc\/FullJavadocHelperTest.java\n+\n@@ -81,1 +84,2 @@\n-    -:langtools_jshell_unstable\n+    -:langtools_jshell_unstable \\\n+    -:langtools_slow\n@@ -85,1 +89,2 @@\n-    :langtools_jshell_unstable\n+    :langtools_jshell_unstable \\\n+    :langtools_slow\n","filename":"test\/langtools\/TEST.groups","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8189778\n+ * @summary Test JavadocHelper\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.compiler\/jdk.internal.shellsupport.doc\n+ * @build toolbox.ToolBox toolbox.JarTask toolbox.JavacTask\n+ * @run testng\/timeout=900\/othervm -Xmx1024m FullJavadocHelperTest\n+ *\/\n+\n+import java.io.IOException;\n+\n+import org.testng.annotations.Test;\n+\n+@Test\n+public class FullJavadocHelperTest {\n+\n+    \/*\n+     * Long-running test to retrieve doc comments for enclosed elements of all JDK classes.\n+     *\/\n+    public void testAllDocs() throws IOException {\n+        new JavadocHelperTest().retrieveDocComments(Boolean.TRUE::booleanValue);\n+    }\n+}\n","filename":"test\/langtools\/jdk\/internal\/shellsupport\/doc\/FullJavadocHelperTest.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,2 @@\n- * @run testng\/timeout=900\/othervm -Xmx1024m JavadocHelperTest\n+ * @run testng JavadocHelperTest\n+ * @key randomness\n@@ -49,0 +50,2 @@\n+import java.util.Random;\n+import java.util.function.BooleanSupplier;\n@@ -386,1 +389,29 @@\n-    public void testAllDocs() throws IOException {\n+    private static long getSeed() {\n+        long seed;\n+        try {\n+            \/\/ Throws NumberFormatException if the property is undefined\n+            seed = Long.parseLong(System.getProperty(\"seed\"));\n+        } catch (NumberFormatException e) {\n+            seed = new Random().nextLong();\n+        }\n+        System.out.println(\"Random Seed: \" + seed);\n+        return seed;\n+    }\n+\n+    \/*\n+     * Retrieves doc comments for a random subset of JDK classes.\n+     * Set the system property `seed` to a random seed to reproduce\n+     * a specific run of this test.\n+     *\/\n+    public void testRandomDocs() throws IOException {\n+        Random random = new Random(getSeed());\n+        \/\/ Run test on 2% of classes, which corresponds to ~ 140 classes\n+        retrieveDocComments(() -> random.nextInt(100) < 2);\n+    }\n+\n+    \/**\n+     * Retrieve documentation of enclosed elements for some or all JDK classes.\n+     *\n+     * @param shouldTest oracle function to decide whether a class should be tested\n+     *\/\n+    protected void retrieveDocComments(BooleanSupplier shouldTest) throws IOException {\n@@ -411,1 +442,1 @@\n-                        compiler.getStandardFileManager(null, null, null)) {\n+                             compiler.getStandardFileManager(null, null, null)) {\n@@ -423,2 +454,4 @@\n-                                    for (Element el : clazz.getEnclosedElements()) {\n-                                        helper.getResolvedDocComment(el);\n+                                    if (shouldTest.getAsBoolean()) {\n+                                        for (Element el : clazz.getEnclosedElements()) {\n+                                            helper.getResolvedDocComment(el);\n+                                        }\n","filename":"test\/langtools\/jdk\/internal\/shellsupport\/doc\/JavadocHelperTest.java","additions":39,"deletions":6,"binary":false,"changes":45,"status":"modified"}]}