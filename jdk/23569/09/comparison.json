{"files":[{"patch":"@@ -0,0 +1,198 @@\n+<!doctype html>\n+<!--\n+ Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+ This code is free software; you can redistribute it and\/or modify it\n+ under the terms of the GNU General Public License version 2 only, as\n+ published by the Free Software Foundation.  Oracle designates this\n+ particular file as subject to the \"Classpath\" exception as provided\n+ by Oracle in the LICENSE file that accompanied this code.\n+\n+ This code is distributed in the hope that it will be useful, but WITHOUT\n+ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ version 2 for more details (a copy is included in the LICENSE file that\n+ accompanied this code).\n+\n+ You should have received a copy of the GNU General Public License version\n+ 2 along with this work; if not, write to the Free Software Foundation,\n+ Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+\n+ Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ or visit www.oracle.com if you need additional information or have any\n+ questions.\n+-->\n+<html lang=\"en\">\n+<head>\n+    <meta http-equiv=\"Content-Type\" content=\"text\/html; charset=UTF-8\">\n+    <title>Security-Related System Property<\/title>\n+    <style>\n+        #debug {\n+         border: 1px solid black;\n+         border-collapse: collapse;\n+         margin: 0 auto;\n+        }\n+        #debug caption {\n+          font-weight: bold;\n+          font-size: smaller;\n+        }\n+        #debug, #debug th, #debug td {\n+         border: 1px solid black;\n+         padding: 2px .5em;\n+        }\n+        #debug tbody th {\n+         font-weight: normal;\n+         text-align:left;\n+        }\n+    <\/style>\n+<\/head>\n+<body LANG=\"en-US\" DIR=\"LTR\">\n+<H1 style=\"text-align:center\">Security-Related System Property<\/H1>\n+<p>\n+    There are several system properties used to\n+    alter the mechanisms and behavior of the various classes of the\n+    <code>java.security<\/code> package. Some are checked only once at startup of the VM,\n+    and therefore are best set using the <code>-D<\/code> option of the java command,\n+    while others have a more dynamic nature and can also be changed using\n+    the <a href=\"..\/..\/lang\/System.html#setProperty(java.lang.String,java.lang.String)\"><code>System.setProperty()<\/code><\/a> API.\n+    <\/P>\n+<a id=\"security.debug\"><\/a>\n+<H2>Debug<\/H2>\n+<p><B>{@systemProperty java.security.debug}<\/B><BR><\/p>\n+<H3>Printing Thread and Timestamp Information<\/H3>\n+<p>\n+    You can append the following strings to the value specified in the <code>java.security.debug<\/code>\n+    system property to print additional information:\n+<ul>\n+    <li><code>+thread<\/code>:Print thread and caller information<\/li>\n+    <li><code>+timestamp<\/code>:Print timestamp information<\/li>\n+<\/ul>\n+<p>\n+    For example, to add thread, caller, and timestamp information to all debuging output,\n+    set the <code>java.security.debug<\/code> system property on the command line as follows:\n+    <pre><code>java -Djava.security.debug=all+thread+timestamp MyApp<\/code><\/pre>\n+        <p> To monitor security access, you can set the <code>java.security.debug<\/code> system property,\n+            which determines what trace messages are printed during execution. The value of the property is one or more options separated by a comma.\n+            Some options also have additional sub-options. Sub-options are specified by appending a \":\" to the option, followed by a list of one more sub-options separated by a comma.\n+            For example, to specify the <code>ocsp<\/code> and <code>verbose<\/code> options with the <code>certpath<\/code> option: set the property to \"<code>certpath:ocsp,verbose<\/code>\".\n+            See the list below for more details on the syntax of each.\n+            The following table lists <code>java.security.debug<\/code> options table:<\/p>\n+\n+<table id=\"debug\">\n+    <caption><b>Security Debug Options<\/b><\/caption>\n+    <thead>\n+    <tr>\n+        <th scope=\"col\">Option<\/th>\n+        <th scope=\"col\">Description<\/th>\n+    <\/tr>\n+    <\/thead>\n+    <tbody>\n+    <tr>\n+        <th scope=\"row\"><code>all<\/code><\/th>\n+        <td>Turn on all the debugging options<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>certpath<\/code><\/th>\n+        <td>Turns on debugging for the PKIX <code>CertPathValidator<\/code> and <code>CertPathBuilder<\/code> implementations. Use the <code>ocsp<\/code> sub-option with the <code>certpath<\/code> option for OCSP protocol tracing. A hexadecimal dump of the OCSP request and response bytes is displayed.\n+            You can use the following sub-options with the <code>certpath<\/code> option:\n+            <ul>\n+                <li><code><b>ocsp<\/b><\/code>: Dump OCSP protocol exchanges<\/li>\n+                <li><code><b>verbose<\/b><\/code>: Print additional debugging information<\/li>\n+            <\/ul>\n+        <\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>configfile<\/code><\/th>\n+        <td>JAAS (Java Authentication and Authorization Service) configuration file loading<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>configparser<\/code><\/th>\n+        <td>JAAS configuration file parsing<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>gssloginconfig<\/code><\/th>\n+        <td>Java GSS (Generic Security Services) login configuration file debugging<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>jar<\/code><\/th>\n+        <td>JAR file verification<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>jca<\/code><\/th>\n+        <td>JCA engine class debugging<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>KeyStore<\/code><\/th>\n+        <td><code>KeyStore<\/code> debugging<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>logincontext<\/code><\/th>\n+        <td><code>LoginContext<\/code> results<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>pcsc<\/code><\/th>\n+        <td>Java Smart Card I\/O and SunPCSC provider debugging<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>pkcs11<\/code><\/th>\n+        <td>PKCS11 session manager debugging<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>pkcs11keystore<\/code><\/th>\n+        <td>PKCS11 <code>KeyStore<\/code> debugging<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>pkcs12<\/code><\/th>\n+        <td>PKCS12 <code>KeyStore<\/code> debugging<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>properties<\/code><\/th>\n+        <td><code>java.security<\/code> configuration file debugging<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>provider<\/code><\/th>\n+        <td>Security provider debugging. The following engines can be used with the <code>provider<\/code> sub-option:\n+            <code>engine=(engines)<\/code> : The output is displayed only for a specified list of JCA engines.\n+            The supported values for (engines) are:\n+            <ul>\n+                <li><code>Cipher<\/code><\/li>\n+                <li><code>KeyAgreement<\/code><\/li>\n+                <li><code>KeyGenerator<\/code><\/li>\n+                <li><code>KeyPairGenerator<\/code><\/li>\n+                <li><code>KeyStore<\/code><\/li>\n+                <li><code>Mac<\/code><\/li>\n+                <li><code>MessageDigest<\/code><\/li>\n+                <li><code>SecureRandom<\/code><\/li>\n+                <li><code>Signature<\/code><\/li>\n+            <\/ul>\n+        <\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>scl<\/code><\/th>\n+        <td>Permissions that <code>SecureClassLoader<\/code> assigns<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>securerandom<\/code><\/th>\n+        <td><code>SecureRandom<\/code> debugging<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>sunpkcs11<\/code><\/th>\n+        <td>SunPKCS11 provider debugging<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>ts<\/code><\/th>\n+        <td>Timestamping debugging<\/td>\n+    <\/tr>\n+    <tr>\n+        <th scope=\"row\"><code>x509<\/code><\/th>\n+        <td>X.509 certificate debugging. You can use the following sub-option with <code>X.509<\/code>\n+            <ul>\n+                <li><code><b>ava<\/b><\/code>: Embed non-printable\/non-escaped characters in AVA components as hex strings<\/li>\n+            <\/ul>\n+        <\/td>\n+    <\/tr>\n+    <\/tbody>\n+<\/table>\n+<\/body>\n+<\/html>\n","filename":"src\/java.base\/share\/classes\/java\/security\/doc-files\/security-related-system-properties.html","additions":198,"deletions":0,"binary":false,"changes":198,"status":"added"},{"patch":"@@ -74,0 +74,6 @@\n+ * <h2>Additional Specification<\/h2>\n+ * <ul>\n+ *   <li><a href=\"doc-files\/security-related-system-properties.html\">\n+ *     Security-Related System Properties<\/a><\/li>\n+ * <\/ul>\n+ *\n","filename":"src\/java.base\/share\/classes\/java\/security\/package-info.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}