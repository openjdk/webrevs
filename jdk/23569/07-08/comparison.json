{"files":[{"patch":"@@ -29,1 +29,1 @@\n-    <title>Security-Related System Properties<\/title>\n+    <title>Security-Related System Property<\/title>\n@@ -51,1 +51,1 @@\n-<H1 style=\"text-align:center\">Security-Related System Properties<\/H1>\n+<H1 style=\"text-align:center\">Security-Related System Property<\/H1>\n@@ -63,0 +63,13 @@\n+<H2>Printing Thread and Timestamp Information<\/H2>\n+<p>\n+    You can append the following strings to the value specified in the <code>java.security.debug<\/code>\n+    system property to print additional information:\n+<ul>\n+    <li><code>+thread:<\/code>Print thread and caller information<\/li>\n+    <li><code>+timestamp:<\/code>Print timestamp information<\/li>\n+<\/ul>\n+<p>\n+    For example, to add thread, caller, and timestamp information to all debuging output,\n+    set the <code>java.security.debug<\/code> system property on the command line as follows:<br>\n+    <code>java -Djava.security.debug=all+thread+timestamp MyApp<\/code>\n+<\/p>\n@@ -65,1 +78,3 @@\n-            Some options also have additional sub-options; see the list below for more details on the syntax of each.\n+            Some options also have additional sub-options. Sub-options are specified by appending a \":\" to the option, followed by a list of one more sub-options separated by a comma.\n+            For example, to specify the <code>ocsp<\/code> and <code>verbose<\/code> options with the <code>certpath<\/code> option: set the property to <code>\"certpath:ocsp,verbose\"<\/code>.\n+            See the list below for more details on the syntax of each.\n@@ -83,2 +98,2 @@\n-        <td>Turns on debugging for the PKIX CertPathValidator and CertPathBuilder implementations. Use the ocsp sub-option with the certpath option for OCSP protocol tracing. A hexadecimal dump of the OCSP request and response bytes is displayed.\n-            You can use the following sub-options with the certpath option:\n+        <td>Turns on debugging for the PKIX <code>CertPathValidator<\/code> and <code>CertPathBuilder<\/code> implementations. Use the <code>ocsp<\/code> sub-option with the <code>certpath<\/code> option for OCSP protocol tracing. A hexadecimal dump of the OCSP request and response bytes is displayed.\n+            You can use the following sub-options with the <code>certpath<\/code> option:\n@@ -112,1 +127,1 @@\n-        <th scope=\"row\"><code>SeyStore<\/code><\/th>\n+        <th scope=\"row\"><code>KeyStore<\/code><\/th>\n@@ -117,1 +132,1 @@\n-        <td>LoginContext results<\/td>\n+        <td><code>LoginContext<\/code> results<\/td>\n@@ -141,2 +156,2 @@\n-        <td>Security provider debugging. The following engines can be used with the `provider` sub-option:\n-            `engine=(engines)` : The output is displayed only for a specified list of JCA engines.\n+        <td>Security provider debugging. The following engines can be used with the <code>`provider`<\/code> sub-option:\n+            <code>`engine=(engines)`<\/code> : The output is displayed only for a specified list of JCA engines.\n@@ -159,1 +174,1 @@\n-        <td>Permissions that SecureClassLoader assigns<\/td>\n+        <td>Permissions that <code>SecureClassLoader<\/code> assigns<\/td>\n@@ -163,1 +178,1 @@\n-        <td>SecureRandom debugging<\/td>\n+        <td><code>SecureRandom<\/code> debugging<\/td>\n@@ -175,1 +190,1 @@\n-        <td>X.509 certificate debugging. You can use the following sub-option with X.509\n+        <td><code>X.509<\/code> certificate debugging. You can use the following sub-option with <code>X.509<\/code>\n@@ -183,13 +198,0 @@\n-<H2>Printing Thread and Timestamp Information<\/H2>\n-<p>\n-    You can append the following strings to the value specified in the <code>java.security.debug<\/code>\n-    system property to print additional information:\n-<ul>\n-    <li><code>+thread:<\/code>Print thread and caller information<\/li>\n-    <li><code>+timestamp:<\/code>Print timestamp information<\/li>\n-<\/ul>\n-<p>\n-    For example, to add thread, caller, and timestamp information to all debuging output,\n-    set the <code>java.security.debug<\/code> system property on the command line as follows:<br>\n-    <code>java -Djava.security.debug=all+thread+timestamp MyApp<\/code>\n-<\/p>\n","filename":"src\/java.base\/share\/classes\/java\/security\/doc-files\/security-related-system-properties.html","additions":27,"deletions":25,"binary":false,"changes":52,"status":"modified"}]}