{"files":[{"patch":"@@ -363,1 +363,0 @@\n-    Register tmp2 = rbx;\n@@ -365,9 +364,4 @@\n-    __ push(tmp2);\n-    \/\/ Load without verification to keep code size small. We need it because\n-    \/\/ begin_initialized_entry_offset has to fit in a byte. Also, we know it's not null.\n-    __ movptr(tmp2, Address(_obj, java_lang_Class::klass_offset()));\n-    __ get_thread(tmp);\n-    __ cmpptr(tmp, Address(tmp2, InstanceKlass::init_thread_offset()));\n-    __ pop(tmp2);\n-    __ pop(tmp);\n-    __ jcc(Assembler::notEqual, call_patch);\n+    __ movptr(tmp, Address(_obj, java_lang_Class::klass_offset()));\n+    __ cmpptr(r15_thread, Address(tmp, InstanceKlass::init_thread_offset()));\n+    __ pop(tmp); \/\/ pop it right away, no matter which path we take\n+    __ jccb(Assembler::notEqual, call_patch);\n","filename":"src\/hotspot\/cpu\/x86\/c1_CodeStubs_x86.cpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"}]}