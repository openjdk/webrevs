{"files":[{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/**\n+ * @test\n+ * @bug 8319850\n+ * @summary PrintInlining should print which methods are late inlines\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ * @requires vm.flagless\n+ *\n+ * @run driver compiler.inlining.LateInlinePrinting\n+ *\/\n+\n+package compiler.inlining;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class LateInlinePrinting {\n+    public static class TestLateInlining {\n+        public static void main(String[] args) {\n+            for (int i = 0; i < 20_000; i++) {\n+                test1();\n+            }\n+        }\n+\n+        private static void test1() {\n+            inlined1();\n+        }\n+\n+        private static void inlined1() {}\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            \"-XX:-TieredCompilation\", \"-XX:-UseOnStackReplacement\", \"-XX:-BackgroundCompilation\",\n+            \"-XX:+PrintCompilation\",\n+            \"-XX:CompileCommand=compileonly,compiler.inlining.LateInlinePrinting$TestLateInlining::test1\",\n+            \"-XX:CompileCommand=quiet\", \"-XX:+PrintInlining\", \"-XX:+AlwaysIncrementalInline\",\n+            TestLateInlining.class.getName()\n+        );\n+\n+        OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n+        analyzer.shouldHaveExitValue(0);\n+\n+        String re = \".*TestLateInlining::inlined1 \\\\(1 bytes\\\\)\\\\s*inline \\\\(hot\\\\);\\\\s*late inline succeeded.*\";\n+        boolean foundMessage = analyzer.asLines().stream()\n+                .anyMatch(s -> s.matches(re));\n+\n+        if (!foundMessage) {\n+            analyzer.outputTo(System.out);\n+            throw new Exception(\"late inline message not printed\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/inlining\/LateInlinePrinting.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"}]}