{"files":[{"patch":"@@ -1734,3 +1734,1 @@\n-    case Op_ModI:\n-    case Op_UDivI:\n-    case Op_UModI: {\n+    case Op_ModI: {\n@@ -1746,3 +1744,1 @@\n-    case Op_ModL:\n-    case Op_UDivL:\n-    case Op_UModL: {\n+    case Op_ModL: {\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -77,2 +77,0 @@\n-        Integer.divideUnsigned(2, 3);\n-        Long.divideUnsigned(2, 3);\n@@ -90,10 +88,0 @@\n-            testPushUDivLThruPhiForOuterLongLoop();\n-            testPushUModLThruPhiForOuterLongLoop();\n-            testPushUDivIThruPhi();\n-            testPushUDivIThruPhiInChain();\n-            testPushUModIThruPhi();\n-            testPushUModIThruPhiInChain();\n-            testPushUDivLThruPhi();\n-            testPushUDivLThruPhiInChain();\n-            testPushUModLThruPhi();\n-            testPushUModLThruPhiInChain();\n@@ -217,110 +205,0 @@\n-\n-    \/\/ Same as above but with UDivI.\n-    static void testPushUDivIThruPhi() {\n-        for (int i = 10; i > 1; i -= 2) {\n-            lFld = Integer.divideUnsigned(10, i);\n-\n-            \/\/ Loop that is not removed such that we do not transform the outer LongCountedLoop (only done if innermost)\n-            for (int j = 0; j < 10; j++) {\n-                flag = !flag;\n-            }\n-        }\n-    }\n-\n-    \/\/ Same as above but with UDivI.\n-    static void testPushUDivIThruPhiInChain() {\n-        for (int i = 10; i > 1; i -= 2) {\n-            for (int j = 0; j < 1; j++) {\n-            }\n-            lFld = Integer.divideUnsigned(10, (i * 100));\n-\n-            for (int j = 0; j < 10; j++) {\n-                flag = !flag;\n-            }\n-        }\n-    }\n-\n-    \/\/ Same as above but with UModI\n-    static void testPushUModIThruPhi() {\n-        for (int i = 10; i > 1; i -= 2) {\n-            lFld = Integer.remainderUnsigned(10, i);\n-\n-            for (int j = 0; j < 10; j++) {\n-                flag = !flag;\n-            }\n-        }\n-    }\n-\n-    \/\/ Same as above but with UModI\n-    static void testPushUModIThruPhiInChain() {\n-        for (int i = 10; i > 1; i -= 2) {\n-            for (int j = 0; j < 1; j++) {\n-            }\n-            lFld = Integer.remainderUnsigned(10, (i * 100));\n-\n-            for (int j = 0; j < 10; j++) {\n-                flag = !flag;\n-            }\n-        }\n-    }\n-\n-    \/\/ Same as above but with UDivL.\n-    static void testPushUDivLThruPhi() {\n-        for (long i = 10; i > 1; i -= 2) {\n-            lFld = Long.divideUnsigned(10L, i);\n-\n-            \/\/ Loop that is not removed such that we do not transform the outer LongCountedLoop (only done if innermost)\n-            for (int j = 0; j < 10; j++) {\n-                flag = !flag;\n-            }\n-        }\n-    }\n-\n-    \/\/ Same as above but with UDivL.\n-    static void testPushUDivLThruPhiInChain() {\n-        for (long i = 10; i > 1; i -= 2) {\n-            for (int j = 0; j < 1; j++) {\n-            }\n-            lFld = Long.divideUnsigned(10L, (i * 100L));\n-\n-            for (int j = 0; j < 10; j++) {\n-                flag = !flag;\n-            }\n-        }\n-    }\n-\n-    \/\/ Same as above but with UModL\n-    static void testPushUModLThruPhi() {\n-        for (long i = 10; i > 1; i -= 2) {\n-            lFld = Long.remainderUnsigned(10L, i);\n-\n-            for (int j = 0; j < 10; j++) {\n-                flag = !flag;\n-            }\n-        }\n-    }\n-\n-    \/\/ Same as above but with UModL\n-    static void testPushUModLThruPhiInChain() {\n-        for (long i = 10; i > 1; i -= 2) {\n-            for (int j = 0; j < 1; j++) {\n-            }\n-            lFld = Long.remainderUnsigned(10L, (i * 100L));\n-\n-            for (int j = 0; j < 10; j++) {\n-                flag = !flag;\n-            }\n-        }\n-    }\n-\n-    static void testPushUDivLThruPhiForOuterLongLoop() {\n-        for (long i = 10; i > 1; i -= 2) {\n-            lFld = Long.divideUnsigned(10, i);\n-        }\n-    }\n-\n-    static void testPushUModLThruPhiForOuterLongLoop() {\n-        for (int i = 10; i > 1; i -= 2) {\n-            iFld = Integer.remainderUnsigned(10, i);\n-        }\n-    }\n","filename":"test\/hotspot\/jtreg\/compiler\/splitif\/TestSplitDivisionThroughPhi.java","additions":0,"deletions":122,"binary":false,"changes":122,"status":"modified"}]}