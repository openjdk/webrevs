{"files":[{"patch":"@@ -434,0 +434,4 @@\n+  print_inline_inner_method_info(st, method);\n+}\n+\n+void CompileTask::print_inline_inner_method_info(outputStream* st, ciMethod* method) {\n","filename":"src\/hotspot\/share\/compiler\/compileTask.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -243,0 +243,1 @@\n+  static void print_inline_inner_method_info(outputStream* st, ciMethod* method);\n","filename":"src\/hotspot\/share\/compiler\/compileTask.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,2 +31,1 @@\n-InlinePrinter::InlinePrinter(Arena* arena, bool enabled) : _enabled(enabled), _root(new(arena) IPInlineSite(nullptr, arena, 0)) {\n-}\n+InlinePrinter::InlinePrinter(Arena* arena, bool enabled) : _enabled(enabled), _root(new(arena) IPInlineSite(nullptr, arena, 0)) {}\n@@ -71,1 +70,6 @@\n-  if (auto child = _children.at(index)) {\n+  if (IPInlineSite* child = _children.at(index)) {\n+    if (callee != nullptr && callee != child->_method) {\n+      IPInlineAttempt* attempt = child->add(InliningResult::SUCCESS);\n+      attempt->msg.print(\"callee changed to \");\n+      CompileTask::print_inline_inner_method_info(&attempt->msg, callee);\n+    }\n","filename":"src\/hotspot\/share\/opto\/printinlining.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-            \"@ (\\\\d+)\\\\s+java\\\\.lang\\\\.invoke\\\\.LambdaForm\\\\$DMH\\\\\/0x[0-9a-f]+::invokeStatic \\\\(\\\\d+ bytes\\\\)\\\\s+force inline by annotation\",\n+            \"@ (\\\\d+)\\\\s+java\\\\.lang\\\\.invoke\\\\.MethodHandle::invokeBasic\\\\(\\\\)V \\\\(\\\\d+ bytes\\\\)\\\\s+failed to inline: receiver not constant\\\\s+callee changed to\\\\s+java\\\\.lang\\\\.invoke\\\\.LambdaForm\\\\$DMH\\\\\/0x[0-9a-f]+::invokeStatic \\\\(\\\\d+ bytes\\\\)\\\\s+force inline by annotation\\\\s+late inline succeeded \\\\(method handle\\\\)\",\n@@ -53,1 +53,1 @@\n-            \"@ (\\\\d+)\\\\s+compiler\\\\.inlining\\\\.TestDuplicatedLateInliningOutput\\\\$VirtualCallLauncher\\\\$B::lateInlined2 \\\\(\\\\d+ bytes\\\\)\\\\s+inline \\\\(hot\\\\)\",\n+            \"@ (\\\\d+)\\\\s+compiler\\\\.inlining\\\\.TestDuplicatedLateInliningOutput\\\\$VirtualCallLauncher\\\\$A::lateInlined2 \\\\(\\\\d+ bytes\\\\)\\\\s+failed to inline: virtual call\\\\s+callee changed to\\\\s+\\\\s+compiler\\\\.inlining\\\\.TestDuplicatedLateInliningOutput\\\\$VirtualCallLauncher\\\\$B::lateInlined2 \\\\(\\\\d+ bytes\\\\)\\\\s+inline \\\\(hot\\\\)\\\\s+late inline succeeded\",\n@@ -78,1 +78,1 @@\n-                .orElseThrow(() -> new Exception(\"No inlining found\"));\n+                .orElseThrow(() -> new Exception(\"No inlining found\" + pattern1));\n","filename":"test\/hotspot\/jtreg\/compiler\/inlining\/TestDuplicatedLateInliningOutput.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}