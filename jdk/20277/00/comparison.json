{"files":[{"patch":"@@ -36,0 +36,1 @@\n+#include \"runtime\/timer.hpp\"\n@@ -91,0 +92,8 @@\n+void GCLocker::log_debug_jni(const char* msg, const elapsedTimer elapsed_timer) {\n+  Log(gc, jni) log;\n+  if (log.is_debug()) {\n+    ResourceMark rm; \/\/ JavaThread::name() allocates to convert to UTF8\n+    log.debug(\"%s \" JLONG_FORMAT \"ms. Thread \\\"%s\\\" %d locked.\", msg, elapsed_timer.milliseconds(), Thread::current()->name(), _jni_lock_count);\n+  }\n+}\n+\n@@ -115,0 +124,3 @@\n+  elapsedTimer elapsed_timer;\n+  elapsed_timer.start();\n+\n@@ -119,0 +131,3 @@\n+\n+  elapsed_timer.stop();\n+  log_debug_jni(\"Resuming thread after allocation stall due to JNI critical section after\", elapsed_timer);\n@@ -130,0 +145,5 @@\n+  if (needs_gc()) {\n+    log_debug_jni(\"Blocking thread as there is a pending GC request\");\n+  }\n+  elapsedTimer elapsed_timer;\n+  elapsed_timer.start();\n@@ -141,0 +161,2 @@\n+  elapsed_timer.stop();\n+  log_debug_jni(\"Thread unblocked to enter critical region after\", elapsed_timer);\n@@ -151,0 +173,1 @@\n+  log_debug_jni(\"Thread exiting critical region.\");\n@@ -164,1 +187,1 @@\n-      log_debug_jni(\"Performing GC after exiting critical section.\");\n+      log_debug_jni(\"Last thread exiting. Performing GC after exiting critical section.\");\n","filename":"src\/hotspot\/share\/gc\/shared\/gcLocker.cpp","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"runtime\/timer.hpp\"\n@@ -69,0 +70,1 @@\n+  static void log_debug_jni(const char* msg, const elapsedTimer elapsed_timer);\n","filename":"src\/hotspot\/share\/gc\/shared\/gcLocker.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}