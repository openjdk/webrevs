{"files":[{"patch":"@@ -687,1 +687,2 @@\n-  static constexpr uint32_t OP_LOAD_MAJOR = 0b0000011;\n+  static constexpr uint8_t OP_LOAD_MAJOR    = 0b0000011;\n+  static constexpr uint8_t OP_FP_LOAD_MAJOR = 0b0000111;\n@@ -689,2 +690,2 @@\n-  template <LoadWidthFunct3 width>\n-  void load_base(Register Rd, Register Rs, const int32_t offset) {\n+  template <uint8_t op_major, LoadWidthFunct3 width>\n+  void load_base(uint8_t Rd, Register Rs, const int32_t offset) {\n@@ -694,2 +695,2 @@\n-    patch((address)&insn,  6,  0, OP_LOAD_MAJOR);\n-    patch_reg((address)&insn,  7, Rd);\n+    patch((address)&insn,  6,  0, op_major);\n+    patch((address)&insn, 11,  7, Rd);\n@@ -702,0 +703,10 @@\n+  template <LoadWidthFunct3 width>\n+  void load_base(Register Rd, Register Rs, const int32_t offset) {\n+    load_base<OP_LOAD_MAJOR, width>(Rd->raw_encoding(), Rs, offset);\n+  }\n+\n+  template <LoadWidthFunct3 width>\n+  void load_base(FloatRegister Rd, Register Rs, const int32_t offset) {\n+    load_base<OP_FP_LOAD_MAJOR, width>(Rd->raw_encoding(), Rs, offset);\n+  }\n+\n@@ -732,0 +743,12 @@\n+  void flh(FloatRegister Rd, Register Rs, const int32_t offset) {\n+    load_base<LOAD_WIDTH_HALFWORD>(Rd, Rs, offset);\n+  }\n+\n+  void flw(FloatRegister Rd, Register Rs, const int32_t offset) {\n+    load_base<LOAD_WIDTH_WORD>(Rd, Rs, offset);\n+  }\n+\n+  void _fld(FloatRegister Rd, Register Rs, const int32_t offset) {\n+    load_base<LOAD_WIDTH_DOUBLEWORD>(Rd, Rs, offset);\n+  }\n+\n@@ -771,2 +794,2 @@\n-  static constexpr uint32_t OP_STORE_MAJOR    = 0b0100011;\n-  static constexpr uint32_t OP_FP_STORE_MAJOR = 0b0100111;\n+  static constexpr uint8_t OP_STORE_MAJOR    = 0b0100011;\n+  static constexpr uint8_t OP_FP_STORE_MAJOR = 0b0100111;\n@@ -790,0 +813,10 @@\n+  template <StoreWidthFunct3 width>\n+  void store_base(Register Rs2, Register Rs1, const int32_t offset) {\n+    store_base<OP_STORE_MAJOR, width>(Rs2->raw_encoding(), Rs1, offset);\n+  }\n+\n+  template <StoreWidthFunct3 width>\n+  void store_base(FloatRegister Rs2, Register Rs1, const int32_t offset) {\n+    store_base<OP_FP_STORE_MAJOR, width>(Rs2->raw_encoding(), Rs1, offset);\n+  }\n+\n@@ -793,1 +826,1 @@\n-    store_base<OP_STORE_MAJOR, STORE_WIDTH_BYTE>(Rs2->raw_encoding(), Rs1, offset);\n+    store_base<STORE_WIDTH_BYTE>(Rs2, Rs1, offset);\n@@ -797,1 +830,1 @@\n-    store_base<OP_STORE_MAJOR, STORE_WIDTH_HALFWORD>(Rs2->raw_encoding(), Rs1, offset);\n+    store_base<STORE_WIDTH_HALFWORD>(Rs2, Rs1, offset);\n@@ -801,1 +834,1 @@\n-    store_base<OP_STORE_MAJOR, STORE_WIDTH_WORD>(Rs2->raw_encoding(), Rs1, offset);\n+    store_base<STORE_WIDTH_WORD>(Rs2, Rs1, offset);\n@@ -805,1 +838,1 @@\n-    store_base<OP_STORE_MAJOR, STORE_WIDTH_DOUBLEWORD>(Rs2->raw_encoding(), Rs1, offset);\n+    store_base<STORE_WIDTH_DOUBLEWORD>(Rs2, Rs1, offset);\n@@ -809,1 +842,1 @@\n-    store_base<OP_FP_STORE_MAJOR, STORE_WIDTH_WORD>(Rs2->raw_encoding(), Rs1, offset);\n+    store_base<STORE_WIDTH_WORD>(Rs2, Rs1, offset);\n@@ -813,1 +846,1 @@\n-    store_base<OP_FP_STORE_MAJOR, STORE_WIDTH_DOUBLEWORD>(Rs2->raw_encoding(), Rs1, offset);\n+    store_base<STORE_WIDTH_DOUBLEWORD>(Rs2, Rs1, offset);\n@@ -1412,23 +1445,0 @@\n- private:\n-  static constexpr unsigned int OP_LOAD_FP = 0b0000111;\n-\n-  template <int8_t FpWidth>\n-  void fp_load(FloatRegister Rd, Register Rs, const int32_t offset) {\n-    guarantee(is_uimm3(FpWidth), \"Rounding mode is out of validity\");\n-    guarantee(is_simm12(offset), \"offset is invalid.\");\n-    unsigned insn = 0;\n-    uint32_t val = offset & 0xfff;\n-    patch((address)&insn,   6, 0, OP_LOAD_FP);\n-    patch_reg((address)&insn,  7, Rd);\n-    patch((address)&insn, 14, 12, FpWidth);\n-    patch_reg((address)&insn, 15, Rs);\n-    patch((address)&insn, 31, 20, val);\n-    emit(insn);\n-  }\n-\n- public:\n-\n-  void  flh(FloatRegister Rd, Register Rs, const int32_t offset) { fp_load<0b001>(Rd, Rs, offset); }\n-  void  flw(FloatRegister Rd, Register Rs, const int32_t offset) { fp_load<0b010>(Rd, Rs, offset); }\n-  void _fld(FloatRegister Rd, Register Rs, const int32_t offset) { fp_load<0b011>(Rd, Rs, offset); }\n-\n@@ -3252,13 +3262,12 @@\n-#define INSN(NAME)                                                                           \\\n-  void NAME(Register Rd, Register Rs, const int32_t offset) {                                \\\n-    \/* lw -> c.lwsp\/c.lw *\/                                                                  \\\n-    if (do_compress()) {                                                                     \\\n-      if (is_c_lwswsp(Rs, Rd, offset, true)) {                                               \\\n-        c_lwsp(Rd, offset);                                                                  \\\n-        return;                                                                              \\\n-      } else if (is_c_lwsw(Rs, Rd, offset)) {                                                \\\n-        c_lw(Rd, Rs, offset);                                                                \\\n-        return;                                                                              \\\n-      }                                                                                      \\\n-    }                                                                                        \\\n-    _lw(Rd, Rs, offset);                                                                     \\\n+  void lw(Register Rd, Register Rs, const int32_t offset) {\n+    \/* lw -> c.lwsp\/c.lw *\/\n+    if (do_compress()) {\n+      if (is_c_lwswsp(Rs, Rd, offset, true)) {\n+        c_lwsp(Rd, offset);\n+        return;\n+      } else if (is_c_lwsw(Rs, Rd, offset)) {\n+        c_lw(Rd, Rs, offset);\n+        return;\n+      }\n+    }\n+    _lw(Rd, Rs, offset);\n@@ -3267,4 +3276,0 @@\n-  INSN(lw);\n-\n-#undef INSN\n-\n@@ -3272,13 +3277,12 @@\n-#define INSN(NAME)                                                                           \\\n-  void NAME(Register Rd, Register Rs, const int32_t offset) {                                \\\n-    \/* ld -> c.ldsp\/c.ld *\/                                                                  \\\n-    if (do_compress()) {                                                                     \\\n-      if (is_c_ldsdsp(Rs, Rd, offset, true)) {                                               \\\n-        c_ldsp(Rd, offset);                                                                  \\\n-        return;                                                                              \\\n-      } else if (is_c_ldsd(Rs, Rd, offset)) {                                                \\\n-        c_ld(Rd, Rs, offset);                                                                \\\n-        return;                                                                              \\\n-      }                                                                                      \\\n-    }                                                                                        \\\n-    _ld(Rd, Rs, offset);                                                                     \\\n+  void ld(Register Rd, Register Rs, const int32_t offset) {\n+    \/* ld -> c.ldsp\/c.ld *\/\n+    if (do_compress()) {\n+      if (is_c_ldsdsp(Rs, Rd, offset, true)) {\n+        c_ldsp(Rd, offset);\n+        return;\n+      } else if (is_c_ldsd(Rs, Rd, offset)) {\n+        c_ld(Rd, Rs, offset);\n+        return;\n+      }\n+    }\n+    _ld(Rd, Rs, offset);\n@@ -3287,4 +3291,0 @@\n-  INSN(ld);\n-\n-#undef INSN\n-\n@@ -3292,13 +3292,12 @@\n-#define INSN(NAME)                                                                           \\\n-  void NAME(FloatRegister Rd, Register Rs, const int32_t offset) {                           \\\n-    \/* fld -> c.fldsp\/c.fld *\/                                                               \\\n-    if (do_compress()) {                                                                     \\\n-      if (is_c_fldsdsp(Rs, offset)) {                                                        \\\n-        c_fldsp(Rd, offset);                                                                 \\\n-        return;                                                                              \\\n-      } else if (is_c_fldsd(Rs, Rd, offset)) {                                               \\\n-        c_fld(Rd, Rs, offset);                                                               \\\n-        return;                                                                              \\\n-      }                                                                                      \\\n-    }                                                                                        \\\n-    _fld(Rd, Rs, offset);                                                                    \\\n+  void fld(FloatRegister Rd, Register Rs, const int32_t offset) {\n+    \/* fld -> c.fldsp\/c.fld *\/\n+    if (do_compress()) {\n+      if (is_c_fldsdsp(Rs, offset)) {\n+        c_fldsp(Rd, offset);\n+        return;\n+      } else if (is_c_fldsd(Rs, Rd, offset)) {\n+        c_fld(Rd, Rs, offset);\n+        return;\n+      }\n+    }\n+    _fld(Rd, Rs, offset);\n@@ -3307,4 +3306,0 @@\n-  INSN(fld);\n-\n-#undef INSN\n-\n@@ -3312,13 +3307,12 @@\n-#define INSN(NAME)                                                                           \\\n-  void NAME(Register Rd, Register Rs, const int32_t offset) {                                \\\n-    \/* sd -> c.sdsp\/c.sd *\/                                                                  \\\n-    if (do_compress()) {                                                                     \\\n-      if (is_c_ldsdsp(Rs, Rd, offset, false)) {                                              \\\n-        c_sdsp(Rd, offset);                                                                  \\\n-        return;                                                                              \\\n-      } else if (is_c_ldsd(Rs, Rd, offset)) {                                                \\\n-        c_sd(Rd, Rs, offset);                                                                \\\n-        return;                                                                              \\\n-      }                                                                                      \\\n-    }                                                                                        \\\n-    _sd(Rd, Rs, offset);                                                                     \\\n+  void sd(Register Rd, Register Rs, const int32_t offset) {\n+    \/* sd -> c.sdsp\/c.sd *\/\n+    if (do_compress()) {\n+      if (is_c_ldsdsp(Rs, Rd, offset, false)) {\n+        c_sdsp(Rd, offset);\n+        return;\n+      } else if (is_c_ldsd(Rs, Rd, offset)) {\n+        c_sd(Rd, Rs, offset);\n+        return;\n+      }\n+    }\n+    _sd(Rd, Rs, offset);\n@@ -3327,4 +3321,0 @@\n-  INSN(sd);\n-\n-#undef INSN\n-\n@@ -3332,13 +3322,12 @@\n-#define INSN(NAME)                                                                           \\\n-  void NAME(Register Rd, Register Rs, const int32_t offset) {                                \\\n-    \/* sw -> c.swsp\/c.sw *\/                                                                  \\\n-    if (do_compress()) {                                                                     \\\n-      if (is_c_lwswsp(Rs, Rd, offset, false)) {                                              \\\n-        c_swsp(Rd, offset);                                                                  \\\n-        return;                                                                              \\\n-      } else if (is_c_lwsw(Rs, Rd, offset)) {                                                \\\n-        c_sw(Rd, Rs, offset);                                                                \\\n-        return;                                                                              \\\n-      }                                                                                      \\\n-    }                                                                                        \\\n-    _sw(Rd, Rs, offset);                                                                     \\\n+  void sw(Register Rd, Register Rs, const int32_t offset) {\n+    \/* sw -> c.swsp\/c.sw *\/\n+    if (do_compress()) {\n+      if (is_c_lwswsp(Rs, Rd, offset, false)) {\n+        c_swsp(Rd, offset);\n+        return;\n+      } else if (is_c_lwsw(Rs, Rd, offset)) {\n+        c_sw(Rd, Rs, offset);\n+        return;\n+      }\n+    }\n+    _sw(Rd, Rs, offset);\n@@ -3347,4 +3336,0 @@\n-  INSN(sw);\n-\n-#undef INSN\n-\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":106,"deletions":121,"binary":false,"changes":227,"status":"modified"}]}