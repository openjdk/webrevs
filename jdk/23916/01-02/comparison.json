{"files":[{"patch":"@@ -554,1 +554,1 @@\n-void GraphKit::builtin_throw(Deoptimization::DeoptReason reason, ciInstance* exception_object) {\n+void GraphKit::builtin_throw(Deoptimization::DeoptReason reason, ciInstance* ex_obj) {\n@@ -572,24 +572,0 @@\n-    ciInstance* ex_obj = nullptr;\n-    if (exception_object != nullptr) {\n-      ex_obj = exception_object;\n-    } else {\n-      switch (reason) {\n-      case Deoptimization::Reason_null_check:\n-        ex_obj = env()->NullPointerException_instance();\n-        break;\n-      case Deoptimization::Reason_div0_check:\n-        ex_obj = env()->ArithmeticException_instance();\n-        break;\n-      case Deoptimization::Reason_range_check:\n-        ex_obj = env()->ArrayIndexOutOfBoundsException_instance();\n-        break;\n-      case Deoptimization::Reason_class_check:\n-        ex_obj = env()->ClassCastException_instance();\n-        break;\n-      case Deoptimization::Reason_array_check:\n-        ex_obj = env()->ArrayStoreException_instance();\n-        break;\n-      default:\n-        break;\n-      }\n-    }\n@@ -663,0 +639,20 @@\n+ciInstance* GraphKit::guess_exception_from_deopt_reason(Deoptimization::DeoptReason reason) const {\n+  switch (reason) {\n+  case Deoptimization::Reason_null_check:\n+    return env()->NullPointerException_instance();\n+  case Deoptimization::Reason_div0_check:\n+    return env()->ArithmeticException_instance();\n+  case Deoptimization::Reason_range_check:\n+    return env()->ArrayIndexOutOfBoundsException_instance();\n+  case Deoptimization::Reason_class_check:\n+    return env()->ClassCastException_instance();\n+  case Deoptimization::Reason_array_check:\n+    return env()->ArrayStoreException_instance();\n+  default:\n+    return nullptr;\n+  }\n+}\n+\n+void GraphKit::builtin_throw(Deoptimization::DeoptReason reason) {\n+  builtin_throw(reason, guess_exception_from_deopt_reason(reason));\n+}\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":21,"deletions":25,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -278,3 +278,2 @@\n-  \/\/ If `exception_object` is nullptr, the exception to throw will be guessed based on `reason`\n-  void builtin_throw(Deoptimization::DeoptReason reason, ciInstance* exception_object = nullptr);\n-  \/\/ Returns the pair (builtin_throw_applies, throw_is_hot) for builtin_throw usage.\n+  void builtin_throw(Deoptimization::DeoptReason reason);\n+  void builtin_throw(Deoptimization::DeoptReason reason, ciInstance* exception_object);\n@@ -282,0 +281,1 @@\n+  ciInstance* guess_exception_from_deopt_reason(Deoptimization::DeoptReason reason) const;\n","filename":"src\/hotspot\/share\/opto\/graphKit.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}