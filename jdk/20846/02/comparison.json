{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,6 +29,3 @@\n- * @modules java.desktop\/java.awt:open\n- * @modules java.desktop\/java.awt.peer\n- * @library \/lib\/client ..\/\n- * @library \/java\/awt\/patchlib\n- * @build java.desktop\/java.awt.Helper\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @modules java.desktop\/java.awt:open java.desktop\/java.awt.peer\n+ * @library ..\/ \/java\/awt\/patchlib \/test\/lib\n+ * @build java.desktop\/java.awt.Helper SystemTrayIconHelper jtreg.SkippedException\n@@ -38,1 +35,0 @@\n-import java.awt.Image;\n@@ -51,2 +47,0 @@\n-\n-    Image image;\n@@ -59,15 +53,3 @@\n-            System.out.println(\"SystemTray not supported on the platform.\" +\n-                \" Marking the test passed.\");\n-        } else {\n-            if (System.getProperty(\"os.name\").toLowerCase().startsWith(\"win\")) {\n-                System.err.println(\n-                    \"Test can fail on Windows platform\\n\"+\n-                    \"On Windows 7, by default icon hides behind icon pool\\n\" +\n-                    \"Due to which test might fail\\n\" +\n-                    \"Set \\\"Right mouse click\\\" -> \" +\n-                    \"\\\"Customize notification icons\\\" -> \\\"Always show \" +\n-                    \"all icons and notifications on the taskbar\\\" true \" +\n-                    \"to avoid this problem.\\nOR change behavior only for \" +\n-                    \"Java SE tray icon and rerun test.\");\n-            }\n-\n+            throw new jtreg.SkippedException(\"SystemTray not supported on the platform.\" +\n+                    \" Marking the test passed.\");\n+        }\n@@ -91,1 +73,1 @@\n-            new BufferedImage(20, 20, BufferedImage.TYPE_INT_RGB), \"ti\");\n+                new BufferedImage(20, 20, BufferedImage.TYPE_INT_RGB), \"ti\");\n@@ -103,1 +85,1 @@\n-                        + \" set correctly.\");\n+                            + \" set correctly.\");\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/ActionEventTest\/ActionEventTest.java","additions":9,"deletions":27,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,2 @@\n-\/* @test\n+\/*\n+ * @test\n@@ -30,2 +31,0 @@\n- * @author Mikhail Lapshin\n- * @library \/lib\/client\/\n@@ -33,1 +32,0 @@\n- * @build ExtendedRobot\n@@ -37,2 +35,9 @@\n-import javax.swing.*;\n-import java.awt.*;\n+import java.awt.Robot;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPopupMenu;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n@@ -43,1 +48,1 @@\n-    private TestTitlePane testTitlePane;\n+    private static TestTitlePane testTitlePane;\n@@ -45,1 +50,1 @@\n-    private static ExtendedRobot robot = createRobot();\n+    private static final Robot robot = createRobot();\n@@ -48,7 +53,2 @@\n-        try {\n-            UIManager.setLookAndFeel(\n-                    new com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel());\n-        } catch(UnsupportedLookAndFeelException e) {\n-            System.out.println(\"The test is for Windows LaF only\");\n-            return;\n-        }\n+        UIManager.setLookAndFeel(\n+                new com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel());\n@@ -58,5 +58,1 @@\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                public void run() {\n-                    bug6725409.setupUIStep1();\n-                }\n-            });\n+            SwingUtilities.invokeAndWait(bug6725409::setupUIStep1);\n@@ -64,5 +60,1 @@\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                public void run() {\n-                    bug6725409.setupUIStep2();\n-                }\n-            });\n+            SwingUtilities.invokeAndWait(bug6725409::setupUIStep2);\n@@ -70,5 +62,1 @@\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                public void run() {\n-                    bug6725409.test();\n-                }\n-            });\n+            SwingUtilities.invokeAndWait(bug6725409::test);\n@@ -78,3 +66,5 @@\n-            if (bug6725409.frame != null) {\n-                bug6725409.frame.dispose();\n-            }\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (bug6725409.frame != null) {\n+                    bug6725409.frame.dispose();\n+                }\n+            });\n@@ -150,1 +140,2 @@\n-    private static ExtendedRobot createRobot() {\n+\n+    private static Robot createRobot() {\n@@ -152,6 +143,4 @@\n-             ExtendedRobot robot = new ExtendedRobot();\n-             return robot;\n-         }catch(Exception ex) {\n-             ex.printStackTrace();\n-             throw new Error(\"Unexpected Failure\");\n-         }\n+            return new Robot();\n+        } catch (Exception ex) {\n+            throw new Error(\"Can't create Robot\", ex);\n+        }\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/6725409\/bug6725409.java","additions":30,"deletions":41,"binary":false,"changes":71,"status":"modified"}]}