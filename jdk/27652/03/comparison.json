{"files":[{"patch":"@@ -281,1 +281,2 @@\n-        jdk.naming.dns;\n+        jdk.naming.dns,\n+        jdk.httpserver;\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -132,0 +132,7 @@\n+# Prior to JDK 26, the HttpExchange attribute map was shared with the enclosing HttpContext.\n+# Since JDK 26, by default, exchange attributes are per-exchange and the context attributes must\n+# be accessed by calling getHttpContext().getAttributes(). Uncomment this property to\n+# restore the pre JDK 26 behavior.\n+#\n+# jdk.httpserver.attributes=context\n+\n","filename":"src\/java.base\/share\/conf\/net.properties","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -104,0 +104,2 @@\n+ * Additional system\/networking properties may be defined in net.properties\n+ *\n","filename":"src\/jdk.httpserver\/share\/classes\/module-info.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.util.concurrent.ConcurrentHashMap;\n@@ -41,0 +42,2 @@\n+import sun.net.NetProperties;\n+\n@@ -62,0 +65,3 @@\n+    private static final boolean perExchangeAttributes =\n+        !Optional.ofNullable(NetProperties.get(\"jdk.httpserver.attributes\")).orElse(\"\")\n+              .equals(\"context\");\n@@ -79,1 +85,1 @@\n-    Map<String,Object> attributes;\n+    final Map<String,Object> attributes;\n@@ -94,0 +100,3 @@\n+        this.attributes = perExchangeAttributes\n+            ? new ConcurrentHashMap<>()\n+            : getHttpContext().getAttributes();\n@@ -364,7 +373,1 @@\n-        if (name == null) {\n-            throw new NullPointerException (\"null name parameter\");\n-        }\n-        if (attributes == null) {\n-            attributes = getHttpContext().getAttributes();\n-        }\n-        return attributes.get (name);\n+        return attributes.get(Objects.requireNonNull(name, \"null name parameter\"));\n@@ -374,6 +377,1 @@\n-        if (name == null) {\n-            throw new NullPointerException (\"null name parameter\");\n-        }\n-        if (attributes == null) {\n-            attributes = getHttpContext().getAttributes();\n-        }\n+        var key = Objects.requireNonNull(name, \"null name parameter\");\n@@ -381,1 +379,1 @@\n-            attributes.put (name, value);\n+            attributes.put(key, value);\n@@ -383,1 +381,1 @@\n-            attributes.remove (name);\n+            attributes.remove(key);\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ExchangeImpl.java","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-        server.createContext(\"\/\", handler);\n+        server.createContext(\"\/\", handler).getAttributes().put(\"attr\", \"context-val\");\n@@ -104,0 +104,1 @@\n+                assertNull(exchange.getAttribute(\"attr\"));\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/ExchangeAttributeTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}