{"files":[{"patch":"@@ -26,0 +26,2 @@\n+import com.sun.net.httpserver.*;\n+\n@@ -112,0 +114,8 @@\n+ * @implNote\n+ * Prior to JDK 26, in the JDK default implementation, the {@link HttpExchange} attribute map was\n+ * shared with the enclosing {@link HttpContext}.\n+ * Since JDK 26, by default, exchange attributes are per-exchange and the context attributes must\n+ * be accessed by calling {@link HttpExchange#getHttpContext() getHttpContext()}{@link\n+ * HttpContext#getAttributes() .getAttributes()}. <br>\n+ * A new system property, <b>{@systemProperty jdk.httpserver.attributes}<\/b> (default value: {@code \"\"})\n+ * allows to revert this new behavior. Set this property to \"context\" to restore the pre JDK 26 behavior.\n","filename":"src\/jdk.httpserver\/share\/classes\/module-info.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.concurrent.ConcurrentHashMap;\n@@ -62,0 +63,3 @@\n+    private static final boolean perExchangeAttributes =\n+        !System.getProperty(\"jdk.httpserver.attributes\", \"\")\n+              .equals(\"context\");\n@@ -79,1 +83,1 @@\n-    Map<String,Object> attributes;\n+    final Map<String,Object> attributes;\n@@ -94,0 +98,3 @@\n+        this.attributes = perExchangeAttributes\n+            ? new ConcurrentHashMap<>()\n+            : getHttpContext().getAttributes();\n@@ -364,7 +371,1 @@\n-        if (name == null) {\n-            throw new NullPointerException (\"null name parameter\");\n-        }\n-        if (attributes == null) {\n-            attributes = getHttpContext().getAttributes();\n-        }\n-        return attributes.get (name);\n+        return attributes.get(Objects.requireNonNull(name, \"null name parameter\"));\n@@ -374,6 +375,1 @@\n-        if (name == null) {\n-            throw new NullPointerException (\"null name parameter\");\n-        }\n-        if (attributes == null) {\n-            attributes = getHttpContext().getAttributes();\n-        }\n+        var key = Objects.requireNonNull(name, \"null name parameter\");\n@@ -381,1 +377,1 @@\n-            attributes.put (name, value);\n+            attributes.put(key, value);\n@@ -383,1 +379,1 @@\n-            attributes.remove (name);\n+            attributes.remove(key);\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ExchangeImpl.java","additions":13,"deletions":17,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,3 @@\n+ * @run junit\/othervm -Djdk.httpserver.attributes=context ExchangeAttributeTest\n+ * @run junit\/othervm -Djdk.httpserver.attributes=random-string ExchangeAttributeTest\n+ * @run junit\/othervm -Djdk.httpserver.attributes ExchangeAttributeTest\n@@ -74,1 +77,1 @@\n-        server.createContext(\"\/\", handler);\n+        server.createContext(\"\/\", handler).getAttributes().put(\"attr\", \"context-val\");\n@@ -104,4 +107,15 @@\n-                exchange.setAttribute(\"attr\", \"val\");\n-                assertEquals(\"val\", exchange.getAttribute(\"attr\"));\n-                exchange.setAttribute(\"attr\", null);\n-                assertNull(exchange.getAttribute(\"attr\"));\n+                if (\"context\".equals(System.getProperty(\"jdk.httpserver.attributes\"))) {\n+                    exchange.setAttribute(\"attr\", \"val\");\n+                    assertEquals(\"val\", exchange.getAttribute(\"attr\"));\n+                    assertEquals(\"val\", exchange.getHttpContext().getAttributes().get(\"attr\"));\n+                    exchange.setAttribute(\"attr\", null);\n+                    assertNull(exchange.getAttribute(\"attr\"));\n+                } else {\n+                    assertNull(exchange.getAttribute(\"attr\"));\n+                    assertEquals(\"context-val\", exchange.getHttpContext().getAttributes().get(\"attr\"));\n+                    exchange.setAttribute(\"attr\", \"val\");\n+                    assertEquals(\"val\", exchange.getAttribute(\"attr\"))\n+                    assertEquals(\"context-val\", exchange.getHttpContext().getAttributes().get(\"attr\"));\n+                    exchange.setAttribute(\"attr\", null);\n+                    assertNull(exchange.getAttribute(\"attr\"));\n+                }\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/ExchangeAttributeTest.java","additions":20,"deletions":6,"binary":false,"changes":26,"status":"modified"}]}