{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ExchangeImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,117 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 7105350\n- * @summary Test HttpExchange set\/getAttribute do not affect HttpContext attributes\n- * @library \/test\/lib\n- * @run junit\/othervm ExchangeAttributePerExchangeTest\n- *\/\n-\n-import com.sun.net.httpserver.HttpExchange;\n-import com.sun.net.httpserver.HttpHandler;\n-import com.sun.net.httpserver.HttpServer;\n-import jdk.test.lib.net.URIBuilder;\n-import org.junit.jupiter.api.BeforeAll;\n-import org.junit.jupiter.api.Test;\n-\n-import java.io.IOException;\n-import java.net.InetAddress;\n-import java.net.InetSocketAddress;\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import java.net.http.HttpClient;\n-import java.net.http.HttpRequest;\n-import java.net.http.HttpResponse;\n-import java.util.logging.ConsoleHandler;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n-\n-import static java.net.http.HttpClient.Builder.NO_PROXY;\n-import static org.junit.jupiter.api.Assertions.*;\n-\n-public class ExchangeAttributePerExchangeTest {\n-\n-    static final InetAddress LOOPBACK_ADDR = InetAddress.getLoopbackAddress();\n-    static final boolean ENABLE_LOGGING = true;\n-    static final Logger logger = Logger.getLogger(\"com.sun.net.httpserver\");\n-\n-    @BeforeAll\n-    public static void setup() {\n-        if (ENABLE_LOGGING) {\n-            ConsoleHandler ch = new ConsoleHandler();\n-            logger.setLevel(Level.ALL);\n-            ch.setLevel(Level.ALL);\n-            logger.addHandler(ch);\n-        }\n-    }\n-\n-    @Test\n-    public void testExchangeAttributes() throws Exception {\n-        var handler = new AttribHandler();\n-        var server = HttpServer.create(new InetSocketAddress(LOOPBACK_ADDR,0), 10);\n-        server.createContext(\"\/\", handler).getAttributes().put(\"attr\", \"context-val\");\n-        server.start();\n-        try {\n-            var client = HttpClient.newBuilder().proxy(NO_PROXY).build();\n-            var request = HttpRequest.newBuilder(uri(server, \"\")).build();\n-            var response = client.send(request, HttpResponse.BodyHandlers.ofString());\n-            assertEquals(200, response.statusCode());\n-        } finally {\n-            server.stop(0);\n-        }\n-    }\n-\n-    \/\/ --- infra ---\n-\n-    static URI uri(HttpServer server, String path) throws URISyntaxException {\n-        return URIBuilder.newBuilder()\n-                .scheme(\"http\")\n-                .loopback()\n-                .port(server.getAddress().getPort())\n-                .path(path)\n-                .build();\n-    }\n-\n-    \/**\n-     * A test handler that discards the request and sends a response\n-     *\/\n-    static class AttribHandler implements HttpHandler {\n-        @java.lang.Override\n-        public void handle(HttpExchange exchange) throws IOException {\n-            try {\n-                assertNull(exchange.getAttribute(\"attr\"));\n-                exchange.setAttribute(\"attr\", \"val\");\n-                assertEquals(\"val\", exchange.getAttribute(\"attr\"))\n-                assertNotEquals(\"val\", exchange.getHttpContext().getAttributes().get(\"attr\"));\n-                exchange.setAttribute(\"attr\", null);\n-                assertNull(exchange.getAttribute(\"attr\"));\n-                exchange.sendResponseHeaders(200, -1);\n-            } catch (Throwable t) {\n-                t.printStackTrace();\n-                exchange.sendResponseHeaders(500, -1);\n-            }\n-        }\n-    }\n-}\n\\ No newline at end of file\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/ExchangeAttributePerExchangeTest.java","additions":0,"deletions":117,"binary":false,"changes":117,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,3 @@\n+ * @run junit\/othervm -Djdk.httpserver.attributes=context ExchangeAttributeTest\n+ * @run junit\/othervm -Djdk.httpserver.attributes=random-string ExchangeAttributeTest\n+ * @run junit\/othervm -Djdk.httpserver.attributes ExchangeAttributeTest\n@@ -72,1 +75,0 @@\n-        System.getProperty(\"jdk.httpserver.attributes\", \"context\")\n@@ -105,5 +107,15 @@\n-                exchange.setAttribute(\"attr\", \"val\");\n-                assertEquals(\"val\", exchange.getAttribute(\"attr\"));\n-                assertEquals(\"val\", exchange.getHttpContext().getAttributes().get(\"attr\"));\n-                exchange.setAttribute(\"attr\", null);\n-                assertNull(exchange.getAttribute(\"attr\"));\n+                if (\"context\".equals(System.getProperty(\"jdk.httpserver.attributes\"))) {\n+                    exchange.setAttribute(\"attr\", \"val\");\n+                    assertEquals(\"val\", exchange.getAttribute(\"attr\"));\n+                    assertEquals(\"val\", exchange.getHttpContext().getAttributes().get(\"attr\"));\n+                    exchange.setAttribute(\"attr\", null);\n+                    assertNull(exchange.getAttribute(\"attr\"));\n+                } else {\n+                    assertNull(exchange.getAttribute(\"attr\"));\n+                    assertEquals(\"context-val\", exchange.getHttpContext().getAttributes().get(\"attr\"));\n+                    exchange.setAttribute(\"attr\", \"val\");\n+                    assertEquals(\"val\", exchange.getAttribute(\"attr\"))\n+                    assertEquals(\"context-val\", exchange.getHttpContext().getAttributes().get(\"attr\"));\n+                    exchange.setAttribute(\"attr\", null);\n+                    assertNull(exchange.getAttribute(\"attr\"));\n+                }\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/ExchangeAttributeTest.java","additions":19,"deletions":7,"binary":false,"changes":26,"status":"modified"}]}