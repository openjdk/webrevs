{"files":[{"patch":"@@ -81,1 +81,1 @@\n-    size,                \/\/ dwSize\n+    0,                   \/\/ dwSize\n","filename":"src\/hotspot\/os\/windows\/gc\/z\/zMapper_windows.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/z\/zMapper_windows.hpp\"\n@@ -46,1 +47,3 @@\n-  ZVirtualMemoryManager* _vmm;\n+  static ZVirtualMemoryManager* _vmm;\n+\n+  static bool _has_unreserved;\n@@ -90,0 +93,1 @@\n+    _has_unreserved = false;\n@@ -98,1 +102,1 @@\n-    if (_initialized) {\n+    if (_initialized && !_has_unreserved) {\n@@ -104,0 +108,14 @@\n+  static void test_unreserve() {\n+    zoffset bottom = _va->alloc_low_address(ZGranuleSize);\n+    zoffset top    = _va->alloc_high_address(ZGranuleSize);\n+\n+    \/\/ Unreserve the middle part\n+    ZMapper::unreserve(ZOffset::address_unsafe(bottom + ZGranuleSize), ZGranuleSize);\n+\n+    \/\/ Make sure that we still can unreserve the memory before and after\n+    ZMapper::unreserve(ZOffset::address_unsafe(bottom), ZGranuleSize);\n+    ZMapper::unreserve(ZOffset::address_unsafe(top), ZGranuleSize);\n+\n+    _has_unreserved = true;\n+  }\n+\n@@ -173,0 +191,6 @@\n+ZVirtualMemoryManager* ZMapperTest::_vmm = nullptr;\n+bool ZMapperTest::_has_unreserved;\n+\n+TEST_VM_F(ZMapperTest, test_unreserve) {\n+  test_unreserve();\n+}\n","filename":"test\/hotspot\/gtest\/gc\/z\/test_zMapper_windows.cpp","additions":26,"deletions":2,"binary":false,"changes":28,"status":"modified"}]}