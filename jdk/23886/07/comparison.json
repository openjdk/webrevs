{"files":[{"patch":"@@ -134,1 +134,1 @@\n-      bool bm_live = heap->complete_marking_context()->is_marked(cast_to_oop(region->bottom()));\n+      bool bm_live = heap->active_generation()->complete_marking_context()->is_marked(cast_to_oop(region->bottom()));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,2 +99,0 @@\n-  ShenandoahMarkingContext* const ctx = heap->complete_marking_context();\n-\n@@ -125,1 +123,1 @@\n-      bool bm_live = ctx->is_marked(cast_to_oop(region->bottom()));\n+      bool bm_live = heap->gc_generation()->complete_marking_context()->is_marked(cast_to_oop(region->bottom()));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1033,1 +1033,1 @@\n-    ShenandoahMarkingContext* const ctx = _heap->complete_marking_context();\n+    ShenandoahMarkingContext* const ctx = _heap->marking_context();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -351,2 +351,2 @@\n-    assert(_heap->complete_marking_context()->is_marked(p), \"must be marked\");\n-    assert(!_heap->complete_marking_context()->allocated_after_mark_start(p), \"must be truly marked\");\n+    assert(_heap->gc_generation()->complete_marking_context()->is_marked(p), \"must be marked\");\n+    assert(!_heap->gc_generation()->complete_marking_context()->allocated_after_mark_start(p), \"must be truly marked\");\n@@ -554,1 +554,1 @@\n-    _ctx(ShenandoahHeap::heap()->complete_marking_context()) {}\n+    _ctx(ShenandoahHeap::heap()->global_generation()->complete_marking_context()) {}\n@@ -778,1 +778,1 @@\n-    _ctx(ShenandoahHeap::heap()->complete_marking_context()) {}\n+    _ctx(ShenandoahHeap::heap()->gc_generation()->complete_marking_context()) {}\n@@ -796,1 +796,1 @@\n-    assert(_heap->complete_marking_context()->is_marked(p), \"must be marked\");\n+    assert(_heap->gc_generation()->complete_marking_context()->is_marked(p), \"must be marked\");\n@@ -880,1 +880,1 @@\n-    assert(_heap->complete_marking_context()->is_marked(p), \"must be marked\");\n+    assert(_heap->gc_generation()->complete_marking_context()->is_marked(p), \"must be marked\");\n@@ -953,1 +953,1 @@\n-      _heap->complete_marking_context()->reset_top_at_mark_start(r);\n+      _heap->gc_generation()->complete_marking_context()->reset_top_at_mark_start(r);\n@@ -1094,1 +1094,1 @@\n-    ShenandoahMarkingContext* const ctx = heap->complete_marking_context();\n+    ShenandoahMarkingContext* const ctx = heap->gc_generation()->complete_marking_context();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -778,4 +778,0 @@\n-bool ShenandoahGeneration::is_mark_complete() {\n-  return _is_marking_complete.is_set();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -204,1 +204,1 @@\n-  bool is_mark_complete();\n+  bool is_mark_complete() { return _is_marking_complete.is_set(); }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -172,1 +172,2 @@\n-  ShenandoahMarkingContext* const marking_context = _heap->complete_marking_context();\n+  assert(!_heap->gc_generation()->is_old(), \"Sanity check\");\n+  ShenandoahMarkingContext* const marking_context = _heap->young_generation()->complete_marking_context();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalEvacuationTask.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -278,2 +278,2 @@\n-  assert(_heap->complete_marking_context()->is_marked(p), \"must be marked\");\n-  assert(!_heap->complete_marking_context()->allocated_after_mark_start(p), \"must be truly marked\");\n+  assert(_heap->global_generation()->complete_marking_context()->is_marked(p), \"must be marked\");\n+  assert(!_heap->global_generation()->complete_marking_context()->allocated_after_mark_start(p), \"must be truly marked\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalFullGC.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -427,2 +427,0 @@\n-    \/\/ Initialize to complete\n-    _marking_context->mark_complete();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -745,1 +745,1 @@\n-  inline ShenandoahMarkingContext* complete_marking_context() const;\n+  \/\/ Return the marking context regardless of the completeness status.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -646,5 +646,0 @@\n-inline ShenandoahMarkingContext* ShenandoahHeap::complete_marking_context() const {\n-  assert (_marking_context->is_complete(),\" sanity\");\n-  return _marking_context;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -858,0 +858,1 @@\n+  ShenandoahMarkingContext* const ctx = heap->marking_context();\n@@ -859,1 +860,0 @@\n-    ShenandoahMarkingContext* const ctx = heap->complete_marking_context();\n@@ -868,2 +868,0 @@\n-    \/\/ During full gc, heap->complete_marking_context() is not valid, may equal nullptr.\n-    ShenandoahMarkingContext* const ctx = heap->complete_marking_context();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+#include \"shenandoahGlobalGeneration.hpp\"\n+\n@@ -99,12 +101,0 @@\n-\n-bool ShenandoahMarkingContext::is_complete() {\n-  return _is_complete.is_set();\n-}\n-\n-void ShenandoahMarkingContext::mark_complete() {\n-  _is_complete.set();\n-}\n-\n-void ShenandoahMarkingContext::mark_incomplete() {\n-  _is_complete.unset();\n-}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkingContext.cpp","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -50,2 +50,0 @@\n-  ShenandoahSharedFlag _is_complete;\n-\n@@ -89,4 +87,0 @@\n-\n-  bool is_complete();\n-  void mark_complete();\n-  void mark_incomplete();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkingContext.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -331,0 +331,1 @@\n+  ShenandoahHeap* heap = ShenandoahHeap::heap();\n@@ -334,1 +335,1 @@\n-    return ShenandoahHeap::heap()->complete_marking_context()->is_marked(raw_referent);\n+    return heap->active_generation()->complete_marking_context()->is_marked(raw_referent);\n@@ -336,1 +337,1 @@\n-    return ShenandoahHeap::heap()->complete_marking_context()->is_marked_strong(raw_referent);\n+    return heap->active_generation()->complete_marking_context()->is_marked_strong(raw_referent);\n@@ -348,1 +349,1 @@\n-    assert(ShenandoahHeap::heap()->marking_context()->is_marked(reference_referent_raw<T>(reference)), \"only make inactive final refs with alive referents\");\n+    assert(ShenandoahHeap::heap()->active_generation()->complete_marking_context()->is_marked(reference_referent_raw<T>(reference)), \"only make inactive final refs with alive referents\");\n@@ -438,1 +439,1 @@\n-  assert(raw_referent == nullptr || ShenandoahHeap::heap()->marking_context()->is_marked(raw_referent),\n+  assert(raw_referent == nullptr || ShenandoahHeap::heap()->active_generation()->complete_marking_context()->is_marked(raw_referent),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    _marking_context(ShenandoahHeap::heap()->complete_marking_context()),\n+    _marking_context(ShenandoahHeap::heap()->global_generation()->complete_marking_context()),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUnload.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -271,1 +271,1 @@\n-        check(ShenandoahAsserts::_safe_all, obj, _heap->complete_marking_context()->is_marked(obj),\n+        check(ShenandoahAsserts::_safe_all, obj, _heap->gc_generation()->complete_marking_context()->is_marked(obj),\n@@ -276,1 +276,1 @@\n-        check(ShenandoahAsserts::_safe_all, obj, _heap->complete_marking_context()->is_marked(obj),\n+        check(ShenandoahAsserts::_safe_all, obj, _heap->gc_generation()->complete_marking_context()->is_marked(obj),\n@@ -704,1 +704,1 @@\n-    if (_heap->complete_marking_context()->is_marked(cast_to_oop(obj))) {\n+    if (_heap->gc_generation()->complete_marking_context()->is_marked(cast_to_oop(obj))) {\n@@ -712,1 +712,1 @@\n-    ShenandoahMarkingContext* ctx = _heap->complete_marking_context();\n+    ShenandoahMarkingContext* ctx = _heap->gc_generation()->complete_marking_context();\n@@ -791,1 +791,2 @@\n-                                             VerifyForwarded forwarded, VerifyMarked marked,\n+                                             VerifyForwarded forwarded,\n+                                             VerifyMarked marked,\n@@ -793,1 +794,2 @@\n-                                             VerifyLiveness liveness, VerifyRegions regions,\n+                                             VerifyLiveness liveness,\n+                                             VerifyRegions regions,\n@@ -992,1 +994,1 @@\n-    guarantee(_heap->marking_context()->is_complete(), \"Marking context should be complete\");\n+    guarantee(_heap->gc_generation()->is_mark_complete(), \"Marking context should be complete\");\n@@ -1189,1 +1191,1 @@\n-          _verify_marked_complete,     \/\/ all objects are marked in complete bitmap\n+          _verify_marked_incomplete,   \/\/ all objects are marked in incomplete bitmap\n@@ -1297,1 +1299,1 @@\n-  ShenandoahMarkingContext* ctx = old_gen->is_mark_complete() ?old_gen->complete_marking_context() : nullptr;\n+  ShenandoahMarkingContext* ctx = old_gen->is_mark_complete() ? old_gen->complete_marking_context() : nullptr;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"}]}