{"files":[{"patch":"@@ -332,2 +332,0 @@\n-  ShenandoahHeapRegion* referent_region = heap->heap_region_containing(raw_referent);\n-\n@@ -337,1 +335,1 @@\n-    return heap->complete_marking_context(referent_region)->is_marked(raw_referent);\n+    return heap->active_generation()->complete_marking_context()->is_marked(raw_referent);\n@@ -339,1 +337,1 @@\n-    return heap->complete_marking_context(referent_region)->is_marked_strong(raw_referent);\n+    return heap->active_generation()->complete_marking_context()->is_marked_strong(raw_referent);\n@@ -351,1 +349,1 @@\n-    assert(ShenandoahHeap::heap()->marking_context()->is_marked(reference_referent_raw<T>(reference)), \"only make inactive final refs with alive referents\");\n+    assert(ShenandoahHeap::heap()->active_generation()->complete_marking_context()->is_marked(reference_referent_raw<T>(reference)), \"only make inactive final refs with alive referents\");\n@@ -441,1 +439,1 @@\n-  assert(raw_referent == nullptr || ShenandoahHeap::heap()->marking_context()->is_marked(raw_referent),\n+  assert(raw_referent == nullptr || ShenandoahHeap::heap()->active_generation()->complete_marking_context()->is_marked(raw_referent),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahReferenceProcessor.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"}]}