{"files":[{"patch":"@@ -767,9 +767,4 @@\n-     * returned segment is deallocated only when the original segment's arena is closed.\n-     * Care must be taken as this might lead to unexpected behavior:\n-     * <ol>\n-     *     <li>The reinterpreted segment can be accessed <em>after<\/em> its region\n-     *         of memory has been deallocated via the original arena (use after free).<\/li>\n-     *     <li>The reinterpreted segment's region of memory will <em>not<\/em> be\n-     *         deallocated when the provided {@code arena} becomes invalid.\n-     *     <\/li>\n-     * <\/ol>\n+     * returned segment is deallocated only when this segment's arena is closed.\n+     * This might lead to <em>use-after-free<\/em> issues, as the returned segment can be\n+     * accessed <em>after<\/em> its region of memory has been deallocated via this\n+     * segment's arena.\n@@ -828,9 +823,4 @@\n-     * returned segment is deallocated only when the original segment's arena is closed.\n-     * Care must be taken as this might lead to unexpected behavior:\n-     * <ol>\n-     *     <li>The reinterpreted segment can be accessed <em>after<\/em> its region\n-     *         of memory has been deallocated via the original arena (use after free).<\/li>\n-     *     <li>The reinterpreted segment's region of memory will <em>not<\/em> be\n-     *         deallocated when the provided {@code arena} becomes invalid.\n-     *     <\/li>\n-     * <\/ol>\n+     * returned segment is deallocated only when this segment's arena is closed.\n+     * This might lead to <em>use-after-free<\/em> issues, as the returned segment can be\n+     * accessed <em>after<\/em> its region of memory has been deallocated via this\n+     * segment's arena.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":8,"deletions":18,"binary":false,"changes":26,"status":"modified"}]}