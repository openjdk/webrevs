{"files":[{"patch":"@@ -112,4 +112,2 @@\n-     * Maximum number of argument slots in String Concat call.\n-     *\n-     * While the maximum number of argument slots that indy call can handle is 253,\n-     * we do not use all those slots, to let the strategies with MethodHandle\n+     * Maximum number of argument slots in String Concat call. While the maximum number of argument slots that\n+     * indy calls can handle is 253, we do not use all those slots, to let the strategies with MethodHandle\n@@ -117,2 +115,0 @@\n-     *\n-     * @since 21\n@@ -120,4 +116,1 @@\n-    public static final int MAX_INDY_CONCAT_ARG_SLOTS;\n-    \/\/ Use static initialize block to avoid MAX_INDY_CONCAT_ARG_SLOTS being treating\n-    \/\/ as a constant for constant folding.\n-    static { MAX_INDY_CONCAT_ARG_SLOTS = 200; }\n+    private static final int MAX_INDY_CONCAT_ARG_SLOTS = 200;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.lang.invoke.MethodHandle;\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/DecimalDigits.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.lang.invoke.MethodHandle;\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/HexDigits.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,6 +39,0 @@\n-\/**\n- * Digits provides a fast methodology for converting integers and longs to\n- * octal digits ASCII strings.\n- *\n- * @since 21\n- *\/\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/OctalDigits.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}