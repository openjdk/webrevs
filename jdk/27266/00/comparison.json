{"files":[{"patch":"@@ -50,2 +50,1 @@\n-    private static final MemoryPoolMXBean tenuredGenPool =\n-            findTenuredGenPool();\n+    private static final MemoryPoolMXBean tenuredGenPool = findTenuredGenPool();\n@@ -58,1 +57,1 @@\n-        setPercentageUsageThreshold(0.1);\n+        setPercentageUsageThreshold(0.2);\n@@ -77,1 +76,1 @@\n-        Collection<Object[]> numbers = new LinkedList();\n+        Collection<int[]> numbers = new LinkedList();\n@@ -79,0 +78,1 @@\n+        System.out.println(tenuredGenPool.getName() + \": \" + tenuredGenPool.getUsage());\n@@ -80,1 +80,1 @@\n-            numbers.add(new Object[1000]);\n+            numbers.add(new int[1000]);\n@@ -83,1 +83,17 @@\n-                Thread.sleep(100);\n+                System.gc();       \/\/ Encourage promotion into old\/tenured generation\n+                Thread.sleep(100); \/\/ Give the notification a bit of time to happen\n+                MemoryUsage usage = tenuredGenPool.getUsage();\n+                long used = usage.getUsed();\n+                long max = usage.getMax();\n+                System.out.println(tenuredGenPool.getName() + \": \" + tenuredGenPool.getUsage());\n+                if ((float)used \/ (float)max > .50) {\n+                    \/\/ If we have allocated 50% of the heap pool, block here until the\n+                    \/\/ notication arrives\n+                    System.out.println(\"counter: \" + counter);\n+                    System.out.println(tenuredGenPool.getName() + \": \" + tenuredGenPool.getUsage());\n+                    System.out.println(\">50% of heap pool allocated (\" + used + \"). Blocking...\");\n+                    while (!done) {\n+                        Thread.sleep(100);\n+                    }\n+                    System.out.println(\"Finished blocking\");\n+                }\n@@ -86,0 +102,1 @@\n+\n@@ -90,5 +107,20 @@\n-        for (MemoryPoolMXBean pool :\n-                ManagementFactory.getMemoryPoolMXBeans()) {\n-            if (pool.getType() == MemoryType.HEAP &&\n-                    pool.isUsageThresholdSupported()) {\n-                return pool;\n+        \/\/ List of supported GC pools\n+        String[] supportedPools = {\n+            \"Tenured Gen\",        \/\/ Serial GC\n+            \"PS Old Gen\",         \/\/ Parallel GC\n+            \"G1 Old Gen\",         \/\/ G1 GC\n+            \"ZGC Old Generation\", \/\/ Z GC\n+            \"Shenandoah\",         \/\/ Shenandoah GC\n+            \"Shenandoah Old Gen\"  \/\/ Shenandoah generational mode GC\n+        };\n+\n+        for (MemoryPoolMXBean pool : ManagementFactory.getMemoryPoolMXBeans()) {\n+            if (pool.getType() == MemoryType.HEAP && pool.isUsageThresholdSupported()) {\n+                System.out.println(\"Verify pool: \" + pool.getName());\n+                for (String str : supportedPools) {\n+                    String poolName = pool.getName();\n+                    if (str.equals(poolName)) {\n+                        System.out.println(\"Pool Verified: \" + pool.getName());\n+                        return pool;\n+                    }\n+                }\n@@ -97,1 +129,4 @@\n-        throw new RuntimeException(\"Could not find tenured space\");\n+\n+        RuntimeException ex =  new RuntimeException(\"Could not find tenured space\");\n+        ex.printStackTrace(System.out);\n+        throw ex;\n@@ -104,1 +139,1 @@\n-        System.out.println(\"Setting threashold for pool \" + tenuredGenPool.getName() + \" percentage:\" + percentage);\n+        System.out.println(\"Setting threshold for pool \" + tenuredGenPool.getName() + \" percentage:\" + percentage);\n@@ -116,1 +151,1 @@\n-    private static final String[] DEBUGGEE_OPTIONS = {\"-Xmx256M\"};\n+    private static final String[] DEBUGGEE_OPTIONS = {\"-Xmx128M\"};\n","filename":"test\/jdk\/com\/sun\/jdi\/JdbStopInNotificationThreadTest.java","additions":49,"deletions":14,"binary":false,"changes":63,"status":"modified"}]}