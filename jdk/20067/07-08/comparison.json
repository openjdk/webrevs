{"files":[{"patch":"@@ -28,1 +28,0 @@\n-#include \"javaThread.inline.hpp\"\n@@ -31,1 +30,0 @@\n-#include \"logging\/logStream.hpp\"\n@@ -39,1 +37,1 @@\n-#include \"runtime\/javaThread.hpp\"\n+#include \"runtime\/javaThread.inline.hpp\"\n@@ -88,1 +86,1 @@\n-    Lookup(oop obj) : _obj(obj) {}\n+    explicit Lookup(oop obj) : _obj(obj) {}\n@@ -97,1 +95,0 @@\n-      \/\/ The entry is going to be removed soon.\n@@ -112,1 +109,1 @@\n-    LookupMonitor(ObjectMonitor* monitor) : _monitor(monitor) {}\n+    explicit LookupMonitor(ObjectMonitor* monitor) : _monitor(monitor) {}\n@@ -346,1 +343,1 @@\n-ObjectMonitor* LightweightSynchronizer::get_or_insert_monitor_from_table(oop object, JavaThread* current, bool try_read, bool* inserted) {\n+ObjectMonitor* LightweightSynchronizer::get_or_insert_monitor_from_table(oop object, JavaThread* current, bool* inserted) {\n@@ -349,6 +346,4 @@\n-  if (try_read) {\n-    ObjectMonitor* monitor = get_monitor_from_table(current, object);\n-    if (monitor != nullptr) {\n-      *inserted = false;\n-      return monitor;\n-    }\n+  ObjectMonitor* monitor = get_monitor_from_table(current, object);\n+  if (monitor != nullptr) {\n+    *inserted = false;\n+    return monitor;\n@@ -361,1 +356,1 @@\n-  ObjectMonitor* monitor = add_monitor(current, alloced_monitor, object);\n+  monitor = add_monitor(current, alloced_monitor, object);\n@@ -392,1 +387,1 @@\n-ObjectMonitor* LightweightSynchronizer::get_or_insert_monitor(oop object, JavaThread* current, const ObjectSynchronizer::InflateCause cause, bool try_read) {\n+ObjectMonitor* LightweightSynchronizer::get_or_insert_monitor(oop object, JavaThread* current, const ObjectSynchronizer::InflateCause cause) {\n@@ -398,1 +393,1 @@\n-  ObjectMonitor* monitor = get_or_insert_monitor_from_table(object, current, try_read, &inserted);\n+  ObjectMonitor* monitor = get_or_insert_monitor_from_table(object, current, &inserted);\n@@ -748,1 +743,0 @@\n-  \/\/ Fast-locking does not use the 'lock' argument.\n@@ -969,2 +963,2 @@\n-  \/\/ Fetch the monitor from the table\n-    monitor = get_or_insert_monitor(object, current, cause, true \/* try_read *\/);\n+    \/\/ Fetch the monitor from the table\n+    monitor = get_or_insert_monitor(object, current, cause);\n@@ -1046,1 +1040,1 @@\n-    monitor = get_or_insert_monitor(object, current, cause, true \/* try_read *\/);\n+    monitor = get_or_insert_monitor(object, current, cause);\n","filename":"src\/hotspot\/share\/runtime\/lightweightSynchronizer.cpp","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n-  static ObjectMonitor* get_or_insert_monitor_from_table(oop object, JavaThread* current, bool try_read, bool* inserted);\n-  static ObjectMonitor* get_or_insert_monitor(oop object, JavaThread* current, const ObjectSynchronizer::InflateCause cause, bool try_read);\n+  static ObjectMonitor* get_or_insert_monitor_from_table(oop object, JavaThread* current, bool* inserted);\n+  static ObjectMonitor* get_or_insert_monitor(oop object, JavaThread* current, const ObjectSynchronizer::InflateCause cause);\n","filename":"src\/hotspot\/share\/runtime\/lightweightSynchronizer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -232,1 +232,1 @@\n-  assert(monitor == LightweightSynchronizer::get_monitor_from_table(JavaThread::current(), obj), \"must be exist in table\");\n+  assert(monitor == LightweightSynchronizer::get_monitor_from_table(JavaThread::current(), obj), \"must exist in table\");\n","filename":"src\/hotspot\/share\/runtime\/lockStack.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n-#include \"runtime\/synchronizer.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -193,1 +193,0 @@\n- private:\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}