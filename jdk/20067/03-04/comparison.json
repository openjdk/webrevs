{"files":[{"patch":"@@ -702,1 +702,1 @@\n-    \/\/ If deflation has been observed we also spin while deflation is onging.\n+    \/\/ If deflation has been observed we also spin while deflation is ongoing.\n@@ -972,0 +972,3 @@\n+    \/\/ ObjectMonitors are always inserted as anonymously owned, this thread is\n+    \/\/ the current holder of the monitor. So unless the entry is stale and\n+    \/\/ contains a deflating monitor it must be anonymously owned.\n@@ -973,0 +976,1 @@\n+      \/\/ The monitor must be anonymously owned if it was added\n@@ -978,0 +982,3 @@\n+    \/\/ If the monitor was not anonymously owned then we got a deflating monitor\n+    \/\/ from the table. We need to let the deflator make progress and remove this\n+    \/\/ entry before we are allowed to add a new one.\n@@ -994,0 +1001,1 @@\n+    \/\/ Only change the thread local state of the current thread.\n@@ -1143,1 +1151,1 @@\n-    \/\/ Monitor is contended, take the time befor entering to fix the lock stack.\n+    \/\/ Monitor is contended, take the time before entering to fix the lock stack.\n","filename":"src\/hotspot\/share\/runtime\/lightweightSynchronizer.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -271,1 +271,1 @@\n-  for (size_t i = 0 , r = 0; i < CAPACITY; ++i) {\n+  for (size_t i = 0; i < CAPACITY; ++i) {\n","filename":"src\/hotspot\/share\/runtime\/lockStack.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-ObjectMonitor* ObjectSynchronizer::read_monitor(markWord mark) {\n+inline ObjectMonitor* ObjectSynchronizer::read_monitor(markWord mark) {\n@@ -37,1 +37,1 @@\n-ObjectMonitor* ObjectSynchronizer::read_monitor(Thread* current, oop obj, markWord mark) {\n+inline ObjectMonitor* ObjectSynchronizer::read_monitor(Thread* current, oop obj, markWord mark) {\n@@ -45,1 +45,1 @@\n-void ObjectSynchronizer::enter(Handle obj, BasicLock* lock, JavaThread* current) {\n+inline void ObjectSynchronizer::enter(Handle obj, BasicLock* lock, JavaThread* current) {\n@@ -55,1 +55,1 @@\n-bool ObjectSynchronizer::quick_enter(oop obj, JavaThread* current,\n+inline bool ObjectSynchronizer::quick_enter(oop obj, JavaThread* current,\n@@ -72,1 +72,1 @@\n-void ObjectSynchronizer::exit(oop object, BasicLock* lock, JavaThread* current) {\n+inline void ObjectSynchronizer::exit(oop object, BasicLock* lock, JavaThread* current) {\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}