{"files":[{"patch":"@@ -36,0 +36,2 @@\n+JVM_CFLAGS_FEATURES += -DJVM_VARIANT=\\\"$(JVM_VARIANT)\\\"\n+\n","filename":"make\/hotspot\/lib\/JvmFeatures.gmk","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -245,10 +245,0 @@\n-\/\/ JVM variant\n-#if   defined(ZERO)\n-  #define JVM_VARIANT \"zero\"\n-#elif defined(COMPILER2)\n-  #define JVM_VARIANT \"server\"\n-#else\n-  #define JVM_VARIANT \"client\"\n-#endif\n-\n-\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -89,4 +89,0 @@\n-    char jvm_path[JVM_MAXPATHLEN];\n-    os::jvm_path(jvm_path, sizeof(jvm_path));\n-    char *end = strrchr(jvm_path, *os::file_separator());\n-    if (end != nullptr) *end = '\\0';\n@@ -94,1 +90,3 @@\n-    tmp.print(\"%s%sclasses\", jvm_path, os::file_separator());\n+    const char* subdir = WINDOWS_ONLY(\"bin\") NOT_WINDOWS(\"lib\");\n+    tmp.print(\"%s%s%s%s%s%sclasses\", Arguments::get_java_home(), os::file_separator(), subdir,\n+              os::file_separator(), JVM_VARIANT, os::file_separator());\n","filename":"src\/hotspot\/share\/cds\/cdsConfig.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}