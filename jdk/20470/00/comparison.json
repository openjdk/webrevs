{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,1 +204,1 @@\n-    __ lea(rscratch1, ExternalAddress(slow_case_addr));\n+    __ lea(rscratch1, RuntimeAddress(slow_case_addr));\n","filename":"src\/hotspot\/cpu\/aarch64\/jniFastGetField_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,1 +176,1 @@\n-    ExternalAddress target(slow_case_addr);\n+    RuntimeAddress target(slow_case_addr);\n","filename":"src\/hotspot\/cpu\/riscv\/jniFastGetField_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1783,0 +1783,1 @@\n+  assert(!adr._rspec.reloc()->is_data(), \"should not use ExternalAddress for call\");\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-  __ jump (ExternalAddress(slow_case_addr));\n+  __ jump (RuntimeAddress(slow_case_addr));\n@@ -254,1 +254,1 @@\n-  __ jump (ExternalAddress(slow_case_addr));\n+  __ jump (RuntimeAddress(slow_case_addr));\n@@ -353,1 +353,1 @@\n-  __ jump (ExternalAddress(slow_case_addr));\n+  __ jump (RuntimeAddress(slow_case_addr));\n","filename":"src\/hotspot\/cpu\/x86\/jniFastGetField_x86_32.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-  __ jump (ExternalAddress(slow_case_addr), rscratch1);\n+  __ jump (RuntimeAddress(slow_case_addr), rscratch1);\n@@ -209,1 +209,1 @@\n-  __ jump (ExternalAddress(slow_case_addr), rscratch1);\n+  __ jump (RuntimeAddress(slow_case_addr), rscratch1);\n","filename":"src\/hotspot\/cpu\/x86\/jniFastGetField_x86_64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2332,1 +2332,1 @@\n-\n+  assert(!dst.rspec().reloc()->is_data(), \"should not use ExternalAddress for jump\");\n@@ -2343,1 +2343,1 @@\n-\n+  assert(!dst.rspec().reloc()->is_data(), \"should not use ExternalAddress for jump_cc\");\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -707,1 +707,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_start));\n+  __ lea(temp_reg, AddressLiteral(code_start, relocInfo::none));\n@@ -710,1 +710,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_end));\n+  __ lea(temp_reg, AddressLiteral(code_end, relocInfo::none));\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -845,1 +845,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_start));\n+  __ lea(temp_reg, AddressLiteral(code_start, relocInfo::none));\n@@ -848,1 +848,1 @@\n-  __ lea(temp_reg, ExternalAddress(code_end));\n+  __ lea(temp_reg, AddressLiteral(code_end, relocInfo::none));\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-    ExternalAddress no_overlap(no_overlap_target);\n+    RuntimeAddress no_overlap(no_overlap_target);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_arraycopy.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,1 @@\n-  masm->jump(ExternalAddress((address)&HandleExceptionFromCodeCache), rscratch1);\n+  masm->jump(RuntimeAddress((address)&HandleExceptionFromCodeCache), rscratch1);\n","filename":"src\/hotspot\/os_cpu\/windows_x86\/os_windows_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}