{"files":[{"patch":"@@ -397,1 +397,1 @@\n-\/\/      objects acquired the current activation (frame).  Recall that the\n+\/\/      objects acquired in the current activation (frame).  Recall that the\n@@ -401,1 +401,1 @@\n-\/\/      the frame the interpreter throws IMSX.\n+\/\/      frame the interpreter throws IMSX.\n@@ -408,4 +408,4 @@\n-\/\/ The only other source of unbalanced locking would be JNI.  The \"Java Native Interface:\n-\/\/ Programmer's Guide and Specification\" claims that an object locked by jni_monitorenter\n-\/\/ should not be unlocked by \"normal\" java-level locking and vice-versa.  The specification\n-\/\/ doesn't specify what will occur if a program engages in such mixed-mode locking, however.\n+\/\/ The only other source of unbalanced locking would be JNI.  The \"Java Native Interface\n+\/\/ Specification\" states that an object locked by JNI's_MonitorEnter should not be\n+\/\/ unlocked by \"normal\" java-level locking and vice-versa.  The specification doesn't\n+\/\/ specify what will occur if a program engages in such mixed-mode locking, however.\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}