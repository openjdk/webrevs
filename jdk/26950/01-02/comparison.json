{"files":[{"patch":"@@ -223,1 +223,5 @@\n-     * targetdir} parameter.\n+     * targetdir} parameter, unless {@code targetdir} is {@code null}, in which\n+     * case it is located relative to the current working directory. By default,\n+     * symbolic links are followed. If the option\n+     * {@linkplain LinkOption#NOFOLLOW_LINKS NOFOLLOW_LINKS} is present then\n+     * symbolic links are not followed.\n@@ -231,0 +235,2 @@\n+     * @param   options\n+     *          options indicating how symbolic links are handled\n@@ -250,1 +256,2 @@\n-    T createLink(T link, SecureDirectoryStream<T> targetdir, T existing)\n+    T createLink(T link, SecureDirectoryStream<T> targetdir, T existing,\n+                 LinkOption... options)\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/SecureDirectoryStream.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -146,0 +146,1 @@\n+    static final int PREFIX_AT_SYMLINK_FOLLOW = AT_SYMLINK_FOLLOW;\n@@ -151,0 +152,1 @@\n+    static final int PREFIX_AT_SYMLINK_FOLLOW = 00;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixConstants.java.template","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,1 +139,2 @@\n-    static void linkat(int dfd1, UnixPath path1, int dfd2, UnixPath path2)\n+    static void linkat(int dfd1, UnixPath path1, int dfd2, UnixPath path2,\n+                       int flag)\n@@ -144,1 +145,1 @@\n-            linkat0(dfd1, buffer1.address(), dfd2, buffer2.address());\n+            linkat0(dfd1, buffer1.address(), dfd2, buffer2.address(), flag);\n@@ -148,1 +149,1 @@\n-                                       int dfd2, long addr2)\n+                                       int dfd2, long addr2, int flag)\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixNativeDispatcher.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -220,1 +220,1 @@\n-                           Path target)\n+                           Path target, LinkOption... options)\n@@ -232,1 +232,3 @@\n-                linkat(that.dfd, targetpath, this.dfd, linkpath);\n+                int targetfd = that != null ? that.dfd : AT_FDCWD;\n+                int flag = Util.followLinks(options) ? AT_SYMLINK_FOLLOW : 0;\n+                linkat(targetfd, targetpath, this.dfd, linkpath, flag);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixSecureDirectoryStream.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1032,2 +1032,2 @@\n-                                             int dfd1, long addr1,\n-                                             int dfd2, long addr2)\n+                                             jint dfd1, jlong addr1,\n+                                             jint dfd2, jlong addr2, jint flag)\n@@ -1039,1 +1039,1 @@\n-    RESTARTABLE(linkat(dfd1, name1, dfd2, name2, AT_SYMLINK_FOLLOW), err);\n+    RESTARTABLE(linkat(dfd1, name1, dfd2, name2, flag), err);\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixNativeDispatcher.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -500,4 +500,0 @@\n-        try {\n-            stream.createLink(link, null, file);\n-            shouldNotGetHere();\n-        } catch (NullPointerException x) { }\n","filename":"test\/jdk\/java\/nio\/file\/DirectoryStream\/SecureDS.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}