{"files":[{"patch":"@@ -1,186 +0,0 @@\n-\/*\n- * Copyright (c) 2002, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-import java.applet.Applet;\n-import java.io.*;\n-import java.net.*;\n-\n-\/**\n- * Simple Applet for exposing the Socket constructor\n- * bug.\n- *\/\n-public class SocketImplTest extends Applet {\n-\n-    static public void main(String[] args) {\n-        System.setSecurityManager(new SecurityManager());\n-        SocketImplTest s = new SocketImplTest();\n-        s.init();\n-        s.start();\n-    }\n-\n-\n-    \/**\n-     * A no-op SocketImpl descendant.\n-     *\/\n-    class MySocketImpl extends SocketImpl {\n-        protected void accept(SocketImpl impl) throws IOException {\n-        }\n-\n-        protected int available(){\n-            return 0;\n-        }\n-\n-        protected void bind(InetAddress host, int port){\n-        }\n-\n-        protected void close(){\n-        }\n-\n-        protected void connect(InetAddress address, int port){\n-        }\n-\n-        protected void connect(String host, int port){\n-        }\n-\n-        protected void connect(SocketAddress a, int t) throws IOException {\n-        }\n-\n-\n-        protected void create(boolean stream){\n-        }\n-\n-        protected InputStream getInputStream(){\n-            return null;\n-        }\n-\n-        protected OutputStream getOutputStream(){\n-            return null;\n-        }\n-\n-        protected void listen(int backlog){\n-        }\n-\n-        public Object getOption(int optID){\n-            return null;\n-        }\n-\n-        public void setOption(int optID, Object value){\n-        }\n-\n-        protected void sendUrgentData(int i){\n-        }\n-    }\n-\n-    class MyDatagramSocketImpl extends DatagramSocketImpl {\n-        protected void create() throws SocketException {\n-        }\n-\n-        protected void bind(int lport, InetAddress laddr) throws SocketException {\n-        }\n-\n-        protected void send(DatagramPacket p) throws IOException {\n-        }\n-\n-        protected int peek(InetAddress i) throws IOException {\n-            return 0;\n-        }\n-\n-        protected int peekData(DatagramPacket p) throws IOException {\n-            return 0;\n-        }\n-\n-        protected void receive(DatagramPacket p) throws IOException {\n-        }\n-\n-        protected void setTTL(byte ttl) throws IOException {\n-        }\n-\n-        protected byte getTTL() throws IOException {\n-            return 0;\n-        }\n-\n-        protected void setTimeToLive(int ttl) throws IOException {\n-        }\n-\n-        protected int getTimeToLive() throws IOException {\n-            return 0;\n-        }\n-\n-        protected void join(InetAddress inetaddr) throws IOException {\n-        }\n-\n-        protected void leave(InetAddress inetaddr) throws IOException {\n-        }\n-\n-        protected void joinGroup(SocketAddress mcastaddr, NetworkInterface netIf)\n-            throws IOException {\n-        }\n-\n-        protected void leaveGroup(SocketAddress mcastaddr, NetworkInterface netIf)\n-            throws IOException {\n-        }\n-\n-        protected void close() {\n-        }\n-\n-        public Object getOption(int optID){\n-            return null;\n-        }\n-\n-        public void setOption(int optID, Object value){\n-        }\n-\n-    }\n-\n-    \/**\n-     * A no-op Socket descendant.\n-     *\/\n-    class MySocket extends Socket {\n-        public MySocket(SocketImpl impl) throws IOException {\n-            super(impl);\n-        }\n-    }\n-\n-    class MyDatagramSocket extends DatagramSocket {\n-        public MyDatagramSocket(DatagramSocketImpl impl) {\n-            super(impl);\n-        }\n-    }\n-\n-    \/**\n-     * Our test case entrypoint. Generates\n-     * a SecurityException.\n-     *\/\n-    public void init(){\n-        MySocketImpl socketImpl = new MySocketImpl();\n-        MyDatagramSocketImpl dgramSocketImpl = new MyDatagramSocketImpl();\n-\n-        try{\n-            MySocket socko = new MySocket(socketImpl);\n-            MyDatagramSocket dsock = new MyDatagramSocket(dgramSocketImpl);\n-        } catch(IOException ioex){\n-            System.err.println(ioex);\n-        } catch(SecurityException sec) {\n-            throw new RuntimeException(\"Failed. Creation of socket throwing SecurityException: \");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/net\/Socket\/SocketImplTest.java","additions":0,"deletions":186,"binary":false,"changes":186,"status":"deleted"},{"patch":"@@ -1,74 +0,0 @@\n-<!DOCTYPE HTML PUBLIC \"-\/\/W3C\/\/DTD HTML 4.01 Transitional\/\/EN\">\n-<!--\n- Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-<!---->\n-<html>\n-  <head>\n-    <title>Disable Auto-adjust Daylight Saving Time Test<\/title>\n-  <\/head>\n-\n-  <body>\n-This applet tests the platform time zone detection on all platforms (Part I)\n-and on\/off of DST adjustment on Windows (Part II).\n-\n-Part I:\n-\n-Observe the displayed Time zone ID and the local time. If you can change\n-the platform time zone setting, try several time zones. If both the ID and\n-the local time, including the time zone name and its time zone offset, are\n-always correct, Part I passes. Note that some time zone IDs have their\n-aliases that may be displayed.  For example, \"US\/Pacific\" is an alias of\n-\"America\/Los_Angeles\".\n-\n-If you are running this applet in non-English locale, the time zone names\n-can be displayed in the local language and English by pushing the\n-English\/Local button.\n-\n-If platform time zones are NOT detected correctly, press the Fail button\n-to finish this applet.\n-\n-If this platform is Windows, proceed to Part II. Otherwise, press the Pass\n-button to finish this applet.\n-\n-Part II:\n-\n-Note that Part II may require the Administrator privilege to change\n-Windows setting.\n-\n-  1. Open the Date and Time control panel.\n-  2. Select any time zone where daylight saving time is *currently* in effect,\n-     such as \"(GMT-08:00) Pacific Time (US & Canada); Tijuana\",\n-     \"(GMT+10:00) Canberra, Melbourne, Sydney\", and Apply.\n-  3. Observe the local time on the control panel (Date&Time pane) and\n-     the applet local time should be the same (daylight time).\n-  4. Clear \"Automatically adjust clock for daylight saving changes\" and Apply.\n-  5. Observe the two local times should be the same (standard time).\n-  6. Select \"Automatically adjust clock for daylight saving changes\" and Apply.\n-\n-If the local time in the control panel and applet are always the same,\n-then this test passes. Press the Pass or Fail button based on the Part II\n-result and finish this applet.\n-\n-<applet code=\"DefaultTimeZoneTest.class\" width=500 height=90><\/applet>\n-  <\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/util\/TimeZone\/DefaultTimeZoneTest.html","additions":0,"deletions":74,"binary":false,"changes":74,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,6 +26,8 @@\n- * @bug 4296930 5033603 7092679\n- * @summary Make sure that Java runtime detects the platform time zone\n- * correctly. Also make sure that the system time zone detection code\n- * detects the \"Automatically adjust clock for daylight saving\n- * changes\" setting correctly on Windows.\n- * @run applet\/manual=yesno DefaultTimeZoneTest.html\n+ * @bug 4296930 5033603 7092679 8340326\n+ * @summary Ensure that Java detects the platform time zone correctly, even\n+ * if changed during runtime. Also ensure that the system time zone detection code\n+ * detects the \"Automatically adjust clock for daylight saving changes\" setting\n+ * correctly on Windows. This is a manual test dependent on making changes to\n+ * the platform setting of the machine and thus cannot be automated.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @run main\/manual DefaultTimeZoneTest\n@@ -34,5 +36,10 @@\n-import javax.swing.*;\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.text.*;\n-import java.util.*;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import java.awt.BorderLayout;\n+import java.awt.Window;\n+import java.lang.reflect.InvocationTargetException;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import java.util.TimeZone;\n@@ -40,8 +47,1 @@\n-public class DefaultTimeZoneTest extends JApplet implements Runnable {\n-    static final String FORMAT = \"yyyy-MM-dd HH:mm:ss zzzz (XXX)\";\n-    JLabel tzid;\n-    JLabel label;\n-    SimpleDateFormat sdf = new SimpleDateFormat(FORMAT);\n-    JButton button = new JButton(\"English\");\n-    Thread clock;\n-    boolean english = false;\n+public class DefaultTimeZoneTest  {\n@@ -49,27 +49,6 @@\n-    @Override\n-    public void init() {\n-        tzid = new JLabel(\"Time zone ID: \" + sdf.getTimeZone().getID(), SwingConstants.CENTER);\n-        tzid.setAlignmentX(Component.CENTER_ALIGNMENT);\n-        label = new JLabel(sdf.format(new Date()), SwingConstants.CENTER);\n-        label.setAlignmentX(Component.CENTER_ALIGNMENT);\n-        button.addActionListener(new ActionListener() {\n-                @Override\n-                @SuppressWarnings(\"deprecation\")\n-                public void actionPerformed(ActionEvent e) {\n-                    english = (english == false);\n-                    Locale loc = english ? Locale.US : Locale.getDefault();\n-                    sdf = new SimpleDateFormat(FORMAT, loc);\n-                    button.setLabel(!english ? \"English\" : \"Local\");\n-                }\n-            });\n-        button.setAlignmentX(Component.CENTER_ALIGNMENT);\n-        JPanel panel = new JPanel();\n-        panel.setLayout(new BoxLayout(panel, BoxLayout.PAGE_AXIS));\n-        panel.add(Box.createRigidArea(new Dimension(0, 10)));\n-        panel.add(tzid);\n-        panel.add(Box.createRigidArea(new Dimension(0, 5)));\n-        panel.add(label);\n-        panel.add(Box.createRigidArea(new Dimension(0, 10)));\n-        panel.add(button);\n-        getContentPane().add(panel);\n-    }\n+    private static final SimpleDateFormat SDF =\n+            new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss zzzz (XXX)\");\n+    private static final String INSTRUCTIONS =\n+            \"\"\"\n+            Tests the platform time zone detection on all platforms.\n+            (Part I) and on\/off of DST adjustment on Windows (Part II).\n@@ -77,5 +56,9 @@\n-    @Override\n-    public void start() {\n-        clock = new Thread(this);\n-        clock.start();\n-    }\n+            Part I:\n+            Observe the displayed Time zone ID and the local time.\n+            Change the platform time zone setting, then click the\n+            \"Update Time Zone\" button. If the ID and local time\n+            update correctly, part I passes, otherwise press fail. Note that\n+            some time zone IDs have their aliases that may be displayed.\n+            For example, \"US\/Pacific\" is an alias of \"America\/Los_Angeles\".\n+            If this platform is Windows, proceed to Part II. Otherwise, press\n+            the Pass button to complete this test.\n@@ -83,4 +66,3 @@\n-    @Override\n-    public void stop() {\n-        clock = null;\n-    }\n+            Part II:\n+            Note that Part II may require the Administrator privilege to change\n+            Windows setting.\n@@ -88,3 +70,9 @@\n-    @Override\n-    public void run() {\n-        Thread me = Thread.currentThread();\n+              1. Open the Settings app and navigate to Time & Language > Date & Time\n+              2. Select any time zone where daylight saving time is *currently*\n+                 in effect, such as \"(GMT-08:00) Pacific Time (US & Canada);\n+                 Tijuana\", \"(GMT+10:00) Canberra, Melbourne, Sydney\", and Apply.\n+              3. After pressing \"Update Time Zone\" button, observe that the local\n+                 time on the Settings app and the test local time are the same (daylight time).\n+              4. Turn off \"Adjust for daylight saving time automatically\"\n+              5. Observe the two local times should be the same (standard time).\n+              6. Turn on \"Adjust for daylight saving time automatically\"\n@@ -92,5 +80,29 @@\n-        while (clock == me) {\n-            \/\/ Reset the default time zone so that\n-            \/\/ TimeZone.getDefault will detect the platform time zone\n-            TimeZone.setDefault(null);\n-            System.setProperty(\"user.timezone\", \"\");\n+            If the local time in the control panel and test window are always the same,\n+            then this test passes. Press the Pass or Fail button based on the Part II\n+            result and complete the test.\n+           \"\"\";\n+\n+    public static void main(String[] args)\n+            throws InterruptedException, InvocationTargetException {\n+        \/\/ Force platform time zone as default time zone\n+        TimeZone.setDefault(null);\n+        System.setProperty(\"user.timezone\", \"\");\n+        \/\/ Construct test window\n+        PassFailJFrame.builder()\n+                .title(\"DefaultTimeZoneTest Instructions\")\n+                .testUI(createTest())\n+                .instructions(INSTRUCTIONS)\n+                .build().awaitAndCheck();\n+    }\n+\n+    private static Window createTest() {\n+        var contents = new JFrame(\"DefaultTimeZoneTest\");\n+        var label = new JLabel(SDF.format(new Date()));\n+        var panel = new JPanel();\n+        var button = new JButton(\"Update Time Zone\");\n+        panel.add(button);\n+        contents.setSize(350, 250);\n+        contents.add(label, BorderLayout.NORTH);\n+        contents.add(panel, BorderLayout.CENTER);\n+        \/\/ Update default time zone on button click\n+        button.addActionListener(e -> {\n@@ -98,9 +110,5 @@\n-            sdf.setTimeZone(tz);\n-            tzid.setText(\"Time zone ID: \" + tz.getID());\n-            label.setText(sdf.format(new Date()));\n-            repaint();\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException e) {\n-            }\n-        }\n+            SDF.setTimeZone(tz);\n+            label.setText(SDF.format(new Date()));\n+            contents.repaint();\n+        });\n+        return contents;\n","filename":"test\/jdk\/java\/util\/TimeZone\/DefaultTimeZoneTest.java","additions":81,"deletions":73,"binary":false,"changes":154,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @bug 8026404\n+ * @bug 8026404 8340326\n@@ -49,2 +49,2 @@\n-        ThreadGroup tg = new ThreadGroup(rootTG, \"FakeApplet\");\n-        final Thread t1 = new Thread(tg, \"createNewAppContext\") {\n+        ThreadGroup tg = new ThreadGroup(rootTG, \"main\");\n+        final Thread t1 = new Thread(tg, \"child\") {\n","filename":"test\/jdk\/java\/util\/logging\/TestMainAppContext.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 4957669 5017871\n+ * @bug 4957669 5017871 8340326\n@@ -98,1 +98,1 @@\n-    \/\/ the class loader code was copied from the now deleted AppletClassLoader\n+\n@@ -100,1 +100,1 @@\n-        private URL base;   \/* applet code base URL *\/\n+        private URL base;   \/* code base URL *\/\n","filename":"test\/jdk\/jdk\/internal\/loader\/URLClassPath\/ClassnameCharTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,41 +0,0 @@\n-\/*\n- * Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/* @test\n- * @summary SunTea applet fails to load under Mustang\n- * @bug 6380332\n- * @modules java.base\/sun.net.www\n- *\/\n-\n-import sun.net.www.ParseUtil;\n-import java.net.URI;\n-import java.net.URL;\n-\n-public class ParseUtil_6380332 {\n-    public static void main(String[] args) throws Exception {\n-        URI uri = ParseUtil.toURI(new URL(\"http:\/\/suntea.central.sun.com:-1\/servlet\/SunTEAServlet\"));\n-        if (uri == null) {\n-            throw new RuntimeException(\"Test failed: port number -1 should not fail method toURI()\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/sun\/net\/www\/ParseUtil_6380332.java","additions":0,"deletions":41,"binary":false,"changes":41,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6296310\n+ * @bug 6296310 8340326\n@@ -30,1 +30,2 @@\n- * @summary  REGRESSION: AppletClassLoader.getResourceAsStream() behaviour is wrong in some cases\n+ * @summary Prevent NPE in HttpURLConnection.getInputStream0() when\n+ *          content length is 0\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/B6296310.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6262486\n+ * @bug 6262486 8340326\n@@ -29,1 +29,1 @@\n- * @summary COMPATIBILITY: jagex_com - Monkey Puzzle applet fails to load\n+ * @summary Ensure HttpInputStream resets properly when cache is in use\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/ResponseCacheStream.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 4183204\n+ * @bug 4183204 8340326\n@@ -27,1 +27,1 @@\n- * port for an applet or application that does not have permission to listen\n+ * port for an application that does not have permission to listen\n","filename":"test\/jdk\/sun\/rmi\/transport\/tcp\/disableMultiplexing\/DisableMultiplexing.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @bug 8340326\n@@ -48,1 +49,0 @@\n-        \"appletviewer\",     \/\/ deprecated, don't test\n","filename":"test\/jdk\/tools\/launcher\/HelpFlagsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6545058 6611182 8016209 8139986 8162746 8278967\n+ * @bug 6545058 6611182 8016209 8139986 8162746 8278967 8340326\n@@ -70,1 +70,0 @@\n-        \"appletviewer\",\n","filename":"test\/jdk\/tools\/launcher\/VersionCheck.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}