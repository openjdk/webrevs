{"files":[{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4380809\n+ * @summary Focus disappears after deiconifying frame\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual DeiconifyTest\n+*\/\n+\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+\n+public class DeiconifyTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+         1. Activate frame \\\"Main frame\\\"\n+         be sure that button has focus\n+         2. Minimize frame and then restore it.\n+         If the button has focus then test passed, else failed\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"DeiconifyTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int)INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(DeiconifyTest::createTestUI)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI()   {\n+        Frame frame = new Frame(\"Main frame\");\n+        Button button = new Button(\"button\");\n+        button.addFocusListener(new FocusListener() {\n+              public void focusGained(FocusEvent fe) {\n+                  println(\"focus gained\");\n+              }\n+              public void focusLost(FocusEvent fe) {\n+                  println(\"focus lost\");\n+              }\n+          });\n+        frame.add(button);\n+        frame.setSize(300, 100);\n+\n+        return frame;\n+    }\n+\n+    static void println(String messageIn) {\n+        PassFailJFrame.log(messageIn);\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/DeiconifyTest.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 4157017\n+ * @summary Checks whether focus can be traversed when component not visible\n+           within parent container.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual HiddenTraversalTest\n+*\/\n+\n+import java.awt.Button;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+\n+public class HiddenTraversalTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+         Examine the Frame. If six buttons are visible, resize the frame\n+         so that only four are visible. If fewer than six buttons are\n+         visible, do nothing.\\n\n+         Now, repeatedly press the tab key. Focus should cycle through the\n+         visible and invisible buttons. If after six presses of the tab\n+         button 'Button 0' has focus, the test passes. If focus is instead\n+         stuck at 'Button 3', the test fails.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"HiddenTraversalTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(HiddenTraversalTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame f = new Frame(\"Focus test\");\n+        Panel p = new Panel(new FlowLayout());\n+        for (int i = 0; i < 6; i++) {\n+            p.add(new Button(\"Button \" + i));\n+        }\n+        f.add(p);\n+        f.setSize(200, 100);\n+        return f;\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/HiddenTraversalTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4472032\n+ * @summary Switching between lightweight menus by holizontal arrow key works incorrect\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual LightweightPopupTest\n+*\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+\n+public class LightweightPopupTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            When the test starts, you will see a frame titled\n+            'Lightweight Popup Test', which contains a button\n+            (titled 'JButton') and two menus ('Menu 1' and 'Menu 2').\n+            Make sure that both menus, when expanded, fit entirely\n+            into the frame. Now take the following steps:\n+                1. Click on 'JButton' to focus it.\n+                2. Click 'Menu 1' to expand it.\n+                3. Press right arrow to select 'Menu 2'.\n+            Now check where the focus is. If it is on 'JButton'\n+            (you can press space bar to see if it is there), then\n+            the test failed. If 'JButton' is not focused, then\n+            the test passed.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"LightweightPopupTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int)INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(LightweightPopupTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+\n+        JFrame frame = new JFrame(\"Lightweight Popup Test\");\n+        JButton button = new JButton(\"JButton\");\n+        JMenuBar menuBar = new JMenuBar();\n+        JMenu menu1 = new JMenu(\"Menu 1\");\n+        menu1.add(new JMenuItem(\"Menu Item 1\"));\n+        menu1.add(new JMenuItem(\"Menu Item 2\"));\n+        menuBar.add(menu1);\n+        JMenu menu2 = new JMenu(\"Menu 2\");\n+        menu2.add(new JMenuItem(\"Menu Item 3\"));\n+        menu2.add(new JMenuItem(\"Menu Item 4\"));\n+        menuBar.add(menu2);\n+\n+        frame.add(button);\n+        frame.setJMenuBar(menuBar);\n+        frame.setSize(300, 200);\n+        return frame;\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/LightweightPopupTest.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4396407\n+ * @summary Tests that after proxied window were hidden focus is being restored correctly\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ProxiedWindowHideTest\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Container;\n+import javax.swing.Box;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+\n+public class ProxiedWindowHideTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+           You will see JFrame with title 'TEST'.\n+           Click on JComboBox, list will expand then select any item in it.\n+           After selection, list should collapse.\n+           Click on Button('Push').\n+           If you are able to make it focused by mouse click,\n+           (black rectangle will appear around it) the test is PASSED,\n+           otherwise the test is FAILED.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ProxiedWindowHideTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(ProxiedWindowHideTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"ProxiedWindowHideTest frame\");\n+        String[] petStrings = { \"Bird\", \"Cat\", \"Dog\", \"Rabbit\", \"Pig\" };\n+        JComboBox cb = new JComboBox(petStrings);\n+\n+        cb.setLightWeightPopupEnabled(false);\n+        Container parent = Box.createVerticalBox();\n+        parent.add(new Button(\"Push\"));\n+        parent.add(cb);\n+        frame.add(parent, BorderLayout.CENTER);\n+        frame.pack();\n+        return frame;\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/ProxiedWindowHideTest.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"}]}