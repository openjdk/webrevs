{"files":[{"patch":"@@ -791,1 +791,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-        _counters_update(this)\n+        _counters_update_task(this)\n@@ -76,1 +76,1 @@\n-  _counters_update.enroll();\n+  _counters_update_task.enroll();\n@@ -111,1 +111,1 @@\n-  _counters_update.notify_heap_changed();\n+  _counters_update_task.notify_heap_changed();\n@@ -115,1 +115,1 @@\n-  _counters_update.set_forced_counters_update(value);\n+  _counters_update_task.set_forced_counters_update(value);\n@@ -119,1 +119,1 @@\n-  _counters_update.handle_force_counters_update();\n+  _counters_update_task.handle_force_counters_update();\n@@ -122,1 +122,1 @@\n-void ShenandoahPeriodicCountersUpdate::task() {\n+void ShenandoahPeriodicCountersUpdateTask::task() {\n@@ -127,1 +127,1 @@\n-void ShenandoahPeriodicCountersUpdate::handle_counters_update() {\n+void ShenandoahPeriodicCountersUpdateTask::handle_counters_update() {\n@@ -134,1 +134,1 @@\n-void ShenandoahPeriodicCountersUpdate::handle_force_counters_update() {\n+void ShenandoahPeriodicCountersUpdateTask::handle_force_counters_update() {\n@@ -141,1 +141,1 @@\n-void ShenandoahPeriodicCountersUpdate::notify_heap_changed() {\n+void ShenandoahPeriodicCountersUpdateTask::notify_heap_changed() {\n@@ -147,1 +147,1 @@\n-void ShenandoahPeriodicCountersUpdate::set_forced_counters_update(bool value) {\n+void ShenandoahPeriodicCountersUpdateTask::set_forced_counters_update(bool value) {\n@@ -149,1 +149,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMonitoringSupport.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-class ShenandoahPeriodicCountersUpdate : public PeriodicTask {\n+class ShenandoahPeriodicCountersUpdateTask : public PeriodicTask {\n@@ -43,1 +43,1 @@\n-  ShenandoahMonitoringSupport* _monitoring_support;\n+  ShenandoahMonitoringSupport* const _monitoring_support;\n@@ -46,1 +46,1 @@\n-  explicit ShenandoahPeriodicCountersUpdate(ShenandoahMonitoringSupport* monitoring_support) :\n+  explicit ShenandoahPeriodicCountersUpdateTask(ShenandoahMonitoringSupport* monitoring_support) :\n@@ -69,1 +69,1 @@\n-  ShenandoahPeriodicCountersUpdate _counters_update;\n+  ShenandoahPeriodicCountersUpdateTask _counters_update_task;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMonitoringSupport.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -342,1 +342,1 @@\n-void ShenandoahPeriodicPacerNotify::task() {\n+void ShenandoahPeriodicPacerNotifyTask::task() {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,3 @@\n-class ShenandoahPeriodicPacerNotify : public PeriodicTask {\n+class ShenandoahPeriodicPacerNotifyTask : public PeriodicTask {\n+private:\n+  ShenandoahPacer* const _pacer;\n@@ -41,1 +43,1 @@\n-  explicit ShenandoahPeriodicPacerNotify(ShenandoahPacer* pacer) :\n+  explicit ShenandoahPeriodicPacerNotifyTask(ShenandoahPacer* pacer) :\n@@ -46,2 +48,0 @@\n-private:\n-  ShenandoahPacer* _pacer;\n@@ -67,1 +67,1 @@\n-  ShenandoahPeriodicPacerNotify _notify_waiters;\n+  ShenandoahPeriodicPacerNotifyTask _notify_waiters_task;\n@@ -84,1 +84,1 @@\n-  ShenandoahPacer(ShenandoahHeap* heap) :\n+  explicit ShenandoahPacer(ShenandoahHeap* heap) :\n@@ -89,1 +89,1 @@\n-          _notify_waiters(this),\n+          _notify_waiters_task(this),\n@@ -94,1 +94,1 @@\n-    _notify_waiters.enroll();\n+    _notify_waiters_task.enroll();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPacer.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}