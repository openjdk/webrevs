{"files":[{"patch":"@@ -66,0 +66,1 @@\n+import jdk.internal.util.ArraysSupport;\n@@ -1183,0 +1184,2 @@\n+        \/\/ CEN size is limited to the maximum array size in the JDK\n+        private static final int MAX_CEN_SIZE = ArraysSupport.SOFT_MAX_ARRAY_LENGTH;\n@@ -1190,1 +1193,1 @@\n-        private byte[] cen;                  \/\/ CEN & ENDHDR\n+        private byte[] cen;                  \/\/ CEN\n@@ -1246,1 +1249,1 @@\n-            if (headerSize > 0xFFFF || pos + headerSize > cen.length - ENDHDR) {\n+            if (headerSize > 0xFFFF || pos + headerSize > cen.length) {\n@@ -1299,1 +1302,1 @@\n-            if (extraEndOffset > cen.length - ENDHDR) {\n+            if (extraEndOffset > cen.length) {\n@@ -1737,2 +1740,2 @@\n-                \/\/ read in the CEN and END\n-                if (end.cenlen + ENDHDR >= Integer.MAX_VALUE) {\n+                \/\/ read in the CEN\n+                if (end.cenlen > MAX_CEN_SIZE) {\n@@ -1741,2 +1744,2 @@\n-                cen = this.cen = new byte[(int)(end.cenlen + ENDHDR)];\n-                if (readFullyAt(cen, 0, cen.length, cenpos) != end.cenlen + ENDHDR) {\n+                cen = this.cen = new byte[(int)end.cenlen];\n+                if (readFullyAt(cen, 0, cen.length, cenpos) != end.cenlen) {\n@@ -1771,1 +1774,1 @@\n-            int limit = cen.length - ENDHDR;\n+            int limit = cen.length;\n@@ -1834,1 +1837,1 @@\n-            if (pos + ENDHDR != cen.length) {\n+            if (pos != cen.length) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @modules java.base\/jdk.internal.util\n@@ -30,0 +31,1 @@\n+import jdk.internal.util.ArraysSupport;\n@@ -50,1 +52,1 @@\n-    static final int MAX_CEN_SIZE = Integer.MAX_VALUE - ZipFile.ENDHDR - 1;\n+    static final int MAX_CEN_SIZE = ArraysSupport.SOFT_MAX_ARRAY_LENGTH;\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/CenSizeTooLarge.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @modules java.base\/jdk.internal.util\n@@ -30,0 +31,1 @@\n+import jdk.internal.util.ArraysSupport;\n@@ -71,1 +73,1 @@\n-    private static int MAX_CEN_SIZE = Integer.MAX_VALUE - ENDHDR - 1;\n+    private static int MAX_CEN_SIZE = ArraysSupport.SOFT_MAX_ARRAY_LENGTH;\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/EndOfCenValidation.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}