{"files":[{"patch":"@@ -4605,1 +4605,1 @@\n-  MemTracker::record_virtual_memory_type((address)codebuf, mtInternal);\n+  MemTracker::record_virtual_memory_tag((address)codebuf, mtInternal);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2177,1 +2177,1 @@\n-  \/\/ Map the archived heap data. No need to call MemTracker::record_virtual_memory_type()\n+  \/\/ Map the archived heap data. No need to call MemTracker::record_virtual_memory_tag()\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1302,1 +1302,1 @@\n-      MemTracker::record_virtual_memory_type(archive_space_rs.base(), mtClassShared);\n+      MemTracker::record_virtual_memory_tag(archive_space_rs.base(), mtClassShared);\n@@ -1364,2 +1364,2 @@\n-    MemTracker::record_virtual_memory_type(archive_space_rs.base(), mtClassShared);\n-    MemTracker::record_virtual_memory_type(class_space_rs.base(), mtClass);\n+    MemTracker::record_virtual_memory_tag(archive_space_rs.base(), mtClassShared);\n+    MemTracker::record_virtual_memory_tag(class_space_rs.base(), mtClass);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-  MemTracker::record_virtual_memory_type((address)rs.base(), mem_tag);\n+  MemTracker::record_virtual_memory_tag((address)rs.base(), mem_tag);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RegionToSpaceMapper.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-  MemTracker::record_virtual_memory_type(backing_store.base(), mtGC);\n+  MemTracker::record_virtual_memory_tag(backing_store.base(), mtGC);\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-  MemTracker::record_virtual_memory_type((address)rs.base(), mtGC);\n+  MemTracker::record_virtual_memory_tag((address)rs.base(), mtGC);\n","filename":"src\/hotspot\/share\/gc\/parallel\/parMarkBitMap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -238,1 +238,1 @@\n-  MemTracker::record_virtual_memory_type((address)rs.base(), mtGC);\n+  MemTracker::record_virtual_memory_tag((address)rs.base(), mtGC);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-  MemTracker::record_virtual_memory_type((address)rs.base(), mtGC);\n+  MemTracker::record_virtual_memory_tag((address)rs.base(), mtGC);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialBlockOffsetTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-  MemTracker::record_virtual_memory_type((address)heap_rs.base(), mtGC);\n+  MemTracker::record_virtual_memory_tag((address)heap_rs.base(), mtGC);\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-  MemTracker::record_virtual_memory_type(_map_space.base(), mtGC);\n+  MemTracker::record_virtual_memory_tag(_map_space.base(), mtGC);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-  MemTracker::record_virtual_memory_type(bitmap.base(), mtGC);\n+  MemTracker::record_virtual_memory_tag(bitmap.base(), mtGC);\n@@ -279,1 +279,1 @@\n-    MemTracker::record_virtual_memory_type(verify_bitmap.base(), mtGC);\n+    MemTracker::record_virtual_memory_tag(verify_bitmap.base(), mtGC);\n@@ -293,1 +293,1 @@\n-  MemTracker::record_virtual_memory_type(aux_bitmap.base(), mtGC);\n+  MemTracker::record_virtual_memory_tag(aux_bitmap.base(), mtGC);\n@@ -311,1 +311,1 @@\n-  MemTracker::record_virtual_memory_type(region_storage.base(), mtGC);\n+  MemTracker::record_virtual_memory_tag(region_storage.base(), mtGC);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -185,1 +185,1 @@\n-  MemTracker::record_virtual_memory_type((void*)start, mtJavaHeap);\n+  MemTracker::record_virtual_memory_tag((void*)start, mtJavaHeap);\n","filename":"src\/hotspot\/share\/gc\/x\/xVirtualMemory.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-  MemTracker::record_virtual_memory_type((address)_rs.base(), mtTracing);\n+  MemTracker::record_virtual_memory_tag((address)_rs.base(), mtTracing);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/storage\/jfrVirtualMemory.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-  MemTracker::record_virtual_memory_type((address)_segmap.low_boundary(), mtCode);\n+  MemTracker::record_virtual_memory_tag((address)_segmap.low_boundary(), mtCode);\n","filename":"src\/hotspot\/share\/memory\/heap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -775,1 +775,1 @@\n-    MemTracker::record_virtual_memory_type((address)rs.base(), mtClass);\n+    MemTracker::record_virtual_memory_tag((address)rs.base(), mtClass);\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -262,1 +262,1 @@\n-  MemTracker::record_virtual_memory_type(rs.base(), mtMetaspace);\n+  MemTracker::record_virtual_memory_tag(rs.base(), mtMetaspace);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceNode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -656,1 +656,1 @@\n-    MemTracker::record_virtual_memory_type((address)base(), mtJavaHeap);\n+    MemTracker::record_virtual_memory_tag((address)base(), mtJavaHeap);\n@@ -674,1 +674,1 @@\n-  MemTracker::record_virtual_memory_type((address)base(), mtCode);\n+  MemTracker::record_virtual_memory_tag((address)base(), mtCode);\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-  static inline void record_virtual_memory_type(void* addr, MemTag mem_tag) {\n+  static inline void record_virtual_memory_tag(void* addr, MemTag mem_tag) {\n","filename":"src\/hotspot\/share\/nmt\/memTracker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2412,1 +2412,1 @@\n-      MemTracker::record_virtual_memory_type((void*)bad_address, mtInternal);\n+      MemTracker::record_virtual_memory_tag((void*)bad_address, mtInternal);\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -711,1 +711,1 @@\n-  MemTracker::record_virtual_memory_type((address)addr, mtTest);\n+  MemTracker::record_virtual_memory_tag((address)addr, mtTest);\n@@ -718,1 +718,1 @@\n-  MemTracker::record_virtual_memory_type((address)addr, mtTest);\n+  MemTracker::record_virtual_memory_tag((address)addr, mtTest);\n@@ -725,1 +725,1 @@\n-  MemTracker::record_virtual_memory_type((address)(uintptr_t)addr, mtTest);\n+  MemTracker::record_virtual_memory_tag((address)(uintptr_t)addr, mtTest);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    MemTracker::record_virtual_memory_type((address)polling_page, mtSafepoint);\n+    MemTracker::record_virtual_memory_tag((address)polling_page, mtSafepoint);\n","filename":"src\/hotspot\/share\/runtime\/safepointMechanism.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -714,1 +714,1 @@\n-    MemTracker::record_virtual_memory_type(page, mtInternal);\n+    MemTracker::record_virtual_memory_tag(page, mtInternal);\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    MemTag MEM_TYPE>\n+    MemTag MEM_TAG>\n@@ -55,1 +55,1 @@\n-      table = NEW_C_HEAP_ARRAY(Node*, table_size, MEM_TYPE);\n+      table = NEW_C_HEAP_ARRAY(Node*, table_size, MEM_TAG);\n@@ -75,1 +75,1 @@\n-    MemTag MEM_TYPE = mtInternal,\n+    MemTag MEM_TAG = mtInternal,\n@@ -80,2 +80,2 @@\n-    ResizeableResourceHashtableStorage<K, V, ALLOC_TYPE, MEM_TYPE>,\n-    K, V, ALLOC_TYPE, MEM_TYPE, HASH, EQUALS> {\n+    ResizeableResourceHashtableStorage<K, V, ALLOC_TYPE, MEM_TAG>,\n+    K, V, ALLOC_TYPE, MEM_TAG, HASH, EQUALS> {\n@@ -84,2 +84,2 @@\n-  using BASE = ResourceHashtableBase<ResizeableResourceHashtableStorage<K, V, ALLOC_TYPE, MEM_TYPE>,\n-                                     K, V, ALLOC_TYPE, MEM_TYPE, HASH, EQUALS>;\n+  using BASE = ResourceHashtableBase<ResizeableResourceHashtableStorage<K, V, ALLOC_TYPE, MEM_TAG>,\n+                                     K, V, ALLOC_TYPE, MEM_TAG, HASH, EQUALS>;\n","filename":"src\/hotspot\/share\/utilities\/resizeableResourceHash.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    MemTag MEM_TYPE,\n+    MemTag MEM_TAG,\n@@ -156,1 +156,1 @@\n-      *ptr = new (MEM_TYPE) Node(hv, key, value, *ptr);\n+      *ptr = new (MEM_TAG) Node(hv, key, value, *ptr);\n@@ -177,1 +177,1 @@\n-        *ptr = new (MEM_TYPE) Node(hv, key, value);\n+        *ptr = new (MEM_TAG) Node(hv, key, value);\n@@ -196,1 +196,1 @@\n-        *ptr = new (MEM_TYPE) Node(hv, key);\n+        *ptr = new (MEM_TAG) Node(hv, key);\n@@ -218,1 +218,1 @@\n-        *ptr = new (MEM_TYPE) Node(hv, key, value);\n+        *ptr = new (MEM_TAG) Node(hv, key, value);\n","filename":"src\/hotspot\/share\/utilities\/resourceHash.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}