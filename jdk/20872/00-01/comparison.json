{"files":[{"patch":"@@ -70,1 +70,1 @@\n-static const char* get_shortname_for_nmt_flag(MemTag mem_tag) {\n+static const char* get_shortname_for_mem_tag(MemTag mem_tag) {\n@@ -258,1 +258,1 @@\n-          _out->print(\"%s\", get_shortname_for_nmt_flag(mem_tag));\n+          _out->print(\"%s\", get_shortname_for_mem_tag(mem_tag));\n","filename":"src\/hotspot\/share\/nmt\/memMapPrinter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -851,2 +851,2 @@\n-        \/\/ This site was originally allocated with one type, then released,\n-        \/\/ then re-allocated at the same site (as far as we can tell) with a different type.\n+        \/\/ This site was originally allocated with one memory type, then released,\n+        \/\/ then re-allocated at the same site (as far as we can tell) with a different memory type.\n","filename":"src\/hotspot\/share\/nmt\/memReporter.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -83,1 +83,0 @@\n-      return MallocTracker::record_malloc(mem_base, size, mem_tag, stack);\n","filename":"src\/hotspot\/share\/nmt\/memTracker.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,2 +51,2 @@\n-    summary->reserve_memory(diff.type[i].commit);\n-    summary->commit_memory(diff.type[i].commit);\n+    summary->reserve_memory(diff.tag[i].commit);\n+    summary->commit_memory(diff.tag[i].commit);\n@@ -60,2 +60,2 @@\n-    summary->reserve_memory(diff.type[i].commit);\n-    summary->commit_memory(diff.type[i].commit);\n+    summary->reserve_memory(diff.tag[i].commit);\n+    summary->commit_memory(diff.tag[i].commit);\n@@ -108,2 +108,2 @@\n-                  VMATree::statetype_to_string(broken_start->val().out.state()),\n-                  VMATree::statetype_to_string(broken_end->val().in.state()));\n+                  VMATree::statetype_to_string(broken_start->val().out.tag()),\n+                  VMATree::statetype_to_string(broken_end->val().in.tag()));\n","filename":"src\/hotspot\/share\/nmt\/memoryFileTracker.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -400,2 +400,2 @@\n-      tty->print_cr(\"Error: existing region: [\" INTPTR_FORMAT \"-\" INTPTR_FORMAT \"), type %u.\\n\"\n-                    \"       new region: [\" INTPTR_FORMAT \"-\" INTPTR_FORMAT \"), type %u.\",\n+      tty->print_cr(\"Error: existing region: [\" INTPTR_FORMAT \"-\" INTPTR_FORMAT \"), memory tag %u.\\n\"\n+                    \"       new region: [\" INTPTR_FORMAT \"-\" INTPTR_FORMAT \"), memory tag %u.\",\n@@ -560,1 +560,1 @@\n-\/\/  stack and the memory types of the original section.\n+\/\/  stack and the memory tags of the original section.\n","filename":"src\/hotspot\/share\/nmt\/virtualMemoryTracker.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -86,2 +86,2 @@\n-        \/\/ reserve [x1, A), type1; ... reserve [A, x2), type2; or\n-        \/\/ reserve [A, x1), type1; ... reserve [A, x2), type2;\n+        \/\/ reserve [x1, A), mem_tag1; ... reserve [A, x2), mem_tag2; or\n+        \/\/ reserve [A, x1), mem_tag1; ... reserve [A, x2), mem_tag2;\n@@ -150,1 +150,1 @@\n-    SingleDiff& rescom = diff.type[NMTUtil::tag_to_index(LEQ_A.out().mem_tag())];\n+    SingleDiff& rescom = diff.tag[NMTUtil::tag_to_index(LEQ_A.out().mem_tag())];\n@@ -166,1 +166,1 @@\n-    SingleDiff& rescom = diff.type[NMTUtil::tag_to_index(delete_me.in().mem_tag())];\n+    SingleDiff& rescom = diff.tag[NMTUtil::tag_to_index(delete_me.in().mem_tag())];\n@@ -181,1 +181,1 @@\n-      SingleDiff& rescom = diff.type[NMTUtil::tag_to_index(prev.out().mem_tag())];\n+      SingleDiff& rescom = diff.tag[NMTUtil::tag_to_index(prev.out().mem_tag())];\n@@ -184,1 +184,1 @@\n-      SingleDiff& rescom = diff.type[NMTUtil::tag_to_index(prev.out().mem_tag())];\n+      SingleDiff& rescom = diff.tag[NMTUtil::tag_to_index(prev.out().mem_tag())];\n@@ -191,1 +191,1 @@\n-  SingleDiff& rescom = diff.type[NMTUtil::tag_to_index(metadata.mem_tag)];\n+  SingleDiff& rescom = diff.tag[NMTUtil::tag_to_index(metadata.mem_tag)];\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-    SingleDiff type[mt_number_of_tags];\n+    SingleDiff tag[mt_number_of_tags];\n@@ -165,1 +165,1 @@\n-        type[i] = SingleDiff{0, 0};\n+        tag[i] = SingleDiff{0, 0};\n","filename":"src\/hotspot\/share\/nmt\/vmatree.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-      return AllocateHeap(size, MemTag::mtObjectMonitor);\n+      return AllocateHeap(size, mtObjectMonitor);\n@@ -70,1 +70,1 @@\n-  using ConcurrentTable = ConcurrentHashTable<Config, MemTag::mtObjectMonitor>;\n+  using ConcurrentTable = ConcurrentHashTable<Config, mtObjectMonitor>;\n","filename":"src\/hotspot\/share\/runtime\/lightweightSynchronizer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -916,3 +916,3 @@\n-  static ssize_t recv(int fd, char* buf, size_t nBytes, uint type);\n-  static ssize_t send(int fd, char* buf, size_t nBytes, uint type);\n-  static ssize_t raw_send(int fd, char* buf, size_t nBytes, uint type);\n+  static ssize_t recv(int fd, char* buf, size_t nBytes, uint flags);\n+  static ssize_t send(int fd, char* buf, size_t nBytes, uint flags);\n+  static ssize_t raw_send(int fd, char* buf, size_t nBytes, uint flags);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}