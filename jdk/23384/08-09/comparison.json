{"files":[{"patch":"@@ -915,36 +915,1 @@\n-        List<LocalDateTime> dateTimes = new ArrayList<>();\n-        int[] years = {\n-                -1, -10, -100, -1000, -10000, -100000, -1000000, -10000000, -100000000, -999999999,\n-                0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 999999999\n-        };\n-        int[] months = {1, 12};\n-        int[] days = {1, 28};\n-        int[] hours = {0, 9, 23};\n-        int[] minutes = {0, 9, 59};\n-        int[] seconds = {0, 9, 59};\n-        int[] nanos = {\n-                0, 9,\n-                10, 99,\n-                100, 999,\n-                1000, 9999,\n-                10000, 99999,\n-                100000, 999999,\n-                1000000, 9999999,\n-                10000000, 99999999,\n-                10000000, 999999999\n-        };\n-        for (int year : years) {\n-            for (int month : months) {\n-                for (int day : days) {\n-                    for (int hour : hours) {\n-                        for (int minute : minutes) {\n-                            for (int second : seconds) {\n-                                for (int nano : nanos) {\n-                                    dateTimes.add(LocalDateTime.of(year, month, day, hour, minute, second, nano));\n-                                }\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-        }\n+        List<LocalDateTime> dateTimes = dateTimes(true);\n@@ -1028,23 +993,1 @@\n-        List<LocalDateTime> dateTimes = new ArrayList<>();\n-        int[] years = {\n-                -1, -10, -100, -1000, -10000, -100000, -1000000, -10000000, -100000000, -999999999,\n-                0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 999999999\n-        };\n-        int[] months = {1, 12};\n-        int[] days = {1, 28};\n-        int[] hours = {0, 9, 23};\n-        int[] minutes = {0, 9, 59};\n-        int[] seconds = {0, 9, 59};\n-        for (int year : years) {\n-            for (int month : months) {\n-                for (int day : days) {\n-                    for (int hour : hours) {\n-                        for (int minute : minutes) {\n-                            for (int second : seconds) {\n-                                dateTimes.add(LocalDateTime.of(year, month, day, hour, minute, second));\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-        }\n+        List<LocalDateTime> dateTimes = dateTimes(false);\n@@ -1053,2 +996,2 @@\n-        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(\"u-M-d\", Locale.US);\n-        DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern(\"H:m:s\", Locale.US);\n+        DateTimeFormatter dateFormatter     = DateTimeFormatter.ofPattern(\"u-M-d\", Locale.US);\n+        DateTimeFormatter timeFormatter     = DateTimeFormatter.ofPattern(\"H:m:s\", Locale.US);\n@@ -1083,0 +1026,56 @@\n+\n+    static List<LocalDateTime> dateTimes(boolean includeNanos) {\n+        int[] years = {\n+                -1, -10, -100, -1000, -10000, -100000, -1000000, -10000000, -100000000, -999999999,\n+                0, 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 999999999\n+        };\n+        int[] months  = {1, 12};\n+        int[] days    = {1, 28};\n+        int[] hours   = {0, 9, 23};\n+        int[] minutes = {0, 9, 59};\n+        int[] seconds = {0, 9, 59};\n+        int[] nanos = {\n+                0, 9,\n+                10, 99,\n+                100, 999,\n+                1000, 9999,\n+                10000, 99999,\n+                100000, 999999,\n+                1000000, 9999999,\n+                10000000, 99999999,\n+                10000000, 999999999\n+        };\n+\n+        List<LocalDate> localDates = new ArrayList<>();\n+        for (int year : years) {\n+            for (int month : months) {\n+                for (int day : days) {\n+                    localDates.add(LocalDate.of(year, month, day));\n+                }\n+            }\n+        }\n+\n+        List<LocalTime> localTimes = new ArrayList<>();\n+        for (int hour : hours) {\n+            for (int minute : minutes) {\n+                for (int second : seconds) {\n+                    if (includeNanos) {\n+                        for (int nano : nanos) {\n+                            localTimes.add(LocalTime.of(hour, minute, second, nano));\n+                        }\n+                    } else {\n+                        localTimes.add(LocalTime.of(hour, minute, second));\n+                    }\n+                }\n+            }\n+        }\n+\n+        List<LocalDateTime> dateTimes = new ArrayList<>();\n+        for (LocalDate localDate : localDates) {\n+            for (LocalTime localTime : localTimes) {\n+                dateTimes.add(LocalDateTime.of(localDate, localTime));\n+            }\n+        }\n+\n+        return dateTimes;\n+    }\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/format\/TCKDateTimeFormatter.java","additions":60,"deletions":61,"binary":false,"changes":121,"status":"modified"}]}