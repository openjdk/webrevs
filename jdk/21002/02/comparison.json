{"files":[{"patch":"@@ -80,0 +80,2 @@\n+    private static final MethodHandles.Lookup.ClassOption[] LAMBDA_CLASS_OPTIONS = { NESTMATE, STRONG };\n+\n@@ -351,1 +353,1 @@\n-            return caller.makeHiddenClassDefiner(lambdaClassName, classBytes, Set.of(NESTMATE, STRONG), lambdaProxyClassFileDumper)\n+            return caller.makeHiddenClassDefiner(lambdaClassName, classBytes, lambdaProxyClassFileDumper, LAMBDA_CLASS_OPTIONS)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-import java.util.Set;\n@@ -227,1 +226,1 @@\n-        Class<?> invokerClass = LOOKUP.makeHiddenClassDefiner(className, classFile, Set.of(), dumper())\n+        Class<?> invokerClass = LOOKUP.makeHiddenClassDefiner(className, classFile, dumper())\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1046,0 +1046,1 @@\n+        private static final Lookup.ClassOption[] INVOKER_CLASS_OPTIONS = { NESTMATE };\n@@ -1114,1 +1115,1 @@\n-                        .makeHiddenClassDefiner(name, INJECTED_INVOKER_TEMPLATE, Set.of(NESTMATE), dumper())\n+                        .makeHiddenClassDefiner(name, INJECTED_INVOKER_TEMPLATE, dumper(), INVOKER_CLASS_OPTIONS)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -288,1 +288,1 @@\n-        var definer = new Lookup(intfc).makeHiddenClassDefiner(className, template, Set.of(), DUMPER);\n+        var definer = new Lookup(intfc).makeHiddenClassDefiner(className, template, DUMPER);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleProxies.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1909,1 +1909,1 @@\n-            static int optionsToFlag(Set<ClassOption> options) {\n+            static int optionsToFlag(ClassOption[] options) {\n@@ -1916,0 +1916,2 @@\n+\n+            private static final ClassOption[] NO_OPTIONS = new ClassOption[0];\n@@ -2136,1 +2138,1 @@\n-            return makeHiddenClassDefiner(bytes.clone(), Set.of(options), false).defineClassAsLookup(initialize);\n+            return makeHiddenClassDefiner(bytes.clone(), false, options).defineClassAsLookup(initialize);\n@@ -2223,1 +2225,1 @@\n-            return makeHiddenClassDefiner(bytes.clone(), Set.of(options), false)\n+            return makeHiddenClassDefiner(bytes.clone(), false, options)\n@@ -2369,1 +2371,1 @@\n-            return makeHiddenClassDefiner(cf, Set.of(), false, dumper);\n+            return makeHiddenClassDefiner(cf, false, dumper, ClassOption.NO_OPTIONS);\n@@ -2389,2 +2391,2 @@\n-                                                    Set<ClassOption> options,\n-                                                    boolean accessVmAnnotations) {\n+                                                    boolean accessVmAnnotations,\n+                                                    ClassOption[] options) {\n@@ -2392,1 +2394,16 @@\n-            return makeHiddenClassDefiner(cf, options, accessVmAnnotations, defaultDumper());\n+            return makeHiddenClassDefiner(cf, accessVmAnnotations, defaultDumper(), options);\n+        }\n+\n+        \/**\n+         * Returns a ClassDefiner that creates a {@code Class} object of a hidden class\n+         * from the given bytes and the given options.  No package name check on the given bytes.\n+         *\n+         * @param name    internal name that specifies the prefix of the hidden class\n+         * @param bytes   class bytes\n+         * @param dumper  dumper to write the given bytes to the dumper's output directory\n+         * @return ClassDefiner that defines a hidden class of the given bytes and options.\n+         *\/\n+        ClassDefiner makeHiddenClassDefiner(String name, byte[] bytes, ClassFileDumper dumper) {\n+            Objects.requireNonNull(dumper);\n+            \/\/ skip name and access flags validation\n+            return makeHiddenClassDefiner(ClassFile.newInstanceNoCheck(name, bytes), false, dumper, ClassOption.NO_OPTIONS);\n@@ -2405,1 +2422,1 @@\n-        ClassDefiner makeHiddenClassDefiner(String name, byte[] bytes, Set<ClassOption> options, ClassFileDumper dumper) {\n+        ClassDefiner makeHiddenClassDefiner(String name, byte[] bytes, ClassFileDumper dumper, ClassOption... options) {\n@@ -2408,1 +2425,1 @@\n-            return makeHiddenClassDefiner(ClassFile.newInstanceNoCheck(name, bytes), options, false, dumper);\n+            return makeHiddenClassDefiner(ClassFile.newInstanceNoCheck(name, bytes), false, dumper, options);\n@@ -2421,1 +2438,0 @@\n-                                                    Set<ClassOption> options,\n@@ -2423,1 +2439,2 @@\n-                                                    ClassFileDumper dumper) {\n+                                                    ClassFileDumper dumper,\n+                                                    ClassOption[] options) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":28,"deletions":11,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -1356,1 +1356,1 @@\n-                var hiddenClass = lookup.makeHiddenClassDefiner(CLASS_NAME, classBytes, Set.of(), DUMPER)\n+                var hiddenClass = lookup.makeHiddenClassDefiner(CLASS_NAME, classBytes, DUMPER)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}