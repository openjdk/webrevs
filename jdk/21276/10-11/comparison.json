{"files":[{"patch":"@@ -5532,1 +5532,2 @@\n-    ldr_patchable(dst, Address((address)obj, rspec));\n+    address dummy = address(uintptr_t(pc()) & -wordSize); \/\/ A nearby aligned address\n+    ldr(dst, Address(dummy, rspec)); \/\/ relocate_code_to replaces dummy with a real address\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1476,6 +1476,0 @@\n-  void ldr_patchable(Register dest, const Address &const_addr) {\n-    uint64_t offset;\n-    adrp_movk(dest, const_addr, offset);\n-    ldr(dest, Address(dest, offset));\n-  }\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+  size += align_up(cb->total_oop_size(), oopSize);\n@@ -81,0 +82,1 @@\n+  _data_offset(_content_offset + align_up(cb->total_content_size(), oopSize)),\n@@ -92,0 +94,1 @@\n+  assert(_data_offset <= _size, \"codeBlob is too small: %d > %d\", _data_offset, _size);\n@@ -93,2 +96,0 @@\n-  int code_end_offset = _content_offset + align_up(cb->total_content_size(), oopSize);\n-  assert(code_end_offset == _size, \"wrong codeBlob size: %d != %d\", _size, code_end_offset);\n@@ -120,0 +121,1 @@\n+  _data_offset(size),\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -113,0 +113,1 @@\n+  int      _data_offset;           \/\/ offset to where data region begins\n@@ -179,1 +180,1 @@\n-  address    content_end() const              { return (address)    header_begin() + _size; }\n+  address    content_end() const              { return (address)    header_begin() + _data_offset; }\n@@ -181,1 +182,3 @@\n-  address    code_end() const                 { return (address)    header_begin() + _size; }\n+  address    code_end() const                 { return (address)    header_begin() + _data_offset; }\n+  address    data_begin() const               { return (address)    header_begin() + _data_offset; }\n+  address    data_end() const                 { return (address)    header_begin() + _size; }\n@@ -185,0 +188,1 @@\n+  int mutable_data_size() const               { return _mutable_data_size; }\n@@ -187,1 +191,1 @@\n-  int mutable_data_size() const               { return _mutable_data_size; }\n+\n@@ -211,0 +215,1 @@\n+    _data_offset = _size;\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -189,0 +189,3 @@\n+    if (oops_size != 0) {\n+      tty->print_cr(\"   oops          = %u (%f%%)\", oops_size, (oops_size * 100.0f)\/total_mut_size);\n+    }\n@@ -195,3 +198,0 @@\n-    if (oops_size != 0) {\n-      tty->print_cr(\"   oops          = %u (%f%%)\", oops_size, (oops_size * 100.0f)\/total_mut_size);\n-    }\n@@ -1083,1 +1083,0 @@\n-         align_up(code_buffer->total_oop_size(), oopSize) +\n@@ -1333,3 +1332,3 @@\n-    assert(_mutable_data_size == _relocation_size + _oops_size + metadata_size,\n-           \"wrong mutable data size: %d != %d + %d + %d\",\n-           _mutable_data_size, _relocation_size, _oops_size, metadata_size);\n+    assert(_mutable_data_size == _relocation_size + metadata_size,\n+           \"wrong mutable data size: %d != %d + %d\",\n+           _mutable_data_size, _relocation_size, metadata_size);\n@@ -1508,4 +1507,4 @@\n-    assert(_mutable_data_size == _relocation_size + _oops_size + metadata_size + jvmci_data_size,\n-           \"wrong mutable data size: %d != %d + %d + %d + %d\",\n-           _mutable_data_size, _relocation_size, _oops_size, metadata_size, jvmci_data_size);\n-    assert(nmethod_size == code_end() - header_begin(), \"wrong nmethod size: %d != %d\",\n+    assert(_mutable_data_size == _relocation_size + metadata_size + jvmci_data_size,\n+           \"wrong mutable data size: %d != %d + %d + %d\",\n+           _mutable_data_size, _relocation_size, metadata_size, jvmci_data_size);\n+    assert(nmethod_size == data_end() - header_begin(), \"wrong nmethod size: %d != %d\",\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -143,0 +143,1 @@\n+\/\/    - OOP table\n@@ -146,1 +147,0 @@\n-\/\/  - OOP table\n@@ -535,0 +535,2 @@\n+  oop*    oops_begin            () const { return (oop*)    data_begin(); }\n+  oop*    oops_end              () const { return (oop*)    data_end(); }\n@@ -537,3 +539,1 @@\n-  oop*    oops_begin            () const { return (oop*)       (mutable_data_begin() + _relocation_size); }\n-  oop*    oops_end              () const { return (oop*)       (mutable_data_begin() + _relocation_size + _oops_size); }\n-  Metadata** metadata_begin     () const { return (Metadata**) (mutable_data_begin() + _relocation_size + _oops_size); }\n+  Metadata** metadata_begin     () const { return (Metadata**) (mutable_data_begin() + _relocation_size); }\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -558,0 +558,1 @@\n+  nonstatic_field(CodeBlob,                    _data_offset,                                  int)                                   \\\n@@ -584,1 +585,0 @@\n-  nonstatic_field(nmethod,                     _oops_size,                                    u2)                                    \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+  private static CIntegerField dataOffsetField;\n@@ -72,0 +73,1 @@\n+    dataOffsetField          = type.getCIntegerField(\"_data_offset\");\n@@ -97,1 +99,1 @@\n-  public Address contentEnd()     { return headerBegin().addOffsetTo(getSize()); }\n+  public Address contentEnd()     { return headerBegin().addOffsetTo(getDataOffset()); }\n@@ -101,1 +103,1 @@\n-  public Address codeEnd()        { return headerBegin().addOffsetTo(getSize()); }\n+  public Address codeEnd()        { return headerBegin().addOffsetTo(getDataOffset()); }\n@@ -103,1 +105,1 @@\n-  public Address dataBegin()      { return mutableDataField.getValue(addr); }\n+  public Address dataBegin()      { return headerBegin().addOffsetTo(getDataOffset()); }\n@@ -105,2 +107,1 @@\n-  public Address dataEnd()        { return (dataBegin() == null) ? dataBegin() :\n-                                        dataBegin().addOffsetTo(mutableDataSizeField.getValue(addr)); }\n+  public Address dataEnd()        { return headerBegin().addOffsetTo(getSize()); }\n@@ -115,0 +116,2 @@\n+  public int getDataOffset()      { return (int) dataOffsetField.getValue(addr); }\n+\n@@ -120,0 +123,9 @@\n+\n+  \/\/ Mutable data\n+  public int getMutableDataSize()   { return (int) mutableDataSizeField.getValue(addr); }\n+\n+  public Address mutableDataBegin() { return mutableDataField.getValue(addr); }\n+\n+  public Address mutableDataEnd()   { return mutableDataBegin().addOffsetTo(getMutableDataSize());  }\n+\n+\n@@ -172,1 +184,0 @@\n-  \/\/ FIXME: add getRelocationSize()\n@@ -179,0 +190,2 @@\n+  public int getRelocationSize()   { return (int) relocationSizeField.getValue(addr); }\n+\n@@ -180,1 +193,1 @@\n-  public boolean blobContains(Address addr)    { return headerBegin() .lessThanOrEqual(addr) && codeEnd()   .greaterThan(addr); }\n+  public boolean blobContains(Address addr)    { return headerBegin() .lessThanOrEqual(addr) && dataEnd()   .greaterThan(addr); }\n@@ -187,2 +200,1 @@\n-  public boolean dataContains(Address addr)    { return (dataBegin() == null) ? false :\n-                                                        dataBegin()   .lessThanOrEqual(addr) && dataEnd()   .greaterThan(addr); }\n+  public boolean dataContains(Address addr)    { return dataBegin()   .lessThanOrEqual(addr) && dataEnd()   .greaterThan(addr); }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/CodeBlob.java","additions":21,"deletions":9,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -47,3 +47,0 @@\n-  private static AddressField  mutableDataField;\n-  private static CIntegerField mutableDataSizeField;\n-  private static CIntegerField relocationSizeField;\n@@ -57,1 +54,1 @@\n-  private static CIntField     oopsSizeField;\n+\n@@ -91,4 +88,0 @@\n-    mutableDataField            = type.getAddressField(\"_mutable_data\");\n-    mutableDataSizeField        = type.getCIntegerField(\"_mutable_data_size\");\n-    relocationSizeField         = type.getCIntegerField(\"_relocation_size\");\n-\n@@ -100,1 +93,0 @@\n-    oopsSizeField               = new CIntField(type.getCIntegerField(\"_oops_size\"), 0);\n@@ -141,0 +133,2 @@\n+  public Address oopsBegin()            { return dataBegin();                                        }\n+  public Address oopsEnd()              { return dataEnd();                                          }\n@@ -155,6 +149,1 @@\n-  public Address mutableDataBegin()     { return mutableDataField.getValue(addr);                       }\n-  public Address mutableDataEnd()       { return mutableDataBegin().addOffsetTo(getMutableDataSize());  }\n-\n-  public Address oopsBegin()            { return mutableDataBegin().addOffsetTo(getRelocationSize());   }\n-  public Address oopsEnd()              { return mutableDataBegin().addOffsetTo(getRelocationSize() + getOopsSize());   }\n-  public Address metadataBegin()        { return mutableDataBegin().addOffsetTo(getRelocationSize() + getOopsSize());   }\n+  public Address metadataBegin()        { return mutableDataBegin().addOffsetTo(getRelocationSize());   }\n@@ -164,2 +153,0 @@\n-  public int getMutableDataSize()       { return (int) mutableDataSizeField.getValue(addr);          }\n-  public int getRelocationSize()        { return (int) relocationSizeField.getValue(addr);           }\n@@ -550,1 +537,0 @@\n-  private int getOopsSize()           { return (int) oopsSizeField          .getValue(addr); }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/NMethod.java","additions":4,"deletions":18,"binary":false,"changes":22,"status":"modified"}]}