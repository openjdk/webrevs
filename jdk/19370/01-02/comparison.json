{"files":[{"patch":"@@ -332,1 +332,1 @@\n-    MetaspaceShared::writing_error();\n+    MetaspaceShared::unrecoverable_writing_error();\n@@ -382,1 +382,1 @@\n-    MetaspaceShared::writing_error();\n+    MetaspaceShared::unrecoverable_writing_error();\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1410,0 +1410,1 @@\n+    return;\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-    MetaspaceShared::writing_error();\n+    MetaspaceShared::unrecoverable_writing_error();\n@@ -796,1 +796,1 @@\n-  if (op.failed()) {\n+  if (op.failed() || !write_static_archive(&builder, op.map_info(), op.heap_info())) {\n@@ -799,2 +799,0 @@\n-\n-  write_static_archive(&builder, op.map_info(), op.heap_info());\n@@ -803,1 +801,1 @@\n-void MetaspaceShared::write_static_archive(ArchiveBuilder* builder, FileMapInfo* map_info, ArchiveHeapInfo* heap_info) {\n+bool MetaspaceShared::write_static_archive(ArchiveBuilder* builder, FileMapInfo* map_info, ArchiveHeapInfo* heap_info) {\n@@ -809,0 +807,3 @@\n+  if (!map_info->is_open()) {\n+    return false;\n+  }\n@@ -819,0 +820,1 @@\n+  return true;\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-  static void write_static_archive(ArchiveBuilder* builder, FileMapInfo* map_info, ArchiveHeapInfo* heap_info);\n+  static bool write_static_archive(ArchiveBuilder* builder, FileMapInfo* map_info, ArchiveHeapInfo* heap_info);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary Test the writing error when archive file cannot be created\n+ * @requires vm.cds\n+ * @library \/test\/lib\n+ * @run driver StaticWritingError\n+ *\/\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import jdk.test.lib.cds.CDSOptions;\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class StaticWritingError {\n+    public static void main(String[] args) throws Exception {\n+        String directoryName = \"unwritable\";\n+        String archiveName = \"staticWritingError.jsa\";\n+\n+        \/\/ Create directory that cannot be written to\n+        File directory = new File(directoryName);\n+        directory.mkdir();\n+        directory.setReadable(false);\n+        directory.setWritable(false);\n+\n+        \/\/ Perform static dump and attempt to write archive in unwritable directory\n+        CDSOptions opts = (new CDSOptions())\n+            .addPrefix(\"-Xlog:cds\")\n+            .setArchiveName(directoryName + File.separator + archiveName);\n+        OutputAnalyzer out = CDSTestUtils.createArchive(opts);\n+        out.shouldHaveExitValue(1);\n+        out.shouldContain(\"Unable to create shared archive file\");\n+        out.shouldContain(\"(Permission denied)\");\n+        out.shouldContain(\"Encountered error while dumping\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/StaticWritingError.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}