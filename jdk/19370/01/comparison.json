{"files":[{"patch":"@@ -332,1 +332,1 @@\n-    MetaspaceShared::unrecoverable_writing_error();\n+    MetaspaceShared::writing_error();\n@@ -382,1 +382,1 @@\n-    MetaspaceShared::unrecoverable_writing_error();\n+    MetaspaceShared::writing_error();\n@@ -1397,7 +1397,0 @@\n-\n-\n-#ifndef PRODUCT\n-void ArchiveBuilder::assert_is_vm_thread() {\n-  assert(Thread::current()->is_VM_thread(), \"ArchiveBuilder should be used only inside the VMThread\");\n-}\n-#endif\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -346,2 +346,0 @@\n-  static void assert_is_vm_thread() PRODUCT_RETURN;\n-\n@@ -430,1 +428,0 @@\n-    assert_is_vm_thread();\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1409,1 +1409,1 @@\n-    MetaspaceShared::unrecoverable_writing_error();\n+    MetaspaceShared::writing_error();\n@@ -1662,1 +1662,1 @@\n-    MetaspaceShared::unrecoverable_writing_error(\"Unable to write to shared archive file.\");\n+    MetaspaceShared::writing_error(\"Unable to write to shared archive file.\");\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-    MetaspaceShared::unrecoverable_writing_error();\n+    MetaspaceShared::writing_error();\n@@ -439,0 +439,3 @@\n+  FileMapInfo* _map_info;\n+  StaticArchiveBuilder& _builder;\n+  bool _failed;\n@@ -449,1 +452,2 @@\n-  VM_PopulateDumpSharedSpace() : VM_Operation(), _heap_info() {}\n+  VM_PopulateDumpSharedSpace(StaticArchiveBuilder& b) :\n+    VM_Operation(), _heap_info(), _map_info(nullptr), _builder(b), _failed(false) {}\n@@ -454,0 +458,3 @@\n+  ArchiveHeapInfo* heap_info()  { return &_heap_info; }\n+  FileMapInfo* map_info() const { return _map_info; }\n+  bool failed() const { return _failed; }\n@@ -510,3 +517,5 @@\n-  StaticArchiveBuilder builder;\n-  builder.gather_source_objs();\n-  builder.reserve_buffer();\n+  _builder.gather_source_objs();\n+  if (_builder.reserve_buffer() == nullptr) {\n+    this->_failed = true;\n+    return;\n+  }\n@@ -514,1 +523,1 @@\n-  CppVtables::dumptime_init(&builder);\n+  CppVtables::dumptime_init(&_builder);\n@@ -516,4 +525,4 @@\n-  builder.sort_metadata_objs();\n-  builder.dump_rw_metadata();\n-  builder.dump_ro_metadata();\n-  builder.relocate_metaspaceobj_embedded_pointers();\n+  _builder.sort_metadata_objs();\n+  _builder.dump_rw_metadata();\n+  _builder.dump_ro_metadata();\n+  _builder.relocate_metaspaceobj_embedded_pointers();\n@@ -521,2 +530,2 @@\n-  dump_java_heap_objects(builder.klasses());\n-  dump_shared_symbol_table(builder.symbols());\n+  dump_java_heap_objects(_builder.klasses());\n+  dump_shared_symbol_table(_builder.symbols());\n@@ -525,1 +534,1 @@\n-  builder.make_klasses_shareable();\n+  _builder.make_klasses_shareable();\n@@ -535,4 +544,0 @@\n-  \/\/ relocate the data so that it can be mapped to MetaspaceShared::requested_base_address()\n-  \/\/ without runtime relocation.\n-  builder.relocate_to_requested();\n-\n@@ -542,15 +547,4 @@\n-  FileMapInfo* mapinfo = new FileMapInfo(static_archive, true);\n-  mapinfo->populate_header(MetaspaceShared::core_region_alignment());\n-  mapinfo->set_serialized_data(serialized_data);\n-  mapinfo->set_cloned_vtables(CppVtables::vtables_serialized_base());\n-  mapinfo->open_for_write();\n-  builder.write_archive(mapinfo, &_heap_info);\n-\n-  if (PrintSystemDictionaryAtExit) {\n-    SystemDictionary::print();\n-  }\n-\n-  if (AllowArchivingWithJavaAgent) {\n-    log_warning(cds)(\"This archive was created with AllowArchivingWithJavaAgent. It should be used \"\n-            \"for testing purposes only and should not be used in a production environment\");\n-  }\n+  _map_info = new FileMapInfo(static_archive, true);\n+  _map_info->populate_header(MetaspaceShared::core_region_alignment());\n+  _map_info->set_serialized_data(serialized_data);\n+  _map_info->set_cloned_vtables(CppVtables::vtables_serialized_base());\n@@ -658,2 +652,1 @@\n-void MetaspaceShared::preload_and_dump() {\n-  EXCEPTION_MARK;\n+void MetaspaceShared::preload_and_dump(TRAPS) {\n@@ -661,1 +654,2 @@\n-  preload_and_dump_impl(THREAD);\n+  StaticArchiveBuilder builder;\n+  preload_and_dump_impl(builder, THREAD);\n@@ -666,2 +660,1 @@\n-      CLEAR_PENDING_EXCEPTION;\n-      MetaspaceShared::unrecoverable_writing_error();\n+      MetaspaceShared::writing_error();\n@@ -671,2 +664,1 @@\n-      CLEAR_PENDING_EXCEPTION;\n-      MetaspaceShared::unrecoverable_writing_error(\"VM exits due to exception, use -Xlog:cds,exceptions=trace for detail\");\n+      MetaspaceShared::writing_error(\"VM exits due to exception, use -Xlog:cds,exceptions=trace for detail\");\n@@ -764,1 +756,1 @@\n-void MetaspaceShared::preload_and_dump_impl(TRAPS) {\n+void MetaspaceShared::preload_and_dump_impl(StaticArchiveBuilder& builder, TRAPS) {\n@@ -801,1 +793,1 @@\n-  VM_PopulateDumpSharedSpace op;\n+  VM_PopulateDumpSharedSpace op(builder);\n@@ -803,0 +795,24 @@\n+\n+  if (op.failed()) {\n+    THROW_MSG(vmSymbols::java_io_IOException(), \"Encountered error while dumping\");\n+  }\n+\n+  write_static_archive(&builder, op.map_info(), op.heap_info());\n+}\n+\n+void MetaspaceShared::write_static_archive(ArchiveBuilder* builder, FileMapInfo* map_info, ArchiveHeapInfo* heap_info) {\n+  \/\/ relocate the data so that it can be mapped to MetaspaceShared::requested_base_address()\n+  \/\/ without runtime relocation.\n+  builder->relocate_to_requested();\n+\n+  map_info->open_for_write();\n+  builder->write_archive(map_info, heap_info);\n+\n+  if (PrintSystemDictionaryAtExit) {\n+    SystemDictionary::print();\n+  }\n+\n+  if (AllowArchivingWithJavaAgent) {\n+    log_warning(cds)(\"This archive was created with AllowArchivingWithJavaAgent. It should be used \"\n+            \"for testing purposes only and should not be used in a production environment\");\n+  }\n@@ -912,0 +928,7 @@\n+  writing_error(message);\n+  vm_direct_exit(1);\n+}\n+\n+\/\/ This function is called when the JVM is unable to write the specified CDS archive due to a\n+\/\/ an error. The error will be propagated\n+void MetaspaceShared::writing_error(const char* message) {\n@@ -916,1 +939,0 @@\n-  vm_direct_exit(1);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":64,"deletions":42,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+class ArchiveBuilder;\n+class ArchiveHeapInfo;\n@@ -37,0 +39,1 @@\n+class StaticArchiveBuilder;\n@@ -69,1 +72,1 @@\n-  static void preload_and_dump() NOT_CDS_RETURN;\n+  static void preload_and_dump(TRAPS) NOT_CDS_RETURN;\n@@ -75,1 +78,1 @@\n-  static void preload_and_dump_impl(TRAPS) NOT_CDS_RETURN;\n+  static void preload_and_dump_impl(StaticArchiveBuilder& builder, TRAPS) NOT_CDS_RETURN;\n@@ -108,0 +111,1 @@\n+  static void writing_error(const char* message = nullptr);\n@@ -169,0 +173,1 @@\n+  static void write_static_archive(ArchiveBuilder* builder, FileMapInfo* map_info, ArchiveHeapInfo* heap_info);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -828,1 +828,1 @@\n-    MetaspaceShared::preload_and_dump();\n+    MetaspaceShared::preload_and_dump(CHECK_JNI_ERR);\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}