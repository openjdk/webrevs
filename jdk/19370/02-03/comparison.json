{"files":[{"patch":"@@ -33,1 +33,9 @@\n-import java.util.ArrayList;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.attribute.AclEntry;\n+import java.nio.file.attribute.AclEntryPermission;\n+import java.nio.file.attribute.AclEntryType;\n+import java.nio.file.attribute.AclFileAttributeView;\n+import java.nio.file.attribute.UserPrincipal;\n+import java.util.List;\n+\n@@ -44,4 +52,22 @@\n-        File directory = new File(directoryName);\n-        directory.mkdir();\n-        directory.setReadable(false);\n-        directory.setWritable(false);\n+        if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {\n+            \/\/ Windows filesystem uses Access Control Lists instead of permissions\n+            Path dir = Files.createTempDirectory(directoryName);\n+            AclFileAttributeView view = Files.getFileAttributeView(dir, AclFileAttributeView.class);\n+                UserPrincipal owner = view.getOwner();\n+                List<AclEntry> acl = view.getAcl();\n+\n+            \/\/ Insert entry to deny WRITE and EXECUTE\n+            AclEntry entry = AclEntry.newBuilder()\n+                .setType(AclEntryType.DENY)\n+                .setPrincipal(owner)\n+                .setPermissions(AclEntryPermission.WRITE_DATA,\n+                                AclEntryPermission.EXECUTE)\n+                .build();\n+            acl.add(0, entry);\n+            view.setAcl(acl);\n+       } else {\n+            File directory = new File(directoryName);\n+            directory.mkdir();\n+            directory.setReadable(false);\n+            directory.setWritable(false);\n+       }\n@@ -56,1 +82,0 @@\n-        out.shouldContain(\"(Permission denied)\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/StaticWritingError.java","additions":31,"deletions":6,"binary":false,"changes":37,"status":"modified"}]}