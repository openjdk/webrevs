{"files":[{"patch":"@@ -192,1 +192,6 @@\n-  assert_lock_strong(PSOldGenExpand_lock);\n+#ifdef ASSERT\n+  \/\/ If called by VM thread, locking is not needed.\n+  if (!Thread::current()->is_VM_thread()) {\n+    assert_lock_strong(PSOldGenExpand_lock);\n+  }\n+#endif\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-  \/\/ precondition: holding PSOldGenExpand_lock\n+  \/\/ precondition: holding PSOldGenExpand_lock if not VM thread\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -437,2 +437,1 @@\n-    \/\/ auto expand inside\n-    result = old_gen()->allocate(size);\n+    result = old_gen()->expand_and_allocate(size);\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -123,0 +123,9 @@\n+HeapWord* PSOldGen::expand_and_allocate(size_t word_size) {\n+  assert(SafepointSynchronize::is_at_safepoint(), \"precondition\");\n+  assert(Thread::current()->is_VM_thread(), \"precondition\");\n+  if (object_space()->needs_expand(word_size)) {\n+    expand(word_size*HeapWordSize);\n+  }\n+  return cas_allocate_noexpand(word_size);\n+}\n+\n@@ -173,1 +182,4 @@\n-  assert_lock_strong(PSOldGenExpand_lock);\n+#ifdef ASSERT\n+  if (!Thread::current()->is_VM_thread()) {\n+    assert_lock_strong(PSOldGenExpand_lock);\n+  }\n@@ -176,0 +188,1 @@\n+#endif\n@@ -211,2 +224,0 @@\n-  assert_lock_strong(PSOldGenExpand_lock);\n-  assert_locked_or_safepoint(Heap_lock);\n@@ -247,3 +258,0 @@\n-  assert_lock_strong(PSOldGenExpand_lock);\n-  assert_locked_or_safepoint(Heap_lock);\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -121,0 +121,1 @@\n+  \/\/ Invoked by mutators and GC-workers.\n@@ -130,0 +131,3 @@\n+  \/\/ Invoked by VM thread inside a safepoint.\n+  HeapWord* expand_and_allocate(size_t word_size);\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}