{"files":[{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+ \/*\n+  @test\n+  @bug 8332271\n+  @summary tests that concurrent access to the clipboard does not crash the JVM\n+  @run main ConcurrentClipboardAccessTest\n+ *\/\n+import java.awt.*;\n+import java.awt.datatransfer.Clipboard;\n+import java.awt.datatransfer.DataFlavor;\n+\n+public class ConcurrentClipboardAccessTest {\n+\n+    public static void main(String[] args) {\n+        new Thread(new ClipboardLoader()).start();\n+        new Thread(new ClipboardLoader()).start();\n+        long start = System.currentTimeMillis();\n+        while (true) {\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException ignored) {\n+            }\n+            long now = System.currentTimeMillis();\n+            if ((now - start) > (10L * 1000L)) {\n+                break;\n+            }\n+        }\n+    }\n+\n+    public static class ClipboardLoader implements Runnable {\n+\n+        @Override\n+        public void run() {\n+            final Clipboard systemClipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n+            while (true) {\n+                try {\n+                    if (systemClipboard.isDataFlavorAvailable(DataFlavor.stringFlavor)) {\n+                        systemClipboard.getData(DataFlavor.stringFlavor);\n+                    }\n+                } catch (Exception ignored) {\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Clipboard\/ConcurrentClipboardAccessTest.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"}]}