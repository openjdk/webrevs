{"files":[{"patch":"@@ -188,53 +188,18 @@\n-  size_t cset_percent = (total_garbage == 0) ? 0 : (collection_set->garbage() * 100 \/ total_garbage);\n-  size_t collectable_garbage = collection_set->garbage() + immediate_garbage;\n-  size_t collectable_garbage_percent = (total_garbage == 0) ? 0 : (collectable_garbage * 100 \/ total_garbage);\n-\n-  log_info(gc, ergo)(\"Collectable Garbage: %zu%s (%zu%%), \"\n-                     \"Immediate: %zu%s (%zu%%), %zu regions, \"\n-                     \"CSet: %zu%s (%zu%%), %zu regions\",\n-\n-                     byte_size_in_proper_unit(collectable_garbage),\n-                     proper_unit_for_byte_size(collectable_garbage),\n-                     collectable_garbage_percent,\n-\n-                     byte_size_in_proper_unit(immediate_garbage),\n-                     proper_unit_for_byte_size(immediate_garbage),\n-                     immediate_percent,\n-                     immediate_regions,\n-\n-                     byte_size_in_proper_unit(collection_set->garbage()),\n-                     proper_unit_for_byte_size(collection_set->garbage()),\n-                     cset_percent,\n-                     collection_set->count());\n-\n-  if (collection_set->garbage() > 0) {\n-    size_t young_evac_bytes = collection_set->get_young_bytes_reserved_for_evacuation();\n-    size_t promote_evac_bytes = collection_set->get_young_bytes_to_be_promoted();\n-    size_t old_evac_bytes = collection_set->get_old_bytes_reserved_for_evacuation();\n-    size_t total_evac_bytes = young_evac_bytes + promote_evac_bytes + old_evac_bytes;\n-    log_info(gc, ergo)(\"Evacuation Targets: YOUNG: %zu%s, \"\n-                       \"PROMOTE: %zu%s, \"\n-                       \"OLD: %zu%s, \"\n-                       \"TOTAL: %zu%s\",\n-                       byte_size_in_proper_unit(young_evac_bytes), proper_unit_for_byte_size(young_evac_bytes),\n-                       byte_size_in_proper_unit(promote_evac_bytes), proper_unit_for_byte_size(promote_evac_bytes),\n-                       byte_size_in_proper_unit(old_evac_bytes), proper_unit_for_byte_size(old_evac_bytes),\n-                       byte_size_in_proper_unit(total_evac_bytes), proper_unit_for_byte_size(total_evac_bytes));\n-\n-    ShenandoahEvacuationInformation evacInfo;\n-    evacInfo.set_collection_set_regions(collection_set->count());\n-    evacInfo.set_collection_set_used_before(collection_set->used());\n-    evacInfo.set_collection_set_used_after(collection_set->live());\n-    evacInfo.set_collected_old(old_evac_bytes);\n-    evacInfo.set_collected_promoted(promote_evac_bytes);\n-    evacInfo.set_collected_young(young_evac_bytes);\n-    evacInfo.set_regions_promoted_humongous(humongous_regions_promoted);\n-    evacInfo.set_regions_promoted_regular(regular_regions_promoted_in_place);\n-    evacInfo.set_regular_promoted_garbage(regular_regions_promoted_garbage);\n-    evacInfo.set_regular_promoted_free(regular_regions_promoted_free);\n-    evacInfo.set_regions_immediate(immediate_regions);\n-    evacInfo.set_immediate_size(immediate_garbage);\n-    evacInfo.set_free_regions(free_regions);\n-\n-    ShenandoahTracer().report_evacuation_info(&evacInfo);\n-  }\n+  collection_set->summarize(total_garbage, immediate_garbage, immediate_regions);\n+\n+  ShenandoahEvacuationInformation evacInfo;\n+  evacInfo.set_collection_set_regions(collection_set->count());\n+  evacInfo.set_collection_set_used_before(collection_set->used());\n+  evacInfo.set_collection_set_used_after(collection_set->live());\n+  evacInfo.set_collected_old(collection_set->get_old_bytes_reserved_for_evacuation());\n+  evacInfo.set_collected_promoted(collection_set->get_young_bytes_to_be_promoted());\n+  evacInfo.set_collected_young(collection_set->get_young_bytes_reserved_for_evacuation());\n+  evacInfo.set_regions_promoted_humongous(humongous_regions_promoted);\n+  evacInfo.set_regions_promoted_regular(regular_regions_promoted_in_place);\n+  evacInfo.set_regular_promoted_garbage(regular_regions_promoted_garbage);\n+  evacInfo.set_regular_promoted_free(regular_regions_promoted_free);\n+  evacInfo.set_regions_immediate(immediate_regions);\n+  evacInfo.set_immediate_size(immediate_garbage);\n+  evacInfo.set_free_regions(free_regions);\n+\n+  ShenandoahTracer().report_evacuation_info(&evacInfo);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp","additions":18,"deletions":53,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -156,21 +156,1 @@\n-  size_t cset_percent = (total_garbage == 0) ? 0 : (collection_set->garbage() * 100 \/ total_garbage);\n-  size_t collectable_garbage = collection_set->garbage() + immediate_garbage;\n-  size_t collectable_garbage_percent = (total_garbage == 0) ? 0 : (collectable_garbage * 100 \/ total_garbage);\n-\n-  log_info(gc, ergo)(\"Collectable Garbage: %zu%s (%zu%%), \"\n-                     \"Immediate: %zu%s (%zu%%), %zu regions, \"\n-                     \"CSet: %zu%s (%zu%%), %zu regions\",\n-\n-                     byte_size_in_proper_unit(collectable_garbage),\n-                     proper_unit_for_byte_size(collectable_garbage),\n-                     collectable_garbage_percent,\n-\n-                     byte_size_in_proper_unit(immediate_garbage),\n-                     proper_unit_for_byte_size(immediate_garbage),\n-                     immediate_percent,\n-                     immediate_regions,\n-\n-                     byte_size_in_proper_unit(collection_set->garbage()),\n-                     proper_unit_for_byte_size(collection_set->garbage()),\n-                     cset_percent,\n-                     collection_set->count());\n+  collection_set->summarize(total_garbage, immediate_garbage, immediate_regions);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":1,"deletions":21,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -203,0 +203,35 @@\n+\n+void ShenandoahCollectionSet::summarize(size_t total_garbage, size_t immediate_garbage, size_t immediate_regions) const {\n+  const LogTarget(Info, gc, ergo) lt;\n+  LogStream ls(lt);\n+  if (lt.is_enabled()) {\n+    const size_t cset_percent = (total_garbage == 0) ? 0 : (garbage() * 100 \/ total_garbage);\n+    const size_t collectable_garbage = garbage() + immediate_garbage;\n+    const size_t collectable_garbage_percent = (total_garbage == 0) ? 0 : (collectable_garbage * 100 \/ total_garbage);\n+    const size_t immediate_percent = (total_garbage == 0) ? 0 : (immediate_garbage * 100 \/ total_garbage);\n+\n+    ls.print_cr(\"Collectable Garbage: \" PROPERFMT \" (%zu%%), \"\n+                 \"Immediate: \" PROPERFMT \" (%zu%%), %zu regions, \"\n+                 \"CSet: \" PROPERFMT \" (%zu%%), %zu regions\",\n+                 PROPERFMTARGS(collectable_garbage),\n+                 collectable_garbage_percent,\n+\n+                 PROPERFMTARGS(immediate_garbage),\n+                 immediate_percent,\n+                 immediate_regions,\n+\n+                 PROPERFMTARGS(garbage()),\n+                 cset_percent,\n+                 count());\n+\n+    if (garbage() > 0) {\n+      const size_t young_evac_bytes = get_young_bytes_reserved_for_evacuation();\n+      const size_t promote_evac_bytes = get_young_bytes_to_be_promoted();\n+      const size_t old_evac_bytes = get_old_bytes_reserved_for_evacuation();\n+      const size_t total_evac_bytes = young_evac_bytes + promote_evac_bytes + old_evac_bytes;\n+      ls.print_cr(\"Evacuation Targets: \"\n+                  \"YOUNG: \" PROPERFMT \", \" \"PROMOTE: \" PROPERFMT \", \" \"OLD: \" PROPERFMT \", \" \"TOTAL: \" PROPERFMT,\n+                  PROPERFMTARGS(young_evac_bytes), PROPERFMTARGS(promote_evac_bytes), PROPERFMTARGS(old_evac_bytes), PROPERFMTARGS(total_evac_bytes));\n+    }\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -107,0 +107,1 @@\n+  void summarize(size_t total_garbage, size_t immediate_garbage, size_t immediate_regions) const;\n@@ -109,2 +110,2 @@\n-  inline size_t get_young_bytes_reserved_for_evacuation();\n-  inline size_t get_old_bytes_reserved_for_evacuation();\n+  inline size_t get_young_bytes_reserved_for_evacuation() const;\n+  inline size_t get_old_bytes_reserved_for_evacuation() const;\n@@ -112,1 +113,1 @@\n-  inline size_t get_young_bytes_to_be_promoted();\n+  inline size_t get_young_bytes_to_be_promoted() const;\n@@ -116,1 +117,1 @@\n-  inline size_t get_old_garbage();\n+  inline size_t get_old_garbage() const;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-size_t ShenandoahCollectionSet::get_old_bytes_reserved_for_evacuation() {\n+size_t ShenandoahCollectionSet::get_old_bytes_reserved_for_evacuation() const {\n@@ -61,1 +61,1 @@\n-size_t ShenandoahCollectionSet::get_young_bytes_reserved_for_evacuation() {\n+size_t ShenandoahCollectionSet::get_young_bytes_reserved_for_evacuation() const {\n@@ -65,1 +65,1 @@\n-size_t ShenandoahCollectionSet::get_young_bytes_to_be_promoted() {\n+size_t ShenandoahCollectionSet::get_young_bytes_to_be_promoted() const {\n@@ -69,1 +69,1 @@\n-size_t ShenandoahCollectionSet::get_old_garbage() {\n+size_t ShenandoahCollectionSet::get_old_garbage() const {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}