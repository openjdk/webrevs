{"files":[{"patch":"@@ -29,1 +29,0 @@\n-#include \"gc\/shenandoah\/shenandoahEvacInfo.hpp\"\n@@ -188,53 +187,10 @@\n-  size_t cset_percent = (total_garbage == 0) ? 0 : (collection_set->garbage() * 100 \/ total_garbage);\n-  size_t collectable_garbage = collection_set->garbage() + immediate_garbage;\n-  size_t collectable_garbage_percent = (total_garbage == 0) ? 0 : (collectable_garbage * 100 \/ total_garbage);\n-\n-  log_info(gc, ergo)(\"Collectable Garbage: %zu%s (%zu%%), \"\n-                     \"Immediate: %zu%s (%zu%%), %zu regions, \"\n-                     \"CSet: %zu%s (%zu%%), %zu regions\",\n-\n-                     byte_size_in_proper_unit(collectable_garbage),\n-                     proper_unit_for_byte_size(collectable_garbage),\n-                     collectable_garbage_percent,\n-\n-                     byte_size_in_proper_unit(immediate_garbage),\n-                     proper_unit_for_byte_size(immediate_garbage),\n-                     immediate_percent,\n-                     immediate_regions,\n-\n-                     byte_size_in_proper_unit(collection_set->garbage()),\n-                     proper_unit_for_byte_size(collection_set->garbage()),\n-                     cset_percent,\n-                     collection_set->count());\n-\n-  if (collection_set->garbage() > 0) {\n-    size_t young_evac_bytes = collection_set->get_young_bytes_reserved_for_evacuation();\n-    size_t promote_evac_bytes = collection_set->get_young_bytes_to_be_promoted();\n-    size_t old_evac_bytes = collection_set->get_old_bytes_reserved_for_evacuation();\n-    size_t total_evac_bytes = young_evac_bytes + promote_evac_bytes + old_evac_bytes;\n-    log_info(gc, ergo)(\"Evacuation Targets: YOUNG: %zu%s, \"\n-                       \"PROMOTE: %zu%s, \"\n-                       \"OLD: %zu%s, \"\n-                       \"TOTAL: %zu%s\",\n-                       byte_size_in_proper_unit(young_evac_bytes), proper_unit_for_byte_size(young_evac_bytes),\n-                       byte_size_in_proper_unit(promote_evac_bytes), proper_unit_for_byte_size(promote_evac_bytes),\n-                       byte_size_in_proper_unit(old_evac_bytes), proper_unit_for_byte_size(old_evac_bytes),\n-                       byte_size_in_proper_unit(total_evac_bytes), proper_unit_for_byte_size(total_evac_bytes));\n-\n-    ShenandoahEvacuationInformation evacInfo;\n-    evacInfo.set_collection_set_regions(collection_set->count());\n-    evacInfo.set_collection_set_used_before(collection_set->used());\n-    evacInfo.set_collection_set_used_after(collection_set->live());\n-    evacInfo.set_collected_old(old_evac_bytes);\n-    evacInfo.set_collected_promoted(promote_evac_bytes);\n-    evacInfo.set_collected_young(young_evac_bytes);\n-    evacInfo.set_regions_promoted_humongous(humongous_regions_promoted);\n-    evacInfo.set_regions_promoted_regular(regular_regions_promoted_in_place);\n-    evacInfo.set_regular_promoted_garbage(regular_regions_promoted_garbage);\n-    evacInfo.set_regular_promoted_free(regular_regions_promoted_free);\n-    evacInfo.set_regions_immediate(immediate_regions);\n-    evacInfo.set_immediate_size(immediate_garbage);\n-    evacInfo.set_free_regions(free_regions);\n-\n-    ShenandoahTracer().report_evacuation_info(&evacInfo);\n-  }\n+  collection_set->summarize(total_garbage, immediate_garbage, immediate_regions);\n+\n+  ShenandoahTracer::report_evacuation_info(collection_set,\n+                                           free_regions,\n+                                           humongous_regions_promoted,\n+                                           regular_regions_promoted_in_place,\n+                                           regular_regions_promoted_garbage,\n+                                           regular_regions_promoted_free,\n+                                           immediate_regions,\n+                                           immediate_garbage);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp","additions":10,"deletions":54,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -156,21 +156,1 @@\n-  size_t cset_percent = (total_garbage == 0) ? 0 : (collection_set->garbage() * 100 \/ total_garbage);\n-  size_t collectable_garbage = collection_set->garbage() + immediate_garbage;\n-  size_t collectable_garbage_percent = (total_garbage == 0) ? 0 : (collectable_garbage * 100 \/ total_garbage);\n-\n-  log_info(gc, ergo)(\"Collectable Garbage: %zu%s (%zu%%), \"\n-                     \"Immediate: %zu%s (%zu%%), %zu regions, \"\n-                     \"CSet: %zu%s (%zu%%), %zu regions\",\n-\n-                     byte_size_in_proper_unit(collectable_garbage),\n-                     proper_unit_for_byte_size(collectable_garbage),\n-                     collectable_garbage_percent,\n-\n-                     byte_size_in_proper_unit(immediate_garbage),\n-                     proper_unit_for_byte_size(immediate_garbage),\n-                     immediate_percent,\n-                     immediate_regions,\n-\n-                     byte_size_in_proper_unit(collection_set->garbage()),\n-                     proper_unit_for_byte_size(collection_set->garbage()),\n-                     cset_percent,\n-                     collection_set->count());\n+  collection_set->summarize(total_garbage, immediate_garbage, immediate_regions);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":1,"deletions":21,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -203,0 +203,35 @@\n+\n+void ShenandoahCollectionSet::summarize(size_t total_garbage, size_t immediate_garbage, size_t immediate_regions) const {\n+  const LogTarget(Info, gc, ergo) lt;\n+  LogStream ls(lt);\n+  if (lt.is_enabled()) {\n+    const size_t cset_percent = (total_garbage == 0) ? 0 : (garbage() * 100 \/ total_garbage);\n+    const size_t collectable_garbage = garbage() + immediate_garbage;\n+    const size_t collectable_garbage_percent = (total_garbage == 0) ? 0 : (collectable_garbage * 100 \/ total_garbage);\n+    const size_t immediate_percent = (total_garbage == 0) ? 0 : (immediate_garbage * 100 \/ total_garbage);\n+\n+    ls.print_cr(\"Collectable Garbage: \" PROPERFMT \" (%zu%%), \"\n+                 \"Immediate: \" PROPERFMT \" (%zu%%), %zu regions, \"\n+                 \"CSet: \" PROPERFMT \" (%zu%%), %zu regions\",\n+                 PROPERFMTARGS(collectable_garbage),\n+                 collectable_garbage_percent,\n+\n+                 PROPERFMTARGS(immediate_garbage),\n+                 immediate_percent,\n+                 immediate_regions,\n+\n+                 PROPERFMTARGS(garbage()),\n+                 cset_percent,\n+                 count());\n+\n+    if (garbage() > 0) {\n+      const size_t young_evac_bytes = get_young_bytes_reserved_for_evacuation();\n+      const size_t promote_evac_bytes = get_young_bytes_to_be_promoted();\n+      const size_t old_evac_bytes = get_old_bytes_reserved_for_evacuation();\n+      const size_t total_evac_bytes = young_evac_bytes + promote_evac_bytes + old_evac_bytes;\n+      ls.print_cr(\"Evacuation Targets: \"\n+                  \"YOUNG: \" PROPERFMT \", \" \"PROMOTE: \" PROPERFMT \", \" \"OLD: \" PROPERFMT \", \" \"TOTAL: \" PROPERFMT,\n+                  PROPERFMTARGS(young_evac_bytes), PROPERFMTARGS(promote_evac_bytes), PROPERFMTARGS(old_evac_bytes), PROPERFMTARGS(total_evac_bytes));\n+    }\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -107,0 +107,1 @@\n+  void summarize(size_t total_garbage, size_t immediate_garbage, size_t immediate_regions) const;\n@@ -109,2 +110,2 @@\n-  inline size_t get_young_bytes_reserved_for_evacuation();\n-  inline size_t get_old_bytes_reserved_for_evacuation();\n+  inline size_t get_young_bytes_reserved_for_evacuation() const;\n+  inline size_t get_old_bytes_reserved_for_evacuation() const;\n@@ -112,1 +113,1 @@\n-  inline size_t get_young_bytes_to_be_promoted();\n+  inline size_t get_young_bytes_to_be_promoted() const;\n@@ -116,1 +117,1 @@\n-  inline size_t get_old_garbage();\n+  inline size_t get_old_garbage() const;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-size_t ShenandoahCollectionSet::get_old_bytes_reserved_for_evacuation() {\n+size_t ShenandoahCollectionSet::get_old_bytes_reserved_for_evacuation() const {\n@@ -61,1 +61,1 @@\n-size_t ShenandoahCollectionSet::get_young_bytes_reserved_for_evacuation() {\n+size_t ShenandoahCollectionSet::get_young_bytes_reserved_for_evacuation() const {\n@@ -65,1 +65,1 @@\n-size_t ShenandoahCollectionSet::get_young_bytes_to_be_promoted() {\n+size_t ShenandoahCollectionSet::get_young_bytes_to_be_promoted() const {\n@@ -69,1 +69,1 @@\n-size_t ShenandoahCollectionSet::get_old_garbage() {\n+size_t ShenandoahCollectionSet::get_old_garbage() const {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,120 +0,0 @@\n-\/*\n- * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_GC_SHENANDOAH_SHENANDOAHEVACINFO_HPP\n-#define SHARE_GC_SHENANDOAH_SHENANDOAHEVACINFO_HPP\n-\n-#include \"memory\/allocation.hpp\"\n-\n-class ShenandoahEvacuationInformation : public StackObj {\n-  \/\/ Values for ShenandoahEvacuationInformation jfr event, sizes stored as bytes\n-  size_t _collection_set_regions;\n-  size_t _collection_set_used_before;\n-  size_t _collection_set_used_after;\n-  size_t _collected_old;\n-  size_t _collected_promoted;\n-  size_t _collected_young;\n-  size_t _free_regions;\n-  size_t _regions_promoted_humongous;\n-  size_t _regions_promoted_regular;\n-  size_t _regular_promoted_garbage;\n-  size_t _regular_promoted_free;\n-  size_t _regions_immediate;\n-  size_t _immediate_size;\n-\n-public:\n-  ShenandoahEvacuationInformation() :\n-    _collection_set_regions(0), _collection_set_used_before(0), _collection_set_used_after(0),\n-    _collected_old(0), _collected_promoted(0), _collected_young(0), _free_regions(0),\n-    _regions_promoted_humongous(0), _regions_promoted_regular(0), _regular_promoted_garbage(0),\n-    _regular_promoted_free(0), _regions_immediate(0), _immediate_size(0) { }\n-\n-  void set_collection_set_regions(size_t collection_set_regions) {\n-    _collection_set_regions = collection_set_regions;\n-  }\n-\n-  void set_collection_set_used_before(size_t used) {\n-    _collection_set_used_before = used;\n-  }\n-\n-  void set_collection_set_used_after(size_t used) {\n-    _collection_set_used_after = used;\n-  }\n-\n-  void set_collected_old(size_t collected) {\n-    _collected_old = collected;\n-  }\n-\n-  void set_collected_promoted(size_t collected) {\n-    _collected_promoted = collected;\n-  }\n-\n-  void set_collected_young(size_t collected) {\n-    _collected_young = collected;\n-  }\n-\n-  void set_free_regions(size_t freed) {\n-    _free_regions = freed;\n-  }\n-\n-  void set_regions_promoted_humongous(size_t humongous) {\n-    _regions_promoted_humongous = humongous;\n-  }\n-\n-  void set_regions_promoted_regular(size_t regular) {\n-    _regions_promoted_regular = regular;\n-  }\n-\n-  void set_regular_promoted_garbage(size_t garbage) {\n-    _regular_promoted_garbage = garbage;\n-  }\n-\n-  void set_regular_promoted_free(size_t free) {\n-    _regular_promoted_free = free;\n-  }\n-\n-  void set_regions_immediate(size_t immediate) {\n-    _regions_immediate = immediate;\n-  }\n-\n-  void set_immediate_size(size_t size) {\n-    _immediate_size = size;\n-  }\n-\n-  size_t collection_set_regions()     { return _collection_set_regions; }\n-  size_t collection_set_used_before() { return _collection_set_used_before; }\n-  size_t collection_set_used_after()  { return _collection_set_used_after; }\n-  size_t collected_old()              { return _collected_old; }\n-  size_t collected_promoted()         { return _collected_promoted; }\n-  size_t collected_young()            { return _collected_young; }\n-  size_t regions_promoted_humongous() { return _regions_promoted_humongous; }\n-  size_t regions_promoted_regular()   { return _regions_promoted_regular; }\n-  size_t regular_promoted_garbage()   { return _regular_promoted_garbage; }\n-  size_t regular_promoted_free()      { return _regular_promoted_free; }\n-  size_t free_regions()               { return _free_regions; }\n-  size_t regions_immediate()          { return _regions_immediate; }\n-  size_t immediate_size()             { return _immediate_size; }\n-};\n-\n-#endif \/\/ SHARE_GC_SHENANDOAH_SHENANDOAHEVACINFO_HPP\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahEvacInfo.hpp","additions":0,"deletions":120,"binary":false,"changes":120,"status":"deleted"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"gc\/shenandoah\/shenandoahEvacInfo.hpp\"\n+#include \"gc\/shenandoah\/shenandoahCollectionSet.inline.hpp\"\n@@ -29,3 +29,4 @@\n-void ShenandoahTracer::report_evacuation_info(ShenandoahEvacuationInformation* info) {\n-  send_evacuation_info_event(info);\n-}\n+void ShenandoahTracer::report_evacuation_info(const ShenandoahCollectionSet* cset,\n+    size_t free_regions, size_t regions_promoted_humongous, size_t regions_promoted_regular,\n+    size_t regular_promoted_garbage, size_t regular_promoted_free, size_t regions_immediate,\n+    size_t immediate_size) {\n@@ -33,1 +34,0 @@\n-void ShenandoahTracer::send_evacuation_info_event(ShenandoahEvacuationInformation* info) {\n@@ -37,13 +37,13 @@\n-    e.set_cSetRegions(info->collection_set_regions());\n-    e.set_cSetUsedBefore(info->collection_set_used_before());\n-    e.set_cSetUsedAfter(info->collection_set_used_after());\n-    e.set_collectedOld(info->collected_old());\n-    e.set_collectedPromoted(info->collected_promoted());\n-    e.set_collectedYoung(info->collected_young());\n-    e.set_regionsPromotedHumongous(info->regions_promoted_humongous());\n-    e.set_regionsPromotedRegular(info->regions_promoted_regular());\n-    e.set_regularPromotedGarbage(info->regular_promoted_garbage());\n-    e.set_regularPromotedFree(info->regular_promoted_free());\n-    e.set_freeRegions(info->free_regions());\n-    e.set_regionsImmediate(info->regions_immediate());\n-    e.set_immediateBytes(info->immediate_size());\n+    e.set_cSetRegions(cset->count());\n+    e.set_cSetUsedBefore(cset->used());\n+    e.set_cSetUsedAfter(cset->live());\n+    e.set_collectedOld(cset->get_old_bytes_reserved_for_evacuation());\n+    e.set_collectedPromoted(cset->get_young_bytes_to_be_promoted());\n+    e.set_collectedYoung(cset->get_young_bytes_reserved_for_evacuation());\n+    e.set_regionsPromotedHumongous(regions_promoted_humongous);\n+    e.set_regionsPromotedRegular(regions_promoted_regular);\n+    e.set_regularPromotedGarbage(regular_promoted_garbage);\n+    e.set_regularPromotedFree(regular_promoted_free);\n+    e.set_freeRegions(free_regions);\n+    e.set_regionsImmediate(regions_immediate);\n+    e.set_immediateBytes(immediate_size);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTrace.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-class ShenandoahEvacuationInformation;\n+class ShenandoahCollectionSet;\n@@ -36,1 +36,0 @@\n-  void report_evacuation_info(ShenandoahEvacuationInformation* info);\n@@ -38,2 +37,4 @@\n-private:\n-  void send_evacuation_info_event(ShenandoahEvacuationInformation* info);\n+  static void report_evacuation_info(const ShenandoahCollectionSet* cset,\n+    size_t free_regions, size_t regions_promoted_humongous, size_t regions_promoted_regular,\n+    size_t regular_promoted_garbage, size_t regular_promoted_free, size_t regions_immediate,\n+    size_t immediate_size);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTrace.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}