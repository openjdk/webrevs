{"files":[{"patch":"@@ -227,12 +227,0 @@\n-void ShenandoahGenerationalHeuristics::log_cset_composition(ShenandoahCollectionSet* cset) const {\n-  size_t collected_old = cset->get_old_bytes_reserved_for_evacuation();\n-  size_t collected_promoted = cset->get_young_bytes_to_be_promoted();\n-  size_t collected_young = cset->get_young_bytes_reserved_for_evacuation();\n-\n-  log_info(gc, ergo)(\n-          \"Chosen CSet evacuates young: %zu%s (of which at least: %zu%s are to be promoted), \"\n-          \"old: %zu%s\",\n-          byte_size_in_proper_unit(collected_young), proper_unit_for_byte_size(collected_young),\n-          byte_size_in_proper_unit(collected_promoted), proper_unit_for_byte_size(collected_promoted),\n-          byte_size_in_proper_unit(collected_old), proper_unit_for_byte_size(collected_old));\n-}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.cpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -54,2 +54,0 @@\n-\n-  void log_cset_composition(ShenandoahCollectionSet* cset) const;\n@@ -60,0 +58,1 @@\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGenerationalHeuristics.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,2 +45,0 @@\n-\n-  log_cset_composition(cset);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahGlobalHeuristics.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,2 +58,0 @@\n-\n-  log_cset_composition(cset);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahYoungHeuristics.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}