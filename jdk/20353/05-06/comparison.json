{"files":[{"patch":"@@ -99,0 +99,3 @@\n+import jdk.internal.access.JavaTimeAccess;\n+import jdk.internal.access.SharedSecrets;\n+\n@@ -2022,0 +2025,7 @@\n+    static {\n+        SharedSecrets.setJavaTimeAccess(new JavaTimeAccess() {\n+            public void formatTo(StringBuilder buf, LocalDateTime ldt) {\n+                ldt.formatTo(buf);\n+            }\n+        });\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalDateTime.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -124,0 +124,2 @@\n+import jdk.internal.access.JavaTimeAccess;\n+import jdk.internal.access.SharedSecrets;\n@@ -164,0 +166,1 @@\n+    private static final JavaTimeAccess JTA = SharedSecrets.getJavaTimeAccess();\n@@ -3853,1 +3856,1 @@\n-            buf.append(ldt);\n+            JTA.formatTo(buf, ldt);\n@@ -3865,1 +3868,1 @@\n-            buf.append(ldt);\n+            JTA.formatTo(buf, ldt);\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.internal.access;\n+\n+import java.time.LocalDateTime;\n+\n+public interface JavaTimeAccess {\n+    \/**\n+     * Prints the toString result to the given buf, avoiding extra string allocations.\n+     *\/\n+    void formatTo(StringBuilder buf, LocalDateTime ldt);\n+}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaTimeAccess.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -87,0 +87,1 @@\n+    private static JavaTimeAccess javaTimeAccess;\n@@ -163,0 +164,15 @@\n+    public static JavaTimeAccess getJavaTimeAccess() {\n+        var access = javaTimeAccess;\n+        if (access == null) {\n+            \/\/ Ensure LocalDateTime is initialized; we know that this class\n+            \/\/ provides the shared secret\n+            ensureClassInitialized(java.time.LocalDateTime.class);\n+            access = javaTimeAccess;\n+        }\n+        return access;\n+    }\n+\n+    public static void setJavaTimeAccess(JavaTimeAccess javaTimeAccess) {\n+        SharedSecrets.javaTimeAccess = javaTimeAccess;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/SharedSecrets.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}