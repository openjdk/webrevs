{"files":[{"patch":"@@ -57,2 +57,0 @@\n-com\/sun\/jdi\/InvokeHangTest.java 8290200 macosx-x64,windows-x64\n-\n","filename":"test\/jdk\/ProblemList-svc-vthread.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,0 +62,12 @@\n+\n+        try {\n+            \/\/ The join ensures that the test completes before we exit main(). If we are using\n+            \/\/ virtual threads, they are always daemon threads, and therefor the JVM will exit\n+            \/\/ while they are still running (and the test has not yet completed). The join\n+            \/\/ isn't really needed for platform threads, since by default they are not\n+            \/\/ daemon threads, but it doesn't hurt any either.\n+            t1.join();\n+            t2.join();\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        }\n@@ -66,1 +78,1 @@\n-        System.out.println(\"Debuggee: invokeee in thread \"+Thread.currentThread().toString());\n+        System.out.println(\"Debuggee: invokeee in thread \" + Thread.currentThread().toString());\n@@ -148,1 +160,1 @@\n-            System.err.println(\"  Debugger: Invoking in thread\" + thread);\n+            System.out.println(\"  Debugger: Invoking in thread \" + thread);\n@@ -150,1 +162,1 @@\n-            System.err.println(\"  Debugger: Invoke done\");\n+            System.out.println(\"  Debugger: Invoke done\");\n@@ -194,1 +206,1 @@\n-            System.err.println(\"  Debugger: Breakpoint hit at \"+sf.location());\n+            System.out.println(\"  Debugger: Breakpoint hit at \" + sf.location());\n@@ -217,1 +229,1 @@\n-        final Thread mainThread = Thread.currentThread();\n+        final Thread mainTestThread = Thread.currentThread();\n@@ -249,1 +261,1 @@\n-                                mainThread.interrupt();\n+                                mainTestThread.interrupt();\n","filename":"test\/jdk\/com\/sun\/jdi\/InvokeHangTest.java","additions":18,"deletions":6,"binary":false,"changes":24,"status":"modified"}]}