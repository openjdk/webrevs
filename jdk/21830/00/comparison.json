{"files":[{"patch":"@@ -123,1 +123,1 @@\n-        validateBinaryClassName(packageName);\n+        validateBinaryPackageName(packageName);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/ClassDesc.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        ConstantUtils.validateBinaryPackageName(requireNonNull(name));\n+        ConstantUtils.validateBinaryPackageName(name);\n@@ -78,1 +78,1 @@\n-        ConstantUtils.validateInternalPackageName(requireNonNull(name));\n+        ConstantUtils.validateInternalPackageName(name);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/PackageDesc.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -186,1 +186,3 @@\n-        for (int i = 0; i < name.length(); i++) {\n+        int afterSeparator = 0;\n+        int len = name.length();\n+        for (int i = 0; i < len; i++) {\n@@ -188,2 +190,1 @@\n-            if (ch == ';' || ch == '[' || ch == '\/'\n-                    || ch == '.' && (i == 0 || i + 1 == name.length() || name.charAt(i - 1) == '.'))\n+            if (ch == ';' || ch == '[' || ch == '\/')\n@@ -191,0 +192,7 @@\n+            if (ch == '.') {\n+                if (i == afterSeparator) {\n+                    throw invalidClassName(name);\n+                } else {\n+                    afterSeparator = i + 1;\n+                }\n+            }\n@@ -192,0 +200,2 @@\n+        if (len == afterSeparator)\n+            throw invalidClassName(name);\n@@ -205,1 +215,3 @@\n-        for (int i = 0; i < name.length(); i++) {\n+        int afterSeparator = 0;\n+        int len = name.length();\n+        for (int i = 0; i < len; i++) {\n@@ -207,2 +219,1 @@\n-            if (ch == ';' || ch == '[' || ch == '.'\n-                    || ch == '\/' && (i == 0 || i + 1 == name.length() || name.charAt(i - 1) == '\/'))\n+            if (ch == ';' || ch == '[' || ch == '.')\n@@ -210,0 +221,7 @@\n+            if (ch == '\/') {\n+                if (i == afterSeparator) {\n+                    throw invalidClassName(name);\n+                } else {\n+                    afterSeparator = i + 1;\n+                }\n+            }\n@@ -211,0 +229,2 @@\n+        if (len == afterSeparator)\n+            throw invalidClassName(name);\n@@ -225,6 +245,4 @@\n-        for (int i = 0; i < name.length(); i++) {\n-            char ch = name.charAt(i);\n-            if (ch == ';' || ch == '[' || ch == '\/')\n-                throw new IllegalArgumentException(\"Invalid package name: \" + name);\n-        }\n-        return name;\n+        \/\/ Empty names are explicitly allowed\n+        if (name.isEmpty())\n+            return name;\n+        return validateBinaryClassName(name);\n@@ -244,6 +262,4 @@\n-        for (int i = 0; i < name.length(); i++) {\n-            char ch = name.charAt(i);\n-            if (ch == ';' || ch == '[' || ch == '.')\n-                throw new IllegalArgumentException(\"Invalid package name: \" + name);\n-        }\n-        return name;\n+        \/\/ Empty names are explicitly allowed\n+        if (name.isEmpty())\n+            return name;\n+        return validateInternalClassName(name);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/constant\/ConstantUtils.java","additions":34,"deletions":18,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -295,1 +295,1 @@\n-                \"Ljava.lang.String;\", \"java\/lang\/String\");\n+                \"Ljava.lang.String;\", \"java\/lang\/String\", \"\");\n@@ -306,1 +306,1 @@\n-                \"Ljava.lang.String;\", \"java.lang.String\");\n+                \"Ljava.lang.String;\", \"java.lang.String\", \"\");\n","filename":"test\/jdk\/java\/lang\/constant\/ClassDescTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-    @ValueSource(strings = {\"a\/b.d\", \"a[]\", \"a;\"})\n+    @ValueSource(strings = {\"a\/b.d\", \"a[]\", \"a;\", \"a..b\", \"a.b.\", \".a.b\"})\n@@ -44,1 +44,1 @@\n-    @ValueSource(strings = {\"a\/b.d\", \"a[]\", \"a;\"})\n+    @ValueSource(strings = {\"a\/b.d\", \"a[]\", \"a;\", \"a\/\/b\", \"a\/b\/\", \"\/a\/b\"})\n","filename":"test\/jdk\/java\/lang\/constant\/PackageDescTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}