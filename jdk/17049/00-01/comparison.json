{"files":[{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Unit test for ProcessTools.executeLimitedTestJava()\n+ * @library \/test\/lib\n+ * @run main\/othervm -Dtest.java.opts=-XX:MaxMetaspaceSize=123456789 ProcessToolsExecuteLimitedTestJavaTest\n+ *\/\n+\n+import java.util.function.Consumer;\n+import java.io.File;\n+\n+import jdk.test.lib.JDKToolLauncher;\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class ProcessToolsExecuteLimitedTestJavaTest {\n+    static void test(int numOfLines, boolean withConsumer) throws Exception {\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        if (args.length > 0) {\n+            \/\/ Do nothing. Just let the JVM log its output.\n+        } else {\n+            \/\/ Make sure that the flag doesn't get propagated when the \"limited\" version is used.\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+PrintFlagsFinal\", \"-version\");\n+            output.stdoutShouldNotMatch(\".*MaxMetaspaceSize.* = 123456789.*\");\n+        }\n+    }\n+}\n","filename":"test\/lib-test\/jdk\/test\/lib\/process\/ProcessToolsExecuteLimitedTestJavaTest.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -656,1 +656,1 @@\n-        return executeTestJava(command.toArray(String[]::new));\n+        return executeLimitedTestJava(command.toArray(String[]::new));\n@@ -672,1 +672,1 @@\n-        ProcessBuilder pb = createTestJavaProcessBuilder(command);\n+        ProcessBuilder pb = createLimitedTestJavaProcessBuilder(command);\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}