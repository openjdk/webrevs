{"files":[{"patch":"@@ -708,1 +708,1 @@\n-  UTIL_ARG_ENABLE(NAME: cds-archive-coh, DEFAULT: auto, RESULT: BUILD_CDS_ARCHIVE_COH,\n+  UTIL_ARG_ENABLE(NAME: cds-archive-coh, DEFAULT: false, RESULT: BUILD_CDS_ARCHIVE_COH,\n@@ -710,1 +710,1 @@\n-      DEFAULT_DESC: [auto],\n+      DEFAULT_DESC: [false],\n@@ -725,1 +725,1 @@\n-        else\n+        elif test \"x$enable_cds_archive_coh\" = \"xyes\"; then\n@@ -728,0 +728,3 @@\n+        else\n+          AC_MSG_RESULT([yes])\n+          AVAILABLE=false\n","filename":"make\/autoconf\/jdk-options.m4","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -69,0 +69,3 @@\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n@@ -72,1 +75,0 @@\n-import jtreg.SkippedException;\n@@ -75,0 +77,37 @@\n+\n+    private static String archiveName(String archiveSuffix) {\n+        return \"classes\" + archiveSuffix + \".jsa\";\n+    }\n+\n+    private static Path archivePath(String archiveSuffix) {\n+        return Paths.get(System.getProperty(\"java.home\"), \"lib\",\n+                         \"server\", archiveName(archiveSuffix));\n+    }\n+\n+    \/\/ Returns false if the COH archive already exists.\n+    private static boolean createCOHArchive(char coops, char coh,\n+                                         String archiveSuffix) throws Exception {\n+        Path archive= archivePath(archiveSuffix);\n+        if (Files.exists(archive)) {\n+            return false;\n+        }\n+\n+        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+                \"-XX:+UnlockExperimentalVMOptions\",\n+                \"-XX:\" + coh + \"UseCompactObjectHeaders\",\n+                \"-XX:\" + coops + \"UseCompressedOops\",\n+                \"-Xlog:cds\",\n+                \"-Xshare:dump\");\n+\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0)\n+              .shouldContain(archiveName(archiveSuffix));\n+        return true;\n+    }\n+\n+    private static void deleteArchive(String archiveSuffix) throws Exception {\n+        Path archive= archivePath(archiveSuffix);\n+        Files.deleteIfExists(archive);\n+        System.out.println(\"Deleted archive: \" + archive.toString());\n+    }\n+\n@@ -83,0 +122,1 @@\n+        boolean needsCleanup = false;;\n@@ -93,0 +133,1 @@\n+                needsCleanup = createCOHArchive(coops, coh, archiveSuffix);\n@@ -102,0 +143,1 @@\n+                needsCleanup = createCOHArchive(coops, coh, archiveSuffix);\n@@ -117,1 +159,5 @@\n-        output.shouldContain(\"classes\" + archiveSuffix + \".jsa\");\n+        output.shouldContain(archiveName(archiveSuffix));\n+\n+        if (needsCleanup) {\n+            deleteArchive(archiveSuffix);\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/TestDefaultArchiveLoading.java","additions":48,"deletions":2,"binary":false,"changes":50,"status":"modified"}]}