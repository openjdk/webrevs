{"files":[{"patch":"@@ -708,1 +708,1 @@\n-  UTIL_ARG_ENABLE(NAME: cds-archive-coh, DEFAULT: auto, RESULT: BUILD_CDS_ARCHIVE_COH,\n+  UTIL_ARG_ENABLE(NAME: cds-archive-coh, DEFAULT: false, RESULT: BUILD_CDS_ARCHIVE_COH,\n@@ -710,1 +710,1 @@\n-      DEFAULT_DESC: [auto],\n+      DEFAULT_DESC: [false],\n@@ -725,1 +725,1 @@\n-        else\n+        elif test \"x$enable_cds_archive_coh\" = \"xyes\"; then\n@@ -728,0 +728,3 @@\n+        else\n+          AC_MSG_RESULT([yes])\n+          AVAILABLE=false\n","filename":"make\/autoconf\/jdk-options.m4","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -69,0 +69,3 @@\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n@@ -72,0 +75,1 @@\n+\n@@ -75,0 +79,16 @@\n+\n+    private static String archiveName(String archiveSuffix) {\n+        return \"classes\" + archiveSuffix + \".jsa\";\n+    }\n+\n+    private static Path archivePath(String archiveSuffix) {\n+        return Paths.get(System.getProperty(\"java.home\"), \"lib\",\n+                         \"server\", archiveName(archiveSuffix));\n+    }\n+\n+    private static boolean isCOHArchiveAvailable(char coops, char coh,\n+                                                 String archiveSuffix) throws Exception {\n+        Path archive= archivePath(archiveSuffix);\n+        return Files.exists(archive);\n+    }\n+\n@@ -93,0 +113,4 @@\n+                if (!isCOHArchiveAvailable(coops, coh, archiveSuffix)) {\n+                    throw new SkippedException(\"Skipping test due to \" +\n+                                               archivePath(archiveSuffix).toString() + \" not available\");\n+                }\n@@ -102,0 +126,4 @@\n+                if (!isCOHArchiveAvailable(coops, coh, archiveSuffix)) {\n+                    throw new SkippedException(\"Skipping test due to \" +\n+                                               archivePath(archiveSuffix).toString() + \" not available\");\n+                }\n@@ -117,2 +145,1 @@\n-        output.shouldContain(\"classes\" + archiveSuffix + \".jsa\");\n-\n+        output.shouldContain(archiveName(archiveSuffix));\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/TestDefaultArchiveLoading.java","additions":29,"deletions":2,"binary":false,"changes":31,"status":"modified"}]}