{"files":[{"patch":"@@ -105,1 +105,1 @@\n-        static void mask(ByteBuffer src, ByteBuffer dst, int mask) {\n+        static void applyMask(ByteBuffer src, ByteBuffer dst, int mask) {\n@@ -109,1 +109,1 @@\n-            new Masker().reset(mask).mask(src, dst);\n+            new Masker().reset(mask).applyMask(src, dst);\n@@ -136,1 +136,1 @@\n-        public void mask(ByteBuffer src, ByteBuffer dst) {\n+        public void applyMask(ByteBuffer src, ByteBuffer dst) {\n@@ -138,2 +138,2 @@\n-                initGallopingMasking(src, dst);\n-                doGallopingMasking(src, dst);\n+                initGallopingMask(src, dst);\n+                applyGallopingMask(src, dst);\n@@ -141,1 +141,1 @@\n-            doPlainMasking(src, dst);\n+            applyPlainMask(src, dst);\n@@ -147,1 +147,1 @@\n-        private void initGallopingMasking(ByteBuffer src, ByteBuffer dst) {\n+        private void initGallopingMask(ByteBuffer src, ByteBuffer dst) {\n@@ -166,1 +166,1 @@\n-        private void doGallopingMasking(ByteBuffer src, ByteBuffer dst) {\n+        private void applyGallopingMask(ByteBuffer src, ByteBuffer dst) {\n@@ -192,1 +192,1 @@\n-        private void doPlainMasking(ByteBuffer src, ByteBuffer dst) {\n+        private void applyPlainMask(ByteBuffer src, ByteBuffer dst) {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/websocket\/Frame.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-        Frame.Masker.mask(src, temp, maskingKey);\n+        Frame.Masker.applyMask(src, temp, maskingKey);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/websocket\/MessageDecoder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-        payloadMasker.mask(src, dst);\n+        payloadMasker.applyMask(src, dst);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/websocket\/MessageEncoder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-                        masker.mask(src, number);\n+                        masker.applyMask(src, number);\n","filename":"test\/jdk\/java\/net\/httpclient\/websocket\/AutomaticPong.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -294,1 +294,1 @@\n-            masker.mask(data, this.data);\n+            masker.applyMask(data, this.data);\n","filename":"test\/jdk\/java\/net\/httpclient\/websocket\/DummyWebSocketServer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-import static jdk.internal.net.http.websocket.Frame.Masker.mask;\n+import static jdk.internal.net.http.websocket.Frame.Masker.applyMask;\n@@ -49,1 +49,1 @@\n-                            () -> mask(src, dst, m));\n+                            () -> applyMask(src, dst, m));\n@@ -74,1 +74,1 @@\n-                                () -> masker.mask(s, dst));\n+                                () -> masker.applyMask(s, dst));\n@@ -86,1 +86,1 @@\n-                () -> masker.mask(src, dst));\n+                () -> masker.applyMask(src, dst));\n","filename":"test\/jdk\/java\/net\/httpclient\/websocket\/java.net.http\/jdk\/internal\/net\/http\/websocket\/MaskerTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}