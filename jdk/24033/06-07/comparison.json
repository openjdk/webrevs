{"files":[{"patch":"@@ -74,1 +74,4 @@\n-                        0x1e, 0x1f\n+                        0x1e, 0x1f,\n+                        \/\/ negative ones\n+                        -1, -2, -3, 4,\n+                        -5, -6\n@@ -116,1 +119,8 @@\n-        Frame.Masker masker = new Frame.Masker().setMask(0x0A0B0C0D);\n+        Frame.Masker masker = new Frame.Masker()\n+                \/\/ `0xB0` and `0xD0` is used instead of `0x0B` and `0x0D` to cover the negative `byte` range:\n+                \/\/\n+                \/\/     (byte) 0x0A ->  10\n+                \/\/     (byte) 0xB0 -> -80\n+                \/\/     (byte) 0x0C ->  12\n+                \/\/     (byte) 0xD0 -> -48\n+                .setMask(0x0AB00CD0);\n@@ -127,1 +137,1 @@\n-                        0x1, 0x2, 0x3,\n+                        -0x1, -0x2, 0x3,\n@@ -129,3 +139,8 @@\n-                        0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8,\n-                        \/\/ `applyPlainMask` will mask 1 byte\n-                        0x1\n+                        0x1, 0x2, 0x3, 0x4, -0x5, 0x6, -0x7, -0x8,\n+                        \/\/ `applyPlainMask` will mask 3 bytes\n+                        0x1, -0x2, -0x3\n+                        \/\/ Note minus signs sprinkled above to cover the negative `byte` range in a certain structure:\n+                        \/\/ Some will get masked with a positive number, some with a negative.\n+                        \/\/ For instance, for `applyPlainMask`:\n+                        \/\/ - `0x1` will be masked with `0xA`\n+                        \/\/ - `-0x2` will be masked with `0xB0`\n@@ -142,3 +157,3 @@\n-                        0x1 ^ 0xB,\n-                        0x2 ^ 0xC,\n-                        0x3 ^ 0xD,\n+                        (byte) (-0x1 ^ 0xB0),\n+                        -0x2 ^ 0xC,\n+                        (byte) (0x3 ^ 0xD0),\n@@ -147,1 +162,1 @@\n-                        0x2 ^ 0xB,\n+                        (byte) (0x2 ^ 0xB0),\n@@ -149,7 +164,9 @@\n-                        0x4 ^ 0xD,\n-                        0x5 ^ 0xA,\n-                        0x6 ^ 0xB,\n-                        0x7 ^ 0xC,\n-                        0x8 ^ 0xD,\n-                        \/\/ 1 byte for `applyPlainMask`\n-                        0x1 ^ 0xA\n+                        (byte) (0x4 ^ 0xD0),\n+                        -0x5 ^ 0xA,\n+                        (byte) (0x6 ^ 0xB0),\n+                        -0x7 ^ 0xC,\n+                        (byte) (-0x8 ^ 0xD0),\n+                        \/\/ 3 bytes for `applyPlainMask`\n+                        0x1 ^ 0xA,\n+                        (byte) (-0x2 ^ 0xB0),\n+                        -0x3 ^ 0xC\n","filename":"test\/jdk\/java\/net\/httpclient\/websocket\/WebSocketEndiannessTest.java","additions":34,"deletions":17,"binary":false,"changes":51,"status":"modified"}]}