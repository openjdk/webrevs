{"files":[{"patch":"@@ -3311,1 +3311,1 @@\n-    fixed_latency(100);\n+    fixed_latency(30);\n@@ -3319,1 +3319,1 @@\n-    fixed_latency(100);\n+    fixed_latency(30);\n@@ -3325,1 +3325,1 @@\n-    fixed_latency(100);\n+    fixed_latency(30);\n@@ -3330,1 +3330,1 @@\n-    fixed_latency(100);\n+    fixed_latency(30);\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -4999,1 +4999,1 @@\n-  fixed_latency(100);\n+  fixed_latency(30);\n@@ -5011,1 +5011,1 @@\n-  fixed_latency(100);\n+  fixed_latency(30);\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4386,1 +4386,1 @@\n-  fixed_latency(100);\n+  fixed_latency(30);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3868,1 +3868,1 @@\n-    fixed_latency(100);\n+    fixed_latency(30);\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -760,1 +760,1 @@\n-    fprintf(fp_hpp, \"  %s _mask;\\n\\n\", _pipeline->_maxcycleused <= 32 ? \"uint\" : \"uint64_t\" );\n+    fprintf(fp_hpp, \"  uint32_t _mask;\\n\\n\");\n@@ -763,6 +763,1 @@\n-    if (_pipeline->_maxcycleused <= 32)\n-      fprintf(fp_hpp, \"  Pipeline_Use_Cycle_Mask(uint mask) : _mask(mask) {}\\n\\n\");\n-    else {\n-      fprintf(fp_hpp, \"  Pipeline_Use_Cycle_Mask(uint mask1, uint mask2) : _mask((((uint64_t)mask1) << 32) | mask2) {}\\n\\n\");\n-      fprintf(fp_hpp, \"  Pipeline_Use_Cycle_Mask(uint64_t mask) : _mask(mask) {}\\n\\n\");\n-    }\n+    fprintf(fp_hpp, \"  Pipeline_Use_Cycle_Mask(uint32_t mask) : _mask(mask) {}\\n\\n\");\n@@ -773,1 +768,1 @@\n-    fprintf(fp_hpp, \"    _mask <<= n;\\n\");\n+    fprintf(fp_hpp, \"    _mask <<= (n < 32) ? n : 31;\\n\");\n@@ -786,1 +781,1 @@\n-    fprintf(fp_hpp, \"  uint \");\n+    fprintf(fp_hpp, \"  uint32_t \");\n@@ -795,1 +790,1 @@\n-      fprintf(fp_hpp, \"uint mask%d%s\", l, l < masklen ? \", \" : \") : \");\n+      fprintf(fp_hpp, \"uint32_t mask%d%s\", l, l < masklen ? \", \" : \") : \");\n@@ -806,1 +801,1 @@\n-    fprintf(fp_hpp, \"    return (\");\n+    fprintf(fp_hpp, \"    return \");\n@@ -809,1 +804,1 @@\n-    fprintf(fp_hpp, \") ? true : false;\\n\");\n+    fprintf(fp_hpp, \";\\n\");\n@@ -820,2 +815,2 @@\n-    fprintf(fp_hpp, \"      uint mask = (1 << n) - 1;\\n\");\n-    fprintf(fp_hpp, \"      uint temp%d = mask & (_mask%d >> m); _mask%d <<= n;\\n\", 2, 1, 1);\n+    fprintf(fp_hpp, \"      uint32_t mask = (1 << n) - 1;\\n\");\n+    fprintf(fp_hpp, \"      uint32_t temp%d = mask & (_mask%d >> m); _mask%d <<= n;\\n\", 2, 1, 1);\n@@ -823,1 +818,1 @@\n-      fprintf(fp_hpp, \"      uint temp%d = mask & (_mask%d >> m); _mask%d <<= n; _mask%d |= temp%d;\\n\", l+1, l, l, l, l);\n+      fprintf(fp_hpp, \"      uint32_t temp%d = mask & (_mask%d >> m); _mask%d <<= n; _mask%d |= temp%d;\\n\", l+1, l, l, l, l);\n@@ -873,2 +868,1 @@\n-  fprintf(fp_hpp, \"    uint max_shift = 8 * sizeof(_mask) - 1;\\n\");\n-  fprintf(fp_hpp, \"    _mask <<= (cycles < max_shift) ? cycles : max_shift;\\n\");\n+  fprintf(fp_hpp, \"    _mask <<= cycles;\\n\");\n","filename":"src\/hotspot\/share\/adlc\/output_h.cpp","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"}]}