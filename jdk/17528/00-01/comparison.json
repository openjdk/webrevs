{"files":[{"patch":"@@ -31,0 +31,2 @@\n+import java.awt.Font;\n+import java.awt.GraphicsEnvironment;\n@@ -42,0 +44,1 @@\n+    private static boolean fontFound = false;\n@@ -47,5 +50,17 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            @Override\n-            public void run() {\n-                frame = new JFrame(\"JTextField Test\");\n-                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        try {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                @Override\n+                public void run() {\n+                    GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\n+                    String[] names = ge.getAvailableFontFamilyNames();\n+                    Font[] allFonts = ge.getAllFonts();\n+                    for (int x = 0; x < allFonts.length; x++) {\n+                        if ((allFonts[x].canDisplay('\\u0e01')) && (allFonts[x].canDisplay('\\u0c01'))) {\n+                            fontFound = true;\n+                        }\n+                    }\n+                    if (!fontFound) {\n+                        return;\n+                    }\n+                    frame = new JFrame(\"JTextField Test\");\n+                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n@@ -53,2 +68,2 @@\n-                JPanel container = (JPanel) frame.getContentPane();\n-                container.setLayout(new GridLayout(2,1));\n+                    JPanel container = (JPanel) frame.getContentPane();\n+                    container.setLayout(new GridLayout(2,1));\n@@ -56,0 +71,2 @@\n+                    textField1 = new JTextField(\"\\u0e01\");\n+                    textField2 = new JTextField(\"\\u0c01\");\n@@ -57,7 +74,10 @@\n-                textField1 = new JTextField(\"\\u2588\");\n-                textField2 = new JTextField(\"\\u2588\");\n-\n-                container.add(textField1);\n-                container.add(textField2);\n-                frame.setVisible(true);\n-                frame.pack();\n+                    container.add(textField1);\n+                    container.add(textField2);\n+                    frame.setVisible(true);\n+                    frame.pack();\n+                }\n+            });\n+            Thread.sleep(1000);\n+            if (!fontFound) {\n+                System.out.println(\"system does not have Indic or Thai fonts\");\n+                return;\n@@ -65,13 +85,6 @@\n-        });\n-        Thread.sleep(1000);\n-        SwingUtilities.invokeAndWait(() -> {\n-            height1 = textField1.getHeight();\n-            height2 = textField2.getHeight();\n-        });\n-        if( height1 < 10 || height2 < 10 ) {\n-            throw new Exception(\"Wrong field height\");\n-        }\n-        System.out.println(\"ok\");\n-        SwingUtilities.invokeAndWait(() -> {\n-            if (frame != null) {\n-                frame.dispose();\n+            SwingUtilities.invokeAndWait(() -> {\n+                height1 = textField1.getHeight();\n+                height2 = textField2.getHeight();\n+            });\n+            if( height1 < 10 || height2 < 10 ) {\n+                throw new Exception(\"Wrong field height\");\n@@ -79,1 +92,8 @@\n-        });\n+            System.out.println(\"ok\");\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicTextUI\/8001470\/bug8001470.java","additions":48,"deletions":28,"binary":false,"changes":76,"status":"modified"}]}