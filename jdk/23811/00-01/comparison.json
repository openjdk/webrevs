{"files":[{"patch":"@@ -41,1 +41,3 @@\n-#define CGROUP2_SUPER_MAGIC 0x63677270\n+#ifndef CGROUP2_SUPER_MAGIC\n+#  define CGROUP2_SUPER_MAGIC 0x63677270\n+#endif\n@@ -58,5 +60,0 @@\n-static inline bool cg_v2_required(int index) {\n-  \/\/ For cgroups v2, cpuacct is rolled into cpu, and the pids and cpuset controllers\n-  \/\/ are optional; the remaining controllers, cpu and memory, are required.\n-  return index == CPU_IDX || index == MEMORY_IDX;\n-}\n@@ -81,0 +78,3 @@\n+  \/\/ Assume cgroups v2 is usable by the JDK iff \/sys\/fs\/cgroup has the cgroup v2\n+  \/\/ file system magic.  If it does not then heuristics are required to determine\n+  \/\/ if cgroups v1 is usable or not.\n@@ -263,1 +263,0 @@\n-  bool is_cgroupsV2 = true;\n@@ -285,7 +284,3 @@\n-      char* buf_ptr = buf;\n-      int i;\n-      while ((controller = strsep(&buf_ptr, \" \\n\\t\\r\\f\\v\")) != nullptr) {\n-        \/\/ Skip empty string due to line ending in delimiter, '\\n'.\n-        if (strcmp(controller, \"\") == 0) {\n-          continue;\n-        }\n+      #define ISSPACE_CHARS \" \\n\\t\\r\\f\\v\"\n+      while ((controller = strsep(&p, ISSPACE_CHARS)) != nullptr) {\n+        int i;\n@@ -295,4 +290,4 @@\n-          log_debug(os, container)(\"v2 controller %s is enabled and %s\", cg_infos[i]._name,\n-                                   cg_v2_required(i) ? \"required\" : \"relevant\");\n-        } else {\n-          log_debug(os, container)(\"v2 controller %s is enabled but not relevant\", controller);\n+          if (i == PIDS_IDX || i == CPUSET_IDX) {\n+            log_debug(os, container)(\"Detected optional %s controller entry in %s\",\n+                                     controller, controllers_file);\n+          }\n@@ -301,0 +296,1 @@\n+      #undef ISSPACE_CHARS\n@@ -311,1 +307,3 @@\n-      if (cg_v2_required(i)) {\n+      \/\/ For cgroups v2, cpuacct is rolled into cpu, and the pids and cpuset controllers\n+      \/\/ are optional; the remaining controllers, cpu and memory, are required.\n+      if (i == CPU_IDX || i == MEMORY_IDX) {\n@@ -315,2 +313,1 @@\n-        log_debug(os, container)(\"v2 controller %s is %s but not enabled\", cg_controller_name[i],\n-                                 cg_v2_required(i) ? \"required\" : \"relevant\");\n+        log_debug(os, container)(\"controller %s is not enabled\", cg_controller_name[i]);\n@@ -321,3 +318,3 @@\n-     * cgroups v2 is not enabled.  Read \/proc\/cgroups; for cgroups v1 hierarchy (hybrid or\n-     * legacy), cpu, cpuacct, cpuset, and memory controllers must have non-zero for the\n-     * hierarchy ID field and relevant controllers mounted.\n+     * The \/sys\/fs\/cgroup filesystem magic hint suggests we have cg v1.  Read \/proc\/cgroups; for\n+     * cgroups v1 hierarchy (hybrid or legacy), cpu, cpuacct, cpuset, and memory controllers must\n+     * have non-zero for the hierarchy ID field and relevant controllers mounted.\n@@ -339,1 +336,0 @@\n-        log_debug(os, container)(\"Detected optional cpuset controller entry in %s\", controllers_file);\n@@ -359,3 +355,2 @@\n-      \/\/ pids and cpuset controllers are optional. All other controllers are required\n-      if (i != PIDS_IDX && i != CPUSET_IDX) {\n-        is_cgroupsV2 = is_cgroupsV2 && cg_infos[i]._hierarchy_id == 0;\n+      \/\/ pids controller is optional. All other controllers are required\n+      if (i != PIDS_IDX) {\n@@ -411,1 +406,1 @@\n-    while (!is_cgroupsV2 && (token = strsep(&controllers, \",\")) != nullptr) {\n+    while (!cgroups_v2_enabled && (token = strsep(&controllers, \",\")) != nullptr) {\n@@ -430,1 +425,1 @@\n-    if (is_cgroupsV2) {\n+    if (cgroups_v2_enabled) {\n@@ -466,1 +461,1 @@\n-    \/* Cgroup v2 relevant info. We only look for the _mount_path iff is_cgroupsV2 so\n+    \/* Cgroup v2 relevant info. We only look for the _mount_path iff cgroups_v2_enabled so\n@@ -473,1 +468,1 @@\n-    if (is_cgroupsV2 && match_mount_info_line(p,\n+    if (cgroups_v2_enabled && match_mount_info_line(p,\n@@ -552,1 +547,1 @@\n-  if (is_cgroupsV2) {\n+  if (cgroups_v2_enabled) {\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":28,"deletions":33,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -242,0 +242,66 @@\n+    \/\/ Test RHEL 8 (cgroups v1) with cpuset controller disabled via the kernel command line.\n+    \/\/ # grep cgroup \/boot\/grub2\/grubenv\n+    \/\/ kernelopts=[...] cgroup_disable=cpuset\n+    private String procCgroupsCgroupsV1CpusetDisabledContent =\n+            \"#subsys_name\thierarchy\tnum_cgroups\tenabled\\n\" +\n+            \"cpuset\t0\t1\t0\\n\" +\n+            \"cpu\t8\t1\t1\\n\" +\n+            \"cpuacct\t8\t1\t1\\n\" +\n+            \"blkio\t7\t1\t1\\n\" +\n+            \"memory\t9\t114\t1\\n\" +\n+            \"devices\t3\t67\t1\\n\" +\n+            \"freezer\t2\t1\t1\\n\" +\n+            \"net_cls\t6\t1\t1\\n\" +\n+            \"perf_event\t4\t1\t1\\n\" +\n+            \"net_prio\t6\t1\t1\\n\" +\n+            \"hugetlb\t11\t1\t1\\n\" +\n+            \"pids\t10\t91\t1\\n\" +\n+            \"rdma\t5\t1\t1\\n\";\n+    private String procSelfCgroupCgroupsV1CpusetDisabledContent =\n+            \"11:hugetlb:\/\\n\" +\n+            \"10:pids:\/user.slice\/user-0.slice\/session-1.scope\\n\" +\n+            \"9:memory:\/user.slice\/user-0.slice\/session-1.scope\\n\" +\n+            \"8:cpu,cpuacct:\/\\n\" +\n+            \"7:blkio:\/\\n\" +\n+            \"6:net_cls,net_prio:\/\\n\" +\n+            \"5:rdma:\/\\n\" +\n+            \"4:perf_event:\/\\n\" +\n+            \"3:devices:\/system.slice\/sshd.service\\n\" +\n+            \"2:freezer:\/\\n\" +\n+            \"1:name=systemd:\/user.slice\/user-0.slice\/session-1.scope\\n\";\n+    private String procSelfMountinfoCgroupsV1CpusetDisabledContent =\n+            \"22 93 0:21 \/ \/sys rw,nosuid,nodev,noexec,relatime shared:2 - sysfs sysfs rw,seclabel\\n\" +\n+            \"23 93 0:5 \/ \/proc rw,nosuid,nodev,noexec,relatime shared:25 - proc proc rw\\n\" +\n+            \"24 93 0:6 \/ \/dev rw,nosuid shared:21 - devtmpfs devtmpfs rw,seclabel,size=632252k,nr_inodes=158063,mode=755\\n\" +\n+            \"25 22 0:7 \/ \/sys\/kernel\/security rw,nosuid,nodev,noexec,relatime shared:3 - securityfs securityfs rw\\n\" +\n+            \"26 24 0:22 \/ \/dev\/shm rw,nosuid,nodev shared:22 - tmpfs tmpfs rw,seclabel\\n\" +\n+            \"27 24 0:23 \/ \/dev\/pts rw,nosuid,noexec,relatime shared:23 - devpts devpts rw,seclabel,gid=5,mode=620,ptmxmode=000\\n\" +\n+            \"28 93 0:24 \/ \/run rw,nosuid,nodev shared:24 - tmpfs tmpfs rw,seclabel,mode=755\\n\" +\n+            \"29 22 0:25 \/ \/sys\/fs\/cgroup ro,nosuid,nodev,noexec shared:4 - tmpfs tmpfs ro,seclabel,mode=755\\n\" +\n+            \"30 29 0:26 \/ \/sys\/fs\/cgroup\/systemd rw,nosuid,nodev,noexec,relatime shared:5 - cgroup cgroup rw,seclabel,xattr,release_agent=\/usr\/lib\/systemd\/systemd-cgroups-agent,name=systemd\\n\" +\n+            \"31 22 0:27 \/ \/sys\/fs\/pstore rw,nosuid,nodev,noexec,relatime shared:16 - pstore pstore rw,seclabel\\n\" +\n+            \"32 22 0:28 \/ \/sys\/fs\/bpf rw,nosuid,nodev,noexec,relatime shared:17 - bpf bpf rw,mode=700\\n\" +\n+            \"33 29 0:29 \/ \/sys\/fs\/cgroup\/freezer rw,nosuid,nodev,noexec,relatime shared:6 - cgroup cgroup rw,seclabel,freezer\\n\" +\n+            \"34 29 0:30 \/ \/sys\/fs\/cgroup\/devices rw,nosuid,nodev,noexec,relatime shared:7 - cgroup cgroup rw,seclabel,devices\\n\" +\n+            \"35 29 0:31 \/ \/sys\/fs\/cgroup\/perf_event rw,nosuid,nodev,noexec,relatime shared:8 - cgroup cgroup rw,seclabel,perf_event\\n\" +\n+            \"36 29 0:32 \/ \/sys\/fs\/cgroup\/rdma rw,nosuid,nodev,noexec,relatime shared:9 - cgroup cgroup rw,seclabel,rdma\\n\" +\n+            \"37 29 0:33 \/ \/sys\/fs\/cgroup\/net_cls,net_prio rw,nosuid,nodev,noexec,relatime shared:10 - cgroup cgroup rw,seclabel,net_cls,net_prio\\n\" +\n+            \"38 29 0:34 \/ \/sys\/fs\/cgroup\/blkio rw,nosuid,nodev,noexec,relatime shared:11 - cgroup cgroup rw,seclabel,blkio\\n\" +\n+            \"39 29 0:35 \/ \/sys\/fs\/cgroup\/cpu,cpuacct rw,nosuid,nodev,noexec,relatime shared:12 - cgroup cgroup rw,seclabel,cpu,cpuacct\\n\" +\n+            \"40 29 0:36 \/ \/sys\/fs\/cgroup\/memory rw,nosuid,nodev,noexec,relatime shared:13 - cgroup cgroup rw,seclabel,memory\\n\" +\n+            \"41 29 0:37 \/ \/sys\/fs\/cgroup\/pids rw,nosuid,nodev,noexec,relatime shared:14 - cgroup cgroup rw,seclabel,pids\\n\" +\n+            \"42 29 0:38 \/ \/sys\/fs\/cgroup\/hugetlb rw,nosuid,nodev,noexec,relatime shared:15 - cgroup cgroup rw,seclabel,hugetlb\\n\" +\n+            \"43 22 0:12 \/ \/sys\/kernel\/tracing rw,relatime shared:18 - tracefs none rw,seclabel\\n\" +\n+            \"90 22 0:39 \/ \/sys\/kernel\/config rw,relatime shared:19 - configfs configfs rw\\n\" +\n+            \"93 1 253:0 \/ \/ rw,relatime shared:1 - xfs \/dev\/mapper\/rhel-root rw,seclabel,attr2,inode64,logbufs=8,logbsize=32k,noquota\\n\" +\n+            \"44 22 0:20 \/ \/sys\/fs\/selinux rw,relatime shared:20 - selinuxfs selinuxfs rw\\n\" +\n+            \"45 24 0:19 \/ \/dev\/mqueue rw,relatime shared:26 - mqueue mqueue rw,seclabel\\n\" +\n+            \"46 23 0:40 \/ \/proc\/sys\/fs\/binfmt_misc rw,relatime shared:27 - autofs systemd-1 rw,fd=31,pgrp=1,timeout=0,minproto=5,maxproto=5,direct,pipe_ino=28718\\n\" +\n+            \"47 24 0:41 \/ \/dev\/hugepages rw,relatime shared:28 - hugetlbfs hugetlbfs rw,seclabel,pagesize=2M\\n\" +\n+            \"48 22 0:8 \/ \/sys\/kernel\/debug rw,relatime shared:29 - debugfs debugfs rw,seclabel\\n\" +\n+            \"49 22 0:42 \/ \/sys\/fs\/fuse\/connections rw,relatime shared:30 - fusectl fusectl rw\\n\" +\n+            \"114 93 252:1 \/ \/boot rw,relatime shared:61 - xfs \/dev\/vda1 rw,seclabel,attr2,inode64,logbufs=8,logbsize=32k,noquota\\n\" +\n+            \"466 28 0:46 \/ \/run\/user\/0 rw,nosuid,nodev,relatime shared:251 - tmpfs tmpfs rw,seclabel,size=130188k,mode=700\\n\";\n+    private Path procCgroupsCgroupsV1CpusetDisabledPath;\n+    private Path procSelfCgroupCgroupsV1CpusetDisabledPath;\n+    private Path procSelfMountinfoCgroupsV1CpusetDisabledPath;\n@@ -347,0 +413,7 @@\n+\n+            procCgroupsCgroupsV1CpusetDisabledPath = Paths.get(existingDirectory.toString(), \"proc_cgroups_cgroups_v1_cpuset_disabled\");\n+            Files.writeString(procCgroupsCgroupsV1CpusetDisabledPath, procCgroupsCgroupsV1CpusetDisabledContent);\n+            procSelfCgroupCgroupsV1CpusetDisabledPath = Paths.get(existingDirectory.toString(), \"proc_self_cgroup_cgroups_v1_cpuset_disabled\");\n+            Files.writeString(procSelfCgroupCgroupsV1CpusetDisabledPath, procSelfCgroupCgroupsV1CpusetDisabledContent);\n+            procSelfMountinfoCgroupsV1CpusetDisabledPath = Paths.get(existingDirectory.toString(), \"proc_self_mountinfo_cgroups_v1_cpuset_disabled\");\n+            Files.writeString(procSelfMountinfoCgroupsV1CpusetDisabledPath, procSelfMountinfoCgroupsV1CpusetDisabledContent);\n@@ -386,1 +459,1 @@\n-        String procSelfCgroup = cgroupV1SelfCgroup.toString();\n+        String procSelfCgroup = cgroupV2SelfCgroup.toString();\n@@ -396,1 +469,1 @@\n-        String procSelfCgroup = cgroupV1SelfCgroup.toString();\n+        String procSelfCgroup = cgroupV2SelfCgroup.toString();\n@@ -534,0 +607,10 @@\n+    public void testCgroupv1CpusetDisabled(WhiteBox wb) {\n+        String procCgroups = procCgroupsCgroupsV1CpusetDisabledPath.toString();\n+        String procSelfCgroup = procSelfCgroupCgroupsV1CpusetDisabledPath.toString();\n+        String procSelfMountinfo = procSelfMountinfoCgroupsV1CpusetDisabledPath.toString();\n+        int retval = wb.validateCgroup(false, procCgroups, procSelfCgroup, procSelfMountinfo);\n+        Asserts.assertEQ(INVALID_CGROUPS_GENERIC, retval, \"Required cpuset controller disabled in \/proc\/cgroups. Invalid.\");\n+        Asserts.assertFalse(isValidCgroup(retval));\n+        System.out.println(\"testCgroupv1CpusetDisabled PASSED!\");\n+    }\n+\n@@ -565,0 +648,1 @@\n+            test.testCgroupv1CpusetDisabled(wb);\n","filename":"test\/hotspot\/jtreg\/containers\/cgroup\/CgroupSubsystemFactory.java","additions":86,"deletions":2,"binary":false,"changes":88,"status":"modified"}]}