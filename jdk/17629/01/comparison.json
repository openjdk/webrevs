{"files":[{"patch":"@@ -1225,0 +1225,1 @@\n+  constexpr size_t batch_size = 128;\n@@ -1228,6 +1229,3 @@\n-  for (size_t bucket_it = 0; bucket_it < table->_size; bucket_it++) {\n-    ScopedCS cs(thread, this);\n-    size_t count = 0;\n-    Bucket* bucket = table->get_bucket(bucket_it);\n-    if (bucket->have_redirect() || bucket->is_locked()) {\n-      continue;\n+  size_t num_batches = table->_size \/ batch_size;\n+  for (size_t start_batch = 0; start_batch < _table->_size; start_batch += batch_size) {\n+    size_t batch_end = MIN2(start_batch + batch_size, _table->_size);\n@@ -1235,5 +1233,16 @@\n-    Node* current_node = bucket->first();\n-    while (current_node != nullptr) {\n-      ++count;\n-      literal_bytes += vs_f(current_node->value());\n-      current_node = current_node->next();\n+    ScopedCS cs(thread, this);\n+    for (size_t bucket_it = batch_start;\n+         bucket_it < batch_end;\n+         bucket_it++) {\n+      size_t count = 0;\n+      Bucket* bucket = table->get_bucket(bucket_it);\n+      if (bucket->have_redirect() || bucket->is_locked()) {\n+        continue;\n+      }\n+      Node* current_node = bucket->first();\n+      while (current_node != nullptr) {\n+        ++count;\n+        literal_bytes += vs_f(current_node->value());\n+        current_node = current_node->next();\n+      }\n+      summary.add((double)count);\n@@ -1241,1 +1250,0 @@\n-    summary.add((double)count);\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.inline.hpp","additions":20,"deletions":12,"binary":false,"changes":32,"status":"modified"}]}