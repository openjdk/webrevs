{"files":[{"patch":"@@ -100,2 +100,0 @@\n-    \/\/ Override bulk get methods for better performance\n-\n@@ -103,1 +101,1 @@\n-    public CharBuffer get(int index, char[] dst, int dstOffset, int length) {\n+    CharBuffer getArray(int index, char[] dst, int dstOffset, int length) {\n@@ -106,2 +104,0 @@\n-        Objects.checkFromIndexSize(srcOffset, length, offset + limit());\n-        Objects.checkFromIndexSize(dstOffset, length, dst.length);\n@@ -112,18 +108,0 @@\n-    @Override\n-    public CharBuffer get(char[] dst, int dstOffset, int length) {\n-        int pos = position();\n-        get(pos, dst, dstOffset, length);\n-        position(pos + length);\n-        return this;\n-    }\n-\n-    @Override\n-    public void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin) {\n-        \/\/ Check [srcBegin,srcEnd) is a subset of [0, limit() - position())\n-        int pos = position();\n-        int lim = limit();\n-        Objects.checkFromToIndex(srcBegin, srcEnd, lim - pos);\n-\n-        get(pos + srcBegin, dst, dstBegin, srcEnd - srcBegin);\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/nio\/StringCharBuffer.java","additions":1,"deletions":23,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -953,1 +953,1 @@\n-    private $Type$Buffer getArray(int index, $type$[] dst, int offset, int length) {\n+    $Type$Buffer getArray(int index, $type$[] dst, int offset, int length) {\n@@ -1153,3 +1153,7 @@\n-            int posMax = pos + n;\n-            for (int i = pos, j = srcPos; i < posMax; i++, j++)\n-                put(i, src.get(j));\n+            if (this.hb != null && src instanceof StringCharBuffer scb) {\n+                scb.getArray(srcPos, this.hb, pos, n);\n+            } else {\n+                int posMax = pos + n;\n+                for (int i = pos, j = srcPos; i < posMax; i++, j++)\n+                    put(i, src.get(j));\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/X-Buffer.java.template","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-public class StringCharBufferBulkGet {\n+public class StringCharBufferBulkTransfer {\n@@ -50,0 +50,1 @@\n+    CharBuffer cbw = CharBuffer.allocate(LENGTH);\n@@ -66,0 +67,5 @@\n+\n+    @Benchmark\n+    public void absoluteBulkPut() {\n+        cbw.put(0, cb, 0, dst.length);\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/StringCharBufferBulkTransfer.java","additions":7,"deletions":1,"binary":false,"changes":8,"previous_filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/StringCharBufferBulkGet.java","status":"renamed"}]}