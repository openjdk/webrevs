{"files":[{"patch":"@@ -1350,2 +1350,2 @@\n-      \/\/ Can't split CMove with different control edge.\n-      if (iff->in(0) != NULL && iff->in(0) != n_ctrl ) {\n+      \/\/ Can't split CMove with different control.\n+      if (get_ctrl(iff) != n_ctrl) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8303564\n+ * @summary C2: \"Bad graph detected in build_loop_late\" after a CMove is wrongly split thru phi\n+ * @run main\/othervm -XX:-BackgroundCompilation TestWrongCMovSplitIf\n+ *\/\n+\n+public class TestWrongCMovSplitIf {\n+    private static int[] field1 = new int[1];\n+    private static int field3;\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            test(true);\n+            test(false);\n+            testHelper(1000, false);\n+        }\n+    }\n+\n+    private static void test(boolean flag) {\n+        int i;\n+        for (i = 0; i < 2; i++) {\n+            for (int j = 0; j < 10; j++) {\n+                for (int k = 0; k < 10; k++) {\n+\n+                }\n+            }\n+        }\n+        field3 = testHelper(i, flag);\n+        for (int j = 0; j < 10; j++) {\n+            for (int k = 0; k < 10; k++) {\n+                for (int l = 0; l < 10; l++) {\n+                    for (int m = 0; m < 10; m++) {\n+\n+                    }\n+\n+                }\n+            }\n+        }\n+    }\n+\n+    private static int testHelper(int i, boolean flag) {\n+        int stop = 1000;\n+        if (i == 2) {\n+            if (flag) {\n+                stop = 2;\n+            } else {\n+                stop = 1;\n+            }\n+        }\n+        int f = 0;\n+        for (int j = 0; j < stop; j++) {\n+            f += field1[0];\n+        }\n+        return f;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestWrongCMovSplitIf.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"}]}