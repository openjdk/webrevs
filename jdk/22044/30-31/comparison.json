{"files":[{"patch":"@@ -951,0 +951,29 @@\n+    \/**\n+     * A convenience method that drags the mouse with mouse button 1 pressed\n+     * from source point to destination point.\n+     *\n+     * @implSpec The method moves the mouse pointer to source point ({@code fromX}, {@code fromY}),\n+     * presses mouse button 1, calls glide to drag pointer to\n+     * destination point ({@code toX}, {@code toY}), then releases mouse button 1.\n+     *\n+     * @param   srcX      Source point x coordinate\n+     * @param   srcY      Source point y coordinate\n+     * @param   destX     Destination point x coordinate\n+     * @param   destY     Destination point y coordinate\n+     *\n+     * @throws  IllegalThreadStateException if called on the AWT event dispatching\n+     *          thread and {@code isAutoWaitForIdle} would return true\n+     * @see     #mouseMove(int, int)\n+     * @see     #mousePress(int)\n+     * @see     #glide(int, int, int, int)\n+     * @since   26\n+     *\/\n+    public void dragAndDrop(int srcX, int srcY, int destX, int destY) {\n+        mouseMove(srcX, srcY);\n+        mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        waitForIdle();\n+        glide(destX, destY);\n+        mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        waitForIdle();\n+    }\n+\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Robot.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -120,41 +120,0 @@\n-\n-    \/**\n-     * Emulate native drag and drop process using {@code InputEvent.BUTTON1_DOWN_MASK}.\n-     * The method successively moves mouse cursor to point with coordinates\n-     * ({@code fromX}, {@code fromY}), presses mouse button 1, drag mouse to\n-     * point with coordinates ({@code toX}, {@code toY}) and releases mouse\n-     * button 1 at last.\n-     *\n-     * @param   fromX   Source point x coordinate\n-     * @param   fromY   Source point y coordinate\n-     * @param   toX     Destination point x coordinate\n-     * @param   toY     Destination point y coordinate\n-     *\n-     * @see     #mousePress(int)\n-     * @see     #glide(int, int, int, int)\n-     *\/\n-    public void dragAndDrop(int fromX, int fromY, int toX, int toY){\n-        mouseMove(fromX, fromY);\n-        mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-        waitForIdle();\n-        glide(toX, toY);\n-        mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-        waitForIdle();\n-    }\n-\n-    \/**\n-     * Emulate native drag and drop process using {@code InputEvent.BUTTON1_DOWN_MASK}.\n-     * The method successively moves mouse cursor to point {@code from},\n-     * presses mouse button 1, drag mouse to point {@code to} and releases\n-     * mouse button 1 at last.\n-     *\n-     * @param   from    Source point\n-     * @param   to      Destination point\n-     *\n-     * @see     #mousePress(int)\n-     * @see     #glide(int, int, int, int)\n-     * @see     #dragAndDrop(int, int, int, int)\n-     *\/\n-    public void dragAndDrop(Point from, Point to){\n-        dragAndDrop(from.x, from.y, to.x, to.y);\n-    }\n","filename":"test\/jdk\/lib\/client\/ExtendedRobot.java","additions":0,"deletions":41,"binary":false,"changes":41,"status":"modified"}]}