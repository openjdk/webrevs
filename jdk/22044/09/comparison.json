{"files":[{"patch":"@@ -120,0 +120,10 @@\n+    \/**\n+     * Default step delay (in milliseconds) for mouse glide and click.\n+     *\/\n+    public static final int DEFAULT_STEP_DELAY = 20;\n+\n+    \/**\n+     * Default step length (in pixels) for mouse glide.\n+     *\/\n+    public static final int DEFAULT_STEP_LENGTH = 2;\n+\n@@ -743,0 +753,182 @@\n+\n+    \/**\n+     * A convenience method that simulates clicking a mouse button by calling {@code mousePress}\n+     * and {@code mouseRelease}. Invokes {@code waitForIdle} with a default delay of 20ms after\n+     * {@code mousePress} and {@code mouseRelease} calls. For specifics on valid inputs please see\n+     * {@link java.awt.Robot#mousePress(int)}.\n+     *\n+     * @param   buttons The button mask; a combination of one or more mouse button masks.\n+     * @throws  IllegalArgumentException if the {@code buttons} mask contains the mask for\n+     *          extra mouse button and support for extended mouse buttons is\n+     *          {@link Toolkit#areExtraMouseButtonsEnabled() disabled} by Java\n+     * @throws  IllegalArgumentException if the {@code buttons} mask contains the mask for\n+     *          extra mouse button that does not exist on the mouse and support for extended\n+     *          mouse buttons is {@link Toolkit#areExtraMouseButtonsEnabled() enabled}\n+     *          by Java\n+     * @throws  IllegalThreadStateException if called on the AWT event dispatching thread\n+     * @see     #mousePress(int)\n+     * @see     #mouseRelease(int)\n+     * @see     InputEvent#getMaskForButton(int)\n+     * @see     Toolkit#areExtraMouseButtonsEnabled()\n+     * @see     java.awt.event.MouseEvent\n+     * @since   25\n+     *\/\n+    public void click(int buttons) {\n+        mousePress(buttons);\n+        waitForIdle(DEFAULT_STEP_DELAY);\n+        mouseRelease(buttons);\n+        waitForIdle(DEFAULT_STEP_DELAY);\n+    }\n+\n+    \/**\n+     * A convenience method that clicks mouse button 1.\n+     *\n+     * @throws  IllegalThreadStateException if called on the AWT event dispatching thread\n+     * @see     #click(int)\n+     * @since   25\n+     *\/\n+    public void click() {\n+        click(InputEvent.BUTTON1_DOWN_MASK);\n+    }\n+\n+    \/**\n+     * A convenience method that calls {@code waitForIdle} then waits an additional specified\n+     * {@code delayValue} time in milliseconds.\n+     *\n+     * @param   delayValue  Additional delay length in milliseconds to wait until thread\n+     *                      sync been completed\n+     * @throws  IllegalThreadStateException if called on the AWT event\n+     *          dispatching thread\n+     * @throws  IllegalArgumentException if {@code delayValue} is not between {@code 0}\n+     *          and {@code 60,000} milliseconds inclusive\n+     * @since   25\n+     *\/\n+    public synchronized void waitForIdle(int delayValue) {\n+        waitForIdle();\n+        delay(delayValue);\n+    }\n+\n+    \/**\n+     * A convenience method that moves the mouse in multiple\n+     * steps from its current location to the destination coordinates\n+     * with a default step-length and delay.\n+     *\n+     * @param   x   Destination point x coordinate\n+     * @param   y   Destination point y coordinate\n+     * @see     #DEFAULT_STEP_LENGTH\n+     * @see     #DEFAULT_STEP_DELAY\n+     * @see     #glide(int, int, int, int, int, int)\n+     * @since   25\n+     *\/\n+    public void glide(int x, int y) {\n+        Point p = MouseInfo.getPointerInfo().getLocation();\n+        glide(p.x, p.y, x, y);\n+    }\n+\n+    \/**\n+     * A convenience method that moves the mouse in multiple steps\n+     * from source coordinates to the destination coordinates with\n+     * a default step-length and delay.\n+     *\n+     * @param   fromX   Source point x coordinate\n+     * @param   fromY   Source point y coordinate\n+     * @param   toX     Destination point x coordinate\n+     * @param   toY     Destination point y coordinate\n+     * @see     #DEFAULT_STEP_LENGTH\n+     * @see     #DEFAULT_STEP_DELAY\n+     * @see     #glide(int, int, int, int, int, int)\n+     * @since   25\n+     *\/\n+    public void glide(int fromX, int fromY, int toX, int toY) {\n+        glide(fromX, fromY, toX, toY, DEFAULT_STEP_LENGTH, DEFAULT_STEP_DELAY);\n+    }\n+\n+    \/**\n+     * A convenience method that moves the mouse in multiple\n+     * steps from source point to the destination point with\n+     * given step-length and delay.\n+     *\n+     * @param   srcX        Source point x coordinate\n+     * @param   srcY        Source point y coordinate\n+     * @param   destX       Destination point x coordinate\n+     * @param   destY       Destination point y coordinate\n+     * @param   stepLength  Preferred length of one step in pixels\n+     * @param   stepDelay   Delay between steps in milliseconds\n+     *\n+     * @throws  IllegalArgumentException if {@code stepLength} is a negative value or\n+     *          greater than the distance between source and destination points\n+     * @throws  IllegalArgumentException if {@code stepDelay} is not between {@code 0}\n+     *          and {@code 60,000} milliseconds inclusive\n+     * @see     #mouseMove(int, int)\n+     * @see     #delay(int)\n+     * @since   25\n+     *\/\n+    public void glide(int srcX, int srcY, int destX, int destY, int stepLength, int stepDelay) {\n+        int stepNum;\n+        double tDx, tDy;\n+        double dx, dy, ds;\n+        double x, y;\n+\n+        dx = (destX - srcX);\n+        dy = (destY - srcY);\n+        ds = Math.sqrt(dx*dx + dy*dy);\n+\n+        tDx = dx \/ ds * stepLength;\n+        tDy = dy \/ ds * stepLength;\n+\n+        int stepsCount = (int) ds \/ stepLength;\n+\n+        \/\/ Walk the mouse to the destination one step at a time\n+        mouseMove(srcX, srcY);\n+\n+        for (x = srcX, y = srcY, stepNum = 0;\n+             stepNum < stepsCount;\n+             stepNum++) {\n+            x += tDx;\n+            y += tDy;\n+            mouseMove((int)x, (int)y);\n+            delay(stepDelay);\n+        }\n+\n+        \/\/ Ensure the mouse moves to the right destination.\n+        \/\/ The steps may have led the mouse to a slightly wrong place.\n+        mouseMove(destX, destY);\n+    }\n+\n+    \/**\n+     * A convenience method that simulates typing a key by calling {@code keyPress}\n+     * and {@code keyRelease}. Invokes {@code waitForIdle} with a default delay of 20\n+     * milliseconds after {@code keyPress} and {@code keyRelease} calls.\n+     * <p>\n+     * Key codes that have more than one physical key associated with them\n+     * (e.g. {@code KeyEvent.VK_SHIFT} could mean either the\n+     * left or right shift key) will map to the left key.\n+     *\n+     * @param   keycode Key to type (e.g. {@code KeyEvent.VK_A})\n+     * @throws  IllegalArgumentException if {@code keycode} is not\n+     *          a valid key\n+     * @throws  IllegalThreadStateException if called on the AWT event dispatching thread\n+     * @see     java.awt.Robot#keyPress(int)\n+     * @see     java.awt.Robot#keyRelease(int)\n+     * @see     java.awt.event.KeyEvent\n+     * @since   25\n+     *\/\n+    public synchronized void type(int keycode) {\n+        keyPress(keycode);\n+        waitForIdle(DEFAULT_STEP_DELAY);\n+        keyRelease(keycode);\n+        waitForIdle(DEFAULT_STEP_DELAY);\n+    }\n+\n+    \/**\n+     * Types given character\n+     *\n+     * @param   c   Character to type (e.g. {@code 'a'})\n+     * @throws  IllegalThreadStateException if called on the AWT event dispatching thread\n+     * @see     #type(int)\n+     * @see     java.awt.event.KeyEvent\n+     * @since   25\n+     *\/\n+    public synchronized void type(char c) {\n+        type(KeyEvent.getExtendedKeyCodeForChar(c));\n+    }\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Robot.java","additions":192,"deletions":0,"binary":false,"changes":192,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import java.awt.Robot;\n@@ -51,1 +52,0 @@\n-  @build ExtendedRobot\n@@ -70,1 +70,1 @@\n-    private static ExtendedRobot robot = null;\n+    private static Robot robot = null;\n@@ -290,1 +290,1 @@\n-                robot = new ExtendedRobot();\n+                robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Component\/PaintAll\/PaintAll.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @build ExtendedRobot\n@@ -38,1 +37,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n+        Robot robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Frame\/DecoratedExceptions\/DecoratedExceptions.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n- * @build ExtendedRobot\n@@ -159,1 +158,1 @@\n-        ExtendedRobot robot;\n+        Robot robot;\n@@ -161,1 +160,1 @@\n-            robot = new ExtendedRobot();\n+            robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Frame\/MiscUndecorated\/ActiveAWTWindowTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n- * @build ExtendedRobot\n@@ -48,1 +47,1 @@\n-    private ExtendedRobot robot;\n+    private Robot robot;\n@@ -154,1 +153,1 @@\n-            robot = new ExtendedRobot();\n+            robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Frame\/MiscUndecorated\/ActiveSwingWindowTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n- * @build ExtendedRobot\n@@ -46,1 +45,1 @@\n-    private ExtendedRobot robot;\n+    private Robot robot;\n@@ -159,1 +158,1 @@\n-            robot = new ExtendedRobot();\n+            robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Frame\/MiscUndecorated\/FrameCloseTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @build ExtendedRobot jdk.test.lib.Platform\n+ * @build jdk.test.lib.Platform\n@@ -48,0 +48,1 @@\n+import java.awt.Robot;\n@@ -64,1 +65,1 @@\n-    private ExtendedRobot robot;\n+    private Robot robot;\n@@ -136,1 +137,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Frame\/MiscUndecorated\/RepaintTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDDAppModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDDDocModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDDModelessTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDDNonModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDDSetModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -43,1 +43,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDDTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDDToolkitModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDFAppModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDFSetModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -42,1 +42,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDFTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDFToolkitModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDFWModeless1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDFWModeless2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDFWNonModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDFWNonModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -46,1 +46,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDFWTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingDocModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDAppModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDDocModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDModelessTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDNonModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDSetModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -46,1 +46,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDToolkitModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWDocModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWDocModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWDocModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWDocModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWModeless1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWModeless2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWModeless3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWModeless4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWNonModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWNonModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWNonModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWNonModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -48,1 +48,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingFDWTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsAppModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsAppModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsAppModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsAppModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsAppModal5Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsAppModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsDocModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsDocModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -54,1 +54,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsDocModalTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsSetModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsSetModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsSetModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsSetModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsSetModal5Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsSetModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -53,1 +53,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsToolkitModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsToolkitModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsToolkitModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsToolkitModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsToolkitModal5Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/BlockingWindowsToolkitModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/UnblockedDialogAppModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/UnblockedDialogDocModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/UnblockedDialogModelessTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/UnblockedDialogNonModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/UnblockedDialogSetModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -46,1 +46,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/UnblockedDialogTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalBlockingTests\/UnblockedDialogToolkitModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferDWFAppModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferDWFDocModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferDWFModelessTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferDWFNonModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -91,1 +91,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferDWFTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferDialogsAppModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferDialogsDocModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferDialogsModelessTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferDialogsNonModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -95,1 +95,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferDialogsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFDWAppModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFDWDocModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFDWModelessTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFDWNonModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -84,1 +84,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFDWTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDAppModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDAppModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDAppModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDAppModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDDocModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDDocModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDDocModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDDocModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDModeless1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDModeless2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDModeless3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDModeless4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDNonModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDNonModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDNonModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDNonModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -104,1 +104,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferFWDTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFAppModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFAppModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFAppModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFDocModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFDocModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFDocModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFModeless1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFModeless2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFModeless3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFNonModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFNonModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFNonModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -104,1 +104,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ModalFocusTransferTests\/FocusTransferWDFTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n- * @build ExtendedRobot\n@@ -81,1 +80,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -85,1 +84,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/NullModalityDialogTest\/NullModalityDialogTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopAppModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopAppModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopAppModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopAppModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopAppModal5Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopAppModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -48,1 +48,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopDDFTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopDocModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopDocModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopDocModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopDocModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopDocModal5Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopDocModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -54,1 +54,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopFDFTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModal5Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModeless1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModeless2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModeless3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModeless4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModeless5Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopModeless6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopTKModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopTKModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopTKModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopTKModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopTKModal5Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/OnTop\/OnTopTKModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToBack\/ToBackAppModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -50,1 +50,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ToBack\/ToBackDDFTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToBack\/ToBackDocModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToBack\/ToBackModal5Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToBack\/ToBackModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToBack\/ToBackModeless6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToBack\/ToBackNonModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToBack\/ToBackTKModal6Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/DialogToFrontAppModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/DialogToFrontDocModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -39,1 +39,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/DialogToFrontModalBlockedTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/DialogToFrontModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/DialogToFrontModeless1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -39,1 +39,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/DialogToFrontModelessTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/DialogToFrontNonModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/DialogToFrontTKModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontAppModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontAppModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontAppModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontAppModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontAppModal5Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontDocModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontDocModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontModal5Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -51,1 +51,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontModalBlockedTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontModeless1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -43,1 +43,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontModelessTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontNonModalTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontTKModal1Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontTKModal2Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontTKModal3Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n","filename":"test\/jdk\/java\/awt\/Modal\/ToFront\/FrameToFrontTKModal4Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -200,1 +200,1 @@\n-    public void clickButton(Button b, ExtendedRobot robot) {\n+    public void clickButton(Button b, Robot robot) {\n@@ -216,1 +216,1 @@\n-    public void clickOpenButton(ExtendedRobot robot) throws Exception {\n+    public void clickOpenButton(Robot robot) throws Exception {\n@@ -220,1 +220,1 @@\n-    public void clickOpenButton(ExtendedRobot robot,\n+    public void clickOpenButton(Robot robot,\n@@ -233,1 +233,1 @@\n-    public void clickCloseButton(ExtendedRobot robot) throws Exception {\n+    public void clickCloseButton(Robot robot) throws Exception {\n@@ -237,1 +237,1 @@\n-    public void clickCloseButton(ExtendedRobot robot,\n+    public void clickCloseButton(Robot robot,\n@@ -250,1 +250,1 @@\n-    public void clickDummyButton(ExtendedRobot robot) throws Exception {\n+    public void clickDummyButton(Robot robot) throws Exception {\n@@ -254,1 +254,1 @@\n-    public void clickDummyButton(ExtendedRobot robot,\n+    public void clickDummyButton(Robot robot,\n@@ -259,1 +259,1 @@\n-    public void clickDummyButton(ExtendedRobot robot,\n+    public void clickDummyButton(Robot robot,\n@@ -274,1 +274,1 @@\n-    private void clickInside(ExtendedRobot robot) throws Exception {\n+    private void clickInside(Robot robot) throws Exception {\n@@ -289,1 +289,1 @@\n-    public void transferFocusToDialog(ExtendedRobot robot,\n+    public void transferFocusToDialog(Robot robot,\n@@ -308,1 +308,1 @@\n-    public void transferFocusToBlockedDialog(ExtendedRobot robot,\n+    public void transferFocusToBlockedDialog(Robot robot,\n@@ -328,1 +328,1 @@\n-    public void checkBlockedDialog(ExtendedRobot robot,\n+    public void checkBlockedDialog(Robot robot,\n@@ -348,1 +348,1 @@\n-    public void checkUnblockedDialog(ExtendedRobot robot,\n+    public void checkUnblockedDialog(Robot robot,\n","filename":"test\/jdk\/java\/awt\/Modal\/helpers\/TestDialog.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -192,1 +192,1 @@\n-    public void clickButton(Button b, ExtendedRobot robot) {\n+    public void clickButton(Button b, Robot robot) {\n@@ -207,1 +207,1 @@\n-    public void clickOpenButton(ExtendedRobot robot) throws Exception {\n+    public void clickOpenButton(Robot robot) throws Exception {\n@@ -211,1 +211,1 @@\n-    public void clickOpenButton(ExtendedRobot robot,\n+    public void clickOpenButton(Robot robot,\n@@ -224,1 +224,1 @@\n-    public void clickCloseButton(ExtendedRobot robot) throws Exception {\n+    public void clickCloseButton(Robot robot) throws Exception {\n@@ -228,1 +228,1 @@\n-    public void clickCloseButton(ExtendedRobot robot,\n+    public void clickCloseButton(Robot robot,\n@@ -241,1 +241,1 @@\n-    public void clickDummyButton(ExtendedRobot robot) throws Exception {\n+    public void clickDummyButton(Robot robot) throws Exception {\n@@ -245,1 +245,1 @@\n-    public void clickDummyButton(ExtendedRobot robot,\n+    public void clickDummyButton(Robot robot,\n@@ -250,1 +250,1 @@\n-    public void clickDummyButton(ExtendedRobot robot,\n+    public void clickDummyButton(Robot robot,\n@@ -264,1 +264,1 @@\n-    public void clickInside(ExtendedRobot robot) throws Exception {\n+    public void clickInside(Robot robot) throws Exception {\n@@ -278,1 +278,1 @@\n-    public void transferFocusToFrame(ExtendedRobot robot,\n+    public void transferFocusToFrame(Robot robot,\n@@ -297,1 +297,1 @@\n-    public void transferFocusToBlockedFrame(ExtendedRobot robot,\n+    public void transferFocusToBlockedFrame(Robot robot,\n@@ -319,1 +319,1 @@\n-            ExtendedRobot robot, String message) throws Exception {\n+            Robot robot, String message) throws Exception {\n@@ -339,1 +339,1 @@\n-    public void checkUnblockedFrame(ExtendedRobot robot,\n+    public void checkUnblockedFrame(Robot robot,\n","filename":"test\/jdk\/java\/awt\/Modal\/helpers\/TestFrame.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -197,1 +197,1 @@\n-    public void clickButton(Button b, ExtendedRobot robot) {\n+    public void clickButton(Button b, Robot robot) {\n@@ -212,1 +212,1 @@\n-    public void clickOpenButton(ExtendedRobot robot) throws Exception {\n+    public void clickOpenButton(Robot robot) throws Exception {\n@@ -216,1 +216,1 @@\n-    public void clickOpenButton(ExtendedRobot robot,\n+    public void clickOpenButton(Robot robot,\n@@ -229,1 +229,1 @@\n-    public void clickCloseButton(ExtendedRobot robot) throws Exception {\n+    public void clickCloseButton(Robot robot) throws Exception {\n@@ -233,1 +233,1 @@\n-    public void clickCloseButton(ExtendedRobot robot,\n+    public void clickCloseButton(Robot robot,\n@@ -246,1 +246,1 @@\n-    public void clickDummyButton(ExtendedRobot robot) throws Exception {\n+    public void clickDummyButton(Robot robot) throws Exception {\n@@ -250,1 +250,1 @@\n-    public void clickDummyButton(ExtendedRobot robot,\n+    public void clickDummyButton(Robot robot,\n@@ -263,1 +263,1 @@\n-    public void checkBlockedWindow(ExtendedRobot robot,\n+    public void checkBlockedWindow(Robot robot,\n@@ -284,1 +284,1 @@\n-            ExtendedRobot robot, String message) throws Exception {\n+            Robot robot, String message) throws Exception {\n@@ -300,1 +300,1 @@\n-    public void checkUnblockedWindow(ExtendedRobot robot,\n+    public void checkUnblockedWindow(Robot robot,\n","filename":"test\/jdk\/java\/awt\/Modal\/helpers\/TestWindow.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @build ExtendedRobot\n@@ -38,1 +37,1 @@\n-    private static ExtendedRobot robot = null;\n+    private static Robot robot = null;\n@@ -282,1 +281,1 @@\n-                robot = new ExtendedRobot();\n+                robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Paint\/ExposeOnEDT.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.awt.Robot;\n@@ -37,1 +38,0 @@\n- * @build ExtendedRobot\n@@ -46,1 +46,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n+        Robot robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Paint\/PaintNativeOnUpdate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.awt.Robot;\n@@ -47,1 +48,0 @@\n- * @build ExtendedRobot\n@@ -55,1 +55,1 @@\n-    private ExtendedRobot robot;\n+    private Robot robot;\n@@ -154,1 +154,1 @@\n-            robot = new ExtendedRobot();\n+            robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Robot\/ModifierRobotKey\/ModifierRobotKeyTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.awt.Robot;\n@@ -35,1 +36,0 @@\n- * @build ExtendedRobot\n@@ -60,1 +60,1 @@\n-            ExtendedRobot robot = new ExtendedRobot();\n+            Robot robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/ScrollPane\/ScrollPanePreferredSize\/ScrollPanePreferredSize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-  @build ExtendedRobot\n@@ -40,1 +39,1 @@\n-    ExtendedRobot robot;\n+    Robot robot;\n@@ -52,1 +51,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/Toolkit\/LockingKeyStateTest\/LockingKeyStateTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @build SystemTrayIconHelper\n@@ -45,1 +45,1 @@\n-    ExtendedRobot robot;\n+    Robot robot;\n@@ -76,1 +76,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/ActionCommand\/ActionCommand.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @build SystemTrayIconHelper\n@@ -50,1 +50,1 @@\n-    ExtendedRobot robot;\n+    Robot robot;\n@@ -162,1 +162,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/ActionEventMask\/ActionEventMask.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @build SystemTrayIconHelper\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/MouseEventMask\/MouseEventMaskTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @build SystemTrayIconHelper\n@@ -62,1 +62,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n+        Robot robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/MouseMovedTest\/MouseMovedTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-  @build ExtendedRobot\n@@ -42,0 +41,1 @@\n+import java.awt.Robot;\n@@ -55,1 +55,1 @@\n-    static ExtendedRobot robot;\n+    static Robot robot;\n@@ -61,1 +61,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/PopupMenuLeakTest\/PopupMenuLeakTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+import java.awt.Robot;\n@@ -44,1 +45,1 @@\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @build SystemTrayIconHelper\n@@ -51,1 +52,1 @@\n-    ExtendedRobot robot;\n+    Robot robot;\n@@ -71,1 +72,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/RightClickWhenBalloonDisplayed\/RightClickWhenBalloonDisplayed.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @build SystemTrayIconHelper\n@@ -43,1 +43,1 @@\n-    ExtendedRobot robot;\n+    Robot robot;\n@@ -82,1 +82,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/SecurityCheck\/FunctionalityCheck\/FunctionalityCheck.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.awt.Robot;\n@@ -46,1 +47,1 @@\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @build SystemTrayIconHelper\n@@ -55,1 +56,1 @@\n-    ExtendedRobot robot;\n+    Robot robot;\n@@ -124,1 +125,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/TrayIconEventModifiers\/TrayIconEventModifiersTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @build SystemTrayIconHelper\n@@ -46,1 +46,1 @@\n-    ExtendedRobot robot;\n+    Robot robot;\n@@ -91,1 +91,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/TrayIconEvents\/TrayIconEventsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.awt.Robot;\n@@ -43,1 +44,1 @@\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @build SystemTrayIconHelper\n@@ -50,1 +51,1 @@\n-    ExtendedRobot robot;\n+    Robot robot;\n@@ -86,1 +87,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/TrayIconMouseTest\/TrayIconMouseTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * @build ExtendedRobot SystemTrayIconHelper\n+ * @build SystemTrayIconHelper\n@@ -44,1 +44,1 @@\n-    ExtendedRobot robot;\n+    Robot robot;\n@@ -70,1 +70,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/TrayIconPopup\/TrayIconPopupTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n- * @build ExtendedRobot\n@@ -159,1 +158,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n+        Robot robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/datatransfer\/ImageTransfer\/ImageTransferTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n@@ -152,1 +151,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n+        Robot robot = new Robot();\n@@ -161,1 +160,1 @@\n-            robot.glide(new Point(0, 0), ttf1Center);\n+            robot.glide(0, 0, ttf1Center.x, ttf1Center.y);\n","filename":"test\/jdk\/java\/awt\/datatransfer\/Independence\/IndependenceAWTTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n- * @build ExtendedRobot\n@@ -159,1 +158,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n+        Robot robot = new Robot();\n@@ -168,1 +167,1 @@\n-            robot.glide(new Point(0, 0), ttf1Center);\n+            robot.glide(0, 0, ttf1Center.x, ttf1Center.y);\n","filename":"test\/jdk\/java\/awt\/datatransfer\/Independence\/IndependenceSwingTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n- * @build ExtendedRobot\n@@ -130,1 +129,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n+        Robot robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/datatransfer\/SystemSelection\/SystemSelectionAWTTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n- * @build ExtendedRobot\n@@ -132,1 +131,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n+        Robot robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/datatransfer\/SystemSelection\/SystemSelectionSwingTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n- * @build ExtendedRobot\n@@ -51,0 +50,1 @@\n+import java.awt.Robot;\n@@ -72,1 +72,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -149,1 +149,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n@@ -226,1 +226,1 @@\n-            robot.glide(origin, center);\n+            robot.glide(origin.x, origin.y, center.x, center.y);\n","filename":"test\/jdk\/java\/awt\/event\/KeyEvent\/ExtendedModifiersTest\/ExtendedModifiersTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n@@ -50,0 +49,1 @@\n+import java.awt.Robot;\n@@ -78,1 +78,1 @@\n-    ExtendedRobot robot;\n+    Robot robot;\n@@ -90,1 +90,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n@@ -191,1 +191,1 @@\n-            robot.glide(origin, center);\n+            robot.glide(origin.x, origin.y, center.x, center.y);\n","filename":"test\/jdk\/java\/awt\/event\/KeyEvent\/KeyMaskTest\/KeyMaskTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.awt.Robot;\n@@ -63,1 +64,0 @@\n- * @build ExtendedRobot\n@@ -78,1 +78,1 @@\n-    ExtendedRobot robot;\n+    Robot robot;\n@@ -93,1 +93,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/java\/awt\/event\/MouseEvent\/MouseButtonsAndKeyMasksTest\/MouseButtonsAndKeyMasksTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n- * @build ExtendedRobot\n@@ -72,1 +71,1 @@\n-    private final ExtendedRobot robot;\n+    private final Robot robot;\n@@ -84,1 +83,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n@@ -198,1 +197,1 @@\n-            robot.glide(origin, center);\n+            robot.glide(origin.x, origin.y, center.x, center.y);\n","filename":"test\/jdk\/java\/awt\/event\/MouseEvent\/MouseButtonsTest\/MouseButtonsTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @build ExtendedRobot\n@@ -106,1 +105,1 @@\n-        ExtendedRobot r = new ExtendedRobot();\n+        Robot r = new Robot();\n","filename":"test\/jdk\/java\/awt\/image\/multiresolution\/Corrupted2XImageTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @build ExtendedRobot\n@@ -50,1 +49,1 @@\n-    private final ExtendedRobot r;\n+    private final Robot r;\n@@ -75,1 +74,1 @@\n-        r = new ExtendedRobot();\n+        r = new Robot();\n","filename":"test\/jdk\/java\/awt\/image\/multiresolution\/MenuMultiresolutionIconTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-  @build ExtendedRobot\n@@ -54,1 +53,1 @@\n-    private final ExtendedRobot robot = new ExtendedRobot();\n+    private final Robot robot = new Robot();\n@@ -162,1 +161,1 @@\n-    public void clickButton(ExtendedRobot robot) {\n+    public void clickButton(Robot robot) {\n","filename":"test\/jdk\/java\/awt\/image\/multiresolution\/MultiResolutionJOptionPaneIconTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @build ExtendedRobot\n@@ -60,1 +59,1 @@\n-    private final ExtendedRobot r;\n+    private final Robot r;\n@@ -74,1 +73,1 @@\n-        r = new ExtendedRobot();\n+        r = new Robot();\n","filename":"test\/jdk\/java\/awt\/image\/multiresolution\/MultiresolutionIconTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.awt.Robot;\n@@ -40,1 +41,0 @@\n- * @build ExtendedRobot\n@@ -74,1 +74,1 @@\n-             ExtendedRobot robot = new ExtendedRobot();\n+             Robot robot = new Robot();\n","filename":"test\/jdk\/javax\/swing\/JButton\/JButtonPaintNPE\/JButtonPaintNPE.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @build ExtendedRobot\n@@ -94,1 +93,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n+        Robot robot = new Robot();\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/4523758\/bug4523758.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-  @build ExtendedRobot\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/ConsumedKeyTest\/ConsumedKeyTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.awt.Robot;\n@@ -52,1 +53,0 @@\n- * @build ExtendedRobot\n@@ -70,1 +70,1 @@\n-            ExtendedRobot robot = new ExtendedRobot();\n+            Robot robot = new Robot();\n","filename":"test\/jdk\/javax\/swing\/JComponent\/7154030\/bug7154030.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import java.awt.Robot;\n@@ -42,1 +43,1 @@\n- * @build ExtendedRobot jdk.test.lib.Platform\n+ * @build jdk.test.lib.Platform\n@@ -54,1 +55,1 @@\n-    private static ExtendedRobot robot;\n+    private static Robot robot;\n@@ -61,1 +62,1 @@\n-        robot = new ExtendedRobot();\n+        robot = new Robot();\n","filename":"test\/jdk\/javax\/swing\/JFrame\/NSTexturedJFrame\/NSTexturedJFrame.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @build ExtendedRobot\n@@ -75,1 +74,1 @@\n-                 ExtendedRobot robot = new ExtendedRobot();\n+                 Robot robot = new Robot();\n","filename":"test\/jdk\/javax\/swing\/JLayer\/6824395\/bug6824395.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @build ExtendedRobot\n@@ -43,0 +42,1 @@\n+import java.awt.Robot;\n@@ -175,1 +175,1 @@\n-            ExtendedRobot robo;\n+            Robot robo;\n@@ -177,1 +177,1 @@\n-                robo = new ExtendedRobot();\n+                robo = new Robot();\n@@ -250,1 +250,1 @@\n-    private void clickMouseOn(ExtendedRobot robot, Component c, int button) {\n+    private void clickMouseOn(Robot robot, Component c, int button) {\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/4634626\/bug4634626.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @build ExtendedRobot\n@@ -76,1 +75,1 @@\n-            ExtendedRobot robot = new ExtendedRobot();\n+            Robot robot = new Robot();\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/6515446\/bug6515446.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @build ExtendedRobot jdk.test.lib.Platform\n+ * @build jdk.test.lib.Platform\n@@ -78,1 +78,1 @@\n-            ExtendedRobot r = new ExtendedRobot();\n+            Robot r = new Robot();\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/7154841\/bug7154841.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @build ExtendedRobot\n@@ -64,1 +63,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n+        Robot robot = new Robot();\n","filename":"test\/jdk\/javax\/swing\/JSlider\/6401380\/bug6401380.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.awt.Robot;\n@@ -45,1 +46,0 @@\n- * @build ExtendedRobot\n@@ -128,1 +128,1 @@\n-             ExtendedRobot robot = new ExtendedRobot();\n+             Robot robot = new Robot();\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/7170310\/bug7170310.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    protected ExtendedRobot robot;\n+    protected Robot robot;\n@@ -36,1 +36,1 @@\n-    public Task(Class guiClass, ExtendedRobot robot) throws Exception {\n+    public Task(Class guiClass, Robot robot) throws Exception {\n","filename":"test\/jdk\/javax\/swing\/reliability\/Task.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n- * @build ExtendedRobot\n@@ -41,1 +40,1 @@\n-        new TaskUndJFrameProperties(GUIUndFrame.class, new ExtendedRobot()).task();\n+        new TaskUndJFrameProperties(GUIUndFrame.class, new Robot()).task();\n@@ -44,1 +43,1 @@\n-    TaskUndJFrameProperties(Class guiClass, ExtendedRobot robot) throws Exception {\n+    TaskUndJFrameProperties(Class guiClass, Robot robot) throws Exception {\n@@ -84,1 +83,1 @@\n-        robot.glide(button2Origin, button2Center);\n+        robot.glide(button2Origin.x, button2Origin.y, button2Center.x, button2Center.y);\n","filename":"test\/jdk\/javax\/swing\/reliability\/TaskUndJFrameProperties.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n- * @build ExtendedRobot\n@@ -44,1 +43,1 @@\n-        new TaskZoomJFrameChangeState(GUIZoomFrame.class, new ExtendedRobot()).task();\n+        new TaskZoomJFrameChangeState(GUIZoomFrame.class, new Robot()).task();\n@@ -47,1 +46,1 @@\n-    TaskZoomJFrameChangeState(Class guiClass, ExtendedRobot robot) throws Exception {\n+    TaskZoomJFrameChangeState(Class guiClass, Robot robot) throws Exception {\n","filename":"test\/jdk\/javax\/swing\/reliability\/TaskZoomJFrameChangeState.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @build ExtendedRobot\n@@ -40,1 +39,1 @@\n-        new TaskZoomJFrameRepaint(GUIZoomFrame.class, new ExtendedRobot()).task();\n+        new TaskZoomJFrameRepaint(GUIZoomFrame.class, new Robot()).task();\n@@ -43,1 +42,1 @@\n-    TaskZoomJFrameRepaint(Class guiClass, ExtendedRobot robot) throws Exception {\n+    TaskZoomJFrameRepaint(Class guiClass, Robot robot) throws Exception {\n","filename":"test\/jdk\/javax\/swing\/reliability\/TaskZoomJFrameRepaint.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n- * @build ExtendedRobot\n@@ -59,1 +58,1 @@\n-        ExtendedRobot robot = new ExtendedRobot();\n+        Robot robot = new Robot();\n","filename":"test\/jdk\/javax\/swing\/text\/AbstractDocument\/6968363\/Test6968363.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -53,2 +53,0 @@\n-\n-    private static int DEFAULT_SPEED = 20;       \/\/ Speed for mouse glide and click\n@@ -56,1 +54,0 @@\n-    private static int DEFAULT_STEP_LENGTH = 2;  \/\/ Step length (in pixels) for mouse glide\n@@ -114,174 +111,2 @@\n-    public int getSyncDelay(){ return this.syncDelay; }\n-\n-    \/**\n-     * Clicks mouse button(s) by calling {@link java.awt.Robot#mousePress(int)} and\n-     * {@link java.awt.Robot#mouseRelease(int)} methods\n-     *\n-     *\n-     * @param   buttons The button mask; a combination of one or more mouse button masks.\n-     * @throws  IllegalArgumentException if the {@code buttons} mask contains the mask for\n-     *          extra mouse button and support for extended mouse buttons is\n-     *          {@link Toolkit#areExtraMouseButtonsEnabled() disabled} by Java\n-     * @throws  IllegalArgumentException if the {@code buttons} mask contains the mask for\n-     *          extra mouse button that does not exist on the mouse and support for extended\n-     *          mouse buttons is {@link Toolkit#areExtraMouseButtonsEnabled() enabled}\n-     *          by Java\n-     *\n-     * @see     #mousePress(int)\n-     * @see     #mouseRelease(int)\n-     * @see     InputEvent#getMaskForButton(int)\n-     * @see     Toolkit#areExtraMouseButtonsEnabled()\n-     * @see     java.awt.event.MouseEvent\n-     *\/\n-    public void click(int buttons) {\n-        mousePress(buttons);\n-        waitForIdle(DEFAULT_SPEED);\n-        mouseRelease(buttons);\n-        waitForIdle();\n-    }\n-\n-    \/**\n-     * Clicks mouse button 1\n-     *\n-     * @throws  IllegalArgumentException if the {@code buttons} mask contains the mask for\n-     *          extra mouse button and support for extended mouse buttons is\n-     *          {@link Toolkit#areExtraMouseButtonsEnabled() disabled} by Java\n-     * @throws  IllegalArgumentException if the {@code buttons} mask contains the mask for\n-     *          extra mouse button that does not exist on the mouse and support for extended\n-     *          mouse buttons is {@link Toolkit#areExtraMouseButtonsEnabled() enabled}\n-     *          by Java\n-     *\n-     * @see     #click(int)\n-     *\/\n-    public void click() {\n-        click(InputEvent.BUTTON1_DOWN_MASK);\n-    }\n-\n-    \/**\n-     * Waits until all events currently on the event queue have been processed with given\n-     * delay after syncing threads. It uses more advanced method of synchronizing threads\n-     * unlike {@link java.awt.Robot#waitForIdle()}\n-     *\n-     * @param   delayValue  Additional delay length in milliseconds to wait until thread\n-     *                      sync been completed\n-     * @throws  sun.awt.SunToolkit.IllegalThreadException if called on the AWT event\n-     *          dispatching thread\n-     *\/\n-    public synchronized void waitForIdle(int delayValue) {\n-        super.waitForIdle();\n-        delay(delayValue);\n-    }\n-\n-    \/**\n-     * Waits until all events currently on the event queue have been processed with delay\n-     * {@link #getSyncDelay()} after syncing threads. It uses more advanced method of\n-     * synchronizing threads unlike {@link java.awt.Robot#waitForIdle()}\n-     *\n-     * @throws  sun.awt.SunToolkit.IllegalThreadException if called on the AWT event\n-     *          dispatching thread\n-     *\n-     * @see     #waitForIdle(int)\n-     *\/\n-    @Override\n-    public synchronized void waitForIdle() {\n-        waitForIdle(syncDelay);\n-    }\n-\n-    \/**\n-     * Move the mouse in multiple steps from where it is\n-     * now to the destination coordinates.\n-     *\n-     * @param   x   Destination point x coordinate\n-     * @param   y   Destination point y coordinate\n-     *\n-     * @see     #glide(int, int, int, int)\n-     *\/\n-    public void glide(int x, int y) {\n-        Point p = MouseInfo.getPointerInfo().getLocation();\n-        glide(p.x, p.y, x, y);\n-    }\n-\n-    \/**\n-     * Move the mouse in multiple steps from where it is\n-     * now to the destination point.\n-     *\n-     * @param   dest    Destination point\n-     *\n-     * @see     #glide(int, int)\n-     *\/\n-    public void glide(Point dest) {\n-        glide(dest.x, dest.y);\n-    }\n-\n-    \/**\n-     * Move the mouse in multiple steps from source coordinates\n-     * to the destination coordinates.\n-     *\n-     * @param   fromX   Source point x coordinate\n-     * @param   fromY   Source point y coordinate\n-     * @param   toX     Destination point x coordinate\n-     * @param   toY     Destination point y coordinate\n-     *\n-     * @see     #glide(int, int, int, int, int, int)\n-     *\/\n-    public void glide(int fromX, int fromY, int toX, int toY) {\n-        glide(fromX, fromY, toX, toY, DEFAULT_STEP_LENGTH, DEFAULT_SPEED);\n-    }\n-\n-    \/**\n-     * Move the mouse in multiple steps from source point to the\n-     * destination point with default speed and step length.\n-     *\n-     * @param   src     Source point\n-     * @param   dest    Destination point\n-     *\n-     * @see     #glide(int, int, int, int, int, int)\n-     *\/\n-    public void glide(Point src, Point dest) {\n-        glide(src.x, src.y, dest.x, dest.y, DEFAULT_STEP_LENGTH, DEFAULT_SPEED);\n-    }\n-\n-    \/**\n-     * Move the mouse in multiple steps from source point to the\n-     * destination point with given speed and step length.\n-     *\n-     * @param   srcX        Source point x cordinate\n-     * @param   srcY        Source point y cordinate\n-     * @param   destX       Destination point x cordinate\n-     * @param   destY       Destination point y cordinate\n-     * @param   stepLength  Approximate length of one step\n-     * @param   speed       Delay between steps.\n-     *\n-     * @see     #mouseMove(int, int)\n-     * @see     #delay(int)\n-     *\/\n-     public void glide(int srcX, int srcY, int destX, int destY, int stepLength, int speed) {\n-        int stepNum;\n-        double tDx, tDy;\n-        double dx, dy, ds;\n-        double x, y;\n-\n-        dx = (destX - srcX);\n-        dy = (destY - srcY);\n-        ds = Math.sqrt(dx*dx + dy*dy);\n-\n-        tDx = dx \/ ds * stepLength;\n-        tDy = dy \/ ds * stepLength;\n-\n-        int stepsCount = (int) ds \/ stepLength;\n-\n-        \/\/ Walk the mouse to the destination one step at a time\n-        mouseMove(srcX, srcY);\n-\n-        for (x = srcX, y = srcY, stepNum = 0;\n-             stepNum < stepsCount;\n-             stepNum++) {\n-            x += tDx;\n-            y += tDy;\n-            mouseMove((int)x, (int)y);\n-            delay(speed);\n-        }\n-\n-        \/\/ Ensure the mouse moves to the right destination.\n-        \/\/ The steps may have led the mouse to a slightly wrong place.\n-        mouseMove(destX, destY);\n+    public int getSyncDelay() {\n+        return this.syncDelay;\n@@ -301,1 +126,0 @@\n-\n@@ -342,58 +166,0 @@\n-\n-    \/**\n-     * Successively presses and releases a given key.\n-     * <p>\n-     * Key codes that have more than one physical key associated with them\n-     * (e.g. {@code KeyEvent.VK_SHIFT} could mean either the\n-     * left or right shift key) will map to the left key.\n-     *\n-     * @param   keycode Key to press (e.g. {@code KeyEvent.VK_A})\n-     * @throws  IllegalArgumentException if {@code keycode} is not\n-     *          a valid key\n-     *\n-     * @see     java.awt.Robot#keyPress(int)\n-     * @see     java.awt.Robot#keyRelease(int)\n-     * @see     java.awt.event.KeyEvent\n-     *\/\n-    public void type(int keycode) {\n-        keyPress(keycode);\n-        waitForIdle(DEFAULT_SPEED);\n-        keyRelease(keycode);\n-        waitForIdle(DEFAULT_SPEED);\n-    }\n-\n-    \/**\n-     * Types given character\n-     *\n-     * @param   c   Character to be typed (e.g. {@code 'a'})\n-     *\n-     * @see     #type(int)\n-     * @see     java.awt.event.KeyEvent\n-     *\/\n-    public void type(char c) {\n-        type(KeyEvent.getExtendedKeyCodeForChar(c));\n-    }\n-\n-    \/**\n-     * Types given array of characters one by one\n-     *\n-     * @param   symbols Array of characters to be typed\n-     *\n-     * @see     #type(char)\n-     *\/\n-    public void type(char[] symbols) {\n-        for (int i = 0; i < symbols.length; i++) {\n-            type(symbols[i]);\n-        }\n-    }\n-\n-    \/**\n-     * Types given string\n-     *\n-     * @param   s   String to be typed\n-     *\n-     * @see     #type(char[])\n-     *\/\n-    public void type(String s) {\n-        type(s.toCharArray());\n-    }\n","filename":"test\/jdk\/lib\/client\/ExtendedRobot.java","additions":2,"deletions":236,"binary":false,"changes":238,"status":"modified"}]}