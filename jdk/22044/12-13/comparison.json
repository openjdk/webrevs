{"files":[{"patch":"@@ -121,1 +121,2 @@\n-     * Default step delay (in milliseconds) for mouse glide and click.\n+     * Default 20 milliseconds delay for mouse {@code click} and\n+     * step delay for mouse {@code glide}.\n@@ -123,1 +124,1 @@\n-    public static final int DEFAULT_STEP_DELAY = 20;\n+    public static final int DEFAULT_DELAY = 20;\n@@ -126,1 +127,1 @@\n-     * Default step length (in pixels) for mouse glide.\n+     * Default 2 pixel step length for mouse {@code glide}.\n@@ -756,1 +757,1 @@\n-     * and {@code mouseRelease}. Invokes {@code waitForIdle} with a default delay of 20ms after\n+     * and {@code mouseRelease}. Invokes {@code waitForIdle} with a default {@link #DEFAULT_DELAY delay} after\n@@ -771,0 +772,1 @@\n+     * @see     #DEFAULT_DELAY\n@@ -778,1 +780,1 @@\n-        waitForIdle(DEFAULT_STEP_DELAY);\n+        waitForIdle(DEFAULT_DELAY);\n@@ -780,1 +782,1 @@\n-        waitForIdle(DEFAULT_STEP_DELAY);\n+        waitForIdle(DEFAULT_DELAY);\n@@ -814,1 +816,1 @@\n-     * with a default step-length and delay.\n+     * with a default {@link #DEFAULT_STEP_LENGTH step-length} and {@link #DEFAULT_DELAY delay}.\n@@ -819,1 +821,1 @@\n-     * @see     #DEFAULT_STEP_DELAY\n+     * @see     #DEFAULT_DELAY\n@@ -831,1 +833,1 @@\n-     * a default step-length and delay.\n+     * a default {@link #DEFAULT_STEP_LENGTH step-length} and {@link #DEFAULT_DELAY delay}.\n@@ -838,1 +840,1 @@\n-     * @see     #DEFAULT_STEP_DELAY\n+     * @see     #DEFAULT_DELAY\n@@ -843,1 +845,1 @@\n-        glide(fromX, fromY, toX, toY, DEFAULT_STEP_LENGTH, DEFAULT_STEP_DELAY);\n+        glide(fromX, fromY, toX, toY, DEFAULT_STEP_LENGTH, DEFAULT_DELAY);\n@@ -849,1 +851,1 @@\n-     * given step-length and delay.\n+     * given {@code stepLength} and {@code stepDelay}.\n@@ -895,1 +897,1 @@\n-        mouseMove(destX, destY);\n+        if (x != destX || y != destY) mouseMove(destX, destY);\n@@ -900,2 +902,2 @@\n-     * and {@code keyRelease}. Invokes {@code waitForIdle} with a default delay of 20\n-     * milliseconds after {@code keyPress} and {@code keyRelease} calls.\n+     * and {@code keyRelease}. Invokes {@code waitForIdle} with a default {@link #DEFAULT_DELAY delay}\n+     * after {@code keyPress} and {@code keyRelease} calls.\n@@ -911,2 +913,2 @@\n-     * @see     java.awt.Robot#keyPress(int)\n-     * @see     java.awt.Robot#keyRelease(int)\n+     * @see     #keyPress(int)\n+     * @see     #keyRelease(int)\n@@ -914,0 +916,1 @@\n+     * @see     #DEFAULT_DELAY\n@@ -918,1 +921,1 @@\n-        waitForIdle(DEFAULT_STEP_DELAY);\n+        waitForIdle(DEFAULT_DELAY);\n@@ -920,14 +923,1 @@\n-        waitForIdle(DEFAULT_STEP_DELAY);\n-    }\n-\n-    \/**\n-     * Types given character\n-     *\n-     * @param   c   Character to type (e.g. {@code 'a'})\n-     * @throws  IllegalThreadStateException if called on the AWT event dispatching thread\n-     * @see     #type(int)\n-     * @see     java.awt.event.KeyEvent\n-     * @since   25\n-     *\/\n-    public synchronized void type(char c) {\n-        type(KeyEvent.getExtendedKeyCodeForChar(c));\n+        waitForIdle(DEFAULT_DELAY);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Robot.java","additions":22,"deletions":32,"binary":false,"changes":54,"status":"modified"}]}