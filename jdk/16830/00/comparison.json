{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,3 @@\n+import org.junit.jupiter.api.Test;\n+\n+import javax.script.ScriptEngineFactory;\n@@ -25,0 +28,3 @@\n+import java.util.Optional;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -26,0 +32,9 @@\n+\/*\n+ * @test\n+ * @bug 8196959 8320712\n+ * @summary Verify that ScriptEngineManager can load BadFactory without throwing NPE\n+ * @library \/javax\/script\/JDK_8196959\n+ * @build BadFactory BadFactoryTest\n+ * @run junit\/othervm BadFactoryTest\n+ * @run junit\/othervm -Djava.security.manager=allow BadFactoryTest\n+ *\/\n@@ -27,1 +42,5 @@\n-    public static void main(String[] args) {\n+\n+    @Test\n+    public void scriptEngineManagerShouldLoadBadFactory() {\n+        \/\/ Check that ScriptEngineManager initializes even in the\n+        \/\/ presence of a ScriptEngineFactory returning nulls\n@@ -29,0 +48,6 @@\n+\n+        \/\/ Sanity check that ScriptEngineManager actually found the BadFactory\n+        Optional<ScriptEngineFactory> badFactory = m.getEngineFactories().stream()\n+                .filter(fac -> fac.getClass() == BadFactory.class)\n+                .findAny();\n+        assertTrue(badFactory.isPresent(), \"BadFactory not found\");\n","filename":"test\/jdk\/javax\/script\/JDK_8196959\/BadFactoryTest.java","additions":27,"deletions":2,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1,60 +0,0 @@\n-#\n-# Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8196959\n-# @summary BadFactory that results in NPE being thrown from ScriptEngineManager\n-#\n-# @build BadFactory BadFactoryTest\n-# @run shell BadFactoryTest.sh\n-\n-if [ \"${TESTSRC}\" = \"\" ]\n-then\n-  echo \"TESTSRC not set.  Test cannot execute.  Failed.\"\n-  exit 1\n-fi\n-\n-. ${TESTSRC}\/..\/CommonSetup.sh\n-\n-echo \"Creating JAR file ...\"\n-\n-$JAR ${TESTTOOLVMOPTS} -cf ${TESTCLASSES}\/badfactory.jar \\\n-    -C ${TESTCLASSES} BadFactory.class \\\n-    -C ${TESTCLASSES} BadFactoryTest.class \\\n-    -C \"${TESTSRC}\" META-INF\/services\/javax.script.ScriptEngineFactory\n-\n-echo \"Running test with security manager ...\"\n-$JAVA ${TESTVMOPTS} -Djava.security.manager -classpath \\\n-  \"${TESTCLASSES}${PS}${TESTCLASSES}\/badfactory.jar\" \\\n-  BadFactoryTest\n-\n-ret=$?\n-if [ $ret -ne 0 ]\n-then\n-  exit $ret\n-fi\n-\n-echo \"Running test without security manager ...\"\n-$JAVA ${TESTVMOPTS} -classpath \\\n-  \"${TESTCLASSES}${PS}${TESTCLASSES}\/badfactory.jar\" \\\n-  BadFactoryTest\n","filename":"test\/jdk\/javax\/script\/JDK_8196959\/BadFactoryTest.sh","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"}]}