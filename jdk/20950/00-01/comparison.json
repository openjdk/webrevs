{"files":[{"patch":"@@ -1307,0 +1307,3 @@\n+              name == vmSymbols::java_lang_ArrayIndexOutOfBoundsException() ||\n+              name == vmSymbols::java_lang_ArrayStoreException() ||\n+              name == vmSymbols::java_lang_ClassCastException() ||\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -103,4 +103,0 @@\n-jobject ciEnv::_ArrayIndexOutOfBoundsException_handle = nullptr;\n-jobject ciEnv::_ArrayStoreException_handle = nullptr;\n-jobject ciEnv::_ClassCastException_handle = nullptr;\n-\n@@ -161,0 +157,9 @@\n+  o = Universe::array_index_out_of_bounds_exception_instance();\n+  assert(o != nullptr, \"should have been initialized\");\n+  _ArrayIndexOutOfBoundsException_instance = get_object(o)->as_instance();\n+  o = Universe::array_store_exception_instance();\n+  assert(o != nullptr, \"should have been initialized\");\n+  _ArrayStoreException_instance = get_object(o)->as_instance();\n+  o = Universe::class_cast_exception_instance();\n+  assert(o != nullptr, \"should have been initialized\");\n+  _ClassCastException_instance = get_object(o)->as_instance();\n@@ -162,3 +167,0 @@\n-  _ArrayIndexOutOfBoundsException_instance = nullptr;\n-  _ArrayStoreException_instance = nullptr;\n-  _ClassCastException_instance = nullptr;\n@@ -366,24 +368,0 @@\n-\/\/ ------------------------------------------------------------------\n-\/\/ helper for lazy exception creation\n-ciInstance* ciEnv::get_or_create_exception(jobject& handle, Symbol* name) {\n-  VM_ENTRY_MARK;\n-  if (handle == nullptr) {\n-    \/\/ Cf. universe.cpp, creation of Universe::_null_ptr_exception_instance.\n-    InstanceKlass* ik = SystemDictionary::find_instance_klass(THREAD, name, Handle(), Handle());\n-    jobject objh = nullptr;\n-    if (ik != nullptr) {\n-      oop obj = ik->allocate_instance(THREAD);\n-      if (!HAS_PENDING_EXCEPTION)\n-        objh = JNIHandles::make_global(Handle(THREAD, obj));\n-    }\n-    if (HAS_PENDING_EXCEPTION) {\n-      CLEAR_PENDING_EXCEPTION;\n-    } else {\n-      OrderAccess::storestore(); \/\/ Ensure handle is fully constructed before publishing\n-      handle = objh;\n-    }\n-  }\n-  oop obj = JNIHandles::resolve(handle);\n-  return obj == nullptr? nullptr: get_object(obj)->as_instance();\n-}\n-\n@@ -407,25 +385,0 @@\n-ciInstance* ciEnv::ArrayIndexOutOfBoundsException_instance() {\n-  if (_ArrayIndexOutOfBoundsException_instance == nullptr) {\n-    _ArrayIndexOutOfBoundsException_instance\n-          = get_or_create_exception(_ArrayIndexOutOfBoundsException_handle,\n-          vmSymbols::java_lang_ArrayIndexOutOfBoundsException());\n-  }\n-  return _ArrayIndexOutOfBoundsException_instance;\n-}\n-ciInstance* ciEnv::ArrayStoreException_instance() {\n-  if (_ArrayStoreException_instance == nullptr) {\n-    _ArrayStoreException_instance\n-          = get_or_create_exception(_ArrayStoreException_handle,\n-          vmSymbols::java_lang_ArrayStoreException());\n-  }\n-  return _ArrayStoreException_instance;\n-}\n-ciInstance* ciEnv::ClassCastException_instance() {\n-  if (_ClassCastException_instance == nullptr) {\n-    _ClassCastException_instance\n-          = get_or_create_exception(_ClassCastException_handle,\n-          vmSymbols::java_lang_ClassCastException());\n-  }\n-  return _ClassCastException_instance;\n-}\n-\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":9,"deletions":56,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -97,4 +97,0 @@\n-  static jobject _ArrayIndexOutOfBoundsException_handle;\n-  static jobject _ArrayStoreException_handle;\n-  static jobject _ClassCastException_handle;\n-\n@@ -233,2 +229,0 @@\n-  ciInstance* get_or_create_exception(jobject& handle, Symbol* name);\n-\n@@ -405,5 +399,12 @@\n-\n-  \/\/ Lazy constructors:\n-  ciInstance* ArrayIndexOutOfBoundsException_instance();\n-  ciInstance* ArrayStoreException_instance();\n-  ciInstance* ClassCastException_instance();\n+  ciInstance* ArrayIndexOutOfBoundsException_instance() {\n+    assert(_ArrayIndexOutOfBoundsException_instance != nullptr, \"initialization problem\");\n+    return _ArrayIndexOutOfBoundsException_instance;\n+  }\n+  ciInstance* ArrayStoreException_instance() {\n+    assert(_ArrayStoreException_instance != nullptr, \"initialization problem\");\n+    return _ArrayStoreException_instance;\n+  }\n+  ciInstance* ClassCastException_instance() {\n+    assert(_ClassCastException_instance != nullptr, \"initialization problem\");\n+    return _ClassCastException_instance;\n+  }\n","filename":"src\/hotspot\/share\/ci\/ciEnv.hpp","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -232,0 +232,3 @@\n+static BuiltinException _array_index_out_of_bounds_exception;\n+static BuiltinException _array_store_exception;\n+static BuiltinException _class_cast_exception;\n@@ -249,0 +252,3 @@\n+oop Universe::array_index_out_of_bounds_exception_instance() { return _array_index_out_of_bounds_exception.instance(); }\n+oop Universe::array_store_exception_instance()    { return _array_store_exception.instance(); }\n+oop Universe::class_cast_exception_instance()     { return _class_cast_exception.instance(); }\n@@ -305,0 +311,3 @@\n+  _array_index_out_of_bounds_exception.store_in_cds();\n+  _array_store_exception.store_in_cds();\n+  _class_cast_exception.store_in_cds();\n@@ -321,0 +330,3 @@\n+    _array_index_out_of_bounds_exception.load_from_cds();\n+    _array_store_exception.load_from_cds();\n+    _class_cast_exception.load_from_cds();\n@@ -337,0 +349,3 @@\n+  _array_index_out_of_bounds_exception.serialize(f);\n+  _array_store_exception.serialize(f);\n+  _class_cast_exception.serialize(f);\n@@ -1086,2 +1101,1 @@\n-  \/\/ Setup preallocated NullPointerException\/ArithmeticException\n-  \/\/ (used for a cheap & dirty solution in compiler exception handling)\n+  \/\/ Setup preallocated exceptions used for a cheap & dirty solution in compiler exception handling\n@@ -1090,0 +1104,3 @@\n+  _array_index_out_of_bounds_exception.init_if_empty(vmSymbols::java_lang_ArrayIndexOutOfBoundsException(), CHECK_false);\n+  _array_store_exception.init_if_empty(vmSymbols::java_lang_ArrayStoreException(), CHECK_false);\n+  _class_cast_exception.init_if_empty(vmSymbols::java_lang_ClassCastException(), CHECK_false);\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -233,0 +233,3 @@\n+  static oop          array_index_out_of_bounds_exception_instance();\n+  static oop          array_store_exception_instance();\n+  static oop          class_cast_exception_instance();\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -396,0 +396,1 @@\n+  initialize_class(vmSymbols::java_lang_ArrayIndexOutOfBoundsException(), CHECK);\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}