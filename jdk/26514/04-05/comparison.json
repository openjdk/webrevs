{"files":[{"patch":"@@ -0,0 +1,123 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8362566\n+ * @summary Test the contents of -Xlog:aot+map with AOT workflow\n+ * @requires vm.flagless\n+ * @requires vm.cds.supports.aot.class.linking\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\n+ * @build AOTMapTest\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar app.jar AOTMapTestApp\n+ * @run driver AOTMapTest\n+ *\/\n+\n+import java.util.ArrayList;\n+import jdk.test.lib.cds.CDSAppTester;\n+import jdk.test.lib.helpers.ClassFileInstaller;\n+import jdk.test.lib.Platform;\n+\n+public class AOTMapTest {\n+    static final String appJar = ClassFileInstaller.getJarPath(\"app.jar\");\n+    static final String mainClass = \"AOTMapTestApp\";\n+\n+    public static void main(String[] args) throws Exception {\n+        doTest(false);\n+\n+        if (Platform.is64bit()) {\n+            \/\/ There's no oop\/klass compression on 32-bit.\n+            doTest(true);\n+        }\n+    }\n+\n+    public static void doTest(boolean compressed) throws Exception {\n+        Tester tester = new Tester(compressed);\n+        tester.run(new String[] {\"AOT\", \"--two-step-training\"});\n+\n+        validate(tester.dumpMapFile);\n+        validate(tester.runMapFile);\n+    }\n+\n+    static void validate(String mapFileName) {\n+        CDSMapReader.MapFile mapFile = CDSMapReader.read(mapFileName);\n+        CDSMapReader.validate(mapFile);\n+    }\n+\n+    static class Tester extends CDSAppTester {\n+        boolean compressed;\n+        String dumpMapFile;\n+        String runMapFile;\n+\n+        public Tester(boolean compressed) {\n+            super(mainClass);\n+            this.compressed = compressed;\n+\n+            dumpMapFile = \"test\" + (compressed ? \"0\" : \"1\") + \".dump.aotmap\";\n+            runMapFile  = \"test\" + (compressed ? \"0\" : \"1\") + \".run.aotmap\";\n+        }\n+\n+        @Override\n+        public String classpath(RunMode runMode) {\n+            return appJar;\n+        }\n+\n+        @Override\n+        public String[] vmArgs(RunMode runMode) {\n+            ArrayList<String> vmArgs = new ArrayList<>();\n+\n+            vmArgs.add(\"-Xmx128M\");\n+            vmArgs.add(\"-Xlog:aot=debug\");\n+\n+            if (Platform.is64bit()) {\n+                \/\/ These options are available only on 64-bit.\n+                String sign = (compressed) ?  \"+\" : \"-\";\n+                vmArgs.add(\"-XX:\" + sign + \"UseCompressedOops\");\n+            }\n+\n+            String logMapPrefix = \"-Xlog:aot+map=debug,aot+map+oops=trace:file=\";\n+            String logMapSuffix = \":none:filesize=0\";\n+\n+            if (runMode == RunMode.ASSEMBLY) {\n+                vmArgs.add(logMapPrefix + dumpMapFile + logMapSuffix);\n+            } else if (runMode == RunMode.PRODUCTION) {\n+                vmArgs.add(logMapPrefix + runMapFile + logMapSuffix);\n+            }\n+\n+            return vmArgs.toArray(new String[vmArgs.size()]);\n+        }\n+\n+        @Override\n+        public String[] appCommandLine(RunMode runMode) {\n+            return new String[] {\n+                mainClass,\n+            };\n+        }\n+    }\n+}\n+\n+class AOTMapTestApp {\n+    public static void main(String[] args) {\n+        System.out.println(\"Hello AOTMapTestApp\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/AOTMapTest.java","additions":123,"deletions":0,"binary":false,"changes":123,"status":"added"}]}