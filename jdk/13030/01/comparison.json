{"files":[{"patch":"@@ -125,1 +125,0 @@\n-serviceability\/sa\/UniqueVtableTest.java 8303921 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n- * @build jdk.test.lib.apps.*\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestIntConstant.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n- * @build jdk.test.lib.apps.*\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestPrintMdo.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n- * @build jdk.test.lib.apps.*\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestType.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n- * @build jdk.test.lib.apps.*\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestUniverse.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @run main\/othervm UniqueVtableTest\n+ * @run driver UniqueVtableTest\n@@ -49,0 +49,2 @@\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -54,5 +56,0 @@\n-    private HotSpotAgent agent;\n-\n-    public UniqueVtableTest() {\n-    }\n-\n@@ -67,2 +64,2 @@\n-    private void attach(long pid) throws Throwable {\n-        agent = new HotSpotAgent();\n+    private static void runTest(long pid) throws Throwable {\n+        HotSpotAgent agent = new HotSpotAgent();\n@@ -72,1 +69,0 @@\n-    }\n@@ -74,3 +70,20 @@\n-    private void detach() {\n-        if (agent != null) {\n-            agent.detach();\n+        Throwable reasonToFail = null;\n+\n+        try {\n+            runTest(agent);\n+        } catch (Throwable ex) {\n+            reasonToFail = ex;\n+        } finally {\n+            try {\n+                agent.detach();\n+            } catch (Exception ex) {\n+                log(\"detach error:\");\n+                ex.printStackTrace(System.out);\n+                \/\/ do not override original error\n+                if (reasonToFail != null) {\n+                    reasonToFail = ex;\n+                }\n+            }\n+        }\n+        if (reasonToFail != null) {\n+            throw reasonToFail;\n@@ -80,1 +93,1 @@\n-    private void runTest() throws Throwable {\n+    private static void runTest(HotSpotAgent agent) throws Throwable {\n@@ -134,1 +147,17 @@\n-    private void run() throws Throwable {\n+    private static void createAnotherToAttach(long lingeredAppPid) throws Throwable {\n+        \/\/ Start a new process to attach to the lingered app\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(\n+            \"--add-modules=jdk.hotspot.agent\",\n+            \"--add-exports=jdk.hotspot.agent\/sun.jvm.hotspot=ALL-UNNAMED\",\n+            \"--add-exports=jdk.hotspot.agent\/sun.jvm.hotspot.debugger=ALL-UNNAMED\",\n+            \"--add-exports=jdk.hotspot.agent\/sun.jvm.hotspot.types=ALL-UNNAMED\",\n+            \"--add-exports=jdk.hotspot.agent\/sun.jvm.hotspot.types.basic=ALL-UNNAMED\",\n+            \"UniqueVtableTest\",\n+            Long.toString(lingeredAppPid));\n+        SATestUtils.addPrivilegesIfNeeded(processBuilder);\n+        OutputAnalyzer output = ProcessTools.executeProcess(processBuilder);\n+        output.shouldHaveExitValue(0);\n+        System.out.println(output.getOutput());\n+    }\n+\n+    private static void runMain() throws Throwable {\n@@ -139,2 +168,1 @@\n-            attach(app.getPid());\n-            runTest();\n+            createAnotherToAttach(app.getPid());\n@@ -144,10 +172,0 @@\n-            try {\n-                detach();\n-            } catch (Exception ex) {\n-                log(\"detach error:\");\n-                ex.printStackTrace(System.out);\n-                \/\/ do not override original error\n-                if (reasonToFail != null) {\n-                    reasonToFail = ex;\n-                }\n-            }\n@@ -173,3 +191,7 @@\n-        UniqueVtableTest test = new UniqueVtableTest();\n-\n-        test.run();\n+        if (args == null || args.length == 0) {\n+            \/\/ Main test process.\n+            runMain();\n+        } else {\n+            \/\/ Sub-process to attach, arg[0] is the target process pid.\n+            runTest(Long.parseLong(args[0]));\n+        }\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/UniqueVtableTest.java","additions":51,"deletions":29,"binary":false,"changes":80,"status":"modified"}]}