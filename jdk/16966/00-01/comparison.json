{"files":[{"patch":"@@ -892,2 +892,2 @@\n-            Node* in1 = cmp->in(1);\n-            Node* in2 = cmp->in(2);\n+            Node* in1 = cmp->in(1)->uncast();\n+            Node* in2 = cmp->in(2)->uncast();\n","filename":"src\/hotspot\/share\/opto\/callGenerator.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-      } else if (callee->intrinsic_id() == vmIntrinsics::_scopedValueCache) {\n+      } else if (IncrementalInline && callee->intrinsic_id() == vmIntrinsics::_scopedValueCache) {\n@@ -221,1 +221,1 @@\n-          } else if (callee->intrinsic_id() == vmIntrinsics::_SVget) {\n+          } else if (callee->intrinsic_id() == vmIntrinsics::_SVget && IncrementalInline) {\n@@ -223,3 +223,1 @@\n-          } else if (callee->intrinsic_id() == vmIntrinsics::_SVslowGet) {\n-            return CallGenerator::for_late_inline(callee, cg);\n-          } else if (should_delay) {\n+          } else if (callee->intrinsic_id() == vmIntrinsics::_SVslowGet && IncrementalInline) {\n","filename":"src\/hotspot\/share\/opto\/doCall.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -358,1 +358,1 @@\n-  void verify() const PRODUCT_RETURN;\n+  void verify() const NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/opto\/intrinsicnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4494,1 +4494,3 @@\n-  C->set_has_scoped_value_get_nodes(_scoped_value_get_nodes.size() > 0);\n+  if (do_split_ifs) {\n+    C->set_has_scoped_value_get_nodes(_scoped_value_get_nodes.size() > 0);\n+  }\n@@ -4729,1 +4731,0 @@\n-      Node* top_of_stack = _scoped_value_get_nodes.pop();\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -377,1 +377,1 @@\n-  void verify() const PRODUCT_RETURN;\n+  void verify() const NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/opto\/subnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,3 @@\n-    protected static final WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();\n+    private static final WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();\n+\n+    private static long tieredStopAtLevel = (long)WHITE_BOX.getVMFlag(\"TieredStopAtLevel\");\n@@ -60,1 +62,1 @@\n-            TestFramework.runWithFlags(\"--enable-preview\", \"-XX:CompileCommand=dontinline,java.lang.ScopedValue::slowGet\", \"-DTest=\" + test);\n+            TestFramework.runWithFlags(\"-XX:+TieredCompilation\", \"--enable-preview\", \"-XX:CompileCommand=dontinline,java.lang.ScopedValue::slowGet\", \"-DTest=\" + test);\n@@ -84,1 +86,8 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath1\");\n+        forceCompilation(\"testFastPath1\");\n+    }\n+\n+    private static void forceCompilation(String name, Class<?>... parameterTypes) throws NoSuchMethodException {\n+        if (tieredStopAtLevel < CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n+            return;\n+        }\n+        Method m = TestScopedValue.class.getDeclaredMethod(name, parameterTypes);\n@@ -117,5 +126,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath2\");\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath2\");\n@@ -145,5 +150,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath3\");\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath3\");\n@@ -216,5 +217,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath5\");\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath5\");\n@@ -240,5 +237,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath6\");\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath6\");\n@@ -276,5 +269,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath7\");\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath7\");\n@@ -315,5 +304,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath8\", boolean[].class);\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath8\", boolean[].class);\n@@ -355,5 +340,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath9\", boolean[].class);\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath9\", boolean[].class);\n@@ -390,5 +371,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath10\", boolean[].class);\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath10\", boolean[].class);\n@@ -423,5 +400,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath11\", boolean[].class);\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath11\", boolean[].class);\n@@ -449,5 +422,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath12\");\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath12\");\n@@ -490,5 +459,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath13\");\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath13\");\n@@ -515,5 +480,1 @@\n-        Method m = TestScopedValue.class.getDeclaredMethod(\"testFastPath14\");\n-        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n-        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n-            throw new RuntimeException(\"should be compiled\");\n-        }\n+        forceCompilation(\"testFastPath14\");\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestScopedValue.java","additions":24,"deletions":63,"binary":false,"changes":87,"status":"modified"}]}