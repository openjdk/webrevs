{"files":[{"patch":"@@ -632,1 +632,0 @@\n-sun\/security\/pkcs11\/Provider\/MultipleLogins.sh                  8319128 linux-aarch64\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -58,0 +58,3 @@\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n@@ -825,1 +828,5 @@\n-                return fetchNssLib(LINUX_X64.class);\n+                if (isOracleLinux7()) {\n+                    throw new SkippedException(\"Skipping Oracle Linux prior to v8\");\n+                } else {\n+                    return fetchNssLib(LINUX_X64.class);\n+                }\n@@ -828,1 +835,5 @@\n-                throw new SkippedException(\"Per JDK-8319128, skipping Linux aarch64 platforms.\");\n+                if (isOracleLinux7()) {\n+                    throw new SkippedException(\"Skipping Oracle Linux prior to v8\");\n+                } else {\n+                    return fetchNssLib(LINUX_AARCH64.class);\n+                }\n@@ -834,0 +845,45 @@\n+    private static boolean isOracleLinux7() {\n+        Path oracleReleaseFile = Path.of(\"\/etc\/oracle-release\");\n+        Path osReleaseFile = Path.of(\"\/etc\/os-release\");\n+        String versionString;\n+        try {\n+            if (Files.exists(oracleReleaseFile)) {\n+                System.err.printf(\"%s exists.%n\", oracleReleaseFile);\n+                String contents = Files.readString(oracleReleaseFile).strip();\n+                System.err.printf(\"checking: \\\"%s\\\"%n\", contents);\n+                Matcher m = Pattern.compile(\"Oracle Linux.*(\\\\d+\\\\.\\\\d+)\").matcher(contents);\n+                if (!m.matches()) {\n+                    return false;\n+                } else {\n+                    versionString = m.group(1);\n+                }\n+\n+            } else if (Files.exists(osReleaseFile)) {\n+                    System.err.printf(\"%s exists.%n\", osReleaseFile);\n+                    Map<String, String> components = Files.readAllLines(osReleaseFile)\n+                            .stream().filter(s -> !s.isBlank())\n+                            .peek(System.err::println)\n+                            .collect(Collectors.toMap(\n+                                    s -> s.split(\"=\")[0],\n+                                    s -> s.split(\"=\")[1].strip()\n+                            ));\n+\n+                    String osName = components.getOrDefault(\"NAME\", \"\");\n+                    String version = components.getOrDefault(\"VERSION\", \"\");\n+                    System.err.printf(\"NAME = %s VERSION = %s%n\", osName, version);\n+                    if (osName.toLowerCase().contains(\"oracle\")) {\n+                        versionString = version.replaceAll(\"\\\"\", \"\");\n+                    } else {\n+                        return false;\n+                    }\n+\n+            } else {\n+                return false;\n+            }\n+\n+            return Double.parseDouble(versionString) < 8.0;\n+        } catch (IOException exc) {\n+            return false;\n+        }\n+    }\n+\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":58,"deletions":2,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+\n@@ -35,1 +36,0 @@\n-import java.util.Iterator;\n@@ -37,2 +37,0 @@\n-import java.util.ServiceConfigurationError;\n-import java.util.ServiceLoader;\n@@ -41,0 +39,1 @@\n+import jtreg.SkippedException;\n@@ -49,4 +48,10 @@\n-        String nssConfig = PKCS11Test.getNssConfig();\n-        if (nssConfig == null) {\n-            \/\/ No test framework support yet. Ignore\n-            System.out.println(\"No NSS config found. Skipping.\");\n+        String nssConfig;\n+        try {\n+            nssConfig = PKCS11Test.getNssConfig();\n+            if (nssConfig == null) {\n+                \/\/ No test framework support yet. Ignore\n+                System.out.println(\"No NSS config found. Skipping.\");\n+                return;\n+            }\n+        } catch (SkippedException exc) {\n+            System.out.println(\"Skipping test: \" + exc.getMessage());\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/MultipleLogins.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"}]}