{"files":[{"patch":"@@ -767,36 +767,8 @@\n-        Path oracleReleaseFile = Path.of(\"\/etc\/oracle-release\");\n-        Path osReleaseFile = Path.of(\"\/etc\/os-release\");\n-        String versionString;\n-        try {\n-            if (Files.exists(oracleReleaseFile)) {\n-                System.err.printf(\"%s exists.%n\", oracleReleaseFile);\n-                String contents = Files.readString(oracleReleaseFile).strip();\n-                System.err.printf(\"checking: \\\"%s\\\"%n\", contents);\n-                Matcher m = Pattern.compile(\"Oracle Linux.*(\\\\d+\\\\.\\\\d+)\").matcher(contents);\n-                if (!m.matches()) {\n-                    return false;\n-                } else {\n-                    versionString = m.group(1);\n-                }\n-\n-            } else if (Files.exists(osReleaseFile)) {\n-                    System.err.printf(\"%s exists.%n\", osReleaseFile);\n-                    Map<String, String> components = Files.readAllLines(osReleaseFile)\n-                            .stream().filter(s -> !s.isBlank())\n-                            .peek(System.err::println)\n-                            .collect(Collectors.toMap(\n-                                    s -> s.split(\"=\")[0],\n-                                    s -> s.split(\"=\")[1].strip()\n-                            ));\n-\n-                    String osName = components.getOrDefault(\"NAME\", \"\");\n-                    String version = components.getOrDefault(\"VERSION\", \"\");\n-                    System.err.printf(\"NAME = %s VERSION = %s%n\", osName, version);\n-                    if (osName.toLowerCase().contains(\"oracle\")) {\n-                        versionString = version.replaceAll(\"\\\"\", \"\");\n-                    } else {\n-                        return false;\n-                    }\n-\n-            } else {\n-                return false;\n+        if (System.getProperty(\"os.name\").toLowerCase().contains(\"linux\") &&\n+                System.getProperty(\"os.version\").toLowerCase().contains(\"el\")) {\n+            Pattern p = Pattern.compile(\"el(\\\\d+)\");\n+            Matcher m = p.matcher(System.getProperty(\"os.version\"));\n+            if (m.find()) {\n+                try {\n+                    return Integer.parseInt(m.group(1)) <= 7;\n+                } catch (NumberFormatException nfe) {}\n@@ -804,4 +776,0 @@\n-\n-            return Double.parseDouble(versionString) < 8.0;\n-        } catch (IOException exc) {\n-            return false;\n@@ -809,0 +777,1 @@\n+        return false;\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":9,"deletions":40,"binary":false,"changes":49,"status":"modified"}]}