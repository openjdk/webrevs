{"files":[{"patch":"@@ -62,1 +62,1 @@\n-public class PrintTextTest extends Component implements Printable {\n+public class PrintTextTest {\n@@ -83,6 +83,0 @@\n-    static int preferredSize;\n-    Font textFont;\n-    AffineTransform gxTx;\n-    String page;\n-    boolean useFM;\n-\n@@ -94,1 +88,1 @@\n-        preferredSize = (int)portrait.getImageableWidth();\n+        int preferredSize = (int) portrait.getImageableWidth();\n@@ -101,1 +95,1 @@\n-        JTabbedPane p = new JTabbedPane();\n+        JTabbedPane pane = new JTabbedPane();\n@@ -106,4 +100,4 @@\n-        PrintTextTest ptt = new PrintTextTest(name, font, null, false);\n-        p.add(name, ptt);\n-        book.append(ptt, portrait);\n-        book.append(ptt, landscape);\n+        PrintText pt = new PrintText(name, font, null, false, preferredSize);\n+        pane.add(name, pt);\n+        book.append(pt, portrait);\n+        book.append(pt, landscape);\n@@ -113,4 +107,4 @@\n-        ptt = new PrintTextTest(name, font, null, true);\n-        p.add(name, ptt);\n-        book.append(ptt, portrait);\n-        book.append(ptt, landscape);\n+        pt = new PrintText(name, font, null, true, preferredSize);\n+        pane.add(name, pt);\n+        book.append(pt, portrait);\n+        book.append(pt, landscape);\n@@ -120,4 +114,4 @@\n-        ptt = new PrintTextTest(name, font, null, false);\n-        p.add(name, ptt);\n-        book.append(ptt, portrait);\n-        book.append(ptt, landscape);\n+        pt = new PrintText(name, font, null, false, preferredSize);\n+        pane.add(name, pt);\n+        book.append(pt, portrait);\n+        book.append(pt, landscape);\n@@ -129,4 +123,4 @@\n-        ptt = new PrintTextTest(name, font, rotTx, false);\n-        p.add(name, ptt);\n-        book.append(ptt, portrait);\n-        book.append(ptt, landscape);\n+        pt = new PrintText(name, font, rotTx, false, preferredSize);\n+        pane.add(name, pt);\n+        book.append(pt, portrait);\n+        book.append(pt, landscape);\n@@ -137,4 +131,4 @@\n-        ptt = new PrintTextTest(name, font, scaleTx, false);\n-        p.add(name, ptt);\n-        book.append(ptt, portrait);\n-        book.append(ptt, landscape);\n+        pt = new PrintText(name, font, scaleTx, false, preferredSize);\n+        pane.add(name, pt);\n+        book.append(pt, portrait);\n+        book.append(pt, landscape);\n@@ -146,4 +140,4 @@\n-        ptt = new PrintTextTest(name, font, scaleTx, false);\n-        p.add(name, ptt);\n-        book.append(ptt, portrait);\n-        book.append(ptt, landscape);\n+        pt = new PrintText(name, font, scaleTx, false, preferredSize);\n+        pane.add(name, pt);\n+        book.append(pt, portrait);\n+        book.append(pt, landscape);\n@@ -155,4 +149,4 @@\n-        ptt = new PrintTextTest(name, font, scaleTx, false);\n-        p.add(name, ptt);\n-        book.append(ptt, portrait);\n-        book.append(ptt, landscape);\n+        pt = new PrintText(name, font, scaleTx, false, preferredSize);\n+        pane.add(name, pt);\n+        book.append(pt, portrait);\n+        book.append(pt, landscape);\n@@ -162,5 +156,5 @@\n-        ptt = new PrintTextTest(name, font, null, false);\n-        p.add(ptt, BorderLayout.CENTER);\n-        p.add(name, ptt);\n-        book.append(ptt, portrait);\n-        book.append(ptt, landscape);\n+        pt = new PrintText(name, font, null, false, preferredSize);\n+        pane.add(pt, BorderLayout.CENTER);\n+        pane.add(name, pt);\n+        book.append(pt, portrait);\n+        book.append(pt, landscape);\n@@ -170,5 +164,5 @@\n-        ptt = new PrintTextTest(name, font, null, false);\n-        p.add(ptt, BorderLayout.CENTER);\n-        p.add(name, ptt);\n-        book.append(ptt, portrait);\n-        book.append(ptt, landscape);\n+        pt = new PrintText(name, font, null, false, preferredSize);\n+        pane.add(pt, BorderLayout.CENTER);\n+        pane.add(name, pt);\n+        book.append(pt, portrait);\n+        book.append(pt, landscape);\n@@ -178,5 +172,5 @@\n-        ptt = new PrintTextTest(name, xfont, null, false);\n-        p.add(ptt, BorderLayout.CENTER);\n-        p.add(name, ptt);\n-        book.append(ptt, portrait);\n-        book.append(ptt, landscape);\n+        pt = new PrintText(name, xfont, null, false, preferredSize);\n+        pane.add(pt, BorderLayout.CENTER);\n+        pane.add(name, pt);\n+        book.append(pt, portrait);\n+        book.append(pt, landscape);\n@@ -186,5 +180,5 @@\n-        ptt = new PrintTextTest(name, yfont, null, false);\n-        p.add(ptt, BorderLayout.CENTER);\n-        p.add(name, ptt);\n-        book.append(ptt, portrait);\n-        book.append(ptt, landscape);\n+        pt = new PrintText(name, yfont, null, false, preferredSize);\n+        pane.add(pt, BorderLayout.CENTER);\n+        pane.add(name, pt);\n+        book.append(pt, portrait);\n+        book.append(pt, landscape);\n@@ -195,5 +189,5 @@\n-            ptt = new PrintJAText(name, font, null, true);\n-            p.add(ptt, BorderLayout.CENTER);\n-            p.add(name, ptt);\n-            book.append(ptt, portrait);\n-            book.append(ptt, landscape);\n+            pt = new PrintJapaneseText(name, font, null, true, preferredSize);\n+            pane.add(pt, BorderLayout.CENTER);\n+            pane.add(name, pt);\n+            book.append(pt, portrait);\n+            book.append(pt, landscape);\n@@ -204,5 +198,5 @@\n-            ptt = new PrintJAText(name, font, rotTx, true);\n-            p.add(ptt, BorderLayout.CENTER);\n-            p.add(name, ptt);\n-            book.append(ptt, portrait);\n-            book.append(ptt, landscape);\n+            pt = new PrintJapaneseText(name, font, rotTx, true, preferredSize);\n+            pane.add(pt, BorderLayout.CENTER);\n+            pane.add(name, pt);\n+            book.append(pt, portrait);\n+            book.append(pt, landscape);\n@@ -225,1 +219,1 @@\n-        f.add(BorderLayout.CENTER, p);\n+        f.add(BorderLayout.CENTER, pane);\n@@ -268,12 +262,16 @@\n-    public PrintTextTest(String page, Font font, AffineTransform gxTx,\n-                         boolean fm) {\n-        this.page = page;\n-        textFont = font;\n-        this.gxTx = gxTx;\n-        this.useFM = fm;\n-        setBackground(Color.white);\n-    }\n-\n-    public static AttributedCharacterIterator getIterator(String s) {\n-        return new AttributedString(s).getIterator();\n-    }\n+    private static class PrintText extends Component implements Printable {\n+\n+        protected Font textFont;\n+        protected AffineTransform gxTx;\n+        protected String page;\n+        protected boolean useFM;\n+        protected int preferredSize;\n+\n+        public PrintText(String page, Font font, AffineTransform gxTx, boolean fm, int size) {\n+            this.page = page;\n+            this.textFont = font;\n+            this.gxTx = gxTx;\n+            this.useFM = fm;\n+            this.preferredSize = size;\n+            setBackground(Color.WHITE);\n+        }\n@@ -281,5 +279,2 @@\n-    static String orient(PageFormat pf) {\n-        if (pf.getOrientation() == PageFormat.PORTRAIT) {\n-            return \"Portrait\";\n-        } else {\n-            return \"Landscape\";\n+        public static AttributedCharacterIterator getIterator(String s) {\n+            return new AttributedString(s).getIterator();\n@@ -287,1 +282,0 @@\n-    }\n@@ -289,1 +283,7 @@\n-    public int print(Graphics g, PageFormat pf, int pageIndex) {\n+        static String orient(PageFormat pf) {\n+            if (pf.getOrientation() == PageFormat.PORTRAIT) {\n+                return \"Portrait\";\n+            } else {\n+                return \"Landscape\";\n+            }\n+        }\n@@ -291,7 +291,8 @@\n-        Graphics2D g2d = (Graphics2D)g;\n-        g2d.translate(pf.getImageableX(),  pf.getImageableY());\n-        g.drawString(page+\" \"+orient(pf),50,20);\n-        g.translate(0, 25);\n-        paint(g);\n-        return PAGE_EXISTS;\n-    }\n+        public int print(Graphics g, PageFormat pf, int pageIndex) {\n+            Graphics2D g2d = (Graphics2D)g;\n+            g2d.translate(pf.getImageableX(),  pf.getImageableY());\n+            g.drawString(page+\" \"+orient(pf),50,20);\n+            g.translate(0, 25);\n+            paint(g);\n+            return PAGE_EXISTS;\n+        }\n@@ -299,3 +300,3 @@\n-    public Dimension getMinimumSize() {\n-        return getPreferredSize();\n-    }\n+        public Dimension getMinimumSize() {\n+            return getPreferredSize();\n+        }\n@@ -303,3 +304,3 @@\n-    public Dimension getPreferredSize() {\n-        return new Dimension(preferredSize, preferredSize);\n-    }\n+        public Dimension getPreferredSize() {\n+            return new Dimension(preferredSize, preferredSize);\n+        }\n@@ -307,1 +308,1 @@\n-    public void paint(Graphics g) {\n+        public void paint(Graphics g) {\n@@ -309,3 +310,2 @@\n-        \/* fill with white before any transformation is applied *\/\n-        g.setColor(Color.white);\n-        g.fillRect(0, 0, getSize().width, getSize().height);\n+            g.setColor(Color.WHITE);\n+            g.fillRect(0, 0, getSize().width, getSize().height);\n@@ -313,8 +313,8 @@\n-        Graphics2D g2d = (Graphics2D) g;\n-        if (gxTx != null) {\n-            g2d.transform(gxTx);\n-        }\n-        if (useFM) {\n-            g2d.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS,\n-                                 RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n-        }\n+            Graphics2D g2d = (Graphics2D) g;\n+            if (gxTx != null) {\n+                g2d.transform(gxTx);\n+            }\n+            if (useFM) {\n+                g2d.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS,\n+                                     RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n+            }\n@@ -322,2 +322,2 @@\n-        g.setFont(textFont);\n-        FontMetrics fm = g.getFontMetrics();\n+            g.setFont(textFont);\n+            FontMetrics fm = g.getFontMetrics();\n@@ -325,4 +325,4 @@\n-        String s;\n-        int LS = 30;\n-        int ix=10, iy=LS+10;\n-        g.setColor(Color.black);\n+            String s;\n+            int LS = 30;\n+            int ix=10, iy=LS+10;\n+            g.setColor(Color.BLACK);\n@@ -330,5 +330,5 @@\n-        s = \"drawString(String str, int x, int y)\";\n-        g.drawString(s, ix, iy);\n-        if (!textFont.isTransformed()) {\n-            g.drawLine(ix, iy+1, ix+fm.stringWidth(s), iy+1);\n-        }\n+            s = \"drawString(String str, int x, int y)\";\n+            g.drawString(s, ix, iy);\n+            if (!textFont.isTransformed()) {\n+                g.drawLine(ix, iy+1, ix+fm.stringWidth(s), iy+1);\n+            }\n@@ -336,3 +336,3 @@\n-        iy += LS;\n-        s = \"drawString(AttributedCharacterIterator iterator, int x, int y)\";\n-        g.drawString(getIterator(s), ix, iy);\n+            iy += LS;\n+            s = \"drawString(AttributedCharacterIterator iterator, int x, int y)\";\n+            g.drawString(getIterator(s), ix, iy);\n@@ -340,6 +340,6 @@\n-        iy += LS;\n-        s = \"\\tdrawChars(\\t\\r\\nchar[], int off, int len, int x, int y\\t)\";\n-        g.drawChars(s.toCharArray(), 0, s.length(), ix, iy);\n-        if (!textFont.isTransformed()) {\n-            g.drawLine(ix, iy+1, ix+fm.stringWidth(s), iy+1);\n-        }\n+            iy += LS;\n+            s = \"\\tdrawChars(\\t\\r\\nchar[], int off, int len, int x, int y\\t)\";\n+            g.drawChars(s.toCharArray(), 0, s.length(), ix, iy);\n+            if (!textFont.isTransformed()) {\n+                g.drawLine(ix, iy+1, ix+fm.stringWidth(s), iy+1);\n+            }\n@@ -347,7 +347,7 @@\n-        iy += LS;\n-        s = \"drawBytes(byte[], int off, int len, int x, int y)\";\n-        byte data[] = new byte[s.length()];\n-        for (int i = 0; i < data.length; i++) {\n-            data[i] = (byte) s.charAt(i);\n-        }\n-        g.drawBytes(data, 0, data.length, ix, iy);\n+            iy += LS;\n+            s = \"drawBytes(byte[], int off, int len, int x, int y)\";\n+            byte[] data = new byte[s.length()];\n+            for (int i = 0; i < data.length; i++) {\n+                data[i] = (byte) s.charAt(i);\n+            }\n+            g.drawBytes(data, 0, data.length, ix, iy);\n@@ -355,2 +355,2 @@\n-        Font f = g2d.getFont();\n-        FontRenderContext frc = g2d.getFontRenderContext();\n+            Font f = g2d.getFont();\n+            FontRenderContext frc = g2d.getFontRenderContext();\n@@ -358,6 +358,6 @@\n-        iy += LS;\n-        s = \"drawString(String s, float x, float y)\";\n-        g2d.drawString(s, (float) ix, (float) iy);\n-        if (!textFont.isTransformed()) {\n-            g.drawLine(ix, iy+1, ix+fm.stringWidth(s), iy+1);\n-        }\n+            iy += LS;\n+            s = \"drawString(String s, float x, float y)\";\n+            g2d.drawString(s, (float) ix, (float) iy);\n+            if (!textFont.isTransformed()) {\n+                g.drawLine(ix, iy+1, ix+fm.stringWidth(s), iy+1);\n+            }\n@@ -365,13 +365,13 @@\n-        iy += LS;\n-        s = \"drawString(AttributedCharacterIterator iterator, \"+\n-            \"float x, float y)\";\n-        g2d.drawString(getIterator(s), (float) ix, (float) iy);\n-\n-        iy += LS;\n-        s = \"drawGlyphVector(GlyphVector g, float x, float y)\";\n-        GlyphVector gv = f.createGlyphVector(frc, s);\n-        g2d.drawGlyphVector(gv, ix, iy);\n-        Point2D adv = gv.getGlyphPosition(gv.getNumGlyphs());\n-        if (!textFont.isTransformed()) {\n-            g.drawLine(ix, iy+1, ix+(int)adv.getX(), iy+1);\n-        }\n+            iy += LS;\n+            s = \"drawString(AttributedCharacterIterator iterator, \"+\n+                \"float x, float y)\";\n+            g2d.drawString(getIterator(s), (float) ix, (float) iy);\n+\n+            iy += LS;\n+            s = \"drawGlyphVector(GlyphVector g, float x, float y)\";\n+            GlyphVector gv = f.createGlyphVector(frc, s);\n+            g2d.drawGlyphVector(gv, ix, iy);\n+            Point2D adv = gv.getGlyphPosition(gv.getNumGlyphs());\n+            if (!textFont.isTransformed()) {\n+                g.drawLine(ix, iy+1, ix+(int)adv.getX(), iy+1);\n+            }\n@@ -379,14 +379,21 @@\n-        iy += LS;\n-        s = \"GlyphVector with position adjustments\";\n-\n-        gv = f.createGlyphVector(frc, s);\n-        int ng = gv.getNumGlyphs();\n-        adv = gv.getGlyphPosition(ng);\n-        for (int i=0; i<ng; i++) {\n-            Point2D gp = gv.getGlyphPosition(i);\n-            double gx = gp.getX();\n-            double gy = gp.getY();\n-            if (i % 2 == 0) {\n-                gy+=5;\n-            } else {\n-                gy-=5;\n+            iy += LS;\n+            s = \"GlyphVector with position adjustments\";\n+\n+            gv = f.createGlyphVector(frc, s);\n+            int ng = gv.getNumGlyphs();\n+            adv = gv.getGlyphPosition(ng);\n+            for (int i=0; i<ng; i++) {\n+                Point2D gp = gv.getGlyphPosition(i);\n+                double gx = gp.getX();\n+                double gy = gp.getY();\n+                if (i % 2 == 0) {\n+                    gy+=5;\n+                } else {\n+                    gy-=5;\n+                }\n+                gp.setLocation(gx, gy);\n+                gv.setGlyphPosition(i, gp);\n+            }\n+            g2d.drawGlyphVector(gv, ix, iy);\n+            if (!textFont.isTransformed()) {\n+                g.drawLine(ix, iy+1, ix+(int)adv.getX(), iy+1);\n@@ -394,7 +401,0 @@\n-            gp.setLocation(gx, gy);\n-            gv.setGlyphPosition(i, gp);\n-        }\n-        g2d.drawGlyphVector(gv, ix, iy);\n-        if (!textFont.isTransformed()) {\n-            g.drawLine(ix, iy+1, ix+(int)adv.getX(), iy+1);\n-        }\n@@ -402,6 +402,6 @@\n-        iy +=LS;\n-        s = \"drawString: \\u0924\\u094d\\u0930 \\u0915\\u0948\\u0930\\u0947 End.\";\n-        g.drawString(s, ix, iy);\n-        if (!textFont.isTransformed()) {\n-            g.drawLine(ix, iy+1, ix+fm.stringWidth(s), iy+1);\n-        }\n+            iy +=LS;\n+            s = \"drawString: \\u0924\\u094d\\u0930 \\u0915\\u0948\\u0930\\u0947 End.\";\n+            g.drawString(s, ix, iy);\n+            if (!textFont.isTransformed()) {\n+                g.drawLine(ix, iy+1, ix+fm.stringWidth(s), iy+1);\n+            }\n@@ -409,4 +409,4 @@\n-        iy += LS;\n-        s = \"TextLayout 1: \\u0924\\u094d\\u0930 \\u0915\\u0948\\u0930\\u0947 End.\";\n-        TextLayout tl = new TextLayout(s, new HashMap(), frc);\n-        tl.draw(g2d,  ix, iy);\n+            iy += LS;\n+            s = \"TextLayout 1: \\u0924\\u094d\\u0930 \\u0915\\u0948\\u0930\\u0947 End.\";\n+            TextLayout tl = new TextLayout(s, new HashMap<>(), frc);\n+            tl.draw(g2d,  ix, iy);\n@@ -414,4 +414,5 @@\n-        iy += LS;\n-        s = \"TextLayout 2: \\u0924\\u094d\\u0930 \\u0915\\u0948\\u0930\\u0947 End.\";\n-        tl = new TextLayout(s, f, frc);\n-        tl.draw(g2d,  ix, iy);\n+            iy += LS;\n+            s = \"TextLayout 2: \\u0924\\u094d\\u0930 \\u0915\\u0948\\u0930\\u0947 End.\";\n+            tl = new TextLayout(s, f, frc);\n+            tl.draw(g2d,  ix, iy);\n+        }\n@@ -419,1 +420,0 @@\n-}\n@@ -421,1 +421,1 @@\n-class PrintJAText extends PrintTextTest {\n+    private static class PrintJapaneseText extends PrintText {\n@@ -423,4 +423,3 @@\n-    public PrintJAText(String page, Font font, AffineTransform gxTx,\n-                         boolean fm) {\n-        super(page, font, gxTx, fm);\n-    }\n+        public PrintJapaneseText(String page, Font font, AffineTransform gxTx, boolean fm, int size) {\n+            super(page, font, gxTx, fm, size);\n+        }\n@@ -428,3 +427,3 @@\n-    private static final String TEXT =\n-        \"\\u3042\\u3044\\u3046\\u3048\\u304a\\u30a4\\u30ed\\u30cf\" +\n-        \"\\u30cb\\u30db\\u30d8\\u30c8\\u4e00\\u4e01\\u4e02\\u4e05\\uff08\";\n+        private static final String TEXT =\n+            \"\\u3042\\u3044\\u3046\\u3048\\u304a\\u30a4\\u30ed\\u30cf\" +\n+            \"\\u30cb\\u30db\\u30d8\\u30c8\\u4e00\\u4e01\\u4e02\\u4e05\\uff08\";\n@@ -432,1 +431,1 @@\n-    public void paint(Graphics g) {\n+        public void paint(Graphics g) {\n@@ -434,3 +433,2 @@\n-        \/* fill with white before any transformation is applied *\/\n-        g.setColor(Color.white);\n-        g.fillRect(0, 0, getSize().width, getSize().height);\n+            g.setColor(Color.WHITE);\n+            g.fillRect(0, 0, getSize().width, getSize().height);\n@@ -438,8 +436,8 @@\n-        Graphics2D g2d = (Graphics2D) g;\n-        if (gxTx != null) {\n-            g2d.transform(gxTx);\n-        }\n-        if (useFM) {\n-            g2d.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS,\n-                                 RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n-        }\n+            Graphics2D g2d = (Graphics2D) g;\n+            if (gxTx != null) {\n+                g2d.transform(gxTx);\n+            }\n+            if (useFM) {\n+                g2d.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS,\n+                                     RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n+            }\n@@ -447,14 +445,15 @@\n-        String text = TEXT + TEXT + TEXT;\n-        g.setColor(Color.black);\n-        int y = 20;\n-        float origSize = 7f;\n-        for (int i=0;i<11;i++) {\n-            float size = origSize+(i*0.1f);\n-            g2d.translate(0, size+6);\n-            Font f = textFont.deriveFont(size);\n-            g2d.setFont(f);\n-            FontMetrics fontMetrics = g2d.getFontMetrics();\n-            int stringWidth = fontMetrics.stringWidth(text);\n-            g.drawLine(0, y+1, stringWidth, y+1);\n-            g.drawString(text, 0, y);\n-            y +=10;\n+            String text = TEXT + TEXT + TEXT;\n+            g.setColor(Color.BLACK);\n+            int y = 20;\n+            float origSize = 7f;\n+            for (int i=0;i<11;i++) {\n+                float size = origSize+(i*0.1f);\n+                g2d.translate(0, size+6);\n+                Font f = textFont.deriveFont(size);\n+                g2d.setFont(f);\n+                FontMetrics fontMetrics = g2d.getFontMetrics();\n+                int stringWidth = fontMetrics.stringWidth(text);\n+                g.drawLine(0, y+1, stringWidth, y+1);\n+                g.drawString(text, 0, y);\n+                y +=10;\n+            }\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PrintTextTest.java","additions":229,"deletions":230,"binary":false,"changes":459,"status":"modified"}]}