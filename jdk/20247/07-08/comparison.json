{"files":[{"patch":"@@ -27,2 +27,0 @@\n-import java.lang.classfile.attribute.AnnotationDefaultAttribute;\n-import java.lang.classfile.attribute.CodeAttribute;\n@@ -31,1 +29,0 @@\n-import java.lang.classfile.attribute.RuntimeInvisibleTypeAnnotationsAttribute;\n@@ -34,1 +31,0 @@\n-import java.lang.classfile.attribute.RuntimeVisibleTypeAnnotationsAttribute;\n@@ -44,2 +40,3 @@\n- * Models an {@code annotation} structure ({@jvms 4.7.16}) or part of a {@code\n- * type_annotation} structure ({@jvms 4.7.20}).\n+ * Models an {@code annotation} structure (JVMS {@jvms 4.7.16}) or part of a {@code\n+ * type_annotation} structure (JVMS {@jvms 4.7.20}). This model indicates the\n+ * interface of the annotation and a set of element-value pairs.\n@@ -47,51 +44,2 @@\n- * Each {@code annotation} structure denotes an annotation that applies to a\n- * construct in Java source code ({@jls 9.7.4}).\n- * Similarly, each {@code type_annotation} structure denotes an annotation\n- * that applies to a type in Java source code.\n- * In either case, the structure indicates the interface of the annotation\n- * and a set of element-value pairs.\n- * <p>\n- * In an annotation in Java source code, elements in the annotation interface\n- * with default values may not be represented unless an explicit value is provided.\n- * ({@jls 9.6.2}) The default value is derived from the {@link AnnotationDefaultAttribute\n- * AnnotationDefault} attribute on the method representing the annotation\n- * interface element, in the class file representing the annotation interface.\n- * <p id=\"repeatable\">\n- * Multiple annotations of the same interface <i>A<\/i> in Java source code\n- * ({@jls 9.7.5}) are represented by the {@linkplain AnnotationValue.OfAnnotation\n- * annotation-valued} array elements of the {@linkplain AnnotationValue.OfArray\n- * array-valued} element named {@code value} of a container annotation, whose\n- * interface is the containing annotation interface of <i>A<\/i>. ({@jls 9.6.3})\n- * <p>\n- * The location in the class file of an {@code annotation} structure or a\n- * {@code type_annotation} structure,\n- * respectively, indicates the source code construct or type, respectively, to\n- * which the annotation applies.\n- * Accordingly, an {@code Annotation} may represent:\n- * <ul>\n- * <li>A <i>declaration annotation<\/i> on a class, field, method, or record\n- * component declaration, when an {@code annotation} structure appears in the\n- * {@link RuntimeVisibleAnnotationsAttribute} or\n- * {@link RuntimeInvisibleAnnotationsAttribute} of a class, field, method, or\n- * record component.\n- * <li>A <i>declaration annotation<\/i> on a method parameter declaration, when\n- * an {@code annotation} structure appears in the\n- * {@link RuntimeVisibleParameterAnnotationsAttribute} or\n- * {@link RuntimeInvisibleParameterAnnotationsAttribute} of a method.\n- * <li>The {@linkplain AnnotationValue.OfAnnotation element value} of an\n- * annotation, where the type of the element value is itself an annotation\n- * interface. In this case, the {@code annotation} structure appears as the\n- * {@code annotation_value} item of an {@code element_value} structure\n- * ({@jvms 4.7.16.1}).<br>\n- * If this annotation is of a {@linkplain ##repeatable repeatable} annotation\n- * interface <i>A<\/i>, is an array element of an array-valued element named\n- * {@code value} in a container annotation, and the interface of the container\n- * annotation is the containing annotation interface <i>AC<\/i> of <i>A<\/i>,\n- * this annotation represents a base annotation of type <i>A<\/i>, which applies\n- * to the same source code construct or type as the container annotation of\n- * type <i>AC<\/i>.\n- * <li>A <i>type annotation<\/i>, when a {@code type_annotation} structure\n- * appears in the {@link RuntimeVisibleTypeAnnotationsAttribute}\n- * or {@link RuntimeInvisibleTypeAnnotationsAttribute} of a class, field,\n- * method, {@link CodeAttribute}, or record component.\n- * <\/ul>\n+ * This model can reconstruct an annotation, given the location of the modeled structure\n+ * in the class file and the definition of the annotation interface.\n@@ -102,0 +50,7 @@\n+ * @apiNote\n+ * For Java programs, the location of the modeled structure indicates the source code\n+ * element or type (JLS {@jls 9.7.4}) on which the reconstructed annotation appears,\n+ * and the annotation interface definition determines whether the reconstructed annotation has\n+ * elements with default values (JLS {@jls 9.6.2}), and whether the reconstructed annotation\n+ * is a container annotation for multiple annotations (JLS {@jls 9.7.5}).\n+ *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/Annotation.java","additions":12,"deletions":57,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * table in the {@code annotation} structure defined in\n+ * table in the {@code annotation} structure defined in JVMS\n@@ -38,1 +38,1 @@\n- * in {@jvms 4.7.20}.\n+ * in JVMS {@jvms 4.7.20}.\n@@ -57,5 +57,3 @@\n-     * single-element annotation interface is {@code value}. ({@jls 9.6.1})\n-     * A single-element annotation ({@jls 9.7.3}) declares the element value\n-     * for the {@code value} element. The single element of a containing\n-     * annotation interface that holds {@linkplain Annotation##repeatable\n-     * multiple} base annotations is also named {@code value}. ({@jls 9.6.3})\n+     * single-element annotation interface is {@code value}. (JLS {@jls 9.6.1})\n+     * This is the case for single-element annotations (JLS {@jls 9.7.3}) and\n+     * container annotations for multiple annotations (JLS {@jls 9.6.3}).\n@@ -71,1 +69,1 @@\n-     * {@return an annotation element-value pair}\n+     * {@return an element-value pair}\n@@ -81,1 +79,1 @@\n-     * {@return an annotation element-value pair}\n+     * {@return an element-value pair}\n@@ -91,1 +89,1 @@\n-     * {@return an annotation element-value pair for a class-valued annotation}\n+     * {@return an element-value pair for a class-valued element}\n@@ -94,0 +92,1 @@\n+     * @see AnnotationValue#ofClass(ClassDesc) AnnotationValue::ofClass\n@@ -101,1 +100,1 @@\n-     * {@return an annotation element-value pair for a string-valued annotation}\n+     * {@return an element-value pair for a string-valued element}\n@@ -104,0 +103,1 @@\n+     * @see AnnotationValue#ofString(String) AnnotationValue::ofString\n@@ -111,1 +111,1 @@\n-     * {@return an annotation element-value pair for a long-valued annotation}\n+     * {@return an element-value pair for a long-valued element}\n@@ -114,0 +114,1 @@\n+     * @see AnnotationValue#ofLong(long) AnnotationValue::ofLong\n@@ -121,1 +122,1 @@\n-     * {@return an annotation element-value pair for an int-valued annotation}\n+     * {@return an element-value pair for an int-valued element}\n@@ -124,0 +125,1 @@\n+     * @see AnnotationValue#ofInt(int) AnnotationValue::ofInt\n@@ -131,1 +133,1 @@\n-     * {@return an annotation element-value pair for a char-valued annotation}\n+     * {@return an element-value pair for a char-valued element}\n@@ -134,0 +136,1 @@\n+     * @see AnnotationValue#ofChar(char) AnnotationValue::ofChar\n@@ -141,1 +144,1 @@\n-     * {@return an annotation element-value pair for a short-valued annotation}\n+     * {@return an element-value pair for a short-valued element}\n@@ -144,0 +147,1 @@\n+     * @see AnnotationValue#ofShort(short) AnnotationValue::ofShort\n@@ -151,1 +155,1 @@\n-     * {@return an annotation element-value pair for a byte-valued annotation}\n+     * {@return an element-value pair for a byte-valued element}\n@@ -154,0 +158,1 @@\n+     * @see AnnotationValue#ofByte(byte) AnnotationValue::ofByte\n@@ -156,1 +161,1 @@\n-                                      byte value) {\n+                                    byte value) {\n@@ -161,1 +166,1 @@\n-     * {@return an annotation element-value pair for a boolean-valued annotation}\n+     * {@return an element-value pair for a boolean-valued element}\n@@ -164,0 +169,1 @@\n+     * @see AnnotationValue#ofBoolean(boolean) AnnotationValue::ofBoolean\n@@ -166,1 +172,1 @@\n-                                      boolean value) {\n+                                       boolean value) {\n@@ -171,1 +177,1 @@\n-     * {@return an annotation element-value pair for a double-valued annotation}\n+     * {@return an element-value pair for a double-valued element}\n@@ -174,0 +180,1 @@\n+     * @see AnnotationValue#ofDouble(double) AnnotationValue::ofDouble\n@@ -181,1 +188,1 @@\n-     * {@return an annotation element-value pair for a float-valued annotation}\n+     * {@return an element-value pair for a float-valued element}\n@@ -184,0 +191,1 @@\n+     * @see AnnotationValue#ofFloat(float) AnnotationValue::ofFloat\n@@ -191,1 +199,1 @@\n-     * {@return an annotation element-value pair for an annotation-valued annotation}\n+     * {@return an element-value pair for an annotation-valued element}\n@@ -194,0 +202,1 @@\n+     * @see AnnotationValue#ofAnnotation AnnotationValue::ofAnnotation\n@@ -201,1 +210,1 @@\n-     * {@return an annotation element-value pair for an array-valued annotation}\n+     * {@return an element-value pair for an array-valued element}\n@@ -204,0 +213,1 @@\n+     * @see AnnotationValue#ofArray(AnnotationValue...) AnnotationValue::ofArray\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/AnnotationElement.java","additions":33,"deletions":23,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -44,2 +44,2 @@\n- * Models the {@code element_value} structure, or the value of an element-value\n- * pair of an annotation, as defined in {@jvms 4.7.16.1}.\n+ * Models an {@code element_value} structure, or a value of an element-value\n+ * pair of an annotation, as defined in JVMS {@jvms 4.7.16.1}.\n@@ -60,2 +60,2 @@\n-     * Models an annotation-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_ANNOTATION}.\n+     * Models an annotation value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_ANNOTATION}.\n@@ -73,2 +73,2 @@\n-     * Models an array-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_ARRAY}.\n+     * Models an array value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_ARRAY}.\n@@ -86,1 +86,3 @@\n-         * which must not be an array type. ({@jls 9.6.1})\n+         * which must not be an array type. ({@jls 9.6.1}) If such elements are\n+         * annotations, they have the same annotation interface; if such elements\n+         * are enum, they belong to the same enum class.\n@@ -92,1 +94,1 @@\n-     * Models a constant-valued element.\n+     * Models a constant value of an element-value pair.\n@@ -130,2 +132,2 @@\n-     * Models a string-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_STRING}.\n+     * Models a string value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_STRING}.\n@@ -158,2 +160,2 @@\n-     * Models a double-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_DOUBLE}.\n+     * Models a double value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_DOUBLE}.\n@@ -186,2 +188,2 @@\n-     * Models a float-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_FLOAT}.\n+     * Models a float value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_FLOAT}.\n@@ -214,2 +216,2 @@\n-     * Models a long-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_LONG}.\n+     * Models a long value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_LONG}.\n@@ -242,2 +244,2 @@\n-     * Models an int-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_INT}.\n+     * Models an int value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_INT}.\n@@ -270,2 +272,2 @@\n-     * Models a short-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_SHORT}.\n+     * Models a short value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_SHORT}.\n@@ -301,2 +303,2 @@\n-     * Models a char-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_CHAR}.\n+     * Models a char value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_CHAR}.\n@@ -332,2 +334,2 @@\n-     * Models a byte-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_BYTE}.\n+     * Models a byte value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_BYTE}.\n@@ -363,2 +365,2 @@\n-     * Models a boolean-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_BOOLEAN}.\n+     * Models a boolean value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_BOOLEAN}.\n@@ -394,2 +396,2 @@\n-     * Models a class-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_CLASS}.\n+     * Models a class value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_CLASS}.\n@@ -412,2 +414,2 @@\n-     * Models an enum-valued element.\n-     * The {@linkplain #tag tag} of this element is {@value ClassFile#AEV_ENUM}.\n+     * Models an enum value of an element-value pair.\n+     * The {@linkplain #tag tag} of this value is {@value ClassFile#AEV_ENUM}.\n@@ -433,1 +435,2 @@\n-     * {@return the tag character for this type as per {@jvms 4.7.16.1}}\n+     * {@return the tag character for this value as per JVMS {@jvms 4.7.16.1}}\n+     * The tag characters have a one-to-one mapping to the types of annotation element values.\n@@ -438,1 +441,1 @@\n-     * {@return an annotation element for a enum-valued element}\n+     * {@return an enum value for an element-value pair}\n@@ -448,1 +451,1 @@\n-     * {@return an annotation element for a enum-valued element}\n+     * {@return an enum value for an element-value pair}\n@@ -458,1 +461,1 @@\n-     * {@return an annotation element for a class-valued element}\n+     * {@return a class value for an element-value pair}\n@@ -466,1 +469,1 @@\n-     * {@return an annotation element for a class-valued element}\n+     * {@return a class value for an element-value pair}\n@@ -474,1 +477,1 @@\n-     * {@return an annotation element for a string-valued element}\n+     * {@return a string value for an element-value pair}\n@@ -482,1 +485,1 @@\n-     * {@return an annotation element for a string-valued element}\n+     * {@return a string value for an element-value pair}\n@@ -490,1 +493,1 @@\n-     * {@return an annotation element for a double-valued element}\n+     * {@return a double value for an element-value pair}\n@@ -498,1 +501,1 @@\n-     * {@return an annotation element for a double-valued element}\n+     * {@return a double value for an element-value pair}\n@@ -506,1 +509,1 @@\n-     * {@return an annotation element for a float-valued element}\n+     * {@return a float value for an element-value pair}\n@@ -514,1 +517,1 @@\n-     * {@return an annotation element for a float-valued element}\n+     * {@return a float value for an element-value pair}\n@@ -522,1 +525,1 @@\n-     * {@return an annotation element for a long-valued element}\n+     * {@return a long value for an element-value pair}\n@@ -530,1 +533,1 @@\n-     * {@return an annotation element for a long-valued element}\n+     * {@return a long value for an element-value pair}\n@@ -538,1 +541,1 @@\n-     * {@return an annotation element for an int-valued element}\n+     * {@return an int value for an element-value pair}\n@@ -546,1 +549,1 @@\n-     * {@return an annotation element for an int-valued element}\n+     * {@return an int value for an element-value pair}\n@@ -554,1 +557,1 @@\n-     * {@return an annotation element for a short-valued element}\n+     * {@return a short value for an element-value pair}\n@@ -562,1 +565,1 @@\n-     * {@return an annotation element for a short-valued element}\n+     * {@return a short value for an element-value pair}\n@@ -570,1 +573,1 @@\n-     * {@return an annotation element for a char-valued element}\n+     * {@return a char value for an element-value pair}\n@@ -578,1 +581,1 @@\n-     * {@return an annotation element for a char-valued element}\n+     * {@return a char value for an element-value pair}\n@@ -586,1 +589,1 @@\n-     * {@return an annotation element for a byte-valued element}\n+     * {@return a byte value for an element-value pair}\n@@ -594,1 +597,1 @@\n-     * {@return an annotation element for a byte-valued element}\n+     * {@return a byte value for an element-value pair}\n@@ -602,1 +605,1 @@\n-     * {@return an annotation element for a boolean-valued element}\n+     * {@return a boolean value for an element-value pair}\n@@ -610,1 +613,1 @@\n-     * {@return an annotation element for a boolean-valued element}\n+     * {@return a boolean value for an element-value pair}\n@@ -619,1 +622,1 @@\n-     * {@return an annotation element for an annotation-valued element}\n+     * {@return an annotation value for an element-value pair}\n@@ -627,1 +630,6 @@\n-     * {@return an annotation element for an array-valued element}\n+     * {@return an array value for an element-value pair}\n+     *\n+     * @apiNote\n+     * See {@link AnnotationValue.OfArray#values() values()} for conventions\n+     * on array values derived from Java source code.\n+     *\n@@ -635,1 +643,6 @@\n-     * {@return an annotation element for an array-valued element}\n+     * {@return an array value for an element-value pair}\n+     *\n+     * @apiNote\n+     * See {@link AnnotationValue.OfArray#values() values()} for conventions\n+     * on array values derived from Java source code.\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/AnnotationValue.java","additions":69,"deletions":56,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -60,1 +60,4 @@\n- * Models a {@code type_annotation} structure ({@jvms 4.7.20}).\n+ * Models a {@code type_annotation} structure (JVMS {@jvms 4.7.20}). This model\n+ * indicates the annotated type within a declaration or expression and the part\n+ * of the indicated type that is annotated, in addition to what is {@linkplain\n+ * #annotation() available} in an {@code Annotation}.\n@@ -62,24 +65,3 @@\n- * Each {@code type_annotation} structure denotes an annotation that applies\n- * to a type in Java source code ({@jls 9.7.4}). The structure indicates the\n- * interface of the annotation and a set of element-value pairs; this\n- * information is exposed by the {@link #annotation() annotation()} method.\n- * <p>\n- * Multiple annotations of the same interface <i>A<\/i> in Java source code\n- * ({@jls 9.7.5}) are represented by the {@linkplain AnnotationValue.OfAnnotation\n- * annotation-valued} array elements of the {@linkplain AnnotationValue.OfArray\n- * array-valued} element named {@code value} of a container annotation of the\n- * containing annotation interface of <i>A<\/i>. ({@jls 9.6.3})\n- * <p>\n- * The {@code type_annotation} structure is a superset of the {@code annotation}\n- * structure ({@jvms 4.7.16}),\n- * so a {@code TypeAnnotation} exposes more information about its location than\n- * an {@code Annotation}.\n- * In particular, the {@code type_annotation} structure indicates:\n- * <ul>\n- * <li>which of the <i>n<\/i> types in a declaration or expression is the specific\n- * type to which the annotation applies. This information is exposed by\n- * {@link #targetInfo() targetInfo()}.\n- * <li>whether the annotation applies to a type or to part of a type (such as a\n- * type argument in a parameterized type). This information is exposed by {@link\n- * #targetPath() targetPath()}.\n- * <\/ul>\n+ * This model can reconstruct an annotation on a type or a part of a type, given\n+ * the location of the {@code type_annotation} structure in the class file and\n+ * the definition of the annotation interface.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/TypeAnnotation.java","additions":7,"deletions":25,"binary":false,"changes":32,"status":"modified"}]}