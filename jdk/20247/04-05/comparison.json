{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import java.lang.classfile.attribute.CodeAttribute;\n@@ -29,0 +30,1 @@\n+import java.lang.classfile.attribute.RuntimeInvisibleTypeAnnotationsAttribute;\n@@ -31,0 +33,1 @@\n+import java.lang.classfile.attribute.RuntimeVisibleTypeAnnotationsAttribute;\n@@ -40,13 +43,34 @@\n- * Models an {@code annotation} structure, as defined in {@jvms 4.7.16}.\n- *\n- * <p>This structure represents, in the Java Programming Language ({@jls 9.7.4}):\n- * <ul><li>a <i>declaration annotation<\/i>, in\n- * {@link RuntimeVisibleAnnotationsAttribute} or {@link\n- * RuntimeInvisibleAnnotationsAttribute};\n- * <li>a <i>declaration annotation<\/i> on\n- * a method parameter, in {@link RuntimeVisibleParameterAnnotationsAttribute}\n- * or {@link RuntimeInvisibleParameterAnnotationsAttribute};\n- * <li>a <i>type annotation<\/i>, as {@linkplain TypeAnnotation#annotation part of}\n- * {@link TypeAnnotation};\n- * <li>an annotation {@linkplain AnnotationValue.OfAnnotation element value}\n- * whose element type is an annotation type. ({@jls 9.7.1})\n+ * Models an {@code annotation} structure ({@jvms 4.7.16}) or part of a {@code\n+ * type_annotation} structure ({@jvms 4.7.20}).\n+ * <p>\n+ * Each {@code annotation} structure denotes an annotation that applies to a\n+ * construct in Java source code ({@jls 9.7.4}).\n+ * Similarly, each {@code type_annotation} structure denotes an annotation\n+ * that applies to a type in Java source code.\n+ * In either case, the structure indicates the interface of the annotation\n+ * and a set of element-value pairs.\n+ * <p>\n+ * The location in the class file of an {@code annotation} structure or a\n+ * {@code type_annotation} structure,\n+ * respectively, indicates the source code construct or type, respectively, to\n+ * which the annotation applies.\n+ * Accordingly, an {@code Annotation} may represent:\n+ * <ul>\n+ * <li>A <i>declaration annotation<\/i> on a class, field, method, or record\n+ * component declaration, when an {@code annotation} structure appears in the\n+ * {@link RuntimeVisibleAnnotationsAttribute} or\n+ * {@link RuntimeInvisibleAnnotationsAttribute} of a class, field, method, or\n+ * record component.\n+ * <li>A <i>declaration annotation<\/i> on a method parameter declaration, when\n+ * an {@code annotation} structure appears in the\n+ * {@link RuntimeVisibleParameterAnnotationsAttribute} or\n+ * {@link RuntimeInvisibleParameterAnnotationsAttribute} of a method.\n+ * <li>The {@linkplain AnnotationValue.OfAnnotation element value} of an\n+ * annotation, where the type of the element value is itself an annotation\n+ * interface. In this case, the {@code annotation} structure appears as the\n+ * {@code annotation_value} item of an {@code element_value} structure\n+ * ({@jvms 4.7.16.1}).\n+ * <li>A <i>type annotation<\/i>, when a {@code type_annotation} structure\n+ * appears in the {@link RuntimeVisibleTypeAnnotationsAttribute}\n+ * or {@link RuntimeInvisibleTypeAnnotationsAttribute} of a class, field,\n+ * method, {@link CodeAttribute}, or record component.\n@@ -54,0 +78,3 @@\n+ * <p>\n+ * Two {@code Annotation} objects should be compared using the {@link\n+ * Object#equals(Object) equals} method.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/Annotation.java","additions":40,"deletions":13,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -38,0 +38,3 @@\n+ * <p>\n+ * Two {@code AnnotationElement} objects should be compared using the\n+ * {@link Object#equals(Object) equals} method.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/AnnotationElement.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,0 +45,3 @@\n+ * <p>\n+ * Two {@code AnnotationValue} objects should be compared using the {@link\n+ * Object#equals(Object) equals} method.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/AnnotationValue.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -60,5 +60,23 @@\n- * Models a {@code type_annotation} structure, as defined in {@jvms 4.7.20}.\n- * Each instance of this structure corresponds to a <i>{@linkplain #annotation()\n- * type annotation}<\/i> ({@jls 9.7.4}) in the Java Programming Language, and\n- * additionally encodes information to locate {@linkplain #targetInfo the type}\n- * and {@linkplain #targetPath the annotated part} of the type.\n+ * Models a {@code type_annotation} structure ({@jvms 4.7.20}).\n+ * <p>\n+ * Each {@code type_annotation} structure denotes an annotation that applies\n+ * to a type in Java source code ({@jls 9.7.4}). The structure indicates the\n+ * interface of the annotation and a set of element-value pairs; this\n+ * information is exposed by the {@link #annotation() annotation()} method.\n+ * <p>\n+ * The {@code type_annotation} structure is a superset of the {@code annotation}\n+ * structure ({@jvms 4.7.16}),\n+ * so a {@code TypeAnnotation} exposes more information about its location than\n+ * an {@code Annotation}.\n+ * In particular, the {@code type_annotation} structure indicates:\n+ * <ul>\n+ * <li>which of the <i>n<\/i> types in a declaration or expression is the specific\n+ * type to which the annotation applies. This information is exposed by\n+ * {@link #targetInfo() targetInfo()}.\n+ * <li>whether the annotation applies to a type or to part of a type (such as a\n+ * type argument in a parameterized type). This information is exposed by {@link\n+ * #targetPath() targetPath()}.\n+ * <\/ul>\n+ * <p>\n+ * Two {@code TypeAnnotation} objects should be compared using the {@link\n+ * Object#equals(Object) equals} method.\n@@ -184,3 +202,4 @@\n-     * {@return the annotation applied to the part given by {@link #targetPath()}}\n-     * This models items in the {@code type_annotation} structure that are same as those\n-     * in the {@code annotation} structure.\n+     * {@return the annotation applied to the part indicated by {@link #targetPath()}}\n+     * This models the interface of the annotation and the set of element-value pairs,\n+     * the subset of the {@code type_annotation} structure that is identical to the\n+     * {@code annotation} structure.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/classfile\/TypeAnnotation.java","additions":27,"deletions":8,"binary":false,"changes":35,"status":"modified"}]}