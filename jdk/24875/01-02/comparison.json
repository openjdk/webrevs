{"files":[{"patch":"@@ -44,1 +44,2 @@\n-    private final SurfaceManager.ProxyCache surfaceDataProxyCache = new SurfaceManager.ProxyCache();\n+    private final SurfaceManager.ProxyCache surfaceDataProxyCache =\n+            new SurfaceManager.ProxyCache();\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/awt\/CGraphicsConfig.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -379,1 +379,2 @@\n-    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image, Object context) {\n+    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image,\n+                                                        Object context) {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLGraphicsConfig.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -393,1 +393,2 @@\n-    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image, Object context) {\n+    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image,\n+                                                        Object context) {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/opengl\/CGLGraphicsConfig.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -160,5 +160,7 @@\n-    private VolatileSurfaceManager createSurfaceManager(Object context,\n-                                                        ImageCapabilities caps) {\n-        \/\/ GraphicsConfig may provide some specific surface manager implementation.\n-        \/\/ In case it doesn't, or we were specifically requested to use an unaccelerated\n-        \/\/ surface, fall back to the buffered image surface manager.\n+    private VolatileSurfaceManager createSurfaceManager(\n+            Object context, ImageCapabilities caps) {\n+        \/\/ GraphicsConfig may provide some specific surface manager\n+        \/\/ implementation.\n+        \/\/ In case it doesn't, or we were specifically requested to use\n+        \/\/ an unaccelerated surface, fall back to the buffered image\n+        \/\/ surface manager.\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/SunVolatileImage.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -194,3 +194,4 @@\n-         * compatible SunVolatileImage. An optional context Object can be supplied\n-         * as a way for the caller to pass pipeline-specific context data to\n-         * the VolatileSurfaceManager (such as a backbuffer handle, for example).\n+         * compatible SunVolatileImage.\n+         * An optional context Object can be supplied as a way for the caller\n+         * to pass pipeline-specific context data to the VolatileSurfaceManager\n+         * (such as a backbuffer handle, for example).\n@@ -198,1 +199,2 @@\n-        VolatileSurfaceManager createVolatileManager(SunVolatileImage image, Object context);\n+        VolatileSurfaceManager createVolatileManager(SunVolatileImage image,\n+                                                     Object context);\n@@ -219,1 +221,2 @@\n-        private final Map<SurfaceManager, SurfaceDataProxy> map = Collections.synchronizedMap(new WeakHashMap<>());\n+        private final Map<SurfaceManager, SurfaceDataProxy> map =\n+                Collections.synchronizedMap(new WeakHashMap<>());\n@@ -270,1 +273,2 @@\n-            Iterator<WeakReference<SurfaceDataProxy>> i = weakCache.values().iterator();\n+            Iterator<WeakReference<SurfaceDataProxy>> i =\n+                    weakCache.values().iterator();\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/SurfaceManager.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -507,1 +507,2 @@\n-    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image, Object context) {\n+    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image,\n+                                                        Object context) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11GraphicsConfig.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -65,1 +65,2 @@\n-    Map<SurfaceType, SurfaceManager.ProxyCache> x11ProxyCacheMap = Collections.synchronizedMap(new HashMap<>());\n+    Map<SurfaceType, SurfaceManager.ProxyCache> x11ProxyCacheMap =\n+            Collections.synchronizedMap(new HashMap<>());\n@@ -98,1 +99,2 @@\n-        return x11ProxyCacheMap.computeIfAbsent(st, unused -> new SurfaceManager.ProxyCache());\n+        return x11ProxyCacheMap.computeIfAbsent(st,\n+                unused -> new SurfaceManager.ProxyCache());\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11GraphicsDevice.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -76,1 +76,2 @@\n-    private final SurfaceManager.ProxyCache surfaceDataProxyCache = new SurfaceManager.ProxyCache();\n+    private final SurfaceManager.ProxyCache surfaceDataProxyCache =\n+            new SurfaceManager.ProxyCache();\n@@ -419,1 +420,2 @@\n-    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image, Object context) {\n+    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image,\n+                                                        Object context) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/java2d\/opengl\/GLXGraphicsConfig.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,2 +38,3 @@\n-        SurfaceManager.ProxiedGraphicsConfig, SurfaceManager.Factory {\n-    private final SurfaceManager.ProxyCache surfaceDataProxyCache = new SurfaceManager.ProxyCache();\n+        SurfaceManager.ProxiedGraphicsConfig {\n+    private final SurfaceManager.ProxyCache surfaceDataProxyCache =\n+            new SurfaceManager.ProxyCache();\n@@ -66,1 +67,2 @@\n-    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image, Object context) {\n+    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image,\n+                                                        Object context) {\n","filename":"src\/java.desktop\/unix\/classes\/sun\/java2d\/xr\/XRGraphicsConfig.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -92,1 +92,2 @@\n-    final SurfaceManager.ProxyCache surfaceDataProxyCache = new SurfaceManager.ProxyCache();\n+    final SurfaceManager.ProxyCache surfaceDataProxyCache =\n+            new SurfaceManager.ProxyCache();\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/Win32GraphicsDevice.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -313,1 +313,2 @@\n-    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image, Object context) {\n+    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image,\n+                                                        Object context) {\n","filename":"src\/java.desktop\/windows\/classes\/sun\/java2d\/d3d\/D3DGraphicsConfig.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -77,1 +77,2 @@\n-    private final SurfaceManager.ProxyCache surfaceDataProxyCache = new SurfaceManager.ProxyCache();\n+    private final SurfaceManager.ProxyCache surfaceDataProxyCache =\n+            new SurfaceManager.ProxyCache();\n@@ -438,1 +439,2 @@\n-    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image, Object context) {\n+    public VolatileSurfaceManager createVolatileManager(SunVolatileImage image,\n+                                                        Object context) {\n","filename":"src\/java.desktop\/windows\/classes\/sun\/java2d\/opengl\/WGLGraphicsConfig.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}