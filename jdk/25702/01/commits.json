[{"commit":{"message":"address review comments: use pd_patch_instruction directly\n\nMacroAssembler::pd_patch_instruction can distinguish between the `b`\nand `movk movz movz br` sequences. Strictly speaking, the method\npatches not a single instruction but a semantically joint sequence of\ninstructions. Use it directly instead of `NativeJump` and\n`NativeGeneralJump` wrapper classes to simplify the implementation and\nget rid of an extra icache invalidation.\n\nOther changes in the patch simply clean up code that became redundant."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/compiledIC_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.hpp"}],"sha":"7ef1c4aec9531914bfae576e01a85edb7e197f1b"},{"commit":{"message":"8358329: AArch64: emit direct branches in static stubs for small code caches\n\nIn the A64 ISA, the B (direct branch) instruction can encode a target\nwithin a Â±128MB range relative to the instruction. Due to this\nlimitation, when generating static stubs, HotSpot conservatively emits\nindirect branches for calls to c2i interface stubs. These indirect\nbranches are implemented using a four-instruction sequence: three\ninstructions to materialize the target address in a register, followed\nby a BR instruction to perform the jump.\n\nThis patch optimizes static stub generation when the code cache is\nsmall enough to guarantee that the target entry point of the c2i\ninterface stub lies within the direct branch range. In such cases, a\nsingle direct B instruction can be used instead of the indirect\nsequence, saving 3 instructions (12 bytes) per static stub.\n\nBelow is an example of the optimization's impact, measured using the\nmovie-lens benchmark from the Renaissance benchmark suite:\n\n| Metric      | Before        | After         | Difference |\n|-------------|---------------|---------------|------------|\n| totalInHeap | Avg: 1883.875 | Avg: 1871.667 | -0.65%     |\n|             | Sum: 6653848  | Sum: 6616344  | -0.56%     |\n| stubCode    | Avg: 103.164  | Avg: 87.285   | -15.38%    |\n|             | Sum: 364376   | Sum: 308552   | -15.33%    |"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/compiledIC_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestStaticCallStub.java"}],"sha":"a904f1c117930fec0036a6526f7b4574584b2390"}]