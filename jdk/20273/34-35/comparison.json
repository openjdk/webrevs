{"files":[{"patch":"@@ -62,1 +62,1 @@\n-            int length = this.length + value.length();\n+            int length = stringSize(this.length, value);\n@@ -74,1 +74,1 @@\n-            int length = this.length + stringSize(value);\n+            int length = stringSize(this.length, value);\n@@ -84,1 +84,1 @@\n-            int length = this.length + 1;\n+            int length = stringSize(this.length, value);\n@@ -95,1 +95,1 @@\n-            int length = this.length + stringSize(value);\n+            int length = stringSize(this.length, value);\n@@ -105,1 +105,1 @@\n-            int length = this.length + stringSize(value);\n+            int length = stringSize(this.length, value);\n@@ -474,3 +474,4 @@\n-     * return stringSize of value\n-     * @param value       value\n-     * @return            4 if true; 5 if false\n+     * return add stringSize of value\n+     * @param length      length\n+     * @param value       value to add stringSize\n+     * @return            new length\n@@ -478,2 +479,2 @@\n-    static int stringSize(boolean value) {\n-        return value ? 4 : 5;\n+    static int stringSize(int length, char value) {\n+        return checkOverflow(length + 1);\n@@ -483,3 +484,4 @@\n-     * return stringSize of value\n-     * @param value       value\n-     * @return            stringSize of value\n+     * return add stringSize of value\n+     * @param length      length\n+     * @param value       value to add stringSize\n+     * @return            new length\n@@ -487,2 +489,2 @@\n-    static int stringSize(int value) {\n-        return DecimalDigits.stringSize(value);\n+    static int stringSize(int length, boolean value) {\n+        return checkOverflow(length + (value ? 4 : 5));\n@@ -492,1 +494,2 @@\n-     * return stringSize of value\n+     * return add stringSize of value\n+     * @param length      length\n@@ -494,1 +497,1 @@\n-     * @return            stringSize of value\n+     * @return            new length\n@@ -496,2 +499,2 @@\n-    static int stringSize(long value) {\n-        return DecimalDigits.stringSize(value);\n+    static int stringSize(int length, int value) {\n+        return checkOverflow(length + DecimalDigits.stringSize(value));\n@@ -501,3 +504,14 @@\n-     * return stringSize of value\n-     * @param value       value\n-     * @return            stringSize of value\n+     * return add stringSize of value\n+     * @param length      length\n+     * @param value       value to add stringSize\n+     * @return            new length\n+     *\/\n+    static int stringSize(int length, long value) {\n+        return checkOverflow(length + DecimalDigits.stringSize(value));\n+    }\n+\n+    \/**\n+     * return add stringSize of value\n+     * @param length      length\n+     * @param value       value to add stringSize\n+     * @return            new length\n@@ -505,2 +519,2 @@\n-    static int stringSize(String value) {\n-        return value.length();\n+    static int stringSize(int length, String value) {\n+        return checkOverflow(length + value.length());\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringConcatHelper.java","additions":38,"deletions":24,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -1087,10 +1087,11 @@\n-        static final MethodTypeDesc MTD_byte_char     = MethodTypeDesc.of(CD_byte, CD_char);\n-        static final MethodTypeDesc MTD_byte          = MethodTypeDesc.of(CD_byte);\n-        static final MethodTypeDesc MTD_int           = MethodTypeDesc.of(CD_int);\n-        static final MethodTypeDesc MTD_int_boolean   = MethodTypeDesc.of(CD_int, CD_boolean);\n-        static final MethodTypeDesc MTD_int_int       = MethodTypeDesc.of(CD_int, CD_int);\n-        static final MethodTypeDesc MTD_int_long      = MethodTypeDesc.of(CD_int, CD_long);\n-        static final MethodTypeDesc MTD_int_String    = MethodTypeDesc.of(CD_int, CD_String);\n-        static final MethodTypeDesc MTD_String_float  = MethodTypeDesc.of(CD_String, CD_float);\n-        static final MethodTypeDesc MTD_String_double = MethodTypeDesc.of(CD_String, CD_double);\n-        static final MethodTypeDesc MTD_String_Object = MethodTypeDesc.of(CD_String, CD_Object);\n+        static final MethodTypeDesc MTD_byte_char       = MethodTypeDesc.of(CD_byte, CD_char);\n+        static final MethodTypeDesc MTD_byte            = MethodTypeDesc.of(CD_byte);\n+        static final MethodTypeDesc MTD_int             = MethodTypeDesc.of(CD_int);\n+        static final MethodTypeDesc MTD_int_int_boolean = MethodTypeDesc.of(CD_int, CD_int, CD_boolean);\n+        static final MethodTypeDesc MTD_int_int_char    = MethodTypeDesc.of(CD_int, CD_int, CD_char);\n+        static final MethodTypeDesc MTD_int_int_int     = MethodTypeDesc.of(CD_int, CD_int, CD_int);\n+        static final MethodTypeDesc MTD_int_int_long    = MethodTypeDesc.of(CD_int, CD_int, CD_long);\n+        static final MethodTypeDesc MTD_int_int_String  = MethodTypeDesc.of(CD_int, CD_int, CD_String);\n+        static final MethodTypeDesc MTD_String_float    = MethodTypeDesc.of(CD_String, CD_float);\n+        static final MethodTypeDesc MTD_String_double   = MethodTypeDesc.of(CD_String, CD_double);\n+        static final MethodTypeDesc MTD_String_Object   = MethodTypeDesc.of(CD_String, CD_Object);\n@@ -1554,2 +1555,1 @@\n-         *     return length + stringSize(arg0) + stringSize(arg1) + stringSize(arg2) + 1 + stringSize(arg4)\n-         *               + stringSize(arg5) + stringSize(arg6) + stringSize(arg7);\n+         *     return stringSize(stringSize(stringSize(length, arg0), arg1), ..., arg7);\n@@ -1566,1 +1566,0 @@\n-                        var kind = TypeKind.from(cl);\n@@ -1569,1 +1568,7 @@\n-                            cb.iconst_1();\n+                            methodTypeDesc = MTD_int_int_char;\n+                        } else if (cl == CD_int) {\n+                            methodTypeDesc = MTD_int_int_int;\n+                        } else if (cl == CD_long) {\n+                            methodTypeDesc = MTD_int_int_long;\n+                        } else if (cl == CD_boolean) {\n+                            methodTypeDesc = MTD_int_int_boolean;\n@@ -1571,11 +1576,1 @@\n-                            if (cl == CD_int) {\n-                                methodTypeDesc = MTD_int_int;\n-                            } else if (cl == CD_long) {\n-                                methodTypeDesc = MTD_int_long;\n-                            } else if (cl == CD_boolean) {\n-                                methodTypeDesc = MTD_int_boolean;\n-                            } else {\n-                                methodTypeDesc = MTD_int_String;\n-                            }\n-                            cb.loadLocal(kind, cb.parameterSlot(i))\n-                              .invokestatic(CD_StringConcatHelper, \"stringSize\", methodTypeDesc);\n+                            methodTypeDesc = MTD_int_int_String;\n@@ -1583,2 +1578,2 @@\n-                        cb.iadd()\n-                          .invokestatic(CD_StringConcatHelper, \"checkOverflow\", MTD_int_int);\n+                        cb.loadLocal(TypeKind.from(cl), cb.parameterSlot(i))\n+                          .invokestatic(CD_StringConcatHelper, \"stringSize\", methodTypeDesc);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":22,"deletions":27,"binary":false,"changes":49,"status":"modified"}]}