{"files":[{"patch":"@@ -34,1 +34,0 @@\n-import jdk.internal.util.ReferencedKeyMap;\n@@ -42,1 +41,0 @@\n-import java.util.concurrent.ConcurrentHashMap;\n@@ -386,1 +384,1 @@\n-                mh = SimpleStringBuilderStrategy.generate(lookup, concatType, recipe, constantStrings);\n+                mh = SimpleStringBuilderStrategy.generate(lookup, concatType, constantStrings);\n@@ -1101,4 +1099,0 @@\n-        static record CacheKey(MethodType args, String recipe) {}\n-\n-        static final ReferencedKeyMap<CacheKey, MethodHandle> METHOD_HANDLE_CACHE = ReferencedKeyMap.create(true, ConcurrentHashMap::new);\n-\n@@ -1109,7 +1103,1 @@\n-        private static MethodHandle generate(Lookup lookup, MethodType args, String recipe, String[] constants) throws Exception {\n-            CacheKey cacheKey = new CacheKey(args, recipe);\n-            var mh = METHOD_HANDLE_CACHE.get(cacheKey);\n-            if (mh != null) {\n-                return mh;\n-            }\n-\n+        private static MethodHandle generate(Lookup lookup, MethodType args, String[] constants) throws Exception {\n@@ -1132,6 +1120,1 @@\n-                mh = lookup.findStatic(hiddenClass, METHOD_NAME, args);\n-                var origin = METHOD_HANDLE_CACHE.putIfAbsent(cacheKey, mh);\n-                if (origin != null) {\n-                    mh = origin;\n-                }\n-                return mh;\n+                return lookup.findStatic(hiddenClass, METHOD_NAME, args);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":3,"deletions":20,"binary":false,"changes":23,"status":"modified"}]}