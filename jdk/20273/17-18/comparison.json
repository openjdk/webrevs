{"files":[{"patch":"@@ -34,0 +34,1 @@\n+import jdk.internal.util.ReferencedKeyMap;\n@@ -41,0 +42,1 @@\n+import java.util.concurrent.ConcurrentHashMap;\n@@ -384,1 +386,1 @@\n-                mh = SimpleStringBuilderStrategy.generate(lookup, concatType, constantStrings);\n+                mh = SimpleStringBuilderStrategy.generate(lookup, concatType, recipe, constantStrings);\n@@ -1099,0 +1101,4 @@\n+        static record CacheKey(MethodType args, String recipe) {}\n+\n+        static final ReferencedKeyMap<CacheKey, MethodHandle> METHOD_HANDLE_CACHE = ReferencedKeyMap.create(true, ConcurrentHashMap::new);\n+\n@@ -1103,1 +1109,7 @@\n-        private static MethodHandle generate(Lookup lookup, MethodType args, String[] constants) throws Exception {\n+        private static MethodHandle generate(Lookup lookup, MethodType args, String recipe, String[] constants) throws Exception {\n+            CacheKey cacheKey = new CacheKey(args, recipe);\n+            var mh = METHOD_HANDLE_CACHE.get(cacheKey);\n+            if (mh != null) {\n+                return mh;\n+            }\n+\n@@ -1120,1 +1132,6 @@\n-                return lookup.findStatic(hiddenClass, METHOD_NAME, args);\n+                mh = lookup.findStatic(hiddenClass, METHOD_NAME, args);\n+                var origin = METHOD_HANDLE_CACHE.putIfAbsent(cacheKey, mh);\n+                if (origin != null) {\n+                    mh = origin;\n+                }\n+                return mh;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"}]}