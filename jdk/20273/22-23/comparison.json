{"files":[{"patch":"@@ -381,2 +381,0 @@\n-            } else {\n-                mh = mh.viewAsType(concatType, true);\n@@ -384,0 +382,1 @@\n+            mh = mh.viewAsType(concatType, true);\n@@ -1093,0 +1092,13 @@\n+        private static MethodType erase(MethodType args) {\n+            var bootstrapClassLoader = String.class.getClassLoader();\n+            var paramTypes = args.parameterArray();\n+            boolean changed = false;\n+            for (int i = 0; i < paramTypes.length; ++i) {\n+                if (paramTypes[i].getClassLoader() != bootstrapClassLoader) {\n+                    paramTypes[i] = Object.class;\n+                    changed = true;\n+                }\n+            }\n+            return changed ? MethodType.methodType(args.returnType(), paramTypes) : args;\n+        }\n+\n@@ -1094,2 +1106,3 @@\n-            lookup = MethodHandles.Lookup.IMPL_LOOKUP;\n-            String className = getClassName(String.class);\n+            lookup         = MethodHandles.Lookup.IMPL_LOOKUP;\n+            var erasedArgs = erase(args);\n+            var className  = getClassName(String.class);\n@@ -1103,1 +1116,1 @@\n-                                        ConstantUtils.methodTypeDesc(args),\n+                                        ConstantUtils.methodTypeDesc(erasedArgs),\n@@ -1105,1 +1118,1 @@\n-                                        generateMethod(constants, args));\n+                                        generateMethod(constants, erasedArgs));\n@@ -1110,1 +1123,1 @@\n-                return lookup.findStatic(hiddenClass, METHOD_NAME, args);\n+                return lookup.findStatic(hiddenClass, METHOD_NAME, erasedArgs);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":20,"deletions":7,"binary":false,"changes":27,"status":"modified"}]}