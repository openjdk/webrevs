{"files":[{"patch":"@@ -657,0 +657,9 @@\n+javaVFrame*\n+JvmtiEnvBase::skip_top_jvmti_annotated_frames(javaVFrame* jvf) {\n+  \/\/ The yield and yield0 may appear in an unmounted continuation.\n+  for ( ; jvf != nullptr && jvf->method()->jvmti_mount_transition(); jvf = jvf->java_sender()) {\n+    \/\/ skip frame with jvmti_mount_transition() annotated method\n+  }\n+  return jvf;\n+}\n+\n@@ -664,3 +673,0 @@\n-  \/\/ Two cases with the annotated methods to skip on the top:\n-  \/\/  - is_in_VTMS_transition == false and two top annotated methods are yield and yield0\n-  \/\/  - is_in_VTMS_transition = true and some methods followed by a motifyJvmti* method\n@@ -669,1 +675,0 @@\n-      \/\/ The yield and yield0 may appear in an unmounted continuation.\n@@ -671,3 +676,0 @@\n-      continue;\n-    }\n-    if (jvf->method()->changes_current_thread()) {\n@@ -676,4 +678,1 @@\n-    if (is_in_VTMS_transition) {\n-      \/\/ Skip frames above annotated method.\n-    } else {\n-      \/\/ Stop at first frame with non-annotated method.\n+    if (jvf->method()->changes_current_thread()) {\n@@ -682,0 +681,1 @@\n+    \/\/ Skip frame above annotated method.\n@@ -690,1 +690,1 @@\n-  if (is_virtual || jt->is_in_VTMS_transition()) { \/\/ filter out pure continuations\n+  if (jt->is_in_VTMS_transition()) {\n@@ -692,0 +692,2 @@\n+  } else if (is_virtual) { \/\/ filter out pure continuations\n+    jvf = skip_top_jvmti_annotated_frames(jvf);\n@@ -698,0 +700,1 @@\n+  assert(java_lang_VirtualThread::is_instance(vthread), \"sanity check\");\n@@ -699,1 +702,5 @@\n-    jvf = check_and_skip_hidden_frames(java_lang_Thread::is_in_VTMS_transition(vthread), jvf);\n+    if (java_lang_Thread::is_in_VTMS_transition(vthread)) {\n+      jvf = check_and_skip_hidden_frames(java_lang_Thread::is_in_VTMS_transition(vthread), jvf);\n+    } else {\n+      jvf = skip_top_jvmti_annotated_frames(jvf);\n+    }\n@@ -722,0 +729,1 @@\n+    assert(!java_thread->is_in_VTMS_transition(), \"invariant\");\n@@ -727,1 +735,1 @@\n-    jvf = check_and_skip_hidden_frames(vthread, jvf);\n+    jvf = skip_top_jvmti_annotated_frames(jvf);\n@@ -2012,1 +2020,5 @@\n-  JvmtiVTMSTransitionDisabler disabler(is_virtual ? target : nullptr);\n+  \/\/ For the latter, VTMS transitions are disabled for all threads by several reasons:\n+  \/\/ - carrier threads can mount virtual threads which may cause incorrect behavior\n+  \/\/ - it is a good invariant when a thread's handshake can't be impacted by a VTMS transition\n+  \/\/ - there is no mechanism to disable transitions of a specific carrier thread yet\n+  JvmtiVTMSTransitionDisabler disabler(is_virtual ? target : nullptr); \/\/ nullptr is to disable all\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":27,"deletions":15,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -369,0 +369,1 @@\n+  static javaVFrame* skip_top_jvmti_annotated_frames(javaVFrame* jvf);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @test id=virtual\n+ * @test\n@@ -32,1 +32,0 @@\n-    private static final String AGENT_LIB = \"CheckHiddenFrames\";\n@@ -43,2 +42,1 @@\n-        Thread thread = Thread.ofVirtual().unstarted(CheckHiddenFrames::test);\n-        thread.start();\n+        Thread thread = Thread.startVirtualThread(CheckHiddenFrames::test);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/CheckHiddenFrames\/CheckHiddenFrames.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}