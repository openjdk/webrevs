{"files":[{"patch":"@@ -836,5 +836,0 @@\n-  Thread* cur_thread = Thread::current();\n-  oop cont = java_lang_VirtualThread::continuation(_vthread_h());\n-  assert(cont != nullptr, \"vthread contintuation must not be null\");\n-\n-  javaVFrame* jvf = nullptr;\n@@ -848,0 +843,1 @@\n+  javaVFrame* jvf = JvmtiEnvBase::get_vthread_jvf(_vthread_h()); \n@@ -849,15 +845,0 @@\n-  if (is_cont_mounted) {\n-    vframeStream vfs(java_thread);\n-\n-    if (!vfs.at_end()) {\n-      jvf = vfs.asJavaVFrame();\n-      jvf = JvmtiEnvBase::check_and_skip_hidden_frames(java_thread, jvf);\n-    }\n-  } else {\n-    vframeStream vfs(cont);\n-\n-    if (!vfs.at_end()) {\n-      jvf = vfs.asJavaVFrame();\n-      jvf = JvmtiEnvBase::check_and_skip_hidden_frames(_vthread_h(), jvf);\n-    }\n-  }\n","filename":"src\/hotspot\/share\/prims\/jvmtiImpl.cpp","additions":1,"deletions":20,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1118,0 +1118,2 @@\n+  \/\/ we'd rather not yield inside methods annotated with @JvmtiMountTransition\n+  assert(!ContinuationHelper::Frame::frame_method(f)->jvmti_mount_transition(), \"\");\n@@ -1171,0 +1173,2 @@\n+  \/\/ we'd rather not yield inside methods annotated with @JvmtiMountTransition\n+  assert(!ContinuationHelper::Frame::frame_method(f)->jvmti_mount_transition(), \"\");\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/annotation\/JvmtiHideEvents.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * This annotation is only used for the VirtualThread notifyJvmti*  methods.\n+ * This annotation is only used for VirtualThread methods.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/annotation\/JvmtiMountTransition.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}