{"files":[{"patch":"@@ -4342,3 +4342,1 @@\n-        int result = 0;\n-        result = getInt(0);\n-        return result;\n+        return getInt(0);\n@@ -5042,1 +5040,1 @@\n-        if (mag.length <= 2 && bitLength() <= 63)\n+        if (mag.length <= 2 && bitLength() < Long.SIZE)\n@@ -5044,2 +5042,2 @@\n-        else\n-            throw new ArithmeticException(\"BigInteger out of long range\");\n+\n+        throw new ArithmeticException(\"BigInteger out of long range\");\n@@ -5061,1 +5059,1 @@\n-        if (mag.length <= 1 && bitLength() <= 31)\n+        if (mag.length <= 1 && bitLength() < Integer.SIZE)\n@@ -5063,2 +5061,2 @@\n-        else\n-            throw new ArithmeticException(\"BigInteger out of int range\");\n+\n+        throw new ArithmeticException(\"BigInteger out of int range\");\n@@ -5080,5 +5078,3 @@\n-        if (mag.length <= 1 && bitLength() <= 31) {\n-            int value = intValue();\n-            if (value >= Short.MIN_VALUE && value <= Short.MAX_VALUE)\n-                return shortValue();\n-        }\n+        if (mag.length <= 1 && bitLength() < Short.SIZE)\n+            return shortValue();\n+\n@@ -5101,5 +5097,3 @@\n-        if (mag.length <= 1 && bitLength() <= 31) {\n-            int value = intValue();\n-            if (value >= Byte.MIN_VALUE && value <= Byte.MAX_VALUE)\n-                return byteValue();\n-        }\n+        if (mag.length <= 1 && bitLength() < Byte.SIZE)\n+            return byteValue();\n+\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":13,"deletions":19,"binary":false,"changes":32,"status":"modified"}]}