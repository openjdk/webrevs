{"files":[{"patch":"@@ -3184,1 +3184,1 @@\n-        int bitpos = 1 << ((ebits-1) & (32-1));\n+        int bitpos = 1 << ((ebits-1) & 0x1f);\n@@ -3194,1 +3194,1 @@\n-                bitpos = 1 << (32-1);\n+                bitpos = 1 << 0x1f;\n@@ -3228,1 +3228,1 @@\n-                    bitpos = 1 << (32-1);\n+                    bitpos = 1 << 0x1f;\n@@ -3751,1 +3751,1 @@\n-        return (getInt(n >>> 5) & (1 << (n & 31))) != 0;\n+        return (getInt(n >>> 5) & (1 << (n & 0x1f))) != 0;\n@@ -3772,1 +3772,1 @@\n-        result[result.length-intNum-1] |= (1 << (n & 31));\n+        result[result.length-intNum-1] |= (1 << (n & 0x1f));\n@@ -3796,1 +3796,1 @@\n-        result[result.length-intNum-1] &= ~(1 << (n & 31));\n+        result[result.length-intNum-1] &= ~(1 << (n & 0x1f));\n@@ -3820,1 +3820,1 @@\n-        result[result.length-intNum-1] ^= (1 << (n & 31));\n+        result[result.length-intNum-1] ^= (1 << (n & 0x1f));\n@@ -4310,2 +4310,1 @@\n-        int byteLen = bitLength()\/8 + 1;\n-        byte[] byteArray = new byte[byteLen];\n+        byte[] byteArray = new byte[bitLength()\/8 + 1];\n@@ -4313,1 +4312,1 @@\n-        for (int i=byteLen-1, bytesCopied=4, nextInt=0, intIndex=0; i >= 0; i--) {\n+        for (int i=byteArray.length-1, bytesCopied=4, nextInt=0, intIndex=0; i >= 0; i--) {\n@@ -4365,5 +4364,1 @@\n-        long result = 0;\n-\n-        for (int i=1; i >= 0; i--)\n-            result = (result << 32) + (getInt(i) & LONG_MASK);\n-        return result;\n+        return ((long) getInt(1) << Integer.SIZE) + (getInt(0) & LONG_MASK);\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":10,"deletions":15,"binary":false,"changes":25,"status":"modified"}]}