[{"commit":{"message":"Simplify two's complement in makePositive(int[])"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"69d242102e1a44bf9a03ededf4c103fb651480cc"},{"commit":{"message":"Avoid redundance of stripLeadingZeroInts()"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"f3ef26019cedec5960027b13a54bbadbbae1b26f"},{"commit":{"message":"Small code simplifications"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"d6b4d2e1b0ecf5acef1eb3c2cfba98199b802cc5"},{"commit":{"message":"Revert \"Removed redundant code for choosing division's algorithm logic\"\n\nThis reverts commit 7a0b0211c658014f8c3736f6032e7d3ef35fb820."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"8c4587bfaecfa3329832ddaf7a769dc3339806ef"},{"commit":{"message":"Removed redundant code for choosing division's algorithm logic"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"7a0b0211c658014f8c3736f6032e7d3ef35fb820"},{"commit":{"message":"Small code simplifications"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"ed2e7c359f55d8b227ff4d3ceb8e2a198e8407f6"},{"commit":{"message":"Removed numberOfTrailingZeros() as a duplicate of the cached getLowestSetBit()"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"b74fefa590654547f4006a0e02f63c25ddf5302c"},{"commit":{"message":"An optimization"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"b151b7e34b6a9bd7dc043d88127b3aa33128191c"},{"commit":{"message":"Correct bug in shiftRight"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"a434bfc55975649673226275808cb68c471cf6e9"},{"commit":{"message":"make magBitLength() an instance method"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"642461fe2d855c965e037d53ab01466aa77e7c18"},{"commit":{"message":"Make javaIncrement(int[]) static"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"d0df9eb28576a8c77e1b1e14a5956f2d31bcc10d"},{"commit":{"message":"Update names"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"5ad26a14049e1765d9ef46f307d723dd4b315382"},{"commit":{"message":"Same optimization of previous commit"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"007d65cc17c654114da199a9d7e99fdec21cb099"},{"commit":{"message":"An optimization"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"56ba43fc499542313134362867d3deac332c400c"},{"commit":{"message":"More clear comment"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"b6e47807c05b5553b357dc727e5d8cce460a4a9e"},{"commit":{"message":"An optimization"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"0ac310dc2b67728da4db782b6a3f79097fd65f69"},{"commit":{"message":"Code simplification"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"ecfea4ac93e54eeb127c3c6d9a063029d69906c3"},{"commit":{"message":"Code simplification"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"d85e023de20516b88619c2da4f8e1905a7815c50"},{"commit":{"message":"Avoiding redundant code"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"c1c6ac13349198afbee5e95c7578fce2c0b49273"},{"commit":{"message":"Code simplification"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"1821a578c094415ee2bda9d3c1843042df19e6fd"},{"commit":{"message":"Code simplifications for BigIntegers' bit operations"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java"}],"sha":"a2d8466309d6d0f243cd4368e5ad52881a02dd5f"}]