{"files":[{"patch":"@@ -4736,7 +4736,6 @@\n-        int extraInt = (j == a.length ? 1 : 0);\n-        int result[] = new int[a.length - keep + extraInt];\n-\n-        \/* Copy one's complement of input into output, leaving extra\n-         * int (if it exists) == 0x00 *\/\n-        for (int i = keep; i < a.length; i++)\n-            result[i - keep + extraInt] = ~a[i];\n+        int[] result;\n+        if (j == a.length) {\n+            result = new int[a.length - keep + 1];\n+            result[0] = 1;\n+        } else { \/\/ Exists a non-sign int that is non-zero\n+            result = new int[a.length - keep];\n@@ -4744,3 +4743,3 @@\n-        \/\/ Add one to one's complement to generate two's complement\n-        for (int i=result.length-1; ++result[i] == 0; i--)\n-            ;\n+            \/\/ Copy two's complement of input into output\n+            int i;\n+            for (i = a.length - 1; i > keep && a[i] == 0; i--); \/\/ Skip trailing zeros\n@@ -4748,0 +4747,5 @@\n+            result[i - keep] = -a[i];\n+            i--;\n+            for (; i >= keep; i--)\n+                result[i - keep] = ~a[i];\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"}]}