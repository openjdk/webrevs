{"files":[{"patch":"@@ -404,1 +404,1 @@\n-            mag = trustedStripLeadingZeroInts(val);\n+            mag = stripLeadingZeroInts(val, true);\n@@ -492,1 +492,1 @@\n-        this.mag = stripLeadingZeroInts(magnitude);\n+        this.mag = stripLeadingZeroInts(magnitude, false);\n@@ -598,1 +598,1 @@\n-        mag = trustedStripLeadingZeroInts(magnitude);\n+        mag = stripLeadingZeroInts(magnitude, true);\n@@ -649,1 +649,1 @@\n-        mag = trustedStripLeadingZeroInts(magnitude);\n+        mag = stripLeadingZeroInts(magnitude, true);\n@@ -1396,1 +1396,1 @@\n-        resultMag = trustedStripLeadingZeroInts(resultMag);\n+        resultMag = stripLeadingZeroInts(resultMag, true);\n@@ -1416,1 +1416,1 @@\n-        resultMag = trustedStripLeadingZeroInts(resultMag);\n+        resultMag = stripLeadingZeroInts(resultMag, true);\n@@ -1598,1 +1598,1 @@\n-        resultMag = trustedStripLeadingZeroInts(resultMag);\n+        resultMag = stripLeadingZeroInts(resultMag, true);\n@@ -1702,1 +1702,1 @@\n-            result = trustedStripLeadingZeroInts(result);\n+            result = stripLeadingZeroInts(result, true);\n@@ -2158,1 +2158,1 @@\n-        return new BigInteger(trustedStripLeadingZeroInts(intSlice), 1);\n+        return new BigInteger(stripLeadingZeroInts(intSlice, true), 1);\n@@ -2197,1 +2197,1 @@\n-        result = trustedStripLeadingZeroInts(result);\n+        result = stripLeadingZeroInts(result, true);\n@@ -2215,1 +2215,1 @@\n-        return new BigInteger(trustedStripLeadingZeroInts(lowerInts), 1);\n+        return new BigInteger(stripLeadingZeroInts(lowerInts, true), 1);\n@@ -2234,1 +2234,1 @@\n-        return new BigInteger(trustedStripLeadingZeroInts(upperInts), 1);\n+        return new BigInteger(stripLeadingZeroInts(upperInts, true), 1);\n@@ -2263,1 +2263,1 @@\n-            return new BigInteger(trustedStripLeadingZeroInts(z), 1);\n+            return new BigInteger(stripLeadingZeroInts(z, true), 1);\n@@ -4545,13 +4545,0 @@\n-    \/**\n-     * Returns a copy of the input array stripped of any leading zero bytes.\n-     *\/\n-    private static int[] stripLeadingZeroInts(int[] val) {\n-        int vlen = val.length;\n-        int keep;\n-\n-        \/\/ Find first nonzero byte\n-        for (keep = 0; keep < vlen && val[keep] == 0; keep++)\n-            ;\n-        return Arrays.copyOfRange(val, keep, vlen);\n-    }\n-\n@@ -4560,1 +4547,1 @@\n-     * Since the source is trusted the copying may be skipped.\n+     * If the source is trusted the copying may be skipped.\n@@ -4562,2 +4549,1 @@\n-    private static int[] trustedStripLeadingZeroInts(int[] val) {\n-        int vlen = val.length;\n+    private static int[] stripLeadingZeroInts(int[] val, boolean trusted) {\n@@ -4567,1 +4553,1 @@\n-        for (keep = 0; keep < vlen && val[keep] == 0; keep++)\n+        for (keep = 0; keep < val.length && val[keep] == 0; keep++)\n@@ -4569,1 +4555,1 @@\n-        return keep == 0 ? val : Arrays.copyOfRange(val, keep, vlen);\n+        return trusted && keep == 0 ? val : Arrays.copyOfRange(val, keep, val.length);\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":17,"deletions":31,"binary":false,"changes":48,"status":"modified"}]}