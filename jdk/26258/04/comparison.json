{"files":[{"patch":"@@ -279,4 +279,4 @@\n- * <li>read write access modes for all {@code T}. On 32-bit platforms, access modes\n- *     {@code get} and {@code set} for {@code long}, {@code double} and {@code MemorySegment}\n- *     are supported but might lead to word tearing, as described in Section {@jls 17.7}.\n- *     of <cite>The Java Language Specification<\/cite>.\n+ * <li>read write access modes for all {@code T}.  Access modes {@code get} and\n+ *     {@code set} for {@code long}, {@code double} and {@code MemorySegment}\n+ *     are supported but have no atomicity guarantee, as described in Section\n+ *     {@jls 17.7} of <cite>The Java Language Specification<\/cite>.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemoryLayout.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -4308,3 +4308,4 @@\n-     * <li>read write access modes for all {@code T}, with the exception of\n-     *     access modes {@code get} and {@code set} for {@code long} and\n-     *     {@code double} on 32-bit platforms.\n+     * <li>read write access modes for all {@code T}.  Access modes {@code get}\n+     *     and {@code set} for {@code long} and {@code double} are supported but\n+     *     have no atomicity guarantee, as described in Section {@jls 17.7} of\n+     *     <cite>The Java Language Specification<\/cite>.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}