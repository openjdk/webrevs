{"files":[{"patch":"@@ -402,1 +402,1 @@\n-        _state(state_uninitialized),\n+        _state(NOT_READY),\n@@ -407,1 +407,1 @@\n-  assert(Atomic::load(&_state) == state_uninitialized, \"Should be\");\n+  assert(Atomic::load(&_state) == NOT_READY, \"Should be\");\n@@ -410,1 +410,1 @@\n-  Atomic::store(&_state, state_initialized);\n+  Atomic::store(&_state, READY);\n@@ -429,4 +429,11 @@\n-  if (Atomic::cmpxchg(&_state, state_initialized, state_shutdown, memory_order_relaxed) == state_initialized) {\n-    if (is_parallel()) {\n-      \/\/ Execute a shutdown task and block until all workers respond.\n-      run_task(&_shutdown_task);\n+  while (true) {\n+    State state = Atomic::load(&_state);\n+    if (state == SHUTDOWN) {\n+      \/\/ Already shut down.\n+      return;\n+    }\n+    if (Atomic::cmpxchg(&_state, state, SHUTDOWN, memory_order_relaxed) == state) {\n+      if (is_parallel()) {\n+        \/\/ Execute a shutdown task and block until all workers respond.\n+        run_task(&_shutdown_task);\n+      }\n@@ -444,1 +451,2 @@\n-      break;\n+      new ArchiveWorkerThread(this);\n+      return;\n@@ -447,2 +455,0 @@\n-\n-  new ArchiveWorkerThread(this);\n@@ -458,1 +464,2 @@\n-      break;\n+      _start_semaphore.signal(1);\n+      return;\n@@ -461,1 +468,0 @@\n-  _start_semaphore.signal(1);\n@@ -465,2 +471,2 @@\n-  assert((Atomic::load(&_state) == state_initialized) ||\n-         ((Atomic::load(&_state) == state_shutdown) && (task == &_shutdown_task)),\n+  assert((Atomic::load(&_state) == READY) ||\n+         ((Atomic::load(&_state) == SHUTDOWN) && (task == &_shutdown_task)),\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":20,"deletions":14,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -363,1 +363,3 @@\n-  enum { state_uninitialized, state_initialized, state_shutdown} _state;\n+  typedef enum { NOT_READY, READY, SHUTDOWN } State;\n+  volatile State _state;\n+\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1539,0 +1539,3 @@\n+  \/\/ Archive was fully read. Workers are no longer needed.\n+  ArchiveWorkers::workers()->shutdown();\n+\n@@ -1576,3 +1579,0 @@\n-\n-  \/\/ Workers are no longer needed.\n-  ArchiveWorkers::workers()->shutdown();\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -440,0 +440,5 @@\n+\n+  \/\/ Initiate Archive Workers shutdown. These workers are likely already\n+  \/\/ shut down, but we need to make sure they really are. Otherwise, workers\n+  \/\/ would fail hard on broken semaphores.\n+  ArchiveWorkers::workers()->shutdown();\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}