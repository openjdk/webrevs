{"files":[{"patch":"@@ -2600,0 +2600,3 @@\n+  case Op_CmpLTMask:\n+  case Op_RoundF:\n+  case Op_RoundD:\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -588,0 +588,15 @@\n+    public static final String CMP_LT_MASK = PREFIX + \"CMP_LT_MASK\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(CMP_LT_MASK, \"CmpLTMask\");\n+    }\n+\n+    public static final String ROUND_F = PREFIX + \"ROUND_F\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(ROUND_F, \"RoundF\");\n+    }\n+\n+    public static final String ROUND_D = PREFIX + \"ROUND_D\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(ROUND_D, \"RoundD\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -392,0 +392,39 @@\n+    @Test\n+    @IR(counts = { IRNode.CMP_LT_MASK, \">0\" })\n+    @Arguments(setup = \"setupByteArray\")\n+    public Object[] testCmpLTMask(byte[] in) {\n+        char[] res = new char[SIZE];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            res[i] = (char) (in[i] >= 0 ? in[i] : 256 + in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.ROUND_F, \">0\" })\n+    @Arguments(setup = \"setupByteArray\")\n+    public Object[] testRoundF(byte[] in) {\n+        short[] res = new short[SIZE];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            res[i] = (short) Math.round(in[i] * 10.F);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.ROUND_D, \">0\" })\n+    @Arguments(setup = \"setupByteArray\")\n+    public Object[] testRoundD(byte[] in) {\n+        short[] res = new short[SIZE];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            res[i] = (short) Math.round(in[i] * 10.0);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestSubwordTruncation.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"modified"}]}