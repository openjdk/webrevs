{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n@@ -29,0 +31,1 @@\n+import java.net.SocketAddress;\n@@ -31,0 +34,2 @@\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n@@ -38,0 +43,5 @@\n+    @SuppressWarnings(\"removal\")\n+    private static final int connectTimeout =    \/\/ default 1 minute\n+        AccessController.doPrivileged((PrivilegedAction<Integer>) () ->\n+            Integer.getInteger(\"sun.rmi.transport.tcp.initialConnectTimeout\", 60 * 1000).intValue());\n+\n@@ -40,1 +50,10 @@\n-        return new Socket(host, port);\n+        \/\/ Guard against passing a negative value, Socket would always throw IllegalArgumentException.\n+        if (connectTimeout <= 0) {\n+            return new Socket(host, port);\n+        } else {\n+            SocketAddress address = host != null ? new InetSocketAddress(host, port) :\n+                                                   new InetSocketAddress(InetAddress.getByName(null), port);\n+            Socket s = new Socket();\n+            s.connect(address, connectTimeout);\n+            return s;\n+        }\n","filename":"src\/java.rmi\/share\/classes\/sun\/rmi\/transport\/tcp\/TCPDirectSocketFactory.java","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"}]}