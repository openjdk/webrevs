{"files":[{"patch":"@@ -55,1 +55,1 @@\n-\/\/ [1] A reference that does not require special clean up (i.e., Reference::queue == _null_queue.resolve())\n+\/\/ [1] A reference that does not require special clean up (i.e., Reference::queue == ReferenceQueue.NULL_QUEUE)\n@@ -58,1 +58,1 @@\n-\/\/ [2] A reference that REQUIRE specials clean up (i.e., Reference::queue != _null_queue.resolve())\n+\/\/ [2] A reference that REQUIRE specials clean up (i.e., Reference::queue != ReferenceQueue.NULL_QUEUE)\n@@ -122,1 +122,1 @@\n-  TempNewSymbol field_name = SymbolTable::new_symbol(\"N\"\"ULL\");\n+  TempNewSymbol field_name = SymbolTable::new_symbol(\"NULL_QUEUE\");\n","filename":"src\/hotspot\/share\/cds\/aotReferenceObjSupport.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-     *   queue = ReferenceQueue.NULL; next = this.\n+     *   queue = ReferenceQueue.NULL_QUEUE; next = this.\n@@ -82,1 +82,1 @@\n-     *   queue = ReferenceQueue.NULL.\n+     *   queue = ReferenceQueue.NULL_QUEUE.\n@@ -164,2 +164,2 @@\n-     *        dequeued: ReferenceQueue.NULL\n-     *    unregistered: ReferenceQueue.NULL\n+     *        dequeued: ReferenceQueue.NULL_QUEUE\n+     *    unregistered: ReferenceQueue.NULL_QUEUE\n@@ -235,1 +235,1 @@\n-        if (q != ReferenceQueue.NULL) q.enqueue(this);\n+        if (q != ReferenceQueue.NULL_QUEUE) q.enqueue(this);\n@@ -547,1 +547,1 @@\n-        this.queue = (queue == null) ? ReferenceQueue.NULL : queue;\n+        this.queue = (queue == null) ? ReferenceQueue.NULL_QUEUE : queue;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    static final ReferenceQueue<Object> NULL = new Null();\n+    static final ReferenceQueue<Object> NULL_QUEUE = new Null();\n@@ -77,1 +77,1 @@\n-        if ((queue == NULL) || (queue == ENQUEUED)) {\n+        if ((queue == NULL_QUEUE) || (queue == ENQUEUED)) {\n@@ -99,1 +99,1 @@\n-            r.queue = NULL;\n+            r.queue = NULL_QUEUE;\n@@ -251,1 +251,1 @@\n-                    \/\/ already dequeued: r.queue == NULL; ->\n+                    \/\/ already dequeued: r.queue == NULL_QUEUE; ->\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/ReferenceQueue.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}