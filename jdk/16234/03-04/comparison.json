{"files":[{"patch":"@@ -931,0 +931,32 @@\n+\n+  # Check whether the compiler supports the Arm C Language Extensions (ACLE)\n+  # for SVE. Set SVE_CFLAGS to -march=armv8-a+sve if it does. Empty otherwise.\n+  # ACLE and this flag are required to build the Arm SVE related functions in\n+  # libvmath.\n+  if test \"x${OPENJDK_TARGET_CPU}\" = \"xaarch64\"; then\n+    if test \"x$TOOLCHAIN_TYPE\" = xgcc || test \"x$TOOLCHAIN_TYPE\" = xclang; then\n+      AC_LANG_PUSH(C)\n+      OLD_CFLAGS=\"$CFLAGS\"\n+      CFLAGS=\"$CFLAGS -march=armv8-a+sve\"\n+\n+      AC_MSG_CHECKING([if Arm SVE ACLE is supported])\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([#include <arm_sve.h>],\n+          [\n+            svint32_t r = svdup_n_s32(1);\n+            return 0;\n+          ])],\n+          [\n+            AC_MSG_RESULT([yes])\n+            $2SVE_CFLAGS=\"-march=armv8-a+sve\"\n+          ],\n+          [\n+            AC_MSG_RESULT([no])\n+            $2SVE_CFLAGS=\"\"\n+          ]\n+      )\n+\n+      CFLAGS=\"$OLD_CFLAGS\"\n+      AC_LANG_POP(C)\n+    fi\n+  fi\n+  AC_SUBST($2SVE_CFLAGS)\n","filename":"make\/autoconf\/flags-cflags.m4","additions":32,"deletions":0,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -0,0 +1,101 @@\n+#\n+# Copyright (c) 2023, Arm Limited. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+###############################################################################\n+#\n+# Setup sleef framework\n+#\n+AC_DEFUN_ONCE([LIB_SETUP_SLEEF],\n+[\n+  AC_ARG_WITH(libsleef, [AS_HELP_STRING([--with-libsleef],\n+      [specify prefix directory for the libsleef library\n+      (expecting the libraries under PATH\/lib and the headers under PATH\/include)])])\n+\n+  ENABLE_LIBSLEEF=false\n+  LIBSLEEF_CFLAGS=\n+  LIBSLEEF_LIBS=\n+\n+  if test \"x$NEEDS_LIB_SLEEF\" = xfalse; then\n+    if test \"x${with_libsleef}\" != \"x\" &&\n+       test \"x${with_libsleef}\" != \"xno\"; then\n+      AC_MSG_WARN([[libsleef is not used, so --with-libsleef is ignored]])\n+    fi\n+  else\n+    LIBSLEEF_FOUND=no\n+\n+    if test \"x${with_libsleef}\" = \"xno\"; then\n+      AC_MSG_NOTICE([libsleef is disabled])\n+    else\n+      if test \"x${with_libsleef}\" != \"x\" &&\n+         test \"x${with_libsleef}\" != \"xyes\"; then\n+        # Check the specified libsleef\n+        AC_MSG_CHECKING([for the specified LIBSLEEF])\n+        if test -e ${with_libsleef}\/lib\/libsleef.so &&\n+           test -e ${with_libsleef}\/include\/sleef.h; then\n+          LIBSLEEF_FOUND=yes\n+          LIBSLEEF_LIBS=\"-L${with_libsleef}\/lib -lsleef\"\n+          LIBSLEEF_CFLAGS=\"-I${with_libsleef}\/include\"\n+          AC_MSG_RESULT([yes])\n+        else\n+          AC_MSG_RESULT([no])\n+          AC_MSG_ERROR([Could not locate libsleef.so or sleef.h in ${with_libsleef}])\n+        fi\n+      else\n+        # Check for the libsleef under system locations\n+        # Do not try pkg-config if we have a sysroot set.\n+        if test \"x$SYSROOT\" = \"x\" &&\n+           test \"x${LIBSLEEF_FOUND}\" = \"xno\"; then\n+          PKG_CHECK_MODULES([LIBSLEEF], [sleef], [LIBSLEEF_FOUND=yes], [LIBSLEEF_FOUND=no])\n+        fi\n+        if test \"x${LIBSLEEF_FOUND}\" = \"xno\"; then\n+          AC_CHECK_HEADERS([sleef.h],\n+              [\n+                LIBSLEEF_FOUND=yes\n+                LIBSLEEF_LIBS=\"-lsleef\"\n+              ],\n+              []\n+          )\n+        fi\n+\n+        # Print error if user runs just with \"--with-libsleef\", but libsleef is not installed\n+        if test \"x${with_libsleef}\" = \"xyes\" &&\n+           test \"x${LIBSLEEF_FOUND}\" = \"xno\"; then\n+          HELP_MSG_MISSING_DEPENDENCY([sleef])\n+          AC_MSG_ERROR([Could not find libsleef! $HELP_MSG])\n+        fi\n+      fi\n+\n+      if test \"x${LIBSLEEF_FOUND}\" = \"xyes\"; then\n+        ENABLE_LIBSLEEF=true\n+      fi\n+\n+    fi\n+\n+  fi\n+\n+  AC_SUBST(ENABLE_LIBSLEEF)\n+  AC_SUBST(LIBSLEEF_CFLAGS)\n+  AC_SUBST(LIBSLEEF_LIBS)\n+])\n","filename":"make\/autoconf\/lib-sleef.m4","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"},{"patch":"@@ -1,125 +0,0 @@\n-#\n-# Copyright (c) 2023, Arm Limited. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.  Oracle designates this\n-# particular file as subject to the \"Classpath\" exception as provided\n-# by Oracle in the LICENSE file that accompanied this code.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-###############################################################################\n-#\n-# Setup vmath framework and check its dependences\n-#\n-AC_DEFUN_ONCE([LIB_SETUP_VMATH],\n-[\n-  AC_ARG_WITH(libsleef, [AS_HELP_STRING([--with-libsleef],\n-      [specify prefix directory for the libsleef library\n-      (expecting the libraries under PATH\/lib and the headers under PATH\/include)])])\n-\n-  ENABLE_LIBSLEEF=false\n-  LIBVMATH_CFLAGS=\n-  LIBVMATH_LIBS=\n-\n-  if test \"x$NEEDS_LIB_SLEEF\" = xfalse; then\n-    if test \"x${with_libsleef}\" != \"x\" &&\n-       test \"x${with_libsleef}\" != \"xno\"; then\n-      AC_MSG_WARN([[libsleef is not used, so --with-libsleef is ignored]])\n-    fi\n-  else\n-    LIBSLEEF_FOUND=no\n-\n-    if test \"x${with_libsleef}\" = \"xno\"; then\n-      AC_MSG_NOTICE([libvmath will not be built, because its dependence libsleef is disabled])\n-    else\n-      if test \"x${with_libsleef}\" != \"x\" &&\n-         test \"x${with_libsleef}\" != \"xyes\"; then\n-        # Check the specified libsleef\n-        AC_MSG_CHECKING([for the specified LIBSLEEF])\n-        if test -e ${with_libsleef}\/lib\/libsleef.so &&\n-           test -e ${with_libsleef}\/include\/sleef.h; then\n-          LIBSLEEF_FOUND=yes\n-          LIBVMATH_LIBS=\"-L${with_libsleef}\/lib\"\n-          LIBVMATH_CFLAGS=\"-I${with_libsleef}\/include\"\n-          AC_MSG_RESULT([yes])\n-        else\n-          AC_MSG_RESULT([no])\n-          AC_MSG_ERROR([Could not locate libsleef.so or sleef.h in ${with_libsleef}])\n-        fi\n-      else\n-        # Check for the libsleef under system locations\n-        # Do not try pkg-config if we have a sysroot set.\n-        if test \"x$SYSROOT\" = \"x\" &&\n-           test \"x${LIBSLEEF_FOUND}\" = \"xno\"; then\n-          PKG_CHECK_MODULES([LIBSLEEF], [sleef], [LIBSLEEF_FOUND=yes], [LIBSLEEF_FOUND=no])\n-        fi\n-        if test \"x${LIBSLEEF_FOUND}\" = \"xno\"; then\n-          AC_CHECK_HEADERS([sleef.h],\n-              [LIBSLEEF_FOUND=yes],\n-              []\n-          )\n-        fi\n-\n-        # Print error if user runs just with \"--with-libsleef\", but libsleef is not installed\n-        if test \"x${with_libsleef}\" = \"xyes\" &&\n-           test \"x${LIBSLEEF_FOUND}\" = \"xno\"; then\n-          HELP_MSG_MISSING_DEPENDENCY([sleef])\n-          AC_MSG_ERROR([Could not find libsleef! $HELP_MSG])\n-        fi\n-      fi\n-\n-      if test \"x${LIBSLEEF_FOUND}\" = \"xyes\"; then\n-        ENABLE_LIBSLEEF=true\n-        LIBVMATH_LIBS=\"${LIBVMATH_LIBS} -lsleef\"\n-\n-        if test \"x${OPENJDK_TARGET_CPU}\" = \"xaarch64\"; then\n-          # Check the ARM SVE feature\n-          SVE_CFLAGS=\"-march=armv8-a+sve\"\n-\n-          AC_LANG_PUSH(C)\n-          OLD_CFLAGS=\"$CFLAGS\"\n-          CFLAGS=\"$CFLAGS $SVE_CFLAGS\"\n-\n-          AC_MSG_CHECKING([if ARM SVE feature is supported])\n-          AC_COMPILE_IFELSE([AC_LANG_PROGRAM([#include <arm_sve.h>],\n-              [\n-                svint32_t r = svdup_n_s32(1);\n-                return 0;\n-              ])],\n-              [\n-                AC_MSG_RESULT([yes])\n-                LIBVMATH_CFLAGS=\"${LIBVMATH_CFLAGS} ${SVE_CFLAGS}\"\n-              ],\n-              [ AC_MSG_RESULT([no]) ]\n-          )\n-\n-          CFLAGS=\"$OLD_CFLAGS\"\n-          AC_LANG_POP(C)\n-        fi\n-\n-      fi\n-\n-    fi\n-\n-  fi\n-\n-  AC_SUBST(ENABLE_LIBSLEEF)\n-  AC_SUBST(LIBVMATH_CFLAGS)\n-  AC_SUBST(LIBVMATH_LIBS)\n-])\n","filename":"make\/autoconf\/lib-vmath.m4","additions":0,"deletions":125,"binary":false,"changes":125,"status":"deleted"},{"patch":"@@ -34,0 +34,1 @@\n+m4_include([lib-sleef.m4])\n@@ -35,1 +36,0 @@\n-m4_include([lib-vmath.m4])\n@@ -137,1 +137,1 @@\n-  LIB_SETUP_VMATH\n+  LIB_SETUP_SLEEF\n","filename":"make\/autoconf\/libraries.m4","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -893,2 +893,2 @@\n-LIBVMATH_CFLAGS:=@LIBVMATH_CFLAGS@\n-LIBVMATH_LIBS:=@LIBVMATH_LIBS@\n+LIBSLEEF_CFLAGS:=@LIBSLEEF_CFLAGS@\n+LIBSLEEF_LIBS:=@LIBSLEEF_LIBS@\n@@ -908,0 +908,3 @@\n+# Arm SVE\n+SVE_CFLAGS:=@SVE_CFLAGS@\n+\n","filename":"make\/autoconf\/spec.gmk.in","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-      CFLAGS := $(CFLAGS_JDKLIB) $(LIBVMATH_CFLAGS) -fvisibility=default, \\\n+      CFLAGS := $(CFLAGS_JDKLIB) $(LIBSLEEF_CFLAGS) $(SVE_CFLAGS) -fvisibility=default, \\\n@@ -48,1 +48,1 @@\n-      LIBS := $(JDKLIB_LIBS) $(LIBVMATH_LIBS) \\\n+      LIBS := $(JDKLIB_LIBS) $(LIBSLEEF_LIBS) \\\n","filename":"make\/modules\/jdk.incubator.vector\/Lib.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}