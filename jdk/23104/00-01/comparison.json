{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Regression test for an assert triggered during allocation elimination because top is found during\n+ * constructing new phis.\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver compiler.macronodes.TestTopInMacroElimination\n+ *\/\n+\n+package compiler.macronodes;\n+\n+public class TestTopInMacroElimination {\n+    public static class A {\n+        int a;\n+    }\n+\n+    public static void main(String[] strArr) {\n+        int i2 = 0;\n+        for (int i = 0; i < 50; ++i)\n+            try {\n+                synchronized (new A()) {\n+                    synchronized (TestTopInMacroElimination.class) {\n+                        for (int var19 = 0; var19 < Integer.valueOf(i2);) {\n+                            Integer.valueOf(var19);\n+                        }\n+                    }\n+                }\n+                for (int var8 = 0; var8 < 10000; ++var8) ;\n+            } catch (ArithmeticException a_e) {\n+            }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/macronodes\/TestTopInMacroElimination.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"}]}