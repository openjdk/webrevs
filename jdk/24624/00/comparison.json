{"files":[{"patch":"@@ -24,0 +24,3 @@\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.event.InputEvent;\n@@ -27,0 +30,1 @@\n+import javax.swing.SwingUtilities;\n@@ -31,0 +35,1 @@\n+ * @key headful\n@@ -32,3 +37,3 @@\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual ComboPopupBug\n+ * @library \/javax\/swing\/regtesthelpers\n+ * @build JRobot\n+ * @run main ComboPopupBug\n@@ -38,10 +43,6 @@\n-    private static final String instructionsText = \"\"\"\n-            This test is used to verify that clicking on JComboBox\n-            when frame containing it is about to close should not\n-            cause IllegalStateException.\n-\n-            A JComboBox is shown with Close button at the bottom.\n-            Click on Close and then click on JComboBox arrow button\n-            to try to show combobox popup.\n-            If IllegalStateException is thrown, test will automatically Fail\n-            otherwise click Pass.\"\"\";\n+    private static JFrame frame;\n+    private static JButton closeButton;\n+    private static JComboBox<String> comboBox;\n+    private static Point comboBoxLocation;\n+    private static Dimension comboBoxSize;\n+    private static JRobot robot;\n@@ -50,10 +51,3 @@\n-        PassFailJFrame.builder()\n-                .title(\"ComboPopup Instructions\")\n-                .instructions(instructionsText)\n-                .testTimeOut(5)\n-                .rows(10)\n-                .columns(35)\n-                .testUI(ComboPopupBug::createUI)\n-                .build()\n-                .awaitAndCheck();\n-    }\n+        robot = JRobot.getRobot();\n+        SwingUtilities.invokeAndWait(() -> {\n+            frame = new JFrame(\"ComboPopup\");\n@@ -61,2 +55,5 @@\n-    private static JFrame createUI() {\n-        JFrame frame = new JFrame(\"ComboPopup\");\n+            comboBox = new JComboBox<>();\n+            comboBox.setEditable(true);\n+            comboBox.addItem(\"test\");\n+            comboBox.addItem(\"test2\");\n+            comboBox.addItem(\"test3\");\n@@ -64,5 +61,5 @@\n-        JComboBox<String> cb = new JComboBox<>();\n-        cb.setEditable(true);\n-        cb.addItem(\"test\");\n-        cb.addItem(\"test2\");\n-        cb.addItem(\"test3\");\n+            closeButton = new JButton(\"Close\");\n+            closeButton.addActionListener((e) -> {\n+                        clickComboBox();\n+                        frame.setVisible(false);\n+                    });\n@@ -70,9 +67,5 @@\n-        JButton b = new JButton(\"Close\");\n-        b.addActionListener(\n-                (e)->{\n-                    try {\n-                        Thread.sleep(3000);\n-                    } catch (Exception ignored) {\n-                    }\n-                    frame.setVisible(false);\n-                });\n+            frame.getContentPane().add(comboBox, \"North\");\n+            frame.getContentPane().add(closeButton, \"South\");\n+            frame.setSize(200, 200);\n+            frame.setVisible(true);\n+        });\n@@ -80,3 +73,13 @@\n-        frame.getContentPane().add(cb, \"North\");\n-        frame.getContentPane().add(b, \"South\");\n-        frame.setSize(200, 200);\n+        comboBoxLocation = comboBox.getLocationOnScreen();\n+        comboBoxSize = comboBox.getSize();\n+\n+        try {\n+            SwingUtilities.invokeAndWait(() -> closeButton.doClick());\n+        }\n+        catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+        finally {\n+            SwingUtilities.invokeAndWait(() -> frame.dispose());\n+        }\n+    }\n@@ -84,1 +87,4 @@\n-        return frame;\n+    public static void clickComboBox() {\n+        int padding = 10;\n+        robot.mouseMove(comboBoxLocation.x + comboBoxSize.width - padding, comboBoxLocation.y + comboBoxSize.height \/ 2);\n+        robot.clickMouse(InputEvent.BUTTON1_MASK);\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/ComboPopupBug.java","additions":49,"deletions":43,"binary":false,"changes":92,"status":"modified"}]}