{"files":[{"patch":"@@ -139,0 +139,2 @@\n+java\/awt\/List\/KeyEventsTest\/KeyEventsTest.java 8201307 linux-all\n+java\/awt\/Paint\/ListRepaint.java 8201307 linux-all\n","filename":"test\/jdk\/ProblemList.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n- * @author Jitender(jitender.singh@eng.sun.com) area=AWT\n- * @author yan\n@@ -35,2 +33,13 @@\n-import java.awt.*;\n-import java.awt.event.*;\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.TextField;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.awt.event.WindowFocusListener;\n@@ -40,3 +49,3 @@\n-    private Frame frame, frame2;\n-    private Button button, button2;\n-    private TextField textField, textField2;\n+    private volatile Frame frame, frame2;\n+    private volatile Button button, button2;\n+    private volatile TextField textField, textField2;\n@@ -50,1 +59,1 @@\n-    public static void main(String[] args) {\n+    public static void main(String[] args) throws Exception {\n@@ -55,1 +64,1 @@\n-            EventQueue.invokeLater(() -> {\n+            EventQueue.invokeAndWait(() -> {\n","filename":"test\/jdk\/java\/awt\/Frame\/MiscUndecorated\/ActiveAWTWindowTest.java","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -36,2 +36,0 @@\n-import java.awt.EventQueue;\n-import java.awt.KeyboardFocusManager;\n@@ -39,0 +37,1 @@\n+import java.awt.KeyboardFocusManager;\n@@ -54,1 +53,1 @@\n-    TestState currentState;\n+    private volatile TestState currentState;\n@@ -69,1 +68,1 @@\n-            EventQueue.invokeAndWait(app::initAndShowGui);\n+            app.initAndShowGui();\n@@ -74,5 +73,3 @@\n-            EventQueue.invokeAndWait(() -> {\n-                if (app.keyFrame != null) {\n-                    app.keyFrame.dispose();\n-                }\n-            });\n+            if (app.keyFrame != null) {\n+                app.keyFrame.dispose();\n+            }\n@@ -187,21 +184,29 @@\n-            EventQueue.invokeAndWait(() -> {\n-                list.deselect(0);\n-                list.deselect(1);\n-                list.deselect(2);\n-                list.deselect(3);\n-                list.deselect(4);\n-                list.deselect(5);\n-                list.deselect(6);\n-                list.deselect(7);\n-                list.deselect(8);\n-\n-                int selectIndex = 0;\n-                int visibleIndex = 0;\n-\n-                if (currentState.getScrollMoved()) {\n-                    if (currentState.getKeyID() == KeyEvent.VK_PAGE_UP ||\n-                            currentState.getKeyID() == KeyEvent.VK_HOME) {\n-                        selectIndex = 8;\n-                        visibleIndex = 8;\n-                    } else if (currentState.getKeyID() == KeyEvent.VK_PAGE_DOWN ||\n-                            currentState.getKeyID() == KeyEvent.VK_END) {\n+            list.deselect(0);\n+            list.deselect(1);\n+            list.deselect(2);\n+            list.deselect(3);\n+            list.deselect(4);\n+            list.deselect(5);\n+            list.deselect(6);\n+            list.deselect(7);\n+            list.deselect(8);\n+\n+            int selectIndex = 0;\n+            int visibleIndex = 0;\n+\n+            if (currentState.getScrollMoved()) {\n+                if (currentState.getKeyID() == KeyEvent.VK_PAGE_UP ||\n+                        currentState.getKeyID() == KeyEvent.VK_HOME) {\n+                    selectIndex = 8;\n+                    visibleIndex = 8;\n+                } else if (currentState.getKeyID() == KeyEvent.VK_PAGE_DOWN ||\n+                        currentState.getKeyID() == KeyEvent.VK_END) {\n+                    selectIndex = 0;\n+                    visibleIndex = 0;\n+                }\n+            } else {\n+                if (currentState.getKeyID() == KeyEvent.VK_PAGE_UP ||\n+                        currentState.getKeyID() == KeyEvent.VK_HOME) {\n+                    if (currentState.getSelectedMoved()) {\n+                        selectIndex = 1;\n+                    } else {\n@@ -209,1 +214,0 @@\n-                        visibleIndex = 0;\n@@ -211,17 +215,7 @@\n-                } else {\n-                    if (currentState.getKeyID() == KeyEvent.VK_PAGE_UP ||\n-                            currentState.getKeyID() == KeyEvent.VK_HOME) {\n-                        if (currentState.getSelectedMoved()) {\n-                            selectIndex = 1;\n-                        } else {\n-                            selectIndex = 0;\n-                        }\n-                        visibleIndex = 0;\n-                    } else if (currentState.getKeyID() == KeyEvent.VK_PAGE_DOWN ||\n-                            currentState.getKeyID() == KeyEvent.VK_END) {\n-                        if (currentState.getSelectedMoved()) {\n-                            selectIndex = 7;\n-                        } else {\n-                            selectIndex = 8;\n-                        }\n-                        visibleIndex = 8;\n+                    visibleIndex = 0;\n+                } else if (currentState.getKeyID() == KeyEvent.VK_PAGE_DOWN ||\n+                        currentState.getKeyID() == KeyEvent.VK_END) {\n+                    if (currentState.getSelectedMoved()) {\n+                        selectIndex = 7;\n+                    } else {\n+                        selectIndex = 8;\n@@ -229,0 +223,1 @@\n+                    visibleIndex = 8;\n@@ -230,3 +225,4 @@\n-                list.select(selectIndex);\n-                list.makeVisible(visibleIndex);\n-            });\n+            }\n+            list.select(selectIndex);\n+            list.makeVisible(visibleIndex);\n+\n","filename":"test\/jdk\/java\/awt\/List\/KeyEventsTest\/KeyEventsTest.java","additions":47,"deletions":51,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,2 +24,4 @@\n-\n-import java.awt.*;\n+import java.awt.Button;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n@@ -31,1 +33,0 @@\n- * @author Sergey Bylokhov\n@@ -37,9 +38,15 @@\n-            final Frame frame = new Frame();\n-            frame.setSize(300, 300);\n-            frame.setLocationRelativeTo(null);\n-            ButtonRepaint button = new ButtonRepaint();\n-            frame.add(button);\n-            frame.setVisible(true);\n-            sleep();\n-            button.test();\n-            frame.dispose();\n+            Frame frame = null;\n+            try {\n+                frame = new Frame();\n+                frame.setSize(300, 300);\n+                frame.setLocationRelativeTo(null);\n+                ButtonRepaint button = new ButtonRepaint();\n+                frame.add(button);\n+                frame.setVisible(true);\n+                sleep();\n+                button.test();\n+            } finally {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            }\n","filename":"test\/jdk\/java\/awt\/Paint\/ButtonRepaint.java","additions":20,"deletions":13,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,4 @@\n-import java.awt.*;\n+import java.awt.Checkbox;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n@@ -30,1 +33,0 @@\n- * @author Sergey Bylokhov\n@@ -36,9 +38,15 @@\n-            final Frame frame = new Frame();\n-            frame.setSize(300, 300);\n-            frame.setLocationRelativeTo(null);\n-            CheckboxRepaint checkbox = new CheckboxRepaint();\n-            frame.add(checkbox);\n-            frame.setVisible(true);\n-            sleep();\n-            checkbox.test();\n-            frame.dispose();\n+            Frame frame = null;\n+            try {\n+                frame = new Frame();\n+                frame.setSize(300, 300);\n+                frame.setLocationRelativeTo(null);\n+                CheckboxRepaint checkbox = new CheckboxRepaint();\n+                frame.add(checkbox);\n+                frame.setVisible(true);\n+                sleep();\n+                checkbox.test();\n+            } finally {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            }\n","filename":"test\/jdk\/java\/awt\/Paint\/CheckboxRepaint.java","additions":20,"deletions":12,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n- * @author Sergey Bylokhov\n@@ -39,9 +38,15 @@\n-            final Frame frame = new Frame();\n-            frame.setSize(300, 300);\n-            frame.setLocationRelativeTo(null);\n-            LabelRepaint label = new LabelRepaint();\n-            frame.add(label);\n-            frame.setVisible(true);\n-            sleep();\n-            label.test();\n-            frame.dispose();\n+            Frame frame = null;\n+            try {\n+                frame = new Frame();\n+                frame.setSize(300, 300);\n+                frame.setLocationRelativeTo(null);\n+                LabelRepaint label = new LabelRepaint();\n+                frame.add(label);\n+                frame.setVisible(true);\n+                sleep();\n+                label.test();\n+            } finally {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            }\n","filename":"test\/jdk\/java\/awt\/Paint\/LabelRepaint.java","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n- * @author Sergey Bylokhov\n@@ -37,4 +36,1 @@\n-    static ListRepaint listRepaint;\n-    static Frame frame;\n-\n-    public static void main(final String[] args) throws Exception {\n+    public static void main(final String[] args) {\n@@ -42,0 +38,1 @@\n+            Frame frame = null;\n@@ -43,1 +40,11 @@\n-                EventQueue.invokeLater(ListRepaint::createAndShowGUI);\n+                frame = new Frame();\n+                frame.setSize(300, 300);\n+                frame.setLocationRelativeTo(null);\n+                ListRepaint list = new ListRepaint();\n+                list.add(\"1\");\n+                list.add(\"2\");\n+                list.add(\"3\");\n+                list.add(\"4\");\n+                list.select(0);\n+                frame.add(list);\n+                frame.setVisible(true);\n@@ -45,1 +52,1 @@\n-                EventQueue.invokeAndWait(listRepaint::test);\n+                list.test();\n@@ -47,6 +54,3 @@\n-                EventQueue.invokeAndWait(() -> {\n-                    if (frame != null) {\n-                        frame.dispose();\n-                        frame = null;\n-                    }\n-                });\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n@@ -64,16 +68,0 @@\n-    static void createAndShowGUI() {\n-        frame = new Frame();\n-        frame.setSize(300, 300);\n-        frame.setLocationRelativeTo(null);\n-\n-        listRepaint = new ListRepaint();\n-        listRepaint.add(\"1\");\n-        listRepaint.add(\"2\");\n-        listRepaint.add(\"3\");\n-        listRepaint.add(\"4\");\n-        listRepaint.select(0);\n-\n-        frame.add(listRepaint);\n-        frame.setVisible(true);\n-    }\n-\n","filename":"test\/jdk\/java\/awt\/Paint\/ListRepaint.java","additions":17,"deletions":29,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.awt.Dimension;\n@@ -35,0 +36,3 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n@@ -43,3 +47,2 @@\n-    static volatile int buttonW;\n-    static volatile int buttonH;\n-    static volatile boolean passed = true;\n+    private static final CountDownLatch anyButton = new CountDownLatch(1);\n+    private static final CountDownLatch mouseButton1 = new CountDownLatch(1);\n@@ -57,4 +60,3 @@\n-                    if ((e.getModifiers() & InputEvent.BUTTON1_MASK)\n-                            != InputEvent.BUTTON1_MASK) {\n-                        System.out.println(\"Status: Failed\");\n-                        passed = false;\n+                    System.err.println(\"ActionEvent: \" + e);\n+                    if ((e.getModifiers() & InputEvent.BUTTON1_MASK) != 0) {\n+                        mouseButton1.countDown();\n@@ -62,0 +64,1 @@\n+                    anyButton.countDown();\n@@ -65,1 +68,0 @@\n-                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n@@ -71,3 +73,3 @@\n-                pt = button.getLocationOnScreen();\n-                buttonW = button.getSize().width;\n-                buttonH = button.getSize().height;\n+                Point loc = button.getLocationOnScreen();\n+                Dimension size = button.getSize();\n+                pt = new Point(loc.x + size.width \/ 2, loc.y + size.height \/ 2);\n@@ -76,1 +78,1 @@\n-            robot.mouseMove(pt.x + buttonW \/ 2, pt.y + buttonH \/ 2);\n+            robot.mouseMove(pt.x, pt.y);\n@@ -84,2 +86,5 @@\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.delay(500);\n+            if (anyButton.await(3, TimeUnit.SECONDS)) {\n+                \/\/ Restore robot state\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                throw new RuntimeException(\"Unexpected ActionEvent\");\n+            }\n@@ -87,2 +92,3 @@\n-            if (!passed) {\n-                throw new RuntimeException(\"Test Failed\");\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            if (!mouseButton1.await(2, TimeUnit.SECONDS)) {\n+                throw new RuntimeException(\"Missing ActionEvent for BUTTON1\");\n","filename":"test\/jdk\/javax\/swing\/JButton\/bug4490179.java","additions":22,"deletions":16,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @author Oleg Mokhovikov\n@@ -35,4 +34,1 @@\n-import java.awt.*;\n-import javax.swing.*;\n-import javax.swing.event.MenuListener;\n-import javax.swing.event.MenuEvent;\n+import java.awt.Robot;\n@@ -41,0 +37,9 @@\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+import javax.swing.event.MenuEvent;\n+import javax.swing.event.MenuListener;\n+\n@@ -91,1 +96,5 @@\n-        SwingUtilities.invokeAndWait(() -> frame.dispose());\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (frame != null) {\n+                frame.dispose();\n+            }\n+        });\n","filename":"test\/jdk\/javax\/swing\/plaf\/basic\/BasicMenuUI\/4983388\/bug4983388.java","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"}]}