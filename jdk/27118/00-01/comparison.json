{"files":[{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8354522 8358880\n+ * @bug 8354522 8358880 8367324\n","filename":"test\/jdk\/java\/text\/Format\/DecimalFormat\/CloneTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Level;\n@@ -56,1 +57,2 @@\n-    public BigDecimal[] bdValues;\n+    public BigDecimal[] bdLargeValues;\n+    public BigDecimal[] bdSmallValues;\n@@ -58,1 +60,1 @@\n-    @Setup\n+    @Setup(Level.Invocation)\n@@ -64,1 +66,1 @@\n-        bdValues = DoubleStream.of(values)\n+        bdLargeValues = DoubleStream.of(values)\n@@ -68,0 +70,3 @@\n+        bdSmallValues = DoubleStream.of(values)\n+                .mapToObj(BigDecimal::valueOf)\n+                .toArray(BigDecimal[]::new);\n@@ -83,7 +88,2 @@\n-        for (double value : values) {\n-            \/\/ bd is recreated each time to avoid the effect of internal caching\n-            \/\/ of the toString value if the BigDecimal instance was reused.\n-\n-            \/\/ This will create \"small\" BigDecimals where unscaled value fits in a long.\n-            BigDecimal bd = BigDecimal.valueOf(value);\n-            blackhole.consume(this.dnf.format(bd));\n+        for (BigDecimal value : bdSmallValues) {\n+            blackhole.consume(this.dnf.format(value));\n@@ -96,7 +96,2 @@\n-        for (BigDecimal value : bdValues) {\n-            \/\/ bd is recreated each time to avoid the effect of internal caching\n-            \/\/ of the toString value if the BigDecimal instance was reused.\n-\n-            BigDecimal bd = new BigDecimal(value.unscaledValue(), value.scale());\n-\n-            blackhole.consume(this.dnf.format(bd));\n+        for (BigDecimal value : bdLargeValues) {\n+            blackhole.consume(this.dnf.format(value));\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/text\/DefFormatterBench.java","additions":13,"deletions":18,"binary":false,"changes":31,"status":"modified"}]}