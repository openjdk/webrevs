[{"commit":{"message":"refactor is_P6_or_later and remove cpu_family==18"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp"}],"sha":"3378eaee8ec66b295711c5ca5bbe4d1585b5131a"},{"commit":{"message":"Update src\/hotspot\/cpu\/x86\/assembler_x86.cpp\n\nCo-authored-by: Jatin Bhateja <jatin.bhateja@intel.com>"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"c6718a15cfddea4fd6d472f4c2e9afd30a78c008"},{"commit":{"message":"Update src\/hotspot\/cpu\/x86\/assembler_x86.cpp\n\nCo-authored-by: Jatin Bhateja <jatin.bhateja@intel.com>"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"131f11a311924a860b157811cc72e3e52e154044"},{"commit":{"message":"Update src\/hotspot\/cpu\/x86\/assembler_x86.cpp\r\n\r\ncoding style\n\nCo-authored-by: Jatin Bhateja <jatin.bhateja@intel.com>"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"6000e248af4d6f4c56c110ca8dd8512b5ee8b6ee"},{"commit":{"message":"refactor to use is_P6_or_later()"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"}],"sha":"110db1420962cdc469f5d38da414125f036b9e45"},{"commit":{"message":"rename byte1 to opcode_byte"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"158353a8ebd366ce7e47ef97afb763732c6e4ecd"},{"commit":{"message":"rename evex_opcode_prefix_and_encode as emit_eevex_or_demote"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"1d77584f2fdb113d9bd357b73a5890c32f94ec7f"},{"commit":{"message":"rename evex to eevex in method names"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"7ad8a51da6f8f064ab2cc879d284ec01fb38519b"},{"commit":{"message":"reset swap=false as default"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"76cddf081ae107c062127d0595387b7f26058fb1"},{"commit":{"message":"Rename single argument evex_opcode_prefix_encode to emit_eevex"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"9a517c2fd4c6a65855c5d94a151adcc3b4a38749"},{"commit":{"message":"rename evex_opcode_prefix_and_encode with imm8 to emit_eevex_or_demote"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"95190a1e2dcf741da1dd380125d439e79c159a49"},{"commit":{"message":"refactor evex_prefix_int8_operand"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"d47ee0b56cc3219a2da93f93fb2d3b0cc97d9497"},{"commit":{"message":"flip the swap to true"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"980ad38632175c953c458a754e99270a9c391366"},{"commit":{"message":"refactor evex_opcode_prefix_and_encode_swap to a single fuction; rename functions"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"d46d40f966df8740b518dd785a2236cee654bb84"},{"commit":{"message":"emit_eevex_prefix_or_demote_arith_ndd"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"00553e9450a615015ab6a2bc1a09e991100f74c1"},{"commit":{"message":"refactor to use opcode_byte & ternary op for comparison"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"c00865904bf1b59ffceffd632ac4521a0d319e54"},{"commit":{"message":"Update src\/hotspot\/cpu\/x86\/assembler_x86.cpp\r\n\r\nChange int b1 to int opcode_byte\n\nCo-authored-by: Jatin Bhateja <jatin.bhateja@intel.com>"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"c3e8f9ec571d4e387c7368c1416523c536ea006a"},{"commit":{"message":"Update x86-asmtest.py to enable demotion by default and make test generation optional"},"files":[{"filename":"test\/hotspot\/gtest\/x86\/asmtest.out.h"},{"filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py"}],"sha":"b2e8fd2a40095920af90da542c68832f2fd90be8"},{"commit":{"message":"complete tests refactoring to work with full_set"},"files":[{"filename":"test\/hotspot\/gtest\/x86\/asmtest.out.h"},{"filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py"}],"sha":"65656aaed8aa1b045ac3cccdbb0f0f84cb1e7fbb"},{"commit":{"message":"refactor demotion for full_set[4\/5]"},"files":[{"filename":"test\/hotspot\/gtest\/x86\/asmtest.out.h"},{"filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py"}],"sha":"53c7262d3a2c58d9ca9962792d6facd4fb9e1ab5"},{"commit":{"message":"refactor demotion for full_set[3\/5]"},"files":[{"filename":"test\/hotspot\/gtest\/x86\/asmtest.out.h"},{"filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py"}],"sha":"bebccb0f2b04335e8e8df9a35b0ef5d25b94e4d7"},{"commit":{"message":"refactor demotion for full_set[2\/5]"},"files":[{"filename":"test\/hotspot\/gtest\/x86\/asmtest.out.h"},{"filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py"}],"sha":"9c98a9828fe43414d9d345169370cda33d0a21bf"},{"commit":{"message":"refactor RegRegRegImmNddInstruction demotion to work for full set as well"},"files":[{"filename":"test\/hotspot\/gtest\/x86\/test_assembler_x86.cpp"},{"filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py"}],"sha":"26213de4f78b198f174e04eb13395047fc766ad6"},{"commit":{"message":"move demote loop in tests to to outer most"},"files":[{"filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py"}],"sha":"c82df6da02aca326cc331001737e1a37850ae1cf"},{"commit":{"message":"clean up gtest generation for full_set=False"},"files":[{"filename":"test\/hotspot\/gtest\/x86\/asmtest.out.h"},{"filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py"}],"sha":"e48c2bb39492c3080f193890259bcbef748adf35"},{"commit":{"message":"remove redundant reg_mem_reg match rule for commutative ALU opcodes"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"7cfcebe9aa152d2b7e5b250bcf7dcd0ace658ea2"},{"commit":{"message":"Add \/*MAP 4*\/ comment next to VEX_OPCODE_0F_3C"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"ca7ba027a52f8f5d4a23239f832edacdc0ce80f0"},{"commit":{"message":"Update src\/hotspot\/cpu\/x86\/assembler_x86.cpp\r\n\r\nReorder comment\n\nCo-authored-by: Jatin Bhateja <jatin.bhateja@intel.com>"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"21333a5c8261c141d954760a02af9daa8754307a"},{"commit":{"message":"Fix for UseAddressNop related failure"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp"}],"sha":"4e7497109843e5c5245bd81a1c5c885be00f8bfa"},{"commit":{"message":"eimull revert fully to original version"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"8761f77051f3d90e92b2a82d47403bf33c960579"},{"commit":{"message":"undo demotion for eimul for RRImm"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"},{"filename":"test\/hotspot\/gtest\/x86\/asmtest.out.h"},{"filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py"}],"sha":"228936e2875760ae73e69de228f3a887fee6efbc"},{"commit":{"message":"use size == EVEX_16bit to emit 0x66"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"ca6b83a316ba68d6a929e70654077c50e5856ef4"},{"commit":{"message":"remove unused functions: orw and evex_prefix_int8_operand_ndd"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"67d9b3b961ba768f9fef302f625e9302286b943b"},{"commit":{"message":"more clarifying comments next to boolean literals"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"d1c1b077ab5b3947933bf8210ae70e8dd7ab01cb"},{"commit":{"message":"add \/*use_prefixq*\/ comment next to boolean literal"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"}],"sha":"386ebe41f295abe9bd67ec39bcaa9cc3116a5107"},{"commit":{"message":"replace evex_opcode_and_int16_nf with evex_opcode_prefix_and_encode"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"a1bea4e4bd37dfdabacb1a6945fbef78538e20a1"},{"commit":{"message":"Remove unused functions"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"a865a79bb2a8336039319244810840d94b70da87"},{"commit":{"message":"replace evex_opcode_and_int16_ndd with evex_opcode_prefix_and_encode_swap"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"d215ff1537e55fd10cd09032a97e03b94ec2d3a0"},{"commit":{"message":"replace evex_opcode_int24_ndd with evex_opcode_prefix_and_encode"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"03b7b653ac3d57a31fa5bc717423ea1e78539719"},{"commit":{"message":"Replace evex_opcode_int16_ndd with evex_opcode_prefix_encoding"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"ced1962662808de3b15bb87dc821f9a2185e29f8"},{"commit":{"message":"refactor emit_arith and evex_prefix_int8_operand"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"929108366030cd30aad10adb12a37b00e2ec806f"},{"commit":{"message":"cleanup ecmov, eorw and other refactoring"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"6a01e74757f8a39af61195fa3c1384bb921454a6"},{"commit":{"message":"refactoring done for ecmov RRR and others"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"2768cc5236fc820e84b495ce94f9ef7067436b6f"},{"commit":{"message":"WIP: cleanup refactoring"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"ac53cd13029a9bb5a028c5d115364b81af4380d1"},{"commit":{"message":"merge master"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"a494e4238963a2faf869e0ae8f10c4b97bd0d863"},{"commit":{"message":"rename demote flag to optimize_rax_dst in emit_arith"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"e065333090dde94f8188b69f6fa45c3f9bc3ef4e"},{"commit":{"message":"fix emit_arith_ndd discrepancy"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"c2cd9c7043f5f32404f311a26c037a0a3f80ce2e"},{"commit":{"message":"refactor imul instructions to fold demotion logic inside"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"1fa0fbe4576f42af56232097d5c8469a8db70c9f"},{"commit":{"message":"refactor APX NDD shift instrcutions to do demotion internally"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"ca750e3efb2ca5474b51226729d02489b264cd42"},{"commit":{"message":"RRM refactorted to use a unified evex_ndd_and_int8 function"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"}],"sha":"3b5d9856d5c8ebd87987b67e1e1859c8136848c7"},{"commit":{"message":"RRM refactoring works for exorb and exorw"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"1e666ba2187dcc9f80d86c774ee98719f39edefe"},{"commit":{"message":"refactor RRM instructions to avoid explicit demotion"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"bc69f3234dc47da6727f9cd6826a8da2932e4d1b"},{"commit":{"message":"refactor esetzucc to do encoding without a demote flag"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"09d3c3a82ac7f3e0f5ee40a2551dc682853a2520"},{"commit":{"message":"Disable demotion for esetzucc and cleanup code"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"}],"sha":"bd8460887ee703e9b2aab65ee2d0e5605fc7d06d"},{"commit":{"message":"8351994: Enable Extended EVEX to REX2\/REX demotion when src and dst are the same"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp"},{"filename":"test\/hotspot\/gtest\/x86\/asmtest.out.h"},{"filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py"}],"sha":"6a7ca6b245b028d3c72aac8d91e1e63105029c8d"}]