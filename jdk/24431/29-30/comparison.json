{"files":[{"patch":"@@ -1426,1 +1426,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x03, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x03, no_flags);\n@@ -1657,1 +1657,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x23, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x23, no_flags);\n@@ -1816,1 +1816,1 @@\n-  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x40 | cc, false \/* no_flags *\/, true \/* is_map1 *\/, true \/* swap *\/);\n+  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x40 | cc, false \/* no_flags *\/, true \/* is_map1 *\/);\n@@ -1828,1 +1828,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, (0x40 | cc) , false \/* no_flags *\/, true \/* is_map1 *\/);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, (0x40 | cc) , false \/* no_flags *\/, true \/* is_map1 *\/);\n@@ -2517,1 +2517,1 @@\n-  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0xAF, no_flags, true \/* is_map1 *\/, true \/* swap *\/);\n+  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0xAF, no_flags, true \/* is_map1 *\/);\n@@ -2580,1 +2580,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, (unsigned char)0xAF, no_flags, true \/* is_map1 *\/);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, (unsigned char)0xAF, no_flags, true \/* is_map1 *\/);\n@@ -4445,1 +4445,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x0B, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x0B, no_flags);\n@@ -6800,1 +6800,1 @@\n-  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0xA5, no_flags, true \/* is_map1 *\/);\n+  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0xA5, no_flags, true \/* is_map1 *\/, false \/* swap *\/);\n@@ -6818,1 +6818,1 @@\n-  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0xAD, no_flags, true \/* is_map1 *\/);\n+  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0xAD, no_flags, true \/* is_map1 *\/, false \/* swap *\/);\n@@ -6985,1 +6985,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x2B, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x2B, no_flags);\n@@ -7299,1 +7299,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x33, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_32bit, 0x33, no_flags);\n@@ -7340,1 +7340,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_8bit, 0x32, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_8bit, 0x32, no_flags);\n@@ -7369,1 +7369,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_66, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_16bit, 0x33, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_66, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_16bit, 0x33, no_flags);\n@@ -12856,2 +12856,2 @@\n-void Assembler::evex_prefix_int8_operand(Register dst, Register src1, Address src2, VexSimdPrefix pre, VexOpcode opc,\n-                                         int size, int opcode_byte, bool no_flags, bool is_map1) {\n+void Assembler::evex_opcode_prefix_and_encode(Register dst, Register src1, Address src2, VexSimdPrefix pre, VexOpcode opc,\n+                                              int size, int opcode_byte, bool no_flags, bool is_map1) {\n@@ -13007,2 +13007,2 @@\n-int Assembler::emit_eevex_prefix_or_demote_ndd(int dst_enc, VexSimdPrefix pre, VexOpcode opc,\n-                                               InstructionAttr *attributes, bool no_flags) {\n+int Assembler::evex_prefix_and_encode_ndd(int dst_enc, VexSimdPrefix pre, VexOpcode opc,\n+                                          InstructionAttr *attributes, bool no_flags) {\n@@ -14536,1 +14536,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x03, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x03, no_flags);\n@@ -14633,1 +14633,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x23, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x23, no_flags);\n@@ -14798,1 +14798,1 @@\n-  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x40 | cc, false \/* no_flags *\/, true \/* is_map1 *\/, true \/* swap *\/);\n+  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x40 | cc, false \/* no_flags *\/, true \/* is_map1 *\/);\n@@ -14810,1 +14810,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, (0x40 | cc) , false \/* no_flags *\/, true \/* is_map1 *\/);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, (0x40 | cc) , false \/* no_flags *\/, true \/* is_map1 *\/);\n@@ -15007,1 +15007,1 @@\n-  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0xAF, no_flags, true \/* is_map1 *\/, true \/* swap *\/);\n+  evex_opcode_prefix_and_encode(dst->encoding(), src1->encoding(), src2->encoding(), VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0xAF, no_flags, true \/* is_map1 *\/);\n@@ -15091,1 +15091,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, (unsigned char)0xAF, no_flags, true \/* is_map1 *\/);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, (unsigned char)0xAF, no_flags, true \/* is_map1 *\/);\n@@ -15504,1 +15504,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x0B, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x0B, no_flags);\n@@ -16185,1 +16185,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x2B, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x2B, no_flags);\n@@ -16274,1 +16274,1 @@\n-  evex_prefix_int8_operand(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x33, no_flags);\n+  evex_opcode_prefix_and_encode(dst, src1, src2, VEX_SIMD_NONE, VEX_OPCODE_0F_3C \/* MAP4 *\/, EVEX_64bit, 0x33, no_flags);\n@@ -16311,1 +16311,1 @@\n-  int encode =  emit_eevex_prefix_or_demote_ndd(dst->encoding(), VEX_SIMD_F2, VEX_OPCODE_0F_3C \/* MAP4 *\/, &attributes); \/\/ demotion disabled\n+  int encode =  evex_prefix_and_encode_ndd(dst->encoding(), VEX_SIMD_F2, VEX_OPCODE_0F_3C \/* MAP4 *\/, &attributes); \/\/ demotion disabled\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -778,3 +778,0 @@\n-  void evex_prefix_int8_operand(Register dst, Register src1, Address src2, VexSimdPrefix pre, VexOpcode opc,\n-                                int size, int b1, bool no_flags = false, bool is_map1 = false);\n-\n@@ -787,1 +784,1 @@\n-  int  vex_prefix_and_encode(int dst_enc, int nds_enc, int src_enc,\n+  int vex_prefix_and_encode(int dst_enc, int nds_enc, int src_enc,\n@@ -791,2 +788,2 @@\n-  int  emit_eevex_prefix_or_demote_ndd(int dst_enc, int nds_enc, int src_enc, VexSimdPrefix pre, VexOpcode opc,\n-                                       InstructionAttr *attributes, bool no_flags = false, bool use_prefixq = false);\n+  int evex_prefix_and_encode_nf(int dst_enc, int nds_enc, int src_enc, VexSimdPrefix pre, VexOpcode opc,\n+                                InstructionAttr *attributes, bool no_flags = false);\n@@ -794,2 +791,2 @@\n-  int  emit_eevex_prefix_or_demote_ndd(int dst_enc, int nds_enc, VexSimdPrefix pre, VexOpcode opc,\n-                                       InstructionAttr *attributes, bool no_flags = false, bool use_prefixq = false);\n+  int evex_prefix_and_encode_ndd(int dst_enc, VexSimdPrefix pre, VexOpcode opc,\n+                                 InstructionAttr *attributes, bool no_flags = false);\n@@ -797,2 +794,2 @@\n-  int  emit_eevex_prefix_or_demote_ndd(int dst_enc, VexSimdPrefix pre, VexOpcode opc,\n-                                       InstructionAttr *attributes, bool no_flags = false);\n+  int emit_eevex_prefix_or_demote_ndd(int dst_enc, int nds_enc, int src_enc, VexSimdPrefix pre, VexOpcode opc,\n+                                      InstructionAttr *attributes, bool no_flags = false, bool use_prefixq = false);\n@@ -800,2 +797,2 @@\n-  int  evex_prefix_and_encode_nf(int dst_enc, int nds_enc, int src_enc, VexSimdPrefix pre, VexOpcode opc,\n-                                 InstructionAttr *attributes, bool no_flags = false);\n+  int emit_eevex_prefix_or_demote_ndd(int dst_enc, int nds_enc, VexSimdPrefix pre, VexOpcode opc,\n+                                      InstructionAttr *attributes, bool no_flags = false, bool use_prefixq = false);\n@@ -806,0 +803,3 @@\n+  void evex_opcode_prefix_and_encode(Register dst, Register src1, Address src2, VexSimdPrefix pre, VexOpcode opc,\n+                                     int size, int b1, bool no_flags = false, bool is_map1 = false);\n+\n@@ -807,1 +807,1 @@\n-                                     int size, int byte1, bool no_flags, bool is_map1 = false, bool swap = false);\n+                                     int size, int byte1, bool no_flags, bool is_map1 = false, bool swap = true);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"}]}