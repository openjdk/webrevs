{"files":[{"patch":"@@ -2561,1 +2561,8 @@\n-  evex_opcode_prefix_and_encode(dst->encoding(), src->encoding(), value, VEX_SIMD_NONE, \/* MAP4 *\/VEX_OPCODE_0F_3C, EVEX_32bit, no_flags);\n+  InstructionAttr attributes(AVX_128bit, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  int encode = evex_prefix_and_encode_nf(dst->encoding(), 0, src->encoding(), VEX_SIMD_NONE, \/* MAP4 *\/VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  if (is8bit(value)) {\n+    emit_int24(0x6B, (0xC0 | encode), (value & 0xFF));\n+  } else {\n+    emit_int16(0x69, (0xC0 | encode));\n+    emit_int32(value);\n+  }\n@@ -12935,21 +12942,0 @@\n-void Assembler::evex_opcode_prefix_and_encode(int dst_enc, int src_enc, int value, VexSimdPrefix pre, VexOpcode opc,\n-                                              int size, bool no_flags) {\n-  int encode;\n-  bool is_prefixq = (size == EVEX_64bit) ? true : false;\n-  if (is_demotable(no_flags, dst_enc, src_enc)) {\n-    encode = is_prefixq ? prefixq_and_encode(dst_enc, src_enc) : prefix_and_encode(dst_enc, src_enc);\n-  }\n-  else {\n-    InstructionAttr attributes(AVX_128bit, is_prefixq, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n-    attributes.set_address_attributes(\/* tuple_type *\/ EVEX_NOSCALE, size);\n-    attributes.set_is_evex_instruction();\n-    encode = vex_prefix_and_encode(dst_enc, 0, src_enc, pre, opc, &attributes, \/* src_is_gpr *\/ true, \/* nds_is_ndd *\/ false, no_flags);\n-  }\n-  if (is8bit(value)) {\n-    emit_int24(0x6B, (0xC0 | encode), value & 0xFF);\n-  } else {\n-    emit_int16(0x69, (0xC0 | encode));\n-    emit_int32(value);\n-  }\n-}\n-\n@@ -15081,1 +15067,8 @@\n-  evex_opcode_prefix_and_encode(dst->encoding(), src->encoding(), value, VEX_SIMD_NONE, \/* MAP4 *\/VEX_OPCODE_0F_3C, EVEX_64bit, no_flags);\n+  InstructionAttr attributes(AVX_128bit, \/* vex_w *\/ true, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  int encode = evex_prefix_and_encode_nf(dst->encoding(), 0, src->encoding(), VEX_SIMD_NONE, \/* MAP4 *\/VEX_OPCODE_0F_3C, &attributes, no_flags);\n+  if (is8bit(value)) {\n+    emit_int24(0x6B, (0xC0 | encode), (value & 0xFF));\n+  } else {\n+    emit_int16(0x69, (0xC0 | encode));\n+    emit_int32(value);\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":16,"deletions":23,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -815,3 +815,0 @@\n-  void evex_opcode_prefix_and_encode(int dst_enc, int src_enc, int value, VexSimdPrefix pre, VexOpcode opc,\n-                                     int size, bool no_flags);\n-\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -316,1 +316,1 @@\n-    __ eimull(r15, r15, 16777216, false);                                       \/\/    imul r15d, 16777216    IID292\n+    __ eimull(r15, r15, 16777216, false);                                       \/\/    {EVEX}imul r15d, r15d, 16777216    IID292\n@@ -775,1 +775,1 @@\n-    __ eimulq(r8, r8, 1, false);                                                \/\/    imul r8, 1    IID743\n+    __ eimulq(r8, r8, 1, false);                                                \/\/    {EVEX}imul r8, r8, 1    IID743\n@@ -1274,1 +1274,1 @@\n-    0x45, 0x69, 0xff, 0x00, 0x00, 0x00, 0x01,                                        \/\/ IID292\n+    0x62, 0x54, 0x7c, 0x08, 0x69, 0xff, 0x00, 0x00, 0x00, 0x01,                      \/\/ IID292\n@@ -1731,1 +1731,1 @@\n-    0x4d, 0x6b, 0xc0, 0x01,                                                          \/\/ IID743\n+    0x62, 0x54, 0xfc, 0x08, 0x6b, 0xc0, 0x01,                                        \/\/ IID743\n@@ -2231,1 +2231,1 @@\n-    7,    \/\/ IID292\n+    10,   \/\/ IID292\n@@ -2688,1 +2688,1 @@\n-    4,    \/\/ IID743\n+    7,    \/\/ IID743\n","filename":"test\/hotspot\/gtest\/x86\/asmtest.out.h","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -414,1 +414,1 @@\n-        if self.demote:\n+        if self.demote and self._aname not in ['imul']:\n","filename":"test\/hotspot\/gtest\/x86\/x86-asmtest.py","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}