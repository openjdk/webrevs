{"files":[{"patch":"@@ -4398,6 +4398,0 @@\n-void Assembler::orw(Register dst, Register src) {\n-  emit_int8(0x66);\n-  (void) prefix_and_encode(dst->encoding(), src->encoding());\n-  emit_arith(0x0B, 0xC0, dst, src);\n-}\n-\n@@ -12962,19 +12956,0 @@\n-void Assembler::evex_prefix_int8_operand_ndd(Register dst, Register src1, Address src2, VexSimdPrefix pre, VexOpcode opc,\n-                                             InstructionAttr *attributes, int byte1, bool use_prefixq, bool no_flags, bool is_map1) {\n-  if (is_demotable(no_flags, dst->encoding(), src1->encoding())) {\n-    if (use_prefixq) {\n-      emit_prefix_and_int8(get_prefixq(src2, dst, is_map1), byte1);\n-    }\n-    else {\n-      prefix(src2, dst, false, is_map1);\n-      emit_int8(byte1);\n-    }\n-  }\n-  else {\n-    attributes->set_is_evex_instruction();\n-    vex_prefix(src2, dst->encoding(), src1->encoding(), pre, opc, attributes, \/* nds_is_ndd *\/ true, no_flags);\n-    emit_int8(byte1);\n-  }\n-  emit_operand(src1, src2, 0);\n-}\n-\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -806,3 +806,0 @@\n-  void evex_prefix_int8_operand_ndd(Register dst, Register src1, Address src2, VexSimdPrefix pre, VexOpcode opc,\n-                                    InstructionAttr *attributes, int byte1, bool use_prefixq = false, bool no_flags = false, bool is_map1 = true);\n-\n@@ -1746,1 +1743,0 @@\n-  void orw(Register dst, Register src);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}