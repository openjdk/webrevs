{"files":[{"patch":"@@ -490,0 +490,8 @@\n+  \/\/ Sets the java.lang.Thread state of the given JavaThread to reflect it is doing a regular,\n+  \/\/ or timed, Object.wait call.\n+  \/\/\n+  \/\/ The interruptible parameter, if false, indicates an internal uninterruptible wait,\n+  \/\/ in which case we do not update the java.lang.Thread state. We do that by passing\n+  \/\/ the current state to the JavaThreadStatusChanger so no actual change is observable,\n+  \/\/ and skip the statistics updates. This avoids having to duplicate code paths for\n+  \/\/ the interruptible and non-interruptible cases in the caller.\n@@ -492,1 +500,0 @@\n-                            \/\/ This helper should do nothing when interruptible == false, so we set active = false.\n@@ -495,1 +502,1 @@\n-    if (is_alive() && interruptible) { \/\/ non-interruptible is not active\n+    if (is_alive() && interruptible) { \/\/ in non-interruptible case we set _active = false below\n","filename":"src\/hotspot\/share\/services\/threadService.hpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}