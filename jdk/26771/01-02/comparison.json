{"files":[{"patch":"@@ -78,4 +78,11 @@\n-        #ifdef _SIGSET_NWORDS\n-            printf(\"%X \", act.sa_flags);\n-            for (size_t i = 0; i < _SIGSET_NWORDS; i++) {\n-                printf(\"%lX \", act.sa_mask.__val[i]);\n+        \/\/ Note: for shortness, just print out the first 32. That should\n+        \/\/ cover most of the useful ones, apart from realtime signals.\n+        const int NUM_IMPORTANT_SIGS = 32;\n+        printf(\"%X \", act.sa_flags);\n+        char buf[NUM_IMPORTANT_SIGS + 1];\n+        for (size_t sig = 1; sig <= NUM_IMPORTANT_SIGS; sig++) {\n+            int rc = sigismember(&act.sa_mask, sig);\n+            if (rc == -1) {\n+                buf[sig - 1] = '?';\n+            } else {\n+                buf[sig - 1] = rc ? '1' : '0';\n@@ -83,4 +90,3 @@\n-            printf(\"\\n\");\n-        #else\n-            printf(\"%X %X\\n\", act.sa_flags, act.sa_mask);\n-        #endif\n+        }\n+        buf[NUM_IMPORTANT_SIGS] = '\\0';\n+        printf(\"%s\\n\", buf);\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/childSignalDisposition\/exePrintSignalDisposition.c","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"}]}