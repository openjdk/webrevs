{"files":[{"patch":"@@ -1067,0 +1067,1 @@\n+  k->cache_modifier_flags(computed_modifiers);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -294,1 +294,2 @@\n-Klass::Klass() : _kind(UnknownKlassKind) {\n+Klass::Klass() : _kind(UnknownKlassKind),\n+                 _cached_modifier_flags(max_jushort) {\n@@ -303,0 +304,1 @@\n+                               _cached_modifier_flags(max_jushort),\n@@ -331,0 +333,4 @@\n+void Klass::cache_modifier_flags(int flags) {\n+  _cached_modifier_flags = checked_cast<u2>(flags);\n+}\n+\n@@ -332,3 +338,4 @@\n-  int mods = java_lang_Class::modifiers(java_mirror());\n-  assert(mods == compute_modifier_flags(), \"should be same\");\n-  return mods;\n+  int flags = checked_cast<int>(_cached_modifier_flags);\n+  assert(flags != max_jushort, \"should be initialized\");\n+  assert(flags == compute_modifier_flags(), \"should be same\");\n+  return flags;\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -126,0 +126,5 @@\n+\n+  \/\/ Java mirror carries the modifier flags. This cached field allows accessing\n+  \/\/ modifiers when Java mirror is already dead, e.g. during class unloading.\n+  u2 _cached_modifier_flags;\n+\n@@ -753,0 +758,1 @@\n+  void cache_modifier_flags(int flags);\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}