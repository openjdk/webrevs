{"files":[{"patch":"@@ -1067,1 +1067,0 @@\n-  k->cache_modifier_flags(computed_modifiers);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -350,1 +350,1 @@\n-  writer->write(klass->modifier_flags());\n+  writer->write(klass->compute_modifier_flags());\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -294,2 +294,1 @@\n-Klass::Klass() : _kind(UnknownKlassKind),\n-                 _cached_modifier_flags(max_jushort) {\n+Klass::Klass() : _kind(UnknownKlassKind) {\n@@ -304,1 +303,0 @@\n-                               _cached_modifier_flags(max_jushort),\n@@ -333,4 +331,0 @@\n-void Klass::cache_modifier_flags(int flags) {\n-  _cached_modifier_flags = checked_cast<u2>(flags);\n-}\n-\n@@ -338,4 +332,3 @@\n-  int flags = checked_cast<int>(_cached_modifier_flags);\n-  assert(flags != max_jushort, \"should be initialized\");\n-  assert(flags == compute_modifier_flags(), \"should be same\");\n-  return flags;\n+  int mods = java_lang_Class::modifiers(java_mirror());\n+  assert(mods == compute_modifier_flags(), \"should be same\");\n+  return mods;\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -126,5 +126,0 @@\n-\n-  \/\/ Java mirror carries the modifier flags. This cached field allows accessing\n-  \/\/ modifiers when Java mirror is already dead, e.g. during class unloading.\n-  u2 _cached_modifier_flags;\n-\n@@ -757,0 +752,3 @@\n+  \/\/ Compute out modifier flags from the original data, instead of relying\n+  \/\/ on Java mirror field. This is also allows accessing modifier flags\n+  \/\/ when Java mirror is already dead, e.g. during class unloading.\n@@ -758,1 +756,0 @@\n-  void cache_modifier_flags(int flags);\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}