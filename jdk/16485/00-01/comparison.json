{"files":[{"patch":"@@ -247,1 +247,15 @@\n- * Linker implementations may optionally support additional layouts, such as 'packed' struct layouts.\n+ * Linker implementations may optionally support additional layouts, such as <em>packed<\/em> struct layouts.\n+ * A packed struct is a struct in which there is at least one member layout {@code L} that has an alignment\n+ * constraint less than its natural alignment. This allows avoiding padding between member layouts,\n+ * as well as avoiding padding at the end of the struct layout. For example:\n+ * {@snippet lang = java:\n+ * \/\/ No padding between the 2 element layouts:\n+ * MemoryLayout noFieldPadding = MemoryLayout.structLayout(\n+ *         ValueLayout.JAVA_INT,\n+ *         ValueLayout.JAVA_DOUBLE.withByteAlignment(4));\n+ *\n+ * \/\/ No padding at the end of the struct:\n+ * MemoryLayout noTrailingPadding = MemoryLayout.structLayout(\n+ *         ValueLayout.JAVA_DOUBLE.withByteAlignment(4),\n+ *         ValueLayout.JAVA_INT);\n+ * }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"}]}