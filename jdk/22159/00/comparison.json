{"files":[{"patch":"@@ -28,2 +28,0 @@\n-import java.security.AccessController;\n-\n@@ -33,1 +31,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -72,2 +69,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String osVersion = AccessController.doPrivileged(new GetPropertyAction(\"os.version\"));\n+        String osVersion = System.getProperty(\"os.version\");\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIUtils.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    @SuppressWarnings({\"removal\", \"restricted\"})\n+    @SuppressWarnings(\"restricted\")\n@@ -63,7 +63,1 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Void>() {\n-                public Void run() {\n-                    System.loadLibrary(\"osx\");\n-                    return null;\n-                }\n-            });\n+        System.loadLibrary(\"osx\");\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/eio\/FileManager.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-    @SuppressWarnings({\"removal\", \"restricted\"})\n+    @SuppressWarnings(\"restricted\")\n@@ -70,7 +70,1 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Void>() {\n-                public Void run() {\n-                    System.loadLibrary(\"osxui\");\n-                    return null;\n-                }\n-            });\n+        System.loadLibrary(\"osxui\");\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFileView.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.security.PrivilegedAction;\n@@ -35,0 +34,1 @@\n+import com.apple.eawt.Application;\n@@ -85,1 +85,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -87,5 +86,1 @@\n-        return java.security.AccessController.doPrivileged(new PrivilegedAction<Image>() {\n-            public Image run() {\n-                return com.apple.eawt.Application.getApplication().getDockIconImage();\n-            }\n-        });\n+        return Application.getApplication().getDockIconImage();\n@@ -94,1 +89,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -96,5 +90,1 @@\n-        return java.security.AccessController.doPrivileged(new PrivilegedAction<String>() {\n-            public String run() {\n-                return FileManager.getPathToApplicationBundle();\n-            }\n-        });\n+        return FileManager.getPathToApplicationBundle();\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaImageFactory.java","additions":3,"deletions":13,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-    @SuppressWarnings({\"removal\", \"restricted\"})\n+    @SuppressWarnings(\"restricted\")\n@@ -159,14 +159,2 @@\n-        java.security.AccessController.doPrivileged(new PrivilegedAction<Void>() {\n-                public Void run() {\n-                    System.loadLibrary(\"osxui\");\n-                    return null;\n-                }\n-            });\n-\n-        java.security.AccessController.doPrivileged(new PrivilegedAction<Void>(){\n-            @Override\n-            public Void run() {\n-                JRSUIControl.initJRSUI();\n-                return null;\n-            }\n-        });\n+        System.loadLibrary(\"osxui\");\n+        JRSUIControl.initJRSUI();\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaLookAndFeel.java","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.security.AccessController;\n@@ -41,1 +40,0 @@\n-import sun.security.action.GetBooleanAction;\n@@ -44,1 +42,1 @@\n-@SuppressWarnings({\"removal\", \"restricted\"})\n+@SuppressWarnings(\"restricted\")\n@@ -48,5 +46,1 @@\n-        java.security.AccessController.doPrivileged(\n-                (java.security.PrivilegedAction<Void>) () -> {\n-            System.loadLibrary(\"osxui\");\n-            return null;\n-        });\n+        System.loadLibrary(\"osxui\");\n@@ -154,2 +148,1 @@\n-        return AccessController.doPrivileged(new GetBooleanAction(\n-                AquaLookAndFeel.sPropertyPrefix + \"useScreenMenuBar\"));\n+        return Boolean.getBoolean(AquaLookAndFeel.sPropertyPrefix + \"useScreenMenuBar\");\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaMenuBarUI.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-@SuppressWarnings({\"removal\", \"restricted\"})\n+@SuppressWarnings(\"restricted\")\n@@ -38,7 +38,1 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Void>() {\n-                public Void run() {\n-                    System.loadLibrary(\"osxui\");\n-                    return null;\n-                }\n-            });\n+        System.loadLibrary(\"osxui\");\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaNativeResources.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.security.AccessController;\n@@ -41,1 +40,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -75,3 +73,1 @@\n-        @SuppressWarnings(\"removal\")\n-        final String sizeProperty = AccessController.doPrivileged(\n-                new GetPropertyAction(SYSTEM_PROPERTY_KEY));\n+        final String sizeProperty = System.getProperty(SYSTEM_PROPERTY_KEY);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaUtilControlSize.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -44,1 +42,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -208,3 +205,1 @@\n-            @SuppressWarnings(\"removal\")\n-            final String sizeProperty = (String) AccessController.doPrivileged((PrivilegedAction<?>)new GetPropertyAction(\n-                    ANIMATIONS_PROPERTY));\n+            final String sizeProperty = System.getProperty(ANIMATIONS_PROPERTY);\n@@ -335,1 +330,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -339,15 +333,8 @@\n-            return AccessController.doPrivileged(\n-                new PrivilegedAction<Method>() {\n-                    @Override\n-                    public Method run() {\n-                        try {\n-                            final Method method = JComponent.class.getDeclaredMethod(\n-                                    \"getFlag\", new Class<?>[] { int.class });\n-                            method.setAccessible(true);\n-                            return method;\n-                        } catch (final Throwable ignored) {\n-                            return null;\n-                        }\n-                    }\n-                }\n-            );\n+            try {\n+                final Method method = JComponent.class.getDeclaredMethod(\n+                        \"getFlag\", new Class<?>[]{int.class});\n+                method.setAccessible(true);\n+                return method;\n+            } catch (final Throwable ignored) {\n+                return null;\n+            }\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaUtils.java","additions":9,"deletions":22,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    @SuppressWarnings({\"removal\", \"restricted\"})\n+    @SuppressWarnings(\"restricted\")\n@@ -50,7 +50,1 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Void>() {\n-                public Void run() {\n-                    System.loadLibrary(\"awt\");\n-                    return null;\n-                }\n-            });\n+        System.loadLibrary(\"awt\");\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/ScreenMenu.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -33,1 +31,1 @@\n-@SuppressWarnings({\"removal\", \"restricted\"})\n+@SuppressWarnings({\"restricted\"})\n@@ -37,1 +35,0 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n@@ -39,2 +36,0 @@\n-            return null;\n-        });\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/awt\/PlatformGraphicsInfo.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -150,4 +148,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String[] files = AccessController.doPrivileged((PrivilegedAction<String[]>) () -> {\n-            return new File(dirName).list(getTrueTypeFilter());\n-        });\n+        String[] files = new File(dirName).list(getTrueTypeFilter());\n@@ -208,1 +203,1 @@\n-    @SuppressWarnings(\"removal\")\n+\n@@ -214,12 +209,5 @@\n-            java.security.AccessController.doPrivileged(\n-                new java.security.PrivilegedAction<Object>() {\n-                    public Object run() {\n-                        if (!loadedAllFonts) {\n-                           loadNativeFonts();\n-                           registerItalicDerived();\n-                           loadedAllFonts = true;\n-                        }\n-                        return null;\n-                    }\n-                }\n-            );\n+            if (!loadedAllFonts) {\n+                loadNativeFonts();\n+                registerItalicDerived();\n+                loadedAllFonts = true;\n+            }\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CFontManager.java","additions":7,"deletions":19,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.security.PrivilegedAction;\n@@ -86,1 +85,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -88,51 +86,46 @@\n-        java.security.AccessController.doPrivileged(\n-                (PrivilegedAction<Object>) () -> {\n-                    PropertyState oglState = getBooleanProp(\"sun.java2d.opengl\", PropertyState.UNSPECIFIED);\n-                    PropertyState metalState = getBooleanProp(\"sun.java2d.metal\", PropertyState.UNSPECIFIED);\n-\n-                    \/\/ Handle invalid combinations to use the default rendering pipeline\n-                    \/\/ The default rendering pipeline is Metal\n-                    if ((oglState == PropertyState.UNSPECIFIED && metalState == PropertyState.UNSPECIFIED) ||\n-                        (oglState == PropertyState.DISABLED && metalState == PropertyState.DISABLED) ||\n-                        (oglState == PropertyState.ENABLED && metalState == PropertyState.ENABLED)) {\n-                        metalState = PropertyState.ENABLED; \/\/ Enable default pipeline\n-                        oglState = PropertyState.DISABLED; \/\/ Disable non-default pipeline\n-                    }\n-\n-                    if (metalState == PropertyState.UNSPECIFIED) {\n-                        if (oglState == PropertyState.DISABLED) {\n-                            oglEnabled = false;\n-                            metalEnabled = true;\n-                        } else {\n-                            oglEnabled = true;\n-                            metalEnabled = false;\n-                        }\n-                    } else if (metalState == PropertyState.ENABLED) {\n-                        oglEnabled = false;\n-                        metalEnabled = true;\n-                    } else if (metalState == PropertyState.DISABLED) {\n-                        oglEnabled = true;\n-                        metalEnabled = false;\n-                    }\n-\n-                    oglVerbose = isBooleanPropTrueVerbose(\"sun.java2d.opengl\");\n-                    metalVerbose = isBooleanPropTrueVerbose(\"sun.java2d.metal\");\n-\n-                    if (oglEnabled && !metalEnabled) {\n-                        \/\/ Check whether OGL is available\n-                        if (!CGLGraphicsConfig.isCGLAvailable()) {\n-                            if (oglVerbose) {\n-                                System.out.println(\"Could not enable OpenGL pipeline (CGL not available)\");\n-                            }\n-                            oglEnabled = false;\n-                            metalEnabled = true;\n-                        }\n-                    }\n-\n-                    \/\/ At this point one of the rendering pipeline must be enabled.\n-                    if (!metalEnabled && !oglEnabled) {\n-                        throw new InternalError(\"Error - unable to initialize any rendering pipeline.\");\n-                    }\n-\n-                    return null;\n-                });\n+        PropertyState oglState = getBooleanProp(\"sun.java2d.opengl\", PropertyState.UNSPECIFIED);\n+        PropertyState metalState = getBooleanProp(\"sun.java2d.metal\", PropertyState.UNSPECIFIED);\n+\n+        \/\/ Handle invalid combinations to use the default rendering pipeline\n+        \/\/ The default rendering pipeline is Metal\n+        if ((oglState == PropertyState.UNSPECIFIED && metalState == PropertyState.UNSPECIFIED) ||\n+            (oglState == PropertyState.DISABLED && metalState == PropertyState.DISABLED) ||\n+            (oglState == PropertyState.ENABLED && metalState == PropertyState.ENABLED)) {\n+            metalState = PropertyState.ENABLED; \/\/ Enable default pipeline\n+            oglState = PropertyState.DISABLED; \/\/ Disable non-default pipeline\n+        }\n+\n+        if (metalState == PropertyState.UNSPECIFIED) {\n+            if (oglState == PropertyState.DISABLED) {\n+                oglEnabled = false;\n+                metalEnabled = true;\n+            } else {\n+                oglEnabled = true;\n+                metalEnabled = false;\n+            }\n+        } else if (metalState == PropertyState.ENABLED) {\n+            oglEnabled = false;\n+            metalEnabled = true;\n+        } else if (metalState == PropertyState.DISABLED) {\n+            oglEnabled = true;\n+            metalEnabled = false;\n+        }\n+\n+        oglVerbose = isBooleanPropTrueVerbose(\"sun.java2d.opengl\");\n+        metalVerbose = isBooleanPropTrueVerbose(\"sun.java2d.metal\");\n+\n+        if (oglEnabled && !metalEnabled) {\n+            \/\/ Check whether OGL is available\n+            if (!CGLGraphicsConfig.isCGLAvailable()) {\n+                if (oglVerbose) {\n+                    System.out.println(\"Could not enable OpenGL pipeline (CGL not available)\");\n+                }\n+                oglEnabled = false;\n+                metalEnabled = true;\n+            }\n+        }\n+\n+        \/\/ At this point one of the rendering pipeline must be enabled.\n+        if (!metalEnabled && !oglEnabled) {\n+            throw new InternalError(\"Error - unable to initialize any rendering pipeline.\");\n+        }\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/MacOSFlags.java","additions":46,"deletions":53,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -61,2 +61,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -76,3 +74,2 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final String mtlShadersLib = AccessController.doPrivileged(\n-            (PrivilegedAction<String>) () ->\n+\n+    private static final String mtlShadersLib =\n@@ -80,1 +77,1 @@\n-                            \"lib\" + File.separator + \"shaders.metallib\");\n+                            \"lib\" + File.separator + \"shaders.metallib\";\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLGraphicsConfig.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -32,3 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -49,1 +46,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -55,1 +51,1 @@\n-        flusher = AccessController.doPrivileged((PrivilegedAction<QueueFlusher>) QueueFlusher::new);\n+        flusher = new QueueFlusher();\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLRenderQueue.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -61,2 +61,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -263,1 +261,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -265,12 +262,8 @@\n-        return AccessController.doPrivileged(new PrivilegedAction<AWTEventListener>() {\n-            public AWTEventListener run() {\n-                Toolkit toolkit = Toolkit.getDefaultToolkit();\n-                try {\n-                    Field field = Toolkit.class.getDeclaredField(\"eventListener\");\n-                    field.setAccessible(true);\n-                    return (AWTEventListener) field.get(toolkit);\n-                } catch (Exception e) {\n-                    throw new InternalError(e.toString());\n-                }\n-            }\n-        });\n+        Toolkit toolkit = Toolkit.getDefaultToolkit();\n+        try {\n+            Field field = Toolkit.class.getDeclaredField(\"eventListener\");\n+            field.setAccessible(true);\n+            return (AWTEventListener) field.get(toolkit);\n+        } catch (Exception e) {\n+            throw new InternalError(e.toString());\n+        }\n@@ -279,1 +272,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -281,13 +273,8 @@\n-        AccessController.doPrivileged(new PrivilegedAction<Void>() {\n-            public Void run() {\n-                Toolkit toolkit = Toolkit.getDefaultToolkit();\n-                try {\n-                    Field field = Toolkit.class.getDeclaredField(\"eventListener\");\n-                    field.setAccessible(true);\n-                    field.set(toolkit, listener);\n-                } catch (Exception e) {\n-                    throw new InternalError(e.toString());\n-                }\n-                return null;\n-            }\n-        });\n+        Toolkit toolkit = Toolkit.getDefaultToolkit();\n+        try {\n+            Field field = Toolkit.class.getDeclaredField(\"eventListener\");\n+            field.setAccessible(true);\n+            field.set(toolkit, listener);\n+        } catch (Exception e) {\n+            throw new InternalError(e.toString());\n+        }\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/LWComponentPeer.java","additions":16,"deletions":29,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import java.security.*;\n@@ -72,1 +71,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -75,18 +73,15 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            Runnable shutdownRunnable = () -> {\n-                shutdown();\n-                waitForRunState(STATE_CLEANUP);\n-            };\n-            Thread shutdown = new Thread(\n-                    ThreadGroupUtils.getRootThreadGroup(), shutdownRunnable,\n-                    \"AWT-Shutdown\", 0, false);\n-            shutdown.setContextClassLoader(null);\n-            Runtime.getRuntime().addShutdownHook(shutdown);\n-            String name = \"AWT-LW\";\n-            Thread toolkitThread = new Thread(\n-                   ThreadGroupUtils.getRootThreadGroup(), this, name, 0, false);\n-            toolkitThread.setDaemon(true);\n-            toolkitThread.setPriority(Thread.NORM_PRIORITY + 1);\n-            toolkitThread.start();\n-            return null;\n-        });\n+        Runnable shutdownRunnable = () -> {\n+            shutdown();\n+            waitForRunState(STATE_CLEANUP);\n+        };\n+        Thread shutdown = new Thread(\n+                ThreadGroupUtils.getRootThreadGroup(), shutdownRunnable,\n+                \"AWT-Shutdown\", 0, false);\n+        shutdown.setContextClassLoader(null);\n+        Runtime.getRuntime().addShutdownHook(shutdown);\n+        String name = \"AWT-LW\";\n+        Thread toolkitThread = new Thread(\n+               ThreadGroupUtils.getRootThreadGroup(), this, name, 0, false);\n+        toolkitThread.setDaemon(true);\n+        toolkitThread.setPriority(Thread.NORM_PRIORITY + 1);\n+        toolkitThread.start();\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/LWToolkit.java","additions":15,"deletions":20,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-    @SuppressWarnings({\"removal\", \"restricted\"})\n+    @SuppressWarnings(\"restricted\")\n@@ -83,7 +83,1 @@\n-        java.security.AccessController.doPrivileged(\n-            new java.security.PrivilegedAction<Void>() {\n-                public Void run() {\n-                    System.loadLibrary(\"awt\");\n-                    return null;\n-                }\n-            });\n+            System.loadLibrary(\"awt\");\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessibility.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,2 +62,1 @@\n-        @SuppressWarnings(\"removal\")\n-        String propValue = java.security.AccessController.doPrivileged(new sun.security.action.GetPropertyAction(\"apple.awt.dnd.defaultDragImageSize\"));\n+        String propValue = System.getProperty(\"apple.awt.dnd.defaultDragImageSize\");\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CDragSourceContextPeer.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,1 +54,0 @@\n-import java.security.AccessController;\n@@ -59,1 +58,0 @@\n-import sun.security.action.GetBooleanAction;\n@@ -68,6 +66,2 @@\n-                @SuppressWarnings(\"removal\")\n-                boolean navigateApps = !AccessController.doPrivileged(\n-                        new GetBooleanAction(\"apple.awt.use-file-dialog-packages\"));\n-                @SuppressWarnings(\"removal\")\n-                boolean chooseDirectories = AccessController.doPrivileged(\n-                        new GetBooleanAction(\"apple.awt.fileDialogForDirectories\"));\n+                boolean navigateApps = !Boolean.getBoolean(\"apple.awt.use-file-dialog-packages\");\n+                boolean chooseDirectories = Boolean.getBoolean(\"apple.awt.fileDialogForDirectories\");\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CFileDialog.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import java.security.AccessController;\n@@ -73,1 +72,0 @@\n-import sun.security.action.GetPropertyAction;\n@@ -134,3 +132,1 @@\n-    @SuppressWarnings(\"removal\")\n-    public static final String MAC_OS_TABBED_WINDOW = AccessController.doPrivileged(\n-            new GetPropertyAction(\"jdk.allowMacOSTabbedWindows\"));\n+    public static final String MAC_OS_TABBED_WINDOW = System.getProperty(\"jdk.allowMacOSTabbedWindows\");\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformWindow.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,2 +34,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -287,1 +285,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -347,8 +344,1 @@\n-                    printingLoop = AccessController.doPrivileged(new PrivilegedAction<SecondaryLoop>() {\n-                        @Override\n-                        public SecondaryLoop run() {\n-                            return Toolkit.getDefaultToolkit()\n-                                    .getSystemEventQueue()\n-                                    .createSecondaryLoop();\n-                        }\n-                    });\n+                    printingLoop =  Toolkit.getDefaultToolkit().getSystemEventQueue().createSecondaryLoop();\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterJob.java","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -48,2 +48,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -74,4 +72,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final boolean useTemplateImages = AccessController.doPrivileged((PrivilegedAction<Boolean>)\n-        () -> Boolean.getBoolean(\"apple.awt.enableTemplateImages\")\n-    );\n+    private static final boolean useTemplateImages = Boolean.getBoolean(\"apple.awt.enableTemplateImages\");\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CTrayIcon.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -90,2 +90,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -149,18 +147,8 @@\n-        @SuppressWarnings({\"removal\", \"restricted\"})\n-        ResourceBundle platformResources = java.security.AccessController.doPrivileged(\n-                new java.security.PrivilegedAction<ResourceBundle>() {\n-            @Override\n-            public ResourceBundle run() {\n-                ResourceBundle platformResources = null;\n-                try {\n-                    platformResources = ResourceBundle.getBundle(\"sun.awt.resources.awtosx\");\n-                } catch (MissingResourceException e) {\n-                    \/\/ No resource file; defaults will be used.\n-                }\n-\n-                System.loadLibrary(\"awt\");\n-                System.loadLibrary(\"fontmanager\");\n-\n-                return platformResources;\n-            }\n-        });\n+        ResourceBundle platformResources = null;\n+        try {\n+            platformResources = ResourceBundle.getBundle(\"sun.awt.resources.awtosx\");\n+        } catch (MissingResourceException e) {\n+            \/\/ No resource file; defaults will be used.\n+        }\n+\n+        loadLibrary();\n@@ -181,0 +169,6 @@\n+    @SuppressWarnings(\"restricted\")\n+    private static void loadLibrary() {\n+        System.loadLibrary(\"awt\");\n+        System.loadLibrary(\"fontmanager\");\n+    }\n+\n@@ -185,1 +179,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -187,4 +180,1 @@\n-            = AccessController.doPrivileged(new PrivilegedAction<Boolean>() {\n-        @Override\n-        public Boolean run() {\n-            return !Boolean.parseBoolean(\n+            = !Boolean.parseBoolean(\n@@ -192,2 +182,0 @@\n-        }\n-    });\n@@ -195,1 +183,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -198,1 +185,0 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n@@ -202,1 +188,1 @@\n-            System.setProperty(extraButtons, \"\"+areExtraMouseButtonsEnabled);\n+            System.setProperty(extraButtons, \"\" + areExtraMouseButtonsEnabled);\n@@ -205,2 +191,0 @@\n-            return null;\n-        });\n@@ -257,1 +241,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -260,1 +243,0 @@\n-            AccessController.doPrivileged( (PrivilegedAction<Object>) () -> {\n@@ -262,2 +244,0 @@\n-                return null;\n-            });\n@@ -595,1 +575,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -598,4 +577,1 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            Thread.currentThread().setContextClassLoader(null);\n-            return null;\n-        });\n+        Thread.currentThread().setContextClassLoader(null);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/LWCToolkit.java","additions":17,"deletions":41,"binary":false,"changes":58,"status":"modified"}]}