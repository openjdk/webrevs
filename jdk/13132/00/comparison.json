{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.io.IOException;\n@@ -44,1 +45,0 @@\n-import java.io.IOException;\n@@ -76,1 +76,0 @@\n-    private final boolean needToResolveAgainstDefaultDirectory;\n@@ -79,0 +78,3 @@\n+    \/\/ lazily initialized in needToResolveAgainstDefaultDirectory()\n+    private Boolean needToResolveAgainstDefaultDirectory;\n+\n@@ -87,22 +89,0 @@\n-        \/\/ if process-wide chdir is allowed or default directory is not the\n-        \/\/ process working directory then paths must be resolved against the\n-        \/\/ default directory.\n-        String propValue = GetPropertyAction\n-                .privilegedGetProperty(\"sun.nio.fs.chdirAllowed\", \"false\");\n-        boolean chdirAllowed = propValue.isEmpty() ? true : Boolean.parseBoolean(propValue);\n-        if (chdirAllowed) {\n-            this.needToResolveAgainstDefaultDirectory = true;\n-        } else {\n-            byte[] cwd = UnixNativeDispatcher.getcwd();\n-            boolean defaultIsCwd = (cwd.length == defaultDirectory.length);\n-            if (defaultIsCwd) {\n-                for (int i=0; i<cwd.length; i++) {\n-                    if (cwd[i] != defaultDirectory[i]) {\n-                        defaultIsCwd = false;\n-                        break;\n-                    }\n-                }\n-            }\n-            this.needToResolveAgainstDefaultDirectory = !defaultIsCwd;\n-        }\n-\n@@ -119,0 +99,25 @@\n+        \/\/ OK if two or more threads initialize this instance variable\n+        if (needToResolveAgainstDefaultDirectory == null) {\n+            \/\/ if process-wide chdir is allowed or default directory is not the\n+            \/\/ process working directory then paths must be resolved against the\n+            \/\/ default directory.\n+            String propValue = GetPropertyAction\n+                .privilegedGetProperty(\"sun.nio.fs.chdirAllowed\", \"false\");\n+            boolean chdirAllowed = Boolean.parseBoolean(propValue);\n+\n+            if (chdirAllowed) {\n+                this.needToResolveAgainstDefaultDirectory = true;\n+            } else {\n+                byte[] cwd = UnixNativeDispatcher.getcwd();\n+                boolean defaultIsCwd = (cwd.length == defaultDirectory.length);\n+                if (defaultIsCwd) {\n+                    for (int i=0; i<cwd.length; i++) {\n+                        if (cwd[i] != defaultDirectory[i]) {\n+                            defaultIsCwd = false;\n+                            break;\n+                        }\n+                    }\n+                }\n+                this.needToResolveAgainstDefaultDirectory = !defaultIsCwd;\n+            }\n+        }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystem.java","additions":29,"deletions":24,"binary":false,"changes":53,"status":"modified"}]}