{"files":[{"patch":"@@ -563,0 +563,3 @@\n+\/\/ A named constant for the integral representation of a Java null.\n+const intptr_t NULL_WORD = 0;\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -74,18 +74,0 @@\n-\/\/ NULL vs NULL_WORD:\n-\/\/ On Linux NULL is defined as a special type '__null'. Assigning __null to\n-\/\/ integer variable will cause gcc warning. Use NULL_WORD in places where a\n-\/\/ pointer is stored as integer value.  On some platforms, sizeof(intptr_t) >\n-\/\/ sizeof(void*), so here we want something which is integer type, but has the\n-\/\/ same size as a pointer.\n-#ifdef __GNUC__\n-  #ifdef _LP64\n-    #define NULL_WORD  0L\n-  #else\n-    \/\/ Cast 0 to intptr_t rather than int32_t since they are not the same type\n-    \/\/ on platforms such as Mac OS X.\n-    #define NULL_WORD  ((intptr_t)0)\n-  #endif\n-#else\n-  #define NULL_WORD  NULL\n-#endif\n-\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions_gcc.hpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -75,6 +75,0 @@\n-\/\/ NULL vs NULL_WORD:\n-\/\/ On Linux NULL is defined as a special type '__null'. Assigning __null to\n-\/\/ integer variable will cause gcc warning. Use NULL_WORD in places where a\n-\/\/ pointer is stored as integer value.\n-#define NULL_WORD NULL\n-\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions_visCPP.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}