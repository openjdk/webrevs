{"files":[{"patch":"@@ -108,13 +108,0 @@\n-\n-JVMFlag::Error MonitorUnlinkBatchConstraintFunc(intx value, bool verbose) {\n-  if (value < 1 || value > MonitorDeflationMax || value > max_jint) {\n-    JVMFlag::printError(verbose,\n-                        \"MonitorUnlinkBatch (\" INTX_FORMAT \") must be positive, \"\n-                        \"less or equal MonitorDeflationMax (\" INTX_FORMAT \"), \"\n-                        \"and less than limit (%d) \\n\",\n-                        value, MonitorDeflationMax, max_jint);\n-    return JVMFlag::VIOLATES_CONSTRAINT;\n-  } else {\n-    return JVMFlag::SUCCESS;\n-  }\n-}\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.cpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -41,2 +41,1 @@\n-  f(size_t, NUMAInterleaveGranularityConstraintFunc)  \\\n-  f(intx,   MonitorUnlinkBatchConstraintFunc)\n+  f(size_t, NUMAInterleaveGranularityConstraintFunc)\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -737,2 +737,2 @@\n-          \"The maximum number of monitors to unlink in one batch.\")         \\\n-          constraint(MonitorUnlinkBatchConstraintFunc, AfterErgo)           \\\n+          \"The maximum number of monitors to unlink in one batch. \")        \\\n+          range(1, max_jint)                                                \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,2 +87,2 @@\n-\/\/ Walk the in-use list and unlink (at most MonitorDeflationMax) deflated\n-\/\/ ObjectMonitors. Returns the number of unlinked ObjectMonitors.\n+\/\/ Walk the in-use list and unlink deflated ObjectMonitors.\n+\/\/ Returns the number of unlinked ObjectMonitors.\n@@ -91,0 +91,1 @@\n+                                    size_t deflated_count,\n@@ -103,0 +104,3 @@\n+      \/\/ Look for at most MonitorUnlinkBatch monitors, or the number of\n+      \/\/ deflated and not unlinked monitors, whatever comes first.\n+      size_t unlink_limit = MIN2<size_t>(deflated_count - unlinked_count, MonitorUnlinkBatch);\n@@ -108,1 +112,1 @@\n-        if (unlink_batch++ >= (size_t)MonitorUnlinkBatch) {\n+        if (unlink_batch++ >= unlink_limit) {\n@@ -140,1 +144,1 @@\n-      if (unlinked_count >= (size_t)MonitorDeflationMax) {\n+      if (unlinked_count >= deflated_count) {\n@@ -142,0 +146,1 @@\n+        \/\/ There should be no more deflated monitors left.\n@@ -1661,1 +1666,1 @@\n-    unlinked_count = _in_use_list.unlink_deflated(current, ls, &timer, &delete_list);\n+    unlinked_count = _in_use_list.unlink_deflated(current, ls, &timer, deflated_count, &delete_list);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+                         size_t deflated_count,\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @requires vm.flagless\n@@ -40,0 +39,6 @@\n+\/*\n+ * @test id=legal\n+ * @library \/test\/lib\n+ * @run driver MonitorUnlinkBatchTest legal\n+ *\/\n+\n@@ -42,1 +47,0 @@\n- * @requires vm.flagless\n@@ -49,1 +53,0 @@\n- * @requires vm.flagless\n@@ -56,1 +59,0 @@\n- * @requires vm.flagless\n@@ -117,1 +119,9 @@\n-                test(true);\n+                test(\"\");\n+                break;\n+\n+            case \"legal\":\n+                \/\/ Legal, even if not useful settings\n+                test(\"\",\n+                     \"-XX:MonitorDeflationMax=100000\",\n+                     \"-XX:MonitorUnlinkBatch=100001\"\n+                     );\n@@ -122,5 +132,2 @@\n-                test(false,\n-                    \"-XX:MonitorUnlinkBatch=-1\"\n-                );\n-                test(false,\n-                    \"-XX:MonitorUnlinkBatch=0\"\n+                test(\"outside the allowed range\",\n+                     \"-XX:MonitorUnlinkBatch=-1\"\n@@ -128,3 +135,2 @@\n-                test(false,\n-                    \"-XX:MonitorDeflationMax=100000\",\n-                    \"-XX:MonitorUnlinkBatch=100001\"\n+                test(\"outside the allowed range\",\n+                     \"-XX:MonitorUnlinkBatch=0\"\n@@ -136,2 +142,2 @@\n-                test(true,\n-                    \"-XX:MonitorUnlinkBatch=1\"\n+                test(\"\",\n+                     \"-XX:MonitorUnlinkBatch=1\"\n@@ -143,3 +149,3 @@\n-                test(true,\n-                    \"-XX:MonitorDeflationMax=1000000\",\n-                    \"-XX:MonitorUnlinkBatch=1000000\"\n+                test(\"\",\n+                     \"-XX:MonitorDeflationMax=1000000\",\n+                     \"-XX:MonitorUnlinkBatch=1000000\"\n@@ -154,1 +160,1 @@\n-    public static void test(boolean expectPass, String... args) throws Exception {\n+    public static void test(String msg, String... args) throws Exception {\n@@ -164,1 +170,1 @@\n-        if (expectPass) {\n+        if (msg.isEmpty()) {\n@@ -168,1 +174,1 @@\n-            oa.shouldContain(\"must be positive, less or equal MonitorDeflationMax\");\n+            oa.shouldContain(msg);\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/MonitorUnlinkBatchTest.java","additions":27,"deletions":21,"binary":false,"changes":48,"status":"modified"}]}