{"files":[{"patch":"@@ -55,1 +55,1 @@\n-        Asserts.assertEqualsByteArray(prk.getEncoded(), expectedPrk,\n+        Asserts.assertEqualsByteArray(expectedPrk, prk.getEncoded(),\n@@ -58,1 +58,1 @@\n-        Asserts.assertEqualsByteArray(okm1.getEncoded(), expectedOkm,\n+        Asserts.assertEqualsByteArray(expectedOkm, okm1.getEncoded(),\n@@ -62,1 +62,1 @@\n-        Asserts.assertEqualsByteArray(okm2.getEncoded(), expectedOkm,\n+        Asserts.assertEqualsByteArray(expectedOkm, okm2.getEncoded(),\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/HKDFBasicFunctionsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-        Asserts.assertEqualsByteArray(secret, expectedSecret, \"Incorrect secret value\");\n+        Asserts.assertEqualsByteArray(expectedSecret, secret, \"Incorrect secret value\");\n@@ -144,1 +144,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/sun\/security\/ec\/ECDHPrimitive.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,2 +79,2 @@\n-                Asserts.assertEqualsByteArray(pk, toByteArray(c.get(\"pk\").asString()));\n-                Asserts.assertEqualsByteArray(sk, toByteArray(c.get(\"sk\").asString()));\n+                Asserts.assertEqualsByteArray(toByteArray(c.get(\"pk\").asString()), pk);\n+                Asserts.assertEqualsByteArray(toByteArray(c.get(\"sk\").asString()), sk);\n@@ -107,1 +107,1 @@\n-                        sig, toByteArray(c.get(\"signature\").asString()));\n+                        toByteArray(c.get(\"signature\").asString()), sig);\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/ML_DSA_Test.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -73,2 +73,2 @@\n-                Asserts.assertEqualsByteArray(pk, toByteArray(c.get(\"ek\").asString()));\n-                Asserts.assertEqualsByteArray(sk, toByteArray(c.get(\"dk\").asString()));\n+                Asserts.assertEqualsByteArray(toByteArray(c.get(\"ek\").asString()), pk);\n+                Asserts.assertEqualsByteArray(toByteArray(c.get(\"dk\").asString()), sk);\n@@ -100,1 +100,1 @@\n-                            enc.encapsulation(), toByteArray(c.get(\"c\").asString()));\n+                            toByteArray(c.get(\"c\").asString()), enc.encapsulation());\n@@ -102,1 +102,1 @@\n-                            enc.key().getEncoded(), toByteArray(c.get(\"k\").asString()));\n+                            toByteArray(c.get(\"k\").asString()), enc.key().getEncoded());\n@@ -115,1 +115,1 @@\n-                    Asserts.assertEqualsByteArray(k.getEncoded(), toByteArray(c.get(\"k\").asString()));\n+                    Asserts.assertEqualsByteArray(toByteArray(c.get(\"k\").asString()), k.getEncoded());\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/ML_KEM_Test.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -49,2 +49,2 @@\n-                            Asserts.assertEqualsByteArray(md.digest(msg),\n-                                    toByteArray(c.get(\"md\").asString()));\n+                            Asserts.assertEqualsByteArray(\n+                                    toByteArray(c.get(\"md\").asString()), md.digest(msg));\n@@ -73,2 +73,2 @@\n-                                    Asserts.assertEqualsByteArray(MD,\n-                                            toByteArray(r.get(\"md\").asString()));\n+                                    Asserts.assertEqualsByteArray(\n+                                            toByteArray(r.get(\"md\").asString()), MD);\n@@ -91,2 +91,2 @@\n-                                    Asserts.assertEqualsByteArray(MD,\n-                                            toByteArray(r.get(\"md\").asString()));\n+                                    Asserts.assertEqualsByteArray(\n+                                            toByteArray(r.get(\"md\").asString()), MD);\n@@ -113,2 +113,2 @@\n-                        Asserts.assertEqualsByteArray(md.digest(),\n-                                toByteArray(c.get(\"md\").asString()));\n+                        Asserts.assertEqualsByteArray(\n+                                toByteArray(c.get(\"md\").asString()), md.digest());\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/SHA_Test.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-        Asserts.assertEqualsByteArray(b1, new byte[] {1, 2});\n+        Asserts.assertEqualsByteArray(new byte[] {1, 2}, b1);\n@@ -41,1 +41,1 @@\n-        Asserts.assertEqualsByteArray(b1, new byte[] {3, 4});\n+        Asserts.assertEqualsByteArray(new byte[] {3, 4}, b1);\n@@ -44,1 +44,1 @@\n-        Asserts.assertEqualsByteArray(b1, new byte[] {5, 6});\n+        Asserts.assertEqualsByteArray(new byte[] {5, 6}, b1);\n","filename":"test\/lib-test\/jdk\/test\/lib\/security\/FixedSecureRandomTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}