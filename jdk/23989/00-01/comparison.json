{"files":[{"patch":"@@ -84,0 +84,1 @@\n+            String opensslPath;\n@@ -85,6 +86,1 @@\n-                String opensslPath = OpensslArtifactFetcher.getOpensslPath();\n-                \/\/ if the current version of openssl is available, perform all\n-                \/\/ keytool <-> openssl interop tests\n-                generateInitialKeystores(opensslPath);\n-                testWithJavaCommands();\n-                testWithOpensslCommands(opensslPath);\n+                opensslPath = OpensslArtifactFetcher.getOpensslPath();\n@@ -96,1 +92,1 @@\n-                throw new SkippedException(exMsg);\n+                throw new SkippedException(exMsg, exc);\n@@ -98,0 +94,5 @@\n+            \/\/ if the current version of openssl is available, perform all\n+            \/\/ keytool <-> openssl interop tests\n+            generateInitialKeystores(opensslPath);\n+            testWithJavaCommands();\n+            testWithOpensslCommands(opensslPath);\n","filename":"test\/jdk\/sun\/security\/pkcs12\/KeytoolOpensslInteropTest.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-     * @param clazz a class annotated with {@link jdk.test.lib.artifacts.Artifact}\n+     * @param klass a class annotated with {@link jdk.test.lib.artifacts.Artifact}\n@@ -98,5 +98,4 @@\n-            Throwable cause = e.getCause();\n-            if (cause == null) {\n-                \/\/ if property doesn't exist\n-                throw new IOException(\"Cannot resolve artifact, \"\n-                        + \"please check if JIB jar is present in classpath.\");\n+            Artifact artifact = klass.getAnnotation(Artifact.class);\n+            String message;\n+            if (artifact != null) {\n+                message = \"Cannot find the artifact \" + artifact.name();\n@@ -104,3 +103,1 @@\n-                \/\/ can't get it from the repository\n-                throw new IOException(\"Fetch artifact failed: \" + klass\n-                        + \"\\nPlease make sure the artifact is available.\", e);\n+                message = \"Class \" + klass.getName() + \" missing @Artifact annotation.\";\n@@ -108,0 +105,1 @@\n+            throw new IOException(message);\n","filename":"test\/lib\/jdk\/test\/lib\/artifacts\/ArtifactResolver.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"}]}