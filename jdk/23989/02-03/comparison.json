{"files":[{"patch":"@@ -235,4 +235,0 @@\n-        if (libPath == null) {\n-            return null;\n-        }\n-\n@@ -252,6 +248,1 @@\n-        Path nssLibPath = fetchNssLib(osid, libraryName);\n-        if (nssLibPath == null) {\n-            throw new SkippedException(\"Warning: unsupported OS: \" + osid\n-                    + \", please initialize NSS library location, skipping test\");\n-        }\n-        return nssLibPath;\n+        return fetchNssLib(osid, libraryName);\n@@ -743,1 +734,1 @@\n-                return null;\n+                throw new SkippedException(\"Unsupported OS: \" + osId);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-        if ((LIBPATH == null) || (!loadNSPR(LIBPATH))) {\n+        if (!loadNSPR(LIBPATH)) {\n","filename":"test\/jdk\/sun\/security\/pkcs11\/SecmodTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,10 +85,0 @@\n-            if (opensslPath == null) {\n-                String exMsg = \"Can't find the version: \"\n-                        + OpensslArtifactFetcher.getTestOpensslBundleVersion()\n-                        + \" of openssl binary on this machine, please install\"\n-                        + \" and set openssl path with property 'test.openssl.path'\";\n-                throw new SkippedException(exMsg);\n-            }\n-\n-            \/\/ if the current version of openssl is available, perform all\n-            \/\/ keytool <-> openssl interop tests\n","filename":"test\/jdk\/sun\/security\/pkcs12\/KeytoolOpensslInteropTest.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import jtreg.SkippedException;\n@@ -29,1 +28,0 @@\n-import java.io.IOException;\n","filename":"test\/jdk\/sun\/security\/provider\/acvp\/Launcher.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.IOException;\n@@ -78,1 +77,1 @@\n-     * annotation. The file name should have the format ARTIFACT_NAME-VERSION.EXT\n+     * annotation.\n@@ -81,2 +80,3 @@\n-     * specify that by setting the System property:\n-     * <code>jdk.test.lib.artifacts.ARTIFACT_NAME<\/code>\n+     * specify that by setting the system property:\n+     * <code>jdk.test.lib.artifacts.ARTIFACT_NAME<\/code>. Where ARTIFACT_NAME\n+     * is the name field of the Artifact annotation.\n@@ -92,1 +92,1 @@\n-     * directory of the uncompressed file.\n+     * directory of the uncompressed file(s).\n","filename":"test\/lib\/jdk\/test\/lib\/artifacts\/ArtifactResolver.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -26,2 +26,0 @@\n-import java.io.IOException;\n-\n@@ -33,0 +31,1 @@\n+import jtreg.SkippedException;\n@@ -52,0 +51,1 @@\n+     * @throws SkippedException if a valid version of OpenSSL cannot be found\n@@ -78,1 +78,10 @@\n-        return verifyOpensslVersion(path, OPENSSL_BUNDLE_VERSION) ? path : null;\n+\n+        if (!verifyOpensslVersion(path, OPENSSL_BUNDLE_VERSION)) {\n+            String exMsg = \"Can't find the version: \"\n+                    + OpensslArtifactFetcher.getTestOpensslBundleVersion()\n+                    + \" of openssl binary on this machine, please install\"\n+                    + \" and set openssl path with property 'test.openssl.path'\";\n+            throw new SkippedException(exMsg);\n+        } else {\n+            return path;\n+        }\n","filename":"test\/lib\/jdk\/test\/lib\/security\/OpensslArtifactFetcher.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"}]}