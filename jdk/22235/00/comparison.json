{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,3 @@\n+import java.lang.classfile.ClassFile;\n+import java.lang.classfile.ClassTransform;\n+import java.lang.classfile.MethodModel;\n@@ -95,1 +98,16 @@\n-            this.findByteCode = findByteCode;\n+            boolean allowClinits = \"true\".equals(\n+                    System.getProperty(\"sun.hotspot.tools.ctwrunner.allow_clinits\", \"true\"));\n+\n+            this.findByteCode = allowClinits ? findByteCode\n+                : findByteCode.andThen(PathEntryClassLoader::sterilizeClinits);\n+        }\n+\n+        \/**\n+         * Removes 'clinit' methods to prevent code execution\n+         *\/\n+        private static byte[] sterilizeClinits(byte[] src) {\n+            ClassFile classFile = ClassFile.of();\n+            return classFile.transformClass(classFile.parse(src),\n+                    ClassTransform.dropping(\n+                        element -> element instanceof MethodModel mm\n+                                   && mm.methodName().stringValue().equals(\"<clinit>\")));\n","filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/src\/sun\/hotspot\/tools\/ctw\/PathHandler.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"}]}