{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -429,0 +429,3 @@\n+  assert(is_aligned(highest_start, attach_point_alignment), \"precondition\");\n+  assert(is_aligned(lowest_start, attach_point_alignment), \"precondition\");\n+\n@@ -430,2 +433,0 @@\n-  \/\/ Cap num_attempts at possible number.\n-  \/\/ At least one is possible even for 0 sized attach range.\n@@ -434,0 +435,2 @@\n+  const uint64_t num_intervals = num_attempts_to_try - 1;\n+  const size_t stepsize = num_intervals == 0 ? 0 : align_down(attach_range \/ num_intervals, attach_point_alignment);\n@@ -435,7 +438,2 @@\n-  const size_t stepsize = (attach_range == 0) ? \/\/ Only one try.\n-    (size_t) highest_start : align_up(attach_range \/ num_attempts_to_try, attach_point_alignment);\n-\n-  \/\/ Try attach points from top to bottom.\n-  for (char* attach_point = highest_start;\n-       attach_point >= lowest_start && attach_point <= highest_start;  \/\/ Avoid wrap around.\n-       attach_point -= stepsize) {\n+  for (uint64_t i = 0; i < num_attempts_to_try; ++i) {\n+    char* const attach_point = highest_start - stepsize * i;\n","filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"}]}