[{"commit":{"message":"rewrite function HeapReserver::Instance::try_reserve_range for avoid calculation addresses outside of the range"},"files":[{"filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp"}],"sha":"97a2cab98b644d19b48e8affb0e6c09bbe867e80"},{"commit":{"message":"convert attach_point to size_t ang then convert to char* again, to avoid ubsan report \"produced null pointer\" fail."},"files":[{"filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp"}],"sha":"7d8299d5fd36a8e04633e6727b8782cdbb1d4f16"},{"commit":{"message":"Use explicitness of the pointer-based iteration and remove unnecessary comment"},"files":[{"filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp"}],"sha":"bfc8521f2acd8a4d6b145f5c66f62121c1f951e6"},{"commit":{"message":"Merge branch 'openjdk:master' into jbs8346866"},"files":[],"sha":"e986d4161c1a04e6e972d29ffba5b7902cb9bbc0"},{"commit":{"message":"Replace \"(size_t) highest_start\" instead as 1"},"files":[{"filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp"}],"sha":"d5a205c486633b72f525718cee6854a32d6ae323"},{"commit":{"message":"remove ultra empty line"},"files":[{"filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp"}],"sha":"c9e879022aa9685ab3d98a33d4c6a85243e3e753"},{"commit":{"message":"Use offsets in the loop logic instead"},"files":[{"filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp"}],"sha":"2d8211cffc0254736f63d1bffb8b361a448c1ec6"},{"commit":{"message":"Use offsets in the loop logic instead"},"files":[{"filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp"}],"sha":"fbfa13ab304f24129f2f2d63475130a38bfc317a"},{"commit":{"message":"Update the comments"},"files":[{"filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp"}],"sha":"e7050a2ff3b8059b1815e8f227da47ad2af51179"},{"commit":{"message":"Add \"attach_point <= stepsize\" check at the end of for loop, to make sanitizer silent and avoid warp around."},"files":[{"filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp"}],"sha":"9b09067cd243d6083501bd26df7678d39bb65231"},{"commit":{"message":"8346866: [ASAN] memoryReserver.cpp reported applying non-zero offset to non-null pointer produced null pointer"},"files":[{"filename":"src\/hotspot\/share\/memory\/memoryReserver.cpp"}],"sha":"aa5894fd5f73350ea27f453fca4815828e04b2d4"}]