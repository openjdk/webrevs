{"files":[{"patch":"@@ -215,4 +215,2 @@\n-     * This method may block until the specified number of bytes are read and\n-     * skipped. <em>Note:<\/em> While {@code n} is given as a {@code long},\n-     * the maximum number of bytes which can be skipped is\n-     * {@code Integer.MAX_VALUE}.\n+     * This method may block until the specified number of bytes are skipped\n+     * or end of stream is reached.\n@@ -220,2 +218,5 @@\n-     * @param n number of bytes to be skipped\n-     * @return the actual number of bytes skipped\n+     * @implNote\n+     * This method skips at most {@code Integer.MAX_VALUE} bytes.\n+     *\n+     * @param n number of bytes to be skipped. If {@code n} is zero then no bytes are skipped.\n+     * @return the actual number of bytes skipped, which might be zero\n@@ -223,1 +224,2 @@\n-     * already closed\n+     *                     already closed\n+     * @throws IllegalArgumentException if {@code n < 0}\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/DeflaterInputStream.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -211,3 +211,10 @@\n-     * @param n the number of bytes to skip\n-     * @return the actual number of bytes skipped.\n-     * @throws    IOException if an I\/O error has occurred\n+     * This method may block until the specified number of bytes are skipped\n+     * or end of stream is reached.\n+     *\n+     * @implNote\n+     * This method skips at most {@code Integer.MAX_VALUE} bytes.\n+     *\n+     * @param n the number of bytes to skip. If {@code n} is zero then no bytes are skipped.\n+     * @return the actual number of bytes skipped, which might be zero\n+     * @throws IOException if an I\/O error occurs or if this stream is\n+     *                     already closed\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/InflaterInputStream.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"}]}