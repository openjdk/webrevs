{"files":[{"patch":"@@ -264,1 +264,1 @@\n-class WeakNarrowCmpxchgTester {\n+class WeakCmpxchgTester {\n@@ -266,1 +266,1 @@\n-  typedef TESTSIZE (*cmpxchg_func)(intptr_t addr, TESTSIZE expected, TESTSIZE new_value, TESTSIZE result,\n+  typedef TESTSIZE (*cmpxchg_narrow)(intptr_t addr, TESTSIZE expected, TESTSIZE new_value, TESTSIZE result,\n@@ -268,0 +268,2 @@\n+  \n+  typedef TESTSIZE (*cmpxchg_func)(intptr_t addr, TESTSIZE expected, TESTSIZE new_value, TESTSIZE result);\n@@ -269,2 +271,1 @@\n-  static TESTSIZE weak_narrow_cmpxchg(intptr_t addr, TESTSIZE expected, TESTSIZE new_value, TESTSIZE result,\n-                                      int64_t scratch0, int64_t scratch1, int64_t scratch2) {\n+  static TESTSIZE weak_narrow_cmpxchg(intptr_t addr, TESTSIZE expected, TESTSIZE new_value) {\n@@ -276,1 +277,1 @@\n-       _masm.weak_cmpxchg_narrow_value(\/*addr*\/ c_rarg0, \/*expected*\/ c_rarg1, \/*new_value*\/c_rarg2,\n+       _masm.weak_cmpxchg_narrow_value(\/*addr*\/ c_rarg0, \/*expected*\/ c_rarg1, \/*new_value*\/ c_rarg2,\n@@ -283,1 +284,18 @@\n-    TESTSIZE ret = ((cmpxchg_func)entry)(addr, expected, new_value, result, scratch0, scratch1, scratch2);\n+    TESTSIZE ret = ((cmpxchg_narrow)entry)(addr, expected, new_value, \/*result*\/ 67, -1, -1, -1);\n+    BufferBlob::free(bb);\n+    return ret;\n+  }\n+  \n+  static TESTSIZE weak_cmpxchg(intptr_t addr, TESTSIZE expected, TESTSIZE new_value) {\n+    BufferBlob* bb = BufferBlob::create(\"riscvTest\", 128);\n+    CodeBuffer code(bb);\n+    MacroAssembler _masm(&code);\n+    address entry = _masm.pc();\n+    {\n+       _masm.cmpxchg_weak(\/*addr*\/ c_rarg0, \/*expected*\/ c_rarg1, \/*new_value*\/ c_rarg2,\n+                          ASMSIZE, Assembler::relaxed, Assembler::relaxed, \/*result*\/ c_rarg3);\n+      _masm.mv(c_rarg0, c_rarg3);\n+      _masm.ret();\n+    }\n+    _masm.flush(); \/\/ icache invalidate\n+    TESTSIZE ret = ((cmpxchg_func)entry)(addr, expected, new_value, \/*result*\/ 67);\n@@ -298,2 +316,1 @@\n-    ret = WeakNarrowCmpxchgTester<TESTSIZE, ASMSIZE>::weak_narrow_cmpxchg((intptr_t)&data[i], 121, 42, \/* result *\/ 67,\n-                                                                          -1, -1, -1);\n+    ret = WeakCmpxchgTester<TESTSIZE, ASMSIZE>::weak_narrow_cmpxchg((intptr_t)&data[i], 121, 42);\n@@ -304,2 +321,1 @@\n-    ret = WeakNarrowCmpxchgTester<TESTSIZE, ASMSIZE>::weak_narrow_cmpxchg((intptr_t)&data[i], 120, 42, \/* result *\/ 67,\n-                                                                          -1, -1, -1);\n+    ret = WeakCmpxchgTester<TESTSIZE, ASMSIZE>::weak_narrow_cmpxchg((intptr_t)&data[i], 120, 42);\n@@ -337,0 +353,39 @@\n+template <typename TESTSIZE, Assembler::operand_size ASMSIZE>\n+void weak_cmpxchg_test() {\n+  TESTSIZE data = 121;\n+  TESTSIZE ret = WeakCmpxchgTester<TESTSIZE, ASMSIZE>::weak_cmpxchg((intptr_t)&data, 121, 42);\n+  ASSERT_EQ(ret, 1);\n+  ASSERT_EQ(data, 42);\n+\n+  data = 121;\n+  ret = WeakCmpxchgTester<TESTSIZE, ASMSIZE>::weak_cmpxchg((intptr_t)&data, 120, 42);\n+  ASSERT_EQ(ret, 0);\n+  ASSERT_EQ(data, 121);\n+}\n+\n+TEST_VM(RiscV, cmpxchg_weak_int64_lr_sc) {\n+  bool zacas = UseZacas;\n+  UseZacas = false;\n+  weak_cmpxchg_test<int64_t, Assembler::int64>();\n+  UseZacas = zacas;\n+}\n+\n+TEST_VM(RiscV, cmpxchg_weak_int64_maybe_zacas) {\n+  if (UseZacas) {\n+    weak_cmpxchg_test<int64_t, Assembler::int64>();\n+  }\n+}\n+\n+TEST_VM(RiscV, cmpxchg_weak_int32_lr_sc) {\n+  bool zacas = UseZacas;\n+  UseZacas = false;\n+  weak_cmpxchg_test<int32_t, Assembler::int32>();\n+  UseZacas = zacas;\n+}\n+\n+TEST_VM(RiscV, cmpxchg_weak_int32_maybe_zacas) {\n+  if (UseZacas) {\n+    weak_cmpxchg_test<int32_t, Assembler::int32>();\n+  }\n+}\n+\n","filename":"test\/hotspot\/gtest\/riscv\/test_assembler_riscv.cpp","additions":65,"deletions":10,"binary":false,"changes":75,"status":"modified"}]}