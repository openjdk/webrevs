{"files":[{"patch":"@@ -2134,9 +2134,0 @@\n-WB_ENTRY(jint, WB_GetArchiveRelocationMode(JNIEnv* env, jobject wb))\n-#if INCLUDE_CDS\n-  return (jint)ArchiveRelocationMode;\n-#else\n-  ShouldNotReachHere();\n-  return (jint)-1;\n-#endif\n-WB_END\n-\n@@ -2935,1 +2926,0 @@\n-  {CC\"getArchiveRelocationMode\",          CC\"()I\",    (void*)&WB_GetArchiveRelocationMode},\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n- * @build jdk.test.whitebox.WhiteBox\n@@ -35,2 +34,1 @@\n- * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar WhiteBox.jar jdk.test.whitebox.WhiteBox\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\/WhiteBox.jar ArchiveRelocationTest\n+ * @run driver ArchiveRelocationTest\n@@ -41,1 +39,0 @@\n-import jdk.test.whitebox.WhiteBox;\n@@ -45,1 +42,0 @@\n-    static int relocationMode = -1;\n@@ -47,2 +43,0 @@\n-        WhiteBox wb = WhiteBox.getWhiteBox();\n-        relocationMode = wb.getArchiveRelocationMode();\n@@ -71,1 +65,2 @@\n-        String runRelocArg  = run_reloc  ? \"-showversion\" : maybeRelocation;\n+        String alwaysRelocation = \"-XX:ArchiveRelocationMode=1\";\n+        String runRelocArg  = run_reloc  ? alwaysRelocation : maybeRelocation;\n@@ -83,2 +78,3 @@\n-                    if (run_reloc && relocationMode != 0 \/* ArchiveRelocationMode could be set via -javaoptions *\/) {\n-                        output.shouldContain(\"Try to map archive(s) at an alternative address\");\n+                    if (run_reloc) {\n+                        output.shouldContain(\"ArchiveRelocationMode == 1: always map archive(s) at an alternative address\")\n+                              .shouldContain(\"Try to map archive(s) at an alternative address\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ArchiveRelocationTest.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,0 @@\n-import jdk.test.whitebox.WhiteBox;\n@@ -46,1 +45,0 @@\n-    static int relocationMode = -1;\n@@ -48,2 +46,0 @@\n-        WhiteBox wb = WhiteBox.getWhiteBox();\n-        relocationMode = wb.getArchiveRelocationMode();\n@@ -87,2 +83,3 @@\n-        String dumpTopRelocArg  = dump_top_reloc  ? \"-showversion\" : maybeRelocation;\n-        String runRelocArg      = run_reloc       ? \"-showversion\" : maybeRelocation;\n+        String alwaysRelocation = \"-XX:ArchiveRelocationMode=1\";\n+        String dumpTopRelocArg  = dump_top_reloc  ? alwaysRelocation : maybeRelocation;\n+        String runRelocArg      = run_reloc       ? alwaysRelocation : maybeRelocation;\n@@ -111,1 +108,1 @@\n-                    if (dump_top_reloc && relocationMode != 0 \/* ArchiveRelocationMode could be set via -javaoptions *\/) {\n+                    if (dump_top_reloc) {\n@@ -124,1 +121,1 @@\n-                    if (run_reloc && relocationMode != 0 \/* ArchiveRelocationMode could be set via -javaoptions *\/) {\n+                    if (run_reloc) {\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/DynamicArchiveRelocationTest.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -731,1 +731,0 @@\n-  public native int     getArchiveRelocationMode();\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}