{"files":[{"patch":"@@ -2447,1 +2447,2 @@\n-        return indexOf(ch, 0);\n+        return isLatin1() ? StringLatin1.indexOf(value, ch, 0, value.length)\n+                : StringUTF16.indexOf(value, ch, 0, value.length >> 1);\n@@ -2503,2 +2504,3 @@\n-        return isLatin1() ? StringLatin1.indexOf(value, ch, fromIndex, length())\n-                : StringUTF16.indexOf(value, ch, fromIndex, length());\n+        fromIndex = Math.max(fromIndex, 0);\n+        return isLatin1() ? StringLatin1.indexOf(value, ch, Math.min(fromIndex, value.length), value.length)\n+                : StringUTF16.indexOf(value, ch, Math.min(fromIndex, value.length >> 1), value.length >> 1);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -313,0 +313,1 @@\n+    \/\/ Caller must ensure that from- and toIndex are within bounds\n@@ -317,5 +318,0 @@\n-        fromIndex = Math.max(fromIndex, 0);\n-        toIndex = Math.min(toIndex, value.length);\n-        if (fromIndex >= toIndex) {\n-            return -1;\n-        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -607,0 +607,1 @@\n+    \/\/ Caller must ensure that from- and toIndex are within bounds\n@@ -608,5 +609,0 @@\n-        fromIndex = Math.max(fromIndex, 0);\n-        toIndex = Math.min(toIndex, value.length >> 1);\n-        if (fromIndex >= toIndex) {\n-            return -1;\n-        }\n@@ -719,5 +715,0 @@\n-        checkBoundsBeginEnd(fromIndex, max, value);\n-        return indexOfCharUnsafe(value, ch, fromIndex, max);\n-    }\n-\n-    private static int indexOfCharUnsafe(byte[] value, int ch, int fromIndex, int max) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringUTF16.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-@Fork(value = 1)\n+@Fork(value = 3)\n@@ -114,0 +114,15 @@\n+    @Benchmark\n+    public int searchCharLongWithOffsetSuccess() {\n+        return dataStringBig.indexOf(searchChar, 3);\n+    }\n+\n+    @Benchmark\n+    public int searchCharMediumWithOffsetSuccess() {\n+        return searchStringBig.indexOf(searchChar, 3);\n+    }\n+\n+    @Benchmark\n+    public int searchCharShortWithOffsetSuccess() {\n+        return searchString.indexOf(searchChar, 1);\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringIndexOf.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"}]}