{"files":[{"patch":"@@ -540,1 +540,1 @@\n-        private final int index;\n+        private final int cpiOrIndyIndex;\n@@ -542,1 +542,1 @@\n-        BootstrapMethodInvocationImpl(boolean indy, ResolvedJavaMethod method, String name, JavaConstant type, List<JavaConstant> staticArguments, int index) {\n+        BootstrapMethodInvocationImpl(boolean indy, ResolvedJavaMethod method, String name, JavaConstant type, List<JavaConstant> staticArguments, int cpiOrIndyIndex) {\n@@ -548,2 +548,1 @@\n-            \/\/ for indys this holds the indyIndex; otherwise holds the cpi\n-            this.index = index;\n+            this.cpiOrIndyIndex = cpiOrIndyIndex;\n@@ -580,1 +579,1 @@\n-                loadReferencedType(index, Bytecodes.INVOKEDYNAMIC);\n+                loadReferencedType(cpiOrIndyIndex, Bytecodes.INVOKEDYNAMIC);\n@@ -582,1 +581,1 @@\n-                lookupConstant(index, true);\n+                lookupConstant(cpiOrIndyIndex, true);\n@@ -589,1 +588,1 @@\n-                return lookupAppendix(index, Bytecodes.INVOKEDYNAMIC);\n+                return lookupAppendix(cpiOrIndyIndex, Bytecodes.INVOKEDYNAMIC);\n@@ -591,1 +590,1 @@\n-                return (JavaConstant) lookupConstant(index, false);\n+                return (JavaConstant) lookupConstant(cpiOrIndyIndex, false);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotConstantPool.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -196,3 +196,4 @@\n-         * Resolves the element corresponding to this bootstrap. If {@code isInvokeDynamic()}, then the\n-         * corresponding invoke dynamic is resolved. If {@code !isInvokeDynamic()}, then the dynamic constant\n-         * pool entry will be resolved.\n+         * Resolves the element corresponding to this bootstrap. If\n+         * {@code isInvokeDynamic()}, then the corresponding invoke dynamic is resolved.\n+         * If {@code !isInvokeDynamic()}, then the dynamic constant pool entry will be\n+         * resolved.\n@@ -205,3 +206,3 @@\n-         * If {@code isInvokeDynamic()}, then this method looks up the\n-         * corresponding invoke dynamic's appendix. If {@code !isInvokeDynamic()},\n-         * then this will return the constant pool entry's value.\n+         * If {@code isInvokeDynamic()}, then this method looks up the corresponding\n+         * invoke dynamic's appendix. If {@code !isInvokeDynamic()}, then this will\n+         * return the constant pool entry's value.\n@@ -232,4 +233,4 @@\n-     * bytecodes which reference this constant pool, or all {@code CONSTANT_Dynamic_info}\n-     * BootstrapMethodInvocations within this constant pool.\n-     * The returned List is unmodifiable; calls to any mutator method\n-     * will always cause {@code UnsupportedOperationException} to be thrown.\n+     * bytecodes which reference this constant pool, or all\n+     * {@code CONSTANT_Dynamic_info} BootstrapMethodInvocations within this constant\n+     * pool. The returned List is unmodifiable; calls to any mutator method will\n+     * always cause {@code UnsupportedOperationException} to be thrown.\n@@ -237,2 +238,4 @@\n-     * @param invokeDynamic when true, return all invokedynamic BootstrapMethodInvocations;\n-     * otherwise, return all {@code CONSTANT_Dynamic_info} BootstrapMethodInvocations.\n+     * @param invokeDynamic when true, return all invokedynamic\n+     *                      BootstrapMethodInvocations; otherwise, return all\n+     *                      {@code CONSTANT_Dynamic_info}\n+     *                      BootstrapMethodInvocations.\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/meta\/ConstantPool.java","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"}]}