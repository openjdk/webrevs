{"files":[{"patch":"@@ -106,2 +106,2 @@\n-        String providerPath = Path.of(opensslPath).getParent().getParent()\n-            .resolve(\"lib\", \"ossl-modules\").toString();\n+        Path providerPath = OpensslArtifactFetcher.getProviderPath(opensslPath);\n+\n@@ -129,1 +129,1 @@\n-                \"-legacy\", \"-provider-path\", providerPath)\n+                \"-legacy\", \"-provider-path\", providerPath.toString())\n","filename":"test\/jdk\/sun\/security\/pkcs12\/KeytoolOpensslInteropTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.nio.file.Path;\n@@ -133,0 +134,10 @@\n+    \/\/ retrieve the provider directory path from <OPENSSL_HOME>\/bin\/openssl\n+    public static Path getProviderPath(String opensslPath) {\n+        Path openSslRootPath = Path.of(opensslPath).getParent().getParent();\n+        String libDir = \"lib\";\n+        if (Platform.isX64() && (Platform.isLinux() || Platform.isWindows())) {\n+            libDir = \"lib64\";\n+        }\n+        return openSslRootPath.resolve(libDir, \"ossl-modules\");\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/security\/OpensslArtifactFetcher.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}