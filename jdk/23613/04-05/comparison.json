{"files":[{"patch":"@@ -25,1 +25,1 @@\n- * @test\n+ * @test id=GenerateOpensslPKCS12\n@@ -38,3 +38,14 @@\n- * @library \/test\/lib\n- * @library \/sun\/security\/pkcs11\/\n- * @run main\/othervm\/timeout=600 KeytoolOpensslInteropTest\n+ * @library \/test\/lib \/sun\/security\/pkcs11\/\n+ * @run main\/othervm KeytoolOpensslInteropTest true\n+ *\/\n+\n+\/*\n+ * @test id=UseExistingPKCS12\n+ * @bug 8076190 8242151 8153005 8266182\n+ * @summary This is java keytool <-> openssl interop test. This test uses\n+ *          the existing PKCS12 files located in .\/params dir and java operates on it\n+ *\n+ * @modules java.base\/sun.security.pkcs\n+ *          java.base\/sun.security.util\n+ * @library \/test\/lib \/sun\/security\/pkcs11\/\n+ * @run main\/othervm KeytoolOpensslInteropTest false\n@@ -48,0 +59,1 @@\n+import jtreg.SkippedException;\n@@ -70,7 +82,16 @@\n-        String opensslPath = OpensslArtifactFetcher.getOpensslPath();\n-        if (opensslPath != null) {\n-            \/\/ if the current version of openssl is available, perform all\n-            \/\/ keytool <-> openssl interop tests\n-            generateInitialKeystores(opensslPath);\n-            testWithJavaCommands();\n-            testWithOpensslCommands(opensslPath);\n+        boolean generatePKCS12 = Boolean.parseBoolean(args[0]);\n+        if (generatePKCS12) {\n+            String opensslPath = OpensslArtifactFetcher.getOpensslPath();\n+            if (opensslPath != null) {\n+                \/\/ if the current version of openssl is available, perform all\n+                \/\/ keytool <-> openssl interop tests\n+                generateInitialKeystores(opensslPath);\n+                testWithJavaCommands();\n+                testWithOpensslCommands(opensslPath);\n+            } else {\n+                String exMsg = \"Can't find the version: \"\n+                        + OpensslArtifactFetcher.getTestOpensslBundleVersion()\n+                        + \" of openssl binary on this machine, please install\"\n+                        + \" and set openssl path with property 'test.openssl.path'\";\n+                throw new SkippedException(exMsg);\n+            }\n@@ -78,9 +99,2 @@\n-            \/\/ since the current version of openssl is not available, skip all\n-            \/\/ openssl command dependent tests with a warning\n-            System.out.println(\"\\n\\u001B[31mWarning: Can't find the version: \"\n-                    + OpensslArtifactFetcher.getTestOpensslBundleVersion()\n-                    + \" of openssl binary on this machine, please install\"\n-                    + \" and set openssl path with property \"\n-                    + \"'test.openssl.path'. Now running only half portion of \"\n-                    + \"the test, skipping all tests which depends on openssl \"\n-                    + \"commands.\\u001B[0m\\n\");\n+            \/\/ since this scenario is using preexisting PKCS12, skip all\n+            \/\/ openssl command dependent tests\n","filename":"test\/jdk\/sun\/security\/pkcs12\/KeytoolOpensslInteropTest.java","additions":34,"deletions":20,"binary":false,"changes":54,"status":"modified"}]}