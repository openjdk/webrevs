{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- *          Required OpenSSL version : OpenSSL 1.1.*\n+ *          Required OpenSSL version : Defined in OpensslArtifactFetcher\n@@ -70,1 +70,1 @@\n-        String opensslPath = OpensslArtifactFetcher.getOpenssl1dot1dotStar();\n+        String opensslPath = OpensslArtifactFetcher.getOpensslPath();\n@@ -80,2 +80,2 @@\n-            System.out.println(\"\\n\\u001B[31mWarning: Can't find openssl \"\n-                    + \"(version 1.1.*) binary on this machine, please install\"\n+            System.out.println(\"\\n\\u001B[31mWarning: Can't find the preferred version \"\n+                    + \"of openssl binary on this machine, please install\"\n@@ -106,0 +106,2 @@\n+        Path providerPath = OpensslArtifactFetcher.getProviderPath(opensslPath);\n+\n@@ -126,1 +128,2 @@\n-                \"PBE-SHA1-RC4-128\", \"-macalg\", \"SHA224\")\n+                \"PBE-SHA1-RC4-128\", \"-macalg\", \"SHA224\",\n+                \"-legacy\", \"-provider-path\", providerPath.toString())\n@@ -483,1 +486,2 @@\n-        output1.shouldNotHaveExitValue(0);\n+        output1.shouldHaveExitValue(0)\n+            .shouldContain(\"Warning: MAC is absent!\");\n@@ -489,0 +493,1 @@\n+            .shouldNotContain(\"Warning: MAC is absent!\")\n","filename":"test\/jdk\/sun\/security\/pkcs12\/KeytoolOpensslInteropTest.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.nio.file.Path;\n@@ -36,0 +37,3 @@\n+    private static final String OPENSSL_BUNDLE_VERSION = \"3.0.14\";\n+    private static final String OPENSSL_ORG = \"jpg.tests.jdk.openssl\";\n+\n@@ -37,1 +41,1 @@\n-     * Gets the openssl binary path of version 1.1.*\n+     * Gets the openssl binary path of the preferred version\n@@ -41,2 +45,2 @@\n-           preferred version(1.1.*) of openssl, then return that path.\n-        2. Else look for already installed openssl (version 1.1.*) in system\n+           preferred version of openssl, then return that path.\n+        2. Else look for already installed openssl in system\n@@ -45,1 +49,1 @@\n-        3. Else try to download openssl (version 1.1.*) from the artifactory\n+        3. Else try to download the preferred version of openssl from the artifactory\n@@ -48,1 +52,1 @@\n-     * @return openssl binary path of version 1.1.*\n+     * @return openssl binary path of the preferred version\n@@ -50,3 +54,2 @@\n-    public static String getOpenssl1dot1dotStar() {\n-        String version = \"1.1.\";\n-        String path = getOpensslFromSystemProp(version);\n+    public static String getOpensslPath() {\n+        String path = getOpensslFromSystemProp(OPENSSL_BUNDLE_VERSION);\n@@ -55,15 +58,19 @@\n-        } else {\n-            path = getDefaultSystemOpensslPath(version);\n-            if (path != null) {\n-                return path;\n-            } else if (Platform.is64bit()) {\n-                if (Platform.isLinux()) {\n-                    path = fetchOpenssl(LINUX_X64.class);\n-                } else if (Platform.isOSX()) {\n-                    path = fetchOpenssl(MACOSX_X64.class);\n-                } else if (Platform.isWindows()) {\n-                    path = fetchOpenssl(WINDOWS_X64.class);\n-                }\n-                if (verifyOpensslVersion(path, version)) {\n-                    return path;\n-                }\n+        }\n+        path = getDefaultSystemOpensslPath(OPENSSL_BUNDLE_VERSION);\n+        if (path != null) {\n+            return path;\n+        }\n+        if (Platform.isX64()) {\n+            if (Platform.isLinux()) {\n+                path = fetchOpenssl(LINUX_X64.class);\n+            } else if (Platform.isOSX()) {\n+                path = fetchOpenssl(MACOSX_X64.class);\n+            } else if (Platform.isWindows()) {\n+                path = fetchOpenssl(WINDOWS_X64.class);\n+            }\n+        } else if (Platform.isAArch64()) {\n+            if (Platform.isLinux()) {\n+                path = fetchOpenssl(LINUX_AARCH64.class);\n+            }\n+            if (Platform.isOSX()) {\n+                path = fetchOpenssl(MACOSX_AARCH64.class);\n@@ -72,1 +79,1 @@\n-        return null;\n+        return verifyOpensslVersion(path, OPENSSL_BUNDLE_VERSION) ? path : null;\n@@ -127,0 +134,10 @@\n+    \/\/ retrieve the provider directory path from <OPENSSL_HOME>\/bin\/openssl\n+    public static Path getProviderPath(String opensslPath) {\n+        Path openSslRootPath = Path.of(opensslPath).getParent().getParent();\n+        String libDir = \"lib\";\n+        if (Platform.isX64() && (Platform.isLinux() || Platform.isWindows())) {\n+            libDir = \"lib64\";\n+        }\n+        return openSslRootPath.resolve(libDir, \"ossl-modules\");\n+    }\n+\n@@ -128,1 +145,1 @@\n-            organization = \"jpg.tests.jdk.openssl\",\n+            organization = OPENSSL_ORG,\n@@ -130,1 +147,1 @@\n-            revision = \"1.1.1g\",\n+            revision = OPENSSL_BUNDLE_VERSION,\n@@ -135,1 +152,8 @@\n-            organization = \"jpg.tests.jdk.openssl\",\n+            organization = OPENSSL_ORG,\n+            name = \"openssl-linux_aarch64\",\n+            revision = OPENSSL_BUNDLE_VERSION,\n+            extension = \"zip\")\n+    private static class LINUX_AARCH64{ }\n+\n+    @Artifact(\n+            organization = OPENSSL_ORG,\n@@ -137,1 +161,1 @@\n-            revision = \"1.1.1g\",\n+            revision = OPENSSL_BUNDLE_VERSION,\n@@ -142,1 +166,8 @@\n-            organization = \"jpg.tests.jdk.openssl\",\n+            organization = OPENSSL_ORG,\n+            name = \"openssl-macosx_aarch64\",\n+            revision = OPENSSL_BUNDLE_VERSION,\n+            extension = \"zip\")\n+    private static class MACOSX_AARCH64 { }\n+\n+    @Artifact(\n+            organization = OPENSSL_ORG,\n@@ -144,1 +175,1 @@\n-            revision = \"1.1.1g\",\n+            revision = OPENSSL_BUNDLE_VERSION,\n","filename":"test\/lib\/jdk\/test\/lib\/security\/OpensslArtifactFetcher.java","additions":62,"deletions":31,"binary":false,"changes":93,"status":"modified"}]}