{"files":[{"patch":"@@ -38,1 +38,1 @@\n-    public Class<?> cls;\n+    public Class<?> misdeclaredClass;\n@@ -45,1 +45,1 @@\n-     * {@code commit(..., Class, String)}\n+     * {@code commit(long,Class,String)}\n@@ -47,3 +47,3 @@\n-     * @param start         timestamp of the start of the operation\n-     * @param cls           the affected class\n-     * @param message       the specific event message\n+     * @param start             timestamp of the start of the operation\n+     * @param misdeclaredClass  the affected class\n+     * @param message           the specific event message\n@@ -51,1 +51,1 @@\n-    public static void commit(long start, Class<?> cls, String message) {\n+    public static void commit(long start, Class<?> misdeclaredClass, String message) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/event\/SerializationMisdeclarationEvent.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    public Class<?> cls;\n+    public Class<?> misdeclaredClass;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/events\/SerializationMisdeclarationEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-                .filter(e -> e.getClass(\"cls\").getName().equals(cls.getName())\n+                .filter(e -> e.getClass(\"misdeclaredClass\").getName().equals(cls.getName())\n@@ -159,1 +159,1 @@\n-                .filter(e -> e.getClass(\"cls\").getName().equals(cls.getName()))\n+                .filter(e -> e.getClass(\"misdeclaredClass\").getName().equals(cls.getName()))\n","filename":"test\/jdk\/jdk\/jfr\/event\/io\/TestSerializationMisdeclarationEvent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}