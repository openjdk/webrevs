{"files":[{"patch":"@@ -51,0 +51,5 @@\n+\n+    \/*\n+     * The sharing of a single Class<?>[] instance here is just to avoid wasting\n+     * space, and should not be considered as a conceptual sharing of types.\n+     *\/\n@@ -52,2 +57,2 @@\n-    private static final Class<?>[] WRITE_REPLACE_PARAM_TYPES = {};\n-    private static final Class<?>[] READ_RESOLVE_PARAM_TYPES = {};\n+    private static final Class<?>[] WRITE_REPLACE_PARAM_TYPES = READ_OBJECT_NO_DATA_PARAM_TYPES;\n+    private static final Class<?>[] READ_RESOLVE_PARAM_TYPES = READ_OBJECT_NO_DATA_PARAM_TYPES;\n@@ -129,1 +134,1 @@\n-            commitEvent(cl, SERIAL_PERSISTENT_FIELDS_NAME + \" must be non-null\");\n+            commitEvent(cl, SERIAL_PERSISTENT_FIELDS_NAME + \" should be non-null\");\n","filename":"src\/java.base\/share\/classes\/java\/io\/SerializationMisdeclarationChecker.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-                arguments(NoSUID.class, new String[] {\"serialPersistentFields\", \"must\", \"non-null\"}),\n+                arguments(NoSUID.class, new String[] {\"serialPersistentFields\", \"should\", \"non-null\"}),\n@@ -222,1 +222,1 @@\n-         * value must be non-null\n+         * value should be non-null\n","filename":"test\/jdk\/jdk\/jfr\/event\/io\/TestSerializationMisdeclarationEvent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}