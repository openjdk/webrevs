{"files":[{"patch":"@@ -297,1 +297,1 @@\n-        commit(timestamp(), 0, cls, kind, msg);\n+        commit(timestamp(), cls, kind, msg);\n","filename":"src\/java.base\/share\/classes\/java\/io\/SerializationMisdeclarationChecker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n@@ -8,1 +33,1 @@\n- * Note that the order of the arguments of the {@link #commit(long,long,Class,int,String)}\n+ * Note that the order of the arguments of the {@link #commit(long,Class,int,String)}\n@@ -24,1 +49,0 @@\n-     * @param duration      time in nanoseconds to complete the operation\n@@ -29,2 +53,1 @@\n-    public static void commit(long start, long duration,\n-            Class<?> cls, int kind, String message) {\n+    public static void commit(long start, Class<?> cls, int kind, String message) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/event\/SerializationMisdeclarationEvent.java","additions":27,"deletions":4,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import jdk.jfr.internal.RemoveFields;\n@@ -40,0 +41,1 @@\n+@RemoveFields({\"duration\", \"stackTrace\", \"thread\"})\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/events\/SerializationMisdeclarationEvent.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -761,2 +761,0 @@\n-        <setting name=\"stackTrace\">false<\/setting>\n-        <setting name=\"threshold\">0 ns<\/setting>\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/default.jfc","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -760,3 +760,1 @@\n-        <setting name=\"enabled\">false<\/setting>\n-        <setting name=\"stackTrace\">false<\/setting>\n-        <setting name=\"threshold\">0 ns<\/setting>\n+        <setting name=\"enabled\">true<\/setting>\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/profile.jfc","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}