{"files":[{"patch":"@@ -196,1 +196,2 @@\n-    private void privilegedCheckAccessibleMethod(String name, Class<?>[] paramTypes, Class<?> retType) {\n+    private void privilegedCheckAccessibleMethod(String name,\n+            Class<?>[] paramTypes, Class<?> retType) {\n@@ -206,1 +207,2 @@\n-    private void privilegedCheckAccessibleMethod(Class<?> cls, Method m, Class<?>[] paramTypes, Class<?> retType) {\n+    private void privilegedCheckAccessibleMethod(Class<?> cls, Method m,\n+            Class<?>[] paramTypes, Class<?> retType) {\n@@ -229,2 +231,2 @@\n-            commitEvent(cl, ACC_METH_NON_ACCESSIBLE,\n-                    m + \" is not accessible from \" + cl);\n+            commitEvent(ACC_METH_NON_ACCESSIBLE,\n+                    m + \" is not accessible\");\n@@ -234,3 +236,3 @@\n-    private static boolean isSamePackage(Class<?> cl, Class<?> mcl) {\n-        return cl.getClassLoader() == mcl.getClassLoader()\n-                && cl.getPackageName().equals(mcl.getPackageName());\n+    private static boolean isSamePackage(Class<?> cl0, Class<?> cl1) {\n+        return cl0.getClassLoader() == cl1.getClassLoader()\n+                && cl0.getPackageName().equals(cl1.getPackageName());\n@@ -251,2 +253,1 @@\n-        return (m.getModifiers()\n-                & (PRIVATE | PROTECTED | PUBLIC)) == 0;\n+        return (m.getModifiers() & (PRIVATE | PROTECTED | PUBLIC)) == 0;\n@@ -270,2 +271,1 @@\n-        } catch (NoSuchFieldException e) {\n-            return null;\n+        } catch (NoSuchFieldException ignored) {\n@@ -273,0 +273,1 @@\n+        return null;\n","filename":"src\/java.base\/share\/classes\/java\/io\/SerializationMisdeclarationChecker.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-    class A  implements Serializable {\n+    private static class A implements Serializable {\n@@ -184,1 +184,1 @@\n-    class B extends A {\n+    private static class B extends A {\n@@ -196,1 +196,1 @@\n-    public class C extends B {\n+    private static final class C extends B {\n@@ -203,1 +203,1 @@\n-    public class NoSUID implements Serializable {\n+    private static final class NoSUID implements Serializable {\n@@ -209,1 +209,1 @@\n-    public class NonLongSUID implements Serializable {\n+    private static final class NonLongSUID implements Serializable {\n@@ -214,1 +214,1 @@\n-    public enum EnumClass implements Serializable {\n+    private enum EnumClass implements Serializable {\n@@ -230,1 +230,1 @@\n-    public record RecordClass() implements Serializable {\n+    private record RecordClass() implements Serializable {\n@@ -240,1 +240,1 @@\n-    public abstract class Acc implements Serializable {\n+    private abstract static class Acc implements Serializable {\n","filename":"test\/jdk\/jdk\/jfr\/event\/io\/TestSerializationMisdeclarationEvent.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}