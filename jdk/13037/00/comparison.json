{"files":[{"patch":"@@ -113,0 +113,4 @@\n+        \/\/this instance should never appear in the cache nor leak out\n+        private static final ClassHierarchyResolver.ClassHierarchyInfo NOPE =\n+                new ClassHierarchyResolver.ClassHierarchyInfo(null, false, null);\n+\n@@ -127,3 +131,5 @@\n-            var res = resolvedCache.get(classDesc);\n-            \/\/additional test for null value is important to avoid repeated resolution attempts\n-            if (res == null && !resolvedCache.containsKey(classDesc)) {\n+            \/\/using NOPE to distinguish between null value and non-existent record in the cache\n+            \/\/this code is on JDK bootstrap critical path, so cannot use lambdas here\n+            var res = resolvedCache.getOrDefault(classDesc, NOPE);\n+            if (res == NOPE) {\n+                res = null;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassHierarchyImpl.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"}]}