{"files":[{"patch":"@@ -419,0 +419,1 @@\n+ -runtime\/cds\/appcds\/aotProfile \\\n@@ -513,1 +514,1 @@\n-# Run CDS tests with -XX:+AOTClassLinking. This should include most CDS tests, except for\n+# Run \"old\" CDS tests with -XX:+AOTClassLinking. This should include most CDS tests, except for\n@@ -515,0 +516,2 @@\n+# Note that appcds\/aotXXX directories are excluded -- those tests already specifically\n+# test AOT class linking, so there's no need to run them again with -XX:+AOTClassLinking.\n@@ -521,0 +524,1 @@\n+ -runtime\/cds\/appcds\/aotProfile \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,0 +37,2 @@\n+ *                 TestApp$Foo$ShouldBeExcludedChild\n+ *                 TestApp$Foo$Taz\n@@ -64,1 +66,1 @@\n-        tester.runAOTWorkflow();\n+        tester.runAOTWorkflow(\"AOT\", \"--two-step-training\");\n@@ -80,1 +82,5 @@\n-                \"-Xlog:cds+resolve=trace\",\n+                \"-Xlog:aot=debug\",\n+                \"-Xlog:aot+class=debug\",\n+                \"-Xlog:aot+resolve=trace\",\n+                \"-Xlog:aot+verification=trace\",\n+                \"-Xlog:class+load\",\n@@ -93,2 +99,10 @@\n-            if (isDumping(runMode)) {\n-                out.shouldNotMatch(\"cds,resolve.*archived field.*TestApp.Foo => TestApp.Foo.ShouldBeExcluded.f:I\");\n+            if (runMode == RunMode.TRAINING) {\n+                out.shouldMatch(\"aot,resolve.*reverted field.*TestApp.Foo => TestApp.Foo.ShouldBeExcluded.f:I\");\n+            } else if (runMode == RunMode.ASSEMBLY) {\n+                out.shouldNotMatch(\"aot,resolve.*archived field.*TestApp.Foo => TestApp.Foo.ShouldBeExcluded.f:I\");\n+                out.shouldMatch(\"aot,resolve.*archived method.*TestApp.Foo java\/lang\/Integer.intValue:[(][)]I => java\/lang\/Integer\");\n+            } else if (runMode == RunMode.PRODUCTION) {\n+                out.shouldContain(\"check_verification_constraint: TestApp$Foo$Taz: TestApp$Foo$ShouldBeExcludedChild must be subclass of TestApp$Foo$ShouldBeExcluded\");\n+                out.shouldContain(\"jdk.jfr.Event source: jrt:\/jdk.jfr\");\n+                out.shouldMatch(\"TestApp[$]Foo[$]ShouldBeExcluded source: .*\/app.jar\");\n+                out.shouldMatch(\"TestApp[$]Foo[$]ShouldBeExcludedChild source: .*\/app.jar\");\n@@ -105,2 +119,2 @@\n-        \/\/ In new workflow, classes from custom loaders are passed from the preimage\n-        \/\/ to the final image. See ClassPrelinker::record_unregistered_klasses().\n+        \/\/ In AOT workflow, classes from custom loaders are passed from the preimage\n+        \/\/ to the final image. See FinalImageRecipes::record_all_classes().\n@@ -160,0 +174,1 @@\n+                Taz.hotSpot4();\n@@ -168,1 +183,1 @@\n-                    \/\/ Classes loaded by custom loaders are included included in the AOT cache\n+                    \/\/ Classes loaded by custom loaders are included in the AOT cache\n@@ -219,0 +234,10 @@\n+            int func() {\n+                return 1;\n+            }\n+        }\n+\n+        static class ShouldBeExcludedChild extends ShouldBeExcluded {\n+            @Override\n+            int func() {\n+                return 2;\n+            }\n@@ -237,0 +262,23 @@\n+\n+        static class Taz {\n+            static ShouldBeExcluded m() {\n+                \/\/ When verifying this method, we need to check the constraint that\n+                \/\/ ShouldBeExcluded must be a supertype of ShouldBeExcludedChild. This information\n+                \/\/ is checked by SystemDictionaryShared::check_verification_constraints() when the Taz\n+                \/\/ class is linked during the production run.\n+                \/\/\n+                \/\/ Because ShouldBeExcluded is excluded from the AOT archive, it must be loaded\n+                \/\/ dynamically from app.jar inside SystemDictionaryShared::check_verification_constraints().\n+                \/\/ This must happen after the app class loader has been fully restored from the AOT cache.\n+                return new ShouldBeExcludedChild();\n+            }\n+            static void hotSpot4() {\n+                long start = System.currentTimeMillis();\n+                while (System.currentTimeMillis() - start < 20) {\n+                    for (int i = 0; i < 50000; i++) {\n+                        counter += i;\n+                    }\n+                    f();\n+                }\n+            }\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/aotCache\/ExcludedClasses.java","additions":55,"deletions":7,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -265,1 +265,1 @@\n-                                                             \"cds+class=debug\"));\n+                                                             \"aot+class=debug\"));\n@@ -278,2 +278,3 @@\n-                                                             \"cds=debug\",\n-                                                             \"cds+class=debug\"));\n+                                                             \"aot=debug\",\n+                                                             \"aot+class=debug\",\n+                                                             \"cds=debug\"));\n@@ -313,1 +314,1 @@\n-                                                             \"cds+resolve=debug\"));\n+                                                             \"aot+resolve=debug\"));\n@@ -329,1 +330,0 @@\n-                                                             \"aot=debug\",\n@@ -331,1 +331,2 @@\n-                                                             \"cds+class=debug\",\n+                                                             \"aot=debug\",\n+                                                             \"aot+class=debug\",\n@@ -333,1 +334,1 @@\n-                                                             \"cds+resolve=debug\"));\n+                                                             \"aot+resolve=debug\"));\n@@ -380,1 +381,1 @@\n-                                                      \"cds+resolve=debug\",\n+                                                      \"aot+resolve=debug\",\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSAppTester.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}