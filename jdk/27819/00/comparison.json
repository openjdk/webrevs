{"files":[{"patch":"@@ -2501,0 +2501,2 @@\n+  case Op_ReverseBytesS:\n+  case Op_ReverseBytesUS:\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @bug 8350177 8362171\n+ * @bug 8350177 8362171 8369881\n@@ -354,0 +354,51 @@\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupByteArray\")\n+    public Object[] testByteReverseBytesS(byte[] in) {\n+        byte[] res = new byte[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+            res[i] = (byte)Short.reverseBytes(in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testByteReverseBytesS\")\n+    public void checkTestByteReverseBytesS(Object[] vals) {\n+        byte[] in = (byte[]) vals[0];\n+        byte[] res = (byte[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            byte val = (byte)Short.reverseBytes(in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.STORE_VECTOR, \"=0\" })\n+    @Arguments(setup = \"setupByteArray\")\n+    public Object[] testByteReverseBytesUS(byte[] in) {\n+        byte[] res = new byte[SIZE];\n+        for (int i = 0; i < SIZE; i++) {\n+            res[i] = (byte)Character.reverseBytes((char)in[i]);\n+        }\n+\n+        return new Object[] { in, res };\n+    }\n+\n+    @Check(test = \"testByteReverseBytesUS\")\n+    public void checkTestByteReverseBytesUS(Object[] vals) {\n+        byte[] in = (byte[]) vals[0];\n+        byte[] res = (byte[]) vals[1];\n+\n+        for (int i = 0; i < SIZE; i++) {\n+            byte val = (byte)Character.reverseBytes((char)in[i]);\n+            if (res[i] != val) {\n+                throw new IllegalStateException(\"Expected \" + val + \" but got \" + res[i] + \" for \" + in[i]);\n+            }\n+        }\n+    }\n+\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestSubwordTruncation.java","additions":52,"deletions":1,"binary":false,"changes":53,"status":"modified"}]}