{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -479,0 +479,5 @@\n+# alias for GB18030 is generated at runtime\n+charset GB18030 GB18030\n+    package sun.nio.cs\n+    type    source\n+\n@@ -566,5 +571,0 @@\n-charset GB18030 GB18030\n-    package sun.nio.cs.ext\n-    type    template\n-    alias   gb18030-2000\n-\n","filename":"make\/data\/charsetmapping\/charsets","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -10,1 +10,0 @@\n-GB18030\n","filename":"make\/data\/charsetmapping\/stdcs-aix","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -14,1 +14,0 @@\n-GB18030\n","filename":"make\/data\/charsetmapping\/stdcs-linux","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,26 +0,0 @@\n-#\n-#   generate these charsets into sun.nio.cs\n-#\n-Big5\n-Big5_Solaris\n-Big5_HKSCS        # always together with Big5\n-EUC_CN\n-EUC_KR\n-EUC_JP\n-EUC_JP_LINUX\n-EUC_JP_Open\n-EUC_TW\n-GBK\n-GB18030\n-ISO_8859_11\n-ISO_8859_3\n-ISO_8859_6\n-ISO_8859_8\n-Johab\n-PCK\n-TIS_620\n-JIS_X_0201\n-JIS_X_0208\n-JIS_X_0212\n-JIS_X_0208_Solaris\n-JIS_X_0212_Solaris\n","filename":"make\/data\/charsetmapping\/stdcs-solaris","additions":0,"deletions":26,"binary":false,"changes":26,"status":"deleted"},{"patch":"@@ -5,1 +5,0 @@\n-GB18030\n","filename":"make\/data\/charsetmapping\/stdcs-windows","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,12 +53,13 @@\n-                                .stream()\n-                                .filter(cs -> cs.pkgName.equals(\"sun.nio.cs.ext\") &&\n-                                              !cs.isInternal &&\n-                                              (cs.os == null || cs.os.equals(os)))\n-                                .forEach( cs -> {\n-                            out.printf(\"        charset(\\\"%s\\\", \\\"%s\\\",%n\", cs.csName, cs.clzName);\n-                            out.printf(\"                new String[] {%n\");\n-                            for (String alias : cs.aliases) {\n-                                out.printf(\"                    \\\"%s\\\",%n\", alias);\n-                            }\n-                            out.printf(\"                });%n%n\");\n-                        });\n+                            .stream()\n+                            .filter(cs -> cs.pkgName.equals(\"sun.nio.cs.ext\") &&\n+                                          !cs.isInternal &&\n+                                          (cs.os == null || cs.os.equals(os)))\n+                            .forEach( cs -> {\n+                                out.printf(\"        charset(\\\"%s\\\", \\\"%s\\\",%n\", cs.csName, cs.clzName);\n+                                out.printf(\"                new String[] {%n\");\n+                                for (String alias : cs.aliases) {\n+                                    out.printf(\"                    \\\"%s\\\",%n\",\n+                                            alias);\n+                                }\n+                                out.printf(\"                });%n%n\");\n+                            });\n@@ -96,2 +97,9 @@\n-                                 out.printf(\"    static String[] aliases_%s() { return null; }%n%n\",\n-                                            cs.clzName);\n+                                 if (cs.csName.equals(\"GB18030\")) {\n+                                     out.printf(\"    static String[] aliases_GB18030() { return new String[] {%n\");\n+                                     out.printf(\"            GB18030.IS_2000 ? \\\"gb18030-2000\\\" : \\\"gb18030-2022\\\"%n\");\n+                                     out.printf(\"        };%n\");\n+                                     out.printf(\"    }%n%n\");\n+                                 } else {\n+                                     out.printf(\"    static String[] aliases_%s() { return null; }%n%n\",\n+                                             cs.clzName);\n+                                 }\n","filename":"make\/jdk\/src\/classes\/build\/tools\/charsetmapping\/SPI.java","additions":23,"deletions":15,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-package $PACKAGE$;\n+package sun.nio.cs;\n@@ -37,0 +37,1 @@\n+import jdk.internal.misc.VM;\n@@ -38,0 +39,1 @@\n+import sun.security.action.GetPropertyAction;\n@@ -46,0 +48,6 @@\n+    \/\/ Assumes non-2000 standard if initialized during System.initPhase1(),\n+    \/\/ as the system property is not ready to be read in that case.\n+    static final boolean IS_2000 =\n+        VM.initLevel() >= 1 &&\n+        \"2000\".equals(GetPropertyAction.privilegedGetProperty(\"jdk.charset.GB18030\", \"\"));\n+\n@@ -47,1 +55,1 @@\n-        super(\"GB18030\", $ALIASES$);\n+        super(\"GB18030\", StandardCharsets.aliases_GB18030());\n@@ -1049,1 +1057,2 @@\n-        \"\\u1E3E\\u1E3F\\u1E40\\u1E41\\u1E42\\u1E43\\u1E44\\u1E45\"+\n+        (IS_2000 ? \"\\u1E3E\\u1E3F\\u1E40\\u1E41\\u1E42\\u1E43\\u1E44\\u1E45\" :\n+                   \"\\u1E3E\\uE7C7\\u1E40\\u1E41\\u1E42\\u1E43\\u1E44\\u1E45\")+\n@@ -2505,2 +2514,4 @@\n-        \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\"+\n-        \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\"+\n+        (IS_2000 ? \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\"+\n+                   \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\" :\n+                   \"\\uFFFD\\uE81E\\uE826\\uE82B\\uE82C\\uE832\\uE843\\uE854\"+\n+                   \"\\uE864\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\")+\n@@ -2769,2 +2780,4 @@\n-        \"\\uFE0C\\uFE0D\\uFE0E\\uFE0F\\uFE10\\uFE11\\uFE12\\uFE13\"+\n-        \"\\uFE14\\uFE15\\uFE16\\uFE17\\uFE18\\uFE19\\uFE1A\\uFE1B\"+\n+        (IS_2000 ? \"\\uFE0C\\uFE0D\\uFE0E\\uFE0F\\uFE10\\uFE11\\uFE12\\uFE13\"+\n+                   \"\\uFE14\\uFE15\\uFE16\\uFE17\\uFE18\\uFE19\\uFE1A\\uFE1B\" :\n+                   \"\\uFE0C\\uFE0D\\uFE0E\\uFE0F\\uE78D\\uE78F\\uE78E\\uE790\"+\n+                   \"\\uE791\\uE792\\uE793\\uE794\\uE795\\uE796\\uFE1A\\uFE1B\")+\n@@ -3776,4 +3789,8 @@\n-        \"\\u03C7\\u03C8\\u03C9\\uE78D\\uE78E\\uE78F\\uE790\\uE791\"+\n-        \"\\uE792\\uE793\\uFE35\\uFE36\\uFE39\\uFE3A\\uFE3F\\uFE40\"+\n-        \"\\uFE3D\\uFE3E\\uFE41\\uFE42\\uFE43\\uFE44\\uE794\\uE795\"+\n-        \"\\uFE3B\\uFE3C\\uFE37\\uFE38\\uFE31\\uE796\\uFE33\\uFE34\"+\n+        (IS_2000 ? \"\\u03C7\\u03C8\\u03C9\\uE78D\\uE78E\\uE78F\\uE790\\uE791\"+\n+                   \"\\uE792\\uE793\\uFE35\\uFE36\\uFE39\\uFE3A\\uFE3F\\uFE40\"+\n+                   \"\\uFE3D\\uFE3E\\uFE41\\uFE42\\uFE43\\uFE44\\uE794\\uE795\"+\n+                   \"\\uFE3B\\uFE3C\\uFE37\\uFE38\\uFE31\\uE796\\uFE33\\uFE34\" :\n+                   \"\\u03C7\\u03C8\\u03C9\\uFE10\\uFE12\\uFE11\\uFE13\\uFE14\"+\n+                   \"\\uFE15\\uFE16\\uFE35\\uFE36\\uFE39\\uFE3A\\uFE3F\\uFE40\"+\n+                   \"\\uFE3D\\uFE3E\\uFE41\\uFE42\\uFE43\\uFE44\\uFE17\\uFE18\"+\n+                   \"\\uFE3B\\uFE3C\\uFE37\\uFE38\\uFE31\\uFE19\\uFE33\\uFE34\")+\n@@ -3820,1 +3837,2 @@\n-        \"\\u01DC\\u00FC\\u00EA\\u0251\\uE7C7\\u0144\\u0148\\u01F9\"+\n+        (IS_2000 ? \"\\u01DC\\u00FC\\u00EA\\u0251\\uE7C7\\u0144\\u0148\\u01F9\" :\n+                   \"\\u01DC\\u00FC\\u00EA\\u0251\\u1E3F\\u0144\\u0148\\u01F9\")+\n@@ -5871,3 +5889,6 @@\n-        \"\\u3447\\u2E88\\u2E8B\\uE81E\\u359E\\u361A\\u360E\\u2E8C\"+\n-        \"\\u2E97\\u396E\\u3918\\uE826\\u39CF\\u39DF\\u3A73\\u39D0\"+\n-        \"\\uE82B\\uE82C\\u3B4E\\u3C6E\\u3CE0\\u2EA7\\uE831\\uE832\"+\n+        (IS_2000 ? \"\\u3447\\u2E88\\u2E8B\\uE81E\\u359E\\u361A\\u360E\\u2E8C\"+\n+                   \"\\u2E97\\u396E\\u3918\\uE826\\u39CF\\u39DF\\u3A73\\u39D0\"+\n+                   \"\\uE82B\\uE82C\\u3B4E\\u3C6E\\u3CE0\\u2EA7\\uE831\\uE832\" :\n+                   \"\\u3447\\u2E88\\u2E8B\\u9FB4\\u359E\\u361A\\u360E\\u2E8C\"+\n+                   \"\\u2E97\\u396E\\u3918\\u9FB5\\u39CF\\u39DF\\u3A73\\u39D0\"+\n+                   \"\\u9FB6\\u9FB7\\u3B4E\\u3C6E\\u3CE0\\u2EA7\\uE831\\u9FB8\")+\n@@ -5876,1 +5897,2 @@\n-        \"\\uE843\\uFFFD\\u4723\\u4729\\u477C\\u478D\\u2ECA\\u4947\"+\n+        (IS_2000 ? \"\\uE843\\uFFFD\\u4723\\u4729\\u477C\\u478D\\u2ECA\\u4947\" :\n+                   \"\\u9FB9\\uFFFD\\u4723\\u4729\\u477C\\u478D\\u2ECA\\u4947\")+\n@@ -5878,1 +5900,2 @@\n-        \"\\u49B7\\u49B6\\uE854\\uE855\\u4CA3\\u4C9F\\u4CA0\\u4CA1\"+\n+        (IS_2000 ? \"\\u49B7\\u49B6\\uE854\\uE855\\u4CA3\\u4C9F\\u4CA0\\u4CA1\" :\n+                   \"\\u49B7\\u49B6\\u9FBA\\uE855\\u4CA3\\u4C9F\\u4CA0\\u4CA1\")+\n@@ -5880,1 +5903,2 @@\n-        \"\\u4D19\\u4DAE\\uE864\\uE468\\uE469\\uE46A\\uE46B\\uE46C\"+\n+        (IS_2000 ? \"\\u4D19\\u4DAE\\uE864\\uE468\\uE469\\uE46A\\uE46B\\uE46C\" :\n+                   \"\\u4D19\\u4DAE\\u9FBB\\uE468\\uE469\\uE46A\\uE46B\\uE46C\")+\n@@ -6898,1 +6922,2 @@\n-        \"\\u3D1A\\u3D1B\\u3D1C\\u3D1D\\u3D1E\\u3D1F\\u3D20\\u3D21\"+\n+        (IS_2000 ? \"\\u3D1A\\u3D1B\\u3D1C\\u3D1D\\u3D1E\\u3D1F\\u3D20\\u3D21\" :\n+                   \"\\u3D1A\\u3D1B\\u3D1C\\u3D1D\\u3D1E\\u3D1F\\u3D20\\uA8BC\")+\n@@ -11057,2 +11082,4 @@\n-        \"\\u6A6D\\u6A6E\\u6A6F\\u6A70\\u6A71\\u6A72\\u6A73\\u6A74\"+\n-        \"\\u6A75\\u6A76\\u6A77\\u6A78\\u6A79\\u6A7A\\u6A7B\\u6A7C\"+\n+        (IS_2000 ? \"\\u6A6D\\u6A6E\\u6A6F\\u6A70\\u6A71\\u6A72\\u6A73\\u6A74\"+\n+                   \"\\u6A75\\u6A76\\u6A77\\u6A78\\u6A79\\u6A7A\\u6A7B\\u6A7C\" :\n+                   \"\\u6A6D\\u6A6E\\u6A6F\\u6A70\\uFE59\\uFE61\\uFE66\\uFE67\"+\n+                   \"\\uFE6D\\uFE7E\\uFE90\\uFEA0\\u6A79\\u6A7A\\u6A7B\\u6A7C\")+\n@@ -11470,2 +11497,4 @@\n-        \"\\uA6BC\\uA6BD\\uA6BE\\uA6BF\\uA6C0\\uA6D9\\uA6DA\\uA6DB\"+\n-        \"\\uA6DC\\uA6DD\\uA6DE\\uA6DF\\uA6EC\\uA6ED\\uA6F3\\uA6F6\"+\n+        (IS_2000 ? \"\\uA6BC\\uA6BD\\uA6BE\\uA6BF\\uA6C0\\uA6D9\\uA6DA\\uA6DB\"+\n+                   \"\\uA6DC\\uA6DD\\uA6DE\\uA6DF\\uA6EC\\uA6ED\\uA6F3\\uA6F6\" :\n+                   \"\\uA6BC\\uA6BD\\uA6BE\\uA6BF\\uA6C0\\u35E7\\u35E9\\u35E8\"+\n+                   \"\\u35EA\\u35EB\\u35EC\\u35ED\\u35EE\\u35EF\\u35F0\\uA6F6\")+\n@@ -11477,1 +11506,2 @@\n-        \"\\uA89A\\uA89B\\uA89C\\uA89D\\uA89E\\uA89F\\uA8A0\\uA8BC\"+\n+        (IS_2000 ? \"\\uA89A\\uA89B\\uA89C\\uA89D\\uA89E\\uA89F\\uA8A0\\uA8BC\" :\n+                   \"\\uA89A\\uA89B\\uA89C\\uA89D\\uA89E\\uA89F\\uA8A0\\u3D21\")+\n@@ -11488,4 +11518,8 @@\n-        \"\\uFE53\\u2010\\u2011\\u2012\\u2013\\u2014\\uFE59\\u2015\"+\n-        \"\\u2016\\u2017\\u2018\\u2019\\u201A\\u201B\\uFE61\\u201C\"+\n-        \"\\u201D\\u201E\\u201F\\uFE66\\uFE67\\u2020\\u2021\\u2022\"+\n-        \"\\u2023\\uFE6C\\uFE6D\\u2024\\u2025\\u2026\\u2027\\u2028\"+\n+        (IS_2000 ? \"\\uFE53\\u2010\\u2011\\u2012\\u2013\\u2014\\uFE59\\u2015\"+\n+                    \"\\u2016\\u2017\\u2018\\u2019\\u201A\\u201B\\uFE61\\u201C\"+\n+                    \"\\u201D\\u201E\\u201F\\uFE66\\uFE67\\u2020\\u2021\\u2022\"+\n+                    \"\\u2023\\uFE6C\\uFE6D\\u2024\\u2025\\u2026\\u2027\\u2028\" :\n+                    \"\\uFE53\\u2010\\u2011\\u2012\\u2013\\u2014\\u6A71\\u2015\"+\n+                    \"\\u2016\\u2017\\u2018\\u2019\\u201A\\u201B\\u6A72\\u201C\"+\n+                    \"\\u201D\\u201E\\u201F\\u6A73\\u6A74\\u2020\\u2021\\u2022\"+\n+                    \"\\u2023\\uFE6C\\u6A75\\u2024\\u2025\\u2026\\u2027\\u2028\")+\n@@ -11493,1 +11527,2 @@\n-        \"\\u2030\\u2031\\u2032\\uFE7E\\u2033\\u2034\\u2035\\u2036\"+\n+        (IS_2000 ? \"\\u2030\\u2031\\u2032\\uFE7E\\u2033\\u2034\\u2035\\u2036\" :\n+                   \"\\u2030\\u2031\\u2032\\u6A76\\u2033\\u2034\\u2035\\u2036\")+\n@@ -11495,1 +11530,2 @@\n-        \"\\u203F\\u2040\\u2041\\u2042\\uFE90\\uFE91\\u2043\\u2044\"+\n+        (IS_2000 ? \"\\u203F\\u2040\\u2041\\u2042\\uFE90\\uFE91\\u2043\\u2044\" :\n+                   \"\\u203F\\u2040\\u2041\\u2042\\u6A77\\uFE91\\u2043\\u2044\")+\n@@ -11497,1 +11533,2 @@\n-        \"\\u204D\\u204E\\u204F\\u2050\\uFEA0\\u2051\\u2052\\u2053\"+\n+        (IS_2000 ? \"\\u204D\\u204E\\u204F\\u2050\\uFEA0\\u2051\\u2052\\u2053\" :\n+                   \"\\u204D\\u204E\\u204F\\u2050\\u6A78\\u2051\\u2052\\u2053\")+\n@@ -12195,2 +12232,4 @@\n-        \"\\u24FB\\u24FC\\u24FD\\u24FE\\u24FF\\u2500\\u2501\\u2502\"+\n-        \"\\u2503\\u2504\\u2505\\u2506\\u2507\\u2508\\u2509\\u250A\"+\n+        (IS_2000 ? \"\\u24FB\\u24FC\\u24FD\\u24FE\\u24FF\\u2500\\u2501\\u2502\"+\n+                   \"\\u2503\\u2504\\u2505\\u2506\\u2507\\u2508\\u2509\\u250A\" :\n+                   \"\\uA6D9\\uA6DB\\uA6DA\\uA6DC\\uA6DD\\uA6DE\\uA6DF\\uA6EC\"+\n+                   \"\\uA6ED\\uA6F3\\u2505\\u2506\\u2507\\u2508\\u2509\\u250A\")+\n@@ -12409,2 +12448,7 @@\n-                        else if (offset > 0x4A62 && offset <= 0x82BC)\n-                            da[dp++] = (char)(offset + 0x5543);\n+                        else if (offset > 0x4A62 && offset <= 0x82BC) {\n+                            if (offset >= 0x4A71 && offset <= 0x4A78 && !IS_2000) {\n+                                da[dp++] = getChar(offset);\n+                            } else {\n+                                da[dp++] = (char)(offset + 0x5543);\n+                            }\n+                        }\n@@ -12512,2 +12556,7 @@\n-                        else if (offset > 0x4A62 && offset <= 0x82BC)\n-                            dst.put((char)(offset + 0x5543));\n+                        else if (offset > 0x4A62 && offset <= 0x82BC) {\n+                            if (offset >= 0x4A71 && offset <= 0x4A78 && !IS_2000) {\n+                                dst.put(getChar(offset));\n+                            } else {\n+                                dst.put((char)(offset + 0x5543));\n+                            }\n+                        }\n@@ -12623,1 +12672,2 @@\n-                        if (c >= 0xE000 && c < 0xF900)\n+                        if (c >= 0xE000 && c < 0xF900) {\n+                            if (IS_2000) {\n@@ -12625,0 +12675,8 @@\n+                            } else {\n+                                condensedKey = switch (c) {\n+                                    case 0xE7C7, 0xE81E, 0xE826, 0xE82B, 0xE82C, 0xE832,\n+                                        0xE843, 0xE854, 0xE864 -> condensedKey;\n+                                    default -> condensedKey + 0x82BD;\n+                                };\n+                            }\n+                        }\n@@ -12626,1 +12684,1 @@\n-                                condensedKey += 0x93A9;\n+                            condensedKey += 0x93A9;\n@@ -12629,1 +12687,1 @@\n-                             currentState = GB18030_DOUBLE_BYTE;\n+                            currentState = GB18030_DOUBLE_BYTE;\n@@ -12631,1 +12689,1 @@\n-                             currentState = GB18030_FOUR_BYTE;\n+                            currentState = GB18030_FOUR_BYTE;\n@@ -12674,1 +12732,1 @@\n-            return CoderResult.UNDERFLOW;\n+                return CoderResult.UNDERFLOW;\n@@ -12714,1 +12772,2 @@\n-                        if (c >= 0xE000 && c < 0xF900)\n+                        if (c >= 0xE000 && c < 0xF900) {\n+                            if (IS_2000) {\n@@ -12716,0 +12775,8 @@\n+                            } else {\n+                                condensedKey = switch (c) {\n+                                    case 0xE7C7, 0xE81E, 0xE826, 0xE82B, 0xE82C, 0xE832,\n+                                        0xE843, 0xE854, 0xE864 -> condensedKey;\n+                                    default -> condensedKey + 0x82BD;\n+                                };\n+                            }\n+                        }\n@@ -12717,1 +12784,1 @@\n-                                condensedKey += 0x93A9;\n+                            condensedKey += 0x93A9;\n@@ -12720,1 +12787,1 @@\n-                             currentState = GB18030_DOUBLE_BYTE;\n+                            currentState = GB18030_DOUBLE_BYTE;\n@@ -12722,1 +12789,1 @@\n-                             currentState = GB18030_FOUR_BYTE;\n+                            currentState = GB18030_FOUR_BYTE;\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/GB18030.java","additions":114,"deletions":47,"binary":false,"changes":161,"previous_filename":"src\/jdk.charsets\/share\/classes\/sun\/nio\/cs\/ext\/GB18030.java.template","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,2 +61,7 @@\n-        String acn = aliasMap().get(csn);\n-        return (acn != null) ? acn : csn;\n+        if (csn.startsWith(\"gb18030-\")) {\n+            return csn.equals(\"gb18030-2022\") && !GB18030.IS_2000 ||\n+                   csn.equals(\"gb18030-2000\") && GB18030.IS_2000 ? \"gb18030\" : csn;\n+        } else {\n+            String acn = aliasMap().get(csn);\n+            return (acn != null) ? acn : csn;\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/StandardCharsets.java.template","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,3 +32,0 @@\n-import java.nio.charset.Charset;\n-import java.nio.charset.spi.CharsetProvider;\n-\n","filename":"src\/jdk.charsets\/share\/classes\/sun\/nio\/cs\/ext\/ExtendedCharsets.java.template","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-        6911753 8071447 8186751 8242541 8260265\n+        6911753 8071447 8186751 8242541 8260265 8301119\n@@ -29,0 +29,2 @@\n+ * @run main RegisteredCharsets\n+ * @run main\/othervm -Djdk.charset.GB18030=2000 RegisteredCharsets\n@@ -254,0 +256,1 @@\n+                \"2000\".equals(System.getProperty(\"jdk.charset.GB18030\")) ?\n@@ -256,0 +259,3 @@\n+                } :\n+                new String[] {\n+                    \"gb18030-2022\"\n","filename":"test\/jdk\/java\/nio\/charset\/Charset\/RegisteredCharsets.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 8211382\n+ * @bug 8211382 8301119\n@@ -28,0 +28,2 @@\n+ * @run main TestGB18030\n+ * @run main\/othervm -Djdk.charset.GB18030=2000 TestGB18030\n@@ -30,1 +32,0 @@\n-import java.io.*;\n@@ -33,0 +34,1 @@\n+import java.util.Set;\n@@ -35,0 +37,1 @@\n+    private static final Charset cs = Charset.forName(\"GB18030\");\n@@ -38,1 +41,0 @@\n-            Charset cs = Charset.forName(\"GB18030\");\n@@ -78,0 +80,10 @@\n+\n+    static void checkAlias() {\n+        var IS_2000 = \"2000\".equals(System.getProperty(\"jdk.charset.GB18030\"));\n+        var expected = IS_2000 ? Set.of(\"gb18030-2000\") : Set.of(\"gb18030-2022\");\n+        var found = cs.aliases();\n+        System.out.printf(\"checkAlias(): IS_2000: %s, expected: %s, found: %s\\n\", IS_2000, expected, found);\n+        if (!cs.aliases().equals(expected)) {\n+            throw new RuntimeException(\"Result mismatch\");\n+        }\n+    }\n@@ -81,0 +93,1 @@\n+        checkAlias();\n","filename":"test\/jdk\/sun\/nio\/cs\/TestGB18030.java","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n-   @bug 4691554 6221056 6380723 6404504 6419565 6529796\n+   @bug 4691554 6221056 6380723 6404504 6419565 6529796 8301119\n@@ -28,0 +28,2 @@\n+   @run main CoderTest\n+   @run main\/othervm -Djdk.charset.GB18030=2000 CoderTest\n@@ -59,0 +61,3 @@\n+    private static final boolean IS_2000 =\n+            \"2000\".equals(System.getProperty(\"jdk.charset.GB18030\"));\n+\n@@ -469,1 +474,6 @@\n-            File f = testFile(encoding, mode);\n+            var fileName = encoding;\n+            if (fileName.equals(\"GB18030\") && IS_2000) {\n+                \/\/ tweak the map file name\n+                fileName = \"GB18030_2000\";\n+            }\n+            File f = testFile(fileName, mode);\n","filename":"test\/jdk\/sun\/nio\/cs\/mapping\/CoderTest.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+# based on GB18030-2022 mapping\n@@ -7744,1 +7745,1 @@\n-8135F437\t1E3F\n+A8BC\t1E3F\n@@ -40885,8 +40886,8 @@\n-82359037\t9FB4\n-82359038\t9FB5\n-82359039\t9FB6\n-82359130\t9FB7\n-82359131\t9FB8\n-82359132\t9FB9\n-82359133\t9FBA\n-82359134\t9FBB\n+82359037\tE81E\n+82359038\tE826\n+82359039\tE82B\n+82359130\tE82C\n+82359131\tE832\n+82359132\tE843\n+82359133\tE854\n+82359134\tE864\n@@ -57230,10 +57231,10 @@\n-A6D9\tE78D\n-A6DA\tE78E\n-A6DB\tE78F\n-A6DC\tE790\n-A6DD\tE791\n-A6DE\tE792\n-A6DF\tE793\n-A6EC\tE794\n-A6ED\tE795\n-A6F3\tE796\n+A6D9\tFE10\n+A6DA\tFE12\n+A6DB\tFE11\n+A6DC\tFE13\n+A6DD\tFE14\n+A6DE\tFE15\n+A6DF\tFE16\n+A6EC\tFE17\n+A6ED\tFE18\n+A6F3\tFE19\n@@ -57288,1 +57289,1 @@\n-A8BC\tE7C7\n+8135F437\tE7C7\n@@ -57375,1 +57376,1 @@\n-FE59\tE81E\n+FE59\t9FB4\n@@ -57383,1 +57384,1 @@\n-FE61\tE826\n+FE61\t9FB5\n@@ -57388,2 +57389,2 @@\n-FE66\tE82B\n-FE67\tE82C\n+FE66\t9FB6\n+FE67\t9FB7\n@@ -57395,1 +57396,1 @@\n-FE6D\tE832\n+FE6D\t9FB8\n@@ -57412,1 +57413,1 @@\n-FE7E\tE843\n+FE7E\t9FB9\n@@ -57429,1 +57430,1 @@\n-FE90\tE854\n+FE90\t9FBA\n@@ -57445,1 +57446,1 @@\n-FEA0\tE864\n+FEA0\t9FBB\n@@ -62993,10 +62994,10 @@\n-84318236\tFE10\n-84318237\tFE11\n-84318238\tFE12\n-84318239\tFE13\n-84318330\tFE14\n-84318331\tFE15\n-84318332\tFE16\n-84318333\tFE17\n-84318334\tFE18\n-84318335\tFE19\n+84318236\tE78D\n+84318237\tE78F\n+84318238\tE78E\n+84318239\tE790\n+84318330\tE791\n+84318331\tE792\n+84318332\tE793\n+84318333\tE794\n+84318334\tE795\n+84318335\tE796\n@@ -63487,2 +63488,2 @@\n-#8431A438\tFFFE\n-#8431A439\tFFFF\n+8431A438\tFFFE\n+8431A439\tFFFF\n","filename":"test\/jdk\/sun\/nio\/cs\/mapping\/GB18030.b2c","additions":41,"deletions":40,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -1,3 +1,1 @@\n-# GB18030.java is NOT generated from this mapping right now. This\n-# map is here for testing only.\n-#\n+# based on GB18030-2000 mapping\n","filename":"test\/jdk\/sun\/nio\/cs\/mapping\/GB18030_2000.b2c","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"make\/data\/charsetmapping\/GB18030.map","status":"renamed"}]}