{"files":[{"patch":"@@ -39,1 +39,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -193,1 +192,0 @@\n-        ReflectUtil.checkPackageAccess(className);\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/ClassLoaderRepositorySupport.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,1 +77,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -304,1 +303,0 @@\n-        ReflectUtil.checkPackageAccess(enumClass);\n@@ -429,1 +427,0 @@\n-        ReflectUtil.checkPackageAccess(c);\n@@ -1122,1 +1119,0 @@\n-                ReflectUtil.checkPackageAccess(targetClass);\n@@ -1378,1 +1374,0 @@\n-                ReflectUtil.checkPackageAccess(max.constructor.getDeclaringClass());\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/DefaultMXBeanMappingFactory.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -179,1 +178,0 @@\n-        ReflectUtil.checkPackageAccess(mbeanType);\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MBeanIntrospector.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -135,1 +134,0 @@\n-        ReflectUtil.checkPackageAccess(mbeanInterfaceType);\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MBeanSupport.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -64,1 +63,0 @@\n-            ReflectUtil.checkPackageAccess(name);\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/ObjectInputStreamWithLoader.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import sun.reflect.misc.ReflectUtil;\n-\n@@ -38,1 +36,0 @@\n-        ReflectUtil.checkPackageAccess(name);\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/util\/OrderClassLoaders.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,0 @@\n-import sun.reflect.misc.ReflectUtil;\n@@ -697,1 +696,0 @@\n-            ReflectUtil.checkPackageAccess(className);\n@@ -706,2 +704,0 @@\n-            \/\/ It is safe to call this plain Class.getMethod because the class \"c\"\n-            \/\/ was checked before by ReflectUtil.checkPackageAccess(openType.safeGetClassName());\n@@ -728,2 +724,0 @@\n-            \/\/ It is safe to call this plain Class.getConstructor because the class \"c\"\n-            \/\/ was checked before by ReflectUtil.checkPackageAccess(openType.safeGetClassName());\n@@ -768,3 +762,0 @@\n-            \/\/ check access to the provided base type class name and bail out early\n-            ReflectUtil.checkPackageAccess(baseClassName);\n-\n","filename":"src\/java.management\/share\/classes\/javax\/management\/openmbean\/OpenMBeanAttributeInfoSupport.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,2 +67,0 @@\n-        Util.checkControlAccess();\n-\n","filename":"src\/java.management\/share\/classes\/sun\/management\/ClassLoadingImpl.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,2 +84,0 @@\n-        Util.checkControlAccess();\n-\n","filename":"src\/java.management\/share\/classes\/sun\/management\/MemoryImpl.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,2 +115,0 @@\n-        Util.checkControlAccess();\n-\n@@ -160,2 +158,0 @@\n-        Util.checkControlAccess();\n-\n@@ -212,2 +208,0 @@\n-        Util.checkControlAccess();\n-\n","filename":"src\/java.management\/share\/classes\/sun\/management\/MemoryPoolImpl.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,0 @@\n-        Util.checkMonitorAccess();\n","filename":"src\/java.management\/share\/classes\/sun\/management\/RuntimeImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -132,1 +132,0 @@\n-        Util.checkMonitorAccess();\n@@ -181,2 +180,0 @@\n-        Util.checkMonitorAccess();\n-\n@@ -199,2 +196,0 @@\n-        Util.checkControlAccess();\n-\n@@ -335,1 +330,0 @@\n-        Util.checkControlAccess();\n@@ -404,1 +398,0 @@\n-        Util.checkControlAccess();\n@@ -429,1 +422,0 @@\n-        Util.checkMonitorAccess();\n@@ -441,2 +433,0 @@\n-        Util.checkMonitorAccess();\n-\n@@ -449,1 +439,0 @@\n-        Util.checkControlAccess();\n@@ -474,2 +463,0 @@\n-\n-        Util.checkMonitorAccess();\n","filename":"src\/java.management\/share\/classes\/sun\/management\/ThreadImpl.java","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -53,13 +53,1 @@\n-    private static ManagementPermission monitorPermission =\n-        new ManagementPermission(\"monitor\");\n-    private static ManagementPermission controlPermission =\n-        new ManagementPermission(\"control\");\n-\n-    \/**\n-     * Check that the current context is trusted to perform monitoring\n-     * or management.\n-     * <p>\n-     * If the check fails we throw a SecurityException, otherwise\n-     * we return normally.\n-     *\n-     *\/\n+    \/\/ Methods retained temporarily due to usage by jdk.management.\n","filename":"src\/java.management\/share\/classes\/sun\/management\/Util.java","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"}]}