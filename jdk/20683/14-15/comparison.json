{"files":[{"patch":"@@ -1,59 +0,0 @@\n-\/*\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2023, 2024, Red Hat, Inc. and\/or its affiliates.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import org.testng.annotations.Test;\n-import jdk.test.lib.dcmd.CommandExecutor;\n-import jdk.test.lib.dcmd.JMXExecutor;\n-import jdk.test.lib.process.OutputAnalyzer;\n-\n-\/*\n- * @test\n- * @summary Test of diagnostic command System.map\n- * @library \/test\/lib\n- * @requires (os.family == \"linux\" | os.family == \"windows\")\n- * @modules java.base\/jdk.internal.misc\n- *          java.compiler\n- *          java.management\n- *          jdk.internal.jvmstat\/sun.jvmstat.monitor\n- * @run testng\/othervm -XX:+UseZGC -XX:+UsePerfData SystemMapTest\n- *\/\n-public class SystemMapZGCTest extends SystemMapTestBase {\n-    public void run(CommandExecutor executor) {\n-        OutputAnalyzer output = executor.execute(\"System.map\");\n-        boolean NMTOff = output.contains(\"NMT is disabled\");\n-        for (String s: shouldMatchUnconditionally()) {\n-            output.shouldMatch(s);\n-        }\n-        if (!NMTOff) { \/\/ expect VM annotations if NMT is on\n-            for (String s: shouldMatchIfNMTIsEnabled()) {\n-                output.shouldMatch(s);\n-            }\n-        }\n-    }\n-\n-    @Test\n-    public void jmx() {\n-        run(new JMXExecutor());\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/SystemMapZGCTest.java","additions":0,"deletions":59,"binary":false,"changes":59,"status":"deleted"}]}