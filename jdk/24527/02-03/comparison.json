{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.lang.reflect.InaccessibleObjectException;\n@@ -562,0 +563,24 @@\n+  \/\/ Infrastructure for waitForReferenceProcessing()\n+  private Method waitForReferenceProcessingMethod = null;\n+\n+  private Method getWaitForReferenceProcessingMethod() {\n+    Method wfrp = waitForReferenceProcessingMethod;\n+    if (wfrp == null) {\n+      try {\n+        wfrp = Reference.class.getDeclaredMethod(\"waitForReferenceProcessing\");\n+        wfrp.setAccessible(true);\n+        assert wfrp.getReturnType() == Boolean.class;\n+        assert wfrp.getParameterCount() == 0;\n+        Class<?>[] ev = wfrp.getExceptionTypes();\n+        assert ev.length == 1;\n+        assert ev[0] == InterruptedException.class;\n+        waitForReferenceProcessingMethod = wfrp;\n+      } catch (InaccessibleObjectException e) {\n+        throw new RuntimeException(\"Need to add @modules java.base\/java.lang.ref:open to test?\", e);\n+      } catch (NoSuchMethodException e) {\n+        throw new RuntimeException(e);\n+      }\n+    }\n+    return wfrp;\n+  }\n+\n@@ -570,1 +595,1 @@\n-  public static void waitForReferenceProcessing() {\n+  public boolean waitForReferenceProcessing() {\n@@ -572,8 +597,7 @@\n-      Method wfrp = Reference.class.getDeclaredMethod(\"waitForReferenceProcessing\");\n-      wfrp.setAccessible(true);\n-      wfrp.invoke(null, new Object[0]);\n-    } catch (IllegalAccessException iae) {\n-      throw new RuntimeException(\"Need to add @modules java.base\/java.lang.ref:open?\",\n-              iae);\n-    } catch (NoSuchMethodException | InvocationTargetException e) {\n-      throw new RuntimeException(\"Reflection problem\", e);\n+      Method wfrp = getWaitForReferenceProcessingMethod();\n+      return (Boolean) wfrp.invoke(null);\n+    } catch (RuntimeException e) {\n+      \/\/ Just rethrow any RuntimeExceptions from getWaitForReferenceProcessingMethod()\n+      throw e;\n+    } catch (Throwable t) {\n+      throw new RuntimeException(t);\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":33,"deletions":9,"binary":false,"changes":42,"status":"modified"}]}