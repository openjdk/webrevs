{"files":[{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6355467\n+ * @summary Horizontal scroll bar thumb of a List does not stay at the end\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @requires (os.family == \"linux\")\n+ * @run main\/manual HorizScrollWorkTest\n+*\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.List;\n+\n+public class HorizScrollWorkTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This is a linux only test.\n+            Drag and drop the horizontal scroll bar thumb at the right end.\n+            If the thumb does not stay at the right end, then the test failed. Otherwise passed.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"HorizScrollWorkTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int)INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(HorizScrollWorkTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"HorizScrollWorkTest Frame\");\n+        List list = new List(4);\n+\n+        frame.setLayout (new FlowLayout());\n+\n+        list.add(\"veryyyyyyyyyyyyyyyyyyyyyyyyyy longgggggggggggggggggggggg stringggggggggggggggggggggg\");\n+\n+        frame.add(list);\n+        frame.pack();\n+\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/HorizScrollWorkTest.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4895367\n+ * @summary List scrolling w\/ down arrow keys obscures horizontal scrollbar\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @requires (os.family == \"linux\")\n+ * @run main\/manual HorizScrollbarEraseTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.List;\n+import java.awt.Panel;\n+import java.awt.TextArea;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class HorizScrollbarEraseTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This is a Unix-only test.\n+            Do the four mini-tests below.\n+            If the horizontal scrollbar is ever erased by a rectangle\n+            of the background color, the test FAILS.\n+            If the horizontal scrollbars remain painted, test passes.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"HorizScrollbarEraseTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(HorizScrollbarEraseTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"HorizScrollbarEraseTest\");\n+        Panel borderPanel = new Panel();\n+        borderPanel.setLayout(new BorderLayout());\n+        Button focusedButton = new Button(\"Focus starts here\");\n+        borderPanel.add(focusedButton, BorderLayout.NORTH);\n+\n+        Panel gridPanel = new Panel();\n+        gridPanel.setLayout(new GridLayout(0, 4));\n+        borderPanel.add(gridPanel, BorderLayout.CENTER);\n+\n+        InstructionList il1 = new InstructionList(\"Tab to Item 2, then \\n\" +\n+                                                   \"press the down\" +\n+                                                    \"arrow key to scroll down\");\n+        il1.list.select(2);\n+        il1.list.makeVisible(0);\n+        gridPanel.add(il1);\n+\n+        InstructionList il2 = new InstructionList(\"Tab to the next List,\\n\" +\n+                                                  \"then press the down\\n\" +\n+                                                  \"arrow key to select\\n\" +\n+                                                  \"the last item.\");\n+        il2.list.select(3);\n+        il2.list.makeVisible(0);\n+        gridPanel.add(il2);\n+\n+        InstructionList il3 = new InstructionList(\"Click the button to\\n\" +\n+                                                  \"programmatically\\n\" +\n+                                                  \"select item 3 (not showing)\");\n+        Button selectBtn = new Button(\"Click Me\");\n+        final List selectList = il3.list;\n+        selectBtn.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                selectList.select(3);\n+            }\n+        });\n+        il3.add(selectBtn, BorderLayout.CENTER);\n+        gridPanel.add(il3);\n+\n+        InstructionList il4 = new InstructionList(\"Click the button to\\nprogrammatically\\ndeselect item 3\\n(not showing)\");\n+        Button deselectBtn = new Button(\"Click Me\");\n+        final List deselectList = il4.list;\n+        deselectBtn.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                deselectList.deselect(3);\n+            }\n+        });\n+        il4.add(deselectBtn, BorderLayout.CENTER);\n+        il4.list.select(3);\n+        il4.list.makeVisible(0);\n+        gridPanel.add(il4);\n+\n+        frame.add(borderPanel);\n+        frame.pack();\n+        return frame;\n+\n+    }\n+}\n+\n+class InstructionList extends Panel {\n+    TextArea ta;\n+    public List list;\n+\n+    public InstructionList(String instructions) {\n+        super();\n+        setLayout(new BorderLayout());\n+        ta = new TextArea(instructions, 6, 25, TextArea.SCROLLBARS_NONE);\n+        ta.setFocusable(false);\n+        list = new List();\n+        for (int i = 0; i < 5; i++) {\n+            list.add(\"Item \" + i + \", a long, long, long, long item\");\n+        }\n+        add(ta, BorderLayout.NORTH);\n+        add(list, BorderLayout.SOUTH);\n+     }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/HorizScrollbarEraseTest.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6336384\n+ * @summary ScrollBar does not show up correctly\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ScrollbarPresenceTest\n+*\/\n+\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.List;\n+\n+public class ScrollbarPresenceTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        You will see a list,\n+        If a vertical scrollbar appears on the list and the list is big enough\n+        to show all items then the test failed else the test passed.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ScrollbarPresenceTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(ScrollbarPresenceTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"ScrollbarPresenceTest Frame\");\n+        List list = new List();\n+\n+        for (int i = 0; i < 6; i++) {\n+            list.addItem(\"Row \" + i);\n+        }\n+\n+        list.setFont(new Font(\"MonoSpaced\", Font.PLAIN, 12));\n+        list.setBounds(30, 30, 128, 104);\n+        frame.add(list);\n+\n+        frame.pack();\n+        return frame;\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/awt\/List\/ScrollbarPresenceTest.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6246467\n+ * @summary Tests that list works correctly if user specified foreground colors on XToolkit\/Motif\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual SetForegroundTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Component;\n+import java.awt.Checkbox;\n+import java.awt.Choice;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.List;\n+import java.awt.Panel;\n+import java.awt.TextArea;\n+import java.awt.TextField;\n+import java.awt.ScrollPane;\n+\n+public class SetForegroundTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        To make sure, that for each component\n+        (Button, Checkbox, Label, List, TextArea, TextField, Choice)\n+        in the frame,\n+        the title exist and the color of the title is red.\n+        If not, the test failed.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"SetForegroundTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(SetForegroundTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame();\n+        ScrollPane sp = new ScrollPane() {\n+            public Dimension getPreferredSize() {\n+                return new Dimension(180, 180);\n+            }\n+        };\n+        Panel p = new Panel();\n+        Component childs[] = new Component[] {new Button(\"button\"),\n+                                              new Checkbox(\"checkbox\"),\n+                                              new Label(\"label\"),\n+                                              new List(3, false),\n+                                              new TextArea(\"text area\"),\n+                                              new TextField(\"text field\"),\n+                                              new Choice()};\n+\n+        p.setLayout (new FlowLayout ());\n+\n+        sp.add(p);\n+\n+        sp.validate();\n+\n+        frame.add(sp);\n+        for (int i = 0; i < childs.length; i++){\n+            childs[i].setForeground(Color.red);\n+        }\n+\n+        for (int i = 0; i < childs.length; i++) {\n+            p.add(childs[i]);\n+            if (childs[i] instanceof List) {\n+                ((List)childs[i]).add(\"list1\");\n+                ((List)childs[i]).add(\"list2\");\n+            } else if (childs[i] instanceof Choice) {\n+                ((Choice)childs[i]).add(\"choice1\");\n+                ((Choice)childs[i]).add(\"choice2\");\n+            }\n+        }\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/SetForegroundTest.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"}]}