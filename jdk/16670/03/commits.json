[{"commit":{"message":"small fix\n\nChange-Id: Icfe9619af1c9e7d5ea8cac457ccebb4eec5c34ad"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"}],"sha":"268b71dbfc5138b2eacd9c6dfd52e3b4dd518797"},{"commit":{"message":"add _sve_xunpk & remove dead code\n\nChange-Id: Ic19836feb8a73ea7e65443794f2a0eb1363f6e2f"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp"}],"sha":"68748e7f0058b2ff579026d426b8af1f9ef357c7"},{"commit":{"message":"update m4\n\nChange-Id: I82bf5f9384f79e09965a0498ad2de45cec6f0a29"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4"}],"sha":"4fb3128ff863a4fa8fafe787cd232683667a46c0"},{"commit":{"message":"8319872: AArch64: [vectorapi] Implementation of unsigned (zero extended) casts\n\nVector API defines zero-extend operations [1], which are going to be\nintrinsified and generated to `VectorUCastNode` by C2. This patch adds\nbackend implementation for VectorUCastNode on AArch64.\n\nThe micro benchmark shows significant performance improvement. In my\ntest machine (SVE, 256-bit), the result is shown as below:\n\n  Benchmark                     Before     After       Units   Gain\n  VectorZeroExtend.byte2Int     3168.251   243012.399  ops\/ms  75.70\n  VectorZeroExtend.byte2Long    3212.201   216291.588  ops\/ms  66.33\n  VectorZeroExtend.byte2Short   3391.968   182655.365  ops\/ms  52.85\n  VectorZeroExtend.int2Long     1012.197    80448.553  ops\/ms  78.48\n  VectorZeroExtend.short2Int    1812.471   153416.828  ops\/ms  83.65\n  VectorZeroExtend.short2Long   1788.382   129794.814  ops\/ms  71.58\n\nOn other Neon systems, we can get similar performance boost as a result\nof intrinsification success.\n\nSince `VectorUCastNode` only used in Vector API's zero extension\ncurrently, this patch also adds assertion on nodes' definitions to\nclarify their usages.\n\n[TEST]\ncompiler\/vectorapi and jdk\/incubator\/vector passed on NEON and SVE\nmachines.\n\n[1] https:\/\/github.com\/openjdk\/jdk\/blob\/master\/src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorOperators.java#L726\n\nChange-Id: I10770759f158975ead1eecd3fb63280e563ed5e2"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/utils\/TestCastMethods.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorZeroExtend.java"}],"sha":"285522914a9b8a4af0e69aea7ad1983e9cb17e47"}]