{"files":[{"patch":"@@ -2199,2 +2199,0 @@\n-  enum sign_kind { SIGNED, UNSIGNED };\n-\n@@ -2202,21 +2200,1 @@\n-  void _xcvtf_scalar_integer(sign_kind sign, unsigned sz,\n-                             FloatRegister Rd, FloatRegister Rn) {\n-    starti;\n-    f(0b01, 31, 30), f(sign == SIGNED ? 0 : 1, 29);\n-    f(0b111100, 27, 23), f((sz >> 1) & 1, 22), f(0b100001110110, 21, 10);\n-    rf(Rn, 5), rf(Rd, 0);\n-  }\n-\n-public:\n-#define INSN(NAME, sign, sz)                        \\\n-  void NAME(FloatRegister Rd, FloatRegister Rn) {   \\\n-    _xcvtf_scalar_integer(sign, sz, Rd, Rn);        \\\n-  }\n-\n-  INSN(scvtfs, SIGNED, 0);\n-  INSN(scvtfd, SIGNED, 1);\n-\n-#undef INSN\n-\n-private:\n-  void _xcvtf_vector_integer(sign_kind sign, SIMD_Arrangement T,\n+  void _xcvtf_vector_integer(bool is_unsigned, SIMD_Arrangement T,\n@@ -2226,1 +2204,1 @@\n-    f(0, 31), f(T & 1, 30), f(sign == SIGNED ? 0 : 1, 29);\n+    f(0, 31), f(T & 1, 30), f(is_unsigned ? 1 : 0, 29);\n@@ -2232,0 +2210,1 @@\n+\n@@ -2233,1 +2212,1 @@\n-    _xcvtf_vector_integer(SIGNED, T, Rd, Rn);\n+    _xcvtf_vector_integer(\/* is_unsigned *\/ false, T, Rd, Rn);\n@@ -2994,2 +2973,2 @@\n-private:\n-  void _xshll(sign_kind sign, FloatRegister Vd, SIMD_Arrangement Ta, FloatRegister Vn, SIMD_Arrangement Tb, int shift) {\n+protected:\n+  void _xshll(bool is_unsigned, FloatRegister Vd, SIMD_Arrangement Ta, FloatRegister Vn, SIMD_Arrangement Tb, int shift) {\n@@ -3005,1 +2984,1 @@\n-    f(0, 31), f(Tb & 1, 30), f(sign == SIGNED ? 0 : 1, 29), f(0b011110, 28, 23);\n+    f(0, 31), f(Tb & 1, 30), f(is_unsigned ? 1 : 0, 29), f(0b011110, 28, 23);\n@@ -3013,1 +2992,1 @@\n-    _xshll(UNSIGNED, Vd, Ta, Vn, Tb, shift);\n+    _xshll(\/* is_unsigned *\/ true, Vd, Ta, Vn, Tb, shift);\n@@ -3018,1 +2997,1 @@\n-    _xshll(UNSIGNED, Vd, Ta, Vn, Tb, shift);\n+    _xshll(\/* is_unsigned *\/ true, Vd, Ta, Vn, Tb, shift);\n@@ -3027,1 +3006,1 @@\n-    _xshll(SIGNED, Vd, Ta, Vn, Tb, shift);\n+    _xshll(\/* is_unsigned *\/ false, Vd, Ta, Vn, Tb, shift);\n@@ -3032,1 +3011,1 @@\n-    _xshll(SIGNED, Vd, Ta, Vn, Tb, shift);\n+    _xshll(\/* is_unsigned *\/ false, Vd, Ta, Vn, Tb, shift);\n@@ -3865,6 +3844,7 @@\n-#define INSN(NAME, op) \\\n-  void NAME(FloatRegister Zd, SIMD_RegVariant T, FloatRegister Zn) { \\\n-    starti;                                                          \\\n-    assert(T != B && T != Q, \"invalid size\");                        \\\n-    f(0b00000101, 31, 24), f(T, 23, 22), f(0b1100, 21, 18);          \\\n-    f(op, 17, 16), f(0b001110, 15, 10), rf(Zn, 5), rf(Zd, 0);        \\\n+protected:\n+  void _sve_xunpk(bool is_unsigned, bool is_high, FloatRegister Zd, SIMD_RegVariant T, FloatRegister Zn) {\n+    starti;\n+    assert(T != B && T != Q, \"invalid size\");\n+    f(0b00000101, 31, 24), f(T, 23, 22), f(0b1100, 21, 18);\n+    f(is_unsigned ? 1 : 0, 17), f(is_high ? 1 : 0, 16),\n+    f(0b001110, 15, 10), rf(Zn, 5), rf(Zd, 0);\n@@ -3873,5 +3853,20 @@\n-  INSN(sve_uunpkhi, 0b11); \/\/ Signed unpack and extend half of vector - high half\n-  INSN(sve_uunpklo, 0b10); \/\/ Signed unpack and extend half of vector - low half\n-  INSN(sve_sunpkhi, 0b01); \/\/ Unsigned unpack and extend half of vector - high half\n-  INSN(sve_sunpklo, 0b00); \/\/ Unsigned unpack and extend half of vector - low half\n-#undef INSN\n+public:\n+  \/\/ Unsigned unpack and extend half of vector - high half\n+  void sve_uunpkhi(FloatRegister Zd, SIMD_RegVariant T, FloatRegister Zn) {\n+    _sve_xunpk(\/* is_unsigned *\/ true, \/* is_high *\/ true, Zd, T, Zn);\n+  }\n+\n+  \/\/ Unsigned unpack and extend half of vector - low half\n+  void sve_uunpklo(FloatRegister Zd, SIMD_RegVariant T, FloatRegister Zn) {\n+    _sve_xunpk(\/* is_unsigned *\/ true, \/* is_high *\/ false, Zd, T, Zn);\n+  }\n+\n+  \/\/ Signed unpack and extend half of vector - high half\n+  void sve_sunpkhi(FloatRegister Zd, SIMD_RegVariant T, FloatRegister Zn) {\n+    _sve_xunpk(\/* is_unsigned *\/ false, \/* is_high *\/ true, Zd, T, Zn);\n+  }\n+\n+  \/\/ Signed unpack and extend half of vector - low half\n+  void sve_sunpklo(FloatRegister Zd, SIMD_RegVariant T, FloatRegister Zn) {\n+    _sve_xunpk(\/* is_unsigned *\/ false, \/* is_high *\/ false, Zd, T, Zn);\n+  }\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":38,"deletions":43,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -1340,3 +1340,0 @@\n-typedef void (C2_MacroAssembler::* xtl_insn)(FloatRegister Vd, Assembler::SIMD_Arrangement Ta,\n-                                             FloatRegister Vn, Assembler::SIMD_Arrangement Tb);\n-\n@@ -1347,1 +1344,0 @@\n-  xtl_insn ext = is_unsigned ? &C2_MacroAssembler::uxtl : &C2_MacroAssembler::sxtl;\n@@ -1351,2 +1347,1 @@\n-      assert(dst_vlen_in_bytes == 8 || dst_vlen_in_bytes == 16, \"unsupported\");\n-      (this->*ext)(dst, T8H, src, T8B);\n+      _xshll(is_unsigned, dst, T8H, src, T8B, 0);\n@@ -1356,2 +1351,2 @@\n-      (this->*ext)(dst, T8H, src, T8B);\n-      (this->*ext)(dst, T4S, dst, T4H);\n+      _xshll(is_unsigned, dst, T8H, src, T8B, 0);\n+      _xshll(is_unsigned, dst, T4S, dst, T4H, 0);\n@@ -1362,1 +1357,1 @@\n-    (this->*ext)(dst, T4S, src, T4H);\n+    _xshll(is_unsigned, dst, T4S, src, T4H, 0);\n@@ -1366,1 +1361,1 @@\n-    (this->*ext)(dst, T2D, src, T2S);\n+    _xshll(is_unsigned, dst, T2D, src, T2S, 0);\n@@ -1399,3 +1394,0 @@\n-typedef void (C2_MacroAssembler::* unpklo_insn)(FloatRegister Zd, Assembler::SIMD_RegVariant T,\n-                                                FloatRegister Zn);\n-\n@@ -1407,2 +1399,0 @@\n-  unpklo_insn unpklo = is_unsigned ? &C2_MacroAssembler::sve_uunpklo : &C2_MacroAssembler::sve_sunpklo;\n-\n@@ -1412,1 +1402,1 @@\n-      (this->*unpklo)(dst, H, src);\n+      _sve_xunpk(is_unsigned, \/* is_high *\/ false, dst, H, src);\n@@ -1415,2 +1405,2 @@\n-      (this->*unpklo)(dst, H, src);\n-      (this->*unpklo)(dst, S, dst);\n+      _sve_xunpk(is_unsigned, \/* is_high *\/ false, dst, H, src);\n+      _sve_xunpk(is_unsigned, \/* is_high *\/ false, dst, S, dst);\n@@ -1419,3 +1409,3 @@\n-      (this->*unpklo)(dst, H, src);\n-      (this->*unpklo)(dst, S, dst);\n-      (this->*unpklo)(dst, D, dst);\n+      _sve_xunpk(is_unsigned, \/* is_high *\/ false, dst, H, src);\n+      _sve_xunpk(is_unsigned, \/* is_high *\/ false, dst, S, dst);\n+      _sve_xunpk(is_unsigned, \/* is_high *\/ false, dst, D, dst);\n@@ -1428,1 +1418,1 @@\n-      (this->*unpklo)(dst, S, src);\n+      _sve_xunpk(is_unsigned, \/* is_high *\/ false, dst, S, src);\n@@ -1430,2 +1420,2 @@\n-      (this->*unpklo)(dst, S, src);\n-      (this->*unpklo)(dst, D, dst);\n+      _sve_xunpk(is_unsigned, \/* is_high *\/ false, dst, S, src);\n+      _sve_xunpk(is_unsigned, \/* is_high *\/ false, dst, D, dst);\n@@ -1434,1 +1424,1 @@\n-    (this->*unpklo)(dst, D, src);\n+    _sve_xunpk(is_unsigned, \/* is_high *\/ false, dst, D, src);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":15,"deletions":25,"binary":false,"changes":40,"status":"modified"}]}