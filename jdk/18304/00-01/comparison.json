{"files":[{"patch":"@@ -81,1 +81,2 @@\n-      CFLAGS := $(CFLAGS_JDKEXE) -I$(TOPDIR)\/src\/$(MODULE)\/unix\/native\/libjava, \\\n+      CFLAGS := $(CFLAGS_JDKEXE) $(VERSION_CFLAGS) \\\n+          -I$(TOPDIR)\/src\/$(MODULE)\/unix\/native\/libjava, \\\n","filename":"make\/modules\/java.base\/Launcher.gmk","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+    ProcessImpl_md.c_CFLAGS := $(VERSION_CFLAGS), \\\n","filename":"make\/modules\/java.base\/lib\/CoreLibraries.gmk","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2794,1 +2794,1 @@\n-                                         VectorRegister src, BasicType src_bt) {\n+                                         VectorRegister src, BasicType src_bt, bool is_signed) {\n@@ -2804,3 +2804,22 @@\n-  if (src_bt == T_BYTE) {\n-    switch (dst_bt) {\n-    case T_SHORT:\n+  if (is_signed) {\n+    if (src_bt == T_BYTE) {\n+      switch (dst_bt) {\n+      case T_SHORT:\n+        vsext_vf2(dst, src);\n+        break;\n+      case T_INT:\n+        vsext_vf4(dst, src);\n+        break;\n+      case T_LONG:\n+        vsext_vf8(dst, src);\n+        break;\n+      default:\n+        ShouldNotReachHere();\n+      }\n+    } else if (src_bt == T_SHORT) {\n+      if (dst_bt == T_INT) {\n+        vsext_vf2(dst, src);\n+      } else {\n+        vsext_vf4(dst, src);\n+      }\n+    } else if (src_bt == T_INT) {\n@@ -2808,9 +2827,0 @@\n-      break;\n-    case T_INT:\n-      vsext_vf4(dst, src);\n-      break;\n-    case T_LONG:\n-      vsext_vf8(dst, src);\n-      break;\n-    default:\n-      ShouldNotReachHere();\n@@ -2818,5 +2828,23 @@\n-  } else if (src_bt == T_SHORT) {\n-    if (dst_bt == T_INT) {\n-      vsext_vf2(dst, src);\n-    } else {\n-      vsext_vf4(dst, src);\n+  } else {\n+    if (src_bt == T_BYTE) {\n+      switch (dst_bt) {\n+      case T_SHORT:\n+        vzext_vf2(dst, src);\n+        break;\n+      case T_INT:\n+        vzext_vf4(dst, src);\n+        break;\n+      case T_LONG:\n+        vzext_vf8(dst, src);\n+        break;\n+      default:\n+        ShouldNotReachHere();\n+      }\n+    } else if (src_bt == T_SHORT) {\n+      if (dst_bt == T_INT) {\n+        vzext_vf2(dst, src);\n+      } else {\n+        vzext_vf4(dst, src);\n+      }\n+    } else if (src_bt == T_INT) {\n+      vzext_vf2(dst, src);\n@@ -2824,2 +2852,0 @@\n-  } else if (src_bt == T_INT) {\n-    vsext_vf2(dst, src);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":46,"deletions":20,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-                        VectorRegister src, BasicType src_bt);\n+                        VectorRegister src, BasicType src_bt, bool is_signed);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3192,1 +3192,1 @@\n-\/\/ VectorCastB2X\n+\/\/ VectorCastB2X, VectorUCastB2X\n@@ -3202,1 +3202,2 @@\n-                          Matcher::vector_length(this), as_VectorRegister($src$$reg), T_BYTE);\n+                          Matcher::vector_length(this), as_VectorRegister($src$$reg), T_BYTE,\n+                          true \/* is_signed *\/);\n@@ -3207,1 +3208,2 @@\n-                          Matcher::vector_length(this), as_VectorRegister($src$$reg), T_BYTE);\n+                          Matcher::vector_length(this), as_VectorRegister($src$$reg), T_BYTE,\n+                          true \/* is_signed *\/);\n@@ -3213,1 +3215,17 @@\n-\/\/ VectorCastS2X\n+instruct vcvtUBtoX(vReg dst, vReg src) %{\n+  predicate(Matcher::vector_element_basic_type(n) == T_SHORT ||\n+            Matcher::vector_element_basic_type(n) == T_INT ||\n+            Matcher::vector_element_basic_type(n) == T_LONG);\n+  match(Set dst (VectorUCastB2X src));\n+  effect(TEMP_DEF dst);\n+  format %{ \"vcvtUBtoX $dst, $src\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    __ integer_extend_v(as_VectorRegister($dst$$reg), bt,\n+                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_BYTE,\n+                        false \/* is_signed *\/);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+\/\/ VectorCastS2X, VectorUCastS2X\n@@ -3226,1 +3244,1 @@\n-instruct vcvtStoX_extend(vReg dst, vReg src) %{\n+instruct vcvtStoX(vReg dst, vReg src) %{\n@@ -3231,1 +3249,1 @@\n-  format %{ \"vcvtStoX_extend $dst, $src\" %}\n+  format %{ \"vcvtStoX $dst, $src\" %}\n@@ -3234,1 +3252,2 @@\n-                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_SHORT);\n+                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_SHORT,\n+                        true \/* is_signed *\/);\n@@ -3239,1 +3258,1 @@\n-instruct vcvtStoX_fp_extend(vReg dst, vReg src) %{\n+instruct vcvtStoX_fp(vReg dst, vReg src) %{\n@@ -3244,1 +3263,1 @@\n-  format %{ \"vcvtStoX_fp_extend $dst, $src\" %}\n+  format %{ \"vcvtStoX_fp $dst, $src\" %}\n@@ -3248,1 +3267,2 @@\n-                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_SHORT);\n+                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_SHORT,\n+                        true \/* is_signed *\/);\n@@ -3256,1 +3276,16 @@\n-\/\/ VectorCastI2X\n+\n+instruct vcvtUStoX(vReg dst, vReg src) %{\n+  predicate(Matcher::vector_element_basic_type(n) == T_INT ||\n+            Matcher::vector_element_basic_type(n) == T_LONG);\n+  match(Set dst (VectorUCastS2X src));\n+  effect(TEMP_DEF dst);\n+  format %{ \"vcvtUStoX $dst, $src\" %}\n+  ins_encode %{\n+    __ integer_extend_v(as_VectorRegister($dst$$reg), Matcher::vector_element_basic_type(this),\n+                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_SHORT,\n+                        false \/* is_signed *\/);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+\/\/ VectorCastI2X, VectorUCastI2X\n@@ -3278,1 +3313,15 @@\n-                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_INT);\n+                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_INT,\n+                        true \/* is_signed *\/);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vcvtUItoL(vReg dst, vReg src) %{\n+  predicate(Matcher::vector_element_basic_type(n) == T_LONG);\n+  match(Set dst (VectorUCastI2X src));\n+  effect(TEMP_DEF dst);\n+  format %{ \"vcvtUItoL $dst, $src\" %}\n+  ins_encode %{\n+    __ integer_extend_v(as_VectorRegister($dst$$reg), T_LONG,\n+                        Matcher::vector_length(this), as_VectorRegister($src$$reg), T_INT,\n+                        false \/* is_signed *\/);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":61,"deletions":12,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -1144,11 +1144,9 @@\n-        if (TieredCompilation) {\n-          \/\/ If there is an old version we're done with it\n-          CompiledMethod* old = method->code();\n-          if (TraceMethodReplacement && old != nullptr) {\n-            ResourceMark rm;\n-            char *method_name = method->name_and_sig_as_C_string();\n-            tty->print_cr(\"Replacing method %s\", method_name);\n-          }\n-          if (old != nullptr) {\n-            old->make_not_used();\n-          }\n+        \/\/ If there is an old version we're done with it\n+        CompiledMethod* old = method->code();\n+        if (TraceMethodReplacement && old != nullptr) {\n+          ResourceMark rm;\n+          char *method_name = method->name_and_sig_as_C_string();\n+          tty->print_cr(\"Replacing method %s\", method_name);\n+        }\n+        if (old != nullptr) {\n+          old->make_not_used();\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"compiler\/compilerDirectives.hpp\"\n@@ -1362,0 +1363,61 @@\n+void CodeCache::mark_directives_matches(bool top_only) {\n+  MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n+  Thread *thread = Thread::current();\n+  HandleMark hm(thread);\n+\n+  CompiledMethodIterator iter(CompiledMethodIterator::only_not_unloading);\n+  while(iter.next()) {\n+    CompiledMethod* nm = iter.method();\n+    methodHandle mh(thread, nm->method());\n+    if (DirectivesStack::hasMatchingDirectives(mh, top_only)) {\n+      ResourceMark rm;\n+      log_trace(codecache)(\"Mark because of matching directives %s\", mh->external_name());\n+      mh->set_has_matching_directives();\n+    }\n+  }\n+}\n+\n+void CodeCache::recompile_marked_directives_matches() {\n+  Thread *thread = Thread::current();\n+  HandleMark hm(thread);\n+\n+  \/\/ Try the max level and let the directives be applied during the compilation.\n+  int comp_level = CompilationPolicy::highest_compile_level();\n+  RelaxedCompiledMethodIterator iter(RelaxedCompiledMethodIterator::only_not_unloading);\n+  while(iter.next()) {\n+    CompiledMethod* nm = iter.method();\n+    methodHandle mh(thread, nm->method());\n+    if (mh->has_matching_directives()) {\n+      ResourceMark rm;\n+      mh->clear_directive_flags();\n+      bool deopt = false;\n+\n+      if (!nm->is_osr_method()) {\n+        log_trace(codecache)(\"Recompile to level %d because of matching directives %s\",\n+                             comp_level, mh->external_name());\n+        nmethod * comp_nm = CompileBroker::compile_method(mh, InvocationEntryBci, comp_level,\n+                                                          methodHandle(), 0,\n+                                                          CompileTask::Reason_DirectivesChanged,\n+                                                          (JavaThread*)thread);\n+        if (comp_nm == nullptr) {\n+          log_trace(codecache)(\"Recompilation to level %d failed, deoptimize %s\",\n+                               comp_level, mh->external_name());\n+          deopt = true;\n+        }\n+      } else {\n+        log_trace(codecache)(\"Deoptimize OSR %s\", mh->external_name());\n+        deopt = true;\n+      }\n+      \/\/ For some reason the method cannot be compiled by C2, e.g. the new directives forbid it.\n+      \/\/ Deoptimize the method and let the usual hotspot logic do the rest.\n+      if (deopt) {\n+        if (!nm->has_been_deoptimized() && nm->can_be_deoptimized()) {\n+          nm->make_not_entrant();\n+          nm->make_deoptimized();\n+        }\n+      }\n+      gc_on_allocation(); \/\/ Flush unused methods from CodeCache if required.\n+    }\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":62,"deletions":0,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -307,0 +307,3 @@\n+  static void mark_directives_matches(bool top_only = false);\n+  static void recompile_marked_directives_matches();\n+\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1174,5 +1174,7 @@\n-  \/\/ A request has been made for compilation.  Before we do any\n-  \/\/ real work, check to see if the method has been compiled\n-  \/\/ in the meantime with a definitive result.\n-  if (compilation_is_complete(method, osr_bci, comp_level)) {\n-    return;\n+  if (compile_reason != CompileTask::Reason_DirectivesChanged) {\n+    \/\/ A request has been made for compilation.  Before we do any\n+    \/\/ real work, check to see if the method has been compiled\n+    \/\/ in the meantime with a definitive result.\n+    if (compilation_is_complete(method, osr_bci, comp_level)) {\n+      return;\n+    }\n@@ -1223,5 +1225,7 @@\n-    \/\/ We need to check again to see if the compilation has\n-    \/\/ completed.  A previous compilation may have registered\n-    \/\/ some result.\n-    if (compilation_is_complete(method, osr_bci, comp_level)) {\n-      return;\n+    if (compile_reason != CompileTask::Reason_DirectivesChanged) {\n+      \/\/ We need to check again to see if the compilation has\n+      \/\/ completed.  A previous compilation may have registered\n+      \/\/ some result.\n+      if (compilation_is_complete(method, osr_bci, comp_level)) {\n+        return;\n+      }\n@@ -1376,1 +1380,2 @@\n-    if (method_code != nullptr && method_code->is_nmethod()) {\n+    if (method_code != nullptr && method_code->is_nmethod()\n+                      && (compile_reason != CompileTask::Reason_DirectivesChanged)) {\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":16,"deletions":11,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+      Reason_DirectivesChanged, \/\/ Changed CompilerDirectivesStack\n@@ -77,1 +78,2 @@\n-      \"bootstrap\"\n+      \"bootstrap\",\n+      \"directives_changed\"\n","filename":"src\/hotspot\/share\/compiler\/compileTask.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -750,0 +750,19 @@\n+bool DirectivesStack::hasMatchingDirectives(const methodHandle& method, bool top_only) {\n+  assert(_depth > 0, \"Must never be empty\");\n+  MutexLocker locker(DirectivesStack_lock, Mutex::_no_safepoint_check_flag);\n+\n+  CompilerDirectives* dir = _top;\n+  assert(dir != nullptr, \"Must be initialized\");\n+\n+  while (dir != nullptr) {\n+    if (!dir->is_default_directive() && dir->match(method)) {\n+      return true;\n+    }\n+    if (top_only) {\n+      break;\n+    }\n+    dir = dir->next();\n+  }\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.cpp","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -118,0 +118,1 @@\n+  static bool hasMatchingDirectives(const methodHandle& method, bool top_only = false);\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -131,0 +131,3 @@\n+      assert(unused_space >= uncommitted_space,\n+             \"Unused (\" SIZE_FORMAT \") >= uncommitted (\" SIZE_FORMAT \")\",\n+             unused_space, uncommitted_space);\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonHeap.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +33,1 @@\n-  virtual void print_gc_specific();\n+  void print_gc_specific() override;\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonInitLogger.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,3 +32,3 @@\n-  virtual void print_heap();\n-  virtual void print_workers();\n-  virtual void print_gc_specific();\n+  void print_heap() override;\n+  void print_workers() override;\n+  void print_gc_specific() override;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1InitLogger.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,2 +57,0 @@\n-  virtual ReferenceIterationMode reference_iteration_mode() { return DO_FIELDS; }\n-\n@@ -71,0 +69,2 @@\n+  virtual ReferenceIterationMode reference_iteration_mode() { return DO_FIELDS; }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-  virtual void print_heap();\n+  void print_heap() override;\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelInitLogger.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -819,0 +819,8 @@\n+  \/\/ Clear the flags related to compiler directives that were set by the compilerBroker,\n+  \/\/ because the directives can be updated.\n+  void clear_directive_flags() {\n+    set_has_matching_directives(false);\n+    clear_is_not_c1_compilable();\n+    clear_is_not_c2_compilable();\n+  }\n+\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+   status(has_matching_directives     , 1 << 16) \/* Temporary mark, used only when methods are to be refreshed to reflect a compiler directives update *\/ \\\n","filename":"src\/hotspot\/share\/oops\/methodFlags.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -272,1 +272,0 @@\n-  MUTEX_DEFN(DirectivesStack_lock            , PaddedMutex  , nosafepoint);\n@@ -330,0 +329,1 @@\n+  MUTEX_DEFL(DirectivesStack_lock           , PaddedMutex  , CodeCache_lock);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,0 +147,1 @@\n+  DCmdFactory::register_DCmdFactory(new DCmdFactoryImpl<CompilerDirectivesReplaceDCmd>(full_export, true, false));\n@@ -926,1 +927,3 @@\n-  _filename(\"filename\",\"Name of the directives file\", \"STRING\",true) {\n+  _filename(\"filename\", \"Name of the directives file\", \"STRING\", true),\n+  _refresh(\"-r\", \"Refresh affected methods\", \"BOOLEAN\", false, \"false\") {\n+\n@@ -928,0 +931,1 @@\n+  _dcmdparser.add_dcmd_option(&_refresh);\n@@ -932,0 +936,37 @@\n+  if (_refresh.value()) {\n+    CodeCache::mark_directives_matches(true);\n+    CodeCache::recompile_marked_directives_matches();\n+  }\n+}\n+\n+CompilerDirectivesReplaceDCmd::CompilerDirectivesReplaceDCmd(outputStream* output, bool heap) :\n+                           DCmdWithParser(output, heap),\n+  _filename(\"filename\", \"Name of the directives file\", \"STRING\", true),\n+  _refresh(\"-r\", \"Refresh affected methods\", \"BOOLEAN\", false, \"false\") {\n+\n+  _dcmdparser.add_dcmd_argument(&_filename);\n+  _dcmdparser.add_dcmd_option(&_refresh);\n+}\n+\n+void CompilerDirectivesReplaceDCmd::execute(DCmdSource source, TRAPS) {\n+  \/\/ Need to mark the methods twice, to account for the method that doesn't match\n+  \/\/ the directives anymore\n+  if (_refresh.value()) {\n+    CodeCache::mark_directives_matches();\n+\n+    DirectivesStack::clear();\n+    DirectivesParser::parse_from_file(_filename.value(), output(), true);\n+\n+    CodeCache::mark_directives_matches();\n+    CodeCache::recompile_marked_directives_matches();\n+  } else {\n+    DirectivesStack::clear();\n+    DirectivesParser::parse_from_file(_filename.value(), output(), true);\n+  }\n+}\n+\n+CompilerDirectivesRemoveDCmd::CompilerDirectivesRemoveDCmd(outputStream* output, bool heap) :\n+                           DCmdWithParser(output, heap),\n+  _refresh(\"-r\", \"Refresh affected methods\", \"BOOLEAN\", false, \"false\") {\n+\n+  _dcmdparser.add_dcmd_option(&_refresh);\n@@ -935,1 +976,14 @@\n-  DirectivesStack::pop(1);\n+  if (_refresh.value()) {\n+    CodeCache::mark_directives_matches(true);\n+    DirectivesStack::pop(1);\n+    CodeCache::recompile_marked_directives_matches();\n+  } else {\n+    DirectivesStack::pop(1);\n+  }\n+}\n+\n+CompilerDirectivesClearDCmd::CompilerDirectivesClearDCmd(outputStream* output, bool heap) :\n+                           DCmdWithParser(output, heap),\n+  _refresh(\"-r\", \"Refresh affected methods\", \"BOOLEAN\", false, \"false\") {\n+\n+  _dcmdparser.add_dcmd_option(&_refresh);\n@@ -939,1 +993,7 @@\n-  DirectivesStack::clear();\n+  if (_refresh.value()) {\n+    CodeCache::mark_directives_matches();\n+    DirectivesStack::clear();\n+    CodeCache::recompile_marked_directives_matches();\n+  } else {\n+    DirectivesStack::clear();\n+  }\n@@ -941,0 +1001,1 @@\n+\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":64,"deletions":3,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -691,1 +691,3 @@\n-class CompilerDirectivesRemoveDCmd : public DCmd {\n+class CompilerDirectivesRemoveDCmd : public DCmdWithParser {\n+protected:\n+  DCmdArgument<bool> _refresh; \/\/ true if update should be forced after directives changes.\n@@ -693,1 +695,2 @@\n-  CompilerDirectivesRemoveDCmd(outputStream* output, bool heap) : DCmd(output, heap) {}\n+  static int num_arguments() { return 1; }\n+  CompilerDirectivesRemoveDCmd(outputStream* output, bool heap);\n@@ -714,0 +717,1 @@\n+  DCmdArgument<bool> _refresh; \/\/ true if update should be forced after directives changes.\n@@ -715,1 +719,1 @@\n-  static int num_arguments() { return 1; }\n+  static int num_arguments() { return 2; }\n@@ -734,1 +738,27 @@\n-class CompilerDirectivesClearDCmd : public DCmd {\n+class CompilerDirectivesReplaceDCmd : public DCmdWithParser {\n+protected:\n+  DCmdArgument<char*> _filename;\n+  DCmdArgument<bool> _refresh; \/\/ true if update should be forced after directives changes.\n+public:\n+  static int num_arguments() { return 2; }\n+  CompilerDirectivesReplaceDCmd(outputStream* output, bool heap);\n+  static const char* name() {\n+    return \"Compiler.directives_replace\";\n+  }\n+  static const char* description() {\n+    return \"Clear directives stack, and load new compiler directives from file.\";\n+  }\n+  static const char* impact() {\n+    return \"Low\";\n+  }\n+  static const JavaPermission permission() {\n+    JavaPermission p = {\"java.lang.management.ManagementPermission\",\n+                        \"monitor\", NULL};\n+    return p;\n+  }\n+  virtual void execute(DCmdSource source, TRAPS);\n+};\n+\n+class CompilerDirectivesClearDCmd : public DCmdWithParser {\n+protected:\n+  DCmdArgument<bool> _refresh; \/\/ true if update should be forced after directives changes.\n@@ -736,1 +766,2 @@\n-  CompilerDirectivesClearDCmd(outputStream* output, bool heap) : DCmd(output, heap) {}\n+  static int num_arguments() { return 1; }\n+  CompilerDirectivesClearDCmd(outputStream* output, bool heap);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":36,"deletions":5,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include <string.h>\n@@ -53,0 +54,4 @@\n+#ifndef VERSION_STRING\n+#error VERSION_STRING must be defined\n+#endif\n+\n@@ -62,0 +67,1 @@\n+    fprintf(stdout, \"jspawnhelper version %s\\n\", VERSION_STRING);\n@@ -144,4 +150,0 @@\n-    if (argc != 2) {\n-        shutItDown();\n-    }\n-\n@@ -151,1 +153,12 @@\n-    r = sscanf (argv[1], \"%d:%d:%d\", &fdinr, &fdinw, &fdout);\n+\n+    if (argc != 3) {\n+        fprintf(stdout, \"Incorrect number of arguments: %d\\n\", argc);\n+        shutItDown();\n+    }\n+\n+    if (strcmp(argv[1], VERSION_STRING) != 0) {\n+        fprintf(stdout, \"Incorrect Java version: %s\\n\", argv[1]);\n+        shutItDown();\n+    }\n+\n+    r = sscanf (argv[2], \"%d:%d:%d\", &fdinr, &fdinw, &fdout);\n@@ -154,1 +167,2 @@\n-        if (!S_ISFIFO(buf.st_mode))\n+        if (!S_ISFIFO(buf.st_mode)) {\n+            fprintf(stdout, \"Incorrect input pipe\\n\");\n@@ -156,0 +170,1 @@\n+        }\n@@ -157,0 +172,1 @@\n+        fprintf(stdout, \"Incorrect FD array data: %s\\n\", argv[2]);\n","filename":"src\/java.base\/unix\/native\/jspawnhelper\/jspawnhelper.c","additions":22,"deletions":6,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -303,0 +303,4 @@\n+#ifndef VERSION_STRING\n+#error VERSION_STRING must be defined\n+#endif\n+\n@@ -491,1 +495,1 @@\n-    char *hlpargs[3];\n+    char *hlpargs[4];\n@@ -500,1 +504,2 @@\n-     * argv[1] contains the fd string as argument to jspawnhelper\n+     * argv[1] contains the version string as argument to jspawnhelper\n+     * argv[2] contains the fd string as argument to jspawnhelper\n@@ -503,2 +508,3 @@\n-    hlpargs[1] = buf1;\n-    hlpargs[2] = NULL;\n+    hlpargs[1] = VERSION_STRING;\n+    hlpargs[2] = buf1;\n+    hlpargs[3] = NULL;\n","filename":"src\/java.base\/unix\/native\/libjava\/ProcessImpl_md.c","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -783,3 +783,3 @@\n-                         * we do not store the same value as previous. in our\n-                         * documents it is often for consequent positions to have\n-                         * the same modelToView y and height.\n+                         * We do not store the same value as previous.\n+                         * In our documents, it is common for consecutive\n+                         * positions to have the same modelToView y and height.\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/text\/TextComponentPrintable.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -346,0 +346,3 @@\n+        if (Instant.MIN.equals(instant)) {\n+            return \"N\/A\";\n+        }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/util\/ValueFormatter.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.vectorapi.reshape;\n+\n+import compiler.vectorapi.reshape.tests.TestVectorCast;\n+import compiler.vectorapi.reshape.utils.TestCastMethods;\n+import compiler.vectorapi.reshape.utils.VectorReshapeHelper;\n+\n+\/*\n+ * @test\n+ * @bug 8321021 8321023 8321024\n+ * @key randomness\n+ * @modules jdk.incubator.vector\n+ * @modules java.base\/jdk.internal.misc\n+ * @summary Test that vector cast intrinsics work as intended on riscv (rvv).\n+ * @requires os.arch == \"riscv64\" & vm.cpu.features ~= \".*v,.*\"\n+ * @library \/test\/lib \/\n+ * @run main\/timeout=300 compiler.vectorapi.reshape.TestVectorCastRVV\n+ *\/\n+public class TestVectorCastRVV {\n+    public static void main(String[] args) {\n+        VectorReshapeHelper.runMainHelper(\n+                TestVectorCast.class,\n+                TestCastMethods.RVV_CAST_TESTS.stream(),\n+                \"-XX:+UseRVV\");\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/TestVectorCastRVV.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,470 @@\n+    public static final List<VectorSpeciesPair> RVV_CAST_TESTS = List.of(\n+        \/\/ ====== from B ======\n+        \/\/ from B 64\n+            \/\/ to X 64\n+            makePair(BSPEC64, SSPEC64),\n+            makePair(BSPEC64, SSPEC64, true),\n+            \/\/ to X 128\n+            makePair(BSPEC64, SSPEC128),\n+            makePair(BSPEC64, SSPEC128, true),\n+            makePair(BSPEC64, ISPEC128),\n+            makePair(BSPEC64, ISPEC128, true),\n+            makePair(BSPEC64, FSPEC128),\n+            \/\/ to X 256\n+            makePair(BSPEC64, SSPEC256),\n+            makePair(BSPEC64, SSPEC256, true),\n+            makePair(BSPEC64, ISPEC256),\n+            makePair(BSPEC64, ISPEC256, true),\n+            makePair(BSPEC64, LSPEC256),\n+            makePair(BSPEC64, LSPEC256, true),\n+            makePair(BSPEC64, FSPEC256),\n+            makePair(BSPEC64, DSPEC256),\n+            \/\/ to X 512\n+            makePair(BSPEC64, SSPEC512),\n+            makePair(BSPEC64, SSPEC512, true),\n+            makePair(BSPEC64, ISPEC512),\n+            makePair(BSPEC64, ISPEC512, true),\n+            makePair(BSPEC64, LSPEC512),\n+            makePair(BSPEC64, LSPEC512, true),\n+            makePair(BSPEC64, FSPEC512),\n+            makePair(BSPEC64, DSPEC512),\n+\n+        \/\/ from B 128\n+            \/\/ to X 64\n+            makePair(BSPEC128, SSPEC64),\n+            makePair(BSPEC128, SSPEC64, true),\n+            \/\/ to X 128\n+            makePair(BSPEC128, SSPEC128),\n+            makePair(BSPEC128, SSPEC128, true),\n+            makePair(BSPEC128, ISPEC128),\n+            makePair(BSPEC128, ISPEC128, true),\n+            makePair(BSPEC128, FSPEC128),\n+            \/\/ to X 256\n+            makePair(BSPEC128, SSPEC256),\n+            makePair(BSPEC128, SSPEC256, true),\n+            makePair(BSPEC128, ISPEC256),\n+            makePair(BSPEC128, ISPEC256, true),\n+            makePair(BSPEC128, LSPEC256),\n+            makePair(BSPEC128, LSPEC256, true),\n+            makePair(BSPEC128, FSPEC256),\n+            makePair(BSPEC128, DSPEC256),\n+            \/\/ to X 512\n+            makePair(BSPEC128, SSPEC512),\n+            makePair(BSPEC128, SSPEC512, true),\n+            makePair(BSPEC128, ISPEC512),\n+            makePair(BSPEC128, ISPEC512, true),\n+            makePair(BSPEC128, LSPEC512),\n+            makePair(BSPEC128, LSPEC512, true),\n+            makePair(BSPEC128, FSPEC512),\n+            makePair(BSPEC128, DSPEC512),\n+\n+        \/\/ from B 256\n+            \/\/ to X 64\n+            makePair(BSPEC256, SSPEC64),\n+            makePair(BSPEC256, SSPEC64, true),\n+            \/\/ to X 128\n+            makePair(BSPEC256, SSPEC128),\n+            makePair(BSPEC256, SSPEC128, true),\n+            makePair(BSPEC256, ISPEC128),\n+            makePair(BSPEC256, ISPEC128, true),\n+            makePair(BSPEC256, FSPEC128),\n+            \/\/ to X 256\n+            makePair(BSPEC256, SSPEC256),\n+            makePair(BSPEC256, SSPEC256, true),\n+            makePair(BSPEC256, ISPEC256),\n+            makePair(BSPEC256, ISPEC256, true),\n+            makePair(BSPEC256, LSPEC256),\n+            makePair(BSPEC256, LSPEC256, true),\n+            makePair(BSPEC256, FSPEC256),\n+            makePair(BSPEC256, DSPEC256),\n+            \/\/ to X 512\n+            makePair(BSPEC256, SSPEC512),\n+            makePair(BSPEC256, SSPEC512, true),\n+            makePair(BSPEC256, ISPEC512),\n+            makePair(BSPEC256, ISPEC512, true),\n+            makePair(BSPEC256, LSPEC512),\n+            makePair(BSPEC256, LSPEC512, true),\n+            makePair(BSPEC256, FSPEC512),\n+            makePair(BSPEC256, DSPEC512),\n+\n+\n+        \/\/ ====== from S ======\n+        \/\/ from S 64\n+            \/\/ to X 64\n+            makePair(SSPEC64, BSPEC64),\n+            \/\/ to X 128\n+            makePair(SSPEC64, BSPEC128),\n+            makePair(SSPEC64, ISPEC128),\n+            makePair(SSPEC64, ISPEC128, true),\n+            makePair(SSPEC64, FSPEC128),\n+            \/\/ to X 256\n+            makePair(SSPEC64, BSPEC256),\n+            makePair(SSPEC64, ISPEC256),\n+            makePair(SSPEC64, ISPEC256, true),\n+            makePair(SSPEC64, LSPEC256),\n+            makePair(SSPEC64, LSPEC256, true),\n+            makePair(SSPEC64, FSPEC256),\n+            makePair(SSPEC64, DSPEC256),\n+            \/\/ to X 512\n+            makePair(SSPEC64, BSPEC512),\n+            makePair(SSPEC64, ISPEC512),\n+            makePair(SSPEC64, ISPEC512, true),\n+            makePair(SSPEC64, LSPEC512),\n+            makePair(SSPEC64, LSPEC512, true),\n+            makePair(SSPEC64, FSPEC512),\n+            makePair(SSPEC64, DSPEC512),\n+\n+        \/\/ from S 128\n+            \/\/ to X 64\n+            makePair(SSPEC128, BSPEC64),\n+            \/\/ to X 128\n+            makePair(SSPEC128, BSPEC128),\n+            makePair(SSPEC128, ISPEC128),\n+            makePair(SSPEC128, ISPEC128, true),\n+            makePair(SSPEC128, FSPEC128),\n+            \/\/ to X 256\n+            makePair(SSPEC128, BSPEC256),\n+            makePair(SSPEC128, ISPEC256),\n+            makePair(SSPEC128, ISPEC256, true),\n+            makePair(SSPEC128, LSPEC256),\n+            makePair(SSPEC128, LSPEC256, true),\n+            makePair(SSPEC128, FSPEC256),\n+            makePair(SSPEC128, DSPEC256),\n+            \/\/ to X 512\n+            makePair(SSPEC128, BSPEC512),\n+            makePair(SSPEC128, ISPEC512),\n+            makePair(SSPEC128, ISPEC512, true),\n+            makePair(SSPEC128, LSPEC512),\n+            makePair(SSPEC128, LSPEC512, true),\n+            makePair(SSPEC128, FSPEC512),\n+            makePair(SSPEC128, DSPEC512),\n+\n+        \/\/ from S 256\n+            \/\/ to X 64\n+            makePair(SSPEC256, BSPEC64),\n+            \/\/ to X 128\n+            makePair(SSPEC256, BSPEC128),\n+            makePair(SSPEC256, ISPEC128),\n+            makePair(SSPEC256, ISPEC128, true),\n+            makePair(SSPEC256, FSPEC128),\n+            \/\/ to X 256\n+            makePair(SSPEC256, BSPEC256),\n+            makePair(SSPEC256, ISPEC256),\n+            makePair(SSPEC256, ISPEC256, true),\n+            makePair(SSPEC256, LSPEC256),\n+            makePair(SSPEC256, LSPEC256, true),\n+            makePair(SSPEC256, FSPEC256),\n+            makePair(SSPEC256, DSPEC256),\n+            \/\/ to X 512\n+            makePair(SSPEC256, BSPEC512),\n+            makePair(SSPEC256, ISPEC512),\n+            makePair(SSPEC256, ISPEC512, true),\n+            makePair(SSPEC256, LSPEC512),\n+            makePair(SSPEC256, LSPEC512, true),\n+            makePair(SSPEC256, FSPEC512),\n+            makePair(SSPEC256, DSPEC512),\n+\n+        \/\/ from S 512\n+            \/\/ to X 64\n+            makePair(SSPEC512, BSPEC64),\n+            \/\/ to X 128\n+            makePair(SSPEC512, BSPEC128),\n+            makePair(SSPEC512, ISPEC128),\n+            makePair(SSPEC512, ISPEC128, true),\n+            makePair(SSPEC512, FSPEC128),\n+            \/\/ to X 256\n+            makePair(SSPEC512, BSPEC256),\n+            makePair(SSPEC512, ISPEC256),\n+            makePair(SSPEC512, ISPEC256, true),\n+            makePair(SSPEC512, LSPEC256),\n+            makePair(SSPEC512, LSPEC256, true),\n+            makePair(SSPEC512, FSPEC256),\n+            makePair(SSPEC512, DSPEC256),\n+            \/\/ to X 512\n+            makePair(SSPEC512, BSPEC512),\n+            makePair(SSPEC512, ISPEC512),\n+            makePair(SSPEC512, ISPEC512, true),\n+            makePair(SSPEC512, LSPEC512),\n+            makePair(SSPEC512, LSPEC512, true),\n+            makePair(SSPEC512, FSPEC512),\n+            makePair(SSPEC512, DSPEC512),\n+\n+\n+        \/\/ ====== from I ======\n+        \/\/ from I 64\n+            \/\/ to X 64\n+            makePair(ISPEC64, FSPEC64),\n+            \/\/ to X 128\n+            makePair(ISPEC64, LSPEC128),\n+            makePair(ISPEC64, LSPEC128, true),\n+            makePair(ISPEC64, FSPEC128),\n+            makePair(ISPEC64, DSPEC128),\n+\n+        \/\/ from I 128\n+            \/\/ to X 64\n+            makePair(ISPEC128, BSPEC64),\n+            makePair(ISPEC128, SSPEC64),\n+            makePair(ISPEC128, FSPEC64),\n+            \/\/ to X 128\n+            makePair(ISPEC128, BSPEC128),\n+            makePair(ISPEC128, SSPEC128),\n+            makePair(ISPEC128, LSPEC128),\n+            makePair(ISPEC128, LSPEC128, true),\n+            makePair(ISPEC128, FSPEC128),\n+            makePair(ISPEC128, DSPEC128),\n+            \/\/ to X 256\n+            makePair(ISPEC128, BSPEC256),\n+            makePair(ISPEC128, SSPEC256),\n+            makePair(ISPEC128, LSPEC256),\n+            makePair(ISPEC128, LSPEC256, true),\n+            makePair(ISPEC128, FSPEC256),\n+            makePair(ISPEC128, DSPEC256),\n+\n+        \/\/ from I 256\n+            \/\/ to X 64\n+            makePair(ISPEC256, BSPEC64),\n+            makePair(ISPEC256, SSPEC64),\n+            makePair(ISPEC256, FSPEC64),\n+            \/\/ to X 128\n+            makePair(ISPEC256, BSPEC128),\n+            makePair(ISPEC256, SSPEC128),\n+            makePair(ISPEC256, LSPEC128),\n+            makePair(ISPEC256, LSPEC128, true),\n+            makePair(ISPEC256, FSPEC128),\n+            makePair(ISPEC256, DSPEC128),\n+            \/\/ to X 256\n+            makePair(ISPEC256, BSPEC256),\n+            makePair(ISPEC256, SSPEC256),\n+            makePair(ISPEC256, LSPEC256),\n+            makePair(ISPEC256, LSPEC256, true),\n+            makePair(ISPEC256, FSPEC256),\n+            makePair(ISPEC256, DSPEC256),\n+\n+        \/\/ from I 512\n+            \/\/ to X 64\n+            makePair(ISPEC512, BSPEC64),\n+            makePair(ISPEC512, SSPEC64),\n+            makePair(ISPEC512, FSPEC64),\n+            \/\/ to X 128\n+            makePair(ISPEC512, BSPEC128),\n+            makePair(ISPEC512, SSPEC128),\n+            makePair(ISPEC512, LSPEC128),\n+            makePair(ISPEC512, LSPEC128, true),\n+            makePair(ISPEC512, FSPEC128),\n+            makePair(ISPEC512, DSPEC128),\n+            \/\/ to X 256\n+            makePair(ISPEC512, BSPEC256),\n+            makePair(ISPEC512, SSPEC256),\n+            makePair(ISPEC512, LSPEC256),\n+            makePair(ISPEC512, LSPEC256, true),\n+            makePair(ISPEC512, FSPEC256),\n+            makePair(ISPEC512, DSPEC256),\n+\n+\n+        \/\/ ====== from L ======\n+        \/\/ from L 128\n+            \/\/ to X 64\n+            makePair(LSPEC128, ISPEC64),\n+            makePair(LSPEC128, FSPEC64),\n+            makePair(LSPEC128, DSPEC64),\n+            \/\/ to X 128\n+            makePair(LSPEC128, ISPEC128),\n+            makePair(LSPEC128, FSPEC128),\n+            makePair(LSPEC128, DSPEC128),\n+            \/\/ to X 256\n+            makePair(LSPEC128, ISPEC256),\n+            makePair(LSPEC128, FSPEC256),\n+            makePair(LSPEC128, DSPEC256),\n+            \/\/ to X 512\n+            makePair(LSPEC128, ISPEC512),\n+            makePair(LSPEC128, FSPEC512),\n+            makePair(LSPEC128, DSPEC512),\n+\n+        \/\/ from L 256\n+            \/\/ to X 64\n+            makePair(LSPEC256, BSPEC64),\n+            makePair(LSPEC256, SSPEC64),\n+            makePair(LSPEC256, ISPEC64),\n+            makePair(LSPEC256, FSPEC64),\n+            \/\/ to X 128\n+            makePair(LSPEC256, BSPEC128),\n+            makePair(LSPEC256, SSPEC128),\n+            makePair(LSPEC256, ISPEC128),\n+            makePair(LSPEC256, FSPEC128),\n+            makePair(LSPEC256, DSPEC128),\n+            \/\/ to X 256\n+            makePair(LSPEC256, BSPEC256),\n+            makePair(LSPEC256, SSPEC256),\n+            makePair(LSPEC256, ISPEC256),\n+            makePair(LSPEC256, FSPEC256),\n+            makePair(LSPEC256, DSPEC256),\n+            \/\/ to X 512\n+            makePair(LSPEC256, BSPEC512),\n+            makePair(LSPEC256, SSPEC512),\n+            makePair(LSPEC256, ISPEC512),\n+            makePair(LSPEC256, FSPEC512),\n+            makePair(LSPEC256, DSPEC512),\n+\n+        \/\/ from L 512\n+            \/\/ to X 64\n+            makePair(LSPEC512, BSPEC64),\n+            makePair(LSPEC512, SSPEC64),\n+            makePair(LSPEC512, ISPEC64),\n+            makePair(LSPEC512, FSPEC64),\n+            \/\/ to X 128\n+            makePair(LSPEC512, BSPEC128),\n+            makePair(LSPEC512, SSPEC128),\n+            makePair(LSPEC512, ISPEC128),\n+            makePair(LSPEC512, FSPEC128),\n+            makePair(LSPEC512, DSPEC128),\n+            \/\/ to X 256\n+            makePair(LSPEC512, BSPEC256),\n+            makePair(LSPEC512, SSPEC256),\n+            makePair(LSPEC512, ISPEC256),\n+            makePair(LSPEC512, FSPEC256),\n+            makePair(LSPEC512, DSPEC256),\n+            \/\/ to X 512\n+            makePair(LSPEC512, BSPEC512),\n+            makePair(LSPEC512, SSPEC512),\n+            makePair(LSPEC512, ISPEC512),\n+            makePair(LSPEC512, FSPEC512),\n+            makePair(LSPEC512, DSPEC512),\n+\n+\n+        \/\/ ====== from F ======\n+        \/\/ from F 64\n+            \/\/ to X 64\n+            makePair(FSPEC64, ISPEC64),\n+            \/\/ to X 128\n+            makePair(FSPEC64, ISPEC128),\n+            makePair(FSPEC64, LSPEC128),\n+            makePair(FSPEC64, DSPEC128),\n+\n+        \/\/ from F 128\n+            \/\/ to X 64\n+            makePair(FSPEC128, BSPEC64),\n+            makePair(FSPEC128, SSPEC64),\n+            makePair(FSPEC128, ISPEC64),\n+            \/\/ to X 128\n+            makePair(FSPEC128, BSPEC128),\n+            makePair(FSPEC128, SSPEC128),\n+            makePair(FSPEC128, ISPEC128),\n+            makePair(FSPEC128, LSPEC128),\n+            makePair(FSPEC128, DSPEC128),\n+            \/\/ to X 256\n+            makePair(FSPEC128, BSPEC256),\n+            makePair(FSPEC128, SSPEC256),\n+            makePair(FSPEC128, ISPEC256),\n+            makePair(FSPEC128, LSPEC256),\n+            makePair(FSPEC128, DSPEC256),\n+\n+        \/\/ from F 256\n+            \/\/ to X 64\n+            makePair(FSPEC256, BSPEC64),\n+            makePair(FSPEC256, SSPEC64),\n+            makePair(FSPEC256, ISPEC64),\n+            \/\/ to X 128\n+            makePair(FSPEC256, BSPEC128),\n+            makePair(FSPEC256, SSPEC128),\n+            makePair(FSPEC256, ISPEC128),\n+            makePair(FSPEC256, LSPEC128),\n+            makePair(FSPEC256, DSPEC128),\n+            \/\/ to X 256\n+            makePair(FSPEC256, BSPEC256),\n+            makePair(FSPEC256, SSPEC256),\n+            makePair(FSPEC256, ISPEC256),\n+            makePair(FSPEC256, LSPEC256),\n+            makePair(FSPEC256, DSPEC256),\n+\n+        \/\/ from F 512\n+            \/\/ to X 64\n+            makePair(FSPEC512, BSPEC64),\n+            makePair(FSPEC512, SSPEC64),\n+            makePair(FSPEC512, ISPEC64),\n+            \/\/ to X 128\n+            makePair(FSPEC512, BSPEC128),\n+            makePair(FSPEC512, SSPEC128),\n+            makePair(FSPEC512, ISPEC128),\n+            makePair(FSPEC512, LSPEC128),\n+            makePair(FSPEC512, DSPEC128),\n+            \/\/ to X 256\n+            makePair(FSPEC512, BSPEC256),\n+            makePair(FSPEC512, SSPEC256),\n+            makePair(FSPEC512, ISPEC256),\n+            makePair(FSPEC512, LSPEC256),\n+            makePair(FSPEC512, DSPEC256),\n+\n+\n+        \/\/ ====== from D ======\n+        \/\/ from D 128\n+            \/\/ to X 64\n+            makePair(DSPEC128, ISPEC64),\n+            makePair(DSPEC128, LSPEC64),\n+            makePair(DSPEC128, FSPEC64),\n+            \/\/ to X 128\n+            makePair(DSPEC128, ISPEC128),\n+            makePair(DSPEC128, LSPEC128),\n+            makePair(DSPEC128, FSPEC128),\n+            \/\/ to X 256\n+            makePair(DSPEC128, ISPEC256),\n+            makePair(DSPEC128, LSPEC256),\n+            makePair(DSPEC128, FSPEC256),\n+            \/\/ to X 512\n+            makePair(DSPEC128, ISPEC512),\n+            makePair(DSPEC128, LSPEC512),\n+            makePair(DSPEC128, FSPEC512),\n+\n+        \/\/ from D 256\n+            \/\/ to X 64\n+            makePair(DSPEC256, BSPEC64),\n+            makePair(DSPEC256, SSPEC64),\n+            makePair(DSPEC256, ISPEC64),\n+            makePair(DSPEC256, LSPEC64),\n+            makePair(DSPEC256, FSPEC64),\n+            \/\/ to X 128\n+            makePair(DSPEC256, BSPEC128),\n+            makePair(DSPEC256, SSPEC128),\n+            makePair(DSPEC256, ISPEC128),\n+            makePair(DSPEC256, LSPEC128),\n+            makePair(DSPEC256, FSPEC128),\n+            \/\/ to X 256\n+            makePair(DSPEC256, BSPEC256),\n+            makePair(DSPEC256, SSPEC256),\n+            makePair(DSPEC256, ISPEC256),\n+            makePair(DSPEC256, LSPEC256),\n+            makePair(DSPEC256, FSPEC256),\n+            \/\/ to X 512\n+            makePair(DSPEC256, BSPEC512),\n+            makePair(DSPEC256, SSPEC512),\n+            makePair(DSPEC256, ISPEC512),\n+            makePair(DSPEC256, LSPEC512),\n+            makePair(DSPEC256, FSPEC512),\n+\n+        \/\/ from D 512\n+            \/\/ to X 64\n+            makePair(DSPEC512, BSPEC64),\n+            makePair(DSPEC512, SSPEC64),\n+            makePair(DSPEC512, ISPEC64),\n+            makePair(DSPEC512, LSPEC64),\n+            makePair(DSPEC512, FSPEC64),\n+            \/\/ to X 128\n+            makePair(DSPEC512, BSPEC128),\n+            makePair(DSPEC512, SSPEC128),\n+            makePair(DSPEC512, ISPEC128),\n+            makePair(DSPEC512, LSPEC128),\n+            makePair(DSPEC512, FSPEC128),\n+            \/\/ to X 256\n+            makePair(DSPEC512, BSPEC256),\n+            makePair(DSPEC512, SSPEC256),\n+            makePair(DSPEC512, ISPEC256),\n+            makePair(DSPEC512, LSPEC256),\n+            makePair(DSPEC512, FSPEC256),\n+            \/\/ to X 512\n+            makePair(DSPEC512, BSPEC512),\n+            makePair(DSPEC512, SSPEC512),\n+            makePair(DSPEC512, ISPEC512),\n+            makePair(DSPEC512, LSPEC512),\n+            makePair(DSPEC512, FSPEC512)\n+\n+    );\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/utils\/TestCastMethods.java","additions":471,"deletions":1,"binary":false,"changes":472,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n- * @run main\/othervm -XX:InitialHeapSize=64M -Xmx128M -XX:+UnlockExperimentalVMOptions\n+ * @run main\/othervm -Xms64M -Xmx128M -XX:+UnlockExperimentalVMOptions\n@@ -36,0 +36,2 @@\n+    static volatile Object arr;\n+\n@@ -39,3 +41,1 @@\n-        byte[] arr = new byte[90 * 1024 * 1024];\n-        \/\/ Just prevent the compiler optimization.\n-        System.out.println(arr.length);\n+        arr = new byte[90 * 1024 * 1024];\n","filename":"test\/hotspot\/jtreg\/gc\/epsilon\/TestEnoughUnusedSpace.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,0 +95,8 @@\n+        if (count != 3) {\n+            Assert.fail(\"Expected three directives - found \" + count);\n+        }\n+\n+        \/\/ Test replacement with some directives from file\n+        output = executor.execute(\"Compiler.directives_replace \" + filename);\n+        output = executor.execute(\"Compiler.directives_print\");\n+        count = find(output, \"Directive:\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/compiler\/CompilerDirectivesDCMDTest.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,138 @@\n+\/*\n+ * Copyright (c) 2023, BELLSOFT. All rights reserved.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test DirectivesRefreshTest\n+ * @summary Test of forced recompile after compiler directives changes by diagnostic command\n+ * @requires vm.compiler1.enabled & vm.compiler2.enabled\n+ * @library \/test\/lib \/\n+ * @modules java.base\/jdk.internal.misc\n+ *\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ *\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   -XX:-BackgroundCompilation\n+ *                   serviceability.dcmd.compiler.DirectivesRefreshTest\n+ *\/\n+\n+package serviceability.dcmd.compiler;\n+\n+import jdk.test.whitebox.WhiteBox;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.dcmd.CommandExecutor;\n+import jdk.test.lib.dcmd.JMXExecutor;\n+\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.lang.reflect.Method;\n+import java.util.Random;\n+\n+import static jdk.test.lib.Asserts.assertEQ;\n+\n+import static compiler.whitebox.CompilerWhiteBoxTest.COMP_LEVEL_NONE;\n+import static compiler.whitebox.CompilerWhiteBoxTest.COMP_LEVEL_SIMPLE;\n+import static compiler.whitebox.CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION;\n+\n+public class DirectivesRefreshTest {\n+\n+    static Path cmdPath = Paths.get(System.getProperty(\"test.src\", \".\"), \"refresh_control.txt\");\n+    static WhiteBox wb = WhiteBox.getWhiteBox();\n+    static Random random = new Random();\n+\n+    static Method method;\n+    static CommandExecutor executor;\n+\n+    static int callable() {\n+        int result = 0;\n+        for (int i = 0; i < 100; i++) {\n+            result += random.nextInt(100);\n+        }\n+        return result;\n+    }\n+\n+    static void checkCompilationLevel(Method method, int level) {\n+        assertEQ(wb.getMethodCompilationLevel(method), level, \"Compilation level\");\n+    }\n+\n+    static void setup() throws Exception {\n+        method = DirectivesRefreshTest.class.getDeclaredMethod(\"callable\");\n+        executor = new JMXExecutor();\n+\n+        System.out.println(\"Compilation with C2\");\n+\n+        \/\/ Happens with fairly hot methods.\n+        wb.enqueueMethodForCompilation(method, COMP_LEVEL_FULL_OPTIMIZATION);\n+        checkCompilationLevel(method, COMP_LEVEL_FULL_OPTIMIZATION);\n+    }\n+\n+    static void testDirectivesAddRefresh() {\n+        System.out.println(\"Force forbid C2 via directive, method deoptimized\");\n+\n+        var output = executor.execute(\"Compiler.directives_add -r \" + cmdPath.toString());\n+        output.stderrShouldBeEmpty().shouldContain(\"1 compiler directives added\");\n+        \/\/ Current handling of 'Exclude' for '-r' clears flags.\n+        checkCompilationLevel(method, COMP_LEVEL_NONE);\n+\n+        System.out.println(\"C2 is excluded, re-compilation with C1\");\n+\n+        \/\/ Sanity check for the directive.\n+        wb.enqueueMethodForCompilation(method, COMP_LEVEL_FULL_OPTIMIZATION);\n+        checkCompilationLevel(method, COMP_LEVEL_NONE);\n+\n+        \/\/ Happens with fairly hot methods.\n+        wb.enqueueMethodForCompilation(method, COMP_LEVEL_SIMPLE);\n+        checkCompilationLevel(method, COMP_LEVEL_SIMPLE);\n+    }\n+\n+    static void testDirectivesClearRefresh() {\n+        System.out.println(\"Re-compilation with C2 due to removed restriction\");\n+\n+        var output = executor.execute(\"Compiler.directives_clear -r\");\n+        output.stderrShouldBeEmpty().stdoutShouldBeEmpty();\n+\n+        \/\/ No need to enqueue the method, \"immediate\" effect of '-r' without deoptimization.\n+        checkCompilationLevel(method, COMP_LEVEL_FULL_OPTIMIZATION);\n+    }\n+\n+    static void testDirectivesAddRegular() {\n+        System.out.println(\"No changes if the restriction is not forced\");\n+\n+        \/\/ According to original JEP 165, the directive will be handled\n+        \/\/ \"when a method is submitted for a compilation\".\n+        var output = executor.execute(\"Compiler.directives_add \" + cmdPath.toString());\n+        output.stderrShouldBeEmpty().shouldContain(\"1 compiler directives added\");\n+\n+        \/\/ In this program the method is not called, and here it is not enqueued.\n+        checkCompilationLevel(method, COMP_LEVEL_FULL_OPTIMIZATION);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        setup();\n+        testDirectivesAddRefresh();\n+        testDirectivesClearRefresh();\n+        testDirectivesAddRegular();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/compiler\/DirectivesRefreshTest.java","additions":138,"deletions":0,"binary":false,"changes":138,"status":"added"},{"patch":"@@ -0,0 +1,8 @@\n+[\n+  {\n+    match: \"serviceability.dcmd.compiler.DirectivesRefreshTest::callable\",\n+    c2: {\n+      Exclude: true\n+    }\n+  }\n+]\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/compiler\/refresh_control.txt","additions":8,"deletions":0,"binary":false,"changes":8,"status":"added"},{"patch":"@@ -44,0 +44,5 @@\n+    \/\/ Call GC after compiling as many methods. This would remove the stale methods.\n+    \/\/ This threshold should balance the GC overhead and the cost of keeping lots\n+    \/\/ of stale methods around.\n+    private static final long GC_METHOD_THRESHOLD = Long.getLong(\"gcMethodThreshold\", 100);\n+\n@@ -46,1 +51,2 @@\n-    private static final AtomicLong METHOD_COUNT = new AtomicLong(0L);\n+    private static final AtomicLong METHOD_COUNT = new AtomicLong();\n+    private static final AtomicLong METHODS_SINCE_LAST_GC = new AtomicLong();\n@@ -86,0 +92,15 @@\n+\n+        \/\/ See if we need to schedule a GC\n+        while (true) {\n+            long current = METHODS_SINCE_LAST_GC.get();\n+            long update = current + methodCount;\n+            if (update >= GC_METHOD_THRESHOLD) {\n+                update = 0;\n+            }\n+            if (METHODS_SINCE_LAST_GC.compareAndSet(current, update)) {\n+                if (update == 0) {\n+                    executor.execute(() -> System.gc());\n+                }\n+                break;\n+            }\n+        }\n","filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/src\/sun\/hotspot\/tools\/ctw\/Compiler.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -296,1 +296,0 @@\n-                \/\/ Stress* are c2-specific stress flags, so IgnoreUnrecognizedVMOptions is needed\n@@ -298,0 +297,3 @@\n+                \/\/ Do not pay extra zapping cost for explicit GC invocations\n+                \"-XX:-ZapUnusedHeapArea\",\n+                \/\/ Stress* are c2-specific stress flags, so IgnoreUnrecognizedVMOptions is needed\n","filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/src\/sun\/hotspot\/tools\/ctw\/CtwRunner.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-            pipe = SocketIOPipe.createClientIOPipe(log, \"localhost\", portNumber, 0);\n+            pipe = SocketIOPipe.createClientIOPipe(log, portNumber, 0);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/AttachingConnector\/attach\/attach004\/attach004t.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        pipe = SocketIOPipe.createClientIOPipe(log, \"localhost\", argParser.getPort(), 0);\n+        pipe = SocketIOPipe.createClientIOPipe(log, argParser.getPort(), 0);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/aod\/DummyTargetApplication.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -344,1 +344,1 @@\n-                pipe = SocketIOPipe.createClientIOPipe(log, \"localhost\", argParser.getPort(), 0);\n+                pipe = SocketIOPipe.createClientIOPipe(log, argParser.getPort(), 0);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/aod\/TargetApplicationWaitingAgents.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-     * \"<i>localhost<\/i>\" string by default.\n+     * empty string (represents an address of the loopback interface) by default.\n@@ -116,1 +116,1 @@\n-        return options.getProperty(\"test.host\", \"localhost\");\n+        return options.getProperty(\"test.host\", \"\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeArgumentHandler.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,1 @@\n-                pipeServerSocket.bind(null);\n+                pipeServerSocket.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeBinder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.net.InetAddress;\n@@ -38,1 +39,1 @@\n- * and 'createClientIOPipe(Log log, String host, int port, long timeout)' for client SocketIOPipe.\n+ * and 'createClientIOPipe(Log log, int port, long timeout)' for client SocketIOPipe.\n@@ -43,2 +44,2 @@\n- * For example, if client process should send string 'OK' to the server process which is run\n- * at the host 'SERVER_HOST' following code can be written:\n+ * For example, if client process should send string 'OK' to the server process,\n+ * the following code can be written:\n@@ -56,2 +57,2 @@\n- *  \/\/ initialize SocketIOPipe with given values of server host name and port\n- *  SocketIOPipe pipe = SocketIOPipe.createClientIOPipe(log, 'SERVER_HOST', port, timeoutValue);\n+ *  \/\/ initialize SocketIOPipe with given port\n+ *  SocketIOPipe pipe = SocketIOPipe.createClientIOPipe(log, port, timeoutValue);\n@@ -126,1 +127,1 @@\n-            ss.bind(new InetSocketAddress(port));\n+            ss.bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), port));\n@@ -146,2 +147,3 @@\n-    public static SocketIOPipe createClientIOPipe(Log log, String host, int port, long timeout) {\n-        return new SocketIOPipe(log, DEFAULT_PIPE_LOG_PREFIX, host, port, timeout, false);\n+    public static SocketIOPipe createClientIOPipe(Log log, int port, long timeout) {\n+        \/\/ use null for host to connect to loopback address\n+        return new SocketIOPipe(log, DEFAULT_PIPE_LOG_PREFIX, null, port, timeout, false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/SocketIOPipe.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -799,1 +799,0 @@\n-java\/awt\/FileDialog\/RegexpFilterTest\/RegexpFilterTest.html 7187728 macosx-all,linux-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import java.awt.Frame;\n+import java.awt.FileDialog;\n+\n+\/*\n+ * Motif file dialogs let the user specify a filter that controls the files that\n+ * are displayed in the dialog. This filter is generally specified as a regular\n+ * expression. The test verifies that Motif-like filtering works fine using\n+ * XAWT-toolkit also.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4934185\n+ * @summary JCK1.5-runtime-interactive: XToolkit FileDialog does not work as expected\n+ * @requires (os.family == \"linux\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/othervm\/manual -Dsun.awt.disableGtkFileDialogs=true RegexpFilterTest\n+*\/\n+public class RegexpFilterTest {\n+\n+    private static final String INSTRUCTIONS =\n+            \"\"\"\n+            0. The test is only for X platforms\n+            1. Press the 'Show' button and a file dialog will appear,\n+            2. Input any string into the 'Filter' text field,\n+                This filter is generally specified as a regular expression\n+                (e.g., * matches all files, while *.c matches all files that end in .c)\n+            3. Press 'Enter' to refresh the displayed files with the filter,\n+            4. If the list of the files contains all actual files matched the filter,\n+                then the test passed; otherwise it failed.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame\n+            .builder()\n+            .title(\"RegexpFilterTest Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .splitUIRight(() -> {\n+                JButton show = new JButton(\"show\");\n+                show.addActionListener(e ->\n+                        new FileDialog((Frame) null).setVisible(true));\n+                return show;\n+            })\n+            .rows(15)\n+            .columns(40)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/FileDialog\/RegexpFilterTest.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -1,43 +0,0 @@\n-<!--\n- Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--\n-  @test\n-  @bug 4934185\n-  @summary JCK1.5-runtime-interactive: XToolkit FileDialog does not work as expected\n-  @author Dmitry.Cherepanov area=awt.filedialog\n-  @run applet\/manual=yesno RegexpFilterTest.html\n-  -->\n-<head>\n-<title> RegexpFilterTest <\/title>\n-<\/head>\n-<body>\n-\n-<h1><br>Bug ID: <\/h1>\n-\n-<p> See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"RegexpFilterTest.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/FileDialog\/RegexpFilterTest\/RegexpFilterTest.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -1,226 +0,0 @@\n-\/*\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n-  test\n-  @bug 4934185\n-  @summary JCK1.5-runtime-interactive: XToolkit FileDialog does not work as expected\n-  @author Dmitry.Cherepanov area=awt.filedialog\n-  @run applet\/manual=yesno RegexpFilterTest.html\n-*\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n-import java.awt.event.*;\n-\n-\/*\n- * Motif file dialogs let the user specify a filter that controls the files that\n- * are displayed in the dialog. This filter is generally specified as a regular\n- * expression. The test verifies that Motif-like filtering works fine using\n- * XAWT-toolkit also.\n- *\/\n-public class RegexpFilterTest extends Applet\n-{\n-\n-    public static void main(String[] args) {\n-        Applet a = new RegexpFilterTest();\n-        a.init();\n-        a.start();\n-    }\n-\n-    public void init()\n-    {\n-        this.setLayout (new BorderLayout ());\n-\n-        String[] instructions =\n-        {\n-            \" 0. The test is only for X platforms\",\n-            \" 1. Press the 'Show' button and a file dialog will appear, \",\n-            \" 2. Input any string into the 'Filter' text field, \",\n-            \"     This filter is generally specified as a regular expression \",\n-            \"     (e.g., * matches all files, while *.c matches all files that end in .c) \",\n-            \" 3. Press 'Enter' to refresh the displayed files with the filter, \",\n-            \" 4. If the list of the files contains all actual files matched the filter, \",\n-            \"     then the test passed; otherwise it failed. \"\n-        };\n-        Sysout.createDialogWithInstructions( instructions );\n-\n-    }\/\/End  init()\n-\n-    public void start ()\n-    {\n-        setLayout(new FlowLayout());\n-        Button button = new Button(\"Show\");\n-        add(button);\n-\n-        button.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent e) {\n-                FileDialog fd = new FileDialog(new Frame());\n-                fd.setVisible(true);\n-            }\n-        });\n-\n-        setSize (200,200);\n-        setVisible(true);\n-        validate();\n-    }\n-\n-}\n-\n-\n-\/****************************************************\n- Standard Test Machinery\n- DO NOT modify anything below -- it's a standard\n-  chunk of code whose purpose is to make user\n-  interaction uniform, and thereby make it simpler\n-  to read and understand someone else's test.\n- ****************************************************\/\n-\n-\/**\n- This is part of the standard test machinery.\n- It creates a dialog (with the instructions), and is the interface\n-  for sending text messages to the user.\n- To print the instructions, send an array of strings to Sysout.createDialog\n-  WithInstructions method.  Put one line of instructions per array entry.\n- To display a message for the tester to see, simply call Sysout.println\n-  with the string to be displayed.\n- This mimics System.out.println but works within the test harness as well\n-  as standalone.\n- *\/\n-\n-class Sysout\n-{\n-    private static TestDialog dialog;\n-\n-    public static void createDialogWithInstructions( String[] instructions )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        dialog.printInstructions( instructions );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-    public static void createDialog( )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-        dialog.printInstructions( defInstr );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-\n-    public static void printInstructions( String[] instructions )\n-    {\n-        dialog.printInstructions( instructions );\n-    }\n-\n-\n-    public static void println( String messageIn )\n-    {\n-        dialog.displayMessage( messageIn );\n-    }\n-\n-}\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog\n-{\n-\n-    TextArea instructionsText;\n-    TextArea messageText;\n-    int maxStringLength = 100;\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public TestDialog( Frame frame, String name )\n-    {\n-        super( frame, name );\n-        int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-        instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-        add( \"North\", instructionsText );\n-\n-        messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-        add(\"Center\", messageText);\n-\n-        pack();\n-\n-        setVisible(true);\n-    }\/\/ TestDialog()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void printInstructions( String[] instructions )\n-    {\n-        \/\/Clear out any current instructions\n-        instructionsText.setText( \"\" );\n-\n-        \/\/Go down array of instruction strings\n-\n-        String printStr, remainingStr;\n-        for( int i=0; i < instructions.length; i++ )\n-        {\n-            \/\/chop up each into pieces maxSringLength long\n-            remainingStr = instructions[ i ];\n-            while( remainingStr.length() > 0 )\n-            {\n-                \/\/if longer than max then chop off first max chars to print\n-                if( remainingStr.length() >= maxStringLength )\n-                {\n-                    \/\/Try to chop on a word boundary\n-                    int posOfSpace = remainingStr.\n-                        lastIndexOf( ' ', maxStringLength - 1 );\n-\n-                    if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-                    printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-                    remainingStr = remainingStr.substring( posOfSpace + 1 );\n-                }\n-                \/\/else just print\n-                else\n-                {\n-                    printStr = remainingStr;\n-                    remainingStr = \"\";\n-                }\n-\n-                instructionsText.append( printStr + \"\\n\" );\n-\n-            }\/\/ while\n-\n-        }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void displayMessage( String messageIn )\n-    {\n-        messageText.append( messageIn + \"\\n\" );\n-        System.out.println(messageIn);\n-    }\n-\n-}\/\/ TestDialog  class\n","filename":"test\/jdk\/java\/awt\/FileDialog\/RegexpFilterTest\/RegexpFilterTest.java","additions":0,"deletions":226,"binary":false,"changes":226,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-import java.awt.EventQueue;\n@@ -47,1 +46,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -53,0 +52,1 @@\n+                .testUI(() -> new Frame(\"DefaultSize\"))\n@@ -54,13 +54,2 @@\n-                .build();\n-\n-        EventQueue.invokeAndWait(() -> {\n-            Frame frame = new Frame(\"DefaultSize\");\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame\n-                    .positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/Frame\/DefaultSizeTest.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -86,13 +86,3 @@\n-                .build();\n-\n-        EventQueue.invokeAndWait(() -> {\n-            FrameRepack frame = new FrameRepack();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(FrameRepack::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameRepackTest.java","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.awt.EventQueue;\n@@ -56,1 +55,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -62,13 +61,3 @@\n-                .build();\n-\n-        EventQueue.invokeAndWait(() -> {\n-            FrameResize_1 frame = new FrameResize_1();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(FrameResize_1::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameResizeTest\/FrameResizeTest_1.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.awt.EventQueue;\n@@ -60,1 +59,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -66,13 +65,3 @@\n-                .build();\n-\n-        EventQueue.invokeAndWait(() -> {\n-            FrameResize_2 frame = new FrameResize_2();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(FrameResize_2::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameResizeTest\/FrameResizeTest_2.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.EventQueue;\n+import java.awt.Robot;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextArea;\n+\n+\/*\n+ * @test\n+ * @bug 4103095\n+ * @summary Test for getBounds() after a Frame resize.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual GetBoundsResizeTest\n+*\/\n+\n+public class GetBoundsResizeTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            0. There is a test window with a \"Press\" button,\n+                Its original bounds should be printed in the text area below.\n+            1. Resize the test window using the upper left corner.\n+            2. Press the button to print the result of getBounds() to the text area.\n+            3. Previously, a window could report an incorrect position on the\n+                screen after resizing the window in this way.\n+                If getBounds() prints the appropriate values for the window,\n+                click Pass, otherwise click Fail.\n+            \"\"\";\n+\n+    private static JTextArea textArea;\n+    private static Frame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+\n+        PassFailJFrame passFailJFrame = PassFailJFrame\n+                .builder()\n+                .title(\"GetBoundsResizeTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .splitUIBottom(() -> {\n+                    textArea = new JTextArea(\"\", 8, 55);\n+                    textArea.setEditable(false);\n+                    return new JScrollPane(textArea);\n+                })\n+                .testUI(GetBoundsResizeTest::getFrame)\n+                .rows((int) (INSTRUCTIONS.lines().count() + 2))\n+                .columns(40)\n+                .build();\n+\n+        robot.waitForIdle();\n+        robot.delay(500);\n+\n+        EventQueue.invokeAndWait(() ->\n+                logFrameBounds(\"Original Frame.getBounds() = %s\\n\"));\n+\n+        passFailJFrame.awaitAndCheck();\n+    }\n+\n+    private static Frame getFrame() {\n+        frame = new Frame(\"GetBoundsResizeTest\");\n+\n+        Button button = new Button(\"Press\");\n+        button.addActionListener((e) ->\n+                logFrameBounds(\"Current Frame.getBounds() = %s\\n\"));\n+\n+        frame.add(button);\n+        frame.setSize(200, 100);\n+\n+        return frame;\n+    }\n+\n+    private static void logFrameBounds(String format) {\n+        textArea.append(format.formatted(frame.getBounds()));\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/GetBoundsResizeTest.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -1,168 +0,0 @@\n-\/*\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/* @test\n-   @bug 4103095\n-   @summary Test for getBounds() after a Frame resize.\n-   @author andrei.dmitriev : area=awt.toplevel\n-   @run main\/manual GetBoundsResizeTest\n-*\/\n-\n-import java.applet.Applet;\n-import java.lang.*;\n-import java.awt.*;\n-import java.awt.event.*;\n-\n-class Globals {\n-  static boolean testPassed=false;\n-  static Thread mainThread=null;\n-}\n-\n-public class GetBoundsResizeTest extends Applet {\n-\n-  public static void main(String args[]) throws Exception {\n-    GetBoundsResizeTest app = new GetBoundsResizeTest();\n-    app.start();\n-    Globals.mainThread = Thread.currentThread();\n-    try {\n-      Thread.sleep(300000);\n-    } catch (InterruptedException e) {\n-      if (!Globals.testPassed)\n-        throw new Exception(\"GetBoundsResizeTest failed.\");\n-    }\n-  }\n-\n-  public void start()\n-  {\n-    String[] message = {\n-      \"Resize the window using the upper left corner.\",\n-      \"Press the button to print the result of getBounds() to the terminal.\",\n-      \"If getBounds() prints the correct values for the window\",\n-      \"then click Pass, else click Fail.\"\n-    };\n-    new TestDialog(new Frame(), \"GetBoundsResizeTest\", message).start();\n-    new GetBoundsResizeTester(\"GetBoundsResizeTester\").start();\n-  }\n-}\n-\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\/\/  Test Dialog\n-\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-class TestDialog extends Dialog\n-    implements ActionListener {\n-\n-  static TextArea output;\n-  Button passButton;\n-  Button failButton;\n-  String name;\n-\n-  public TestDialog(Frame frame, String name, String[] message)\n-  {\n-    super(frame, name + \" Pass\/Fail Dialog\");\n-    this.name = name;\n-    int maxStringLength = 0;\n-    for (int i=0; i<message.length; i++) {\n-      maxStringLength = Math.max(maxStringLength, message[i].length());\n-    }\n-    output = new TextArea(10, maxStringLength);\n-    add(\"North\", output);\n-    for (int i=0; i<message.length; i++){\n-        output.append(message[i] + \"\\n\");\n-    }\n-    Panel buttonPanel = new Panel();\n-    passButton = new Button(\"Pass\");\n-    failButton = new Button(\"Fail\");\n-    passButton.addActionListener(this);\n-    failButton.addActionListener(this);\n-    buttonPanel.add(passButton);\n-    buttonPanel.add(failButton);\n-    add(\"South\", buttonPanel);\n-    pack();\n-  }\n-\n-  public void start()\n-  {\n-    show();\n-  }\n-\n-  public void actionPerformed(ActionEvent event)\n-  {\n-    if ( event.getSource() == passButton ) {\n-      Globals.testPassed = true;\n-      System.err.println(name + \" Passed.\");\n-    }\n-    else if ( event.getSource() == failButton ) {\n-      Globals.testPassed = false;\n-      System.err.println(name + \" Failed.\");\n-    }\n-    this.dispose();\n-    if (Globals.mainThread != null)\n-      Globals.mainThread.interrupt();\n-  }\n-}\n-\n-\n-  \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-  \/\/  Test Class\n-  \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-class GetBoundsResizeTester extends Frame {\n-    Button b = new Button(\"Press\");\n-\n-  GetBoundsResizeTester(String name)\n-  {\n-    super(name);\n-    final Frame f = this;\n-    Panel p = new Panel();\n-    f.add(p);\n-    p.setLayout(new BorderLayout());\n-    b.addActionListener(new ActionListener() {\n-      public void actionPerformed(ActionEvent be){\n-        Point cp = b.getLocationOnScreen();\n-        TestDialog.output.append(\"Current Frame.getBounds() = \" + f.getBounds()+\"\\n\");\n-      }\n-    });\n-    p.add(\"Center\", b);\n-    f.pack();\n-  }\n-\n-  public void start ()\n-  {\n-      setVisible(true);\n-      Robot robot;\n-      try {\n-          robot = new Robot();\n-          robot.waitForIdle();\n-      }catch(Exception ignorex) {\n-      }\n-      Point cp = b.getLocationOnScreen();\n-      TestDialog.output.append(\"Original Frame.getBounds() = \" + this.getBounds()+\"\\n\");\n-  }\n-\n-  public static void main(String[] args)\n-  {\n-    new GetBoundsResizeTester(\"GetBoundsResizeTester\").start();\n-  }\n-\n-}\n","filename":"test\/jdk\/java\/awt\/Frame\/GetBoundsResizeTest\/GetBoundsResizeTest.java","additions":0,"deletions":168,"binary":false,"changes":168,"status":"deleted"},{"patch":"@@ -1,43 +0,0 @@\n-<!--\n- Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--\n-  @test\n-  @bug 6525850\n-  @summary Iconified frame gets shown after pack()\n-  @author anthony.petrov@...: area=awt.toplevel\n-  @run applet\/manual=yesno ShownOnPack.html\n-  -->\n-<head>\n-<title> ShownOnPack <\/title>\n-<\/head>\n-<body>\n-\n-<h1>ShownOnPack<br>Bug ID: 6525850<\/h1>\n-\n-<p> See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"ShownOnPack.class\" WIDTH=200 HEIGHT=200><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/Frame\/ShownOnPack\/ShownOnPack.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,3 @@\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+\n@@ -25,5 +28,6 @@\n-  test\n-  @bug 6525850\n-  @summary Iconified frame gets shown after pack()\n-  @author anthony.petrov@...: area=awt.toplevel\n-  @run applet\/manual=yesno ShownOnPack.html\n+ * @test\n+ * @bug 6525850\n+ * @summary Iconified frame gets shown after pack()\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ShownOnPack\n@@ -32,100 +36,31 @@\n-\n-\/**\n- * ShownOnPack.java\n- *\n- * summary:\n- *\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n-\n-public class ShownOnPack extends Applet\n-{\n-    \/\/Declare things used in the test, like buttons and labels here\n-    Frame f;\n-\n-    public void init()\n-    {\n-        \/\/Create instructions for the user here, as well as set up\n-        \/\/ the environment -- set the layout manager, add buttons,\n-        \/\/ etc.\n-        this.setLayout (new BorderLayout ());\n-\n-        String[] instructions =\n-        {\n-            \"This test creates an invisible and iconified frame that should not become visible.\",\n-            \"If you observe the window titled 'Should NOT BE SHOWN' in the taskbar, press FAIL,\",\n-            \"else press PASS\"\n-        };\n-        Sysout.createDialogWithInstructions( instructions );\n-\n-    }\/\/End  init()\n-\n-    public void start ()\n-    {\n-        \/\/Get things going.  Request focus, set size, et cetera\n-        setSize (200,200);\n-        setVisible(true);\n-        validate();\n-\n-        \/\/What would normally go into main() will probably go here.\n-        \/\/Use System.out.println for diagnostic messages that you want\n-        \/\/ to read after the test is done.\n-        \/\/Use Sysout.println for messages you want the tester to read.\n-        f = new Frame(\"Should NOT BE SHOWN\");\n-        f.setExtendedState(Frame.ICONIFIED);\n-        f.pack();\n-    }\/\/ start()\n-\n-    \/\/The rest of this class is the actions which perform the test...\n-\n-    \/\/Use Sysout.println to communicate with the user NOT System.out!!\n-    \/\/Sysout.println (\"Something Happened!\");\n-\n-}\/\/ class ShownOnPack\n-\n-\/* Place other classes related to the test after this line *\/\n-\n-\n-\n-\n-\n-\/****************************************************\n- Standard Test Machinery\n- DO NOT modify anything below -- it's a standard\n-  chunk of code whose purpose is to make user\n-  interaction uniform, and thereby make it simpler\n-  to read and understand someone else's test.\n- ****************************************************\/\n-\n-\/**\n- This is part of the standard test machinery.\n- It creates a dialog (with the instructions), and is the interface\n-  for sending text messages to the user.\n- To print the instructions, send an array of strings to Sysout.createDialog\n-  WithInstructions method.  Put one line of instructions per array entry.\n- To display a message for the tester to see, simply call Sysout.println\n-  with the string to be displayed.\n- This mimics System.out.println but works within the test harness as well\n-  as standalone.\n- *\/\n-\n-class Sysout\n-{\n-    private static TestDialog dialog;\n-\n-    public static void createDialogWithInstructions( String[] instructions )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        dialog.printInstructions( instructions );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-    public static void createDialog( )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-        dialog.printInstructions( defInstr );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n+public class ShownOnPack {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This test creates an invisible and iconified frame that should not become visible.\n+\n+            If you observe the window titled 'Should NOT BE SHOWN' in the taskbar,\n+            press FAIL, otherwise press PASS\n+            \"\"\";\n+\n+    static Frame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame shownOnPackInstructions = PassFailJFrame\n+                .builder()\n+                .title(\"ShownOnPack Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows(5)\n+                .columns(50)\n+                .build();\n+\n+        EventQueue.invokeAndWait(() -> {\n+            frame = new Frame(\"Should NOT BE SHOWN\");\n+            frame.setExtendedState(Frame.ICONIFIED);\n+            frame.pack();\n+        });\n+\n+        try {\n+            shownOnPackInstructions.awaitAndCheck();\n+        } finally {\n+            EventQueue.invokeAndWait(() -> frame.dispose());\n+        }\n@@ -133,96 +68,1 @@\n-\n-\n-    public static void printInstructions( String[] instructions )\n-    {\n-        dialog.printInstructions( instructions );\n-    }\n-\n-\n-    public static void println( String messageIn )\n-    {\n-        dialog.displayMessage( messageIn );\n-    }\n-\n-}\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog\n-{\n-\n-    TextArea instructionsText;\n-    TextArea messageText;\n-    int maxStringLength = 80;\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public TestDialog( Frame frame, String name )\n-    {\n-        super( frame, name );\n-        int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-        instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-        add( \"North\", instructionsText );\n-\n-        messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-        add(\"Center\", messageText);\n-\n-        pack();\n-\n-        setVisible(true);\n-    }\/\/ TestDialog()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void printInstructions( String[] instructions )\n-    {\n-        \/\/Clear out any current instructions\n-        instructionsText.setText( \"\" );\n-\n-        \/\/Go down array of instruction strings\n-\n-        String printStr, remainingStr;\n-        for( int i=0; i < instructions.length; i++ )\n-        {\n-            \/\/chop up each into pieces maxSringLength long\n-            remainingStr = instructions[ i ];\n-            while( remainingStr.length() > 0 )\n-            {\n-                \/\/if longer than max then chop off first max chars to print\n-                if( remainingStr.length() >= maxStringLength )\n-                {\n-                    \/\/Try to chop on a word boundary\n-                    int posOfSpace = remainingStr.\n-                        lastIndexOf( ' ', maxStringLength - 1 );\n-\n-                    if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-                    printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-                    remainingStr = remainingStr.substring( posOfSpace + 1 );\n-                }\n-                \/\/else just print\n-                else\n-                {\n-                    printStr = remainingStr;\n-                    remainingStr = \"\";\n-                }\n-\n-                instructionsText.append( printStr + \"\\n\" );\n-\n-            }\/\/ while\n-\n-        }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void displayMessage( String messageIn )\n-    {\n-        messageText.append( messageIn + \"\\n\" );\n-        System.out.println(messageIn);\n-    }\n-\n-}\/\/ TestDialog  class\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/ShownOnPack\/ShownOnPack.java","additions":42,"deletions":202,"binary":false,"changes":244,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.awt.EventQueue;\n@@ -52,1 +51,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -58,8 +57,4 @@\n-                .build();\n-\n-        EventQueue.invokeAndWait(() -> {\n-            Frame frame = new Frame(\"DefaultSize\");\n-\n-            Container panel = new MyContainer();\n-            MyComponent c = new MyComponent();\n-            panel.add(c);\n+                .testUI(LightweightCliprect::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -67,2 +62,2 @@\n-            frame.add(panel);\n-            frame.setSize(400, 300);\n+    private static Frame createUI() {\n+        Frame frame = new Frame(\"DefaultSize\");\n@@ -70,3 +65,3 @@\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame\n-                    .positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n+        Container panel = new MyContainer();\n+        MyComponent c = new MyComponent();\n+        panel.add(c);\n@@ -74,2 +69,2 @@\n-            frame.setVisible(true);\n-        });\n+        frame.add(panel);\n+        frame.setSize(400, 300);\n@@ -77,1 +72,1 @@\n-        passFailJFrame.awaitAndCheck();\n+        return frame;\n","filename":"test\/jdk\/java\/awt\/LightweightComponent\/LightweightCliprect.java","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -0,0 +1,96 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+  @test\n+  @bug 5010944 6248072\n+  @summary List's rows overlap one another\n+  @library \/java\/awt\/regtesthelpers\n+  @run main\/manual SetFontTest\n+*\/\n+\n+import java.awt.Button;\n+import java.awt.FlowLayout;\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.List;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class SetFontTest {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+        1) Click on the 'Enlarge font' button to enlarge font of the list.\n+        2) If you see that the rows of the list overlap one another\n+        then the test failed. Otherwise, go to step 3.\n+        3) Click on the 'Change mode' button to set multiple-selection mode.\n+        4) If you see that the rows of the list overlap one another\n+        then the test failed. Otherwise, the test passed.\n+    \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                      .title(\"AWT List Font Test\")\n+                       .instructions(INSTRUCTIONS)\n+                       .rows(10)\n+                       .columns(40)\n+                       .testUI(SetFontTest::createFontTest)\n+                       .build()\n+                       .awaitAndCheck();\n+    }\n+\n+    static Frame createFontTest() {\n+\n+        Frame frame = new Frame(\"List Font Test\");\n+        List list = new List(8, false);\n+        Button button1 = new Button(\"Enlarge font\");\n+        Button button2 = new Button(\"Change mode\");\n+\n+        list.add(\"111\");\n+        list.add(\"222\");\n+        list.add(\"333\");\n+        list.add(\"444\");\n+\n+        button1.addActionListener(\n+            new ActionListener(){\n+                public void actionPerformed(ActionEvent ae) {\n+                    list.setFont(new Font(\"SansSerif\", Font.PLAIN, 30));\n+                    list.repaint();\n+                }\n+            });\n+\n+        button2.addActionListener(\n+            new ActionListener(){\n+                public void actionPerformed(ActionEvent ae){\n+                    list.setMultipleMode(true);\n+                }\n+            });\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.add(list);\n+        frame.add(button1);\n+        frame.add(button2);\n+        frame.setSize(200, 250);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/SetFontTest.java","additions":96,"deletions":0,"binary":false,"changes":96,"status":"added"},{"patch":"@@ -1,43 +0,0 @@\n-<!--\n- Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--  \n-  @test\n-  @bug 5010944 6248072\n-  @summary List's rows overlap one another\n-  @author Dmitry Cherepanov area=awt-list\n-  @run applet\/manual=yesno SetFontTest.html\n-  -->\n-<head>\n-<title> SetFontTest <\/title>\n-<\/head>\n-<body>\n-\n-<h1>SetFontTest<br>Bug ID: 5010944<\/h1>\n-\n-<p> See the dialog box (usually in upper left corner) for instructions<\/p>\n-\n-<APPLET CODE=\"SetFontTest.class\" WIDTH=200 HEIGHT=220><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/List\/SetFontTest\/SetFontTest.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -1,234 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2007, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n-  test\n-  @bug 5010944 6248072\n-  @summary List's rows overlap one another\n-  @author Dmitry Cherepanov area=awt-list\n-  @run applet\/manual=yesno SetFontTest.html\n-*\/\n-\n-import java.applet.Applet;\n-import java.awt.*;\n-import java.awt.event.*;\n-\n-public class SetFontTest extends Applet\n-{\n-    List list = new List(8, false);\n-    Button button1 = new Button(\"Enlarge font\");\n-    Button button2 = new Button(\"Change mode\");\n-\n-    public void init()\n-    {\n-        list.add(\"111\");\n-        list.add(\"222\");\n-        list.add(\"333\");\n-        list.add(\"444\");\n-        this.add(list);\n-\n-        this.add(button1);\n-        this.add(button2);\n-\n-        button1.addActionListener(\n-            new ActionListener(){\n-                public void actionPerformed(ActionEvent ae){\n-                    list.setFont( new Font( \"SansSerif\", Font.PLAIN, 30 ) );\n-                    list.repaint();\n-                }\n-            });\n-\n-        button2.addActionListener(\n-            new ActionListener(){\n-                public void actionPerformed(ActionEvent ae){\n-                    list.setMultipleMode(true);\n-                }\n-            });\n-\n-        this.setLayout (new FlowLayout ());\n-\n-        String[] instructions =\n-        {\n-            \"1) Click on the 'Enlarge font' button to enlarge font of the list.\",\n-            \"2) If you see that the rows of the list overlap one another \"+\n-            \"then the test failed. Otherwise, goto to the step 3.\",\n-            \"3) Click on the 'Change mode' button to set multiple-selection mode.\",\n-            \"4) If you see that the rows of the list overlap one another \"+\n-            \"then the test failed. Otherwise, the test passed.\"\n-        };\n-        Sysout.createDialogWithInstructions( instructions );\n-\n-    }\/\/End  init()\n-\n-    public void start ()\n-    {\n-\n-        setSize (200,200);\n-        setVisible(true);\n-        validate();\n-\n-    }\/\/ start()\n-}\n-\n-\/* Place other classes related to the test after this line *\/\n-\n-\n-\n-\n-\n-\/****************************************************\n- Standard Test Machinery\n- DO NOT modify anything below -- it's a standard\n-  chunk of code whose purpose is to make user\n-  interaction uniform, and thereby make it simpler\n-  to read and understand someone else's test.\n- ****************************************************\/\n-\n-\/**\n- This is part of the standard test machinery.\n- It creates a dialog (with the instructions), and is the interface\n-  for sending text messages to the user.\n- To print the instructions, send an array of strings to Sysout.createDialog\n-  WithInstructions method.  Put one line of instructions per array entry.\n- To display a message for the tester to see, simply call Sysout.println\n-  with the string to be displayed.\n- This mimics System.out.println but works within the test harness as well\n-  as standalone.\n- *\/\n-\n-class Sysout\n-{\n-    private static TestDialog dialog;\n-\n-    public static void createDialogWithInstructions( String[] instructions )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        dialog.printInstructions( instructions );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-    public static void createDialog( )\n-    {\n-        dialog = new TestDialog( new Frame(), \"Instructions\" );\n-        String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-        dialog.printInstructions( defInstr );\n-        dialog.setVisible(true);\n-        println( \"Any messages for the tester will display here.\" );\n-    }\n-\n-\n-    public static void printInstructions( String[] instructions )\n-    {\n-        dialog.printInstructions( instructions );\n-    }\n-\n-\n-    public static void println( String messageIn )\n-    {\n-        dialog.displayMessage( messageIn );\n-    }\n-\n-}\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog\n-{\n-\n-    TextArea instructionsText;\n-    TextArea messageText;\n-    int maxStringLength = 80;\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public TestDialog( Frame frame, String name )\n-    {\n-        super( frame, name );\n-        int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-        instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-        add( \"North\", instructionsText );\n-\n-        messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-        add(\"Center\", messageText);\n-\n-        pack();\n-\n-        setVisible(true);\n-    }\/\/ TestDialog()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void printInstructions( String[] instructions )\n-    {\n-        \/\/Clear out any current instructions\n-        instructionsText.setText( \"\" );\n-\n-        \/\/Go down array of instruction strings\n-\n-        String printStr, remainingStr;\n-        for( int i=0; i < instructions.length; i++ )\n-        {\n-            \/\/chop up each into pieces maxSringLength long\n-            remainingStr = instructions[ i ];\n-            while( remainingStr.length() > 0 )\n-            {\n-                \/\/if longer than max then chop off first max chars to print\n-                if( remainingStr.length() >= maxStringLength )\n-                {\n-                    \/\/Try to chop on a word boundary\n-                    int posOfSpace = remainingStr.\n-                        lastIndexOf( ' ', maxStringLength - 1 );\n-\n-                    if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-                    printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-                    remainingStr = remainingStr.substring( posOfSpace + 1 );\n-                }\n-                \/\/else just print\n-                else\n-                {\n-                    printStr = remainingStr;\n-                    remainingStr = \"\";\n-                }\n-\n-                instructionsText.append( printStr + \"\\n\" );\n-\n-            }\/\/ while\n-\n-        }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-    \/\/DO NOT call this directly, go through Sysout\n-    public void displayMessage( String messageIn )\n-    {\n-        messageText.append( messageIn + \"\\n\" );\n-        System.out.println(messageIn);\n-    }\n-\n-}\/\/ TestDialog  class\n","filename":"test\/jdk\/java\/awt\/List\/SetFontTest\/SetFontTest.java","additions":0,"deletions":234,"binary":false,"changes":234,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import javax.swing.SwingUtilities;\n@@ -61,1 +60,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -67,13 +66,3 @@\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            AddRemoveMenuBar_1 frame = new AddRemoveMenuBar_1();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(AddRemoveMenuBar_1::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_1.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import javax.swing.SwingUtilities;\n@@ -57,1 +56,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -63,13 +62,3 @@\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            AddRemoveMenuBar_2 frame = new AddRemoveMenuBar_2();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(AddRemoveMenuBar_2::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_2.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import javax.swing.SwingUtilities;\n@@ -79,1 +78,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -85,13 +84,3 @@\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            AddRemoveMenuBar_3 frame = new AddRemoveMenuBar_3();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(null,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(AddRemoveMenuBar_3::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_3.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import javax.swing.SwingUtilities;\n@@ -64,1 +63,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -70,13 +69,3 @@\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            AddRemoveMenuBar_4 frame = new AddRemoveMenuBar_4();\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-\n-            frame.setVisible(true);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(AddRemoveMenuBar_4::new)\n+                .build()\n+                .awaitAndCheck();\n","filename":"test\/jdk\/java\/awt\/MenuBar\/AddRemoveMenuBarTests\/AddRemoveMenuBarTest_4.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/java\/awt\/TrayIcon\/TrayIconScalingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-        PassFailJFrame testFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame testFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/java\/awt\/event\/KeyEvent\/AcceleratorTest\/AcceleratorTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,103 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.TextLayout;\n+\n+import javax.swing.JPanel;\n+\n+\/*\n+ * @test\n+ * @bug 4427483\n+ * @summary Arabic text followed by newline should have no missing glyphs\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ArabicBox\n+ *\/\n+public final class ArabicBox {\n+\n+    private static final String TEXT =\n+            \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\\n\";\n+\n+    private static final String FONT_NAME = Font.DIALOG;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            In the below panel, you should see the following text:\n+\n+            \"\"\"\n+            + TEXT + \"\"\"\n+            (It's \\u2018Arabic\\u2019 in Arabic.)\n+\n+            If there are no 'box glyphs' for missing glyphs,\n+            press Pass; otherwise, press Fail.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        final Font font = new Font(FONT_NAME, Font.PLAIN, 24);\n+        System.out.println(\"asked for \" + FONT_NAME + \" and got: \" + font.getFontName());\n+\n+        PassFailJFrame.builder()\n+                      .title(\"Arabic Box\")\n+                      .instructions(INSTRUCTIONS)\n+                      .rows(7)\n+                      .columns(40)\n+                      .splitUIBottom(() -> createPanel(font))\n+                      .build()\n+                      .awaitAndCheck();\n+    }\n+\n+    private static JPanel createPanel(Font font) {\n+        return new TextPanel(font);\n+    }\n+\n+    private static final class TextPanel extends JPanel {\n+        private TextLayout layout;\n+\n+        private TextPanel(Font font) {\n+            setForeground(Color.black);\n+            setBackground(Color.white);\n+            setFont(font);\n+            setPreferredSize(new Dimension(300, 150));\n+        }\n+\n+        @Override\n+        public void paint(Graphics g) {\n+            super.paint(g);\n+            Graphics2D g2d = (Graphics2D)g;\n+            if (layout == null) {\n+                Font font = g2d.getFont();\n+                FontRenderContext frc = g2d.getFontRenderContext();\n+\n+                layout = new TextLayout(TEXT, font, frc);\n+                System.out.println(layout.getBounds());\n+            }\n+\n+            layout.draw(g2d, 10, 50);\n+            g2d.drawString(TEXT, 10, 100);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/font\/TextLayout\/ArabicBox.java","additions":103,"deletions":0,"binary":false,"changes":103,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -375,1 +375,1 @@\n-            PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+            PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/java\/awt\/geom\/HitTest\/PathHitTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,1 +170,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/java\/awt\/print\/PageFormat\/CustomPaper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1062,0 +1062,8 @@\n+        \/**\n+         * A private constructor for the builder,\n+         * it should not be created directly.\n+         * Use {@code PassFailJFrame.builder()} method instead.\n+         *\/\n+        private Builder() {\n+        }\n+\n@@ -1336,8 +1344,0 @@\n-            if (panelCreator != null) {\n-                if (splitUI && (testWindows != null || windowListCreator != null)) {\n-                    \/\/ TODO Is it required? We can support both\n-                    throw new IllegalStateException(\"Split UI is not allowed \"\n-                                                    + \"with additional windows\");\n-                }\n-            }\n-\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @bug 8325567\n+ * @bug 8325567 8325621\n@@ -50,0 +50,17 @@\n+        if (nArgs != 2) {\n+            oa.shouldContain(\"Incorrect number of arguments\");\n+        } else {\n+            oa.shouldContain(\"Incorrect Java version\");\n+        }\n+    }\n+\n+    private static void testVersion() throws Exception {\n+        String[] args = new String[3];\n+        args[0] = Paths.get(System.getProperty(\"java.home\"), \"lib\", \"jspawnhelper\").toString();\n+        args[1] = \"wrongVersion\";\n+        args[2] = \"1:1:1\";\n+        Process p = ProcessTools.startProcess(\"jspawnhelper\", new ProcessBuilder(args));\n+        OutputAnalyzer oa = new OutputAnalyzer(p);\n+        oa.shouldHaveExitValue(1);\n+        oa.shouldContain(\"This command is not for general use\");\n+        oa.shouldContain(\"Incorrect Java version: wrongVersion\");\n@@ -56,0 +73,2 @@\n+\n+        testVersion();\n","filename":"test\/jdk\/java\/lang\/ProcessBuilder\/JspawnhelperWarnings.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,2 @@\n- * @run main\/othervm AsyncCloseAndInterrupt\n+ * @library \/test\/lib\n+ * @run main\/othervm --enable-native-access=ALL-UNNAMED AsyncCloseAndInterrupt\n@@ -46,0 +47,8 @@\n+import java.lang.foreign.Arena;\n+import java.lang.foreign.FunctionDescriptor;\n+import java.lang.foreign.Linker;\n+import java.lang.foreign.MemorySegment;\n+import java.lang.foreign.SymbolLookup;\n+import java.lang.foreign.ValueLayout;\n+import java.lang.invoke.MethodHandle;\n+\n@@ -56,0 +65,17 @@\n+    private static int mkfifo(String path) throws Throwable {\n+        Linker linker = Linker.nativeLinker();\n+        SymbolLookup stdlib = linker.defaultLookup();\n+        MethodHandle mkfifo = linker.downcallHandle(\n+            stdlib.find(\"mkfifo\").orElseThrow(),\n+            FunctionDescriptor.of(ValueLayout.JAVA_INT,\n+                                  ValueLayout.ADDRESS, ValueLayout.JAVA_INT)\n+        );\n+\n+        try (Arena arena = Arena.ofConfined()) {\n+            MemorySegment cString = arena.allocateFrom(path);\n+            int mode = 0666;\n+            int returnValue = (int)mkfifo.invokeExact(cString, mode);\n+            return returnValue;\n+        }\n+    }\n+\n@@ -136,4 +162,0 @@\n-        Process p = Runtime.getRuntime().exec(\"mkfifo \" + fifoFile);\n-        if (p.waitFor() != 0)\n-            throw new IOException(\"Error creating fifo\");\n-        new RandomAccessFile(fifoFile, \"rw\").close();\n@@ -141,0 +163,10 @@\n+        try {\n+            if (mkfifo(fifoFile.toString()) != 0) {\n+                fifoFile = null;\n+                log.println(\"WARNING: mkfifo failed - cannot completely test FileChannels\");\n+                return;\n+            }\n+        } catch (Throwable cause) {\n+            throw new IOException(cause);\n+        }\n+        new RandomAccessFile(fifoFile, \"rw\").close();\n","filename":"test\/jdk\/java\/nio\/channels\/AsyncCloseAndInterrupt.java","additions":38,"deletions":6,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/javax\/accessibility\/JComboBox\/TestJComboBoxScreenMagnifier.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -487,1 +487,1 @@\n-        long deadline = System.currentTimeMillis() + 60000;\n+        long deadline = System.currentTimeMillis() + 90000;\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/loading\/MissingClassTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,32 +0,0 @@\n-<!--\n- Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-Use the check box above the color chooser to disable it.\n-You could not choose a color using by the disable color chooser.\n-\n-<applet width=\"600\" height=\"400\" code=\"Test4222508.class\">\n-<\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test4222508.html","additions":0,"deletions":32,"binary":false,"changes":32,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,5 @@\n+import java.awt.BorderLayout;\n+import javax.swing.JCheckBox;\n+import javax.swing.JColorChooser;\n+import javax.swing.JFrame;\n+\n@@ -27,0 +32,2 @@\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n@@ -28,2 +35,1 @@\n- * @author Sergey Malenkov\n- * @run applet\/manual=yesno Test4222508.html\n+ * @run main\/manual Test4222508\n@@ -31,0 +37,1 @@\n+public final class Test4222508 {\n@@ -32,6 +39,5 @@\n-import java.awt.BorderLayout;\n-import java.awt.event.ItemEvent;\n-import java.awt.event.ItemListener;\n-import javax.swing.JApplet;\n-import javax.swing.JCheckBox;\n-import javax.swing.JColorChooser;\n+    public static void main(String[] args) throws Exception {\n+        String instructions = \"Click on colors in the JColorChooser.\\n\" +\n+                \"Then uncheck the checkbox and click on colors again.\\n\" +\n+                \"If the JColorChooser is disabled when the checkbox is unchecked, \" +\n+                \"then pass the test.\";\n@@ -39,1 +45,10 @@\n-public final class Test4222508 extends JApplet implements ItemListener {\n+        PassFailJFrame.builder()\n+                .title(\"Test4222508\")\n+                .instructions(instructions)\n+                .rows(5)\n+                .columns(40)\n+                .testTimeOut(10)\n+                .testUI(Test4222508::test)\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -41,2 +56,6 @@\n-    private JCheckBox checkbox;\n-    private JColorChooser chooser;\n+    public static JFrame test() {\n+        JFrame frame = new JFrame(\"JColorChooser with enable\/disable checkbox\");\n+        frame.setLayout(new BorderLayout());\n+        JColorChooser chooser = new JColorChooser();\n+        JCheckBox checkbox = new JCheckBox(\"Enable the color chooser below\", true);\n+        checkbox.addItemListener(e -> chooser.setEnabled(checkbox.isSelected()));\n@@ -44,8 +63,3 @@\n-    @Override\n-    public void init() {\n-        this.chooser = new JColorChooser();\n-        this.checkbox = new JCheckBox(\"Enable the color chooser below\", true);\n-        this.checkbox.addItemListener(this);\n-        add(BorderLayout.NORTH, this.checkbox);\n-        add(BorderLayout.CENTER, this.chooser);\n-    }\n+        frame.add(chooser, BorderLayout.SOUTH);\n+        frame.add(checkbox, BorderLayout.NORTH);\n+        frame.pack();\n@@ -53,2 +67,1 @@\n-    public void itemStateChanged(ItemEvent event) {\n-        this.chooser.setEnabled(this.checkbox.isSelected());\n+        return frame;\n@@ -56,0 +69,1 @@\n+\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test4222508.java","additions":36,"deletions":22,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -1,39 +0,0 @@\n-<!--\n- Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-1. Press button \"Show ColorChooser\" in the frame \"frame\" and\n-   a color chooser dialog should appear.\n-2. Without closing the color chooser, change Look And Feel\n-   selecting it from the combobox in the frame \"frame\".\n-   Dialog appearance will change.\n-3. Resize the color chooser by mouse drag.\n-\n-   If you see some remnants of the previous color chooser,\n-   press \"Fail\" else press \"Pass\".\n-\n-<applet width=\"500\" height=\"400\" code=\"Test4319113.class\">\n-<\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test4319113.html","additions":0,"deletions":39,"binary":false,"changes":39,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,9 +24,0 @@\n-\/*\n- * @test\n- * @bug 4319113\n- * @summary Tests the open JColorChooser behavior on LaF change.\n- * @author yan\n- * @run applet\/manual=yesno Test4319113.html\n- *\/\n-\n-\n@@ -37,1 +28,0 @@\n-import java.awt.LayoutManager;\n@@ -43,2 +33,0 @@\n-import java.io.PrintStream;\n-import javax.swing.JApplet;\n@@ -53,5 +41,9 @@\n-public class Test4319113\n-extends JApplet\n-implements ActionListener {\n-    private final JFrame frame = new JFrame(\"frame\");\n-    private JComboBox cbPlaf;\n+\/*\n+ * @test\n+ * @bug 4319113\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests the open JColorChooser behavior on LaF change.\n+ * @run main\/manual Test4319113\n+ *\/\n+public class Test4319113 {\n@@ -59,11 +51,10 @@\n-    @Override\n-    public void init() {\n-        try {\n-            java.awt.EventQueue.invokeLater( () -> {\n-                Test4319113.this.frame.setLayout(new GridLayout(2, 1));\n-                Test4319113.this.show(Test4319113.this.frame);\n-            });\n-        }catch(Exception ex) {\n-            ex.printStackTrace();\n-        }\n-    }\n+    public static void main(String[] args) throws Exception {\n+        String instructions = \"1. Press button \\\"Show ColorChooser\\\" in the frame \\\"frame\\\" and\\n\" +\n+                \"   a color chooser dialog should appear.\\n\" +\n+                \"2. Without closing the color chooser, change Look And Feel\\n\" +\n+                \"   selecting it from the combobox in the frame \\\"frame\\\".\\n\" +\n+                \"   Dialog appearance will change.\\n\" +\n+                \"3. Resize the color chooser by mouse drag.\\n\" +\n+                \"\\n\" +\n+                \"   If you see some remnants of the previous color chooser,\\n\" +\n+                \"   press \\\"Fail\\\" else press \\\"Pass\\\".\";\n@@ -71,6 +62,9 @@\n-    @Override\n-    public void actionPerformed(ActionEvent actionEvent) {\n-        Object object = actionEvent.getSource();\n-        Component component = object instanceof Component ? (Component)object : null;\n-        JDialog jDialog = JColorChooser.createDialog(component, \"ColorChooser\", false, new JColorChooser(Color.BLUE), null, null);\n-        jDialog.setVisible(true);\n+        PassFailJFrame.builder()\n+                .title(\"Test4319113\")\n+                .instructions(instructions)\n+                .rows(5)\n+                .columns(40)\n+                .testTimeOut(10)\n+                .testUI(Test4319113::test)\n+                .build()\n+                .awaitAndCheck();\n@@ -79,1 +73,4 @@\n-    private void show(Window window) {\n+    private static JFrame test() {\n+        JFrame frame = new JFrame(\"JColorChooser behavior on LaF change\");\n+        frame.setLayout(new GridLayout(2, 1));\n+\n@@ -82,3 +79,10 @@\n-        jButton.addActionListener(this);\n-        this.cbPlaf = new JComboBox<UIManager.LookAndFeelInfo>(UIManager.getInstalledLookAndFeels());\n-        this.cbPlaf.addItemListener(new ItemListener(){\n+        jButton.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent actionEvent) {\n+                Object object = actionEvent.getSource();\n+                Component component = object instanceof Component ? (Component) object : null;\n+                JDialog jDialog = JColorChooser.createDialog(component, \"ColorChooser\",\n+                        false, new JColorChooser(Color.BLUE), null, null);\n+                jDialog.setVisible(true);\n+            }\n+        });\n@@ -86,0 +90,2 @@\n+        JComboBox cbPlaf = new JComboBox<UIManager.LookAndFeelInfo>(UIManager.getInstalledLookAndFeels());\n+        cbPlaf.addItemListener(new ItemListener() {\n@@ -89,1 +95,1 @@\n-                    SwingUtilities.invokeLater(new Runnable(){\n+                    SwingUtilities.invokeLater(new Runnable() {\n@@ -93,1 +99,2 @@\n-                            UIManager.LookAndFeelInfo lookAndFeelInfo = (UIManager.LookAndFeelInfo)Test4319113.this.cbPlaf.getSelectedItem();\n+                            UIManager.LookAndFeelInfo lookAndFeelInfo =\n+                                    (UIManager.LookAndFeelInfo) cbPlaf.getSelectedItem();\n@@ -101,2 +108,1 @@\n-                            }\n-                            catch (Exception var2_3) {\n+                            } catch (Exception var2_3) {\n@@ -111,4 +117,6 @@\n-        window.add(this.cbPlaf);\n-        window.add(jButton);\n-        window.pack();\n-        window.setVisible(true);\n+\n+        frame.add(cbPlaf);\n+        frame.add(jButton);\n+        frame.pack();\n+\n+        return frame;\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test4319113.java","additions":55,"deletions":47,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -1,31 +0,0 @@\n-<!--\n- Copyright (c) 2002, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-If you see the preview panel, then test failed, otherwise it passed.\n-\n-<applet width=\"500\" height=\"400\" code=\"Test4759306.class\">\n-<\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test4759306.html","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,3 @@\n+import javax.swing.JColorChooser;\n+import javax.swing.JPanel;\n+\n@@ -27,0 +30,2 @@\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n@@ -28,2 +33,1 @@\n- * @author Konstantin Eremin\n-   @run applet\/manual=yesno Test4759306.html\n+ * @run main\/manual Test4759306\n@@ -31,0 +35,1 @@\n+public class Test4759306 {\n@@ -32,3 +37,11 @@\n-import javax.swing.JApplet;\n-import javax.swing.JColorChooser;\n-import javax.swing.JPanel;\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"Test4759306\")\n+                .instructions(\"Check that there is no panel titled \\\"Preview\\\" in the JColorChooser.\")\n+                .rows(5)\n+                .columns(40)\n+                .testTimeOut(10)\n+                .splitUIRight(Test4759306::createColorChooser)\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -36,2 +49,1 @@\n-public class Test4759306 extends JApplet {\n-    public void init() {\n+    private static JColorChooser createColorChooser() {\n@@ -40,1 +52,1 @@\n-        getContentPane().add(chooser);\n+        return chooser;\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test4759306.java","additions":21,"deletions":9,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1,37 +0,0 @@\n-<!--\n- Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-1. Press button \"Show Dialog\" at the frame \"Test\" and\n-   the dialog with button \"Show ColorChooser\" should appears.\n-2. Press button \"Show ColorChooser\" at the dialog \"Dialog\" and\n-   the colorchooser should appears.\n-3. Press the button \"Cancel\" of colorchooser.\n-   If the focus will come to the frame \"Test\" then test fails.\n-   If the focus will come to the dialog \"Dialog\" then test passes.\n-\n-<applet width=\"500\" height=\"400\" code=\"Test4759934.class\">\n-<\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test4759934.html","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,8 +24,0 @@\n-\/*\n- * @test\n- * @bug 4759934\n- * @summary Tests windows activation problem\n- * @author Andrey Pikalev\n- * @run applet\/manual=yesno Test4759934.html\n- *\/\n-\n@@ -37,1 +29,0 @@\n-import javax.swing.JApplet;\n@@ -43,1 +34,9 @@\n-public class Test4759934 extends JApplet implements ActionListener {\n+\/*\n+ * @test\n+ * @bug 4759934\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests windows activation problem\n+ * @run main\/manual Test4759934\n+ *\/\n+public class Test4759934 {\n@@ -47,1 +46,1 @@\n-    private final JFrame frame = new JFrame(\"Test\"); \/\/ NON-NLS: frame title\n+    private static JFrame frame;\n@@ -49,3 +48,14 @@\n-    public void init() {\n-        show(this.frame, CMD_DIALOG);\n-    }\n+    private static ActionListener al = new ActionListener() {\n+        @Override\n+        public void actionPerformed(ActionEvent event) {\n+            String command = event.getActionCommand();\n+            if (CMD_DIALOG.equals(command)) {\n+                JDialog dialog = new JDialog(frame, \"Dialog\"); \/\/ NON-NLS: dialog title\n+                dialog.setLocation(200, 0);\n+                show(dialog, CMD_CHOOSER, true);\n+            }\n+            else if (CMD_CHOOSER.equals(command)) {\n+                Object source = event.getSource();\n+                Component component = (source instanceof Component)\n+                        ? (Component) source\n+                        : null;\n@@ -53,6 +63,2 @@\n-    public void actionPerformed(ActionEvent event) {\n-        String command = event.getActionCommand();\n-        if (CMD_DIALOG.equals(command)) {\n-            JDialog dialog = new JDialog(this.frame, \"Dialog\"); \/\/ NON-NLS: dialog title\n-            dialog.setLocation(200, 0);\n-            show(dialog, CMD_CHOOSER);\n+                JColorChooser.showDialog(component, \"ColorChooser\", Color.BLUE); \/\/ NON-NLS: title\n+            }\n@@ -60,5 +66,1 @@\n-        else if (CMD_CHOOSER.equals(command)) {\n-            Object source = event.getSource();\n-            Component component = (source instanceof Component)\n-                    ? (Component) source\n-                    : null;\n+    };\n@@ -66,2 +68,18 @@\n-            JColorChooser.showDialog(component, \"ColorChooser\", Color.BLUE); \/\/ NON-NLS: title\n-        }\n+    public static void main(String[] args) throws Exception {\n+        String instructions = \"1. Press button \\\"Show Dialog\\\" at the frame \\\"Test\\\" and\\n\" +\n+                \"   the dialog with button \\\"Show ColorChooser\\\" should appears.\\n\" +\n+                \"2. Press button \\\"Show ColorChooser\\\" at the dialog \\\"Dialog\\\" and\\n\" +\n+                \"   the colorchooser should appears.\\n\" +\n+                \"3. Press the button \\\"Cancel\\\" of colorchooser.\\n\" +\n+                \"   If the focus will come to the frame \\\"Test\\\" then test fails.\\n\" +\n+                \"   If the focus will come to the dialog \\\"Dialog\\\" then test passes.\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test4759934\")\n+                .instructions(instructions)\n+                .rows(5)\n+                .columns(40)\n+                .testTimeOut(10)\n+                .testUI(Test4759934::test)\n+                .build()\n+                .awaitAndCheck();\n@@ -70,1 +88,7 @@\n-    private void show(Window window, String command) {\n+    public static JFrame test() {\n+        frame = new JFrame(\"ColorChooser dialog on button press test\");\n+        show(frame, CMD_DIALOG, false);\n+        return frame;\n+    }\n+\n+    private static void show(Window window, String command, boolean setVisible) {\n@@ -73,1 +97,2 @@\n-        button.addActionListener(this);\n+        button.addActionListener(al);\n+\n@@ -78,1 +103,3 @@\n-        window.setVisible(true);\n+        if (setVisible) {\n+            window.setVisible(true);\n+        }\n","filename":"test\/jdk\/javax\/swing\/JColorChooser\/Test4759934.java","additions":58,"deletions":31,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import javax.swing.SwingUtilities;\n@@ -48,1 +47,1 @@\n-            otherwise click Pass.  \"\"\";\n+            otherwise click Pass.\"\"\";\n@@ -51,1 +50,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -57,1 +56,4 @@\n-                .build();\n+                .testUI(ComboPopupBug::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -59,2 +61,2 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            JFrame frame = new JFrame(\"ComboPopup\");\n+    private static JFrame createUI() {\n+        JFrame frame = new JFrame(\"ComboPopup\");\n@@ -62,6 +64,5 @@\n-            JComboBox cb = new JComboBox();\n-            cb.setEditable(true);\n-            cb.addItem(\"test\");\n-            cb.addItem(\"test2\");\n-            cb.addItem(\"test3\");\n-            frame.getContentPane().add(cb, \"North\");\n+        JComboBox<String> cb = new JComboBox<>();\n+        cb.setEditable(true);\n+        cb.addItem(\"test\");\n+        cb.addItem(\"test2\");\n+        cb.addItem(\"test3\");\n@@ -69,2 +70,2 @@\n-            JButton b = new JButton(\"Close\");\n-            b.addActionListener(\n+        JButton b = new JButton(\"Close\");\n+        b.addActionListener(\n@@ -74,2 +75,1 @@\n-                    }\n-                    catch (Exception ex) {\n+                    } catch (Exception ignored) {\n@@ -78,1 +78,0 @@\n-\n@@ -80,6 +79,0 @@\n-            frame.getContentPane().add(b, \"South\");\n-            frame.setSize(200, 200);\n-\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame,\n-                    PassFailJFrame.Position.HORIZONTAL);\n@@ -87,2 +80,3 @@\n-            frame.setVisible(true);\n-        });\n+        frame.getContentPane().add(cb, \"North\");\n+        frame.getContentPane().add(b, \"South\");\n+        frame.setSize(200, 200);\n@@ -90,1 +84,1 @@\n-        passFailJFrame.awaitAndCheck();\n+        return frame;\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/ComboPopupBug.java","additions":20,"deletions":26,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import javax.swing.SwingUtilities;\n@@ -76,2 +75,1 @@\n-\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -82,10 +80,5 @@\n-                .columns(70)\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            DefaultCloseOperation dco = new DefaultCloseOperation();\n-            dco.init();\n-\n-            JFrame frame = new JFrame(\"DefaultCloseOperation\");\n-            frame.add(dco);\n-            frame.setSize(500,200);\n+                .columns(50)\n+                .testUI(DefaultCloseOperation::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -93,3 +86,3 @@\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame\n-                    .positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n+    private static JFrame createUI() {\n+        DefaultCloseOperation dco = new DefaultCloseOperation();\n+        dco.init();\n@@ -97,2 +90,3 @@\n-            frame.setVisible(true);\n-        });\n+        JFrame frame = new JFrame(\"DefaultCloseOperation\");\n+        frame.add(dco);\n+        frame.setSize(500,200);\n@@ -100,1 +94,1 @@\n-        passFailJFrame.awaitAndCheck();\n+        return frame;\n","filename":"test\/jdk\/javax\/swing\/JFrame\/DefaultCloseOperation.java","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-            \"1. Observe the arrows are ponting to left and right direction\\n\" +\n+            \"1. Observe the arrows are pointing to left and right direction\\n\" +\n@@ -60,1 +60,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/TestJTabbedPaneArrowDirection.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/javax\/swing\/JToolBar\/bug4203039.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,31 +0,0 @@\n-<!--\n- Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-Select the last tree node (marked \"Here\") and click on the menu.\n-Look at the vertical line connecting nodes \"Bug\" and \"Here\". If\n-this line disappears when the menu drops down, test fails.\n-<applet  code=\"bug4314199.class\" width=200 height=200><\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JTree\/4314199\/bug4314199.html","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -1,92 +0,0 @@\n-\/*\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-\/*\n- * @test\n- * @bug 4314199\n- * @summary Tests that JTree repaints correctly in a container with a JMenu\n- * @author Peter Zhelezniakov\n- * @run applet\/manual=yesno bug4314199.html\n- *\/\n-\n-import javax.swing.*;\n-import javax.swing.tree.*;\n-\n-public class bug4314199 extends JApplet {\n-\n-    public void init() {\n-\n-        try {\n-            UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-\n-                public void run() {\n-                    createAndShowGUI();\n-                }\n-            });\n-        } catch (final Exception e) {\n-            SwingUtilities.invokeLater(new Runnable() {\n-\n-                public void run() {\n-                    createAndShowMessage(\"Test fails because of exception: \"\n-                            + e.getMessage());\n-                }\n-            });\n-        }\n-\n-    }\n-\n-    private void createAndShowMessage(String message) {\n-        getContentPane().add(new JLabel(message));\n-    }\n-\n-    private void createAndShowGUI() {\n-        JMenuBar mb = new JMenuBar();\n-\n-        \/\/ needed to exactly align left edge of menu and angled line of tree\n-        mb.add(Box.createHorizontalStrut(27));\n-\n-        JMenu mn = new JMenu(\"Menu\");\n-        JMenuItem mi = new JMenuItem(\"MenuItem\");\n-        mn.add(mi);\n-        mb.add(mn);\n-        setJMenuBar(mb);\n-\n-        DefaultMutableTreeNode n1 = new DefaultMutableTreeNode(\"Root\");\n-        DefaultMutableTreeNode n2 = new DefaultMutableTreeNode(\"Duke\");\n-        n1.add(n2);\n-        DefaultMutableTreeNode n3 = new DefaultMutableTreeNode(\"Bug\");\n-        n2.add(n3);\n-        n3.add(new DefaultMutableTreeNode(\"Blah\"));\n-        n3.add(new DefaultMutableTreeNode(\"Blah\"));\n-        n3.add(new DefaultMutableTreeNode(\"Blah\"));\n-        DefaultMutableTreeNode n4 = new DefaultMutableTreeNode(\"Here\");\n-        n2.add(n4);\n-\n-        JTree tree = new JTree(new DefaultTreeModel(n1));\n-        tree.putClientProperty(\"JTree.lineStyle\", \"Angled\");\n-        tree.expandPath(new TreePath(new Object[]{n1, n2, n3}));\n-        setContentPane(tree);\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/JTree\/4314199\/bug4314199.java","additions":0,"deletions":92,"binary":false,"changes":92,"status":"deleted"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @bug 4314199\n+ * @summary Tests that JTree repaints correctly in a container with a JMenu\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4314199\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import javax.swing.Box;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPanel;\n+import javax.swing.JTree;\n+import javax.swing.UIManager;\n+import javax.swing.tree.DefaultMutableTreeNode;\n+import javax.swing.tree.DefaultTreeModel;\n+import javax.swing.tree.TreePath;\n+\n+public class bug4314199 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Select the last tree node (marked \"Here\") and click on the \"Menu\".\n+            Look at the vertical line connecting nodes \"Bug\" and \"Here\".\n+            If the connecting line does not disappear when the \"Menu\" drops down,\n+            press 'Pass' else 'Fail'. \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+\n+        PassFailJFrame.builder()\n+                .title(\"JTree Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows(6)\n+                .splitUI(bug4314199::createAndShowGUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JPanel createAndShowGUI() {\n+        JMenuBar mb = new JMenuBar();\n+\n+        \/\/ needed to exactly align left edge of menu and angled line of tree\n+        mb.add(Box.createHorizontalStrut(27));\n+\n+        JMenu mn = new JMenu(\"Menu\");\n+        JMenuItem mi = new JMenuItem(\"MenuItem\");\n+        mn.add(mi);\n+        mb.add(mn);\n+\n+        DefaultMutableTreeNode n1 = new DefaultMutableTreeNode(\"Root\");\n+        DefaultMutableTreeNode n2 = new DefaultMutableTreeNode(\"Duke\");\n+        n1.add(n2);\n+        DefaultMutableTreeNode n3 = new DefaultMutableTreeNode(\"Bug\");\n+        n2.add(n3);\n+        n3.add(new DefaultMutableTreeNode(\"Blah\"));\n+        n3.add(new DefaultMutableTreeNode(\"Blah\"));\n+        n3.add(new DefaultMutableTreeNode(\"Blah\"));\n+        DefaultMutableTreeNode n4 = new DefaultMutableTreeNode(\"Here\");\n+        n2.add(n4);\n+\n+        JTree tree = new JTree(new DefaultTreeModel(n1));\n+        tree.putClientProperty(\"JTree.lineStyle\", \"Angled\");\n+        tree.expandPath(new TreePath(new Object[]{n1, n2, n3}));\n+\n+        JPanel p = new JPanel();\n+        p.setLayout(new BorderLayout());\n+        p.setSize(200, 200);\n+        p.add(mb, BorderLayout.NORTH);\n+        p.add(tree);\n+        return p;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTree\/bug4314199.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import javax.swing.JViewport;\n@@ -43,1 +42,1 @@\n-import javax.swing.SwingUtilities;\n+import javax.swing.JViewport;\n@@ -67,1 +66,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame.builder()\n@@ -73,13 +72,8 @@\n-                .build();\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            AnimatingFrame af = new AnimatingFrame();\n-            af.test();\n-            af.run();\n-\n-            PassFailJFrame.addTestWindow(af);\n-            PassFailJFrame.positionTestWindow(af,\n-                    PassFailJFrame.Position.HORIZONTAL);\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n+                .testUI(() -> {\n+                    AnimatingFrame af = new AnimatingFrame();\n+                    af.test();\n+                    af.run();\n+                    return af;\n+                })\n+                .build()\n+                .awaitAndCheck();\n@@ -167,1 +161,0 @@\n-        setLocationRelativeTo(null);\n@@ -169,1 +162,0 @@\n-        setVisible(true);\n","filename":"test\/jdk\/javax\/swing\/MultiMonitor\/MultimonVImage.java","additions":11,"deletions":19,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1,33 +0,0 @@\n-<!--\n- Copyright (c) 2010, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-When applet starts, you'll see a checkbox and a label with a titled border.\n-Turn on the checkbox to disable the label.\n-The test passes if the title of the border is disabled as well as the label.\n-\n-<applet width=\"300\" height=\"200\" code=\"Test4129681.class\">\n-<\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/border\/Test4129681.html","additions":0,"deletions":33,"binary":false,"changes":33,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,9 +24,0 @@\n-\/*\n- * @test\n- * @bug 4129681\n- * @summary Tests enabling\/disabling of titled border's caption\n- * @author Sergey Malenkov\n- * @run applet\/manual=yesno Test4129681.html\n- *\/\n-\n-import java.awt.BorderLayout;\n@@ -34,1 +25,0 @@\n-import java.awt.event.ItemListener;\n@@ -36,1 +26,1 @@\n-import javax.swing.JApplet;\n+import javax.swing.Box;\n@@ -38,0 +28,1 @@\n+import javax.swing.JComponent;\n@@ -40,7 +31,8 @@\n-public class Test4129681 extends JApplet implements ItemListener {\n-    private JLabel label;\n-\n-    @Override\n-    public void init() {\n-        JCheckBox check = new JCheckBox(\"disable\");\n-        check.addItemListener(this);\n+\/*\n+ * @test\n+ * @bug 4129681\n+ * @summary Tests disabling of titled border's caption\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual Test4129681\n+ *\/\n@@ -48,3 +40,7 @@\n-        this.label = new JLabel(\"message\");\n-        this.label.setBorder(BorderFactory.createTitledBorder(\"label\"));\n-        this.label.setEnabled(!check.isSelected());\n+public class Test4129681 {\n+    public static void main(String[] args) throws Exception {\n+        String testInstructions = \"\"\"\n+                Click the checkbox to disable the label.\n+                The test passes if the title of the border\n+                is disabled as well as the label.\n+                \"\"\";\n@@ -52,2 +48,8 @@\n-        add(BorderLayout.NORTH, check);\n-        add(BorderLayout.CENTER, this.label);\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(testInstructions)\n+                .rows(4)\n+                .columns(25)\n+                .splitUI(Test4129681::init)\n+                .build()\n+                .awaitAndCheck();\n@@ -56,2 +58,13 @@\n-    public void itemStateChanged(ItemEvent event) {\n-        this.label.setEnabled(ItemEvent.DESELECTED == event.getStateChange());\n+    public static JComponent init() {\n+        JLabel label = new JLabel(\"message\");\n+        JCheckBox check = new JCheckBox(\"Enable\/Disable\");\n+        check.addItemListener(event ->\n+                label.setEnabled(ItemEvent.DESELECTED == event.getStateChange()));\n+        label.setBorder(BorderFactory.createTitledBorder(\"label\"));\n+        label.setEnabled(!check.isSelected());\n+\n+        Box main = Box.createVerticalBox();\n+        main.setBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8));\n+        main.add(check);\n+        main.add(label);\n+        return main;\n","filename":"test\/jdk\/javax\/swing\/border\/Test4129681.java","additions":39,"deletions":26,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -1,32 +0,0 @@\n-<!--\n- Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-When applet starts, you'll see a panel with a TitledBorder with title \"Panel Title\".\n-If this title is overstriken with the border line, test fails, otherwise it passes.\n-\n-<applet width=\"600\" height=\"300\" code=\"Test4243289.class\">\n-<\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/border\/Test4243289.html","additions":0,"deletions":32,"binary":false,"changes":32,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,8 @@\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import javax.swing.BorderFactory;\n+import javax.swing.Box;\n+import javax.swing.JComponent;\n+import javax.swing.JPanel;\n+import javax.swing.border.TitledBorder;\n+\n@@ -28,2 +36,3 @@\n- * @author Peter Zhelezniakov\n- * @run applet\/manual=yesno Test4243289.html\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual Test4243289\n@@ -32,5 +41,16 @@\n-import java.awt.Font;\n-import javax.swing.BorderFactory;\n-import javax.swing.JApplet;\n-import javax.swing.JPanel;\n-import javax.swing.border.TitledBorder;\n+public class Test4243289 {\n+    public static void main(String[] args) throws Exception {\n+        String testInstructions = \"\"\"\n+                If TitledBorder with title \"Panel Title\" is overstruck with\n+                the border line, test fails, otherwise it passes.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(testInstructions)\n+                .rows(3)\n+                .columns(35)\n+                .splitUI(Test4243289::init)\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -38,3 +58,2 @@\n-public class Test4243289 extends JApplet {\n-    public void init() {\n-        Font font = new Font(\"Dialog\", Font.PLAIN, 12); \/\/ NON-NLS: the font name\n+    public static JComponent init() {\n+        Font font = new Font(Font.DIALOG, Font.PLAIN, 12);\n@@ -43,1 +62,1 @@\n-                \"Panel Title\", \/\/ NON-NLS: the title of the border\n+                \"Panel Title\",\n@@ -50,1 +69,5 @@\n-        getContentPane().add(panel);\n+        panel.setPreferredSize(new Dimension(100, 100));\n+        Box main = Box.createVerticalBox();\n+        main.setBorder(BorderFactory.createEmptyBorder(8, 8, 8, 8));\n+        main.add(panel);\n+        return main;\n","filename":"test\/jdk\/javax\/swing\/border\/Test4243289.java","additions":36,"deletions":13,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -1,33 +0,0 @@\n-<!--\n- Copyright (c) 2001, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-If the button do not fit into the titled border bounds\n-and cover the bottom border's line then test fails.\n-Otherwise test passes.\n-\n-<applet width=\"200\" height=\"200\" code=\"Test4247606.class\">\n-<\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/border\/Test4247606.html","additions":0,"deletions":33,"binary":false,"changes":33,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,8 +24,0 @@\n-\/*\n- * @test\n- * @bug 4247606\n- * @summary BorderedPane appears wrong with Title Position Below Bottom\n- * @author Andrey Pikalev\n- * @run applet\/manual=yesno Test4247606.html\n- *\/\n-\n@@ -34,0 +26,1 @@\n+import java.awt.Dimension;\n@@ -35,1 +28,0 @@\n-import javax.swing.JApplet;\n@@ -42,3 +34,29 @@\n-public class Test4247606 extends JApplet {\n-    public void init() {\n-        JButton button = new JButton(\"Button\"); \/\/ NON-NLS: the button text\n+\/*\n+ * @test\n+ * @bug 4247606\n+ * @summary BorderedPane appears wrong with title position below bottom\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual Test4247606\n+ *\/\n+\n+public class Test4247606 {\n+    public static void main(String[] args) throws Exception {\n+        String testInstructions = \"\"\"\n+                If the button does not fit into the titled border bounds\n+                and cover the bottom border's line then test fails.\n+                Otherwise test passes\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(testInstructions)\n+                .rows(4)\n+                .columns(35)\n+                .splitUI(Test4247606::initializeTest)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JComponent initializeTest() {\n+        JButton button = new JButton(\"Button\");\n@@ -47,1 +65,1 @@\n-        TitledBorder border = new TitledBorder(\"Bordered Pane\"); \/\/ NON-NLS: the panel title\n+        TitledBorder border = new TitledBorder(\"Bordered Pane\");\n@@ -52,0 +70,1 @@\n+        panel.setPreferredSize(new Dimension(200, 150));\n@@ -53,1 +72,1 @@\n-        getContentPane().add(create(panel, BorderFactory.createEmptyBorder(10, 10, 10, 10)));\n+        return create(panel, BorderFactory.createEmptyBorder(10, 10, 10, 10));\n","filename":"test\/jdk\/javax\/swing\/border\/Test4247606.java","additions":34,"deletions":15,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -1,33 +0,0 @@\n-<!--\n- Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-Please, ensure that rounded border is filled completely.\n-It should not contain white points inside.\n-Use Mouse Wheel to change thickness of the border.\n-\n-<applet width=\"400\" height=\"200\" code=\"Test4252164.class\">\n-<\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/border\/Test4252164.html","additions":0,"deletions":33,"binary":false,"changes":33,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,5 @@\n+import java.awt.Color;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.border.LineBorder;\n+\n@@ -28,2 +33,3 @@\n- * @author Sergey Malenkov\n- * @run applet\/manual=yesno Test4252164.html\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual Test4252164\n@@ -32,12 +38,4 @@\n-import java.awt.Color;\n-import java.awt.event.MouseWheelEvent;\n-import java.awt.event.MouseWheelListener;\n-import javax.swing.JApplet;\n-import javax.swing.JLabel;\n-import javax.swing.JPanel;\n-import javax.swing.border.LineBorder;\n-\n-public class Test4252164 extends JApplet implements MouseWheelListener {\n-    private int thickness;\n-    private JLabel rounded;\n-    private JLabel straight;\n+public class Test4252164 {\n+    private static int thickness;\n+    private static JLabel rounded;\n+    private static JLabel straight;\n@@ -45,3 +43,6 @@\n-    public void mouseWheelMoved(MouseWheelEvent event) {\n-        update(event.getWheelRotation());\n-    }\n+    public static void main(String[] args) throws Exception {\n+        String testInstructions = \"\"\"\n+                Please, ensure that rounded border is filled completely.\n+                It should not contain white points inside.\n+                Use Mouse Wheel to change thickness of the border.\n+                                \"\"\";\n@@ -49,3 +50,8 @@\n-    public void init() {\n-        add(createUI());\n-        addMouseWheelListener(this);\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(testInstructions)\n+                .rows(4)\n+                .columns(35)\n+                .splitUI(Test4252164::createUI)\n+                .build()\n+                .awaitAndCheck();\n@@ -54,4 +60,3 @@\n-    private JPanel createUI() {\n-        this.rounded = new JLabel(\"ROUNDED\"); \/\/ NON-NLS: the label for rounded border\n-        this.straight = new JLabel(\"STRAIGHT\"); \/\/ NON-NLS: the label for straight border\n-\n+    private static JPanel createUI() {\n+        rounded = new JLabel(\"ROUNDED\"); \/\/ NON-NLS: the label for rounded border\n+        straight = new JLabel(\"STRAIGHT\"); \/\/ NON-NLS: the label for straight border\n@@ -59,3 +64,2 @@\n-        panel.add(this.rounded);\n-        panel.add(this.straight);\n-\n+        panel.add(rounded);\n+        panel.add(straight);\n@@ -63,1 +67,1 @@\n-\n+        panel.addMouseWheelListener(e -> update(e.getWheelRotation()));\n@@ -67,5 +71,4 @@\n-    private void update(int thickness) {\n-        this.thickness += thickness;\n-\n-        this.rounded.setBorder(new LineBorder(Color.RED, this.thickness, true));\n-        this.straight.setBorder(new LineBorder(Color.RED, this.thickness, false));\n+    private static void update(int thicknessValue) {\n+        thickness += thicknessValue;\n+        rounded.setBorder(new LineBorder(Color.RED, thickness, true));\n+        straight.setBorder(new LineBorder(Color.RED, thickness, false));\n","filename":"test\/jdk\/javax\/swing\/border\/Test4252164.java","additions":37,"deletions":34,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -1,32 +0,0 @@\n-<!--\n- Copyright (c) 2010, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-If the border is painted over scroll bars then test fails.\n-Otherwise test passes.\n-\n-<applet width=\"600\" height=\"300\" code=\"Test6910490.class\">\n-<\/applet>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/border\/Test6910490.html","additions":0,"deletions":32,"binary":false,"changes":32,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import javax.swing.JApplet;\n@@ -32,0 +31,1 @@\n+import javax.swing.JFrame;\n@@ -40,2 +40,3 @@\n- * @author Sergey Malenkov\n- * @run applet\/manual=yesno Test6910490.html\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual Test6910490\n@@ -44,1 +45,15 @@\n-public class Test6910490 extends JApplet implements Icon {\n+public class Test6910490 implements Icon {\n+    public static void main(String[] args) throws Exception {\n+        String testInstructions = \"\"\"\n+                If the border is painted over scroll bars then test fails.\n+                Otherwise test passes.\"\"\";\n+        Test6910490 obj = new Test6910490();\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(testInstructions)\n+                .rows(3)\n+                .columns(35)\n+                .testUI(obj.initializeTest())\n+                .build()\n+                .awaitAndCheck();\n+    }\n@@ -46,2 +61,1 @@\n-    @Override\n-    public void init() {\n+    public JFrame initializeTest() {\n@@ -49,1 +63,3 @@\n-        Dimension size = new Dimension(getWidth() \/ 2, getHeight());\n+        JFrame frame = new JFrame(\"Matte Border Test\");\n+        frame.setSize(600, 300);\n+        Dimension size = new Dimension(frame.getWidth() \/ 2, frame.getHeight());\n@@ -54,0 +70,1 @@\n+\n@@ -55,1 +72,2 @@\n-        add(pane);\n+        frame.add(pane);\n+        return frame;\n","filename":"test\/jdk\/javax\/swing\/border\/Test6910490.java","additions":27,"deletions":9,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n","filename":"test\/jdk\/sun\/awt\/PaletteTester.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}