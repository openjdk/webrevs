{"files":[{"patch":"@@ -37,0 +37,1 @@\n+import java.util.Arrays;\n@@ -38,0 +39,1 @@\n+import java.util.EnumMap;\n@@ -39,0 +41,1 @@\n+import java.util.Map;\n@@ -123,2 +126,0 @@\n-    private static final String DEFAULT_STARTUP_NAME_NO_MODULE_IMPORTS = \"DEFAULT_NO_MODULE_IMPORTS\";\n-    private static final String PREVIEW_DEFAULT_STARTUP_NAME = \"PREVIEW_DEFAULT\";\n@@ -127,5 +128,2 @@\n-    private static Startup[] defaultStartup = new Startup[] {\n-        null, \/\/standard startup\n-        null, \/\/JDK 24 and older startup\n-        null  \/\/preview startup\n-    };\n+    private static Map<DefaultStartupType, Startup> defaultStartup =\n+            new EnumMap<>(DefaultStartupType.class);\n@@ -177,3 +175,4 @@\n-            if (sue.isBuiltIn && (sue.name.equals(DEFAULT_STARTUP_NAME) ||\n-                                  sue.name.equals(DEFAULT_STARTUP_NAME_NO_MODULE_IMPORTS) ||\n-                                  sue.name.equals(PREVIEW_DEFAULT_STARTUP_NAME))) {\n+            if (sue.isBuiltIn &&\n+                Arrays.stream(DefaultStartupType.values())\n+                      .map(DefaultStartupType::getResourceName)\n+                      .anyMatch(sue.name::equals)) {\n@@ -343,3 +342,32 @@\n-        boolean hasModuleImports = source == null ||\n-                                   Feature.MODULE_IMPORTS.allowedInSource(source);\n-        int idx = preview ? 2 : !hasModuleImports ? 1 : 0;\n+        DefaultStartupType type;\n+        if (preview) {\n+            type = DefaultStartupType.PREVIEW_DEFAULT_STARTUP;\n+        } else if (source == null ||\n+                   Feature.MODULE_IMPORTS.allowedInSource(source)) {\n+            type = DefaultStartupType.DEFAULT_STARTUP;\n+        } else {\n+            type = DefaultStartupType.DEFAULT_STARTUP_NO_MODULE_IMPORTS;\n+        }\n+\n+        return defaultStartup.computeIfAbsent(type, t -> {\n+            String resourceName = t.getResourceName();\n+\n+            try {\n+                String content = readResource(resourceName);\n+                return new Startup(\n+                        new StartupEntry(true, DEFAULT_STARTUP_NAME, content));\n+            } catch (AccessDeniedException e) {\n+                mh.errormsg(\"jshell.err.file.not.accessible\", \"jshell\", resourceName, e.getMessage());\n+            } catch (NoSuchFileException e) {\n+                mh.errormsg(\"jshell.err.file.not.found\", \"jshell\", resourceName);\n+            } catch (Exception e) {\n+                mh.errormsg(\"jshell.err.file.exception\", \"jshell\", resourceName, e);\n+            }\n+            return noStartup();\n+        });\n+    }\n+\n+    private enum DefaultStartupType {\n+        DEFAULT_STARTUP(\"DEFAULT\"),\n+        DEFAULT_STARTUP_NO_MODULE_IMPORTS(\"DEFAULT_NO_MODULE_IMPORTS\"),\n+        PREVIEW_DEFAULT_STARTUP(\"PREVIEW_DEFAULT\");\n@@ -347,2 +375,4 @@\n-        if (defaultStartup[idx] != null) {\n-            return defaultStartup[idx];\n+        private final String resourceName;\n+\n+        private DefaultStartupType(String resourceName) {\n+            this.resourceName = resourceName;\n@@ -350,13 +380,3 @@\n-        String resourceName = preview ? PREVIEW_DEFAULT_STARTUP_NAME\n-                                      : !hasModuleImports ? DEFAULT_STARTUP_NAME_NO_MODULE_IMPORTS\n-                                                          : DEFAULT_STARTUP_NAME;\n-        try {\n-            String content = readResource(resourceName);\n-            return defaultStartup[idx] = new Startup(\n-                    new StartupEntry(true, DEFAULT_STARTUP_NAME, content));\n-        } catch (AccessDeniedException e) {\n-            mh.errormsg(\"jshell.err.file.not.accessible\", \"jshell\", resourceName, e.getMessage());\n-        } catch (NoSuchFileException e) {\n-            mh.errormsg(\"jshell.err.file.not.found\", \"jshell\", resourceName);\n-        } catch (Exception e) {\n-            mh.errormsg(\"jshell.err.file.exception\", \"jshell\", resourceName, e);\n+\n+        public String getResourceName() {\n+            return resourceName;\n@@ -364,1 +384,0 @@\n-        return defaultStartup[idx] = noStartup();\n@@ -366,1 +385,0 @@\n-\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/Startup.java","additions":48,"deletions":30,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -197,5 +197,5 @@\n-        Stream<String> mods = importSnippets()\n-                               .filter(isi -> isi.subKind() == SubKind.MODULE_IMPORT_SUBKIND)\n-                               .map(isi -> isi.fullname)\n-                               .flatMap(this::module2PackagesForImport);\n-        if (mods.anyMatch(pkg::equals)) {\n+        Stream<String> modPkgs = importSnippets()\n+                                   .filter(isi -> isi.subKind() == SubKind.MODULE_IMPORT_SUBKIND)\n+                                   .map(isi -> isi.fullname)\n+                                   .flatMap(this::module2PackagesForImport);\n+        if (modPkgs.anyMatch(pkg::equals)) {\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/SnippetMaps.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}