{"files":[{"patch":"@@ -312,3 +312,3 @@\n-        n0 = n * modulus[0];\n-        dd0 += Math.unsignedMultiplyHigh(n, modulus[0]) << shift1 | (n0 >>> shift2);\n-        d0 += n0 & LIMB_MASK;\n+        d0 = aa3 * bb0;\n+        dd0 = Math.unsignedMultiplyHigh(aa3, bb0) << shift1 | (d0 >>> shift2);\n+        d0 &= LIMB_MASK;\n@@ -330,2 +330,3 @@\n-        dd0 += (n + (-n >> BITS_PER_LIMB));\n-        d0 += -n & LIMB_MASK;;\n+        n0 = n * modulus[0];\n+        dd0 += Math.unsignedMultiplyHigh(n, modulus[0]) << shift1 | (n0 >>> shift2);\n+        d0 += n0 & LIMB_MASK;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/math\/intpoly\/MontgomeryIntegerPolynomialP256.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"}]}