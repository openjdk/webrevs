{"files":[{"patch":"@@ -204,3 +204,2 @@\n-        n0 = n * modulus[0];\n-        nn0 = Math.unsignedMultiplyHigh(n, modulus[0]) << shift1 | (n0 >>> shift2);\n-        n0 &= LIMB_MASK;\n+        n0 = -n & LIMB_MASK;\n+        nn0 = (n + (-n >> BITS_PER_LIMB));\n@@ -210,3 +209,2 @@\n-        n2 = n * modulus[2];\n-        nn2 = Math.unsignedMultiplyHigh(n, modulus[2]) << shift1 | (n2 >>> shift2);\n-        n2 &= LIMB_MASK;\n+        n2 = 0;\n+        nn2 = 0;\n@@ -224,2 +222,0 @@\n-        dd2 += nn2;\n-        d2 += n2;\n@@ -256,3 +252,2 @@\n-        n0 = n * modulus[0];\n-        dd0 += Math.unsignedMultiplyHigh(n, modulus[0]) << shift1 | (n0 >>> shift2);\n-        d0 += n0 & LIMB_MASK;\n+        dd0 += (n + (-n >> BITS_PER_LIMB));\n+        d0 += -n & LIMB_MASK;\n@@ -262,3 +257,0 @@\n-        n2 = n * modulus[2];\n-        dd2 += Math.unsignedMultiplyHigh(n, modulus[2]) << shift1 | (n2 >>> shift2);\n-        d2 += n2 & LIMB_MASK;\n@@ -297,3 +289,2 @@\n-        n0 = n * modulus[0];\n-        dd0 += Math.unsignedMultiplyHigh(n, modulus[0]) << shift1 | (n0 >>> shift2);\n-        d0 += n0 & LIMB_MASK;\n+        dd0 += (n + (-n >> BITS_PER_LIMB));\n+        d0 += -n & LIMB_MASK;\n@@ -303,3 +294,0 @@\n-        n2 = n * modulus[2];\n-        dd2 += Math.unsignedMultiplyHigh(n, modulus[2]) << shift1 | (n2 >>> shift2);\n-        d2 += n2 & LIMB_MASK;\n@@ -338,3 +326,2 @@\n-        n0 = n * modulus[0];\n-        dd0 += Math.unsignedMultiplyHigh(n, modulus[0]) << shift1 | (n0 >>> shift2);\n-        d0 += n0 & LIMB_MASK;\n+        dd0 += (n + (-n >> BITS_PER_LIMB));\n+        d0 += -n & LIMB_MASK;;\n@@ -344,3 +331,0 @@\n-        n2 = n * modulus[2];\n-        dd2 += Math.unsignedMultiplyHigh(n, modulus[2]) << shift1 | (n2 >>> shift2);\n-        d2 += n2 & LIMB_MASK;\n@@ -379,3 +363,2 @@\n-        n0 = n * modulus[0];\n-        dd0 += Math.unsignedMultiplyHigh(n, modulus[0]) << shift1 | (n0 >>> shift2);\n-        d0 += n0 & LIMB_MASK;\n+        dd0 += (n + (-n >> BITS_PER_LIMB));\n+        d0 += -n & LIMB_MASK;;\n@@ -385,3 +368,0 @@\n-        n2 = n * modulus[2];\n-        dd2 += Math.unsignedMultiplyHigh(n, modulus[2]) << shift1 | (n2 >>> shift2);\n-        d2 += n2 & LIMB_MASK;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/math\/intpoly\/MontgomeryIntegerPolynomialP256.java","additions":12,"deletions":32,"binary":false,"changes":44,"status":"modified"}]}