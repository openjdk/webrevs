{"files":[{"patch":"@@ -237,0 +237,25 @@\n+    private int traceRead0() throws IOException {\n+        if (!FileReadEvent.enabled()) {\n+            return read0();\n+        }\n+        int result = 0;\n+        boolean endOfFile = false;\n+        long bytesRead = 0;\n+        long start = 0;\n+        try {\n+            start = FileReadEvent.timestamp();\n+            result = read0();\n+            if (result < 0) {\n+                endOfFile = true;\n+            } else {\n+                bytesRead = 1;\n+            }\n+        } finally {\n+            long duration = FileReadEvent.timestamp() - start;\n+            if (FileReadEvent.shouldCommit(duration)) {\n+                FileReadEvent.commit(start, duration, path, bytesRead, endOfFile);\n+            }\n+        }\n+        return result;\n+    }\n+\n@@ -246,0 +271,22 @@\n+    private int traceReadBytes(byte b[], int off, int len) throws IOException {\n+        if (!FileReadEvent.enabled()) {\n+            return readBytes(b, off, len);\n+        }\n+        int bytesRead = 0;\n+        long start = 0;\n+        try {\n+            start = FileReadEvent.timestamp();\n+            bytesRead = readBytes(b, off, len);\n+        } finally {\n+            long duration = FileReadEvent.timestamp() - start;\n+            if (FileReadEvent.shouldCommit(duration)) {\n+                if (bytesRead < 0) {\n+                    FileReadEvent.commit(start, duration, path, 0L, true);\n+                } else {\n+                    FileReadEvent.commit(start, duration, path, bytesRead, false);\n+                }\n+            }\n+        }\n+        return bytesRead;\n+    }\n+\n@@ -563,47 +610,0 @@\n-\n-    private int traceRead0() throws IOException {\n-        if (!FileReadEvent.enabled()) {\n-            return read0();\n-        }\n-        int result = 0;\n-        boolean endOfFile = false;\n-        long bytesRead = 0;\n-        long start = 0;\n-        try {\n-            start = FileReadEvent.timestamp();\n-            result = read0();\n-            if (result < 0) {\n-                endOfFile = true;\n-            } else {\n-                bytesRead = 1;\n-            }\n-        } finally {\n-            long duration = FileReadEvent.timestamp() - start;\n-            if (FileReadEvent.shouldCommit(duration)) {\n-                FileReadEvent.commit(start, duration, path, bytesRead, endOfFile);\n-            }\n-        }\n-        return result;\n-    }\n-\n-    private int traceReadBytes(byte b[], int off, int len) throws IOException {\n-        if (!FileReadEvent.enabled()) {\n-            return readBytes(b, off, len);\n-        }\n-        int bytesRead = 0;\n-        long start = 0;\n-        try {\n-            start = FileReadEvent.timestamp();\n-            bytesRead = readBytes(b, off, len);\n-        } finally {\n-            long duration = FileReadEvent.timestamp() - start;\n-            if (FileReadEvent.shouldCommit(duration)) {\n-                if (bytesRead < 0) {\n-                    FileReadEvent.commit(start, duration, path, 0L, true);\n-                } else {\n-                    FileReadEvent.commit(start, duration, path, bytesRead, false);\n-                }\n-            }\n-        }\n-        return bytesRead;\n-    }\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileInputStream.java","additions":47,"deletions":47,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -304,0 +304,19 @@\n+    private void traceWrite(int b, boolean append) throws IOException {\n+        if (!FileWriteEvent.enabled()) {\n+            write(b, append);\n+            return;\n+        }\n+        long bytesWritten = 0;\n+        long start = 0;\n+        try {\n+            start = FileWriteEvent.timestamp();\n+            write(b, append);\n+            bytesWritten = 1;\n+        } finally {\n+            long duration = FileWriteEvent.timestamp() - start;\n+            if (FileWriteEvent.shouldCommit(duration)) {\n+                FileWriteEvent.commit(start, duration, path, bytesWritten);\n+            }\n+        }\n+    }\n+\n@@ -333,0 +352,19 @@\n+    private void traceWriteBytes(byte b[], int off, int len, boolean append) throws IOException {\n+        if (!FileWriteEvent.enabled()) {\n+            writeBytes(b, off, len, append);\n+            return;\n+        }\n+        long bytesWritten = 0;\n+        long start = 0;\n+        try {\n+            start = FileWriteEvent.timestamp();\n+            writeBytes(b, off, len, append);\n+            bytesWritten = len;\n+        } finally {\n+            long duration = FileWriteEvent.timestamp() - start;\n+            if (FileWriteEvent.shouldCommit(duration)) {\n+                FileWriteEvent.commit(start, duration, path, bytesWritten);\n+            }\n+        }\n+    }\n+\n@@ -480,38 +518,0 @@\n-\n-    private void traceWrite(int b, boolean append) throws IOException {\n-        if (!FileWriteEvent.enabled()) {\n-            write(b, append);\n-            return;\n-        }\n-        long bytesWritten = 0;\n-        long start = 0;\n-        try {\n-            start = FileWriteEvent.timestamp();\n-            write(b, append);\n-            bytesWritten = 1;\n-        } finally {\n-            long duration = FileWriteEvent.timestamp() - start;\n-            if (FileWriteEvent.shouldCommit(duration)) {\n-                FileWriteEvent.commit(start, duration, path, bytesWritten);\n-            }\n-        }\n-    }\n-\n-    private void traceWriteBytes(byte b[], int off, int len, boolean append) throws IOException {\n-        if (!FileWriteEvent.enabled()) {\n-            writeBytes(b, off, len, append);\n-            return;\n-        }\n-        long bytesWritten = 0;\n-        long start = 0;\n-        try {\n-            start = FileWriteEvent.timestamp();\n-            writeBytes(b, off, len, append);\n-            bytesWritten = len;\n-        } finally {\n-            long duration = FileWriteEvent.timestamp() - start;\n-            if (FileWriteEvent.shouldCommit(duration)) {\n-                FileWriteEvent.commit(start, duration, path, bytesWritten);\n-            }\n-        }\n-    }\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileOutputStream.java","additions":38,"deletions":38,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -392,0 +392,25 @@\n+    private int traceRead0() throws IOException {\n+        if (!FileReadEvent.enabled()) {\n+            return read0();\n+        }\n+        int result = 0;\n+        long bytesRead = 0;\n+        boolean endOfFile = false;\n+        long start = 0;\n+        try {\n+            start = FileReadEvent.timestamp();\n+            result = read0();\n+            if (result < 0) {\n+                endOfFile = true;\n+            } else {\n+                bytesRead = 1;\n+            }\n+        } finally {\n+            long duration = FileReadEvent.timestamp() - start;\n+            if (FileReadEvent.shouldCommit(duration)) {\n+                FileReadEvent.commit(start, duration, path, bytesRead, endOfFile);\n+            }\n+        }\n+        return result;\n+    }\n+\n@@ -408,0 +433,22 @@\n+    private int traceReadBytes0(byte b[], int off, int len) throws IOException {\n+        if (!FileReadEvent.enabled()) {\n+            return readBytes0(b, off, len);\n+        }\n+        int bytesRead = 0;\n+        long start = 0;\n+        try {\n+            start = FileReadEvent.timestamp();\n+            bytesRead = readBytes0(b, off, len);\n+        } finally {\n+            long duration = FileReadEvent.timestamp() - start;\n+            if (FileReadEvent.shouldCommit(duration)) {\n+                if (bytesRead < 0) {\n+                    FileReadEvent.commit(start, duration, path, 0L, true);\n+                } else {\n+                    FileReadEvent.commit(start, duration, path, bytesRead, false);\n+                }\n+            }\n+        }\n+        return bytesRead;\n+    }\n+\n@@ -567,0 +614,19 @@\n+    private void traceImplWrite(int b) throws IOException {\n+        if (!FileWriteEvent.enabled()) {\n+            implWrite(b);\n+            return;\n+        }\n+        long bytesWritten = 0;\n+        long start = 0;\n+        try {\n+            start = FileWriteEvent.timestamp();\n+            implWrite(b);\n+            bytesWritten = 1;\n+        } finally {\n+            long duration = FileWriteEvent.timestamp() - start;\n+            if (FileWriteEvent.shouldCommit(duration)) {\n+                FileWriteEvent.commit(start, duration, path, bytesWritten);\n+            }\n+        }\n+    }\n+\n@@ -594,0 +660,19 @@\n+    private void traceImplWriteBytes(byte b[], int off, int len) throws IOException {\n+        if (!FileWriteEvent.enabled()) {\n+            implWriteBytes(b, off, len);\n+            return;\n+        }\n+        long bytesWritten = 0;\n+        long start = 0;\n+        try {\n+            start = FileWriteEvent.timestamp();\n+            implWriteBytes(b, off, len);\n+            bytesWritten = len;\n+        } finally {\n+            long duration = FileWriteEvent.timestamp() - start;\n+            if (FileWriteEvent.shouldCommit(duration)) {\n+                FileWriteEvent.commit(start, duration, path, bytesWritten);\n+            }\n+        }\n+    }\n+\n@@ -1228,85 +1313,0 @@\n-    private int traceRead0() throws IOException {\n-        if (!FileReadEvent.enabled()) {\n-            return read0();\n-        }\n-        int result = 0;\n-        long bytesRead = 0;\n-        boolean endOfFile = false;\n-        long start = 0;\n-        try {\n-            start = FileReadEvent.timestamp();\n-            result = read0();\n-            if (result < 0) {\n-                endOfFile = true;\n-            } else {\n-                bytesRead = 1;\n-            }\n-        } finally {\n-            long duration = FileReadEvent.timestamp() - start;\n-            if (FileReadEvent.shouldCommit(duration)) {\n-                FileReadEvent.commit(start, duration, path, bytesRead, endOfFile);\n-            }\n-        }\n-        return result;\n-    }\n-\n-    private int traceReadBytes0(byte b[], int off, int len) throws IOException {\n-        if (!FileReadEvent.enabled()) {\n-            return readBytes0(b, off, len);\n-        }\n-        int bytesRead = 0;\n-        long start = 0;\n-        try {\n-            start = FileReadEvent.timestamp();\n-            bytesRead = readBytes0(b, off, len);\n-        } finally {\n-            long duration = FileReadEvent.timestamp() - start;\n-            if (FileReadEvent.shouldCommit(duration)) {\n-                if (bytesRead < 0) {\n-                    FileReadEvent.commit(start, duration, path, 0L, true);\n-                } else {\n-                    FileReadEvent.commit(start, duration, path, bytesRead, false);\n-                }\n-            }\n-        }\n-        return bytesRead;\n-    }\n-\n-    private void traceImplWrite(int b) throws IOException {\n-        if (!FileWriteEvent.enabled()) {\n-            implWrite(b);\n-            return;\n-        }\n-        long bytesWritten = 0;\n-        long start = 0;\n-        try {\n-            start = FileWriteEvent.timestamp();\n-            implWrite(b);\n-            bytesWritten = 1;\n-        } finally {\n-            long duration = FileWriteEvent.timestamp() - start;\n-            if (FileWriteEvent.shouldCommit(duration)) {\n-                FileWriteEvent.commit(start, duration, path, bytesWritten);\n-            }\n-        }\n-    }\n-\n-    private void traceImplWriteBytes(byte b[], int off, int len) throws IOException {\n-        if (!FileWriteEvent.enabled()) {\n-            implWriteBytes(b, off, len);\n-            return;\n-        }\n-        long bytesWritten = 0;\n-        long start = 0;\n-        try {\n-            start = FileWriteEvent.timestamp();\n-            ImplWriteBytes(b, off, len);\n-            bytesWritten = len;\n-        } finally {\n-            long duration = FileWriteEvent.timestamp() - start;\n-            if (FileWriteEvent.shouldCommit(duration)) {\n-                FileWriteEvent.commit(start, duration, path, bytesWritten);\n-            }\n-        }\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java","additions":85,"deletions":85,"binary":false,"changes":170,"status":"modified"},{"patch":"@@ -264,0 +264,22 @@\n+    private int traceImplRead(ByteBuffer dst) throws IOException {\n+        if (!FileReadEvent.enabled()) {\n+            return implRead(dst);\n+        }\n+        int bytesRead = 0;\n+        long start = 0;\n+        try {\n+            start = FileReadEvent.timestamp();\n+            bytesRead = implRead(dst);\n+        } finally {\n+            long duration = FileReadEvent.timestamp() - start;\n+            if (FileReadEvent.shouldCommit(duration)) {\n+                if (bytesRead < 0) {\n+                    FileReadEvent.commit(start, duration, path, 0L, true);\n+                } else {\n+                    FileReadEvent.commit(start, duration, path, bytesRead, false);\n+                }\n+            }\n+        }\n+        return bytesRead;\n+    }\n+\n@@ -307,0 +329,22 @@\n+    private long traceImplRead(ByteBuffer[] dsts, int offset, int length) throws IOException {\n+        if (!FileReadEvent.enabled()) {\n+            return implRead(dsts, offset, length);\n+        }\n+        long bytesRead = 0;\n+        long start = 0;\n+        try {\n+            start = FileReadEvent.timestamp();\n+            bytesRead = implRead(dsts, offset, length);\n+        } finally {\n+            long duration = FileReadEvent.timestamp() - start;\n+            if (FileReadEvent.shouldCommit(duration)) {\n+                if (bytesRead < 0) {\n+                    FileReadEvent.commit(start, duration, path, 0L, true);\n+                } else {\n+                    FileReadEvent.commit(start, duration, path, bytesRead, false);\n+                }\n+            }\n+        }\n+        return bytesRead;\n+    }\n+\n@@ -347,0 +391,19 @@\n+    private int traceImplWrite(ByteBuffer src) throws IOException {\n+        if (!FileWriteEvent.enabled()) {\n+            return implWrite(src);\n+        }\n+        int bytesWritten = 0;\n+        long start = 0;\n+        try {\n+            start = FileWriteEvent.timestamp();\n+            bytesWritten = implWrite(src);\n+        } finally {\n+            long duration = FileWriteEvent.timestamp() - start;\n+            if (FileWriteEvent.shouldCommit(duration)) {\n+                long bytes = bytesWritten > 0 ? bytesWritten : 0;\n+                FileWriteEvent.commit(start, duration, path, bytes);\n+            }\n+        }\n+        return bytesWritten;\n+    }\n+\n@@ -388,0 +451,18 @@\n+    private long traceImplWrite(ByteBuffer[] srcs, int offset, int length) throws IOException {\n+        if (!FileWriteEvent.enabled()) {\n+            return implWrite(srcs, offset, length);\n+        }\n+        long bytesWritten = 0;\n+        long start = 0;\n+        try {\n+            start = FileWriteEvent.timestamp();\n+            bytesWritten = implWrite(srcs, offset, length);\n+        } finally {\n+            long duration = FileWriteEvent.timestamp() - start;\n+            if (FileWriteEvent.shouldCommit(duration)) {\n+                long bytes = bytesWritten > 0 ? bytesWritten : 0;\n+                FileWriteEvent.commit(start, duration, path, bytes);\n+            }\n+        }\n+        return bytesWritten;\n+    }\n@@ -1087,0 +1168,22 @@\n+    private int traceImplRead(ByteBuffer dst, long position) throws IOException {\n+        if (!FileReadEvent.enabled()) {\n+            return implRead(dst, position);\n+        }\n+        int bytesRead = 0;\n+        long start = 0;\n+        try {\n+            start = FileReadEvent.timestamp();\n+            bytesRead = implRead(dst, position);\n+        } finally {\n+            long duration = FileReadEvent.timestamp() - start;\n+            if (FileReadEvent.shouldCommit(duration)) {\n+                if (bytesRead < 0) {\n+                    FileReadEvent.commit(start, duration, path, 0L, true);\n+                } else {\n+                    FileReadEvent.commit(start, duration, path, bytesRead, false);\n+                }\n+            }\n+        }\n+        return bytesRead;\n+    }\n+\n@@ -1140,0 +1243,20 @@\n+    private int traceImplWrite(ByteBuffer src, long position) throws IOException {\n+        if (!FileWriteEvent.enabled()) {\n+            return implWrite(src, position);\n+        }\n+\n+        int bytesWritten = 0;\n+        long start = 0;\n+        try {\n+            start = FileWriteEvent.timestamp();\n+            bytesWritten = implWrite(src, position);\n+        } finally {\n+            long duration = FileWriteEvent.timestamp() - start;\n+            if (FileWriteEvent.shouldCommit(duration)) {\n+                long bytes = bytesWritten > 0 ? bytesWritten : 0;\n+                FileWriteEvent.commit(start, duration, path, bytes);\n+            }\n+        }\n+        return bytesWritten;\n+    }\n+\n@@ -1665,124 +1788,0 @@\n-\n-    private int traceImplRead(ByteBuffer dst) throws IOException {\n-        if (!FileReadEvent.enabled()) {\n-            return implRead(dst);\n-        }\n-        int bytesRead = 0;\n-        long start = 0;\n-        try {\n-            start = FileReadEvent.timestamp();\n-            bytesRead = implRead(dst);\n-        } finally {\n-            long duration = FileReadEvent.timestamp() - start;\n-            if (FileReadEvent.shouldCommit(duration)) {\n-                if (bytesRead < 0) {\n-                    FileReadEvent.commit(start, duration, path, 0L, true);\n-                } else {\n-                    FileReadEvent.commit(start, duration, path, bytesRead, false);\n-                }\n-            }\n-        }\n-        return bytesRead;\n-    }\n-\n-    private int traceImplRead(ByteBuffer dst, long position) throws IOException {\n-        if (!FileReadEvent.enabled()) {\n-            return implRead(dst, position);\n-        }\n-        int bytesRead = 0;\n-        long start = 0;\n-        try {\n-            start = FileReadEvent.timestamp();\n-            bytesRead = implRead(dst, position);\n-        } finally {\n-            long duration = FileReadEvent.timestamp() - start;\n-            if (FileReadEvent.shouldCommit(duration)) {\n-                if (bytesRead < 0) {\n-                    FileReadEvent.commit(start, duration, path, 0L, true);\n-                } else {\n-                    FileReadEvent.commit(start, duration, path, bytesRead, false);\n-                }\n-            }\n-        }\n-        return bytesRead;\n-    }\n-\n-    private long traceImplRead(ByteBuffer[] dsts, int offset, int length) throws IOException {\n-        if (!FileReadEvent.enabled()) {\n-            return implRead(dsts, offset, length);\n-        }\n-        long bytesRead = 0;\n-        long start = 0;\n-        try {\n-            start = FileReadEvent.timestamp();\n-            bytesRead = implRead(dsts, offset, length);\n-        } finally {\n-            long duration = FileReadEvent.timestamp() - start;\n-            if (FileReadEvent.shouldCommit(duration)) {\n-                if (bytesRead < 0) {\n-                    FileReadEvent.commit(start, duration, path, 0L, true);\n-                } else {\n-                    FileReadEvent.commit(start, duration, path, bytesRead, false);\n-                }\n-            }\n-        }\n-        return bytesRead;\n-    }\n-\n-    private int traceImplWrite(ByteBuffer src) throws IOException {\n-        if (!FileWriteEvent.enabled()) {\n-            return implWrite(src);\n-        }\n-        int bytesWritten = 0;\n-        long start = 0;\n-        try {\n-            start = FileWriteEvent.timestamp();\n-            bytesWritten = implWrite(src);\n-        } finally {\n-            long duration = FileWriteEvent.timestamp() - start;\n-            if (FileWriteEvent.shouldCommit(duration)) {\n-                long bytes = bytesWritten > 0 ? bytesWritten : 0;\n-                FileWriteEvent.commit(start, duration, path, bytes);\n-            }\n-        }\n-        return bytesWritten;\n-    }\n-\n-    private int traceImplWrite(ByteBuffer src, long position) throws IOException {\n-        if (!FileWriteEvent.enabled()) {\n-            return implWrite(src, position);\n-        }\n-\n-        int bytesWritten = 0;\n-        long start = 0;\n-        try {\n-            start = FileWriteEvent.timestamp();\n-            bytesWritten = implWrite(src, position);\n-        } finally {\n-            long duration = FileWriteEvent.timestamp() - start;\n-            if (FileWriteEvent.shouldCommit(duration)) {\n-                long bytes = bytesWritten > 0 ? bytesWritten : 0;\n-                FileWriteEvent.commit(start, duration, path, bytes);\n-            }\n-        }\n-        return bytesWritten;\n-    }\n-\n-    private long traceImplWrite(ByteBuffer[] srcs, int offset, int length) throws IOException {\n-        if (!FileWriteEvent.enabled()) {\n-            return implWrite(srcs, offset, length);\n-        }\n-        long bytesWritten = 0;\n-        long start = 0;\n-        try {\n-            start = FileWriteEvent.timestamp();\n-            bytesWritten = implWrite(srcs, offset, length);\n-        } finally {\n-            long duration = FileWriteEvent.timestamp() - start;\n-            if (FileWriteEvent.shouldCommit(duration)) {\n-                long bytes = bytesWritten > 0 ? bytesWritten : 0;\n-                FileWriteEvent.commit(start, duration, path, bytes);\n-            }\n-        }\n-        return bytesWritten;\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java","additions":123,"deletions":124,"binary":false,"changes":247,"status":"modified"}]}