{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import sun.nio.ByteBuffered;\n@@ -133,4 +132,0 @@\n-        InputStream in = cachedInputStream();\n-        if (in instanceof ByteBuffered) {\n-            return ((ByteBuffered)in).getByteBuffer();\n-        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/loader\/Resource.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.nio;\n-\n-import java.nio.ByteBuffer;\n-import java.io.IOException;\n-\n-\/**\n- * This is an interface to adapt existing APIs to use {@link java.nio.ByteBuffer\n- * ByteBuffers} as the underlying data format.  Only the initial producer and\n- * final consumer have to be changed.\n- *\n- * <p>\n- * For example, the Zip\/Jar code supports {@link java.io.InputStream InputStreams}.\n- * To make the Zip code use {@link java.nio.MappedByteBuffer MappedByteBuffers} as\n- * the underlying data structure, it can create a class of InputStream that wraps\n- * the ByteBuffer, and implements the ByteBuffered interface. A co-operating class\n- * several layers away can ask the InputStream if it is an instance of ByteBuffered,\n- * then call the {@link #getByteBuffer()} method.\n- *\/\n-public interface ByteBuffered {\n-\n-    \/**\n-     * Returns the {@code ByteBuffer} behind this object, if this particular\n-     * instance has one. An implementation of {@code getByteBuffer()} is allowed\n-     * to return {@code null} for any reason.\n-     *\n-     * @return  The {@code ByteBuffer}, if this particular instance has one,\n-     *          or {@code null} otherwise.\n-     *\n-     * @throws  IOException\n-     *          If the ByteBuffer is no longer valid.\n-     *\n-     * @since  1.5\n-     *\/\n-    public ByteBuffer getByteBuffer() throws IOException;\n-}\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ByteBuffered.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"}]}