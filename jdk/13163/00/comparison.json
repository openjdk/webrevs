{"files":[{"patch":"@@ -52,1 +52,1 @@\n-unsigned char tuple_table[Assembler::EVEX_ETUP + 1][Assembler::AVX_512bit + 1] = {\n+static const unsigned char tuple_table[Assembler::EVEX_ETUP + 1][Assembler::AVX_512bit + 1] = {\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2186,1 +2186,1 @@\n-  int permconst[] = {1, 14};\n+  const int permconst[] = {1, 14};\n@@ -3282,3 +3282,3 @@\n-  XMMRegister vcoef[] = { vcoef0, vcoef1, vcoef2, vcoef3 },\n-              vresult[] = { vresult0, vresult1, vresult2, vresult3 },\n-              vtmp[] = { vtmp0, vtmp1, vtmp2, vtmp3 };\n+  const XMMRegister vcoef[] = { vcoef0, vcoef1, vcoef2, vcoef3 },\n+                    vresult[] = { vresult0, vresult1, vresult2, vresult3 },\n+                    vtmp[] = { vtmp0, vtmp1, vtmp2, vtmp3 };\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-static Assembler::Condition reverse[] = {\n+static const Assembler::Condition reverse[] = {\n@@ -9198,1 +9198,1 @@\n-  BasicType type[] = { T_BYTE, T_SHORT, T_INT, T_LONG};\n+  const BasicType type[] = { T_BYTE, T_SHORT, T_INT, T_LONG};\n@@ -9214,1 +9214,1 @@\n-  BasicType type[] = { T_BYTE, T_SHORT, T_INT, T_LONG};\n+  const BasicType type[] = { T_BYTE, T_SHORT, T_INT, T_LONG};\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _ONES[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _ONES[] = {\n@@ -33,1 +33,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _PI4_INV[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _PI4_INV[] = {\n@@ -38,1 +38,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _PI4X3[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _PI4X3[] = {\n@@ -44,1 +44,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _PI4X4[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _PI4X4[] = {\n@@ -50,1 +50,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _L_2IL0FLOATPACKET_0[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _L_2IL0FLOATPACKET_0[] = {\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_constants.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_cos[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _static_const_table_cos[] =\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_cos.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _static_const_table[] =\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_exp.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_log[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _static_const_table_log[] =\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_log.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_log10[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _static_const_table_log10[] =\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_log10.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_pow[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _static_const_table_pow[] =\n@@ -722,3 +722,3 @@\n-ATTRIBUTE_ALIGNED(8) double _DOUBLE2 = 2.0;\n-ATTRIBUTE_ALIGNED(8) double _DOUBLE0 = 0.0;\n-ATTRIBUTE_ALIGNED(8) double _DOUBLE0DOT5 = 0.5;\n+ATTRIBUTE_ALIGNED(8) static const double _DOUBLE2 = 2.0;\n+ATTRIBUTE_ALIGNED(8) static const double _DOUBLE0 = 0.0;\n+ATTRIBUTE_ALIGNED(8) static const double _DOUBLE0DOT5 = 0.5;\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_pow.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -180,1 +180,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _zero_none[] =\n+ATTRIBUTE_ALIGNED(8) static const juint _zero_none[] =\n@@ -185,1 +185,1 @@\n-ATTRIBUTE_ALIGNED(4) juint __4onpi_d[] =\n+ATTRIBUTE_ALIGNED(4) static const juint __4onpi_d[] =\n@@ -190,1 +190,1 @@\n-ATTRIBUTE_ALIGNED(4) juint _TWO_32H[] =\n+ATTRIBUTE_ALIGNED(4) static const juint _TWO_32H[] =\n@@ -195,1 +195,1 @@\n-ATTRIBUTE_ALIGNED(4) juint _pi04_3d[] =\n+ATTRIBUTE_ALIGNED(4) static const juint _pi04_3d[] =\n@@ -201,1 +201,1 @@\n-ATTRIBUTE_ALIGNED(4) juint _pi04_5d[] =\n+ATTRIBUTE_ALIGNED(4) static const juint _pi04_5d[] =\n@@ -207,1 +207,1 @@\n-ATTRIBUTE_ALIGNED(4) juint _SCALE[] =\n+ATTRIBUTE_ALIGNED(4) static const juint _SCALE[] =\n@@ -212,1 +212,1 @@\n-ATTRIBUTE_ALIGNED(4) juint _zeros[] =\n+ATTRIBUTE_ALIGNED(4) static const juint _zeros[] =\n@@ -217,1 +217,1 @@\n-ATTRIBUTE_ALIGNED(4) juint _pi04_2d[] =\n+ATTRIBUTE_ALIGNED(4) static const juint _pi04_2d[] =\n@@ -222,1 +222,1 @@\n-ATTRIBUTE_ALIGNED(4) juint _TWO_12H[] =\n+ATTRIBUTE_ALIGNED(4) static const juint _TWO_12H[] =\n@@ -227,1 +227,1 @@\n-ATTRIBUTE_ALIGNED(2) jushort __4onpi_31l[] =\n+ATTRIBUTE_ALIGNED(2) static const jushort __4onpi_31l[] =\n@@ -957,1 +957,1 @@\n-ATTRIBUTE_ALIGNED(16) jushort _SP[] =\n+ATTRIBUTE_ALIGNED(16) static const jushort _SP[] =\n@@ -966,1 +966,1 @@\n-ATTRIBUTE_ALIGNED(16) jushort _CP[] =\n+ATTRIBUTE_ALIGNED(16) static const jushort _CP[] =\n@@ -1493,1 +1493,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_sin[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _static_const_table_sin[] =\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_sin.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-ATTRIBUTE_ALIGNED(16) jushort _TP[] =\n+ATTRIBUTE_ALIGNED(16) static const jushort _TP[] =\n@@ -112,1 +112,1 @@\n-ATTRIBUTE_ALIGNED(16) jushort _TQ[] =\n+ATTRIBUTE_ALIGNED(16) static const jushort _TQ[] =\n@@ -119,1 +119,1 @@\n-ATTRIBUTE_ALIGNED(16) jushort _GP[] =\n+ATTRIBUTE_ALIGNED(16) static const jushort _GP[] =\n@@ -706,1 +706,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _static_const_table_tan[] =\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_tan.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,4 +29,4 @@\n-Register::RegisterImpl           all_RegisterImpls     [Register::number_of_registers      + 1];\n-FloatRegister::FloatRegisterImpl all_FloatRegisterImpls[FloatRegister::number_of_registers + 1];\n-XMMRegister::XMMRegisterImpl     all_XMMRegisterImpls  [XMMRegister::number_of_registers   + 1];\n-KRegister::KRegisterImpl         all_KRegisterImpls    [KRegister::number_of_registers     + 1];\n+const Register::RegisterImpl           all_RegisterImpls     [Register::number_of_registers      + 1];\n+const FloatRegister::FloatRegisterImpl all_FloatRegisterImpls[FloatRegister::number_of_registers + 1];\n+const XMMRegister::XMMRegisterImpl     all_XMMRegisterImpls  [XMMRegister::number_of_registers   + 1];\n+const KRegister::KRegisterImpl         all_KRegisterImpls    [KRegister::number_of_registers     + 1];\n@@ -66,1 +66,1 @@\n-  const char* names[number_of_registers] = {\n+  const char *const names[number_of_registers] = {\n","filename":"src\/hotspot\/cpu\/x86\/register_x86.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    static constexpr RegisterImpl* first();\n+    static constexpr const RegisterImpl* first();\n@@ -80,1 +80,1 @@\n-extern Register::RegisterImpl all_RegisterImpls[Register::number_of_registers + 1] INTERNAL_VISIBILITY;\n+extern const Register::RegisterImpl all_RegisterImpls[Register::number_of_registers + 1] INTERNAL_VISIBILITY;\n@@ -82,1 +82,1 @@\n-inline constexpr Register::RegisterImpl* Register::RegisterImpl::first() {\n+inline constexpr const Register::RegisterImpl* Register::RegisterImpl::first() {\n@@ -138,1 +138,1 @@\n-    static constexpr FloatRegisterImpl* first();\n+    static constexpr const FloatRegisterImpl* first();\n@@ -162,1 +162,1 @@\n-extern FloatRegister::FloatRegisterImpl all_FloatRegisterImpls[FloatRegister::number_of_registers + 1] INTERNAL_VISIBILITY;\n+extern const FloatRegister::FloatRegisterImpl all_FloatRegisterImpls[FloatRegister::number_of_registers + 1] INTERNAL_VISIBILITY;\n@@ -164,1 +164,1 @@\n-inline constexpr FloatRegister::FloatRegisterImpl* FloatRegister::FloatRegisterImpl::first() {\n+inline constexpr const FloatRegister::FloatRegisterImpl* FloatRegister::FloatRegisterImpl::first() {\n@@ -201,1 +201,1 @@\n-    static constexpr XMMRegisterImpl* first();\n+    static constexpr const XMMRegisterImpl* first();\n@@ -235,1 +235,1 @@\n-extern XMMRegister::XMMRegisterImpl all_XMMRegisterImpls[XMMRegister::number_of_registers + 1] INTERNAL_VISIBILITY;\n+extern const XMMRegister::XMMRegisterImpl all_XMMRegisterImpls[XMMRegister::number_of_registers + 1] INTERNAL_VISIBILITY;\n@@ -237,1 +237,1 @@\n-inline constexpr XMMRegister::XMMRegisterImpl* XMMRegister::XMMRegisterImpl::first() {\n+inline constexpr const XMMRegister::XMMRegisterImpl* XMMRegister::XMMRegisterImpl::first() {\n@@ -311,1 +311,1 @@\n-    static constexpr KRegisterImpl* first();\n+    static constexpr const KRegisterImpl* first();\n@@ -336,1 +336,1 @@\n-extern KRegister::KRegisterImpl all_KRegisterImpls[KRegister::number_of_registers + 1] INTERNAL_VISIBILITY;\n+extern const KRegister::KRegisterImpl all_KRegisterImpls[KRegister::number_of_registers + 1] INTERNAL_VISIBILITY;\n@@ -338,1 +338,1 @@\n-inline constexpr KRegister::KRegisterImpl* KRegister::KRegisterImpl::first() {\n+inline constexpr const KRegister::KRegisterImpl* KRegister::KRegisterImpl::first() {\n","filename":"src\/hotspot\/cpu\/x86\/register_x86.hpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-ATTRIBUTE_ALIGNED(16) uint32_t KEY_SHUFFLE_MASK[] = {\n+ATTRIBUTE_ALIGNED(16) static const uint32_t KEY_SHUFFLE_MASK[] = {\n@@ -72,1 +72,1 @@\n-ATTRIBUTE_ALIGNED(16) uint32_t COUNTER_SHUFFLE_MASK[] = {\n+ATTRIBUTE_ALIGNED(16) static const uint32_t COUNTER_SHUFFLE_MASK[] = {\n@@ -76,1 +76,1 @@\n-ATTRIBUTE_ALIGNED(16) uint32_t GHASH_BYTE_SWAP_MASK[] = {\n+ATTRIBUTE_ALIGNED(16) static const uint32_t GHASH_BYTE_SWAP_MASK[] = {\n@@ -80,1 +80,1 @@\n-ATTRIBUTE_ALIGNED(16) uint32_t GHASH_LONG_SWAP_MASK[] = {\n+ATTRIBUTE_ALIGNED(16) static const uint32_t GHASH_LONG_SWAP_MASK[] = {\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_32.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-ATTRIBUTE_ALIGNED(64) juint ADLER32_ASCALE_TABLE[] = {\n+ATTRIBUTE_ALIGNED(64) static const juint ADLER32_ASCALE_TABLE[] = {\n@@ -44,1 +44,1 @@\n-ATTRIBUTE_ALIGNED(32) juint ADLER32_SHUF0_TABLE[] = {\n+ATTRIBUTE_ALIGNED(32) static const juint ADLER32_SHUF0_TABLE[] = {\n@@ -49,1 +49,1 @@\n-ATTRIBUTE_ALIGNED(32) juint ADLER32_SHUF1_TABLE[] = {\n+ATTRIBUTE_ALIGNED(32) static const juint ADLER32_SHUF1_TABLE[] = {\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_adler.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-ATTRIBUTE_ALIGNED(16) uint64_t KEY_SHUFFLE_MASK[] = {\n+ATTRIBUTE_ALIGNED(16) static const uint64_t KEY_SHUFFLE_MASK[] = {\n@@ -56,1 +56,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t COUNTER_SHUFFLE_MASK[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t COUNTER_SHUFFLE_MASK[] = {\n@@ -67,1 +67,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t COUNTER_MASK_LINC0[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t COUNTER_MASK_LINC0[] = {\n@@ -77,1 +77,1 @@\n-ATTRIBUTE_ALIGNED(16) uint64_t COUNTER_MASK_LINC1[] = {\n+ATTRIBUTE_ALIGNED(16) static const uint64_t COUNTER_MASK_LINC1[] = {\n@@ -84,1 +84,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t COUNTER_MASK_LINC4[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t COUNTER_MASK_LINC4[] = {\n@@ -94,1 +94,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t COUNTER_MASK_LINC8[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t COUNTER_MASK_LINC8[] = {\n@@ -104,1 +104,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t COUNTER_MASK_LINC16[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t COUNTER_MASK_LINC16[] = {\n@@ -114,1 +114,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t COUNTER_MASK_LINC32[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t COUNTER_MASK_LINC32[] = {\n@@ -124,1 +124,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t GHASH_POLYNOMIAL_REDUCTION[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t GHASH_POLYNOMIAL_REDUCTION[] = {\n@@ -134,1 +134,1 @@\n-ATTRIBUTE_ALIGNED(16) uint64_t GHASH_POLYNOMIAL_TWO_ONE[] = {\n+ATTRIBUTE_ALIGNED(16) static const uint64_t GHASH_POLYNOMIAL_TWO_ONE[] = {\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_aes.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t CC20_COUNTER_ADD_AVX[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t CC20_COUNTER_ADD_AVX[] = {\n@@ -69,1 +69,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t CC20_COUNTER_ADD_AVX512[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t CC20_COUNTER_ADD_AVX512[] = {\n@@ -89,1 +89,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t CC20_LROT_CONSTS[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t CC20_LROT_CONSTS[] = {\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_chacha.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _ONE[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _ONE[] = {\n@@ -35,1 +35,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _ONEHALF[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _ONEHALF[] = {\n@@ -40,1 +40,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _SIGN_MASK[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _SIGN_MASK[] = {\n@@ -45,1 +45,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _TWO_POW_55[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _TWO_POW_55[] = {\n@@ -50,1 +50,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _TWO_POW_M55[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _TWO_POW_M55[] = {\n@@ -55,1 +55,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _SHIFTER[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _SHIFTER[] = {\n@@ -60,1 +60,1 @@\n-ATTRIBUTE_ALIGNED(4) juint _ZERO[] = {\n+ATTRIBUTE_ALIGNED(4) static const juint _ZERO[] = {\n@@ -65,1 +65,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _SC_1[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _SC_1[] = {\n@@ -70,1 +70,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _SC_2[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _SC_2[] = {\n@@ -75,1 +75,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _SC_3[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _SC_3[] = {\n@@ -80,1 +80,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _SC_4[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _SC_4[] = {\n@@ -85,1 +85,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _PI_4[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _PI_4[] = {\n@@ -90,1 +90,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _PI32INV[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _PI32INV[] = {\n@@ -95,1 +95,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _NEG_ZERO[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _NEG_ZERO[] = {\n@@ -100,1 +100,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _P_1[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _P_1[] = {\n@@ -105,1 +105,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _P_2[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _P_2[] = {\n@@ -110,1 +110,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _P_3[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _P_3[] = {\n@@ -116,1 +116,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _PI_INV_TABLE[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _PI_INV_TABLE[] = {\n@@ -130,1 +130,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _Ctable[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _Ctable[] = {\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_constants.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _cv[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _cv[] =\n@@ -75,1 +75,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _mmask[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _mmask[] =\n@@ -80,1 +80,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _bias[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _bias[] =\n@@ -85,1 +85,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _Tbl_addr[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _Tbl_addr[] =\n@@ -141,1 +141,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _ALLONES[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _ALLONES[] =\n@@ -146,1 +146,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _ebias[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _ebias[] =\n@@ -151,1 +151,1 @@\n-ATTRIBUTE_ALIGNED(4) juint _XMAX[] =\n+ATTRIBUTE_ALIGNED(4) static const juint _XMAX[] =\n@@ -156,1 +156,1 @@\n-ATTRIBUTE_ALIGNED(4) juint _XMIN[] =\n+ATTRIBUTE_ALIGNED(4) static const juint _XMIN[] =\n@@ -161,1 +161,1 @@\n-ATTRIBUTE_ALIGNED(4) juint _INF[] =\n+ATTRIBUTE_ALIGNED(4) static const juint _INF[] =\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_exp.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-ATTRIBUTE_ALIGNED(16) uint64_t GHASH_SHUFFLE_MASK[] = {\n+ATTRIBUTE_ALIGNED(16) static const uint64_t GHASH_SHUFFLE_MASK[] = {\n@@ -43,1 +43,1 @@\n-ATTRIBUTE_ALIGNED(16) uint64_t GHASH_LONG_SWAP_MASK[] = {\n+ATTRIBUTE_ALIGNED(16) static const uint64_t GHASH_LONG_SWAP_MASK[] = {\n@@ -51,1 +51,1 @@\n-ATTRIBUTE_ALIGNED(16) uint64_t GHASH_BYTE_SWAP_MASK[] = {\n+ATTRIBUTE_ALIGNED(16) static const uint64_t GHASH_BYTE_SWAP_MASK[] = {\n@@ -59,1 +59,1 @@\n-ATTRIBUTE_ALIGNED(16) uint64_t GHASH_POLYNOMIAL[] = {\n+ATTRIBUTE_ALIGNED(16) static const uint64_t GHASH_POLYNOMIAL[] = {\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_ghash.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _L_tbl[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _L_tbl[] =\n@@ -165,1 +165,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _log2[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _log2[] =\n@@ -170,1 +170,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _coeff[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _coeff[] =\n@@ -390,1 +390,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _HIGHSIGMASK_log10[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _HIGHSIGMASK_log10[] = {\n@@ -394,1 +394,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _LOG10_E[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _LOG10_E[] = {\n@@ -398,1 +398,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _L_tbl_log10[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _L_tbl_log10[] = {\n@@ -505,1 +505,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _log2_log10[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _log2_log10[] =\n@@ -510,1 +510,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _coeff_log10[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _coeff_log10[] =\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_log.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t POLY1305_PAD_MSG[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t POLY1305_PAD_MSG[] = {\n@@ -66,1 +66,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t POLY1305_MASK42[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t POLY1305_MASK42[] = {\n@@ -76,1 +76,1 @@\n-ATTRIBUTE_ALIGNED(64) uint64_t POLY1305_MASK44[] = {\n+ATTRIBUTE_ALIGNED(64) static const uint64_t POLY1305_MASK44[] = {\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_poly.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _HIGHSIGMASK[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _HIGHSIGMASK[] = {\n@@ -88,1 +88,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _LOG2_E[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _LOG2_E[] = {\n@@ -92,1 +92,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _HIGHMASK_Y[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _HIGHMASK_Y[] = {\n@@ -96,1 +96,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _T_exp[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _T_exp[] = {\n@@ -304,1 +304,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _e_coeff[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _e_coeff[] = {\n@@ -310,1 +310,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _coeff_h[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _coeff_h[] = {\n@@ -314,1 +314,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _HIGHMASK_LOG_X[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _HIGHMASK_LOG_X[] = {\n@@ -318,1 +318,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _HALFMASK[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _HALFMASK[] = {\n@@ -322,1 +322,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _coeff_pow[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _coeff_pow[] = {\n@@ -330,1 +330,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _L_tbl_pow[] = {\n+ATTRIBUTE_ALIGNED(16) static const juint _L_tbl_pow[] = {\n@@ -744,1 +744,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _log2_pow[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _log2_pow[] = {\n@@ -748,1 +748,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _DOUBLE2[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _DOUBLE2[] = {\n@@ -752,1 +752,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _DOUBLE0[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _DOUBLE0[] = {\n@@ -756,1 +756,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _DOUBLE0DOT5[] = {\n+ATTRIBUTE_ALIGNED(8) static const juint _DOUBLE0DOT5[] = {\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_pow.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _ALL_ONES[] =\n+ATTRIBUTE_ALIGNED(8) static const juint _ALL_ONES[] =\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_sin.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _MUL16[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _MUL16[] =\n@@ -105,1 +105,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _sign_mask_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _sign_mask_tan[] =\n@@ -110,1 +110,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _PI32INV_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _PI32INV_tan[] =\n@@ -115,1 +115,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _P_1_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _P_1_tan[] =\n@@ -120,1 +120,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _P_2_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _P_2_tan[] =\n@@ -125,1 +125,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _P_3_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _P_3_tan[] =\n@@ -130,1 +130,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _Ctable_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _Ctable_tan[] =\n@@ -416,1 +416,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _MASK_35_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _MASK_35_tan[] =\n@@ -421,1 +421,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _Q_11_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _Q_11_tan[] =\n@@ -426,1 +426,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _Q_9_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _Q_9_tan[] =\n@@ -431,1 +431,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _Q_7_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _Q_7_tan[] =\n@@ -436,1 +436,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _Q_5_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _Q_5_tan[] =\n@@ -441,1 +441,1 @@\n-ATTRIBUTE_ALIGNED(16) juint _Q_3_tan[] =\n+ATTRIBUTE_ALIGNED(16) static const juint _Q_3_tan[] =\n@@ -446,1 +446,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _PI_4_tan[] =\n+ATTRIBUTE_ALIGNED(8) static const juint _PI_4_tan[] =\n@@ -451,1 +451,1 @@\n-ATTRIBUTE_ALIGNED(8) juint _QQ_2_tan[] =\n+ATTRIBUTE_ALIGNED(8) static const juint _QQ_2_tan[] =\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_tan.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-uint64_t StubRoutines::x86::_crc_by128_masks[] =\n+const uint64_t StubRoutines::x86::_crc_by128_masks[] =\n@@ -127,1 +127,1 @@\n-juint StubRoutines::x86::_crc_table[] =\n+const juint StubRoutines::x86::_crc_table[] =\n@@ -184,1 +184,1 @@\n-juint StubRoutines::x86::_crc_table_avx512[] =\n+const juint StubRoutines::x86::_crc_table_avx512[] =\n@@ -201,1 +201,1 @@\n-juint StubRoutines::x86::_crc32c_table_avx512[] =\n+const juint StubRoutines::x86::_crc32c_table_avx512[] =\n@@ -218,1 +218,1 @@\n-juint StubRoutines::x86::_crc_by128_masks_avx512[] =\n+const juint StubRoutines::x86::_crc_by128_masks_avx512[] =\n@@ -225,1 +225,1 @@\n-juint StubRoutines::x86::_shuf_table_crc32_avx512[] =\n+const juint StubRoutines::x86::_shuf_table_crc32_avx512[] =\n@@ -232,1 +232,1 @@\n-jint StubRoutines::x86::_arrays_hashcode_powers_of_31[] =\n+const jint StubRoutines::x86::_arrays_hashcode_powers_of_31[] =\n@@ -373,1 +373,1 @@\n-ATTRIBUTE_ALIGNED(64) juint StubRoutines::x86::_k256[] =\n+ATTRIBUTE_ALIGNED(64) const juint StubRoutines::x86::_k256[] =\n@@ -399,1 +399,1 @@\n-ATTRIBUTE_ALIGNED(64) julong StubRoutines::x86::_k512_W[] =\n+ATTRIBUTE_ALIGNED(64) const julong StubRoutines::x86::_k512_W[] =\n","filename":"src\/hotspot\/cpu\/x86\/stubRoutines_x86.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -130,2 +130,2 @@\n-  static uint64_t _crc_by128_masks[];\n-  static juint    _crc_table[];\n+  static const uint64_t _crc_by128_masks[];\n+  static const juint    _crc_table[];\n@@ -133,4 +133,4 @@\n-  static juint    _crc_by128_masks_avx512[];\n-  static juint    _crc_table_avx512[];\n-  static juint    _crc32c_table_avx512[];\n-  static juint    _shuf_table_crc32_avx512[];\n+  static const juint    _crc_by128_masks_avx512[];\n+  static const juint    _crc_table_avx512[];\n+  static const juint    _crc32c_table_avx512[];\n+  static const juint    _shuf_table_crc32_avx512[];\n@@ -141,1 +141,1 @@\n-  static jint _arrays_hashcode_powers_of_31[];\n+  static const jint _arrays_hashcode_powers_of_31[];\n@@ -149,1 +149,1 @@\n-  static juint _k256[];\n+  static const juint _k256[];\n@@ -178,1 +178,1 @@\n-  static julong _k512_W[];\n+  static const julong _k512_W[];\n","filename":"src\/hotspot\/cpu\/x86\/stubRoutines_x86.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}