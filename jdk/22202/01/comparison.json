{"files":[{"patch":"@@ -120,2 +120,0 @@\n-  product(bool, UseRVVForBigIntegerShiftIntrinsics, true,                        \\\n-          \"Use RVV instructions for left\/right shift of BigInteger\")             \\\n","filename":"src\/hotspot\/cpu\/riscv\/globals_riscv.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -6505,1 +6505,1 @@\n-    if (UseRVVForBigIntegerShiftIntrinsics) {\n+    if (UseRVV) {\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -236,1 +236,0 @@\n-    FLAG_SET_DEFAULT(UseRVVForBigIntegerShiftIntrinsics, false);\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -79,3 +79,0 @@\n-        if (config.useRVVForBigIntegerShiftIntrinsics) {\n-            flags.add(RISCV64.Flag.UseRVVForBigIntegerShiftIntrinsics);\n-        }\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/riscv64\/RISCV64HotSpotJVMCIBackendFactory.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -53,1 +53,0 @@\n-    final boolean useRVVForBigIntegerShiftIntrinsics = getFlag(\"UseRVVForBigIntegerShiftIntrinsics\", Boolean.class);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/riscv64\/RISCV64HotSpotVMConfig.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -173,2 +173,1 @@\n-        UseZbb,\n-        UseRVVForBigIntegerShiftIntrinsics\n+        UseZbb\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/riscv64\/RISCV64.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}