{"files":[{"patch":"@@ -28,3 +28,0 @@\n-import java.nio.ByteBuffer;\n-import java.util.BitSet;\n-import java.util.List;\n@@ -35,1 +32,0 @@\n-import static java.lang.classfile.ClassFile.*;\n@@ -37,0 +33,1 @@\n+import java.nio.ByteBuffer;\n@@ -38,0 +35,2 @@\n+import java.util.BitSet;\n+import java.util.List;\n@@ -40,0 +39,1 @@\n+import static java.lang.classfile.ClassFile.*;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackCounter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+import org.openjdk.jmh.infra.Blackhole;\n@@ -107,2 +108,2 @@\n-    public void benchmarkStackMapsGenerator() {\n-        for (var d : data) new StackMapGenerator(\n+    public void benchmarkStackMapsGenerator(Blackhole bh) {\n+        for (var d : data) bh.consume(new StackMapGenerator(\n@@ -117,1 +118,1 @@\n-                d.handlers());\n+                d.handlers()));\n@@ -121,2 +122,2 @@\n-    public void benchmarkStackCounter() {\n-        for (var d : data) new StackCounter(\n+    public void benchmarkStackCounter(Blackhole bh) {\n+        for (var d : data) bh.consume(new StackCounter(\n@@ -129,1 +130,1 @@\n-                d.handlers());\n+                d.handlers()));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/CodeAttributeTools.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}