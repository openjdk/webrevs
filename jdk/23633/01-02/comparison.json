{"files":[{"patch":"@@ -1386,1 +1386,1 @@\n-void C2_MacroAssembler::string_compare_long_LL_UU(Register result, Register str1, Register str2,\n+void C2_MacroAssembler::string_compare_long_same_encoding(Register result, Register str1, Register str2,\n@@ -1452,1 +1452,0 @@\n-\n@@ -1474,2 +1473,2 @@\n-void C2_MacroAssembler::string_compare_long_LU(Register result, Register strL, Register strU,\n-                                               Register cnt1, Register cnt2,\n+void C2_MacroAssembler::string_compare_long_different_encoding(Register result, Register strL, Register strU,\n+                                               bool isUL, Register cnt1, Register cnt2,\n@@ -1522,1 +1521,0 @@\n-\n@@ -1533,1 +1531,5 @@\n-  sub(result, tmpL, tmpU);\n+  if (isUL) {\n+    sub(result, tmpU, tmpL);\n+  } else {\n+    sub(result, tmpL, tmpU);\n+  }\n@@ -1601,1 +1603,1 @@\n-      string_compare_long_LL_UU(result, str1, str2,\n+      string_compare_long_same_encoding(result, str1, str2,\n@@ -1606,1 +1608,1 @@\n-      string_compare_long_LU(result,\n+      string_compare_long_different_encoding(result,\n@@ -1609,0 +1611,1 @@\n+                             isUL,\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-  void string_compare_long_LL_UU(Register result, Register str1, Register str2,\n+  void string_compare_long_same_encoding(Register result, Register str1, Register str2,\n@@ -47,2 +47,2 @@\n-  void string_compare_long_LU(Register result, Register str1, Register str2,\n-                                  Register cnt1, Register cnt2,\n+  void string_compare_long_different_encoding(Register result, Register str1, Register str2,\n+                                  bool isUL, Register cnt1, Register cnt2,\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -163,0 +163,1 @@\n+                invokeAndCheck(m, '\\uff21' - 'A', \"ABCEFGHIJKLMNOPQRSTUVWXY\\uff21Z\", \"ABCEFGHIJKLMNOPQRSTUVWXYAZ\");\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestStringIntrinsics.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}