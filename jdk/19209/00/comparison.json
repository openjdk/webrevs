{"files":[{"patch":"@@ -150,1 +150,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/AttachConnector\/plugAttachConnect001\/plugAttachConnect001.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -168,1 +168,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/AttachConnector\/plugAttachConnect002\/plugAttachConnect002.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -136,1 +136,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/AttachConnector\/plugAttachConnect003\/plugAttachConnect003.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -152,1 +152,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/LaunchConnector\/plugLaunchConnect001\/plugLaunchConnect001.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -168,1 +168,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/LaunchConnector\/plugLaunchConnect002\/plugLaunchConnect002.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -136,1 +136,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/LaunchConnector\/plugLaunchConnect003\/plugLaunchConnect003.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -152,1 +152,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/ListenConnector\/plugListenConnect001\/plugListenConnect001.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -168,1 +168,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/ListenConnector\/plugListenConnect002\/plugListenConnect002.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -136,1 +136,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/ListenConnector\/plugListenConnect003\/plugListenConnect003.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -179,1 +179,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/MultiConnectors\/plugMultiConnect001\/plugMultiConnect001.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -204,1 +204,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/MultiConnectors\/plugMultiConnect002\/plugMultiConnect002.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -217,1 +217,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/MultiConnectors\/plugMultiConnect003\/plugMultiConnect003.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -236,1 +236,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/MultiConnectors\/plugMultiConnect004\/plugMultiConnect004.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -241,1 +241,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/MultiConnectors\/plugMultiConnect005\/plugMultiConnect005.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -266,1 +266,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/MultiConnectors\/plugMultiConnect006\/plugMultiConnect006.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -188,1 +188,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/TransportService\/transportService001\/transportService001.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -188,1 +188,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/TransportService\/transportService002\/transportService002.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -139,1 +139,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/PlugConnectors\/TransportService\/transportService003\/transportService003.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -161,1 +161,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/genericSignature\/genericSignature001.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -116,1 +116,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/genericSignature\/genericSignature001a.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -143,1 +143,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/genericSignature\/genericSignature002.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -89,1 +89,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ReferenceType\/genericSignature\/genericSignature002a.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -186,1 +186,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/TypeComponent\/genericSignature\/genericSignature001.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -115,1 +115,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/TypeComponent\/genericSignature\/genericSignature001a.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -178,1 +178,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/TypeComponent\/genericSignature\/genericSignature002.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -291,1 +291,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/TypeComponent\/genericSignature\/genericSignature002a.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -97,1 +97,0 @@\n-        logHandler.enableErrorsSummary(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachineManager\/createVirtualMachine\/createVM001.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-public class Log extends FinalizableObject {\n+public class Log {\n@@ -75,2 +75,0 @@\n-     *\n-     * @deprecated  Tests should not use this field directly.\n@@ -78,2 +76,1 @@\n-    @Deprecated\n-    protected PrintStream out = null;\n+    private PrintStream out = null;\n@@ -117,1 +114,1 @@\n-            if ( level == null )\n+           if ( level == null )\n@@ -138,10 +135,0 @@\n-    \/**\n-     * Is printing errors summary enabled? Default value is <code>true<\/code>;\n-     *\/\n-    private boolean errorsSummaryEnabled = true;\n-\n-    \/**\n-     * Is printing saved verbose messages on error enabled? Default value is <code>true<\/code>;\n-     *\/\n-    private boolean verboseOnErrorEnabled = true;\n-\n@@ -191,2 +178,0 @@\n-        \/\/ install finalizer to print errors summary at exit\n-        registerCleanup();\n@@ -237,28 +222,0 @@\n-    \/**\n-     * Return <i>true<\/i> if printing errors summary at exit is enabled.\n-     *\/\n-    public boolean isErrorsSummaryEnabled() {\n-        return errorsSummaryEnabled;\n-    }\n-\n-    \/**\n-     * Enable or disable printing errors summary at exit.\n-     *\/\n-    public void enableErrorsSummary(boolean enable) {\n-        errorsSummaryEnabled = enable;\n-    }\n-\n-    \/**\n-     * Return <i>true<\/i> if printing saved verbose messages on error is enabled.\n-     *\/\n-    public boolean isVerboseOnErrorEnabled() {\n-        return errorsSummaryEnabled;\n-    }\n-\n-    \/**\n-     * Enable or disable printing saved verbose messages on error.\n-     *\/\n-    public void enableVerboseOnError(boolean enable) {\n-        verboseOnErrorEnabled = enable;\n-    }\n-\n@@ -318,1 +275,1 @@\n-        if (!verbose() && isVerboseOnErrorEnabled()) {\n+        if (!verbose()) {\n@@ -374,2 +331,0 @@\n-        } else if (isVerboseOnErrorEnabled()) {\n-            keepLog(composeLine(message.toString()));\n@@ -377,1 +332,1 @@\n-            \/\/ ignore\n+            keepLog(composeLine(message.toString()));\n@@ -387,1 +342,1 @@\n-        if (!verbose() && isVerboseOnErrorEnabled()) {\n+        if (!verbose()) {\n@@ -398,3 +353,0 @@\n-        if (isErrorsSummaryEnabled()) {\n-            keepError(msgStr);\n-        }\n@@ -472,1 +424,3 @@\n-        cleanup(); \/\/ flush older log stream\n+        if (out != null) {\n+            out.flush();\n+        }\n@@ -576,53 +530,0 @@\n-    \/**\n-     * Keep the given error <code>message<\/code> into <code>errorsBuffer<\/code>.\n-     *\/\n-    private synchronized void keepError(String message) {\n-        errorsBuffer.addElement(message);\n-    }\n-\n-    \/**\n-     * Print errors messages summary from errors buffer if any;\n-     * print a warning message first.\n-     *\/\n-    private synchronized void printErrorsSummary() {\n-        if (errorsBuffer.size() <= 0)\n-            return;\n-\n-        PrintStream stream = findOutStream();\n-        stream.println();\n-        stream.println();\n-        stream.println(\"#>  \");\n-        stream.println(\"#>  SUMMARY: Following errors occured\");\n-        stream.println(\"#>      during test execution:\");\n-        stream.println(\"#>  \");\n-        stream.flush();\n-\n-        for (Enumeration e = errorsBuffer.elements(); e.hasMoreElements(); ) {\n-            printError((String) e.nextElement());\n-        }\n-    }\n-\n-    \/**\n-     * Print errors summary if mode is verbose, flush and cancel output stream.\n-     *\n-     * This is replacement of the finalize() method and is called when this\n-     * Log instance becomes unreachable.\n-     *\n-     *\/\n-    @Override\n-    public void cleanup() {\n-        if (verbose() && isErrorsSummaryEnabled()) {\n-            printErrorsSummary();\n-        }\n-        if (out != null)\n-            out.flush();\n-        out = null;\n-    }\n-\n-    \/**\n-     * Perform finalization at the exit.\n-     *\/\n-    public void finalizeAtExit() {\n-        cleanup();\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/Log.java","additions":10,"deletions":109,"binary":false,"changes":119,"status":"modified"},{"patch":"@@ -150,2 +150,0 @@\n-        log.enableErrorsSummary(false);\n-        log.enableVerboseOnError(false);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/BindServer.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -238,1 +238,0 @@\n-        Env.getLog().enableVerboseOnError(true);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/share\/MlvmTestExecutor.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}