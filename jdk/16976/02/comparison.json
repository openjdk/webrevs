{"files":[{"patch":"@@ -561,0 +561,1 @@\n+  static uint count = 0;\n@@ -562,2 +563,5 @@\n-    GCTraceTime(Info, gc) tm(before ? \"Heap Dump (before full gc)\" : \"Heap Dump (after full gc)\", timer);\n-    HeapDumper::dump_heap();\n+    if (FullGCHeapDumpLimit == 0 || count < FullGCHeapDumpLimit) {\n+      GCTraceTime(Info, gc) tm(before ? \"Heap Dump (before full gc)\" : \"Heap Dump (after full gc)\", timer);\n+      HeapDumper::dump_heap();\n+      count++;\n+    }\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -549,1 +549,2 @@\n-          \"Dump heap to file before any major stop-the-world GC\")           \\\n+          \"Dump heap to file before any major stop-the-world GC \"           \\\n+          \"(also see FullGCHeapDumpLimit)\")                                 \\\n@@ -552,1 +553,7 @@\n-          \"Dump heap to file after any major stop-the-world GC\")            \\\n+          \"Dump heap to file after any major stop-the-world GC \"            \\\n+          \"(also see FullGCHeapDumpLimit)\")                                 \\\n+                                                                            \\\n+  product(uint, FullGCHeapDumpLimit, 0, MANAGEABLE,                         \\\n+          \"Limit the number of heap dumps triggered by \"                    \\\n+          \"HeapDumpBeforeFullGC or HeapDumpAfterFullGC \"                    \\\n+          \"(0 means no limit)\")                                             \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2023, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary Test of option -XX:FullGCHeapDumpLimit\n+ * @library \/test\/lib\n+ * @run main\/othervm -XX:+UseSerialGC -XX:+HeapDumpBeforeFullGC -XX:+HeapDumpAfterFullGC -XX:HeapDumpPath=test.hprof -XX:FullGCHeapDumpLimit=1 FullGCHeapDumpLimitTest\n+ *\/\n+\n+import java.io.File;\n+\n+import jdk.test.lib.Asserts;\n+\n+public class FullGCHeapDumpLimitTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        System.gc();\n+        Asserts.assertTrue(new File(\"test.hprof\").exists());\n+        Asserts.assertFalse(new File(\"test.hprof.1\").exists());\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/HeapDump\/FullGCHeapDumpLimitTest.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"}]}