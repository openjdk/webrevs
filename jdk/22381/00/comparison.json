{"files":[{"patch":"@@ -65,1 +65,0 @@\n-import java.security.ProtectionDomain;\n@@ -759,1 +758,1 @@\n-            String str = removeSuspectedData(flavor, contents, (String)obj);\n+            String str = (String)obj;\n@@ -872,3 +871,1 @@\n-            final ProtectionDomain userProtectionDomain = getUserProtectionDomain(contents);\n-\n-            final ArrayList<String> fileList = castToFiles(list, userProtectionDomain);\n+            final ArrayList<String> fileList = castToFiles(list);\n@@ -899,2 +896,1 @@\n-            final ProtectionDomain userProtectionDomain = getUserProtectionDomain(contents);\n-            final ArrayList<String> fileList = castToFiles(list, userProtectionDomain);\n+            final ArrayList<String> fileList = castToFiles(list);\n@@ -982,54 +978,1 @@\n-    @SuppressWarnings(\"removal\")\n-    private String removeSuspectedData(DataFlavor flavor, final Transferable contents, final String str)\n-    {\n-        if (null == System.getSecurityManager()\n-            || !flavor.isMimeTypeEqual(\"text\/uri-list\"))\n-        {\n-            return str;\n-        }\n-\n-        final ProtectionDomain userProtectionDomain = getUserProtectionDomain(contents);\n-        StringBuilder allowedFiles = new StringBuilder(str.length());\n-        String [] uriArray = str.split(\"(\\\\s)+\");\n-\n-        for (String fileName : uriArray)\n-        {\n-            File file = new File(fileName);\n-            if (file.exists() &&\n-                !(isFileInWebstartedCache(file) ||\n-                isForbiddenToRead(file, userProtectionDomain)))\n-            {\n-                if (0 != allowedFiles.length())\n-                {\n-                    allowedFiles.append(\"\\\\r\\\\n\");\n-                }\n-\n-                allowedFiles.append(fileName);\n-            }\n-        }\n-        return allowedFiles.toString();\n-    }\n-\n-    private static ProtectionDomain getUserProtectionDomain(Transferable contents) {\n-        return contents.getClass().getProtectionDomain();\n-    }\n-\n-    private boolean isForbiddenToRead (File file, ProtectionDomain protectionDomain)\n-    {\n-        if (null == protectionDomain) {\n-            return false;\n-        }\n-        try {\n-            FilePermission filePermission =\n-                    new FilePermission(file.getCanonicalPath(), \"read, delete\");\n-            if (protectionDomain.implies(filePermission)) {\n-                return false;\n-            }\n-        } catch (IOException e) {}\n-\n-        return true;\n-    }\n-\n-    @SuppressWarnings(\"removal\")\n-    private ArrayList<String> castToFiles(final List<?> files,\n-                                          final ProtectionDomain userProtectionDomain) throws IOException {\n+    private ArrayList<String> castToFiles(final List<?> files) throws IOException {\n@@ -1040,5 +983,1 @@\n-            if (file != null &&\n-                (null == System.getSecurityManager() ||\n-                !(isFileInWebstartedCache(file) ||\n-                isForbiddenToRead(file, userProtectionDomain))))\n-            {\n+            if (file != null) {\n@@ -1065,37 +1004,0 @@\n-    private static final String[] DEPLOYMENT_CACHE_PROPERTIES = {\n-        \"deployment.system.cachedir\",\n-        \"deployment.user.cachedir\",\n-        \"deployment.javaws.cachedir\",\n-        \"deployment.javapi.cachedir\"\n-    };\n-\n-    private static final ArrayList <File> deploymentCacheDirectoryList = new ArrayList<>();\n-\n-    private static boolean isFileInWebstartedCache(File f) {\n-\n-        if (deploymentCacheDirectoryList.isEmpty()) {\n-            for (String cacheDirectoryProperty : DEPLOYMENT_CACHE_PROPERTIES) {\n-                String cacheDirectoryPath = System.getProperty(cacheDirectoryProperty);\n-                if (cacheDirectoryPath != null) {\n-                    try {\n-                        File cacheDirectory = (new File(cacheDirectoryPath)).getCanonicalFile();\n-                        if (cacheDirectory != null) {\n-                            deploymentCacheDirectoryList.add(cacheDirectory);\n-                        }\n-                    } catch (IOException ioe) {}\n-                }\n-            }\n-        }\n-\n-        for (File deploymentCacheDirectory : deploymentCacheDirectoryList) {\n-            for (File dir = f; dir != null; dir = dir.getParentFile()) {\n-                if (dir.equals(deploymentCacheDirectory)) {\n-                    return true;\n-                }\n-            }\n-        }\n-\n-        return false;\n-    }\n-\n-\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/datatransfer\/DataTransferer.java","additions":5,"deletions":103,"binary":false,"changes":108,"status":"modified"}]}