{"files":[{"patch":"@@ -68,1 +68,1 @@\n- * Example:\n+ * Example operation using a ficticious {@code KEM} algorithm {@code ABC}:\n@@ -70,3 +70,4 @@\n- *    \/\/ Receiver side\n- *    var kpg = KeyPairGenerator.getInstance(\"X25519\");\n- *    var kp = kpg.generateKeyPair();\n+ *     \/\/ Receiver side\n+ *     KeyPairGenerator g = KeyPairGenerator.getInstance(\"ABC\");\n+ *     KeyPair kp = g.generateKeyPair();\n+ *     publishKey(kp.getPublic());\n@@ -74,5 +75,8 @@\n- *    \/\/ Sender side\n- *    var kem1 = KEM.getInstance(\"DHKEM\");\n- *    var sender = kem1.newEncapsulator(kp.getPublic());\n- *    var encapsulated = sender.encapsulate();\n- *    var k1 = encapsulated.key();\n+ *     \/\/ Sender side\n+ *     KEM senderKEM = KEM.getInstance(\"ABC\");\n+ *     PublicKey receiverPublicKey = retrieveKey();\n+ *     ABCKEMParameterSpec senderSpec = new ABCKEMParameterSpec(...);\n+ *     KEM.Encapsulator e = senderKEM.newEncapsulator(\n+ *             receiverPublicKey, senderSpec, null);\n+ *     KEM.Encapsulated enc = e.encapsulate();\n+ *     SecretKey senderSecret = enc.key();\n@@ -80,4 +84,2 @@\n- *    \/\/ Receiver side\n- *    var kem2 = KEM.getInstance(\"DHKEM\");\n- *    var receiver = kem2.newDecapsulator(kp.getPrivate());\n- *    var k2 = receiver.decapsulate(encapsulated.encapsulation());\n+ *     sendBytes(enc.encapsulation());\n+ *     sendBytes(enc.params());\n@@ -85,1 +87,15 @@\n- *    assert Arrays.equals(k1.getEncoded(), k2.getEncoded());\n+ *     \/\/ Receiver side\n+ *     byte[] ciphertext = receiveBytes();\n+ *     byte[] params = receiveBytes();\n+ *\n+ *     KEM receiverKEM = KEM.getInstance(\"ABC\");\n+ *     AlgorithmParameters algParams =\n+ *             AlgorithmParameters.getInstance(\"ABC\");\n+ *     algParams.init(params);\n+ *     ABCKEMParameterSpec receiverSpec =\n+ *             algParams.getParameterSpec(ABCKEMParameterSpec.class);\n+ *     KEM.Decapsulator d =\n+ *             receiverKEM.newDecapsulator(kp.getPrivate(), receiverSpec);\n+ *     SecretKey receiverSecret = d.decapsulate(ciphertext);\n+ *\n+ *     \/\/ senderSecret and receiverSecret should now be equal.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KEM.java","additions":30,"deletions":14,"binary":false,"changes":44,"status":"modified"}]}