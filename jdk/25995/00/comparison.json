{"files":[{"patch":"@@ -1707,13 +1707,0 @@\n-    \/\/ We need at least one active thread. If reference processing\n-    \/\/ is not multi-threaded we use the current (VMThread) thread,\n-    \/\/ otherwise we use the workers from the G1CollectedHeap and\n-    \/\/ we utilize all the worker threads we can.\n-    uint active_workers = (ParallelRefProcEnabled ? _g1h->workers()->active_workers() : 1U);\n-    active_workers = clamp(active_workers, 1u, _max_num_tasks);\n-\n-    \/\/ Set the degree of MT processing here.  If the discovery was done MT,\n-    \/\/ the number of threads involved during discovery could differ from\n-    \/\/ the number of active workers.  This is OK as long as the discovered\n-    \/\/ Reference lists are balanced (see balance_all_queues() and balance_queues()).\n-    rp->set_active_mt_degree(active_workers);\n-\n@@ -1725,1 +1712,1 @@\n-    const ReferenceProcessorStats& stats = rp->process_discovered_references(task, pt);\n+    const ReferenceProcessorStats& stats = rp->process_discovered_references(task, _g1h->workers(), pt);\n@@ -1735,2 +1722,0 @@\n-\n-    assert(rp->num_queues() == active_workers, \"why not\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -302,2 +302,0 @@\n-    uint old_active_mt_degree = reference_processor()->num_queues();\n-    reference_processor()->set_active_mt_degree(workers());\n@@ -308,1 +306,1 @@\n-    const ReferenceProcessorStats& stats = reference_processor()->process_discovered_references(task, pt);\n+    const ReferenceProcessorStats& stats = reference_processor()->process_discovered_references(task, _heap->workers(), pt);\n@@ -312,2 +310,0 @@\n-\n-    reference_processor()->set_active_mt_degree(old_active_mt_degree);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -974,3 +974,0 @@\n-  uint no_of_gc_workers = workers()->active_workers();\n-  rp->set_active_mt_degree(no_of_gc_workers);\n-\n@@ -979,1 +976,1 @@\n-  ReferenceProcessorStats stats = rp->process_discovered_references(task, pt);\n+  ReferenceProcessorStats stats = rp->process_discovered_references(task, _g1h->workers(), pt);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1313,1 +1313,0 @@\n-    ref_processor()->set_active_mt_degree(active_gc_threads);\n@@ -1315,1 +1314,1 @@\n-    stats = ref_processor()->process_discovered_references(task, pt);\n+    stats = ref_processor()->process_discovered_references(task, &ParallelScavengeHeap::heap()->workers(), pt);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -413,1 +413,0 @@\n-      reference_processor()->set_active_mt_degree(active_workers);\n@@ -418,1 +417,1 @@\n-      stats = reference_processor()->process_discovered_references(task, pt);\n+      stats = reference_processor()->process_discovered_references(task, &ParallelScavengeHeap::heap()->workers(), pt);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -634,1 +634,1 @@\n-    const ReferenceProcessorStats& stats = rp->process_discovered_references(task, pt);\n+    const ReferenceProcessorStats& stats = rp->process_discovered_references(task, nullptr, pt);\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -501,1 +501,1 @@\n-    const ReferenceProcessorStats& stats = ref_processor()->process_discovered_references(task, pt);\n+    const ReferenceProcessorStats& stats = ref_processor()->process_discovered_references(task, nullptr, pt);\n","filename":"src\/hotspot\/share\/gc\/serial\/serialFullGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -182,0 +182,1 @@\n+                                                                          WorkerThreads* workers,\n@@ -200,1 +201,1 @@\n-    process_soft_weak_final_refs(proxy_task, phase_times);\n+    process_soft_weak_final_refs(proxy_task, workers, phase_times);\n@@ -205,1 +206,1 @@\n-    process_final_keep_alive(proxy_task, phase_times);\n+    process_final_keep_alive(proxy_task, workers, phase_times);\n@@ -210,1 +211,1 @@\n-    process_phantom_refs(proxy_task, phase_times);\n+    process_phantom_refs(proxy_task, workers, phase_times);\n@@ -702,1 +703,1 @@\n-void ReferenceProcessor::run_task(RefProcTask& task, RefProcProxyTask& proxy_task, bool marks_oops_alive) {\n+void ReferenceProcessor::run_task(RefProcTask& task, RefProcProxyTask& proxy_task, WorkerThreads* workers, bool marks_oops_alive) {\n@@ -710,1 +711,0 @@\n-    WorkerThreads* workers = Universe::heap()->safepoint_workers();\n@@ -723,0 +723,4 @@\n+static uint num_active_workers(WorkerThreads* workers) {\n+  return workers != nullptr ? workers->active_workers() : 1;\n+}\n+\n@@ -724,0 +728,1 @@\n+                                                      WorkerThreads* workers,\n@@ -736,1 +741,1 @@\n-  RefProcMTDegreeAdjuster a(this, SoftWeakFinalRefsPhase, num_total_refs);\n+  RefProcMTDegreeAdjuster a(this, SoftWeakFinalRefsPhase, num_active_workers(workers), num_total_refs);\n@@ -750,1 +755,1 @@\n-  run_task(phase_task, proxy_task, false);\n+  run_task(phase_task, proxy_task, workers, false);\n@@ -758,0 +763,1 @@\n+                                                  WorkerThreads* workers,\n@@ -767,1 +773,1 @@\n-  RefProcMTDegreeAdjuster a(this, KeepAliveFinalRefsPhase, num_final_refs);\n+  RefProcMTDegreeAdjuster a(this, KeepAliveFinalRefsPhase, num_active_workers(workers), num_final_refs);\n@@ -776,1 +782,1 @@\n-  run_task(phase_task, proxy_task, true);\n+  run_task(phase_task, proxy_task, workers, true);\n@@ -782,0 +788,1 @@\n+                                              WorkerThreads* workers,\n@@ -791,1 +798,1 @@\n-  RefProcMTDegreeAdjuster a(this, PhantomRefsPhase, num_phantom_refs);\n+  RefProcMTDegreeAdjuster a(this, PhantomRefsPhase, num_active_workers(workers), num_phantom_refs);\n@@ -801,1 +808,1 @@\n-  run_task(phase_task, proxy_task, false);\n+  run_task(phase_task, proxy_task, workers, false);\n@@ -1140,0 +1147,1 @@\n+                                                 uint num_active_workers,\n@@ -1143,1 +1151,1 @@\n-  uint workers = ergo_proc_thread_count(ref_count, _rp->num_queues(), phase);\n+  uint workers = ergo_proc_thread_count(ref_count, num_active_workers, phase);\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":20,"deletions":12,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -188,0 +188,1 @@\n+  friend class RefProcMTDegreeAdjuster;\n@@ -256,1 +257,1 @@\n-  void run_task(RefProcTask& task, RefProcProxyTask& proxy_task, bool marks_oops_alive);\n+  void run_task(RefProcTask& task, RefProcProxyTask& proxy_task, WorkerThreads* threads, bool marks_oops_alive);\n@@ -261,0 +262,1 @@\n+                                    WorkerThreads* workers,\n@@ -265,0 +267,1 @@\n+                                WorkerThreads* workers,\n@@ -269,0 +272,1 @@\n+                            WorkerThreads* workers,\n@@ -295,0 +299,3 @@\n+\n+  void set_active_mt_degree(uint v);\n+\n@@ -300,1 +307,0 @@\n-  void set_active_mt_degree(uint v);\n@@ -419,0 +425,1 @@\n+                                WorkerThreads* workers,\n@@ -592,0 +599,1 @@\n+                          uint num_active_workers,\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.hpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"}]}