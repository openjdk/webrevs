{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,8 +68,0 @@\n-void ZDriver::lock() {\n-  _lock->lock();\n-}\n-\n-void ZDriver::unlock() {\n-  _lock->unlock();\n-}\n-\n@@ -92,16 +84,0 @@\n-ZDriverLocker::ZDriverLocker() {\n-  ZDriver::lock();\n-}\n-\n-ZDriverLocker::~ZDriverLocker() {\n-  ZDriver::unlock();\n-}\n-\n-ZDriverUnlocker::ZDriverUnlocker() {\n-  ZDriver::unlock();\n-}\n-\n-ZDriverUnlocker::~ZDriverUnlocker() {\n-  ZDriver::lock();\n-}\n-\n@@ -208,1 +184,1 @@\n-    ZDriverLocker locker;\n+    ZLocker<ZLock> locker(_lock);\n@@ -461,1 +437,1 @@\n-    ZDriverLocker locker;\n+    ZLocker<ZLock> locker(_lock);\n","filename":"src\/hotspot\/share\/gc\/z\/zDriver.cpp","additions":3,"deletions":27,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,2 +49,1 @@\n-  friend class ZDriverLocker;\n-  friend class ZDriverUnlocker;\n+  friend class ZGenerationOld;\n@@ -53,1 +52,0 @@\n-  static ZLock*        _lock;\n@@ -59,2 +57,2 @@\n-  static void lock();\n-  static void unlock();\n+protected:\n+  static ZLock*        _lock;\n@@ -134,12 +132,0 @@\n-class ZDriverLocker : public StackObj {\n-public:\n-  ZDriverLocker();\n-  ~ZDriverLocker();\n-};\n-\n-class ZDriverUnlocker : public StackObj {\n-public:\n-  ZDriverUnlocker();\n-  ~ZDriverUnlocker();\n-};\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zDriver.hpp","additions":4,"deletions":18,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -979,1 +979,1 @@\n-  ZDriverUnlocker _unlocker;\n+  ZUnlocker<ZLock>  _unlocker;\n@@ -982,1 +982,1 @@\n-  ZGenerationCollectionScopeOld(ConcurrentGCTimer* gc_timer)\n+  ZGenerationCollectionScopeOld(ConcurrentGCTimer* gc_timer, ZLock* lock)\n@@ -984,1 +984,1 @@\n-      _unlocker() {\n+      _unlocker(lock) {\n@@ -1000,1 +1000,1 @@\n-  ZGenerationCollectionScopeOld scope(timer);\n+  ZGenerationCollectionScopeOld scope(timer, ZDriver::_lock);\n@@ -1039,1 +1039,1 @@\n-    ZDriverLocker locker;\n+    ZLocker<ZLock> locker(ZDriver::_lock);\n@@ -1149,1 +1149,1 @@\n-    ZDriverLocker locker;\n+    ZLocker<ZLock> locker(ZDriver::_lock);\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,0 +79,10 @@\n+template <typename T>\n+class ZUnlocker : public StackObj {\n+private:\n+  T* const _lock;\n+\n+public:\n+  ZUnlocker(T* lock);\n+  ~ZUnlocker();\n+};\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zLock.hpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,0 +120,15 @@\n+template <typename T>\n+inline ZUnlocker<T>::ZUnlocker(T* lock)\n+  : _lock(lock) {\n+  if (_lock != nullptr) {\n+    _lock->unlock();\n+  }\n+}\n+\n+template <typename T>\n+inline ZUnlocker<T>::~ZUnlocker() {\n+  if (_lock != nullptr) {\n+    _lock->lock();\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zLock.inline.hpp","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"}]}