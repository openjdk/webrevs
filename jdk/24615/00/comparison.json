{"files":[{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.font.TextAttribute;\n+import java.awt.font.TransformAttribute;\n+import java.awt.geom.AffineTransform;\n+import java.text.AttributedCharacterIterator;\n+import java.text.AttributedString;\n+\n+import javax.swing.JPanel;\n+\n+\/*\n+ * @test\n+ * @bug 4650042\n+ * @summary Draw text using a transform to simulate superscript, it should look like a superscript\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FontTransformAttributeTest\n+ *\/\n+\n+public class FontTransformAttributeTest extends JPanel {\n+    AttributedCharacterIterator iter;\n+\n+    public static void main(String[] args) throws Exception {\n+        final String INSTRUCTIONS = \"\"\"\n+                This test should display a string ending with the superscripted number '11'.\n+                Pass the test if you see the superscript.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"FontTransformAttributeTest Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .splitUI(FontTransformAttributeTest::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    FontTransformAttributeTest() {\n+        AffineTransform superTransform = AffineTransform.getScaleInstance(0.65, 0.65);\n+        superTransform.translate(0, -7);\n+        TransformAttribute superAttribute = new TransformAttribute(superTransform);\n+        String s = \"a big number 7 11\";\n+        AttributedString as = new AttributedString(s);\n+        as.addAttribute(TextAttribute.TRANSFORM, superAttribute, 15, 17);\n+        iter = as.getIterator();\n+        setBackground(Color.WHITE);\n+    }\n+\n+    @Override\n+    public Dimension getPreferredSize() {\n+        return new Dimension(200, 100);\n+    }\n+\n+    @Override\n+    public void paint(Graphics g) {\n+        Graphics2D g2 = (Graphics2D) g;\n+        Dimension d = getSize();\n+        g2.drawString(iter, 20, d.height \/ 2 + 8);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/FontClass\/FontTransformAttributeTest.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.Graphics;\n+\n+import javax.swing.JPanel;\n+\n+\/*\n+ * @test\n+ * @bug 4248579\n+ * @summary Make sure the underscore glyph appears in the different strings\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FontUnderscoreTest\n+ *\/\n+\n+public class FontUnderscoreTest extends JPanel {\n+    public static void main(String[] args) throws Exception {\n+        final String INSTRUCTIONS = \"\"\"\n+                Make sure all 8 underscore characters appear in each\n+                of the 3 strings.\n+\n+                Press PASS if all 8 are there, else FAIL.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"FontUnderscoreTest Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .splitUI(FontUnderscoreTest::new)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    @Override\n+    public Dimension getPreferredSize() {\n+        return new Dimension(550, 230);\n+    }\n+\n+    @Override\n+    public void paint(Graphics g) {\n+        Font f = new Font(Font.SANS_SERIF, Font.PLAIN, 24);\n+        g.setFont(f);\n+        g.drawString (\"8 underscore characters appear in each string\", 5, 200);\n+\n+        g.drawString(\"J_A_V_A_2_j_a_v_a\", 25, 50);\n+\n+        f = new Font(Font.SERIF, Font.PLAIN, 24);\n+        g.setFont(f);\n+        g.drawString(\"J_A_V_A_2_j_a_v_a\", 25, 100);\n+\n+        f = new Font(Font.MONOSPACED, Font.PLAIN, 24);\n+        g.setFont(f);\n+        g.drawString(\"J_A_V_A_2_j_a_v_a\", 25, 150);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/FontClass\/FontUnderscoreTest.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import javax.swing.JButton;\n+import javax.swing.JDialog;\n+import javax.swing.JFrame;\n+import javax.swing.JOptionPane;\n+\n+\/*\n+ * @test\n+ * @bug 4284610\n+ * @summary Tests that a child of the non-resizable dialog acquires valid icon.\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ChildFrameIconTest\n+ *\/\n+\n+public class ChildFrameIconTest {\n+    public static void main(String[] args) throws Exception {\n+        final String INSTRUCTIONS = \"\"\"\n+                Press \"Show Dialog\" button to open a dialog with this message:\n+                    Do you see a coffee cup icon in the upper left corner ?\n+\n+                Look at the icon in the upper left corner of the message dialog.\n+\n+                Press Pass if you see default coffee cup icon else press Fail.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"ChildFrameIconTest Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(ChildFrameIconTest::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createUI() {\n+        JFrame f = new JFrame(\"ChildFrameIconTest UI\");\n+        JButton b = new JButton(\"Show Dialog\");\n+        b.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                String msg = \"Do you see a coffee cup icon in the upper left corner ?\";\n+                JDialog dlg = new JDialog(f, \"Non-resizable JDialog\", false);\n+                dlg.setResizable(false);\n+                JOptionPane.showMessageDialog(dlg, msg);\n+            }\n+        });\n+        f.add(b);\n+        f.setSize(250, 100);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Icon\/ChildFrameIconTest.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,113 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Toolkit;\n+import java.awt.datatransfer.Clipboard;\n+import java.awt.datatransfer.DataFlavor;\n+import java.awt.datatransfer.Transferable;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+import java.io.Serializable;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JOptionPane;\n+\n+\/*\n+ * @test\n+ * @bug 4139552\n+ * @summary Checks to see if 'isDataFlavorSupported' throws exception.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TestClipboard\n+ *\/\n+\n+public class TestClipboard {\n+\n+    public static void main(String[] args) throws Exception {\n+        final String INSTRUCTIONS = \"\"\"\n+                This test has two steps:\n+\n+                1. you need to place some text onto the system clipboard,\n+                for example,\n+                    on Windows, you could highlight some text in notepad, and do a Ctrl-C\n+                    or select menu Edit->Copy;\n+\n+                    on Linux or Mac, you can do the same with any Terminal or Console or\n+                    Text application.\n+\n+                2. After you copy to system clipboard, press \"Click Me\" button.\n+\n+                Test will fail if any exception is thrown.\n+\n+                Press Pass if you see \"Test Passed\" in log area.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"TestClipboard Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .testUI(TestClipboard::createUI)\n+                .logArea(4)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createUI() {\n+        JFrame f = new JFrame(\"ChildFrameIconTest UI\");\n+        JButton b = new JButton(\"Click Me\");\n+        b.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                try {\n+                    new MyTest();\n+                } catch (Exception ex) {\n+                    throw new RuntimeException(\"Exception Thrown : \" + ex);\n+                }\n+            }\n+        });\n+        f.add(b);\n+        f.setSize(200, 100);\n+        return f;\n+    }\n+\n+    static class MyFlavor extends Object implements Serializable {\n+        \/\/ Stub class needed in order to define the data flavor type\n+    }\n+\n+    static class MyTest {\n+        public MyTest() throws Exception {\n+            \/\/ Create an arbitrary dataflavor\n+            DataFlavor myFlavor = new DataFlavor(MyFlavor.class, \"TestClipboard\");\n+            \/\/ Get the system clipboard\n+            Clipboard theClipboard =\n+                    Toolkit.getDefaultToolkit().getSystemClipboard();\n+            \/\/ Get the current contents of the clipboard\n+            Transferable theTransfer = theClipboard.getContents(this);\n+\n+            \/\/ See if the flavor is supported. This may result in a null\n+            \/\/ pointer exception.\n+            theTransfer.isDataFlavorSupported(myFlavor);\n+            PassFailJFrame.log(\"Test Passed\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Selection\/TestClipboard.java","additions":113,"deletions":0,"binary":false,"changes":113,"status":"added"}]}