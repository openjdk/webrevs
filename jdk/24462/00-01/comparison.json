{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.util.Locale;\n@@ -44,1 +45,1 @@\n-        String[] features = featuresString.toLowerCase().split(\", \"); \/\/ \", \" is used as a delimiter\n+        String[] features = featuresString.toLowerCase(Locale.ROOT).split(\", \"); \/\/ \", \" is used as a delimiter\n@@ -57,1 +58,1 @@\n-        return features.contains(feature.toLowerCase());\n+        return features.contains(feature.toLowerCase(Locale.ROOT));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/CPUFeatures.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -143,1 +143,2 @@\n-            return String.format(\"__jsvml_%s%s%d_ha_%s\", op.operatorName(), elemType, vspecies.length(), suffix);\n+            int vlen = (vspecies == FloatVector.SPECIES_64 ? 4 : vspecies.length()); \/\/ reuse 128-bit variant for 64-bit float vectors\n+            return String.format(\"__jsvml_%s%s%d_ha_%s\", op.operatorName(), elemType, vlen, suffix);\n@@ -156,7 +157,1 @@\n-            if (vspecies.vectorBitSize() < 128) {\n-                return false; \/\/ 64-bit vectors are not supported\n-            } else if (vspecies.vectorBitSize() < 512) {\n-                if (op == POW) {\n-                    return false; \/\/ not supported\n-                }\n-            } else if (vspecies.vectorBitSize() == 512) {\n+            if (vspecies.vectorBitSize() == 512) {\n@@ -166,2 +161,2 @@\n-            } else {\n-                throw new InternalError(\"unsupported vector shape: \" + vspecies);\n+            } else if (op == POW) {\n+                return false; \/\/ not supported\n@@ -258,5 +253,8 @@\n-            MemorySegment addr = LOOKUP.find(symbol)\n-                                       .orElseThrow(() -> new InternalError(\"not supported: \" + op + \" \" + vspecies + \" \" + symbol));\n-            debug(\"%s %s => 0x%016x\\n\", op, symbol, addr.address());\n-            T impl = implSupplier.apply(opc); \/\/ TODO: should call the very same native implementation eventually (once FFM API supports vectors)\n-            return new Entry<>(symbol, addr, impl);\n+            try {\n+                MemorySegment addr = LOOKUP.findOrThrow(symbol);\n+                debug(\"%s %s => 0x%016x\\n\", op, symbol, addr.address());\n+                T impl = implSupplier.apply(opc); \/\/ TODO: should call the very same native implementation eventually (once FFM API supports vectors)\n+                return new Entry<>(symbol, addr, impl);\n+            } catch (RuntimeException e) {\n+              throw new InternalError(\"not supported: \" + op + \" \" + vspecies + \" \" + symbol, e);\n+            }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorMathLibrary.java","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"}]}