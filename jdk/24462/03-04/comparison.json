{"files":[{"patch":"@@ -39,1 +39,1 @@\n-import static jdk.internal.util.Architecture.isX64;\n+import static jdk.internal.util.Architecture.*;\n@@ -157,0 +157,3 @@\n+            if (vspecies == DoubleVector.SPECIES_64) {\n+                return false; \/\/ 64-bit double vectors are not supported\n+            }\n@@ -175,1 +178,1 @@\n-     *              \"2\/4\" for neon, and \"x\" for sve\n+     *              \"2\/4\" for neon, and \"x\" for sve\/rvv\n@@ -180,2 +183,2 @@\n-     *     <suffix> indicates neon\/sve\n-     *              \"sve\/advsimd\" for sve\/neon implementations\n+     *     <suffix> indicates neon\/sve\/rvv\n+     *              \"sve\/advsimd\/rvv\" for sve\/neon\/rvv implementations\n@@ -191,1 +194,13 @@\n-            return (vshape.vectorBitSize() > 128 ? \"sve\" : \"advsimd\");\n+            if (isAARCH64()) {\n+                if (vshape.vectorBitSize() <= 128) {\n+                    return \"advsimd\";\n+                } else {\n+                    assert (vshape == VectorShape.S_Max_BIT) : \"not supported: \" + vshape;\n+                    return \"sve\";\n+                }\n+            } else if (isRISCV64()) {\n+                assert (vshape == VectorShape.S_Max_BIT) : \"not supported: \" + vshape;\n+                return \"rvv\";\n+            } else {\n+                throw new InternalError(\"unsupported platform\");\n+            }\n@@ -200,1 +215,3 @@\n-            return String.format(\"%s%s%d_%s%s\", op.operatorName(),\n+            int vlen = (vspecies == FloatVector.SPECIES_64 ? 4 : vspecies.length()); \/\/ reuse 128-bit variant for 64-bit float vectors\n+            boolean isShapeAgnostic = isRISCV64() || (isAARCH64() && vspecies.vectorBitSize() > 128);\n+            return String.format(\"%s%s%s_%s%s\", op.operatorName(),\n@@ -202,1 +219,1 @@\n-                                 vspecies.length(),\n+                                 (isShapeAgnostic ? \"x\" : Integer.toString(vlen)),\n@@ -217,2 +234,10 @@\n-            if (vspecies.vectorBitSize() < 128) {\n-                return false; \/\/ 64-bit vectors are not supported\n+            if (vspecies.vectorShape() != VectorShape.S_Max_BIT) {\n+                if (isRISCV64()) {\n+                    return false; \/\/ FIXME: only MAX shapes are supported on RISC-V\n+                }\n+                if (isAARCH64() && vspecies.vectorBitSize() > 128) {\n+                    return false; \/\/ FIXME: SVE support only for MAX shapes\n+                }\n+                if (vspecies == DoubleVector.SPECIES_64) {\n+                    return false; \/\/ 64-bit double vectors are not supported\n+                }\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorMathLibrary.java","additions":34,"deletions":9,"binary":false,"changes":43,"status":"modified"}]}