{"files":[{"patch":"@@ -193,1 +193,1 @@\n-        private static String suffix(VectorShape vshape) {\n+        private static String suffix(VectorShape vshape, boolean isShapeAgnostic) {\n@@ -195,4 +195,1 @@\n-                if (vshape.vectorBitSize() <= 128) {\n-                    return \"advsimd\";\n-                } else {\n-                    assert (vshape == VectorShape.S_Max_BIT) : \"not supported: \" + vshape;\n+                if (isShapeAgnostic) {\n@@ -200,0 +197,2 @@\n+                } else {\n+                    return \"advsimd\";\n@@ -202,1 +201,1 @@\n-                assert (vshape == VectorShape.S_Max_BIT) : \"not supported: \" + vshape;\n+                assert isShapeAgnostic : \"not supported\";\n@@ -221,1 +220,1 @@\n-                                 suffix(vspecies.vectorShape()));\n+                                 suffix(vspecies.vectorShape(), isShapeAgnostic));\n@@ -234,10 +233,2 @@\n-            if (vspecies.vectorShape() != VectorShape.S_Max_BIT) {\n-                if (isRISCV64()) {\n-                    return false; \/\/ FIXME: only MAX shapes are supported on RISC-V\n-                }\n-                if (isAARCH64() && vspecies.vectorBitSize() > 128) {\n-                    return false; \/\/ FIXME: SVE support only for MAX shapes\n-                }\n-                if (vspecies == DoubleVector.SPECIES_64) {\n-                    return false; \/\/ 64-bit double vectors are not supported\n-                }\n+            if (vspecies == DoubleVector.SPECIES_64) {\n+                return false; \/\/ 64-bit double vectors are not supported\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorMathLibrary.java","additions":8,"deletions":17,"binary":false,"changes":25,"status":"modified"}]}