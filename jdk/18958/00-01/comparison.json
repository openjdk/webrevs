{"files":[{"patch":"@@ -401,2 +401,2 @@\n-     * Creates a new certificate signed by the given CA. Certificates created\n-     * by this method are valid for an hour and are given a random serial number.\n+     * Creates a CertificateBuilder with default values for creating end-entity\n+     * certificates. Certificates are valid for an hour and are given a random serial number.\n@@ -417,2 +417,2 @@\n-    public static CertificateBuilder createClientCertificateBuilder(String subjectName, PublicKey publicKey,\n-              PublicKey caKey, Extension... extensions) throws Exception {\n+    public static CertificateBuilder newEndEntity(String subjectName, PublicKey publicKey,\n+                          PublicKey caKey, Extension... extensions) throws Exception {\n@@ -447,2 +447,2 @@\n-    public static CertificateBuilder createCACertificateBuilder(String subject, KeyPair caKey,\n-                                               Extension... extensions) throws Exception {\n+    public static CertificateBuilder newSelfSignedCA(String subject, KeyPair caKey,\n+                                     Extension... extensions) throws Exception {\n","filename":"test\/jdk\/java\/security\/testlibrary\/CertificateBuilder.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-        caCertificate = CertificateBuilder.createCACertificateBuilder(\n+        caCertificate = CertificateBuilder.newSelfSignedCA(\n@@ -92,1 +92,1 @@\n-        X509Certificate trustedCertA = CertificateBuilder.createClientCertificateBuilder(\n+        X509Certificate trustedCertA = CertificateBuilder.newEndEntity(\n@@ -95,1 +95,0 @@\n-                .addKeyUsageExt(new boolean[]{true, true, true, false, true, false, false, false, false})\n@@ -99,1 +98,1 @@\n-        X509Certificate trustedCertB = CertificateBuilder.createClientCertificateBuilder(\n+        X509Certificate trustedCertB = CertificateBuilder.newEndEntity(\n@@ -102,1 +101,0 @@\n-                .addKeyUsageExt(new boolean[]{true, true, true, false, true, false, false, false, false})\n@@ -106,1 +104,1 @@\n-        X509Certificate trustedCertC = CertificateBuilder.createClientCertificateBuilder(\n+        X509Certificate trustedCertC = CertificateBuilder.newEndEntity(\n@@ -109,1 +107,0 @@\n-                .addKeyUsageExt(new boolean[]{true, true, true, false, true, false, false, false, false})\n@@ -116,1 +113,1 @@\n-        X509Certificate trustedCertD = CertificateBuilder.createClientCertificateBuilder(\n+        X509Certificate trustedCertD = CertificateBuilder.newEndEntity(\n@@ -119,1 +116,0 @@\n-                .addKeyUsageExt(new boolean[]{true, true, true, false, true, false, false, false, false})\n","filename":"test\/jdk\/javax\/net\/ssl\/ServerName\/SSLSocketSNISensitive.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -205,1 +205,1 @@\n-        serverCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        serverCertificate = CertificateBuilder.newEndEntity(\n@@ -211,1 +211,1 @@\n-        clientCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        clientCertificate = CertificateBuilder.newEndEntity(\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/DNSIdentities.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-        serverCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        serverCertificate = CertificateBuilder.newEndEntity(\n@@ -201,4 +201,4 @@\n-        clientCertificate = CertificateBuilder.createClientCertificateBuilder(\n-                        \"C = US, ST = Some-State, L = Some-City, O = Some-Org, OU = SSL-Client, CN = localhost\",\n-                        clientKeysRsa1024.getPublic(), caKeysRsa1024.getPublic(),\n-                        CertificateBuilder.createDNSSubjectAltNameExt(true, \"localhost\"))\n+        clientCertificate = CertificateBuilder.newEndEntity(\n+                \"C = US, ST = Some-State, L = Some-City, O = Some-Org, OU = SSL-Client, CN = localhost\",\n+                clientKeysRsa1024.getPublic(), caKeysRsa1024.getPublic(),\n+                CertificateBuilder.createDNSSubjectAltNameExt(true, \"localhost\"))\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/IPAddressDNSIdentities.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-        serverCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        serverCertificate = CertificateBuilder.newEndEntity(\n@@ -201,1 +201,1 @@\n-        clientCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        clientCertificate = CertificateBuilder.newEndEntity(\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/Identities.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-        caCertificate = CertificateBuilder.createCACertificateBuilder(\n+        caCertificate = CertificateBuilder.newSelfSignedCA(\n@@ -77,1 +77,1 @@\n-        serverCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        serverCertificate = CertificateBuilder.newEndEntity(\n@@ -84,1 +84,1 @@\n-        clientCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        clientCertificate = CertificateBuilder.newEndEntity(\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/IdentitiesBase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-        caCertificate = CertificateBuilder.createCACertificateBuilder(\n+        caCertificate = CertificateBuilder.newSelfSignedCA(\n@@ -201,1 +201,1 @@\n-        serverCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        serverCertificate = CertificateBuilder.newEndEntity(\n","filename":"test\/jdk\/sun\/security\/ssl\/ClientHandshaker\/RSAExport.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-        caCertificate = CertificateBuilder.createCACertificateBuilder(\n+        caCertificate = CertificateBuilder.newSelfSignedCA(\n@@ -81,1 +81,0 @@\n-            .addKeyUsageExt(new boolean[]{false, false, false, false, false, true, true, false, false})\n@@ -85,1 +84,1 @@\n-        targetCert = CertificateBuilder.createClientCertificateBuilder(\n+        targetCert = CertificateBuilder.newEndEntity(\n@@ -88,1 +87,0 @@\n-            .addKeyUsageExt(new boolean[]{true, true, true, false, true, false, false, false, false})\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLContextImpl\/MD2InTrustAnchor.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,2 +54,0 @@\n-import java.util.Base64;\n-\n@@ -227,1 +225,1 @@\n-        trustedCertificate = CertificateBuilder.createCACertificateBuilder(\n+        trustedCertificate = CertificateBuilder.newSelfSignedCA(\n@@ -232,1 +230,1 @@\n-        caSignerCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        caSignerCertificate = CertificateBuilder.newEndEntity(\n@@ -240,1 +238,1 @@\n-        certIssuerCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        certIssuerCertificate = CertificateBuilder.newEndEntity(\n@@ -248,1 +246,1 @@\n-        serverCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        serverCertificate = CertificateBuilder.newEndEntity(\n@@ -251,1 +249,0 @@\n-            .addKeyUsageExt(new boolean[]{true, true, true, false, true, false, false, false, false})\n@@ -255,1 +252,1 @@\n-        clientCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        clientCertificate = CertificateBuilder.newEndEntity(\n@@ -258,1 +255,0 @@\n-            .addKeyUsageExt(new boolean[]{true, true, true, false, true, false, false, false, false})\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/BasicConstraints.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -52,4 +52,0 @@\n-import sun.security.x509.DNSName;\n-import sun.security.x509.GeneralName;\n-import sun.security.x509.GeneralNames;\n-import sun.security.x509.SubjectAlternativeNameExtension;\n@@ -293,1 +289,1 @@\n-        trustedCertificate = CertificateBuilder.createCACertificateBuilder(\n+        trustedCertificate = CertificateBuilder.newSelfSignedCA(\n@@ -297,3 +293,0 @@\n-        GeneralNames gns = new GeneralNames();\n-        gns.add(new GeneralName(new DNSName(\"localhost\")));\n-\n@@ -301,1 +294,1 @@\n-        serverCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        serverCertificate = CertificateBuilder.newEndEntity(\n@@ -304,1 +297,1 @@\n-            new SubjectAlternativeNameExtension(true, gns))\n+            CertificateBuilder.createDNSSubjectAltNameExt(true, \"localhost\"))\n@@ -308,1 +301,1 @@\n-        clientCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        clientCertificate = CertificateBuilder.newEndEntity(\n@@ -311,1 +304,1 @@\n-            new SubjectAlternativeNameExtension(true, gns))\n+            CertificateBuilder.createDNSSubjectAltNameExt(true, \"localhost\"))\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/PKIXExtendedTM.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -209,1 +209,1 @@\n-        trustedCertificate = CertificateBuilder.createCACertificateBuilder(\n+        trustedCertificate = CertificateBuilder.newSelfSignedCA(\n@@ -214,1 +214,1 @@\n-        targetCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        targetCertificate = CertificateBuilder.newEndEntity(\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/SelfIssuedCert.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,4 +48,0 @@\n-import sun.security.x509.DNSName;\n-import sun.security.x509.GeneralName;\n-import sun.security.x509.GeneralNames;\n-import sun.security.x509.SubjectAlternativeNameExtension;\n@@ -226,1 +222,1 @@\n-        trustedCertificate = CertificateBuilder.createCACertificateBuilder(\n+        trustedCertificate = CertificateBuilder.newSelfSignedCA(\n@@ -230,3 +226,0 @@\n-        GeneralNames gns = new GeneralNames();\n-        gns.add(new GeneralName(new DNSName(\"localhost\")));\n-\n@@ -234,1 +227,1 @@\n-        serverCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        serverCertificate = CertificateBuilder.newEndEntity(\n@@ -237,1 +230,1 @@\n-            new SubjectAlternativeNameExtension(true, gns))\n+            CertificateBuilder.createDNSSubjectAltNameExt(true, \"localhost\"))\n@@ -241,1 +234,1 @@\n-        clientCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        clientCertificate = CertificateBuilder.newEndEntity(\n@@ -244,1 +237,1 @@\n-            new SubjectAlternativeNameExtension(true, gns))\n+            CertificateBuilder.createDNSSubjectAltNameExt(true, \"localhost\"))\n","filename":"test\/jdk\/sun\/security\/ssl\/X509TrustManagerImpl\/SunX509ExtendedTM.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-        caCertificate = CertificateBuilder.createCACertificateBuilder(\n+        caCertificate = CertificateBuilder.newSelfSignedCA(\n@@ -122,1 +122,1 @@\n-        eeCertificate = CertificateBuilder.createClientCertificateBuilder(\n+        eeCertificate = CertificateBuilder.newEndEntity(\n","filename":"test\/jdk\/sun\/security\/x509\/URICertStore\/ExtensionsWithLDAP.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}