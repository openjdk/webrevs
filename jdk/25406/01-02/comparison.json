{"files":[{"patch":"@@ -59,8 +59,0 @@\n-\n-void G1BiasedMappedArrayBase::verify_biased_index_inclusive_end(idx_t biased_index) const {\n-  guarantee(_biased_base != nullptr, \"Array not initialized\");\n-  guarantee(biased_index >= bias() && biased_index <= (bias() + length()),\n-            \"Biased index out of inclusive bounds, index: %zu bias: %zu length: %zu\",\n-            biased_index, bias(), length());\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BiasedArray.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -92,1 +92,0 @@\n-  void verify_biased_index_inclusive_end(idx_t biased_index) const PRODUCT_RETURN;\n@@ -105,1 +104,1 @@\n-\n+protected:\n@@ -158,8 +157,0 @@\n-protected:\n-  \/\/ Returns the address of the element the given address maps to\n-  T* address_mapped_to(HeapWord* address) {\n-    idx_t biased_index = ((uintptr_t)address) >> this->shift_by();\n-    this->verify_biased_index_inclusive_end(biased_index);\n-    return biased_base() + biased_index;\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BiasedArray.hpp","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,0 +28,7 @@\n+  void verify_biased_index_inclusive_end(idx_t biased_index) const {\n+    guarantee(_biased_base != nullptr, \"Array not initialized\");\n+    guarantee(biased_index >= bias() && biased_index <= (bias() + length()),\n+              \"Biased index out of inclusive bounds, index: %zu bias: %zu length: %zu\",\n+              biased_index, bias(), length());\n+  }\n+\n@@ -32,0 +39,2 @@\n+\n+  \/\/ Returns the address of the element the given address maps to\n@@ -33,1 +42,3 @@\n-    return address_mapped_to(address);\n+    idx_t biased_index = ((uintptr_t)address) >> shift_by();\n+    verify_biased_index_inclusive_end(biased_index);\n+    return biased_base() + biased_index;\n@@ -35,0 +46,5 @@\n+\n+  int* base() const { return G1BiasedMappedArray<int>::base(); }\n+\n+  \/\/ The raw biased base pointer.\n+  int* biased_base() const { return G1BiasedMappedArray<int>::biased_base(); }\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_g1BiasedArray.cpp","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"}]}