{"files":[{"patch":"@@ -68,2 +68,5 @@\n-     * {@return the raw type of this type}  Returns a {@code Type} alone, which\n-     * is a {@link Class} in core reflection.\n+     * {@return the raw type of this type}  This is the generic class or\n+     * interface that defines this parameterized type, and applies recursively\n+     * to the {@linkplain #getOwnerType() immediately enclosing class} of this\n+     * type if there is one.  For example, if this type is {@code O<T>.I<S>},\n+     * this method returns a representation of {@code O.I}.\n@@ -71,5 +74,2 @@\n-     * This is the generic class or interface that defines this parameterized\n-     * type, and applies recursively to the {@linkplain #getOwnerType()\n-     * immediately enclosing class} of this type if there is one.  For example,\n-     * if this type is {@code O<T>.I<S>}, this method returns a representation\n-     * of {@code O.I}.\n+     * The returned object is not an instance of {@link GenericArrayType},\n+     * {@link ParameterizedType}, {@link TypeVariable}, or {@link WildcardType}.\n@@ -80,0 +80,1 @@\n+     * @see Type##alone The {@code Type} interface alone\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ParameterizedType.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"}]}