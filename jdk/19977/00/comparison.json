{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,2 +51,2 @@\n-     * Returns the potentially annotated type that this type is a member of, if\n-     * this type represents a nested type. For example, if this type is\n+     * {@return the potentially annotated type that this type is a member of, if\n+     * this type represents a nested type, or {@code null}} For example, if this type is\n@@ -56,2 +56,1 @@\n-     *     top-level class or interface, or a local or anonymous class, or\n-     *     a primitive type, or void.\n+     *     top-level or local class or interface or an anonymous class.\n@@ -59,2 +58,0 @@\n-     * @return an {@code AnnotatedType} object representing the potentially\n-     *     annotated type that this type is a member of, or {@code null}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AnnotatedParameterizedType.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,2 +53,2 @@\n-     * Returns the potentially annotated type that this type is a member of, if\n-     * this type represents a nested type. For example, if this type is\n+     * {@return the potentially annotated type that this type is a member of, if\n+     * this type represents a nested type, or {@code null}} For example, if this type is\n@@ -58,1 +58,1 @@\n-     *     top-level class or interface, or a local or anonymous class, or\n+     *     top-level or local class or interface or an anonymous class, or\n@@ -69,2 +69,0 @@\n-     * @return an {@code AnnotatedType} object representing the potentially\n-     *     annotated type that this type is a member of, or {@code null}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AnnotatedType.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,2 +79,3 @@\n-     * Returns a {@code Type} object representing the type that this type\n-     * is a member of.  For example, if this type is {@code O<T>.I<S>},\n+     * {@return a {@code Type} object representing the type that this type\n+     * is a member of, or {@code null} if this type is not a member of\n+     * another type}  For example, if this type is {@code O<T>.I<S>},\n@@ -83,1 +84,2 @@\n-     * <p>If this type is a top-level type, {@code null} is returned.\n+     * <p>If this type is a top-level or local class or interface or\n+     * an anonymous class, {@code null} is returned.\n@@ -85,3 +87,0 @@\n-     * @return a {@code Type} object representing the type that\n-     *     this type is a member of. If this type is a top-level type,\n-     *     {@code null} is returned\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ParameterizedType.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"}]}