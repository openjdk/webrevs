{"files":[{"patch":"@@ -139,1 +139,1 @@\n-                Element e = null;\n+                Element ref = null;\n@@ -155,3 +155,5 @@\n-                            e = getLinkedElement(element, linkTarget);\n-                            if (e == null) {\n-                                \/\/ TODO: diagnostic output\n+                            ref = getLinkedElement(element, linkTarget);\n+                            if (ref == null) {\n+                                messages.error(utils.getCommentHelper(element).getDocTreePath(tag),\n+                                        \"doclet.link.see.reference_not_found\",\n+                                        linkTarget);\n@@ -167,1 +169,0 @@\n-                    assert e != null;\n@@ -175,1 +176,1 @@\n-                                e,\n+                                ref,\n@@ -178,1 +179,1 @@\n-                                (key, args) -> { \/* TODO: report diagnostic *\/ },\n+                                (key, args) -> { \/* Error has already been reported above *\/ },\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/SnippetTaglet.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8266666 8281969 8319339\n+ * @bug 8266666 8281969 8319339 8338833\n@@ -209,0 +209,44 @@\n+    \/*\n+     * Make sure an error is generated for links with invalid reference.\n+     *\/\n+    @Test\n+    public void testLinkReferenceNotFound(Path base) throws Exception {\n+        Path srcDir = base.resolve(\"src\");\n+        Path outDir = base.resolve(\"out\");\n+\n+        new ClassBuilder(tb, \"pkg.A\")\n+                .setModifiers(\"public\", \"class\")\n+                .addMembers(\n+                        ClassBuilder.MethodBuilder\n+                                .parse(\"public void inline() { }\")\n+                                .setComments(\"\"\"\n+                                    First sentence.\n+                                    {@snippet :\n+                                        First line  \/\/ @link substring=\"First\" target=\"String\"\n+                                        Second line \/\/ @link substring=\"Second\" target=\"StringReader\"\n+                                    }\n+                                \"\"\"))\n+                .write(srcDir);\n+\n+        javadoc(\"-d\", outDir.toString(),\n+                \"-sourcepath\", srcDir.toString(),\n+                \"pkg\");\n+\n+        checkExit(Exit.ERROR);\n+        checkOutput(Output.OUT, false,\n+                \"\"\"\n+                        error: reference not found: String\n+                        \"\"\");\n+        checkOutput(Output.OUT, true,\n+                \"\"\"\n+                        A.java:5: error: reference not found: StringReader\n+                        \"\"\");\n+        checkOutput(\"pkg\/A.html\", true,\n+                \"\"\"\n+                        <details class=\"invalid-tag\">\n+                        <summary>invalid reference<\/summary>\n+                        <pre><code>Second<\/code><\/pre>\n+                        <\/details>\"\"\");\n+        checkNoCrashes();\n+    }\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java","additions":46,"deletions":2,"binary":false,"changes":48,"status":"modified"}]}