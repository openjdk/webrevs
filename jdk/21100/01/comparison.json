{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,4 @@\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.ListResourceBundle;\n+import java.util.Map;\n@@ -30,0 +34,2 @@\n+import static java.util.stream.Collectors.toMap;\n+import java.util.stream.Stream;\n@@ -34,4 +40,1 @@\n-        if (PLATFORM.containsKey(key)) {\n-            return PLATFORM.getString(key);\n-        }\n-        return SHARED.getString(key);\n+        return BUNDLE.getString(key);\n@@ -40,2 +43,22 @@\n-    private static final ResourceBundle SHARED = ResourceBundle.getBundle(\n-            \"jdk.jpackage.internal.resources.MainResources\");\n+    private static class MultiResourceBundle extends ListResourceBundle {\n+\n+        MultiResourceBundle(ResourceBundle... bundles) {\n+            contents = Stream.of(bundles).map(bundle -> {\n+                return bundle.keySet().stream().map(key -> {\n+                    return Map.entry(key, bundle.getObject(key));\n+                });\n+            }).flatMap(x -> x).collect(toMap(Map.Entry::getKey, Map.Entry::getValue, (o, n) -> {\n+                \/\/ Override old value with the new one\n+                return n;\n+            })).entrySet().stream().map(e -> {\n+                return new Object[]{e.getKey(), e.getValue()};\n+            }).toArray(Object[][]::new);\n+        }\n+\n+        @Override\n+        protected Object[][] getContents() {\n+            return contents;\n+        }\n+\n+        private final Object[][] contents;\n+    }\n@@ -43,1 +66,1 @@\n-    private static final ResourceBundle PLATFORM;\n+    private final static MultiResourceBundle BUNDLE;\n@@ -46,0 +69,4 @@\n+        List<String> bundleNames = new ArrayList<>();\n+\n+        bundleNames.add(\"jdk.jpackage.internal.resources.MainResources\");\n+\n@@ -47,2 +74,1 @@\n-            PLATFORM = ResourceBundle.getBundle(\n-                    \"jdk.jpackage.internal.resources.LinuxResources\");\n+            bundleNames.add(\"jdk.jpackage.internal.resources.LinuxResources\");\n@@ -50,2 +76,2 @@\n-            PLATFORM = ResourceBundle.getBundle(\n-                    \"jdk.jpackage.internal.resources.WinResources\");\n+            bundleNames.add(\"jdk.jpackage.internal.resources.WinResources\");\n+            bundleNames.add(\"jdk.jpackage.internal.resources.WinResourcesNoL10N\");\n@@ -53,2 +79,1 @@\n-            PLATFORM = ResourceBundle.getBundle(\n-                    \"jdk.jpackage.internal.resources.MacResources\");\n+            bundleNames.add(\"jdk.jpackage.internal.resources.MacResources\");\n@@ -58,0 +83,3 @@\n+\n+        BUNDLE = new MultiResourceBundle(bundleNames.stream().map(ResourceBundle::getBundle)\n+                .toArray(ResourceBundle[]::new));\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/I18N.java","additions":42,"deletions":14,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-resource.wxl-file-name=MsiInstallerStrings_en.wxl\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources.properties","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#\n@@ -26,1 +27,0 @@\n-DISABLED_WARNINGS_java += dangling-doc-comments\n@@ -28,0 +28,1 @@\n+resource.wxl-file-name=MsiInstallerStrings_en.wxl\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResourcesNoL10N.properties","additions":2,"deletions":1,"binary":false,"changes":3,"previous_filename":"make\/modules\/jdk.zipfs\/Java.gmk","status":"copied"},{"patch":"@@ -25,0 +25,1 @@\n+#\n@@ -26,1 +27,0 @@\n-DISABLED_WARNINGS_java += dangling-doc-comments\n@@ -28,0 +28,1 @@\n+resource.wxl-file-name=MsiInstallerStrings_de.wxl\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResourcesNoL10N_de.properties","additions":2,"deletions":1,"binary":false,"changes":3,"previous_filename":"make\/modules\/jdk.zipfs\/Java.gmk","status":"copied"},{"patch":"@@ -25,0 +25,1 @@\n+#\n@@ -26,1 +27,0 @@\n-DISABLED_WARNINGS_java += dangling-doc-comments\n@@ -28,0 +28,1 @@\n+resource.wxl-file-name=MsiInstallerStrings_ja.wxl\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResourcesNoL10N_ja.properties","additions":2,"deletions":1,"binary":false,"changes":3,"previous_filename":"make\/modules\/jdk.zipfs\/Java.gmk","status":"copied"},{"patch":"@@ -25,0 +25,1 @@\n+#\n@@ -26,1 +27,0 @@\n-DISABLED_WARNINGS_java += dangling-doc-comments\n@@ -28,0 +28,1 @@\n+resource.wxl-file-name=MsiInstallerStrings_zh_CN.wxl\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResourcesNoL10N_zh_CN.properties","additions":2,"deletions":1,"binary":false,"changes":3,"previous_filename":"make\/modules\/jdk.zipfs\/Java.gmk","status":"copied"},{"patch":"@@ -38,1 +38,0 @@\n-resource.wxl-file-name=MsiInstallerStrings_de.wxl\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_de.properties","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-resource.wxl-file-name=MsiInstallerStrings_ja.wxl\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_ja.properties","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-resource.wxl-file-name=MsiInstallerStrings_zh_CN.wxl\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_zh_CN.properties","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}