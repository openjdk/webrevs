{"files":[{"patch":"@@ -55,3 +55,0 @@\n-    private static final String javaBinPath =\n-            System.getProperty(\"java.home\", \".\") + File.separator + \"bin\" +\n-                    File.separator + \"java\";\n@@ -81,8 +78,0 @@\n-    private static List<String> getBasicCommand() {\n-        List<String> cmd = new ArrayList<>();\n-        cmd.add(javaBinPath);\n-        cmd.add(\"-cp\");\n-        cmd.add(System.getProperty(\"test.classes\", \".\"));\n-        return cmd;\n-    }\n-\n@@ -95,2 +84,2 @@\n-        OutputAnalyzer out = ProcessTools.executeCommand(\n-                cmd.toArray(new String[cmd.size()]));\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmd);\n+        OutputAnalyzer out = ProcessTools.executeCommand(pb);\n@@ -105,1 +94,1 @@\n-        List<String> cmd = getBasicCommand();\n+        List<String> cmd = new ArrayList<>();\n@@ -115,1 +104,1 @@\n-        testSecurity(expectedCount, setValue, getBasicCommand());\n+        testSecurity(expectedCount, setValue, new ArrayList<>());\n@@ -143,1 +132,1 @@\n-        List<String> cmd = getBasicCommand();\n+        List<String> cmd = new ArrayList<>();\n@@ -150,2 +139,1 @@\n-        try (FileOutputStream fos = new FileOutputStream(\n-                new File(javaSecurityPath))) {\n+        try (FileOutputStream fos = new FileOutputStream(javaSecurityPath)) {\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KeyProtector\/IterationCount.java","additions":6,"deletions":18,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import jdk.test.lib.Utils;\n@@ -33,0 +34,1 @@\n+import java.util.ArrayList;\n@@ -34,0 +36,1 @@\n+import java.util.Collections;\n@@ -53,0 +56,3 @@\n+    private static Path COPY_JDK_DIR = Path.of(\".\/jdk-8155246-tmpdir\");\n+    private static Path COPIED_JAVA = COPY_JDK_DIR.resolve(\"bin\", \"java\");\n+\n@@ -75,2 +81,2 @@\n-            exerciseShowSettingsSecurity(copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n-                    \"-Djava.security.debug=all\", \"-XshowSettings:security\", \"ConfigFileTest\", \"runner\");\n+            exerciseShowSettingsSecurity(buildCommand(\"-cp\", System.getProperty(\"test.classes\"),\n+                    \"-Djava.security.debug=all\", \"-XshowSettings:security\", \"ConfigFileTest\", \"runner\"));\n@@ -81,2 +87,2 @@\n-                    copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n-                    \"-Djava.security.debug=all\", \"-Djavax.net.debug=all\", \"ConfigFileTest\", \"runner\");\n+                    buildCommand(\"-cp\", System.getProperty(\"test.classes\"),\n+                    \"-Djava.security.debug=all\", \"-Djavax.net.debug=all\", \"ConfigFileTest\", \"runner\"));\n@@ -87,1 +93,1 @@\n-                    copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n+                    buildCommand(\"-cp\", System.getProperty(\"test.classes\"),\n@@ -90,1 +96,1 @@\n-                    \"ConfigFileTest\", \"runner\");\n+                    \"ConfigFileTest\", \"runner\"));\n@@ -94,1 +100,1 @@\n-                    copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n+                    buildCommand(\"-cp\", System.getProperty(\"test.classes\"),\n@@ -97,1 +103,1 @@\n-                    \"ConfigFileTest\", \"runner\");\n+                    \"ConfigFileTest\", \"runner\"));\n@@ -105,1 +111,1 @@\n-                    copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n+                    buildCommand(\"-cp\", System.getProperty(\"test.classes\"),\n@@ -107,1 +113,1 @@\n-                    \"ConfigFileTest\", \"runner\");\n+                    \"ConfigFileTest\", \"runner\"));\n@@ -112,1 +118,1 @@\n-                    copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n+                    buildCommand(\"-cp\", System.getProperty(\"test.classes\"),\n@@ -114,1 +120,1 @@\n-                    \"-Djava.security.properties==file:\/\/\/\" + extraPropsFile, \"ConfigFileTest\", \"runner\");\n+                    \"-Djava.security.properties==file:\/\/\/\" + extraPropsFile, \"ConfigFileTest\", \"runner\"));\n@@ -122,2 +128,8 @@\n-    private static void exerciseSecurity(int exitCode, String output, String... args) throws Exception {\n-        ProcessBuilder process = new ProcessBuilder(args);\n+    private static ProcessBuilder buildCommand(String... command) {\n+        ArrayList<String> args = new ArrayList<>();\n+        args.add(COPIED_JAVA.toString());\n+        Collections.addAll(args, Utils.prependTestJavaOpts(command));\n+        return new ProcessBuilder(args);\n+    }\n+\n+    private static void exerciseSecurity(int exitCode, String output, ProcessBuilder process) throws Exception {\n@@ -144,2 +156,1 @@\n-    private static void exerciseShowSettingsSecurity(String... args) throws Exception {\n-        ProcessBuilder process = new ProcessBuilder(args);\n+    private static void exerciseShowSettingsSecurity(ProcessBuilder process) throws Exception {\n","filename":"test\/jdk\/java\/security\/Security\/ConfigFileTest.java","additions":28,"deletions":17,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,0 +74,1 @@\n+        System.setProperty(\"test.noclasspath\", \"true\");\n@@ -75,1 +76,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n@@ -88,1 +89,1 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/jdk\/java\/security\/SignedJar\/SignedJarWithCustomClassLoader.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-            List<String> cmd = ProcessTools.createLimitedTestJavaProcessBuilder().command();\n+            List<String> cmd = ProcessTools.createTestJavaProcessBuilder().command();\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/ModuleName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(List.of(\n+            ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(List.of(\n","filename":"test\/jdk\/sun\/security\/provider\/KeyStore\/DKSTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,0 +70,1 @@\n+import jdk.test.lib.Utils;\n@@ -1022,8 +1023,6 @@\n-        String[] cmd = new String[args.length + 5];\n-        cmd[0] = jdkPath + \"\/bin\/java\";\n-        cmd[1] = \"-cp\";\n-        cmd[2] = TEST_CLASSES;\n-        cmd[3] = JdkUtils.class.getName();\n-        cmd[4] = method;\n-        System.arraycopy(args, 0, cmd, 5, args.length);\n-        return ProcessTools.executeCommand(cmd).getStdout();\n+        String[] cmd = new String[args.length + 2];\n+        cmd[0] = JdkUtils.class.getName();\n+        cmd[1] = method;\n+        System.arraycopy(args, 0, cmd, 2, args.length);\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(cmd);\n+        return ProcessTools.executeCommand(pb).getStdout();\n@@ -1040,2 +1039,2 @@\n-            cmd = new String[args.length + 3];\n-            System.arraycopy(args, 0, cmd, 3, args.length);\n+            String [] jvmArgs = getJvmTestOpts();\n+            cmd = new String[args.length + jvmArgs.length + 3];\n@@ -1045,0 +1044,2 @@\n+            System.arraycopy(jvmArgs,0, cmd, 3, jvmArgs.length);\n+            System.arraycopy(args, 0, cmd, 3 + jvmArgs.length, args.length);\n@@ -1053,0 +1054,6 @@\n+    private static String[] getJvmTestOpts() {\n+        return Arrays.stream(Utils.prependTestJavaOpts())\n+                .map(opt -> \"-J\" + opt)\n+                .toArray(String[]::new);\n+    }\n+\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/compatibility\/Compatibility.java","additions":18,"deletions":11,"binary":false,"changes":29,"status":"modified"}]}