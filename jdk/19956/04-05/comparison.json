{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import jdk.internal.math.DoubleToDecimal;\n@@ -30,2 +29,1 @@\n-import java.math.BigInteger;\n-import java.util.Arrays;\n+import java.text.DecimalFormatSymbols;\n@@ -33,3 +31,1 @@\n-import java.util.IllegalFormatConversionException;\n-import java.util.function.LongToIntFunction;\n-import java.util.function.ToIntFunction;\n+import java.util.Locale;\n@@ -46,0 +42,23 @@\n+    private static final Locale FAST_PATH_FORMAT_LOCALE;\n+    static {\n+        Locale locale = Locale.getDefault(Locale.Category.FORMAT);\n+\n+        boolean zero = false;\n+\n+        \/\/Avoid expensive initialization of DecimalFormatSymbols in the following languages\n+        String[] fast_path_languages = {\"en\", \"fr\", \"de\", \"it\", \"ja\", \"ko\", \"zh\"};\n+        for (String lange : fast_path_languages) {\n+            if (lange.equals(locale.getLanguage())) {\n+                zero = true;\n+                break;\n+            }\n+        }\n+\n+        if (!zero) {\n+            DecimalFormatSymbols dfs = DecimalFormatSymbols.getInstance(locale);\n+            zero = dfs.getZeroDigit() == '0';\n+        }\n+\n+        FAST_PATH_FORMAT_LOCALE = zero ? locale : null;\n+    }\n+\n@@ -88,1 +107,1 @@\n-            if (isBigInt(arg)) {\n+            if (isLong(arg)) {\n@@ -131,1 +150,1 @@\n-            if (isBigInt(arg0)) {\n+            if (isLong(arg0)) {\n@@ -141,1 +160,1 @@\n-            if (isBigInt(arg1)) {\n+            if (isLong(arg1)) {\n@@ -176,1 +195,1 @@\n-        if (isBigInt(arg)) {\n+        if (isLong(arg)) {\n@@ -179,1 +198,3 @@\n-                size = Long.stringSize(longValue);\n+                if (FAST_PATH_FORMAT_LOCALE == Locale.getDefault(Locale.Category.FORMAT)) {\n+                    size = Long.stringSize(longValue);\n+                }\n@@ -189,2 +210,5 @@\n-    private static boolean isBigInt(Object arg) {\n-        return arg instanceof Byte || arg instanceof Short || arg instanceof Integer || arg instanceof Long;\n+    private static boolean isLong(Object arg) {\n+        return arg instanceof Long\n+            || arg instanceof Integer\n+            || arg instanceof Short\n+            || arg instanceof Byte;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringFormat.java","additions":37,"deletions":13,"binary":false,"changes":50,"status":"modified"}]}