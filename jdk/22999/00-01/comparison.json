{"files":[{"patch":"@@ -390,1 +390,2 @@\n-                    while (proceed\n+                    while (\n+                        proceed\n@@ -392,1 +393,2 @@\n-                        && (current.isDone() || atLeastN > 0)) {\n+                        && (current.isDone() || atLeastN > 0)\n+                    ) {\n@@ -396,1 +398,1 @@\n-                        for(;;) {\n+                        for (;;) {\n@@ -421,1 +423,1 @@\n-                        for(var task : wip)\n+                        for (var task : wip)\n@@ -427,1 +429,1 @@\n-                            while(next.thread.isAlive()) {\n+                            while (next.thread.isAlive()) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Gatherers.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -304,1 +304,1 @@\n-    public void behavesAsExpectedWhenShortCircuited(ConcurrencyConfig cc) {\n+    public void shortCircuits(ConcurrencyConfig cc) {\n@@ -322,1 +322,1 @@\n-    public void behavesAsExpectedWhenCallerIsInterrupted(ConcurrencyConfig cc) {\n+    public void ignoresAndRestoresCallingThreadInterruption(ConcurrencyConfig cc) {\n@@ -349,1 +349,1 @@\n-    public void behavesAsExpectedWhenHeadOfLineBlocking(ConcurrencyConfig cc) {\n+    public void limitsWorkInProgressToMaxConcurrency(ConcurrencyConfig cc) {\n","filename":"test\/jdk\/java\/util\/stream\/GatherersMapConcurrentTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}