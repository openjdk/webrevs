{"files":[{"patch":"@@ -40,1 +40,3 @@\n-import static org.junit.jupiter.api.Assertions.fail;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -99,1 +101,1 @@\n-            try {\n+            final ZipException zipEx = assertThrows(ZipException.class, () -> {\n@@ -102,10 +104,5 @@\n-                fail(entryName + \" entry was expected to fail with a CRC error,\"\n-                        + \" but didn't. computed crc=\" + entry.getCrc());\n-            } catch (ZipException zex) {\n-                final String msg = zex.getMessage();\n-                if (msg != null && msg.contains(\"invalid entry CRC\")) {\n-                    System.out.println(\"got expected CRC failure for entry \" + entryName);\n-                } else {\n-                    throw zex;\n-                }\n-            }\n+            }, \"expected to fail due to CRC error but didn't, computed crc=\" + entry.getCrc());\n+            assertNotNull(zipEx.getMessage(), \"missing exception message\");\n+            assertTrue(zipEx.getMessage().contains(\"invalid entry CRC\"),\n+                    \"Expected exception message to contain 'invalid entry CRC' but was \"\n+                            + zipEx.getMessage());\n","filename":"test\/jdk\/java\/util\/zip\/ZipInputStream\/ZipInputStreamCRCCheck.java","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"}]}