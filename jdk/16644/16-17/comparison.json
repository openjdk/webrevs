{"files":[{"patch":"@@ -575,3 +575,13 @@\n-     * may reclaim an object even if values from that object's fields are still\n-     * in use, or while a method of the object is still running, so long as the\n-     * object has otherwise become unreachable.\n+     * may reclaim such an object even if values obtained from that object's\n+     * fields are still in use, so long as there is no further use of the object\n+     * itself. (From a garbage collection point of view, when an object has no\n+     * further use in this way it is\n+     * <a href=\"package-summary.html#reachability\"><em>unreachable<\/em><\/a> or\n+     * \"no longer live.\") Field <em>values<\/em> obtained from an object can\n+     * remain live even after the object (and its fields) have become\n+     * unreachable. The virtual machine, in the course of optimization, can\n+     * reorder operations of an object's method; for instance, the loading of\n+     * values from the object's fields can be moved to occur earlier. If the\n+     * object is then no longer needed, it can become unreachable and be\n+     * reclaimed, even while one of its methods is still running.\n+     * <p>\n@@ -582,1 +592,1 @@\n-     * Cleaner or finalizer. For instance, the cleanup thread could free the\n+     * Cleaner or finalizer. For instance, the cleanup thread could free a\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"}]}