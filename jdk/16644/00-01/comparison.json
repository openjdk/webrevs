{"files":[{"patch":"@@ -392,3 +392,7 @@\n-     * object, and the garbage collector will no longer enqueue this object once\n-     * the referent reaches the designated reachability level.\n-     * <p>\n+     * object, and the garbage collector will no longer clear or enqueue this\n+     * object.\n+     *\n+     * <p>When the garbage collector\n+     * clears references it does so directly, without invoking this method.\n+     *\n+     * @apiNote\n@@ -399,8 +403,3 @@\n-     * Avoid this race by ensuring the referent remains strongly-reachable until\n-     * after the call to clear(), using {@link #reachabilityFence(Object)} if necessary.\n-     *\n-     *\n-     * <p> This method is invoked only by Java code; when the garbage collector\n-     * clears references it does so directly, without invoking this method. The\n-     * {@link #enqueue} method also clears references directly, without invoking\n-     * this method.\n+     * Avoid this race by ensuring the referent remains strongly reachable until\n+     * after the call to clear(), using {@link #reachabilityFence(Object)} if\n+     * necessary.\n@@ -487,3 +486,6 @@\n-     * <p>If this reference was already enqueued (by the garbage collector, or a\n-     * previous call to {@code enqueue}), this method is <b><i>not successful<\/i><\/b>,\n-     * and returns false.\n+     * <p>If this reference is registered with a queue but not yet enqueued,\n+     * the reference is added to the queue; this method is\n+     * <b><i>successful<\/i><\/b> and returns true.\n+     * If this reference is not registered with a queue, or was already enqueued\n+     * (by the garbage collector, or a previous call to {@code enqueue}), this\n+     * method is <b><i>unnsuccessful<\/i><\/b> and returns false.\n@@ -495,1 +497,2 @@\n-     * or {@link ReferenceQueue#remove}.\n+     * or {@link ReferenceQueue#remove}. An <b><i>unsuccessful<\/i><\/b>\n+     * {@code enqueue} call has no memory consistency effects.\n@@ -497,2 +500,3 @@\n-     * <p>This method is invoked only by Java code; when the garbage collector\n-     * enqueues references it does so directly, without invoking this method.\n+     * <p>When the garbage collector\n+     * clears and enqueues references it does so directly, without invoking this\n+     * method or the {@link #clear()} method.\n@@ -504,3 +508,1 @@\n-     * reachable. That is, before the referent has reached the expected\n-     * reachability level.\n-\n+     * reachable.\n@@ -559,1 +561,3 @@\n-     * such as for objects with finalizers or that use Cleaner.\n+     * such as for objects that use finalizers or {@link Cleaner}, or code that\n+     * performs\n+     * <a href=\"{@docRoot}\/java.base\/java\/lang\/ref\/package-summary.html\">reference processing<\/a>.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":25,"deletions":21,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -183,6 +183,0 @@\n-     * @apiNote\n-     * If the returned reference was added to this queue by a call to\n-     * {@link Reference#enqueue()} instead of by the garbage collector, its\n-     * former referent (which has since been cleared) could still be strongly\n-     * reachable.\n-     *\n@@ -191,0 +185,1 @@\n+     * @see java.lang.ref.Reference#enqueue()\n@@ -210,6 +205,0 @@\n-     * @apiNote\n-     * If the returned reference was added to this queue by a call to\n-     * {@link Reference#enqueue()} instead of by the garbage collector, its\n-     * former referent (which has since been cleared) could still be strongly\n-     * reachable.\n-     *\n@@ -228,0 +217,2 @@\n+     *\n+     * @see java.lang.ref.Reference#enqueue()\n@@ -247,6 +238,0 @@\n-     * @apiNote\n-     * If the returned reference was added to this queue by a call to\n-     * {@link Reference#enqueue()} instead of by the garbage collector, its\n-     * former referent (which has since been cleared) could still be strongly\n-     * reachable.\n-     *\n@@ -255,0 +240,1 @@\n+     * @see java.lang.ref.Reference#enqueue()\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/ReferenceQueue.java","additions":4,"deletions":18,"binary":false,"changes":22,"status":"modified"}]}