{"files":[{"patch":"@@ -572,19 +572,14 @@\n-     * Reference processing or finalization may occur when the virtual machine\n-     * detects that there is no further need for an object. The garbage collector\n-     * may reclaim such an object even if values obtained from that object's\n-     * fields are still in use, so long as there is no further use of the object\n-     * itself. (From a garbage collection point of view, when an object has no\n-     * further use in this way it is\n-     * <a href=\"package-summary.html#reachability\"><em>unreachable<\/em><\/a> or\n-     * \"no longer live.\") Field <em>values<\/em> obtained from an object can\n-     * remain live even after the object (and its fields) have become\n-     * unreachable. The virtual machine, in the course of optimization, can\n-     * reorder operations of an object's method; for instance, the loading of\n-     * values from the object's fields can be moved to occur earlier. If the\n-     * object is then no longer needed, it can become unreachable and be\n-     * reclaimed, even while one of its methods is still running.\n-     * This may have surprising and undesirable effects, in particular when using\n-     * a Cleaner or finalizer for cleanup. If an object becomes unreachable while\n-     * a method of the object is running, it can lead to a race between the\n-     * program thread running the method and the cleanup thread running the\n-     * Cleaner or finalizer. For instance, the cleanup thread could free a\n+     * Reference processing or finalization can occur after an object becomes\n+     * unreachable. An object can become unreachable when the virtual machine\n+     * detects that there is no further need for the object (other than for\n+     * running a finalizer). In the course of optimization, the virtual machine\n+     * can reorder operations of an object's methods such that the object\n+     * becomes unneeded earlier than might naively be expected &mdash;\n+     * including while a method of the object is still running. For instance,\n+     * the VM can move the loading of <em>values<\/em> from the object's fields\n+     * to occur earlier. The object itself is then no longer needed and becomes\n+     * unreachable, and the method can continue running using the obtained values.\n+     * This may have surprising and undesirable effects when using a Cleaner or\n+     * finalizer for cleanup: there is a race between the\n+     * program thread running the method, and the cleanup thread running the\n+     * Cleaner or finalizer. The cleanup thread could free a\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"}]}