{"files":[{"patch":"@@ -47,1 +47,1 @@\n- * Post-mortem cleanup actions can be registered and managed by a\n+ * Post-mortem cleanup actions can also be registered and managed by a\n@@ -62,1 +62,1 @@\n- * <h3>Reachability<\/h3>\n+ * <h2>Reachability<\/h2>\n@@ -94,1 +94,1 @@\n- * <h3>Notification<\/h3>\n+ * <h2>Notification<\/h2>\n@@ -98,1 +98,1 @@\n- * object with a <em>reference queue<\/em>.\n+ * object with a {@link java.lang.ref.ReferenceQueue}.\n@@ -102,2 +102,2 @@\n- * determines that the reachability of the referent has changed to the\n- * value corresponding to the type of the reference, it will clear the\n+ * determines that the reachability of the referent has changed to correspond\n+ * with the type of the reference, it will clear the\n@@ -106,4 +106,4 @@\n- * object's change in reachability when the associated reference becomes\n- * available on the queue. The program may remove\n- * references from a queue either by polling or by blocking until a\n- * reference becomes available. Additional state needed to respond to a\n+ * referent's change in reachability when the associated reference becomes\n+ * available on the queue. The program may remove references from a queue\n+ * (that is, <em>\"dequeue\"<\/em> them) using the {@link ReferenceQueue#poll()} or\n+ * {@link ReferenceQueue#remove()} methods. Additional state needed to respond to a\n@@ -113,2 +113,0 @@\n- * Reference queues are implemented by the {@link java.lang.ref.ReferenceQueue}\n- * class.\n@@ -138,1 +136,1 @@\n- * <h3>Memory Consistency Properties<\/h3>\n+ * <h2>Memory Consistency Properties<\/h2>\n@@ -155,2 +153,1 @@\n- * the reference is removed from the queue (\"dequeued\") by {@link ReferenceQueue#poll} or\n- * {@link ReferenceQueue#remove}.<\/li>\n+ * the reference is removed from the queue (<em>dequeued<\/em>).<\/li>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/package-info.java","additions":12,"deletions":15,"binary":false,"changes":27,"status":"modified"}]}