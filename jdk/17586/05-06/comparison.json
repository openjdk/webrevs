{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+#include \"memory\/allocation.hpp\"\n@@ -125,0 +126,20 @@\n+\n+StringUtils::CommaSeparatedStringIterator::~CommaSeparatedStringIterator() {\n+  FREE_C_HEAP_ARRAY(char, _list);\n+}\n+\n+ccstrlist StringUtils::CommaSeparatedStringIterator::canonicalize(ccstrlist option_value) {\n+  char* canonicalized_list = NEW_C_HEAP_ARRAY(char, strlen(option_value) + 1, mtCompiler);\n+  int i = 0;\n+  char current;\n+  while ((current = option_value[i]) != '\\0') {\n+    if (current == '\\n' || current == ' ') {\n+      canonicalized_list[i] = ',';\n+    } else {\n+      canonicalized_list[i] = current;\n+    }\n+    i++;\n+  }\n+  canonicalized_list[i] = '\\0';\n+  return canonicalized_list;\n+}\n","filename":"src\/hotspot\/share\/utilities\/stringUtils.cpp","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -68,3 +68,1 @@\n-    ~CommaSeparatedStringIterator() {\n-      FREE_C_HEAP_ARRAY(char, _list);\n-    }\n+    ~CommaSeparatedStringIterator();\n@@ -79,15 +77,1 @@\n-    ccstrlist canonicalize(ccstrlist option_value) {\n-      char* canonicalized_list = NEW_C_HEAP_ARRAY(char, strlen(option_value) + 1, mtCompiler);\n-      int i = 0;\n-      char current;\n-      while ((current = option_value[i]) != '\\0') {\n-        if (current == '\\n' || current == ' ') {\n-          canonicalized_list[i] = ',';\n-        } else {\n-          canonicalized_list[i] = current;\n-        }\n-        i++;\n-      }\n-      canonicalized_list[i] = '\\0';\n-      return canonicalized_list;\n-    }\n+    ccstrlist canonicalize(ccstrlist option_value);\n","filename":"src\/hotspot\/share\/utilities\/stringUtils.hpp","additions":2,"deletions":18,"binary":false,"changes":20,"status":"modified"}]}