{"files":[{"patch":"@@ -1383,1 +1383,1 @@\n-  policy->record_concurrent_mark_remark_start();\n+  policy->record_pause_start_time();\n@@ -1519,1 +1519,1 @@\n-  policy->record_concurrent_mark_cleanup_start();\n+  policy->record_pause_start_time();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -183,1 +183,0 @@\n-  _cur_collection_start_sec = 0.0;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -194,1 +194,0 @@\n-  double _cur_collection_start_sec;\n@@ -370,4 +369,0 @@\n-  void record_cur_collection_start_sec(double time_ms) {\n-    _cur_collection_start_sec = time_ms;\n-  }\n-\n@@ -390,4 +385,0 @@\n-  double cur_collection_start_sec() {\n-    return _cur_collection_start_sec;\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.hpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-  _full_collection_start_sec(0.0),\n+  _cur_pause_start_sec(0.0),\n@@ -77,2 +77,0 @@\n-  _mark_remark_start_sec(0),\n-  _mark_cleanup_start_sec(0),\n@@ -575,1 +573,1 @@\n-  _full_collection_start_sec = os::elapsedTime();\n+  record_pause_start_time();\n@@ -608,1 +606,2 @@\n-  record_pause(G1GCPauseType::FullGC, _full_collection_start_sec, end_sec);\n+  double start_time_sec = cur_pause_start_sec();\n+  record_pause(G1GCPauseType::FullGC, start_time_sec, end_sec);\n@@ -653,1 +652,1 @@\n-  double mut_end_time = phase_times()->cur_collection_start_sec() * MILLIUNITS;\n+  double mut_end_time = cur_pause_start_sec() * MILLIUNITS;\n@@ -672,1 +671,1 @@\n-void G1Policy::record_young_collection_start() {\n+void G1Policy::record_pause_start_time() {\n@@ -674,0 +673,5 @@\n+  _cur_pause_start_sec = now.seconds();\n+}\n+\n+void G1Policy::record_young_collection_start() {\n+  record_pause_start_time();\n@@ -684,2 +688,0 @@\n-  phase_times()->record_cur_collection_start_sec(now.seconds());\n-\n@@ -698,4 +700,0 @@\n-void G1Policy::record_concurrent_mark_remark_start() {\n-  _mark_remark_start_sec = os::elapsedTime();\n-}\n-\n@@ -704,1 +702,2 @@\n-  double elapsed_time_ms = (end_time_sec - _mark_remark_start_sec)*1000.0;\n+  double start_time_sec = cur_pause_start_sec();\n+  double elapsed_time_ms = (end_time_sec - start_time_sec) * 1000.0;\n@@ -706,5 +705,1 @@\n-  record_pause(G1GCPauseType::Remark, _mark_remark_start_sec, end_time_sec);\n-}\n-\n-void G1Policy::record_concurrent_mark_cleanup_start() {\n-  _mark_cleanup_start_sec = os::elapsedTime();\n+  record_pause(G1GCPauseType::Remark, start_time_sec, end_time_sec);\n@@ -798,1 +793,1 @@\n-  double start_time_sec = phase_times()->cur_collection_start_sec();\n+  double start_time_sec = cur_pause_start_sec();\n@@ -1324,1 +1319,2 @@\n-  double elapsed_time_ms = (end_sec - _mark_cleanup_start_sec) * 1000.0;\n+  double start_sec = cur_pause_start_sec();\n+  double elapsed_time_ms = (end_sec - start_sec) * 1000.0;\n@@ -1327,1 +1323,1 @@\n-  record_pause(G1GCPauseType::Cleanup, _mark_cleanup_start_sec, end_sec);\n+  record_pause(G1GCPauseType::Cleanup, start_sec, end_sec);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":18,"deletions":22,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-  double _full_collection_start_sec;\n+  double _cur_pause_start_sec;\n@@ -137,0 +137,4 @@\n+  double cur_pause_start_sec() const {\n+    return _cur_pause_start_sec;\n+  }\n+\n@@ -199,5 +203,0 @@\n-  \/\/ This set of variables tracks the collector efficiency, in order to\n-  \/\/ determine whether we should initiate a new marking.\n-  double _mark_remark_start_sec;\n-  double _mark_cleanup_start_sec;\n-\n@@ -309,0 +308,1 @@\n+  void record_pause_start_time();\n@@ -319,2 +319,0 @@\n-  \/\/ Record start and end of remark.\n-  void record_concurrent_mark_remark_start();\n@@ -324,1 +322,0 @@\n-  void record_concurrent_mark_cleanup_start();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -818,1 +818,1 @@\n-  const double collection_start_time_ms = phase_times()->cur_collection_start_sec() * 1000.0;\n+  const double pause_start_time_ms = policy()->cur_pause_start_sec() * 1000.0;\n@@ -822,1 +822,1 @@\n-    double time_used_ms = os::elapsedTime() * 1000.0 - collection_start_time_ms;\n+    double time_used_ms = os::elapsedTime() * 1000.0 - pause_start_time_ms;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}