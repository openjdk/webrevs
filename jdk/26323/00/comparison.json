{"files":[{"patch":"@@ -1383,1 +1383,1 @@\n-  policy->record_concurrent_mark_remark_start();\n+  policy->record_gc_pause_start_time();\n@@ -1519,1 +1519,1 @@\n-  policy->record_concurrent_mark_cleanup_start();\n+  policy->record_gc_pause_start_time();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,1 +61,0 @@\n-  _full_collection_start_sec(0.0),\n@@ -77,2 +76,0 @@\n-  _mark_remark_start_sec(0),\n-  _mark_cleanup_start_sec(0),\n@@ -575,1 +572,1 @@\n-  _full_collection_start_sec = os::elapsedTime();\n+  record_gc_pause_start_time();\n@@ -608,1 +605,2 @@\n-  record_pause(G1GCPauseType::FullGC, _full_collection_start_sec, end_sec);\n+  double start_time_sec = phase_times()->cur_collection_start_sec();\n+  record_pause(G1GCPauseType::FullGC, start_time_sec, end_sec);\n@@ -672,1 +670,1 @@\n-void G1Policy::record_young_collection_start() {\n+void G1Policy::record_gc_pause_start_time() {\n@@ -674,0 +672,5 @@\n+  phase_times()->record_cur_collection_start_sec(now.seconds());\n+}\n+\n+void G1Policy::record_young_collection_start() {\n+  record_gc_pause_start_time();\n@@ -684,2 +687,0 @@\n-  phase_times()->record_cur_collection_start_sec(now.seconds());\n-\n@@ -698,4 +699,0 @@\n-void G1Policy::record_concurrent_mark_remark_start() {\n-  _mark_remark_start_sec = os::elapsedTime();\n-}\n-\n@@ -704,1 +701,2 @@\n-  double elapsed_time_ms = (end_time_sec - _mark_remark_start_sec)*1000.0;\n+  double start_time_sec = phase_times()->cur_collection_start_sec();\n+  double elapsed_time_ms = (end_time_sec - start_time_sec) * 1000.0;\n@@ -706,5 +704,1 @@\n-  record_pause(G1GCPauseType::Remark, _mark_remark_start_sec, end_time_sec);\n-}\n-\n-void G1Policy::record_concurrent_mark_cleanup_start() {\n-  _mark_cleanup_start_sec = os::elapsedTime();\n+  record_pause(G1GCPauseType::Remark, start_time_sec, end_time_sec);\n@@ -1324,1 +1318,2 @@\n-  double elapsed_time_ms = (end_sec - _mark_cleanup_start_sec) * 1000.0;\n+  double start_sec = phase_times()->cur_collection_start_sec();\n+  double elapsed_time_ms = (end_sec - start_sec) * 1000.0;\n@@ -1327,1 +1322,1 @@\n-  record_pause(G1GCPauseType::Cleanup, _mark_cleanup_start_sec, end_sec);\n+  record_pause(G1GCPauseType::Cleanup, start_sec, end_sec);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":15,"deletions":20,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -79,2 +79,0 @@\n-  double _full_collection_start_sec;\n-\n@@ -199,5 +197,0 @@\n-  \/\/ This set of variables tracks the collector efficiency, in order to\n-  \/\/ determine whether we should initiate a new marking.\n-  double _mark_remark_start_sec;\n-  double _mark_cleanup_start_sec;\n-\n@@ -309,0 +302,1 @@\n+  void record_gc_pause_start_time();\n@@ -319,2 +313,0 @@\n-  \/\/ Record start and end of remark.\n-  void record_concurrent_mark_remark_start();\n@@ -324,1 +316,0 @@\n-  void record_concurrent_mark_cleanup_start();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"}]}