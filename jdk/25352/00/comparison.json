{"files":[{"patch":"@@ -344,1 +344,1 @@\n-        copyLegalFiles(options.createIndex());\n+        copyLegalFiles(options.createIndex(), options.syntaxHighlight());\n@@ -360,1 +360,1 @@\n-    private void copyLegalFiles(boolean includeJQuery) throws DocletException {\n+    private void copyLegalFiles(boolean includeJQuery, boolean includeHighlightJs) throws DocletException {\n@@ -404,0 +404,3 @@\n+                    if (entry.getFileName().toString().equals(\"highlightjs.md\") && !includeHighlightJs) {\n+                        continue;\n+                    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDoclet.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,34 @@\n+## Highlight.js v11.11.1\n+\n+### Highlight.js license\n+```\n+BSD 3-Clause License\n+\n+Copyright (c) 2006, Ivan Sagalaev.\n+All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are met:\n+\n+* Redistributions of source code must retain the above copyright notice, this\n+  list of conditions and the following disclaimer.\n+\n+* Redistributions in binary form must reproduce the above copyright notice,\n+  this list of conditions and the following disclaimer in the documentation\n+  and\/or other materials provided with the distribution.\n+\n+* Neither the name of the copyright holder nor the names of its\n+  contributors may be used to endorse or promote products derived from\n+  this software without specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+```\n","filename":"src\/jdk.javadoc\/share\/legal\/highlightjs.md","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8293177 8324774\n+ * @bug 8293177 8324774 8357458\n@@ -50,1 +50,1 @@\n-    static final Pattern versionPattern = Pattern.compile(\"## ([\\\\w\\\\s]+) v(\\\\d+(\\\\.\\\\d+){1,2})\");\n+    static final Pattern versionPattern = Pattern.compile(\"## ([\\\\w\\\\s.]+) v(\\\\d+(\\\\.\\\\d+){1,2})\");\n@@ -59,1 +59,2 @@\n-            \"dejavufonts.md\", List.of(\"fonts\/dejavu.css\")\n+            \"dejavufonts.md\", List.of(\"fonts\/dejavu.css\"),\n+            \"highlightjs.md\", List.of(\"highlight.js\")\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/checkLibraryVersions\/CheckLibraryVersions.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8259530\n+ * @bug 8259530 8357458\n@@ -64,0 +64,4 @@\n+    enum HighlightKind {\n+        HIGHLIGHT, NO_HIGHLIGHT\n+    }\n+\n@@ -74,1 +78,3 @@\n-                test(base, src, legal, optionKind, indexKind);\n+                for (var highlightKind : HighlightKind.values()) {\n+                    test(base, src, legal, optionKind, indexKind, highlightKind);\n+                }\n@@ -79,3 +85,4 @@\n-    void test(Path base, Path src, Path legal, OptionKind optionKind, IndexKind indexKind) throws IOException {\n-        System.out.println(\"testing \" + optionKind + \" \" + indexKind);\n-        Path out = base.resolve(optionKind + \"-\" + indexKind).resolve(\"out\");\n+    void test(Path base, Path src, Path legal, OptionKind optionKind, IndexKind indexKind,\n+              HighlightKind highlightKind) throws IOException {\n+        System.out.println(\"testing \" + optionKind + \" \" + indexKind + \" \" + highlightKind);\n+        Path out = base.resolve(optionKind + \"-\" + indexKind + \"-\" + highlightKind).resolve(\"out\");\n@@ -90,0 +97,4 @@\n+        if (highlightKind == HighlightKind.HIGHLIGHT) {\n+            args.add(\"--syntax-highlight\");\n+        }\n+\n@@ -106,1 +117,1 @@\n-        Set<Path> expectFiles = getExpectFiles(optionKind, indexKind, legal);\n+        Set<Path> expectFiles = getExpectFiles(optionKind, indexKind, highlightKind, legal);\n@@ -131,1 +142,2 @@\n-    Set<Path> getExpectFiles(OptionKind optionKind, IndexKind indexKind, Path legal) throws IOException {\n+    Set<Path> getExpectFiles(OptionKind optionKind, IndexKind indexKind, HighlightKind highlightKind,\n+                             Path legal) throws IOException {\n@@ -137,4 +149,5 @@\n-                        switch (indexKind) {\n-                            case INDEX -> true;\n-                            case NO_INDEX -> !p.getFileName().toString().contains(\"jquery\");\n-                        });\n+                        !(indexKind == IndexKind.NO_INDEX\n+                                && p.getFileName().toString().contains(\"jquery\"))\n+                     && !(highlightKind == HighlightKind.NO_HIGHLIGHT\n+                                && p.getFileName().toString().equals(\"highlightjs.md\"))\n+                );\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLegalNotices\/TestLegalNotices.java","additions":25,"deletions":12,"binary":false,"changes":37,"status":"modified"}]}