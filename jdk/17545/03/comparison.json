{"files":[{"patch":"@@ -3877,1 +3877,0 @@\n-    assert(HugePages::thp_pagesize() > 0, \"Missing OS info\");\n@@ -3879,0 +3878,13 @@\n+    if (_large_page_size == 0) {\n+        \/\/ Older kernels won't publish the THP page size. Fall back to default static huge page size,\n+        \/\/ since that is likely to be the THP page size as well. Don't do it if the page size is considered\n+        \/\/ too large to avoid large alignment waste.\n+        log_info(pagesize) (\"Cannot determine THP page size (kernel < 4.10 ?)\");\n+        if (!HugePages::supports_static_hugepages()\n+            || HugePages::default_static_hugepage_size() > 16 * M) {\n+            warn_no_large_pages_configured();\n+            UseLargePages = UseTransparentHugePages = false;\n+            return;\n+        }\n+        _large_page_size = HugePages::default_static_hugepage_size();\n+    }\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -128,1 +128,10 @@\n-            String thpPageSizeString = buildSizeString(configuration.getThpPageSize());\n+            long thpPageSize = configuration.getThpPageSize();\n+            if (thpPageSize == 0) {\n+                thpPageSize = configuration.getStaticDefaultHugePageSize();\n+                if (thpPageSize == 0 || thpPageSize > 16 * 1024 * 1024) {\n+                    out.shouldContain(\"[info][pagesize] Large page support disabled\");\n+                    return;\n+                }\n+                thpPageSize = thpPageSize;\n+            }\n+            String thpPageSizeString = buildSizeString(thpPageSize);\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDecisionsAtVMStartup.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}