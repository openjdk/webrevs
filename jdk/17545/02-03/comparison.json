{"files":[{"patch":"@@ -3879,2 +3879,6 @@\n-        \/\/ Unknown THP page size => falback to default static hugepage size\n-        if (!HugePages::supports_static_hugepages()) {\n+        \/\/ Older kernels won't publish the THP page size. Fall back to default static huge page size,\n+        \/\/ since that is likely to be the THP page size as well. Don't do it if the page size is considered\n+        \/\/ too large to avoid large alignment waste.\n+        log_info(pagesize) (\"Cannot determine THP page size (kernel < 4.10 ?)\");\n+        if (!HugePages::supports_static_hugepages()\n+            || HugePages::default_static_hugepage_size() > 16 * M) {\n@@ -3882,1 +3886,1 @@\n-            UseLargePages = false;\n+            UseLargePages = UseTransparentHugePages = false;\n@@ -3885,1 +3889,1 @@\n-        _large_page_size = MIN2(HugePages::default_static_hugepage_size(), 16 * M);\n+        _large_page_size = HugePages::default_static_hugepage_size();\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-                if (thpPageSize == 0) {\n+                if (thpPageSize == 0 || thpPageSize > 16 * 1024 * 1024) {\n@@ -135,1 +135,1 @@\n-                thpPageSize = Math.min(thpPageSize, 16 * 1024 * 1024);\n+                thpPageSize = thpPageSize;\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDecisionsAtVMStartup.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}