{"files":[{"patch":"@@ -3818,0 +3818,14 @@\n+static void thp_pagesize_fallback() {\n+    \/\/ Older kernels won't publish the THP page size. Fall back to default static huge page size,\n+    \/\/ since that is likely to be the THP page size as well. Don't do it if the page size is considered\n+    \/\/ too large to avoid large alignment waste. If static huge page size is unknown, use educated guess.\n+    log_info(pagesize) (\"Cannot determine THP page size (kernel < 4.10 ?)\");\n+    if (HugePages::supports_static_hugepages()) {\n+        log_info(pagesize) (\"Assuming THP page size to be same as default static hugepage size (limit 16M)\");\n+        _large_page_size = MIN2(HugePages::default_static_hugepage_size(), 16 * M);\n+        return;\n+    }\n+    log_info(pagesize) (\"Assuming THP page size to be 2M\");\n+    _large_page_size = 2 * M;\n+}\n+\n@@ -3879,11 +3893,1 @@\n-        \/\/ Older kernels won't publish the THP page size. Fall back to default static huge page size,\n-        \/\/ since that is likely to be the THP page size as well. Don't do it if the page size is considered\n-        \/\/ too large to avoid large alignment waste.\n-        log_info(pagesize) (\"Cannot determine THP page size (kernel < 4.10 ?)\");\n-        if (!HugePages::supports_static_hugepages()\n-            || HugePages::default_static_hugepage_size() > 16 * M) {\n-            warn_no_large_pages_configured();\n-            UseLargePages = UseTransparentHugePages = false;\n-            return;\n-        }\n-        _large_page_size = HugePages::default_static_hugepage_size();\n+        thp_pagesize_fallback();\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -131,3 +131,4 @@\n-                if (thpPageSize == 0 || thpPageSize > 16 * 1024 * 1024) {\n-                    out.shouldContain(\"[info][pagesize] Large page support disabled\");\n-                    return;\n+                if (thpPageSize != 0) {\n+                    thpPageSize = Math.min(thpPageSize, 16 * 1024 * 1024);\n+                } else {\n+                    thpPageSize = 2 * 1024 * 1024;\n@@ -135,1 +136,0 @@\n-                thpPageSize = thpPageSize;\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDecisionsAtVMStartup.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}