{"files":[{"patch":"@@ -283,0 +283,1 @@\n+                    SET: All unique values in a comma-separated list\n@@ -289,0 +290,1 @@\n+                    none No formatting for the column\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/query\/QueryPrinter.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        p.println(\" $ jfr query --width 160 \\\"SELECT pid, path FROM SystemProcess\\\" recording.jfr\");\n+        p.println(\" $ jfr query --width 160 \\\"SELECT pid, commandLine FROM SystemProcess\\\" recording.jfr\");\n@@ -81,5 +81,4 @@\n-        p.println(\"$ jfr JFR.query \\\"COLUMN 'Method', 'Percentage'\");\n-        p.println(\"                 FORMAT default, normalized;width:10\");\n-        p.println(\"                 SELECT stackTrace.topFrame AS T, COUNT(*) AS C\");\n-        p.println(\"                 GROUP BY T\");\n-        p.println(\"                 FROM ExecutionSample ORDER BY C DESC\\\" recording.jfr\");\n+        p.println(\" $ jfr query \\\"COLUMN 'Method', 'Percentage'\");\n+        p.println(\"              FORMAT none, normalized\");\n+        p.println(\"              SELECT stackTrace.topFrame AS T, COUNT(*) AS C\");\n+        p.println(\"              FROM ExecutionSample GROUP BY T ORDER BY C DESC\\\" recording.jfr\");\n@@ -87,10 +86,10 @@\n-        p.println(\"$ jcmd <pid> JFR.query \\\"COLUMN 'Start', 'GC ID', 'Heap Before GC',\");\n-        p.println(\"                        'Heap After GC', 'Longest Pause'\");\n-        p.println(\"                        SELECT G.startTime, G.gcId, B.heapUsed,\");\n-        p.println(\"                             A.heapUsed, longestPause\");\n-        p.println(\"                        FROM GarbageCollection AS G,\");\n-        p.println(\"                             GCHeapSummary AS B,\");\n-        p.println(\"                             GCHeapSummary AS A\");\n-        p.println(\"                        WHERE B.when = 'Before GC' AND A.when = 'After GC'\");\n-        p.println(\"                        GROUP BY gcId\");\n-        p.println(\"                        ORDER BY G.startTime\\\" recording.jfr\");\n+        p.println(\" $ jfr query \\\"COLUMN 'Start', 'GC ID', 'Heap Before GC',\");\n+        p.println(\"                     'Heap After GC', 'Longest Pause'\");\n+        p.println(\"              SELECT G.startTime, G.gcId, B.heapUsed,\");\n+        p.println(\"                     A.heapUsed, longestPause\");\n+        p.println(\"              FROM GarbageCollection AS G,\");\n+        p.println(\"                   GCHeapSummary AS B,\");\n+        p.println(\"                   GCHeapSummary AS A\");\n+        p.println(\"              WHERE B.when = 'Before GC' AND A.when = 'After GC'\");\n+        p.println(\"              GROUP BY gcId\");\n+        p.println(\"              ORDER BY gcId\\\" recording.jfr\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Query.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"}]}