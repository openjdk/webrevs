{"files":[{"patch":"@@ -38,0 +38,1 @@\n+import java.util.Arrays;\n@@ -71,4 +72,6 @@\n-        runTest(true, \"-XX:MinTLABSize=100k\");\n-        \/\/ Should not succeed when explicitly specifying invalid combination.\n-        runTest(false, \"-XX:MinTLABSize=100k\", \"-XX:OldPLABSize=5k\");\n-        runTest(false, \"-XX:MinTLABSize=100k\", \"-XX:YoungPLABSize=5k\");\n+        for (String gc : Arrays.asList(\"-XX:+UseG1GC\", \"-XX:+UseParallelGC\")) {\n+            runTest(true, gc, \"-XX:MinTLABSize=100k\");\n+            \/\/ Should not succeed when explicitly specifying invalid combination.\n+            runTest(false, gc, \"-XX:MinTLABSize=100k\", \"-XX:OldPLABSize=5k\");\n+            runTest(false, gc, \"-XX:MinTLABSize=100k\", \"-XX:YoungPLABSize=5k\");\n+        }\n","filename":"test\/hotspot\/jtreg\/gc\/TestPLABAdaptToMinTLABSize.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- *      -XX:VerifyGCType=full -XX:+VerifyDuringGC -XX:+VerifyAfterGC -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *      -XX:VerifyGCType=full -XX:+VerifyDuringGC -XX:+VerifyAfterGC -XX:+WhiteBoxAPI -XX:+UseG1GC -Xbootclasspath\/a:.\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/pinnedobjs\/TestPinnedHumongousFragmentation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,2 @@\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:. -XX:+ZapUnusedHeapArea -Xlog:gc,gc+ergo+cset=trace gc.g1.pinnedobjs.TestPinnedObjectContents\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseG1GC\n+ *      -Xbootclasspath\/a:. -XX:+ZapUnusedHeapArea -Xlog:gc,gc+ergo+cset=trace gc.g1.pinnedobjs.TestPinnedObjectContents\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/pinnedobjs\/TestPinnedObjectContents.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}