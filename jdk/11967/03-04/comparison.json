{"files":[{"patch":"@@ -67,1 +67,4 @@\n-            if (!Compiler.isIntrinsicAvailable(CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION, \"com.sun.crypto.provider.CounterMode\", \"implCrypt\", byte[].class, int.class, int.class, byte[].class, int.class)) {\n+            if (!Compiler.isIntrinsicAvailable(CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION,\n+                                               \"com.sun.crypto.provider.CounterMode\", \"implCrypt\",\n+                                                byte[].class, int.class, int.class, byte[].class, int.class)\n+               ) {\n@@ -144,1 +147,2 @@\n-                        System.out.println(\"Decrypt failure (warmup, update): LEN(\" + LEN_MAX + \"), iteration (\" + i + \"), k = \" + k);\n+                        System.out.println(\"Decrypt failure (warmup, update): LEN(\" +\n+                                           LEN_MAX + \"), iteration (\" + i + \"), k = \" + k);\n@@ -155,1 +159,2 @@\n-                        System.out.println(\"Decrypt failure (warmup, update): LEN(\" + LEN_MAX + \"), iteration (\" + i + \"), k = \" + k);\n+                        System.out.println(\"Decrypt failure (warmup, update): LEN(\" +\n+                                           LEN_MAX + \"), iteration (\" + i + \"), k = \" + k);\n@@ -165,1 +170,2 @@\n-                        System.out.println(\"Decrypt failure (warmup, doFinal): LEN(\" + LEN_MAX + \"), iteration (\" + i + \"), k = \" + k);\n+                        System.out.println(\"Decrypt failure (warmup, doFinal): LEN(\" +\n+                                           LEN_MAX + \"), iteration (\" + i + \"), k = \" + k);\n@@ -199,1 +205,2 @@\n-                            System.out.println(\"Decrypt failure (update): LEN(\" + LEN + \"), iteration \" + i + \", SEG(\" + SEG + \"), SEG_INC(\" + SEG_INC + \"), k = \" + k);\n+                            System.out.println(\"Decrypt failure (update): LEN(\" + LEN + \"), iteration \" +\n+                                               i + \", SEG(\" + SEG + \"), SEG_INC(\" + SEG_INC + \"), k = \" + k);\n@@ -211,2 +218,4 @@\n-                    System.out.println(\"While decrypting the remaining \" + (LEN - ix) + \"(\" + LEN + \") bytes of CT, iteration \" + i);\n-                    System.out.println(\"Decrypt failure (doFinal): LEN(\" + LEN + \"), SEG_INC(\" + SEG_INC + \"), SEG_MAX(\" + SEG_MAX + \")\");\n+                    System.out.println(\"While decrypting the remaining \" + (LEN - ix) +\n+                                       \"(\" + LEN + \") bytes of CT, iteration \" + i);\n+                    System.out.println(\"Decrypt failure (doFinal): LEN(\" + LEN +\n+                                       \"), SEG_INC(\" + SEG_INC + \"), SEG_MAX(\" + SEG_MAX + \")\");\n@@ -238,1 +247,2 @@\n-                    System.out.format(\"encrypt\/decrypt error at index %d: got %02x, expected %02x\\n\", i, b[i] & 0xff, exp[i] & 0xff);\n+                    System.out.format(\"encrypt\/decrypt error at index %d: got %02x, expected %02x\\n\",\n+                                      i, b[i] & 0xff, exp[i] & 0xff);\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/aes\/Test8299817.java","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"}]}