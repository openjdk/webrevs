{"files":[{"patch":"@@ -87,1 +87,1 @@\n-JRT_LEAF(jfloat, SharedRuntime::frem(jfloat  x, jfloat  y))\n+JRT_LEAF(jfloat, SharedRuntime::frem(jfloat x, jfloat y))\n@@ -89,0 +89,13 @@\n+#ifdef _WIN64\n+  \/\/ 64-bit Windows on amd64 returns the wrong values for\n+  \/\/ infinity operands.\n+  union { jfloat f; juint i; } xbits, ybits;\n+  xbits.f = x;\n+  ybits.f = y;\n+  \/\/ x Mod Infinity == x unless x is infinity\n+  if (((xbits.i & float_sign_mask) != float_infinity) &&\n+       ((ybits.i & float_sign_mask) == float_infinity) ) {\n+    return x;\n+  }\n+  return ((jfloat)fmod_winx64((double)x, (double)y));\n+#else\n@@ -101,0 +114,1 @@\n+#endif\n@@ -105,1 +119,14 @@\n-\/\/ GCC since 93ba85fdd253b4b9cf2b9e54e8e5969b1a3db098 has slow fmod().\n+\/\/ GCC had slow fmod():\n+\/\/ since https:\/\/gcc.gnu.org\/git\/gitweb.cgi?p=gcc.git;h=4f2611b6e872c40e0bf4da38ff05df8c8fe0ee64\n+\/\/ until https:\/\/gcc.gnu.org\/git\/gitweb.cgi?p=gcc.git;h=8020c9c42349f51f75239b9d35a2be41848a97bd\n+#ifdef _WIN64\n+  union { jdouble d; julong l; } xbits, ybits;\n+  xbits.d = x;\n+  ybits.d = y;\n+  \/\/ x Mod Infinity == x unless x is infinity\n+  if (((xbits.l & double_sign_mask) != double_infinity) &&\n+       ((ybits.l & double_sign_mask) == double_infinity) ) {\n+    return x;\n+  }\n+  return ((jdouble)fmod_winx64((double)x, (double)y));\n+#else\n@@ -118,0 +145,1 @@\n+#endif\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86.cpp","additions":30,"deletions":2,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -237,14 +237,1 @@\n-JRT_LEAF(jfloat, SharedRuntime::frem(jfloat  x, jfloat  y))\n-#ifdef _WIN64\n-  \/\/ 64-bit Windows on amd64 returns the wrong values for\n-  \/\/ infinity operands.\n-  union { jfloat f; juint i; } xbits, ybits;\n-  xbits.f = x;\n-  ybits.f = y;\n-  \/\/ x Mod Infinity == x unless x is infinity\n-  if (((xbits.i & float_sign_mask) != float_infinity) &&\n-       ((ybits.i & float_sign_mask) == float_infinity) ) {\n-    return x;\n-  }\n-  return ((jfloat)fmod_winx64((double)x, (double)y));\n-#else\n+JRT_LEAF(jfloat, SharedRuntime::frem(jfloat x, jfloat y))\n@@ -252,1 +239,0 @@\n-#endif\n@@ -254,1 +240,0 @@\n-#endif\n@@ -256,1 +241,0 @@\n-#ifndef X86\n@@ -258,11 +242,0 @@\n-#ifdef _WIN64\n-  union { jdouble d; julong l; } xbits, ybits;\n-  xbits.d = x;\n-  ybits.d = y;\n-  \/\/ x Mod Infinity == x unless x is infinity\n-  if (((xbits.l & double_sign_mask) != double_infinity) &&\n-       ((ybits.l & double_sign_mask) == double_infinity) ) {\n-    return x;\n-  }\n-  return ((jdouble)fmod_winx64((double)x, (double)y));\n-#else\n@@ -270,1 +243,0 @@\n-#endif\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":1,"deletions":29,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -7,3 +7,1 @@\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n+ * published by the Free Software Foundation.\n@@ -43,2 +41,4 @@\n- * GCC since 93ba85fdd253b4b9cf2b9e54e8e5969b1a3db098 has slow fmod().\n- * Testcase is based on: https:\/\/stackoverflow.com\/a\/55673220\/2995591\n+ * GCC had slow fmod():\n+ * since https:\/\/gcc.gnu.org\/git\/gitweb.cgi?p=gcc.git;h=4f2611b6e872c40e0bf4da38ff05df8c8fe0ee64\n+ * until https:\/\/gcc.gnu.org\/git\/gitweb.cgi?p=gcc.git;h=8020c9c42349f51f75239b9d35a2be41848a97bd\n+ * Testcase is based on: https:\/\/github.com\/cirosantilli\/java-cheat\/blob\/c5ffd8ea19c5620ce752b6c98b2d3579be2bef98\/Nan.java\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/floatingpoint\/DremFrem.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}