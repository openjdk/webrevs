{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -267,41 +267,1 @@\n-class VM_VirtualThreadGetCurrentLocation : public VM_Operation {\n- private:\n-   Handle _vthread_h;\n-   jmethodID _method_id;\n-   int _bci;\n-   bool _completed;\n-\n- public:\n-  VM_VirtualThreadGetCurrentLocation(Handle vthread_h)\n-    : _vthread_h(vthread_h),\n-      _method_id(nullptr),\n-      _bci(0),\n-      _completed(false)\n-  {}\n-\n-  VMOp_Type type() const { return VMOp_VirtualThreadGetCurrentLocation; }\n-  void doit() {\n-    if (!JvmtiEnvBase::is_vthread_alive(_vthread_h())) {\n-      return; \/\/ _completed remains false.\n-    }\n-    ResourceMark rm;\n-    javaVFrame* jvf = JvmtiEnvBase::get_vthread_jvf(_vthread_h());\n-\n-    if (jvf != nullptr) {\n-      \/\/ jvf can be null, when the native enterSpecial frame is on the top.\n-      Method* method = jvf->method();\n-      _method_id = method->jmethod_id();\n-      _bci = jvf->bci();\n-    }\n-    _completed = true;\n-  }\n-  void get_current_location(jmethodID *method_id, int *bci) {\n-    *method_id = _method_id;\n-    *bci = _bci;\n-  }\n-  bool completed() {\n-    return _completed;\n-  }\n-};\n-\n-class GetCurrentLocationClosure : public HandshakeClosure {\n+class GetCurrentLocationClosure : public JvmtiUnitedHandshakeClosure {\n@@ -314,1 +274,1 @@\n-    : HandshakeClosure(\"GetCurrentLocation\"),\n+    : JvmtiUnitedHandshakeClosure(\"GetCurrentLocation\"),\n@@ -318,1 +278,2 @@\n-  void do_thread(Thread *target) {\n+\n+  void doit(Thread *target) {\n@@ -338,0 +299,24 @@\n+  void doit(Handle target_h) {\n+    if (!JvmtiEnvBase::is_vthread_alive(target_h())) {\n+      return; \/\/ _completed remains false.\n+    }\n+    ResourceMark rm;\n+    javaVFrame *jvf = JvmtiEnvBase::get_vthread_jvf(target_h());\n+\n+    if (jvf != nullptr) {\n+      Method* method = jvf->method();\n+      _method_id = method->jmethod_id();\n+      _bci = jvf->bci();\n+    }\n+    _completed = true;\n+  }\n+  void do_thread(Thread *target) {\n+    doit(target);\n+  }\n+  void do_vthread(Handle target_h) {\n+    if (_target_jt != nullptr) {\n+      doit(_target_jt);\n+    } else {\n+      doit(target_h);\n+    }\n+  }\n@@ -375,1 +360,0 @@\n-\n@@ -378,1 +362,10 @@\n-    oop thread_oop = jvmti_thread_state()->get_thread_oop();\n+    if (event_type == JVMTI_EVENT_SINGLE_STEP &&\n+        ((thread == nullptr && is_virtual()) || thread->has_last_Java_frame())) {\n+      JavaThread* current = JavaThread::current();\n+      HandleMark hm(current);\n+      oop thread_oop = jvmti_thread_state()->get_thread_oop();\n+      Handle thread_h(current, thread_oop);\n+      ThreadsListHandle tlh(current);\n+\n+      GetCurrentLocationClosure op;\n+      JvmtiHandshake::execute(&op, &tlh, thread, thread_h);\n@@ -380,8 +373,0 @@\n-    if (thread == nullptr && event_type == JVMTI_EVENT_SINGLE_STEP && is_virtual()) {\n-      \/\/ Handle the unmounted virtual thread case.\n-      jmethodID method_id;\n-      int bci;\n-      JavaThread* cur_thread = JavaThread::current();\n-      HandleMark hm(cur_thread);\n-      VM_VirtualThreadGetCurrentLocation op(Handle(cur_thread, thread_oop));\n-      VMThread::execute(&op);\n@@ -389,1 +374,2 @@\n-        \/\/ Do nothing if virtual thread has been already terminated.\n+        jmethodID method_id;\n+        int bci;\n@@ -393,17 +379,0 @@\n-      return;\n-    }\n-    if (event_type == JVMTI_EVENT_SINGLE_STEP && thread->has_last_Java_frame()) {\n-      jmethodID method_id;\n-      int bci;\n-      \/\/ The java thread stack may not be walkable for a running thread\n-      \/\/ so get current location with direct handshake.\n-      GetCurrentLocationClosure op;\n-      Thread *current = Thread::current();\n-      if (thread->is_handshake_safe_for(current)) {\n-        op.do_thread(thread);\n-      } else {\n-        Handshake::execute(&op, thread);\n-        guarantee(op.completed(), \"Handshake failed. Target thread is not alive?\");\n-      }\n-      op.get_current_location(&method_id, &bci);\n-      set_current_location(method_id, bci);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvThreadState.cpp","additions":41,"deletions":72,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -86,1 +86,0 @@\n-  template(VirtualThreadGetCurrentLocation)       \\\n","filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}