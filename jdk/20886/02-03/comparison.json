{"files":[{"patch":"@@ -32,1 +32,3 @@\n-import jdk.internal.util.JDKUTF;\n+\n+import static jdk.internal.util.ModifiedUtf.putChar;\n+import static jdk.internal.util.ModifiedUtf.utflen;\n@@ -365,1 +367,1 @@\n-        int utflen = JDKUTF.utflen(str, countNonZeroAscii);\n+        int utflen = utflen(str, countNonZeroAscii);\n@@ -386,1 +388,1 @@\n-            count = JDKUTF.putChar(bytearr, count, str.charAt(i++));\n+            count = putChar(bytearr, count, str.charAt(i++));\n","filename":"src\/java.base\/share\/classes\/java\/io\/DataOutputStream.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-import jdk.internal.util.JDKUTF;\n@@ -43,0 +42,3 @@\n+import static jdk.internal.util.ModifiedUtf.putChar;\n+import static jdk.internal.util.ModifiedUtf.utflen;\n+\n@@ -2014,14 +2016,0 @@\n-        void writeUTF(String str, int stroff) throws IOException {\n-            int pos = this.pos;\n-            for (int strlen = str.length(); stroff < strlen;) {\n-                char c = str.charAt(stroff++);\n-                int csize = c != 0 && c < 0x80 ? 1 : c >= 0x800 ? 3 : 2;\n-                if (pos + csize >= MAX_BLOCK_SIZE) {\n-                    drain();\n-                    pos = 0;\n-                }\n-                pos = JDKUTF.putChar(buf, pos, c);\n-            }\n-            this.pos = pos;\n-        }\n-\n@@ -2046,1 +2034,1 @@\n-        void writeUTFInternal(String str, boolean writeHeader) throws IOException {\n+        private void writeUTFInternal(String str, boolean writeHeader) throws IOException {\n@@ -2049,1 +2037,1 @@\n-            int utflen = JDKUTF.utflen(str, countNonZeroAscii);\n+            int utflen = utflen(str, countNonZeroAscii);\n@@ -2066,1 +2054,1 @@\n-                writeUTF(str, countNonZeroAscii);\n+                writeMoreUTF(str, countNonZeroAscii);\n@@ -2070,0 +2058,14 @@\n+        private void writeMoreUTF(String str, int stroff) throws IOException {\n+            int pos = this.pos;\n+            for (int strlen = str.length(); stroff < strlen;) {\n+                char c = str.charAt(stroff++);\n+                int csize = c != 0 && c < 0x80 ? 1 : c >= 0x800 ? 3 : 2;\n+                if (pos + csize >= MAX_BLOCK_SIZE) {\n+                    drain();\n+                    pos = 0;\n+                }\n+                pos = putChar(buf, pos, c);\n+            }\n+            this.pos = pos;\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -40,1 +40,3 @@\n-import jdk.internal.util.JDKUTF;\n+\n+import static jdk.internal.util.ModifiedUtf.putChar;\n+import static jdk.internal.util.ModifiedUtf.utflen;\n@@ -165,1 +167,1 @@\n-        int utflen = JDKUTF.utflen(str, countNonZeroAscii);\n+        int utflen = utflen(str, countNonZeroAscii);\n@@ -181,2 +183,2 @@\n-        for (int i = countNonZeroAscii; i < strlen;) {\n-            offset = JDKUTF.putChar(elems, offset, str.charAt(i++));\n+        for (int i = countNonZeroAscii; i < strlen; i++) {\n+            offset = putChar(elems, offset, str.charAt(i));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BufWriterImpl.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public abstract class JDKUTF {\n+public abstract class ModifiedUtf {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/ModifiedUtf.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/JDKUTF.java","status":"renamed"}]}