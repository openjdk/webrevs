{"files":[{"patch":"@@ -3685,2 +3685,1 @@\n-  slli(val, val, 2);\n-  add(val, table, val);\n+  shadd(val, val, table, val, 2);\n@@ -3756,1 +3755,1 @@\n- * @param tmp   scratch register\n+ * @param tmp   scratch registers\n@@ -3760,2 +3759,2 @@\n-        Register tmp, Register tmp2, Register tmp3, Register tmp4, Register tmp5) {\n-  assert_different_registers(crc, buf, table0, table1, table2, table3, tmp, tmp2, tmp3, tmp4, tmp5);\n+        Register tmp1, Register tmp2, Register tmp3, Register tmp4, Register tmp5) {\n+  assert_different_registers(crc, buf, table0, table1, table2, table3, tmp1, tmp2, tmp3, tmp4, tmp5);\n@@ -3772,3 +3771,3 @@\n-  add(table1, table0, 1*256*sizeof(juint), tmp);\n-  add(table2, table0, 2*256*sizeof(juint), tmp);\n-  add(table3, table2, 1*256*sizeof(juint), tmp);\n+  add(table1, table0, 1*256*sizeof(juint), tmp1);\n+  add(table2, table0, 2*256*sizeof(juint), tmp1);\n+  add(table3, table2, 1*256*sizeof(juint), tmp1);\n@@ -3783,18 +3782,1 @@\n-  bind(L_by4_loop);\n-    lwu(tmp, Address(buf));\n-    update_word_crc32(crc, tmp, tmp2, tmp4, table0, table1, table2, table3, false);\n-    subw(len, len, 4);\n-    addi(buf, buf, 4);\n-    bge(len, zr, L_by4_loop);\n-    addiw(len, len, 4);\n-    ble(len, zr, L_exit);\n-\n-  bind(L_by1_loop);\n-    subw(len, len, 1);\n-    lbu(tmp, Address(buf));\n-    update_byte_crc32(crc, tmp, table0);\n-    addi(buf, buf, 1);\n-    bgt(len, zr, L_by1_loop);\n-    j(L_exit);\n-\n-    align(CodeEntryAlignment);\n+  align(CodeEntryAlignment);\n@@ -3802,1 +3784,1 @@\n-    const Register buf_end = x30; \/\/ t5\n+    const Register buf_end = tmp3;\n@@ -3808,3 +3790,3 @@\n-      ld(tmp, Address(buf, i*wordSize));\n-      update_word_crc32(crc, tmp, tmp2, tmp4, table0, table1, table2, table3, false);\n-      update_word_crc32(crc, tmp, tmp2, tmp4, table0, table1, table2, table3, true);\n+      ld(tmp1, Address(buf, i*wordSize));\n+      update_word_crc32(crc, tmp1, tmp2, tmp4, table0, table1, table2, table3, false);\n+      update_word_crc32(crc, tmp1, tmp2, tmp4, table0, table1, table2, table3, true);\n@@ -3819,0 +3801,33 @@\n+    j(L_exit);\n+\n+  bind(L_by4_loop);\n+    lwu(tmp1, Address(buf));\n+    update_word_crc32(crc, tmp1, tmp2, tmp4, table0, table1, table2, table3, false);\n+    subw(len, len, 4);\n+    addi(buf, buf, 4);\n+    bge(len, zr, L_by4_loop);\n+    addiw(len, len, 4);\n+    ble(len, zr, L_exit);\n+\n+  bind(L_by1_loop);\n+    subw(len, len, 1);\n+    lwu(tmp1, Address(buf));\n+    andi(tmp2, tmp1, right_8_bits);\n+    update_byte_crc32(crc, tmp2, table0);\n+    ble(len, zr, L_exit);\n+\n+    subw(len, len, 1);\n+    srli(tmp2, tmp1, 8);\n+    andi(tmp2, tmp2, right_8_bits);\n+    update_byte_crc32(crc, tmp2, table0);\n+    ble(len, zr, L_exit);\n+\n+    subw(len, len, 1);\n+    srli(tmp2, tmp1, 16);\n+    andi(tmp2, tmp2, right_8_bits);\n+    update_byte_crc32(crc, tmp2, table0);\n+    ble(len, zr, L_exit);\n+\n+    srli(tmp2, tmp1, 24);\n+    andi(tmp2, tmp2, right_8_bits);\n+    update_byte_crc32(crc, tmp2, table0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":45,"deletions":30,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -1242,1 +1242,1 @@\n-        Register tmp, Register tmp2, Register tmp3, Register tmp4, Register tmp5);\n+        Register tmp1, Register tmp2, Register tmp3, Register tmp4, Register tmp5);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4655,5 +4655,5 @@\n-    const Register tmp1 = t0;\n-    const Register tmp2 = t1;\n-    const Register tmp3 = t2;\n-    const Register tmp4 = x28; \/\/ t3\n-    const Register tmp5 = x29; \/\/ t4\n+    const Register tmp1 = c_rarg7;\n+    const Register tmp2 = t2;\n+    const Register tmp3 = x28; \/\/ t3\n+    const Register tmp4 = x29; \/\/ t4\n+    const Register tmp5 = x30; \/\/ t5\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}