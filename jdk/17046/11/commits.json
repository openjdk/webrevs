[{"commit":{"message":"Use shifts instead of ands, reschedule instructions"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"95752910bf200fa532b8272688a9ec465027c019"},{"commit":{"message":"Make intrinsic Zba-exclusive"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp"}],"sha":"630ce5d3728cfb634c2c0bbfdfda1a1453e4bd2d"},{"commit":{"message":"Schedule instructions better"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"36b96465afc44017ddcdbf70eb68c85cd27fcf3c"},{"commit":{"message":"Fix crc32.h path"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubRoutines_riscv.cpp"}],"sha":"c9630e15e244dae5caf4da0f1b53aabad390ed35"},{"commit":{"message":"Use srliw to clear upper bits for 'lower' cases"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"64abc7b4499503e18608297d7658b87d554a257c"},{"commit":{"message":"Optimize last 'upper' load in update_word_crc32"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"654b25b7e5a0fa17eedbdaf3a3de66ba53c28420"},{"commit":{"message":"Move generate_updateBytesCRC32 out of COMPILER2 macro"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"d640af0e1396d9be5d6bc8aaf58285c1672b6570"},{"commit":{"message":"Move MacroAssembler methods out of COMPILER2 macro"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"}],"sha":"857dc20d10e8d8d3e16d234ef19626d431308f61"},{"commit":{"message":"Merge master"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/stubRoutines_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp"}],"sha":"f5e2c52eb2a81dee372f187f7d5f84c9942bd6d4"},{"commit":{"message":"Re-selected register for tmp's in kernel_crc32"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"b4616379badba026e29192f3f3fe4bb900f25aff"},{"commit":{"message":"Use shNadd in update_byte_crc32"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"952a6479dd1b1f49c00a3c94cd2a0e1abf72c389"},{"commit":{"message":"Optimize by1_loop"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"097fc83787520dc61e5dabe912e1be18b9223e30"},{"commit":{"message":"Fix unroll size"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"046d5530e322cde18907d66ce34199685e501849"},{"commit":{"message":"Rename constants"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"f937d7c96a0876d182f6024bec0865fc6501cf29"},{"commit":{"message":"Partially unroll loop"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"42503b769d462c02b8893833b65397090291265c"},{"commit":{"message":"Optimize loop counter in L_by16_loop"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"e0f97888fe9a4cf50bef190e4d7c30e6782347ac"},{"commit":{"message":"Use MacroAssembler::lwu instead of Assembler::lwu"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"a59481b4fce73b650c697460d74b0444c11ba1a0"},{"commit":{"message":"Save instruction when getting table3 address"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"37e095d3bff0b6c8ba6971dec03fe486cb02db6d"},{"commit":{"message":"Left note on how table elements are accessed"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"30922883a39e1af29f6a8b3a0d85a6fb5f9ec27b"},{"commit":{"message":"Fix comment for result register"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"45f02b06a8340fefcafb5becc8bdcbd58b597f77"},{"commit":{"message":"Remove unused L_by16 label"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"ad699f25e29c1fe2c450b4f62384afb3d14b0bdd"},{"commit":{"message":"Use zero_extend instead of shifts where possible"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp"}],"sha":"f7a4f0c7facae028c4fc68a4693f1c32126b3b43"},{"commit":{"message":"Use andn instead of notr + andr where possible"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"7b6886ad5953d6534cc62c8272cfc844ea543756"},{"commit":{"message":"Replace shNadd with one instruction in most cases"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"}],"sha":"8c603598cdf7c7e5ac32eb586dd72f61e5a8900a"},{"commit":{"message":"8317721: RISC-V: Implement CRC32 intrinsic"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/c1_LIRGenerator_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/stubRoutines_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/stubRoutines_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp"}],"sha":"d8d6968fecc3e12b04e47681d25c6939370c025b"}]