{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,2 @@\n+ * @library \/test\/lib\n+ * @build jtreg.SkippedException\n@@ -48,0 +50,2 @@\n+import jtreg.SkippedException;\n+\n@@ -50,0 +54,1 @@\n+    private static final String OS_NAME = System.getProperty(\"os.name\").toLowerCase();\n@@ -51,3 +56,3 @@\n-    private static final String FONT_WINDOWS = \"Myanmar Text\";\n-    private static final String FONT_LINUX = \"Padauk\";\n-    private static final String FONT_MACOS = \"Myanmar MN\";\n+    private static final String[] FONTS_WINDOWS = {\"Myanmar Text\", \"Noto Sans Myanmar\"};\n+    private static final String[] FONTS_LINUX = {\"Padauk\", \"Noto Sans Myanmar\", \"Myanmar Text\"};\n+    private static final String[] FONTS_MACOS = {\"Myanmar MN\", \"Noto Sans Myanmar\", \"Myanmar Text\"};\n@@ -55,1 +60,2 @@\n-    private static final String FONT_NAME = selectFontName();\n+    private static final String[] FONT_CANDIDATES = selectFontCandidates();\n+    private static final String FONT_NAME = selectAvailableFont();\n@@ -63,1 +69,1 @@\n-        if (FONT_NAME == null) {\n+        if (FONT_CANDIDATES == null) {\n@@ -65,1 +71,1 @@\n-            return;\n+            throw new SkippedException(\"Unsupported OS: \" + OS_NAME);\n@@ -67,3 +73,6 @@\n-        if (!fontExists()) {\n-            System.err.println(\"Required font is not installed: \" + FONT_NAME);\n-            return;\n+        if (FONT_NAME == null) {\n+            String fontList = String.join(\", \", FONT_CANDIDATES);\n+            System.err.println(\"Required font is not installed for OS: \" + OS_NAME);\n+            System.err.println(\"Checked fonts: \" + fontList);\n+            throw new SkippedException(\"Required fonts not installed for OS: \"\n+                    + OS_NAME + \". Checked fonts: \" + fontList);\n@@ -95,1 +104,0 @@\n-\n@@ -132,8 +140,7 @@\n-    private static String selectFontName() {\n-        String osName = System.getProperty(\"os.name\").toLowerCase();\n-        if (osName.contains(\"windows\")) {\n-            return FONT_WINDOWS;\n-        } else if (osName.contains(\"linux\")) {\n-            return FONT_LINUX;\n-        } else if (osName.contains(\"mac\")) {\n-            return FONT_MACOS;\n+    private static String[] selectFontCandidates() {\n+        if (OS_NAME.contains(\"windows\")) {\n+            return FONTS_WINDOWS;\n+        } else if (OS_NAME.contains(\"linux\")) {\n+            return FONTS_LINUX;\n+        } else if (OS_NAME.contains(\"mac\")) {\n+            return FONTS_MACOS;\n@@ -145,5 +152,15 @@\n-    private static boolean fontExists() {\n-        String[] fontFamilyNames = GraphicsEnvironment\n-                                   .getLocalGraphicsEnvironment()\n-                                   .getAvailableFontFamilyNames();\n-        return Arrays.asList(fontFamilyNames).contains(FONT_NAME);\n+    private static String selectAvailableFont() {\n+        if (FONT_CANDIDATES == null) {\n+            return null;\n+        }\n+        String[] installedFonts = GraphicsEnvironment\n+                .getLocalGraphicsEnvironment()\n+                .getAvailableFontFamilyNames();\n+\n+        for (String font : FONT_CANDIDATES) {\n+            if (Arrays.asList(installedFonts).contains(font)) {\n+                System.out.println(\"Using font: \" + font);\n+                return font;\n+            }\n+        }\n+        return null;\n","filename":"test\/jdk\/java\/awt\/font\/TextLayout\/MyanmarTextTest.java","additions":41,"deletions":24,"binary":false,"changes":65,"status":"modified"}]}