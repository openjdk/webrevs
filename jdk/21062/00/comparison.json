{"files":[{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4292503\n+ * @summary OutOfMemoryError with lots of Robot.createScreenCapture\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @requires (os.family == \"linux\")\n+ * @run main\/manual CreateScreenCapture\n+*\/\n+\n+import java.awt.Dialog;\n+import java.awt.Frame;\n+import java.awt.Image;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.TextArea;\n+\n+public class CreateScreenCapture {\n+\n+    static Robot robot;\n+    static Dialog dialog;\n+    static TextArea messageText;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+         This test is linux only!\n+         Once you see these instructions, run 'top' program.\n+         Watch for java process.\n+         The memory size used by this process should stop growing after several steps.\n+         Numbers of steps test is performing are displayed in output window.\n+         After 5-7 steps the size taken by the process should become stable.\n+         If this happens, then test passed otherwise test failed.\n+\n+         Small oscillations of the memory size are, however, acceptable.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        PassFailJFrame passFail = new PassFailJFrame(INSTRUCTIONS);\n+        dialog = new Dialog(new Frame(), \"Instructions\");\n+        messageText = new TextArea( \"\", 5, 80, TextArea.SCROLLBARS_BOTH);\n+        dialog.add(messageText);\n+        PassFailJFrame.addTestWindow(dialog);\n+        PassFailJFrame.positionTestWindow(dialog, PassFailJFrame.Position.HORIZONTAL);\n+        dialog.setSize(200, 300);\n+        dialog.setVisible(true);\n+        Rectangle rect = new Rectangle(0, 0, 1000, 1000);\n+        for (int i = 0; i < 100; i++) {\n+            Image image = robot.createScreenCapture(rect);\n+            image.flush();\n+            image = null;\n+            robot.delay(200);\n+            log(\"step #\"+i);\n+        }\n+        passFail.awaitAndCheck();\n+    }\n+\n+    private static void log(String messageIn) {\n+        messageText.append( messageIn + \"\\n\" );\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Robot\/CreateScreenCapture.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4374578\n+ * @summary Test robot wheel scrolling of Text\n+ * @requires (os.family == \"Windows\") | (os.family == \"linux\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual RobotScrollTest\n+*\/\n+\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.TextArea;\n+\n+public class RobotScrollTest {\n+\n+    static TextArea ta;\n+    static Robot robot;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+         0. DON'T TOUCH ANYTHING!\n+         1. This test is for Win32 and Linux only.\n+         2. Just sit back, and watch the Robot move the mouse to the TextArea.\n+         3. Once the pointer is on the text area, the Robot will use the mouse wheel\n+            to scroll the text.\n+            If the text scrolled, hit PASS, else, hit fail.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+        PassFailJFrame passFail = new PassFailJFrame(INSTRUCTIONS);\n+        createTestUI();\n+        passFail.awaitAndCheck();\n+    }\n+\n+    private static void createTestUI() {\n+        Frame f = new Frame(\"RobotScrollTest\");\n+        ta = new TextArea();\n+        for (int i = 0; i < 100; i++) {\n+            ta.append(i + \"\\n\");\n+        }\n+        f.add(ta);\n+        f.setLocation(0, 400);\n+        f.pack();\n+        PassFailJFrame.addTestWindow(f);\n+        PassFailJFrame.positionTestWindow(f, PassFailJFrame.Position.HORIZONTAL);\n+        f.setVisible(true);\n+        doTest();\n+    }\n+\n+    private static void doTest() {\n+        robot.waitForIdle();\n+        robot.delay(1000);\n+        \/\/ get loc of TextArea\n+        Point taAt = ta.getLocationOnScreen();\n+        \/\/ get bounds of button\n+        Rectangle bounds = ta.getBounds();\n+\n+        \/\/ move mouse to middle of button\n+        robot.mouseMove(taAt.x + bounds.width \/ 2,\n+                        taAt.y + bounds.height \/ 2);\n+\n+        \/\/ rotate wheel a few times\n+        for (int j = 1; j < 8; j++) {\n+            for (int k = 0; k < 5; k++) {\n+                robot.mouseWheel(j);\n+            }\n+\n+            for (int k = 0; k < 5; k++) {\n+                robot.mouseWheel(-1*j);\n+            }\n+        }\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Robot\/RobotScrollTest.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"}]}