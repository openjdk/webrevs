{"files":[{"patch":"@@ -944,32 +944,25 @@\n-      if test \"x$TOOLCHAIN_TYPE\" = xgcc || test \"x$TOOLCHAIN_TYPE\" = xclang; then\n-        AC_LANG_PUSH(C)\n-        OLD_CFLAGS=\"$CFLAGS\"\n-        CFLAGS=\"$CFLAGS -march=armv8-a+sve\"\n-        # check the compiler and binutils support sve or not\n-        AC_MSG_CHECKING([if Arm SVE ACLE is supported])\n-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-            [\n-              #include <arm_sve.h>\n-              svfloat64_t a() {}\n-            ],\n-            [\n-              svint32_t r = svdup_n_s32(1)\n-            ])],\n-            [sve_supported=yes],\n-            [sve_supported=no]\n-        )\n-        AC_MSG_RESULT([$sve_supported])\n-\n-        $2SVE_CFLAGS=\"\"\n-        if test \"x$enable_aarch64_sve\" = \"xyes\"; then\n-          # enable sve explicitly\n-          if test \"x$sve_supported\" = \"xyes\"; then\n-            $2SVE_CFLAGS=\"-march=armv8-a+sve\"\n-          else\n-            AC_MSG_ERROR([--enable-aarch64-sve=yes but compiler does not support SVE])\n-          fi\n-        elif test \"x$enable_aarch64_sve\" = \"xauto\"; then\n-          # enable sve automaticly\n-          if test \"x$sve_supported\" = \"xyes\"; then\n-            $2SVE_CFLAGS=\"-march=armv8-a+sve\"\n-          fi\n+    if test \"x$TOOLCHAIN_TYPE\" = xgcc || test \"x$TOOLCHAIN_TYPE\" = xclang; then\n+      AC_LANG_PUSH(C)\n+      OLD_CFLAGS=\"$CFLAGS\"\n+      CFLAGS=\"$CFLAGS -march=armv8-a+sve\"\n+      # check the compiler and binutils support sve or not\n+      AC_MSG_CHECKING([if Arm SVE ACLE is supported])\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+          [\n+            #include <arm_sve.h>\n+            svfloat64_t a() {}\n+          ],\n+          [\n+            svint32_t r = svdup_n_s32(1)\n+          ])],\n+          [sve_supported=yes],\n+          [sve_supported=no]\n+      )\n+      AC_MSG_RESULT([$sve_supported])\n+      $2SVE_CFLAGS=\"\"\n+      if test \"x$enable_aarch64_sve\" = \"xyes\"; then\n+        # enable sve explicitly\n+        if test \"x$sve_supported\" = \"xyes\"; then\n+          $2SVE_CFLAGS=\"-march=armv8-a+sve\"\n+        else\n+          AC_MSG_ERROR([--enable-aarch64-sve=yes but compiler does not support SVE])\n@@ -977,8 +970,4 @@\n-\n-        if test \"x$$2SVE_CFLAGS\" != \"x\" && test \"x$DEBUG_LEVEL\" != xrelease && test \"x$TOOLCHAIN_TYPE\" = xgcc ; then\n-          INIT_ZERO_FLAG=\"-ftrivial-auto-var-init=zero\"\n-          FLAGS_COMPILER_CHECK_ARGUMENTS(ARGUMENT: [$INIT_ZERO_FLAG],\n-            IF_TRUE: [\n-              $2SVE_CFLAGS=\"${$2SVE_CFLAGS} $INIT_ZERO_FLAG\"\n-            ]\n-          )\n+      elif test \"x$enable_aarch64_sve\" = \"xauto\"; then\n+        # enable sve automaticly\n+        if test \"x$sve_supported\" = \"xyes\"; then\n+          $2SVE_CFLAGS=\"-march=armv8-a+sve\"\n@@ -986,3 +975,0 @@\n-\n-        CFLAGS=\"$OLD_CFLAGS\"\n-        AC_LANG_POP(C)\n@@ -990,0 +976,11 @@\n+      if test \"x$$2SVE_CFLAGS\" != \"x\" && test \"x$DEBUG_LEVEL\" != xrelease && test \"x$TOOLCHAIN_TYPE\" = xgcc ; then\n+        INIT_ZERO_FLAG=\"-ftrivial-auto-var-init=zero\"\n+        FLAGS_COMPILER_CHECK_ARGUMENTS(ARGUMENT: [$INIT_ZERO_FLAG],\n+          IF_TRUE: [\n+            $2SVE_CFLAGS=\"${$2SVE_CFLAGS} $INIT_ZERO_FLAG\"\n+          ]\n+        )\n+      fi\n+      CFLAGS=\"$OLD_CFLAGS\"\n+      AC_LANG_POP(C)\n+    fi\n","filename":"make\/autoconf\/flags-cflags.m4","additions":40,"deletions":43,"binary":false,"changes":83,"status":"modified"}]}