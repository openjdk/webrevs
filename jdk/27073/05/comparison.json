{"files":[{"patch":"@@ -288,0 +288,3 @@\n+# Setup use of -march=armv8-a+sve when building libsleef\n+BPERF_SETUP_SVE\n+\n","filename":"make\/autoconf\/configure.ac","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -948,0 +948,1 @@\n+      # check the compiler and binutils support sve or not\n@@ -949,1 +950,1 @@\n-      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([#include <arm_sve.h>],\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n@@ -951,17 +952,2 @@\n-            svint32_t r = svdup_n_s32(1);\n-            return 0;\n-          ])],\n-          [\n-            AC_MSG_RESULT([yes])\n-            $2SVE_CFLAGS=\"-march=armv8-a+sve\"\n-            # Switching the initialization mode with gcc from 'pattern' to 'zero'\n-            # avoids the use of unsupported `__builtin_clear_padding` for variable\n-            # length aggregates\n-            if test \"x$DEBUG_LEVEL\" != xrelease && test \"x$TOOLCHAIN_TYPE\" = xgcc ; then\n-              INIT_ZERO_FLAG=\"-ftrivial-auto-var-init=zero\"\n-              FLAGS_COMPILER_CHECK_ARGUMENTS(ARGUMENT: [$INIT_ZERO_FLAG],\n-                IF_TRUE: [\n-                  $2SVE_CFLAGS=\"${$2SVE_CFLAGS} $INIT_ZERO_FLAG\"\n-                ]\n-              )\n-            fi\n+            #include <arm_sve.h>\n+            svfloat64_t a() {}\n@@ -970,3 +956,4 @@\n-            AC_MSG_RESULT([no])\n-            $2SVE_CFLAGS=\"\"\n-          ]\n+            svint32_t r = svdup_n_s32(1)\n+          ])],\n+          [sve_supported=yes],\n+          [sve_supported=no]\n@@ -974,0 +961,26 @@\n+      AC_MSG_RESULT([$sve_supported])\n+      $2SVE_CFLAGS=\"\"\n+      if test \"x$enable_aarch64_sve\" = \"xyes\"; then\n+        # enable sve explicitly\n+        if test \"x$sve_supported\" = \"xyes\"; then\n+          $2SVE_CFLAGS=\"-march=armv8-a+sve\"\n+        else\n+          AC_MSG_ERROR([--enable-aarch64-sve=yes but compiler does not support SVE])\n+        fi\n+      elif test \"x$enable_aarch64_sve\" = \"x\"; then\n+        # enable sve automaticly\n+        if test \"x$sve_supported\" = \"xyes\"; then\n+          $2SVE_CFLAGS=\"-march=armv8-a+sve\"\n+        fi\n+      fi\n+      # Switching the initialization mode with gcc from 'pattern' to 'zero'\n+      # avoids the use of unsupported `__builtin_clear_padding` for variable\n+      # length aggregates\n+      if test \"x$$2SVE_CFLAGS\" != \"x\" && test \"x$DEBUG_LEVEL\" != xrelease && test \"x$TOOLCHAIN_TYPE\" = xgcc ; then\n+        INIT_ZERO_FLAG=\"-ftrivial-auto-var-init=zero\"\n+        FLAGS_COMPILER_CHECK_ARGUMENTS(ARGUMENT: [$INIT_ZERO_FLAG],\n+          IF_TRUE: [\n+            $2SVE_CFLAGS=\"${$2SVE_CFLAGS} $INIT_ZERO_FLAG\"\n+          ]\n+        )\n+      fi\n@@ -981,0 +994,8 @@\n+AC_DEFUN([BPERF_SETUP_SVE],\n+[\n+  UTIL_ARG_ENABLE(NAME: aarch64-sve, DEFAULT: auto,\n+      RESULT: enable_aarch64_sve,\n+      DESC: [Use SVE when compile libsleef])\n+  AC_SUBST(enable_aarch64_sve)\n+])\n+\n","filename":"make\/autoconf\/flags-cflags.m4","additions":42,"deletions":21,"binary":false,"changes":63,"status":"modified"}]}