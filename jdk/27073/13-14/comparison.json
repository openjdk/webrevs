{"files":[{"patch":"@@ -118,28 +118,26 @@\n-      # Check whether the compiler supports the Arm C Language Extensions (ACLE)\n-      # for SVE. Set SVE_CFLAGS to -march=armv8-a+sve if it does.\n-      # ACLE and this flag are required to build the aarch64 SVE related functions in\n-      # libvectormath. Apple Silicon does not support SVE; use macOS as a proxy for\n-      # that check.\n-      if test \"x$TOOLCHAIN_TYPE\" = xgcc || test \"x$TOOLCHAIN_TYPE\" = xclang; then\n-        # check the compiler and binutils support sve or not\n-        AC_MSG_CHECKING([if Arm SVE ACLE is supported])\n-        AC_LANG_PUSH([C])\n-        saved_cflags=\"$CFLAGS\"\n-        saved_cc=\"$CC\"\n-        CFLAGS=\"$CFLAGS -march=armv8-a+sve $CFLAGS_WARNINGS_ARE_ERRORS ARG_ARGUMENT\"\n-        CC=\"$ARG_PREFIX[CC]\"\n-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-          [\n-            #include <arm_sve.h>\n-            svfloat64_t a() {}\n-          ],\n-          [\n-            svint32_t r = svdup_n_s32(1)\n-          ])],\n-          [AVAILABLE=yes],\n-          [AVAILABLE=no]\n-        )\n-        AC_MSG_RESULT([$AVAILABLE])\n-        CC=\"$saved_cc\"\n-        CFLAGS=\"$saved_cflags\"\n-        AC_LANG_POP([C])\n+      # Apple Silicon does not support SVE; use macOS as a proxy for that check.\n+      if test \"x$OPENJDK_TARGET_CPU\" = \"xaarch64\" && test \"x$OPENJDK_TARGET_OS\" = \"xlinux\"; then\n+        if test \"x$TOOLCHAIN_TYPE\" = xgcc || test \"x$TOOLCHAIN_TYPE\" = xclang; then\n+          # check the compiler and binutils support sve or not\n+          AC_MSG_CHECKING([if Arm SVE ACLE is supported])\n+          AC_LANG_PUSH([C])\n+          saved_cflags=\"$CFLAGS\"\n+          saved_cc=\"$CC\"\n+          CFLAGS=\"$CFLAGS -march=armv8-a+sve $CFLAGS_WARNINGS_ARE_ERRORS ARG_ARGUMENT\"\n+          CC=\"$ARG_PREFIX[CC]\"\n+          AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+            [\n+              #include <arm_sve.h>\n+              svfloat64_t a() {}\n+            ],\n+            [\n+              svint32_t r = svdup_n_s32(1)\n+            ])],\n+            [AVAILABLE=yes],\n+            [AVAILABLE=no]\n+          )\n+          AC_MSG_RESULT([$AVAILABLE])\n+          CC=\"$saved_cc\"\n+          CFLAGS=\"$saved_cflags\"\n+          AC_LANG_POP([C])\n+        fi\n","filename":"make\/autoconf\/flags-other.m4","additions":26,"deletions":28,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -377,0 +377,4 @@\n+  # Check whether the compiler supports the Arm C Language Extensions (ACLE)\n+  # for SVE. Set SVE_CFLAGS to -march=armv8-a+sve if it does.\n+  # ACLE and this flag are required to build the aarch64 SVE related functions in\n+  # libvectormath.\n@@ -378,0 +382,1 @@\n+\n","filename":"make\/autoconf\/flags.m4","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}