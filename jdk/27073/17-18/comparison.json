{"files":[{"patch":"@@ -116,0 +116,27 @@\n+  AARCH64_SVE_AVAILABLE=false\n+  # Apple Silicon does not support SVE; use macOS as a proxy for that check.\n+  if test \"x$OPENJDK_TARGET_CPU\" = \"xaarch64\" && test \"x$OPENJDK_TARGET_OS\" = \"xlinux\"; then\n+    if test \"x$TOOLCHAIN_TYPE\" = xgcc || test \"x$TOOLCHAIN_TYPE\" = xclang; then\n+      # check the compiler and binutils support sve or not\n+      AC_MSG_CHECKING([if Arm SVE ACLE is supported])\n+      AC_LANG_PUSH([C])\n+      saved_cflags=\"$CFLAGS\"\n+      CFLAGS=\"$CFLAGS -march=armv8-a+sve $CFLAGS_WARNINGS_ARE_ERRORS ARG_ARGUMENT\"\n+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+        [\n+          #include <arm_sve.h>\n+          svfloat64_t a() {}\n+        ],\n+        [\n+          svint32_t r = svdup_n_s32(1)\n+        ])],\n+        [\n+          AARCH64_SVE_AVAILABLE=true\n+        ]\n+      )\n+      CFLAGS=\"$saved_cflags\"\n+      AC_LANG_POP([C])\n+      AC_MSG_RESULT([$AARCH64_SVE_AVAILABLE])\n+    fi\n+  fi\n+\n@@ -119,32 +146,1 @@\n-    AVAILABLE: false,\n-    CHECK_AVAILABLE: [\n-      # Apple Silicon does not support SVE; use macOS as a proxy for that check.\n-      if test \"x$OPENJDK_TARGET_CPU\" = \"xaarch64\" && test \"x$OPENJDK_TARGET_OS\" = \"xlinux\"; then\n-        if test \"x$TOOLCHAIN_TYPE\" = xgcc || test \"x$TOOLCHAIN_TYPE\" = xclang; then\n-          # check the compiler and binutils support sve or not\n-          AC_MSG_CHECKING([if Arm SVE ACLE is supported])\n-          AC_LANG_PUSH([C])\n-          saved_cflags=\"$CFLAGS\"\n-          CFLAGS=\"$CFLAGS -march=armv8-a+sve $CFLAGS_WARNINGS_ARE_ERRORS ARG_ARGUMENT\"\n-          AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-            [\n-              #include <arm_sve.h>\n-              svfloat64_t a() {}\n-            ],\n-            [\n-              svint32_t r = svdup_n_s32(1)\n-            ])],\n-            [\n-              AVAILABLE=true\n-              AC_MSG_RESULT([$AVAILABLE])\n-            ],\n-            [\n-              AVAILABLE=false\n-              AC_MSG_RESULT([$AVAILABLE])\n-            ]\n-          )\n-          CFLAGS=\"$saved_cflags\"\n-          AC_LANG_POP([C])\n-        fi\n-      fi\n-    ])\n+    AVAILABLE: $AARCH64_SVE_AVAILABLE)\n","filename":"make\/autoconf\/flags-other.m4","additions":28,"deletions":32,"binary":false,"changes":60,"status":"modified"}]}