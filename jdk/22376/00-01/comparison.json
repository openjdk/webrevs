{"files":[{"patch":"@@ -1595,2 +1595,1 @@\n-    static InetAddress[] getAllByName0(String host)\n-        throws UnknownHostException  {\n+    static InetAddress[] getAllByName0(String host) throws UnknownHostException {\n","filename":"src\/java.base\/share\/classes\/java\/net\/InetAddress.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -83,12 +83,0 @@\n-    \/*\n-     * Whether or not the cache policy for successful lookups was set\n-     * using a property (cmd line).\n-     *\/\n-    private static boolean propertySet;\n-\n-    \/*\n-     * Whether or not the cache policy for negative lookups was set\n-     * using a property (cmd line).\n-     *\/\n-    private static boolean propertyNegativeSet;\n-\n@@ -105,1 +93,0 @@\n-            propertySet = true;\n@@ -112,1 +99,0 @@\n-            propertyNegativeSet = true;\n@@ -125,1 +111,0 @@\n-\n@@ -127,2 +112,1 @@\n-            String tmpString = Security.getProperty(\n-                    cachePolicyProp);\n+            String tmpString = Security.getProperty(cachePolicyProp);\n@@ -137,2 +121,1 @@\n-            String tmpString = System.getProperty(\n-                    cachePolicyPropFallback);\n+            String tmpString = System.getProperty(cachePolicyPropFallback);\n@@ -159,59 +142,0 @@\n-\n-    \/**\n-     * Sets the cache policy for successful lookups if the user has not\n-     * already specified a cache policy for it using a\n-     * command-property.\n-     * @param newPolicy the value in seconds for how long the lookup\n-     * should be cached\n-     *\/\n-    public static synchronized void setIfNotSet(int newPolicy) {\n-        \/*\n-         * When setting the new value we may want to signal that the\n-         * cache should be flushed, though this doesn't seem strictly\n-         * necessary.\n-         *\/\n-        if (!propertySet) {\n-            checkValue(newPolicy, cachePolicy);\n-            cachePolicy = newPolicy;\n-        }\n-    }\n-\n-    \/**\n-     * Sets the cache policy for negative lookups if the user has not\n-     * already specified a cache policy for it using a\n-     * command-property.\n-     * @param newPolicy the value in seconds for how long the lookup\n-     * should be cached\n-     *\/\n-    public static void setNegativeIfNotSet(int newPolicy) {\n-        \/*\n-         * When setting the new value we may want to signal that the\n-         * cache should be flushed, though this doesn't seem strictly\n-         * necessary.\n-         *\/\n-        if (!propertyNegativeSet) {\n-            \/\/ Negative caching does not seem to have any security\n-            \/\/ implications.\n-            \/\/ checkValue(newPolicy, negativeCachePolicy);\n-            \/\/ but we should normalize negative policy\n-            negativeCachePolicy = newPolicy < 0 ? FOREVER : newPolicy;\n-        }\n-    }\n-\n-    private static void checkValue(int newPolicy, int oldPolicy) {\n-        \/*\n-         * If malicious code gets a hold of this method, prevent\n-         * setting the cache policy to something laxer or some\n-         * invalid negative value.\n-         *\/\n-        if (newPolicy == FOREVER)\n-            return;\n-\n-        if ((oldPolicy == FOREVER) ||\n-            (newPolicy < oldPolicy) ||\n-            (newPolicy < FOREVER)) {\n-\n-            throw new\n-                SecurityException(\"can't make InetAddress cache more lax\");\n-        }\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/net\/InetAddressCachePolicy.java","additions":2,"deletions":78,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import sun.security.action.GetPropertyAction;\n-\n@@ -925,2 +923,2 @@\n-    private static final boolean ALLOW_AMBIGUOUS_IPADDRESS_LITERALS_SP_VALUE = Boolean.valueOf(\n-            GetPropertyAction.privilegedGetProperty(ALLOW_AMBIGUOUS_IPADDRESS_LITERALS_SP, \"false\"));\n+    private static final boolean ALLOW_AMBIGUOUS_IPADDRESS_LITERALS_SP_VALUE =\n+            Boolean.getBoolean(ALLOW_AMBIGUOUS_IPADDRESS_LITERALS_SP);\n@@ -937,2 +935,1 @@\n-            var value = GetPropertyAction.privilegedGetProperty(\n-                    DELAY_URL_PARSING_SP, \"false\");\n+            var value = System.getProperty(DELAY_URL_PARSING_SP, \"false\");\n","filename":"src\/java.base\/share\/classes\/sun\/net\/util\/IPAddressUtil.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}