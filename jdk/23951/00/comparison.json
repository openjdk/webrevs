{"files":[{"patch":"@@ -124,2 +124,1 @@\n-  \/\/ Prevent resurrection of unreachable objects that are visited during\n-  \/\/ concurrent class-unloading.\n+  \/\/ Allow resurrection of unreachable objects that are visited during concurrent class-unloading.\n@@ -127,1 +126,1 @@\n-      _heap->is_evacuation_in_progress() &&\n+      _heap->is_concurrent_weak_root_in_progress() &&\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -153,0 +153,2 @@\n+  assert(heap->is_concurrent_weak_root_in_progress(), \"Must be doing weak roots now\");\n+\n@@ -158,4 +160,9 @@\n-  \/\/ Process weak roots that might still point to regions that would be broken by cleanup\n-  if (heap->is_concurrent_weak_root_in_progress()) {\n-    entry_weak_refs();\n-    entry_weak_roots();\n+  \/\/ Process weak roots that might still point to regions that would be broken by cleanup.\n+  \/\/ We cannot recycle regions because weak roots need to know what is marked in trashed regions.\n+  entry_weak_refs();\n+  entry_weak_roots();\n+\n+  \/\/ Perform concurrent class unloading before any regions get recycled. Class unloading may\n+  \/\/ need to inspect unmarked objects in trashed regions.\n+  if (heap->unload_classes()) {\n+    entry_class_unloading();\n@@ -171,6 +178,0 @@\n-  \/\/ Perform concurrent class unloading\n-  if (heap->unload_classes() &&\n-      heap->is_concurrent_weak_root_in_progress()) {\n-    entry_class_unloading();\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1002,1 +1002,4 @@\n-    \/\/ to reference unmarked oops during concurrent classunloading.\n+    \/\/ to reference unmarked oops during concurrent classunloading. The collector also needs accurate marking\n+    \/\/ information to determine which weak handles need to be null'd out. If the region is recycled before weak\n+    \/\/ roots processing has finished, weak root processing may fail to null out a handle into a trashed region.\n+    \/\/ This turns the handle into a dangling pointer and will crash or corrupt the heap.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}