{"files":[{"patch":"@@ -81,0 +81,1 @@\n+  src_info->set_index(_objs->length()-1);\n@@ -97,0 +98,1 @@\n+  src_info->set_has_embedded_pointer();\n@@ -592,0 +594,15 @@\n+int ArchiveBuilder::compare_src_objs(SourceObjInfo** a, SourceObjInfo** b) {\n+  if ((*a)->has_embedded_pointer() && !(*b)->has_embedded_pointer()) {\n+    return 1;\n+  } else if (!(*a)->has_embedded_pointer() && (*b)->has_embedded_pointer()) {\n+    return -1;\n+  } else {\n+    return (*a)->index() - (*b)->index();\n+  }\n+}\n+\n+void ArchiveBuilder::sort_metadata_objs() {\n+  _rw_src_objs.objs()->sort(compare_src_objs);\n+  _ro_src_objs.objs()->sort(compare_src_objs);\n+}\n+\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -129,0 +129,1 @@\n+    bool _has_embedded_pointer;\n@@ -131,0 +132,1 @@\n+    int _index;              \/\/ The location of this object in _source_objs\n@@ -136,2 +138,2 @@\n-      _ptrmap_start(0), _ptrmap_end(0), _read_only(read_only), _follow_mode(follow_mode),\n-      _size_in_bytes(ref->size() * BytesPerWord), _msotype(ref->msotype()),\n+      _ptrmap_start(0), _ptrmap_end(0), _read_only(read_only), _has_embedded_pointer(false), _follow_mode(follow_mode),\n+      _size_in_bytes(ref->size() * BytesPerWord), _index(0), _msotype(ref->msotype()),\n@@ -167,0 +169,2 @@\n+    bool has_embedded_pointer() const { return _has_embedded_pointer; }\n+    void set_has_embedded_pointer()  { _has_embedded_pointer = true; }\n@@ -168,0 +172,2 @@\n+    int index()           const    { return _index; }\n+    void set_index(int i)          { _index = i; }\n@@ -387,0 +393,2 @@\n+  static int compare_src_objs(SourceObjInfo** a, SourceObjInfo** b);\n+  void sort_metadata_objs();\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.hpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -296,0 +296,2 @@\n+  st->print_cr(\"- _rw_ptrmap_start_pos:           \" SIZE_FORMAT, _rw_ptrmap_start_pos);\n+  st->print_cr(\"- _ro_ptrmap_start_pos:           \" SIZE_FORMAT, _ro_ptrmap_start_pos);\n@@ -1583,1 +1585,1 @@\n-  size_t old_size = map->size_in_bytes();\n+  size_t old_size = map->size();\n@@ -1592,2 +1594,1 @@\n-\n-  assert(map->size_in_bytes() < old_size, \"Map size should have decreased\");\n+  assert(map->size() <= old_size, \"Map size should have decreased\");\n@@ -1597,1 +1598,1 @@\n-char* FileMapInfo::write_bitmap_region(const CHeapBitMap* rw_ptrmap, const CHeapBitMap* ro_ptrmap, ArchiveHeapInfo* heap_info,\n+char* FileMapInfo::write_bitmap_region(CHeapBitMap* rw_ptrmap, CHeapBitMap* ro_ptrmap, ArchiveHeapInfo* heap_info,\n@@ -1599,0 +1600,4 @@\n+  size_t removed_rw_zeros = remove_bitmap_leading_zeros(rw_ptrmap);\n+  size_t removed_ro_zeros = remove_bitmap_leading_zeros(ro_ptrmap);\n+  header()->set_rw_ptrmap_start_pos(removed_rw_zeros);\n+  header()->set_ro_ptrmap_start_pos(removed_ro_zeros);\n@@ -1945,1 +1950,1 @@\n-    SharedDataRelocator rw_patcher((address*)rw_patch_base, (address*)rw_patch_end, valid_old_base, valid_old_end,\n+    SharedDataRelocator rw_patcher((address*)rw_patch_base + header()->rw_ptrmap_start_pos(), (address*)rw_patch_end, valid_old_base, valid_old_end,\n@@ -1947,1 +1952,1 @@\n-    SharedDataRelocator ro_patcher((address*)ro_patch_base, (address*)ro_patch_end, valid_old_base, valid_old_end,\n+    SharedDataRelocator ro_patcher((address*)ro_patch_base + header()->ro_ptrmap_start_pos(), (address*)ro_patch_end, valid_old_base, valid_old_end,\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -232,0 +232,2 @@\n+  size_t _rw_ptrmap_start_pos;          \/\/ The first bit in the ptrmap corresponds to this position in the rw region\n+  size_t _ro_ptrmap_start_pos;          \/\/ The first bit in the ptrmap corresponds to this position in the ro region\n@@ -272,2 +274,4 @@\n-  size_t heap_oopmap_start_pos()           const { return _heap_oopmap_start_pos;}\n-  size_t heap_ptrmap_start_pos()           const { return _heap_ptrmap_start_pos;}\n+  size_t heap_oopmap_start_pos()           const { return _heap_oopmap_start_pos; }\n+  size_t heap_ptrmap_start_pos()           const { return _heap_ptrmap_start_pos; }\n+  size_t rw_ptrmap_start_pos()             const { return _rw_ptrmap_start_pos; }\n+  size_t ro_ptrmap_start_pos()             const { return _ro_ptrmap_start_pos; }\n@@ -287,0 +291,2 @@\n+  void set_rw_ptrmap_start_pos(size_t n)         { _rw_ptrmap_start_pos = n; }\n+  void set_ro_ptrmap_start_pos(size_t n)         { _ro_ptrmap_start_pos = n; }\n@@ -443,1 +449,1 @@\n-  char* write_bitmap_region(const CHeapBitMap* rw_ptrmap, const CHeapBitMap* ro_ptrmap, ArchiveHeapInfo* heap_info,\n+  char* write_bitmap_region(CHeapBitMap* rw_ptrmap, CHeapBitMap* ro_ptrmap, ArchiveHeapInfo* heap_info,\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -516,0 +516,1 @@\n+  builder.sort_metadata_objs();\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}