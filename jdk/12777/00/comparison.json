{"files":[{"patch":"@@ -26,0 +26,2 @@\n+import nsk.share.Log;\n+\n@@ -60,0 +62,12 @@\n+    static final long waitTime = 2 * 60000;\n+\n+    private static final Log log = new Log(System.out);\n+\n+    static void display(String message) {\n+        log.display(message);\n+    }\n+\n+    static void complain(String message) {\n+        log.complain(message);\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/StraceBase.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -48,6 +48,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Failure;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n-\n@@ -69,2 +63,0 @@\n-    static PrintStream out;\n-    static long waitTime = 2;\n@@ -76,7 +68,0 @@\n-    static Log log;\n-\n-    public static void main(String[] args) {\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n@@ -85,7 +70,1 @@\n-\n-    public static int run(String[] args) {\n-\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n-\n+    public static void main(String[] args) {\n@@ -105,2 +84,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -109,1 +87,0 @@\n-        return 0;\n@@ -220,7 +197,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n@@ -268,1 +238,1 @@\n-                        throw new Failure(\"out of wait time\");\n+                        throw new RuntimeException(\"out of wait time\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace001.java","additions":3,"deletions":33,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -53,5 +53,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Failure;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -76,2 +71,0 @@\n-    static PrintStream out;\n-    static long waitTime = 2;\n@@ -83,7 +76,0 @@\n-    static Log log;\n-\n-    public static void main(String[] args) {\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n@@ -93,5 +79,1 @@\n-    public static int run(String[] args) {\n-\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n+    public static void main(String[] args) {\n@@ -112,2 +94,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -116,1 +97,0 @@\n-        return 0;\n@@ -162,1 +142,1 @@\n-        Map traces = Thread.getAllStackTraces();\n+        Map<Thread, StackTraceElement[]> traces = Thread.getAllStackTraces();\n@@ -164,1 +144,1 @@\n-            snapshots[i] = (StackTraceElement[]) traces.get(threads[i]);\n+            snapshots[i] = traces.get(threads[i]);\n@@ -228,9 +208,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n-\n@@ -278,1 +249,1 @@\n-                        throw new Failure(\"out of wait time\");\n+                        throw new RuntimeException(\"out of wait time\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace002.java","additions":5,"deletions":34,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -50,4 +50,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -70,2 +66,0 @@\n-    static PrintStream out;\n-    static long waitTime = 2;\n@@ -77,1 +71,0 @@\n-    static Log log;\n@@ -82,9 +75,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n@@ -105,2 +89,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -109,1 +92,0 @@\n-        return 0;\n@@ -220,8 +202,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace003.java","additions":1,"deletions":27,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -50,4 +50,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -69,1 +65,0 @@\n-\n@@ -71,2 +66,0 @@\n-    static PrintStream out;\n-    static long waitTime = 2;\n@@ -78,1 +71,0 @@\n-    static Log log;\n@@ -83,10 +75,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n-\n@@ -106,2 +88,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -110,1 +91,0 @@\n-        return 0;\n@@ -156,1 +136,1 @@\n-        Map traces = Thread.getAllStackTraces();\n+        Map<Thread, StackTraceElement[]> traces = Thread.getAllStackTraces();\n@@ -158,1 +138,1 @@\n-            snapshots[i] = (StackTraceElement[]) traces.get(threads[i]);\n+            snapshots[i] = traces.get(threads[i]);\n@@ -222,8 +202,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace004.java","additions":3,"deletions":31,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -44,60 +44,0 @@\n- * COMMENTS\n- * Below assertion is revealed on engineer's build. It is needed to check\n- * on a promoted build.\n- * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n- * waiting for all threads started ...\n- * Unexpected Signal : 11 occurred at PC=0xFDBB7820\n- * Function=[Unknown. Nearest: SUNWprivate_1.1+0x3B7820]\n- * Library=java\/vitp\/jdk\/4593133\/solaris-sparc\/jre\/lib\/sparc\/client\/libjvm.so\n- * Current Java thread:\n- *         at nsk.stress.strace.strace005Thread.recursiveMethod2(Native Method)\n- *         at nsk.stress.strace.strace005Thread.recursiveMethod1(strace005.java:285)\n- *     . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n- *         at nsk.stress.strace.strace005Thread.recursiveMethod2(Native Method)\n- *         at nsk.stress.strace.strace005Thread.recursiveMethod1(strace005.java:285)\n- *         at nsk.stress.strace.strace005Thread.recursiveMethod2(Native Method)\n- * Dynamic libraries:\n- * 0x10000         jdk\/4593133\/solaris-sparc\/bin\/java\n- * 0xff350000      \/usr\/lib\/libthread.so.1\n- * 0xff390000      \/usr\/lib\/libdl.so.1\n- * 0xff200000      \/usr\/lib\/libc.so.1\n- * 0xff330000      \/usr\/platform\/SUNW,Ultra-60\/lib\/libc_psr.so.1\n- * 0xfd800000      java\/vitp\/jdk\/4593133\/solaris-sparc\/jre\/lib\/sparc\/client\/libjvm.so\n- * 0xff2d0000      \/usr\/lib\/libCrun.so.1\n- * 0xff1d0000      \/usr\/lib\/libsocket.so.1\n- * 0xff100000      \/usr\/lib\/libnsl.so.1\n- * 0xff0d0000      \/usr\/lib\/libm.so.1\n- * 0xff0b0000      \/usr\/lib\/libsched.so.1\n- * 0xff300000      \/usr\/lib\/libw.so.1\n- * 0xff090000      \/usr\/lib\/libmp.so.2\n- * 0xff050000      java\/vitp\/jdk\/4593133\/solaris-sparc\/jre\/lib\/sparc\/native_threads\/libhpi.so\n- * 0xfd7d0000      java\/vitp\/jdk\/4593133\/solaris-sparc\/jre\/lib\/sparc\/libverify.so\n- * 0xfd790000      java\/vitp\/jdk\/4593133\/solaris-sparc\/jre\/lib\/sparc\/libjava.so\n- * 0xfe7e0000      java\/vitp\/jdk\/4593133\/solaris-sparc\/jre\/lib\/sparc\/libzip.so\n- * 0xfc6e0000      java\/vitp\/tests\/4593133\/src\/libstrace005.so\n- * Heap at VM Abort:\n- * Heap\n- *  def new generation   total 2112K, used 336K [0xf1800000, 0xf1a20000, 0xf1f10000)\n- *   eden space 2048K,  16% used [0xf1800000, 0xf1854300, 0xf1a00000)\n- *   from space 64K,   0% used [0xf1a00000, 0xf1a00000, 0xf1a10000)\n- *   to   space 64K,   0% used [0xf1a10000, 0xf1a10000, 0xf1a20000)\n- *  tenured generation   total 1408K, used 0K [0xf1f10000, 0xf2070000, 0xf5800000)\n- *    the space 1408K,   0% used [0xf1f10000, 0xf1f10000, 0xf1f10200, 0xf2070000)\n- *  compacting perm gen  total 4096K, used 1020K [0xf5800000, 0xf5c00000, 0xf9800000)\n- *    the space 4096K,  24% used [0xf5800000, 0xf58ff028, 0xf58ff200, 0xf5c00000)\n- * Local Time = Fri Apr 25 18:09:16 2003\n- * Elapsed Time = 13\n- * #\n- * # HotSpot Virtual Machine Error : 11\n- * # Error ID : src\/share\/vm\/runtime\/os.cpp, 753 [ Patched ]\n- * # Please report this error at\n- * # http:\/\/java.sun.com\/cgi-bin\/bugreport.cgi\n- * #\n- * # Java VM: Java HotSpot(TM) Client VM (1.4.1-internal-debug mixed mode)\n- * #\n- * # An error report file has been saved as hs_err_pid16847.log.\n- * # Please refer to the file for further information.\n- * #\n- * Dumping core....\n- * Abort\n- * Finished at: Fri Apr 25 18:09:17 NSK 2003\n@@ -112,5 +52,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Failure;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -134,2 +69,0 @@\n-    static PrintStream out;\n-    static long waitTime = 2;\n@@ -141,1 +74,0 @@\n-    static Log log;\n@@ -146,10 +78,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n-\n@@ -169,2 +91,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -173,1 +94,0 @@\n-        return 0;\n@@ -295,8 +215,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n@@ -357,1 +269,1 @@\n-                        throw new Failure(\"out of wait time\");\n+                        throw new RuntimeException(\"out of wait time\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace005.java","additions":2,"deletions":90,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -43,2 +43,0 @@\n- * COMMENTS\n- *     Similar assertion is thrown (see strace005.README).\n@@ -53,5 +51,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Failure;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -74,1 +67,0 @@\n-\n@@ -76,2 +68,0 @@\n-    static PrintStream out;\n-    static long waitTime = 2;\n@@ -83,1 +73,0 @@\n-    static Log log;\n@@ -88,9 +77,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n@@ -111,2 +91,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -115,1 +94,0 @@\n-        return 0;\n@@ -176,1 +154,1 @@\n-        Map traces = Thread.getAllStackTraces();\n+        Map<Thread, StackTraceElement[]> traces = Thread.getAllStackTraces();\n@@ -178,1 +156,1 @@\n-            snapshots[i] = (StackTraceElement[]) traces.get(threads[i]);\n+            snapshots[i] = traces.get(threads[i]);\n@@ -239,8 +217,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n@@ -301,1 +271,1 @@\n-                        throw new Failure(\"out of wait time\");\n+                        throw new RuntimeException(\"out of wait time\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace006.java","additions":4,"deletions":34,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -51,4 +51,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -69,4 +65,0 @@\n-\n-    static PrintStream out;\n-    static long waitTime = 2;\n-\n@@ -76,1 +68,0 @@\n-    static Log log;\n@@ -81,9 +72,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n@@ -100,2 +82,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -105,1 +86,0 @@\n-        return 0;\n@@ -135,2 +115,2 @@\n-        Map traces = Thread.getAllStackTraces();\n-        int count = ((StackTraceElement[]) traces.get(threads[0])).length;\n+        Map<Thread, StackTraceElement[]> traces = Thread.getAllStackTraces();\n+        int count = traces.get(threads[0]).length;\n@@ -147,1 +127,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -161,1 +141,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -209,8 +189,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace007.java","additions":5,"deletions":33,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -54,4 +54,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -75,3 +71,0 @@\n-\n-    static long waitTime = 2;\n-\n@@ -81,2 +74,0 @@\n-    static PrintStream out;\n-    static Log log;\n@@ -87,11 +78,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n-\n-        boolean res = true;\n@@ -101,1 +81,1 @@\n-        res = makeSnapshot();\n+        boolean res = makeSnapshot();\n@@ -106,2 +86,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -111,1 +90,0 @@\n-        return 0;\n@@ -141,2 +119,2 @@\n-        Map traces = Thread.getAllStackTraces();\n-        int count = ((StackTraceElement[]) traces.get(threads[0])).length;\n+        Map<Thread, StackTraceElement[]> traces = Thread.getAllStackTraces();\n+        int count = traces.get(threads[0]).length;\n@@ -153,1 +131,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -167,1 +145,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -199,1 +177,0 @@\n-\n@@ -216,8 +193,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace008.java","additions":6,"deletions":37,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -53,4 +53,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -73,3 +69,0 @@\n-\n-    static long waitTime = 2;\n-\n@@ -79,2 +72,0 @@\n-    static PrintStream out;\n-    static Log log;\n@@ -85,9 +76,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n@@ -104,2 +86,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -109,1 +90,0 @@\n-        return 0;\n@@ -139,2 +119,2 @@\n-        Map traces = Thread.getAllStackTraces();\n-        int count = ((StackTraceElement[]) traces.get(threads[0])).length;\n+        Map<Thread, StackTraceElement[]> traces = Thread.getAllStackTraces();\n+        int count = traces.get(threads[0]).length;\n@@ -151,1 +131,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -165,1 +145,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -213,8 +193,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace009.java","additions":5,"deletions":33,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -50,5 +50,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Failure;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -68,5 +63,0 @@\n-\n-\n-    static PrintStream out;\n-    static long waitTime = 2;\n-\n@@ -78,1 +68,0 @@\n-    static Log log;\n@@ -81,9 +70,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n@@ -101,2 +81,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -106,1 +85,0 @@\n-        return 0;\n@@ -140,4 +118,3 @@\n-        Map traces = null;\n-        int count = 0;\n-        StackTraceElement[][] elements = null;\n-\n+        Map<Thread, StackTraceElement[]> traces;\n+        int count;\n+        StackTraceElement[][] elements;\n@@ -155,1 +132,1 @@\n-            count = ((StackTraceElement[]) traces.get(threads[0])).length;\n+            count = traces.get(threads[0]).length;\n@@ -170,1 +147,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -184,1 +161,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -231,8 +208,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n@@ -285,1 +254,1 @@\n-                        throw new Failure(\"out of wait time\");\n+                        throw new RuntimeException(\"out of wait time\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace010.java","additions":8,"deletions":39,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -52,4 +52,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -71,4 +67,0 @@\n-\n-    static PrintStream out;\n-    static long waitTime = 2;\n-\n@@ -80,1 +72,0 @@\n-    static Log log;\n@@ -83,9 +74,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n@@ -94,1 +76,0 @@\n-        boolean res = true;\n@@ -98,1 +79,1 @@\n-        res = test.makeSnapshot();\n+        boolean res = test.makeSnapshot();\n@@ -103,2 +84,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -108,1 +88,0 @@\n-        return 0;\n@@ -142,3 +121,3 @@\n-        Map traces = null;\n-        int count = 0;\n-        StackTraceElement[][] elements = null;\n+        Map<Thread, StackTraceElement[]> traces;\n+        int count;\n+        StackTraceElement[][] elements;\n@@ -157,1 +136,1 @@\n-            count = ((StackTraceElement[]) traces.get(threads[0])).length;\n+            count = traces.get(threads[0]).length;\n@@ -172,1 +151,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -186,1 +165,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -233,8 +212,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace011.java","additions":8,"deletions":37,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -54,5 +54,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Failure;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -73,4 +68,0 @@\n-\n-    static PrintStream out;\n-    static long waitTime = 2;\n-\n@@ -82,1 +73,0 @@\n-    static Log log;\n@@ -85,9 +75,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n@@ -105,2 +86,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -110,1 +90,0 @@\n-        return 0;\n@@ -144,3 +123,3 @@\n-        Map traces = null;\n-        int count = 0;\n-        StackTraceElement[][] elements = null;\n+        Map<Thread, StackTraceElement[]> traces;\n+        int count;\n+        StackTraceElement[][] elements;\n@@ -159,1 +138,1 @@\n-            count = ((StackTraceElement[]) traces.get(threads[0])).length;\n+            count = traces.get(threads[0]).length;\n@@ -174,1 +153,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -188,1 +167,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -235,8 +214,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n@@ -296,1 +267,1 @@\n-                        throw new Failure(\"out of wait time\");\n+                        throw new RuntimeException(\"out of wait time\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace012.java","additions":8,"deletions":37,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -46,4 +46,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -64,4 +60,0 @@\n-\n-    static PrintStream out;\n-    static long waitTime = 2;\n-\n@@ -72,1 +64,0 @@\n-    static Log log;\n@@ -75,10 +66,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n-\n@@ -95,2 +76,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -100,1 +80,0 @@\n-        return 0;\n@@ -133,5 +112,0 @@\n-\n-        Map traces = null;\n-        int count = 0;\n-        StackTraceElement[][] elements = null;\n-\n@@ -139,2 +113,2 @@\n-        traces = Thread.getAllStackTraces();\n-        count = ((StackTraceElement[]) traces.get(threads[0])).length;\n+        Map<Thread, StackTraceElement[]> traces = Thread.getAllStackTraces();\n+        int count = traces.get(threads[0]).length;\n@@ -143,1 +117,1 @@\n-        elements = new StackTraceElement[THRD_COUNT][];\n+        StackTraceElement[][] elements = new StackTraceElement[THRD_COUNT][];\n@@ -158,1 +132,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -172,1 +146,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -218,8 +192,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace013.java","additions":6,"deletions":40,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -52,4 +52,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -70,3 +66,0 @@\n-    static PrintStream out;\n-    static long waitTime = 2;\n-\n@@ -78,1 +71,0 @@\n-    static Log log;\n@@ -81,10 +73,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n-\n@@ -101,2 +83,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -106,1 +87,0 @@\n-        return 0;\n@@ -140,4 +120,0 @@\n-        Map traces = null;\n-        int count = 0;\n-        StackTraceElement[][] elements = null;\n-\n@@ -145,2 +121,2 @@\n-        traces = Thread.getAllStackTraces();\n-        count = ((StackTraceElement[]) traces.get(threads[0])).length;\n+        Map<Thread, StackTraceElement[]> traces = Thread.getAllStackTraces();\n+        int count = traces.get(threads[0]).length;\n@@ -149,1 +125,1 @@\n-        elements = new StackTraceElement[THRD_COUNT][];\n+        StackTraceElement[][] elements = new StackTraceElement[THRD_COUNT][];\n@@ -166,1 +142,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -180,1 +156,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -225,9 +201,0 @@\n-\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace014.java","additions":6,"deletions":39,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -54,4 +54,0 @@\n-import nsk.share.ArgumentParser;\n-import nsk.share.Log;\n-\n-import java.io.PrintStream;\n@@ -72,3 +68,0 @@\n-    static PrintStream out;\n-    static long waitTime = 2;\n-\n@@ -79,1 +72,0 @@\n-    static Log log;\n@@ -82,10 +74,0 @@\n-        out = System.out;\n-        int exitCode = run(args);\n-        System.exit(exitCode + 95);\n-    }\n-\n-    public static int run(String[] args) {\n-        ArgumentParser argHandler = new ArgumentParser(args);\n-        log = new Log(out, argHandler);\n-        waitTime = argHandler.getWaitTime() * 60000;\n-\n@@ -93,1 +75,0 @@\n-        boolean res = true;\n@@ -97,1 +78,1 @@\n-        res = test.makeSnapshot();\n+        boolean res = test.makeSnapshot();\n@@ -102,2 +83,1 @@\n-            complain(\"***>>>Test failed<<<***\");\n-            return 2;\n+            new RuntimeException(\"***>>>Test failed<<<***\");\n@@ -107,1 +87,0 @@\n-        return 0;\n@@ -141,4 +120,0 @@\n-        Map traces = null;\n-        int count = 0;\n-        StackTraceElement[][] elements = null;\n-\n@@ -146,2 +121,2 @@\n-        traces = Thread.getAllStackTraces();\n-        count = ((StackTraceElement[]) traces.get(threads[0])).length;\n+        Map<Thread, StackTraceElement[]> traces = Thread.getAllStackTraces();\n+        int count = traces.get(threads[0]).length;\n@@ -150,1 +125,1 @@\n-        elements = new StackTraceElement[THRD_COUNT][];\n+        StackTraceElement[][] elements = new StackTraceElement[THRD_COUNT][];\n@@ -165,1 +140,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -179,1 +154,1 @@\n-            all = (StackTraceElement[]) traces.get(threads[i]);\n+            all = traces.get(threads[i]);\n@@ -225,8 +200,0 @@\n-    static void display(String message) {\n-        log.display(message);\n-    }\n-\n-    static void complain(String message) {\n-        log.complain(message);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/stress\/strace\/strace015.java","additions":7,"deletions":40,"binary":false,"changes":47,"status":"modified"}]}