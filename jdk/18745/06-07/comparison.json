{"files":[{"patch":"@@ -2055,1 +2055,0 @@\n-                        MEMFLAGS flag,\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -3772,1 +3772,1 @@\n-                          \"cannot commit protection page\", mtInternal);\n+                          mtInternal, \"cannot commit protection page\");\n@@ -5068,1 +5068,0 @@\n-                        MEMFLAGS flag,\n@@ -5109,3 +5108,0 @@\n-    \/\/ Record virtual memory allocation\n-    MemTracker::record_virtual_memory_reserve_and_commit((address)addr, bytes, CALLER_PC, flag);\n-\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1695,1 +1695,1 @@\n-static char* map_memory(int fd, const char* file_name, size_t file_offset,\n+static char* map_and_pretouch_memory(int fd, const char* file_name, size_t file_offset,\n@@ -1699,1 +1699,0 @@\n-                             flags,\n@@ -1701,1 +1700,2 @@\n-                             allow_exec);\n+                             allow_exec,\n+                             flags);\n@@ -1726,1 +1726,1 @@\n-                              addr, size, mtClassShared,\n+                              addr, size,\n@@ -1728,1 +1728,2 @@\n-                              r->allow_exec());\n+                              r->allow_exec(),\n+                              mtClassShared);\n@@ -1847,3 +1848,3 @@\n-    char* base = map_memory(_fd, _full_path, r->file_offset(),\n-                            requested_addr, size, r->read_only(),\n-                            r->allow_exec(), mtClassShared);\n+    char* base = map_and_pretouch_memory(_fd, _full_path, r->file_offset(),\n+                                         requested_addr, size, r->read_only(),\n+                                         r->allow_exec(), mtClassShared);\n@@ -1876,2 +1877,2 @@\n-  char* bitmap_base = map_memory(_fd, _full_path, r->file_offset(),\n-                                 requested_addr, r->used_aligned(), read_only, allow_exec, mtClassShared);\n+  char* bitmap_base = map_and_pretouch_memory(_fd, _full_path, r->file_offset(),\n+                                              requested_addr, r->used_aligned(), read_only, allow_exec, mtClassShared);\n@@ -2158,3 +2159,3 @@\n-  char* base = map_memory(_fd, _full_path, r->file_offset(),\n-                          addr, _mapped_heap_memregion.byte_size(), r->read_only(),\n-                          r->allow_exec(), mtJavaHeap);\n+  char* base = map_and_pretouch_memory(_fd, _full_path, r->file_offset(),\n+                                       addr, _mapped_heap_memregion.byte_size(), r->read_only(),\n+                                       r->allow_exec(), mtJavaHeap);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -243,1 +243,1 @@\n-  _base = os::map_memory(_fd, filename, 0, nullptr, _size, mtInternal, true, false);\n+  _base = os::map_memory(_fd, filename, 0, nullptr, _size, true, false, mtClassShared);\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-  os::commit_memory_or_exit(start_addr, size, _page_size, !ExecMem, \"G1 virtual space\", mtGC);\n+  os::commit_memory_or_exit(start_addr, size, _page_size, !ExecMem, mtGC, \"G1 virtual space\");\n@@ -145,1 +145,1 @@\n-  os::commit_memory_or_exit(aligned_end_address, _tail_size, os::vm_page_size(), !ExecMem, \"G1 virtual space\", mtGC);\n+  os::commit_memory_or_exit(aligned_end_address, _tail_size, os::vm_page_size(), !ExecMem, mtGC, \"G1 virtual space\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1PageBasedVirtualSpace.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -167,2 +167,2 @@\n-                              \"card table expansion\",\n-                              mtGCCardSet);\n+                              mtGCCardSet,\n+                              \"card table expansion\");\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-                              \"Unable to commit collection set bitmap: heap\", mtGC);\n+                              mtGC, \"Unable to commit collection set bitmap: heap\");\n@@ -72,1 +72,1 @@\n-                                \"Unable to commit collection set bitmap: zero page\", mtGC);\n+                                mtGC, \"Unable to commit collection set bitmap: zero page\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -276,1 +276,1 @@\n-                                \"Cannot commit verification bitmap memory\", mtGC);\n+                                mtGC, \"Cannot commit verification bitmap memory\");\n@@ -318,1 +318,1 @@\n-                              \"Cannot commit region memory\", mtGC);\n+                              mtGC, \"Cannot commit region memory\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-  os::commit_memory_or_exit((char*)_end, expand_size, !ExecMem \/* executable *\/, \"Mark stack space\", mtGC);\n+  os::commit_memory_or_exit((char*)_end, expand_size, !ExecMem, mtGC, \"Mark stack space\");\n","filename":"src\/hotspot\/share\/gc\/x\/xMarkStackAllocator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-  os::commit_memory_or_exit((char*)_end, expand_size, !ExecMem \/* executable *\/, \"Mark stack space\", mtGC);\n+  os::commit_memory_or_exit((char*)_end, expand_size, !ExecMem, mtGC, \"Mark stack space\");\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkStackAllocator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-  os::commit_memory_or_exit(addr, size, !ExecMem, \"Allocator (commit)\", flags);\n+  os::commit_memory_or_exit(addr, size, !ExecMem, flags, \"Allocator (commit)\");\n","filename":"src\/hotspot\/share\/memory\/allocation.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2072,1 +2072,1 @@\n-                               const char* mesg, MEMFLAGS flag) {\n+                               MEMFLAGS flag, const char* mesg) {\n@@ -2079,1 +2079,1 @@\n-                               bool executable, const char* mesg, MEMFLAGS flag) {\n+                               bool executable, MEMFLAGS flag, const char* mesg) {\n@@ -2185,4 +2185,2 @@\n-                     MEMFLAGS flags,\n-                     bool read_only,\n-                     bool allow_exec) {\n-  char* result = pd_map_memory(fd, file_name, file_offset, addr, bytes, flags, read_only, allow_exec);\n+                     bool read_only, bool allow_exec, MEMFLAGS flags) {\n+  char* result = pd_map_memory(fd, file_name, file_offset, addr, bytes, read_only, allow_exec);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -231,4 +231,2 @@\n-                           char *addr, size_t bytes,\n-                           MEMFLAGS flag,\n-                           bool read_only = false,\n-                           bool allow_exec = false);\n+                              char *addr, size_t bytes,\n+                              bool read_only = false, bool allow_exec = false);\n@@ -471,1 +469,1 @@\n-                                      bool executable, const char* mesg, MEMFLAGS flag);\n+                                      bool executable, MEMFLAGS flag, const char* mesg);\n@@ -474,1 +472,1 @@\n-                                      bool executable, const char* mesg, MEMFLAGS flag);\n+                                      bool executable, MEMFLAGS flag, const char* mesg);\n@@ -520,3 +518,3 @@\n-                           MEMFLAGS flag,\n-                           bool read_only = false,\n-                           bool allow_exec = false);\n+                           bool read_only,\n+                           bool allow_exec,\n+                           MEMFLAGS flag);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    os::commit_memory_or_exit(polling_page, allocation_size, !ExecMem, \"Unable to commit Safepoint polling page\", mtSafepoint);\n+    os::commit_memory_or_exit(polling_page, allocation_size, !ExecMem, mtSafepoint, \"Unable to commit Safepoint polling page\");\n","filename":"src\/hotspot\/share\/runtime\/safepointMechanism.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}