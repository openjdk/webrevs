{"files":[{"patch":"@@ -982,1 +982,1 @@\n-void *os::Bsd::dlopen_helper(const char *filename, int mode) {\n+void *os::Bsd::dlopen_helper(const char *filename, int mode, char *ebuf, int ebuflen) {\n@@ -1008,2 +1008,18 @@\n-  void * result= ::dlopen(filename, RTLD_LAZY);\n-\n+  void* result;\n+  JFR_ONLY(NativeLibraryLoadEvent load_event(filename, &result);)\n+  result = ::dlopen(filename, RTLD_LAZY);\n+  if (result == nullptr) {\n+    const char* error_report = ::dlerror();\n+    if (error_report == nullptr) {\n+      error_report = \"dlerror returned no error description\";\n+    }\n+    if (ebuf != nullptr && ebuflen > 0) {\n+      ::strncpy(ebuf, error_report, ebuflen-1);\n+      ebuf[ebuflen-1]='\\0';\n+    }\n+    Events::log_dll_message(nullptr, \"Loading shared library %s failed, %s\", filename, error_report);\n+    log_info(os)(\"shared library load of %s failed, %s\", filename, error_report);\n+    JFR_ONLY(load_event.set_error_msg(error_report);)\n+  } else {\n+    Events::log_dll_message(nullptr, \"Loaded shared library %s\", filename);\n+    log_info(os)(\"shared library load of %s was successful\", filename);\n@@ -1011,15 +1027,16 @@\n-  if (result != nullptr && ! IEEE_subnormal_handling_OK()) {\n-    \/\/ We just dlopen()ed a library that mangled the floating-point\n-    \/\/ flags. Silently fix things now.\n-    JFR_ONLY(load_event.set_fp_env_correction_attempt(true);)\n-    int rtn = fesetenv(&default_fenv);\n-    assert(rtn == 0, \"fesetenv must succeed\");\n-\n-    if (IEEE_subnormal_handling_OK()) {\n-      Events::log_dll_message(nullptr, \"IEEE subnormal handling had to be corrected after loading %s\", filename);\n-      log_info(os)(\"IEEE subnormal handling had to be corrected after loading %s\", filename);\n-      JFR_ONLY(load_event.set_fp_env_correction_success(true);)\n-    } else {\n-      Events::log_dll_message(nullptr, \"IEEE subnormal handling could not be corrected after loading %s\", filename);\n-      log_info(os)(\"IEEE subnormal handling could not be corrected after loading %s\", filename);\n-      assert(false, \"fesetenv didn't work\");\n+    if (! IEEE_subnormal_handling_OK()) {\n+      \/\/ We just dlopen()ed a library that mangled the floating-point\n+      \/\/ flags. Silently fix things now.\n+      JFR_ONLY(load_event.set_fp_env_correction_attempt(true);)\n+      int rtn = fesetenv(&default_fenv);\n+      assert(rtn == 0, \"fesetenv must succeed\");\n+\n+      if (IEEE_subnormal_handling_OK()) {\n+        Events::log_dll_message(nullptr, \"IEEE subnormal handling had to be corrected after loading %s\", filename);\n+        log_info(os)(\"IEEE subnormal handling had to be corrected after loading %s\", filename);\n+        JFR_ONLY(load_event.set_fp_env_correction_success(true);)\n+      } else {\n+        Events::log_dll_message(nullptr, \"IEEE subnormal handling could not be corrected after loading %s\", filename);\n+        log_info(os)(\"IEEE subnormal handling could not be corrected after loading %s\", filename);\n+        assert(false, \"fesetenv didn't work\");\n+      }\n@@ -1027,1 +1044,0 @@\n-  }\n@@ -1029,0 +1045,1 @@\n+  }\n@@ -1040,24 +1057,1 @@\n-  void* result;\n-  JFR_ONLY(NativeLibraryLoadEvent load_event(filename, &result);)\n-  result = os::Bsd::dlopen_helper(filename, RTLD_LAZY);\n-  if (result != nullptr) {\n-    Events::log_dll_message(nullptr, \"Loaded shared library %s\", filename);\n-    \/\/ Successful loading\n-    log_info(os)(\"shared library load of %s was successful\", filename);\n-    return result;\n-  }\n-\n-  const char* error_report = ::dlerror();\n-  if (error_report == nullptr) {\n-    error_report = \"dlerror returned no error description\";\n-  }\n-  if (ebuf != nullptr && ebuflen > 0) {\n-    \/\/ Read system error message into ebuf\n-    ::strncpy(ebuf, error_report, ebuflen-1);\n-    ebuf[ebuflen-1]='\\0';\n-  }\n-  Events::log_dll_message(nullptr, \"Loading shared library %s failed, %s\", filename, error_report);\n-  log_info(os)(\"shared library load of %s failed, %s\", filename, error_report);\n-  JFR_ONLY(load_event.set_error_msg(error_report);)\n-\n-  return nullptr;\n+  return os::Bsd::dlopen_helper(filename, RTLD_LAZY, ebuf, ebuflen);\n@@ -1074,2 +1068,1 @@\n-  JFR_ONLY(NativeLibraryLoadEvent load_event(filename, &result);)\n-  result = os::Bsd::dlopen_helper(filename, RTLD_LAZY);\n+  result = os::Bsd::dlopen_helper(filename, RTLD_LAZY, ebuf, ebuflen);\n@@ -1077,3 +1070,0 @@\n-    Events::log_dll_message(nullptr, \"Loaded shared library %s\", filename);\n-    \/\/ Successful loading\n-    log_info(os)(\"shared library load of %s was successful\", filename);\n@@ -1083,11 +1073,0 @@\n-  Elf32_Ehdr elf_head;\n-\n-  const char* const error_report = ::dlerror();\n-  if (error_report == nullptr) {\n-    error_report = \"dlerror returned no error description\";\n-  }\n-  if (ebuf != nullptr && ebuflen > 0) {\n-    \/\/ Read system error message into ebuf\n-    ::strncpy(ebuf, error_report, ebuflen-1);\n-    ebuf[ebuflen-1]='\\0';\n-  }\n@@ -1096,1 +1075,0 @@\n-  JFR_ONLY(load_event.set_error_msg(error_report);)\n@@ -1105,1 +1083,0 @@\n-\n@@ -1113,0 +1090,1 @@\n+  Elf32_Ehdr elf_head;\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":39,"deletions":61,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-  static void *dlopen_helper(const char *path, int mode);\n+  static void *dlopen_helper(const char *path, int mode, char *ebuf, int ebuflen);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}