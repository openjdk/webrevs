{"files":[{"patch":"@@ -1011,1 +1011,1 @@\n-  if (result  != nullptr && ! IEEE_subnormal_handling_OK()) {\n+  if (result != nullptr && ! IEEE_subnormal_handling_OK()) {\n@@ -1014,0 +1014,1 @@\n+    JFR_ONLY(load_event.set_fp_env_correction_attempt(true);)\n@@ -1016,1 +1017,0 @@\n-    bool ieee_handling_after_issue = IEEE_subnormal_handling_OK();\n@@ -1018,1 +1018,1 @@\n-    if (ieee_handling_after_issue) {\n+    if (IEEE_subnormal_handling_OK()) {\n@@ -1021,0 +1021,1 @@\n+      JFR_ONLY(load_event.set_fp_env_correction_success(true);)\n@@ -1024,0 +1025,1 @@\n+      assert(false, \"fesetenv didn't work\");\n@@ -1025,2 +1027,0 @@\n-\n-    assert(ieee_handling_after_issue, \"fesetenv didn't work\");\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1857,0 +1857,1 @@\n+      JFR_ONLY(load_event.set_fp_env_correction_attempt(true);)\n@@ -1859,1 +1860,0 @@\n-      bool ieee_handling_after_issue = IEEE_subnormal_handling_OK();\n@@ -1861,1 +1861,1 @@\n-      if (ieee_handling_after_issue) {\n+      if (IEEE_subnormal_handling_OK()) {\n@@ -1864,0 +1864,1 @@\n+        JFR_ONLY(load_event.set_fp_env_correction_success(true);)\n@@ -1867,0 +1868,1 @@\n+        assert(false, \"fesetenv didn't work\");\n@@ -1868,1 +1870,0 @@\n-      assert(ieee_handling_after_issue, \"fesetenv didn't work\");\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -960,0 +960,2 @@\n+    <Field type=\"boolean\" name=\"fpEnvCorrectionAttempt\" label=\"FPU Environment correction\" description=\"In case of IEEE conformance issues we might reset the FP environment\" \/>\n+    <Field type=\"boolean\" name=\"fpEnvCorrectionSuccess\" label=\"FPU Environment correction result\" description=\"Stores result in case FP environment correction\" \/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-NativeLibraryLoadEvent::NativeLibraryLoadEvent(const char* name, void** result) : JfrNativeLibraryEventBase(name), _result(result) {\n+NativeLibraryLoadEvent::NativeLibraryLoadEvent(const char* name, void** result) : JfrNativeLibraryEventBase(name), _result(result), _fp_env_correction_attempt(false), _fp_env_correction_success(false) {\n@@ -91,0 +91,9 @@\n+static void set_additional_data(EventNativeLibraryLoad& event, const NativeLibraryLoadEvent& helper) {\n+  event.set_fpEnvCorrectionAttempt(helper.get_fp_env_correction_attempt());\n+  event.set_fpEnvCorrectionSuccess(helper.get_fp_env_correction_success());\n+}\n+\n+static void set_additional_data(EventNativeLibraryUnload& event, const NativeLibraryUnloadEvent& helper) {\n+  \/\/ no additional entries atm. for the unload event\n+}\n+\n@@ -92,1 +101,1 @@\n-static void commit(HelperType& helper) {\n+static void commit(const HelperType& helper) {\n@@ -102,0 +111,1 @@\n+  set_additional_data(event, helper);\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrNativeLibraryLoadEvent.cpp","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -55,0 +55,2 @@\n+  bool _fp_env_correction_attempt;\n+  bool _fp_env_correction_success;\n@@ -59,0 +61,4 @@\n+  bool get_fp_env_correction_attempt() const { return _fp_env_correction_attempt; }\n+  bool get_fp_env_correction_success() const { return _fp_env_correction_success; }\n+  void set_fp_env_correction_attempt(bool v) { _fp_env_correction_attempt = v; }\n+  void set_fp_env_correction_success(bool v) { _fp_env_correction_success = v; }\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrNativeLibraryLoadEvent.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}