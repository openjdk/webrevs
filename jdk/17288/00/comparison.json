{"files":[{"patch":"@@ -116,1 +116,0 @@\n-runtime\/cds\/appcds\/jigsaw\/modulepath\/OptimizeModuleHandlingTest.java 8323032 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -348,14 +348,19 @@\n-        \/\/ Dump an archive with only -Xbootclasspath\/a\n-        output = TestCommon.createArchive(\n-                                null,\n-                                appClasses,\n-                                \"-Xbootclasspath\/a:\" + mainJar.toString());\n-        TestCommon.checkDump(output);\n-        tty(\"13. run with CDS on,  with the same -Xbootclasspath\/a as dump time and adding a -cp with test.jar:  should pass\");\n-        TestCommon.run(\"-Xlog:cds,class+load\",\n-                       \"-cp\", testJar.toString(),\n-                       \"-Xbootclasspath\/a:\" + mainJar.toString(),\n-                       MAIN_CLASS)\n-            .assertNormalExit(out -> {\n-                out.shouldMatch(MAIN_FROM_CDS)\n-                   .shouldContain(OPTIMIZE_ENABLED);\n+\n+        \/\/ Skip the following test for dynamic CDS archive because the current\n+        \/\/ dynamic dump test utililty does not support empty -cp with a classlist.\n+        \/\/ (see createArchive(CDSOptions opts) in TestCommon.java)\n+        if (!CDSTestUtils.isDynamicArchive()) {\n+            \/\/ Dump an archive with only -Xbootclasspath\/a\n+            output = TestCommon.createArchive(\n+                                    null,\n+                                    appClasses,\n+                                    \"-Xbootclasspath\/a:\" + mainJar.toString());\n+            TestCommon.checkDump(output);\n+            tty(\"13. run with CDS on,  with the same -Xbootclasspath\/a as dump time and adding a -cp with test.jar:  should pass\");\n+            TestCommon.run(\"-Xlog:cds,class+load\",\n+                           \"-cp\", testJar.toString(),\n+                           \"-Xbootclasspath\/a:\" + mainJar.toString(),\n+                           MAIN_CLASS)\n+                .assertNormalExit(out -> {\n+                    out.shouldMatch(MAIN_FROM_CDS)\n+                       .shouldContain(OPTIMIZE_ENABLED);\n@@ -363,0 +368,1 @@\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/modulepath\/OptimizeModuleHandlingTest.java","additions":20,"deletions":14,"binary":false,"changes":34,"status":"modified"}]}