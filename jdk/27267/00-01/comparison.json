{"files":[{"patch":"@@ -127,1 +127,1 @@\n-    WriteP12Test() throws CertificateException {\n+    WriteP12Test() {\n@@ -134,3 +134,3 @@\n-    public static void main(String[] args) throws CertificateException,\n-            UnrecoverableKeyException, KeyStoreException,\n-            NoSuchProviderException, NoSuchAlgorithmException, IOException {\n+    public static void main(String[] args) throws UnrecoverableKeyException,\n+            KeyStoreException, NoSuchProviderException,\n+            NoSuchAlgorithmException, IOException {\n","filename":"test\/jdk\/java\/security\/KeyStore\/PKCS12\/WriteP12Test.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -41,25 +41,25 @@\n------BEGIN PRIVATE KEY-----\n-MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCpyz97liuWPDYcLH9TX8BiT78o\n-lCmAfmevvch6ncXUVuCzbdaKuKXwn4EVbDszsVJLoK5zdtP+X3iDhutj+IgKmLhuczF3M9VIcWr+\n-JJUyTH4+3h\/RT8cjCDZOmk9iXkb5ifruVsLqzb9g+Vp140Oz7leikne7KmclHvTfvFd0WDI7Gb9v\n-o4f5rT717BXJ\/n+M6pNk8DLpLiEu6eziYvXRv5x+t5Go3x0eCXdaxEQUf2j876Wfr2qHRJK7lDfF\n-e1DDsMg\/KpKGiILYZ+g2qtVMZSxtp5BZEtfB5qV\/IE5kWO+mCIAGpXSZIdbERR6pZUq8GLEe1T9e\n-+sO6H24w2F19AgMBAAECggEBAId\/12187dO6wUPCjumuJA1QrrBnbKdKONyai36uoc1Od4s5QFj7\n-+hEIeS7rbGNYQuBvnkgusAbzkW0FIpxpHce3EJez\/emux6pEOKoP77BwMt9gy+txyu0+BHi91FQg\n-AGvrnQDO5EYVY4Cz\/WjOsJzKu8zVLg+DS0Toa2qRFwmUe9mVAXPNOCZ3Oae\/Q6tCDsaINNw0fmjj\n-jn6uohPbS+n6xENG3FkQXB36getXy310xTGED2J27cmAQH6gLR6Kl2iROzNPbbpBqbuemI9kbcld\n-EwBS1jRfZWeaPstYA1niVrE9UgUBzemnoh4TDkG076sYthHMr5QFGjPswnwtJ4ECgYEA0sURQ5+v\n-baH4tdaemI3qpnknXTlzSpuZZmAoyvY0Id0mlduwKwmZ3Y5989wHfnnhFfyNO4IkTKjI2Wp97qP5\n-4eqUNpA7FtNU7KUzMcFDTtwtNZuRYMrKlqo2lLbA+gVrAYpYZFL4b7tcwtX4DnYorDsmude6W8sG\n-4Mx2VdFJC9UCgYEAzjsdXCYH5doWUHb0dvn9ID7IikffEMRM720MRjrnnnVbpzx6ACntkPDNZg7p\n-TRE\/mx7iBz81ZaUWE+V0wd0JvCHEdpAz3mksyvDFhU4Bgs6xzf2pSul5muhsx3hHcvvPezz5Bnxs\n-faJlzkxfwotyGmvWN15GA\/pyfsZjsbbTpwkCgYAO6NnbysQCIV8SnegCKqfatt9N\/O5m7LLhRxQb\n-p2bwrlA4cZ34rWkw\/w9x3LK7A6wkfgUPnJkswxPSLXJTG05l6M4rPfCwIKr1Qopojp9QSMr569NQ\n-4YeLOOc7heIIzbFQHpU6I5Rncv2Q2sn9W+ZsqJKIuvX34FjQNiZ406EzMQKBgHSxOGS61D84DuZK\n-2Ps1awhC3kB4eHzJRms3vflDPWoJJ+pSKwpKrzUTPHXiPBqyhtYkPGszVeiE6CAr9sv3YZnFVaBs\n-6hyQUJsob+uE\/w\/gGvXe8VsFDx0bJOodYfhrCbTHBHWqE81nBcocpxayxsayfAzqWB3KKd0YLrMR\n-K2PZAoGAcZa8915R2m0KZ6HVJUt\/JDR85jCbN71kcVDFY2XSFkOJvOdFoHNfRckfLzjq9Y2MSSTV\n-+QDWbDo2doUQCejJUTaN8nP79tfyir24X5uVPvQaeVoGTKYb+LfUqK0F60lStmjuddIGSZH55y3v\n-+9XjmxbVERtd1lqgQg3VlmKlEXY=\n------END PRIVATE KEY-----\n-\"\"\";\n+        -----BEGIN PRIVATE KEY-----\n+        MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCpyz97liuWPDYcLH9TX8BiT78o\n+        lCmAfmevvch6ncXUVuCzbdaKuKXwn4EVbDszsVJLoK5zdtP+X3iDhutj+IgKmLhuczF3M9VIcWr+\n+        JJUyTH4+3h\/RT8cjCDZOmk9iXkb5ifruVsLqzb9g+Vp140Oz7leikne7KmclHvTfvFd0WDI7Gb9v\n+        o4f5rT717BXJ\/n+M6pNk8DLpLiEu6eziYvXRv5x+t5Go3x0eCXdaxEQUf2j876Wfr2qHRJK7lDfF\n+        e1DDsMg\/KpKGiILYZ+g2qtVMZSxtp5BZEtfB5qV\/IE5kWO+mCIAGpXSZIdbERR6pZUq8GLEe1T9e\n+        +sO6H24w2F19AgMBAAECggEBAId\/12187dO6wUPCjumuJA1QrrBnbKdKONyai36uoc1Od4s5QFj7\n+        +hEIeS7rbGNYQuBvnkgusAbzkW0FIpxpHce3EJez\/emux6pEOKoP77BwMt9gy+txyu0+BHi91FQg\n+        AGvrnQDO5EYVY4Cz\/WjOsJzKu8zVLg+DS0Toa2qRFwmUe9mVAXPNOCZ3Oae\/Q6tCDsaINNw0fmjj\n+        jn6uohPbS+n6xENG3FkQXB36getXy310xTGED2J27cmAQH6gLR6Kl2iROzNPbbpBqbuemI9kbcld\n+        EwBS1jRfZWeaPstYA1niVrE9UgUBzemnoh4TDkG076sYthHMr5QFGjPswnwtJ4ECgYEA0sURQ5+v\n+        baH4tdaemI3qpnknXTlzSpuZZmAoyvY0Id0mlduwKwmZ3Y5989wHfnnhFfyNO4IkTKjI2Wp97qP5\n+        4eqUNpA7FtNU7KUzMcFDTtwtNZuRYMrKlqo2lLbA+gVrAYpYZFL4b7tcwtX4DnYorDsmude6W8sG\n+        4Mx2VdFJC9UCgYEAzjsdXCYH5doWUHb0dvn9ID7IikffEMRM720MRjrnnnVbpzx6ACntkPDNZg7p\n+        TRE\/mx7iBz81ZaUWE+V0wd0JvCHEdpAz3mksyvDFhU4Bgs6xzf2pSul5muhsx3hHcvvPezz5Bnxs\n+        faJlzkxfwotyGmvWN15GA\/pyfsZjsbbTpwkCgYAO6NnbysQCIV8SnegCKqfatt9N\/O5m7LLhRxQb\n+        p2bwrlC4cZ34rWkw\/w9x3LK7A6wkfgUPnJkswxPSLXJTG05l6M4rPfCwIKr1Qopojp9QSMr569NQ\n+        4YeLOOc7heIIzbFQHpU6I5Rncv2Q2sn9W+ZsqJKIuvX34FjQNiZ406EzMQKBgHSxOGS61D84DuZK\n+        2Ps1awhC3kB4eHzJRms3vflDPWoJJ+pSKwpKrzUTPHXiPBqyhtYkPGszVeiE6CAr9sv3YZnFVaBs\n+        6hyQUJsob+uE\/w\/gGvXe8VsFDx0bJOodYfhrCbTHBHWqE81nBcocpxayxsayfAzqWB3KKd0YLrMR\n+        K2PZAoGAcZa8915R2m0KZ6HVJUt\/JDR85jCbN71kcVDFY2XSFkOJvOdFoHNfRckfLzjq9Y2MSSTV\n+        +QDWbDo2doUQCejJUTaN8nP79tfyir24X5uVPvQaeVoGTKYb+LfUqK0F60lStmjuddIGSZH55y3v\n+        +9XjmxbVERtd1lqgQg3VlmKlEXY=\n+        -----END PRIVATE KEY-----\n+        \"\"\";\n","filename":"test\/jdk\/java\/security\/KeyStore\/TestKeyStoreBasic.java","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -167,14 +167,5 @@\n-        DEREncodable cert = PEM_DECODER.decode(targetCertStr, X509Certificate.class);\n-        entries.add(cert);\n-\n-        cert = PEM_DECODER.decode(subCaCertStr, X509Certificate.class);\n-        entries.add(cert);\n-\n-        cert = PEM_DECODER.decode(selfSignedCertStr, X509Certificate.class);\n-        entries.add(cert);\n-\n-        cert = PEM_DECODER.decode(topCrlIssuerCertStr, X509Certificate.class);\n-        entries.add(cert);\n-\n-        cert = PEM_DECODER.decode(subCrlIssuerCertStr, X509Certificate.class);\n-        entries.add(cert);\n+        entries.add(PEM_DECODER.decode(targetCertStr, X509Certificate.class));\n+        entries.add(PEM_DECODER.decode(subCaCertStr, X509Certificate.class));\n+        entries.add(PEM_DECODER.decode(selfSignedCertStr, X509Certificate.class));\n+        entries.add(PEM_DECODER.decode(topCrlIssuerCertStr, X509Certificate.class));\n+        entries.add(PEM_DECODER.decode(subCrlIssuerCertStr, X509Certificate.class));\n","filename":"test\/jdk\/java\/security\/cert\/CertPathBuilder\/selfIssued\/DisableRevocation.java","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -201,23 +201,10 @@\n-        \/\/ generate certificate from certificate string\n-        DEREncodable cert = PEM_DECODER.decode(targetCertStr, X509Certificate.class);\n-        entries.add(cert);\n-\n-        cert = PEM_DECODER.decode(subCaCertStr, X509Certificate.class);\n-        entries.add(cert);\n-\n-        cert = PEM_DECODER.decode(selfSignedCertStr, X509Certificate.class);\n-        entries.add(cert);\n-\n-        cert = PEM_DECODER.decode(topCrlIssuerCertStr, X509Certificate.class);\n-        entries.add(cert);\n-\n-        cert = PEM_DECODER.decode(subCrlIssuerCertStr, X509Certificate.class);\n-        entries.add(cert);\n-\n-        \/\/ generate CRL from CRL string\n-        DEREncodable mixes = PEM_DECODER.decode(topCrlStr, X509CRL.class);\n-        entries.add(mixes);\n-\n-        mixes = PEM_DECODER.decode(subCrlStr, X509CRL.class);\n-        entries.add(mixes);\n-\n+        \/\/ Decode and add certificates\n+        entries.add(PEM_DECODER.decode(targetCertStr, X509Certificate.class));\n+        entries.add(PEM_DECODER.decode(subCaCertStr, X509Certificate.class));\n+        entries.add(PEM_DECODER.decode(selfSignedCertStr, X509Certificate.class));\n+        entries.add(PEM_DECODER.decode(topCrlIssuerCertStr, X509Certificate.class));\n+        entries.add(PEM_DECODER.decode(subCrlIssuerCertStr, X509Certificate.class));\n+\n+        \/\/ Decode and add CRLs\n+        entries.add(PEM_DECODER.decode(topCrlStr, X509CRL.class));\n+        entries.add(PEM_DECODER.decode(subCrlStr, X509CRL.class));\n","filename":"test\/jdk\/java\/security\/cert\/CertPathBuilder\/selfIssued\/KeyUsageMatters.java","additions":10,"deletions":23,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -210,2 +210,0 @@\n-        Certificate targetCert = PEM_DECODER.decode(is, X509Certificate.class);\n-\n@@ -213,1 +211,2 @@\n-        List<Certificate> list = Collections.singletonList(targetCert);\n+        List<Certificate> list = Collections.singletonList(PEM_DECODER.decode\n+                (is, X509Certificate.class));\n@@ -238,2 +237,1 @@\n-        DEREncodable crl  = PEM_DECODER.decode(crlStr, X509CRL.class);\n-        crls.add(crl);\n+        crls.add(PEM_DECODER.decode(crlStr, X509CRL.class));\n","filename":"test\/jdk\/java\/security\/cert\/CertPathValidator\/OCSP\/FailoverToCRL.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -145,4 +145,0 @@\n-        DEREncodable crls = PEM_DECODER.decode(crlStr, X509CRL.class);\n-\n-        DEREncodable certs = PEM_DECODER.decode(crlIssuerCertStr, X509Certificate.class);\n-\n@@ -150,2 +146,2 @@\n-        entries.add(crls);\n-        entries.add(certs);\n+        entries.add(PEM_DECODER.decode(crlStr, X509CRL.class));\n+        entries.add(PEM_DECODER.decode(crlIssuerCertStr, X509Certificate.class));\n","filename":"test\/jdk\/java\/security\/cert\/CertPathValidator\/indirectCRL\/CircularCRLOneLevel.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -145,4 +145,0 @@\n-        DEREncodable crls = PEM_DECODER.decode(crlStr, X509CRL.class);\n-\n-        DEREncodable certs = PEM_DECODER.decode(crlIssuerCertStr, X509Certificate.class);\n-\n@@ -150,2 +146,2 @@\n-        entries.add(crls);\n-        entries.add(certs);\n+        entries.add(PEM_DECODER.decode(crlStr, X509CRL.class));\n+        entries.add(PEM_DECODER.decode(crlIssuerCertStr, X509Certificate.class));\n","filename":"test\/jdk\/java\/security\/cert\/CertPathValidator\/indirectCRL\/CircularCRLOneLevelRevoked.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}