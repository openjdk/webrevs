{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, 2023 SAP SE. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024 SAP SE. All rights reserved.\n@@ -149,6 +149,11 @@\n-  out->print_cr(\"State: %s\", NMTUtil::tracking_level_to_string(_tracking_level));\n-  out->print_cr(\"Malloc allocation site table size: %d\", MallocSiteTable::hash_buckets());\n-  out->print_cr(\"             Tracking stack depth: %d\", NMT_TrackingStackDepth);\n-  out->cr();\n-  MallocSiteTable::print_tuning_statistics(out);\n-  out->cr();\n+  out->print_cr(\"State: %s\",\n+                NMTUtil::tracking_level_to_string(_tracking_level));\n+  if (_tracking_level == NMT_detail) {\n+    out->print_cr(\"Malloc allocation site table size: %d\",\n+                  MallocSiteTable::hash_buckets());\n+    out->print_cr(\"             Tracking stack depth: %d\",\n+                  NMT_TrackingStackDepth);\n+    out->cr();\n+    MallocSiteTable::print_tuning_statistics(out);\n+    out->cr();\n+  }\n","filename":"src\/hotspot\/share\/nmt\/memTracker.cpp","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -140,1 +140,2 @@\n-    if (check_detail_tracking_level(output())) {\n+    NMT_TrackingLevel tracking = MemTracker::tracking_level();\n+    if (tracking == NMT_detail || tracking == NMT_summary) {\n@@ -142,0 +143,2 @@\n+    } else {\n+      output()->print_cr(\"Detail or summary tracking is not enabled\");\n","filename":"src\/hotspot\/share\/nmt\/nmtDCmd.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2024, Red Hat Inc.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test the NMT scale parameter\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run main\/othervm -XX:NativeMemoryTracking=summary JcmdSummaryStatistics\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.JDKToolFinder;\n+\n+public class JcmdSummaryStatistics {\n+\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb = new ProcessBuilder();\n+        OutputAnalyzer output;\n+        \/\/ Grab my own PID\n+        String pid = Long.toString(jdk.test.lib.process.ProcessTools.getProcessId());\n+\n+        \/\/ Run 'jcmd <pid> VM.native_memory statistics=true'\n+        pb.command(new String[] { JDKToolFinder.getJDKTool(\"jcmd\"), pid, \"VM.native_memory\", \"statistics=true\"});\n+        output = new OutputAnalyzer(pb.start());\n+\n+        output.shouldContainMultiLinePattern(\n+                \"Native Memory Tracking Statistics:\",\n+                \"State: summary\",\n+                \"Preinit state:\",\n+                \"entries:\",\n+                \"pre-init mallocs:\",\n+                \"MallocLimit:\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/JcmdSummaryStatistics.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}