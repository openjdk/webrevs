{"files":[{"patch":"@@ -444,5 +444,1 @@\n-  \/\/ The do_full_collection() parameter clear_all_soft_refs\n-  \/\/ is interpreted here as maximum_compaction which will\n-  \/\/ cause SoftRefs to be cleared.\n-  bool maximum_compaction = clear_all_soft_refs;\n-  PSParallelCompact::invoke(maximum_compaction);\n+  PSParallelCompact::invoke(clear_all_soft_refs);\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -829,4 +829,10 @@\n-bool PSParallelCompact::reassess_maximum_compaction(bool maximum_compaction,\n-                                                    size_t total_live_words,\n-                                                    MutableSpace* const old_space,\n-                                                    HeapWord* full_region_prefix_end) {\n+bool PSParallelCompact::check_maximum_compaction(size_t total_live_words,\n+                                                 MutableSpace* const old_space,\n+                                                 HeapWord* full_region_prefix_end) {\n+\n+  ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n+\n+  \/\/ Check System.GC\n+  bool is_max_on_system_gc = UseMaximumCompactionOnSystemGC\n+                          && GCCause::is_user_requested_gc(heap->gc_cause());\n+\n@@ -837,1 +843,1 @@\n-  const uint total_invocations = ParallelScavengeHeap::heap()->total_full_collections();\n+  const uint total_invocations = heap->total_full_collections();\n@@ -846,1 +852,1 @@\n-  if (maximum_compaction || is_old_gen_overflowing || is_interval_ended || is_region_full) {\n+  if (is_max_on_system_gc || is_old_gen_overflowing || is_interval_ended || is_region_full) {\n@@ -854,1 +860,1 @@\n-void PSParallelCompact::summary_phase(bool maximum_compaction)\n+void PSParallelCompact::summary_phase()\n@@ -877,4 +883,3 @@\n-    maximum_compaction = reassess_maximum_compaction(maximum_compaction,\n-                                                     total_live_words,\n-                                                     old_space,\n-                                                     full_region_prefix_end);\n+    bool maximum_compaction = check_maximum_compaction(total_live_words,\n+                                                       old_space,\n+                                                       full_region_prefix_end);\n@@ -961,1 +966,1 @@\n-bool PSParallelCompact::invoke(bool maximum_heap_compaction) {\n+bool PSParallelCompact::invoke(bool clear_all_soft_refs) {\n@@ -966,3 +971,0 @@\n-  ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n-  assert(!heap->is_stw_gc_active(), \"not reentrant\");\n-\n@@ -971,2 +973,3 @@\n-  const bool clear_all_soft_refs =\n-    heap->soft_ref_policy()->should_clear_all_soft_refs();\n+  ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n+  clear_all_soft_refs = clear_all_soft_refs\n+                     || heap->soft_ref_policy()->should_clear_all_soft_refs();\n@@ -974,2 +977,1 @@\n-  return PSParallelCompact::invoke_no_policy(clear_all_soft_refs ||\n-                                             maximum_heap_compaction);\n+  return PSParallelCompact::invoke_no_policy(clear_all_soft_refs);\n@@ -980,1 +982,1 @@\n-bool PSParallelCompact::invoke_no_policy(bool maximum_heap_compaction) {\n+bool PSParallelCompact::invoke_no_policy(bool clear_all_soft_refs) {\n@@ -1001,1 +1003,1 @@\n-  ClearedAllSoftRefs casr(maximum_heap_compaction,\n+  ClearedAllSoftRefs casr(clear_all_soft_refs,\n@@ -1036,1 +1038,1 @@\n-    ref_processor()->start_discovery(maximum_heap_compaction);\n+    ref_processor()->start_discovery(clear_all_soft_refs);\n@@ -1044,3 +1046,1 @@\n-    bool max_on_system_gc = UseMaximumCompactionOnSystemGC\n-      && GCCause::is_user_requested_gc(gc_cause);\n-    summary_phase(maximum_heap_compaction || max_on_system_gc);\n+    summary_phase();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -726,4 +726,3 @@\n-  static bool reassess_maximum_compaction(bool maximum_compaction,\n-                                          size_t total_live_words,\n-                                          MutableSpace* const old_space,\n-                                          HeapWord* full_region_prefix_end);\n+  static bool check_maximum_compaction(size_t total_live_words,\n+                                       MutableSpace* const old_space,\n+                                       HeapWord* full_region_prefix_end);\n@@ -742,1 +741,1 @@\n-  static void summary_phase(bool maximum_compaction);\n+  static void summary_phase();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.hpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -238,1 +238,0 @@\n-  PSAdaptiveSizePolicy* policy = heap->size_policy();\n@@ -253,2 +252,1 @@\n-    SoftRefPolicy* srp = heap->soft_ref_policy();\n-    const bool clear_all_softrefs = srp->should_clear_all_soft_refs();\n+    const bool clear_all_softrefs = heap->soft_ref_policy()->should_clear_all_soft_refs();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}