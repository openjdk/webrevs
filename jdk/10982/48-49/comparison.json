{"files":[{"patch":"@@ -166,3 +166,3 @@\n-        return new TransformImpl.ClassTransformImpl(e -> accept(builder, e),\n-                                                    () -> atEnd(builder),\n-                                                    () -> atStart(builder));\n+        return new TransformImpl.ResolvedTransformImpl<>(e -> accept(builder, e),\n+                                                         () -> atEnd(builder),\n+                                                         () -> atStart(builder));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/ClassTransform.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -91,3 +91,3 @@\n-        return new TransformImpl.CodeTransformImpl(e -> accept(builder, e),\n-                                                   () -> atEnd(builder),\n-                                                   () -> atStart(builder));\n+        return new TransformImpl.ResolvedTransformImpl<>(e -> accept(builder, e),\n+                                                         () -> atEnd(builder),\n+                                                         () -> atStart(builder));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/CodeTransform.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -106,3 +106,3 @@\n-        return new TransformImpl.FieldTransformImpl(e -> accept(builder, e),\n-                                                    () -> atEnd(builder),\n-                                                    () -> atStart(builder));\n+        return new TransformImpl.ResolvedTransformImpl<>(e -> accept(builder, e),\n+                                                         () -> atEnd(builder),\n+                                                         () -> atStart(builder));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/FieldTransform.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -112,3 +112,3 @@\n-        return new TransformImpl.MethodTransformImpl(e -> accept(builder, e),\n-                                                     () -> atEnd(builder),\n-                                                     () -> atStart(builder));\n+        return new TransformImpl.ResolvedTransformImpl<>(e -> accept(builder, e),\n+                                                         () -> atEnd(builder),\n+                                                         () -> atStart(builder));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/MethodTransform.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import jdk.internal.classfile.ClassfileElement;\n@@ -80,1 +81,1 @@\n-    public record ClassTransformImpl(Consumer<ClassElement> consumer,\n+    public record ResolvedTransformImpl<E extends ClassfileElement>(Consumer<E> consumer,\n@@ -83,1 +84,1 @@\n-            implements ClassfileTransform.ResolvedTransform<ClassElement> {\n+            implements ClassfileTransform.ResolvedTransform<E> {\n@@ -85,1 +86,1 @@\n-        public ClassTransformImpl(Consumer<ClassElement> consumer) {\n+        public ResolvedTransformImpl(Consumer<E> consumer) {\n@@ -94,1 +95,1 @@\n-        public ClassTransformImpl resolve(ClassBuilder builder) {\n+        public ResolvedTransformImpl<ClassElement> resolve(ClassBuilder builder) {\n@@ -98,1 +99,1 @@\n-            return new ClassTransformImpl(upstream.consumer(),\n+            return new ResolvedTransformImpl<>(upstream.consumer(),\n@@ -116,2 +117,2 @@\n-        public ClassTransformImpl resolve(ClassBuilder builder) {\n-            return new ClassTransformImpl(ce -> {\n+        public ResolvedTransform<ClassElement> resolve(ClassBuilder builder) {\n+            return new ResolvedTransformImpl<>(ce -> {\n@@ -139,2 +140,2 @@\n-        public ClassTransformImpl resolve(ClassBuilder builder) {\n-            return new ClassTransformImpl(ce -> {\n+        public ResolvedTransform<ClassElement> resolve(ClassBuilder builder) {\n+            return new ResolvedTransformImpl<>(ce -> {\n@@ -177,6 +178,0 @@\n-    public record MethodTransformImpl(Consumer<MethodElement> consumer,\n-                                      Runnable endHandler,\n-                                      Runnable startHandler)\n-            implements ClassfileTransform.ResolvedTransform<MethodElement> {\n-    }\n-\n@@ -191,1 +186,1 @@\n-            return new MethodTransformImpl(upstream.consumer(),\n+            return new ResolvedTransformImpl<>(upstream.consumer(),\n@@ -209,1 +204,1 @@\n-            return new MethodTransformImpl(me -> {\n+            return new ResolvedTransformImpl<>(me -> {\n@@ -247,6 +242,0 @@\n-    public record FieldTransformImpl(Consumer<FieldElement> consumer,\n-                                     Runnable endHandler,\n-                                     Runnable startHandler)\n-            implements ClassfileTransform.ResolvedTransform<FieldElement> {\n-    }\n-\n@@ -256,1 +245,1 @@\n-        public FieldTransformImpl resolve(FieldBuilder builder) {\n+        public ResolvedTransform<FieldElement> resolve(FieldBuilder builder) {\n@@ -260,1 +249,1 @@\n-            return new FieldTransformImpl(upstream.consumer(),\n+            return new ResolvedTransformImpl<>(upstream.consumer(),\n@@ -293,6 +282,0 @@\n-    public record CodeTransformImpl(Consumer<CodeElement> consumer,\n-                                    Runnable endHandler,\n-                                    Runnable startHandler)\n-            implements ClassfileTransform.ResolvedTransform<CodeElement> {\n-    }\n-\n@@ -302,1 +285,1 @@\n-        public CodeTransformImpl resolve(CodeBuilder builder) {\n+        public ResolvedTransform<CodeElement> resolve(CodeBuilder builder) {\n@@ -306,1 +289,1 @@\n-            return new CodeTransformImpl(upstream.consumer(),\n+            return new ResolvedTransformImpl<>(upstream.consumer(),\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/TransformImpl.java","additions":16,"deletions":33,"binary":false,"changes":49,"status":"modified"}]}