{"files":[{"patch":"@@ -580,1 +580,1 @@\n-            return fVal == 0.0f ? fconst_0()\n+            return Float.floatToRawIntBits(fVal) == 0 ? fconst_0()\n@@ -585,1 +585,1 @@\n-            return dVal == 0.0d ? dconst_0()\n+            return Double.doubleToRawLongBits(dVal) == 0 ? dconst_0()\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/CodeBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -177,8 +177,2 @@\n-        if ( x == 0 ) return 1;\n-        x--;\n-        x |= x >> 1;\n-        x |= x >> 2;\n-        x |= x >> 4;\n-        x |= x >> 8;\n-        x |= x >> 16;\n-        return ( x | x >> 32 ) + 1;\n+        x = -1 >>> Long.numberOfLeadingZeros(x - 1);\n+        return x + 1;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/EntryMap.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import jdk.internal.classfile.instruction.ConstantInstruction;\n@@ -68,0 +69,2 @@\n+                                    .constantInstruction(-0.0f)\n+                                    .constantInstruction(-0.0d)\n@@ -87,1 +90,1 @@\n-        assertEquals(opcodes.size(), 4);\n+        assertEquals(opcodes.size(), 6);\n@@ -91,1 +94,7 @@\n-        assertEquals(opcodes.get(3).opcode(), RETURN);\n+        assertEquals(\n+                Float.floatToRawIntBits((float)((ConstantInstruction)opcodes.get(3)).constantValue()),\n+                Float.floatToRawIntBits(-0.0f));\n+        assertEquals(\n+                Double.doubleToRawLongBits((double)((ConstantInstruction)opcodes.get(4)).constantValue()),\n+                Double.doubleToRawLongBits(-0.0d));\n+        assertEquals(opcodes.get(5).opcode(), RETURN);\n","filename":"test\/jdk\/jdk\/classfile\/LDCTest.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}