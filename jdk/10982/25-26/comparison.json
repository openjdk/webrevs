{"files":[{"patch":"@@ -43,1 +43,1 @@\n- * CodeLocalsShifter is a {@link jdk.internal.classfile.CodeTransform} shifting locals to\n+ * {@link CodeLocalsShifter} is a {@link CodeTransform} shifting locals to\n@@ -51,1 +51,1 @@\n-     * Creates a new instance of CodeLocalsShifter\n+     * Creates a new instance of {@link CodeLocalsShifter}\n@@ -53,3 +53,3 @@\n-     * @param methodFlags flags of the method to construct CodeLocalsShifter for\n-     * @param methodDescriptor descriptor of the method to construct CodeLocalsShifter for\n-     * @return new instance of CodeLocalsShifter\n+     * @param methodFlags flags of the method to construct {@link CodeLocalsShifter} for\n+     * @param methodDescriptor descriptor of the method to construct {@link CodeLocalsShifter} for\n+     * @return new instance of {@link CodeLocalsShifter}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/components\/CodeLocalsShifter.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n- * CodeStackTracker is a {@link jdk.internal.classfile.CodeTransform} synchronously tracking\n- * stack content and calculating max stack size.\n+ * {@link CodeStackTracker} is a {@link CodeTransform} tracking stack content\n+ * and calculating max stack size.\n@@ -53,1 +53,1 @@\n- *         trackedBuilder.ifThen(...\n+ *         trackedBuilder.ifThen(...);\n@@ -63,1 +63,1 @@\n-     * Creates new instance of CodeStackTracker initialized with provided stack items\n+     * Creates new instance of {@link CodeStackTracker} initialized with provided stack items\n@@ -65,1 +65,1 @@\n-     * @return new instance of CodeStackTracker\n+     * @return new instance of {@link CodeStackTracker}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/components\/CodeStackTracker.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}