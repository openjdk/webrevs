{"files":[{"patch":"@@ -72,12 +72,3 @@\n-        if (obj instanceof BootstrapMethodEntry e\n-            && e.bootstrapMethod() == handle\n-            && e.arguments().size() == arguments.size()) {\n-                for (int i = 0; i < arguments.size(); ++i) {\n-                    if (e.arguments().get(i) != arguments.get(i)) {\n-                        return false;\n-                    }\n-                }\n-                return true;\n-            }\n-        else\n-            return false;\n+        return obj instanceof BootstrapMethodEntry e\n+                && e.bootstrapMethod().equals(handle)\n+                && e.arguments().equals(arguments);\n@@ -89,3 +80,1 @@\n-        for (LoadableConstantEntry a : arguments) {\n-            hash = 31 * hash + a.hashCode();\n-        }\n+        hash = 31 * hash + arguments.hashCode();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BootstrapMethodEntryImpl.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -570,1 +570,1 @@\n-                    (Node)methodToTree(mm, verbosity))));\n+                    methodToTree(mm, verbosity))));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassPrinterImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        for (int i = 1; i < type.length(); ++i) {\n+        loop: for (int i = 1; i < type.length(); ++i) {\n@@ -75,2 +75,1 @@\n-                    i = type.length();\n-                    break;\n+                    break loop;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/Util.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}