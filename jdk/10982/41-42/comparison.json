{"files":[{"patch":"@@ -54,1 +54,1 @@\n-     * element.\n+     * element otherwise false is returned.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/AccessFlags.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-public class AbstractDirectBuilder<B, M> {\n+public class AbstractDirectBuilder<M> {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractDirectBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        extends AbstractDirectBuilder<ClassBuilder, ClassModel>\n+        extends AbstractDirectBuilder<ClassModel>\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectClassBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        extends AbstractDirectBuilder<CodeBuilder, CodeModel>\n+        extends AbstractDirectBuilder<CodeModel>\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-        extends AbstractDirectBuilder<FieldBuilder, FieldModel>\n+        extends AbstractDirectBuilder<FieldModel>\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectFieldBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        extends AbstractDirectBuilder<MethodBuilder, MethodModel>\n+        extends AbstractDirectBuilder<MethodModel>\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectMethodBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    interface FakeClassTransform extends ClassTransform {\n+    interface UnresolvedClassTransform extends ClassTransform {\n@@ -92,1 +92,1 @@\n-            implements FakeClassTransform {\n+            implements UnresolvedClassTransform {\n@@ -105,1 +105,1 @@\n-            implements FakeClassTransform {\n+            implements UnresolvedClassTransform {\n@@ -114,1 +114,1 @@\n-            implements FakeClassTransform {\n+            implements UnresolvedClassTransform {\n@@ -131,1 +131,1 @@\n-                return FakeClassTransform.super.andThen(next);\n+                return UnresolvedClassTransform.super.andThen(next);\n@@ -137,1 +137,1 @@\n-            implements FakeClassTransform {\n+            implements UnresolvedClassTransform {\n@@ -154,1 +154,1 @@\n-                return FakeClassTransform.super.andThen(next);\n+                return UnresolvedClassTransform.super.andThen(next);\n@@ -160,1 +160,1 @@\n-    interface FakeMethodTransform extends MethodTransform {\n+    interface UnresolvedMethodTransform extends MethodTransform {\n@@ -185,1 +185,1 @@\n-            implements TransformImpl.FakeMethodTransform {\n+            implements TransformImpl.UnresolvedMethodTransform {\n@@ -198,1 +198,1 @@\n-            implements TransformImpl.FakeMethodTransform {\n+            implements TransformImpl.UnresolvedMethodTransform {\n@@ -206,1 +206,1 @@\n-            implements TransformImpl.FakeMethodTransform {\n+            implements TransformImpl.UnresolvedMethodTransform {\n@@ -223,1 +223,1 @@\n-                   : FakeMethodTransform.super.andThen(next);\n+                   : UnresolvedMethodTransform.super.andThen(next);\n@@ -230,1 +230,1 @@\n-    interface FakeFieldTransform extends FieldTransform {\n+    interface UnresolvedFieldTransform extends FieldTransform {\n@@ -254,1 +254,1 @@\n-            implements FakeFieldTransform {\n+            implements UnresolvedFieldTransform {\n@@ -267,1 +267,1 @@\n-            implements FakeFieldTransform {\n+            implements UnresolvedFieldTransform {\n@@ -276,1 +276,1 @@\n-    interface FakeCodeTransform extends CodeTransform {\n+    interface UnresolvedCodeTransform extends CodeTransform {\n@@ -300,1 +300,1 @@\n-            implements FakeCodeTransform {\n+            implements UnresolvedCodeTransform {\n@@ -313,1 +313,1 @@\n-            implements FakeCodeTransform {\n+            implements UnresolvedCodeTransform {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/TransformImpl.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"}]}