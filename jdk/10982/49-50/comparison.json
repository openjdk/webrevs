{"files":[{"patch":"@@ -75,0 +75,23 @@\n+\n+    private static final String\n+            FMT_ArgumentConstant = \"ArgumentConstant[OP=%s, val=%s]\",\n+            FMT_Branch = \"Branch[OP=%s]\",\n+            FMT_Field = \"Field[OP=%s, field=%s.%s:%s]\",\n+            FMT_Increment = \"Increment[OP=%s, slot=%d, val=%d]\",\n+            FMT_Invoke = \"Invoke[OP=%s, m=%s.%s%s]\",\n+            FMT_InvokeDynamic = \"InvokeDynamic[OP=%s, bsm=%s %s]\",\n+            FMT_InvokeInterface = \"InvokeInterface[OP=%s, m=%s.%s%s]\",\n+            FMT_Load = \"Load[OP=%s, slot=%d]\",\n+            FMT_LoadConstant = \"LoadConstant[OP=%s, val=%s]\",\n+            FMT_LookupSwitch = \"LookupSwitch[OP=%s]\",\n+            FMT_NewMultiArray = \"NewMultiArray[OP=%s, type=%s[%d]]\",\n+            FMT_NewObj = \"NewObj[OP=%s, type=%s]\",\n+            FMT_NewPrimitiveArray = \"NewPrimitiveArray[OP=%s, type=%s]\",\n+            FMT_NewRefArray = \"NewRefArray[OP=%s, type=%s]\",\n+            FMT_Return = \"Return[OP=%s]\",\n+            FMT_Store = \"Store[OP=%s, slot=%d]\",\n+            FMT_TableSwitch = \"TableSwitch[OP=%s]\",\n+            FMT_Throw = \"Throw[OP=%s]\",\n+            FMT_TypeCheck = \"TypeCheck[OP=%s, type=%s]\",\n+            FMT_Unbound = \"%s[op=%s]\";\n+\n@@ -132,1 +155,1 @@\n-            return String.format(\"Load[OP=%s, slot=%d]\", this.opcode(), slot());\n+            return String.format(FMT_Load, this.opcode(), slot());\n@@ -160,1 +183,1 @@\n-            return String.format(\"Store[OP=%s, slot=%d]\", this.opcode(), slot());\n+            return String.format(FMT_Store, this.opcode(), slot());\n@@ -193,1 +216,1 @@\n-            return String.format(\"Inc[OP=%s, slot=%d, val=%d]\", this.opcode(), slot(), constant());\n+            return String.format(FMT_Increment, this.opcode(), slot(), constant());\n@@ -223,1 +246,1 @@\n-            return String.format(\"Branch[OP=%s]\", this.opcode());\n+            return String.format(FMT_Branch, this.opcode());\n@@ -279,1 +302,1 @@\n-            return String.format(\"LookupSwitch[OP=%s]\", this.opcode());\n+            return String.format(FMT_LookupSwitch, this.opcode());\n@@ -348,1 +371,1 @@\n-            return String.format(\"TableSwitch[OP=%s]\", this.opcode());\n+            return String.format(FMT_TableSwitch, this.opcode());\n@@ -379,1 +402,1 @@\n-            return String.format(\"Field[OP=%s, field=%s.%s:%s]\", this.opcode(), owner().asInternalName(), name().stringValue(), type().stringValue());\n+            return String.format(FMT_Field, this.opcode(), owner().asInternalName(), name().stringValue(), type().stringValue());\n@@ -419,1 +442,1 @@\n-            return String.format(\"Invoke[OP=%s, m=%s.%s%s]\", this.opcode(), owner().asInternalName(), name().stringValue(), type().stringValue());\n+            return String.format(FMT_Invoke, this.opcode(), owner().asInternalName(), name().stringValue(), type().stringValue());\n@@ -459,1 +482,1 @@\n-            return String.format(\"InvokeInterface[OP=%s, m=%s.%s%s]\", this.opcode(), owner().asInternalName(), name().stringValue(), type().stringValue());\n+            return String.format(FMT_InvokeInterface, this.opcode(), owner().asInternalName(), name().stringValue(), type().stringValue());\n@@ -489,1 +512,1 @@\n-            return String.format(\"InvokeDynamic[OP=%s, bsm=%s %s]\", this.opcode(), bootstrapMethod(), bootstrapArgs());\n+            return String.format(FMT_InvokeDynamic, this.opcode(), bootstrapMethod(), bootstrapArgs());\n@@ -519,1 +542,1 @@\n-            return String.format(\"NewObj[OP=%s, type=%s]\", this.opcode(), className().asInternalName());\n+            return String.format(FMT_NewObj, this.opcode(), className().asInternalName());\n@@ -538,1 +561,1 @@\n-            return String.format(\"NewPrimitiveArray[OP=%s, type=%s]\", this.opcode(), typeKind());\n+            return String.format(FMT_NewPrimitiveArray, this.opcode(), typeKind());\n@@ -565,1 +588,1 @@\n-            return String.format(\"NewRefArray[OP=%s, type=%s]\", this.opcode(), componentType().asInternalName());\n+            return String.format(FMT_NewRefArray, this.opcode(), componentType().asInternalName());\n@@ -596,1 +619,1 @@\n-            return String.format(\"NewMultiArray[OP=%s, type=%s[%d]]\", this.opcode(), arrayType().asInternalName(), dimensions());\n+            return String.format(FMT_NewMultiArray, this.opcode(), arrayType().asInternalName(), dimensions());\n@@ -626,1 +649,1 @@\n-            return String.format(\"TypeCheck[OP=%s, type=%s]\", this.opcode(), type().asInternalName());\n+            return String.format(FMT_TypeCheck, this.opcode(), type().asInternalName());\n@@ -649,1 +672,1 @@\n-            return String.format(\"ArgumentConstant[OP=%s, val=%s]\", this.opcode(), constantValue());\n+            return String.format(FMT_ArgumentConstant, this.opcode(), constantValue());\n@@ -684,1 +707,1 @@\n-            return String.format(\"LoadConstant[OP=%s, val=%s]\", this.opcode(), constantValue());\n+            return String.format(FMT_LoadConstant, this.opcode(), constantValue());\n@@ -703,1 +726,1 @@\n-            return String.format(\"%s[op=%s]\", this.getClass().getSimpleName(), op);\n+            return String.format(FMT_Unbound, this.getClass().getSimpleName(), op);\n@@ -733,1 +756,1 @@\n-            return String.format(\"Load[OP=%s, slot=%d]\", this.opcode(), slot());\n+            return String.format(FMT_Load, this.opcode(), slot());\n@@ -764,1 +787,1 @@\n-            return String.format(\"Store[OP=%s, slot=%d]\", this.opcode(), slot());\n+            return String.format(FMT_Store, this.opcode(), slot());\n@@ -799,1 +822,1 @@\n-            return String.format(\"Increment[OP=%s, slot=%d, constant=%d]\", this.opcode(), slot(), constant());\n+            return String.format(FMT_Increment, this.opcode(), slot(), constant());\n@@ -824,1 +847,1 @@\n-            return String.format(\"Branch[OP=%s]\", this.opcode());\n+            return String.format(FMT_Branch, this.opcode());\n@@ -857,1 +880,1 @@\n-            return String.format(\"LookupSwitch[OP=%s]\", this.opcode());\n+            return String.format(FMT_LookupSwitch, this.opcode());\n@@ -903,1 +926,1 @@\n-            return String.format(\"LookupSwitch[OP=%s]\", this.opcode());\n+            return String.format(FMT_TableSwitch, this.opcode());\n@@ -921,1 +944,1 @@\n-            return String.format(\"Return[OP=%s]\", this.opcode());\n+            return String.format(FMT_Return, this.opcode());\n@@ -935,1 +958,1 @@\n-            return String.format(\"Throw[OP=%s]\", this.opcode());\n+            return String.format(FMT_Throw, this.opcode());\n@@ -962,1 +985,1 @@\n-            return String.format(\"FieldAccess[OP=%s, field=%s.%s:%s]\", this.opcode(), this.owner().asInternalName(), this.name().stringValue(), this.type().stringValue());\n+            return String.format(FMT_Field, this.opcode(), this.owner().asInternalName(), this.name().stringValue(), this.type().stringValue());\n@@ -1002,1 +1025,1 @@\n-            return String.format(\"Invoke[OP=%s, m=%s.%s%s]\", this.opcode(), owner().asInternalName(), name().stringValue(), type().stringValue());\n+            return String.format(FMT_Invoke, this.opcode(), owner().asInternalName(), name().stringValue(), type().stringValue());\n@@ -1027,1 +1050,1 @@\n-            return String.format(\"InvokeDynamic[OP=%s, bsm=%s %s]\", this.opcode(), bootstrapMethod(), bootstrapArgs());\n+            return String.format(FMT_InvokeDynamic, this.opcode(), bootstrapMethod(), bootstrapArgs());\n@@ -1052,1 +1075,1 @@\n-            return String.format(\"NewObj[OP=%s, type=%s]\", this.opcode(), className().asInternalName());\n+            return String.format(FMT_NewObj, this.opcode(), className().asInternalName());\n@@ -1077,1 +1100,1 @@\n-            return String.format(\"NewPrimitiveArray[OP=%s, type=%s]\", this.opcode(), typeKind());\n+            return String.format(FMT_NewPrimitiveArray, this.opcode(), typeKind());\n@@ -1102,1 +1125,1 @@\n-            return String.format(\"NewRefArray[OP=%s, type=%s]\", this.opcode(), componentType().asInternalName());\n+            return String.format(FMT_NewRefArray, this.opcode(), componentType().asInternalName());\n@@ -1135,1 +1158,1 @@\n-            return String.format(\"NewMultiArray[OP=%s, type=%s[%d]]\", this.opcode(), arrayType().asInternalName(), dimensions());\n+            return String.format(FMT_NewMultiArray, this.opcode(), arrayType().asInternalName(), dimensions());\n@@ -1187,1 +1210,1 @@\n-            return String.format(\"TypeCheck[OP=%s, type=%s]\", this.opcode(), type().asInternalName());\n+            return String.format(FMT_TypeCheck, this.opcode(), type().asInternalName());\n@@ -1272,1 +1295,1 @@\n-            return String.format(\"ArgumentConstant[OP=%s, val=%s]\", this.opcode(), constantValue());\n+            return String.format(FMT_ArgumentConstant, this.opcode(), constantValue());\n@@ -1302,1 +1325,1 @@\n-            return String.format(\"LoadConstant[OP=%s, val=%s]\", this.opcode(), constantValue());\n+            return String.format(FMT_LoadConstant, this.opcode(), constantValue());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AbstractInstruction.java","additions":59,"deletions":36,"binary":false,"changes":95,"status":"modified"}]}