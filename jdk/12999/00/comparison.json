{"files":[{"patch":"@@ -367,28 +367,0 @@\n-\n-HeapRegion* OldGCAllocRegion::release() {\n-  HeapRegion* cur = get();\n-  if (cur != NULL) {\n-    \/\/ Determine how far we are from the next card boundary. If it is smaller than\n-    \/\/ the minimum object size we can allocate into, expand into the next card.\n-    HeapWord* top = cur->top();\n-    HeapWord* aligned_top = align_up(top, BOTConstants::card_size());\n-\n-    size_t to_allocate_words = pointer_delta(aligned_top, top, HeapWordSize);\n-\n-    if (to_allocate_words != 0) {\n-      \/\/ We are not at a card boundary. Fill up, possibly into the next, taking the\n-      \/\/ end of the region and the minimum object size into account.\n-      to_allocate_words = MIN2(pointer_delta(cur->end(), cur->top(), HeapWordSize),\n-                               MAX2(to_allocate_words, G1CollectedHeap::min_fill_size()));\n-\n-      \/\/ Skip allocation if there is not enough space to allocate even the smallest\n-      \/\/ possible object. In this case this region will not be retained, so the\n-      \/\/ original problem cannot occur.\n-      if (to_allocate_words >= G1CollectedHeap::min_fill_size()) {\n-        HeapWord* dummy = attempt_allocation(to_allocate_words);\n-        cur->fill_with_dummy_object(dummy, to_allocate_words);\n-      }\n-    }\n-  }\n-  return G1AllocRegion::release();\n-}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1AllocRegion.cpp","additions":0,"deletions":28,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -278,7 +278,0 @@\n-\n-  \/\/ This specialization of release() makes sure that the last card that has\n-  \/\/ been allocated into has been completely filled by a dummy object.  This\n-  \/\/ avoids races when remembered set scanning wants to update the BOT of the\n-  \/\/ last card in the retained old gc alloc region, and allocation threads\n-  \/\/ allocating into that card at the same time.\n-  virtual HeapRegion* release();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1AllocRegion.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"}]}