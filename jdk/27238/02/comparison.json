{"files":[{"patch":"@@ -213,6 +213,5 @@\n-#ifdef NOT_PRODUCT\n-          ShenandoahEvacuationTracker* evac_tracker = heap->evac_tracker();\n-          ShenandoahCycleStats         evac_stats   = evac_tracker->flush_cycle_to_global();\n-          evac_tracker->print_evacuations_on(&ls, &evac_stats.workers,\n-                                                  &evac_stats.mutators);\n-#endif\n+          if (ShenandoahEvacTracking) {\n+            ShenandoahEvacuationTracker* evac_tracker = heap->evac_tracker();\n+            ShenandoahCycleStats         evac_stats   = evac_tracker->flush_cycle_to_global();\n+            evac_tracker->print_evacuations_on(&ls, &evac_stats.workers, &evac_stats.mutators);\n+          }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -126,6 +126,8 @@\n-  st->print_cr(\"Workers: \");\n-  workers->print_on(st);\n-  st->cr();\n-  st->print_cr(\"Mutators: \");\n-  mutators->print_on(st);\n-  st->cr();\n+  if (ShenandoahEvacTracking) {\n+    st->print_cr(\"Workers: \");\n+    workers->print_on(st);\n+    st->cr();\n+    st->print_cr(\"Mutators: \");\n+    mutators->print_on(st);\n+    st->cr();\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahEvacTracker.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -327,0 +327,4 @@\n+  if (ShenandoahEvacTracking) {\n+    evac_tracker()->begin_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen);\n+  }\n+\n@@ -328,1 +332,0 @@\n-  NOT_PRODUCT(evac_tracker()->begin_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen));\n@@ -349,2 +352,4 @@\n-    \/\/ Record that the evacuation succeeded\n-    NOT_PRODUCT(evac_tracker()->end_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen));\n+    if (ShenandoahEvacTracking) {\n+      \/\/ Record that the evacuation succeeded\n+      evac_tracker()->end_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen);\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGenerationalHeap.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1374,0 +1374,4 @@\n+  if (ShenandoahEvacTracking) {\n+    evac_tracker()->begin_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen);\n+  }\n+\n@@ -1375,1 +1379,0 @@\n-  NOT_PRODUCT(evac_tracker()->begin_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen));\n@@ -1385,1 +1388,3 @@\n-    NOT_PRODUCT(evac_tracker()->end_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen));\n+    if (ShenandoahEvacTracking) {\n+      evac_tracker()->end_evacuation(thread, size * HeapWordSize, from_region->affiliation(), target_gen);\n+    }\n@@ -1615,6 +1620,5 @@\n-#ifdef NOT_PRODUCT\n-    evac_tracker()->print_global_on(&ls);\n-\n-    ls.cr();\n-    ls.cr();\n-#endif\n+    if (ShenandoahEvacTracking) {\n+      evac_tracker()->print_global_on(&ls);\n+      ls.cr();\n+      ls.cr();\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -397,0 +397,7 @@\n+  product(bool, ShenandoahEvacTracking, false, DIAGNOSTIC,                  \\\n+          \"Collect additional metrics about evacuations. Enabling this \"    \\\n+          \"tracks how many objects and how many bytes were evacuated, and \" \\\n+          \"how many were abandoned. The information will be categorized \"   \\\n+          \"by thread type (worker or mutator) and evacuation type (young, \" \\\n+          \"old, or promotion.\")                                             \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}