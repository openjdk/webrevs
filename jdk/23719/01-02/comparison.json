{"files":[{"patch":"@@ -242,1 +242,4 @@\n-  KRegister limb = limb0;\n+  \/\/ Do carry propagation while remaining in vector domain. Carry register\n+  \/\/ contains just the carry for the particular column, everything else is masked\n+  \/\/ out.\n+  \/\/ Note: element 'shift' with vpermq is more expensive, vpalignr if possible\n@@ -347,1 +350,1 @@\n- * \n+ *\n@@ -351,1 +354,1 @@\n- * \n+ *\n@@ -354,1 +357,1 @@\n- * \n+ *\n@@ -389,1 +392,1 @@\n-  __ vpxorq(Zero, Zero, Zero, Assembler::AVX_256bit);\n+  __ vpxor(Zero, Zero, Zero, Assembler::AVX_256bit);\n@@ -400,1 +403,1 @@\n-  __ vpxorq(Acc1, Acc1, Acc1, Assembler::AVX_256bit);\n+  __ vpxor(Acc1, Acc1, Acc1, Assembler::AVX_256bit);\n@@ -403,1 +406,1 @@\n-      __ vpxorq(Acc2, Acc2, Acc2, Assembler::AVX_256bit);\n+      __ vpxor(Acc2, Acc2, Acc2, Assembler::AVX_256bit);\n@@ -465,1 +468,1 @@\n-  \/\/ Carry propagate the subtraction result Acc2 first (since the last carry is \n+  \/\/ Carry propagate the subtraction result Acc2 first (since the last carry is\n@@ -512,1 +515,1 @@\n-  __ vpxorq(Acc1, Acc1, Acc1, Assembler::AVX_256bit);\n+  __ vpxor(Acc1, Acc1, Acc1, Assembler::AVX_256bit);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_poly_mont.cpp","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"}]}