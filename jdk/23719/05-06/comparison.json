{"files":[{"patch":"@@ -63,1 +63,2 @@\n-    private static void checkOverflow(ImmutableIntegerModuloP testValue, long seed) {\n+    private static void checkOverflow(String opMsg,\n+            ImmutableIntegerModuloP testValue, long seed) {\n@@ -71,2 +72,4 @@\n-            throw new RuntimeException(\"SEED[\" + seed + \"]: \" +\n-            ref.toString(16) + \" != \" + mod.toString(16));\n+            String msg = \"Error while \" + opMsg + System.lineSeparator()\n+                + ref.toString(16) + \" != \" + mod.toString(16) + System.lineSeparator()\n+                + \"To reproduce, set SEED to [\" + seed + \"L]: \";\n+            throw new RuntimeException(msg);\n@@ -76,1 +79,1 @@\n-    private static void check(BigInteger reference,\n+    private static void check(String opMsg, BigInteger reference,\n@@ -80,2 +83,5 @@\n-            throw new RuntimeException(\"SEED[\" + seed + \"]: \" +\n-                reference.toString(16) + \" != \" + test.toString(16));\n+            String msg = \"Error while \" + opMsg + System.lineSeparator()\n+                + reference.toString(16) + \" != \" + test.toString(16)\n+                + System.lineSeparator()+ \"To reproduce, set SEED to [\"\n+                + seed + \"L]: \";\n+            throw new RuntimeException(msg);\n@@ -87,0 +93,2 @@\n+        \/\/ To reproduce an error, fix the value of the seed to the value from\n+        \/\/ the failure\n@@ -102,0 +110,1 @@\n+        String msg = \"converting \"+aRef.toString(16) + \" to montgomery domain\";\n@@ -103,2 +112,2 @@\n-        check(aRef, a, seed);\n-        checkOverflow(a, seed);\n+        check(msg, aRef, a, seed);\n+        checkOverflow(msg, a, seed);\n@@ -107,0 +116,1 @@\n+        msg = \"converting \"+aRef.toString(16) + \" to montgomery domain\";\n@@ -108,2 +118,2 @@\n-        check(bRef, b, seed);\n-        checkOverflow(b, seed);\n+        check(msg, bRef, b, seed);\n+        checkOverflow(msg, b, seed);\n@@ -112,0 +122,1 @@\n+            msg = \"squaring \"+aRef.toString(16);\n@@ -114,2 +125,2 @@\n-            check(aRef, a, seed);\n-            checkOverflow(a, seed);\n+            check(msg, aRef, a, seed);\n+            checkOverflow(msg, a, seed);\n@@ -119,0 +130,1 @@\n+            msg = \"doubling \"+aRef.toString(16);\n@@ -121,1 +133,1 @@\n-            check(aRef, a, seed);\n+            check(msg, aRef, a, seed);\n@@ -125,0 +137,1 @@\n+            msg = \"subtracting \"+bRef.toString(16)+\" from \"+aRef.toString(16);\n@@ -127,1 +140,1 @@\n-            check(aRef, a, seed);\n+            check(msg, aRef, a, seed);\n@@ -131,0 +144,1 @@\n+            msg = \"multiplying \"+bRef.toString(16)+\" with \"+aRef.toString(16);\n@@ -133,2 +147,2 @@\n-            check(aRef, a, seed);\n-            checkOverflow(a, seed);\n+            check(msg, aRef, a, seed);\n+            checkOverflow(msg, a, seed);\n@@ -138,0 +152,1 @@\n+            msg = \"multiplying \"+aRef.toString(16)+\" with constant 2\";\n@@ -140,1 +155,1 @@\n-            check(aRef, a, seed);\n+            check(msg, aRef, a, seed);\n@@ -144,0 +159,1 @@\n+            msg = \"multiplying \"+aRef.toString(16)+\" with constant 3\";\n@@ -146,2 +162,2 @@\n-            check(aRef, a, seed);\n-            checkOverflow(a, seed);\n+            check(msg, aRef, a, seed);\n+            checkOverflow(msg, a, seed);\n@@ -151,0 +167,1 @@\n+            msg = \"multiplying \"+aRef.toString(16)+\" with constant 4\";\n@@ -153,2 +170,2 @@\n-            check(aRef, a, seed);\n-            checkOverflow(a, seed);\n+            check(msg, aRef, a, seed);\n+            checkOverflow(msg, a, seed);\n","filename":"test\/jdk\/com\/sun\/security\/util\/math\/intpoly\/MontgomeryPolynomialFuzzTest.java","additions":38,"deletions":21,"binary":false,"changes":59,"status":"modified"}]}