{"files":[{"patch":"@@ -734,2 +734,3 @@\n-        \/\/ indication that the service was either not added or added with the\n-        \/\/ Current API. Only algorithm service keys are added to this set.\n+        \/\/ indication that the service was either not added to the services\n+        \/\/ map (any API) or was added with the Current API. Only algorithm\n+        \/\/ service keys are added to this set.\n@@ -750,0 +751,3 @@\n+        \/*\n+         * Default constructor. Creates an empty services map for a Provider.\n+         *\/\n@@ -986,3 +990,4 @@\n-                        \/\/ The service was added with the Current API. Overwrite\n-                        \/\/ the alias entry on the services map without modifying\n-                        \/\/ the service that is currently using it.\n+                        \/\/ The service was added with the Current API. Once we\n+                        \/\/ return to putService, the alias entry on the services\n+                        \/\/ map will be overwritten without modifying the service\n+                        \/\/ that is currently associated with.\n@@ -1125,1 +1130,1 @@\n-                    \/\/ Services added through an alias or an attribute may don't\n+                    \/\/ Services added through an alias or an attribute may not\n@@ -1370,0 +1375,2 @@\n+         *\n+         * This method is invoked from the Legacy API only.\n@@ -1536,3 +1543,3 @@\n-        Object oldValue = super.get(key);\n-        return doLegacyOp(servicesMap, key, oldValue, null, OPType.REMOVE) ==\n-                PropertiesMapAction.UPDATE ? super.remove(key) : oldValue;\n+        Object value = super.get(key);\n+        return doLegacyOp(servicesMap, key, value, null, OPType.REMOVE) ==\n+                PropertiesMapAction.UPDATE ? super.remove(key) : value;\n@@ -1654,1 +1661,0 @@\n-    \/\/ used as key in the serviceMap and legacyMap HashMaps\n@@ -2069,3 +2075,2 @@\n-        \/\/ For services added to a ServicesMap, their algorithm service key.\n-        \/\/ This value derives from the algorithm field. For services (still)\n-        \/\/ not added to a ServicesMap, value is null.\n+        \/\/ This value is the algorithm service key when the service is added to\n+        \/\/ the ServicesMap. Value is null otherwise.\n@@ -2074,5 +2079,9 @@\n-        \/\/ For services added to a ServicesMap, this is a map from alias service\n-        \/\/ keys to alias string values. Empty map if no aliases. While map\n-        \/\/ entries derive from the aliases field, keys are not repeated\n-        \/\/ (case-insensitive comparison) and not equal to the algorithm. For\n-        \/\/ services (still) not added to a ServicesMap, value is an empty map.\n+        \/\/ This map is empty if the service has no aliases or has not been\n+        \/\/ registered in the ServicesMap. When the service has aliases and is\n+        \/\/ registered in the ServicesMap, this information maps the alias\n+        \/\/ ServiceKey to the string alias as originally defined in the service.\n+        \/\/\n+        \/\/ The purpose for this map is both to keep references to alias\n+        \/\/ ServiceKeys for reuse (i.e. we don't have to construct them from\n+        \/\/ strings multiple times) and to facilitate alias string updates with\n+        \/\/ different casing from the Legacy API.\n@@ -2110,1 +2119,1 @@\n-         * Constructor used from the ServicesMap Legacy API.\n+         * Constructor used by the ServicesMap Legacy API.\n@@ -2149,1 +2158,0 @@\n-            registered = false;\n@@ -2241,1 +2249,1 @@\n-                this.attributes = new HashMap<>();\n+                this.attributes = new HashMap<>(attributes.size(), 1.0f);\n@@ -2249,23 +2257,0 @@\n-        \/*\n-         * When a Service is added to a ServicesMap with the Current API,\n-         * service and alias keys must be generated. Currently used by\n-         * ServicesMap::putService. Legacy API methods do not need to call:\n-         * they generated the algorithm key at construction time and alias\n-         * keys with Service::addAliasKey.\n-         *\/\n-        private void generateServiceKeys() {\n-            if (algKey == null) {\n-                assert (Object)aliasKeys == Collections.emptyMap() :\n-                        \"aliasKeys expected to be the empty map.\";\n-                algKey = new ServiceKey(type, algorithm, true);\n-                aliasKeys = new HashMap<>(aliases.size());\n-                for (String alias : aliases) {\n-                    ServiceKey aliasKey = new ServiceKey(type, alias, true);\n-                    if (!aliasKey.equals(algKey)) {\n-                        aliasKeys.put(aliasKey, alias);\n-                    }\n-                }\n-                aliasKeys = Collections.unmodifiableMap(aliasKeys);\n-            }\n-        }\n-\n@@ -2407,0 +2392,25 @@\n+        \/*\n+         * When a Service is added to a ServicesMap with the Current API,\n+         * service and alias keys must be generated. Currently used by\n+         * ServicesMap::putService. Legacy API methods do not need to call:\n+         * they generated the algorithm key at construction time and alias\n+         * keys with Service::addAliasKey.\n+         *\/\n+        private void generateServiceKeys() {\n+            if (algKey == null) {\n+                assert (Object)aliasKeys == Collections.emptyMap() :\n+                        \"aliasKeys expected to be the empty map.\";\n+                algKey = new ServiceKey(type, algorithm, true);\n+                if (!aliases.isEmpty()) {\n+                    aliasKeys = new HashMap<>(aliases.size());\n+                    for (String alias : aliases) {\n+                        ServiceKey aliasKey = new ServiceKey(type, alias, true);\n+                        if (!aliasKey.equals(algKey)) {\n+                            aliasKeys.put(aliasKey, alias);\n+                        }\n+                    }\n+                    aliasKeys = Collections.unmodifiableMap(aliasKeys);\n+                }\n+            }\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":54,"deletions":44,"binary":false,"changes":98,"status":"modified"}]}