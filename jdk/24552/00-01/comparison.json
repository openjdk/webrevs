{"files":[{"patch":"@@ -73,1 +73,1 @@\n-    \/\/ Park–Miller random number generator\n+    \/\/ Park-Miller random number generator\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_g1CardSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-  EXPECT_TRUE(actual_location != nullptr) << \"Unexpected reservation failure, can’t verify correct location\";\n+  EXPECT_TRUE(actual_location != nullptr) << \"Unexpected reservation failure, can't verify correct location\";\n@@ -93,1 +93,1 @@\n-  EXPECT_TRUE(aligned_request != nullptr) << \"Unexpected reservation failure, can’t verify correct alignment\";\n+  EXPECT_TRUE(aligned_request != nullptr) << \"Unexpected reservation failure, can't verify correct alignment\";\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_windows.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-        Common.field1VarHandle.getAndSet​(o, i);\n+        Common.field1VarHandle.getAndSet(o, i);\n@@ -202,1 +202,1 @@\n-        Common.field1VarHandle.getAndSet​(o, i);\n+        Common.field1VarHandle.getAndSet(o, i); \/a\n@@ -208,2 +208,2 @@\n-        Common.field1VarHandle.getAndSet​(o, i);\n-        Common.field2VarHandle.getAndSet​(o, i);\n+        Common.field1VarHandle.getAndSet(o, i);\n+        Common.field2VarHandle.getAndSet(o, i);\n@@ -393,1 +393,1 @@\n-        Common.field1VarHandle.getAndSet​(o, i);\n+        Common.field1VarHandle.getAndSet(o, i);\n@@ -400,1 +400,1 @@\n-        Common.field1VarHandle.getAndSet​(o, i);\n+        Common.field1VarHandle.getAndSet(o, i);\n@@ -408,1 +408,1 @@\n-        Common.field1VarHandle.getAndSet​(o, i);\n+        Common.field1VarHandle.getAndSet(o, i);\n@@ -416,2 +416,2 @@\n-        Common.field1VarHandle.getAndSet​(o, i);\n-        Common.field1VarHandle.getAndSet​(o, i);\n+        Common.field1VarHandle.getAndSet(o, i);\n+        Common.field1VarHandle.getAndSet(o, i);\n","filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestZGCBarrierElision.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n- * This is best practice, because that allows the test to be run under different conditions – maybe only a single\n+ * This is best practice, because that allows the test to be run under different conditions - maybe only a single\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/generators\/Generators.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -438,1 +438,1 @@\n-    public String getСType() {\n+    public String getCType() {\n@@ -446,1 +446,1 @@\n-    public String getСConv() {\n+    public String getCConv() {\n@@ -795,1 +795,1 @@\n-            String ctype = list.get(type).getСType();\n+            String ctype = list.get(type).getCType();\n@@ -797,1 +797,1 @@\n-            String cconv = list.get(type).getСConv();\n+            String cconv = list.get(type).getCConv();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/jit\/LongTransitions\/JniArmHFTestGenerator.java.txt","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n- * bug apparent, we need to invoke {@code Raster.createRaster(…)}\n+ * bug apparent, we need to invoke {@code Raster.createRaster(...)}\n","filename":"test\/jdk\/java\/awt\/image\/DrawImage\/TiledImage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-﻿<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n@@ -81,1 +81,1 @@\n-<\/xs:schema>\n\\ No newline at end of file\n+<\/xs:schema>\n","filename":"test\/jdk\/jdk\/jfr\/tool\/jfr.xsd","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}