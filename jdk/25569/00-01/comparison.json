{"files":[{"patch":"@@ -63,1 +63,1 @@\n-            return maskToAccessFlagsNullSafe(mask, location, cffv);\n+            return AccessFlag.maskToAccessFlags(mask, location, cffv);\n@@ -65,1 +65,1 @@\n-            mask &= cffv != null ? location.flagsMask(cffv) : location.flagsMask();\n+            mask &= location.flagsMask(cffv);\n@@ -67,1 +67,1 @@\n-            return maskToAccessFlagsNullSafe(mask, location, cffv);\n+            return AccessFlag.maskToAccessFlags(mask, location, cffv);\n@@ -71,7 +71,0 @@\n-    private Set<AccessFlag> maskToAccessFlagsNullSafe(int mask, AccessFlag.Location location, ClassFileFormatVersion cffv) {\n-        if (cffv == null) {\n-            return AccessFlag.maskToAccessFlags(mask, location);\n-        }\n-        return AccessFlag.maskToAccessFlags(mask, location, cffv);\n-    }\n-\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/BasicWriter.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -121,1 +121,2 @@\n-            return null;\n+            \/\/ something not representable by CFFV, let's fall back\n+            return ClassFileFormatVersion.latest();\n@@ -123,1 +124,2 @@\n-            return null;\n+            \/\/ preview versions aren't explicitly supported, but latest is good enough for now\n+            return ClassFileFormatVersion.latest();\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/ClassWriter.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+            of(createClassFile(classFile, 0, 0), false),\n","filename":"test\/langtools\/tools\/javap\/ClassFileVersionTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}