{"files":[{"patch":"@@ -31,1 +31,1 @@\n-*\/\n+ *\/\n@@ -48,2 +48,3 @@\n-            Please verify that the frames are situated correctly.\n-            Also, please verify that the picture inside of frames looks the same\n+            Please verify that the frames are located correctly on the screen.\n+\n+            Also verify that the picture inside of frames looks the same\n@@ -51,1 +52,1 @@\n-            half of the frame. Also, that there is a blue rect exactly\n+            half of the frame. Make sure that there is a blue rectangle exactly\n@@ -63,1 +64,1 @@\n-        EventQueue.invokeAndWait(() -> createUI());\n+        EventQueue.invokeAndWait(TestLocationByPlatform::createUI);\n@@ -69,18 +70,1 @@\n-        Canvas c = new Canvas() {\n-            public Dimension getPreferredSize() {\n-                return new Dimension(400, 400);\n-            }\n-\n-            public void paint(Graphics g) {\n-                g.setColor(Color.red);\n-                for (int i = 399; i >= 0; i--) {\n-                    g.drawLine(400 - i - 1, 400 - i - 1,\n-                        400 - i - 1, 399);\n-                }\n-                g.setColor(Color.blue);\n-                g.drawLine(0, 0, 399, 0);\n-                g.drawLine(0, 0, 0, 399);\n-                g.drawLine(0, 399, 399, 399);\n-                g.drawLine(399, 0, 399, 399);\n-            }\n-        };\n+        Canvas c = new MyCanvas();\n@@ -94,18 +78,1 @@\n-        c = new Canvas() {\n-            public Dimension getPreferredSize() {\n-                return new Dimension(400, 400);\n-            }\n-\n-            public void paint(Graphics g) {\n-                g.setColor(Color.red);\n-                for (int i = 399; i >= 0; i--) {\n-                    g.drawLine(400 - i - 1, 400 - i - 1,\n-                        400 - i - 1, 399);\n-                }\n-                g.setColor(Color.blue);\n-                g.drawLine(0, 0, 399, 0);\n-                g.drawLine(0, 0, 0, 399);\n-                g.drawLine(0, 399, 399, 399);\n-                g.drawLine(399, 0, 399, 399);\n-            }\n-        };\n+        c = new MyCanvas();\n@@ -118,0 +85,21 @@\n+\n+class MyCanvas extends Canvas {\n+    @Override\n+    public Dimension getPreferredSize() {\n+        return new Dimension(400, 400);\n+    }\n+\n+    @Override\n+    public void paint(Graphics g) {\n+        g.setColor(Color.red);\n+        for (int i = 399; i >= 0; i--) {\n+            g.drawLine(400 - i - 1, 400 - i - 1,\n+                400 - i - 1, 399);\n+        }\n+        g.setColor(Color.blue);\n+        g.drawLine(0, 0, 399, 0);\n+        g.drawLine(0, 0, 0, 399);\n+        g.drawLine(0, 399, 399, 399);\n+        g.drawLine(399, 0, 399, 399);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/LocationByPlatform\/TestLocationByPlatform.java","additions":29,"deletions":41,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -38,2 +38,2 @@\n-    public static void main(String args[]) throws Exception {\n-        EventQueue.invokeAndWait(() -> runTest());\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(OwnedWindowShowTest::runTest);\n@@ -47,0 +47,2 @@\n+            \/\/ Showing a window with multiple level of ownership\n+            \/\/ should not throw NullPointerException\n@@ -49,3 +51,1 @@\n-            if (parent != null) {\n-                parent.dispose();\n-            }\n+            parent.dispose();\n","filename":"test\/jdk\/java\/awt\/Window\/OwnedWindowShowTest\/OwnedWindowShowTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-            2. Click on the \"Show\" button. A Window with a \"Hello World\" Label\n+            2. Click on the \"Show\" button. A window with a \"Hello World\" Label\n@@ -52,1 +52,1 @@\n-            3. If a Window does not appear, the test failed.\n+            3. If the window does not appear the test failed, otherwise passed.\n@@ -70,2 +70,4 @@\n-        showButton.addActionListener(new ShowWindowTest());\n-        hideButton.addActionListener(new ShowWindowTest());\n+\n+        ActionListener handler = new ShowWindowTest();\n+        showButton.addActionListener(handler);\n+        hideButton.addActionListener(handler);\n","filename":"test\/jdk\/java\/awt\/Window\/ShowWindowTest\/ShowWindowTest.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}