{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,19 +141,1 @@\n-     * This method is called when invoke doesn't find the named method.\n-     * Before throwing an exception, we check to see whether the\n-     * jmx.invoke.getters property is set, and if so whether the method\n-     * being invoked might be a getter or a setter.  If so we invoke it\n-     * and return the result.  This is for compatibility\n-     * with code based on JMX RI 1.0 or 1.1 which allowed invoking getters\n-     * and setters.  It is *not* recommended that new code use this feature.\n-     *\n-     * Since this method is either going to throw an exception or use\n-     * functionality that is strongly discouraged, we consider that its\n-     * performance is not very important.\n-     *\n-     * A simpler way to implement the functionality would be to add the getters\n-     * and setters to the operations map when jmx.invoke.getters is set.\n-     * However, that means that the property is consulted when an MBean\n-     * interface is being introspected and not thereafter.  Previously,\n-     * the property was consulted on every invocation.  So this simpler\n-     * implementation could potentially break code that sets and unsets\n-     * the property at different times.\n+     * This method is called to throw an Exception when invoke doesn't find the named method.\n@@ -167,1 +149,1 @@\n-        \/\/ Construct the exception that we will probably throw\n+        \/\/ Construct the exception that we will throw\n@@ -173,35 +155,0 @@\n-        if (introspector.isMXBean())\n-            throw exception; \/\/ No compatibility requirement here\n-\n-        \/\/ Is the compatibility property set?\n-        String invokeGettersS = System.getProperty(\"jmx.invoke.getters\");\n-        if (invokeGettersS == null)\n-            throw exception;\n-\n-        int rest = 0;\n-        Map<String, M> methods = null;\n-        if (signature == null || signature.length == 0) {\n-            if (operation.startsWith(\"get\"))\n-                rest = 3;\n-            else if (operation.startsWith(\"is\"))\n-                rest = 2;\n-            if (rest != 0)\n-                methods = getters;\n-        } else if (signature.length == 1 &&\n-                   operation.startsWith(\"set\")) {\n-            rest = 3;\n-            methods = setters;\n-        }\n-\n-        if (rest != 0) {\n-            String attrName = operation.substring(rest);\n-            M method = methods.get(attrName);\n-            if (method != null && introspector.getName(method).equals(operation)) {\n-                String[] msig = introspector.getSignature(method);\n-                if ((signature == null && msig.length == 0) ||\n-                        Arrays.equals(signature, msig)) {\n-                    return introspector.invokeM(method, resource, params, cookie);\n-                }\n-            }\n-        }\n-\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/PerInterface.java","additions":3,"deletions":56,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,2 @@\n- * @bug 6317101\n- * @summary Test that the jmx.invoke.getters system property works\n+ * @bug 6317101 8344976\n+ * @summary Test invocation after removal of the jmx.invoke.getters system property\n@@ -66,4 +66,1 @@\n-            System.out.println(\"OK: invoke without jmx.invoke.getters\");\n-        System.setProperty(\"jmx.invoke.getters\", \"true\");\n-        if (test(mbs, on, true))\n-            System.out.println(\"OK: invoke with jmx.invoke.getters\");\n+            System.out.println(\"OK\");\n@@ -120,1 +117,1 @@\n-        \/\/ Following cases should fail whether or not jmx.invoke.getters is set\n+        \/\/ Following cases should fail\n","filename":"test\/jdk\/javax\/management\/Introspector\/InvokeGettersTest.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"}]}