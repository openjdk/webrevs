{"files":[{"patch":"@@ -84,2 +84,1 @@\n-        throws InvalidParameterSpecException\n-    {\n+        throws InvalidParameterSpecException {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBMAC1Parameters.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.util.Objects;\n@@ -50,2 +51,2 @@\n-    private String digestAlgorithmName;\n-    private AlgorithmParameters digestAlgorithmParams;\n+    private final String digestAlgorithmName;\n+    private final AlgorithmParameters digestAlgorithmParams;\n@@ -60,1 +61,1 @@\n-    private boolean pbmac1Keystore = false;;\n+    private boolean pbmac1Keystore = false;\n@@ -107,0 +108,5 @@\n+            if (!(kdfHmac.equals(\"HmacSHA512\") ||\n+                    kdfHmac.equals(\"HmacSHA256\"))) {\n+                throw new IllegalArgumentException(\"unsupported PBMAC1 Hmac\");\n+            }\n+\n@@ -201,8 +207,0 @@\n-    String getHmac() {\n-        return Hmac;\n-    }\n-\n-    int getKeyLength() {\n-        return keyLength;\n-    }\n-\n@@ -274,5 +272,1 @@\n-            if (extraSalt != null) {\n-                tmp0.putOctetString(extraSalt);\n-            } else {\n-                tmp0.putOctetString(not_used);\n-            }\n+            tmp0.putOctetString(Objects.requireNonNullElse(extraSalt, not_used));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/MacData.java","additions":10,"deletions":16,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -177,1 +177,0 @@\n-    private String pbmac1KdfHmac = null;\n@@ -1484,1 +1483,1 @@\n-        final AlgorithmParameterSpec params;\n+        final PBEParameterSpec params;\n@@ -1491,1 +1490,1 @@\n-                defaultMacAlgorithm().contains(\"PBEWith\")) {\n+                defaultMacAlgorithm().startsWith(\"PBEWith\")) {\n@@ -1512,0 +1511,2 @@\n+            int keyLength = kdfHmac.equals(\"HmacSHA512\") ? 64*8 : 32*8;\n+\n@@ -1513,2 +1514,1 @@\n-                    ((PBEParameterSpec)params).getSalt(), macIterationCount,\n-                    kdfHmac.equals(\"HmacSHA512\") ? 64*8 : 32*8));\n+                    params.getSalt(), macIterationCount, keyLength));\n@@ -1527,2 +1527,1 @@\n-                    kdfHmac, kdfHmac.equals(\"HmacSHA512\") ? 64*8 : 32*8,\n-                    extraSalt, extraIterationCount);\n+                    kdfHmac, keyLength, extraSalt, extraIterationCount);\n@@ -2202,1 +2201,1 @@\n-                        pbmac1KdfHmac = macData.getKdfHmac();\n+                        String pbmac1KdfHmac = macData.getKdfHmac();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/PKCS12KeyStore.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -29,4 +29,0 @@\n-import java.security.AlgorithmParametersSpi;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.spec.AlgorithmParameterSpec;\n-import java.security.spec.InvalidParameterSpecException;\n@@ -80,1 +76,1 @@\n-    private String prf = null;\n+    private final byte[] salt;\n@@ -82,1 +78,1 @@\n-    private byte[] salt = null;\n+    private final int iterationCount;\n@@ -84,1 +80,2 @@\n-    private int iterationCount = 0;\n+    \/\/ keyLength in bits, or -1 if not present\n+    private int keyLength = -1;\n@@ -90,4 +87,1 @@\n-    \/\/ keyLength (in bits)\n-    private int keyLength = -1;\n-\n-    private String kdfAlgo;\n+    private String kdfAlgo = \"HmacSHA1\";\n@@ -95,1 +89,0 @@\n-    @SuppressWarnings(\"deprecation\")\n@@ -129,1 +122,0 @@\n-        \/\/\/String kdfAlgo;\n@@ -149,2 +141,0 @@\n-        } else {\n-            kdfAlgo = \"HmacSHA1\";\n@@ -152,1 +142,0 @@\n-        \/\/return kdfAlgo;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/PBKDF2Parameters.java","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"}]}