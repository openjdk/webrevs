{"files":[{"patch":"@@ -97,1 +97,1 @@\n-            ObjectIdentifier.of(KnownOIDs.PBKDF2WithHmacSHA1);\n+            ObjectIdentifier.of(KnownOIDs.PBKDF2);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBES2Parameters.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -310,0 +310,1 @@\n+\n@@ -313,0 +314,3 @@\n+        DerOutputStream tmp = new DerOutputStream();\n+        DerOutputStream out = new DerOutputStream();\n+\n@@ -314,2 +318,19 @@\n-            return PBMAC1Parameters.encode(macSalt, iterations,\n-                    keyLength, kdfHmac, hmac, digest);\n+            DerOutputStream tmp1 = new DerOutputStream();\n+            DerOutputStream tmp2 = new DerOutputStream();\n+            DerOutputStream tmp3 = new DerOutputStream();\n+\n+            tmp3.writeBytes(PBMAC1Parameters.encode(macSalt, iterations,\n+                    keyLength, kdfHmac, hmac));\n+\n+            \/\/ id-PBMAC1 OBJECT IDENTIFIER ::= { pkcs-5 14 }\n+            tmp2.putOID(ObjectIdentifier.of(KnownOIDs.PBMAC1));\n+            tmp2.write(DerValue.tag_Sequence, tmp3);\n+\n+            tmp1.write(DerValue.tag_Sequence, tmp2);\n+            tmp1.putOctetString(digest);\n+\n+            tmp.write(DerValue.tag_Sequence, tmp1);\n+            tmp.putOctetString(\n+                    new byte[]{ 'N', 'O', 'T', ' ', 'U', 'S', 'E', 'D' });\n+            \/\/ Unused, but must have non-zero positive value.\n+            tmp.putInteger(1);\n@@ -318,2 +339,0 @@\n-            DerOutputStream out = new DerOutputStream();\n-            DerOutputStream tmp = new DerOutputStream();\n@@ -329,4 +348,0 @@\n-\n-            \/\/ wrap everything into a SEQUENCE\n-            out.write(DerValue.tag_Sequence, tmp);\n-            return out.toByteArray();\n@@ -334,0 +349,3 @@\n+        \/\/ wrap everything into a SEQUENCE\n+        out.write(DerValue.tag_Sequence, tmp);\n+        return out.toByteArray();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/MacData.java","additions":26,"deletions":8,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-            ObjectIdentifier.of(KnownOIDs.PBKDF2WithHmacSHA1);\n+            ObjectIdentifier.of(KnownOIDs.PBKDF2);\n@@ -119,2 +119,1 @@\n-            String kdfHmac, String hmac, byte[] digest)\n-            throws IOException, NoSuchAlgorithmException {\n+            String kdfHmac, String hmac) throws NoSuchAlgorithmException {\n@@ -123,4 +122,0 @@\n-        DerOutputStream tmp0 = new DerOutputStream();\n-        DerOutputStream tmp1 = new DerOutputStream();\n-        DerOutputStream tmp2 = new DerOutputStream();\n-        DerOutputStream tmp3 = new DerOutputStream();\n@@ -129,1 +124,1 @@\n-        tmp3.writeBytes(PBKDF2Parameters.encode(salt,\n+        out.writeBytes(PBKDF2Parameters.encode(salt,\n@@ -133,17 +128,1 @@\n-        tmp3.write(AlgorithmId.get(hmac));\n-\n-        \/\/ id-PBMAC1 OBJECT IDENTIFIER ::= { pkcs-5 14 }\n-        tmp2.putOID(ObjectIdentifier.of(KnownOIDs.PBMAC1));\n-        tmp2.write(DerValue.tag_Sequence, tmp3);\n-\n-        tmp1.write(DerValue.tag_Sequence, tmp2);\n-        tmp1.putOctetString(digest);\n-\n-        tmp0.write(DerValue.tag_Sequence, tmp1);\n-        tmp0.putOctetString(\n-                new byte[]{ 'N', 'O', 'T', ' ', 'U', 'S', 'E', 'D' });\n-        \/\/ Unused, but must have non-zero positive value.\n-        tmp0.putInteger(1);\n-\n-        \/\/ wrap everything into a SEQUENCE\n-        out.write(DerValue.tag_Sequence, tmp0);\n+        out.write(AlgorithmId.get(hmac));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/PBMAC1Parameters.java","additions":4,"deletions":25,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-    PBKDF2WithHmacSHA1(\"1.2.840.113549.1.5.12\"),\n+    PBKDF2(\"1.2.840.113549.1.5.12\", \"PBKDF2WithHmacSHA1\"),\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KnownOIDs.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import sun.security.util.KnownOIDs;\n@@ -152,0 +153,1 @@\n+     * The outer algorithm ID is also encoded in addition to the parameters.\n@@ -159,1 +161,0 @@\n-        DerOutputStream tmp1 = new DerOutputStream();\n@@ -169,1 +170,1 @@\n-        out.putOID(ObjectIdentifier.of(KnownOIDs.PBKDF2WithHmacSHA1));\n+        out.putOID(ObjectIdentifier.of(KnownOIDs.PBKDF2));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/PBKDF2Parameters.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    \/\/002F:000B  [200100]                         OID 1.2.840.113549.1.5.12 (PBKDF2WithHmacSHA1)\n+    \/\/002F:000B  [200100]                         OID 1.2.840.113549.1.5.12 (PBKDF2)\n@@ -79,1 +79,1 @@\n-        DerUtils.checkAlg(der, \"200100\", KnownOIDs.PBKDF2WithHmacSHA1);\n+        DerUtils.checkAlg(der, \"200100\", KnownOIDs.PBKDF2);\n@@ -88,1 +88,1 @@\n-        DerUtils.checkAlg(der, \"200100\", KnownOIDs.PBKDF2WithHmacSHA1);\n+        DerUtils.checkAlg(der, \"200100\", KnownOIDs.PBKDF2);\n@@ -97,1 +97,1 @@\n-        DerUtils.checkAlg(der, \"200100\", KnownOIDs.PBKDF2WithHmacSHA1);\n+        DerUtils.checkAlg(der, \"200100\", KnownOIDs.PBKDF2);\n@@ -108,1 +108,1 @@\n-        DerUtils.checkAlg(der, \"200100\", KnownOIDs.PBKDF2WithHmacSHA1);\n+        DerUtils.checkAlg(der, \"200100\", KnownOIDs.PBKDF2);\n","filename":"test\/jdk\/sun\/security\/pkcs12\/PBMAC1Test.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * @bug 8076190 8242151 8153005 8266293\n+ * @bug 8076190 8242151 8153005 8266293 8343232\n@@ -247,1 +247,1 @@\n-                checkAlg(data, \"110c11011100\", PBKDF2WithHmacSHA1);\n+                checkAlg(data, \"110c11011100\", PBKDF2);\n@@ -260,1 +260,1 @@\n-            checkAlg(data, \"110c010c0100100\", PBKDF2WithHmacSHA1);\n+            checkAlg(data, \"110c010c0100100\", PBKDF2);\n","filename":"test\/jdk\/sun\/security\/pkcs12\/ParamsPreferences.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}