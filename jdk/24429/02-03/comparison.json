{"files":[{"patch":"@@ -93,3 +93,1 @@\n-    protected void engineInit(byte[] encoded)\n-        throws IOException\n-    {\n+    protected void engineInit(byte[] encoded) throws IOException {\n@@ -140,2 +138,1 @@\n-        throws IOException\n-    {\n+            throws IOException {\n@@ -147,2 +144,1 @@\n-        throws InvalidParameterSpecException\n-    {\n+        throws InvalidParameterSpecException {\n@@ -191,2 +187,1 @@\n-        throws IOException\n-    {\n+        throws IOException {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBMAC1Parameters.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -132,4 +132,2 @@\n-            boolean writePBMAC1, String kdfHmac, int keyLength,\n-            byte[] extraSalt, int extraIterationCount)\n-        throws NoSuchAlgorithmException\n-    {\n+            String kdfHmac, int keyLength, byte[] extraSalt,\n+            int extraIterationCount) throws NoSuchAlgorithmException {\n@@ -142,1 +140,1 @@\n-        if (writePBMAC1) {\n+        if (algName.equals(\"PBMAC1\")) {\n@@ -144,3 +142,0 @@\n-            algid = AlgorithmId.get(\"PBMAC1\");\n-        } else {\n-            algid = AlgorithmId.get(algName);\n@@ -148,0 +143,1 @@\n+        algid = AlgorithmId.get(algName);\n@@ -221,3 +217,1 @@\n-    public byte[] getEncoded() throws NoSuchAlgorithmException,\n-            IOException\n-    {\n+    public byte[] getEncoded() throws NoSuchAlgorithmException, IOException {\n@@ -225,1 +219,0 @@\n-            \/\/digestAlgorithmName = \"PBMAC1\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/MacData.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1488,0 +1488,1 @@\n+        int writeIterationCount = macIterationCount;\n@@ -1501,0 +1502,2 @@\n+            \/\/ Override with value of security property.\n+            writeIterationCount = defaultMacIterationCount();\n@@ -1506,1 +1509,1 @@\n-        params = new PBEParameterSpec(getSalt(), macIterationCount);\n+        params = new PBEParameterSpec(getSalt(), writeIterationCount);\n@@ -1514,1 +1517,1 @@\n-                    params.getSalt(), macIterationCount, keyLength));\n+                    params.getSalt(), writeIterationCount, keyLength));\n@@ -1526,1 +1529,1 @@\n-            macData = new MacData(algName, macResult, params, writePBMAC1,\n+            macData = new MacData(algName, macResult, params,\n@@ -2189,0 +2192,1 @@\n+                byte[] salt = macData.getSalt();\n@@ -2199,1 +2203,0 @@\n-                        byte[] salt = macData.getSalt();\n@@ -2219,0 +2222,4 @@\n+                        \/\/ save in extra in case we write out as PBMAC1\n+                        extraSalt = salt;\n+                        extraIterationCount = ic;\n+\n@@ -2220,1 +2227,1 @@\n-                                new PBEParameterSpec(macData.getSalt(), ic);\n+                                new PBEParameterSpec(salt, ic);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/PKCS12KeyStore.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"}]}