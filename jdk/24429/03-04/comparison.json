{"files":[{"patch":"@@ -231,1 +231,1 @@\n-        String kdfAlgo = kdfParams.getKdfAlgo();\n+        String kdfAlgo = kdfParams.getPrfAlgo();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBES2Parameters.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-        String kdfAlgo = kdfParams.getKdfAlgo();\n+        String prfAlgo = kdfParams.getPrfAlgo();\n@@ -134,1 +134,1 @@\n-        pbmac1AlgorithmName = \"PBMAC1With\" + kdfAlgo + \"And\" + hmacAlgo;\n+        pbmac1AlgorithmName = \"PBMAC1With\" + prfAlgo + \"And\" + hmacAlgo;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/PBMAC1Parameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -90,4 +90,1 @@\n-        if (digestInfo[0].tag != DerValue.tag_Sequence) {\n-            throw new IOException(\"algid parse error, not a sequence\");\n-        }\n-        if (digestAlgorithmName.equals(\"PBMAC1\")) {\n+        if (this.digestAlgorithmName.equals(\"PBMAC1\")) {\n@@ -98,1 +95,1 @@\n-                        digestAlgorithmParams.getParameterSpec(\n+                        this.digestAlgorithmParams.getParameterSpec(\n@@ -104,7 +101,7 @@\n-            iterations = pbeSpec.getIterationCount();\n-            macSalt = pbeSpec.getSalt();\n-            String ps = digestAlgorithmParams.toString();\n-            kdfHmac = getKdfHmac(ps);\n-            if (!(kdfHmac.equals(\"HmacSHA512\") ||\n-                    kdfHmac.equals(\"HmacSHA256\"))) {\n-                throw new IllegalArgumentException(\"unsupported PBMAC1 Hmac\");\n+            this.iterations = pbeSpec.getIterationCount();\n+            this.macSalt = pbeSpec.getSalt();\n+            String ps = this.digestAlgorithmParams.toString();\n+            this.kdfHmac = getKdfHmac(ps);\n+            if (!(this.kdfHmac.equals(\"HmacSHA512\") ||\n+                    this.kdfHmac.equals(\"HmacSHA256\"))) {\n+                throw new IOException(\"unsupported PBMAC1 Hmac\");\n@@ -113,1 +110,1 @@\n-            Hmac = kdfHmac;\n+            this.Hmac = this.kdfHmac;\n@@ -117,1 +114,1 @@\n-        extraSalt = macData[1].getOctetString();\n+        this.extraSalt = macData[1].getOctetString();\n@@ -121,1 +118,1 @@\n-            extraIterations = macData[2].getInteger();\n+            this.extraIterations = macData[2].getInteger();\n@@ -123,1 +120,1 @@\n-            extraIterations = 1;\n+            this.extraIterations = 1;\n@@ -125,3 +122,3 @@\n-        if (!digestAlgorithmName.equals(\"PBMAC1\")) {\n-            macSalt = extraSalt;\n-            iterations = extraIterations;\n+        if (!this.digestAlgorithmName.equals(\"PBMAC1\")) {\n+            this.macSalt = this.extraSalt;\n+            this.iterations = this.extraIterations;\n@@ -141,1 +138,1 @@\n-            pbmac1Keystore = true;\n+            this.pbmac1Keystore = true;\n@@ -162,1 +159,1 @@\n-        if (pbmac1Keystore) {\n+        if (this.pbmac1Keystore) {\n@@ -184,1 +181,1 @@\n-        return digestAlgorithmName;\n+        return this.digestAlgorithmName;\n@@ -188,1 +185,1 @@\n-        return macSalt;\n+        return this.macSalt;\n@@ -192,1 +189,1 @@\n-        return iterations;\n+        return this.iterations;\n@@ -196,1 +193,1 @@\n-        return digest;\n+        return this.digest;\n@@ -200,1 +197,1 @@\n-        return kdfHmac;\n+        return this.kdfHmac;\n@@ -204,1 +201,1 @@\n-        return extraSalt;\n+        return this.extraSalt;\n@@ -208,1 +205,1 @@\n-        return extraIterations;\n+        return this.extraIterations;\n@@ -218,1 +215,1 @@\n-        if (pbmac1Keystore) {\n+        if (this.pbmac1Keystore) {\n@@ -244,1 +241,1 @@\n-            pBKDF2_params.putOctetString(macSalt); \/\/ choice: 'specified OCTET STRING'\n+            pBKDF2_params.putOctetString(this.macSalt); \/\/ choice: 'specified OCTET STRING'\n@@ -247,1 +244,1 @@\n-            pBKDF2_params.putInteger(iterations);\n+            pBKDF2_params.putInteger(this.iterations);\n@@ -250,2 +247,2 @@\n-            if (keyLength > 0) {\n-                pBKDF2_params.putInteger(keyLength \/ 8); \/\/ derived key length (in octets)\n+            if (this.keyLength > 0) {\n+                pBKDF2_params.putInteger(this.keyLength \/ 8); \/\/ derived key length (in octets)\n@@ -263,1 +260,1 @@\n-            tmp2.putOctetString(digest);\n+            tmp2.putOctetString(this.digest);\n@@ -265,3 +262,3 @@\n-            tmp0.putOctetString(Objects.requireNonNullElse(extraSalt, not_used));\n-            if (extraIterations != -1) {\n-                tmp0.putInteger(extraIterations);\n+            tmp0.putOctetString(Objects.requireNonNullElse(this.extraSalt, not_used));\n+            if (this.extraIterations != -1) {\n+                tmp0.putInteger(this.extraIterations);\n@@ -285,1 +282,1 @@\n-        AlgorithmId algid = AlgorithmId.get(digestAlgorithmName);\n+        AlgorithmId algid = AlgorithmId.get(this.digestAlgorithmName);\n@@ -289,1 +286,1 @@\n-        tmp2.putOctetString(digest);\n+        tmp2.putOctetString(this.digest);\n@@ -294,1 +291,1 @@\n-        tmp.putOctetString(macSalt);\n+        tmp.putOctetString(this.macSalt);\n@@ -297,1 +294,1 @@\n-        tmp.putInteger(iterations);\n+        tmp.putInteger(this.iterations);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/MacData.java","additions":38,"deletions":41,"binary":false,"changes":79,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-    private String kdfAlgo = \"HmacSHA1\";\n+    private String prfAlgo = \"HmacSHA1\";\n@@ -138,1 +138,1 @@\n-            kdfAlgo = o.stdName();\n+            prfAlgo = o.stdName();\n@@ -177,2 +177,2 @@\n-    public String getKdfAlgo() {\n-        return this.kdfAlgo;\n+    public String getPrfAlgo() {\n+        return this.prfAlgo;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/PBKDF2Parameters.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}