{"files":[{"patch":"@@ -155,2 +155,0 @@\n-java\/awt\/Mixing\/AWT_Mixing\/HierarchyBoundsListenerMixingTest.java 8049405 macosx-all\n-java\/awt\/Mixing\/AWT_Mixing\/OpaqueOverlapping.java 8294264 windows-x64\n@@ -164,27 +162,0 @@\n-java\/awt\/Mixing\/AWT_Mixing\/JButtonInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JButtonOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JColorChooserOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JEditorPaneInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JEditorPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JLabelInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JLabelOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JListInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JListOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JPanelInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JPanelOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JProgressBarInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JProgressBarOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JScrollBarInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JScrollBarOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JSliderInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JSliderOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JSpinnerInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JSpinnerOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JTableInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JTableOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JTextAreaInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JTextAreaOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JTextFieldInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JTextFieldOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JToggleButtonInGlassPaneOverlapping.java 8158801 windows-all\n-java\/awt\/Mixing\/AWT_Mixing\/JToggleButtonOverlapping.java 8158801 windows-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":29,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,1 @@\n+import java.awt.Component;\n@@ -26,0 +27,2 @@\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n@@ -29,0 +32,2 @@\n+import java.awt.event.WindowEvent;\n+import java.awt.event.WindowFocusListener;\n@@ -30,0 +35,4 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.swing.FocusManager;\n@@ -109,0 +118,6 @@\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        f.addFocusListener(new FocusAdapter() {\n+            @Override public void focusGained(FocusEvent e) {\n+                latch.countDown();\n+            }\n+        });\n@@ -115,2 +130,14 @@\n-                        testedComponent.setBounds(0, 0, testedComponent.getPreferredSize().width, testedComponent.getPreferredSize().height + 20);\n-                        ancestorLoc = f.getLocationOnScreen();\n+                        testedComponent.setBounds(0, 0,\n+                                testedComponent.getPreferredSize().width,\n+                                testedComponent.getPreferredSize().height + 20);\n+                        boolean focus = f.requestFocusInWindow();\n+                        if (!focus) {\n+                            Component focusOwner =\n+                                    FocusManager.getCurrentManager()\n+                                            .getFocusOwner();\n+                            if (focusOwner == f) {\n+                                \/\/frame already had focus.\n+                                latch.countDown();\n+                            }\n+                        }\n+\n@@ -126,14 +153,11 @@\n-\n-            \/* this is a workaround for certain jtreg(?) focus issue:\n-               tests fail starting after failing mixing tests but always pass alone.\n-             *\/\n-            Util.waitForIdle(robot);\n-            ancestorLoc.translate(isOel7orLater() ? 5 : f.getWidth() \/ 2 - 15, 2);\n-            robot.mouseMove(ancestorLoc.x, ancestorLoc.y);\n-            Util.waitForIdle(robot);\n-            robot.mousePress(InputEvent.BUTTON1_MASK);\n-            robot.delay(50);\n-            robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-            Util.waitForIdle(robot);\n-\n-            clickAndBlink(robot, lLoc);\n+            try {\n+                boolean await = latch.await(50, TimeUnit.MILLISECONDS);\n+                if (!await) {\n+                    throw new RuntimeException(\n+                            \"Ancestor frame didn't receive \" +\n+                                    \"focus\");\n+                }\n+                clickAndBlink(robot, lLoc);\n+            } catch (InterruptedException e) {\n+                throw new RuntimeException(e);\n+            }\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/GlassPaneOverlappingTestBase.java","additions":41,"deletions":17,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -144,10 +146,18 @@\n-        if( ancestor != null ) {\n-            Point ancestorLoc = ancestor.getLocationOnScreen();\n-            ancestorLoc.translate(isOel7orLater() ? 5 :\n-                                             ancestor.getWidth() \/ 2 - 15, 2);\n-            robot.mouseMove(ancestorLoc.x, ancestorLoc.y);\n-            Util.waitForIdle(robot);\n-            robot.mousePress(InputEvent.BUTTON1_MASK);\n-            robot.delay(50);\n-            robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-            Util.waitForIdle(robot);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        if (ancestor != null) {\n+            ancestor.addFocusListener(new FocusAdapter() {\n+                @Override public void focusGained(FocusEvent e) {\n+                    latch.countDown();\n+                }\n+            });\n+            ancestor.requestFocus();\n+        }\n+        try {\n+            boolean await = latch.await(50, TimeUnit.MILLISECONDS);\n+            if (!await) {\n+                throw new RuntimeException(\"Ancestor frame didn't receive \" +\n+                        \"focus\");\n+            }\n+            clickAndBlink(robot, lLoc);\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n@@ -155,3 +165,0 @@\n-\n-        clickAndBlink(robot, lLoc);\n-        Util.waitForIdle(robot);\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/SimpleOverlappingTestBase.java","additions":21,"deletions":14,"binary":false,"changes":35,"status":"modified"}]}