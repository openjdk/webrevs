{"files":[{"patch":"@@ -28,2 +28,0 @@\n-import java.lang.Override;\n-import java.lang.reflect.InvocationTargetException;\n@@ -49,1 +47,0 @@\n-    private volatile Point ancestorLoc;\n@@ -96,1 +93,0 @@\n-\n@@ -98,0 +94,1 @@\n+\n@@ -114,20 +111,1 @@\n-        if (testResize) {\n-            wasLWClicked = false;\n-            try {\n-                SwingUtilities.invokeAndWait(new Runnable() {\n-\n-                    public void run() {\n-                        testedComponent.setBounds(0, 0,\n-                                testedComponent.getPreferredSize().width,\n-                                testedComponent.getPreferredSize().height + 20);\n-                    }\n-                });\n-            } catch (InterruptedException | InvocationTargetException ex) {\n-                fail(ex.getMessage());\n-            }\n-            Point lLoc = testedComponent.getLocationOnScreen();\n-            lLoc.translate(1, testedComponent.getPreferredSize().height + 1);\n-                clickAndBlink(robot, lLoc);\n-\n-            return wasLWClicked;\n-        } else {\n+        if (!testResize) {\n@@ -136,0 +114,19 @@\n+\n+        wasLWClicked = false;\n+        try {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+\n+                public void run() {\n+                    testedComponent.setBounds(0, 0,\n+                            testedComponent.getPreferredSize().width,\n+                            testedComponent.getPreferredSize().height + 20);\n+                }\n+            });\n+        } catch (InterruptedException | InvocationTargetException ex) {\n+            fail(ex.getMessage());\n+        }\n+        Point lLoc = testedComponent.getLocationOnScreen();\n+        lLoc.translate(1, testedComponent.getPreferredSize().height + 1);\n+        clickAndBlink(robot, lLoc);\n+\n+        return wasLWClicked;\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/GlassPaneOverlappingTestBase.java","additions":21,"deletions":24,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -315,0 +315,1 @@\n+\n@@ -318,1 +319,0 @@\n-\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/MixingPanelsResizing.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -691,0 +691,1 @@\n+\n@@ -694,1 +695,0 @@\n-\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/OverlappingTestBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,2 +55,0 @@\n-    protected final boolean MULTI_FRAMES_TEST ;\n-\n@@ -70,1 +68,0 @@\n-        MULTI_FRAMES_TEST = isMultiFramesTest();\n@@ -185,1 +182,1 @@\n-            if (ancestor != null && MULTI_FRAMES_TEST) {\n+            if (ancestor != null && isMultiFramesTest()) {\n@@ -205,1 +202,0 @@\n-\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/SimpleOverlappingTestBase.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}