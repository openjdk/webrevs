{"files":[{"patch":"@@ -97,1 +97,1 @@\n-        this(true);\n+        super();\n@@ -102,2 +102,0 @@\n-        MULTI_FRAMES_TEST =false;\n-    }\n@@ -105,0 +103,4 @@\n+    }\n+    protected boolean isMultiFramesTest(){\n+        return false;\n+    }\n@@ -117,7 +119,0 @@\n-        final CountDownLatch latch = new CountDownLatch(1);\n-        f.addFocusListener(new FocusAdapter() {\n-            @Override\n-            public void focusGained(FocusEvent e) {\n-                latch.countDown();\n-            }\n-        });\n@@ -134,8 +129,0 @@\n-                        Component focusOwner = KeyboardFocusManager.getCurrentKeyboardFocusManager()\n-                                .getFocusOwner();\n-                        if (focusOwner == f) {\n-                            \/\/ frame already had focus\n-                            latch.countDown();\n-                        } else {\n-                            f.requestFocusInWindow();\n-                        }\n@@ -149,4 +136,0 @@\n-            try {\n-                if (!latch.await(1, TimeUnit.SECONDS)) {\n-                    throw new RuntimeException(\"Ancestor frame didn't receive focus\");\n-                }\n@@ -154,3 +137,1 @@\n-            } catch (InterruptedException e) {\n-                throw new RuntimeException(e);\n-            }\n+\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/GlassPaneOverlappingTestBase.java","additions":6,"deletions":25,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    protected final boolean MULTI_FRAMES_TEST = true;\n+    protected final boolean MULTI_FRAMES_TEST ;\n@@ -69,0 +69,1 @@\n+        MULTI_FRAMES_TEST = isMultiFramesTest();\n@@ -71,0 +72,3 @@\n+    protected boolean isMultiFramesTest(){\n+        return true;\n+    }\n","filename":"test\/jdk\/java\/awt\/Mixing\/AWT_Mixing\/SimpleOverlappingTestBase.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}