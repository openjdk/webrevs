{"files":[{"patch":"@@ -29,0 +29,1 @@\n+ * @comment Change enablePreview with the flag in setup's compileSources\n@@ -42,1 +43,0 @@\n-import java.lang.reflect.AccessFlag;\n@@ -51,1 +51,0 @@\n-import java.util.Set;\n@@ -54,2 +53,0 @@\n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Type;\n@@ -63,0 +60,1 @@\n+import static java.lang.classfile.ClassFile.*;\n@@ -67,6 +65,0 @@\n-import static java.lang.reflect.AccessFlag.ABSTRACT;\n-import static java.lang.reflect.AccessFlag.ANNOTATION;\n-import static java.lang.reflect.AccessFlag.ENUM;\n-import static java.lang.reflect.AccessFlag.INTERFACE;\n-import static java.lang.reflect.AccessFlag.SYNTHETIC;\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n@@ -89,1 +81,1 @@\n-        compileSources(SRC_DIR, CLASSES_DIR);\n+        compileSources(SRC_DIR, CLASSES_DIR, \"--enable-preview\", \"--release\", \"23\");\n@@ -530,12 +522,4 @@\n-        ClassWriter cw = new ClassWriter(ClassWriter.COMPUTE_MAXS + ClassWriter.COMPUTE_FRAMES);\n-        cw.visit(V14, ACC_PUBLIC|accessFlags, classname, null, internalName(superType), null);\n-        cw.visitEnd();\n-\n-        return cw.toByteArray();\n-    }\n-\n-    private static String internalName(ClassDesc cd) {\n-        if (!cd.isClassOrInterface())\n-            throw new IllegalArgumentException(cd.descriptorString());\n-        var d = cd.descriptorString();\n-        return d.substring(1, d.length() - 1);\n+        return ClassFile.of().build(ClassDesc.ofInternalName(classname), clb -> clb\n+                .withVersion(JAVA_14_VERSION, 0)\n+                .withFlags(accessFlags | ACC_PUBLIC)\n+                .withSuperclass(superType));\n","filename":"test\/jdk\/java\/lang\/invoke\/defineHiddenClass\/BasicTest.java","additions":7,"deletions":23,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+ * @comment This test itself cannot enablePreview, or hidden class definition\n+ *         will pass\n@@ -66,3 +68,2 @@\n-        dis.skipBytes(4);\n-        \/\/ Minor version\n-        assertEquals(dis.readUnsignedByte(), 65535);\n+        dis.skipBytes(4); \/\/ 0xCAFEBABE\n+        assertEquals(dis.readUnsignedShort(), 65535); \/\/ Minor version\n","filename":"test\/jdk\/java\/lang\/invoke\/defineHiddenClass\/PreviewHiddenClass.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}