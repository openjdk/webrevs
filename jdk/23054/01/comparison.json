{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,0 +148,1 @@\n+        dumpFlags();\n@@ -699,0 +700,31 @@\n+    private void dumpFlags() {\n+        log(\"dumpFlags() entering:\");\n+        try {\n+            String testJdk = System.getProperty(\"test.jdk\");\n+            String toolName = \"java\" + (Platform.isWindows() ? \".exe\" : \"\");\n+            Path javaPath = Paths.get(testJdk, \"bin\", toolName);\n+\n+            String options =  System.getProperty(\"test.vm.opts\", \"\")\n+                    + System.getProperty(\"test.java.opts\", \"\");\n+            ArrayList<String> args = new ArrayList<>();\n+            args.add(javaPath.toAbsolutePath().toString());\n+            Collections.addAll(args, options.trim().split(\"\\\\s+\"));\n+            args.add(\"-XX:+PrintFlagsFinal\");\n+            args.add(\"-version\");\n+            ProcessBuilder pb = new ProcessBuilder(args);\n+            File output = new File(\"jvm.flags.final.log\");\n+            pb.redirectOutput(output);\n+            pb.redirectErrorStream();\n+            Process p = pb.start();\n+            p.waitFor(120, TimeUnit.SECONDS);\n+\n+            log(\"The test jvm options: \" + options);\n+            log(\"The final jvm flags are saved to: \" + output.getAbsolutePath());\n+        } catch (Throwable t) {\n+            log(\"Erro while printing JVM flags \" + t.getMessage());\n+        }\n+\n+        log(\"dumpFlags() leaving:\");\n+    }\n+\n+\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"}]}