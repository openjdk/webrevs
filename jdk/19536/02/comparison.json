{"files":[{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+public class ChildProcessAppLauncher {\n+\n+    private static final String FS = File.separator;\n+\n+    public static void main(String[] args) throws IOException {\n+        String systemPath = System.getenv(\"SystemRoot\");\n+        if (systemPath != null) {\n+            String calcPath = systemPath + FS + \"system32\" + FS + \"calc.exe\";\n+            ProcessBuilder processBuilder = new ProcessBuilder(calcPath);\n+            Process process = processBuilder.start();\n+            System.out.println(\"Calc id=\" + process.pid());\n+            System.exit(0);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/tools\/jpackage\/apps\/ChildProcessAppLauncher.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8325203\n+ * @summary Test that Jpackage windows executable application kills the launched 3rd party application\n+ *          when System.exit(0) is invoked along with terminating java program.\n+ * @library ..\/helpers\n+ * @library \/test\/lib\n+ * @requires os.family == \"windows\"\n+ * @build WinChildProcessTest\n+ * @build jdk.jpackage.test.*\n+ * @build WinChildProcessTest\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n+ * @run main\/othervm -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=WinChildProcessTest\n+ *\n+ *\/\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import java.nio.file.Path;\n+\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.Annotations.Test;\n+import jdk.jpackage.test.Executor;\n+import jdk.jpackage.test.TKit;\n+\n+public class WinChildProcessTest {\n+    private static final Path TEST_APP_JAVA = TKit.TEST_SRC_ROOT\n+            .resolve(\"apps\/ChildProcessAppLauncher.java\");\n+\n+    @Test\n+    public static void test() throws Throwable {\n+        long calcPid = 0;\n+        try {\n+            JPackageCommand cmd = JPackageCommand\n+                    .helloAppImage(TEST_APP_JAVA + \"*Hello\");\n+\n+            \/\/ Create the image of the third party application launcher\n+            cmd.executeAndAssertImageCreated();\n+\n+            \/\/ Start the third party application launcher and dump and save the\n+            \/\/ output of the application\n+            List<String> output = new Executor().saveOutput().dumpOutput()\n+                    .setExecutable(cmd.appLauncherPath().toAbsolutePath())\n+                    .execute(0).getOutput();\n+            String pidStr = output.get(0);\n+\n+            \/\/ parse calculator PID\n+            calcPid = Long.parseLong(pidStr.split(\"=\", 2)[1]);\n+\n+            \/\/ Check whether the termination of third party application launcher\n+            \/\/ also terminating the launched third party application\n+            \/\/ If third party application is not terminated the test is\n+            \/\/ successful else failure\n+            Optional<ProcessHandle> processHandle = ProcessHandle.of(calcPid);\n+            boolean isAlive = processHandle.isPresent()\n+                    && processHandle.get().isAlive();\n+            System.out.println(\"Is Alive \" + isAlive);\n+            TKit.assertTrue(isAlive, \"Check is calculator process is alive\");\n+        } finally {\n+            \/\/ Kill only a specific calculator instance\n+            Runtime.getRuntime().exec(\"taskkill \/F \/PID \" + calcPid);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinChildProcessTest.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}