{"files":[{"patch":"@@ -174,1 +174,1 @@\n-     *         specified algorithm\n+     *         specified algorithm or the implementation requires parameters\n@@ -232,1 +232,2 @@\n-     *         available from the specified provider\n+     *         available from the specified provider or the implementation\n+     *         requires parameters\n@@ -286,1 +287,2 @@\n-     *         from the specified {@code Provider} object\n+     *         from the specified {@code Provider} object or the\n+     *         implementation requires parameters\n@@ -335,1 +337,1 @@\n-     *         implementation for the specified algorithm\n+     *         implementation for the specified algorithm and parameters\n@@ -338,4 +340,0 @@\n-     * @throws InvalidAlgorithmParameterException if the specified\n-     *         initialization parameters are inappropriate for this\n-     *         {@code MessageDigest}\n-     *\n@@ -349,1 +347,1 @@\n-            throws NoSuchAlgorithmException, InvalidAlgorithmParameterException {\n+            throws NoSuchAlgorithmException {\n@@ -351,8 +349,4 @@\n-        try {\n-            GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n-                    MessageDigestSpi.class, algorithm, params, provider);\n-            return Delegate.of((MessageDigestSpi)instance.impl,\n-                    algorithm, instance.provider);\n-        } catch (NoSuchAlgorithmException e) {\n-            return handleException(e);\n-        }\n+        GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n+                MessageDigestSpi.class, algorithm, params, provider);\n+        return Delegate.of((MessageDigestSpi)instance.impl,\n+                algorithm, instance.provider);\n@@ -388,1 +382,1 @@\n-     *         implementation for the specified algorithm\n+     *         implementation for the specified algorithm and parameters\n@@ -391,4 +385,0 @@\n-     * @throws InvalidAlgorithmParameterException if the specified\n-     *         initialization parameters are inappropriate for this\n-     *         {@code MessageDigest}\n-     *\n@@ -405,1 +395,1 @@\n-            throws NoSuchAlgorithmException, InvalidAlgorithmParameterException,\n+            throws NoSuchAlgorithmException,\n@@ -408,8 +398,4 @@\n-        try {\n-            GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n-                    MessageDigestSpi.class, algorithm, params, provider);\n-            return Delegate.of((MessageDigestSpi)instance.impl,\n-                    algorithm, instance.provider);\n-        } catch (NoSuchAlgorithmException e) {\n-            return handleException(e);\n-        }\n+        GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n+                MessageDigestSpi.class, algorithm, params, provider);\n+        return Delegate.of((MessageDigestSpi)instance.impl,\n+                algorithm, instance.provider);\n@@ -451,5 +437,1 @@\n-     *         specified algorithm\n-     *\n-     * @throws InvalidAlgorithmParameterException if the specified\n-     *         initialization parameters are inappropriate for this\n-     *         {@code MessageDigest}\n+     *         specified algorithm and parameters\n@@ -464,1 +446,1 @@\n-            throws NoSuchAlgorithmException, InvalidAlgorithmParameterException {\n+            throws NoSuchAlgorithmException {\n@@ -466,17 +448,4 @@\n-        try {\n-            GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n-                    MessageDigestSpi.class, algorithm, params);\n-            return Delegate.of((MessageDigestSpi) instance.impl,\n-                    algorithm, instance.provider);\n-        } catch (NoSuchAlgorithmException e) {\n-            return handleException(e);\n-        }\n-    }\n-\n-    private static MessageDigest handleException(NoSuchAlgorithmException e)\n-            throws NoSuchAlgorithmException, InvalidAlgorithmParameterException {\n-        Throwable cause = e.getCause();\n-        if (cause instanceof InvalidAlgorithmParameterException) {\n-            throw (InvalidAlgorithmParameterException)cause;\n-        }\n-        throw e;\n+        GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n+                MessageDigestSpi.class, algorithm, params);\n+        return Delegate.of((MessageDigestSpi)instance.impl,\n+                algorithm, instance.provider);\n","filename":"src\/java.base\/share\/classes\/java\/security\/MessageDigest.java","additions":23,"deletions":54,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -1950,6 +1950,6 @@\n-                    \/\/ For pre-jdk9 SecureRandom implementations, they only\n-                    \/\/ have params-less constructors which still works when\n-                    \/\/ the input ctorParamObj is null.\n-                    \/\/\n-                    \/\/ For other primitives using params, ctorParamObj should not\n-                    \/\/ be null and nsme is thrown, just like before.\n+                    \/\/ For old SecureRandom and MessageDigest implementations,\n+                    \/\/ there are only params-less constructors which should\n+                    \/\/ still work when the input ctorParamObj is null.\n+                    \/\/ If ctorParamObj is not null but there is no constructor\n+                    \/\/ with a params argument, throw iape which will be the\n+                    \/\/ cause of nsme thrown by Service.newInstance().\n@@ -1964,1 +1964,3 @@\n-                        throw nsme;\n+                        throw new InvalidAlgorithmParameterException(\n+                                \"this implementation does not support parameters\",\n+                                nsme);\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-            } catch (NoSuchAlgorithmException | InvalidAlgorithmParameterException ex) {\n+            } catch (NoSuchAlgorithmException ex) {\n@@ -100,1 +100,1 @@\n-            } catch (NoSuchAlgorithmException | InvalidAlgorithmParameterException ex) {\n+            } catch (NoSuchAlgorithmException ex) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSAParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,3 +38,2 @@\n-public final class SHAKE256 extends SHA3 {\n-\n-    public static class WithoutLen extends SHA3 {\n+public sealed class SHAKE256 extends SHA3 {\n+    public static final class WithoutLen extends SHAKE256 {\n@@ -42,1 +41,1 @@\n-            super(\"SHAKE256-LEN\", 64, (byte) 0x1F, 64);\n+            super(\"SHAKE256-LEN\", 64);\n@@ -46,1 +45,1 @@\n-    public static class WithLen extends SHA3 {\n+    public static final class WithLen extends SHAKE256 {\n@@ -49,1 +48,1 @@\n-            super(\"SHAKE256-LEN\", n(p), (byte) 0x1F, 64);\n+            super(\"SHAKE256-LEN\", n(p));\n@@ -54,1 +53,3 @@\n-            if (p instanceof IntegerParameterSpec is) {\n+            if (p == null) {\n+                throw new InvalidAlgorithmParameterException(\"Parameters required\");\n+            } else if (p instanceof IntegerParameterSpec is) {\n@@ -65,1 +66,0 @@\n-\n@@ -77,0 +77,1 @@\n+\n@@ -78,1 +79,5 @@\n-        super(\"SHAKE256\", d, (byte) 0x1F, 64);\n+        this(\"SHAKE256\", d);\n+    }\n+\n+    public SHAKE256(String name, int d) {\n+        super(name, d, (byte) 0x1F, 64);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHAKE256.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -552,1 +552,1 @@\n-        run(m, InvalidAlgorithmParameterException.class, \"SHAKE256-LEN\", null);\n+        run(m, NoSuchAlgorithmException.class, \"SHAKE256-LEN\", null);\n@@ -559,1 +559,1 @@\n-        run(m, InvalidAlgorithmParameterException.class, \"SHAKE256-LEN\", null, \"SUN\");\n+        run(m, NoSuchAlgorithmException.class, \"SHAKE256-LEN\", null, \"SUN\");\n@@ -565,1 +565,1 @@\n-        run(m, InvalidAlgorithmParameterException.class, \"SHAKE256-LEN\", null, SUN);\n+        run(m, NoSuchAlgorithmException.class, \"SHAKE256-LEN\", null, SUN);\n","filename":"test\/jdk\/java\/security\/misc\/GetInstanceNullsEmpties.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}