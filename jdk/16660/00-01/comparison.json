{"files":[{"patch":"@@ -335,1 +335,1 @@\n-     *         implementation for the specified algorithm and parameters\n+     *         implementation for the specified algorithm\n@@ -338,0 +338,4 @@\n+     * @throws InvalidAlgorithmParameterException if the specified\n+     *         initialization parameters are inappropriate for this\n+     *         {@code MessageDigest}\n+     *\n@@ -345,1 +349,1 @@\n-            throws NoSuchAlgorithmException {\n+            throws NoSuchAlgorithmException, InvalidAlgorithmParameterException {\n@@ -347,4 +351,8 @@\n-        GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n-                MessageDigestSpi.class, algorithm, params, provider);\n-        return Delegate.of((MessageDigestSpi)instance.impl,\n-                algorithm, instance.provider);\n+        try {\n+            GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n+                    MessageDigestSpi.class, algorithm, params, provider);\n+            return Delegate.of((MessageDigestSpi)instance.impl,\n+                    algorithm, instance.provider);\n+        } catch (NoSuchAlgorithmException e) {\n+            return handleException(e);\n+        }\n@@ -380,1 +388,1 @@\n-     *         implementation for the specified algorithm and parameters\n+     *         implementation for the specified algorithm\n@@ -383,0 +391,4 @@\n+     * @throws InvalidAlgorithmParameterException if the specified\n+     *         initialization parameters are inappropriate for this\n+     *         {@code MessageDigest}\n+     *\n@@ -393,1 +405,1 @@\n-            throws NoSuchAlgorithmException,\n+            throws NoSuchAlgorithmException, InvalidAlgorithmParameterException,\n@@ -396,4 +408,8 @@\n-        GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n-                MessageDigestSpi.class, algorithm, params, provider);\n-        return Delegate.of((MessageDigestSpi)instance.impl,\n-                algorithm, instance.provider);\n+        try {\n+            GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n+                    MessageDigestSpi.class, algorithm, params, provider);\n+            return Delegate.of((MessageDigestSpi)instance.impl,\n+                    algorithm, instance.provider);\n+        } catch (NoSuchAlgorithmException e) {\n+            return handleException(e);\n+        }\n@@ -435,1 +451,5 @@\n-     *         specified algorithm and parameters\n+     *         specified algorithm\n+     *\n+     * @throws InvalidAlgorithmParameterException if the specified\n+     *         initialization parameters are inappropriate for this\n+     *         {@code MessageDigest}\n@@ -444,1 +464,1 @@\n-            throws NoSuchAlgorithmException {\n+            throws NoSuchAlgorithmException, InvalidAlgorithmParameterException {\n@@ -446,4 +466,17 @@\n-        GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n-                MessageDigestSpi.class, algorithm, params);\n-        return Delegate.of((MessageDigestSpi)instance.impl,\n-                algorithm, instance.provider);\n+        try {\n+            GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n+                    MessageDigestSpi.class, algorithm, params);\n+            return Delegate.of((MessageDigestSpi) instance.impl,\n+                    algorithm, instance.provider);\n+        } catch (NoSuchAlgorithmException e) {\n+            return handleException(e);\n+        }\n+    }\n+\n+    private static MessageDigest handleException(NoSuchAlgorithmException e)\n+            throws NoSuchAlgorithmException, InvalidAlgorithmParameterException {\n+        Throwable cause = e.getCause();\n+        if (cause instanceof InvalidAlgorithmParameterException) {\n+            throw (InvalidAlgorithmParameterException)cause;\n+        }\n+        throw e;\n","filename":"src\/java.base\/share\/classes\/java\/security\/MessageDigest.java","additions":51,"deletions":18,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-            } catch (NoSuchAlgorithmException ex) {\n+            } catch (NoSuchAlgorithmException | InvalidAlgorithmParameterException ex) {\n@@ -100,1 +100,1 @@\n-            } catch (NoSuchAlgorithmException ex) {\n+            } catch (NoSuchAlgorithmException | InvalidAlgorithmParameterException ex) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSAParameters.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,12 @@\n-import java.security.*;\n+import java.security.AlgorithmParameters;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.InvalidKeyException;\n+import java.security.InvalidParameterException;\n+import java.security.MessageDigest;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.PrivateKey;\n+import java.security.ProviderException;\n+import java.security.PublicKey;\n+import java.security.SecureRandom;\n+import java.security.SignatureException;\n+import java.security.SignatureSpi;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSASignature.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -552,1 +552,1 @@\n-        run(m, NoSuchAlgorithmException.class, \"SHAKE256-LEN\", null);\n+        run(m, InvalidAlgorithmParameterException.class, \"SHAKE256-LEN\", null);\n@@ -559,1 +559,1 @@\n-        run(m, NoSuchAlgorithmException.class, \"SHAKE256-LEN\", null, \"SUN\");\n+        run(m, InvalidAlgorithmParameterException.class, \"SHAKE256-LEN\", null, \"SUN\");\n@@ -565,1 +565,1 @@\n-        run(m, NoSuchAlgorithmException.class, \"SHAKE256-LEN\", null, SUN);\n+        run(m, InvalidAlgorithmParameterException.class, \"SHAKE256-LEN\", null, SUN);\n","filename":"test\/jdk\/java\/security\/misc\/GetInstanceNullsEmpties.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}