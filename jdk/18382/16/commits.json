[{"commit":{"message":"Use t2 instead of count as scratch register"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"479b2b2598bd9bd5c7df62e057205bd7fdd9897f"},{"commit":{"message":"Remove blt after by16_loop_unroll"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"51349342f59555c9b3fcb314d3865fb827147255"},{"commit":{"message":"Use adler32_process_bytes for L_by1"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"0ce230a4ecf1ca81d5f615e42e9758b6be36f498"},{"commit":{"message":"Change srliw and zero_extend order"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"031b304505d3603d5cc97530745669eaba2b104e"},{"commit":{"message":"Optimize vtables generation for MaxVectorSize == 16"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"8ec0e3c9ac0e62d6bf26d7f90849f9dc4419a632"},{"commit":{"message":"Use different LMULs for different MaxVectorSize"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"9f73d5faacf350f50f1c6f85b89139739b82aa92"},{"commit":{"message":"Use LMULx2 for all vector lengths"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"24d3d1c65f71a07b8ace1ce21f5591078ccefcf6"},{"commit":{"message":"Dispose of an array of vs2acc"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"70b4fc0f3c308c54d4b05581442439512619615c"},{"commit":{"message":"Generate vtables for all MaxVectorSize"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"9f146af16a0492d5b6980bfc0abf17e4eee5f8f7"},{"commit":{"message":"Use LMULx2 in vsetvli for 16bytes vlen before redsum"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"1d4320b205c173256eb6a50cedaa0ccd9b4122d8"},{"commit":{"message":"Use zero_extend instead of andr"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"3d95a7d73629777a6063418469694a7877856f69"},{"commit":{"message":"Rename count -> temp3 in process_bytes"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"a8c8b92c84eda63f60dca7378d2fad83049b8284"},{"commit":{"message":"Fix codestyle for process_bytes assert"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"63f6f91a66c07520ab1a41b9aad4864e8016ef84"},{"commit":{"message":"Rename step registers -> temp3"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"fa8d8d9359f3aeeb42940f82ec2365fd8e29d4be"},{"commit":{"message":"Dispose of right_16_bits register reserve"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"ec9e8e46d30731cd65f53294ed80585004609e1a"},{"commit":{"message":"Unify process_bytes func for different step sizes"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"265d18968ea3b889540ea375011a55f11c100f00"},{"commit":{"message":"Fix vrsub_vi for case of vlen > 128"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"8530d662d609f1179bc6046fbb9bb44a5c332f34"},{"commit":{"message":"Add process_bytes_by32 function"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"089520198e037f038dcd60635b23030e64f9f9e8"},{"commit":{"message":"Fix comment"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"eb14ec10e419c21f00d2000cd573681ea81f77bd"},{"commit":{"message":"Add count initialization to 64 for by64 loop"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"b4f3bece140b2f4dd21de71961762b67bd56e488"},{"commit":{"message":"Clarify that s1_new sign-extension is safe"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"e684bebe7d822b95ab8a3b2cc5c5c25cae71a59b"},{"commit":{"message":"Fix comment about redsum constraints"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"a8842cb6a6b0896d1003c567842f54b21cd35f2e"},{"commit":{"message":"Use vrsub instead of vmv + vsub"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"9f4cd59072c10907f7f1f11198e5f6bad9d4a3e0"},{"commit":{"message":"Remove comment about group for vtemp1"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"5a97b10c224e0632668dc5eaf9e550459e369ed1"},{"commit":{"message":"Use v31 as vzero"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"9b04aae8b00c019c6e74bd120d4dd199c53592e1"},{"commit":{"message":"Fix group comment"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"8cbe16ffbd18e60dff1f385140815db780dcc7ec"},{"commit":{"message":"Partially unroll L_by16_loop"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"453c169b04422ec7aec72d4819a95597be2a7e07"},{"commit":{"message":"Fix by64 function for vlen > 128"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"ca83a4a43f1ccc4ece75c4f7f9fc7c1b56844f49"},{"commit":{"message":"Fix by16 function for vlen > 128"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"541e37a13474634be34f63d678e2f1b17e5e2e2c"},{"commit":{"message":"Prettify L_nmax loop"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"be7d2551a022f5d755417f99c550662d766a1ee1"},{"commit":{"message":"Add comments in functions"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"54ee4698d36c5bcc6019005386e9b31c532e385c"},{"commit":{"message":"Add explanation comment for L_nmax_loop"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"4cc9262dac8241d4cd0f17aabac65c4107b2de2c"},{"commit":{"message":"Fix L_nmax_loop for big lengths"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"7935932920112e24ffb112a0c726dec23f1d05e7"},{"commit":{"message":"Fix L_by16 loop step"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"3033014d1e768ef08fc1710aa18f69f25bd2beff"},{"commit":{"message":"Prettify intrinsic"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"3e9f85e4e3a105ddc9577a5d8670f417e4fae580"},{"commit":{"message":"Use LMUL=4 for most of the calculations"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"f34ded783baadfffbfe5e65ff2f4b7291237b803"},{"commit":{"message":"Use LMUL to load multiple data in one step"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"34a029687e60ab7a099a79b113ef525a279d245a"},{"commit":{"message":"Use mv instead of li"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"3cf649c9b9e57e9d6291ff87a3524978c6e7ad80"},{"commit":{"message":"Prettify function"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"d7a7db505a7cb5631c0c36adbf8157280bd7e814"},{"commit":{"message":"Remove unnecessary zeroing of vtemp1, vtemp2"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"1a05ce2d750ed941d75c54d2e99443db1cd6fabe"},{"commit":{"message":"Remove unnecessary zeroing of v4, ..., v27"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"17e650432d4185f992a78ba8570cf470da29a34e"},{"commit":{"message":"Remove unnecessary assert"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"cac24780aeea4ec3352b3a8eecc09d528ba6d8ec"},{"commit":{"message":"Move similar unroll code to a function"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"f0143cf344fc1b6f75cb6643cb3d09b715ac9993"},{"commit":{"message":"Fix comment"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"fa2dfebe2817dc0b0d03bd39ab3cc158ed9e9257"},{"commit":{"message":"Dispose of unnecessary arguments in accum function"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"eff0960acbb4c9f01636087fa78c0ca3deabe04d"},{"commit":{"message":"Accelerate vectorization\n- Use two vredsum instead of vadd + vwredsum\n- Make use of more vector registers\n- Dispose of most of vsetivli instructions"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"3359ec2a82d5d1ac38f9ec142948d37a7cc53590"},{"commit":{"message":"Prettify loop remainder"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"b682e0f52b273d251f623e5269be6991785c525a"},{"commit":{"message":"Fix comment"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"d63861d9543673abe4fb46e7cc3331a1fdea8275"},{"commit":{"message":"Use successor() of vtemp1 instead of v5"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"6f59dd5d34040d71c1231e4c16f3713d69f110e6"},{"commit":{"message":"Dispose of trailing whitespace"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"8a74349c55a94d06863da00d329fae20219bc13a"},{"commit":{"message":"Dispose of trailing whitespace"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"d06c15ca85e37fecf1f861ed05107393d89c07c5"},{"commit":{"message":"Vectorize intrinsic"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp"}],"sha":"8cef929325f4552b92d2eb6ec1f26698a97a59e8"},{"commit":{"message":"Use zext.h instructions when possible"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"6b2fe27cf23542a909f7815dcfe228f6b2f1781e"},{"commit":{"message":"Dispose of some unneeded instructions"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"6c5ddd5964c5c7debc10d1cb5afc640b026f1e8e"},{"commit":{"message":"Move buf_end up"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"290964ff5ae1cb3ce60e79dbecff51c67d492f16"},{"commit":{"message":"Add missing instructions for accum function split"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"f5949adcae9e4021fcfd946018ed9affafa6db70"},{"commit":{"message":"Prettify labels and accum function"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"9c1083d8cab93f587fb315871c57f2de198bcd6d"},{"commit":{"message":"Split accum function"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"8c4322278d1c04970392b1d908ba6f9ee8966a5a"},{"commit":{"message":"Eliminate L_nmax loop counter"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"46631b60f584a9fccb4ab5033936c9eee0be05d1"},{"commit":{"message":"Move repeating code under function"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"06b5542101393b7a569a198985c203d2633bf4c8"},{"commit":{"message":"Add `enter` and `leave`"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"}],"sha":"a8195a2d668de865300db8c5b507d2010046172e"},{"commit":{"message":"8317720: RISC-V: Implement Adler32 intrinsic"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp"}],"sha":"30d8bfa5b80ab6a2cbf45f5203d1b47d215ce0a1"}]