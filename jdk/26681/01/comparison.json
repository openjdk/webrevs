{"files":[{"patch":"@@ -29,2 +29,1 @@\n-\/\/ measurements made in November 2018. This list excludes files named\n-\/\/ *.inline.hpp, since including them decreased build performance.\n+\/\/ measurements made in August 2025.\n@@ -32,5 +31,2 @@\n-#include \"classfile\/classLoaderData.hpp\"\n-#include \"classfile\/javaClasses.hpp\"\n-#include \"classfile\/systemDictionary.hpp\"\n-#include \"gc\/shared\/collectedHeap.hpp\"\n-#include \"gc\/shared\/gcCause.hpp\"\n+#include \"classfile\/vmSymbols.hpp\"\n+#include \"interpreter\/interpreter.hpp\"\n@@ -38,4 +34,3 @@\n-#include \"memory\/allocation.hpp\"\n-#include \"memory\/iterator.hpp\"\n-#include \"memory\/memRegion.hpp\"\n-#include \"memory\/resourceArea.hpp\"\n+#include \"logging\/logStream.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"memory\/allocation.inline.hpp\"\n@@ -43,8 +38,1 @@\n-#include \"nmt\/memTracker.hpp\"\n-#include \"oops\/instanceKlass.hpp\"\n-#include \"oops\/klass.hpp\"\n-#include \"oops\/method.hpp\"\n-#include \"oops\/objArrayKlass.hpp\"\n-#include \"oops\/objArrayOop.hpp\"\n-#include \"oops\/oop.hpp\"\n-#include \"oops\/oopsHierarchy.hpp\"\n+#include \"oops\/oop.inline.hpp\"\n@@ -52,0 +40,1 @@\n+#include \"runtime\/frame.inline.hpp\"\n@@ -53,6 +42,5 @@\n-#include \"runtime\/handles.hpp\"\n-#include \"runtime\/javaThread.hpp\"\n-#include \"runtime\/mutex.hpp\"\n-#include \"runtime\/orderAccess.hpp\"\n-#include \"runtime\/os.hpp\"\n-#include \"runtime\/timer.hpp\"\n+#include \"runtime\/handles.inline.hpp\"\n+#include \"runtime\/interfaceSupport.inline.hpp\"\n+#include \"runtime\/mutexLocker.hpp\"\n+#include \"runtime\/sharedRuntime.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n@@ -60,2 +48,0 @@\n-#include \"utilities\/bitMap.hpp\"\n-#include \"utilities\/copy.hpp\"\n@@ -63,1 +49,0 @@\n-#include \"utilities\/exceptions.hpp\"\n@@ -68,10 +53,1 @@\n-#include \"utilities\/ticks.hpp\"\n-\n-#ifdef TARGET_COMPILER_visCPP\n-\/\/ For Visual Studio, including the *.inline.hpp files actually\n-\/\/ increased performance.\n-#include \"memory\/allocation.inline.hpp\"\n-#include \"oops\/access.inline.hpp\"\n-#include \"oops\/oop.inline.hpp\"\n-#include \"runtime\/handles.inline.hpp\"\n-#endif \/\/ TARGET_COMPILER_visCPP\n+#include \"utilities\/powerOfTwo.hpp\"\n","filename":"src\/hotspot\/share\/precompiled\/precompiled.hpp","additions":14,"deletions":38,"binary":false,"changes":52,"status":"modified"}]}