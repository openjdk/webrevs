{"files":[{"patch":"@@ -26,1 +26,1 @@\n- * @bug 6972078 8319938\n+ * @bug 6972078\n@@ -41,1 +41,0 @@\n-import javax.swing.JButton;\n@@ -51,1 +50,0 @@\n-    private static JButton getSelectedFilesButton;\n@@ -53,5 +51,3 @@\n-    private static boolean passed;\n-    private static File testDir;\n-    private static File testFile;\n-    private static File[] SubDirs;\n-    private static File[] subFiles;\n+    private static volatile Point frameLocation;\n+    private static volatile int frameWidth;\n+    private static volatile int frameHeight;\n@@ -63,4 +59,4 @@\n-        createFoldersOnlyDir();\n-        createFilesOnlyDir();\n-        populateDirs();\n-        populateFiles();\n+        File testDirDirs = createFoldersOnlyDir();\n+        File testDirFiles = createFilesOnlyDir();\n+        populateDirs(testDirDirs);\n+        populateFiles(testDirFiles);\n@@ -71,3 +67,3 @@\n-            checkFileOnlyTest(laf);\n-            checkDirectoriesOnlyTest(laf);\n-            checkFilesAndDirectoriesTest(laf);\n+            checkFileOnlyTest(laf, testDirFiles);\n+            checkDirectoriesOnlyTest(laf, testDirDirs);\n+            checkFilesAndDirectoriesTest(laf, testDirDirs);\n@@ -78,1 +74,1 @@\n-    private static void createFoldersOnlyDir() {\n+    private static File createFoldersOnlyDir() {\n@@ -80,3 +76,3 @@\n-        testDir = new File(tmpDir, \"testDir\");\n-        if (!testDir.exists()) {\n-            testDir.mkdir();\n+        File dirsDir = new File(tmpDir, \"dirsDir\");\n+        if (!dirsDir.exists()) {\n+            dirsDir.mkdir();\n@@ -84,1 +80,2 @@\n-        testDir.deleteOnExit();\n+        dirsDir.deleteOnExit();\n+        return dirsDir;\n@@ -87,2 +84,1 @@\n-    private static void populateDirs() {\n-        SubDirs = new File[10];\n+    private static void populateDirs(File dirsDir) {\n@@ -90,3 +86,3 @@\n-            SubDirs[i] = new File(testDir, \"subDir_\" + (i+1));\n-            SubDirs[i].mkdir();\n-            SubDirs[i].deleteOnExit();\n+            File SubDirs = new File(dirsDir, \"subDir_\" + (i+1));\n+            SubDirs.mkdir();\n+            SubDirs.deleteOnExit();\n@@ -96,1 +92,1 @@\n-    private static void createFilesOnlyDir() {\n+    private static File createFilesOnlyDir() {\n@@ -98,3 +94,3 @@\n-        testFile = new File(tmpDir, \"testFile\");\n-        if (!testFile.exists()) {\n-            testFile.mkdir();\n+        File filesDir = new File(tmpDir, \"filesDir\");\n+        if (!filesDir.exists()) {\n+            filesDir.mkdir();\n@@ -102,1 +98,2 @@\n-        testFile.deleteOnExit();\n+        filesDir.deleteOnExit();\n+        return filesDir;\n@@ -105,2 +102,1 @@\n-    private static void populateFiles() throws Exception {\n-        subFiles = new File[10];\n+    private static void populateFiles(File filesDir) throws Exception {\n@@ -108,3 +104,3 @@\n-            subFiles[i] = File.createTempFile(\"subFiles_\" + (i+1),\n-                    \".txt\", new File(testFile.getAbsolutePath()));\n-            subFiles[i].deleteOnExit();\n+            File subFile = new File(filesDir, \"subFiles_\" + (i+1));\n+            subFile.createNewFile();\n+            subFile.deleteOnExit();\n@@ -114,2 +110,2 @@\n-    private static void checkFileOnlyTest(UIManager.LookAndFeelInfo laf)\n-            throws Exception {\n+    private static void checkFileOnlyTest(UIManager.LookAndFeelInfo laf,\n+                                          File crntDir) throws Exception {\n@@ -120,1 +116,2 @@\n-                fileChooser.setCurrentDirectory(testFile);\n+                fileChooser.setCurrentDirectory(crntDir);\n+                fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);\n@@ -125,2 +122,6 @@\n-            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);\n-            doTesting(laf, 230);\n+            if (laf.getClassName().contains(\"Motif\")\n+                || laf.getClassName().contains(\"GTK\")) {\n+                doTesting(laf, 230);\n+            } else {\n+                doTesting(laf, 50);\n+            }\n@@ -128,5 +129,1 @@\n-            SwingUtilities.invokeAndWait(() -> {\n-                if (frame != null) {\n-                    frame.dispose();\n-                }\n-            });\n+            disposeFrame();\n@@ -136,2 +133,2 @@\n-    private static void checkDirectoriesOnlyTest(UIManager.LookAndFeelInfo laf)\n-            throws Exception {\n+    private static void checkDirectoriesOnlyTest(UIManager.LookAndFeelInfo laf,\n+                                             File crntDir) throws Exception {\n@@ -142,1 +139,2 @@\n-                fileChooser.setCurrentDirectory(testDir);\n+                fileChooser.setCurrentDirectory(crntDir);\n+                fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n@@ -146,1 +144,0 @@\n-            fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n@@ -149,5 +146,1 @@\n-            SwingUtilities.invokeAndWait(() -> {\n-                if (frame != null) {\n-                    frame.dispose();\n-                }\n-            });\n+            disposeFrame();\n@@ -157,2 +150,2 @@\n-    private static void checkFilesAndDirectoriesTest(UIManager.LookAndFeelInfo laf)\n-            throws Exception {\n+    private static void checkFilesAndDirectoriesTest(UIManager.LookAndFeelInfo laf,\n+                                               File crntDir) throws Exception {\n@@ -163,1 +156,2 @@\n-                fileChooser.setCurrentDirectory(testDir);\n+                fileChooser.setCurrentDirectory(crntDir);\n+                fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n@@ -167,1 +161,0 @@\n-            fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n@@ -170,5 +163,1 @@\n-            SwingUtilities.invokeAndWait(() -> {\n-                if (frame != null) {\n-                    frame.dispose();\n-                }\n-            });\n+            disposeFrame();\n@@ -181,1 +170,1 @@\n-        fileChooser = new JFileChooser(testDir);\n+        fileChooser = new JFileChooser();\n@@ -184,13 +173,0 @@\n-\n-        getSelectedFilesButton = new JButton();\n-        getSelectedFilesButton.setText(\"Print selected Files\");\n-        getSelectedFilesButton.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent evt) {\n-                passed = false;\n-                File files[] = fileChooser.getSelectedFiles();\n-                if (files.length != 0) {\n-                    passed = true;\n-                }\n-            }\n-        });\n-\n@@ -198,1 +174,0 @@\n-        frame.getContentPane().add(getSelectedFilesButton, BorderLayout.SOUTH);\n@@ -216,8 +191,7 @@\n-    private static void doTesting(UIManager.LookAndFeelInfo laf, int xOffset) {\n-        Point frameLocation = fileChooser.getLocationOnScreen();\n-        int frameWidth = frame.getWidth();\n-        int frameHeight = frame.getHeight();\n-\n-        Point btnLocation = getSelectedFilesButton.getLocationOnScreen();\n-        int btnWidth = getSelectedFilesButton.getWidth();\n-        int btnHeight = getSelectedFilesButton.getHeight();\n+    private static void doTesting(UIManager.LookAndFeelInfo laf, int xOffset)\n+                                    throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            frameLocation = fileChooser.getLocationOnScreen();\n+            frameWidth = frame.getWidth();\n+            frameHeight = frame.getHeight();\n+        });\n@@ -225,1 +199,0 @@\n-        clickMouse(btnLocation, btnWidth, btnHeight, 0);\n@@ -239,1 +212,2 @@\n-        if (!passed)\n+        File files[] = fileChooser.getSelectedFiles();\n+        if (files.length == 0) {\n@@ -241,1 +215,10 @@\n-                    \"empty array for LAF: \"+laf.getClassName());\n+                    \"empty array for LAF: \" + laf.getClassName());\n+        }\n+    }\n+\n+    private static void disposeFrame() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (frame != null) {\n+                frame.dispose();\n+            }\n+        });\n","filename":"test\/jdk\/com\/sun\/java\/swing\/plaf\/gtk\/TestFileChooserSingleDirectorySelection.java","additions":72,"deletions":89,"binary":false,"changes":161,"status":"modified"}]}