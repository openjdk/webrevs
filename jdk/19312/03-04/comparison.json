{"files":[{"patch":"@@ -29,1 +29,0 @@\n-import java.io.BufferedReader;\n@@ -31,1 +30,0 @@\n-import java.io.InputStreamReader;\n@@ -45,2 +43,2 @@\n-        try {\n-            serverSocketThread = new ServerSocketThread();\n+        serverSocketThread = initServerSocketThread();\n+        if (serverSocketThread != null) {\n@@ -48,0 +46,12 @@\n+        }\n+\n+        udpThread = initUDPThread();\n+        if (udpThread != null) {\n+            udpThread.start();\n+        }\n+    }\n+\n+    private UDPThread initUDPThread() {\n+        UDPThread aUDPThread = null;\n+        try {\n+            aUDPThread = new UDPThread();\n@@ -49,1 +59,1 @@\n-            System.err.println(\"failed to create and start a ServerSocketThread\");\n+            System.err.println(\"failed to create and start a UDPThread\");\n@@ -52,0 +62,2 @@\n+        return aUDPThread;\n+    }\n@@ -53,0 +65,2 @@\n+    private ServerSocketThread initServerSocketThread() {\n+        ServerSocketThread aServerSocketThread = null;\n@@ -54,2 +68,2 @@\n-            udpThread = new UDPThread();\n-            udpThread.start();\n+            aServerSocketThread = new ServerSocketThread();\n+ \n@@ -57,1 +71,1 @@\n-            System.err.println(\"failed to create and start a UDPThread\");\n+            System.err.println(\"failed to create and start a ServerSocketThread\");\n@@ -60,0 +74,1 @@\n+        return aServerSocketThread;\n@@ -76,0 +91,2 @@\n+        } else {\n+            System.out.println(\"UDPThread test scenario was not run\");\n@@ -77,0 +94,1 @@\n+\n@@ -84,0 +102,2 @@\n+        } else {\n+            System.out.println(\"ServerSocketThread test scenario was not run\");\n@@ -111,6 +131,2 @@\n-                BufferedReader reader = new BufferedReader(new InputStreamReader(client.getInputStream()));\n-                \/\/ the test never reaches here as the close will affect the blocking accept call\n-                \/\/ and there are no clients to connect to this serversocket\n-                while (!shouldTerminate) {\n-                    String msg = reader.readLine();\n-                }\n+                client.close();\n+                throw new RuntimeException(\"Unexpected return from accept call\");\n@@ -119,1 +135,0 @@\n-                z.printStackTrace();\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/StressNativeSignal.java","additions":30,"deletions":15,"binary":false,"changes":45,"status":"modified"}]}