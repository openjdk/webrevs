{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.util.concurrent.CountDownLatch;\n@@ -52,6 +53,1 @@\n-        try {\n-            Thread.sleep(3000);\n-        } catch (Exception z) {\n-            z.printStackTrace(System.err);\n-        }\n-\n+        test.waitForTestThreadsToStart();\n@@ -77,0 +73,6 @@\n+    public void waitForTestThreadsToStart() {\n+\n+        udpThread.waitTestThreadStart();\n+        serverSocketThread.waitTestThreadStart();\n+    }\n+\n@@ -80,0 +82,1 @@\n+        private volatile CountDownLatch threadStarted = new CountDownLatch(1);\n@@ -84,0 +87,7 @@\n+            } catch (Exception ignore) {\n+                System.err.println(\"ServerSocketThread: caught exception \" + ignore.getClass().getName());\n+                System.err.println(\"continue ...\");\n+            }\n+\n+            try {\n+                threadStarted.countDown();\n@@ -86,1 +96,2 @@\n-                shouldTerminate = false;\n+                \/\/ the test never reaches here as the close will affect the blocking accept call\n+                \/\/ and there are no clients to connect to this serversocket\n@@ -91,0 +102,2 @@\n+                System.err.println(\"ServerSocketThread: caught exception \" + z.getClass().getName());\n+                z.printStackTrace();\n@@ -106,0 +119,9 @@\n+\n+        public void waitTestThreadStart() {\n+            try {\n+                threadStarted.await();\n+            } catch (InterruptedException intEx) {\n+                System.err.println(\"ServerSocketThread.waitTestThreadStart:\" +\n+                                   \" InterruptException caught ... continue\");\n+            }\n+        }\n@@ -111,0 +133,1 @@\n+        private volatile CountDownLatch threadStarted = new CountDownLatch(1);\n@@ -123,2 +146,2 @@\n-            shouldTerminate = false;\n-            while (!shouldTerminate) {\n+            threadStarted.countDown();\n+            do {\n@@ -129,0 +152,1 @@\n+                    System.err.println(\"UDPThread: caught exception \" + z.getClass().getName());\n@@ -133,1 +157,1 @@\n-            }\n+            } while (!shouldTerminate);\n@@ -141,0 +165,1 @@\n+                System.err.println(\"UDPThread: caught exception \" + z.getClass().getName());\n@@ -145,0 +170,9 @@\n+\n+        public void waitTestThreadStart() {\n+            try {\n+                threadStarted.await();\n+            } catch (InterruptedException intEx) {\n+                System.err.println(\"UDPThread.waitTestThreadStart:\" +\n+                                   \" InterruptException caught ... continue\");\n+            }\n+        }\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/StressNativeSignal.java","additions":45,"deletions":11,"binary":false,"changes":56,"status":"modified"}]}