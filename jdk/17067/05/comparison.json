{"files":[{"patch":"@@ -69,1 +69,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -78,1 +78,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/TestAgeOutput.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+    OutputAnalyzer output = ProcessTools.executeTestJava(\n@@ -45,1 +45,0 @@\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/TestAllocateHeapAt.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+    OutputAnalyzer output = ProcessTools.executeTestJava(\n@@ -54,1 +54,0 @@\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/TestAllocateHeapAtError.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -63,2 +63,1 @@\n-      ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(flags);\n-      OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+      OutputAnalyzer output = ProcessTools.executeTestJava(flags);\n","filename":"test\/hotspot\/jtreg\/gc\/TestAllocateHeapAtMultiple.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -50,1 +50,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/TestCardTablePageCommits.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -70,1 +70,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/TestNumWorkerOutput.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,3 +51,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(testArguments);\n-\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeTestJava(testArguments);\n","filename":"test\/hotspot\/jtreg\/gc\/TestPLABAdaptToMinTLABSize.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer analyzer = ProcessTools.executeLimitedTestJava(\n@@ -104,1 +104,0 @@\n-        OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/TestSmallHeap.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+    OutputAnalyzer output = ProcessTools.executeTestJava(\n@@ -46,1 +46,0 @@\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/TestVerifyDuringStartup.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -60,2 +60,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(vmOpts);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = ProcessTools.executeLimitedTestJava(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/TestVerifySilently.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,2 +62,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(vmOpts);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/TestVerifySubSet.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -84,0 +85,16 @@\n+\n+    static public OutputAnalyzer executeLimitedTestJava(List<String> arguments) throws Exception {\n+        return executeLimitedTestJava(arguments.toArray(String[]::new));\n+    }\n+\n+    static public OutputAnalyzer executeLimitedTestJava(String... arguments) throws Exception {\n+        return ProcessTools.executeLimitedTestJava(withDefaults(arguments));\n+    }\n+\n+    static public OutputAnalyzer executeTestJava(List<String> arguments) throws Exception {\n+        return executeTestJava(arguments.toArray(String[]::new));\n+    }\n+\n+    static public OutputAnalyzer executeTestJava(String... arguments) throws Exception {\n+        return ProcessTools.executeTestJava(withDefaults(arguments));\n+    }\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/GCArguments.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-        ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\n+        OutputAnalyzer output = GCArguments.executeTestJava(\n@@ -71,2 +71,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n-\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestAggressiveHeap.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,3 +44,4 @@\n-            OutputAnalyzer output = runJava(\"-XX:CompressedClassSpaceSize=1g\",\n-                                            \"-XX:-UseCompressedClassPointers\",\n-                                            \"-version\");\n+            OutputAnalyzer output = GCArguments.executeTestJava(\n+                \"-XX:CompressedClassSpaceSize=1g\",\n+                \"-XX:-UseCompressedClassPointers\",\n+                \"-version\");\n@@ -52,5 +53,0 @@\n-\n-    private static OutputAnalyzer runJava(String ... args) throws Exception {\n-        ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(args);\n-        return new OutputAnalyzer(pb.start());\n-    }\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestCompressedClassFlags.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -43,8 +43,7 @@\n-        ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\"-XX:-UseSerialGC\",\n-                                                                     \"-XX:-UseParallelGC\",\n-                                                                     \"-XX:-UseG1GC\",\n-                                                                     \"-XX:-UseZGC\",\n-                                                                     \"-XX:+UnlockExperimentalVMOptions\",\n-                                                                     \"-XX:-UseShenandoahGC\",\n-                                                                     \"-version\");\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = GCArguments.executeTestJava(\"-XX:-UseSerialGC\",\n+                                                            \"-XX:-UseParallelGC\",\n+                                                            \"-XX:-UseG1GC\",\n+                                                            \"-XX:-UseZGC\",\n+                                                            \"-XX:+UnlockExperimentalVMOptions\",\n+                                                            \"-XX:-UseShenandoahGC\",\n+                                                            \"-version\");\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestDisableDefaultGC.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -81,2 +81,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(vmOpts);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeTestJava(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1ConcMarkStepDurationMillis.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -72,2 +72,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(vmOpts);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeTestJava(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1ConcRefinementThreads.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -56,2 +56,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(flagList);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeTestJava(flagList);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1HeapRegionSize.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -66,2 +66,1 @@\n-        ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\"-XX:+UseG1GC\", flag, \"-version\");\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = GCArguments.executeTestJava(\"-XX:+UseG1GC\", flag, \"-version\");\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1PercentageOptions.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,2 +51,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(flagList);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeTestJava(flagList);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1RemSetFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\n+    OutputAnalyzer output = GCArguments.executeTestJava(\n@@ -55,1 +55,0 @@\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestHeapFreeRatio.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\n+    OutputAnalyzer output = GCArguments.executeTestJava(\n@@ -51,1 +51,0 @@\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -61,1 +60,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\n+    OutputAnalyzer output = GCArguments.executeTestJava(\n@@ -68,1 +67,0 @@\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestInitialTenuringThreshold.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(gcflag,\n+    OutputAnalyzer output = GCArguments.executeTestJava(gcflag,\n@@ -120,1 +120,0 @@\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -211,2 +210,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(finalargs.toArray(String[]::new));\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeTestJava(finalargs.toArray(String[]::new));\n@@ -311,2 +309,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(flags);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeTestJava(flags);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxHeapSizeTools.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -101,2 +101,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n-        OutputAnalyzer analyzer = new OutputAnalyzer(procBuilder.start());\n+        OutputAnalyzer analyzer = GCArguments.executeLimitedTestJava(vmOptions);\n@@ -126,2 +125,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n-        OutputAnalyzer analyzer = new OutputAnalyzer(procBuilder.start());\n+        OutputAnalyzer analyzer = GCArguments.executeLimitedTestJava(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxMinHeapFreeRatioFlags.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -98,2 +98,1 @@\n-    ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(finalargs);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeTestJava(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxNewSize.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -64,2 +64,1 @@\n-    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(args);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeLimitedTestJava(args);\n@@ -87,2 +86,1 @@\n-    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(args);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeLimitedTestJava(args);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxRAMFlags.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -105,2 +105,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n-        OutputAnalyzer analyzer = new OutputAnalyzer(procBuilder.start());\n+        OutputAnalyzer analyzer = GCArguments.executeLimitedTestJava(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMinAndInitialSurvivorRatioFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -85,2 +85,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n-        OutputAnalyzer analyzer = new OutputAnalyzer(procBuilder.start());\n+        OutputAnalyzer analyzer = GCArguments.executeLimitedTestJava(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewRatioFlag.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-        OutputAnalyzer analyzer = startVM(options, newSize, maxNewSize, heapSize, maxHeapSize, expectedNewSize, expectedMaxNewSize);\n+        OutputAnalyzer analyzer = executeLimitedTestJava(options, newSize, maxNewSize, heapSize, maxHeapSize, expectedNewSize, expectedMaxNewSize);\n@@ -147,1 +147,1 @@\n-    private static OutputAnalyzer startVM(LinkedList<String> options,\n+    private static OutputAnalyzer executeLimitedTestJava(LinkedList<String> options,\n@@ -169,3 +169,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n-        OutputAnalyzer analyzer = new OutputAnalyzer(procBuilder.start());\n-        return analyzer;\n+        return GCArguments.executeLimitedTestJava(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewSizeFlags.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -68,8 +68,7 @@\n-    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\"-XX:+UseSerialGC\",\n-                                                                        \"-Xms96M\",\n-                                                                        \"-Xmx128M\",\n-                                                                        \"-XX:NewRatio=2\",\n-                                                                        \"-Xlog:gc+heap+ergo=debug\",\n-                                                                        \"-XX:NewSizeThreadIncrease=\"+expectedValue,\n-                                                                        GCTest.class.getName());\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeLimitedTestJava(\"-XX:+UseSerialGC\",\n+                                                               \"-Xms96M\",\n+                                                               \"-Xmx128M\",\n+                                                               \"-XX:NewRatio=2\",\n+                                                               \"-Xlog:gc+heap+ergo=debug\",\n+                                                               \"-XX:NewSizeThreadIncrease=\"+expectedValue,\n+                                                               GCTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewSizeThreadIncrease.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -164,2 +164,1 @@\n-    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(vmOpts);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeLimitedTestJava(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestObjectTenuringFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\n+    OutputAnalyzer output = GCArguments.executeLimitedTestJava(\n@@ -62,1 +62,0 @@\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -97,1 +96,1 @@\n-      ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\n+      OutputAnalyzer output = GCArguments.executeLimitedTestJava(\n@@ -102,1 +101,0 @@\n-      OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -127,2 +125,1 @@\n-    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(flags);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeLimitedTestJava(flags);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelGCThreads.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -80,3 +80,1 @@\n-        ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(result);\n-\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = GCArguments.executeLimitedTestJava(result);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelRefProc.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = GCArguments.executeLimitedTestJava(\n@@ -52,1 +52,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSelectDefaultGC.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    ProcessBuilder pb_enabled = GCArguments.createLimitedTestJavaProcessBuilder(\n+    OutputAnalyzer analyzer = GCArguments.executeLimitedTestJava(\n@@ -70,1 +70,0 @@\n-    OutputAnalyzer analyzer = new OutputAnalyzer(pb_enabled.start());\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSmallInitialHeapWithLargePageAndNUMA.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -90,2 +90,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n-        OutputAnalyzer analyzer = new OutputAnalyzer(procBuilder.start());\n+        OutputAnalyzer analyzer = GCArguments.executeLimitedTestJava(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSurvivorRatioFlag.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -119,2 +119,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n-        OutputAnalyzer analyzer = new OutputAnalyzer(procBuilder.start());\n+        OutputAnalyzer analyzer = GCArguments.executeLimitedTestJava(vmOptions);\n@@ -154,2 +153,1 @@\n-        ProcessBuilder procBuilder = GCArguments.createLimitedTestJavaProcessBuilder(vmOptions);\n-        OutputAnalyzer analyzer = new OutputAnalyzer(procBuilder.start());\n+        OutputAnalyzer analyzer = GCArguments.executeLimitedTestJava(vmOptions);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestTargetSurvivorRatioFlag.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(\n+    OutputAnalyzer outputWithError = GCArguments.executeLimitedTestJava(\n@@ -47,1 +47,0 @@\n-    OutputAnalyzer outputWithError = new OutputAnalyzer(pb.start());\n@@ -53,1 +52,1 @@\n-    pb = GCArguments.createLimitedTestJavaProcessBuilder(\n+    outputWithError = GCArguments.executeLimitedTestJava(\n@@ -57,1 +56,0 @@\n-    outputWithError = new OutputAnalyzer(pb.start());\n@@ -64,1 +62,1 @@\n-    pb = GCArguments.createLimitedTestJavaProcessBuilder(\n+    OutputAnalyzer outputWithNoError = GCArguments.executeLimitedTestJava(\n@@ -68,1 +66,0 @@\n-    OutputAnalyzer outputWithNoError = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUnrecognizedVMOptionsHandling.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -96,2 +96,1 @@\n-    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(finalargs);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeLimitedTestJava(finalargs);\n@@ -160,2 +159,1 @@\n-    ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(flags);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = GCArguments.executeLimitedTestJava(flags);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUseCompressedOopsErgoTools.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -62,3 +62,2 @@\n-    String cmd = ProcessTools.getCommandLine(ProcessTools.createTestJavaProcessBuilder(args.toArray(String[]::new)));\n-    ProcessBuilder pb = new ProcessBuilder(\"sh\", \"-c\", ulimit_prefix + \";\" + cmd);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    String cmd = ProcessTools.getCommandLine(ProcessTools.createTestJavaProcessBuilder(args));\n+    OutputAnalyzer output = ProcessTools.executeProcess(\"sh\", \"-c\", ulimit_prefix + \";\" + cmd);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUseCompressedOopsFlagsWithUlimit.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        ProcessBuilder pb = GCArguments.createTestJavaProcessBuilder(\n+        OutputAnalyzer output = GCArguments.executeTestJava(\n@@ -46,1 +46,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUseNUMAInterleaving.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -102,2 +102,1 @@\n-        ProcessBuilder pb = GCArguments.createLimitedTestJavaProcessBuilder(vmOpts);\n-        OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer analyzer = GCArguments.executeLimitedTestJava(vmOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestVerifyBeforeAndAfterGCFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+    return ProcessTools.executeLimitedTestJava(\n@@ -60,1 +60,0 @@\n-    return new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/class_unloading\/TestG1ClassUnloadingHWM.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -40,2 +40,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n-    OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer out = ProcessTools.executeLimitedTestJava(args);\n@@ -47,2 +46,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n-    OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer out = ProcessTools.executeLimitedTestJava(args);\n","filename":"test\/hotspot\/jtreg\/gc\/epsilon\/TestDieDefault.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,2 +41,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n-    OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer out = ProcessTools.executeLimitedTestJava(args);\n","filename":"test\/hotspot\/jtreg\/gc\/epsilon\/TestDieWithHeapDump.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,2 +42,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n-    OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer out = ProcessTools.executeLimitedTestJava(args);\n@@ -50,2 +49,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(args);\n-    OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer out = ProcessTools.executeLimitedTestJava(args);\n","filename":"test\/hotspot\/jtreg\/gc\/epsilon\/TestDieWithOnError.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -71,2 +71,2 @@\n-    ProcessBuilder pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(baseArgs);\n-    verifyDynamicNumberOfGCThreads(new OutputAnalyzer(pb_enabled.start()));\n+    OutputAnalyzer output = ProcessTools.executeLimitedTestJava(baseArgs);\n+    verifyDynamicNumberOfGCThreads(output);\n@@ -79,2 +79,2 @@\n-    pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(parRefArgs);\n-    verifyDynamicNumberOfGCThreads(new OutputAnalyzer(pb_enabled.start()));\n+    output = ProcessTools.executeLimitedTestJava(parRefArgs);\n+    verifyDynamicNumberOfGCThreads(output);\n","filename":"test\/hotspot\/jtreg\/gc\/ergonomics\/TestDynamicNumberOfGCThreads.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-    ProcessBuilder pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(\n+    OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -80,1 +80,1 @@\n-    verifyDynamicNumberOfGCThreads(new OutputAnalyzer(pb_enabled.start()), threadName);\n+    verifyDynamicNumberOfGCThreads(output, threadName);\n","filename":"test\/hotspot\/jtreg\/gc\/ergonomics\/TestInitialGCThreadLogging.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(testArguments);\n+    OutputAnalyzer output = ProcessTools.executeLimitedTestJava(testArguments);\n@@ -54,1 +54,0 @@\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/Test2GbHeap.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -46,9 +46,9 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                             \"-Xmx32M\",\n-                                                                             \"-Xmn16M\",\n-                                                                             \"-XX:+G1GCAllocationFailureALot\",\n-                                                                             \"-XX:G1GCAllocationFailureALotCount=100\",\n-                                                                             \"-XX:G1GCAllocationFailureALotInterval=1\",\n-                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                             \"-Xlog:gc\",\n-                                                                             GCTestWithAllocationFailure.class.getName());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                    \"-Xmx32M\",\n+                                                                    \"-Xmn16M\",\n+                                                                    \"-XX:+G1GCAllocationFailureALot\",\n+                                                                    \"-XX:G1GCAllocationFailureALotCount=100\",\n+                                                                    \"-XX:G1GCAllocationFailureALotInterval=1\",\n+                                                                    \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                    \"-Xlog:gc\",\n+                                                                    GCTestWithAllocationFailure.class.getName());\n@@ -56,1 +56,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestAllocationFailure.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -93,2 +93,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n-\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegions.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -135,1 +135,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegionsClearMarkBits.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -68,1 +68,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegionsLog.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -105,2 +105,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n-\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEagerReclaimHumongousRegionsWithRefs.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,2 +57,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(arguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1SkipCompaction.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,10 +44,8 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                         \"-Xms128M\",\n-                                                                         \"-Xmx128M\",\n-                                                                         \"-Xmn16M\",\n-                                                                         \"-XX:G1HeapRegionSize=1M\",\n-                                                                         \"-Xlog:gc+phases=trace,gc+humongous=trace\",\n-                                                                         \"-XX:+UnlockExperimentalVMOptions\",\n-                                                                         GCWithHumongousObjectTest.class.getName());\n-\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                \"-Xms128M\",\n+                                                                \"-Xmx128M\",\n+                                                                \"-Xmn16M\",\n+                                                                \"-XX:G1HeapRegionSize=1M\",\n+                                                                \"-Xlog:gc+phases=trace,gc+humongous=trace\",\n+                                                                \"-XX:+UnlockExperimentalVMOptions\",\n+                                                                GCWithHumongousObjectTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1TraceEagerReclaimHumongousObjects.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -221,3 +221,3 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                             \"-Xmx10M\",\n-                                                                             GCTest.class.getName());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                    \"-Xmx10M\",\n+                                                                    GCTest.class.getName());\n@@ -225,1 +225,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -229,4 +228,4 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                              \"-Xmx10M\",\n-                                                              \"-Xlog:gc+phases=debug\",\n-                                                              GCTest.class.getName());\n+        output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                     \"-Xmx10M\",\n+                                                     \"-Xlog:gc+phases=debug\",\n+                                                     GCTest.class.getName());\n@@ -234,1 +233,0 @@\n-        output = new OutputAnalyzer(pb.start());\n@@ -237,4 +235,4 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                              \"-Xmx10M\",\n-                                                              \"-Xlog:gc+phases=trace\",\n-                                                              GCTest.class.getName());\n+        output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                     \"-Xmx10M\",\n+                                                     \"-Xlog:gc+phases=trace\",\n+                                                     GCTest.class.getName());\n@@ -242,1 +240,0 @@\n-        output = new OutputAnalyzer(pb.start());\n@@ -256,5 +253,4 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                             \"-Xmx10M\",\n-                                                                             \"-Xlog:gc+refine+stats=debug\",\n-                                                                             GCTest.class.getName());\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                    \"-Xmx10M\",\n+                                                                    \"-Xlog:gc+refine+stats=debug\",\n+                                                                    GCTest.class.getName());\n@@ -275,11 +271,10 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                             \"-Xmx32M\",\n-                                                                             \"-Xmn16M\",\n-                                                                             \"-XX:+G1GCAllocationFailureALot\",\n-                                                                             \"-XX:G1GCAllocationFailureALotCount=100\",\n-                                                                             \"-XX:G1GCAllocationFailureALotInterval=1\",\n-                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                             \"-Xlog:gc+phases=debug\",\n-                                                                             GCTestWithAllocationFailure.class.getName());\n-\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                    \"-Xmx32M\",\n+                                                                    \"-Xmn16M\",\n+                                                                    \"-XX:+G1GCAllocationFailureALot\",\n+                                                                    \"-XX:G1GCAllocationFailureALotCount=100\",\n+                                                                    \"-XX:G1GCAllocationFailureALotInterval=1\",\n+                                                                    \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                    \"-Xlog:gc+phases=debug\",\n+                                                                    GCTestWithAllocationFailure.class.getName());\n+\n@@ -289,7 +284,7 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                              \"-Xmx32M\",\n-                                                              \"-Xmn16M\",\n-                                                              \"-Xms32M\",\n-                                                              \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                              \"-Xlog:gc+phases=trace\",\n-                                                              GCTestWithAllocationFailure.class.getName());\n+        output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                     \"-Xmx32M\",\n+                                                     \"-Xmn16M\",\n+                                                     \"-Xms32M\",\n+                                                     \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                     \"-Xlog:gc+phases=trace\",\n+                                                     GCTestWithAllocationFailure.class.getName());\n@@ -297,1 +292,0 @@\n-        output = new OutputAnalyzer(pb.start());\n@@ -308,9 +302,8 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                             \"-Xmx10M\",\n-                                                                             \"-Xbootclasspath\/a:.\",\n-                                                                             \"-Xlog:gc*=debug\",\n-                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                             \"-XX:+WhiteBoxAPI\",\n-                                                                             GCTestWithConcurrentStart.class.getName());\n-\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                    \"-Xmx10M\",\n+                                                                    \"-Xbootclasspath\/a:.\",\n+                                                                    \"-Xlog:gc*=debug\",\n+                                                                    \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                    \"-XX:+WhiteBoxAPI\",\n+                                                                    GCTestWithConcurrentStart.class.getName());\n+\n@@ -322,9 +315,8 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                             \"-Xmx10M\",\n-                                                                             \"-Xbootclasspath\/a:.\",\n-                                                                             \"-Xlog:gc+ergo+heap=debug\",\n-                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                             \"-XX:+WhiteBoxAPI\",\n-                                                                             GCTest.class.getName());\n-\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                    \"-Xmx10M\",\n+                                                                    \"-Xbootclasspath\/a:.\",\n+                                                                    \"-Xlog:gc+ergo+heap=debug\",\n+                                                                    \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                    \"-XX:+WhiteBoxAPI\",\n+                                                                    GCTest.class.getName());\n+\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestGCLogMessages.java","additions":48,"deletions":56,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeTestJava(\n@@ -57,1 +57,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousAllocConcurrentStart.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -58,1 +58,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousAllocNearlyFullRegion.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -109,2 +109,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(finalargs);\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = ProcessTools.executeLimitedTestJava(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousCodeCacheRoots.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -73,1 +73,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestHumongousConcurrentStartUndo.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -123,1 +123,0 @@\n-        ProcessBuilder pb;\n@@ -126,3 +125,1 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(getOpts(heapsize, true));\n-\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(getOpts(heapsize, true));\n@@ -141,1 +138,1 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(getOpts(heapsize, false));\n+        output = ProcessTools.executeLimitedTestJava(getOpts(heapsize, false));\n@@ -143,1 +140,0 @@\n-        output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestLargePageUseForAuxMemory.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -88,1 +88,0 @@\n-        ProcessBuilder pb;\n@@ -90,6 +89,6 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                              \"-XX:G1HeapRegionSize=\" + regionSize,\n-                                                              \"-Xmx128m\",\n-                                                              \"-Xlog:gc+init,pagesize,gc+heap+coops=debug\",\n-                                                              \"-XX:+UseLargePages\",\n-                                                              \"-version\");\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                    \"-XX:G1HeapRegionSize=\" + regionSize,\n+                                                                    \"-Xmx128m\",\n+                                                                    \"-Xlog:gc+init,pagesize,gc+heap+coops=debug\",\n+                                                                    \"-XX:+UseLargePages\",\n+                                                                    \"-version\");\n@@ -97,1 +96,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -103,6 +101,6 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                              \"-XX:G1HeapRegionSize=\" + regionSize,\n-                                                              \"-Xmx128m\",\n-                                                              \"-Xlog:gc+init,pagesize,gc+heap+coops=debug\",\n-                                                              \"-XX:-UseLargePages\",\n-                                                              \"-version\");\n+        output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                     \"-XX:G1HeapRegionSize=\" + regionSize,\n+                                                     \"-Xmx128m\",\n+                                                     \"-Xlog:gc+init,pagesize,gc+heap+coops=debug\",\n+                                                     \"-XX:-UseLargePages\",\n+                                                     \"-version\");\n@@ -110,1 +108,0 @@\n-        output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestLargePageUseForHeap.java","additions":12,"deletions":15,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -53,3 +53,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(testArguments);\n-\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(testArguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestMarkStackSizes.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -112,3 +112,1 @@\n-        ProcessBuilder procBuilder =  ProcessTools.createLimitedTestJavaProcessBuilder(basicOpts);\n-        OutputAnalyzer analyzer = new OutputAnalyzer(procBuilder.start());\n-        return analyzer;\n+        return ProcessTools.executeLimitedTestJava(basicOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestMixedGCLiveThreshold.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+    return ProcessTools.executeLimitedTestJava(\n@@ -53,1 +53,0 @@\n-    return new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestOneEdenRegionAfterGC.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,2 +62,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(arguments);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(arguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPLABOutput.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -65,2 +65,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(testArguments);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(testArguments);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPLABSizeBounds.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,5 +43,5 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                             \"-XX:G1PeriodicGCInterval=0\",\n-                                                                             \"-Xlog:gc+init,gc+periodic=debug\",\n-                                                                             \"-Xmx10M\",\n-                                                                             GCTest.class.getName());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                    \"-XX:G1PeriodicGCInterval=0\",\n+                                                                    \"-Xlog:gc+init,gc+periodic=debug\",\n+                                                                    \"-Xmx10M\",\n+                                                                    GCTest.class.getName());\n@@ -49,1 +49,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -54,5 +53,5 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                              \"-XX:G1PeriodicGCInterval=100\",\n-                                                              \"-Xlog:gc+init,gc+periodic=debug\",\n-                                                              \"-Xmx10M\",\n-                                                              GCTest.class.getName());\n+        output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                     \"-XX:G1PeriodicGCInterval=100\",\n+                                                     \"-Xlog:gc+init,gc+periodic=debug\",\n+                                                     \"-Xmx10M\",\n+                                                     GCTest.class.getName());\n@@ -60,1 +59,0 @@\n-        output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPeriodicLogMessages.java","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -72,2 +72,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(finalargs);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestPrintRegionRememberedSetInfo.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -47,8 +47,6 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                         \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                         \"-Xlog:gc+remset+exit=trace\",\n-                                                                         \"-XX:G1ConcRefinementThreads=\" + refinementThreads,\n-                                                                         \"-XX:ParallelGCThreads=\" + workerThreads,\n-                                                                         \"-version\");\n-\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                \"-Xlog:gc+remset+exit=trace\",\n+                                                                \"-XX:G1ConcRefinementThreads=\" + refinementThreads,\n+                                                                \"-XX:ParallelGCThreads=\" + workerThreads,\n+                                                                \"-version\");\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestRemsetLoggingThreads.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -80,2 +80,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(finalargs);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(finalargs);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestRemsetLoggingTools.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -53,2 +53,0 @@\n-        ProcessBuilder pb;\n-\n@@ -62,2 +60,2 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(dump_args);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(dump_args);\n+\n@@ -75,2 +73,1 @@\n-            pb = ProcessTools.createLimitedTestJavaProcessBuilder(load_args.toArray(new String[0]));\n-            output = new OutputAnalyzer(pb.start());\n+            output = ProcessTools.executeLimitedTestJava(load_args.toArray(new String[0]));\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestSharedArchiveWithPreTouch.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(opts);\n+        OutputAnalyzer output = ProcessTools.executeTestJava(opts);\n@@ -93,1 +93,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestShrinkAuxiliaryData.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -77,1 +77,0 @@\n-        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestShrinkDefragmentedHeap.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,11 +43,10 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xbootclasspath\/a:.\",\n-                                                                             \"-XX:+UseG1GC\",\n-                                                                             \"-XX:+UnlockExperimentalVMOptions\",\n-                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                             \"-XX:+WhiteBoxAPI\",\n-                                                                             \"-XX:G1MixedGCLiveThresholdPercent=20\",\n-                                                                             \"-Xlog:gc+marking=debug,gc+phases=debug,gc+remset+tracking=trace\",\n-                                                                             \"-Xms10M\",\n-                                                                             \"-Xmx10M\",\n-                                                                             GCTest.class.getName());\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-Xbootclasspath\/a:.\",\n+                                                                    \"-XX:+UseG1GC\",\n+                                                                    \"-XX:+UnlockExperimentalVMOptions\",\n+                                                                    \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                    \"-XX:+WhiteBoxAPI\",\n+                                                                    \"-XX:G1MixedGCLiveThresholdPercent=20\",\n+                                                                    \"-Xlog:gc+marking=debug,gc+phases=debug,gc+remset+tracking=trace\",\n+                                                                    \"-Xms10M\",\n+                                                                    \"-Xmx10M\",\n+                                                                    GCTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestSkipRebuildRemsetPhase.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -181,4 +181,1 @@\n-        ProcessBuilder procBuilder =  ProcessTools.createLimitedTestJavaProcessBuilder(basicOpts);\n-        OutputAnalyzer analyzer = new OutputAnalyzer(procBuilder.start());\n-\n-        return analyzer;\n+        return ProcessTools.executeLimitedTestJava(basicOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestVerifyGCType.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    public static void main(String[] args) throws IOException {\n+    public static void main(String[] args) throws Exception {\n@@ -50,1 +50,1 @@\n-    public static void generateClassLoader(long regionSize, Path wrkDir) throws IOException {\n+    public static void generateClassLoader(long regionSize, Path wrkDir) throws Exception {\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/humongousObjects\/ClassLoaderGenerator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -78,2 +78,1 @@\n-     * @throws IOException\n-     * @throws ClassNotFoundException\n+     * @throws Exception\n@@ -83,1 +82,1 @@\n-            throws IOException, ClassNotFoundException {\n+            throws Exception {\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/humongousObjects\/G1SampleClass.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -143,3 +143,1 @@\n-    public static void main(String[] args) throws ClassNotFoundException, InstantiationException,\n-            IllegalAccessException, IOException, NoSuchMethodException, InvocationTargetException {\n-\n+    public static void main(String[] args) throws Exception {\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/humongousObjects\/TestHumongousClassLoader.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,2 +85,1 @@\n-    public static void main(String[] args) throws ClassNotFoundException, InstantiationException,\n-            IllegalAccessException, IOException {\n+    public static void main(String[] args) throws Exception {\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/humongousObjects\/TestHumongousNonArrayAllocation.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -93,2 +93,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(testOpts);\n-        return new OutputAnalyzer(pb.start());\n+        return ProcessTools.executeLimitedTestJava(testOpts);\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/mixedgc\/TestLogging.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-        ProcessBuilder pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -198,1 +198,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb_enabled.start());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/numa\/TestG1NUMATouchRegions.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,10 +51,10 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                             \"-XX:+WhiteBoxAPI\",\n-                                                                             \"-Xbootclasspath\/a:.\",\n-                                                                             \"-XX:-CreateCoredumpOnCrash\",\n-                                                                             \"-Xmx32M\",\n-                                                                             \"-Xmn16M\",\n-                                                                             \"-Xlog:gc\",\n-                                                                             TestObjectPin.class.getName(),\n-                                                                             type);\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                    \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                    \"-XX:+WhiteBoxAPI\",\n+                                                                    \"-Xbootclasspath\/a:.\",\n+                                                                    \"-XX:-CreateCoredumpOnCrash\",\n+                                                                    \"-Xmx32M\",\n+                                                                    \"-Xmn16M\",\n+                                                                    \"-Xlog:gc\",\n+                                                                    TestObjectPin.class.getName(),\n+                                                                    type);\n@@ -62,1 +62,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -87,1 +86,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/pinnedobjs\/TestPinnedObjectTypes.java","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -67,13 +67,12 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                             \"-XX:+WhiteBoxAPI\",\n-                                                                             \"-Xbootclasspath\/a:.\",\n-                                                                             \"-Xmx32M\",\n-                                                                             \"-Xmn16M\",\n-                                                                             \"-XX:G1NumCollectionsKeepPinned=2\",\n-                                                                             \"-XX:+VerifyAfterGC\",\n-                                                                             \"-Xlog:gc,gc+ergo+cset=trace\",\n-                                                                             TestObjectPin.class.getName(),\n-                                                                             String.valueOf(younGCsBeforeUnpin));\n-\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                    \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                    \"-XX:+WhiteBoxAPI\",\n+                                                                    \"-Xbootclasspath\/a:.\",\n+                                                                    \"-Xmx32M\",\n+                                                                    \"-Xmn16M\",\n+                                                                    \"-XX:G1NumCollectionsKeepPinned=2\",\n+                                                                    \"-XX:+VerifyAfterGC\",\n+                                                                    \"-Xlog:gc,gc+ergo+cset=trace\",\n+                                                                    TestObjectPin.class.getName(),\n+                                                                    String.valueOf(younGCsBeforeUnpin));\n+\n@@ -131,1 +130,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/pinnedobjs\/TestPinnedObjectsEvacuation.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -260,18 +260,17 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UseG1GC\",\n-                                                                             \"-XX:+UnlockDiagnosticVMOptions\",\n-                                                                             \"-XX:+WhiteBoxAPI\",\n-                                                                             \"-Xbootclasspath\/a:.\",\n-                                                                             \"-Xmx32M\",\n-                                                                             \"-Xmn16M\",\n-                                                                             \"-XX:MarkSweepDeadRatio=0\",\n-                                                                             \"-XX:G1NumCollectionsKeepPinned=3\",\n-                                                                             \"-XX:+UnlockExperimentalVMOptions\",\n-                                                                             \/\/ Take all old regions to make sure that the pinned one is included in the collection set.\n-                                                                             \"-XX:G1MixedGCLiveThresholdPercent=100\",\n-                                                                             \"-XX:G1HeapWastePercent=0\",\n-                                                                             \"-XX:+VerifyAfterGC\",\n-                                                                             \"-Xlog:gc,gc+ergo+cset=trace\",\n-                                                                             TestObjectPin.class.getName(),\n-                                                                             String.valueOf(youngGCsBeforeUnpin));\n-\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UseG1GC\",\n+                                                                    \"-XX:+UnlockDiagnosticVMOptions\",\n+                                                                    \"-XX:+WhiteBoxAPI\",\n+                                                                    \"-Xbootclasspath\/a:.\",\n+                                                                    \"-Xmx32M\",\n+                                                                    \"-Xmn16M\",\n+                                                                    \"-XX:MarkSweepDeadRatio=0\",\n+                                                                    \"-XX:G1NumCollectionsKeepPinned=3\",\n+                                                                    \"-XX:+UnlockExperimentalVMOptions\",\n+                                                                    \/\/ Take all old regions to make sure that the pinned one is included in the collection set.\n+                                                                    \"-XX:G1MixedGCLiveThresholdPercent=100\",\n+                                                                    \"-XX:G1HeapWastePercent=0\",\n+                                                                    \"-XX:+VerifyAfterGC\",\n+                                                                    \"-Xlog:gc,gc+ergo+cset=trace\",\n+                                                                    TestObjectPin.class.getName(),\n+                                                                    String.valueOf(youngGCsBeforeUnpin));\n+\n@@ -337,1 +336,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/pinnedobjs\/TestPinnedOldObjectsEvacuation.java","additions":17,"deletions":19,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -45,2 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintGC\", DoGC.class.getName());\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+PrintGC\", DoGC.class.getName());\n@@ -55,2 +54,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintGCDetails\", DoGC.class.getName());\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+PrintGCDetails\", DoGC.class.getName());\n@@ -66,2 +64,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xloggc:\" + fileName, DoGC.class.getName());\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-Xloggc:\" + fileName, DoGC.class.getName());\n@@ -83,2 +80,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+PrintGCDetails\", \"-Xloggc:\" + fileName, DoGC.class.getName());\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+PrintGCDetails\", \"-Xloggc:\" + fileName, DoGC.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestDeprecatedPrintFlags.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -76,3 +76,3 @@\n-    ProcessBuilder pb_default =\n-      ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\", \"-XX:+\" + gcFlag, \"-Xlog:gc\", \"-Xmx10M\", GCTest.class.getName());\n-    verifyContainsGCIDs(new OutputAnalyzer(pb_default.start()));\n+    OutputAnalyzer output =\n+      ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\", \"-XX:+\" + gcFlag, \"-Xlog:gc\", \"-Xmx10M\", GCTest.class.getName());\n+    verifyContainsGCIDs(output);\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestGCId.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -96,10 +96,0 @@\n-    ProcessBuilder pb =\n-      ProcessTools.createTestJavaProcessBuilder(\n-          \"-Xlog:gc*\",\n-          \"-Xbootclasspath\/a:.\",\n-          \"-XX:+UnlockDiagnosticVMOptions\",\n-          \"-XX:+WhiteBoxAPI\",\n-          \"-Xmx1000M\",\n-          \"-Xms1000M\",\n-          StressMetaSpace.class.getName());\n-\n@@ -108,1 +98,9 @@\n-      output = new OutputAnalyzer(pb.start());\n+      output = ProcessTools.executeTestJava(\n+            \"-Xlog:gc*\",\n+            \"-Xbootclasspath\/a:.\",\n+            \"-XX:+UnlockDiagnosticVMOptions\",\n+            \"-XX:+WhiteBoxAPI\",\n+            \"-Xmx1000M\",\n+            \"-Xms1000M\",\n+            StressMetaSpace.class.getName());\n+\n@@ -113,1 +111,3 @@\n-      output.reportDiagnosticSummary();\n+      if (output != null) {\n+        output.reportDiagnosticSummary();\n+      }\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestMetaSpaceLog.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -70,5 +70,4 @@\n-        ProcessBuilder pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:gc+ref+phases=debug\",\n-                                                                                     \"-XX:+UseG1GC\",\n-                                                                                     \"-Xmx32M\",\n-                                                                                     GCTest.class.getName());\n-        OutputAnalyzer output = new OutputAnalyzer(pb_enabled.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-Xlog:gc+ref+phases=debug\",\n+                                                                    \"-XX:+UseG1GC\",\n+                                                                    \"-Xmx32M\",\n+                                                                    GCTest.class.getName());\n@@ -98,8 +97,7 @@\n-        ProcessBuilder pb_enabled = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xlog:gc+phases+ref=debug\",\n-                                                                                     \"-XX:+UseG1GC\",\n-                                                                                     \"-Xmx32M\",\n-                                                                                     \"-XX:\" + (parallelRefProcEnabled ? \"+\" : \"-\") + \"ParallelRefProcEnabled\",\n-                                                                                     \"-XX:-UseDynamicNumberOfGCThreads\",\n-                                                                                     \"-XX:ParallelGCThreads=2\",\n-                                                                                     GCTest.class.getName());\n-        OutputAnalyzer output = new OutputAnalyzer(pb_enabled.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-Xlog:gc+phases+ref=debug\",\n+                                                                    \"-XX:+UseG1GC\",\n+                                                                    \"-Xmx32M\",\n+                                                                    \"-XX:\" + (parallelRefProcEnabled ? \"+\" : \"-\") + \"ParallelRefProcEnabled\",\n+                                                                    \"-XX:-UseDynamicNumberOfGCThreads\",\n+                                                                    \"-XX:ParallelGCThreads=2\",\n+                                                                    GCTest.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestPrintReferences.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -80,3 +80,2 @@\n-        Process p = pb.start();\n-        p.waitFor();\n-        int exitValue = p.exitValue();\n+        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n+        int exitValue = output.getExitValue();\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/CompressedClassSpaceSizeInJmapHeap.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+    return ProcessTools.executeLimitedTestJava(\n@@ -93,1 +93,0 @@\n-    return new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestMetaspaceSizeFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -122,2 +122,1 @@\n-    final ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(jvmArgs);\n-    final OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    final OutputAnalyzer output = ProcessTools.executeLimitedTestJava(jvmArgs);\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestSizeTransitions.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,2 +44,1 @@\n-    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xmx128m\", \"-Xmn100m\", \"-XX:+UseSerialGC\", \"-Xlog:gc\", HeapFiller.class.getName());\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+    OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-Xmx128m\", \"-Xmn100m\", \"-XX:+UseSerialGC\", \"-Xlog:gc\", HeapFiller.class.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/serial\/HeapChangeLogging.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-                    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xms128m\",\n+                    OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-Xms128m\",\n@@ -66,1 +66,0 @@\n-                    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestEvilSyncBug.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -130,0 +130,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -144,5 +145,1 @@\n-            ProcessBuilder pb = new ProcessBuilder(jcmd.getCommand());\n-            Process jcmdProc = pb.start();\n-\n-            OutputAnalyzer output = new OutputAnalyzer(jcmdProc);\n-            jcmdProc.waitFor();\n+            OutputAnalyzer output = ProcessTools.executeProcess(jcmd.getCommand());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestJcmdHeapDump.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmds);\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(cmds);\n@@ -46,1 +46,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestObjItrWithHeapDump.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmds);\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(cmds);\n@@ -47,1 +47,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestPeriodicGC.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer analyzer = ProcessTools.executeLimitedTestJava(\n@@ -65,1 +65,0 @@\n-            OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n@@ -71,1 +70,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer analyzer = ProcessTools.executeLimitedTestJava(\n@@ -78,1 +77,0 @@\n-            OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestAllocLargeObj.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer analyzer = ProcessTools.executeLimitedTestJava(\n@@ -60,1 +60,0 @@\n-            OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n@@ -66,1 +65,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer analyzer = ProcessTools.executeLimitedTestJava(\n@@ -73,1 +72,0 @@\n-            OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestAllocLargerThanHeap.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer analyzer = ProcessTools.executeLimitedTestJava(\n@@ -64,1 +64,0 @@\n-            OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n@@ -70,1 +69,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer analyzer = ProcessTools.executeLimitedTestJava(\n@@ -77,1 +76,0 @@\n-            OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestAllocSmallObj.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -102,3 +102,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(pbArgs.toArray(new String[0]));\n-\n-        OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer analyzer = ProcessTools.executeLimitedTestJava(pbArgs.toArray(new String[0]));\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestClassLoaderLeak.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer analyzer = ProcessTools.executeLimitedTestJava(\n@@ -72,1 +72,0 @@\n-            OutputAnalyzer analyzer = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/oom\/TestThreadFailure.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -56,1 +56,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -60,1 +59,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -67,1 +66,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -71,1 +69,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -78,1 +76,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -86,1 +83,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -93,1 +90,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -97,1 +93,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -104,1 +100,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -108,1 +103,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -115,1 +110,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -119,1 +113,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -126,1 +120,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestArgumentRanges.java","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -46,2 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmds);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(cmds);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestClassUnloadingArguments.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -70,1 +70,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -80,1 +79,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -88,1 +87,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -98,1 +96,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -106,1 +104,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -116,1 +113,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -124,1 +121,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -134,1 +130,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -143,1 +139,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestExplicitGC.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -73,1 +73,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestExplicitGCNoConcurrent.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -63,1 +63,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -76,1 +75,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -84,1 +83,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -97,1 +95,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -105,1 +103,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestHeuristicsUnlock.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -46,1 +46,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -54,1 +53,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -60,1 +59,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -65,1 +63,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -71,1 +69,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestHumongousThresholdArgs.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -47,2 +47,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(cmds);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(cmds);\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestLoopMiningArguments.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -62,1 +62,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -75,1 +74,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -83,1 +82,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -96,1 +94,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -104,1 +102,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestModeUnlock.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -53,1 +53,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -58,1 +57,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -63,1 +62,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -68,1 +66,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -74,1 +72,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -80,1 +77,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -86,1 +83,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -91,1 +87,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -97,1 +93,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -103,1 +98,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -109,1 +104,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -114,1 +108,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -120,1 +114,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -125,1 +118,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -131,1 +124,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -137,1 +129,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -143,1 +135,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -148,1 +139,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -154,1 +145,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -163,1 +153,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -169,1 +159,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -175,1 +164,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -182,1 +171,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -187,1 +175,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -193,1 +181,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -199,1 +186,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -205,1 +192,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -214,1 +200,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -220,1 +206,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -226,1 +211,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -233,1 +218,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestRegionSizeArgs.java","additions":16,"deletions":32,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -92,2 +92,1 @@\n-                    ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(conf.toArray(new String[0]));\n-                    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+                    OutputAnalyzer output = ProcessTools.executeLimitedTestJava(conf.toArray(new String[0]));\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestSelectiveBarrierFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -47,1 +47,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -52,1 +51,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -58,1 +57,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -63,1 +61,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-XX:+UnlockExperimentalVMOptions\",\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\"-XX:+UnlockExperimentalVMOptions\",\n@@ -69,1 +67,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestSoftMaxHeapSize.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -56,1 +56,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestThreadCounts.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -49,1 +49,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -56,1 +55,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -64,1 +63,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestThreadCountsOverride.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -75,1 +75,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -84,1 +83,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -93,1 +92,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestWrongBarrierDisable.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -67,1 +67,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n@@ -76,1 +75,1 @@\n-            ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+            OutputAnalyzer output = ProcessTools.executeLimitedTestJava(\n@@ -85,1 +84,0 @@\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestWrongBarrierEnable.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -64,2 +64,2 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(baseargs);\n-        verifySymbolMemoryUsageNotTooHigh(new OutputAnalyzer(pb.start()));\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(baseargs);\n+        verifySymbolMemoryUsageNotTooHigh(output);\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestReclaimStringsLeaksMemory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -104,2 +104,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(options);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(options);\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestStressG1Humongous.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,2 +62,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(options);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeLimitedTestJava(options);\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestStressG1Uncommit.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -302,2 +302,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(args);\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeTestJava(args);\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationTools.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -92,1 +93,1 @@\n-    public static void compileClass(String className, Path root, String source) throws IOException {\n+    public static void compileClass(String className, Path root, String source) throws Exception {\n@@ -103,2 +104,1 @@\n-        ProcessBuilder pb = new ProcessBuilder(jar.getCommand());\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        OutputAnalyzer output = ProcessTools.executeProcess(jar.getCommand());\n@@ -202,2 +202,1 @@\n-     * @throws IOException\n-     * @throws ClassNotFoundException\n+     * @throws Exception\n@@ -207,1 +206,1 @@\n-            throws IOException, ClassNotFoundException {\n+            throws Exception {\n@@ -246,1 +245,1 @@\n-     * @throws IOException if cannot write or read to workDir\n+     * @throws Exception if cannot write or read to workDir\n@@ -250,1 +249,1 @@\n-                                                    String prefix) throws IOException {\n+                                                    String prefix) throws Exception {\n","filename":"test\/hotspot\/jtreg\/gc\/testlibrary\/Helpers.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+        OutputAnalyzer output = ProcessTools.executeTestJava(\n@@ -54,1 +54,0 @@\n-        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n","filename":"test\/hotspot\/jtreg\/gc\/whitebox\/TestWBGC.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,11 +44,11 @@\n-        ProcessTools.executeProcess(ProcessTools.createLimitedTestJavaProcessBuilder(\n-                \"-XX:+UseZGC\",\n-                \"-XX:-ZGenerational\",\n-                \"-Xlog:gc*\",\n-                \"-Xms32M\",\n-                \"-Xmx32M\",\n-                \"-XX:AllocateHeapAt=\" + directory,\n-                \"-version\"))\n-            .shouldContain(exists ? heapBackingFile : failedToCreateFile)\n-            .shouldNotContain(exists ? failedToCreateFile : heapBackingFile)\n-            .shouldHaveExitValue(exists ? 0 : 1);\n+        ProcessTools.executeLimitedTestJava(\n+            \"-XX:+UseZGC\",\n+            \"-XX:-ZGenerational\",\n+            \"-Xlog:gc*\",\n+            \"-Xms32M\",\n+            \"-Xmx32M\",\n+            \"-XX:AllocateHeapAt=\" + directory,\n+            \"-version\")\n+                .shouldContain(exists ? heapBackingFile : failedToCreateFile)\n+                .shouldNotContain(exists ? failedToCreateFile : heapBackingFile)\n+                .shouldHaveExitValue(exists ? 0 : 1);\n","filename":"test\/hotspot\/jtreg\/gc\/x\/TestAllocateHeapAt.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -71,11 +71,11 @@\n-        ProcessTools.executeProcess(ProcessTools.createLimitedTestJavaProcessBuilder(\n-                                    \"-XX:+UseZGC\",\n-                                    \"-XX:-ZGenerational\",\n-                                    \"-Xms128M\",\n-                                    \"-Xmx128M\",\n-                                    \"-Xlog:gc,gc+init,gc+heap=debug\",\n-                                    Test.class.getName()))\n-                    .outputTo(System.out)\n-                    .errorTo(System.out)\n-                    .shouldContain(\"Page Cache Flushed:\")\n-                    .shouldHaveExitValue(0);\n+        ProcessTools.executeLimitedTestJava(\n+            \"-XX:+UseZGC\",\n+            \"-XX:-ZGenerational\",\n+            \"-Xms128M\",\n+            \"-Xmx128M\",\n+            \"-Xlog:gc,gc+init,gc+heap=debug\",\n+            Test.class.getName())\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .shouldContain(\"Page Cache Flushed:\")\n+                .shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/gc\/x\/TestPageCacheFlush.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -56,10 +56,10 @@\n-            ProcessTools.executeProcess(ProcessTools.createLimitedTestJavaProcessBuilder(\n-                                        \"-XX:+UseZGC\",\n-                                        \"-XX:-ZGenerational\",\n-                                        \"-Xlog:gc,gc+init,gc+reloc,gc+heap\",\n-                                        \"-Xmx\" + maxCapacity,\n-                                        Test.class.getName()))\n-                .outputTo(System.out)\n-                .errorTo(System.out)\n-                .shouldContain(\"Success\")\n-                .shouldHaveExitValue(0);\n+            ProcessTools.executeLimitedTestJava(\n+                \"-XX:+UseZGC\",\n+                \"-XX:-ZGenerational\",\n+                \"-Xlog:gc,gc+init,gc+reloc,gc+heap\",\n+                \"-Xmx\" + maxCapacity,\n+                Test.class.getName())\n+                    .outputTo(System.out)\n+                    .errorTo(System.out)\n+                    .shouldContain(\"Success\")\n+                    .shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/gc\/x\/TestSmallHeap.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -44,11 +44,11 @@\n-        ProcessTools.executeProcess(ProcessTools.createLimitedTestJavaProcessBuilder(\n-                \"-XX:+UseZGC\",\n-                \"-XX:+ZGenerational\",\n-                \"-Xlog:gc*\",\n-                \"-Xms32M\",\n-                \"-Xmx32M\",\n-                \"-XX:AllocateHeapAt=\" + directory,\n-                \"-version\"))\n-            .shouldContain(exists ? heapBackingFile : failedToCreateFile)\n-            .shouldNotContain(exists ? failedToCreateFile : heapBackingFile)\n-            .shouldHaveExitValue(exists ? 0 : 1);\n+        ProcessTools.executeLimitedTestJava(\n+            \"-XX:+UseZGC\",\n+            \"-XX:+ZGenerational\",\n+            \"-Xlog:gc*\",\n+            \"-Xms32M\",\n+            \"-Xmx32M\",\n+            \"-XX:AllocateHeapAt=\" + directory,\n+            \"-version\")\n+                .shouldContain(exists ? heapBackingFile : failedToCreateFile)\n+                .shouldNotContain(exists ? failedToCreateFile : heapBackingFile)\n+                .shouldHaveExitValue(exists ? 0 : 1);\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestAllocateHeapAt.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -71,11 +71,11 @@\n-        ProcessTools.executeProcess(ProcessTools.createLimitedTestJavaProcessBuilder(\n-                                    \"-XX:+UseZGC\",\n-                                    \"-XX:+ZGenerational\",\n-                                    \"-Xms128M\",\n-                                    \"-Xmx128M\",\n-                                    \"-Xlog:gc,gc+init,gc+heap=debug\",\n-                                    Test.class.getName()))\n-                    .outputTo(System.out)\n-                    .errorTo(System.out)\n-                    .shouldContain(\"Page Cache Flushed:\")\n-                    .shouldHaveExitValue(0);\n+        ProcessTools.executeLimitedTestJava(\n+            \"-XX:+UseZGC\",\n+            \"-XX:+ZGenerational\",\n+            \"-Xms128M\",\n+            \"-Xmx128M\",\n+            \"-Xlog:gc,gc+init,gc+heap=debug\",\n+            Test.class.getName())\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .shouldContain(\"Page Cache Flushed:\")\n+                .shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestPageCacheFlush.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -56,10 +56,10 @@\n-            ProcessTools.executeProcess(ProcessTools.createLimitedTestJavaProcessBuilder(\n-                                        \"-XX:+UseZGC\",\n-                                        \"-XX:+ZGenerational\",\n-                                        \"-Xlog:gc,gc+init,gc+reloc,gc+heap\",\n-                                        \"-Xmx\" + maxCapacity,\n-                                        Test.class.getName()))\n-                .outputTo(System.out)\n-                .errorTo(System.out)\n-                .shouldContain(\"Success\")\n-                .shouldHaveExitValue(0);\n+            ProcessTools.executeLimitedTestJava(\n+                \"-XX:+UseZGC\",\n+                \"-XX:+ZGenerational\",\n+                \"-Xlog:gc,gc+init,gc+reloc,gc+heap\",\n+                \"-Xmx\" + maxCapacity,\n+                Test.class.getName())\n+                    .outputTo(System.out)\n+                    .errorTo(System.out)\n+                    .shouldContain(\"Success\")\n+                    .shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestSmallHeap.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -48,11 +48,11 @@\n-        OutputAnalyzer oa = ProcessTools.executeProcess(ProcessTools.createTestJavaProcessBuilder(\n-                                                        \"-XX:+UseZGC\",\n-                                                        \"-XX:+ZGenerational\",\n-                                                        \"-Xms\" + XmsInM + \"M\",\n-                                                        \"-Xmx\" + XmxInM + \"M\",\n-                                                        \"-Xlog:gc,gc+init\",\n-                                                        \"-XX:ZForceDiscontiguousHeapReservations=\" + n,\n-                                                        \"-version\"))\n-                                        .outputTo(System.out)\n-                                        .errorTo(System.out)\n-                                        .shouldHaveExitValue(0);\n+        OutputAnalyzer oa = ProcessTools.executeTestJava(\n+            \"-XX:+UseZGC\",\n+            \"-XX:+ZGenerational\",\n+            \"-Xms\" + XmsInM + \"M\",\n+            \"-Xmx\" + XmxInM + \"M\",\n+            \"-Xlog:gc,gc+init\",\n+            \"-XX:ZForceDiscontiguousHeapReservations=\" + n,\n+            \"-version\")\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestZForceDiscontiguousHeapReservations.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -71,15 +71,15 @@\n-        OutputAnalyzer oa = ProcessTools.executeProcess(ProcessTools.createTestJavaProcessBuilder(\n-                                                        \"-XX:+UseZGC\",\n-                                                        \"-XX:+ZGenerational\",\n-                                                        \"-Xms\" + XmsInM + \"M\",\n-                                                        \"-Xmx\" + XmxInM + \"M\",\n-                                                        \"-Xlog:gc,gc+init\",\n-                                                        \"-XX:ZForceDiscontiguousHeapReservations=\" + zForceDiscontiguousHeapReservations,\n-                                                        \"-XX:NativeMemoryTracking=detail\",\n-                                                        \"-XX:+PrintNMTStatistics\",\n-                                                        Test.class.getName(),\n-                                                        Integer.toString(zForceDiscontiguousHeapReservations),\n-                                                        Integer.toString(XmxInM)))\n-                                        .outputTo(System.out)\n-                                        .errorTo(System.out)\n-                                        .shouldHaveExitValue(0);\n+        OutputAnalyzer oa = ProcessTools.executeTestJava(\n+            \"-XX:+UseZGC\",\n+            \"-XX:+ZGenerational\",\n+            \"-Xms\" + XmsInM + \"M\",\n+            \"-Xmx\" + XmxInM + \"M\",\n+            \"-Xlog:gc,gc+init\",\n+            \"-XX:ZForceDiscontiguousHeapReservations=\" + zForceDiscontiguousHeapReservations,\n+            \"-XX:NativeMemoryTracking=detail\",\n+            \"-XX:+PrintNMTStatistics\",\n+            Test.class.getName(),\n+            Integer.toString(zForceDiscontiguousHeapReservations),\n+            Integer.toString(XmxInM))\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestZNMT.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -767,1 +767,1 @@\n-    public static OutputAnalyzer executeProcess(String... cmds) throws Throwable {\n+    public static OutputAnalyzer executeProcess(String... cmds) throws Exception {\n@@ -812,2 +812,1 @@\n-    public static OutputAnalyzer executeCommand(String... cmds)\n-            throws Throwable {\n+    public static OutputAnalyzer executeCommand(String... cmds) throws Exception {\n@@ -830,2 +829,1 @@\n-    public static OutputAnalyzer executeCommand(ProcessBuilder pb)\n-            throws Throwable {\n+    public static OutputAnalyzer executeCommand(ProcessBuilder pb) throws Exception {\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}