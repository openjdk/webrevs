{"files":[{"patch":"@@ -748,1 +748,1 @@\n-    private boolean cancelCheck() throws PrinterAbortException {\n+    private boolean cancelCheck() {\n@@ -751,1 +751,4 @@\n-        boolean cancelled = isCancelled();\n+        \/\/ This is used to avoid deadlock\n+        \/\/ We would like to just call if isCancelled(),\n+        \/\/ but that will block the AppKit thread against whomever is holding the synchronized lock\n+        boolean cancelled = (performingPrinting && userCancelled);\n@@ -753,1 +756,10 @@\n-            cancelDoc();\n+            try {\n+                LWCToolkit.invokeLater(new Runnable() { public void run() {\n+                    try {\n+                    cancelDoc();\n+                    } catch (PrinterAbortException pae) {\n+                        \/\/ no-op, let the native side handle it\n+                    }\n+                }}, null);\n+            } catch (NullPointerException ex) {\n+            } catch (java.lang.reflect.InvocationTargetException ite) {}\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterJob.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+static jclass sjc_PAbortEx = NULL;\n@@ -38,0 +39,1 @@\n+#define GET_PRINERABORTEXCEPTION_CLASS(ret) GET_CLASS_RETURN(sjc_PAbortEx, \"java\/awt\/print\/PrinterAbortException\", ret);\n@@ -264,0 +266,4 @@\n+    if (b) {\n+        GET_PRINERABORTEXCEPTION_CLASS(b);\n+        (*env)->ThrowNew(env, sjc_PAbortEx, \"Printer Job cancelled\");\n+    }\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/PrinterView.m","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}