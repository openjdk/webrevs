{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -374,0 +374,2 @@\n+                    } catch (PrinterAbortException pex) {\n+                        throw pex;\n@@ -746,1 +748,1 @@\n-    private boolean cancelCheck() {\n+    private boolean cancelCheck() throws PrinterAbortException {\n@@ -749,4 +751,1 @@\n-        \/\/ This is used to avoid deadlock\n-        \/\/ We would like to just call if isCancelled(),\n-        \/\/ but that will block the AppKit thread against whomever is holding the synchronized lock\n-        boolean cancelled = (performingPrinting && userCancelled);\n+        boolean cancelled = isCancelled();\n@@ -754,9 +753,1 @@\n-            try {\n-                LWCToolkit.invokeLater(new Runnable() { public void run() {\n-                    try {\n-                    cancelDoc();\n-                    } catch (PrinterAbortException pae) {\n-                        \/\/ no-op, let the native side handle it\n-                    }\n-                }}, null);\n-            } catch (java.lang.reflect.InvocationTargetException ite) {}\n+            cancelDoc();\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterJob.java","additions":6,"deletions":15,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @bug 4245280\n+ * @bug 4245280 8335231\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/Cancel\/PrinterJobCancel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}