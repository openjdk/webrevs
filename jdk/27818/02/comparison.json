{"files":[{"patch":"@@ -620,2 +620,8 @@\n-    tty->print_cr(\"Method patterns has the format:\");\n-  tty->print_cr(\"  package\/Class.method()\");\n+  tty->print_cr(\"The <method pattern> has the format '<class>.<method><descriptor>'.\");\n+  tty->cr();\n+  tty->print_cr(\"For example, the <method pattern>\");\n+  tty->cr();\n+  tty->print_cr(\"  package\/Class.method(Lpackage\/Parameter;)Lpackage\/Return;\");\n+  tty->cr();\n+  tty->print_cr(\"matches the <method> 'method' in <class> 'package\/Class' with <descriptor>\");\n+  tty->print_cr(\"'(Lpackage\/Parameter;)Lpackage\/Return;'\");\n@@ -624,1 +630,0 @@\n-  tty->print_cr(\"  package.Class::method()\");\n@@ -626,2 +631,25 @@\n-  tty->print_cr(\"The signature can be separated by an optional whitespace or comma:\");\n-  tty->print_cr(\"  package\/Class.method ()\");\n+  tty->print_cr(\"  package.Class::method(Lpackage.Parameter;)Lpackage.Return;\");\n+  tty->cr();\n+  tty->print_cr(\"A whitespace or comma can optionally separate the <descriptor> from the\");\n+  tty->print_cr(\"<method>:\");\n+  tty->cr();\n+  tty->print_cr(\"  package\/Class.method (Lpackage\/Parameter;)Lpackage\/Return;\");\n+  tty->print_cr(\"  package\/Class.method,(Lpackage\/Parameter;)Lpackage\/Return;\");\n+  tty->cr();\n+  tty->print_cr(\"The <class> and <method> accept leading and trailing '*' wildcards\");\n+  tty->print_cr(\"matching:\");\n+  tty->cr();\n+  tty->print_cr(\"  *ackage\/Clas*.*etho*(Lpackage\/Parameter;)Lpackage\/Return;\");\n+  tty->cr();\n+  tty->print_cr(\"The <descriptor> does not support explicit wildcards and\");\n+  tty->print_cr(\"always has an implicit trailing wildcard. Therefore,\");\n+  tty->cr();\n+  tty->print_cr(\"  package\/Class.method(Lpackage\/Parameter;)Lpackage\/Return;\");\n+  tty->cr();\n+  tty->print_cr(\"matches a subset of\");\n+  tty->cr();\n+  tty->print_cr(\"  package\/Class.method(Lpackage\/Parameter;)\");\n+  tty->cr();\n+  tty->print_cr(\"which matches a subset of\");\n+  tty->cr();\n+  tty->print_cr(\"  package\/Class.method\");\n@@ -629,3 +657,1 @@\n-  tty->print_cr(\"The class and method identifier can be used together with leading or\");\n-  tty->print_cr(\"trailing *'s for wildcard matching:\");\n-  tty->print_cr(\"  *ackage\/Clas*.*etho*()\");\n+  tty->print_cr(\"which matches all possible descriptors.\");\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.cpp","additions":34,"deletions":8,"binary":false,"changes":42,"status":"modified"}]}