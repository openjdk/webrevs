{"files":[{"patch":"@@ -313,1 +313,1 @@\n-IdealLoopTree* PhaseIdealLoop::create_outer_strip_mined_loop(Node *init_control,\n+IdealLoopTree* PhaseIdealLoop::create_outer_strip_mined_loop(Node* init_control,\n@@ -367,1 +367,1 @@\n-Node* PhaseIdealLoop::loop_exit_control(const Node* x, const IdealLoopTree* loop) const {\n+Node* PhaseIdealLoop::loop_exit_control(const Node* head, const IdealLoopTree* loop) const {\n@@ -370,1 +370,1 @@\n-  if (x->in(LoopNode::Self) == nullptr || x->req() != 3 || loop->_irreducible) {\n+  if (head->in(LoopNode::Self) == nullptr || head->req() != 3 || loop->_irreducible) {\n@@ -373,2 +373,2 @@\n-  Node *init_control = x->in(LoopNode::EntryControl);\n-  Node *back_control = x->in(LoopNode::LoopBackControl);\n+  Node *init_control = head->in(LoopNode::EntryControl);\n+  Node *back_control = head->in(LoopNode::LoopBackControl);\n@@ -445,2 +445,2 @@\n-PhaseIdealLoop::LoopIVIncr PhaseIdealLoop::loop_iv_incr(Node* incr, const Node* x, const IdealLoopTree* loop) {\n-  if (incr->is_Phi() && incr->as_Phi()->region() == x && incr->req() == 3) { \/\/ Requires simple trip counter expression\n+PhaseIdealLoop::LoopIVIncr PhaseIdealLoop::loop_iv_incr(Node* incr, const Node* head, const IdealLoopTree* loop) {\n+  if (incr->is_Phi() && incr->as_Phi()->region() == head && incr->req() == 3) { \/\/ Requires simple trip counter expression\n@@ -471,1 +471,1 @@\n-PhiNode* PhaseIdealLoop::loop_iv_phi(const Node* xphi, const Node* phi_incr, const Node* x) {\n+PhiNode* PhaseIdealLoop::loop_iv_phi(const Node* xphi, const Node* phi_incr, const Node* head) {\n@@ -481,1 +481,1 @@\n-  if (phi->region() != x) {\n+  if (phi->region() != head) {\n@@ -612,1 +612,1 @@\n-static bool no_side_effect_since_safepoint(Compile* C, const Node* x, const Node* mem, MergeMemNode* mm, const PhaseIdealLoop* phase) {\n+static bool no_side_effect_since_safepoint(Compile* C, const Node* head, const Node* mem, MergeMemNode* mm, const PhaseIdealLoop* phase) {\n@@ -614,2 +614,2 @@\n-  for (DUIterator_Fast imax, i = x->fast_outs(imax); i < imax; i++) {\n-    Node* u = x->fast_out(i);\n+  for (DUIterator_Fast imax, i = head->fast_outs(imax); i < imax; i++) {\n+    Node* u = head->fast_out(i);\n@@ -665,1 +665,1 @@\n-SafePointNode* PhaseIdealLoop::find_safepoint(Node* back_control, const Node* x, const IdealLoopTree* loop) {\n+SafePointNode* PhaseIdealLoop::find_safepoint(Node* back_control, const Node* head, const IdealLoopTree* loop) {\n@@ -672,1 +672,1 @@\n-    while (c != x && c->Opcode() != Op_SafePoint) {\n+    while (c != head && c->Opcode() != Op_SafePoint) {\n@@ -711,1 +711,1 @@\n-    if (!no_side_effect_since_safepoint(C, x, mem, mm, this)) {\n+    if (!no_side_effect_since_safepoint(C, head, mem, mm, this)) {\n@@ -1497,1 +1497,1 @@\n-      _trunc1 == nullptr;\n+      _increment_truncation_type == TypeInt::INT; \/\/ Only stress an int loop (i.e., not char, byte or short)\n@@ -1651,2 +1651,1 @@\n-  CountedLoopNode::TruncatedIncrement\n-      increment = CountedLoopNode::match_incr_with_optional_truncation(iv_incr.incr, _iv_bt);\n+  CountedLoopNode::TruncatedIncrement increment = CountedLoopNode::match_incr_with_optional_truncation(iv_incr.incr, _iv_bt);\n@@ -2126,1 +2125,1 @@\n-  _phi_incr = iv_incr.phi_incr;\n+  _phi_increment = iv_incr.phi_incr;\n@@ -2134,1 +2133,1 @@\n-  _trunc1 = increment.trunc1;\n+  _increment_truncation_type = increment.trunc_type;\n@@ -2180,1 +2179,1 @@\n-  if (_phi_incr != nullptr) {\n+  if (_phi_increment != nullptr) {\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":20,"deletions":21,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -1273,1 +1273,1 @@\n-  Node* loop_exit_control(const Node* x, const IdealLoopTree* loop) const;\n+  Node* loop_exit_control(const Node* head, const IdealLoopTree* loop) const;\n@@ -1288,1 +1288,1 @@\n-  LoopIVIncr loop_iv_incr(Node* old_incr, const Node* x, const IdealLoopTree* loop);\n+  static LoopIVIncr loop_iv_incr(Node* old_incr, const Node* head, const IdealLoopTree* loop);\n@@ -1296,1 +1296,1 @@\n-  static PhiNode* loop_iv_phi(const Node* xphi, const Node* phi_incr, const Node* x);\n+  static PhiNode* loop_iv_phi(const Node* xphi, const Node* phi_incr, const Node* head);\n@@ -1304,1 +1304,1 @@\n-  SafePointNode* find_safepoint(Node* back_control, const Node* x, const IdealLoopTree* loop);\n+  SafePointNode* find_safepoint(Node* back_control, const Node* head, const IdealLoopTree* loop);\n@@ -1306,2 +1306,1 @@\n-  IdealLoopTree* create_outer_strip_mined_loop(Node *init_control,\n-                                               IdealLoopTree* loop, float cl_prob, float le_fcnt,\n+  IdealLoopTree* create_outer_strip_mined_loop(Node* init_control, IdealLoopTree* loop, float cl_prob, float le_fcnt,\n@@ -1327,1 +1326,1 @@\n-    Node* _phi_incr;\n+    Node* _phi_increment;\n@@ -1336,1 +1335,1 @@\n-    Node* _trunc1;\n+    const TypeInteger* _increment_truncation_type;\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"}]}