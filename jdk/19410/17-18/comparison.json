{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import jdk.internal.constant.MethodTypeDescImpl;\n@@ -352,2 +353,5 @@\n-        return MethodHandleDesc.ofMethod(STATIC, owner, name, MethodTypeDesc.of(returnType, paramTypes)\n-                                                                            .insertParameterTypes(0, INDY_BOOTSTRAP_ARGS));\n+        int prefixLen = INDY_BOOTSTRAP_ARGS.length;\n+        ClassDesc[] fullParamTypes = new ClassDesc[paramTypes.length + prefixLen];\n+        System.arraycopy(INDY_BOOTSTRAP_ARGS, 0, fullParamTypes, 0, prefixLen);\n+        System.arraycopy(paramTypes, 0, fullParamTypes, prefixLen, paramTypes.length);\n+        return MethodHandleDesc.ofMethod(STATIC, owner, name, MethodTypeDescImpl.ofTrusted(returnType, fullParamTypes));\n@@ -373,2 +377,5 @@\n-        return MethodHandleDesc.ofMethod(STATIC, owner, name, MethodTypeDesc.of(returnType, paramTypes)\n-                                                                            .insertParameterTypes(0, CONDY_BOOTSTRAP_ARGS));\n+        int prefixLen = CONDY_BOOTSTRAP_ARGS.length;\n+        ClassDesc[] fullParamTypes = new ClassDesc[paramTypes.length + prefixLen];\n+        System.arraycopy(CONDY_BOOTSTRAP_ARGS, 0, fullParamTypes, 0, prefixLen);\n+        System.arraycopy(paramTypes, 0, fullParamTypes, prefixLen, paramTypes.length);\n+        return MethodHandleDesc.ofMethod(STATIC, owner, name, MethodTypeDescImpl.ofTrusted(returnType, fullParamTypes));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/ConstantDescs.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -859,0 +859,2 @@\n+            if (target == m) return;\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Proxy.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1045,1 +1045,3 @@\n-            localsSize = 0;\n+            int localsSize = 0;\n+            \/\/ Pre-emptively create a locals array that encompass all parameter slots\n+            checkLocal(methodDesc.parameterCount() + (isStatic ? 0 : -1));\n@@ -1057,1 +1059,1 @@\n-                if (desc.isClassOrInterface() || desc.isArray()) {\n+                if (!desc.isPrimitive()) {\n@@ -1075,0 +1077,1 @@\n+            this.localsSize = localsSize;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -160,0 +160,3 @@\n+            \/\/ common case fast-path\n+            if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z'))\n+                continue;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/constant\/ConstantUtils.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -129,4 +129,4 @@\n-        if (o == null || getClass() != o.getClass()) return false;\n-\n-        ClassDesc constant = (ClassDesc) o;\n-        return descriptor.equals(constant.descriptorString());\n+        if (o instanceof ReferenceClassDescImpl constant) {\n+            return descriptor.equals(constant.descriptor);\n+        }\n+        return false;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/constant\/ReferenceClassDescImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}