{"files":[{"patch":"@@ -209,0 +209,2 @@\n+     *\n+     * @return true if the node was added; false otherwise\n@@ -210,1 +212,1 @@\n-    private void linkFirst(Node<E> node) {\n+    private boolean linkFirst(Node<E> node) {\n@@ -212,1 +214,1 @@\n-        \/\/ assert count < capacity\n+        if (count >= capacity) return false;\n@@ -222,0 +224,1 @@\n+        return true;\n@@ -226,0 +229,2 @@\n+     *\n+     * @return true if the node was added; false otherwise\n@@ -227,1 +232,1 @@\n-    private void linkLast(Node<E> node) {\n+    private boolean linkLast(Node<E> node) {\n@@ -229,1 +234,1 @@\n-        \/\/ assert count < capacity\n+        if (count >= capacity) return false;\n@@ -239,0 +244,1 @@\n+        return true;\n@@ -339,4 +345,1 @@\n-            if (count >= capacity)\n-                return false;\n-            linkFirst(node);\n-            return true;\n+            return linkFirst(node);\n@@ -359,4 +362,1 @@\n-            if (count >= capacity)\n-                return false;\n-            linkLast(node);\n-            return true;\n+            return linkLast(node);\n@@ -378,1 +378,1 @@\n-            while (count >= capacity)\n+            while (!linkFirst(node))\n@@ -380,1 +380,0 @@\n-            linkFirst(node);\n@@ -396,1 +395,1 @@\n-            while (count >= capacity)\n+            while (!linkLast(node))\n@@ -398,1 +397,0 @@\n-            linkLast(node);\n@@ -416,1 +414,1 @@\n-            while (count >= capacity) {\n+            while (!linkFirst(node)) {\n@@ -421,1 +419,0 @@\n-            linkFirst(node);\n@@ -440,1 +437,1 @@\n-            while (count >= capacity) {\n+            while (!linkLast(node)) {\n@@ -445,1 +442,0 @@\n-            linkLast(node);\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/LinkedBlockingDeque.java","additions":16,"deletions":20,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -1965,0 +1965,24 @@\n+\n+    public void testWeaklyConsistentIterationWithIteratorRemove() {\n+        final LinkedBlockingDeque<Item> q = new LinkedBlockingDeque<>(15);\n+        q.add(one);\n+        q.add(two);\n+        q.add(three);\n+        q.add(four);\n+        q.add(five);\n+        final Iterator<Item> it1 = q.iterator();\n+        final Iterator<Item> it2 = q.iterator();\n+        final Iterator<Item> it3 = q.iterator();\n+        final Iterator<Item> it2 = q.iterator();\n+        final Iterator<Item> it2 = q.iterator();\n+        mustEqual(one, it1.next());\n+        q.clear();\n+        q.add(four);\n+        q.add(five);\n+        q.add(six);\n+        mustEqual(two, it.next());\n+        mustEqual(four, it.next());\n+        mustEqual(five, it.next());\n+        mustEqual(six, it.next());\n+        mustEqual(3, q.size());\n+    }\n","filename":"test\/jdk\/java\/util\/concurrent\/tck\/LinkedBlockingDequeTest.java","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"}]}