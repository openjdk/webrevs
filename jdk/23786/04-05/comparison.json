{"files":[{"patch":"@@ -93,0 +93,1 @@\n+bool NMTRecorder_Locker::_safe_to_use = false;\n@@ -158,1 +159,0 @@\n-  MutexLocker ml(NMTRecorder_lock, Mutex::_no_safepoint_check_flag);\n@@ -167,1 +167,1 @@\n-          \/\/fprintf(stderr, \" got name for thread %6ld:%lx [%s]\\n\", tid, tid, _threads_names[i].name);\n+          \/\/ fprintf(stderr, \" got name for thread %6ld:%lx [%s]\\n\", tid, tid, _threads_names[i].name);\n@@ -173,1 +173,1 @@\n-      \/\/fprintf(stderr, \" added:%6ld:%lx [%6zu]\\n\", tid, tid, _threads_names_size);\n+      \/\/ fprintf(stderr, \" added:%6ld:%lx [%6zu]\\n\", tid, tid, _threads_names_size);\n@@ -304,1 +304,1 @@\n-  \/\/fprintf(stderr, \"> NMT_MemoryLogRecorder::initialize(%ld, %ld)\\n\", limit, sizeof(Entry));\n+  \/\/ fprintf(stderr, \"> NMT_MemoryLogRecorder::initialize(%ld, %ld)\\n\", limit, sizeof(Entry));\n@@ -307,1 +307,1 @@\n-  MutexLocker ml(NMTRecorder_lock, Mutex::_no_safepoint_check_flag);\n+  NMTRecorder_Locker locker;\n@@ -321,1 +321,1 @@\n-  \/\/fprintf(stderr, \"NMT_MemoryLogRecorder::finish() %p\\n\", NMT_MemoryLogRecorder::instance());\n+  \/\/ fprintf(stderr, \"NMT_MemoryLogRecorder::finish() %p\\n\", NMT_MemoryLogRecorder::instance());\n@@ -323,1 +323,1 @@\n-    MutexLocker ml(NMTRecorder_lock, Mutex::_no_safepoint_check_flag);\n+    NMTRecorder_Locker locker;\n@@ -327,1 +327,1 @@\n-    \/\/fprintf(stderr, \" log_fd:%d\\n\", log_fd);\n+    \/\/ fprintf(stderr, \" log_fd:%d\\n\", log_fd);\n@@ -329,1 +329,1 @@\n-    \/\/fprintf(stderr, \" log_fd:%d\\n\", log_fd);\n+    \/\/ fprintf(stderr, \" log_fd:%d\\n\", log_fd);\n@@ -332,1 +332,1 @@\n-    \/\/fprintf(stderr, \" threads_fd:%d\\n\", threads_fd);\n+    \/\/ fprintf(stderr, \" threads_fd:%d\\n\", threads_fd);\n@@ -336,1 +336,1 @@\n-      \/\/fprintf(stderr, \" threads_fd:%d\\n\", threads_fd);\n+      \/\/ fprintf(stderr, \" threads_fd:%d\\n\", threads_fd);\n@@ -340,1 +340,1 @@\n-    \/\/fprintf(stderr, \" info_fd:%d\\n\", info_fd);\n+    \/\/ fprintf(stderr, \" info_fd:%d\\n\", info_fd);\n@@ -347,1 +347,1 @@\n-      \/\/fprintf(stderr, \" info_fd:%d\\n\", info_fd);\n+      \/\/ fprintf(stderr, \" info_fd:%d\\n\", info_fd);\n@@ -356,1 +356,1 @@\n-  \/\/fprintf(stderr, \"NMT_MemoryLogRecorder::replay(\\\"%s\\\", %d)\\n\", path, pid);\n+  \/\/ fprintf(stderr, \"NMT_MemoryLogRecorder::replay(%d)\\n\", pid);\n@@ -359,1 +359,1 @@\n-  MutexLocker ml(NMTRecorder_lock, Mutex::_no_safepoint_check_flag);\n+  NMTRecorder_Locker locker;\n@@ -514,1 +514,1 @@\n-    \/\/fprintf(stderr, \" %9ld:%9ld:%9ld %d:%d:%d\\n\", requested, actual, duration, IS_MALLOC(e), IS_REALLOC(e), IS_FREE(e));\n+    \/\/ fprintf(stderr, \" %9ld:%9ld:%9ld %d:%d:%d\\n\", requested, actual, duration, IS_MALLOC(e), IS_REALLOC(e), IS_FREE(e));\n@@ -559,1 +559,1 @@\n-    MutexLocker ml(NMTRecorder_lock, Mutex::_no_safepoint_check_flag);\n+    NMTRecorder_Locker locker;\n@@ -570,1 +570,1 @@\n-      \/\/fprintf(stderr, \"record %p:%zu:%p\\n\", ptr, requested, old);fflush(stderr);\n+      \/\/ fprintf(stderr, \"record %p:%zu:%p\\n\", ptr, requested, old);fflush(stderr);\n@@ -600,1 +600,0 @@\n-    MutexLocker ml(NMTRecorder_lock, Mutex::_no_safepoint_check_flag);\n@@ -612,1 +611,0 @@\n-    MutexLocker ml(NMTRecorder_lock, Mutex::_no_safepoint_check_flag);\n@@ -652,2 +650,2 @@\n-  \/\/fprintf(stderr, \"> NMT_VirtualMemoryLogRecorder::initialize(%ld, %ld)\\n\", limit, sizeof(Entry));\n-  MutexLocker ml(NMTRecorder_lock, Mutex::_no_safepoint_check_flag);\n+  \/\/ fprintf(stderr, \"> NMT_VirtualMemoryLogRecorder::initialize(%ld, %ld)\\n\", limit, sizeof(Entry));\n+  NMTRecorder_Locker locker;\n@@ -668,1 +666,1 @@\n-  MutexLocker ml(NMTRecorder_lock, Mutex::_no_safepoint_check_flag);\n+  NMTRecorder_Locker locker;\n@@ -673,1 +671,1 @@\n-      \/\/fprintf(stderr, \" log_fd:%d\\n\", log_fd);\n+      \/\/ fprintf(stderr, \" log_fd:%d\\n\", log_fd);\n@@ -690,1 +688,1 @@\n-  \/\/fprintf(stderr, \"NMT_VirtualMemoryLogRecorder::replay(\\\"%s\\\", %d)\\n\", path, pid);\n+  \/\/ fprintf(stderr, \"NMT_VirtualMemoryLogRecorder::replay(%d)\\n\", pid);\n@@ -722,1 +720,1 @@\n-          \/\/fprintf(stderr, \"[record_virtual_memory_reserve(%p, %ld, %p, %hhu)\\n\", e->ptr, e->size, &stack, mem_tag);fflush(stderr);\n+          \/\/ fprintf(stderr, \"[record_virtual_memory_reserve(%p, %ld, %p, %hhu)\\n\", e->ptr, e->size, &stack, mem_tag);fflush(stderr);\n@@ -724,1 +722,1 @@\n-          \/\/fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n@@ -727,1 +725,1 @@\n-          \/\/fprintf(stderr, \"[record_virtual_memory_release(%p, %ld)\\n\", e->ptr, e->size);fflush(stderr);\n+          \/\/ fprintf(stderr, \"[record_virtual_memory_release(%p, %ld)\\n\", e->ptr, e->size);fflush(stderr);\n@@ -729,1 +727,1 @@\n-          \/\/fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n@@ -732,1 +730,1 @@\n-          \/\/fprintf(stderr, \"<record_virtual_memory_uncommit(%p, %ld)\\n\", e->ptr, e->size);fflush(stderr);\n+          \/\/ fprintf(stderr, \"<record_virtual_memory_uncommit(%p, %ld)\\n\", e->ptr, e->size);fflush(stderr);\n@@ -734,1 +732,1 @@\n-          \/\/fprintf(stderr, \">\\n\");fflush(stderr);\n+          \/\/ fprintf(stderr, \">\\n\");fflush(stderr);\n@@ -737,1 +735,1 @@\n-          \/\/fprintf(stderr, \"[MemTracker::record_virtual_memory_reserve_and_commit\\n\");\n+          \/\/ fprintf(stderr, \"[MemTracker::record_virtual_memory_reserve_and_commit\\n\");\n@@ -739,1 +737,1 @@\n-          \/\/fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n@@ -742,1 +740,1 @@\n-          \/\/fprintf(stderr, \"[record_virtual_memory_commit(%p, %ld, %p)\\n\", e->ptr, e->size, &stack);fflush(stderr);\n+          \/\/ fprintf(stderr, \"[record_virtual_memory_commit(%p, %ld, %p)\\n\", e->ptr, e->size, &stack);fflush(stderr);\n@@ -744,1 +742,1 @@\n-          \/\/fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n@@ -747,1 +745,1 @@\n-          \/\/fprintf(stderr, \"[MemTracker::record_virtual_memory_split_reserved\\n\");\n+          \/\/ fprintf(stderr, \"[MemTracker::record_virtual_memory_split_reserved\\n\");\n@@ -749,1 +747,1 @@\n-          \/\/fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n@@ -752,1 +750,1 @@\n-          \/\/fprintf(stderr, \"[record_virtual_memory_type(%p, %ld, %p)\\n\", e->ptr, e->size, &stack);fflush(stderr);\n+          \/\/ fprintf(stderr, \"[record_virtual_memory_type(%p, %ld, %p)\\n\", e->ptr, e->size, &stack);fflush(stderr);\n@@ -754,1 +752,1 @@\n-          \/\/fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n@@ -788,1 +786,0 @@\n-  MutexLocker ml(NMTRecorder_lock, Mutex::_no_safepoint_check_flag);\n@@ -791,0 +788,1 @@\n+    NMTRecorder_Locker locker;\n@@ -815,1 +813,1 @@\n-      \/\/fprintf(stderr, \"recorder->_log_fd: %d\\n\", recorder->_log_fd);\n+      \/\/ fprintf(stderr, \"recorder->_log_fd: %d\\n\", recorder->_log_fd);\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.cpp","additions":39,"deletions":41,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -41,0 +41,17 @@\n+\/\/ see MemTracker::NmtVirtualMemoryLocker\n+class NMTRecorder_Locker: StackObj {\n+  static bool _safe_to_use;\n+  ConditionalMutexLocker _cml;\n+public:\n+  NMTRecorder_Locker(): _cml(NMTRecorder_lock, _safe_to_use, Mutex::_no_safepoint_check_flag) {\n+  }\n+  ~NMTRecorder_Locker() {\n+  }\n+  static inline bool is_safe_to_use() {\n+    return _safe_to_use;\n+  }\n+  static inline void set_safe_to_use() {\n+    _safe_to_use = true;\n+  }\n+};\n+\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.hpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -138,1 +138,0 @@\n-Mutex*   NMTRecorder_lock             = nullptr;\n@@ -154,0 +153,1 @@\n+Mutex*   NMTRecorder_lock             = nullptr;\n@@ -293,1 +293,1 @@\n-  MUTEX_DEFN(NMTRecorder_lock                , PaddedMutex  , nosafepoint);\n+\n@@ -354,0 +354,2 @@\n+  MUTEX_DEFN(NMTRecorder_lock               , PaddedMutex , nosafepoint);\n+\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-extern Mutex*   NMTRecorder_lock;                \/\/ guards NMT recording\n+\n@@ -160,0 +160,1 @@\n+extern Mutex*   NMTRecorder_lock;\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+#include \"nmt\/memLogRecorder.hpp\"\n@@ -560,0 +561,1 @@\n+  NMTRecorder_Locker::set_safe_to_use();\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}