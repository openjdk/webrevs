{"files":[{"patch":"@@ -168,1 +168,1 @@\n-          \/\/ fprintf(stderr, \" got name for thread %6ld:%lx [%s]\\n\", tid, tid, _threads_names[i].name);\n+          \/\/ tty->print(\" got name for thread %6ld:%lx [%s]\\n\", tid, tid, _threads_names[i].name);\n@@ -174,1 +174,1 @@\n-      \/\/ fprintf(stderr, \" added:%6ld:%lx [%6zu]\\n\", tid, tid, _threads_names_size);\n+      \/\/ tty->print(\" added:%6ld:%lx [%6zu]\\n\", tid, tid, _threads_names_size);\n@@ -219,1 +219,1 @@\n-    fprintf(stderr, \"write_and_check(%d) ERROR\\n\", fd);\n+    tty->print(\"write_and_check(%d) ERROR\\n\", fd);\n@@ -226,1 +226,1 @@\n-    fprintf(stderr, \"write_and_check(%d) ERROR:[%s]\\n\", fd, os::strerror(e));\n+    tty->print(\"write_and_check(%d) ERROR:[%s]\\n\", fd, os::strerror(e));\n@@ -233,1 +233,1 @@\n-    fprintf(stderr, \"close_and_check(%d) ERROR\\n\", fd);\n+    tty->print(\"close_and_check(%d) ERROR\\n\", fd);\n@@ -241,1 +241,1 @@\n-      fprintf(stderr, \"ERROR:[%s]\\n\", os::strerror(e));\n+      tty->print(\"ERROR:[%s]\\n\", os::strerror(e));\n@@ -305,1 +305,1 @@\n-  \/\/ fprintf(stderr, \"> NMT_MemoryLogRecorder::initialize(%ld, %ld)\\n\", limit, sizeof(Entry));\n+  \/\/ tty->print(\"> NMT_MemoryLogRecorder::initialize(%ld, %ld)\\n\", limit, sizeof(Entry));\n@@ -322,1 +322,1 @@\n-  \/\/ fprintf(stderr, \"NMT_MemoryLogRecorder::finish() %p\\n\", NMT_MemoryLogRecorder::instance());\n+  \/\/ tty->print(\"NMT_MemoryLogRecorder::finish() %p\\n\", NMT_MemoryLogRecorder::instance());\n@@ -328,1 +328,1 @@\n-    \/\/ fprintf(stderr, \" log_fd:%d\\n\", log_fd);\n+    \/\/ tty->print(\" log_fd:%d\\n\", log_fd);\n@@ -330,1 +330,1 @@\n-    \/\/ fprintf(stderr, \" log_fd:%d\\n\", log_fd);\n+    \/\/ tty->print(\" log_fd:%d\\n\", log_fd);\n@@ -333,1 +333,1 @@\n-    \/\/ fprintf(stderr, \" threads_fd:%d\\n\", threads_fd);\n+    \/\/ tty->print(\" threads_fd:%d\\n\", threads_fd);\n@@ -337,1 +337,1 @@\n-      \/\/ fprintf(stderr, \" threads_fd:%d\\n\", threads_fd);\n+      \/\/ tty->print(\" threads_fd:%d\\n\", threads_fd);\n@@ -341,1 +341,1 @@\n-    \/\/ fprintf(stderr, \" info_fd:%d\\n\", info_fd);\n+    \/\/ tty->print(\" info_fd:%d\\n\", info_fd);\n@@ -348,1 +348,1 @@\n-      \/\/ fprintf(stderr, \" info_fd:%d\\n\", info_fd);\n+      \/\/ tty->print(\" info_fd:%d\\n\", info_fd);\n@@ -357,1 +357,1 @@\n-  \/\/ fprintf(stderr, \"NMT_MemoryLogRecorder::replay(%d)\\n\", pid);\n+  \/\/ tty->print(\"NMT_MemoryLogRecorder::replay(%d)\\n\", pid);\n@@ -448,1 +448,1 @@\n-            fprintf(stderr, \"REALLOC?\\n\");\n+            tty->print(\"REALLOC?\\n\");\n@@ -463,1 +463,1 @@\n-            fprintf(stderr, \"MALLOC?\\n\");\n+            tty->print(\"MALLOC?\\n\");\n@@ -487,1 +487,1 @@\n-          fprintf(stderr, \"FREE?\\n\");\n+          tty->print(\"FREE?\\n\");\n@@ -490,1 +490,1 @@\n-        fprintf(stderr, \"HUH?\\n\");\n+        tty->print(\"HUH?\\n\");\n@@ -514,1 +514,1 @@\n-    \/\/ fprintf(stderr, \" %9ld:%9ld:%9ld %d:%d:%d\\n\", requested, actual, duration, IS_MALLOC(e), IS_REALLOC(e), IS_FREE(e));\n+    \/\/ tty->print(\" %9ld:%9ld:%9ld %d:%d:%d\\n\", requested, actual, duration, IS_MALLOC(e), IS_REALLOC(e), IS_FREE(e));\n@@ -526,2 +526,2 @@\n-  fprintf(stderr, \"\\n\\n\\nmalloc summary [recorded NMT mode \\\"%s\\\"]:\\n\\n\", NMTUtil::tracking_level_to_string(recorded_nmt_level));\n-  fprintf(stderr, \"time:\" LD_FORMAT \"[ns]\\n\", nanoseconds);\n+  tty->print(\"\\n\\n\\nmalloc summary [recorded NMT mode \\\"%s\\\"]:\\n\\n\", NMTUtil::tracking_level_to_string(recorded_nmt_level));\n+  tty->print(\"time:\" LD_FORMAT \"[ns]\\n\", nanoseconds);\n@@ -530,5 +530,5 @@\n-    fprintf(stderr, \"[samples:\" LD_FORMAT \"] [NMT headers:\" LD_FORMAT \"]\\n\", count, headers);\n-    fprintf(stderr, \"[malloc#:\" LD_FORMAT \"] [realloc#:\" LD_FORMAT \"] [free#:\" LD_FORMAT \"]\\n\", countMalloc, countRealloc, countFree);\n-    fprintf(stderr, \"memory requested:\" LD_FORMAT \" bytes, allocated:\" LD_FORMAT \" bytes\\n\", requestedTotal, actualTotal);\n-    fprintf(stderr, \"malloc overhead:\" LD_FORMAT \" bytes [%2.2f%%], NMT headers overhead:\" LD_FORMAT \" bytes [%2.2f%%]\\n\", overhead_malloc, overheadPercentage_malloc, overhead_NMT, overheadPercentage_NMT);\n-    fprintf(stderr, \"\\n\");\n+    tty->print(\"[samples:\" LD_FORMAT \"] [NMT headers:\" LD_FORMAT \"]\\n\", count, headers);\n+    tty->print(\"[malloc#:\" LD_FORMAT \"] [realloc#:\" LD_FORMAT \"] [free#:\" LD_FORMAT \"]\\n\", countMalloc, countRealloc, countFree);\n+    tty->print(\"memory requested:\" LD_FORMAT \" bytes, allocated:\" LD_FORMAT \" bytes\\n\", requestedTotal, actualTotal);\n+    tty->print(\"malloc overhead:\" LD_FORMAT \" bytes [%2.2f%%], NMT headers overhead:\" LD_FORMAT \" bytes [%2.2f%%]\\n\", overhead_malloc, overheadPercentage_malloc, overhead_NMT, overheadPercentage_NMT);\n+    tty->print(\"\\n\");\n@@ -570,1 +570,1 @@\n-      \/\/ fprintf(stderr, \"record %p:%zu:%p\\n\", ptr, requested, old);fflush(stderr);\n+      \/\/ tty->print(\"record %p:%zu:%p\\n\", ptr, requested, old);fflush(stderr);\n@@ -608,1 +608,1 @@\n-void NMT_MemoryLogRecorder::record_malloc(MemTag mem_tag, size_t requested, void* ptr, const NativeCallStack *stack, void* old) {\n+void NMT_MemoryLogRecorder::record_alloc(MemTag mem_tag, size_t requested, void* ptr, const NativeCallStack *stack, void* old) {\n@@ -611,1 +611,1 @@\n-    address resolved_ptr = (address)old;\n+    address old_resolved_ptr = (address)old;\n@@ -614,1 +614,1 @@\n-        resolved_ptr = (address)old - NMT_HEADER_SIZE;\n+        old_resolved_ptr = (address)old - NMT_HEADER_SIZE;\n@@ -617,1 +617,1 @@\n-    NMT_MemoryLogRecorder::_record(mem_tag, requested, (address)ptr, resolved_ptr, stack);\n+    NMT_MemoryLogRecorder::_record(mem_tag, requested, (address)ptr, old_resolved_ptr, stack);\n@@ -623,1 +623,1 @@\n-    fprintf(stderr, \"nullptr\\n\");\n+    tty->print(\"nullptr\\n\");\n@@ -626,1 +626,1 @@\n-      fprintf(stderr, \"           FREE: \");\n+      tty->print(\"           FREE: \");\n@@ -628,1 +628,1 @@\n-      fprintf(stderr, \"        REALLOC: \");\n+      tty->print(\"        REALLOC: \");\n@@ -630,1 +630,1 @@\n-      fprintf(stderr, \"         MALLOC: \");\n+      tty->print(\"         MALLOC: \");\n@@ -632,1 +632,1 @@\n-    fprintf(stderr, \"time:%15ld, thread:%6ld, ptr:%14p, old:%14p, requested:%8ld, actual:%8ld, mem_tag:%s\\n\", e->time, e->thread, e->ptr, e->old, e->requested, e->actual, NMTUtil::tag_to_name(NMTUtil::index_to_tag((int)e->mem_tag)));\n+    tty->print(\"time:%15ld, thread:%6ld, ptr:%14p, old:%14p, requested:%8ld, actual:%8ld, mem_tag:%s\\n\", e->time, e->thread, e->ptr, e->old, e->requested, e->actual, NMTUtil::tag_to_name(NMTUtil::index_to_tag((int)e->mem_tag)));\n@@ -650,1 +650,1 @@\n-  \/\/ fprintf(stderr, \"> NMT_VirtualMemoryLogRecorder::initialize(%ld, %ld)\\n\", limit, sizeof(Entry));\n+  \/\/ tty->print(\"> NMT_VirtualMemoryLogRecorder::initialize(%ld, %ld)\\n\", limit, sizeof(Entry));\n@@ -671,1 +671,1 @@\n-      \/\/ fprintf(stderr, \" log_fd:%d\\n\", log_fd);\n+      \/\/ tty->print(\" log_fd:%d\\n\", log_fd);\n@@ -688,1 +688,1 @@\n-  \/\/ fprintf(stderr, \"NMT_VirtualMemoryLogRecorder::replay(%d)\\n\", pid);\n+  \/\/ tty->print(\"NMT_VirtualMemoryLogRecorder::replay(%d)\\n\", pid);\n@@ -720,1 +720,1 @@\n-          \/\/ fprintf(stderr, \"[record_virtual_memory_reserve(%p, %ld, %p, %hhu)\\n\", e->ptr, e->size, &stack, mem_tag);fflush(stderr);\n+          \/\/ tty->print(\"[record_virtual_memory_reserve(%p, %ld, %p, %hhu)\\n\", e->ptr, e->size, &stack, mem_tag);fflush(stderr);\n@@ -722,1 +722,1 @@\n-          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ tty->print(\"]\\n\");fflush(stderr);\n@@ -725,1 +725,1 @@\n-          \/\/ fprintf(stderr, \"[record_virtual_memory_release(%p, %ld)\\n\", e->ptr, e->size);fflush(stderr);\n+          \/\/ tty->print(\"[record_virtual_memory_release(%p, %ld)\\n\", e->ptr, e->size);fflush(stderr);\n@@ -727,1 +727,1 @@\n-          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ tty->print(\"]\\n\");fflush(stderr);\n@@ -730,1 +730,1 @@\n-          \/\/ fprintf(stderr, \"<record_virtual_memory_uncommit(%p, %ld)\\n\", e->ptr, e->size);fflush(stderr);\n+          \/\/ tty->print(\"<record_virtual_memory_uncommit(%p, %ld)\\n\", e->ptr, e->size);fflush(stderr);\n@@ -732,1 +732,1 @@\n-          \/\/ fprintf(stderr, \">\\n\");fflush(stderr);\n+          \/\/ tty->print(\">\\n\");fflush(stderr);\n@@ -735,1 +735,1 @@\n-          \/\/ fprintf(stderr, \"[MemTracker::record_virtual_memory_reserve_and_commit\\n\");\n+          \/\/ tty->print(\"[MemTracker::record_virtual_memory_reserve_and_commit\\n\");\n@@ -737,1 +737,1 @@\n-          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ tty->print(\"]\\n\");fflush(stderr);\n@@ -740,1 +740,1 @@\n-          \/\/ fprintf(stderr, \"[record_virtual_memory_commit(%p, %ld, %p)\\n\", e->ptr, e->size, &stack);fflush(stderr);\n+          \/\/ tty->print(\"[record_virtual_memory_commit(%p, %ld, %p)\\n\", e->ptr, e->size, &stack);fflush(stderr);\n@@ -742,1 +742,1 @@\n-          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ tty->print(\"]\\n\");fflush(stderr);\n@@ -745,1 +745,1 @@\n-          \/\/ fprintf(stderr, \"[MemTracker::record_virtual_memory_split_reserved\\n\");\n+          \/\/ tty->print(\"[MemTracker::record_virtual_memory_split_reserved\\n\");\n@@ -747,1 +747,1 @@\n-          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ tty->print(\"]\\n\");fflush(stderr);\n@@ -750,1 +750,1 @@\n-          \/\/ fprintf(stderr, \"[record_virtual_memory_type(%p, %ld, %p)\\n\", e->ptr, e->size, &stack);fflush(stderr);\n+          \/\/ tty->print(\"[record_virtual_memory_type(%p, %ld, %p)\\n\", e->ptr, e->size, &stack);fflush(stderr);\n@@ -752,1 +752,1 @@\n-          \/\/ fprintf(stderr, \"]\\n\");fflush(stderr);\n+          \/\/ tty->print(\"]\\n\");fflush(stderr);\n@@ -755,1 +755,1 @@\n-          fprintf(stderr, \"HUH?\\n\");\n+          tty->print(\"HUH?\\n\");\n@@ -764,13 +764,3 @@\n-  fprintf(stderr, \"\\n\\n\\nVirtualMemoryTracker summary:\\n\\n\\n\");\n-  fprintf(stderr, \"time:\" LD_FORMAT \"[ns] [samples:\" LD_FORMAT \"]\\n\", total, count);\n-\/\/    if (count > 0) {\n-\/\/      nullStream bench_null;\n-\/\/      total = 0;\n-\/\/      for (off_t l = 0; l < 1; l++) {\n-\/\/        long int start = os::javaTimeNanos();\n-\/\/        VirtualMemoryTracker::Instance::print_self(tty);\n-\/\/        long int end = os::javaTimeNanos();\n-\/\/        long int duration = (start > 0) ? (end - start) : 0;\n-\/\/        total += duration;\n-\/\/      }\n-\/\/    }\n+  tty->print(\"\\n\\n\\nVirtualMemoryTracker summary:\\n\\n\\n\");\n+  tty->print(\"time:\" LD_FORMAT \"[ns] [samples:\" LD_FORMAT \"]\\n\", total, count);\n+\n@@ -784,2 +774,2 @@\n-\/\/  fprintf(stderr, \"NMT_VirtualMemoryLogRecorder::record (%s, %hhu, %hhu, %ld, %ld, %p, %p)\\n\",\n-\/\/          type_to_name(type), mem_tag, mem_tag_split, size, size_split, ptr, stack);fflush(stderr);\n+\/\/  tty->print(\"NMT_VirtualMemoryLogRecorder::record (%d, %hhu, %hhu, %ld, %ld, %p, %p)\\n\",\n+\/\/          type, mem_tag, mem_tag_split, size, size_split, ptr, stack);fflush(stderr);\n@@ -813,1 +803,1 @@\n-      \/\/ fprintf(stderr, \"recorder->_log_fd: %d\\n\", recorder->_log_fd);\n+      \/\/ tty->print(\"recorder->_log_fd: %d\\n\", recorder->_log_fd);\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.cpp","additions":61,"deletions":71,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-  static void record_malloc(MemTag mem_tag, size_t requested, void* ptr, const NativeCallStack *stack, void* old = nullptr);\n+  static void record_alloc(MemTag mem_tag, size_t requested, void* ptr, const NativeCallStack *stack, void* old = nullptr);\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-    NMT_MemoryLogRecorder::record_malloc(mem_tag, size, mem_base, &stack, old_base);\n+    NMT_MemoryLogRecorder::record_alloc(mem_tag, size, mem_base, &stack, old_base);\n","filename":"src\/hotspot\/share\/nmt\/memTracker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}