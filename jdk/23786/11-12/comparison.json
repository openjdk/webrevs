{"files":[{"patch":"@@ -148,1 +148,8 @@\n-    pthread_getname_np(pthread_self(), buf, MAXTHREADNAMESIZE);\n+    fprintf(stderr, \"\\n\\nThread: %p:%p\\n\", pthread_self(), Thread::current());\n+    int err = pthread_getname_np(pthread_self(), buf, MAXTHREADNAMESIZE);\n+    fprintf(stderr, \"pthread_getname_np: %d:%zu:%s\\n\", err, strlen(buf), strlen(buf)>0 ? buf:\"N\/A\");\n+    if (Thread::current() != nullptr) {\n+      fprintf(stderr, \"Thread::current()->name(): %s\\n\", Thread::current()->name());\n+    } else {\n+      fprintf(stderr, \"Thread::current()->name(): N\/A\\n\");\n+    }\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-  static void record_malloc(MemTag mem_tag, size_t requested, void* ptr, const NativeCallStack *stack, void* old = nullptr) { \/\/ TODO\n+  static void recordmalloc(MemTag mem_tag, size_t requested, void* ptr, const NativeCallStack *stack, void* old = nullptr) { \/\/ TODO\n","filename":"src\/hotspot\/share\/nmt\/memLogRecorder.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}