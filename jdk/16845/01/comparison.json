{"files":[{"patch":"@@ -188,2 +188,7 @@\n-  const uint nthreads = 4;\n-  const uint milliseconds_to_run = 1000;\n+\n+  \/\/ deallocation is slower than allocation, so lets create\n+  \/\/ more deallocation threads to prevent too large buildup of\n+  \/\/ free nodes (footprint)\n+  constexpr uint num_allocator_threads = 4;\n+  constexpr uint num_processor_threads = 6;\n+  constexpr uint milliseconds_to_run = 1000;\n@@ -196,2 +201,2 @@\n-  ProcessorThread* proc_threads[nthreads] = {};\n-  for (uint i = 0; i < nthreads; ++i) {\n+  ProcessorThread* proc_threads[num_processor_threads] = {};\n+  for (uint i = 0; i < num_processor_threads; ++i) {\n@@ -205,2 +210,2 @@\n-  AllocatorThread* alloc_threads[nthreads] = {};\n-  for (uint i = 0; i < nthreads; ++i) {\n+  AllocatorThread* alloc_threads[num_allocator_threads] = {};\n+  for (uint i = 0; i < num_allocator_threads; ++i) {\n@@ -222,1 +227,1 @@\n-  for (uint i = 0; i < nthreads; ++i) {\n+  for (uint i = 0; i < num_allocator_threads; ++i) {\n@@ -227,1 +232,1 @@\n-  for (uint i = 0; i < nthreads; ++i) {\n+  for (uint i = 0; i < num_processor_threads; ++i) {\n@@ -237,1 +242,1 @@\n-  const size_t buffer_capacity = 1024;\n+  const size_t buffer_capacity = DEFAULT_CACHE_LINE_SIZE \/ sizeof(void*);\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_bufferNodeAllocator.cpp","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"}]}