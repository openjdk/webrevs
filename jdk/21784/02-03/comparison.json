{"files":[{"patch":"@@ -3493,7 +3493,1 @@\n-          ciKlass* klass = t->is_klassptr()->exact_klass();\n-          if (klass->is_interface() || klass->is_abstract()) {\n-            \/\/ CmpPNode::Ideal should always fold such comparisons\n-            assert(false, \"Interface or abstract class pointers should not be compressed\");\n-          } else {\n-            new_in2 = ConNode::make(t->make_narrowklass());\n-          }\n+          new_in2 = ConNode::make(t->make_narrowklass());\n@@ -3791,0 +3785,8 @@\n+#ifdef ASSERT\n+  case Op_ConNKlass: {\n+    const TypePtr* tp = n->as_Type()->type()->make_ptr();\n+    ciKlass* klass = tp->is_klassptr()->exact_klass();\n+    assert(!klass->is_interface() && !klass->is_abstract(), \"Interface or abstract class pointers should not be compressed\");\n+    break;\n+  }\n+#endif\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"}]}