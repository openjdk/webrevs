{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.net.InetAddress;\n@@ -35,15 +34,2 @@\n-    String standardListenSpec() {\n-        String loopback = InetAddress.getLoopbackAddress().getHostAddress();\n-        return \"jdi:hostname(\" + loopback + \")\";\n-    }\n-\n-    String standardLaunchSpec() {\n-        return \"jdi:launch(true)\";\n-    }\n-\n-    String standardJdiSpec() {\n-        return \"jdi\";\n-    }\n-\n-    String standardSpecs() {\n-        return \"5(\" + standardListenSpec() + \"), 6(\" + standardLaunchSpec() + \"), 7(\" + standardJdiSpec() + \")\";\n+    String alwaysPassingSpec() {\n+        return \"5(local)\";\n","filename":"test\/langtools\/jdk\/jshell\/ExecutionControlTestBase.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -132,3 +132,1 @@\n-        pm.put(\"2\", standardListenSpec());\n-        pm.put(\"3\", standardLaunchSpec());\n-        pm.put(\"4\", standardJdiSpec());\n+        pm.put(\"2\", \"local\");\n@@ -162,3 +160,1 @@\n-                log.contains(\"Success failover -- 2 = \" + standardListenSpec())\n-                || log.contains(\"Success failover -- 3 = \" + standardLaunchSpec())\n-                || log.contains(\"Success failover -- 4 = \" + standardJdiSpec()),\n+                log.contains(\"Success failover -- 2 = local\"),\n","filename":"test\/langtools\/jdk\/jshell\/FailOverDirectExecutionControlTest.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-                    + standardSpecs()));\n+                    + alwaysPassingSpec()));\n","filename":"test\/langtools\/jdk\/jshell\/FailOverExecutionControlDyingLaunchTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-                        + standardSpecs()));\n+                        + alwaysPassingSpec()));\n","filename":"test\/langtools\/jdk\/jshell\/FailOverExecutionControlHangingLaunchTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-                        + standardSpecs()));\n+                        + alwaysPassingSpec()));\n","filename":"test\/langtools\/jdk\/jshell\/FailOverExecutionControlHangingListenTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-                + standardSpecs()));\n+                + alwaysPassingSpec()));\n","filename":"test\/langtools\/jdk\/jshell\/FailOverExecutionControlTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}