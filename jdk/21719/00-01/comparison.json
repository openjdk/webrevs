{"files":[{"patch":"@@ -1282,1 +1282,6 @@\n-        ServiceKey key = new ServiceKey(type, algorithm, false);\n+        \/\/ avoid allocating a new ServiceKey object if possible\n+        ServiceKey key = previousKey;\n+        if (!key.matches(type, algorithm)) {\n+            key = new ServiceKey(type, algorithm, false);\n+            previousKey = key;\n+        }\n@@ -1303,0 +1308,9 @@\n+    \/\/ ServiceKey from previous getService() call\n+    \/\/ by re-using it if possible we avoid allocating a new object\n+    \/\/ and the toUpperCase() call.\n+    \/\/ re-use will occur e.g. as the framework traverses the provider\n+    \/\/ list and queries each provider with the same values until it finds\n+    \/\/ a matching service\n+    private transient ServiceKey previousKey =\n+                                            new ServiceKey(\"\", \"\", false);\n+\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"}]}