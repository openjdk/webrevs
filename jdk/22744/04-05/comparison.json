{"files":[{"patch":"@@ -3097,0 +3097,1 @@\n+        The specified thread must be suspended or must be the current thread.\n","filename":"src\/hotspot\/share\/prims\/jvmti.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -76,4 +76,1 @@\n-  for (int idx = _pops->length() - 1; idx >= 0; idx--) {\n-    _pops->remove_at(idx);\n-  }\n-  assert(_pops->length() == 0, \"sanity check\");\n+  _pops->clear();\n@@ -222,4 +219,1 @@\n-#ifdef ASSERT\n-  Thread *current = Thread::current();\n-#endif\n-  assert(get_thread() == nullptr || get_thread()->is_handshake_safe_for(current),\n+  assert(get_thread() == nullptr || get_thread()->is_handshake_safe_for(Thread::current()),\n@@ -240,4 +234,1 @@\n-#ifdef ASSERT\n-  Thread *current = Thread::current();\n-#endif\n-  assert(get_thread() == nullptr || get_thread()->is_handshake_safe_for(current),\n+  assert(get_thread() == nullptr || get_thread()->is_handshake_safe_for(Thread::current()),\n@@ -258,4 +249,1 @@\n-#ifdef ASSERT\n-  Thread *current = Thread::current();\n-#endif\n-  assert(get_thread() == nullptr || get_thread()->is_handshake_safe_for(current),\n+  assert(get_thread() == nullptr || get_thread()->is_handshake_safe_for(Thread::current()),\n@@ -267,4 +255,1 @@\n-#ifdef ASSERT\n-  Thread *current = Thread::current();\n-#endif\n-  assert(get_thread() == nullptr || get_thread()->is_handshake_safe_for(current),\n+  assert(get_thread() == nullptr || get_thread()->is_handshake_safe_for(Thread::current()),\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvThreadState.cpp","additions":5,"deletions":20,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -44,3 +44,3 @@\n-  jvmtiThreadInfo inf = get_thread_info(jvmti, jni, thr);\n-  bool result = strncmp(inf.name, TEST_THREAD_NAME_BASE, strlen(TEST_THREAD_NAME_BASE)) == 0;\n-  deallocate(jvmti, jni, inf.name);\n+  char* tname = get_thread_name(jvmti, jni, thr);\n+  bool result = strncmp(tname, TEST_THREAD_NAME_BASE, strlen(TEST_THREAD_NAME_BASE)) == 0;\n+  deallocate(jvmti, jni, tname);\n@@ -55,1 +55,1 @@\n-  jvmtiThreadInfo inf = get_thread_info(jvmti, jni, thr);\n+  char* tname = get_thread_name(jvmti, jni, thr);\n@@ -61,1 +61,1 @@\n-  LOG(\" %s: %s.%s%s, depth = %d\\n\", inf.name, csig, mname, msig, depth);\n+  LOG(\" %s: %s.%s%s, depth = %d\\n\", tname, csig, mname, msig, depth);\n@@ -63,1 +63,1 @@\n-  deallocate(jvmti, jni, inf.name);\n+  deallocate(jvmti, jni, tname);\n@@ -81,1 +81,0 @@\n-  jvmtiThreadInfo inf = get_thread_info(jvmti, jni, thr);\n@@ -133,5 +132,0 @@\n-  err = jvmti->GetCapabilities(&caps);\n-  if (err != JVMTI_ERROR_NONE) {\n-    LOG(\"(GetCapabilities) unexpected error: %s (%d)\\n\", TranslateError(err), err);\n-    return JNI_ERR;\n-  }\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FramePop\/ClearAllFramePops\/libClearAllFramePops.cpp","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"}]}