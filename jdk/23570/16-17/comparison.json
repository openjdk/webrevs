{"files":[{"patch":"@@ -266,2 +266,2 @@\n-        \/\/ the default VectorRearrange + VectorBlend is generated as the performance of the default\n-        \/\/ implementation was slightly better\/similar than the implementation for SelectFromTwoVector.\n+        \/\/ the default VectorRearrange + VectorBlend is generated because the performance of the default\n+        \/\/ implementation was better than or equal to the implementation for SelectFromTwoVector.\n@@ -273,2 +273,5 @@\n-        \/\/ using masks, we currently disable this operation on machines where length_in_bytes <\n-        \/\/ MaxVectorSize on that machine with the only exception of 8B vector length.\n+        \/\/ using masks, we disable this operation on machines where length_in_bytes < MaxVectorSize\n+        \/\/ on that machine with the only exception of 8B vector length. This is because at the time of\n+        \/\/ writing this, there is no SVE2 machine available with length_in_bytes > 8 and\n+        \/\/ length_in_bytes < MaxVectorSize to test this operation on (for example - there isn't an\n+        \/\/ SVE2 machine available with MaxVectorSize = 32 to test a case with length_in_bytes = 16).\n@@ -7203,1 +7206,0 @@\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -256,2 +256,2 @@\n-        \/\/ the default VectorRearrange + VectorBlend is generated as the performance of the default\n-        \/\/ implementation was slightly better\/similar than the implementation for SelectFromTwoVector.\n+        \/\/ the default VectorRearrange + VectorBlend is generated because the performance of the default\n+        \/\/ implementation was better than or equal to the implementation for SelectFromTwoVector.\n@@ -263,2 +263,5 @@\n-        \/\/ using masks, we currently disable this operation on machines where length_in_bytes <\n-        \/\/ MaxVectorSize on that machine with the only exception of 8B vector length.\n+        \/\/ using masks, we disable this operation on machines where length_in_bytes < MaxVectorSize\n+        \/\/ on that machine with the only exception of 8B vector length. This is because at the time of\n+        \/\/ writing this, there is no SVE2 machine available with length_in_bytes > 8 and\n+        \/\/ length_in_bytes < MaxVectorSize to test this operation on (for example - there isn't an\n+        \/\/ SVE2 machine available with MaxVectorSize = 32 to test a case with length_in_bytes = 16).\n@@ -5203,1 +5206,0 @@\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}