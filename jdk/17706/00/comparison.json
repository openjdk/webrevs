{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -5477,0 +5477,26 @@\n+  \/\/ r0 = input (float16)\n+  \/\/ v0 = result (float)\n+  \/\/ v1 = temporary float register\n+  address generate_float16ToFloat() {\n+    __ align(CodeEntryAlignment);\n+    StubCodeMark mark(this, \"StubRoutines\", \"float16ToFloat\");\n+    address entry = __ pc();\n+    BLOCK_COMMENT(\"Entry:\");\n+    __ flt16_to_flt(v0, r0, v1);\n+    __ ret(lr);\n+    return entry;\n+  }\n+\n+  \/\/ v0 = input (float)\n+  \/\/ r0 = result (float16)\n+  \/\/ v1 = temporary float register\n+  address generate_floatToFloat16() {\n+    __ align(CodeEntryAlignment);\n+    StubCodeMark mark(this, \"StubRoutines\", \"floatToFloat16\");\n+    address entry = __ pc();\n+    BLOCK_COMMENT(\"Entry:\");\n+    __ flt_to_flt16(r0, v0, v1);\n+    __ ret(lr);\n+    return entry;\n+  }\n+\n@@ -8330,0 +8356,6 @@\n+\n+    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_float16ToFloat) &&\n+        vmIntrinsics::is_intrinsic_available(vmIntrinsics::_floatToFloat16)) {\n+      StubRoutines::_hf2f = generate_float16ToFloat();\n+      StubRoutines::_f2hf = generate_floatToFloat16();\n+    }\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"}]}