[{"commit":{"message":"8324724: Add Stub routines for FP16 conversions on aarch64\n\nThis commit - https:\/\/github.com\/openjdk\/jdk\/commit\/8cfd74f76afc9e5d50c52104fef9974784718dd4\nadds stub routines for FP16 conversions for float\/float16\nconstants on x86 to get an accurate compile time value of the nodes.\nThis task adds similar stub routines for aarch64 as well.\n\nWith this patch, if the inputs to the conversion functions are\nconstants, the stub routines are executed to determine the compile time\nvalues of the ConvHF2F\/ConvF2HF nodes (in their respective Value()\nfunctions) and the ConvHF2F\/ConvF2HF nodes are replaced with ConI\/ConF\nnodes. This might help in further compiler optimizations like constant\nfolding.\n\nThe following testcase was used to test the disassembly -\n\npublic class FloatConv {\n\n    private static final short sconst;\n    private static final float fconst;\n\n    static {\n        sconst = Short.MAX_VALUE;\n        fconst = Float.MIN_VALUE;\n    }\n\n    @Benchmark\n    public float hf2f() {\n        return Float.float16ToFloat(sconst);\n    }\n\n    @Benchmark\n    public short f2hf() {\n        return Float.floatToFloat16(fconst);\n    }\n}\n\nDisassembly without patch :\n\nFloatConv.f2hf() :-\n...\nldr   s17, 0x0000ffff918cec80\nfcvt  h16, s17\nsmov  x0, v16.h[0]\n...\nret\n\nFloatConv.hf2f() :-\n...\norr   w11, wzr, #0x7fff\nmov   v16.h[0], w11\nfcvt  s0, h16\n...\nret\n\nDisassembly with patch :\n\nFloatConv.hf2f() :-\n...\nldr   s0, 0x0000ffffb58ce880\n...\nret\n\nFloatConv.f2hf() :-\n...\nmov   w0, wzr\n...\nret\n\nWith this patch, the conversion computation is done well in advance and\nthe ConvHF2F\/ConvF2HF nodes are replaced with the ConI\/ConF nodes and\nthus the constant values are just loaded into registers and returned.\n\nThe tests in - \"hotspot\/jtreg\/compiler\/intrinsics\/float16\" pass on both\naarch64 and x86."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp"}],"sha":"fd73a80c586e5192e8b0f0ba884fbfcd614b6fda"}]