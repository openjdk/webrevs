{"files":[{"patch":"@@ -56,2 +56,0 @@\n-    native static int waitsToEnter();\n-    native static int waitsToBeNotified();\n@@ -59,0 +57,2 @@\n+    native static void ensureBlockedOnEnter(Thread thread);\n+    native static void ensureWaitsToBeNotified(Thread thread);\n@@ -90,4 +90,3 @@\n-            threads[i] = startTask(i, new WaitingTask(), isVirtual, \"Waiting\");\n-        }\n-        while (waitsToBeNotified() < NUMBER_OF_WAITING_THREADS) {\n-            sleep(1);\n+            Thread thread = startTask(i, new WaitingTask(), isVirtual, \"Waiting\");\n+            ensureWaitsToBeNotified(thread);\n+            threads[i] = thread;\n@@ -102,4 +101,3 @@\n-            threads[i] = startTask(i, new EnteringTask(), isVirtual, \"Entering\");\n-        }\n-        while (waitsToEnter() < NUMBER_OF_ENTERING_THREADS) {\n-            sleep(1);\n+            Thread thread = startTask(i, new EnteringTask(), isVirtual, \"Entering\");\n+            ensureBlockedOnEnter(thread);\n+            threads[i] = thread;\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/ObjectMonitorUsage\/ObjectMonitorUsage.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-static jrawMonitorID event_lock = nullptr;\n@@ -38,2 +37,0 @@\n-static int waits_to_enter = 0;\n-static int waits_to_be_notified = 0;\n@@ -56,36 +53,0 @@\n-JNIEXPORT void JNICALL\n-MonitorContendedEnter(jvmtiEnv *jvmti, JNIEnv *jni, jthread thread, jobject monitor) {\n-  RawMonitorLocker rml(jvmti, jni, event_lock);\n-  if (is_tested_monitor(jni, monitor)) {\n-    waits_to_enter++;\n-    log_event(jvmti, jni, thread, \"MonitorContendedEnter\", waits_to_enter);\n-  }\n-}\n-\n-JNIEXPORT void JNICALL\n-MonitorContendedEntered(jvmtiEnv *jvmti, JNIEnv *jni, jthread thread, jobject monitor) {\n-  RawMonitorLocker rml(jvmti, jni, event_lock);\n-  if (is_tested_monitor(jni, monitor)) {\n-    waits_to_enter--;\n-    log_event(jvmti, jni, thread, \"MonitorContendedEntered\", waits_to_enter);\n-  }\n-}\n-\n-JNIEXPORT void JNICALL\n-MonitorWait(jvmtiEnv *jvmti, JNIEnv *jni, jthread thread, jobject monitor, jlong timeout) {\n-  RawMonitorLocker rml(jvmti, jni, event_lock);\n-  if (is_tested_monitor(jni, monitor)) {\n-    waits_to_be_notified++;\n-    log_event(jvmti, jni, thread, \"MonitorWait\", waits_to_be_notified);\n-  }\n-}\n-\n-JNIEXPORT void JNICALL\n-MonitorWaited(jvmtiEnv *jvmti, JNIEnv *jni, jthread thread, jobject monitor, jboolean timed_out) {\n-  RawMonitorLocker rml(jvmti, jni, event_lock);\n-  if (is_tested_monitor(jni, monitor)) {\n-    waits_to_be_notified--;\n-    log_event(jvmti, jni, thread, \"MonitorWaited\", waits_to_be_notified);\n-  }\n-}\n-\n@@ -96,1 +57,0 @@\n-  jvmtiEventCallbacks callbacks;\n@@ -119,11 +79,0 @@\n-  memset(&callbacks, 0, sizeof(callbacks));\n-  callbacks.MonitorContendedEnter   = &MonitorContendedEnter;\n-  callbacks.MonitorContendedEntered = &MonitorContendedEntered;\n-  callbacks.MonitorWait = &MonitorWait;\n-  callbacks.MonitorWaited = &MonitorWaited;\n-\n-  err = jvmti->SetEventCallbacks(&callbacks, sizeof(jvmtiEventCallbacks));\n-  check_jvmti_error(err, \"Agent_Initialize: error in JVMTI SetEventCallbacks\");\n-\n-  event_lock = create_raw_monitor(jvmti, \"Events Monitor\");\n-\n@@ -219,5 +168,0 @@\n-  jvmtiError err;\n-  jvmtiEventMode event_mode = (monitor != nullptr) ? JVMTI_ENABLE : JVMTI_DISABLE;\n-\n-  RawMonitorLocker rml(jvmti, jni, event_lock);\n-\n@@ -228,14 +172,0 @@\n-  waits_to_enter = 0;\n-  waits_to_be_notified = 0;\n-\n-  err = jvmti->SetEventNotificationMode(event_mode, JVMTI_EVENT_MONITOR_CONTENDED_ENTER, nullptr);\n-  check_jvmti_status(jni, err, \"setTestedMonitor: error in JVMTI SetEventNotificationMode #1\");\n-\n-  err = jvmti->SetEventNotificationMode(event_mode, JVMTI_EVENT_MONITOR_CONTENDED_ENTERED, nullptr);\n-  check_jvmti_status(jni, err, \"setTestedMonitor: error in JVMTI SetEventNotificationMode #2\");\n-\n-  err = jvmti->SetEventNotificationMode(event_mode, JVMTI_EVENT_MONITOR_WAIT, nullptr);\n-  check_jvmti_status(jni, err, \"setTestedMonitor: error in JVMTI SetEventNotificationMode #3\");\n-\n-  err = jvmti->SetEventNotificationMode(event_mode, JVMTI_EVENT_MONITOR_WAITED, nullptr);\n-  check_jvmti_status(jni, err, \"setTestedMonitor: error in JVMTI SetEventNotificationMode #4\");\n@@ -244,4 +174,3 @@\n-JNIEXPORT jint JNICALL\n-Java_ObjectMonitorUsage_waitsToEnter(JNIEnv *jni, jclass cls) {\n-  RawMonitorLocker rml(jvmti, jni, event_lock);\n-  return waits_to_enter;\n+JNIEXPORT void JNICALL\n+Java_ObjectMonitorUsage_ensureBlockedOnEnter(JNIEnv *jni, jclass cls, jthread thread) {\n+  wait_for_state(jvmti, jni, thread, JVMTI_THREAD_STATE_BLOCKED_ON_MONITOR_ENTER);\n@@ -250,4 +179,3 @@\n-JNIEXPORT jint JNICALL\n-Java_ObjectMonitorUsage_waitsToBeNotified(JNIEnv *jni, jclass cls) {\n-  RawMonitorLocker rml(jvmti, jni, event_lock);\n-  return waits_to_be_notified;\n+JNIEXPORT void JNICALL\n+Java_ObjectMonitorUsage_ensureWaitsToBeNotified(JNIEnv *jni, jclass cls, jthread thread) {\n+  wait_for_state(jvmti, jni, thread, JVMTI_THREAD_STATE_WAITING_INDEFINITELY);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/ObjectMonitorUsage\/libObjectMonitorUsage.cpp","additions":6,"deletions":78,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -219,5 +219,1 @@\n-#ifdef WINDOWS\n-  Sleep(1000);\n-#else\n-  sleep(1);\n-#endif\n+  sleep_sec(1);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SuspendResumeAll\/libSuspendResumeAll.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-\n+void sleep_ms(int millis);\n@@ -383,0 +383,16 @@\n+\/\/ Wait for target thread to reach the required JVMTI thread state.\n+\/\/ The state jint bitmask is returned by the JVMTI GetThreadState.\n+\/\/ Some examples are:\n+\/\/ - JVMTI_THREAD_STATE_WAITING\n+\/\/ - JVMTI_THREAD_STATE_BLOCKED_ON_MONITOR_ENTER\n+\/\/ - JVMTI_THREAD_STATE_SLEEPING\n+static void\n+wait_for_state(jvmtiEnv *jvmti, JNIEnv *jni, jthread thread, jint exp_state) {\n+  while (true) {\n+    if (get_thread_state(jvmti, jni, thread) & exp_state) {\n+      break;\n+    }\n+    sleep_ms(100);\n+  }\n+}\n+\n","filename":"test\/lib\/jdk\/test\/lib\/jvmti\/jvmti_common.hpp","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"}]}