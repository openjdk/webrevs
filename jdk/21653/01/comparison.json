{"files":[{"patch":"@@ -81,2 +81,1 @@\n-    @SuppressWarnings(\"unchecked\")\n-    public static final Class<Boolean> TYPE = (Class<Boolean>) Class.getPrimitiveClass(\"boolean\");\n+    public static final Class<Boolean> TYPE = Class.getPrimitiveClass(\"boolean\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Boolean.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -82,2 +82,1 @@\n-    @SuppressWarnings(\"unchecked\")\n-    public static final Class<Byte>     TYPE = (Class<Byte>) Class.getPrimitiveClass(\"byte\");\n+    public static final Class<Byte> TYPE = Class.getPrimitiveClass(\"byte\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Byte.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -235,2 +235,1 @@\n-    @SuppressWarnings(\"unchecked\")\n-    public static final Class<Character> TYPE = (Class<Character>) Class.getPrimitiveClass(\"char\");\n+    public static final Class<Character> TYPE = Class.getPrimitiveClass(\"char\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Character.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3281,2 +3281,2 @@\n-     * Return the Virtual Machine's Class object for the named\n-     * primitive type.\n+     * Returns the Class object for the named primitive type. Type parameter T\n+     * avoids redundant casts for trusted code.\n@@ -3284,1 +3284,1 @@\n-    static native Class<?> getPrimitiveClass(String name);\n+    static native <T> Class<T> getPrimitiveClass(String name);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -462,2 +462,1 @@\n-    @SuppressWarnings(\"unchecked\")\n-    public static final Class<Double>   TYPE = (Class<Double>) Class.getPrimitiveClass(\"double\");\n+    public static final Class<Double> TYPE = Class.getPrimitiveClass(\"double\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -178,2 +178,1 @@\n-    @SuppressWarnings(\"unchecked\")\n-    public static final Class<Float> TYPE = (Class<Float>) Class.getPrimitiveClass(\"float\");\n+    public static final Class<Float> TYPE = Class.getPrimitiveClass(\"float\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Float.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -98,2 +98,1 @@\n-    @SuppressWarnings(\"unchecked\")\n-    public static final Class<Integer>  TYPE = (Class<Integer>) Class.getPrimitiveClass(\"int\");\n+    public static final Class<Integer> TYPE = Class.getPrimitiveClass(\"int\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -98,2 +98,1 @@\n-    @SuppressWarnings(\"unchecked\")\n-    public static final Class<Long>     TYPE = (Class<Long>) Class.getPrimitiveClass(\"long\");\n+    public static final Class<Long> TYPE = Class.getPrimitiveClass(\"long\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -82,2 +82,1 @@\n-    @SuppressWarnings(\"unchecked\")\n-    public static final Class<Short>    TYPE = (Class<Short>) Class.getPrimitiveClass(\"short\");\n+    public static final Class<Short> TYPE = Class.getPrimitiveClass(\"short\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Short.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,1 @@\n-    @SuppressWarnings(\"unchecked\")\n-    public static final Class<Void> TYPE = (Class<Void>) Class.getPrimitiveClass(\"void\");\n+    public static final Class<Void> TYPE = Class.getPrimitiveClass(\"void\");\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Void.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}