{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+ * @build jtreg.SkippedException\n@@ -42,0 +43,1 @@\n+ * @build jtreg.SkippedException\n@@ -53,0 +55,1 @@\n+ * @build jtreg.SkippedException\n@@ -59,0 +62,1 @@\n+import jtreg.SkippedException;\n@@ -126,0 +130,3 @@\n+            if (configuration.readAvailableHugePageNumberFromOS() == 0) {\n+                throw new SkippedException(\"No usable explicit hugepages configured on the system, skipping test\");\n+            }\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestHugePageDecisionsAtVMStartup.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -172,0 +172,15 @@\n+    public static long readAvailableHugePageNumberFromOS() {\n+        Pattern pat = Pattern.compile(\"HugePages_Free: *(\\\\d+)$\");\n+        try (Scanner scanner = new Scanner(new File(\"\/proc\/meminfo\"))) {\n+            while (scanner.hasNextLine()) {\n+                Matcher mat = pat.matcher(scanner.nextLine());\n+                if (mat.matches()) {\n+                    return Long.parseLong(mat.group(1));\n+                }\n+            }\n+        } catch (FileNotFoundException e) {\n+            System.out.println(\"Could not open \/proc\/meminfo\");\n+        }\n+        return 0;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/os\/linux\/HugePageConfiguration.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}