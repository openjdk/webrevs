{"files":[{"patch":"@@ -112,3 +112,3 @@\n-    \/\/ next service to try in provider selection\n-    \/\/ null once provider is selected\n-    private Service firstService;\n+    \/\/ the first KDFSpi and provider supporting the specified configuration parameters\n+    private KDFSpi firstSpi;\n+    private Provider firstProv;\n@@ -141,1 +141,0 @@\n-        firstService = null;\n@@ -150,1 +149,2 @@\n-     * @param s the service\n+     * @param firstSpi the first matching Spi\n+     * @param firstProv the first matching provider\n@@ -155,1 +155,1 @@\n-    private KDF(Service s, Iterator<Service> t, String algorithm,\n+    private KDF(KDFSpi firstSpi, Provider firstProv, Iterator<Service> t, String algorithm,\n@@ -157,1 +157,2 @@\n-        firstService = s;\n+        this.firstSpi = firstSpi;\n+        this.firstProv = firstProv;\n@@ -179,1 +180,1 @@\n-        chooseFirstProvider();\n+        useFirstSpi();\n@@ -200,1 +201,1 @@\n-        chooseFirstProvider();\n+        useFirstSpi();\n@@ -339,1 +340,10 @@\n-            return new KDF(s, t, algorithm, kdfParameters);\n+            try {\n+                Object obj = s.newInstance(kdfParameters);\n+                if (!(obj instanceof KDFSpi spiObj)) {\n+                    continue;\n+                }\n+                return new KDF(spiObj, s.getProvider(), t, algorithm, kdfParameters);\n+            } catch (NoSuchAlgorithmException e) {\n+                \/\/ ignore\n+                continue;\n+            }\n@@ -543,2 +553,1 @@\n-     * Selects the first provider in the list that supports the\n-     * {@code KDFParameters}.\n+     * Use the firstSpi as the chosen KDFSpi and set the fields accordingly\n@@ -546,4 +555,3 @@\n-    private void chooseFirstProvider() {\n-        if ((spi != null) || (serviceIterator == null)) {\n-            return;\n-        }\n+    private void useFirstSpi() {\n+        if ((spi != null) || (serviceIterator == null)) return;\n+\n@@ -551,2 +559,7 @@\n-            if (spi != null) {\n-                return;\n+            if ((spi == null) && (serviceIterator != null)) {\n+                spi = firstSpi;\n+                provider = firstProv;\n+                \/\/ not needed any more\n+                firstSpi = null;\n+                firstProv = null;\n+                serviceIterator = null;\n@@ -554,33 +567,0 @@\n-            Exception lastException = null;\n-            while ((firstService != null) || serviceIterator.hasNext()) {\n-                Service s;\n-                if (firstService != null) {\n-                    s = firstService;\n-                    firstService = null;\n-                } else {\n-                    s = serviceIterator.next();\n-                }\n-                if (!JceSecurity.canUseProvider(s.getProvider())) {\n-                    continue;\n-                }\n-                try {\n-                    Object obj = s.newInstance(kdfParameters);\n-                    if (!(obj instanceof KDFSpi)) {\n-                        continue;\n-                    }\n-                    spi = (KDFSpi) obj;\n-                    provider = s.getProvider();\n-                    \/\/ not needed any more\n-                    firstService = null;\n-                    serviceIterator = null;\n-                    return;\n-                } catch (NoSuchAlgorithmException e) {\n-                    lastException = e;\n-                }\n-            }\n-            ProviderException e = new ProviderException(\n-                \"Could not construct KDFSpi instance\");\n-            if (lastException != null) {\n-                e.initCause(lastException);\n-            }\n-            throw e;\n@@ -611,5 +591,8 @@\n-            while ((firstService != null) || serviceIterator.hasNext()) {\n-                Service s;\n-                if (firstService != null) {\n-                    s = firstService;\n-                    firstService = null;\n+            while ((firstSpi != null) || serviceIterator.hasNext()) {\n+                KDFSpi currSpi;\n+                Provider currProv;\n+                if (firstSpi != null) {\n+                    currSpi = firstSpi;\n+                    currProv = firstProv;\n+                    firstSpi = null;\n+                    firstProv = null;\n@@ -617,4 +600,15 @@\n-                    s = serviceIterator.next();\n-                }\n-                if (!JceSecurity.canUseProvider(s.getProvider())) {\n-                    continue;\n+                    Service s = serviceIterator.next();\n+                    currProv = s.getProvider();\n+                    if (!JceSecurity.canUseProvider(currProv)) {\n+                        continue;\n+                    }\n+                    try {\n+                        Object obj = s.newInstance(kdfParameters);\n+                        if (!(obj instanceof KDFSpi)) {\n+                            continue;\n+                        }\n+                        currSpi = (KDFSpi) obj;\n+                    } catch (Exception e) {\n+                        \/\/ continue to the next provider\n+                        continue;\n+                    }\n@@ -622,0 +616,1 @@\n+\n@@ -623,8 +618,7 @@\n-                    KDFSpi spi = (KDFSpi) s.newInstance(kdfParameters);\n-                    Object o =\n-                        (isDeriveData) ? spi.engineDeriveData(\n-                            derivationParameterSpec) : spi.engineDeriveKey(\n-                            algorithm, derivationParameterSpec);\n-                    this.provider = s.getProvider();\n-                    this.spi = spi;\n-                    firstService = null;\n+                    Object result = (isDeriveData) ? currSpi.engineDeriveData(\n+                        derivationParameterSpec) : currSpi.engineDeriveKey(\n+                        algorithm, derivationParameterSpec);\n+                    \/\/ found a working KDFSpi\n+                    this.provider = currProv;\n+                    this.spi = currSpi;\n+                    \/\/ not looking further\n@@ -632,1 +626,1 @@\n-                    return o;\n+                    return result;\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":63,"deletions":69,"binary":false,"changes":132,"status":"modified"}]}