{"files":[{"patch":"@@ -54,2 +54,2 @@\n-    protected final int hmacLen;\n-    protected final String hmacAlgName;\n+    private final int hmacLen;\n+    private final String hmacAlgName;\n@@ -105,3 +105,3 @@\n-     *     if {@code alg} is empty or invalid\n-     * @throws IllegalArgumentException\n-     *     if {@code alg} is {@code null} or empty\n+     *     if {@code alg} is empty\n+     * @throws NullPointerException\n+     *     if {@code alg} is {@code null}\n@@ -141,1 +141,1 @@\n-        throws InvalidAlgorithmParameterException {\n+                throws InvalidAlgorithmParameterException {\n@@ -167,1 +167,4 @@\n-                return hkdfExtract(inputKeyMaterial, salt);\n+                byte[] result = hkdfExtract(inputKeyMaterial, salt);\n+                Arrays.fill(inputKeyMaterial, (byte)0x00);\n+                Arrays.fill(salt, (byte)0x00);\n+                return result;\n@@ -198,1 +201,3 @@\n-                return hkdfExpand(pseudoRandomKey, info, length);\n+                byte[] result = hkdfExpand(pseudoRandomKey, info, length);\n+                Arrays.fill(pseudoRandomKey, (byte) 0x00);\n+                return result;\n@@ -238,1 +243,5 @@\n-                return hkdfExpand(pseudoRandomKey, info, length);\n+                byte[] result = hkdfExpand(pseudoRandomKey, info, length);\n+                Arrays.fill(inputKeyMaterial, (byte)0x00);\n+                Arrays.fill(salt, (byte)0x00);\n+                Arrays.fill(pseudoRandomKey, (byte)0x00);\n+                return result;\n@@ -255,0 +264,1 @@\n+    \/\/ throws an InvalidKeyException if any key is unextractable\n@@ -274,1 +284,1 @@\n-                return null;\n+                return new byte[0];\n@@ -299,1 +309,1 @@\n-        if (salt == null) {\n+        if (salt == null || salt.length == 0) {\n@@ -346,3 +356,0 @@\n-        if (info == null) {\n-            info = new byte[0];\n-        }\n@@ -356,1 +363,1 @@\n-                    hmacObj.update(kdfOutput, Math.max(0,offset - hmacLen), hmacLen); \/\/ add T(i-1)\n+                    hmacObj.update(kdfOutput, offset - hmacLen, hmacLen); \/\/ add T(i-1)\n@@ -365,0 +372,1 @@\n+                    Arrays.fill(tmp, (byte)0x00);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/HkdfKeyDerivation.java","additions":23,"deletions":15,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import java.security.Security;\n@@ -51,3 +52,3 @@\n- * The {@code deriveKey} method accepts an algorithm {@code String} and\n- * returns a {@code SecretKey} object with the specified algorithm. The\n- * {@code deriveData} method returns a byte array of raw data.\n+ * The {@code deriveKey} method accepts an algorithm name and returns a\n+ * {@code SecretKey} object with the specified algorithm. The {@code deriveData}\n+ * method returns a byte array of raw data.\n@@ -83,12 +84,8 @@\n- * If a provider is not specified in the {@code getInstance} method when\n- * instantiating a {@code KDF} object, the provider is selected the first time\n- * the {@code deriveKey} or {@code deriveData} method is called, and a provider\n- * is chosen that supports the parameters passed to the {@code deriveKey} or\n- * {@code deriveData} method. If the {@code getProviderName} or {@code\n- * getParameters} method is called before the {@code deriveKey} or {@code\n- * deriveData} methods, the first provider supporting the KDF algorithm and\n- * optional {@code KDFParameters} is chosen. This provider may not support\n- * the key material that is subsequently passed to the {@code deriveKey} or\n- * {@code deriveData} methods. Therefore, it is recommended not to call the\n- * {@code getProviderName} or {@code getParameters} methods until after a key\n- * derivation operation. Once a provider is selected, it cannot be changed.\n+ * If the {@code getProviderName} or {@code getParameters} method is called\n+ * before the {@code deriveKey} or {@code deriveData} methods, the first\n+ * provider supporting the KDF algorithm and optional {@code KDFParameters} is\n+ * chosen. This provider may not support the key material that is subsequently\n+ * passed to the {@code deriveKey} or {@code deriveData} methods. Therefore, it\n+ * is recommended not to call the {@code getProviderName} or\n+ * {@code getParameters} methods until after a key derivation operation. Once a\n+ * provider is selected, it cannot be changed.\n@@ -218,0 +215,11 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property to determine\n+     * the preferred provider order for the specified algorithm. This\n+     * may be different than the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.\n+     * See also the Cipher Transformations section of the {@extLink\n+     * security_guide_jdk_providers JDK Providers} document for information\n+     * on the transformation defaults used by JDK providers.\n+     *\n@@ -324,0 +332,11 @@\n+     * @implNote\n+     * The JDK Reference Implementation additionally uses the\n+     * {@code jdk.security.provider.preferred}\n+     * {@link Security#getProperty(String) Security} property to determine\n+     * the preferred provider order for the specified algorithm. This\n+     * may be different than the order of providers returned by\n+     * {@link Security#getProviders() Security.getProviders()}.\n+     * See also the Cipher Transformations section of the {@extLink\n+     * security_guide_jdk_providers JDK Providers} document for information\n+     * on the transformation defaults used by JDK providers.\n+     *\n@@ -351,1 +370,1 @@\n-                            + \"specified parameters\"));\n+                            + \"specified algorithm and parameters\"));\n@@ -370,1 +389,1 @@\n-                            + \"specified parameters\"));\n+                            + \"specified algorithm and parameters\"));\n@@ -411,2 +430,2 @@\n-     *     if no {@code Provider} supports a {@code KDFSpi} implementation for\n-     *     the specified algorithm and parameters\n+     *     if the specified provider does not support a {@code KDFSpi}\n+     *     implementation for the specified algorithm and parameters\n@@ -464,2 +483,2 @@\n-     *     if no {@code Provider} supports a {@code KDFSpi} implementation for\n-     *     the specified algorithm and parameters\n+     *     if the specified provider does not support a {@code KDFSpi}\n+     *     implementation for the specified algorithm and parameters\n@@ -504,3 +523,0 @@\n-     * <p>\n-     * The {@code deriveKey} method may be called multiple times on a particular\n-     * {@code KDF} instance, but it is not considered thread-safe.\n@@ -546,3 +562,0 @@\n-     * <p>\n-     * The {@code deriveData} method may be called multiple times on a\n-     * particular {@code KDF} instance, but it is not considered thread-safe.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":40,"deletions":27,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -37,4 +37,2 @@\n- * A {@code KDFParameters} object is passed as a parameter to one of\n- * the\n- * {@link KDF#getInstance(String, KDFParameters) KDF.getInstance}\n- * methods. The {@code getInstance} method returns a {@code KDF}.\n+ * When supplied, the {@link KDF#getInstance(String, KDFParameters) KDF.getInstance}\n+ * methods return a {@code KDF} that is initialized with the specified parameters.\n@@ -42,5 +40,3 @@\n- * {@code KDF} implementations may choose to supply additional default or\n- * random parameter values used by the underlying KDF algorithm. If required\n- * parameters were not supplied and can be generated by the {@code KDF}\n- * object, these may be supplied by the implementation. For additional\n- * information, see: {@link KDF#getParameters()}.\n+ * The {@code KDFParameters} used for initialization are returned by\n+ * {@link KDF#getParameters()} and may contain additional default or random\n+ * parameter values used by the underlying KDF implementation.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDFParameters.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"}]}