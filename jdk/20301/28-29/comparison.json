{"files":[{"patch":"@@ -345,0 +345,6 @@\n+\n+        if (prk == null || prk.length < hmacLen) {\n+            throw new InvalidKeyException(\n+                \"prk must be at least \" + hmacLen + \" bytes\");\n+        }\n+\n@@ -351,4 +357,0 @@\n-        if (CipherCore.getKeyBytes(pseudoRandomKey).length < hmacLen) {\n-            throw new InvalidKeyException(\n-                \"prk must be at least \" + hmacLen + \" bytes\");\n-        }\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/HkdfKeyDerivation.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -128,7 +128,7 @@\n-    \/**\n-     * Instantiates a {@code KDF} object. This constructor is called when a\n-     * provider is supplied to {@code getInstance}.\n-     *\n-     * @param delegate the delegate\n-     * @param algorithm the algorithm\n-     *\/\n+\n+    \/\/ Instantiates a {@code KDF} object. This constructor is called when a\n+    \/\/ provider is supplied to {@code getInstance}.\n+    \/\/\n+    \/\/ @param delegate the delegate\n+    \/\/ @param algorithm the algorithm\n+    \/\/ @param kdfParameters the parameters\n@@ -143,9 +143,7 @@\n-    \/**\n-     * Instantiates a {@code KDF} object. This constructor is called when a\n-     * provider is not supplied to {@code getInstance}.\n-     *\n-     * @param firstPairOfSpiAndProv the delegate\n-     * @param t the service iterator\n-     * @param algorithm the algorithm\n-     * @param kdfParameters the algorithm parameters\n-     *\/\n+    \/\/ Instantiates a {@code KDF} object. This constructor is called when a\n+    \/\/ provider is not supplied to {@code getInstance}.\n+    \/\/\n+    \/\/ @param firstPairOfSpiAndProv the delegate\n+    \/\/ @param t the service iterator\n+    \/\/ @param algorithm the algorithm\n+    \/\/ @param kdfParameters the algorithm parameters\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"}]}