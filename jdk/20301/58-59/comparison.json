{"files":[{"patch":"@@ -32,3 +32,1 @@\n-import jdk.test.lib.Asserts;\n-import jdk.test.lib.Utils;\n-\n+import java.util.HexFormat;\n@@ -37,3 +35,1 @@\n-import javax.crypto.spec.SecretKeySpec;\n-import java.security.InvalidAlgorithmParameterException;\n-import java.util.HexFormat;\n+import jdk.test.lib.Asserts;\n@@ -78,8 +74,0 @@\n-\n-        \/\/ EXPECTED EXCEPTIONS\n-\n-        \/\/ short PRK should throw IAPE\n-        Utils.runAndCheckException(() -> test(HKDFParameterSpec.expandOnly(new SecretKeySpec(new byte[] {0x00}, \"PRK\"), null, 32)), InvalidAlgorithmParameterException.class);\n-\n-        \/\/ long length should throw IAPE; 8162 is greater than 255 * hmacLen\n-        Utils.runAndCheckException(() -> test(HKDFParameterSpec.expandOnly(new SecretKeySpec(expectedPrk, \"PRK\"), null, 8162 )), InvalidAlgorithmParameterException.class);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/HKDFBasicFunctionsTest.java","additions":2,"deletions":14,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -418,0 +418,14 @@\n+\n+    \/\/ NEGATIVE TestCase: Expand - PRK value too short\n+    Utils.runAndCheckException(\n+        () ->\n+            hk.deriveKey(\n+                \"OKM\",\n+                KdfExpandVerifierImpl.expand(\n+                    new SecretKeySpec(new byte[] {0x00}, \"PRK\"), null, 32)),\n+        InvalidAlgorithmParameterException.class);\n+\n+    \/\/ NEGATIVE TestCase: Expand - length greater than 255 > hmacLen\n+    Utils.runAndCheckException(\n+        () -> hk.deriveKey(\"OKM\", KdfExpandVerifierImpl.expand(prk, null, 8162)),\n+        InvalidAlgorithmParameterException.class);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/KDF\/HKDFExhaustiveTest.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}