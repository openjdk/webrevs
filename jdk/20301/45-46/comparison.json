{"files":[{"patch":"@@ -397,13 +397,0 @@\n-        try {\n-            Instance instance = GetInstance.getInstance(\"KDF\", KDFSpi.class,\n-                                                        algorithm,\n-                                                        kdfParameters,\n-                                                        provider);\n-            if (!JceSecurity.canUseProvider(instance.provider)) {\n-                String msg = \"JCE cannot authenticate the provider \"\n-                             + instance.provider.getName();\n-                throw new NoSuchProviderException(msg);\n-            }\n-            return new KDF(new Delegate((KDFSpi) instance.impl,\n-                                        instance.provider), algorithm\n-            );\n@@ -411,2 +398,8 @@\n-        } catch (NoSuchAlgorithmException nsae) {\n-            return handleException(nsae);\n+        Instance instance = GetInstance.getInstance(\"KDF\", KDFSpi.class,\n+                                                    algorithm,\n+                                                    kdfParameters,\n+                                                    provider);\n+        if (!JceSecurity.canUseProvider(instance.provider)) {\n+            String msg = \"JCE cannot authenticate the provider \"\n+                         + instance.provider.getName();\n+            throw new NoSuchProviderException(msg);\n@@ -414,0 +407,3 @@\n+        return new KDF(new Delegate((KDFSpi) instance.impl,\n+                                    instance.provider), algorithm\n+        );\n@@ -449,25 +445,8 @@\n-        try {\n-            Instance instance = GetInstance.getInstance(\"KDF\", KDFSpi.class,\n-                                                        algorithm,\n-                                                        kdfParameters,\n-                                                        provider);\n-            if (!JceSecurity.canUseProvider(instance.provider)) {\n-                String msg = \"JCE cannot authenticate the provider \"\n-                             + instance.provider.getName();\n-                throw new SecurityException(msg);\n-            }\n-            return new KDF(new Delegate((KDFSpi) instance.impl,\n-                                        instance.provider), algorithm\n-            );\n-\n-        } catch (NoSuchAlgorithmException nsae) {\n-            return handleException(nsae);\n-        }\n-    }\n-\n-    private static KDF handleException(NoSuchAlgorithmException e)\n-            throws NoSuchAlgorithmException,\n-                   InvalidAlgorithmParameterException {\n-        Throwable cause = e.getCause();\n-        if (cause instanceof InvalidAlgorithmParameterException) {\n-            throw (InvalidAlgorithmParameterException) cause;\n+        Instance instance = GetInstance.getInstance(\"KDF\", KDFSpi.class,\n+                                                    algorithm,\n+                                                    kdfParameters,\n+                                                    provider);\n+        if (!JceSecurity.canUseProvider(instance.provider)) {\n+            String msg = \"JCE cannot authenticate the provider \"\n+                         + instance.provider.getName();\n+            throw new SecurityException(msg);\n@@ -475,1 +454,3 @@\n-        throw e;\n+        return new KDF(new Delegate((KDFSpi) instance.impl,\n+                                    instance.provider), algorithm\n+        );\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":22,"deletions":41,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import java.security.NoSuchAlgorithmException;\n@@ -64,0 +65,34 @@\n+\n+        boolean thrown = true;\n+        try {\n+            kdf = KDF.getInstance(\"Y\");\n+            thrown = false;\n+        } catch(Exception nsae) {\n+            \/\/ Expected exception\n+            Asserts.assertTrue(nsae instanceof NoSuchAlgorithmException);\n+            System.out.println(\"Expected NoSuchAlgorithmException\");\n+        }\n+        Asserts.assertTrue(thrown);\n+\n+        thrown = true;\n+        try {\n+            kdf = KDF.getInstance(\"HKDF-SHA256\", new MyKDFParameters());\n+            thrown = false;\n+        } catch (Exception iape) {\n+            \/\/ Expected exception\n+            Asserts.assertTrue(iape instanceof InvalidAlgorithmParameterException);\n+            System.out.println(\"Expected InvalidAlgorithmParameterException\");\n+        }\n+        Asserts.assertTrue(thrown);\n+\n+        thrown = true;\n+        try {\n+            kdf = KDF.getInstance(\"HKDF-SHA256\");\n+            kdf.deriveData(new MyDerivationSpec());\n+            thrown = false;\n+        } catch (Exception iape) {\n+            \/\/ Expected exception\n+            Asserts.assertTrue(iape instanceof InvalidAlgorithmParameterException);\n+            System.out.println(\"Expected InvalidAlgorithmParameterException\");\n+        }\n+        Asserts.assertTrue(thrown);\n@@ -143,0 +178,2 @@\n+\n+    static class MyKDFParameters implements KDFParameters {}\n","filename":"test\/jdk\/javax\/crypto\/KDF\/KDFDelayedProviderTest.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"modified"}]}