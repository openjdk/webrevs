{"files":[{"patch":"@@ -131,3 +131,3 @@\n-        SecretKey inputKeyMaterial;\n-        SecretKey salt;\n-        SecretKey pseudoRandomKey;\n+        byte[] inputKeyMaterial;\n+        byte[] salt;\n+        byte[] pseudoRandomKey;\n@@ -158,2 +158,1 @@\n-                return hkdfExtract(inputKeyMaterial,\n-                                   (salt == null) ? null : salt.getEncoded());\n+                return hkdfExtract(inputKeyMaterial, salt);\n@@ -175,1 +174,1 @@\n-            if ((pseudoRandomKey = anExpand.prk()) == null) {\n+            if ((pseudoRandomKey = anExpand.prk().getEncoded()) == null) {\n@@ -190,2 +189,1 @@\n-                return Arrays.copyOf(hkdfExpand(pseudoRandomKey, info, length),\n-                                     length);\n+                return hkdfExpand(pseudoRandomKey, info, length);\n@@ -230,5 +228,2 @@\n-                byte[] extractResult = hkdfExtract(inputKeyMaterial, (salt\n-                                                                      == null) ? null : salt.getEncoded());\n-                pseudoRandomKey = new SecretKeySpec(extractResult, hmacAlgName);\n-                return Arrays.copyOf(hkdfExpand(pseudoRandomKey, info, length),\n-                                     length);\n+                pseudoRandomKey = hkdfExtract(inputKeyMaterial, salt);\n+                return hkdfExpand(pseudoRandomKey, info, length);\n@@ -251,1 +246,1 @@\n-    private SecretKey consolidateKeyMaterial(List<SecretKey> keys)\n+    private byte[] consolidateKeyMaterial(List<SecretKey> keys)\n@@ -258,2 +253,1 @@\n-                byte[] workItemBytes = CipherCore.getKeyBytes(checkIt);\n-                return new SecretKeySpec(workItemBytes, \"Generic\");\n+                return CipherCore.getKeyBytes(checkIt);\n@@ -265,1 +259,1 @@\n-                return new SecretKeySpec(os.toByteArray(), \"Generic\");\n+                return os.toByteArray();\n@@ -290,1 +284,1 @@\n-    private byte[] hkdfExtract(SecretKey inputKeyMaterial, byte[] salt)\n+    private byte[] hkdfExtract(byte[] inputKeyMaterial, byte[] salt)\n@@ -302,1 +296,1 @@\n-            return hmacObj.doFinal(inputKeyMaterial.getEncoded());\n+            return hmacObj.doFinal(inputKeyMaterial);\n@@ -326,1 +320,1 @@\n-    private byte[] hkdfExpand(SecretKey prk, byte[] info, int outLen)\n+    private byte[] hkdfExpand(byte[] prk, byte[] info, int outLen)\n@@ -329,0 +323,2 @@\n+        SecretKey pseudoRandomKey = new SecretKeySpec(prk, hmacAlgName);\n+\n@@ -333,1 +329,1 @@\n-        if (CipherCore.getKeyBytes(prk).length < hmacLen) {\n+        if (CipherCore.getKeyBytes(pseudoRandomKey).length < hmacLen) {\n@@ -337,1 +333,1 @@\n-        hmacObj.init(prk);\n+        hmacObj.init(pseudoRandomKey);\n@@ -362,1 +358,1 @@\n-        return kdfOutput;\n+        return Arrays.copyOf(kdfOutput, outLen);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/HkdfKeyDerivation.java","additions":19,"deletions":23,"binary":false,"changes":42,"status":"modified"}]}