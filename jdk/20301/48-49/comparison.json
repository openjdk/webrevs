{"files":[{"patch":"@@ -29,1 +29,1 @@\n- * @run main KDFDelayedProviderTest\n+ * @run main\/othervm KDFDelayedProviderTest\n","filename":"test\/jdk\/javax\/crypto\/KDF\/KDFDelayedProviderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8331008\n+ * @library \/test\/lib \/test\/jdk\/security\/unsignedjce\n+ * @build java.base\/javax.crypto.ProviderVerifier\n+ * @run main\/othervm -Djava.security.debug=provider,engine=kdf KDFDelayedProviderThreadingTest\n+ * @summary delayed provider selection threading test\n+ * @enablePreview\n+ *\/\n+\n+import javax.crypto.KDF;\n+import javax.crypto.KDFParameters;\n+import javax.crypto.KDFSpi;\n+import javax.crypto.SecretKey;\n+import javax.crypto.spec.HKDFParameterSpec;\n+import java.security.InvalidAlgorithmParameterException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.Provider;\n+import java.security.Security;\n+import java.security.spec.AlgorithmParameterSpec;\n+import java.util.Arrays;\n+\n+public class KDFDelayedProviderThreadingTest {\n+    public static void main(String[] args) throws Exception {\n+        Security.insertProviderAt(new P(), 1);\n+        var k = KDF.getInstance(\"HKDF-SHA256\");\n+        var input = HKDFParameterSpec.ofExtract().extractOnly();\n+        new Thread(() -> {\n+            try {\n+                System.out.println(Arrays.toString(k.deriveData(input)));\n+            } catch (Exception e) {\n+                System.out.println(e);\n+                throw new RuntimeException(e);\n+            }\n+        }).start();\n+        new Thread(() -> k.getProviderName()).start();\n+        System.out.println(Arrays.toString(k.deriveData(input)));\n+    }\n+\n+    public static class P extends Provider {\n+        public P() {\n+            super(\"ME\", \"1\", \"ME\");\n+            put(\"KDF.HKDF-SHA256\", K.class.getName());\n+        }\n+    }\n+\n+    public static class K extends KDFSpi {\n+\n+        public K(KDFParameters p) throws InvalidAlgorithmParameterException {\n+            super(p);\n+        }\n+\n+        @Override\n+        protected KDFParameters engineGetParameters() {\n+            return null;\n+        }\n+\n+        @Override\n+        protected SecretKey engineDeriveKey(String alg, AlgorithmParameterSpec derivationSpec)\n+                throws InvalidAlgorithmParameterException, NoSuchAlgorithmException {\n+            throw new InvalidAlgorithmParameterException();\n+        }\n+\n+        @Override\n+        protected byte[] engineDeriveData(AlgorithmParameterSpec derivationSpec)\n+                throws InvalidAlgorithmParameterException {\n+            throw new InvalidAlgorithmParameterException();\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/javax\/crypto\/KDF\/KDFDelayedProviderThreadingTest.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"}]}