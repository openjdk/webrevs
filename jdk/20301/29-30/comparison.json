{"files":[{"patch":"@@ -181,0 +181,3 @@\n+            } finally {\n+                Arrays.fill(inputKeyMaterial, (byte)0x00);\n+                Arrays.fill(salt, (byte)0x00);\n@@ -214,0 +217,2 @@\n+            } finally {\n+                Arrays.fill(pseudoRandomKey, (byte) 0x00);\n@@ -241,0 +246,1 @@\n+            pseudoRandomKey = null;\n@@ -258,0 +264,6 @@\n+            } finally {\n+                Arrays.fill(inputKeyMaterial, (byte)0x00);\n+                Arrays.fill(salt, (byte)0x00);\n+                if(pseudoRandomKey != null) {\n+                    Arrays.fill(pseudoRandomKey, (byte)0x00);\n+                }\n@@ -297,2 +309,1 @@\n-     *     the salt value used for HKDF-Extract; {@code null} if no salt value\n-     *     is provided.\n+     *     the salt value used for HKDF-Extract\n@@ -309,1 +320,2 @@\n-        if (salt == null || salt.length == 0) {\n+        \/\/ salt will not be null\n+        if (salt.length == 0) {\n@@ -315,5 +327,2 @@\n-        if (inputKeyMaterial == null) {\n-            return hmacObj.doFinal();\n-        } else {\n-            return hmacObj.doFinal(inputKeyMaterial);\n-        }\n+        \/\/ inputKeyMaterial will not be null\n+        return hmacObj.doFinal(inputKeyMaterial);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/HkdfKeyDerivation.java","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -83,0 +83,5 @@\n+ * Once initiated, the selection process traverses the list of registered\n+ * security providers, starting with the most preferred {@code Provider}. A new\n+ * {@code KDF} object encapsulating the {@code KDFSpi} implementation from the\n+ * first provider that supports the specified algorithm and optional\n+ * parameters is returned.\n@@ -220,3 +225,0 @@\n-     * See also the Cipher Transformations section of the {@extLink\n-     * security_guide_jdk_providers JDK Providers} document for information\n-     * on the transformation defaults used by JDK providers.\n@@ -280,2 +282,1 @@\n-     * the specified security provider. The specified provider must be\n-     * registered in the security provider list.\n+     * the specified security provider.\n@@ -337,3 +338,0 @@\n-     * See also the Cipher Transformations section of the {@extLink\n-     * security_guide_jdk_providers JDK Providers} document for information\n-     * on the transformation defaults used by JDK providers.\n@@ -356,1 +354,1 @@\n-        NoSuchAlgorithmException lastException = null;\n+        InvalidAlgorithmParameterException lastException = null;\n@@ -365,2 +363,1 @@\n-                    lastException = new NoSuchAlgorithmException(\n-                        new InvalidAlgorithmParameterException(\n+                    lastException = new InvalidAlgorithmParameterException(\n@@ -368,1 +365,1 @@\n-                            + \"specified algorithm and parameters\"));\n+                            + \"specified algorithm and parameters\");\n@@ -384,1 +381,0 @@\n-                    new NoSuchAlgorithmException(\n@@ -387,1 +383,1 @@\n-                            + \"specified algorithm and parameters\"));\n+                            + \"specified algorithm and parameters\");\n@@ -395,1 +391,1 @@\n-            return handleException(lastException);\n+            throw lastException;\n@@ -461,1 +457,0 @@\n-     * The specified provider must be registered in the security provider list.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"}]}