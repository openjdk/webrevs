{"files":[{"patch":"@@ -94,1 +94,1 @@\n-                                        AlgorithmParameterSpec kdfParameterSpec)\n+                                        AlgorithmParameterSpec derivationParameterSpec)\n@@ -103,1 +103,1 @@\n-        return new SecretKeySpec(engineDeriveData(kdfParameterSpec), alg);\n+        return new SecretKeySpec(engineDeriveData(derivationParameterSpec), alg);\n@@ -119,1 +119,1 @@\n-    protected byte[] engineDeriveData(AlgorithmParameterSpec kdfParameterSpec)\n+    protected byte[] engineDeriveData(AlgorithmParameterSpec derivationParameterSpec)\n@@ -132,1 +132,1 @@\n-        if (kdfParameterSpec instanceof HKDFParameterSpec.Extract) {\n+        if (derivationParameterSpec instanceof HKDFParameterSpec.Extract) {\n@@ -134,1 +134,1 @@\n-                (HKDFParameterSpec.Extract) kdfParameterSpec;\n+                (HKDFParameterSpec.Extract) derivationParameterSpec;\n@@ -163,1 +163,1 @@\n-        } else if (kdfParameterSpec instanceof HKDFParameterSpec.Expand) {\n+        } else if (derivationParameterSpec instanceof HKDFParameterSpec.Expand) {\n@@ -165,1 +165,1 @@\n-                (HKDFParameterSpec.Expand) kdfParameterSpec;\n+                (HKDFParameterSpec.Expand) derivationParameterSpec;\n@@ -196,1 +196,1 @@\n-        } else if (kdfParameterSpec instanceof HKDFParameterSpec.ExtractThenExpand) {\n+        } else if (derivationParameterSpec instanceof HKDFParameterSpec.ExtractThenExpand) {\n@@ -198,1 +198,1 @@\n-                (HKDFParameterSpec.ExtractThenExpand) kdfParameterSpec;\n+                (HKDFParameterSpec.ExtractThenExpand) derivationParameterSpec;\n@@ -374,1 +374,1 @@\n-    protected KDFParameters engineGetKDFParameters() {\n+    protected KDFParameters engineGetParameters() {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/HkdfKeyDerivation.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n- *    AlgorithmParameterSpec kdfParameterSpec =\n+ *    AlgorithmParameterSpec derivationParameterSpec =\n@@ -85,1 +85,1 @@\n- *    kdfHkdf.deriveKey(\"AES\", kdfParameterSpec);\n+ *    kdfHkdf.deriveKey(\"AES\", derivationParameterSpec);\n@@ -127,1 +127,2 @@\n-     * Instantiates a KDF object.\n+     * Instantiates a {@code KDF} object. This constructor is called when a\n+     * provider is supplied to {@code getInstance}.\n@@ -149,0 +150,9 @@\n+    \/**\n+     * Instantiates a {@code KDF} object. This constructor is called when a\n+     * provider is not supplied to {@code getInstance}.\n+     *\n+     * @param s the service\n+     * @param t the service iterator\n+     * @param algorithm the algorithm\n+     * @param kdfParameters the algorithm parameters\n+     *\/\n@@ -193,1 +203,1 @@\n-    public KDFParameters getKDFParameters() {\n+    public KDFParameters getParameters() {\n@@ -195,1 +205,1 @@\n-        return spi.engineGetKDFParameters();\n+        return spi.engineGetParameters();\n@@ -316,1 +326,2 @@\n-     *     if the {@code KDFParameters} is an invalid value\n+     *     if the initialization parameters are inappropriate for this\n+     *     {@code KDF}\n@@ -362,1 +373,2 @@\n-     *     if the {@code KDFParameters} is an invalid value\n+     *     if the initialization parameters are inappropriate for this\n+     *     {@code KDF}\n@@ -413,1 +425,2 @@\n-     *     if the {@code KDFParameters} is an invalid value\n+     *     if the initialization parameters are inappropriate for this\n+     *     {@code KDF}\n@@ -458,1 +471,1 @@\n-     * @param kdfParameterSpec\n+     * @param derivationParameterSpec\n@@ -468,1 +481,1 @@\n-     *     if the information contained within the {@code kdfParameterSpec} is\n+     *     if the information contained within the {@code derivationParameterSpec} is\n@@ -473,1 +486,1 @@\n-     *     if {@code alg} or {@code kdfParameterSpec} is null\n+     *     if {@code alg} or {@code derivationParameterSpec} is null\n@@ -476,1 +489,1 @@\n-                               AlgorithmParameterSpec kdfParameterSpec)\n+                               AlgorithmParameterSpec derivationParameterSpec)\n@@ -484,1 +497,1 @@\n-            Objects.requireNonNull(kdfParameterSpec);\n+            Objects.requireNonNull(derivationParameterSpec);\n@@ -486,1 +499,1 @@\n-                return spi.engineDeriveKey(alg, kdfParameterSpec);\n+                return spi.engineDeriveKey(alg, derivationParameterSpec);\n@@ -488,1 +501,1 @@\n-                return (SecretKey) chooseProvider(alg, kdfParameterSpec);\n+                return (SecretKey) chooseProvider(alg, derivationParameterSpec);\n@@ -498,1 +511,1 @@\n-     * @param kdfParameterSpec\n+     * @param derivationParameterSpec\n@@ -508,1 +521,1 @@\n-     *     if the information contained within the {@code kdfParameterSpec} is\n+     *     if the information contained within the {@code derivationParameterSpec} is\n@@ -513,1 +526,1 @@\n-     *     if {@code kdfParameterSpec} is null\n+     *     if {@code derivationParameterSpec} is null\n@@ -515,1 +528,1 @@\n-    public byte[] deriveData(AlgorithmParameterSpec kdfParameterSpec)\n+    public byte[] deriveData(AlgorithmParameterSpec derivationParameterSpec)\n@@ -518,1 +531,1 @@\n-        Objects.requireNonNull(kdfParameterSpec);\n+        Objects.requireNonNull(derivationParameterSpec);\n@@ -520,1 +533,1 @@\n-            return spi.engineDeriveData(kdfParameterSpec);\n+            return spi.engineDeriveData(derivationParameterSpec);\n@@ -522,1 +535,1 @@\n-            return (byte[]) chooseProvider(null, kdfParameterSpec);\n+            return (byte[]) chooseProvider(null, derivationParameterSpec);\n@@ -526,3 +539,0 @@\n-    \/\/ max number of debug warnings to print from chooseFirstProvider()\n-    private static int warnCount = 10;\n-\n@@ -579,2 +589,2 @@\n-     * {@code kdfParameterSpec} values, and assigns the global spi and provider\n-     * variables if they have not been assigned yet.\n+     * {@code derivationParameterSpec} values, and assigns the global spi and\n+     * provider variables if they have not been assigned yet.\n@@ -584,1 +594,3 @@\n-    private Object chooseProvider(String algorithm, AlgorithmParameterSpec kdfParameterSpec) throws InvalidAlgorithmParameterException {\n+    private Object chooseProvider(String algorithm,\n+                                  AlgorithmParameterSpec derivationParameterSpec)\n+        throws InvalidAlgorithmParameterException {\n@@ -589,2 +601,4 @@\n-            if(spi != null) {\n-                return (mechanism == DERIVE_DATA)?spi.engineDeriveData(kdfParameterSpec):spi.engineDeriveKey(algorithm, kdfParameterSpec);\n+            if (spi != null) {\n+                return (mechanism == DERIVE_DATA) ? spi.engineDeriveData(\n+                    derivationParameterSpec) : spi.engineDeriveKey(algorithm,\n+                                                                   derivationParameterSpec);\n@@ -607,1 +621,4 @@\n-                    Object o = (mechanism == DERIVE_DATA)?spi.engineDeriveData(kdfParameterSpec):spi.engineDeriveKey(algorithm, kdfParameterSpec);\n+                    Object o =\n+                        (mechanism == DERIVE_DATA) ? spi.engineDeriveData(\n+                            derivationParameterSpec) : spi.engineDeriveKey(\n+                            algorithm, derivationParameterSpec);\n@@ -628,1 +645,5 @@\n-            \"No installed provider supports the \" + ((mechanism == DERIVE_DATA)?\"deriveData\":\"deriveKey\") + \" method with\"\n+            \"No installed provider supports the \" + ((mechanism\n+                                                      == DERIVE_DATA) ?\n+                                                         \"deriveData\" :\n+                                                         \"deriveKey\")\n+            + \" method with\"\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":53,"deletions":32,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.security.spec.InvalidParameterSpecException;\n@@ -90,1 +89,1 @@\n-    protected abstract KDFParameters engineGetKDFParameters();\n+    protected abstract KDFParameters engineGetParameters();\n@@ -100,1 +99,1 @@\n-     * @param kdfParameterSpec\n+     * @param derivationParameterSpec\n@@ -110,1 +109,1 @@\n-     *     if the information contained within the {@code kdfParameterSpec} is\n+     *     if the information contained within the {@code derivationParameterSpec} is\n@@ -115,1 +114,1 @@\n-     *     if {@code alg} or {@code kdfParameterSpec} is null\n+     *     if {@code alg} or {@code derivationParameterSpec} is null\n@@ -118,1 +117,1 @@\n-                                                 AlgorithmParameterSpec kdfParameterSpec)\n+                                                 AlgorithmParameterSpec derivationParameterSpec)\n@@ -127,1 +126,1 @@\n-     * @param kdfParameterSpec\n+     * @param derivationParameterSpec\n@@ -137,1 +136,1 @@\n-     *     if the information contained within the {@code kdfParameterSpec} is\n+     *     if the information contained within the {@code derivationParameterSpec} is\n@@ -142,1 +141,1 @@\n-     *     if {@code kdfParameterSpec} is null\n+     *     if {@code derivationParameterSpec} is null\n@@ -145,1 +144,1 @@\n-        AlgorithmParameterSpec kdfParameterSpec)\n+        AlgorithmParameterSpec derivationParameterSpec)\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDFSpi.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-            AlgorithmParameterSpec kdfParameterSpec)\n+            AlgorithmParameterSpec derivationParameterSpec)\n@@ -98,1 +98,1 @@\n-            if (kdfParameterSpec instanceof MyKDFParameterSpec) {\n+            if (derivationParameterSpec instanceof MyKDFParameterSpec) {\n@@ -126,1 +126,1 @@\n-                                            AlgorithmParameterSpec kdfParameterSpec)\n+                                            AlgorithmParameterSpec derivationParameterSpec)\n@@ -132,1 +132,1 @@\n-            AlgorithmParameterSpec kdfParameterSpec)\n+            AlgorithmParameterSpec derivationParameterSpec)\n@@ -137,1 +137,1 @@\n-        protected KDFParameters engineGetKDFParameters(){\n+        protected KDFParameters engineGetParameters(){\n","filename":"test\/jdk\/javax\/crypto\/KDF\/Delayed.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}