{"files":[{"patch":"@@ -235,1 +235,6 @@\n-        return getInstance(algorithm, (KDFParameters) null);\n+        try {\n+            return getInstance(algorithm, (KDFParameters) null);\n+        } catch (InvalidAlgorithmParameterException e) {\n+            throw new NoSuchAlgorithmException(\n+                    \"No implementation found using null KDFParameters\", e);\n+        }\n@@ -324,0 +329,4 @@\n+     * @throws InvalidAlgorithmParameterException\n+     *         if at least one {@code Provider} supports a {@code KDF}\n+     *         implementation for the specified algorithm but none of them\n+     *         support the specified parameters\n@@ -338,1 +347,1 @@\n-            throws NoSuchAlgorithmException {\n+            throws NoSuchAlgorithmException, InvalidAlgorithmParameterException {\n@@ -344,7 +353,3 @@\n-        if (d != null) {\n-            return (t.hasNext() ?\n-                            new KDF(d, t, algorithm, kdfParameters) :\n-                            new KDF(d, algorithm, kdfParameters));\n-        }\n-        throw new NoSuchAlgorithmException(\n-                \"Algorithm \" + algorithm + \" not available\");\n+        return (t.hasNext() ?\n+                        new KDF(d, t, algorithm, kdfParameters) :\n+                        new KDF(d, algorithm, kdfParameters));\n@@ -589,12 +594,17 @@\n-            do {\n-                try {\n-                    Object result = (isDeriveData) ?\n-                                            currOne.spi().engineDeriveData(derivationSpec) :\n-                                            currOne.spi().engineDeriveKey(algorithm,\n-                                                                          derivationSpec);\n-                    \/\/ found a working KDFSpi\n-                    this.theOne = currOne;\n-                    return result;\n-                } catch (Exception e) {\n-                    if (lastException == null) {\n-                        lastException = e;\n+            try {\n+                while (true) {\n+                    try {\n+                        Object result = (isDeriveData) ?\n+                                currOne.spi().engineDeriveData(derivationSpec) :\n+                                currOne.spi().engineDeriveKey(algorithm,\n+                                        derivationSpec);\n+                        \/\/ found a working KDFSpi\n+                        this.theOne = currOne;\n+                        return result;\n+                    } catch (Exception e) {\n+                        if (lastException == null) {\n+                            lastException = e;\n+                        }\n+                        \/\/ try next one if available\n+                        assert serviceIterator != null : \"serviceIterator was null\";\n+                        currOne = getNext(serviceIterator, kdfParameters);\n@@ -602,3 +612,0 @@\n-                    \/\/ try next one if available\n-                    assert serviceIterator != null : \"serviceIterator was null\";\n-                    currOne = getNext(serviceIterator, kdfParameters);\n@@ -606,4 +613,5 @@\n-            } while (currOne != null);\n-            \/\/ no working provider found, fail\n-            if (lastException instanceof InvalidAlgorithmParameterException) {\n-                throw (InvalidAlgorithmParameterException) lastException;\n+            } catch (InvalidAlgorithmParameterException e) {\n+                throw e; \/\/ getNext reached end and have seen IAPE\n+            } catch (NoSuchAlgorithmException e) {\n+                \/\/ getNext reached end without finding an implementation\n+                throw new InvalidAlgorithmParameterException(lastException);\n@@ -612,3 +620,0 @@\n-        throw new InvalidAlgorithmParameterException(\n-                \"No installed provider can successfully perform a derivation \" +\n-                \"with these parameters\");\n@@ -618,1 +623,2 @@\n-                                    KDFParameters kdfParameters) {\n+                                    KDFParameters kdfParameters)\n+            throws NoSuchAlgorithmException, InvalidAlgorithmParameterException {\n@@ -620,0 +626,1 @@\n+        boolean hasOne = false;\n@@ -627,0 +634,1 @@\n+            hasOne = true;\n@@ -652,1 +660,2 @@\n-        return null;\n+        if (hasOne) throw new InvalidAlgorithmParameterException();\n+        else throw new NoSuchAlgorithmException();\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KDF.java","additions":42,"deletions":33,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    @Test(threadPoolSize = 50, invocationCount = 100, timeOut = 100)\n+    @Test(threadPoolSize = 50, invocationCount = 100, timeOut = 150)\n","filename":"test\/jdk\/javax\/crypto\/KDF\/KDFDelayedProviderSyncTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}