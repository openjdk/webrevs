{"files":[{"patch":"@@ -91,0 +91,6 @@\n+ifeq ($(DEBUG_LEVEL), fastdebug)\n+  ifeq ($(call And, $(call isTargetOs, linux) $(call isTargetCpu, aarch64)), true)\n+    DISABLED_WARNINGS_gcc += stringop-overflow\n+  endif\n+endif\n+\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,12 @@\n+ResourceMark::ResourceMark(ResourceArea* area, Thread* thread) :\n+    _impl(area),\n+    _thread(thread),\n+    _previous_resource_mark(nullptr)\n+{\n+  if (_thread != nullptr) {\n+    assert(_thread == Thread::current(), \"not the current thread\");\n+    _previous_resource_mark = _thread->current_resource_mark();\n+    _thread->set_current_resource_mark(this);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/memory\/resourceArea.cpp","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -196,11 +196,1 @@\n-  ResourceMark(ResourceArea* area, Thread* thread) :\n-    _impl(area),\n-    _thread(thread),\n-    _previous_resource_mark(nullptr)\n-  {\n-    if (_thread != nullptr) {\n-      assert(_thread == Thread::current(), \"not the current thread\");\n-      _previous_resource_mark = _thread->current_resource_mark();\n-      _thread->set_current_resource_mark(this);\n-    }\n-  }\n+  ResourceMark(ResourceArea* area, Thread* thread);\n","filename":"src\/hotspot\/share\/memory\/resourceArea.hpp","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"}]}