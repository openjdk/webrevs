{"files":[{"patch":"@@ -3981,1 +3981,1 @@\n-- If the -XX:+AOTClassLinking options *was* used during CDS archive creation, the CDS archive\n+- If the `AOTClassLinking` option (see below) *was* enabled during CDS archive creation, the CDS archive\n@@ -3986,1 +3986,1 @@\n-- If the -XX:+AOTClassLinking options *was not* used during CDS archive creation, the CDS archive\n+- If the `AOTClassLinking` option *was not* enabled during CDS archive creation, the CDS archive\n@@ -4014,4 +4014,4 @@\n-The Ahead-of-Time Cache (AOTCache) is a container introduced in JDK 24 for\n-storing artifacts produced by AOT optimizations. The AOTCache currently contains\n-Java classes and heap objects. The plans is to include other types of artifacts,\n-such as execution profiles and compiled methods, in future JDK releases.\n+The Ahead-of-Time Cache (AOT Cache) is a container introduced in JDK 24 for\n+storing artifacts produced by AOT optimizations. The AOT cache currently contains\n+Java classes and heap objects. In future JDK releases, the AOT cache may contain additional\n+artifacts, such as execution profiles and compiled methods.\n@@ -4019,1 +4019,1 @@\n-An AOTCache is specific to a combination of the following:\n+An AOT cache is specific to a combination of the following:\n@@ -4025,1 +4025,1 @@\n-If any of the above changes, you must recreate the AOTCache.\n+If any of the above changes, you must recreate the AOT cache.\n@@ -4027,1 +4027,1 @@\n-The deployment of the AOTCache is divided into three phases:\n+The deployment of the AOT cache is divided into three phases:\n@@ -4031,1 +4031,1 @@\n-    into the AOTCache. The data are saved in an *AOT Configuration* file.\n+    into the AOT cache. The data are saved in an *AOT Configuration* file.\n@@ -4033,1 +4033,1 @@\n--   **Assembly:** We use the AOT Configuration file to produce an AOTCache.\n+-   **Assembly:** We use the AOT Configuration file to produce an AOT cache.\n@@ -4035,1 +4035,1 @@\n--   **Production:** We execute the application with the AOTCache for better\n+-   **Production:** We execute the application with the AOT cache for better\n@@ -4038,1 +4038,1 @@\n-The AOTCache can be used with the following command-line options:\n+The AOT cache can be used with the following command-line options:\n@@ -4041,1 +4041,1 @@\n-:   Specifies the location of the AOTCache. The standard extension for *cachefile* is `.aot`.\n+:   Specifies the location of the AOT cache. The standard extension for *cachefile* is `.aot`.\n@@ -4053,1 +4053,1 @@\n--   `off`: AOTCache is not used.\n+-   `off`: no AOT cache is used.\n@@ -4066,2 +4066,2 @@\n-     load *cachefile* as the AOTCache. Otherwise, the JVM tries to load\n-     a *default CDS archive* from the JDK installation directory as the AOTCache.\n+     load *cachefile* as the AOT cache. Otherwise, the JVM tries to load\n+     a *default CDS archive* from the JDK installation directory as the AOT cache.\n@@ -4069,1 +4069,1 @@\n-     The loading of an AOTCache can fail for a number of reasons:\n+     The loading of an AOT cache can fail for a number of reasons:\n@@ -4071,1 +4071,1 @@\n-     - You are trying to use the AOTCache with an incompatible application, JDK release,\n+     - You are trying to use the AOT cache with an incompatible application, JDK release,\n@@ -4074,1 +4074,1 @@\n-     - The specified AOTCache file does not exist or is not accessible.\n+     - The specified *cachefile* does not exist or is not accessible.\n@@ -4078,1 +4078,1 @@\n-       Since AOTCache is an optimization feature, there's no guarantee that it will be\n+       Since the AOT cache is an optimization feature, there's no guarantee that it will be\n@@ -4080,2 +4080,2 @@\n-       section **Consistency of training and subsequent runs** for a representitive\n-       list of scenarios that may be incompatible with the AOTCache for JDK 24.\n+       section **Consistency of training and subsequent runs** for a representative\n+       list of scenarios that may be incompatible with the AOT cache for JDK 24.\n@@ -4086,1 +4086,1 @@\n-     When the AOTCache fails to load:\n+     When the AOT cache fails to load:\n@@ -4089,1 +4089,1 @@\n-       AOTCache. This is the recommended mode for production environments, especially\n+       AOT cache. This is the recommended mode for production environments, especially\n@@ -4093,1 +4093,1 @@\n-       benefit from the AOTCache.\n+       benefit from the AOT cache.\n@@ -4097,2 +4097,2 @@\n-       options are compatible with the AOTCache. An alternative is to run your application with\n-       `-XX:AOTMode=auto -Xlog:cds` to see if the AOTCache can be used or not.\n+       options are compatible with the AOT cache. An alternative is to run your application with\n+       `-XX:AOTMode=auto -Xlog:cds` to see if the AOT cache can be used or not.\n@@ -4101,7 +4101,6 @@\n-:   If this options is specified with `-XX:AOTMode=create`, the JVM will perform more\n-    advanced optimizations (such as ahead-of-time resolution of invokedynamic instructions)\n-    when creating the AOTCache. As a result, the appication will see further improvements\n-    in start-up and warm-up performance.\n-\n-    Using `-XX:+AOTClassLinking` will impose further restrictions on command-line options\n-    that can be used in the Production phase. Please see [JEP 483](https:\/\/openjdk.org\/jeps\/483) for a\n+:   If this option is enabled, the JVM will perform more advanced optimizations (such\n+    as ahead-of-time resolution of invokedynamic instructions)\n+    when creating the AOT cache. As a result, the application will see further improvements\n+    in start-up and warm-up performance. However, an AOT cache created with this option\n+    cannot be used when certain command-line parameters are specified in\n+    the Production phase. Please see [JEP 483](https:\/\/openjdk.org\/jeps\/483) for a\n@@ -4110,0 +4109,6 @@\n+    When `-XX:AOTMode` *is used* in the command-line, `AOTClassLinking` is automatically\n+    enabled. To disable it, you must explicitly pass the `-XX:-AOTClassLinking` option.\n+\n+    When `-XX:AOTMode` *is not used* in the command-line,  `AOTClassLinking` is disabled by\n+    default to provide full compatibility with traditional CDS options such as `-Xshare:dump.\n+\n","filename":"src\/java.base\/share\/man\/java.md","additions":40,"deletions":35,"binary":false,"changes":75,"status":"modified"}]}