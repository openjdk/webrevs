{"files":[{"patch":"@@ -332,1 +332,0 @@\n-            ((DirectBuffer)dst).address();\n@@ -393,1 +392,0 @@\n-            ((DirectBuffer)src).address();\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/SimpleAsynchronousFileChannelImpl.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -452,1 +452,1 @@\n-                address = ((DirectBuffer)dst).address() + pos;\n+                address = IOUtil.bufferAddress(dst) + pos;\n@@ -635,1 +635,1 @@\n-                address = ((DirectBuffer)src).address() + pos;\n+                address = IOUtil.bufferAddress(src) + pos;\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WindowsAsynchronousFileChannelImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-        testViewsOfUnsupportedArenas(blah.toPath());\n+        testViewsOfConfinedArenas(blah.toPath());\n@@ -566,2 +566,2 @@\n-    static void testViewsOfUnsupportedArenas(Path file) throws IOException {\n-        System.out.println(\"testViewsOfUnsupportedArenas\");\n+    static void testViewsOfConfinedArenas(Path file) throws IOException {\n+        System.out.println(\"testViewsOfConfinedArenas\");\n@@ -576,3 +576,3 @@\n-            readAll(ch, genUnsupportedBuffer(true), 0L);\n-            throw new RuntimeException(\"IllegalStateException expected\");\n-        } catch (IllegalStateException expected) {\n+            readAll(ch, genConfinedBuffer(), 0L);\n+            throw new RuntimeException(\"IllegalArgumentException expected\");\n+        } catch (IllegalArgumentException expected) {\n@@ -583,17 +583,3 @@\n-            readAll(ch, genUnsupportedBuffer(false), 0L);\n-            throw new RuntimeException(\"UnsupportedOperationException expected\");\n-        } catch (UnsupportedOperationException expected) {\n-            \/\/ ignore\n-        }\n-\n-        try {\n-            writeFully(ch, genUnsupportedBuffer(true), size);\n-            throw new RuntimeException(\"IllegalStateException expected\");\n-        } catch (IllegalStateException expected) {\n-            \/\/ ignore\n-        }\n-\n-        try {\n-            writeFully(ch, genUnsupportedBuffer(false), size);\n-            throw new RuntimeException(\"UnsupportedOperationException expected\");\n-        } catch (UnsupportedOperationException expected) {\n+            writeFully(ch, genConfinedBuffer(), size);\n+            throw new RuntimeException(\"IllegalArgumentException expected\");\n+        } catch (IllegalArgumentException expected) {\n@@ -611,1 +597,1 @@\n-        return switch (rand.nextInt(4)) {\n+        return switch (rand.nextInt(5)) {\n@@ -622,0 +608,3 @@\n+            case 4 -> Arena.ofShared().allocate(buf.length).asByteBuffer()\n+                    .put(buf)\n+                    .flip();\n@@ -626,2 +615,2 @@\n-    \/\/ returns ByteBuffer view of confined or shared arena\n-    static ByteBuffer genUnsupportedBuffer(boolean isConfined) {\n+    \/\/ returns ByteBuffer view of confined arena\n+    static ByteBuffer genConfinedBuffer() {\n@@ -631,1 +620,1 @@\n-        Arena arena = isConfined ? Arena.ofConfined() : Arena.ofShared();\n+        Arena arena = Arena.ofConfined();\n","filename":"test\/jdk\/java\/nio\/channels\/AsynchronousFileChannel\/Basic.java","additions":16,"deletions":27,"binary":false,"changes":43,"status":"modified"}]}