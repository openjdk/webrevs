{"files":[{"patch":"@@ -481,2 +481,2 @@\n-  movptr(boxReg, Address(tmpReg, OM_OFFSET_NO_MONITOR_VALUE_TAG(cxq)));\n-  orptr(boxReg, Address(tmpReg, OM_OFFSET_NO_MONITOR_VALUE_TAG(EntryList)));\n+  movptr(boxReg, Address(tmpReg, OM_OFFSET_NO_MONITOR_VALUE_TAG(EntryList)));\n+  orptr(boxReg, Address(tmpReg, OM_OFFSET_NO_MONITOR_VALUE_TAG(cxq)));\n@@ -810,2 +810,2 @@\n-    movptr(reg_rax, cxq_address);\n-    orptr(reg_rax, EntryList_address);\n+    movptr(reg_rax, EntryList_address);\n+    orptr(reg_rax, cxq_address);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1136,0 +1136,24 @@\n+\/\/ Also note that due to reading the EntryList before cxq we have a benign race.\n+\/\/ Example:\n+\/\/   1. Thread 1 enters the monitor.\n+\/\/   2. Thread 2 tries to enter the monitor, fails, and adds itself to\n+\/\/      cxq, tries again, and eventually parks.\n+\/\/   3. Thread 1 starts exiting the monitor and runs all the\n+\/\/      instructions up to and including reading the EntryList, which\n+\/\/      yields an empty EntryList.\n+\/\/   4. Thread 3 can now enter the monitor, since it is no longer owned.\n+\/\/   5. Thread 3 exits the monitor, and moves cxq to EntryList while\n+\/\/      still holding the lock.\n+\/\/   6. Thread 1 reads cxq, and finds it empty.\n+\/\/   7. Thread 1 now draws the conclusion that there is no thread\n+\/\/      waiting for the monitor, even though thread 2 has waited for the\n+\/\/      monitor since before thread 3 released it.\n+\/\/\n+\/\/ However the successor protocol deals with this just fine. Since thread 3\n+\/\/ managed to enter the monitor, the responsibility of ensuring liveness of\n+\/\/ the monitor becomes the responsibility of thread 3 which will make\n+\/\/ thread 2 the successor and unpark thread 2 before exiting the monitor.\n+\/\/ The race could be removed by reading cxq before EntryList, but it\n+\/\/ would come with an added cost of needing a loadload fence between the\n+\/\/ reads.\n+\/\/\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"}]}