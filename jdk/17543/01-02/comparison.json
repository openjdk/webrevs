{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/java\/security\/Key.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-import java.util.Arrays;\n@@ -49,0 +48,1 @@\n+import java.util.concurrent.locks.ReentrantLock;\n@@ -88,3 +88,8 @@\n-    \/\/ If non-null, encoder is configured for encryption\n-    private Cipher cipher = null;\n-    private final char[] password;\n+    \/\/ Stores the password for an encrypted encoder that isn't setup yet.\n+    private PBEKeySpec keySpec;\n+    \/\/ Stores the key after the encoder is ready to encrypt.  The prevents\n+    \/\/ repeated SecretKeyFactory calls if the encoder is used on multiple keys.\n+    private SecretKey key;\n+    \/\/ Makes SecretKeyFactory generation thread-safe\n+    private final ReentrantLock lock;\n+\n@@ -96,1 +101,1 @@\n-     * @param pwd is the password to generate the Cipher key with.\n+     * @param pbe contains the password spec used for encryption.\n@@ -98,2 +103,3 @@\n-    private PEMEncoder(char[] pwd) {\n-        password = pwd;\n+    private PEMEncoder(PBEKeySpec pbe) {\n+        keySpec = pbe;\n+        lock = new ReentrantLock();\n@@ -166,1 +172,1 @@\n-                if (password != null) {\n+                if (keySpec != null) {\n@@ -234,2 +240,2 @@\n-        char[] pwd = password.clone();\n-        return new PEMEncoder(pwd);\n+        \/\/ PBEKeySpec clones the password\n+        return new PEMEncoder(new PBEKeySpec(password));\n@@ -243,0 +249,1 @@\n+        Cipher cipher;\n@@ -244,12 +251,7 @@\n-        \/\/ Encrypted PKCS8\n-        if (password != null) {\n-            if (privateBytes == null || publicBytes != null) {\n-                throw new IllegalArgumentException(\"Can only encrypt a \" +\n-                    \"PrivateKey.\");\n-            }\n-\n-            \/\/ PBEKeySpec clones the password array\n-            PBEKeySpec spec = new PBEKeySpec(password);\n-            Arrays.fill(password, (char)0x0);\n-\n-            if (cipher == null) {\n+        \/\/ If `spec` is non-null, this is the first time the encrypted encoder\n+        \/\/ has been called.  Generate the SecretKey from the given PBESpec that\n+        \/\/ contains the password and store it in the class variable 'key'\n+        if (keySpec != null) {\n+            \/\/ Locking as this needs to be thread-safe\n+            lock.lock();\n+            if (key == null) {\n@@ -257,4 +259,4 @@\n-                    SecretKeyFactory factory;\n-                    factory = SecretKeyFactory.getInstance(Pem.DEFAULT_ALGO);\n-                    cipher = Cipher.getInstance(Pem.DEFAULT_ALGO);\n-                    cipher.init(Cipher.ENCRYPT_MODE, factory.generateSecret(spec));\n+                    key = SecretKeyFactory.getInstance(Pem.DEFAULT_ALGO).\n+                        generateSecret(keySpec);\n+                    keySpec.clearPassword();\n+                    keySpec = null;\n@@ -264,1 +266,3 @@\n-                        \"valid algorithm.\", e);\n+                        \"valid algorithm.  Operation cannot be performed.\", e);\n+                } finally {\n+                    lock.unlock();\n@@ -266,0 +270,19 @@\n+            } else {\n+                lock.unlock();\n+            }\n+        }\n+\n+        \/\/ If `key` is non-null, this is an encoder ready to encrypt.\n+        if (key != null) {\n+            if (privateBytes == null || publicBytes != null) {\n+                throw new IllegalArgumentException(\"Can only encrypt a \" +\n+                    \"PrivateKey.\");\n+            }\n+\n+            try {\n+                cipher = Cipher.getInstance(Pem.DEFAULT_ALGO);\n+                cipher.init(Cipher.ENCRYPT_MODE, key);\n+            } catch (GeneralSecurityException e) {\n+                throw new SecurityException(\"Security property \" +\n+                    \"\\\"jdk.epkcs8.defaultAlgorithm\\\" may not specify a \" +\n+                    \"valid algorithm.  Operation cannot be performed.\", e);\n@@ -270,0 +293,1 @@\n+\n@@ -272,0 +296,2 @@\n+                return pemEncoded(new PEMRecord(PEMRecord.ENCRYPTED_PRIVATE_KEY,\n+                    DerValue.wrap(DerValue.tag_Sequence, out).toByteArray()));\n@@ -275,3 +301,0 @@\n-\n-            return pemEncoded(new PEMRecord(PEMRecord.ENCRYPTED_PRIVATE_KEY,\n-                DerValue.wrap(DerValue.tag_Sequence, out).toByteArray()));\n","filename":"src\/java.base\/share\/classes\/java\/security\/PEMEncoder.java","additions":53,"deletions":30,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/CRL.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/Certificate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.security.DEREncodable;\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/EncodedKeySpec.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2013, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/KeySpec.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/PKCS8EncodedKeySpec.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/java\/security\/spec\/X509EncodedKeySpec.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    \/\/ In all other cases, algid is non null and params is null.\n+    \/\/ In all other cases, algid is non-null and params is null.\n@@ -318,1 +318,1 @@\n-     * algorithm must be specified.  AlgorithmParameterSpec,\n+     * (PBE) algorithm must be specified.  AlgorithmParameterSpec,\n@@ -322,0 +322,5 @@\n+     * <p>\n+     * The PBE algorithm string format details can be found in the\n+     * <a href=\"{@docRoot}\/..\/specs\/security\/standard-names.html#cipher-algorithms\">\n+     * Cipher section<\/a> of the Java Security Standard Algorithm Names\n+     * Specification.\n@@ -399,0 +404,5 @@\n+        if (Pem.DEFAULT_ALGO == null || Pem.DEFAULT_ALGO.length() == 0) {\n+            throw new SecurityException(\"Security property \" +\n+                \"\\\"jdk.epkcs8.defaultAlgorithm\\\" may not specify a \" +\n+                \"valid algorithm.  Operation cannot be performed.\");\n+        }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/EncryptedPrivateKeyInfo.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,4 +29,1 @@\n-import sun.security.util.DerInputStream;\n-import sun.security.util.DerOutputStream;\n-import sun.security.util.DerValue;\n-import sun.security.util.InternalPrivateKey;\n+import sun.security.util.*;\n@@ -42,0 +39,1 @@\n+import java.util.Optional;\n@@ -145,6 +143,5 @@\n-            \/\/ Uses 0xA0 constructed define-length\n-            var result = val.data.getOptionalConstructed(0,\n-                DerValue.tag_Sequence);\n-            if (result.isPresent()) {\n-                attributes = new DerInputStream(result.get().getDataBytes()).\n-                    toByteArray();\n+            \/\/ Uses 0xA0 constructed define-length or 0x80 constructed\n+            \/\/ indefinite.\n+            DerValue v = val.data.getDerValue();\n+            if (v.isContextSpecific((byte)0)) {\n+                attributes = v.getDataBytes();  \/\/ Save DER sequence\n@@ -154,0 +151,1 @@\n+                v = val.data.getDerValue();\n@@ -158,4 +156,2 @@\n-                result = val.data.getOptionalImplicitContextSpecific(1,\n-                    DerValue.tag_BitString);\n-                if (result.isPresent()) {\n-                    \/\/ Store public key material for later parsing\n+                if (v.isContextSpecific((byte)1)) {\n+                    DerValue bits = v.withTag(DerValue.tag_BitString);\n@@ -163,1 +159,3 @@\n-                        result.get().getUnalignedBitString()).getEncoded();\n+                        bits.getUnalignedBitString()).getEncoded();\n+                } else {\n+                    throw new InvalidKeyException(\"Invalid context tag\");\n@@ -194,1 +192,2 @@\n-    public static PrivateKey parseKey(byte[] encoded) throws InvalidKeyException {\n+    public static PrivateKey parseKey(byte[] encoded)\n+        throws InvalidKeyException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS8Key.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -412,22 +412,0 @@\n-\n-    \/**\n-     * Returns the restored DerValue if the next DerValue is\n-     * an constructed define-length value tagged by {@code n}.\n-     *\n-     * @param n the expected tag\n-     * @param tag the real tag for the IMPLICIT type\n-     * @return the restored DerValue, or empty if not found or stream at end\n-     * @throws IOException if an I\/O error happens\n-     *\/\n-\n-    public Optional<DerValue> getOptionalConstructed(int n, byte tag)\n-        throws IOException {\n-        if (checkNextTag(t -> (t & 0x0c0) == 0x080 && (t & 0x020) == 0x020 &&\n-            (t & 0x01f) == n)) {\n-            DerValue v = getDerValue(); \/\/ [n]\n-            \/\/ restore tag because IMPLICIT has overwritten it\n-            return Optional.of(v.withTag(tag));\n-        } else {\n-            return Optional.empty();\n-        }\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerInputStream.java","additions":0,"deletions":22,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.security.AccessController;\n@@ -33,0 +34,1 @@\n+import java.security.PrivilegedAction;\n@@ -47,1 +49,5 @@\n-        DEFAULT_ALGO = Security.getProperty(\"jdk.epkcs8.defaultAlgorithm\");\n+        @SuppressWarnings(\"removal\")\n+        String d = AccessController.doPrivileged(\n+            (PrivilegedAction<String>) () ->\n+                Security.getProperty(\"jdk.epkcs8.defaultAlgorithm\"));\n+        DEFAULT_ALGO = d;\n@@ -56,1 +62,0 @@\n-     * @throws java.io.IOException if input is invalid\n@@ -87,1 +92,4 @@\n-     * base64, and footer\n+     * base64, and footer.\n+     *\n+     * The method will leave the stream after reading the end of line of the\n+     * footer or end of file\n@@ -95,1 +103,1 @@\n-        throws IOException{\n+        throws IOException {\n@@ -99,1 +107,1 @@\n-        int endchar = 0;\n+        int eol = 0;\n@@ -150,1 +158,1 @@\n-            case WS -> {} \/\/ skip char\n+            case WS -> {} \/\/ skip whitespace\n@@ -154,1 +162,1 @@\n-                    endchar = '\\n';\n+                    eol = '\\n';\n@@ -156,1 +164,1 @@\n-                    endchar = '\\r';\n+                    eol = '\\r';\n@@ -160,2 +168,3 @@\n-            case '\\n' -> endchar = '\\n';\n-            default -> sb.append((char) c);\n+            case '\\n' -> eol = '\\n';\n+            default ->\n+                throw new IllegalArgumentException(\"No EOL character found\");\n@@ -170,1 +179,1 @@\n-                case 9, '\\n', '\\r', WS -> {} \/\/ skip char\n+                case WS, '\\t', '\\n', '\\r' -> {} \/\/ skip whitespace, tab, etc\n@@ -213,7 +222,4 @@\n-        if (endchar != 0) {\n-            while ((c = is.read()) != endchar && c != -1 && c != '\\r' &&\n-                c != WS) {\n-                throw new IllegalArgumentException(\"Invalid PEM format:  \" +\n-                    \"No end of line char found in footer:  0x\" +\n-                    HexFormat.of().toHexDigits((byte) c));\n-            }\n+        while ((c = is.read()) != eol && c != -1 && c != '\\r' && c != WS) {\n+            throw new IllegalArgumentException(\"Invalid PEM format:  \" +\n+                \"No EOL char found in footer:  0x\" +\n+                HexFormat.of().toHexDigits((byte) c));\n@@ -229,0 +235,1 @@\n+        \/\/ Verify the object type in the header and the footer are the same.\n@@ -233,1 +240,1 @@\n-                header + \" \" + footer);\n+                headerType + \" \" + footerType);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Pem.java","additions":26,"deletions":19,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -39,5 +39,5 @@\n-        -----BEGIN PRIVATE KEY-----\\\n-        MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgkW3Jx561NlEgBnut\\\n-        KwDdi3cNwu7YYD\/QtJ+9+AEBdoqhRANCAASL+REY4vvAI9M3gonaml5K3lRgHq5w\\\n-        +OO4oO0VNduC44gUN1nrk7\/wdNSpL+xXNEX52Dsff+2RD\/fop224ANvB\\\n-        -----END PRIVATE KEY-----\\\n+        -----BEGIN PRIVATE KEY-----\n+        MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgkW3Jx561NlEgBnut\n+        KwDdi3cNwu7YYD\/QtJ+9+AEBdoqhRANCAASL+REY4vvAI9M3gonaml5K3lRgHq5w\n+        +OO4oO0VNduC44gUN1nrk7\/wdNSpL+xXNEX52Dsff+2RD\/fop224ANvB\n+        -----END PRIVATE KEY-----\n@@ -47,16 +47,16 @@\n-        -----BEGIN PRIVATE KEY-----\\\n-        MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAOtjMnCzPy4jCeZb\\\n-        OdOvmvU3jl7+cvPFgL5MfqDCM5a8yI0yImg\/hzibJJHLk3emUVBSnekgHvCqyGLW\\\n-        3qGR2DuBEaMy0mkg8hfKcSpHLaYjDYaspO27d2qtb6d1qtsPoPjJFjWFYeW6K463\\\n-        OHG654K5\/2FcJgQdlLVyp3zCiQU\/AgMBAAECgYEAwNkDkTv5rlX8nWLuLJV5kh\/T\\\n-        H9a93SRZxw8qy5Bv7bZ7ZNrHP7uUkHbi7iPojKWRhwo43692SdzR0dCSk7LGgN9q\\\n-        CYvndsYR6gifVGBi0WF+St4+NdtcQ3VlNdsojy2BdIx0oC+r7i3bn+zc968O\/kI+\\\n-        EgdgrMcjjFqyx6tMHpECQQD8TYPKGHyN7Jdy28llCoUX\/sL\/yZ2vIi5mnDAFE5ae\\\n-        KZQSkNAXG+8i9Qbs\/Wdd5S3oZDqu+6DBn9gib80pYY05AkEA7tY59Oy8ka7nBlGP\\\n-        g6Wo1usF2bKqk8vjko9ioZQay7f86aB10QFcAjCr+cCUm16Lc9DwzWl02nNggRZa\\\n-        Jz8eNwJBAO+1zfLjFOPa14F\/JHdlaVKE8EwKCFDuztsapd0M4Vtf8Zk6ERsDpU63\\\n-        Ml9T2zOwnM9g+whpdjDAZ59ATdJ1JrECQQDReJQ2SxeL0lGPCiOLu9RcQp7L81aF\\\n-        79G1bgp8WlAyEjlAkloiqEWRKiz7DDuKFR7Lwhognng9S+n87aS+PS57AkBh75t8\\\n-        6onPAs4hkm+63dfzCojvEkALevO8J3OVX7YS5q9J1r75wDn60Ob0Zh+iiorpx8Ob\\\n-        WqcWcoJqfdLEyBT+\\\n-        -----END PRIVATE KEY-----\\\n+        -----BEGIN PRIVATE KEY-----\n+        MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAOtjMnCzPy4jCeZb\n+        OdOvmvU3jl7+cvPFgL5MfqDCM5a8yI0yImg\/hzibJJHLk3emUVBSnekgHvCqyGLW\n+        3qGR2DuBEaMy0mkg8hfKcSpHLaYjDYaspO27d2qtb6d1qtsPoPjJFjWFYeW6K463\n+        OHG654K5\/2FcJgQdlLVyp3zCiQU\/AgMBAAECgYEAwNkDkTv5rlX8nWLuLJV5kh\/T\n+        H9a93SRZxw8qy5Bv7bZ7ZNrHP7uUkHbi7iPojKWRhwo43692SdzR0dCSk7LGgN9q\n+        CYvndsYR6gifVGBi0WF+St4+NdtcQ3VlNdsojy2BdIx0oC+r7i3bn+zc968O\/kI+\n+        EgdgrMcjjFqyx6tMHpECQQD8TYPKGHyN7Jdy28llCoUX\/sL\/yZ2vIi5mnDAFE5ae\n+        KZQSkNAXG+8i9Qbs\/Wdd5S3oZDqu+6DBn9gib80pYY05AkEA7tY59Oy8ka7nBlGP\n+        g6Wo1usF2bKqk8vjko9ioZQay7f86aB10QFcAjCr+cCUm16Lc9DwzWl02nNggRZa\n+        Jz8eNwJBAO+1zfLjFOPa14F\/JHdlaVKE8EwKCFDuztsapd0M4Vtf8Zk6ERsDpU63\n+        Ml9T2zOwnM9g+whpdjDAZ59ATdJ1JrECQQDReJQ2SxeL0lGPCiOLu9RcQp7L81aF\n+        79G1bgp8WlAyEjlAkloiqEWRKiz7DDuKFR7Lwhognng9S+n87aS+PS57AkBh75t8\n+        6onPAs4hkm+63dfzCojvEkALevO8J3OVX7YS5q9J1r75wDn60Ob0Zh+iiorpx8Ob\n+        WqcWcoJqfdLEyBT+\n+        -----END PRIVATE KEY-----\n@@ -66,16 +66,16 @@\n-        -----BEGIN PRIVATE KEY-----\\\n-        MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAOtjMnCzPy4jCeZb\\\n-        OdOvmvU3jl7+cvPFgL5MfqDCM5a8yI0yImg\/hzibJJHLk3emUVBSnekgHvCqyGLW\\\n-        3qGR2DuBEaMy0mkg8hfKcSpHLaYjDYaspO27d2qtb6d1qtsPoPjJFjWFYeW6K463\\\n-        OHG654K5\/2FcJgQdlLVyp3zCiQU\/AgMBAAECgYEAwNkDkTv5rlX8nWLuLJV5kh\/T\\\n-        H9a93SRZxw8qy5Bv7bZ7ZNrHP7uUkHbi7iPojKWRhwo43692SdzR0dCSk7LGgN9q\\\n-        CYvndsYR6gifVGBi0WF+St4+NdtcQ3VlNdsojy2BdIx0oC+r7i3bn+zc968O\/kI+\\\n-        EgdgrMcjjFqyx6tMHpECQQD8TYPKGHyN7Jdy28llCoUX\/sL\/yZ2vIi5mnDAFE5ae\\\n-        KZQSkNAXG+8i9Qbs\/Wdd5S3oZDqu+6DBn9gib80pYY05AkEA7tY59Oy8ka7nBlGP\\\n-        g6Wo1usF2bKqk8vjko9ioZQay7f86aB10QFcAjCr+cCUm16Lc9DwzWl02nNggRZa\\\n-        Jz8eNwJBAO+1zfLjFOPa14F\/JHdlaVKE8EwKCFDuztsapd0M4Vtf8Zk6ERsDpU63\\\n-        Ml9T2zOwnM9g+whpdjDAZ59ATdJ1JrECQQDReJQ2SxeL0lGPCiOLu9RcQp7L81aF\\\n-        79G1bgp8WlAyEjlAkloiqEWRKiz7DDuKFR7Lwhognng9S+n87aS+PS57AkBh75t8\\\n-        6onPAs4hkm+63dfzCojvEkALevO8J3OVX7YS5q9J1r75wDn60Ob0Zh+iiorpx8Ob\\\n-        WqcWcoJqfdLEyBT+\\\n-        -----END PRIVATE KEY-----\\\n+        -----BEGIN PRIVATE KEY-----\n+        MIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAOtjMnCzPy4jCeZb\n+        OdOvmvU3jl7+cvPFgL5MfqDCM5a8yI0yImg\/hzibJJHLk3emUVBSnekgHvCqyGLW\n+        3qGR2DuBEaMy0mkg8hfKcSpHLaYjDYaspO27d2qtb6d1qtsPoPjJFjWFYeW6K463\n+        OHG654K5\/2FcJgQdlLVyp3zCiQU\/AgMBAAECgYEAwNkDkTv5rlX8nWLuLJV5kh\/T\n+        H9a93SRZxw8qy5Bv7bZ7ZNrHP7uUkHbi7iPojKWRhwo43692SdzR0dCSk7LGgN9q\n+        CYvndsYR6gifVGBi0WF+St4+NdtcQ3VlNdsojy2BdIx0oC+r7i3bn+zc968O\/kI+\n+        EgdgrMcjjFqyx6tMHpECQQD8TYPKGHyN7Jdy28llCoUX\/sL\/yZ2vIi5mnDAFE5ae\n+        KZQSkNAXG+8i9Qbs\/Wdd5S3oZDqu+6DBn9gib80pYY05AkEA7tY59Oy8ka7nBlGP\n+        g6Wo1usF2bKqk8vjko9ioZQay7f86aB10QFcAjCr+cCUm16Lc9DwzWl02nNggRZa\n+        Jz8eNwJBAO+1zfLjFOPa14F\/JHdlaVKE8EwKCFDuztsapd0M4Vtf8Zk6ERsDpU63\n+        Ml9T2zOwnM9g+whpdjDAZ59ATdJ1JrECQQDReJQ2SxeL0lGPCiOLu9RcQp7L81aF\n+        79G1bgp8WlAyEjlAkloiqEWRKiz7DDuKFR7Lwhognng9S+n87aS+PS57AkBh75t8\n+        6onPAs4hkm+63dfzCojvEkALevO8J3OVX7YS5q9J1r75wDn60Ob0Zh+iiorpx8Ob\n+        WqcWcoJqfdLEyBT+\n+        -----END PRIVATE KEY-----\n@@ -85,3 +85,3 @@\n-        -----BEGIN PRIVATE KEY-----\\\n-        MC4CAQAwBQYDK2VwBCIEIFFZsmD+OKk67Cigc84\/2fWtlKsvXWLSoMJ0MHh4jI4I\\\n-        -----END PRIVATE KEY-----\\\n+        -----BEGIN PRIVATE KEY-----\n+        MC4CAQAwBQYDK2VwBCIEIFFZsmD+OKk67Cigc84\/2fWtlKsvXWLSoMJ0MHh4jI4I\n+        -----END PRIVATE KEY-----\n@@ -91,6 +91,6 @@\n-        -----BEGIN PUBLIC KEY-----\\\n-        MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDrYzJwsz8uIwnmWznTr5r1N45e\\\n-        \/nLzxYC+TH6gwjOWvMiNMiJoP4c4mySRy5N3plFQUp3pIB7wqshi1t6hkdg7gRGj\\\n-        MtJpIPIXynEqRy2mIw2GrKTtu3dqrW+ndarbD6D4yRY1hWHluiuOtzhxuueCuf9h\\\n-        XCYEHZS1cqd8wokFPwIDAQAB\\\n-        -----END PUBLIC KEY-----\\\n+        -----BEGIN PUBLIC KEY-----\n+        MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDrYzJwsz8uIwnmWznTr5r1N45e\n+        \/nLzxYC+TH6gwjOWvMiNMiJoP4c4mySRy5N3plFQUp3pIB7wqshi1t6hkdg7gRGj\n+        MtJpIPIXynEqRy2mIw2GrKTtu3dqrW+ndarbD6D4yRY1hWHluiuOtzhxuueCuf9h\n+        XCYEHZS1cqd8wokFPwIDAQAB\n+        -----END PUBLIC KEY-----\n@@ -100,6 +100,6 @@\n-        -----BEGIN PUBLIC KEY-----\\\n-        MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDrYzJwsz8uIwnmWznTr5r1N45e\\\n-        \/nLzxYC+TH6gwjOWvMiNMiJoP4c4mySRy5N3plFQUp3pIB7wqshi1t6hkdg7gRGj\\\n-        MtJpIPIXynEqRy2mIw2GrKTtu3dqrW+ndarbD6D4yRY1hWHluiuOtzhxuueCuf9h\\\n-        XCYEHZS1cqd8wokFPwIDAQAB\\\n-        -----END PUBLIC KEY-----\\\n+        -----BEGIN PUBLIC KEY-----\n+        MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDrYzJwsz8uIwnmWznTr5r1N45e\n+        \/nLzxYC+TH6gwjOWvMiNMiJoP4c4mySRy5N3plFQUp3pIB7wqshi1t6hkdg7gRGj\n+        MtJpIPIXynEqRy2mIw2GrKTtu3dqrW+ndarbD6D4yRY1hWHluiuOtzhxuueCuf9h\n+        XCYEHZS1cqd8wokFPwIDAQAB\n+        -----END PUBLIC KEY-----\n@@ -108,13 +108,6 @@\n-    public static final String pubrsaold =\n-        \"-----BEGIN PUBLIC KEY-----\\n\" +\n-            \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDrYzJwsz8uIwnmWznTr5r1N45e\\n\" +\n-            \"\/nLzxYC+TH6gwjOWvMiNMiJoP4c4mySRy5N3plFQUp3pIB7wqshi1t6hkdg7gRGj\\n\" +\n-            \"MtJpIPIXynEqRy2mIw2GrKTtu3dqrW+ndarbD6D4yRY1hWHluiuOtzhxuueCuf9h\\n\" +\n-            \"XCYEHZS1cqd8wokFPwIDAQAB\\n\" +\n-            \"-----END PUBLIC KEY-----\\n\";\n-\n-    public static final String pubecpem =\n-        \"-----BEGIN PUBLIC KEY-----\\r\\n\" +\n-            \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEi\/kRGOL7wCPTN4KJ2ppeSt5UYB6u\\r\\n\" +\n-            \"cPjjuKDtFTXbguOIFDdZ65O\/8HTUqS\/sVzRF+dg7H3\/tkQ\/36KdtuADbwQ==\\r\\n\" +\n-            \"-----END PUBLIC KEY-----\\r\\n\";\n+    public static final String pubecpem = \"\"\"\n+        -----BEGIN PUBLIC KEY-----\n+        MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEi\/kRGOL7wCPTN4KJ2ppeSt5UYB6u\n+        cPjjuKDtFTXbguOIFDdZ65O\/8HTUqS\/sVzRF+dg7H3\/tkQ\/36KdtuADbwQ==\n+        -----END PUBLIC KEY-----\n+        \"\"\";\n@@ -124,9 +117,9 @@\n-        -----BEGIN PUBLIC KEY-----\\\n-        MIIBSzCCAQMGByqGSM49AgEwgfcCAQEwLAYHKoZIzj0BAQIhAP\/\/\/\/8AAAABAAAA\\\n-        AAAAAAAAAAAA\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/MFsEIP\/\/\/\/8AAAABAAAAAAAAAAAAAAAA\/\/\/\/\\\n-        \/\/\/\/\/\/\/\/\/\/\/8BCBaxjXYqjqT57PrvVV2mIa8ZR0GsMxTsPY7zjw+J9JgSwMVAMSd\\\n-        NgiG5wSTamZ44ROdJreBn36QBEEEaxfR8uEsQkf4vOblY6RA8ncDfYEt6zOg9KE5\\\n-        RdiYwpZP40Li\/hp\/m47n60p8D54WK84zV2sxXs7LtkBoN79R9QIhAP\/\/\/\/8AAAAA\\\n-        \/\/\/\/\/\/\/\/\/\/+85vqtpxeehPO5ysL8YyVRAgEBA0IABIv5ERji+8Aj0zeCidqaXkre\\\n-        VGAernD447ig7RU124LjiBQ3WeuTv\/B01Kkv7Fc0RfnYOx9\/7ZEP9+inbbgA28E=\\\n-        -----END PUBLIC KEY-----\\\n+        -----BEGIN PUBLIC KEY-----\n+        MIIBSzCCAQMGByqGSM49AgEwgfcCAQEwLAYHKoZIzj0BAQIhAP\/\/\/\/8AAAABAAAA\n+        AAAAAAAAAAAA\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/MFsEIP\/\/\/\/8AAAABAAAAAAAAAAAAAAAA\/\/\/\/\n+        \/\/\/\/\/\/\/\/\/\/\/8BCBaxjXYqjqT57PrvVV2mIa8ZR0GsMxTsPY7zjw+J9JgSwMVAMSd\n+        NgiG5wSTamZ44ROdJreBn36QBEEEaxfR8uEsQkf4vOblY6RA8ncDfYEt6zOg9KE5\n+        RdiYwpZP40Li\/hp\/m47n60p8D54WK84zV2sxXs7LtkBoN79R9QIhAP\/\/\/\/8AAAAA\n+        \/\/\/\/\/\/\/\/\/\/+85vqtpxeehPO5ysL8YyVRAgEBA0IABIv5ERji+8Aj0zeCidqaXkre\n+        VGAernD447ig7RU124LjiBQ3WeuTv\/B01Kkv7Fc0RfnYOx9\/7ZEP9+inbbgA28E=\n+        -----END PUBLIC KEY-----\n@@ -136,16 +129,16 @@\n-        -----BEGIN PRIVATE KEY-----\\n\\\n-        MIIDCAIBATANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAOtjMnCzPy4jCeZbOdOvmvU3jl7+\\n\\\n-        cvPFgL5MfqDCM5a8yI0yImg\/hzibJJHLk3emUVBSnekgHvCqyGLW3qGR2DuBEaMy0mkg8hfKcSpH\\n\\\n-        LaYjDYaspO27d2qtb6d1qtsPoPjJFjWFYeW6K463OHG654K5\/2FcJgQdlLVyp3zCiQU\/AgMBAAEC\\n\\\n-        gYEAwNkDkTv5rlX8nWLuLJV5kh\/TH9a93SRZxw8qy5Bv7bZ7ZNrHP7uUkHbi7iPojKWRhwo43692\\n\\\n-        SdzR0dCSk7LGgN9qCYvndsYR6gifVGBi0WF+St4+NdtcQ3VlNdsojy2BdIx0oC+r7i3bn+zc968O\\n\\\n-        \/kI+EgdgrMcjjFqyx6tMHpECQQD8TYPKGHyN7Jdy28llCoUX\/sL\/yZ2vIi5mnDAFE5aeKZQSkNAX\\n\\\n-        G+8i9Qbs\/Wdd5S3oZDqu+6DBn9gib80pYY05AkEA7tY59Oy8ka7nBlGPg6Wo1usF2bKqk8vjko9i\\n\\\n-        oZQay7f86aB10QFcAjCr+cCUm16Lc9DwzWl02nNggRZaJz8eNwJBAO+1zfLjFOPa14F\/JHdlaVKE\\n\\\n-        8EwKCFDuztsapd0M4Vtf8Zk6ERsDpU63Ml9T2zOwnM9g+whpdjDAZ59ATdJ1JrECQQDReJQ2SxeL\\n\\\n-        0lGPCiOLu9RcQp7L81aF79G1bgp8WlAyEjlAkloiqEWRKiz7DDuKFR7Lwhognng9S+n87aS+PS57\\n\\\n-        AkBh75t86onPAs4hkm+63dfzCojvEkALevO8J3OVX7YS5q9J1r75wDn60Ob0Zh+iiorpx8ObWqcW\\n\\\n-        coJqfdLEyBT+gYGNADCBiQKBgQDrYzJwsz8uIwnmWznTr5r1N45e\/nLzxYC+TH6gwjOWvMiNMiJo\\n\\\n-        P4c4mySRy5N3plFQUp3pIB7wqshi1t6hkdg7gRGjMtJpIPIXynEqRy2mIw2GrKTtu3dqrW+ndarb\\n\\\n-        D6D4yRY1hWHluiuOtzhxuueCuf9hXCYEHZS1cqd8wokFPwIDAQAB\\\n-        -----END PRIVATE KEY-----\\n\n+        -----BEGIN PRIVATE KEY-----\n+        MIIDCAIBATANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAOtjMnCzPy4jCeZbOdOvmvU3jl7+\n+        cvPFgL5MfqDCM5a8yI0yImg\/hzibJJHLk3emUVBSnekgHvCqyGLW3qGR2DuBEaMy0mkg8hfKcSpH\n+        LaYjDYaspO27d2qtb6d1qtsPoPjJFjWFYeW6K463OHG654K5\/2FcJgQdlLVyp3zCiQU\/AgMBAAEC\n+        gYEAwNkDkTv5rlX8nWLuLJV5kh\/TH9a93SRZxw8qy5Bv7bZ7ZNrHP7uUkHbi7iPojKWRhwo43692\n+        SdzR0dCSk7LGgN9qCYvndsYR6gifVGBi0WF+St4+NdtcQ3VlNdsojy2BdIx0oC+r7i3bn+zc968O\n+        \/kI+EgdgrMcjjFqyx6tMHpECQQD8TYPKGHyN7Jdy28llCoUX\/sL\/yZ2vIi5mnDAFE5aeKZQSkNAX\n+        G+8i9Qbs\/Wdd5S3oZDqu+6DBn9gib80pYY05AkEA7tY59Oy8ka7nBlGPg6Wo1usF2bKqk8vjko9i\n+        oZQay7f86aB10QFcAjCr+cCUm16Lc9DwzWl02nNggRZaJz8eNwJBAO+1zfLjFOPa14F\/JHdlaVKE\n+        8EwKCFDuztsapd0M4Vtf8Zk6ERsDpU63Ml9T2zOwnM9g+whpdjDAZ59ATdJ1JrECQQDReJQ2SxeL\n+        0lGPCiOLu9RcQp7L81aF79G1bgp8WlAyEjlAkloiqEWRKiz7DDuKFR7Lwhognng9S+n87aS+PS57\n+        AkBh75t86onPAs4hkm+63dfzCojvEkALevO8J3OVX7YS5q9J1r75wDn60Ob0Zh+iiorpx8ObWqcW\n+        coJqfdLEyBT+gYGNADCBiQKBgQDrYzJwsz8uIwnmWznTr5r1N45e\/nLzxYC+TH6gwjOWvMiNMiJo\n+        P4c4mySRy5N3plFQUp3pIB7wqshi1t6hkdg7gRGjMtJpIPIXynEqRy2mIw2GrKTtu3dqrW+ndarb\n+        D6D4yRY1hWHluiuOtzhxuueCuf9hXCYEHZS1cqd8wokFPwIDAQAB\n+        -----END PRIVATE KEY-----\n@@ -155,5 +148,5 @@\n-        -----BEGIN PRIVATE KEY-----\\\n-        MHICAQEwBQYDK2VwBCIEINTuctv5E1hK1bbY8fdp+K06\/nwoy\/HU++CXqI9EdVhC\\\n-        oB8wHQYKKoZIhvcNAQkJFDEPDA1DdXJkbGUgQ2hhaXJzgSEAGb9ECWmEzf6FQbrB\\\n-        Z9w7lshQhqowtrbLDFw4rXAxZuE=\\\n-        -----END PRIVATE KEY-----\\\n+        -----BEGIN PRIVATE KEY-----\n+        MHICAQEwBQYDK2VwBCIEINTuctv5E1hK1bbY8fdp+K06\/nwoy\/HU++CXqI9EdVhC\n+        oB8wHQYKKoZIhvcNAQkJFDEPDA1DdXJkbGUgQ2hhaXJzgSEAGb9ECWmEzf6FQbrB\n+        Z9w7lshQhqowtrbLDFw4rXAxZuE=\n+        -----END PRIVATE KEY-----\n@@ -163,27 +156,27 @@\n-        -----BEGIN RSA PRIVATE KEY-----\\\n-        MIIEowIBAAKCAQEAqozTLan1qFcOCWnS63jXQn5lLyGOKDv3GM11n2zkGGrChayj\\\n-        cSzB2KTlDmN9NgOyFdqGNWbSgdmXR5ToHGHYwaKubJoQIoPQcsipWDI156d3+X\/8\\\n-        BxCGY8l5nYwvS4olOXc+2kEjeFF1eamnm9IQ5DHZfaFPl0ri4Yfm1YHBAbt\/7HvF\\\n-        3MBjgBj1xSsSFLW4O6ws6guRVGDfKBVyyRNUhRTbSua\/nEz0wAjxF2PWT+ZTHS6M\\\n-        0siYwVTuPI4\/n4ItoYoahvGb9JskkXP+bc\/QZJCTFYdyxF5tKqVMSdYaJTxop02p\\\n-        Jo3oeafVKSlBrr0K731xgNBKqBud44aKT5R96QIDAQABAoIBAQCD9Q\/T7gOvayPm\\\n-        LqXOISJURV1emRTXloX5\/8Y5QtQ8\/CVjrg6Lm3ikefjsKBgR+cwJUpmyqcrIQyXk\\\n-        cZchlqdSMt\/IEW\/YdKqMlStJnRfOE+ok9lx2ztdcT9+0AWn6hXmFu\/i6f9nE1yoQ\\\n-        py6SxnbhSJyhsnTVd1CR9Uep\/InsHvYW\/15WlVMD1VuCSIt9sefqXwavbAfBaqbn\\\n-        mjwBB\/ulsqKhHSuRq\/QWqlj+jyGqhhYmTguC1Qwt0woDbThiHtK+suCTAlGBj\/A+\\\n-        IZ1U9d+VsHBcWDKBkxmlKWcJAGR3xXiKKy9vfzC+DU7L99kgay80VZarDyXgiy78\\\n-        9xMMzRMBAoGBANoxnZhu1bUFtLqTJ1HfDm6UB+1zVd2Mu4DXYdy\/AHjoaCLp05OQ\\\n-        0ZeyhO\/eXPT+eGpzCxkWD7465KO\/QDfnp54p\/NS73jaJVdWQHBhzJx1MymqURy3N\\\n-        JQeW4+ojzwSmVXcrs7Og6EBa4L+PWLpMLW2kODniCY+vp9f5LS6m8UPJAoGBAMgZ\\\n-        4rBw7B9YFZZW\/EE4eos4Q7KtA5tEP6wvCq04oxfiSytWXifYX0ToPp0CHhZlWOxk\\\n-        v9a\/BDGqM7AxAQJs7mmIvT5AT2V1w7oTbFPnnAo6pQtLcfaxdFFqr0h6t0sXSOKC\\\n-        rQeZAqqFqwuOyP7vT0goGlBruHkwS21NKkzCyzkhAoGAc2JjhbWu+8Cdt0CUPX5o\\\n-        ol9T5eTlFnkSuuqrTNIQzN+SGkxu341o2QDFvhdoLwLW6OwXhVeeUanROSqtKiMu\\\n-        B70Kf\/EtbMephXtk8CUNHTh7nmr1TSo8F8xakHoJQts3PQL2T9qal1W3nnWOpU4d\\\n-        g+qg9TMsfTiV2OdjVlVgJskCgYBSnjV1qjojuue22hVvDFW0c7en5z2M9wHfItEi\\\n-        sjbMnrdwnklj5Dd5qPZpNz2a+59ag0Kd9OJTazXKMoF7MeTCGB4ivMTLXHNCudBJ\\\n-        WGCZ7JrGbhEQzTX8g7L5lwlk7KlANLoiX++03lm\/\/OVKNR6j6ULsH33cM6+A4pJr\\\n-        fSYRYQKBgCr9iMTmL0x+n6AmMNecR+MhDxi99Oy0s2EBAYqN9g\/8yNgwM4KR0cjz\\\n-        EcgIOtkvoTrJ9Cquvuj+O7\/d2yNoH0SZQ4IYJKq47\/Z4kKhwXzJnBCCCBKgkjfub\\\n-        RTQSNnSEgTaBD29l7FrhNRHX9lIKFZ23caCTBS6o3q3+KgPbq7ao\\\n-        -----END RSA PRIVATE KEY-----\\\n+        -----BEGIN RSA PRIVATE KEY-----\n+        MIIEowIBAAKCAQEAqozTLan1qFcOCWnS63jXQn5lLyGOKDv3GM11n2zkGGrChayj\n+        cSzB2KTlDmN9NgOyFdqGNWbSgdmXR5ToHGHYwaKubJoQIoPQcsipWDI156d3+X\/8\n+        BxCGY8l5nYwvS4olOXc+2kEjeFF1eamnm9IQ5DHZfaFPl0ri4Yfm1YHBAbt\/7HvF\n+        3MBjgBj1xSsSFLW4O6ws6guRVGDfKBVyyRNUhRTbSua\/nEz0wAjxF2PWT+ZTHS6M\n+        0siYwVTuPI4\/n4ItoYoahvGb9JskkXP+bc\/QZJCTFYdyxF5tKqVMSdYaJTxop02p\n+        Jo3oeafVKSlBrr0K731xgNBKqBud44aKT5R96QIDAQABAoIBAQCD9Q\/T7gOvayPm\n+        LqXOISJURV1emRTXloX5\/8Y5QtQ8\/CVjrg6Lm3ikefjsKBgR+cwJUpmyqcrIQyXk\n+        cZchlqdSMt\/IEW\/YdKqMlStJnRfOE+ok9lx2ztdcT9+0AWn6hXmFu\/i6f9nE1yoQ\n+        py6SxnbhSJyhsnTVd1CR9Uep\/InsHvYW\/15WlVMD1VuCSIt9sefqXwavbAfBaqbn\n+        mjwBB\/ulsqKhHSuRq\/QWqlj+jyGqhhYmTguC1Qwt0woDbThiHtK+suCTAlGBj\/A+\n+        IZ1U9d+VsHBcWDKBkxmlKWcJAGR3xXiKKy9vfzC+DU7L99kgay80VZarDyXgiy78\n+        9xMMzRMBAoGBANoxnZhu1bUFtLqTJ1HfDm6UB+1zVd2Mu4DXYdy\/AHjoaCLp05OQ\n+        0ZeyhO\/eXPT+eGpzCxkWD7465KO\/QDfnp54p\/NS73jaJVdWQHBhzJx1MymqURy3N\n+        JQeW4+ojzwSmVXcrs7Og6EBa4L+PWLpMLW2kODniCY+vp9f5LS6m8UPJAoGBAMgZ\n+        4rBw7B9YFZZW\/EE4eos4Q7KtA5tEP6wvCq04oxfiSytWXifYX0ToPp0CHhZlWOxk\n+        v9a\/BDGqM7AxAQJs7mmIvT5AT2V1w7oTbFPnnAo6pQtLcfaxdFFqr0h6t0sXSOKC\n+        rQeZAqqFqwuOyP7vT0goGlBruHkwS21NKkzCyzkhAoGAc2JjhbWu+8Cdt0CUPX5o\n+        ol9T5eTlFnkSuuqrTNIQzN+SGkxu341o2QDFvhdoLwLW6OwXhVeeUanROSqtKiMu\n+        B70Kf\/EtbMephXtk8CUNHTh7nmr1TSo8F8xakHoJQts3PQL2T9qal1W3nnWOpU4d\n+        g+qg9TMsfTiV2OdjVlVgJskCgYBSnjV1qjojuue22hVvDFW0c7en5z2M9wHfItEi\n+        sjbMnrdwnklj5Dd5qPZpNz2a+59ag0Kd9OJTazXKMoF7MeTCGB4ivMTLXHNCudBJ\n+        WGCZ7JrGbhEQzTX8g7L5lwlk7KlANLoiX++03lm\/\/OVKNR6j6ULsH33cM6+A4pJr\n+        fSYRYQKBgCr9iMTmL0x+n6AmMNecR+MhDxi99Oy0s2EBAYqN9g\/8yNgwM4KR0cjz\n+        EcgIOtkvoTrJ9Cquvuj+O7\/d2yNoH0SZQ4IYJKq47\/Z4kKhwXzJnBCCCBKgkjfub\n+        RTQSNnSEgTaBD29l7FrhNRHX9lIKFZ23caCTBS6o3q3+KgPbq7ao\n+        -----END RSA PRIVATE KEY-----\n@@ -268,2 +261,0 @@\n-\n-\n@@ -286,1 +277,1 @@\n-        return Pattern.compile(\"\/n\").matcher(pem).replaceAll(\"\/r\/n\");\n+        return Pattern.compile(System.lineSeparator()).matcher(pem).replaceAll(\"\\r\\n\");\n@@ -290,1 +281,1 @@\n-        return Pattern.compile(\"\/n\").matcher(pem).replaceAll(\"\/r\");\n+        return Pattern.compile(System.lineSeparator()).matcher(pem).replaceAll(\"\\r\");\n@@ -294,1 +285,1 @@\n-        return Pattern.compile(\"\/n\").matcher(pem).replaceAll(\"\");\n+        return Pattern.compile(System.lineSeparator()).matcher(pem).replaceAll(\"\");\n@@ -310,1 +301,1 @@\n-        pubList.add(new Entry(\"pubecpem-no\", makeNoCRLF(pubecpem), ECPublicKey.class, null));\n+        \/\/pubList.add(new Entry(\"pubecpem-no\", makeNoCRLF(pubecpem), ECPublicKey.class, null));\n","filename":"test\/jdk\/java\/security\/PEM\/PEMCerts.java","additions":119,"deletions":128,"binary":false,"changes":247,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-\/\/        test(new PEMCerts.Entry(\"oasrfc8410\", PEMCerts.oasrfc8410, PrivateKey.class, null));\n@@ -77,0 +76,3 @@\n+        testFailure(new PEMCerts.Entry(\"pubecpem-no\",\n+            PEMCerts.makeNoCRLF(PEMCerts.pubecpem), PublicKey.class,\n+            null));\n","filename":"test\/jdk\/java\/security\/PEM\/PEMDecoderTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,0 +74,3 @@\n+        System.out.println(\"Same instance encrypted Encoder test:\");\n+        PEMEncoder encEncoder = encoder.withEncryption(\"fish\".toCharArray());\n+        keymap.keySet().stream().forEach(key -> testSameEncryptor(key, encEncoder));\n@@ -136,2 +139,2 @@\n-                (entry.password() != null ? entry.password() :\n-                    \"fish\".toCharArray()))\n+                    (entry.password() != null ? entry.password() :\n+                        \"fish\".toCharArray()))\n@@ -146,0 +149,15 @@\n+    \/*\n+     Test cannot verify PEM was the same as known PEM because we have no\n+     public access to the AlgoritmID.params and PBES2Parameters.\n+     *\/\n+    static void testSameEncryptor(String key, PEMEncoder encoder) {\n+        PEMCerts.Entry entry = PEMCerts.getEntry(key);\n+        try {\n+            encoder.encodeToString(keymap.get(key));\n+        } catch (RuntimeException e) {\n+            throw new AssertionError(\"Encrypted encoder failured with \" + entry.name(), e);\n+        }\n+\n+        System.out.println(\"PASS: \" + entry.name());\n+    }\n+\n","filename":"test\/jdk\/java\/security\/PEM\/PEMEncoderTest.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import java.io.IOException;\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs8\/PKCS8Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -5,2 +5,0 @@\n-    permission java.security.SecurityPermission\n-                       \"getProperty.jdk.epkcs8.defaultAlgorithm\";\n","filename":"test\/jdk\/sun\/security\/pkcs11\/ec\/policy","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}