{"files":[{"patch":"@@ -147,2 +147,2 @@\n-     * what characters are represented by any consecutive sequences of the\n-     * form \"<i>{@code %xy}<\/i>\".\n+     * what characters are represented by any consecutive escape sequences of\n+     * the form \"<i>{@code %xy}<\/i>\".\n@@ -155,0 +155,4 @@\n+     * <p>\n+     * If any consecutive well-formed escape sequences cannot\n+     * be decoded as a sequence of characters in the supplied {@code Charset}\n+     * {@linkplain java.nio.charset.CharsetDecoder##cae the replacement character} will be used.\n@@ -157,1 +161,1 @@\n-     * when illegal strings are encountered.\n+     * when malformed escape sequences are encountered.\n@@ -163,2 +167,2 @@\n-     * @throws IllegalArgumentException if the implementation encounters illegal\n-     * characters\n+     * @throws IllegalArgumentException if the implementation encounters malformed\n+     * escape sequences\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLDecoder.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -207,0 +207,3 @@\n+     * <p>\n+     * If a character needs encoding but cannot be encoded, the\n+     * {@linkplain CharsetEncoder##cae replacement bytes} will be used.\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLEncoder.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}