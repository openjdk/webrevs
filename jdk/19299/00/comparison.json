{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -242,1 +242,1 @@\n-                            idi.bootstrapMethod(), idi.name().stringValue(),\n+                            mapDirectMethodHandle(idi.bootstrapMethod()), idi.name().stringValue(),\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassRemapperImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+ * @bug 8332505\n@@ -68,0 +69,1 @@\n+import java.lang.runtime.ObjectMethods;\n@@ -190,0 +192,1 @@\n+        var objectMethods = ClassDesc.ofDescriptor(ObjectMethods.class.descriptorString());\n@@ -192,1 +195,1 @@\n-                ClassRemapper.of(Map.of(foo, bar, fooAnno, barAnno)).remapClass(\n+                ClassRemapper.of(Map.of(foo, bar, fooAnno, barAnno, objectMethods, bar)).remapClass(\n@@ -214,1 +217,2 @@\n-                \"GETFIELD, owner: AdvancedTransformationsTest$Rec, field name: foo, field type: LAdvancedTransformationsTest$Bar;\");\n+                \"GETFIELD, owner: AdvancedTransformationsTest$Rec, field name: foo, field type: LAdvancedTransformationsTest$Bar;\",\n+                \"bootstrap method: STATIC AdvancedTransformationsTest$Bar::bootstrap\");\n","filename":"test\/jdk\/jdk\/classfile\/AdvancedTransformationsTest.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}