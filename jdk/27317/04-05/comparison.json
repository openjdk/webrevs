{"files":[{"patch":"@@ -84,15 +84,0 @@\n-void SuspendResumeManager::self_suspend(bool register_vthread_SR, JavaThread *current) {\n-#if INCLUDE_JVMTI\n-  \/\/ All required data should be loaded before state is set to _thread_blocked.\n-  int64_t id = java_lang_Thread::thread_id(_target->vthread());\n-  ThreadBlockInVM tbivm(current);\n-  MutexLocker ml(_state_lock, Mutex::_no_safepoint_check_flag);\n-  if (register_vthread_SR) {\n-    assert(_target->is_vthread_mounted(), \"sanity check\");\n-    JvmtiVTSuspender::register_vthread_suspend(id);\n-  }\n-#endif\n-  AtomicAccess::store(&_suspended, true);\n-  do_owner_suspend();\n-}\n-\n@@ -104,2 +89,13 @@\n-    \/\/ and just suspend directly\n-    self_suspend(register_vthread_SR, self);\n+    \/\/ and just suspend directly.\n+    \/\/ All required data should be loaded before state is set to _thread_blocked.\n+    int64_t id = java_lang_Thread::thread_id(_target->vthread());\n+    ThreadBlockInVM tbivm(self);\n+    MutexLocker ml(_state_lock, Mutex::_no_safepoint_check_flag);\n+#if INCLUDE_JVMTI\n+    if (register_vthread_SR) {\n+      assert(_target->is_vthread_mounted(), \"sanity check\");\n+      JvmtiVTSuspender::register_vthread_suspend(id);\n+    }\n+#endif\n+    AtomicAccess::store(&_suspended, true);\n+    do_owner_suspend();\n","filename":"src\/hotspot\/share\/runtime\/suspendResumeManager.cpp","additions":13,"deletions":17,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -61,3 +61,0 @@\n-  void self_suspend(bool register_vthread_SR, JavaThread *current);\n-\n-\n","filename":"src\/hotspot\/share\/runtime\/suspendResumeManager.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}