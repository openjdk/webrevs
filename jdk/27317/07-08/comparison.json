{"files":[{"patch":"@@ -100,1 +100,1 @@\n-    \/\/ All required data should be loaded before state is set to _thread_blocked.\n+    \/\/ The vthread() oop must only be accessed before state is set to _thread_blocked.\n@@ -107,0 +107,4 @@\n+  } else {\n+    SuspendThreadHandshakeClosure st(register_vthread_SR);\n+    Handshake::execute(&st, _target);\n+    return st.did_suspend();\n@@ -108,3 +112,0 @@\n-  SuspendThreadHandshakeClosure st(register_vthread_SR);\n-  Handshake::execute(&st, _target);\n-  return st.did_suspend();\n","filename":"src\/hotspot\/share\/runtime\/suspendResumeManager.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -61,0 +61,2 @@\n+\n+  \/\/ The specific 'set_suspended' implementation for self suspend.\n","filename":"src\/hotspot\/share\/runtime\/suspendResumeManager.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}