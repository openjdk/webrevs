{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,1 @@\n+import jdk.internal.access.SharedSecrets;\n@@ -1052,3 +1053,9 @@\n-        Class<?> c = defineClass2(this, name, b, b.position(), len, protectionDomain, source);\n-        postDefineClass(c, protectionDomain);\n-        return c;\n+\n+        SharedSecrets.getJavaNioAccess().acquireSession(b);\n+        try {\n+            Class<?> c = defineClass2(this, name, b, b.position(), len, protectionDomain, source);\n+            postDefineClass(c, protectionDomain);\n+            return c;\n+        } finally {\n+            SharedSecrets.getJavaNioAccess().releaseSession(b);\n+        }\n@@ -1060,0 +1067,2 @@\n+    \/\/ Warning: Before calling this method, the provided ByteBuffer must be guarded\n+    \/\/          via JavaNioAccess::(acquire|release)Session\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8365203\n+ * @summary Tests guarding of ByteBuffers in ClassLoader::defineClass\n+ * @run junit GuardByteBuffer\n+ *\/\n+\n+import org.junit.jupiter.api.Test;\n+\n+import java.lang.foreign.Arena;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ThreadLocalRandom;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.locks.LockSupport;\n+\n+final class GuardByteBuffer {\n+\n+    @Test\n+    void guardCrash() throws InterruptedException {\n+        final var cl = new ClassLoader() {\n+            void tryCrash() {\n+                var arena = Arena.ofConfined();\n+                int size = 65536;\n+                var byteBuffer = arena.allocate(size).asByteBuffer();\n+                for (int i = 0; i < size; i += Long.BYTES) {\n+                    byteBuffer.putLong(i, ThreadLocalRandom.current().nextLong());\n+                }\n+                \/\/ Close the arena underneath\n+                arena.close();\n+                defineClass(null, byteBuffer, null);\n+            }\n+        };\n+        final List<Thread> threads = new ArrayList<>();\n+        for (int i = 0; i < Runtime.getRuntime().availableProcessors(); i++) {\n+            threads.add(Thread.ofPlatform().start(() -> forAWhile(cl::tryCrash)));\n+        }\n+        for (var thread : threads) {\n+            thread.join();\n+        }\n+    }\n+\n+    static void forAWhile(Runnable runnable) {\n+        final long deadLine = System.nanoTime() + TimeUnit.SECONDS.toNanos(20);\n+        while (System.nanoTime() < deadLine) {\n+            try {\n+                runnable.run();\n+            } catch (Throwable _) { }\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/defineClass\/GuardByteBuffer.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"}]}