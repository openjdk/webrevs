{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -510,0 +510,16 @@\n+    \/**\n+     * {@return true if the url is a file: URL for a 'local file' as defined by RFC 8089, Section 2}\n+     *\n+     * For unknown historical reasons, this method deviates from RFC 8089\n+     * by allowing \"~\" as an alias for 'localhost'\n+     *\n+     * @param url the URL which may be a local file URL\n+     *\/\n+    public static boolean isLocalFileURL(URL url) {\n+        if (url.getProtocol().equalsIgnoreCase(\"file\")) {\n+            String host = url.getHost();\n+            return host == null || host.isEmpty() || host.equals(\"~\") ||\n+                    host.equalsIgnoreCase(\"localhost\");\n+        }\n+        return false;\n+    }\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/ParseUtil.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import sun.net.www.ParseUtil;\n@@ -95,1 +96,1 @@\n-        if (!URLJarFile.isFileURL(patched)) {\n+        if (!ParseUtil.isLocalFileURL(patched)) {\n@@ -161,3 +162,4 @@\n-            if (host != null && !host.isEmpty() &&\n-                    !host.equalsIgnoreCase(\"localhost\")) {\n-\n+            \/\/ Subtly different from ParseUtil.isLocalFileURL, for historical reasons\n+            boolean isLocalFile = ParseUtil.isLocalFileURL(url) && !\"~\".equals(host);\n+            \/\/ For remote hosts, change 'file:\/\/host\/folder\/data.xml' to 'file:\/\/\/\/host\/folder\/data.xml'\n+            if (!isLocalFile) {\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/jar\/JarFileFactory.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        if (isFileURL(url)) {\n+        if (ParseUtil.isLocalFileURL(url)) {\n@@ -74,14 +74,0 @@\n-    static boolean isFileURL(URL url) {\n-        if (url.getProtocol().equalsIgnoreCase(\"file\")) {\n-            \/*\n-             * Consider this a 'file' only if it's a LOCAL file, because\n-             * 'file:' URLs can be accessible through ftp.\n-             *\/\n-            String host = url.getHost();\n-            if (host == null || host.isEmpty() || host.equals(\"~\") ||\n-                host.equalsIgnoreCase(\"localhost\"))\n-                return true;\n-        }\n-        return false;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/jar\/URLJarFile.java","additions":1,"deletions":15,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,2 +67,1 @@\n-        if (host == null || host.isEmpty() || host.equals(\"~\") ||\n-            host.equalsIgnoreCase(\"localhost\")) {\n+        if (ParseUtil.isLocalFileURL(u)) {\n","filename":"src\/java.base\/unix\/classes\/sun\/net\/www\/protocol\/file\/Handler.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,3 +75,1 @@\n-        if ((host == null) || host.isEmpty() ||\n-                host.equalsIgnoreCase(\"localhost\") ||\n-                host.equals(\"~\")) {\n+        if (ParseUtil.isLocalFileURL(url)) {\n","filename":"src\/java.base\/windows\/classes\/sun\/net\/www\/protocol\/file\/Handler.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}