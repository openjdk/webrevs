{"files":[{"patch":"@@ -37,1 +37,1 @@\n-    private static final int ML_DSA_D = 13;\n+    public static final int ML_DSA_D = 13;\n@@ -411,3 +411,3 @@\n-    private final int mlDsa_k;\n-    private final int mlDsa_l;\n-    private final int eta;\n+    public final int mlDsa_k;\n+    public final int mlDsa_l;\n+    public final int eta;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ML_DSA.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    public static Version version = Version.FINAL;\n+    public static Version version = Version.DRAFT;\n@@ -166,0 +166,28 @@\n+\n+        @Override\n+        public Object implCheckPublicKey(String name, byte[] pk) throws InvalidKeyException {\n+            ML_DSA mlDsa = new ML_DSA(name2int(name));\n+            int k = mlDsa.mlDsa_k;\n+\n+            \/\/PK size is 32 + 32 * k * (bitlen(q-1) - d), where bitlen(q-1) = 23\n+            int pk_size = 32 + (k * 32 * (23 - ML_DSA.ML_DSA_D));\n+            if (pk.length != pk_size) {\n+                throw new InvalidKeyException(\"Incorrect public key size\");\n+            }\n+            return null;\n+        }\n+\n+        @Override\n+        public Object implCheckPrivateKey(String name, byte[] sk) throws InvalidKeyException {\n+            int size = name2int(name);\n+            ML_DSA mlDsa = new ML_DSA(size);\n+            int k = mlDsa.mlDsa_k;\n+            int eta_bits = size == 3 ? 4 : 3;\n+\n+            \/\/SK size is 128 + 32 * ((l + k) * bitlen(2*eta) + d*k)\n+            int sk_size = 128 + 32 * ((mlDsa.mlDsa_l + k) * eta_bits + ML_DSA.ML_DSA_D * k);\n+            if (sk.length != sk_size) {\n+                throw new InvalidKeyException(\"Incorrect private key size\");\n+            }\n+            return null;\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ML_DSA_Provider.java","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"}]}