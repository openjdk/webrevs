{"files":[{"patch":"@@ -496,1 +496,2 @@\n-    public ML_DSA_KeyPair generateKeyPair(byte[] randomBytes) {\n+    \/\/Internal functions in Section 6 of specification\n+    public ML_DSA_KeyPair generateKeyPairInternal(byte[] randomBytes) {\n@@ -539,1 +540,1 @@\n-    public ML_DSA_Signature sign(byte[] message, byte[] rnd, byte[] skBytes) {\n+    public ML_DSA_Signature signInternal(byte[] message, byte[] rnd, byte[] skBytes) {\n@@ -613,1 +614,1 @@\n-    public boolean verify(byte[] pkBytes, byte[] message, byte[] sigBytes) {\n+    public boolean verifyInternal(byte[] pkBytes, byte[] message, byte[] sigBytes) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ML_DSA.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-            ML_DSA.ML_DSA_KeyPair kp = mlDsa.generateKeyPair(seed);\n+            ML_DSA.ML_DSA_KeyPair kp = mlDsa.generateKeyPairInternal(seed);\n@@ -125,1 +125,1 @@\n-            ML_DSA.ML_DSA_Signature sig = mlDsa.sign(msg, rnd, skBytes);\n+            ML_DSA.ML_DSA_Signature sig = mlDsa.signInternal(msg, rnd, skBytes);\n@@ -133,1 +133,1 @@\n-            return mlDsa.verify(pkBytes, msg, sigBytes);\n+            return mlDsa.verifyInternal(pkBytes, msg, sigBytes);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ML_DSA_Provider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}