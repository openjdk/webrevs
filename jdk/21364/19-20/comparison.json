{"files":[{"patch":"@@ -34,0 +34,1 @@\n+import java.security.SignatureException;\n@@ -685,1 +686,2 @@\n-    public boolean verifyInternal(byte[] pkBytes, byte[] message, byte[] sigBytes) {\n+    public boolean verifyInternal(byte[] pkBytes, byte[] message, byte[] sigBytes)\n+            throws SignatureException {\n@@ -690,3 +692,0 @@\n-        \/\/Check hint encoding\n-        if (sig.hint() == null) {return false;}\n-\n@@ -1003,1 +1002,10 @@\n-    public ML_DSA_Signature sigDecode(byte[] sig) {\n+    public ML_DSA_Signature sigDecode(byte[] sig) throws SignatureException {\n+\n+        int cSize = lambda \/ 4;\n+        int zSize = mlDsa_l * 32 * (1 + gamma1Bits);\n+\n+        int sigLen = cSize + zSize + omega + mlDsa_k;\n+        if (sig.length != sigLen) {\n+            throw new SignatureException(\"Incorrect signature length\");\n+        }\n+\n@@ -1008,2 +1016,2 @@\n-        int start = lambda \/ 4;\n-        int end = start + (32 * mlDsa_l * (1 + gamma1Bits));\n+        int start = cSize;\n+        int end = start + zSize;\n@@ -1016,0 +1024,4 @@\n+        if (h == null) {\n+            throw new SignatureException(\"Invalid hints encoding\");\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ML_DSA.java","additions":19,"deletions":7,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -154,1 +154,2 @@\n-        public boolean implVerify(String name, byte[] pkBytes, Object pk2, byte[] msg, byte[] sigBytes) {\n+        public boolean implVerify(String name, byte[] pkBytes, Object pk2, byte[] msg, byte[] sigBytes)\n+                throws SignatureException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ML_DSA_Provider.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}