{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -147,0 +147,2 @@\n+     * If highlight and shadow color are null, then it will\n+     * fallback to create beveled border of the specified type.\n@@ -156,1 +158,4 @@\n-        return new BevelBorder(type, highlight, shadow);\n+        if (highlight != null && shadow != null) {\n+            return new BevelBorder(type, highlight, shadow);\n+        }\n+        return new BevelBorder(type);\n@@ -264,0 +269,2 @@\n+     * If highlight and shadow color are null, then it will\n+     * fallback to create beveled border of the specified type with softened corners.\n@@ -274,1 +281,4 @@\n-        return new SoftBevelBorder(type, highlight, shadow);\n+        if (highlight != null && shadow != null) {\n+            return new SoftBevelBorder(type, highlight, shadow);\n+        }\n+        return new SoftBevelBorder(type);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/BorderFactory.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -86,0 +86,5 @@\n+    private static boolean setColor(Color highlight, Color shadow) {\n+        boolean ret = (highlight != null && shadow != null) ? true : false;\n+        return ret;\n+    }\n+\n@@ -93,0 +98,2 @@\n+     * If highlight and shadow color are null, then it will\n+     * fallback to create beveled border of the specified type.\n@@ -98,1 +105,10 @@\n-        this(bevelType, highlight.brighter(), highlight, shadow, shadow.brighter());\n+        boolean ret = setColor(highlight, shadow);\n+        if (ret) {\n+            this.bevelType = bevelType;\n+            this.highlightOuter = highlight.brighter();\n+            this.highlightInner = highlight;\n+            this.shadowOuter = shadow;\n+            this.shadowInner = shadow.brighter();\n+        } else {\n+            this.bevelType = bevelType;\n+        }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/border\/BevelBorder.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8370467\n+ * @summary Verifies createBevelBorder and createSoftBevelBorder does not throw NPE\n+ * @run main TestBevelBorderParam\n+ *\/\n+\n+import javax.swing.BorderFactory;\n+import javax.swing.border.BevelBorder;\n+\n+public class TestBevelBorderParam {\n+\n+    public static void main(String[] args) throws Exception {\n+        boolean failure = false;\n+        StringBuilder str = new StringBuilder();\n+        try {\n+            BorderFactory.createBevelBorder(BevelBorder.RAISED, null, null);\n+        } catch (NullPointerException ex) {\n+            failure = true;\n+            str.append(\"BorderFactory.createBevelBorder throws NPE for null highlight and shadow\");\n+        }\n+        try {\n+            BorderFactory.createSoftBevelBorder(BevelBorder.RAISED, null, null);\n+        } catch (NullPointerException e) {\n+            failure = true;\n+            str.append(\"\\n\");\n+            str.append(\"BorderFactory.createSoftBevelBorder throws NPE for null highlight and shadow\");\n+        }\n+        if (failure) {\n+            throw new RuntimeException(str.toString());\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/border\/TestBevelBorderParam.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"}]}