{"files":[{"patch":"@@ -31,1 +31,1 @@\n-const VMATree::RegionData VMATree::empty_regiondata{NativeCallStackStorage::StackIndex{}, mtNone};\n+const VMATree::RegionData VMATree::empty_regiondata{NativeCallStackStorage::invalid, mtNone};\n@@ -58,0 +58,4 @@\n+  stA.out.set_reserve_stack(NativeCallStackStorage::invalid);\n+  stB.in.set_reserve_stack(NativeCallStackStorage::invalid);\n+  stA.out.set_commit_stack(NativeCallStackStorage::invalid);\n+  stA.in.set_commit_stack(NativeCallStackStorage::invalid);\n@@ -61,2 +65,0 @@\n-    stA.out.set_commit_stack(NativeCallStackStorage::invalid);\n-    stA.in.set_commit_stack(NativeCallStackStorage::invalid);\n@@ -67,2 +69,0 @@\n-    stA.out.set_reserve_stack(NativeCallStackStorage::invalid);\n-    stB.in.set_reserve_stack(NativeCallStackStorage::invalid);\n@@ -110,0 +110,2 @@\n+        } else {\n+          stA.out.set_reserve_stack(metadata.stack_idx);\n@@ -140,2 +142,7 @@\n-        stA.out.set_reserve_stack(leqA_n->val().out.reserved_stack());\n-        stB.in.set_reserve_stack(leqA_n->val().out.reserved_stack());\n+        if (leqA_n->val().out.has_reserved_stack()) {\n+          stA.out.set_reserve_stack(leqA_n->val().out.reserved_stack());\n+          stB.in.set_reserve_stack(leqA_n->val().out.reserved_stack());\n+        } else {\n+          stA.out.set_reserve_stack(metadata.stack_idx);\n+          stB.in.set_reserve_stack(metadata.stack_idx);\n+        }\n@@ -146,2 +153,0 @@\n-        stA.out.set_commit_stack(NativeCallStackStorage::invalid);\n-        stB.in.set_commit_stack(NativeCallStackStorage::invalid);\n@@ -259,2 +264,3 @@\n-    out->print(\"%zu (%s) - %s - \", current->key(), NMTUtil::tag_to_name(out_state(current).mem_tag()),\n-               statetype_to_string(out_state(current).type()));\n+    out->print(\"%zu (%s) - %s [%d, %d]- \", current->key(), NMTUtil::tag_to_name(out_state(current).mem_tag()),\n+               statetype_to_string(out_state(current).type()), current->val().out.reserved_stack(), current->val().out.committed_stack());\n+\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -158,0 +158,5 @@\n+      if (in.type() == StateType::Released &&\n+          in.type() == out.type() &&\n+          in.mem_tag() == out.mem_tag()) {\n+        return true;\n+      }\n","filename":"src\/hotspot\/share\/nmt\/vmatree.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -331,0 +331,2 @@\n+  NCS::StackIndex es = NCS::invalid; \/\/ empty or no stack is stored\n+\n@@ -431,1 +433,1 @@\n-        {50,  75,        mtNone, si, State::Released},\n+        {50,  75,        mtNone, es, State::Released},\n@@ -457,1 +459,1 @@\n-        { 1,  50, mtNone, si, State::Released},\n+        { 1,  50, mtNone, es, State::Released},\n@@ -459,1 +461,1 @@\n-        {75,  99, mtNone, si, State::Released},\n+        {75,  99, mtNone, es, State::Released},\n@@ -976,4 +978,4 @@\n-    \/\/        mtNone             mtTest    mtTest    mtTest    mtTest    mtNone\n-    \/\/        Rl                 C         Rs        C         Rs        Rl\n-    \/\/        -                  si_1      si_1      si_1      si_1      -\n-    \/\/        -                  si_2      -         si_2      -         -\n+    \/\/        mtNone         mtTest        mtTest    mtTest    mtTest    mtNone\n+    \/\/        Rl             C             Rs        C         Rs        Rl\n+    \/\/        -              si_1          si_1      si_1      si_1      -\n+    \/\/        -              si_2          -         si_2      -         -\n@@ -1048,0 +1050,568 @@\n+\n+\/\/ Nodes in the tree :   R.....X......W......U....Z\n+\/\/ New request (A!=X):           A-------B\n+\/\/ New request (A==X):         A-------B\n+\/\/ Operations: {Reserve, Commit, Uncommit, Release}\n+\/\/ State of [X, W) region: {released, reserved, committed}\n+\/\/ total number of cases:\n+\/\/  no.of(Operations) x no.of(States) x no.of{A == X | A != X} =\n+\/\/        4           x     3         x        2               = 24\n+\/\/ AllCases_A_eq_X contains 12 cases for A == X\n+\/\/ AllCases_A_neq_X contains 12 cases for A != X\n+TEST_VM_F(NMTVMATreeTest, AllCases_A_eq_X) {\n+  using SIndex = NativeCallStackStorage::StackIndex;\n+  using State = VMATree::StateType;\n+  SIndex si_1 = si[0];\n+  SIndex si_2 = si[1];\n+\n+  const bool ok_to_run = false;\n+  const State Rs = State::Reserved;\n+  const State Rl = State::Released;\n+  const State C = State::Committed;\n+  VMATree::RegionData call_stack_1(si_1, mtTest);\n+  VMATree::RegionData call_stack_1_mtNone(si_1, mtNone);\n+  VMATree::RegionData call_stack_2(si_2, mtTest);\n+\n+  { \/\/ Do 'Reserve' for a released region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.release_mapping(100, 100);\n+    \/\/ New request\n+    tree.reserve_mapping(100, 150, call_stack_2);\n+    \/\/ Pre:  ........0--------100................200------------------------300********400........\n+    \/\/ Post: ........0--------100--------------------------------250--------300********400........\n+    \/\/        mtNone   mtTest                 mtTest                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     Rs                     Rs         C          Rl\n+    \/\/        -        si_1                   si_2                   si_1       si_1       -\n+    \/\/        -        -                      -                      -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400         },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_2  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Commit' for a released region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.release_mapping(100, 100);\n+    \/\/ New request\n+    tree.commit_mapping(100, 150, call_stack_2);\n+    \/\/ Pre:  ........0--------100................200------------------------300********400........\n+    \/\/ Post: ........0--------100********************************250--------300********400........\n+    \/\/        mtNone   mtTest                 mtTest                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     C                      Rs         C          Rl\n+    \/\/        -        si_1                   si_2                   si_1       si_1       -\n+    \/\/        -        -                      si_2                   -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400         },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , C     , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_2  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , si_2  , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Uncommit' for a released region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.release_mapping(100, 100);\n+    \/\/ New request\n+    \/\/ 8354115\n+    if (ok_to_run) tree.uncommit_mapping(100, 150, call_stack_2);\n+    \/\/\n+    \/\/ to be re-written after 8354115\n+    \/\/ Pre:  ........0--------100................200------------------------300********400........\n+    \/\/ Post: ........0--------100--------------------------------250--------300********400........\n+    \/\/        mtNone   mtTest                 mtTest                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     Rs                     Rs         C          Rl\n+    \/\/        -        si_1                   si_2                   si_1       si_1       -\n+    \/\/        -        -                      -                      -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400         },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_2  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , si_1  , -1     }};\n+    if (ok_to_run) check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Release' for a released region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.release_mapping(100, 100);\n+    \/\/ New request\n+    tree.release_mapping(100, 150);\n+    \/\/ Pre:  ........0--------100................200------------------------300********400........\n+    \/\/ Post: ........0--------100................................250--------300********400........\n+    \/\/        mtNone   mtTest                 mtNone                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     Rl                     Rs         C          Rl\n+    \/\/        -        si_1                   -                      si_1       si_1       -\n+    \/\/        -        -                      -                      -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400         },\n+                          {mtNone, mtTest, mtNone, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rl    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , -1    , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Reserve' for a reserved region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.reserve_mapping(100, 100, call_stack_1);\n+    \/\/ New request\n+    tree.reserve_mapping(100, 150, call_stack_2);\n+    \/\/ Pre:  ........0--------100----------------200------------------------300********400........\n+    \/\/ Post: ........0--------100--------------------------------250--------300********400........\n+    \/\/        mtNone   mtTest                 mtTest                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     Rs                     Rs         C          Rl\n+    \/\/        -        si_1                   si_2                   si_1       si_1       -\n+    \/\/        -        -                      -                      -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400         },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_2  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Commit' for a reserved region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.reserve_mapping(100, 100, call_stack_1);\n+    \/\/ New request\n+    tree.commit_mapping(100, 150, call_stack_2);\n+    \/\/ Pre:  ........0--------100----------------200------------------------300********400........\n+    \/\/ Post: ........0--------100********************************250--------300********400........\n+    \/\/        mtNone   mtTest                 mtTest                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     C                      Rs         C          Rl\n+    \/\/        -        si_1                   si_2                   si_1       si_1       -\n+    \/\/        -        -                      si_2                   -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400         },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , C     , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , si_2  , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Uncommit' for a reserved region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.reserve_mapping(100, 100, call_stack_1);\n+    \/\/ New request\n+    tree.uncommit_mapping(100, 150, call_stack_1_mtNone);\n+    \/\/ Pre:  ........0--------100----------------200------------------------300********400........\n+    \/\/ Post: ........0--------100--------------------------------250--------300********400........\n+    \/\/        mtNone   mtTest                 mtTest                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     Rs                     Rs         C          Rl\n+    \/\/        -        si_1                   si_1                   si_1       si_1       -\n+    \/\/        -        -                      -                      -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400         },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Release' for a reserved region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.reserve_mapping(100, 100, call_stack_1);\n+    \/\/ New request\n+    tree.release_mapping(100, 150);\n+    \/\/ Pre:  ........0--------100----------------200------------------------300********400........\n+    \/\/ Post: ........0--------100................................250--------300********400........\n+    \/\/        mtNone   mtTest                 mtNone                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     Rl                     Rs         C          Rl\n+    \/\/        -        si_1                   -                      si_1       si_1       -\n+    \/\/        -        -                      -                      -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400         },\n+                          {mtNone, mtTest, mtNone, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rl    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , -1    , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Reserve' for a committed region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    \/\/ New request\n+    tree.reserve_mapping(100, 150, call_stack_2);\n+    \/\/ Pre:  ........0--------100****************200------------------------300********400........\n+    \/\/ Post: ........0--------100--------------------------------250--------300********400........\n+    \/\/        mtNone   mtTest                 mtTest                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     Rs                     Rs         C          Rl\n+    \/\/        -        si_1                   si_2                   si_1       si_1       -\n+    \/\/        -        -                      -                      -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400         },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_2  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Commit' for a committed region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    \/\/ New request\n+    tree.commit_mapping(100, 150, call_stack_2);\n+    \/\/ Pre:  ........0--------100****************200------------------------300********400........\n+    \/\/ Post: ........0--------100********************************250--------300********400........\n+    \/\/        mtNone   mtTest                 mtTest                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     C                      Rs         C          Rl\n+    \/\/        -        si_1                   si_1                   si_1       si_1       -\n+    \/\/        -        -                      si_2                   -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400         },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , C     , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , si_2  , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Uncommit' for a committed region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    \/\/ New request\n+    tree.uncommit_mapping(100, 150, call_stack_1_mtNone);\n+    \/\/ Pre:  ........0--------100****************200------------------------300********400........\n+    \/\/ Post: ........0--------100--------------------------------250--------300********400........\n+    \/\/        mtNone   mtTest                 mtTest                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     Rs                     Rs         C          Rl\n+    \/\/        -        si_1                   si_1                   si_1       si_1       -\n+    \/\/        -        -                      -                      -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400         },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Release' for a committed region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    \/\/ New request\n+    tree.release_mapping(100, 150);\n+    \/\/ Pre:  ........0--------100****************200------------------------300********400........\n+    \/\/ Post: ........0--------100................................250--------300********400........\n+    \/\/        mtNone   mtTest                 mtNone                 mtTest     mtTest     mtNone\n+    \/\/        Rl       Rs                     Rl                     Rs         C          Rl\n+    \/\/        -        si_1                   -                      si_1       si_1       -\n+    \/\/        -        -                      -                      -          si_1       -\n+    ExpectedTree<5> et = {{     0,    100,    250,    300,    400          },\n+                          {mtNone, mtTest, mtNone, mtTest, mtTest, mtNone  },\n+                          {Rl    , Rs    , Rl    , Rs    , C     , Rl      },\n+                          {-1    , si_1  , -1    , si_1  , si_1  , -1      },\n+                          {-1    , -1    , -1    , -1    , si_1  , -1      }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+}\n+\n+TEST_VM_F(NMTVMATreeTest, AllCases_A_neq_X) {\n+  using SIndex = NativeCallStackStorage::StackIndex;\n+  using State = VMATree::StateType;\n+  SIndex si_1 = si[0];\n+  SIndex si_2 = si[1];\n+\n+  const bool ok_to_run = false;\n+  const State Rs = State::Reserved;\n+  const State Rl = State::Released;\n+  const State C = State::Committed;\n+  VMATree::RegionData call_stack_1(si_1, mtTest);\n+  VMATree::RegionData call_stack_1_mtNone(si_1, mtNone);\n+  VMATree::RegionData call_stack_2(si_2, mtTest);\n+\n+  { \/\/ Do 'Reserve' for a released region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.release_mapping(100, 100);\n+    \/\/ New request\n+    tree.reserve_mapping(150, 100, call_stack_2);\n+    \/\/ Pre:  ........0--------100................200-----------------------300*********400........\n+    \/\/ Post: ........0--------100........150----------------250------------300*********400........\n+    \/\/        mtNone   mtTest     mtNone         mtTest           mtTest        mtTest     mtNone\n+    \/\/        Rl       Rs         Rl             Rs               Rs            C          Rl\n+    \/\/        -        si_1       -              si_2             si_1          si_1       -\n+    \/\/        -        -          -              -                -             si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtNone, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rl    , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , -1    , si_2  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Commit' for a released region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.release_mapping(100, 100);\n+    \/\/ New request\n+    tree.commit_mapping(150, 100, call_stack_2);\n+    \/\/ Pre:  ........0--------100................200-----------------------300********400........\n+    \/\/ Post: ........0--------100........150****************250------------300********400........\n+    \/\/        mtNone   mtTest     mtNone         mtTest           mtTest       mtTest     mtNone\n+    \/\/        Rl       Rs         Rl             C                Rs           C          Rl\n+    \/\/        -        si_1       -1             si_2             si_1         si_1       -\n+    \/\/        -        -          -1             si_2             -            si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtNone, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rl    , C     , Rs    , C     , Rl     },\n+                          {-1    , si_1  , -1    , si_2  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , si_2  , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Uncommit' for a released region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.release_mapping(100, 100);\n+    \/\/ New request\n+    \/\/ 8354115\n+    if (ok_to_run) tree.uncommit_mapping(150, 100, call_stack_2);\n+    \/\/ To be re-written after 8354115\n+    \/\/ Pre:  ........0--------100................200-----------------------300********400........\n+    \/\/ Post: ........0--------100........150----------------250------------300********400........\n+    \/\/        mtNone   mtTest     mtNone         mtTest           mtTest       mtTest     mtNone\n+    \/\/        Rl       Rs         Rl             Rs               Rs           C          Rl\n+    \/\/        -        si_1       -              si_2             si_1         si_1       -\n+    \/\/        -        -          -              -                -            si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtNone, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rl    , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , -1    , si_2  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , -1    , si_1  , -1     }};\n+    if (ok_to_run) check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Release' for a released region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.release_mapping(100, 100);\n+    \/\/ New request\n+    tree.release_mapping(150, 100);\n+    \/\/ Pre:  ........0--------100................200-----------------------300********400........\n+    \/\/ Post: ........0--------100........150................250------------300********400........\n+    \/\/        mtNone   mtTest     mtNone         mtNone           mtTest       mtTest     mtNone\n+    \/\/        Rl       Rs         Rl             Rl               Rs           C          Rl\n+    \/\/        -        si_1       -              -                si_1         si_1       -\n+    \/\/        -        -          -              -                -            si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtNone, mtNone, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rl     , Rl   , Rs    , C     , Rl     },\n+                          {-1    , si_1  , -1     , -1   , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1     , -1   , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Reserve' for a reserved region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.reserve_mapping(100, 100, call_stack_1);\n+    \/\/ New request\n+    tree.reserve_mapping(150, 100, call_stack_2);\n+    \/\/ Pre:  ........0--------100----------------200-----------------------300********400........\n+    \/\/ Post: ........0--------100--------150----------------250------------300********400........\n+    \/\/        mtNone   mtTest     mtTest         mtTest           mtTest       mtTest     mtNone\n+    \/\/        Rl       Rs         Rs             Rs               Rs           C          Rl\n+    \/\/        -        si_1       si_1           si_2             si_1         si_1       -\n+    \/\/        -        -          -              -                -            si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rs    , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , si_2  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Commit' for a reserved region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.reserve_mapping(100, 100, call_stack_1);\n+    \/\/ New request\n+    tree.commit_mapping(150, 100, call_stack_2);\n+    \/\/ Pre:  ........0--------100----------------200-----------------------300********400........\n+    \/\/ Post: ........0--------100--------150****************250------------300********400........\n+    \/\/        mtNone   mtTest     mtTest         mtTest           mtTest       mtTest     mtNone\n+    \/\/        Rl       Rs         Rs             C                Rs           C          Rl\n+    \/\/        -        si_1       si_1           si_1             si_1         si_1       -\n+    \/\/        -        -          -              si_2             -            si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rs    , C     , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , si_1  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , si_2  , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Uncommit' for a reserved region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.reserve_mapping(100, 100, call_stack_1);\n+    \/\/ New request\n+    tree.uncommit_mapping(150, 100, call_stack_1_mtNone);\n+    \/\/ Pre:  ........0--------100----------------200-----------------------300********400........\n+    \/\/ Post: ........0--------100--------150----------------250------------300********400........\n+    \/\/        mtNone   mtTest     mtTest         mtTest           mtTest       mtTest     mtNone\n+    \/\/        Rl       Rs         Rs             Rs               Rs           C          Rl\n+    \/\/        -        si_1       si_1           si_1             si_1         si_1       -\n+    \/\/        -        -          -              -                -            si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rs    , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , si_1  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Release' for a reserved region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    tree.reserve_mapping(100, 100, call_stack_1);\n+    \/\/ New request\n+    tree.release_mapping(150, 100);\n+    \/\/ Pre:  ........0--------100----------------200-----------------------300********400........\n+    \/\/ Post: ........0--------100--------150................250------------300********400........\n+    \/\/        mtNone   mtTest     mtTest         mtNone           mtTest       mtTest     mtNone\n+    \/\/        Rl       Rs         Rs             Rl               Rs           C          Rl\n+    \/\/        -        si_1       si_1           -                si_1         si_1       -\n+    \/\/        -        -          -              -                -            si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtTest, mtNone, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , Rs    , Rl    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , -1    , si_1  , si_1  , -1     },\n+                          {-1    , -1    , -1    , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Reserve' for a committed region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    \/\/ New request\n+    tree.reserve_mapping(150, 100, call_stack_2);\n+    \/\/ Pre:  ........0--------100****************200-----------------------300********400........\n+    \/\/ Post: ........0--------100********150----------------250------------300********400........\n+    \/\/        mtNone   mtTest     mtTest         mtTest           mtTest       mtTest     mtNone\n+    \/\/        Rl       Rs         C              Rs               Rs           C          Rl\n+    \/\/        -        si_1       si_1           si_2             si_1         si_1       -\n+    \/\/        -        -          si_1           -                -            si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , C     , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , si_2  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , si_1  , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Commit' for a committed region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    \/\/ New request\n+    tree.commit_mapping(150, 100, call_stack_2);\n+    \/\/ Pre:  ........0--------100****************200-----------------------300********400........\n+    \/\/ Post: ........0--------100********150****************250------------300********400........\n+    \/\/        mtNone   mtTest     mtTest         mtTest           mtTest       mtTest     mtNone\n+    \/\/        Rl       Rs         C              C                Rs           C          Rl\n+    \/\/        -        si_1       si_1           si_1             si_1         si_1       -\n+    \/\/        -        -          si_1           si_2             -            si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , C     , C     , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , si_1  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , si_1  , si_2  , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Uncommit' for a committed region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    \/\/ New request\n+    tree.uncommit_mapping(150, 100, call_stack_1_mtNone);\n+    \/\/ Pre:  ........0--------100****************200-----------------------300********400........\n+    \/\/ Post: ........0--------100********150----------------250------------300********400........\n+    \/\/        mtNone   mtTest     mtTest         mtTest           mtTest       mtTest     mtNone\n+    \/\/        Rl       Rs         C              Rs               Rs           C          Rl\n+    \/\/        -        si_1       si_1           si_1             si_1         si_1       -\n+    \/\/        -        -          si_1           -                -            si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtTest, mtTest, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , C     , Rs    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , si_1  , si_1  , si_1  , -1     },\n+                          {-1    , -1    , si_1  , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+  { \/\/ Do 'Release' for a committed region\n+    Tree tree;\n+    \/\/ Prepare pre-cond\n+    tree.reserve_mapping(0, 400, call_stack_1);\n+    tree.commit_mapping(100, 100, call_stack_1_mtNone, true);\n+    tree.commit_mapping(300, 100, call_stack_1_mtNone, true);\n+    \/\/ New request\n+    tree.release_mapping(150, 100);\n+    \/\/ Pre:  ........0--------100****************200-----------------------300********400........\n+    \/\/ Post: ........0--------100********150................250------------300********400........\n+    \/\/        mtNone   mtTest     mtTest         mtNone           mtTest       mtTest     mtNone\n+    \/\/        Rl       Rs         C              Rl               Rs           C          Rl\n+    \/\/        -        si_1       si_1           -                si_1         si_1       -\n+    \/\/        -        -          si_1           -                -            si_1       -\n+    ExpectedTree<6> et = {{     0,    100,    150,    250,    300,   400          },\n+                          {mtNone, mtTest, mtTest, mtNone, mtTest, mtTest, mtNone },\n+                          {Rl    , Rs    , C     , Rl    , Rs    , C     , Rl     },\n+                          {-1    , si_1  , si_1  , -1    , si_1  , si_1  , -1     },\n+                          {-1    , -1    , si_1  , -1    , -1    , si_1  , -1     }};\n+    check_tree(tree, et, __LINE__);\n+  }\n+}\n+\n","filename":"test\/hotspot\/gtest\/nmt\/test_vmatree.cpp","additions":577,"deletions":7,"binary":false,"changes":584,"status":"modified"}]}