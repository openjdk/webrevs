{"files":[{"patch":"@@ -31,0 +31,53 @@\n+\n+\/\/ Semantics\n+\/\/ This tree is used to store and track the state of virtual memory regions.\n+\/\/ The nodes in the tree are key-value pairs where key is the memory address and the value is the State of the memory regions.\n+\/\/ State of a region describes whether the region is released, reserved or committed, which MemTag it has and where in\n+\/\/ Hotspot (using call-stacks) it is reserved or committed.\n+\/\/ Each node holds the State of the regions to its left and right. Each memory region is described by two\n+\/\/ memory addresses for its start and end.\n+\/\/ For example, to describe the region that starts at memory address 0xA000 with size 0x1000, there will be two nodes\n+\/\/ with the keys 0xA000 (node A) and 0xB000 (node B) in the tree. The value of the key-value pairs of node A and\n+\/\/ node B describe the region's State, using right of A and left of B (<--left--A--right-->.....<--left--B--right-->...).\n+\/\/\n+\/\/ Virtual memory can be reserved, committed, uncommitted and released. During these operations, the tree should handle the\n+\/\/ changes needed for the affected regions in the tree. For each operation a request\n+\/\/ (<from-address, to-address, operation, tag, call-stack, which-tag-to-use >) is sent to the tree to handle.\n+\/\/\n+\/\/ The expected changes are described here for each operation:\n+\/\/\n+\/\/ ### Reserve a region\n+\/\/ When a region is reserved, all the overlapping regions in the tree should:\n+\/\/   - be marked as Reserved\n+\/\/   - take MemTag of the operation\n+\/\/   - store call-stack of the request to the reserve call-stack\n+\/\/   - clear commit call-stack\n+\/\/\n+\/\/ ### Commit a region\n+\/\/ When a region is committed, all the overlapping regions in the tree should:\n+\/\/   - be marked as Committed\n+\/\/   - take MemTag of the operation or MemTag of the existing region, depends on which-tag-to-use in the request\n+\/\/   - if the region is in Released state\n+\/\/     - mark the region as both Reserved and Committed\n+\/\/     - store the call-stack of the request to the reserve call-stack\n+\/\/   - store the call-stack of the request to the commit call-stack\n+\/\/\n+\/\/ ### Uncommit a region\n+\/\/ When a region is uncommitted, all the overlapping regions in the tree should:\n+\/\/   - be ignored if the region is in Released state\n+\/\/   - be marked as Reserved\n+\/\/   - not change the MemTag\n+\/\/   - not change the reserve call-stack\n+\/\/   - clear commit call-stack\n+\/\/\n+\/\/ ### Release a region\n+\/\/ When a region is released, all the overlapping regions in the tree should:\n+\/\/   - be marked as Released\n+\/\/   - set the MemTag to mtNone\n+\/\/   - clear both reserve and commit call-stack\n+\/\/\n+\/\/ ---  Accounting\n+\/\/ After each operation, the tree should be able to report how much memory is reserved or committed per MemTag.\n+\/\/ So for each region that changes to a new State, the report should contain (separately for each tag) the amount\n+\/\/ of reserve and commit that are changed (increased or decreased) due to the operation.\n+\n","filename":"src\/hotspot\/share\/nmt\/vmatree.cpp","additions":53,"deletions":0,"binary":false,"changes":53,"status":"modified"}]}