{"files":[{"patch":"@@ -39,1 +39,1 @@\n-  constexpr static const int si_len = 2;\n+  constexpr static const int si_len = 3;\n@@ -46,0 +46,1 @@\n+    stacks[1] = make_stack(0xC);\n@@ -48,0 +49,1 @@\n+    si[2] = ncs.push(stacks[2]);\n@@ -764,1 +766,0 @@\n-    const bool check_end_node = true;\n@@ -782,1 +783,1 @@\n-  {\n+  {\/\/ Check committing into a reserved region inherits the call stacks\n@@ -790,0 +791,1 @@\n+    expected(tree, 50, si_1,   -1, __LINE__);\n@@ -797,1 +799,1 @@\n-  {\n+  {\/\/ committing overlapped regions does not destroy the old call-stacks\n@@ -799,1 +801,1 @@\n-    tree.reserve_mapping(0, 100, call_stack_1);\n+    tree.reserve_mapping(0, 100, call_stack_1); \/\/ Nodes: 0 - 100\n@@ -802,1 +804,1 @@\n-    tree.commit_mapping(20, 20, call_stack_2, true);\n+    tree.commit_mapping(20, 20, call_stack_2, true); \/\/ Nodes: 0 - 20 - 40 - 100\n@@ -806,2 +808,10 @@\n-    tree.commit_mapping(10, 20, call_stack_1); \/\/ commit with overlap\n-    expected(tree, 10, si_1, si_1, __LINE__);\n+    SIndex si_3 = si[2];\n+    VMATree::RegionData call_stack_3(si_3, mtTest);\n+    \/\/ commit with overlap at the region's start\n+    tree.commit_mapping(10, 20, call_stack_3); \/\/ Nodes: 0 - 10 - 40 - 100\n+    expected(tree, 10, si_1, si_3, __LINE__);\n+\n+    \/\/ commit with overlap at the region's end\n+    tree.commit_mapping(30, 20, call_stack_3); \/\/ Nodes: 0 - 10 - 50 - 100\n+    expected(tree, 30, si_1, si_3, __LINE__);\n+    tree.print_on(tty);\n@@ -809,1 +819,1 @@\n-  {\n+  {\/\/ uncommit should not store any call-stack\n@@ -827,0 +837,18 @@\n+  {\/\/ reserve after reserve\n+    Tree tree;\n+    tree.reserve_mapping(0, 100, call_stack_1);\n+    tree.reserve_mapping(10, 10, call_stack_2);\n+    expected(tree,  0, si_1, -1, __LINE__);\n+    expected(tree, 10, si_2, -1, __LINE__);\n+  }\n+  {\/\/ commit without reserve\n+    Tree tree;\n+    tree.commit_mapping(0, 100, call_stack_1);\n+    expected(tree, 0, -1, si_1, __LINE__);\n+  }\n+  {\/\/ reserve after commit\n+    Tree tree;\n+    tree.commit_mapping(0, 100, call_stack_1);\n+    tree.reserve_mapping(0, 100, call_stack_2);\n+    expected(tree, 0, si_2, -1, __LINE__);\n+  }\n","filename":"test\/hotspot\/gtest\/nmt\/test_vmatree.cpp","additions":37,"deletions":9,"binary":false,"changes":46,"status":"modified"}]}