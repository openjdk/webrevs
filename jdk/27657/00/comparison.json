{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,15 +38,1 @@\n-public final class ByteOrder {\n-\n-    private final String name;\n-\n-    private ByteOrder(String name) {\n-        this.name = name;\n-    }\n-\n-    \/**\n-     * Constant denoting big-endian byte order.  In this order, the bytes of a\n-     * multibyte value are ordered from most significant to least significant.\n-     *\/\n-    public static final ByteOrder BIG_ENDIAN\n-        = new ByteOrder(\"BIG_ENDIAN\");\n-\n+public enum ByteOrder  {\n@@ -58,2 +44,7 @@\n-    public static final ByteOrder LITTLE_ENDIAN\n-        = new ByteOrder(\"LITTLE_ENDIAN\");\n+    LITTLE_ENDIAN,\n+    \/**\n+     * Constant denoting big-endian byte order.  In this order, the bytes of a\n+     * multibyte value are ordered from most significant to least significant.\n+     *\/\n+    BIG_ENDIAN;\n+\n@@ -81,14 +72,0 @@\n-\n-    \/**\n-     * Constructs a string describing this object.\n-     *\n-     * <p> This method returns the string\n-     * {@code \"BIG_ENDIAN\"} for {@link #BIG_ENDIAN} and\n-     * {@code \"LITTLE_ENDIAN\"} for {@link #LITTLE_ENDIAN}.\n-     *\n-     * @return  The specified string\n-     *\/\n-    public String toString() {\n-        return name;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/nio\/ByteOrder.java","additions":9,"deletions":32,"binary":false,"changes":41,"status":"modified"}]}