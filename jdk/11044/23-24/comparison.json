{"files":[{"patch":"@@ -199,4 +199,5 @@\n-  if (!is_aligned(hdr_size_in_bytes, BytesPerWord)) {\n-    assert(is_aligned(hdr_size_in_bytes, BytesPerInt), \"must be 32-bit-aligned\");\n-    strw(zr, Address(obj, hdr_size_in_bytes));\n-    hdr_size_in_bytes += BytesPerInt;\n+  int start_offset = hdr_size_in_bytes;\n+  if (!is_aligned(start_offset, BytesPerWord)) {\n+    assert(is_aligned(start_offset, BytesPerInt), \"must be 32-bit-aligned\");\n+    strw(zr, Address(obj, start_offset));\n+    start_offset += BytesPerInt;\n@@ -207,1 +208,1 @@\n-  lea(t1, Address(obj, hdr_size_in_bytes));\n+  lea(t1, Address(obj, start_offset));\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -181,3 +181,4 @@\n-  if (!is_aligned(hdr_size_in_bytes, BytesPerWord)) {\n-    assert(is_aligned(hdr_size_in_bytes, BytesPerInt), \"must be 32-bit-aligned\");\n-    sw(zr, Address(obj, hdr_size_in_bytes));\n+  int start_offset_in_bytes = hdr_size_in_bytes;\n+  if (!is_aligned(start_offset_in_bytes, BytesPerWord)) {\n+    assert(is_aligned(start_offset_in_bytes, BytesPerInt), \"must be 32-bit-aligned\");\n+    sw(zr, Address(obj, start_offset_in_bytes));\n@@ -185,1 +186,1 @@\n-    hdr_size_in_bytes += BytesPerInt;\n+    start_offset_in_bytes += BytesPerInt;\n@@ -189,2 +190,2 @@\n-  if (hdr_size_in_bytes) {\n-    add(obj, obj, hdr_size_in_bytes);\n+  if (start_offset_in_bytes) {\n+    add(obj, obj, start_offset_in_bytes);\n@@ -193,2 +194,2 @@\n-  if (hdr_size_in_bytes) {\n-    sub(obj, obj, hdr_size_in_bytes);\n+  if (start_offset_in_bytes) {\n+    sub(obj, obj, start_offset_in_bytes);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}