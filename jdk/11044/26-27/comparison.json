{"files":[{"patch":"@@ -164,1 +164,1 @@\n-             \"Found badHeapWordValue in post-allocation check\");\n+             \"Found badHeapWordValue in post-allocation check in slot \" SIZE_FORMAT, slot);\n@@ -423,1 +423,1 @@\n-    const size_t hs = arrayOopDesc::base_offset_in_bytes(array_klass->element_type());\n+    const size_t hs = arrayOopDesc::header_size_in_bytes();\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,14 +49,0 @@\n-  \/\/ Header size computation.\n-  \/\/ The header is considered the oop part of this type plus the length.\n-  \/\/ This is not equivalent to sizeof(arrayOopDesc) which should not appear in the code.\n-  static int header_size_in_bytes() {\n-    size_t hs = length_offset_in_bytes() + sizeof(int);\n-#ifdef ASSERT\n-    \/\/ make sure it isn't called before UseCompressedOops is initialized.\n-    static size_t arrayoopdesc_hs = 0;\n-    if (arrayoopdesc_hs == 0) arrayoopdesc_hs = hs;\n-    assert(arrayoopdesc_hs == hs, \"header size can't change\");\n-#endif \/\/ ASSERT\n-    return (int)hs;\n-  }\n-\n@@ -90,0 +76,14 @@\n+  \/\/ Header size computation.\n+  \/\/ The header is considered the oop part of this type plus the length.\n+  \/\/ This is not equivalent to sizeof(arrayOopDesc) which should not appear in the code.\n+  static int header_size_in_bytes() {\n+    size_t hs = length_offset_in_bytes() + sizeof(int);\n+#ifdef ASSERT\n+    \/\/ make sure it isn't called before UseCompressedOops is initialized.\n+    static size_t arrayoopdesc_hs = 0;\n+    if (arrayoopdesc_hs == 0) arrayoopdesc_hs = hs;\n+    assert(arrayoopdesc_hs == hs, \"header size can't change\");\n+#endif \/\/ ASSERT\n+    return (int)hs;\n+  }\n+\n","filename":"src\/hotspot\/share\/oops\/arrayOop.hpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"}]}