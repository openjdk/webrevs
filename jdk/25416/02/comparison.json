{"files":[{"patch":"@@ -560,1 +560,2 @@\n-        ConcurrentLinkedQueue<ReadSubscription> pendingSubscriptions = new ConcurrentLinkedQueue<>();\n+        private final AtomicReference<ReadSubscription> pendingSubscriptions\n+                = new AtomicReference<>();\n@@ -566,22 +567,2 @@\n-\n-            TubeSubscriber sub = FlowTube.asTubeSubscriber(s);\n-            ReadSubscription previous;\n-            while ((previous = pendingSubscriptions.poll()) != null) {\n-                if (debug.on())\n-                    debug.log(\"read publisher: dropping pending subscriber: \"\n-                              + previous.subscriber);\n-                previous.errorRef.compareAndSet(null, errorRef.get());\n-                \/\/ make sure no data will be routed to the old subscriber.\n-                previous.stopReading();\n-                previous.signalOnSubscribe();\n-                if (subscriptionImpl.completed) {\n-                    previous.signalCompletion();\n-                } else {\n-                    previous.subscriber.dropSubscription();\n-                }\n-            }\n-            ReadSubscription target = new ReadSubscription(subscriptionImpl, sub);\n-            pendingSubscriptions.offer(target);\n-\n-            if (debug.on()) debug.log(\"read publisher got new subscriber: \" + s);\n-            subscriptionImpl.signalSubscribe();\n+            if (debug.on()) debug.log(\"Offering new subscriber: %s\", s);\n+            subscriptionImpl.offer(FlowTube.asTubeSubscriber(s));\n@@ -679,1 +660,0 @@\n-                impl.demand.reset();\n@@ -736,8 +716,1 @@\n-                readScheduler.runOrSchedule();\n-                if (readScheduler.isStopped() || completed) {\n-                    \/\/ if already completed or stopped we can handle any\n-                    \/\/ pending connection directly from here.\n-                    if (debug.on())\n-                        debug.log(\"handling pending subscription when completed\");\n-                    handlePending();\n-                }\n+                handlePending();\n@@ -956,2 +929,24 @@\n-            boolean handlePending() {\n-                ReadSubscription pending;\n+            synchronized void offer(TubeSubscriber sub) {\n+                ReadSubscription target = new ReadSubscription(this, sub);\n+                ReadSubscription previous = pendingSubscriptions.getAndSet(target);\n+                if (previous != null) {\n+                    if (debug.on())\n+                        debug.log(\"read publisher: dropping pending subscriber: \"\n+                                + previous.subscriber);\n+                    previous.errorRef.compareAndSet(null, errorRef.get());\n+                    \/\/ make sure no data will be routed to the old subscriber.\n+                    previous.stopReading();\n+                    previous.signalOnSubscribe();\n+                    if (completed) {\n+                        previous.signalCompletion();\n+                    } else {\n+                        previous.subscriber.dropSubscription();\n+                    }\n+                }\n+                if (debug.on()) {\n+                    debug.log(\"read publisher got new subscriber: \" + sub);\n+                }\n+                signalSubscribe();\n+            }\n+\n+            synchronized boolean handlePending() {\n@@ -959,1 +954,3 @@\n-                while ((pending = pendingSubscriptions.poll()) != null) {\n+                ReadSubscription current = subscription;\n+                ReadSubscription pending = pendingSubscriptions.getAndSet(null);\n+                if (pending  != null) {\n@@ -964,3 +961,2 @@\n-                    ReadSubscription current = subscription;\n-                    if (current != null && current != pending && !completed) {\n-                        debug.log(\"dropping pending subscription for current %s\",\n+                    if (current != null && !completed) {\n+                        debug.log(\"dropping subscription for current %s\",\n@@ -968,0 +964,1 @@\n+                        current.stopReading();\n@@ -971,1 +968,1 @@\n-                    subscriptionImpl.demand.reset(); \/\/ subscriber will increase demand if it needs to.\n+                    demand.reset(); \/\/ subscriber will increase demand if it needs to.\n@@ -1338,1 +1335,0 @@\n-\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/SocketTube.java","additions":36,"deletions":40,"binary":false,"changes":76,"status":"modified"}]}