{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import jdk.jfr.internal.util.Utils;\n@@ -62,1 +63,1 @@\n-                if (!JVMSupport.shouldInstrument(clazz.getClassLoader() == null, clazz.getName())) {\n+                if (!JVMSupport.shouldInstrument(Utils.isJDKClass(clazz), clazz.getName())) {\n@@ -73,1 +74,1 @@\n-                boolean bootClassLoader = clazz.getClassLoader() == null;\n+                boolean jdkClass = Utils.isJDKClass(clazz);\n@@ -75,1 +76,1 @@\n-                EventInstrumentation ei = new EventInstrumentation(clazz.getSuperclass(), oldBytes, traceId, bootClassLoader, false);\n+                EventInstrumentation ei = new EventInstrumentation(clazz.getSuperclass(), oldBytes, traceId, jdkClass, false);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVMUpcalls.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-        if (eventClass.getClassLoader() == null) {\n+        if (Utils.isJDKClass(eventClass)) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataRepository.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+import jdk.jfr.internal.util.Utils;\n@@ -88,1 +89,1 @@\n-        return find(eventClass.getClassLoader() == null, eventClass.getName());\n+        return find(Utils.isJDKClass(eventClass), eventClass.getName());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MirrorEvents.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -169,1 +169,3 @@\n-            return PrivateAccess.getInstance().newAnnotation(type, values, annotation.annotationType().getClassLoader() == null);\n+            \/\/ Only annotation classes in the boot class loader can always be resolved.\n+            boolean bootClassLoader = annotationType.getClassLoader() == null;\n+            return PrivateAccess.getInstance().newAnnotation(type, values, bootClassLoader);\n@@ -223,1 +225,1 @@\n-                t = new PlatformEventType(typeName, id, clazz.getClassLoader() == null, true);\n+                t = new PlatformEventType(typeName, id, Utils.isJDKClass(clazz), true);\n@@ -286,1 +288,1 @@\n-        if (clazz.getClassLoader() == null) {\n+        if (Utils.isJDKClass(clazz)) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/TypeLibrary.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import jdk.jfr.internal.util.Utils;\n@@ -42,2 +43,2 @@\n-        if (eventClass.getClassLoader() != null) {\n-            throw new SecurityException(\"Periodic task can only be registered for event classes that are loaded by the bootstrap class loader\");\n+        if (!Utils.isJDKClass(eventClass)) {\n+            throw new SecurityException(\"Periodic task can only be registered for event classes that belongs to the JDK\");\n@@ -45,2 +46,2 @@\n-        if (runnable.getClass().getClassLoader() != null) {\n-            throw new SecurityException(\"Runnable class must be loaded by the bootstrap class loader\");\n+        if (!Utils.isJDKClass(runnable.getClass())) {\n+            throw new SecurityException(\"Runnable class must belong to the JDK\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/periodic\/JDKEventTask.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -438,0 +438,8 @@\n+\n+    public static boolean isJDKClass(Class<?> type) {\n+        return type.getClassLoader() == null;\n+        \/\/ In the future we might want to also do:\n+        \/\/ type.getClassLoader() == ClassLoader.getPlatformClassLoader();\n+        \/\/ but only if it is safe and there is a mechanism to register event\n+        \/\/ classes in other modules besides jdk.jfr and java.base.\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/util\/Utils.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}