{"files":[{"patch":"@@ -1694,0 +1694,1 @@\n+        Type seltypeUnboxed = types.unboxedTypeOrType(seltype);\n@@ -1701,1 +1702,1 @@\n-            boolean booleanSwitch = types.isSameType(types.unboxedTypeOrType(seltype), syms.booleanType);\n+            boolean booleanSwitch = types.isSameType(seltypeUnboxed, syms.booleanType);\n@@ -1705,1 +1706,1 @@\n-            if (seltype.isPrimitive() && !intSwitch) {\n+            if (seltypeUnboxed.isPrimitive() && !intSwitch) {\n@@ -1801,1 +1802,1 @@\n-                                              types.isSameType(types.unboxedTypeOrType(seltype), pattype))) {\n+                                              types.isSameType(seltypeUnboxed, pattype))) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,15 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8348410\n+ * @summary Ensure --enable-preview is required for primitive switch on a boxed expression\n+ * @compile\/fail\/ref=PrimitivePatternsSwitchRequirePreviewBoolean.out -XDrawDiagnostics -XDshould-stop.at=FLOW PrimitivePatternsSwitchRequirePreviewBoolean.java\n+ *\/\n+public class PrimitivePatternsSwitchRequirePreviewBoolean {\n+\n+    public static void testBoolean(Boolean value) {\n+        switch (value) {\n+            case true   -> System.out.println(\"true\");\n+            default     -> System.out.println(\"false\");\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchRequirePreviewBoolean.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+PrimitivePatternsSwitchRequirePreviewBoolean.java:10:16: compiler.err.preview.feature.disabled.plural: (compiler.misc.feature.primitive.patterns)\n+1 error\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchRequirePreviewBoolean.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8348410\n+ * @summary Ensure --enable-preview is required for primitive switch on a boxed expression\n+ * @compile\/fail\/ref=PrimitivePatternsSwitchRequirePreviewDouble.out -XDrawDiagnostics -XDshould-stop.at=FLOW PrimitivePatternsSwitchRequirePreviewDouble.java\n+ *\/\n+public class PrimitivePatternsSwitchRequirePreviewDouble {\n+\n+    public static void testDouble(Long value) {\n+        switch (value) {\n+            case 0L      -> System.out.println(\"zero\");\n+            default      -> System.out.println(\"non-zero\");\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchRequirePreviewDouble.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+PrimitivePatternsSwitchRequirePreviewDouble.java:10:16: compiler.err.preview.feature.disabled.plural: (compiler.misc.feature.primitive.patterns)\n+1 error\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchRequirePreviewDouble.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8348410\n+ * @summary Ensure --enable-preview is required for primitive switch on a boxed expression\n+ * @compile\/fail\/ref=PrimitivePatternsSwitchRequirePreviewFloat.out -XDrawDiagnostics -XDshould-stop.at=FLOW PrimitivePatternsSwitchRequirePreviewFloat.java\n+ *\/\n+public class PrimitivePatternsSwitchRequirePreviewFloat {\n+\n+    public static void testFloat(Float value) {\n+        switch (value) {\n+            case 0f      -> System.out.println(\"zero\");\n+            default      -> System.out.println(\"non-zero\");\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchRequirePreviewFloat.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+PrimitivePatternsSwitchRequirePreviewFloat.java:10:16: compiler.err.preview.feature.disabled.plural: (compiler.misc.feature.primitive.patterns)\n+1 error\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchRequirePreviewFloat.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,15 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8348410\n+ * @summary Ensure --enable-preview is required for primitive switch on a boxed expression\n+ * @compile\/fail\/ref=PrimitivePatternsSwitchRequirePreviewLong.out -XDrawDiagnostics -XDshould-stop.at=FLOW PrimitivePatternsSwitchRequirePreviewLong.java\n+ *\/\n+public class PrimitivePatternsSwitchRequirePreviewLong {\n+\n+    public static void testLong(Long value) {\n+        switch (value) {\n+            case 0L      -> System.out.println(\"zero\");\n+            default      -> System.out.println(\"non-zero\");\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchRequirePreviewLong.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+PrimitivePatternsSwitchRequirePreviewLong.java:10:16: compiler.err.preview.feature.disabled.plural: (compiler.misc.feature.primitive.patterns)\n+1 error\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatternsSwitchRequirePreviewLong.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"}]}