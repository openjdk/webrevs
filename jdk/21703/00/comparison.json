{"files":[{"patch":"@@ -134,3 +134,15 @@\n-  { assert(frame::interpreter_frame_monitor_size() == BasicObjectLock::size(), \"adjust code below\");\n-    int monitor_offset = BytesPerWord * method()->max_locals() +\n-      (2 * BytesPerWord) * (number_of_locks - 1);\n+  {\n+    assert(frame::interpreter_frame_monitor_size() == BasicObjectLock::size(), \"adjust code below\");\n+\n+    const int locals_space = BytesPerWord * method() -> max_locals();\n+    int monitor_offset = locals_space + (2 * BytesPerWord) * (number_of_locks - 1);\n+    bool handled_manually = false;\n+\n+    if (!Immediate::is_simm20(monitor_offset + BytesPerWord) && number_of_locks > 0) {\n+      \/\/ z_lg can only handle displacement upto 20bit signed binary integer\n+      __ load_const(Z_R0_scratch, locals_space);\n+      __ z_algr(OSR_buf, Z_R0_scratch);\n+      monitor_offset -= locals_space;\n+      handled_manually = true;\n+    }\n+\n@@ -150,0 +162,6 @@\n+\n+    if (handled_manually) {\n+      \/\/ Z_R0 is killed by asm_assert_mem8_isnot_zero\n+      __ load_const(Z_R0_scratch, locals_space);\n+      __ z_slgr(OSR_buf, Z_R0_scratch);\n+    }\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRAssembler_s390.cpp","additions":21,"deletions":3,"binary":false,"changes":24,"status":"modified"}]}