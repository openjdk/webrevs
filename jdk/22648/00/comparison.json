{"files":[{"patch":"@@ -39,1 +39,0 @@\n-LDCXX := @BUILD_LDCXX@\n","filename":"make\/autoconf\/buildjdk-spec.gmk.template","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,6 +71,1 @@\n-      LIBCXX=\"$LIBCXX $STATIC_STDCXX_FLAGS\"\n-      JVM_LDFLAGS=\"$JVM_LDFLAGS $STATIC_STDCXX_FLAGS\"\n-      ADLC_LDFLAGS=\"$ADLC_LDFLAGS $STATIC_STDCXX_FLAGS\"\n-      # Ideally, we should test stdc++ for the BUILD toolchain separately. For now\n-      # just use the same setting as for the TARGET toolchain.\n-      OPENJDK_BUILD_JVM_LDFLAGS=\"$OPENJDK_BUILD_JVM_LDFLAGS $STATIC_STDCXX_FLAGS\"\n+      STATIC_STDCXX_LDFLAGS=\"$STATIC_STDCXX_FLAGS\"\n@@ -81,1 +76,6 @@\n-  AC_SUBST(LIBCXX)\n+  AC_SUBST(STATIC_STDCXX_LDFLAGS)\n+\n+  if test \"x$TOOLCHAIN_TYPE\" = xgcc || test \"x$TOOLCHAIN_TYPE\" = xclang; then\n+    STDCXX_LIBS=\"-lstdc++\"\n+  fi\n+  AC_SUBST(STDCXX_LIBS)\n","filename":"make\/autoconf\/lib-std.m4","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -571,4 +571,3 @@\n-# Sometimes a different linker is needed for c++ libs\n-LDCXX := @LDCXX@\n-# The flags for linking libstdc++ linker.\n-LIBCXX := @LIBCXX@\n+# Linker flags needed to statically link std C++ libs, if requested\n+STATIC_STDCXX_LDFLAGS := @STATIC_STDCXX_LDFLAGS@\n+STDCXX_LIBS := @STDCXX_LIBS@\n@@ -581,1 +580,0 @@\n-BUILD_LDCXX := @BUILD_LDCXX@\n","filename":"make\/autoconf\/spec.gmk.template","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -618,1 +618,0 @@\n-    LDCXX=\"$LD\"\n@@ -622,1 +621,0 @@\n-    LDCXX=\"$CXX\"\n@@ -625,2 +623,0 @@\n-  # FIXME: it should be CXXLD, according to standard (cf CXXCPP)\n-  AC_SUBST(LDCXX)\n@@ -853,1 +849,0 @@\n-      BUILD_LDCXX=\"$BUILD_LD\"\n@@ -870,1 +865,0 @@\n-      BUILD_LDCXX=\"$BUILD_CXX\"\n@@ -886,1 +880,0 @@\n-    BUILD_LDCXX=\"$LDCXX\"\n@@ -900,1 +893,0 @@\n-  AC_SUBST(BUILD_LDCXX)\n","filename":"make\/autoconf\/toolchain.m4","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -282,1 +282,1 @@\n-#   DEFAULT_LIBCXX -- if false, do not add LIBCXX to LIBS for C++ compilations\n+#   NO_STATIC_LIBCXX -- if true, do not add flags to statically link std C++ libs\n@@ -337,6 +337,0 @@\n-  ifneq ($$($1_DEFAULT_LIBCXX), false)\n-    ifeq ($$($1_LINK_TYPE), C++)\n-      $1_LIBS += $(LIBCXX)\n-    endif\n-  endif\n-\n@@ -443,0 +437,8 @@\n+  ifeq ($$($1_LINK_TYPE), C++)\n+    $1_LIBS += $$(STDCXX_LIBS)\n+\n+    ifneq ($$($1_NO_STATIC_LIBCXX), true)\n+      $1_LDFLAGS += $$(STATIC_STDCXX_LDFLAGS)\n+    endif\n+  endif\n+\n","filename":"make\/common\/JdkNativeCompilation.gmk","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -311,5 +311,1 @@\n-    ifeq ($$($1_LINK_TYPE), C++)\n-      $$(call SetIfEmpty, $1_LD, $$(BUILD_LDCXX))\n-    else\n-      $$(call SetIfEmpty, $1_LD, $$(BUILD_LD))\n-    endif\n+    $$(call SetIfEmpty, $1_LD, $$(BUILD_LD))\n@@ -328,5 +324,1 @@\n-    ifeq ($$($1_LINK_TYPE), C++)\n-      $$(call SetIfEmpty, $1_LD, $$(LDCXX))\n-    else\n-      $$(call SetIfEmpty, $1_LD, $$(LD))\n-    endif\n+    $$(call SetIfEmpty, $1_LD, $$(LD))\n","filename":"make\/common\/NativeCompilation.gmk","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-        DEFAULT_LIBCXX := false, \\\n+        NO_STATIC_LIBCXX := true, \\\n","filename":"make\/common\/TestFilesCompilation.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -140,0 +140,5 @@\n+ifeq ($(TOOLCHAIN_TYPE), gcc)\n+  BUILD_MICROBENCHMARK_LIBRARIES_LIBS_libPoint := -lm\n+  BUILD_MICROBENCHMARK_LIBRARIES_LIBS_libJNIPoint := -lm\n+endif\n+\n","filename":"make\/test\/BuildMicrobenchmark.gmk","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -74,1 +74,0 @@\n-  BUILD_JDK_JTREG_EXECUTABLES_LIBS_exeNullCallerTest := $(LIBCXX)\n@@ -96,1 +95,1 @@\n-  BUILD_JDK_JTREG_EXECUTABLES_LIBS_exeNullCallerTest := $(LIBCXX)\n+  BUILD_JDK_JTREG_EXECUTABLES_LDFLAGS_exeNullCallerTest := $(STATIC_STDCXX_LDFLAGS)\n","filename":"make\/test\/JtregNativeJdk.gmk","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}