{"files":[{"patch":"@@ -928,44 +928,0 @@\n-size_t ShenandoahGeneration::used() const {\n-  assert(_type == ShenandoahGenerationType::NON_GEN, \"OO sanity\");\n-  return _free_set->global_used();\n-}\n-\n-\n-size_t ShenandoahGeneration::bytes_allocated_since_gc_start() const {\n-  assert(_type == ShenandoahGenerationType::NON_GEN, \"OO sanity\");\n-  assert(!ShenandoahHeap::heap()->mode()->is_generational(), \"NON_GEN implies not generational\");\n-  return _free_set->get_bytes_allocated_since_gc_start();\n-}\n-\n-size_t ShenandoahGeneration::get_affiliated_region_count() const {\n-  assert(_type == ShenandoahGenerationType::NON_GEN, \"OO sanity\");\n-  return _free_set->global_affiliated_regions();\n-}\n-\n-size_t ShenandoahGeneration::get_humongous_waste() const {\n-  assert(_type == ShenandoahGenerationType::NON_GEN, \"OO sanity\");\n-  return _free_set->total_humongous_waste();\n-}\n-\n-size_t ShenandoahGeneration::used_regions() const {\n-  assert(_type == ShenandoahGenerationType::NON_GEN, \"OO sanity\");\n-  return _free_set->global_affiliated_regions();\n-}\n-\n-size_t ShenandoahGeneration::max_capacity() const {\n-  assert(_type == ShenandoahGenerationType::NON_GEN, \"OO sanity\");\n-  size_t total_regions = _free_set->total_global_regions();\n-  return total_regions * ShenandoahHeapRegion::region_size_bytes();\n-}\n-\n-size_t ShenandoahGeneration::free_unaffiliated_regions() const {\n-  assert(_type == ShenandoahGenerationType::NON_GEN, \"OO sanity\");\n-  return _free_set->global_unaffiliated_regions();\n-}\n-\n-size_t ShenandoahGeneration::used_regions_size() const {\n-  assert(_type == ShenandoahGenerationType::NON_GEN, \"OO sanity\");\n-  size_t used_regions = _free_set->global_affiliated_regions();\n-  return used_regions * ShenandoahHeapRegion::region_size_bytes();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":0,"deletions":44,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -128,8 +128,8 @@\n-  virtual size_t bytes_allocated_since_gc_start() const override;\n-  virtual size_t used() const override;\n-  virtual size_t used_regions() const;\n-  virtual size_t used_regions_size() const;\n-  virtual size_t get_humongous_waste() const;\n-  virtual size_t free_unaffiliated_regions() const;\n-  virtual size_t get_affiliated_region_count() const;\n-  virtual size_t max_capacity() const override;\n+  virtual size_t bytes_allocated_since_gc_start() const = 0;\n+  virtual size_t used() const = 0;\n+  virtual size_t used_regions() const = 0;\n+    virtual size_t used_regions_size() const = 0;\n+  virtual size_t get_humongous_waste() const = 0;\n+  virtual size_t free_unaffiliated_regions() const = 0;\n+  virtual size_t get_affiliated_region_count() const = 0;\n+  virtual size_t max_capacity() const = 0;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -40,6 +40,0 @@\n-#ifdef ASSERT\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  bool is_generational = heap->mode()->is_generational();\n-  assert((is_generational && (type() == ShenandoahGenerationType::GLOBAL)) ||\n-         (!is_generational && (type() == ShenandoahGenerationType::NON_GEN)), \"OO sanity\");\n-#endif\n@@ -51,6 +45,0 @@\n-#ifdef ASSERT\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  bool is_generational = heap->mode()->is_generational();\n-  assert((is_generational && (type() == ShenandoahGenerationType::GLOBAL)) ||\n-         (!is_generational && (type() == ShenandoahGenerationType::NON_GEN)), \"OO sanity\");\n-#endif\n@@ -61,6 +49,0 @@\n-#ifdef ASSERT\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  bool is_generational = heap->mode()->is_generational();\n-  assert((is_generational && (type() == ShenandoahGenerationType::GLOBAL)) ||\n-         (!is_generational && (type() == ShenandoahGenerationType::NON_GEN)), \"OO sanity\");\n-#endif\n@@ -71,6 +53,0 @@\n-#ifdef ASSERT\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  bool is_generational = heap->mode()->is_generational();\n-  assert((is_generational && (type() == ShenandoahGenerationType::GLOBAL)) ||\n-         (!is_generational && (type() == ShenandoahGenerationType::NON_GEN)), \"OO sanity\");\n-#endif\n@@ -81,6 +57,0 @@\n-#ifdef ASSERT\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  bool is_generational = heap->mode()->is_generational();\n-  assert((is_generational && (type() == ShenandoahGenerationType::GLOBAL)) ||\n-         (!is_generational && (type() == ShenandoahGenerationType::NON_GEN)), \"OO sanity\");\n-#endif\n@@ -91,6 +61,0 @@\n-#ifdef ASSERT\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  bool is_generational = heap->mode()->is_generational();\n-  assert((is_generational && (type() == ShenandoahGenerationType::GLOBAL)) ||\n-         (!is_generational && (type() == ShenandoahGenerationType::NON_GEN)), \"OO sanity\");\n-#endif\n@@ -102,6 +66,0 @@\n-#ifdef ASSERT\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  bool is_generational = heap->mode()->is_generational();\n-  assert((is_generational && (type() == ShenandoahGenerationType::GLOBAL)) ||\n-         (!is_generational && (type() == ShenandoahGenerationType::NON_GEN)), \"OO sanity\");\n-#endif\n@@ -112,6 +70,0 @@\n-#ifdef ASSERT\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  bool is_generational = heap->mode()->is_generational();\n-  assert((is_generational && (type() == ShenandoahGenerationType::GLOBAL)) ||\n-         (!is_generational && (type() == ShenandoahGenerationType::NON_GEN)), \"OO sanity\");\n-#endif\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGlobalGeneration.cpp","additions":0,"deletions":48,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -36,1 +36,9 @@\n-  : ShenandoahGeneration(generational ? GLOBAL : NON_GEN, max_queues, max_capacity) { }\n+  : ShenandoahGeneration(generational ? GLOBAL : NON_GEN, max_queues, max_capacity) {\n+#ifdef ASSERT\n+    ShenandoahHeap* heap = ShenandoahHeap::heap();\n+    bool is_generational = heap->mode()->is_generational();\n+    assert(is_generational == generational, \"sanity\");\n+    assert((is_generational && (type() == ShenandoahGenerationType::GLOBAL)) ||\n+           (!is_generational && (type() == ShenandoahGenerationType::NON_GEN)), \"OO sanity\");\n+#endif\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGlobalGeneration.hpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -216,0 +216,1 @@\n+  assert(type() == ShenandoahGenerationType::OLD, \"OO sanity\");\n@@ -835,1 +836,0 @@\n-  assert(type() == ShenandoahGenerationType::OLD, \"OO sanity\");\n@@ -840,1 +840,0 @@\n-  assert(type() == ShenandoahGenerationType::OLD, \"OO sanity\");\n@@ -846,1 +845,0 @@\n-  assert(type() == ShenandoahGenerationType::OLD, \"OO sanity\");\n@@ -855,1 +853,0 @@\n-  assert(type() == ShenandoahGenerationType::OLD, \"OO sanity\");\n@@ -860,1 +857,0 @@\n-  assert(type() == ShenandoahGenerationType::OLD, \"OO sanity\");\n@@ -866,1 +862,0 @@\n-  assert(type() == ShenandoahGenerationType::OLD, \"OO sanity\");\n@@ -872,1 +867,0 @@\n-  assert(type() == ShenandoahGenerationType::OLD, \"OO sanity\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+  assert(type() == ShenandoahGenerationType::YOUNG, \"OO sanity\");\n@@ -99,1 +100,0 @@\n-  assert(type() == ShenandoahGenerationType::YOUNG, \"OO sanity\");\n@@ -104,1 +104,0 @@\n-  assert(type() == ShenandoahGenerationType::YOUNG, \"OO sanity\");\n@@ -110,1 +109,0 @@\n-  assert(type() == ShenandoahGenerationType::YOUNG, \"OO sanity\");\n@@ -115,1 +113,0 @@\n-  assert(type() == ShenandoahGenerationType::YOUNG, \"OO sanity\");\n@@ -120,1 +117,0 @@\n-  assert(type() == ShenandoahGenerationType::YOUNG, \"OO sanity\");\n@@ -125,1 +121,0 @@\n-  assert(type() == ShenandoahGenerationType::YOUNG, \"OO sanity\");\n@@ -131,1 +126,0 @@\n-  assert(type() == ShenandoahGenerationType::YOUNG, \"OO sanity\");\n@@ -137,1 +131,0 @@\n-  assert(type() == ShenandoahGenerationType::YOUNG, \"OO sanity\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahYoungGeneration.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"}]}