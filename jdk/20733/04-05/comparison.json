{"files":[{"patch":"@@ -284,3 +284,3 @@\n-  LIBFONTMANAGER_EXTRA_SRC =\n-  LIBFONTMANAGER_LIBS += $(HARFBUZZ_LIBS)\n-  LIBFONTMANAGER_CFLAGS += $(HARFBUZZ_CFLAGS)\n+   LIBFONTMANAGER_EXTRA_SRC =\n+   LIBFONTMANAGER_LIBS += $(HARFBUZZ_LIBS)\n+   LIBFONTMANAGER_CFLAGS += $(HARFBUZZ_CFLAGS)\n@@ -288,1 +288,1 @@\n-  LIBFONTMANAGER_EXTRA_SRC = libharfbuzz\n+   LIBFONTMANAGER_EXTRA_SRC = libharfbuzz\n@@ -290,2 +290,2 @@\n-  ifeq ($(call isTargetOs, windows), false)\n-    HARFBUZZ_CFLAGS += -DGETPAGESIZE -DHAVE_MPROTECT -DHAVE_PTHREAD \\\n+   ifeq ($(call isTargetOs, windows), false)\n+     HARFBUZZ_CFLAGS += -DGETPAGESIZE -DHAVE_MPROTECT -DHAVE_PTHREAD \\\n@@ -294,9 +294,9 @@\n-  endif\n-  ifeq ($(call isTargetOs, linux macosx), true)\n-    HARFBUZZ_CFLAGS += -DHAVE_INTEL_ATOMIC_PRIMITIVES -DHB_NO_VISIBILITY\n-  endif\n-\n-  # hb-ft.cc is not presently needed, and requires freetype 2.4.2 or later.\n-  # hb-subset and hb-style APIs are not needed, excluded to cut on compilation\n-  # time.\n-  LIBFONTMANAGER_EXCLUDE_FILES += gsubgpos-context.cc hb-ft.cc hb-style.cc \\\n+   endif\n+   ifeq ($(call isTargetOs, linux macosx), true)\n+     HARFBUZZ_CFLAGS += -DHAVE_INTEL_ATOMIC_PRIMITIVES -DHB_NO_VISIBILITY\n+   endif\n+\n+   # hb-ft.cc is not presently needed, and requires freetype 2.4.2 or later.\n+   # hb-subset and hb-style APIs are not needed, excluded to cut on compilation\n+   # time.\n+   LIBFONTMANAGER_EXCLUDE_FILES += gsubgpos-context.cc hb-ft.cc hb-style.cc \\\n@@ -307,18 +307,18 @@\n-  # list of disabled warnings and the compilers for which it was specifically\n-  # added.\n-  # array-bounds         -> GCC 12 on Alpine Linux\n-  # parentheses          -> GCC 6\n-  # range-loop-analysis  -> clang on Xcode12\n-\n-  HARFBUZZ_DISABLED_WARNINGS_gcc := missing-field-initializers \\\n-      strict-aliasing unused-result array-bounds parentheses \\\n-      unused-variable\n-  # noexcept-type required for GCC 7 builds. Not required for GCC 8+.\n-  # expansion-to-defined required for GCC 9 builds. Not required for GCC 10+.\n-  # maybe-uninitialized required for GCC 8 builds. Not required for GCC 9+.\n-  # calloc-transposed-args required for GCC 14 builds. (fixed upstream in\n-  #  Harfbuzz 032c931e1c0cfb20f18e5acb8ba005775242bd92)\n-  HARFBUZZ_DISABLED_WARNINGS_CXX_gcc := class-memaccess noexcept-type \\\n-      expansion-to-defined dangling-reference maybe-uninitialized \\\n-      calloc-transposed-args\n-  HARFBUZZ_DISABLED_WARNINGS_clang := missing-field-initializers \\\n+   # list of disabled warnings and the compilers for which it was specifically\n+   # added.\n+   # array-bounds         -> GCC 12 on Alpine Linux\n+   # parentheses          -> GCC 6\n+   # range-loop-analysis  -> clang on Xcode12\n+\n+   HARFBUZZ_DISABLED_WARNINGS_gcc := missing-field-initializers \\\n+       strict-aliasing unused-result array-bounds parentheses \\\n+       unused-variable\n+   # noexcept-type required for GCC 7 builds. Not required for GCC 8+.\n+   # expansion-to-defined required for GCC 9 builds. Not required for GCC 10+.\n+   # maybe-uninitialized required for GCC 8 builds. Not required for GCC 9+.\n+   # calloc-transposed-args required for GCC 14 builds. (fixed upstream in\n+   #  Harfbuzz 032c931e1c0cfb20f18e5acb8ba005775242bd92)\n+   HARFBUZZ_DISABLED_WARNINGS_CXX_gcc := class-memaccess noexcept-type \\\n+       expansion-to-defined dangling-reference maybe-uninitialized \\\n+       calloc-transposed-args\n+   HARFBUZZ_DISABLED_WARNINGS_clang := missing-field-initializers \\\n@@ -326,1 +326,1 @@\n-  HARFBUZZ_DISABLED_WARNINGS_microsoft := 4267 4244\n+   HARFBUZZ_DISABLED_WARNINGS_microsoft := 4267 4244\n@@ -328,1 +328,1 @@\n-  LIBFONTMANAGER_CFLAGS += $(HARFBUZZ_CFLAGS)\n+   LIBFONTMANAGER_CFLAGS += $(HARFBUZZ_CFLAGS)\n","filename":"make\/modules\/java.desktop\/lib\/ClientLibraries.gmk","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"}]}