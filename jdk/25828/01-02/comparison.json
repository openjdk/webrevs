{"files":[{"patch":"@@ -1718,1 +1718,1 @@\n-\/\/ Figure out which register class each belongs in: rc_int, rc_float, rc_vs or\n+\/\/ Figure out which register class each belongs in: rc_int, rc_float, rc_vec or\n@@ -1720,1 +1720,1 @@\n-enum RC { rc_bad, rc_int, rc_float, rc_vs, rc_stack };\n+enum RC { rc_bad, rc_int, rc_float, rc_vec, rc_stack };\n@@ -1739,1 +1739,1 @@\n-  if (reg < ConcreteRegisterImpl::max_vr) return rc_vs;\n+  if (reg < ConcreteRegisterImpl::max_vr) return rc_vec;\n@@ -1816,2 +1816,2 @@\n-    else if (src_lo_rc == rc_vs && dst_lo_rc == rc_stack) {\n-      VectorRegister Rsrc = as_VectorRegister(Matcher::_regEncode[src_lo]);\n+    else if (src_lo_rc == rc_vec && dst_lo_rc == rc_stack) {\n+      VectorSRegister Rsrc = as_VectorRegister(Matcher::_regEncode[src_lo]).to_vsr();\n@@ -1822,1 +1822,1 @@\n-            __ stxv(Rsrc.to_vsr(), dst_offset, R1_SP); \/\/ matches storeV16_Power9\n+            __ stxv(Rsrc, dst_offset, R1_SP); \/\/ matches storeV16_Power9\n@@ -1830,1 +1830,1 @@\n-            __ stxvx(Rsrc.to_vsr(), R0); \/\/ matches storeV16_Power9 (regarding element ordering)\n+            __ stxvx(Rsrc, R0); \/\/ matches storeV16_Power9 (regarding element ordering)\n@@ -1837,1 +1837,1 @@\n-          __ stxvd2x(Rsrc.to_vsr(), R0); \/\/ matches storeV16_Power8\n+          __ stxvd2x(Rsrc, R0); \/\/ matches storeV16_Power8\n@@ -1843,2 +1843,2 @@\n-    else if (src_lo_rc == rc_stack && dst_lo_rc == rc_vs) {\n-      VectorRegister Rdst = as_VectorRegister(Matcher::_regEncode[dst_lo]);\n+    else if (src_lo_rc == rc_stack && dst_lo_rc == rc_vec) {\n+      VectorSRegister Rdst = as_VectorRegister(Matcher::_regEncode[dst_lo]).to_vsr();\n@@ -1849,1 +1849,1 @@\n-            __ lxv(Rdst.to_vsr(), src_offset, R1_SP);\n+            __ lxv(Rdst, src_offset, R1_SP);\n@@ -1855,1 +1855,1 @@\n-            __ lxvx(Rdst.to_vsr(), R0);\n+            __ lxvx(Rdst, R0);\n@@ -1862,1 +1862,1 @@\n-          __ lxvd2x(Rdst.to_vsr(), R0);\n+          __ lxvd2x(Rdst, R0);\n@@ -1868,3 +1868,3 @@\n-    else if (src_lo_rc == rc_vs && dst_lo_rc == rc_vs) {\n-      VectorRegister Rsrc = as_VectorRegister(Matcher::_regEncode[src_lo]);\n-      VectorRegister Rdst = as_VectorRegister(Matcher::_regEncode[dst_lo]);\n+    else if (src_lo_rc == rc_vec && dst_lo_rc == rc_vec) {\n+      VectorSRegister Rsrc = as_VectorRegister(Matcher::_regEncode[src_lo]).to_vsr();\n+      VectorSRegister Rdst = as_VectorRegister(Matcher::_regEncode[dst_lo]).to_vsr();\n@@ -1872,1 +1872,1 @@\n-        __ xxlor(Rdst.to_vsr(), Rsrc.to_vsr(), Rsrc.to_vsr());\n+        __ xxlor(Rdst, Rsrc, Rsrc);\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"}]}